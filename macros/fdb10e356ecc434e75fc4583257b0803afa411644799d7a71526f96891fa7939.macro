Attribute VB_Name = "BD0SEAP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

































































Attribute VB_Name = "Planilha_CUSTEIO"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
        flagBusca = 0
        Application.EnableEvents = True
End Sub

Private Sub Auto_Open()
        On Error Resume Next
        AddIns("Ferramentas de an|fffd|lise").Installed = False
        ocultaBarras
        PintaTitulo
        xl0Menu.Activate
        AddIns("Ferramentas de an|fffd|lise").Installed = True
        flagBusca = 0
        On Error GoTo 0
        
       ' geraBarBotoes
End Sub

Private Sub Workbook_Open()
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    'Registrar a Dll de Empreendimento, for|fffd|ar
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    On Error Resume Next
    PintaTitulo
    xl0Menu.Activate
    protPlan.DesprotegePlanilha
    Range("I20").value = busca_data  'Busca a data do empreendimento
    Range("I21").Select              'Seleciona a c|fffd|lula da data da vers|fffd|o da planilha
    Selection.Copy                   'Copia o formato
    Range("I20").Select              'Seleciona a c|fffd|lula com a data do empreendimento
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 55
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    
        
    
    ion.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("B2").Select
    protPlan.ProtegePlanilha
    
    
    
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    On Error GoTo Erro
     
Fim:
  Set protPlan = Nothing
  Exit Sub
    
Erro:
    MsgBox "N|fffd|o foi poss|fffd|vel criar o Novo Formul|fffd|rio de Empreendimento, Entrar em contato com a |fffd|rea respons|fffd|vel", vbCritical, "Erro!"
    Resume Fim
     
End Sub

Attribute VB_Name = "bd1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd10Geodesica"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
        Me.Visible = xlSheetVisible
        Me.Select
End Sub

Private Sub Worksheet_Deactivate()
'        Me.Visible = xlSheetVeryHidden
End Sub



Attribute VB_Name = "bd1Orca"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


































































Attribute VB_Name = "bd1Orca1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "bd2Insu"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True










































































Attribute VB_Name = "bd2Insu1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd3Prso"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True






































































Attribute VB_Name = "bd3Prso1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd4Benef"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True










































































Attribute VB_Name = "bd4Plan"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True











































































Attribute VB_Name = "bd4Plan1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd5Coob"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True








































































Attribute VB_Name = "bd5Garan"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True








































































Attribute VB_Name = "bd5Trcu"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True










































































Attribute VB_Name = "bd5Trcu1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd6Cobe"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True









































































Attribute VB_Name = "bd6Cobe1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd6S400"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "bd7Irri"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


































































Attribute VB_Name = "bd7Irri1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd7Orca"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

























































Attribute VB_Name = "bd8Custeio"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True









































































Attribute VB_Name = "bd8Outr"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True










































































Attribute VB_Name = "bd8Outr1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bd9Preco"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True











































































Attribute VB_Name = "bd9Preco1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "bdRel1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True








































































Attribute VB_Name = "bdRel2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True











































































Attribute VB_Name = "clsProgressBar"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'   API wrappers for calling from 16/32 bit VBA
'   portions Copyright David Wiseman 1996
' Type definitions
Private Type RECT16   '8 Bytes
    Left As Integer
    Top As Integer
    Right As Integer
    Bottom As Integer
End Type

Private Type RECT32   '16 Bytes
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type

Private Type SIZE16   '4 Bytes
    cx As Integer
    cy As Integer
End Type

Private Type SIZE32   '8 Bytes
    cx As Long
    cy As Long
End Type

Private Type LOGFONT16   ' 50 Bytes
    lfHeight As Integer
    lfWidth As Integer
    lfEscapement As Integer
    lfOrientation As Integer
    lfWeight As Integer
    lfItalic As String * 1
    lfUnderline As String * 1
    lfStrikeOut As String * 1
    lfCharSet As String * 1
    lfOutPrecision As String * 1
    lfClipPrecision As String * 1
    lfQuality As String * 1
    lfPitchAndFamily As String * 1
    lfFaceName As String * 32
End Type

Private Type LOGFONT32
    lfHeight As Long
    lfWidth As Long
    lfEscapement As Long
    lfOrientation As Long
    lfWeight As Long
    lfItalic As String * 1
    lfUnderline As String * 1
    lfStrikeOut As String * 1
    lfCharSet As String * 1
    lfOutPrecision As String * 1
    lfClipPrecision As String * 1
    lfQuality As String * 1
    lfPitchAndFamily As String * 1
    lfFaceName As String * 32
End Type

' API declarations
Private Declare Function GetActiveWindow16 Lib "USER" Alias "GetActiveWindow" () As Integer
Private Declare Function GetActiveWindow32 Lib "USER32" Alias "GetActiveWindow" () As Long

Private Declare Function SystemParametersInfo16 Lib "USER" Alias "SystemParametersInfo" (ByVal uAction As Integer, ByVal uParam As Integer, lpvParam As Any, ByVal fuWinIni As Integer) As Integer
Private Declare Function SystemParametersInfo32 Lib "USER32" Alias "SystemParametersInfoA" (ByVal uAction As Long, ByVal uParam As Long, lpvParam As Any, ByVal fuWinIni As Long) As Long

Private Declare Function GetSysColor16 Lib "USER" Alias "GetSysColor" (ByVal nIndex As Integer) As Long
Private Declare Function GetSysColor32 Lib "USER32" Alias "GetSysColor" (ByVal nIndex As Long) As Long

Private Declare Sub GetClientRect16 Lib "USER" Alias "GetClientRect" (ByVal hWnd As Integer, lpRect As RECT16)
Private Declare Function GetClientRect32 Lib "USER32" Alias "GetClientRect" (ByVal hWnd As Long, lpRect As RECT32) As Long

Private Declare Function GetDC16 Lib "USER" Alias "GetDC" (ByVal hWnd As Integer) As Integer
Private Declare Function GetDC32 Lib "USER32" Alias "GetDC" (ByVal hWnd As Long) As Long

Private Declare Function SaveDC16 Lib "GDI" Alias "SaveDC" (ByVal hdc As Integer) As Integer
Private Declare Function SaveDC32 Lib "GDI32" Alias "SaveDC" (ByVal hdc As Long) As Long

Private Declare Function RestoreDC16 Lib "GDI" Alias "RestoreDC" (ByVal hdc As Integer, ByVal nSavedDC As Integer) As Integer
Private Declare Function RestoreDC32 Lib "GDI32" Alias "RestoreDC" (ByVal hdc As Long, ByVal nSavedDC As Long) As Long

Private Declare Function ReleaseDC16 Lib "USER" Alias "ReleaseDC" (ByVal hWnd As Integer, ByVal hdc As Integer) As Integer
Private Declare Function ReleaseDC32 Lib "USER32" Alias "ReleaseDC" (ByVal hWnd As Long, ByVal hdc As Long) As Long

Private Declare Sub InvalidateRect16 Lib "USER" Alias "InvalidateRect" (ByVal hWnd As Integer, lpRect As RECT16, ByVal bErase As Integer)
Private Declare Function InvalidateRect32 Lib "USER32" Alias "InvalidateRect" (ByVal hWnd As Long, lpRect As RECT32, ByVal bErase As Long) As Long

Private Declare Function GetWindow16 Lib "USER" Alias "GetWindow" (ByVal hWnd As Integer, ByVal wCmd As Integer) As Integer
Private Declare Function GetWindow32 Lib "USER32" Alias "GetWindow" (ByVal hWnd As Long, ByVal wCmd As Long) As Long

Private Declare Function GetClassName16 Lib "USER" Alias "GetClassName" (ByVal hWnd As Integer, ByVal className As String, ByVal maxCount As Integer) As Integer
Private Declare Function GetClassName32 Lib "USER32" Alias "GetClassNameA" (ByVal hWnd As Long, ByVal lpClassName As String, ByVal nmaxCount As Long) As Long

Private Declare Function CreateFontIndirect16 Lib "GDI" Alias "CreateFontIndirect" (lpLogFont As LOGFONT16) As Integer
Private Declare Function CreateFontIndirect32 Lib "GDI32" Alias "CreateFontIndirectA" (lpLogFont As LOGFONT32) As Long

Private Declare Function SelectObject16 Lib "GDI" Alias "SelectObject" (ByVal hdc As Integer, ByVal hObject As Integer) As Integer
Private Declare Function SelectObject32 Lib "GDI32" Alias "SelectObject" (ByVal hdc As Long, ByVal hObject As Long) As Long

Private Declare Function DeleteObject16 Lib "GDI" Alias "DeleteObject" (ByVal hObject As Integer) As Integer
Private Declare Function DeleteObject32 Lib "GDI32" Alias "DeleteObject" (ByVal hObject As Long) As Long

Private Declare Function SetBkColor16 Lib "GDI" Alias "SetBkColor" (ByVal hdc As Integer, ByVal RGB As Long) As Long
Private Declare Function SetBkColor32 Lib "GDI32" Alias "SetBkColor" (ByVal hdc As Long, ByVal crColor As Long) As Long

Private Declare Function SetTextColor16 Lib "GDI" Alias "SetTextColor" (ByVal hdc As Integer, ByVal RGB As Long) As Long
Private Declare Function SetTextColor32 Lib "GDI32" Alias "SetTextColor" (ByVal hdc As Long, ByVal crColor As Long) As Long

Private Declare Function GetTextExtentPoint16 Lib "GDI" Alias "GetTextExtentPoint" (ByVal hdc As Integer, ByVal text As String, ByVal lenText As Integer, lpSize As SIZE16) As Integer
Private Declare Function GetTextExtentPoint32 Lib "GDI32" Alias "GetTextExtentPointA" (ByVal hdc As Long, ByVal lpszString As String, ByVal cbString As Long, lpSize As SIZE32) As Long

Private Declare Function CreateSolidBrush16 Lib "GDI" Alias "CreateSolidBrush" (ByVal RGB As Long) As Integer
Private Declare Function CreateSolidBrush32 Lib "GDI32" Alias "CreateSolidBrush" (ByVal crColor As Long) As Long

Private Declare Function PatBlt16 Lib "GDI" Alias "PatBlt" (ByVal hdc As Integer, ByVal X As Integer, ByVal Y As Integer, ByVal nWidth As Integer, ByVal nHeight As Integer, ByVal deROP As Long) As Integer
Private Declare Function PatBlt32 Lib "GDI32" Alias "PatBlt" (ByVal hdc As Long, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal dwRop As Long) As Long

Private Declare Function FrameRect16 Lib "USER" Alias "FrameRect" (ByVal hdc As Integer, lpRect As RECT16, ByVal hBrush As Integer) As Integer
Private Declare Function FrameRect32 Lib "USER32" Alias "FrameRect" (ByVal hdc As Long, lpRect As RECT32, ByVal hBrush As Long) As Long

Private Declare Function DrawText16 Lib "USER" Alias "DrawText" (ByVal hdc As Integer, ByVal text As String, ByVal nCount As Integer, lpRect As RECT16, ByVal wFormat As Integer) As Integer
Private Declare Function DrawText32 Lib "USER32" Alias "DrawTextA" (ByVal hdc As Long, ByVal lpStr As String, ByVal nCount As Long, lpRect As RECT32, ByVal wFormat As Long) As Long

' API Constants
Private Const GW_CHILD As Integer = 5
Private Const GW_HWNDFIRST As Integer = 0
Private Const GW_HWNDNEXT As Integer = 2

Private Const DT_SINGLELINE As Integer = &H20
Private Const DT_CENTER As Integer = &H1
Private Const DT_VCENTER As Integer = &H4
Private Const DT_NOPREFIX As Integer = &H800
Private Const DT_NOCLIP As Integer = &H100

Private Const SPI_GETICONTITLELOGFONT As Integer = 31

Private Const PATCOPY As Long = &HF00021

Private Const COLOR_ACTIVECAPTION As Integer = 2
Private Const COLOR_BTNTEXT As Integer = 18
Private Const COLOR_BTNHIGHLIGHT As Integer = 20
Private Const COLOR_BTNSHADOW As Integer = 16
Private Const COLOR_BTNFACE As Integer = 15

Private m_hDeviceContext As Long                 ' handle of the Device Context

Private m_UserStatusBar As Boolean          ' store users preference for status bar view

Private m_numberOfLEDs As Long              ' number of LEDs in the bar
Private m_preMessage As String              ' message before the LED Bar
Private m_postMessage As String             ' message after the LED Bar
Private m_percentComplete As Long           ' the current LED Bar % alight

Private m_hWndXLStatus As Long              ' handle for Excel Status Bar window
Private m_hDCXLStatus As Long               ' handle to device context in that window

Private m_LEDBarShowing As Boolean          ' set when the LED Bar is displayed
Private m_LEDsAlight As Long                ' number of LED blocks displayed now
Private XLBar As RECT32                     ' the bounding rectangle for the Excel status bar window
Private XLBarSize As SIZE32                 ' the extent of the Excel status bar window
Private StatusFont As LOGFONT32             ' structure for font info from system
   
Private ACTIVECAPTION As Long               ' colours from the system
Private BTNTEXT As Long
Private BTNHIGHLIGHT As Long
Private BTNSHADOW As Long
Private BTNFACE As Long

Private RGB_LEDBarBG As Long                ' colours of various parts of LED Bar and text
Private RGB_LEDBarFG As Long
Private RGB_StatusBG As Long
Private RGB_preMessageBG As Long
Private RGB_preMessageFG As Long
Private RGB_postMessageBG As Long
Private RGB_postMessageFG As Long
Private RGB_highlightTopLeft As Long
Private RGB_highlightBottomRight As Long

Private LEDBlock As RECT32                  ' the bounding rectangle for a single LED
Private LEDBlockSize As SIZE32              ' the extent of a single LED block
Private LEDSpace As Long                    ' the space between succesive LEDs
   
Private LEDBar As RECT32                    ' the bounding rectangle for the LED indicator strip
Private LEDBarSize As SIZE32                ' the extent of the LED indicator strip

Private preMessageBox As RECT32             ' bounds of the Message before the LED Bar
Private postMessageBox As RECT32            ' bounds of the Message after the LED Bar

' Initialise what needs it
Private Property Let OpenDC(hWnd As Long)
    m_hDeviceContext = GetDC(hWnd)              ' Get a device context to draw into
    Call SaveDC(m_hDeviceContext)               ' Save state for later
End Property

' Tidy up when we are done
Private Property Let CloseDC(hWnd As Long)
    Call RestoreDC(m_hDeviceContext, -1)        ' Restore the DC state to where we found it
    Call ReleaseDC(hWnd, m_hDeviceContext)      ' Release this DC handle
End Property

' Draw some text to the device context
Private Sub DrawWindowText(cFG As Long, cBG As Long, Font As LOGFONT32, text As String, rC As RECT32)
  Dim hFont As Long
  Dim textSize As SIZE32
  Dim textDrawFlags As Long
  
    hFont = CreateFontIndirect(Font)                    ' Create a font and get a handle on it
    hFont = SelectObject(m_hDeviceContext, hFont)       ' Select new font into the DC
    Call SetBkColor(m_hDeviceContext, cBG)              ' Background colour
    Call SetTextColor(m_hDeviceContext, cFG)            ' Foreground colour

                                                        ' Make room for the text
    Call GetTextExtentPoint(m_hDeviceContext, text, Len(text), textSize)
    rC.Right = rC.Left + textSize.cx
                                                ' Flags for normal text draw mode
    textDrawFlags = DT_SINGLELINE Or DT_CENTER Or _
                    DT_VCENTER Or DT_NOPREFIX Or DT_NOCLIP
    Call DrawText(m_hDeviceContext, text, -1, rC, textDrawFlags)      ' Draw the text

    hFont = SelectObject(m_hDeviceContext, hFont)            ' Select original font into the DC
    Call DeleteObject(hFont)                    ' Delete new font
End Sub

' Clear a rectangle
Private Sub RectangleClear(rC As RECT32, RGB As Long)
  Dim hBrush As Long
  Dim rS As SIZE32
    rS = GetSize(rC)                            ' size of rectangle
    hBrush = CreateSolidBrush(RGB)              ' Create a solid brush to paint rectangle
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select new brush into the DC
    Call PatBlt(m_hDeviceContext, rC.Left, rC.Top, rS.cx, rS.cy, PATCOPY)    ' Do the clear
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select original brush into the DC
    Call DeleteObject(hBrush)                   ' Delete new brush
End Sub

' Frame a rectangle in one colour
Private Sub RectangleFrame(rC As RECT32, RGB As Long)
  Dim hBrush As Long
    hBrush = CreateSolidBrush(RGB)              ' Create a solid brush to paint frame
    Call FrameRect(m_hDeviceContext, rC, hBrush)             ' Do the frame
End Sub

' Frame a rectangle in two colours
Private Sub RectangleHighlight(rC As RECT32, TopLeftRGB As Long, BottomRightRGB As Long)
    Call RectanglePaintTopLeft(rC, TopLeftRGB)
    Call RectanglePaintBottomRight(rC, BottomRightRGB)
End Sub

' Highlight Top and Left sides of a rectangle
Private Sub RectanglePaintTopLeft(rC As RECT32, RGB As Long)
  Dim hBrush As Long
  Dim rS As SIZE32
    rS = GetSize(rC)                            ' size of rectangle
    hBrush = CreateSolidBrush(RGB)              ' Create a solid brush to paint sides
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select new brush into the DC
    Call PatBlt(m_hDeviceContext, rC.Left, rC.Top, 1, rS.cy, PATCOPY)    ' Do the paint up left side
    Call PatBlt(m_hDeviceContext, rC.Left, rC.Top, rS.cx, 1, PATCOPY)    ' Do the paint across top
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select original brush into the DC
    Call DeleteObject(hBrush)                   ' Delete new brush
End Sub

' Highlight Bottom and Right sides of a rectangle
Private Sub RectanglePaintBottomRight(rC As RECT32, RGB As Long)
  Dim hBrush As Long
  Dim rS As SIZE32
    rS = GetSize(rC)                            ' size of rectangle
    hBrush = CreateSolidBrush(RGB)              ' Create a solid brush to paint sides
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select new brush into the DC
    Call PatBlt(m_hDeviceContext, rC.Right, rC.Top, 1, rS.cy + 1, PATCOPY)  ' Do the paint up right side
    Call PatBlt(m_hDeviceContext, rC.Left, rC.Bottom, rS.cx + 1, 1, PATCOPY) ' Do the paint across bottom
    hBrush = SelectObject(m_hDeviceContext, hBrush)          ' Select original brush into the DC
    Call DeleteObject(hBrush)                   ' Delete new brush
End Sub

Private Function GetActiveWindow() As Long
    If Engine32() Then
        GetActiveWindow = GetActiveWindow32()
    Else
        GetActiveWindow = GetActiveWindow16()
    End If
End Function

Private Function IconTitleFont() As LOGFONT32
  Dim fontInfo32 As LOGFONT32
  Dim fontInfo16 As LOGFONT16
    If Engine32() Then
        Call SystemParametersInfo32(SPI_GETICONTITLELOGFONT, Len(fontInfo32), fontInfo32, 0)
    Else
        Call SystemParametersInfo16(SPI_GETICONTITLELOGFONT, Len(fontInfo16), fontInfo16, 0)
        fontInfo32 = ConvertToFontInfo32(fontInfo16)
    End If
    
    IconTitleFont = fontInfo32
    
End Function

Private Function GetSysColor(nIndex As Long) As Long
    If Engine32() Then
        GetSysColor = GetSysColor32(nIndex)
    Else
        GetSysColor = GetSysColor16(nIndex)
    End If
End Function

Private Function ClientRectangle(hWnd As Long) As RECT32
  Dim aRect32 As RECT32
    If Engine32() Then
        Dim stat32 As Long
        stat32 = GetClientRect32(hWnd, aRect32)
    Else
        Dim aRect16 As RECT16
        Call GetClientRect16(hWnd, aRect16)
        aRect32 = ConvertToRect32(aRect16)
    End If
    ClientRectangle = aRect32
End Function

Private Function GetDC(hWnd As Long) As Long
    If Engine32() Then
        GetDC = GetDC32(hWnd)
    Else
        GetDC = GetDC16(hWnd)
    End If
End Function

Private Function SaveDC(hdc As Long) As Long
    If Engine32() Then
        SaveDC = SaveDC32(hdc)
    Else
        SaveDC = SaveDC16(hdc)
    End If
End Function

Private Function RestoreDC(hdc As Long, nSavedDC As Long) As Long
    If Engine32() Then
        RestoreDC = RestoreDC32(hdc, nSavedDC)
    Else
        RestoreDC = RestoreDC16(hdc, nSavedDC)
    End If
End Function

Private Function ReleaseDC(hWnd As Long, hdc As Long) As Long
    If Engine32() Then
        ReleaseDC = ReleaseDC32(hWnd, hdc)
    Else
        ReleaseDC = ReleaseDC16(hWnd, hdc)
    End If
End Function

Private Sub InvalidateRect(hWnd As Long, aRect32 As RECT32, bErase As Long)
    If Engine32() Then
        Dim stat32 As Long
        stat32 = InvalidateRect32(hWnd, aRect32, bErase)
    Else
        Dim aRect16 As RECT16
        aRect16 = ConvertToRect16(aRect32)
        Call InvalidateRect16(hWnd, aRect16, bErase)
    End If
End Sub

Private Function GetWindow(hWnd As Long, wCmd As Long) As Long
    If Engine32() Then
        GetWindow = GetWindow32(hWnd, wCmd)
    Else
        GetWindow = GetWindow16(hWnd, wCmd)
    End If
End Function

Private Function GetClassName(hWnd As Long, lpClassName As String, nmaxCount As Long) As Long
    If Engine32() Then
        GetClassName = GetClassName32(hWnd, lpClassName, nmaxCount)
    Else
        GetClassName = GetClassName16(hWnd, lpClassName, nmaxCount)
    End If
End Function

Private Function CreateFontIndirect(fontInfo32 As LOGFONT32) As Long
    If Engine32() Then
        CreateFontIndirect = CreateFontIndirect32(fontInfo32)
    Else
        Dim fontInfo16 As LOGFONT16
        fontInfo16 = ConvertToFontInfo16(fontInfo32)
        CreateFontIndirect = CreateFontIndirect16(fontInfo16)
    End If
End Function

Private Function SelectObject(hdc As Long, hObject As Long) As Long
    If Engine32() Then
        SelectObject = SelectObject32(hdc, hObject)
    Else
        SelectObject = SelectObject16(hdc, hObject)
    End If
End Function

Private Function DeleteObject(hObject As Long) As Long
    If Engine32() Then
        DeleteObject = DeleteObject32(hObject)
    Else
        DeleteObject = DeleteObject16(hObject)
    End If
End Function

Private Function SetBkColor(hdc As Long, RGB As Long) As Long
    If Engine32() Then
        SetBkColor = SetBkColor32(hdc, RGB)
    Else
        SetBkColor = SetBkColor16(hdc, RGB)
    End If
End Function

Private Function SetTextColor(hdc As Long, RGB As Long) As Long
    If Engine32() Then
        SetTextColor = SetTextColor32(hdc, RGB)
    Else
        SetTextColor = SetTextColor16(hdc, RGB)
    End If
End Function

Private Function GetTextExtentPoint(hdc As Long, text As String, lenText As Long, aSize32 As SIZE32) As Long
    If Engine32() Then
        GetTextExtentPoint = GetTextExtentPoint32(hdc, text, lenText, aSize32)
    Else
        Dim aSize16 As SIZE16
        GetTextExtentPoint = GetTextExtentPoint16(hdc, text, lenText, aSize16)
        aSize32 = ConvertToSize32(aSize16)
    End If
End Function

Private Function CreateSolidBrush(RGB As Long) As Long
    If Engine32() Then
        CreateSolidBrush = CreateSolidBrush32(RGB)
    Else
        CreateSolidBrush = CreateSolidBrush16(RGB)
    End If
End Function

Private Function PatBlt(hdc As Long, X As Long, Y As Long, nWidth As Long, nHeight As Long, deROP As Long) As Long
    If Engine32() Then
        PatBlt = PatBlt32(hdc, X, Y, nWidth, nHeight, deROP)
    Else
        PatBlt = PatBlt16(hdc, X, Y, nWidth, nHeight, deROP)
    End If
End Function

Private Function FrameRect(hdc As Long, aRect32 As RECT32, hBrush As Long) As Long
    If Engine32() Then
        FrameRect = FrameRect32(hdc, aRect32, hBrush)
    Else
        Dim aRect16 As RECT16
        aRect16 = ConvertToRect16(aRect32)
        FrameRect = FrameRect16(hdc, aRect16, hBrush)
    End If
End Function

Private Function DrawText(hdc As Long, text As String, nCount As Long, aRect32 As RECT32, wFormat As Long) As Long
    If Engine32() Then
        DrawText = DrawText32(hdc, text, nCount, aRect32, wFormat)
    Else
        Dim aRect16 As RECT16
        aRect16 = ConvertToRect16(aRect32)
        DrawText = DrawText16(hdc, text, nCount, aRect16, wFormat)
    End If
End Function

' Conversion functions
Private Function ConvertToRect16(aRect32 As RECT32) As RECT16
    ConvertToRect16.Top = aRect32.Top
    ConvertToRect16.Left = aRect32.Left
    ConvertToRect16.Bottom = aRect32.Bottom
    ConvertToRect16.Right = aRect32.Right
End Function

Private Function ConvertToRect32(aRect16 As RECT16) As RECT32
    ConvertToRect32.Top = aRect16.Top
    ConvertToRect32.Left = aRect16.Left
    ConvertToRect32.Bottom = aRect16.Bottom
    ConvertToRect32.Right = aRect16.Right
End Function

Private Function ConvertToSize16(aSize32 As SIZE32) As SIZE16
    ConvertToSize16.cx = aSize32.cx
    ConvertToSize16.cy = aSize32.cy
End Function

Private Function ConvertToSize32(aSize16 As SIZE16) As SIZE32
    ConvertToSize32.cx = aSize16.cx
    ConvertToSize32.cy = aSize16.cy
End Function

Private Function ConvertToFontInfo16(fontInfo32 As LOGFONT32) As LOGFONT16
    ConvertToFontInfo16.lfHeight = fontInfo32.lfHeight
    ConvertToFontInfo16.lfWidth = fontInfo32.lfWidth
    ConvertToFontInfo16.lfEscapement = fontInfo32.lfEscapement
    ConvertToFontInfo16.lfOrientation = fontInfo32.lfOrientation
    ConvertToFontInfo16.lfWeight = fontInfo32.lfWeight
    ConvertToFontInfo16.lfItalic = fontInfo32.lfItalic
    ConvertToFontInfo16.lfUnderline = fontInfo32.lfUnderline
    ConvertToFontInfo16.lfStrikeOut = fontInfo32.lfStrikeOut
    ConvertToFontInfo16.lfCharSet = fontInfo32.lfCharSet
    ConvertToFontInfo16.lfOutPrecision = fontInfo32.lfOutPrecision
    ConvertToFontInfo16.lfClipPrecision = fontInfo32.lfClipPrecision
    ConvertToFontInfo16.lfQuality = fontInfo32.lfQuality
    ConvertToFontInfo16.lfPitchAndFamily = fontInfo32.lfPitchAndFamily
    ConvertToFontInfo16.lfFaceName = fontInfo32.lfFaceName
End Function

Private Function ConvertToFontInfo32(fontInfo16 As LOGFONT16) As LOGFONT32
    ConvertToFontInfo32.lfHeight = fontInfo16.lfHeight
    ConvertToFontInfo32.lfWidth = fontInfo16.lfWidth
    ConvertToFontInfo32.lfEscapement = fontInfo16.lfEscapement
    ConvertToFontInfo32.lfOrientation = fontInfo16.lfOrientation
    ConvertToFontInfo32.lfWeight = fontInfo16.lfWeight
    ConvertToFontInfo32.lfItalic = fontInfo16.lfItalic
    ConvertToFontInfo32.lfUnderline = fontInfo16.lfUnderline
    ConvertToFontInfo32.lfStrikeOut = fontInfo16.lfStrikeOut
    ConvertToFontInfo32.lfCharSet = fontInfo16.lfCharSet
    ConvertToFontInfo32.lfOutPrecision = fontInfo16.lfOutPrecision
    ConvertToFontInfo32.lfClipPrecision = fontInfo16.lfClipPrecision
    ConvertToFontInfo32.lfQuality = fontInfo16.lfQuality
    ConvertToFontInfo32.lfPitchAndFamily = fontInfo16.lfPitchAndFamily
    ConvertToFontInfo32.lfFaceName = fontInfo16.lfFaceName
End Function

Private Function GetSize(rC As RECT32) As SIZE32
    GetSize.cx = rC.Right - rC.Left
    GetSize.cy = rC.Bottom - rC.Top
End Function

' Get the window handle of a child window,
' given the parent handle, and the child class name
Private Function hWndOfChildFromClass(hWndTop As Long, requiredClassName As String) As Long
  Dim lenClassNameBuffer As Long
  Dim lenClassName As Long
  Dim aClassName As String * 7
  Dim hWndNext As Long
  
    lenClassNameBuffer = 7
    
    hWndNext = GetWindow(hWndTop, GW_CHILD)         ' get any child window
    hWndNext = GetWindow(hWndNext, GW_HWNDFIRST)    ' get the first child window
  
    lenClassName = GetClassName(hWndNext, aClassName, lenClassNameBuffer)   ' name of first child
    If (Left$(aClassName, 6) = Left$(requiredClassName, 6)) Then
        hWndOfChildFromClass = hWndNext             ' which could be the one we want
        Exit Function
    End If
    
    While hWndNext <> 0
        hWndNext = GetWindow(hWndNext, GW_HWNDNEXT) ' search all children
        lenClassName = GetClassName(hWndNext, aClassName, lenClassNameBuffer)
        If (Left$(aClassName, 6) = Left$(requiredClassName, 6)) Then
            hWndOfChildFromClass = hWndNext         ' to find the one we want
            Exit Function
        End If
    Wend
    
    hWndOfChildFromClass = hWndNext                 ' end of list, no children
    
End Function

Private Function Engine32() As Boolean
  Static engineIs32 As Boolean
  Static haveTested As Boolean
    If haveTested Then
        Engine32 = engineIs32
        Exit Function
    ElseIf InStr(Application.OperatingSystem, "32") Then
        engineIs32 = True
    End If
    haveTested = True
    Engine32 = engineIs32
End Function
  
' An object which functions as a LED indicator bar on the Excel Status Bar
' Copyright David Wiseman 1994, 1995, 1996
' Do the stuff which can be done once at start of program (behind the scenes)
Sub Initialize(numberOfLEDs As Long)
  Dim hWndParent As Long
  Dim XLBarCentre As Long
      
    m_numberOfLEDs = numberOfLEDs
      
    hWndParent = GetActiveWindow()

'   Get the handle of the EXCEL status bar window
'   MS changed the class name of the status bar, beginning with Excel 97
    'If Application.Version <> "8.0" Then ''David's original code that blocks running on Excel 2000
    If Val(Application.Version) < 8 Then
        m_hWndXLStatus = hWndOfChildFromClass(hWndParent, "EXCEL8")
    Else
        m_hWndXLStatus = hWndOfChildFromClass(hWndParent, "EXCEL4")
    End If
      
    If (m_hWndXLStatus <> 0) Then                   ' Proceed if handle valid
      
        XLBar = ClientRectangle(m_hWndXLStatus) ' Excel status bar rectangle
        XLBarSize.cx = XLBar.Right - XLBar.Left     ' and extents
        XLBarSize.cy = XLBar.Bottom - XLBar.Top
         
                                                    ' Use the same font as the screen icons
        StatusFont = IconTitleFont
                                                    ' But Excel likes it in 10 point!
        StatusFont.lfHeight = (StatusFont.lfHeight * 10) / 8
         
                                                    ' Colours of system components
        ACTIVECAPTION = GetSysColor(COLOR_ACTIVECAPTION)
        BTNTEXT = GetSysColor(COLOR_BTNTEXT)
        BTNHIGHLIGHT = GetSysColor(COLOR_BTNHIGHLIGHT)
        BTNSHADOW = GetSysColor(COLOR_BTNSHADOW)
        BTNFACE = GetSysColor(COLOR_BTNFACE)
         
        RGB_LEDBarBG = BTNFACE                  ' default colours of various parts of LED Bar and text
        RGB_LEDBarFG = ACTIVECAPTION
        RGB_StatusBG = BTNFACE
        RGB_preMessageBG = BTNFACE
        RGB_preMessageFG = BTNTEXT
        RGB_postMessageBG = BTNFACE
        RGB_postMessageFG = BTNTEXT
        RGB_highlightTopLeft = BTNSHADOW
        RGB_highlightBottomRight = BTNHIGHLIGHT
         
        XLBarCentre = XLBar.Top + XLBarSize.cy / 2
         
        LEDBlockSize.cx = XLBarSize.cy / 3          ' each LED is 1/3 height of status bar
        LEDBlockSize.cy = LEDBlockSize.cx           ' and square
        LEDSpace = XLBarSize.cy / 10                ' spacing = 1/10 height of status bar
         
        LEDBlock.Bottom = XLBarCentre + LEDBlockSize.cy / 2     ' bottom of each LED block
        LEDBlock.Top = LEDBlock.Bottom - LEDBlockSize.cy        ' top of each LED block
         
        LEDBar.Bottom = LEDBlock.Bottom + LEDSpace              ' bottom of the LED bar rectangle
        LEDBar.Top = LEDBlock.Bottom - LEDBlockSize.cy - LEDSpace  ' top of the LED bar rectangle
        LEDBarSize.cx = 2 * LEDSpace + numberOfLEDs * (LEDSpace + LEDBlockSize.cx) ' width of the LED bar
        LEDBarSize.cy = LEDSpace + LEDBlockSize.cy + LEDSpace   ' height of the LED bar

        preMessageBox = XLBar                       ' top and bottom = full bar (centered)
        postMessageBox = XLBar

        preMessageBox.Left = XLBar.Left + XLBarSize.cy / 2

    End If

End Sub

' Display a LED Bar with messages etc
Sub Show(PreMessage As String, PostMessage As String, thePctComplete As Long)
    
    m_preMessage = PreMessage
    m_postMessage = PostMessage
        
    If (m_hWndXLStatus <> 0) Then                   ' Proceed if handle valid
        
        m_UserStatusBar = Application.DisplayStatusBar
        Application.DisplayStatusBar = True
        Application.StatusBar = " "
                
        OpenDC = m_hWndXLStatus                 ' Establish a device context object
            
        Call RectangleClear(XLBar, RGB_StatusBG) ' Clear the entire Status Bar area
                                     
        Call DrawWindowText(RGB_preMessageFG, _
                               RGB_preMessageBG, _
                               StatusFont, _
                               m_preMessage, _
                               preMessageBox)    ' Display the pre LED Bar message
                                                    ' (returns dimensions of text box)

                                                    ' How big was the message ?
                                                    ' Sort out the other dimensions required
                                                    ' Place to start the LED bar
        LEDBar.Left = preMessageBox.Right + XLBarSize.cy / 2
        LEDBar.Right = LEDBar.Left + LEDBarSize.cx  ' and a place to end the LED bar

        postMessageBox.Left = LEDBar.Right + XLBarSize.cy / 2  ' place to start the post text

        Call DrawWindowText(RGB_postMessageFG, _
                               RGB_postMessageBG, _
                               StatusFont, _
                               m_postMessage, _
                               postMessageBox)         ' Display the post LED Bar message
                        
        Call RectangleClear(LEDBar, RGB_LEDBarBG) ' Clear the LED Bar area
        
        Call RectanglePaintTopLeft(XLBar, RGB_highlightBottomRight) ' Highlight top left as per usual
                                                             ' Excel status bars
        Call RectangleHighlight(LEDBar, _
                                   RGB_highlightTopLeft, _
                                   RGB_highlightBottomRight) ' Sunken look for LED bar surround
             
        CloseDC = m_hWndXLStatus                  ' Finished with the DC

        m_LEDsAlight = 0
        
        m_LEDBarShowing = True
        
        PercentComplete = thePctComplete                    ' update the LED Bar

    End If

End Sub

' Return the status bar to Excel
Sub Hide()
    If (m_hWndXLStatus <> 0) Then                   ' Proceed if handle valid
        Application.DisplayStatusBar = m_UserStatusBar
        Application.StatusBar = False
        Call InvalidateRect(m_hWndXLStatus, XLBar, True)
        m_LEDBarShowing = False
    End If
End Sub

' Update the message before the LED Bar
Property Let PreMessage(theMessage As String)
    m_preMessage = theMessage
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Update the message after the LED Bar
Property Let PostMessage(theMessage As String)
    m_postMessage = theMessage
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Update the number of LEDs alight
Property Let PercentComplete(thePercent As Long)
  Dim newBlocksDone As Long
  
    m_percentComplete = thePercent
    
    If (m_hWndXLStatus <> 0) And m_LEDBarShowing Then
                    
        If ((m_percentComplete > 0) And (m_percentComplete <= 100)) Then      ' In range for display
            
            newBlocksDone = (m_numberOfLEDs * m_percentComplete) / 100 ' Any change in number
            If (m_LEDsAlight <> newBlocksDone) Then             ' of blocks ?
                
                OpenDC = m_hWndXLStatus                 ' Establish a device context object
                                        
                While (m_LEDsAlight < newBlocksDone)
                    LEDBlock.Left = LEDBar.Left + (LEDBlockSize.cx / 2) + m_LEDsAlight * (LEDBlockSize.cx + LEDSpace)
                    LEDBlock.Right = LEDBlock.Left + LEDBlockSize.cx
                    Call RectangleClear(LEDBlock, RGB_LEDBarFG)
                    m_LEDsAlight = m_LEDsAlight + 1
                Wend

                While (m_LEDsAlight > newBlocksDone)
                    LEDBlock.Left = LEDBar.Left + (LEDBlockSize.cx / 2) + m_LEDsAlight * (LEDBlockSize.cx + LEDSpace)
                    LEDBlock.Right = LEDBlock.Left + LEDBlockSize.cx
                    Call RectangleClear(LEDBlock, RGB_LEDBarBG)
                    m_LEDsAlight = m_LEDsAlight - 1
                Wend
                                     
                CloseDC = m_hWndXLStatus                  ' Finished with the DC
            
            End If
        End If
    End If
End Property

' Change the LED Bar FG colour
Property Let ProgressBarFG_RGB(RGBColour As Long)
    RGB_LEDBarFG = RGBColour
    m_LEDsAlight = 0                                    ' refresh the LEDs in the Bar
    PercentComplete = m_percentComplete
End Property

' Change the LED Bar BG colour
Property Let ProgressBarBG_RGB(RGBColour As Long)
    RGB_LEDBarBG = RGBColour
    m_LEDsAlight = 0                                    ' refresh the LEDs in the Bar
    PercentComplete = m_percentComplete
End Property

' Change the Status area BG colour
Property Let StatusAreaBG_RGB(RGBColour As Long)
    RGB_StatusBG = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the preMessage FG colour
Property Let PreMessageFG_RGB(RGBColour As Long)
    RGB_preMessageFG = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the preMessage BG colour
Property Let PreMessageBG_RGB(RGBColour As Long)
    RGB_preMessageBG = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the postMessage FG colour
Property Let PostMessageFG_RGB(RGBColour As Long)
    RGB_postMessageFG = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the postMessage BG colour
Property Let PostMessageBG_RGB(RGBColour As Long)
    RGB_postMessageBG = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the TopLeft highlight colour
Property Let HighlightTopLeft_RGB(RGBColour As Long)
    RGB_highlightTopLeft = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

' Change the BottomRight highlight colour
Property Let HighlightBottomRight_RGB(RGBColour As Long)
    RGB_highlightBottomRight = RGBColour
    Call Show(m_preMessage, m_postMessage, m_percentComplete)
End Property

Private Sub Class_Initialize()
    Initialize 20
    ProgressBarFG_RGB = RGB(0, 0, 0) ' black
    'ProgressBarFG_RGB = RGB(0, 0, 255) ' blue
End Sub

Private Sub Class_Terminate()
    Hide ' hides the progressbar
End Sub
Attribute VB_Name = "clsProtecao"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Banco do Nordeste do Brasil
'Ambiente de Estrat|fffd|gias da Tecnologia
'Classe com m|fffd|todos para controle e prote|fffd||fffd|o das planilhas
'Programador Washington Santos (ITI) - 03/06/2005

Private Const SENHAPROTECAO As String = "senhasBN"

Sub DesprotegePlanilha()
    ActiveSheet.Unprotect Password:=SENHAPROTECAO
End Sub
Sub ProtegePlanilha()
    ActiveSheet.Protect Password:=SENHAPROTECAO
End Sub
Sub IniciaRotina(Optional ByVal boHabilitaEventos As Boolean)
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    ActiveSheet.Unprotect Password:=SENHAPROTECAO

    If manterManual Then
        Application.EnableEvents = False
    Else
        Application.EnableEvents = boHabilitaEventos
    End If

    'Application.EnableCancelKey = xlDisabled
    flagRotina = 1
End Sub
Sub FinalizaRotina()

    If Not manterManual Then
        Application.Calculation = xlCalculationAutomatic
    End If

    ActiveSheet.Protect Password:=SENHAPROTECAO
    Application.EnableEvents = True
    'Application.EnableCancelKey = xlInterrupt
    flagRotina = 0
End Sub

Sub ProtegeTudo()
    Dim PlanilhaAtual As String, SelPlan As String
    PlanilhaAtual = ActiveSheet.Name
    IniciaRotina False
    For Each xlPlan In Sheets
        SelPlan = xlPlan.Name
        Sheets([SelPlan]).Activate
        ProtegePlanilha
    Next
    Sheets([PlanilhaAtual]).Activate
    FinalizaRotina
End Sub
Sub DesprotegeTudo()
    Dim PlanilhaAtual As String, SelPlan As String
    PlanilhaAtual = ActiveSheet.Name
    IniciaRotina False
    For Each xlPlan In Sheets
        SelPlan = xlPlan.Name
        Sheets([SelPlan]).Activate
        DesprotegePlanilha
    Next
    Sheets([PlanilhaAtual]).Activate
    FinalizaRotina
    DesprotegePlanilha
End Sub


Sub AbreVersao()
    Dim PlanilhaAtual As String, SelPlan As String
    PlanilhaAtual = ActiveSheet.Name
    IniciaRotina False
    For Each xlPlan In Sheets
        SelPlan = xlPlan.Name
        Sheets([SelPlan]).Activate
        ActiveSheet.Visible = xlSheetVisible
        DesprotegePlanilha
    Next
End Sub

Attribute VB_Name = "frmAssociaGlebas"
Attribute VB_Base = "0{40501AFA-0639-410F-B485-1D515BD78BD2}{29EB89F2-C4AA-4418-9410-2337E6A0360B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public VarParametro As Variant

Private Sub UserForm_Initialize()

    Call SetAtualizaRef(1)
    xl2Prop.Calculate
    cmbImovelProj.List() = CarregaComboIni("Lst_IMV_Proj")
    cmbImovelImp.List() = CarregaComboIni("Lst_IMV_Imp")
    cmbImovelProj.ListIndex = 0
    cmbImovelImp.ListIndex = 0
    Call AtualizaTodasLista
End Sub
Sub SetAtualizaRef(TipoRef As Integer)
Dim lngLinBusca As Integer

Select Case TipoRef

'0 - todos

Case 0, 1
lngLinBusca = xl00Busca.Range("DK2").value


ActiveWorkbook.Names.Add Name:="Lst_IMV_Imp", RefersToR1C1:= _
                      "=BUSCA!R4C114:R" & [lngLinBusca] + 4 & "C115"

Case 0, 2

lngLinBusca = xl00Busca.Range("EU2").value

'ActiveWorkbook.Names.Add Name:="Lst_Coord_Geod", RefersToR1C1:= _
                      "=BUSCA!R4C131:R" & [lngLinBusca] + 4 & "C150"


xl00Busca.Activate

Application.Calculation = xlCalculationManual

ActiveWorkbook.Names.Add Name:="Lst_IMV_Imp", RefersTo:= _
                      "==BUSCA!$EB$3:$ET$65536"


End Select

End Sub
Private Sub BtnAssocia_Click()
    
    If ListImovelProj.Column(6) = vbNullString Then
        MsgBox "N|fffd|o foi poss|fffd|vel associar o item, pois n|fffd|o existe a informa|fffd||fffd|o do im|fffd|vel para o mesmo na janela 'Proposta'.", vbExclamation, "Aviso"
        Exit Sub
    End If
    
    Call SetAssociaInv
    Call AtualizaTodasLista
    BtnAssocia.Enabled = False

End Sub
Private Sub BtnRetiraAssocia_Click()

    Call SetRetiraAssociaInv
    Call AtualizaTodasLista
    BtnRetiraAssocia.Enabled = False

End Sub
Sub AtualizaTodasLista()

    Call SetCarregaAssocia ' Carrega ArrayInvAssocia com Lista de associa|fffd||fffd|es da Proposta
    cmbImovelProj_Change
    cmbImovelImp_Change
End Sub
Private Sub BtnSair_Click() '
    CarregamentoRapido False
    Unload Me
End Sub
Private Sub cmbImovelProj_Change()
    VarParametro = cmbImovelProj.Column(0)
    Call SetCarregaInvProp
    Call SetCarregaListaProp
End Sub
Private Sub cmbImovelImp_Change()
    VarParametro = IIf(cmbImovelImp.Column(0) = 0, 0, cmbImovelImp.Column(1))
    Call SetCarregaInvImp
   
End Sub

Private Sub ListImovelImp_Change()
    On Error GoTo DeuErro
    
    If ListImovelProj.ListIndex = -1 And ListImovelImp.ListIndex = -1 Then
       BtnAssocia.Enabled = False
    Else
        BtnAssocia.Enabled = True
    End If
    
DeuErro:

End Sub

Private Sub ListAssociadas_Change()
    BtnRetiraAssocia.Enabled = True
End Sub
Function CarregaComboIni(Xref) As Variant
    Dim ArrayVar(), ArrayVarList()
    Dim xLine As Integer
    Dim X As Integer

    ArrayVar() = Range(Xref) 'Armazena referencia baseado no Gerenciador de Nomes

    For i = 1 To UBound(ArrayVar)
       If ArrayVar(i, 1) <> vbNullString And ArrayVar(i, 1) <> 0 Then
           xLine = xLine + 1
       End If
    Next i

    ReDim ArrayVarList(xLine, 2)

    xLine = UBound(ArrayVar)

    ArrayVarList(0, 0) = 0
    ArrayVarList(0, 1) = "Todos"
    j = 1
    For i = 1 To xLine
        If ArrayVar(i, 1) <> vbNullString And ArrayVar(i, 1) <> 0 Then
            ArrayVarList(j, 0) = ArrayVar(i, 1)
            ArrayVarList(j, 1) = ArrayVar(i, 2)
            j = j + 1
        End If
    Next i
    CarregaComboIni = ArrayVarList()
    'Limpar array
    Erase ArrayVarList
    Erase ArrayVar

End Function

Sub SetCarregaListaProp()
    Dim L_seq As Integer
    Dim L_SeqInv As Integer
    Dim ArrayVar(), ArrayVarList()
    Dim Contx, Conty, Contz, xQtdeLine As Integer
    Dim Y As Integer
    Dim XIncl As Integer
    XIncl = 1

    Contx = UBound(ArrayInvProj())
    On Error Resume Next
    Conty = UBound(ArrayInvAssocia())
    Contz = 0

    For i = 1 To Contx
        For Y = 1 To Conty
            If ArrayInvProj(i, 1) = ArrayInvAssocia(Y, 0) Then
                xQtdeLine = xQtdeLine + 1
            End If
        Next Y
        If xQtdeLine = 0 Then
            'If ArrayInvProj(i, 1) <> vbNullString Then
                 If ArrayInvProj(i, 4) <> vbNullString Or VarParametro = 0 Then
                   Contz = Contz + 1
                End If
            'End If
        End If
          xQtdeLine = 0
    Next i

    XIncl = 1
    ReDim ArrayVarList(Contz, 13)

    For i = 1 To Contx
        For Y = 1 To Conty
            If ArrayInvProj(i, 1) = ArrayInvAssocia(Y, 0) Then
                xQtdeLine = xQtdeLine + 1
            End If
        Next Y
        If xQtdeLine = 0 Then
            'If ArrayInvProj(i, 1) <> vbNullString Then
                If ArrayInvProj(i, 4) <> vbNullString Or VarParametro = 0 Then
                    ArrayVarList(XIncl, 0) = ArrayInvProj(i, 0) ' cd Invers|fffd|o
                    ArrayVarList(XIncl, 1) = ArrayInvProj(i, 1) ' Invers|fffd|o
                    ArrayVarList(XIncl, 2) = ArrayInvProj(i, 3) ' Codigo de empreendimento
                    ArrayVarList(XIncl, 3) = ArrayInvProj(i, 4) ' Valor do financiamento
                    ArrayVarList(XIncl, 4) = ArrayInvProj(i, 5) ' codigo do Imovel
                    ArrayVarList(XIncl, 5) = ArrayInvProj(i, 6) ' Valida|fffd||fffd|o
                    ArrayVarList(XIncl, 6) = ArrayInvProj(i, 7) ' Imovel
                    ArrayVarList(XIncl, 7) = ArrayInvProj(i, 8) ' municipio
                    ArrayVarList(XIncl, 8) = ArrayInvProj(i, 9) ' c|fffd|d cultura
                    ArrayVarList(XIncl, 9) = ArrayInvProj(i, 10) ' cultura
                    ArrayVarList(XIncl, 10) = ArrayInvProj(i, 11) ' Imovel cultura
                    ArrayVarList(XIncl, 11) = ArrayInvProj(i, 12) ' municipio
                    ArrayVarList(XIncl, 12) = Format(ArrayInvProj(i, 6), "Standard") ' Area (ha)
                   XIncl = XIncl + 1
                End If
            'End If
        End If
        xQtdeLine = 0
    Next i

    ListImovelProj.List() = ArrayVarList()
    ListImovelProj.RemoveItem 0
    'Limpar array
    Erase ArrayVar
    Erase ArrayVarList

End Sub
Sub SetCarregaInvProp()

    Dim L_seq As Integer
    Dim L_SeqInv As Integer
    Dim ArrayVarList(), ArrayVar()
    Dim i, j, xLine, xQtdeLine, xQtde As Integer

    ArrayVar() = Range("Lst_INV_Proj")
    xQtdeLine = UBound(ArrayVar())

    For i = 1 To xQtdeLine
        If ArrayVar(i, 13) = vbNullString And ArrayVar(i, 3) <> vbNullString Then
            xQtde = xQtde + 1
        End If
    Next i

    ReDim ArrayVarList(xQtde, 13)
    j = 1
    For i = 1 To xQtdeLine
        If ArrayVar(i, 13) = vbNullString And ArrayVar(i, 3) <> vbNullString Then
            ArrayVarList(j, 0) = ArrayVar(i, 1) ' cd Invers|fffd|o
            ArrayVarList(j, 1) = ArrayVar(i, 3) ' Invers|fffd|o
            ArrayVarList(j, 2) = ArrayVar(i, 4) ' Valor do financiamento
            ArrayVarList(j, 3) = ArrayVar(i, 5) ' Codigo de empreendimento
            ArrayVarList(j, 4) = ArrayVar(i, 7) ' codigo do Imovel
            ArrayVarList(j, 6) = ArrayVar(i, 10) ' Area (ha)
            ArrayVarList(j, 7) = ArrayVar(i, 11) ' Imovel
            ArrayVarList(j, 8) = ArrayVar(i, 12) ' Municipio
            ArrayVarList(j, 9) = ArrayVar(i, 13) ' c|fffd|d cultura
            ArrayVarList(j, 10) = ArrayVar(i, 14) ' cultura
            ArrayVarList(j, 11) = ArrayVar(i, 15) ' Imovel cultura
            ArrayVarList(j, 12) = ArrayVar(i, 16) ' municipio

            j = j + 1
        End If
    Next i

    ArrayInvProj() = ArrayVarList()

    'Limpar array
    Erase ArrayVarList
    Erase ArrayVar

End Sub
Sub SetCarregaInvImp()

    Dim L_seq As Integer
    Dim L_SeqInv As Integer
    Dim ArrayVarList(), ArrayVar()
    Dim i, j, xLine, xQtdeLine, xQtde As Integer

    ArrayVar() = Range("Lst_INV_Imp")
    xQtdeLine = UBound(ArrayVar())

    For i = 1 To xQtdeLine
       If ArrayVar(i, 2) <> vbNullString And ArrayVar(i, 1) = vbNullString Then
              If ArrayVar(i, 5) = VarParametro Or VarParametro = 0 Then
                   xQtde = xQtde + 1
              End If
        End If
    Next i

    ReDim ArrayVarList(xQtde, 5)
    j = 1
    For i = 1 To xQtdeLine
         If ArrayVar(i, 2) <> vbNullString And ArrayVar(i, 1) = vbNullString Then
           If ArrayVar(i, 5) = VarParametro Or VarParametro = 0 Then
                ArrayVarList(j, 0) = ArrayVar(i, 2) ' cd Cultura
                ArrayVarList(j, 1) = ArrayVar(i, 3) ' Cultura
                ArrayVarList(j, 2) = ArrayVar(i, 4) ' Im|fffd|vel
                ArrayVarList(j, 3) = ArrayVar(i, 5) ' Municipio/UF
                ArrayVarList(j, 4) = ArrayVar(i, 6) ' Municipio/UF
                j = j + 1
           End If
        End If
    Next i

    ArrayInvImp() = ArrayVarList()
    ListImovelImp.List() = ArrayVarList()
    ListImovelImp.RemoveItem 0

    'Limpar array
    Erase ArrayVarList
    Erase ArrayVar

End Sub
Sub SetCarregaAssocia()

    Dim L_seq As Integer
    Dim L_SeqInv As Integer
    Dim ArrayVarList(), ArrayVar() As Variant
    Dim i, j, xLine, xQtdeLine, xQtde As Integer

    ArrayVar() = Range("Lst_INV_Proj")
    xQtdeLine = UBound(ArrayVar())

    For i = 1 To xQtdeLine
        If ArrayVar(i, 13) <> vbNullString Then
              xQtde = xQtde + 1
        End If
    Next i

    ReDim ArrayVarList(0 To xQtde, 0 To 12)
    j = 1
    For i = 1 To xQtdeLine
       If ArrayVar(i, 13) <> vbNullString Then
            ArrayVarList(j, 0) = ArrayVar(i, 1) ' cd Invers|fffd|o
            ArrayVarList(j, 1) = ArrayVar(i, 3) ' Invers|fffd|o
            ArrayVarList(j, 2) = ArrayVar(i, 4) ' Valor do financiamento
            ArrayVarList(j, 3) = ArrayVar(i, 5) ' Codigo de empreendimento
            ArrayVarList(j, 4) = ArrayVar(i, 7) ' codigo do Imovel
            ArrayVarList(j, 5) = ArrayVar(i, 10) ' Area(ha)
            ArrayVarList(j, 6) = ArrayVar(i, 11) ' Imovel
            ArrayVarList(j, 7) = ArrayVar(i, 12) ' Municipio
            ArrayVarList(j, 8) = ArrayVar(i, 13) ' c|fffd|d cultura
            ArrayVarList(j, 9) = ArrayVar(i, 14) ' cultura
            ArrayVarList(j, 10) = ArrayVar(i, 15) ' Imovel cultura
            ArrayVarList(j, 11) = ArrayVar(i, 16) ' municipio
            j = j + 1
        End If
    Next i

   'Call SortArrayMulti(ArrayVarlist(), 0, 6)

   ArrayInvAssocia() = ArrayVarList()
   ListAssociadas.List() = ArrayInvAssocia()
   ListAssociadas.RemoveItem 0
   'Limpar array
   Erase ArrayVarList
   Erase ArrayVar

End Sub

Sub SetAssociaInv() ' Efetua a associa|fffd||fffd|o da invers|fffd|o - Cultura

   Dim L_seq As Integer
   Dim L_SeqInv As Integer

   'Dim ArrayVar(), ArrayVarList()
   Dim Cont, xLine, xQtdeLine As Integer
   'Dim xlPlan As String
   Dim protPlan As clsProtecao
   Set protPlan = New clsProtecao

   'xlPlan = ActiveSheet.Name

   If IsNull(ListImovelProj) Or IsNull(ListImovelImp) Then
        MsgBox "Selecione um item"
        Exit Sub
   End If

   Application.ScreenUpdating = False
   Application.Calculation = xlCalculationManual

   'xl00Busca.Activate
   protPlan.DesprotegePlanilha

   For L_Inv = 4 To xl00Busca.Range("DR2").value + 4
     If xl00Busca.Range("DN" & [L_Inv]).value = ListImovelImp.Column(0) Then
         xl00Busca.Range("DM" & [L_Inv]).value = ListImovelProj.Column(0)
     End If
   Next L_Inv

   Application.Calculation = xlCalculationAutomatic
   'Sheets(xlPlan).Activate

End Sub
Sub SetRetiraAssociaInv()

   Dim L_seq As Integer
   Dim L_SeqInv As Integer
   'Dim xlPlan As String

   'Dim ArrayVar(), ArrayVarList()
   Dim Cont, xLine, xQtdeLine As Integer
   Dim protPlan As clsProtecao
   Set protPlan = New clsProtecao

   'xlPlan = ActiveSheet.Name

   If IsNull(ListAssociadas) Then
        MsgBox "Selecione um item"
        Exit Sub
   End If

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    'xl00Busca.Activate
    protPlan.DesprotegePlanilha

   For L_Inv = 4 To xl00Busca.Range("DR2").value + 4
     If xl00Busca.Range("DM" & [L_Inv]).value = ListAssociadas.Column(0) Then
         xl00Busca.Range("DM" & [L_Inv]).value = vbNullString
     End If
   Next L_Inv

    Application.Calculation = xlCalculationAutomatic

   ' On Error Resume Next
    Me.ListAssociadas.ListIndex = 0

    'Sheets(xlPlan).Activate
End Sub
Sub limparTelaGeod()
    Dim protPlan As clsProtecao

    Set protPlan = New clsProtecao

    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    bd10Geodesica.Range("A101:U50000").Select

    ' Selection.Sort Key1:=Range("C101:C50000"), Order1:=xlAscending, Key2:=Range("F101:F50000"), Order2:=xlAscending, Key3:=Range("I101:I50000"), Order3:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase _
     :=False, Orientation:=xlTopToBottom

    Dim ArrayVarList()
    Dim ArrayVar()
    Dim ArraVarFilter()

    ArraVarFilter() = Range("Lst_INV_Imp")

    j = 1
    xl00Busca.Activate

    lngLinINV_Imp = Range("DR2")

    ReDim ArrayVar(lngLinINV_Imp)

    For xLine1 = 1 To lngLinINV_Imp
       If ArraVarFilter(xLine1, 1) <> "" Then
            ArrayVar(j) = CStr(ArraVarFilter(xLine1, 1))
            j = j + 1
       End If
    Next xLine1

    ActiveSheet.Range("A101:U50000").AutoFilter Field:=3, Criteria1:=ArrayVar(), Operator:=xlFilterValues


    bd10Geodesica.Range("A101:U50000").ClearContents


    ActiveSheet.AutoFilterMode = False



      Range("A101:U50000").Select
     Selection.Sort Key1:=Range("C101:C50000"), Order1:=xlAscending, Key2:=Range("F101:F50000"), Order2:=xlAscending, Key3:=Range("I101:I50000"), Order3:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase _
     :=False, Orientation:=xlTopToBottom


End Sub

Private Sub btnGravar_Click()
  '  On Error GoTo DeuErro

    Dim ArrayVarList()
    Dim ArrayVar()
    Dim ArraVarFilter()
    Dim xlPlan As String
    Dim xLine1, xLine2, lngLinBusca, lngLinINV_Imp As Integer
    Dim IniPaste As Integer

    Dim TotalLine As Integer
    Const LineIni As Integer = 101
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    Boorel = True
    
    If ListAssociadas.ListCount = 0 Then
        MsgBox "N|fffd|o h|fffd| item(s) de invers|fffd|o(|fffd|es) associado(s).", vbExclamation, "Aviso"
        Exit Sub
    End If
        
    xlPlan = ActiveSheet.Name

    Application.ScreenUpdating = False

    xl00Busca.Activate
    protPlan.DesprotegePlanilha

    ActiveSheet.AutoFilterMode = False

    lngLinINV_Imp = UBound(ArrayInvAssocia)

    ReDim ArrayVar(lngLinINV_Imp)

    Application.ScreenUpdating = False

    bd10Geodesica.Activate

    Call SetCarregaAssocia

    Application.StatusBar = "Associando os dados 10%"

    For xLine1 = 1 To lngLinINV_Imp '

      ArrayVar(j) = CStr(ArrayInvAssocia(xLine1, 0))

      With bd10Geodesica

         For xLine2 = 101 To .Range("BJ99") + 100

             If ArrayInvAssocia(xLine1, 0) = .Cells(xLine2, 53) Then
                  Call ExcluirGleba(.Cells(xLine2, 59), .Cells(xLine2, 60), Val(xLine2))
             End If

         Next xLine2

         j = j + 1
      End With

    Next xLine1

    Call OrdenarListaGleba
    'Call OrdenarResumoGleba

    Application.ScreenUpdating = False

    Application.StatusBar = "Associando os dados 20%"

    bd10Geodesica.Activate

    Application.ScreenUpdating = False

    xl00Busca.Activate

    protPlan.DesprotegePlanilha

    lngLinBusca = xl00Busca.Range("FG2").value + 2

    Range("DZ4:DZ" & Rows.Count).Select

    Selection.Copy

    Range("EA4").Select

    Selection.PasteSpecial Paste:=xlPasteValues

    Application.CutCopyMode = False

    Application.Calculation = xlCalculationManual

    ActiveWorkbook.Names.Add Name:="Lst_Coord_Geod", RefersTo:= _
                      "=BUSCA!$EA$3:$ER$" & Rows.Count

    Application.ScreenUpdating = False

    ActiveSheet.Range("Lst_Coord_Geod").AutoFilter Field:=1, Criteria1:=ArrayVar(), Operator:=xlFilterValues

    ActiveWorkbook.Names.Add Name:="Lst_Coord_Geod", RefersTo:= _
                      "=BUSCA!$EA$4:$ER$" & Rows.Count

    xl00Busca.Range("Lst_Coord_Geod").Select

    Application.StatusBar = "Associando os dados 30%"

    Selection.Copy

    bd10Geodesica.Activate

    protPlan.DesprotegePlanilha

    Range("B99").Calculate

    bd10Geodesica.Range("C" & Range("B99").value + 101).Select
    lngLinIni = ActiveCell.Row

    Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats

    Application.CutCopyMode = False

    Application.Calculation = xlCalculationManual

    Application.StatusBar = "Associando os dados 40%"

    xl00Busca.Activate

    ActiveSheet.AutoFilterMode = False

    Application.StatusBar = "Associando os dados 50%"

    Call InserirFormulasGleba(lngLinIni)
    Call InserirResumoGleba
    
    Application.Calculation = xlCalculationAutomatic
    Sheets(xlPlan).Activate

    CarregamentoRapido False

    Application.StatusBar = ""

    xl00Busca.Visible = xlSheetHidden
    bd10Geodesica.Visible = xlSheetHidden
    CarregamentoRapido True

    Boorel = False

    Erase ArrayInvProj
    Erase ArrayInvImp
    Erase ArrayInvAssocia
    
    
    MsgBox "Associa|fffd||fffd|o do(s) 'Item(ns) de Invers|fffd|o x Gleba(s) importada(s)' confirmada com sucesso!", vbInformation, "Salvar"

'DeuErro:

End Sub



Public Function SortArrayMulti(ByRef TheArray(), _
                                    Column, _
                                    ColumnCount)


'    ReDim Preserve TheArray(0 To 4, 0 To 6)


On Error GoTo DeuErro
    'Variaveis
    '----------
    Dim temp()
    Dim X, i, Y As Integer
    Dim sorted As Boolean

    'Dimens|fffd|es do array
    '------------------
    ReDim Preserve temp(0 To UBound(TheArray), 0 To ColumnCount)


    'Repeti|fffd||fffd|o para ordenar at|fffd| o final do array
    '--------------------------------------------
    Do While Not sorted

        'No inicio ele est|fffd| ordenado
        '--------------------------
        sorted = True

        'La|fffd|o que percorre as linhas
        '----------------------------
        For X = 1 To UBound(TheArray) - 1

            'Faz a compara|fffd||fffd|o
            '----------------
            If (TheArray(X, Column) > TheArray(X + 1, Column) And TheArray(X + 1, Column) <> Empty) Then

                'Ando por todas as colunas
                '-------------------------
                For Y = 0 To ColumnCount
                    temp(X, Y) = TheArray(X + 1, Y)
                Next Y

                'Ando por todas as colunas
                '-------------------------
                For Y = 0 To ColumnCount
                    TheArray(X + 1, Y) = TheArray(X, Y)
                Next Y

                'Ando por todas as colunas
                '-------------------------
                For Y = 0 To ColumnCount
                    TheArray(X, Y) = temp(X, Y)
                Next Y

                'Passou pelo if, ent|fffd|o n|fffd|o est|fffd| ordenado
                '---------------------------------------
                sorted = False

            End If
        Next X
    Loop

DeuErro:

End Function

Private Sub UserForm_Terminate()
    On Error Resume Next
    CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), CInt(xl14Geodesica.Range("M15").value)
    CarregamentoRapido False
End Sub

Attribute VB_Name = "frmDecBonusPRONAF"
Attribute VB_Base = "0{CFF559A8-EBE8-47BF-B704-ABCDACE293FE}{F7CD1177-8746-4272-AFC5-2A4FF651E6A6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'GSOL00083049 - Declara|fffd||fffd|o de b|fffd|nus para PRONAF-C


Private Sub cmOk_Click()
        Unload Me
End Sub

Private Sub UserForm_Initialize()
        Dim intOpcao As Integer
        intOpcao = xl99Auxi.Range("GG12").value
        If intOpcao = 1 Then
           Frame1.ZOrder 0
           txtData1.SetFocus
           txtData1.SelStart = 0
           txtData1.SelLength = Len(txtData1.text)
           
        ElseIf intOpcao = 2 Then
           Frame2.ZOrder 0
           txtData2.SetFocus
           txtData2.SelStart = 0
           txtData2.SelLength = Len(txtData2.text)
        Else
           Unload Me
        End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
        If validarCampos() = False Then
           Cancel = True
        End If
End Sub

Private Function validarCampos()
        Dim boValido As Boolean
        Dim intOpcao As Integer
        intOpcao = xl99Auxi.Range("GG12").value
        
        If intOpcao = 1 Then
           If Not IsDate(txtData1) Then
              boValido = False
              MsgBox "A data informada n|fffd|o |fffd| v|fffd|lida!", vbCritical
              txtData1.SetFocus
           Else
              boValido = True
           End If
        ElseIf intOpcao = 2 Then
           If Not IsDate(txtData2) Then
              boValido = False
              MsgBox "A data informada n|fffd|o |fffd| v|fffd|lida!", vbCritical
              txtData2.SetFocus
           Else
              boValido = True
           End If
        Else
           boValido = True
        End If
        
        validarCampos = boValido
End Function
Attribute VB_Name = "frmFiltro"
Attribute VB_Base = "0{7DC56FC7-20A8-4A5A-9F7A-3D316E8B9138}{41E16F96-F09C-45EB-AF6C-E04241AEFB05}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdOk_Click()
        Sheets([planBusca]).Activate
        flagBusca = 1
        Range([resBusca]).value = lstFiltro.value
        flagBusca = 0
        Unload Me
End Sub

Private Sub cmdSair_Click()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        Sheets([planBusca]).Select
        If lstFiltro.ListCount = 1 Then
           If tipoBusca = 1 Then
              MsgBox "Enquadramento BACEN inv|fffd|lido!", vbCritical
           ElseIf tipoBusca = 2 Then
              MsgBox "Nome de munic|fffd|pio n|fffd|o encontrado!", vbCritical
           ElseIf tipoBusca = 3 Then
              MsgBox "Nome de Ag|fffd|ncia n|fffd|o encontrado!", vbCritical
           ElseIf tipoBusca = 4 Then
              'MsgBox "Atividade n|fffd|o encontrada na base da planilha!", vbCritical
           Else
              'MsgBox "Informa|fffd||fffd|o inv|fffd|lida!", vbCritical
           End If
           tipoBusca = 0
           Range([resBusca]).Select
           xl99Auxi.Activate
           protPlan.DesprotegePlanilha
           Selection.AutoFilter
           protPlan.ProtegePlanilha
           Sheets([planBusca]).Select
           flagBusca = 0
           Set protPlan = Nothing
           Unload Me
           Exit Sub
        End If
        flagBusca = 0
        xl99Auxi.Activate
        protPlan.DesprotegePlanilha
        Selection.AutoFilter
        protPlan.ProtegePlanilha
        Set protPlan = Nothing
        Unload Me
End Sub

Private Sub lstFiltro_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
        cmdOk_Click
End Sub

Private Sub lstFiltro_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
        If KeyCode = 13 Then cmdOk_Click
End Sub

Private Sub UserForm_Initialize()
        Dim lngList As Long, flagIgual As Boolean
        On Error GoTo errForm
        lstFiltro.RowSource = "filtro_"
        lstFiltro.ListIndex = 0
        flagIgual = False
        If tipoBusca = 1 Then
           frmFiltro.Caption = "Pesquisa de Enquadramento BACEN ..."
        ElseIf tipoBusca = 2 Then
           frmFiltro.Caption = "Pesquisa de Munic|fffd|pios ..."
        ElseIf tipoBusca = 3 Then
           frmFiltro.Caption = "Pesquisa de Ag|fffd|ncias ..."
        ElseIf tipoBusca = 4 Then
           frmFiltro.Caption = "Pesquisa de Atividades ..."
        Else
         'MsgBox "Informa|fffd||fffd|o inv|fffd|lida!", vbCritical
        End If
        lngList = 0
        Do While lngList <= lstFiltro.ListCount - 1
           If UCase(lstFiltro.List(lngList, 0)) = UCase(Range([resBusca]).text) Then
              flagIgual = True
              Exit Do
           End If
           lngList = lngList + 1
        Loop
        If lstFiltro.ListCount = 1 Or flagIgual = True Then cmdSair_Click
        Exit Sub
errForm:
        On Error GoTo 0
        cmdSair_Click
        Exit Sub
End Sub

Private Sub UserForm_Terminate()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        flagBusca = 0
        xl99Auxi.Activate
        protPlan.DesprotegePlanilha
        Selection.AutoFilter
        protPlan.ProtegePlanilha
        bd1.Activate
        protPlan.ProtegePlanilha
        Set protPlan = Nothing
End Sub
Attribute VB_Name = "frmGeodesica"
Attribute VB_Base = "0{14125319-3E75-449F-915F-4C2DF831A2C0}{30055210-0DEB-4B56-8E03-8EE07FB403FB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Const Lim_Max_Latitude As Integer = 5
'Const Lim_Min_Latitude As Integer = -33
'Const Lim_Max_Longitude As Double = -33
'Const Lim_Min_Longitude As Double = -74
'Const Lim_Max_Alt As Integer = 3000
'Const Lim_Min_Alt As Integer = -100
'Public Str_TpGleba As String
'Public Dbl_ArNCultivada As Double
'Public Boo_Pri As Boolean
'
'
'Private Sub UserForm_Activate()
'    'UserForm_Initialize
'    LstBx_Inversao.RowSource = "Inv_Geodesica"
'    flagBusca = 0
'End Sub
'
'Private Sub UserForm_Initialize()
'
'   Dim L_Inv, L_seq, L_SeqInv As Byte
'   Dim protPlan As clsProtecao
'   Set protPlan = New clsProtecao
'
'   flagBusca = 1
'
'   Application.ScreenUpdating = False
'   bd10Geodesica.Activate
'   bd10Geodesica.Calculate
'   protPlan.DesprotegePlanilha
'
'   L_seq = 1
'   L_SeqInv = 0
'   bd10Geodesica.Range("A2:E97").ClearContents
'
'   'Custeio agricola
'   For L_Inv = 58 To 67
'      If xl2Prop.Range("AJ" & [L_Inv]).value <> vbNullString Then
'          L_seq = L_seq + 1
'          bd10Geodesica.Range("A" & [L_seq]).value = xl2Prop.Range("AD" & [L_Inv]).value  'AD NRO DA INVERSAO  AD  PARA A
'          bd10Geodesica.Range("B" & [L_seq]).value = xl2Prop.Range("AJ" & [L_Inv]).value  'NOME DA INVERSAO AJ PARA B
'          bd10Geodesica.Range("C" & [L_seq]).value = xl2Prop.Range("W" & [L_Inv]).value   'C|fffd|DIGO DA INVERSAO W PARA C
'          bd10Geodesica.Range("D" & [L_seq]).FormulaLocal = "=SE(|fffd|ERROS(PROCV(Proposta!P" & [L_Inv] & ";SQ_Municipio;1;0));"""";PROCV(Proposta!P" & [L_Inv] & ";SQ_Municipio;2;0))" ' para D
'          bd10Geodesica.Range("E" & [L_seq]).value = xl2Prop.Range("G" & [L_Inv]).value  '|fffd|rea  G para E
'          bd10Geodesica.Range("G" & [L_seq]).value = xl2Prop.Range("BB" & [L_Inv]).value  '|fffd|rea  G para E
'      End If
'   Next L_Inv
'
'   'Historico de Invers|fffd|o para eventual altera|fffd||fffd|o de invers|fffd|o.
'   For L_Inv = 2 To 97
'       bd10Geodesica.Range("M" & [L_Inv]).value = bd10Geodesica.Range("A" & [L_Inv]).value
'       bd10Geodesica.Range("N" & [L_Inv]).value = bd10Geodesica.Range("B" & [L_Inv]).value
'   Next L_Inv
'
'   For L_Inv = 11 To 46
'      If xl2Prop.Range("AZ" & [L_Inv]).value = "-1" Then
'        Application.ScreenUpdating = False
'        LimparGlebaPontos xl2Prop.Range("AD" & [L_Inv]).value, 0
'      End If
'   Next L_Inv
'
'
'   'calculate   INCLUS|fffd|O
'   bd10Geodesica.Range("F1").Calculate
'   bd10Geodesica.Range("B99").Calculate
'
'   'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
'   'Inv_Geodesica
'   ActiveWorkbook.Names.Add Name:="Inv_Geodesica_Hist", RefersToR1C1:= _
'                 "=Geodesica!R2C13:R" & bd10Geodesica.Range("F1").value + 1 & "C14"
'
'   'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
'   'Inv_Geodesica
'   bd10Geodesica.Range("F1").Calculate
'   ActiveWorkbook.Names.Add Name:="Inv_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R2C1:R" & bd10Geodesica.Range("F1").value + 1 & "C5"
'
'   'Adequar o range das linhas de acordo com a quantidade de Pontos
'   'SQ_GlebaPontos
'   bd10Geodesica.Range("B99").Calculate
'   ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos", RefersToR1C1:= _
'                 "=Geodesica!R101C6:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'   'SQ_Geodesica
'   ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'   'SQ_Invers|fffd|o_Gleba
'   ActiveWorkbook.Names.Add Name:="SQ_Invers|fffd|o_Gleba", RefersToR1C1:= _
'                 "=Geodesica!R101C3:R" & bd10Geodesica.Range("B99").value + 100 & "C19"
'
'   Application.ScreenUpdating = False
'   'Ordenar
'   Ordenar_Geodesica "SQ_Geodesica", "Geodesica", "A100:M" & bd10Geodesica.Range("B99").value + 100, "B100:B" & bd10Geodesica.Range("B99").value + 100
'
'   'Impedir que tenha sujeira na planilha quando inicializar o cadastro de Coordenadas
'   bd10Geodesica.Calculate
'   For L_Inv = 101 To 65536
'     On Error Resume Next
'     Range("B" & [L_Inv]).Calculate
'     If bd10Geodesica.Range("A" & [L_Inv]).value <> "" Then
'        If bd10Geodesica.Range("A" & [L_Inv]).value = "#N/D" Then
'           bd10Geodesica.Rows(L_Inv).Select
'           Selection.Delete Shift:=xlUp
'        End If
'     Else
'        Exit For
'     End If
'   Next L_Inv
'
'  'Limpar os campos para iniciar a digita|fffd||fffd|o
'   If L_seq > 1 Then
'      LstBx_Inversao.RowSource = "Inv_Geodesica"
'   Else
'      LstBx_Inversao.RowSource = ""
'   End If
'
'   LstBx_GlebaPontos.RowSource = ""
'   LstBx_Inversao.ListIndex = -1
'   LstBx_GlebaPontos.ListIndex = -1
'
'   Txt_NroGleba.text = ""
'   CmbBTpGlb.ListIndex = 0 '.text = ""
'   Txt_ArNaoCultiv.text = ""
'   Dbl_ArNCultivada = "0"
'
'   Txt_NroPts.text = ""
'   Txt_Lat.text = ""
'   Txt_Long.text = ""
'   Txt_Altit.text = ""
'
'   Btn_NvGleba.Enabled = False
'   Btn_ExcluirGleba.Enabled = False
'   btn_LimpaGleba.Enabled = False
'   Btn_Atualizar.Enabled = False
'   Btn_Excluir.Enabled = False
'   Btn_Incluir.Enabled = False
'   Btn_Limpar.Enabled = False
'
'   flagBusca = 0
'
'   Set protPlan = Nothing
'   Application.ScreenUpdating = False
'
'End Sub
'
'Private Sub UserForm_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Control As MSForms.Control, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal State As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
'    bd10Geodesica.Protect Password:="senhasBN"
'    xl1Orca.Activate
'End Sub
'
'Private Sub LstBx_Inversao_Click()
'
'    Application.ScreenUpdating = False
'
'    'faz a sele|fffd||fffd|o das Glebas e Pontos de um empreendimento
'    If flagBusca = 1 Then Exit Sub
'
'    If flagBusca = 0 Then
'      Str_TpGleba = ""
'      Dbl_ArNCultivada = "0"
'      Txt_NroGleba.value = ""
'      CmbBTpGlb.ListIndex = -1
'      Txt_ArNaoCultiv.value = ""
'      flagBusca = 0
'    End If
'
'    If Txt_ArNaoCultiv.value = NullString Then
'      Str_TpGleba = ""
'      Dbl_ArNCultivada = "0"
'    End If
'
'    DoEvents
'    LstBx_GlebaPontos.RowSource = ""
'
'    Sel_Pontos (0)
'
'    If bd1.Range("AZ2").value > 0 Then
'      Txt_NroGleba.value = bd1.Range("AZ2").value
'      CmbBTpGlb.text = bd1.Range("AZ4").value
'      Txt_ArNaoCultiv.value = Format(CDbl(bd1.Range("AZ5").value), "#,##0.00")
'    Else
'      Txt_NroGleba.value = 1
'      CmbBTpGlb.ListIndex = 0 'text = ""
'      Txt_NroPts.text = 1
'      Txt_ArNaoCultiv.value = vbNullString
'    End If
'
'    'Limpar os campos para iniciar
'    Txt_Lat.text = ""
'    Txt_Long.text = ""
'    Txt_Altit.text = ""
'
'    'ap|fffd|s Selecionar, ordenar e gravar, deve associar a nova refer|fffd|ncia ao ListBox
'    If bd1.Range("AZ2").value = 0 Then
'      DoEvents
'      LstBx_GlebaPontos.RowSource = ""
'    Else
'      DoEvents
'      LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'    End If
'
'    Btn_NvGleba.Enabled = True
'    Btn_ExcluirGleba.Enabled = True
'    btn_LimpaGleba.Enabled = True
'    Btn_Atualizar.Enabled = False
'    Btn_Excluir.Enabled = False
'    Btn_Incluir.Enabled = True
'    Btn_Limpar.Enabled = True
'
'    If CmbBTpGlb.text = vbNullString Then
'       CmbBTpGlb.SetFocus
'    Else
'       Txt_Lat.SetFocus
'    End If
'
'    flagBusca = 0
'
'    Application.ScreenUpdating = False
'
'End Sub
'
'Private Sub LstBx_GlebaPontos_Click()
'
'    Application.ScreenUpdating = False
'
'    If flagBusca = 1 Then Exit Sub
'
'    'Limpar os campos para iniciar
'    Txt_NroPts.text = ""
'    Txt_Lat.text = ""
'    Txt_Long.text = ""
'    Txt_Altit.text = ""
'
'    'Guardar o tipo e |fffd|rea n|fffd|o cultivada para posterior compara|fffd||fffd|o
'    Str_TpGleba = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 1)
'    Dbl_ArNCultivada = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 2)
'
'    'Recuperar as informa|fffd||fffd|es de pontos do item selecionado
'    Txt_NroGleba.value = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 0)
'    CmbBTpGlb.text = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 1)
'    Txt_ArNaoCultiv.value = Format(CDbl(LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 2)), "#,##0.00")
'    Txt_NroPts.value = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 3)
'    Txt_Lat.value = Format(CDbl(LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 4)), "#0.00000000000")
'    Txt_Long.value = Format(CDbl(LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 5)), "##0.00000000000")
'    Txt_Altit.value = Format(CDbl(LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 6)), "#,##0.00")
'
'    'Parametrizar a habilita|fffd||fffd|o dos bot|fffd|es da tela
'    Btn_NvGleba.Enabled = True
'    Btn_ExcluirGleba.Enabled = True
'    btn_LimpaGleba.Enabled = True
'    Btn_Atualizar.Enabled = True
'    Btn_Excluir.Enabled = True
'    Btn_Incluir.Enabled = False
'    Btn_Limpar.Enabled = True
'
'    flagBusca = 0
'    Application.ScreenUpdating = False
'
'End Sub
'
'Private Sub CmbBTpGlb_Change()
'
'   On Error Resume Next
'
'   If (CmbBTpGlb.text <> vbNullString) And (Str_TpGleba <> "") Then
'     If LTrim(RTrim(CmbBTpGlb.text)) <> Str_TpGleba Then
'       ok = MsgBox("O tipo de Gleba n|fffd|o deve ser diferente da existente." & Chr(10) _
'       & "Caso seja necess|fffd|rio alterar, deve informar uma nova Gleba!", vbCritical, "Erro")
'       CmbBTpGlb.text = Str_TpGleba
'       CmbBTpGlb.SetFocus
'     End If
'   End If
'
'Fim:
'
'End Sub
'
'Private Sub Txt_ArNaoCultiv_Change()
' ' On Error Resume Next
'
' ' If (Txt_ArNaoCultiv.text <> vbNullString) Then
' '   If CInt(Txt_ArNaoCultiv.value) < 0 Then
' '     ok = MsgBox("|fffd| necess|fffd|rio informar n|fffd|meros", vbCritical, "Erro")
' '     Txt_ArNaoCultiv.text = Format(CDbl(Dbl_ArNCultivada), "#,##0.00")
' '     Txt_ArNaoCultiv.SetFocus
' '     GoTo fim
' '   End If
' ' End If
' '
' ' If (Txt_ArNaoCultiv.text <> "") Then
' '    If Not Boo_Pri Then
' '       If CDbl(LTrim(RTrim(Txt_ArNaoCultiv.text))) <> CDbl(LTrim(RTrim(Dbl_ArNCultivada))) Then
' '         ok = MsgBox("A |fffd|rea n|fffd|o cultivada n|fffd|o deve ser diferente da existente." & Chr(10) _
' '          & "Caso seja necess|fffd|rio alterar, deve informar uma nova Gleba!", vbCritical, "Erro")
' '         Txt_ArNaoCultiv.text = Format(CDbl(Dbl_ArNCultivada), "#,##0.00")
' '         Txt_ArNaoCultiv.SetFocus
' '       End If
' '   End If
' ' End If
'
''fim:
'
'End Sub
'Function ValidarArNaoCultiv() As Integer '    Atividade 69955
'
'  If (Txt_ArNaoCultiv.text <> vbNullString) Then
'    If CInt(Txt_ArNaoCultiv.value) < 0 Then
'      ok = MsgBox("|fffd| necess|fffd|rio informar n|fffd|meros", vbCritical, "Erro")
'      Txt_ArNaoCultiv.text = Format(CDbl(Dbl_ArNCultivada), "#,##0.00")
'      Txt_ArNaoCultiv.SetFocus
'      Exit Function
'    End If
'  End If
'
' ValidarArNaoCultiv = 0
'  For i = 0 To LstBx_GlebaPontos.ListCount - 1
'    If CInt(LstBx_GlebaPontos.List(i, 0)) = CInt(Me.Txt_NroGleba) Then
'        Dbl_ArNCultivada = LstBx_GlebaPontos.List(i, 2)
'          If CDbl(LTrim(RTrim(Txt_ArNaoCultiv.text))) <> CDbl(LTrim(RTrim(Dbl_ArNCultivada))) Then
'              ok = MsgBox("O campo '|fffd|rea n|fffd|o cultivada' n|fffd|o pode ser diferente na mesma gleba", vbCritical, "Erro")
'              Txt_ArNaoCultiv.text = Format(CDbl(Dbl_ArNCultivada), "#,##0.00")
'              Txt_ArNaoCultiv.SetFocus
'              ValidarArNaoCultiv = -1
'              Exit Function
'          End If
'     End If
'  Next i
'
'End Function
'
'
'Private Sub Txt_Lat_Change()
''  On Error Resume Next
''
''  If Txt_Lat.text <> vbNullString And Txt_Lat.text <> "-" Then
''    If CDbl(Txt_Lat.Value) < Lim_Min_Latitude or CDbl(Txt_Lat.Value) > Lim_Max_Latitude Then
''      ok = MsgBox("|fffd| necess|fffd|rio informar n|fffd|meros!", vbCritical, "Erro")
''      Txt_Lat.SetFocus
''      GoTo fim
''    End If
''  End If
''
''fim:
'
'End Sub
'
'Private Sub Txt_Long_Change()
''  On Error Resume Next
''
''  If Txt_Long.text <> vbNullString And Txt_Long.text <> "-" Then
''   If CDbl(Txt_Long.Value) < Lim_Min_Longitude Or CDbl(Txt_Long.Value) > Lim_Max_Longitude Then
''      ok = MsgBox("|fffd| necess|fffd|rio informar n|fffd|meros!", vbCritical, "Erro")
''      Txt_Long.SetFocus
''      GoTo fim
''    End If
''  End If
''
''fim:
'
'End Sub
'Private Sub Txt_Altit_Change()
''  On Error Resume Next
''
''  If Txt_Altit.text <> vbNullString And Txt_Altit.text <> "-" Then
''    If (CDbl(Txt_Altit.Value) < -100) Or (CDbl(Txt_Altit.Value) > 3000) Then
''      ok = MsgBox("Altitude fora dos limites! (-100 ; 3000)", vbCritical, "Erro")
''      Txt_Altit.SetFocus
''      GoTo fim
''    End If
''  End If
''
''fim:
'
'End Sub
'
'Private Sub Txt_NroPts_Change()
'  If Txt_NroPts.text <> "" Then
'    Txt_NroPts.text = Format(CDbl(Txt_NroPts.value), "00")
'  End If
'End Sub
'
'Private Sub Txt_NroPts_Enter()
'      Txt_Lat.SetFocus
'End Sub
'
'Private Sub Btn_Incluir_Click()
'
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'    Dim Lin_Reg As Integer
'    Dim Val As Double
'
'    Btn_Incluir.Enabled = False
'    Btn_Limpar.Enabled = False
'
'    If Txt_NroPts.value > 60 Then
'       ok = MsgBox("N|fffd|mero de pontos, n|fffd|o deve ultrapassar 60!", vbCritical, "Erro")
'       GoTo Fim
'    End If
'
'
'    Application.ScreenUpdating = False
'
'    On Error Resume Next
'    If Txt_ArNaoCultiv.value <> vbNullString Then
'      If CInt(Txt_ArNaoCultiv.value) < 0 Then
'         ok = MsgBox("Coordenadas est|fffd|o fora dos limites do Territ|fffd|rio Nacional!", vbCritical, "Erro")
'         Txt_ArNaoCultiv.SetFocus
'         Btn_Incluir.Enabled = True
'         Btn_Limpar.Enabled = True
'         GoTo Fim
'      End If
'    End If
'
'    'Critica de latitude
'    If (Txt_Lat.value > Lim_Max_Latitude) Or (Txt_Lat.value < Lim_Min_Latitude) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Lat.Value = "" Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Lat.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de longitude
'    If (Txt_Long.value > Lim_Max_Longitude) Or (Txt_Long.value < Lim_Min_Longitude) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Long.Value = "" Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Long.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de Altitude
'    If (Txt_Altit.value > Lim_Max_Alt) Or (Txt_Altit.value < Lim_Min_Alt) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Altit.Value = ""  Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Altit.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de Tipo de Gleba
'    If CmbBTpGlb.text = "" Then
'       ok = MsgBox("Informe o tipo de gleba!", vbCritical, "Erro")
'       CmbBTpGlb.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'
'    If (Txt_ArNaoCultiv.text <> "") Then '    Atividade 69955
'        If Not Boo_Pri Then
'            If ValidarArNaoCultiv = -1 Then
'                Btn_Incluir.Enabled = True
'                Btn_Limpar.Enabled = True
'                Exit Sub
'            End If
'        End If
'    End If
'
'    Application.ScreenUpdating = False
'    'Carregar o novo Ponto
'    flagBusca = 1
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'    Lin_Reg = bd10Geodesica.Range("B99").value + 101
'    Range("C" & [Lin_Reg]).value = LstBx_Inversao.List(LstBx_Inversao.ListIndex, 0)    'Seq_Invers|fffd|o
'    Range("D" & [Lin_Reg]).FormulaLocal = "=PROCV(C" & [Lin_Reg] & ";Inv_Geodesica;2;FALSO)"  'LstBx_Inversao.List(LstBx_Inversao.ListIndex, 1) ' Invers|fffd|o
'    Range("E" & [Lin_Reg]).FormulaLocal = "=PROCV(C" & [Lin_Reg] & ";Inv_Geodesica;3;FALSO)" '=PROCV(C101;Inv_Geodesica;3;FALSO)" Empreendimento
'    Range("E" & [Lin_Reg]).value = LstBx_Inversao.List(L = stBx_Inversao.ListIndex, 2) ' Cod Empreendimento
'    Range("F" & [Lin_Reg]).value = Format(Str(Txt_NroGleba.text), "00")             ' Gleba
'    Range("G" & [Lin_Reg]).value = CmbBTpGlb.List(CmbBTpGlb.ListIndex, 0)           ' Tipo de formato
'    Str_TpGleba = CmbBTpGlb.List(CmbBTpGlb.ListIndex, 0)
'    If Txt_ArNaoCultiv.value = vbNullString Then
'      Range("H" & [Lin_Reg]).value = "0,00"
'      Dbl_ArNCultivada = "0"
'    Else
'      Range("H" & [Lin_Reg]).value = Format(CDbl(Txt_ArNaoCultiv.text), "#,##0.00")   ' |fffd|rea n|fffd|o cultivada
'      Dbl_ArNCultivada = Txt_ArNaoCultiv.text
'    End If
'    Range("I" & [Lin_Reg]).value = Format(Str(Txt_NroPts.text), "00")               ' Nro do Ponto
'    Val = IIf(Txt_Lat.text <> "", Format(CDbl(Txt_Lat.value), "#0.00000000000"), "")
'    Range("J" & [Lin_Reg]).value = Val                                              ' Latitude
'    Val = IIf(Txt_Long.text <> "", Format(CDbl(Txt_Long.value), "##0.00000000000"), "")
'    Range("K" & [Lin_Reg]).value = Val                                              ' Longitude
'    Val = IIf(Txt_Altit.text <> "", Format(CDbl(Txt_Altit.value), "#,##0.00"), "")
'    Range("L" & [Lin_Reg]).value = Txt_Altit.value                                  ' Altitude
'
'    Range("A" & [Lin_Reg]).FormulaLocal = "=CONCATENAR(" & "C" & [Lin_Reg] & ";D" & [Lin_Reg] & ")"
'    Range("B" & [Lin_Reg]).FormulaLocal = "=CONCATENAR(" & "A" & [Lin_Reg] & ";SE(N|fffd|M.CARACT(F" & [Lin_Reg] & ")=1;" & """" & "0" & """" & ";" & """" & """" & ");F" & _
'                                                                 [Lin_Reg] & ";SE(N|fffd|M.CARACT(I" & [Lin_Reg] & ")=1;" & """" & "0" & """" & ";" & """" & """" & ");I" & [Lin_Reg] & ")"
'    'Inserir a linha de registro para altera|fffd||fffd|o e exclus|fffd|o
'    Range("M" & [Lin_Reg]).FormulaR1C1 = "=ROW(RC[-1])"
'
'    Range("N" & [Lin_Reg]).FormulaLocal = "=PROCV(G" & [Lin_Reg] & ";Cod_Gleba;2;FALSO)"
'    Range("O" & [Lin_Reg]).FormulaLocal = "=PROCV(G" & [Lin_Reg] & ";Cod_Gleba;3;FALSO)"
'    DoEvents
'    Range("P" & [Lin_Reg]).FormulaLocal = "=CONCATENAR(C" & [Lin_Reg] & ";F" & [Lin_Reg] & ")"
'    Range("Q" & [Lin_Reg]).value = 1
'    Range("S" & [Lin_Reg]).FormulaLocal = "=SE(R" & [Lin_Reg] & "<O" & [Lin_Reg] & ";-1;0)"
'
'    'C|fffd|lculo
'    Range("A" & [Lin_Reg]).Calculate
'    Range("B" & [Lin_Reg]).Calculate
'    Range("M" & [Lin_Reg]).Calculate
'    Range("B99").Calculate
'
'    For i = 101 To Range("B99").value + 100
'       Range("R" & [i]).FormulaLocal = "=SOMASE($P$101:$Q$" & Range("B99").value + 100 & ";P" & [i] & ";$Q$101:$Q$" & Range("B99").value + 100 & ")"
'    Next i
'
'    protPlan.ProtegePlanilha
'   'Adequar o range das linhas de acordo com a quantidade de Pontos
'   'SQ_GlebaPontos
'   ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos", RefersToR1C1:= _
'                 "=Geodesica!R101C6:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'   'SQ_Geodesica
'    ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'    'Ordenar
'    Ordenar_Geodesica "SQ_Geodesica", "Geodesica", "A100:M" & bd10Geodesica.Range("B99").value + 100, "B100:B" & bd10Geodesica.Range("B99").value + 100
'
'    'ap|fffd|s Selecionar, ordenar e gravar, deve associar a nova refer|fffd|ncia ao ListBox
'    DoEvents
'    LstBx_GlebaPontos.RowSource = ""
'    LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'
'    'Retirar duplicagem
'    bd10Geodesica.Range("B99").Calculate
'    Dim Str_Chave As String
'
'    Str_Chave = bd10Geodesica.Range("B101").value
'
'    For L_Inv = 102 To bd10Geodesica.Range("B99").value + 100
'      DoEvents
'      If bd10Geodesica.Range("B" & [L_Inv]).value = Str_Chave Then
'         bd10Geodesica.Rows(L_Inv).Select
'         Selection.Delete Shift:=xlUp
'      End If
'      Str_Chave = bd10Geodesica.Range("B" & [L_Inv]).value
'    Next L_Inv
'
'    protPlan.ProtegePlanilha
'
'    'ap|fffd|s Selecionar, ordenar e gravar, deve associar a nova refer|fffd|ncia ao ListBox
'    DoEvents
'    LstBx_GlebaPontos.RowSource = ""
'    LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'
'    'Limpar os campos para iniciar
'    Txt_NroPts.text = ""
'    Txt_Lat.text = ""
'    Txt_Long.text = ""
'    Txt_Altit.text = ""
'
'    flagBusca = 0
'    LstBx_Inversao_Click  'simular o Click de sele|fffd||fffd|o de invers|fffd|o
'
'    'Parametrizar a habilita|fffd||fffd|o dos bot|fffd|es da tela
'    Btn_NvGleba.Enabled = True
'    Btn_ExcluirGleba.Enabled = True
'    btn_LimpaGleba.Enabled = True
'    Btn_Incluir.Enabled = True
'    Btn_Atualizar.Enabled = False
'    Btn_Excluir.Enabled = False
'    Btn_Incluir.Enabled = True
'    Btn_Limpar.Enabled = True
'
'    Txt_Lat.SetFocus
'
'Fim:
'   flagBusca = 0
'   Set protPlan = Nothing
'   Application.ScreenUpdating = False
'
'End Sub
'
'Private Sub Btn_Limpar_Click()
'    'Limpar os campos para iniciar
'
'   If MsgBox("Deseja limpar os campos para inclus|fffd|o de um novo Ponto?", vbQuestion + vbYesNo, "Novo Ponto") = vbYes Then
'      Limpar_Gleba (2)
'
'      Btn_Incluir.Enabled = True
'      Btn_NvGleba.Enabled = True
'      Btn_ExcluirGleba.Enabled = True
'      btn_LimpaGleba.Enabled = True
'      Btn_Limpar.Enabled = True
'      Btn_Atualizar.Enabled = False
'      Btn_Excluir.Enabled = False
'      LstBx_GlebaPontos.ListIndex = -1
'   End If
'End Sub
'Private Sub Btn_Atualizar_Click()
'    Dim Id_Reg As Integer
'    Dim Val As Double
'
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    Application.ScreenUpdating = False
'
'    flagBusca = 1
'    If LstBx_GlebaPontos.ListIndex = -1 Then
'       ok = MsgBox("|fffd| necess|fffd|rio selecionar uma Gleba com pontos", vbCritical, "Erro")
'       Exit Sub
'    End If
'    Id_Reg = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 7)
'    'Critica de latitude
'    If (Txt_Lat.value > Lim_Max_Latitude) Or (Txt_Lat.value < Lim_Min_Latitude) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Lat.Value = "" Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Lat.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de longitude
'    If (Txt_Long.value > Lim_Max_Longitude) Or (Txt_Long.value < Lim_Min_Longitude) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Long.Value = "" Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Long.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de Altitude
'    If (Txt_Altit.value > Lim_Max_Alt) Or (Txt_Altit.value < Lim_Min_Alt) Then
'       ok = MsgBox("Valor fora do limite", vbCritical, "Erro")
'       'Txt_Altit.Value = ""  Retirado por ordem do usu|fffd|rio Paulo Manso na homologa|fffd||fffd|o
'       Txt_Altit.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'    'Critica de Tipo de Gleba
'    If CmbBTpGlb.text = "" Then
'       ok = MsgBox("Informe o tipo de gleba!", vbCritical, "Erro")
'       CmbBTpGlb.SetFocus
'       Btn_Incluir.Enabled = True
'       Btn_Limpar.Enabled = True
'       GoTo Fim
'    End If
'
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'
'    Val = IIf(Txt_ArNaoCultiv.text = "", "00", Txt_ArNaoCultiv.value)
'    Range("H" & [Id_Reg]).value = Val
'    Val = IIf(Txt_Lat.text <> "", Format(CDbl(Txt_Lat.value), "#0.00000000000"), "")
'    Range("J" & [Id_Reg]).value = Val                                              ' Latitude
'    Val = IIf(Txt_Long.text <> "", Format(CDbl(Txt_Long.value), "##0.00000000000"), "")
'    Range("K" & [Id_Reg]).value = Val                                              ' Longitude
'    Val = IIf(Txt_Altit.text <> "", Format(CDbl(Txt_Altit.value), "#,##0.00"), "")
'    Range("L" & [Id_Reg]).value = Txt_Altit.value                                  ' Altitude
'
'    Sel_Pontos (0)
'
'    protPlan.ProtegePlanilha
'
'    'ap|fffd|s Selecionar, ordenar e gravar, deve associar a nova refer|fffd|ncia ao ListBox
'    'Txt_Lat.text = ""
'    'Txt_Long.text = ""
'    'Txt_Altit.text = ""
'
'     Txt_Lat.SetFocus
'
'    DoEvents
'    LstBx_GlebaPontos.RowSource = ""
'    LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'
'    Set protPlan = Nothing
'    flagBusca = 0
'
'    'Parametrizar a habilita|fffd||fffd|o dos bot|fffd|es da tela
'    'Btn_NvGleba.Enabled = True
'    'Btn_ExcluirGleba.Enabled = True
'    'btn_LimpaGleba.Enabled = True
'    'Btn_Atualizar.Enabled = False
'    'Btn_Excluir.Enabled = False
'    'Btn_Incluir.Enabled = True
'    'Btn_Limpar.Enabled = True
'
'Fim:
'   flagBusca = 0
'   Set protPlan = Nothing
'   Application.ScreenUpdating = False
'
'End Sub
'
'Private Sub Btn_Cancelar_Click()
'  Unload Me
'End Sub
'
'Private Sub Btn_ExcluirGleba_Click()
'   'Valida|fffd||fffd|es
'   If LstBx_Inversao.ListIndex = -1 Then
'     ok = MsgBox("|fffd| necess|fffd|rio selecionar um item de Invers|fffd|o, para realizar exclus|fffd|o", vbCritical, "Erro")
'   End If
'   'Valida|fffd||fffd|es
'   If Txt_NroGleba.text = vbNullString Then
'     ok = MsgBox("|fffd| necess|fffd|rio selecionar um item de Invers|fffd|o, para realizar exclus|fffd|o", vbCritical, "Erro")
'   End If
'
'  If MsgBox("Confirma a exclus|fffd|o da gleba e seus respectivos pontos?", vbQuestion + vbYesNo, "Exclus|fffd|o de Gleba") = vbYes Then
'      'Exclus|fffd|o do Item vindo do m|fffd|dulo MdlNavega
'      LimparGlebaPontos LstBx_Inversao.List(LstBx_Inversao.ListIndex, 0), Txt_NroGleba.text
'
'      DoEvents
'      Sel_Pontos (1)
'      CmbBTpGlb.text = vbNullString
'      LstBx_Inversao_Click
'      LstBx_GlebaPontos.RowSource = ""
'      LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'   End If
'
'End Sub
'
'
'Private Sub Btn_Excluir_Click()
'
'    Dim Id_Reg As Integer
'    Dim Str_Range As String
'
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    Application.ScreenUpdating = False
'
'    If MsgBox("Deseja Excluir o ponto selecionado?", vbQuestion + vbYesNo, "Novo Ponto") = vbYes Then
'
'        bd10Geodesica.Calculate
'        flagBusca = 1
'        Id_Reg = LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 7)
'        Str_Range = LTrim(RTrim(Str(Id_Reg))) & ":" & LTrim(RTrim(Str(Id_Reg)))
'
'        bd10Geodesica.Activate
'        protPlan.DesprotegePlanilha
'
'        bd10Geodesica.Rows(Str_Range).Select
'        Selection.Delete Shift:=xlUp
'        protPlan.ProtegePlanilha
'
'        Sel_Pontos (0)
'
'        'Limpar os campos do dado exclu|fffd|do
'        Txt_Lat.text = ""
'        Txt_Long.text = ""
'        Txt_Altit.text = ""
'
'        LI = 2
'        Do While bd1.Range("BA" & [LI]).value <> vbNullString
'           LI = LI + 1
'        Loop
'
'        'ap|fffd|s Selecionar, ordenar e gravar, deve associar a nova refer|fffd|ncia ao ListBox
'        DoEvents
'        LstBx_GlebaPontos.RowSource = ""
'        If LI > 2 Then
'           LstBx_GlebaPontos.RowSource = "SQ_GlebaPontos_F"
'        End If
'
'        Set protPlan = Nothing
'        flagBusca = 0
'
'        Btn_NvGleba.Enabled = True
'        Btn_ExcluirGleba.Enabled = True
'        btn_LimpaGleba.Enabled = True
'        Btn_Atualizar.Enabled = False
'        Btn_Excluir.Enabled = False
'        Btn_Incluir.Enabled = True
'        Btn_Limpar.Enabled = True
'    End If
''    Application.ScreenUpdating = True
'
'End Sub
'
'Private Sub btn_LimpaGleba_Click()
'
'
'
'    If LstBx_Inversao.ListIndex = -1 Then
'      ok = MsgBox("|fffd| necess|fffd|rio selecionar uma Invers|fffd|o!", vbCritical, "Erro")
'      Exit Sub
'    End If
'
'    Limpar_Gleba (1)
'
'    Btn_NvGleba.Enabled = False
'    Btn_ExcluirGleba.Enabled = False
'    btn_LimpaGleba.Enabled = False
'    Btn_Atualizar.Enabled = False
'    Btn_Excluir.Enabled = False
'    Btn_Incluir.Enabled = False
'    Btn_Limpar.Enabled = False
'
'
'End Sub
'
'Private Sub Btn_NvGleba_Click()
'
'  If MsgBox("Deseja limpar os campos para inclus|fffd|o de uma nova Gleba?", vbQuestion + vbYesNo, "Novo Ponto") = vbYes Then
'
'      flagBusca = 1
'      If LstBx_Inversao.ListIndex = -1 Then
'         ok = MsgBox("|fffd| necess|fffd|rio selecionar uma Invers|fffd|o!", vbCritical, "Erro")
'         Exit Sub
'      End If
'
'
'      If Int(RTrim(LTrim(Txt_NroGleba.value))) - 1 = bd1.Range("AZ2").value Then
'        ok = MsgBox("N|fffd|o |fffd| poss|fffd|vel inserir uma nova Gleba com n|fffd|mero superior", vbInformation, "Aviso")
'        GoTo Fim
'      End If
'
'      If RTrim(LTrim(Txt_NroGleba.value)) = "" Then
'        Txt_NroGleba.text = "1"
'        Txt_NroPts.text = "1"
'        CmbBTpGlb.ListIndex = 0 ' = ""
'        Txt_ArNaoCultiv.text = ""
'        Txt_NroPts.text = ""
'        Txt_Lat.text = ""
'        Txt_Long.text = ""
'        Txt_Altit.text = ""
'        Str_TpGleba = ""
'        Dbl_ArNCultivada = 0
'      ElseIf CInt(Txt_NroGleba.value) > bd1.Range("AZ2").value Then
'        ok = MsgBox("N|fffd|mero da Gleba deve ser sequencial!", vbCritical, "Valor fora do limite")
'        GoTo Fim
'      Else
'        Txt_NroGleba.text = CInt(Txt_NroGleba.value) + 1
'        LI = 2
'        Do While bd1.Range("BA" & [LI]).value <> vbNullString
'          DoEvents
'          If CInt(bd1.Range("BF" & [LI]).value) = CInt(Txt_NroGleba.value) Then
'             Txt_NroPts.value = bd1.Range("BI" & [LI]).value
'             Str_TpGleba = bd1.Range("BG" & [LI]).value
'             CmbBTpGlb.text = bd1.Range("BG" & [LI]).value
'             Dbl_ArNCultivada = bd1.Range("BH" & [LI]).value
'             Txt_ArNaoCultiv.text = bd1.Range("BH" & [LI]).value
'          Else
'             Str_TpGleba = ""
'             CmbBTpGlb.ListIndex = 0 '.text = ""
'             Dbl_ArNCultivada = 0
'             Txt_ArNaoCultiv.text = ""
'             Txt_NroPts.value = 0
'          End If
'          LI = LI + 1
'        Loop
'        Txt_NroPts.value = Txt_NroPts.value + 1
'        Txt_Lat.text = ""
'        Txt_Long.text = ""
'        Txt_Altit.text = ""
'        Str_TpGleba = ""
'        Dbl_ArNCultivada = 0
'      End If
'
'        Btn_NvGleba.Enabled = True
'        Btn_ExcluirGleba.Enabled = True
'        btn_LimpaGleba.Enabled = True
'        Btn_Atualizar.Enabled = False
'        Btn_Excluir.Enabled = False
'        Btn_Incluir.Enabled = True
'        Btn_Limpar.Enabled = True
'  End If
'Fim:
'  flagBusca = 0
'
'End Sub
'
'Private Sub Txt_NroPts_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
'  Txt_NroPts.text = Format(CDbl(Txt_NroPts.value), "00")
'  Txt_Lat.SetFocus
'End Sub
'Private Sub Txt_NroGleba_Change()
'  If Txt_NroGleba.text <> "" Then
'    Txt_NroGleba.text = Format(CDbl(Txt_NroGleba.value), "00")
'  End If
'End Sub
'
'Private Sub Txt_Altit_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'
'  On Error Resume Next
'
'  If (LTrim(RTrim(Txt_Altit.text)) <> "" And Txt_Altit.text <> "0,00") And (LTrim(RTrim(Txt_Altit.text)) <> "" And Txt_Lat.text <> "0") Then
'    Txt_Altit.text = Format(CDbl(Txt_Altit.value), "#,##0.00")
'  End If
'
'Fim:
'
'End Sub
'
'Private Sub Txt_ArNaoCultiv_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'
'  On Error Resume Next
'
'  If (LTrim(RTrim(Txt_ArNaoCultiv.text)) <> "" And Txt_ArNaoCultiv.text <> "0,00") And (LTrim(RTrim(Txt_ArNaoCultiv.text)) <> "" And Txt_Lat.text <> "0") Then
'    Txt_ArNaoCultiv.text = Format(CDbl(Txt_ArNaoCultiv.value), "#,##0.00")
'  End If
'
'Fim:
'
'End Sub
'
'Private Sub Txt_Lat_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'
'
'  On Error Resume Next
'
'  If (LTrim(RTrim(Txt_Lat.text)) <> "" And Txt_Lat.text <> "0,00") And (LTrim(RTrim(Txt_Lat.text)) <> "" And Txt_Lat.text <> "0") Then
'    Txt_Lat.text = Format(CDbl(Txt_Lat.value), "#0.00000000000")
'  End If
'
'Fim:
'
'End Sub
'
'Private Sub Txt_Long_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'
'  On Error Resume Next
'
'  If (LTrim(RTrim(Txt_Long.text)) <> "" And Txt_Long.text <> "0,00") And (LTrim(RTrim(Txt_Long.text)) <> "" And Txt_Lat.text <> "0") Then
'    Txt_Long.text = Format(CDbl(Txt_Long.value), "##0.00000000000")
'  End If
'
'Fim:
'
'End Sub
'
'
'Sub Sel_Pontos(ByVal tipo As Byte)
'
'    'Tipo 0 - Inclus|fffd|o  1 - Altera|fffd||fffd|o
'
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    Dim StrChave_Invers|fffd|o As String  ' Composta com (Seq_Invers|fffd|o + Invers|fffd|o + Cod Empreendimento)
'    Dim NroGleba, NroPonto As String
'    Dim Ref_Fis As String
'
'    Application.ScreenUpdating = False
'
'    StrChave_Invers|fffd|o = LstBx_Inversao.List(LstBx_Inversao.ListIndex, 0) '& LstBx_Inversao.List(LstBx_Inversao.ListIndex, 1) ' & LstBx_Inversao.List(LstBx_Inversao.ListIndex, 2)
'    'If LstBx_GlebaPontos.ListIndex <> -1 Then
'    '  StrChave_GlebaPts = StrChave_Invers|fffd|o & LstBx_GlebaPontos.List(LstBx_GlebaPontos.ListIndex, 1) '  LstBx_Inversao.List(LstBx_Inversao.ListIndex, 1) ' & LstBx_Inversao.List(LstBx_Inversao.ListIndex, 2)
'    'End If
'    flagBusca = 1
'    Application.ScreenUpdating = False
'
'    bd1.Activate
'    Application.ScreenUpdating = False
'    protPlan.DesprotegePlanilha
'
'    bd1.Range("BA2:BM57000").ClearContents
'   'Formato definitivo para exibir o Listbox das Glebas e Pontos
'    Selection.NumberFormat = "00"
'    Columns("BE:BE").Select
'    Selection.NumberFormat = "0"
'    Columns("BF:BF").Select
'    Selection.NumberFormat = "00"
'    Columns("BH:BH").Select
'    Selection.NumberFormat = "#,##0.00"
'    Columns("BI:BI").Select
'    Selection.NumberFormat = "00"
'    Columns("BJ:BJ").Select
'    Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'    Columns("BK:BK").Select
'    Selection.NumberFormat = "##0.00000000000;[Red]-##0.00000000000"
'    Columns("BL:BL").Select
'    Selection.NumberFormat = "#,##0.00;[Red]-#,##0.00"
'    Columns("BM:BM").Select
'
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'    bd10Geodesica.Range("B99").Calculate
'    bd10Geodesica.Select
'    Application.GoTo Reference:="SQ_Geodesica"
'    Selection.AutoFilter
'    ActiveSheet.Range("A101:L" & 100 + bd10Geodesica.Range("B99").value).AutoFilter Field:=3, Criteria1:=Trim(StrChave_Invers|fffd|o)
'    Selection.Copy
'
'    bd1.Activate
'    Range("BA1").Select
'    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
'        :=False, Transpose:=False
'    Application.CutCopyMode = False
'
'    Sheets("Geodesica").Activate
'    Selection.AutoFilter
'    Range("C101").Select
'
'    LI = 2
'    Do While bd1.Range("BA" & [LI]).value <> vbNullString
'       LI = LI + 1
'    Loop
'
'    If LI > 2 Then
'      Ordenar_Geodesica "SQ_Geodesica_F", "BD1", "BA2:BM" & LI - 1, "BB2:BB" & LI - 1
'    End If
'
'    protPlan.ProtegePlanilha
'
'    'Iniciar com a 1 Gleba
'    If Txt_NroGleba.value = vbNullString Then
'       Txt_NroGleba.value = bd1.Range("BF2").value
'    End If
'
'    If CmbBTpGlb.text = "" Then
'       Str_TpGleba = bd1.Range("BG2").value
'    End If
'
'    If Txt_ArNaoCultiv.text = "" Then
'       Boo_Pri = IIf(bd1.Range("BH2").value = vbNullString, True, False)  '20160503 - Caso seja o primeiro registro da Gleba n|fffd|o criticar |fffd|rea n|fffd|o cultivada
'       Dbl_ArNCultivada = bd1.Range("BH2").value
'    End If
'
'    bd1.Activate
'    Range("BA2").Select
'    'Identificar o Nro da Gleba e do Ponto mais pr|fffd|ximo
'    LI = 2
'    If tipo = 0 Then
'      Do While bd1.Range("BA" & [LI]).value <> vbNullString
'        DoEvents
'        If CInt(bd1.Range("BF" & [LI]).value) = CInt(Txt_NroGleba.value) Then
'           Txt_NroPts.value = bd1.Range("BI" & [LI]).value
'           NroPonto = bd1.Range("BI" & [LI]).value
'        Else
'           Txt_NroGleba.value = bd1.Range("BF" & [LI]).value
'           Str_TpGleba = bd1.Range("BG" & [LI]).value
'           Dbl_ArNCultivada = bd1.Range("BH" & [LI]).value
'           NroPonto = bd1.Range("BI" & [LI]).value
'        End If
'        LI = LI + 1
'      Loop
'    End If
'
'    Txt_NroGleba.value = NroGleba
'    Txt_NroPts.value = NroPonto
'
'    If Txt_NroPts.value = "" Then
'      Txt_NroPts.value = 1
'    Else
'      Txt_NroPts.value = Txt_NroPts.value + 1
'    End If
'
'    'Criando as refer|fffd|ncias para ordenar e associar ao listbox de pontos
'    If LI > 2 Then
'        'Criando as refer|fffd|ncias para ordenar e associar ao listbox de pontos
'        ActiveWorkbook.Names.Add Name:="SQ_Geodesica_F", RefersToR1C1:= _
'                     "=bd1!R2C53:R" & LI - 1 & "C65"
'
'        ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos_F", RefersToR1C1:= _
'                     "=bd1!R2C58:R" & LI - 1 & "C65"
'    Else
'        ActiveWorkbook.Names.Add Name:="SQ_Geodesica_F", RefersToR1C1:= _
'                     "=bd1!R2C53:R2C65"
'
'        ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos_F", RefersToR1C1:= _
'                     "=bd1!R2C58:R2C65"
'    End If
'
'    If LI > 2 Then
'       Ordenar_Geodesica "SQ_Geodesica_F", "BD1", "BA2:BM" & LI - 1, "BB2:BB" & LI - 1
'    End If
'
'    'Btn_NvGleba.Enabled = True
'    'Btn_ExcluirGleba.Enabled = True
'    'btn_LimpaGleba.Enabled = False
'    'Btn_Atualizar.Enabled = True
'    'Btn_Excluir.Enabled = True
'    'Btn_Incluir.Enabled = True
'    'Btn_Limpar.Enabled = True
'
'    flagBusca = 0
'    Set protPlan = Nothing
'
'    Application.ScreenUpdating = False
'
'End Sub
'
'Public Sub Ordenar_Geodesica(ByVal Referencia As String, ByVal Aba As String, ByVal Ref_Fis, Ref_Sort As String)
'
'    Application.ScreenUpdating = False
'    If Referencia = "SQ_Geodesica" Then
'      Application.GoTo Reference:="SQ_Geodesica"
'    ElseIf Refernecia = "SQ_Geodesica_F" Then
'      Application.GoTo Reference:="SQ_Geodesica_F"
'    End If
'    ActiveWorkbook.Worksheets(Aba).Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets(Aba).Sort.SortFields.Add Key:=Range(Ref_Sort), _
'        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
'    With ActiveWorkbook.Worksheets(Aba).Sort
'        .SetRange Range(Ref_Fis)
'        .Header = xlYes     'xlGuess = Sem cabe|fffd|alho
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'End Sub
'
'
'Sub Limpar_Gleba(tipo As Byte)
' 'Limpar os campos para iniciar a digita|fffd||fffd|o
'  If tipo = 1 Then   ' Gleba e Pontos
'    LstBx_Inversao.Selected(0) = True
'    LstBx_Inversao.Selected(0) = False
'    Txt_NroGleba.text = ""
'    CmbBTpGlb.ListIndex = 0 'text = ""
'    Txt_ArNaoCultiv.text = ""
'
'    Txt_NroPts.text = ""
'    Txt_Lat.text = ""
'    Txt_Long.text = ""
'    Txt_Altit.text = ""
'    LstBx_GlebaPontos.RowSource = ""
'
'    Str_TpGleba = ""
'    Dbl_ArNCultivada = 0
'
'  ElseIf tipo = 2 Then ' Somente Pontos
'    'Identificar o Nro da Gleba e do Ponto mais pr|fffd|ximo
'    LI = 2
'    Do While bd1.Range("BA" & [LI]).value <> vbNullString
'      DoEvents
'      If CInt(bd1.Range("BF" & [LI]).value) = CInt(Txt_NroGleba.value) Then
'         Txt_NroPts.value = bd1.Range("BI" & [LI]).value
'      End If
'      LI = LI + 1
'    Loop
'    Txt_NroPts.value = Txt_NroPts.value + 1
'
'    Txt_Lat.text = ""
'    Txt_Long.text = ""
'    Txt_Altit.text = ""
'  End If
'
'  Btn_Incluir.Enabled = False
'  Btn_Excluir.Enabled = False
'  Btn_Atualizar.Enabled = False
'
'
'
'End Sub
'
'Private Sub UserForm_Terminate()
'   flagBusca = 1
'
'   'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
'   'Inv_Geodesica
'   ActiveWorkbook.Names.Add Name:="Inv_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R2C1:R" & bd10Geodesica.Range("F1").value + 1 & "C5"
'
'   'Adequar o range das linhas de acordo com a quantidade de Pontos
'   'SQ_GlebaPontos
'   ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos", RefersToR1C1:= _
'                 "=Geodesica!R101C6:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'   'SQ_Geodesica
'   ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'   'SQ_Invers|fffd|o_Gleba
'   ActiveWorkbook.Names.Add Name:="SQ_Invers|fffd|o_Gleba", RefersToR1C1:= _
'                 "=Geodesica!R101C3:R" & bd10Geodesica.Range("B99").value + 100 & "C19"
'
'   xl1Orca.Activate
'End Sub
Attribute VB_Name = "frmInfoImovel"
Attribute VB_Base = "0{8C3615E0-EFCC-4612-B5B9-91643F70783E}{B47D300C-0CF1-4C38-9047-DE8CBA36C4B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public NumImv As Integer

Private Sub txtCAR_Change()
     Lbl_CAR.Caption = Len(txtCAR.value)
     If Lbl_CAR.Caption > 41 Then
        Lbl_CAR.ForeColor = RGB(255, 0, 0)
     Else
        Lbl_CAR.ForeColor = RGB(0, 0, 0)
     End If
End Sub

Private Sub txtCEI_Change()
     Lbl_CEI.Caption = Len(txtCEI.value)
     If Lbl_CEI.Caption > 12 Then
        Lbl_CEI.ForeColor = RGB(255, 0, 0)
     Else
        Lbl_CEI.ForeColor = RGB(0, 0, 0)
     End If
End Sub

Private Sub txtNIRF_Change()
     lbl_Nirf.Caption = Len(txtNIRF.value)
     If lbl_Nirf.Caption > 9 Then
        lbl_Nirf.ForeColor = RGB(255, 0, 0)
     Else
        lbl_Nirf.ForeColor = RGB(0, 0, 0)
     End If
End Sub

Private Sub txtSNCR_Change()
     Lbl_SNCR.Caption = Len(txtSNCR.value)
     If Lbl_SNCR.Caption > 13 Then
        Lbl_SNCR.ForeColor = RGB(255, 0, 0)
     Else
        Lbl_SNCR.ForeColor = RGB(0, 0, 0)
     End If
End Sub

Private Sub UserForm_Activate()
NumImv = TxtNrImovel + 32
Application.ScreenUpdating = False

With xl2Prop
      Me.txtNIRF = .Range("AI" & NumImv).value 'NIRF (N|fffd|mero do im|fffd|vel na Receita Federal).
      Me.txtCEI = .Range("AJ" & NumImv).value 'Matr|fffd|cula CEI (Cadastro Espec|fffd|fico do INSS).
      Me.txtSNCR = .Range("AK" & NumImv).value 'C|fffd|digo SNCR (C|fffd|digo no Sistema Nacional de Cadastro Rural).
      Me.txtCAR = .Range("AL" & NumImv).value 'N|fffd|mero Registro CAR (N|fffd|mero de registro no Cadastro Ambiental Rural)
End With

End Sub
Private Sub cmdSalvar_Click()
    Dim protPlan As clsProtecao
    Dim strNIRF, strCEI, strSNCR, strCAR As String
    
    Set protPlan = New clsProtecao
     
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    
    strNIRF = Me.txtNIRF
    strCEI = Me.txtCEI
    strSNCR = Me.txtSNCR
    strCAR = Me.txtCAR
    
    With xl2Prop
          .Range("AI" & NumImv).value = strNIRF 'NIRF (N|fffd|mero do im|fffd|vel na Receita Federal).
          .Range("AJ" & NumImv).value = strCEI 'Matr|fffd|cula CEI (Cadastro Espec|fffd|fico do INSS).
          .Range("AK" & NumImv).value = strSNCR 'C|fffd|digo SNCR (C|fffd|digo no Sistema Nacional de Cadastro Rural).
          .Range("AL" & NumImv).value = strCAR  'N|fffd|mero Registro CAR (N|fffd|mero de registro no Cadastro Ambiental Rural)
    
          .Range("P" & NumImv).ClearComments
          .Range("P" & NumImv).AddComment                                 ' Criar coment|fffd|rio com  a finalidade, Atividade, Modalidade e Variedade do empreendimento
          .Range("P" & NumImv).Comment.Visible = False
          .Range("P" & NumImv).Comment.text text:="NIRF: " & strNIRF & Chr(10) & _
                                                "Matr|fffd|cula CEI: " & strCEI & Chr(10) & _
                                                "C|fffd|digo SNCR: " & strSNCR & Chr(10) & _
                                                "N|fffd|mero Registro CAR: " & strCAR
        'aumentar a caixa de coment|fffd|rio
        .Range("P" & NumImv).Comment.Shape.ScaleHeight 1.1, msoFalse, msoScaleFromTopLeft
        .Range("P" & NumImv).Comment.Shape.ScaleWidth 1.8, msoFalse, msoScaleFromTopLeft
        .Range("P" & NumImv).Comment.Visible = False
    
    
    End With
protPlan.ProtegePlanilha
Unload Me

End Sub
Private Sub cmdCancelar_Click()
Unload Me
End Sub

Attribute VB_Name = "frmOrca"
Attribute VB_Base = "0{265BD0C6-2CBF-44BD-964A-053E70C82D55}{11FF198B-1974-497C-BB83-BE29DD80ED65}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub btnCancel_Click()
        Unload Me
End Sub

Private Sub btnOk_Click()

        'lngSqOrca = Sequencial do or|fffd|amento
        'Preenche os campos do or|fffd|amento, utilizando a base do PRONAF,
        'agrupando os valores dos insumos nos sub-grupos
        If IsNull(lstOrca.value) Then
           MsgBox "Selecione um or|fffd|amento da lista", vbExclamation
           Exit Sub
        End If
        
        Dim xlPlan As String
        Dim lngLinSel, lngLinBD, lngTotOrc, lLngLinRel, lngSqOrcax As Long
        Dim TpOrcax As Byte
        Dim tpCargax As Byte
        Dim OrdOrcax As Byte
        Dim NmOrcx As String
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        
        flagBusca = 1
        xlPlan = ActiveSheet.Name
        lngSqOrcax = lstOrca.value
        'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017
        TpOrcax = IIf(Optate1milhao.value, 1, 0)
        'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017
        
        OrdOrcax = CInt(xl1Orca.Range("A11").value)
      
        CarregaOrca lngSqOrcax, OrdOrcax, TpOrcax, 1   ', ""
        'ORDENAR PARA COMPARAR
        'OrdenarOr|fffd|amento CInt(OrdOrcax), 1
        
        CarregaOrca lngSqOrcax, OrdOrcax, TpOrcax, 0    ', ""
        'ORDENAR PARA COMPARAR
        'OrdenarOr|fffd|amento CInt(OrdOrcax), 0
        
        'OrdOrcax - Nro do Or|fffd|amento (1 a 10)
        'TpOrcax  - Tipo de Or|fffd|amento ( 0 - Pronaf e 1 - At|fffd| 1 milh|fffd|o)
        'TpCargax - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
        
        
        If TpOrcax = 1 Then    ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o INI
          StrAbaOrc = "BD_ORC1"
          StrRefOrc = "listaORCA_SQ1"
        Else
          StrAbaOrc = "BD_ORC"
          StrRefOrc = "listaORCA_SQ"
        End If
                
        'bd1Orca.Activate            ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        Sheets(StrAbaOrc).Activate   ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        protPlan.ProtegePlanilha
        bdRel1.Activate
        protPlan.ProtegePlanilha
        Sheets([xlPlan]).Activate
        protPlan.FinalizaRotina
        Application.StatusBar = False
        
'        If Range("totalORCA" & Format(Range("A11").value, "00")).value > 0 And xl2Prop.Range("E10").value <> "Sim" Then
'            ActiveSheet.Shapes("Caixa de Grupo 739").Visible = True
'            ActiveSheet.Shapes("Drop-down 738").Visible = True
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = True
'
'            Dim ListaPosicao() As String
'            ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
'
'            DoEvents
'
'            ActiveSheet.Shapes("Caixa de Grupo 739").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top
'            ActiveSheet.Shapes("Drop-down 738").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 10
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 35
'
'            ActiveSheet.Shapes("Caixa de Grupo 739").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 10
'            ActiveSheet.Shapes("Drop-down 738").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 20
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 19
'
'        Else
'            ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
'            ActiveSheet.Shapes("Drop-down 738").Visible = False
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
'        End If

        'mdlCultivar.comentarioToneladaBC
'        If xl2Prop.Range("E10").value = "Sim" Then
'           Alterar_Parcelas CInt(Format(Range("A11").value, "00"))
'        End If
        Extrativismo CInt(Format(Range("A11").value, "00"))
        TelaOrcaPinta CInt(Format(Range("A11").value))  ' Demanda GSOL01037532 - RNM - OUT-2016 INI

        
        protPlan.ProtegePlanilha
        Set protPlan = Nothing
        Unload Me
End Sub

Private Sub btnPesq_Click()
        Dim txtPesq1 As String, txtPesq2 As String, txtPesq3 As String
        Dim StrAbaOrc As String, StrRefOrc As String  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        Dim StrRefOrc_ As String
        Dim ArrayBD1(3) As String
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        Application.EnableEvents = False
        protPlan.IniciaRotina True
        lstOrca.ControlSource = ""
        txtPesq1 = Trim(txtOrca.text)
        txtPesq2 = Trim(cboUF.text)
        txtPesq3 = Trim(cboREG.text)
        bd1.Activate
        protPlan.DesprotegePlanilha
        bd1.Range("AH2:AN65000").Clear
        ArrayBD1(1) = "AH": ArrayBD1(2) = "AJ": ArrayBD1(3) = "AK"
        
        'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017
        If Optate1milhao.value Then    ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o INI
          StrAbaOrc = "BD_ORC1"
          StrRefOrc = "listaORCA_SQ1"
          StrRefOrc_ = "listaORCA_SQ1"
        Else
          StrAbaOrc = "BD_ORC"
          StrRefOrc = "listaORCA_SQ"
          StrRefOrc_ = "listaORCA_SQ0"
        End If                         ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o FIM
                 
        Sheets(StrAbaOrc).Activate   ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        protPlan.DesprotegePlanilha
        
        Sheets(StrAbaOrc).Range(StrRefOrc).Select ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        
        If Len(txtPesq1) > 0 And optInicio.value = True Then Selection.AutoFilter Field:=2, Criteria1:="=" & txtPesq1 & "*", Operator:=xlAnd
        If Len(txtPesq1) > 0 And optMeio.value = True Then Selection.AutoFilter Field:=2, Criteria1:="=*" & txtPesq1 & "*", Operator:=xlAnd
        If Len(txtPesq2) > 0 Then Selection.AutoFilter Field:=4, Criteria1:="=*" & txtPesq2 & "*", Operator:=xlAnd
        If Len(txtPesq3) > 0 Then Selection.AutoFilter Field:=6, Criteria1:="=" & txtPesq3 & "*", Operator:=xlAnd
        'Sheets(StrAbaOrc).Range(StrRefOrc).Select  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
         
        For i = 1 To 3
           Sheets(StrAbaOrc).Activate   ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
           protPlan.DesprotegePlanilha
           Sheets(StrAbaOrc).Range(StrRefOrc_ & [i]).Select   'parei aqui
           Selection.Copy
           bd1.Select
           bd1.Range(ArrayBD1([i]) & "1").Select
           Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
           Application.CutCopyMode = False
        Next i
         
         
'        Selection.Copy
'        bd1.Select
'        bd1.Range("AH1").Select
'        Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
'        Application.CutCopyMode = False
        
        LI = 1
        Do While bd1.Range("AH" & [LI]).value <> vbNullString
           bd1.Range("AK" & [LI]).value = bd1.Range("AO" & [LI]).value
           bd1.Range("AO" & [LI]).ClearContents
           LI = LI + 1
        Loop
        
        bd1.Range("AJ2").Select
        bd1.Range(Selection, Selection.End(xlDown)).Select
        Selection.NumberFormat = "#,##0.00"
        
        If LI > 2 Then
           ActiveWorkbook.Names.Add Name:="listaORCA_F", RefersToR1C1:= _
                          "=bd1!R2C34:R" & [LI] - 1 & "C40"
        Else
           ActiveWorkbook.Names.Add Name:="listaORCA_F", RefersToR1C1:= _
                          "=bd1!R2C34:R2C40"
        End If
        Range("listaORCA_F").Select
        Selection.Sort Key1:=Range("AI2"), Order1:=xlAscending, Header:=xlGuess, _
              OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        lstOrca.RowSource = "listaORCA_F"
       
        'bd1Orca.Activate                   ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        Sheets(StrAbaOrc).Activate          ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        Selection.AutoFilter
        protPlan.ProtegePlanilha
        bd1.Activate
        protPlan.ProtegePlanilha
        xl1Orca.Activate
        lstOrca.SetFocus
        protPlan.FinalizaRotina
        Application.EnableEvents = True
        Set protPlan = Nothing
End Sub

Private Sub cboUF_Change()
        cboREG.Enabled = True
End Sub

Private Sub cboUF_Exit(ByVal Cancel As MSForms.ReturnBoolean)
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        cboREG.text = ""
        If Trim(cboUF.text) = vbNullString Then
           cboREG.Enabled = False
           Exit Sub
        End If
        protPlan.IniciaRotina True
        bd1.Activate
        protPlan.DesprotegePlanilha
        bd1.Range("AA1:AD1000").Clear
        xl99Auxi.Activate
        protPlan.DesprotegePlanilha
        xl99Auxi.Range("listaMESO_REG").Select
        Selection.AutoFilter Field:=1, Criteria1:="=*" & cboUF.value & "*", Operator:=xlAnd
        xl99Auxi.Range("listaMESO_REG").Select
        Selection.Copy
        bd1.Select
        bd1.Range("AA1").Select
        Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
        Application.CutCopyMode = False
        LI = 1
        Do While bd1.Range("AA" & [LI]).value <> vbNullString
           LI = LI + 1
        Loop
        If LI > 2 Then
           ActiveWorkbook.Names.Add Name:="listaMESO_REG1", RefersToR1C1:= _
               "=bd1!R2C29:R" & [LI] - 1 & "C29"
        Else
           ActiveWorkbook.Names.Add Name:="listaMESO_REG1", RefersToR1C1:= _
               "=bd1!R2C29:R2C29"
        End If
        cboREG.RowSource = "listaMESO_REG1"
        cboREG.Enabled = True
        xl99Auxi.Activate
        Selection.AutoFilter
        protPlan.ProtegePlanilha
        bd1.Activate
        protPlan.ProtegePlanilha
        xl1Orca.Activate
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub


Private Sub lstOrca_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
        btnOk_Click
End Sub


Private Sub lstOrca_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
        If KeyCode = 13 Then
           KeyCode = 0
           btnOk_Click
        End If
End Sub

Private Sub UserForm_Activate()
    'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017 ini
    If (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
       Optate1milhao.Enabled = True
       OptPronaf.Enabled = True
       Optate1milhao.value = True
    Else
      If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or xl2Prop.Range("portePROD") = 2) Then
         OptPronaf.Enabled = True
         Optate1milhao.Enabled = False
         OptPronaf.value = True
      Else
         OptPronaf.Enabled = True
         Optate1milhao.Enabled = True
         OptPronaf.value = True
      End If
    End If
    'Inicializar o option de in|fffd|cio
    optInicio.value = True
    'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017 fim
End Sub

Private Sub UserForm_Terminate()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        Range("NomeOrca" & Format(Range("A11").value, "00")).Select  ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub

Attribute VB_Name = "frmPlantioColheita"
Attribute VB_Base = "0{761C63BE-E0F9-415F-BCD8-1DC48D21E8CC}{CAF59AA1-4894-4543-ADA4-4345679ACCC5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Attribute VB_Name = "frmRelMode"
Attribute VB_Base = "0{97246A56-8CC4-4E2D-B91E-3FD8C1773208}{EB3CF5C6-11AC-4899-8794-2F45ADB2E5EC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


















Private Sub chkAllOrca_Click()
        Dim lngOrca As Long
        For lngOrca = 1 To lstOrca.ListCount
            lstOrca.Selected(lngOrca - 1) = chkAllOrca.value
        Next lngOrca
End Sub




Private Sub chkRelOrca_Click()
        If Range("flagORCA_V").value = 0 Then
           MsgBox "Proposta sem or|fffd|amentos valorizados.", vbExclamation
           chkRelOrca.value = 0
           Exit Sub
        End If
        fraOrca.Visible = chkRelOrca.value
        chkRelOrca2.Enabled = chkRelOrca.value
        If fraOrca.Visible Then
           Me.Height = 317.5
        Else
           Me.Height = 180.25
        End If
        Application.ScreenUpdating = True
        DoEvents
        Application.ScreenUpdating = False
End Sub

Private Sub chkRelProp_Click()
        chkPropMode.Enabled = chkRelProp.value
End Sub

Private Sub cmdCancel_Click()
        xl0Menu.Activate
        Range("N5:N9").value = 0
        Unload Me
End Sub

Private Sub cmdPrint_Click()
        Me.Hide
        If chkRelCoodGeod.value = True Then
          If bd10Geodesica.Range("BJ99").value = 0 Then
                MsgBox "N|fffd|o h|fffd| dados de Coordenadas Geodesicas cadastrado", vbInformation, "Aviso"
                Exit Sub
          End If
           RelCoodGeod
           'Application.ScreenUpdating = False
        End If
        
        If chkRelOrca.value = True Then relORCA_X
        If chkRelProp.value = True Then
           If chkPropMode.value = True Then
              relPROP2
           Else
              relPROP1
           End If
        End If
        If chkRelRece.value = True Then relProponentes
        If chkRelInfComp.value = True Then Rel_InfComplInv
        
        'GSOL01921690-Rel C|fffd|LCULO DA PARCELA DE GARANTIA DE RENDA M|fffd|NIMA (GRM). INI RNM
        If chkRelGRM.value = True Then RelGRM
        'GSOL01921690-Rel C|fffd|LCULO DA PARCELA DE GARANTIA DE RENDA M|fffd|NIMA (GRM). FIM RNM
        
        Application.ScreenUpdating = True
        DoEvents
        Application.ScreenUpdating = False
        Me.Show
End Sub


Private Sub UserForm_Initialize()
        If Range("TP_PROP").value = 3 Then
           chkRelRece.Enabled = False
        Else
           chkRelRece.Enabled = True
        End If
        If Range("flagORCA_V").value = 0 Then
           chkRelOrca.Enabled = False
           chkRelInfComp.Enabled = False
        Else
           chkRelOrca.Enabled = True
           chkRelInfComp.Enabled = True
        End If
End Sub

Private Sub UserForm_Terminate()
        xl0Menu.Activate
        Range("N5:N9").value = 0
End Sub

Sub relProponentes()
    If Range("TP_PROP").value = 3 Then
       MsgBox "Relat|fffd|rio n|fffd|o dispon|fffd|vel para Proposta Individual", vbExclamation
       Exit Sub
    End If
    Dim xlPlan As String
    Dim lngLinSel As Long, lngLinBD As Long, lngTotBene As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True
    xl7RelBene.Activate
    protPlan.DesprotegePlanilha
    bd4Benef.Activate
    lngTotBene = Range("FIM_BCLI")
    xl7RelBene.Activate
    lngLinSel = 34
    lngLinBD = 2
    Do While lngLinBD <= lngTotBene
       Range("C" & [lngLinSel]).value = bd4Benef.Range("F" & [lngLinBD]).value
       Range("H" & [lngLinSel]).value = bd4Benef.Range("H" & [lngLinBD]).value
       Range("J" & [lngLinSel]).value = bd4Benef.Range("J" & [lngLinBD]).value
       lngLinSel = lngLinSel + 1
       If lngLinBD = lngTotBene Then Exit Do
       Rows([lngLinSel]).Insert
       Rows([lngLinSel] - 1).Copy
       Rows([lngLinSel]).Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       lngLinBD = lngLinBD + 1
    Loop
    ActiveSheet.PageSetup.PrintArea = "C3:P" & [lngLinSel] + 1
    ActiveSheet.PageSetup.PrintTitleRows = "$3:$33"
    ActiveSheet.PrintOut
    xl7RelBene.Activate
    lngLinSel = 35
    While Range("A" & [lngLinSel]).value = 1
          Rows([lngLinSel]).Delete
    Wend
    Range("C34:P34").ClearContents
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub relPROP1()
    Dim xlPlan As String, lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True

    Dim criticaProjeto As Integer
    criticaProjeto = ValidaSEAP
    If criticaProjeto <> 0 Then
       If MsgBox("Foram encontradas inconsist|fffd|ncias no plano." & vbCrLf & _
                 "Gerar o relat|fffd|rio mesmo assim?", vbQuestion + vbYesNo, ":: Planilha de Custeio") = vbNo Then
          protPlan.ProtegePlanilha
          Sheets([xlPlan]).Activate
          protPlan.FinalizaRotina
          Set protPlan = Nothing
          Exit Sub
       End If
    End If

    xl6Prop.Activate
    protPlan.DesprotegePlanilha
    Rows("219:219").EntireRow.AutoFit
    Rows("225:225").EntireRow.AutoFit
    ActiveSheet.PageSetup.PrintArea = "$C$3:$P$276"
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$3:$4"
'        .LeftMargin = Application.InchesToPoints(0.393700787401575)
'        .RightMargin = Application.InchesToPoints(0.393700787401575)
'        .TopMargin = Application.InchesToPoints(0.196850393700787)
'        .BottomMargin = Application.InchesToPoints(0.590551181102362)
'        .HeaderMargin = Application.InchesToPoints(0.590551181102362)
'        .FooterMargin = Application.InchesToPoints(0.708661417322835)
'        .FitToPagesWide = 1
'        .FitToPagesTall = 1
'        '.PrintErrors = xlPrintErrorsDisplayed
    End With
    ActiveSheet.PrintOut
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Private Sub relPROP2()
    Dim xlPlan As String, lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True

    Dim criticaProjeto As Integer
    criticaProjeto = ValidaSEAP
    If criticaProjeto <> 0 Then
       If MsgBox("Foram encontradas inconsist|fffd|ncias no plano." & vbCrLf & _
                 "Gerar o relat|fffd|rio mesmo assim?", vbQuestion + vbYesNo, ":: Planilha de Custeio") = vbNo Then
          protPlan.ProtegePlanilha
          Sheets([xlPlan]).Activate
          protPlan.FinalizaRotina
          Set protPlan = Nothing
          Exit Sub
       End If
    End If

    xl6Prop.Activate
    protPlan.DesprotegePlanilha
    Rows("219:219").EntireRow.AutoFit
    Rows("225:225").EntireRow.AutoFit
    ActiveSheet.PageSetup.PrintArea = "$C$3:$P$112"
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$3:$4"
'        .LeftMargin = Application.InchesToPoints(0.393700787401575)
'        .RightMargin = Application.InchesToPoints(0.393700787401575)
'        .TopMargin = Application.InchesToPoints(0.196850393700787)
'        .BottomMargin = Application.InchesToPoints(0.590551181102362)
'        .HeaderMargin = Application.InchesToPoints(0.590551181102362)
'        .FooterMargin = Application.InchesToPoints(0.708661417322835)
'        .FitToPagesWide = 1
'        .FitToPagesTall = 1
'        '.PrintErrors = xlPrintErrorsDisplayed
'        .RightFooter = "&""MS Sans Serif,Regular""&8 1/2"
    End With
    ActiveSheet.PrintOut
    ActiveSheet.PageSetup.PrintArea = "$C$112:$P$276"
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$3:$4"
'        .LeftMargin = Application.InchesToPoints(0.393700787401575)
'        .RightMargin = Application.InchesToPoints(0.393700787401575)
'        .TopMargin = Application.InchesToPoints(0.196850393700787)
'        .BottomMargin = Application.InchesToPoints(0.590551181102362)
'        .HeaderMargin = Application.InchesToPoints(0.590551181102362)
'        .FooterMargin = Application.InchesToPoints(0.708661417322835)
'        .FitToPagesWide = 1
'        .FitToPagesTall = 1
'        '.PrintErrors = xlPrintErrorsDisplayed
'        .RightFooter = "&""MS Sans Serif,Regular""&8 2/2"
    End With
    ActiveSheet.PrintOut
    ActiveSheet.PageSetup.RightFooter = "&""MS Sans Serif,Regular""&8&P/&N"
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing

End Sub

Private Sub relORCA_X()
        If chkRelOrca2.value = True Then
           relORCA_Todos
           xl0Menu.Activate
           Exit Sub
        End If
        Dim lngOrca As Long, iOrca As Long
        Dim SourceData As Range
        Set SourceRange = Range(lstOrca.RowSource)
        For lngOrca = 0 To lstOrca.ListCount - 1
            If lstOrca.Selected([lngOrca]) = True Then
               iOrca = xl99Auxi.Range("G" & [lngOrca] + 2).value
               Range("flagRELATORIO").value = 1
               relORCA (iOrca)
            End If
        Next lngOrca
        Range("flagRELATORIO").value = 0
        xl0Menu.Activate
End Sub

Sub RelGRM()
    Dim xlPlan As String
    Dim lngLinSel As Long, lngLinBD As Long, lngTotBene As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True
    xl9RelGRM.Activate
   
    ActiveSheet.PageSetup.PrintArea = "B1:K53"
    'ActiveSheet.PageSetup.PrintTitleRows = "$3:$33"
    ActiveSheet.PrintOut
    
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing

End Sub
Attribute VB_Name = "frmSelBenef"
Attribute VB_Base = "0{DDB12D86-5B00-49D7-81D9-D26E0DFC1AA6}{DB8CA1F3-7D8A-4BE5-868D-2029ECA9614D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnCancel_Click()
        Unload Me
End Sub

Private Sub btnOk_Click()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        If Range("FLAG_DEL_BNF").value = 1 Then
           excluiProponente
        Else
           exibeProponente
        End If
        
Fim:
        Range("FLAG_DEL_BNF").value = 0
        Range("E9").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Unload Me
End Sub

Private Sub lstProp_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
        btnOk_Click
End Sub

Private Sub UserForm_Initialize()
        On Error GoTo Fim
        lstProp.ListIndex = 0
        If Range("FLAG_DEL_BNF").value = 1 Then
           btnOk.Caption = "Exclui"
        Else
           btnOk.Caption = "OK"
        End If
        Exit Sub
Fim:
        MsgBox "N|fffd|o existem benefici|fffd|rios cadastrados!", vbExclamation + vbOKOnly, "Planilha Pronaf"
        Unload Me
End Sub

Private Sub UserForm_Terminate()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        On Error Resume Next
        Application.DisplayAlerts = False
        Sheets("tmp").Delete
        Application.DisplayAlerts = True
        On Error GoTo 0
        xl3Bene.Activate
        Range("FLAG_DEL_BNF").value = 0
        Range("E9").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub

Private Sub exibeProponente()
        Dim lngLinSel As Long
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        bd4Benef.Activate
        lngLinSel = 2
        '- localiza o registro e seta os valores
        Do While lngLinSel <= Range("FIM_BCLI").value
           If Range("H" & [lngLinSel]).value = lstProp.value Then Exit Do
           lngLinSel = lngLinSel + 1
        Loop
        If lngLinSel > Range("FIM_BCLI").value Then
           MsgBox "Erro interno. Benefici|fffd|rio n|fffd|o localizado!", vbExclamation + vbOKOnly, "SEAP-PRONAF A"
           xl3Bene.Activate
           Set protPlan = Nothing
           Exit Sub
        End If
        xl3Bene.Activate
        protPlan.DesprotegePlanilha
        Range("flagBNF").value = 1
        Range("E9").value = bd4Benef.Range("F" & [lngLinSel]).value
        Range("E10").value = bd4Benef.Range("G" & [lngLinSel]).value
        Range("CPF_CGC_BNF").value = bd4Benef.Range("H" & [lngLinSel]).value
        Range("E12").value = bd4Benef.Range("I" & [lngLinSel]).value
        Range("E13").value = bd4Benef.Range("J" & [lngLinSel]).value
        Range("E14").value = bd4Benef.Range("K" & [lngLinSel]).value
        Range("E15").value = bd4Benef.Range("L" & [lngLinSel]).value
        Range("E16").value = bd4Benef.Range("M" & [lngLinSel]).value
        Range("E17").value = bd4Benef.Range("N" & [lngLinSel]).value
        Range("E18").value = bd4Benef.Range("O" & [lngLinSel]).value
        Range("E19").value = bd4Benef.Range("P" & [lngLinSel]).value
        Range("E20").value = bd4Benef.Range("R" & [lngLinSel]).value
        Range("E21").value = bd4Benef.Range("T" & [lngLinSel]).value
        Range("E23").value = bd4Benef.Range("X" & [lngLinSel]).value
        Range("E24").value = bd4Benef.Range("Y" & [lngLinSel]).value
        Range("E33").value = bd4Benef.Range("AA" & [lngLinSel]).value
        Range("E34").value = bd4Benef.Range("AB" & [lngLinSel]).value
        Range("E35").value = bd4Benef.Range("AC" & [lngLinSel]).value
        Range("E36").value = bd4Benef.Range("AD" & [lngLinSel]).value
        Range("E37").value = bd4Benef.Range("AE" & [lngLinSel]).value
        Range("E38").value = bd4Benef.Range("AF" & [lngLinSel]).value
        Range("E40").value = bd4Benef.Range("AI" & [lngLinSel]).value
        Range("E41").value = bd4Benef.Range("AJ" & [lngLinSel]).value
        Range("E25").value = bd4Benef.Range("AK" & [lngLinSel]).value
        Range("E26").value = bd4Benef.Range("AL" & [lngLinSel]).value
        
        Range("E58").value = bd4Benef.Range("AO" & [lngLinSel]).value
        Range("E59").value = bd4Benef.Range("AP" & [lngLinSel]).value
        Range("E60").value = bd4Benef.Range("AQ" & [lngLinSel]).value
        Range("E61").value = bd4Benef.Range("AR" & [lngLinSel]).value
        Range("E62").value = bd4Benef.Range("AS" & [lngLinSel]).value
        Range("E63").value = bd4Benef.Range("AT" & [lngLinSel]).value
        Range("E64").value = bd4Benef.Range("AU" & [lngLinSel]).value
        Range("E65").value = bd4Benef.Range("AV" & [lngLinSel]).value
        Range("E66").value = bd4Benef.Range("AW" & [lngLinSel]).value
        Range("E67").value = bd4Benef.Range("AY" & [lngLinSel]).value
        Range("E68").value = bd4Benef.Range("BA" & [lngLinSel]).value
        Range("E69").value = bd4Benef.Range("BC" & [lngLinSel]).value
        Range("E70").value = bd4Benef.Range("BD" & [lngLinSel]).value
        Range("E71").value = bd4Benef.Range("BF" & [lngLinSel]).value
        Range("E72").value = bd4Benef.Range("BG" & [lngLinSel]).value
         
        Range("E75").value = bd4Benef.Range("BR" & [lngLinSel]).value
        If bd4Benef.Range("BS" & [lngLinSel]).value <> 3 Then
           Range("C75").value = "Avalista:"
        Else
           Range("C75").value = "Fiador:"
        End If
        Range("E76").value = bd4Benef.Range("BT" & [lngLinSel]).value
        Range("E77").value = bd4Benef.Range("BU" & [lngLinSel]).value
        Range("E78").value = bd4Benef.Range("BV" & [lngLinSel]).value
        Range("E80").value = bd4Benef.Range("BW" & [lngLinSel]).value
        If bd4Benef.Range("BX" & [lngLinSel]).value = 3 Then
           Range("C80").value = "Fiador:"
        Else
           Range("C80").value = "Avalista:"
        End If
        Range("E81").value = bd4Benef.Range("BY" & [lngLinSel]).value
        Range("E82").value = bd4Benef.Range("BZ" & [lngLinSel]).value
        Range("E83").value = bd4Benef.Range("CA" & [lngLinSel]).value
         
        Range("E98").value = bd4Benef.Range("CB" & [lngLinSel]).value
        Range("E99").value = bd4Benef.Range("CD" & [lngLinSel]).value
        Range("E100").value = bd4Benef.Range("CF" & [lngLinSel]).value
        Range("E101").value = bd4Benef.Range("CH" & [lngLinSel]).value
        Range("E102").value = bd4Benef.Range("CJ" & [lngLinSel]).value
         
        Range("E114").value = bd4Benef.Range("CL" & [lngLinSel]).value
        Range("E115").value = bd4Benef.Range("CM" & [lngLinSel]).value
        Range("E124").value = bd4Benef.Range("CN" & [lngLinSel]).value
        Range("E125").value = bd4Benef.Range("CO" & [lngLinSel]).value
        
        'Ara|fffd|jo
        Range("E27").value = bd4Benef.Range("CU" & [lngLinSel]).value  'PORTE
        Range("E28").value = bd4Benef.Range("CW" & [lngLinSel]).value  'DAP
        Range("E32").value = bd4Benef.Range("CX" & [lngLinSel]).value  'TP_LOG_END
        Range("E45").value = bd4Benef.Range("CZ" & [lngLinSel]).value  'TP_LOG_CORRESP
        Range("E46").value = bd4Benef.Range("DA" & [lngLinSel]).value  'END_CORR
        Range("E47").value = bd4Benef.Range("DB" & [lngLinSel]).value  'NUM_CORR
        Range("E48").value = bd4Benef.Range("DC" & [lngLinSel]).value  'COMPL_CORR
        Range("E49").value = bd4Benef.Range("DD" & [lngLinSel]).value  'BAIRRO_CORR
        Range("E50").value = bd4Benef.Range("DE" & [lngLinSel]).value  'CEP_CORR
        Range("E51").value = bd4Benef.Range("DF" & [lngLinSel]).value  'MUNI_CORR
        Range("E53").value = bd4Benef.Range("DI" & [lngLinSel]).value  'DD_CORR
        Range("E54").value = bd4Benef.Range("DJ" & [lngLinSel]).value  'TEL_CORR
        Range("O44").value = bd4Benef.Range("CY" & [lngLinSel]).value
        protPlan.DesprotegePlanilha
        If Left(Range("E19").value, 9) = "Casado(a)" _
           Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
           Range("A55:A72").EntireRow.Hidden = False
           Range("E66").value = Range("E19").value
        Else
           Range("E58:E72").value = ""
           Range("A55:A72").EntireRow.Hidden = True
        End If
        If bd4Benef.Range("CP" & [lngLinSel]).value <> "0" Then
           Range("P8").value = 2
           Range("A12:A24").EntireRow.Hidden = False
           Range("A32:A35").EntireRow.Hidden = False
        Else
           Range("P8").value = 1
           Range("A12:A24").EntireRow.Hidden = True
           Range("A32:A35").EntireRow.Hidden = True
        End If
        cboBenef_Altera|fffd||fffd|o
        protPlan.DesprotegePlanilha
        Range("A22").EntireRow.Hidden = True
        Range("flagBNF").value = 0
        preencherDadosCorrespondencia 1
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub

Private Sub excluiProponente()
        Dim lngLinSel As Long, lngColSel As Long
        Dim lb_Vazio As Boolean
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        If Range("FIM_BCLI").value >= 2 Then
           bd4Benef.Activate
           protPlan.DesprotegePlanilha
           lngLinSel = 2
           Do While lngLinSel <= Range("FIM_BCLI").value
              If Range("H" & [lngLinSel]).value = lstProp.value Then Exit Do
              lngLinSel = lngLinSel + 1
           Loop
           If lngLinSel > Range("FIM_BCLI").value Then
              MsgBox "Erro interno. Benefici|fffd|rio n|fffd|o localizado!", vbExclamation + vbOKOnly, "SEAP-PRONAF A"
              xl3Bene.Activate
              Set protPlan = Nothing
              Exit Sub
           End If
        Else
           MsgBox "N|fffd|o existem benefici|fffd|rios cadastrados." & vbCrLf & _
                  "Utilize o bot|fffd|o [Incluir] para cadastrar.", vbExclamation
           GoTo Fim
        End If
         
        If MsgBox("Confirma exclus|fffd|o dos dados do benefici|fffd|rio:" & vbCrLf & vbCrLf & _
           "Nome: " & Range("F" & [lngLinSel]).value & vbCrLf & _
           "C.P.F.: " & Range("H" & [lngLinSel]).value, vbQuestion + vbYesNo, "Exclus|fffd|o") = vbNo _
           Then GoTo Fim
         
        Rows([lngLinSel]).Delete
        Range("A1").FormulaLocal = "=CONT.N|fffd|M(B2:$B$50000)+1"
        Calculate
        lngLinSel = Range("FIM_BCLI").value
        If lngLinSel = 2 Then
           Range("B2").value = "1"
        Else
           If lngLinSel = 1 Then
              Range("B2").Select
           ElseIf lngLinSel = 3 Then
              Range("B2").FormulaR1C1 = "1"
              Range("B3").FormulaR1C1 = "2"
           Else
              Range("B2").FormulaR1C1 = "1"
              Range("B3").FormulaR1C1 = "2"
              Range("B2:B3").Select
              Selection.AutoFill Destination:=Range(["B2"], "B" & [lngLinSel]), Type:=xlFillValues
           End If
        End If
        protPlan.ProtegePlanilha
        xl3Bene.Activate
        Range("FLAG_DEL_BNF").value = 0
        limpaBene
        MsgBox "Benefici|fffd|rio exclu|fffd|do", vbInformation
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Exit Sub
 
Fim:
        On Error GoTo 0
        bd4Benef.Activate
        Range("A1").Select
        protPlan.ProtegePlanilha
        xl99Auxi.Activate
        protPlan.ProtegePlanilha
        xl3Bene.Activate
        Range("E9").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub
Attribute VB_Name = "frmSelCoob"
Attribute VB_Base = "0{743381C5-74FA-4856-B82F-545F56A194AA}{DE0AEEED-F46F-4F9F-87EB-9EF53FFC7295}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
















Private Sub btnCancel_Click()
        Unload Me
End Sub

Private Sub btnOk_Click()
        If Range("flagEXCLUI_COOB").value = 1 Then
           excluiCoob
        Else
           mostraCoob
        End If
End Sub

Private Sub lstModelos_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
        btnOk_Click
End Sub

Private Sub UserForm_Initialize()
        On Error GoTo Fim
        lstCoob.ListIndex = 0
        If Range("flagEXCLUI_COOB").value = 1 Then
           btnOk.Caption = "Excluir"
        Else
           btnOk.Caption = "OK"
        End If
        Exit Sub
Fim:
        MsgBox "N|fffd|o existem coobrigados cadastrados!", vbExclamation + vbOKOnly, "Planilha Pronaf"
        Unload Me
End Sub

Private Sub UserForm_Terminate()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        xl5Coob.Activate
        Range("flagEXCLUI_COOB").value = 0
        Range("E9").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
End Sub

Private Sub mostraCoob()
        Dim lngLinSel As Long
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        bd5Coob.Activate
        lngLinSel = 2
        '- localiza o registro e seta os valores
        Do While lngLinSel <= Range("FIM_COOB").value
           If Range("G" & [lngLinSel]).value = lstCoob.value Then Exit Do
           lngLinSel = lngLinSel + 1
        Loop
        If lngLinSel > Range("FIM_COOB").value Then
           MsgBox "Erro interno. Coobrigado n|fffd|o localizado!", vbExclamation + vbOKOnly, "SEAP-PRONAF A"
           xl5Coob.Activate
           Set protPlan = Nothing
           Exit Sub
        End If
        xl5Coob.Activate
        protPlan.DesprotegePlanilha
        Range("E11").value = bd5Coob.Range("F" & [lngLinSel]).value
        If bd5Coob.Range("E" & [lngLinSel]).value = 0 Then
           Range("E10").value = "Pessoa F|fffd|sica"
           Range("CPF_COOB").value = bd5Coob.Range("G" & [lngLinSel]).value
        Else
           Range("E10").value = "Pessoa Jur|fffd|dica"
           Range("CGC_COOB").value = bd5Coob.Range("G" & [lngLinSel]).value
        End If
        Range("E14").value = bd5Coob.Range("H" & [lngLinSel]).value
        Range("E15").value = bd5Coob.Range("I" & [lngLinSel]).value
        Range("E16").value = bd5Coob.Range("J" & [lngLinSel]).value
        Range("E17").value = bd5Coob.Range("K" & [lngLinSel]).value
        Range("E18").value = bd5Coob.Range("L" & [lngLinSel]).value
        Range("E19").value = bd5Coob.Range("M" & [lngLinSel]).value
        Range("E20").value = bd5Coob.Range("N" & [lngLinSel]).value
        Range("E21").value = bd5Coob.Range("P" & [lngLinSel]).value
        Range("E22").value = bd5Coob.Range("Q" & [lngLinSel]).value
        Range("E24").value = bd5Coob.Range("R" & [lngLinSel]).value
        Range("E25").value = bd5Coob.Range("S" & [lngLinSel]).value
        Range("E26").value = bd5Coob.Range("U" & [lngLinSel]).value
        Range("E27").value = bd5Coob.Range("V" & [lngLinSel]).value
        Range("E28").value = bd5Coob.Range("W" & [lngLinSel]).value
        Range("E29").value = bd5Coob.Range("X" & [lngLinSel]).value
        Range("E30").value = bd5Coob.Range("Y" & [lngLinSel]).value
        Range("E31").value = bd5Coob.Range("Z" & [lngLinSel]).value
        Range("E33").value = bd5Coob.Range("AC" & [lngLinSel]).value
        Range("E34").value = bd5Coob.Range("AD" & [lngLinSel]).value
        Range("E35").value = bd5Coob.Range("AE" & [lngLinSel]).value
        Range("E36").value = bd5Coob.Range("AF" & [lngLinSel]).value
        Range("E44").value = bd5Coob.Range("AG" & [lngLinSel]).value
        Range("E45").value = bd5Coob.Range("AH" & [lngLinSel]).value
        Range("E46").value = bd5Coob.Range("AI" & [lngLinSel]).value
        Range("E47").value = bd5Coob.Range("AJ" & [lngLinSel]).value
        Range("E48").value = bd5Coob.Range("AK" & [lngLinSel]).value
        Range("E49").value = bd5Coob.Range("AL" & [lngLinSel]).value
        Range("E50").value = bd5Coob.Range("AM" & [lngLinSel]).value
        Range("E51").value = bd5Coob.Range("AN" & [lngLinSel]).value
        Range("E52").value = bd5Coob.Range("AO" & [lngLinSel]).value
        Range("E53").value = bd5Coob.Range("AQ" & [lngLinSel]).value
        Range("E54").value = bd5Coob.Range("AR" & [lngLinSel]).value
        Range("E55").value = bd5Coob.Range("AS" & [lngLinSel]).value
        Range("E56").value = bd5Coob.Range("AT" & [lngLinSel]).value
        Range("E57").value = bd5Coob.Range("AV" & [lngLinSel]).value
        Range("E58").value = bd5Coob.Range("AW" & [lngLinSel]).value
        Range("E23").value = bd5Coob.Range("AX" & [lngLinSel]).value
        protPlan.DesprotegePlanilha
        If Left(Range("E20").value, 9) = "Casado(a)" _
           Or Left(Range("E20").value, 5) = "Uni|fffd|o" Then
           Range("A41:A59").EntireRow.Hidden = False
        Else
           Range("E52").value = ""
           Range("E41:L59").EntireRow.Hidden = True
           Range("A41:A59").EntireRow.Hidden = True
        End If
        Range("E10").Select
        Calculate
          
Fim:
        Range("E11").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Unload Me

End Sub

Private Sub excluiCoob()
        Dim lngLinSel As Long, lngColSel As Long
        Dim lb_Vazio As Boolean
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        If Range("FIM_COOB").value >= 2 Then
           bd5Coob.Activate
           protPlan.DesprotegePlanilha
           lngLinSel = 2
           Do While lngLinSel <= Range("FIM_COOB").value
              If Range("G" & [lngLinSel]).value = lstCoob.value Then Exit Do
              lngLinSel = lngLinSel + 1
           Loop
           If lngLinSel > Range("FIM_COOB").value Then
              MsgBox "Erro interno. Coobrigado n|fffd|o localizado!", vbExclamation + vbOKOnly, "SEAP-PRONAF A"
              xl5Coob.Activate
              Set protPlan = Nothing
              Exit Sub
           End If
        Else
            MsgBox "N|fffd|o existem coobrigados cadastrados." & vbCrLf & _
                   "Utilize o bot|fffd|o [Incluir] para cadastrar.", vbExclamation
            GoTo Fim
        End If
         
        Selection.AutoFilter
        If MsgBox("Confirma exclus|fffd|o dos dados do coobrigado:" & vbCrLf & vbCrLf & _
                  "Nome: " & Range("F" & [lngLinSel]).value & vbCrLf & _
                  "CPF/CNPJ: " & Range("G" & [lngLinSel]).value, vbQuestion + vbYesNo, "Exclus|fffd|o") = vbNo _
                  Then GoTo Fim
         
        Rows([lngLinSel]).Delete
        Range("A1").FormulaLocal = "=CONT.N|fffd|M(B2:$B$50000)+1"
        Calculate
        lngLinSel = Range("FIM_COOB").value
        If lngLinSel = 2 Then
           Range("B2").value = "1"
        Else
           If lngLinSel = 1 Then
              Range("B2").Select
           ElseIf lngLinSel = 3 Then
              Range("B2").FormulaR1C1 = "1"
              Range("B3").FormulaR1C1 = "2"
           Else
              Range("B2").FormulaR1C1 = "1"
              Range("B3").FormulaR1C1 = "2"
              Range("B2:B3").Select
              Selection.AutoFill Destination:=Range(["B2"], "B" & [lngLinSel]), Type:=xlFillValues
           End If
        End If
        protPlan.ProtegePlanilha
        xl5Coob.Activate
        Range("flagEXCLUI_COOB").value = 0
        btnNovoCoob_Clique
        MsgBox "Coobrigado exclu|fffd|do", vbInformation
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Unload Me
        Exit Sub
       
Fim:
        On Error GoTo 0
        bd5Coob.Activate
        Range("A1").Select
        protPlan.ProtegePlanilha
        xl99Auxi.Activate
        protPlan.ProtegePlanilha
        xl5Coob.Activate
        Range("E9").Select
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Unload Me
End Sub
Attribute VB_Name = "mdlAcesso"
'Quando s|fffd|o chamados "iniciaRotina" ininhados, n|fffd|o h|fffd| garantia que a forma
' de calculo permane|fffd|a "manual". Esse boleano faz essa garantia. Inicialmente
' est|fffd| sendo utilizado apenas no processo de importa|fffd||fffd|o de projetos.
Public manterManual As Boolean
Public FlagProp As Boolean


Private Sub Workbook_Open()
    manterManual = False
End Sub

Sub ProtegeAll()
    Dim xlPlanNome As String
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
    For Each xlPlan In Sheets
        xlPlanNome = xlPlan.Name
        Sheets([xlPlanNome]).Activate
        protPlan.ProtegePlanilha
    Next
    xl0Menu.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub


Sub NotProtegeAll()
    Dim xlPlanNome As String
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
    For Each xlPlan In Sheets
        xlPlanNome = xlPlan.Name
        Sheets([xlPlanNome]).Activate
        protPlan.DesprotegePlanilha
    Next
    Set protPlan = Nothing
End Sub

Sub Excluir_a()
 ActiveSheet.Unprotect Password:="senhasBN"
End Sub

Sub Processa_r()
  Application.ScreenUpdating = False
  Application.Calculation = xlCalculationManual
  ActiveSheet.Unprotect Password:="senhasBN"
End Sub

Sub Finaliza_Rotina()
  Application.Calculation = xlCalculationAutomatic
  ActiveSheet.Protect Password:="senhasBN"
End Sub
'Sprint 9 - RNM incluir busca de empreendimentos para enquadramento BACEN na aba Proposta 26/04/2016 INI
Sub EnquadBacen01()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree_Prop "1", Range("PropBacen" & 1).value, "0"
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
End Sub

Sub EnquadBacen02()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree_Prop "2", Range("PropBacen" & 2).value, "0"
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
End Sub

Sub EnquadBacen03()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree_Prop "3", Range("PropBacen" & 3).value, "0"
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
End Sub
Sub EnquadBacen04()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree_Prop "4", Range("PropBacen" & 4).value, "0"
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
End Sub
Sub EnquadBacen05()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree_Prop "5", Range("PropBacen" & 5).value, "0"
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
End Sub
'Sprint 9 - RNM incluir busca de empreendimentos para enquadramento BACEN na aba Proposta 26/04/2016 FIM

Sub CarregamentoRapido(habilitar As Boolean)
    
    If habilitar = True Then
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        Application.EnableEvents = False
        Application.DisplayAlerts = False
    Else
        Application.ScreenUpdating = True
        Application.Calculation = xlCalculationAutomatic
        Application.EnableEvents = True
        Application.DisplayAlerts = True
    End If
    
End Sub
Sub btnVoltar()
    xl1Orca.Activate
End Sub


Sub Edit_CampoFormula()

    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    Range("BH94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BH113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BI94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BI113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BJ94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BJ113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BK94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BK113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    
    Range("BO94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BO113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC7="""","""",EDATE(""01"" &""/""&LEFT(RC7,2)&""/"" & RIGHT(RC7,4),1)-1)"
    Range("BP94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BP113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC10="""","""",EDATE(""01"" &""/""&LEFT(RC10,2)&""/"" & RIGHT(RC10,4),1)-1)"
    Range("BQ94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BQ113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC13="""","""",EDATE(""01"" &""/""&LEFT(RC13,2)&""/"" & RIGHT(RC13,4),1)-1)"
    Range("BR94").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR95").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR96").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR97").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR98").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR99").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR100").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR101").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR102").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR103").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR104").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR105").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR106").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR107").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR108").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR109").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR110").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR111").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR112").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR113").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC16="""","""",EDATE(""01"" &""/""&LEFT(RC16,2)&""/"" & RIGHT(RC16,4),1)-1)"
    Range("BR114").Select
    
    protPlan.ProtegePlanilha
    
    Set protPlan = Nothing
 
End Sub

Attribute VB_Name = "mdlBenef"
Public Sub DesprotegerAtual()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.DesprotegePlanilha
    Set protPlan = Nothing
    MsgBox "Desprotegido!"
End Sub

Sub btnIncluiBenef_Clique()
    If Range("TP_PROP").value = 3 And _
       Range("FIM_BCLI").value > 1 Then
       MsgBox "Rotina desabilitada, por se tratar de Proposta do tipo Individual." & vbCrLf & _
              "Utilize o bot|fffd|o [Editar] para alterar os dados do Proponente, ou" & vbCrLf & _
              "altere o tipo de Proposta para poder incluir emitentes", vbExclamation, "Aten|fffd||fffd|o"
       Range("E9").Select
       Exit Sub
    End If
    
    If Range("E9").value = vbNullString _
       Or Range("E11").value = vbNullString Then
       MsgBox "Campos Nome e C.P.F. s|fffd|o obrigat|fffd|rios!", vbCritical
       Range("E9").Select
       Exit Sub
    End If
    Dim protPlan As clsProtecao
    Dim li_LinSel As Integer
    Dim lngLin, lngCol, lngErr As Long
    Dim strMsg As String
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True

'- Verifica se existe benefici|fffd|rio com este cpf
    If Range("FIM_BCLI").value >= 2 Then
       bd4Benef.Activate
       protPlan.DesprotegePlanilha
       On Error Resume Next
       Range("H2:H" & Range("FIM_BCLI").value).Select
       Selection.Find(What:=Range("CPF_CGC_BNF").value, After:=ActiveCell, LookIn:=xlValues, _
               lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
               MatchCase:=False).Activate
       On Error GoTo 0
       If ActiveCell.value = Range("CPF_CGC_BNF").value Then
          MsgBox "Benefici|fffd|rio j|fffd| cadastrado!" & vbCrLf & _
                 "CPF:  " & Range("CPF_CGC_BNF").text & vbCrLf & _
                 "NOME: " & Range("F" & ActiveCell.Row).text, vbInformation
          GoTo Fim
       End If
    End If
    '-
    '- Incluir cr|fffd|tica do modelo do benefici|fffd|rio
    '-
    '- Verificar preenchimento dos campos obrigat|fffd|rios
    '-
    xl3Bene.Activate
    If Range("P8").value = 2 Then
       lngErr = 0
       strMsg = ""
       For lngLin = 9 To 54
           If Range("Q" & [lngLin]).value = -1 Then
              strMsg = strMsg & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
              lngErr = lngErr + 1
           End If
       Next lngLin
       If Left(Range("E19").value, 9) = "Casado(a)" _
          Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
          For lngLin = 58 To 72
              If Range("Q" & [lngLin]).value = -1 Then
                 strMsg = strMsg & "C|fffd|njuge: " & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
                 lngErr = lngErr + 1
              End If
          Next lngLin
          If Range("A55:A72").EntireRow.Hidden Then
             Range("A55:A72").EntireRow.Hidden = False
          End If
          Range("E66").value = Range("E19").value
       End If
       
       If lngErr > 0 Then
          MsgBox "Os seguintes campos n|fffd|o foram informados ou est|fffd|o inv|fffd|lidos:" & vbCrLf & vbCrLf & _
                 strMsg & vbCrLf & vbCrLf & _
                 "O cadastro ser|fffd| gerado com inconsist|fffd|ncias!", vbExclamation, ":: Custeio Agr|fffd|cola"
       End If
    End If

    If MsgBox("Confirma inclus|fffd|o do benefici|fffd|rio?", vbYesNo + vbQuestion, "Custeio Agr|fffd|cola") = vbNo Then GoTo Fim
    Range("REG_BNF").value = Range("FIM_BCLI").value
    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    '- inclui registros
     li_LinSel = Range("FIM_BCLI").value + 1
     xl3Bene.Activate
     Range("D9").Select
     bd4Benef.Range("B" & [li_LinSel]).value = li_LinSel - 1
     bd4Benef.Range("E" & [li_LinSel]).value = Range("FIM_BCLI").value
     bd4Benef.Range("F" & [li_LinSel]).value = Range("E9").value
     bd4Benef.Range("G" & [li_LinSel]).value = Range("E10").value
     bd4Benef.Range("H" & [li_LinSel]).value = Range("CPF_CGC_BNF").value
     bd4Benef.Range("I" & [li_LinSel]).value = Range("E12").value
     bd4Benef.Range("CS" & [li_LinSel]).value = Range("O12").value
     bd4Benef.Range("J" & [li_LinSel]).value = Range("E13").value
     bd4Benef.Range("K" & [li_LinSel]).value = Range("E14").value
     bd4Benef.Range("L" & [li_LinSel]).value = Range("E15").value
     bd4Benef.Range("M" & [li_LinSel]).value = Range("E16").value
     bd4Benef.Range("N" & [li_LinSel]).value = Range("E17").value
     bd4Benef.Range("O" & [li_LinSel]).value = Range("E18").value
     bd4Benef.Range("P" & [li_LinSel]).value = Range("E19").value
     bd4Benef.Range("Q" & [li_LinSel]).value = Range("O19").value
     bd4Benef.Range("R" & [li_LinSel]).value = Range("E20").value
     bd4Benef.Range("S" & [li_LinSel]).value = Range("O20").value
     bd4Benef.Range("T" & [li_LinSel]).value = Range("E21").value
     bd4Benef.Range("U" & [li_LinSel]).value = Range("O21").value
     bd4Benef.Range("V" & [li_LinSel]).value = Range("E22").value
     bd4Benef.Range("W" & [li_LinSel]).value = Range("O22").value
     bd4Benef.Range("X" & [li_LinSel]).value = Range("E23").value
     bd4Benef.Range("Y" & [li_LinSel]).value = Range("E24").value
     bd4Benef.Range("Z" & [li_LinSel]).value = Range("O24").value
     bd4Benef.Range("AA" & [li_LinSel]).value = Range("E33").value
     bd4Benef.Range("AB" & [li_LinSel]).value = Range("E34").value
     bd4Benef.Range("AC" & [li_LinSel]).value = Range("E35").value
     bd4Benef.Range("AD" & [li_LinSel]).value = Range("E36").value
     bd4Benef.Range("AE" & [li_LinSel]).value = Range("E37").value
     bd4Benef.Range("AF" & [li_LinSel]).value = Range("E38").value
     bd4Benef.Range("AG" & [li_LinSel]).value = Range("O38").value
     bd4Benef.Range("AH" & [li_LinSel]).value = Range("P38").value
     bd4Benef.Range("AI" & [li_LinSel]).value = Range("E40").value
     bd4Benef.Range("AJ" & [li_LinSel]).value = Range("E41").value
     bd4Benef.Range("AK" & [li_LinSel]).value = Range("E25").value
     bd4Benef.Range("AL" & [li_LinSel]).value = Range("E26").value
     
     bd4Benef.Range("AO" & [li_LinSel]).value = Range("E58").value
     bd4Benef.Range("AP" & [li_LinSel]).value = Range("E59").value
     bd4Benef.Range("AQ" & [li_LinSel]).value = Range("E60").value
     bd4Benef.Range("AR" & [li_LinSel]).value = Range("E61").value
     bd4Benef.Range("AS" & [li_LinSel]).value = Range("E62").value
     bd4Benef.Range("AT" & [li_LinSel]).value = Range("E63").value
     bd4Benef.Range("AU" & [li_LinSel]).value = Range("E64").value
     bd4Benef.Range("AV" & [li_LinSel]).value = Range("E65").value
     bd4Benef.Range("AW" & [li_LinSel]).value = Range("E66").value
     bd4Benef.Range("AX" & [li_LinSel]).value = Range("O66").value
     bd4Benef.Range("AY" & [li_LinSel]).value = Range("E67").value
     bd4Benef.Range("AZ" & [li_LinSel]).value = Range("O67").value
     bd4Benef.Range("BA" & [li_LinSel]).value = Range("E68").value
     bd4Benef.Range("BB" & [li_LinSel]).value = Range("O68").value
     bd4Benef.Range("BC" & [li_LinSel]).value = Range("E69").value
     bd4Benef.Range("BD" & [li_LinSel]).value = Range("E70").value
     bd4Benef.Range("BE" & [li_LinSel]).value = Range("O70").value
     bd4Benef.Range("BF" & [li_LinSel]).value = Range("E71").value
     bd4Benef.Range("BG" & [li_LinSel]).value = Range("E72").value
     
     bd4Benef.Range("BR" & [li_LinSel]).value = Range("E75").value
     bd4Benef.Range("BS" & [li_LinSel]).value = Range("O75").value
     bd4Benef.Range("BT" & [li_LinSel]).value = Range("E76").value
     bd4Benef.Range("BU" & [li_LinSel]).value = Range("E77").value
     bd4Benef.Range("BV" & [li_LinSel]).value = Range("E78").value
     bd4Benef.Range("BW" & [li_LinSel]).value = Range("E80").value
     bd4Benef.Range("BX" & [li_LinSel]).value = Range("O80").value
     bd4Benef.Range("BY" & [li_LinSel]).value = Range("E81").value
     bd4Benef.Range("BZ" & [li_LinSel]).value = Range("E82").value
     bd4Benef.Range("CA" & [li_LinSel]).value = Range("E83").value
      
     bd4Benef.Range("CB" & [li_LinSel]).value = Range("E98").value
     bd4Benef.Range("CC" & [li_LinSel]).value = Range("O98").value
     bd4Benef.Range("CD" & [li_LinSel]).value = Range("E99").value
     bd4Benef.Range("CE" & [li_LinSel]).value = Range("O99").value
     bd4Benef.Range("CF" & [li_LinSel]).value = Range("E100").value
     bd4Benef.Range("CG" & [li_LinSel]).value = Range("O100").value
     bd4Benef.Range("CH" & [li_LinSel]).value = Range("E101").value
     bd4Benef.Range("CI" & [li_LinSel]).value = Range("O101").value
     bd4Benef.Range("CJ" & [li_LinSel]).value = Range("E102").value
     bd4Benef.Range("CK" & [li_LinSel]).value = Range("O102").value
     
     bd4Benef.Range("CL" & [li_LinSel]).value = Range("E114").value
     bd4Benef.Range("CM" & [li_LinSel]).value = Range("E115").value
     bd4Benef.Range("CN" & [li_LinSel]).value = Range("E124").value
     bd4Benef.Range("CO" & [li_LinSel]).value = Range("E125").value
     
     bd4Benef.Range("CP" & [li_LinSel]).value = Range("O8").value
     bd4Benef.Range("CQ" & [li_LinSel]).value = Range("P24").value
     bd4Benef.Range("CR" & [li_LinSel]).value = Range("P70").value    'Ara|fffd|jo
     
     bd4Benef.Range("CU" & [li_LinSel]).value = Range("E27").value 'PORTE
     bd4Benef.Range("CV" & [li_LinSel]).value = Range("O27").value 'COD_PORTE
     bd4Benef.Range("CW" & [li_LinSel]).value = Range("E28").value 'DAP
     bd4Benef.Range("CX" & [li_LinSel]).value = Range("E32").value 'TP_LOG_END
     bd4Benef.Range("CY" & [li_LinSel]).value = Range("O44").value 'USA_END_CORRESP
     bd4Benef.Range("CZ" & [li_LinSel]).value = Range("E45").value 'TP_LOG_CORRESP
     bd4Benef.Range("DA" & [li_LinSel]).value = Range("E46").value 'END_CORR
     bd4Benef.Range("DB" & [li_LinSel]).value = Range("E47").value 'NUM_CORR
     bd4Benef.Range("DC" & [li_LinSel]).value = Range("E48").value 'COMPL_CORR
     bd4Benef.Range("DD" & [li_LinSel]).value = Range("E49").value 'BAIRRO_CORR
     bd4Benef.Range("DE" & [li_LinSel]).value = Range("E50").value 'CEP_CORR
     bd4Benef.Range("DF" & [li_LinSel]).value = Range("E51").value 'MUNI_CORR
     bd4Benef.Range("DG" & [li_LinSel]).value = Range("O51").value 'COD_MUNI_CORR
     bd4Benef.Range("DH" & [li_LinSel]).value = Range("P51").value 'UF_MUNI_CORR
     bd4Benef.Range("DI" & [li_LinSel]).value = Range("E53").value 'DD_CORR
     bd4Benef.Range("DJ" & [li_LinSel]).value = Range("E54").value 'TEL_CORR
     bd4Benef.Range("DK" & [li_LinSel]).value = Range("O32").value 'TP_LOG_COD
     bd4Benef.Range("DL" & [li_LinSel]).value = Range("O45").value 'TP_LOG_CORR_COD
     
     If lngErr > 0 Then
        bd4Benef.Range("CP" & [li_LinSel]).value = -1
        bd4Benef.Range("CT" & [li_LinSel]).value = strMsg
     End If
    
     bd4Benef.Activate
     protPlan.ProtegePlanilha
     xl2Prop.Activate
     protPlan.ProtegePlanilha
     xl3Bene.Activate
     xl3Bene.Range("O9").value = 1
     protPlan.FinalizaRotina
     MsgBox "Benefici|fffd|rio inclu|fffd|do na proposta.", vbInformation
     Range("E9").Select
     Set protPlan = Nothing
     Exit Sub
     
Fim:
     bd4Benef.Activate
     protPlan.ProtegePlanilha
     xl3Bene.Activate
     protPlan.FinalizaRotina
     Set protPlan = Nothing
     Range("E9").Select
End Sub

Sub btnAtualizaBenef_Clique()
     If Range("E9").value = vbNullString _
        Or Range("E11").value = vbNullString Then
        MsgBox "Os campos Nome e CPF s|fffd|o obrigat|fffd|rios!", vbCritical
        Range("E9").Select
        Exit Sub
     End If
     Dim li_LinSel As Integer
     Dim lngErr As Long
     Dim strMsg As String
     Dim protPlan As clsProtecao
     Set protPlan = New clsProtecao
     
     protPlan.IniciaRotina True
    '- Verifica se existe benefici|fffd|rio com este cpf
     If Range("FIM_BCLI").value >= 2 Then
         bd4Benef.Activate
         protPlan.DesprotegePlanilha
         On Error Resume Next
         Range("H2:H" & Range("FIM_BCLI").value).Select
         Selection.Find(What:=Range("CPF_CGC_BNF").value, After:=ActiveCell, LookIn:=xlValues, _
                 lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                 MatchCase:=False).Activate
         If Err Then
          On Error GoTo 0
          MsgBox "CPF n|fffd|o cadastrado!", vbCritical, "Erro!"
          GoTo Fim
         End If
         On Error GoTo 0
        Else
         MsgBox "N|fffd|o existem benefici|fffd|rios cadastrados." & vbCrLf & _
               "Utilize o bot|fffd|o [Incluir] para cadastrar.", vbExclamation
         GoTo Fim
     End If
    '- Verificar preenchimento dos campos obrigat|fffd|rios
    '-
    xl3Bene.Activate
    If Range("P8").value = 2 Then
       lngErr = 0
       strMsg = ""
       For lngLin = 9 To 54
           If Range("Q" & [lngLin]).value = -1 Then
              strMsg = strMsg & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
              lngErr = lngErr + 1
           End If
       Next lngLin
       If Left(Range("E19").value, 9) = "Casado(a)" _
          Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
          For lngLin = 58 To 72
              If Range("Q" & [lngLin]).value = -1 Then
                 strMsg = strMsg & "C|fffd|njuge: " & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
                 lngErr = lngErr + 1
              End If
          Next lngLin
          If Range("A55:A72").EntireRow.Hidden Then
             Range("A55:A72").EntireRow.Hidden = False
          End If
          Range("E66").value = Range("E19").value
       End If
       
       If lngErr > 0 Then
          MsgBox "Os seguintes campos n|fffd|o foram informados ou est|fffd|o inv|fffd|lidos:" & vbCrLf & vbCrLf & _
                 strMsg & vbCrLf & vbCrLf & _
                 "O cadastro ser|fffd| gerado com inconsist|fffd|ncias!", vbExclamation, ":: Custeio Agr|fffd|cola"
       End If
    End If
     
     If MsgBox("Confirma atualiza|fffd||fffd|o dos dados do benefici|fffd|rio?", vbYesNo + vbQuestion, "Atualiza|fffd||fffd|o do C.P.F.: " & Range("CPF_CGC_BNF").text) = vbNo Then GoTo Fim
     bd4Benef.Activate
     protPlan.DesprotegePlanilha
     Range("A1").Select
     Selection.AutoFilter Field:=8, Criteria1:=Range("CPF_CGC_BNF").value
     Selection.CurrentRegion.Select
     Selection.Offset(1, 0).Resize(Selection.Rows.Count - 1).Select
     Selection.SpecialCells(xlVisible).Select
     li_LinSel = ActiveCell.Row
     
    '- atualiza registros
     xl3Bene.Activate
     Range("D11").Select
     bd4Benef.Range("F" & [li_LinSel]).value = Range("E9").value
     bd4Benef.Range("G" & [li_LinSel]).value = Range("E10").value
     bd4Benef.Range("H" & [li_LinSel]).value = Range("CPF_CGC_BNF").value
     bd4Benef.Range("I" & [li_LinSel]).value = Range("E12").value
     bd4Benef.Range("CS" & [li_LinSel]).value = Range("O12").value
     bd4Benef.Range("J" & [li_LinSel]).value = Range("E13").value
     bd4Benef.Range("K" & [li_LinSel]).value = Range("E14").value
     bd4Benef.Range("L" & [li_LinSel]).value = Range("E15").value
     bd4Benef.Range("M" & [li_LinSel]).value = Range("E16").value
     bd4Benef.Range("N" & [li_LinSel]).value = Range("E17").value
     bd4Benef.Range("O" & [li_LinSel]).value = Range("E18").value
     bd4Benef.Range("P" & [li_LinSel]).value = Range("E19").value
     bd4Benef.Range("Q" & [li_LinSel]).value = Range("O19").value
     bd4Benef.Range("R" & [li_LinSel]).value = Range("E20").value
     bd4Benef.Range("S" & [li_LinSel]).value = Range("O20").value
     bd4Benef.Range("T" & [li_LinSel]).value = Range("E21").value
     bd4Benef.Range("U" & [li_LinSel]).value = Range("O21").value
     bd4Benef.Range("V" & [li_LinSel]).value = Range("E22").value
     bd4Benef.Range("W" & [li_LinSel]).value = Range("O22").value
     bd4Benef.Range("X" & [li_LinSel]).value = Range("E23").value
     bd4Benef.Range("Y" & [li_LinSel]).value = Range("E24").value
     bd4Benef.Range("Z" & [li_LinSel]).value = Range("O24").value
     bd4Benef.Range("AA" & [li_LinSel]).value = Range("E33").value
     bd4Benef.Range("AB" & [li_LinSel]).value = Range("E34").value
     bd4Benef.Range("AC" & [li_LinSel]).value = Range("E35").value
     bd4Benef.Range("AD" & [li_LinSel]).value = Range("E36").value
     bd4Benef.Range("AE" & [li_LinSel]).value = Range("E37").value
     bd4Benef.Range("AF" & [li_LinSel]).value = Range("E38").value
     bd4Benef.Range("AG" & [li_LinSel]).value = Range("O38").value
     bd4Benef.Range("AH" & [li_LinSel]).value = Range("E31").value
     bd4Benef.Range("AI" & [li_LinSel]).value = Range("E40").value
     bd4Benef.Range("AJ" & [li_LinSel]).value = Range("E41").value
     bd4Benef.Range("AK" & [li_LinSel]).value = Range("E25").value
     bd4Benef.Range("AL" & [li_LinSel]).value = Range("E26").value
     
     bd4Benef.Range("AO" & [li_LinSel]).value = Range("E58").value
     bd4Benef.Range("AP" & [li_LinSel]).value = Range("E59").value
     bd4Benef.Range("AQ" & [li_LinSel]).value = Range("E60").value
     bd4Benef.Range("AR" & [li_LinSel]).value = Range("E61").value
     bd4Benef.Range("AS" & [li_LinSel]).value = Range("E62").value
     bd4Benef.Range("AT" & [li_LinSel]).value = Range("E63").value
     bd4Benef.Range("AU" & [li_LinSel]).value = Range("E64").value
     bd4Benef.Range("AV" & [li_LinSel]).value = Range("E65").value
     bd4Benef.Range("AW" & [li_LinSel]).value = Range("E66").value
     bd4Benef.Range("AX" & [li_LinSel]).value = Range("O66").value
     bd4Benef.Range("AY" & [li_LinSel]).value = Range("E67").value
     bd4Benef.Range("AZ" & [li_LinSel]).value = Range("O67").value
     bd4Benef.Range("BA" & [li_LinSel]).value = Range("E68").value
     bd4Benef.Range("BB" & [li_LinSel]).value = Range("O68").value
     bd4Benef.Range("BC" & [li_LinSel]).value = Range("E69").value
     bd4Benef.Range("BD" & [li_LinSel]).value = Range("E70").value
     bd4Benef.Range("BE" & [li_LinSel]).value = Range("O70").value
     bd4Benef.Range("BF" & [li_LinSel]).value = Range("E71").value
     bd4Benef.Range("BG" & [li_LinSel]).value = Range("E72").value
     
     'bd4Benef.Range("BJ" & [li_LinSel]).Value = Range("E62").Value     'vixe Ara|fffd|jo!
     'bd4Benef.Range("BK" & [li_LinSel]).Value = Range("E63").Value
     'bd4Benef.Range("BL" & [li_LinSel]).Value = Range("E64").Value
     'bd4Benef.Range("BM" & [li_LinSel]).Value = Range("E65").Value
     'bd4Benef.Range("BN" & [li_LinSel]).Value = Range("E66").Value
     'bd4Benef.Range("BO" & [li_LinSel]).Value = Range("E67").Value
     'bd4Benef.Range("BP" & [li_LinSel]).Value = Range("E68").Value
     
     bd4Benef.Range("BR" & [li_LinSel]).value = Range("E75").value
     bd4Benef.Range("BS" & [li_LinSel]).value = Range("O75").value
     bd4Benef.Range("BT" & [li_LinSel]).value = Range("E76").value
     bd4Benef.Range("BU" & [li_LinSel]).value = Range("E77").value
     bd4Benef.Range("BV" & [li_LinSel]).value = Range("E78").value
     bd4Benef.Range("BW" & [li_LinSel]).value = Range("E80").value
     bd4Benef.Range("BX" & [li_LinSel]).value = Range("O80").value
     bd4Benef.Range("BY" & [li_LinSel]).value = Range("E81").value
     bd4Benef.Range("BZ" & [li_LinSel]).value = Range("E82").value
     bd4Benef.Range("CA" & [li_LinSel]).value = Range("E83").value
      
     bd4Benef.Range("CB" & [li_LinSel]).value = Range("E98").value
     bd4Benef.Range("CC" & [li_LinSel]).value = Range("O98").value
     bd4Benef.Range("CD" & [li_LinSel]).value = Range("E99").value
     bd4Benef.Range("CE" & [li_LinSel]).value = Range("O99").value
     bd4Benef.Range("CF" & [li_LinSel]).value = Range("E100").value
     bd4Benef.Range("CG" & [li_LinSel]).value = Range("O100").value
     bd4Benef.Range("CH" & [li_LinSel]).value = Range("E101").value
     bd4Benef.Range("CI" & [li_LinSel]).value = Range("O101").value
     bd4Benef.Range("CJ" & [li_LinSel]).value = Range("E102").value
     bd4Benef.Range("CK" & [li_LinSel]).value = Range("O102").value
     
     bd4Benef.Range("CL" & [li_LinSel]).value = Range("E114").value
     bd4Benef.Range("CM" & [li_LinSel]).value = Range("E115").value
     bd4Benef.Range("CN" & [li_LinSel]).value = Range("E124").value
     bd4Benef.Range("CO" & [li_LinSel]).value = Range("E125").value
     
     bd4Benef.Range("CP" & [li_LinSel]).value = Range("O8").value
     bd4Benef.Range("CQ" & [li_LinSel]).value = Range("P24").value
     bd4Benef.Range("CR" & [li_LinSel]).value = Range("P70").value
    
     bd4Benef.Range("CU" & [li_LinSel]).value = Range("E27").value 'PORTE
     bd4Benef.Range("CV" & [li_LinSel]).value = Range("O27").value 'COD_PORTE
     bd4Benef.Range("CW" & [li_LinSel]).value = Range("E28").value 'DAP
     bd4Benef.Range("CX" & [li_LinSel]).value = Range("E32").value 'TP_LOG_END
     bd4Benef.Range("CY" & [li_LinSel]).value = Range("O44").value 'USA_END_CORRESP
     bd4Benef.Range("CZ" & [li_LinSel]).value = Range("E45").value 'TP_LOG_CORRESP
     bd4Benef.Range("DA" & [li_LinSel]).value = Range("E46").value 'END_CORR
     bd4Benef.Range("DB" & [li_LinSel]).value = Range("E47").value 'NUM_CORR
     bd4Benef.Range("DC" & [li_LinSel]).value = Range("E48").value 'COMPL_CORR
     bd4Benef.Range("DD" & [li_LinSel]).value = Range("E49").value 'BAIRRO_CORR
     bd4Benef.Range("DE" & [li_LinSel]).value = Range("E50").value 'CEP_CORR
     bd4Benef.Range("DF" & [li_LinSel]).value = Range("E51").value 'MUNI_CORR
     bd4Benef.Range("DG" & [li_LinSel]).value = Range("O51").value 'COD_MUNI_CORR
     bd4Benef.Range("DH" & [li_LinSel]).value = Range("P51").value 'UF_MUNI_CORR
     bd4Benef.Range("DI" & [li_LinSel]).value = Range("E53").value 'DD_CORR
     bd4Benef.Range("DJ" & [li_LinSel]).value = Range("E54").value 'TEL_CORR
     bd4Benef.Range("DK" & [li_LinSel]).value = Range("O32").value 'TP_LOG_COD
     bd4Benef.Range("DL" & [li_LinSel]).value = Range("O45").value 'TP_LOG_CORR_COD
    
     If lngErr > 0 Then
        bd4Benef.Range("CP" & [li_LinSel]).value = -1
        bd4Benef.Range("CT" & [li_LinSel]).value = strMsg
     End If
    '-
    
     bd4Benef.Activate
     Selection.AutoFilter
     protPlan.ProtegePlanilha
     xl3Bene.Activate
     protPlan.FinalizaRotina
     MsgBox "Benefici|fffd|rio atualizado no projeto.", vbInformation
     Range("E9").Select
     Set protPlan = Nothing
     Exit Sub
     
Fim:
     bd4Benef.Activate
     protPlan.ProtegePlanilha
     xl3Bene.Activate
     protPlan.FinalizaRotina
     Range("E9").Select
     Set protPlan = Nothing
End Sub

Sub btnEditaBenef_Clique()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    protPlan.IniciaRotina True
    If Range("FIM_BCLI").value < 2 Then
       MsgBox "N|fffd|o existem proponentes cadastrados!", vbExclamation
       GoTo Fim
    End If
    geraListaBNF
    xl3Bene.Activate
    frmSelBenef.Show
     
Fim:
    DelXlTmp
    On Error GoTo 0
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    xl99Auxi.Activate
    protPlan.ProtegePlanilha
    xl3Bene.Activate
    Range("E9").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub btnExcluibenef_Clique()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    protPlan.IniciaRotina True
    If Range("FIM_BCLI").value < 2 Then
       MsgBox "N|fffd|o existem proponentes cadastrados!", vbExclamation
       GoTo Fim
    End If
    geraListaBNF
    xl3Bene.Activate
    Range("FLAG_DEL_BNF").value = 1
    frmSelBenef.Show
     
Fim:
    DelXlTmp
    On Error GoTo 0
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    xl99Auxi.Activate
    protPlan.ProtegePlanilha
    xl3Bene.Activate
    Range("E9").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub geraListaBNF()
    Dim li_LinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    li_LinSel = Range("FIM_BCLI").value
    If li_LinSel < 2 Then
       MsgBox "N|fffd|o existem proponentes cadastrados!", vbExclamation
       GoTo Fim
    End If
    Range("A1").Select
    Application.GoTo Reference:="R2:R" & li_LinSel
    Selection.Copy
    Sheets.Add
    ActiveSheet.Name = "tmp"
    Range("A2").Select
    ActiveSheet.Paste
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    li_LinSel = Range("QT_BNF").value + 1
    Range("AV2:AZ" & [li_LinSel]).ClearContents
    Sheets("tmp").Activate
    On Error Resume Next
    Selection.SpecialCells(xlVisible).Select
    If Err Then GoTo Fim
    On Error GoTo 0
    li_LinSel = ActiveCell.Row
    Do While Range("H" & [li_LinSel]).value <> vbNullString
       xl99Auxi.Range("AV" & [li_LinSel]).value = Range("F" & [li_LinSel]).value
       xl99Auxi.Range("AW" & [li_LinSel]).value = Range("H" & [li_LinSel]).value
       xl99Auxi.Range("AX" & [li_LinSel]).value = Range("E" & [li_LinSel]).value
       xl99Auxi.Range("AY" & [li_LinSel]).value = Range("AO" & [li_LinSel]).value
       xl99Auxi.Range("AZ" & [li_LinSel]).value = Range("AP" & [li_LinSel]).value
       li_LinSel = li_LinSel + 1
       If Range("H" & [li_LinSel]).value = vbNullString Then Exit Do
    Loop
    xl99Auxi.Activate
    ActiveWorkbook.Names.Add Name:="listaBENE_CPF", RefersToR1C1:= _
       "=Auxiliar!R2C48:R" & li_LinSel - 1 & "C52"
    Range("listaBENE_CPF").Select
    Selection.Sort Key1:=Range("AV2"), Order1:=xlAscending, Header:=xlGuess, _
       OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    DelXlTmp
Fim:
    xl99Auxi.Activate
    protPlan.ProtegePlanilha
    bd4Benef.Activate
    Range("A1").Select
    Selection.AutoFilter
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub DelXlTmp()
    Dim xlPlan As Variant
    Dim strXl As String
    Application.DisplayAlerts = False
    For Each xlPlan In Sheets
        If xlPlan.Name = "tmp" Then
           strXl = xlPlan.Name
           Sheets([strXl]).Delete
        ElseIf Left(xlPlan.Name, 4) = "Plan" Then
           strXl = xlPlan.Name
           Sheets([strXl]).Delete
        End If
    Next
    Application.DisplayAlerts = True
End Sub

Sub preencherEndCorrespondencia()
    preencherDadosCorrespondencia
End Sub

Sub preencherDadosCorrespondencia(Optional intFlag As Integer)
    Dim lngLinEnd As Long
    Dim protPlan As New clsProtecao
    protPlan.IniciaRotina False
    If Range("O44").value = True Then
        For lngLinEnd = 32 To 41
            Cells(lngLinEnd + 13, 5).FormulaLocal = "=SE(" & Range("E" & lngLinEnd).Address & "="""";"""";" & Range("E" & lngLinEnd).Address & ")"
            Range(Cells(lngLinEnd + 13, 5), Cells(lngLinEnd + 13, 12)).Locked = True
            If lngLinEnd + 13 <> 52 Then
                Cells(lngLinEnd + 13, 5).Interior.ColorIndex = 15
            End If
        Next lngLinEnd
    Else
        For lngLinEnd = 45 To 54
            If intFlag = 2 Then Cells(lngLinEnd, 5).value = vbNullString
            Cells(lngLinEnd, 5).FormulaR1C1 = Cells(lngLinEnd, 5).value
            Range(Cells(lngLinEnd, 5), Cells(lngLinEnd, 12)).Locked = False
            Cells(lngLinEnd, 5).Interior.ColorIndex = xlNone
        Next lngLinEnd
    End If
    If intFlag <> 1 Then protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Attribute VB_Name = "mdlCoob"
Sub btnNavCoob_Clique()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    xl5Coob.Activate
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub btnNovoCoob_Clique()
    If MsgBox("Deseja limpar todos os campos?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True
    Range("E10:E31").value = ""
    Range("E33:E36").value = ""
    Range("E44:E58").value = ""
    Range("E11").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub btnIncuiCoob_Clique()
    Dim lngErr As Long, lngLin As Long
    Dim strMsg As String
    Dim protPlan As clsProtecao
    
    If Range("E11").value = vbNullString Then
       MsgBox "Informe o nome do coobrigado!", vbCritical
       Range("E11").Select
       Exit Sub
    End If
    If Range("E10").value = vbNullString Then
       MsgBox "Informe a classifica|fffd||fffd|o do coobrigado!", vbCritical
       Range("E10").Select
       Exit Sub
    End If
    If Range("E10").value = "Pessoa F|fffd|sica" And _
       Range("E13").value = vbNullString Then
       MsgBox "Informe o CPF do coobrigado!", vbCritical
       Range("E13").Select
       Exit Sub
    End If
    If Range("E10").value = "Pessoa Jur|fffd|dica" And _
       Range("E12").value = vbNullString Then
       MsgBox "Informe o CNPJ do coobrigado!", vbCritical
       Range("E12").Select
       Exit Sub
    End If
    Set protPlan = New clsProtecao

    protPlan.IniciaRotina True
    Dim li_LinSel As Integer
    
'- Verifica se existe coobrigado com este cpf/cnpj
    If Range("FIM_COOB").value >= 2 Then
       bd5Coob.Activate
       protPlan.DesprotegePlanilha
       On Error Resume Next
       Range("G2:G" & Range("FIM_COOB").value).Select
       If Range("TP_COOB").value = 0 Then
          Selection.Find(What:=Range("CPF_COOB").value, After:=ActiveCell, LookIn:=xlValues, _
                lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                MatchCase:=False).Activate
       Else
          Selection.Find(What:=Range("CGC_COOB").value, After:=ActiveCell, LookIn:=xlValues, _
                lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                MatchCase:=False).Activate
       End If
       On Error GoTo 0
       If ActiveCell.value = Range("CPF_COOB").value Then
          MsgBox "Coobrigado j|fffd| cadastrado!" & vbCrLf & _
                 "CPF:  " & Range("G" & ActiveCell.Row).text & vbCrLf & _
                 "NOME: " & Range("F" & ActiveCell.Row).text, vbInformation
          GoTo Fim
       End If
    End If
    If Range("FIM_BCLI").value >= 2 Then
       bd4Benef.Activate
       protPlan.DesprotegePlanilha
       On Error Resume Next
       Range("H2:H" & Range("FIM_BCLI").value).Select
       If Range("TP_COOB").value = 0 Then
          Selection.Find(What:=Range("CPF_COOB").value, After:=ActiveCell, LookIn:=xlValues, _
                lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                MatchCase:=False).Activate
       End If
       On Error GoTo 0
       If ActiveCell.value = Range("CPF_COOB").value Then
          MsgBox "Coobrigado j|fffd| cadastrado como proponente!" & vbCrLf & _
                 "CPF:  " & Range("H" & ActiveCell.Row).text & vbCrLf & _
                 "NOME: " & Range("F" & ActiveCell.Row).text, vbInformation
          GoTo Fim
       End If
    End If
     
    '- Verificar preenchimento dos campos obrigat|fffd|rios
    xl5Coob.Activate
    If Range("TP_COOB").value = 0 Then
       lngErr = 0
       strMsg = ""
       For lngLin = 9 To 35
           If Range("O" & [lngLin]).value = "-1" Then
              strMsg = strMsg & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
              lngErr = lngErr + 1
           End If
       Next lngLin
       If Left(Range("E19").value, 9) = "Casado(a)" _
          Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
          For lngLin = 43 To 57
              If Range("O" & [lngLin]).value = "-1" Then
                 strMsg = strMsg & "C|fffd|njuge: " & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
                 lngErr = lngErr + 1
              End If
          Next lngLin
       End If
       
       If lngErr > 0 Then
          MsgBox "Os seguintes campos n|fffd|o foram informados ou est|fffd|o inv|fffd|lidos:" & vbCrLf & vbCrLf & _
                 strMsg & vbCrLf & vbCrLf & _
                 "O arquivo para importa|fffd||fffd|o dos cadastros ser|fffd| gerado com inconsist|fffd|ncias!", vbExclamation, ":: Custeio Agr|fffd|cola"
       End If
    End If
    '-
    If MsgBox("Confirma inclus|fffd|o do coobrigado?", vbYesNo + vbQuestion, "Novo Coobrigado") = vbNo Then GoTo Fim
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
'- inclui registros
    li_LinSel = Range("FIM_COOB").value + 1
    xl5Coob.Activate
    Range("E11").Select
    bd5Coob.Range("B" & [li_LinSel]).value = li_LinSel - 1
    bd5Coob.Range("D" & [li_LinSel]).value = Range("FIM_COOB").value
    bd5Coob.Range("E" & [li_LinSel]).value = Range("TP_COOB").value
    bd5Coob.Range("F" & [li_LinSel]).value = Range("E11").value
    If Range("TP_COOB").value = 0 Then
       bd5Coob.Range("G" & [li_LinSel]).value = Range("CPF_COOB").value
    Else
       bd5Coob.Range("G" & [li_LinSel]).value = Range("CGC_COOB").value
    End If
    bd5Coob.Range("H" & [li_LinSel]).value = Range("E14").value
    bd5Coob.Range("I" & [li_LinSel]).value = Range("E15").value
    bd5Coob.Range("J" & [li_LinSel]).value = Range("E16").value
    bd5Coob.Range("K" & [li_LinSel]).value = Range("E17").value
    bd5Coob.Range("L" & [li_LinSel]).value = Range("E18").value
    bd5Coob.Range("M" & [li_LinSel]).value = Range("E19").value
    bd5Coob.Range("N" & [li_LinSel]).value = Range("E20").value
    bd5Coob.Range("O" & [li_LinSel]).value = Range("O20").value
    bd5Coob.Range("P" & [li_LinSel]).value = Range("E21").value
    bd5Coob.Range("Q" & [li_LinSel]).value = Range("E22").value
    bd5Coob.Range("R" & [li_LinSel]).value = Range("E24").value
    bd5Coob.Range("S" & [li_LinSel]).value = Range("E25").value
    bd5Coob.Range("T" & [li_LinSel]).value = Range("O25").value
    bd5Coob.Range("U" & [li_LinSel]).value = Range("E26").value
    bd5Coob.Range("V" & [li_LinSel]).value = Range("E27").value
    bd5Coob.Range("W" & [li_LinSel]).value = Range("E28").value
    bd5Coob.Range("X" & [li_LinSel]).value = Range("E29").value
    bd5Coob.Range("Y" & [li_LinSel]).value = Range("E30").value
    bd5Coob.Range("Z" & [li_LinSel]).value = Range("E31").value
    bd5Coob.Range("AA" & [li_LinSel]).value = Range("O31").value
    bd5Coob.Range("AB" & [li_LinSel]).value = Range("E32").value
    bd5Coob.Range("AC" & [li_LinSel]).value = Range("E33").value
    bd5Coob.Range("AD" & [li_LinSel]).value = Range("E34").value
    bd5Coob.Range("AE" & [li_LinSel]).value = Range("E35").value
    bd5Coob.Range("AF" & [li_LinSel]).value = Range("E36").value
    bd5Coob.Range("AG" & [li_LinSel]).value = Range("E44").value
    bd5Coob.Range("AH" & [li_LinSel]).value = Range("E45").value
    bd5Coob.Range("AI" & [li_LinSel]).value = Range("E46").value
    bd5Coob.Range("AJ" & [li_LinSel]).value = Range("E47").value
    bd5Coob.Range("AK" & [li_LinSel]).value = Range("E48").value
    bd5Coob.Range("AL" & [li_LinSel]).value = Range("E49").value
    bd5Coob.Range("AM" & [li_LinSel]).value = Range("E50").value
    bd5Coob.Range("AN" & [li_LinSel]).value = Range("E51").value
    bd5Coob.Range("AO" & [li_LinSel]).value = Range("E52").value
    bd5Coob.Range("AP" & [li_LinSel]).value = Range("O52").value
    bd5Coob.Range("AQ" & [li_LinSel]).value = Range("E53").value
    bd5Coob.Range("AR" & [li_LinSel]).value = Range("E54").value
    bd5Coob.Range("AS" & [li_LinSel]).value = Range("E55").value
    bd5Coob.Range("AT" & [li_LinSel]).value = Range("E56").value
    bd5Coob.Range("AU" & [li_LinSel]).value = Range("O56").value
    bd5Coob.Range("AV" & [li_LinSel]).value = Range("E57").value
    bd5Coob.Range("AW" & [li_LinSel]).value = Range("E58").value
    bd5Coob.Range("AX" & [li_LinSel]).value = Range("E23").value
    bd5Coob.Range("AY" & [li_LinSel]).value = Range("O23").value
    bd5Coob.Range("AZ" & [li_LinSel]).value = Range("P25").value
    bd5Coob.Range("BA" & [li_LinSel]).value = Range("P56").value
    bd5Coob.Range("BB" & [li_LinSel]).value = Range("O22").value
    bd5Coob.Range("BC" & [li_LinSel]).value = Range("O54").value
    bd5Coob.Range("BD" & [li_LinSel]).value = Range("CRC_S400_COOB").value
    bd5Coob.Range("BE" & [li_LinSel]).value = strMsg
    
   '-
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    bd5Coob.Activate
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    protPlan.FinalizaRotina
    MsgBox "Coobrigado inclu|fffd|do no projeto.", vbInformation
    Range("E10").Select
    Set protPlan = Nothing
    Exit Sub
     
Fim:
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    bd5Coob.Activate
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    Range("E10").Select
End Sub

Sub btnEditaCoob_Clique()
    Dim li_LinSel As Integer
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    li_LinSel = Range("FIM_COOB").value
    If li_LinSel = 1 Then
       MsgBox "N|fffd|o existem coobrigados cadastrados!", vbExclamation
       GoTo Fim
    End If
    Range("A1").Select
    Selection.AutoFilter
    Application.GoTo Reference:="R2:R" & li_LinSel
    Selection.Copy
    Sheets.Add
    ActiveSheet.Name = "tmp"
    Range("A2").Select
    ActiveSheet.Paste
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    Range("BK2:BM" & Range("QT_COOB").value + 1).ClearContents
    Sheets("tmp").Activate
    On Error Resume Next
    Selection.SpecialCells(xlVisible).Select
    If Err Then GoTo Fim
    On Error GoTo 0
    li_LinSel = ActiveCell.Row
    Do While Range("G" & [li_LinSel]).value <> vbNullString
       xl99Auxi.Range("BK" & [li_LinSel]).value = Range("F" & [li_LinSel]).value
       xl99Auxi.Range("BL" & [li_LinSel]).value = Range("G" & [li_LinSel]).value
       xl99Auxi.Range("BM" & [li_LinSel]).value = Range("D" & [li_LinSel]).value
       li_LinSel = li_LinSel + 1
       If Range("G" & [li_LinSel]).value = vbNullString Then Exit Do
    Loop
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    ActiveWorkbook.Names.Add Name:="listaCOOB_CPF", RefersToR1C1:= _
        "=Auxiliar!R2C63:R" & li_LinSel - 1 & "C65"
    Range("listaCOOB_CPF").Select
    Selection.Sort Key1:=Range("BK2"), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
    DelXlTmp
    frmSelCoob.Show
    Set protPlan = Nothing
    Exit Sub
     
Fim:
    DelXlTmp
    On Error Resume Next
    bd5Coob.Activate
    Selection.AutoFilter
    protPlan.ProtegePlanilha
    xl99Auxi.Activate
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    Range("E10").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub btnAtualizaCoob_Clique()
    If Range("E11").value = vbNullString Then
       MsgBox "Informe o nome do coobrigado!", vbCritical
       Range("E11").Select
       Exit Sub
    End If
    If Range("E10").value = vbNullString Then
       MsgBox "Informe a classifica|fffd||fffd|o do coobrigado!", vbCritical
       Range("E10").Select
       Exit Sub
    End If
    If Range("E10").value = "Pessoa F|fffd|sica" And _
       Range("E13").value = vbNullString Then
       MsgBox "Informe o CPF do coobrigado!", vbCritical
       Range("E13").Select
       Exit Sub
    End If
    If Range("E10").value = "Pessoa Jur|fffd|dica" And _
       Range("E12").value = vbNullString Then
       MsgBox "Informe o CNPJ do coobrigado!", vbCritical
       Range("E12").Select
       Exit Sub
    End If
    Dim protPlan As clsProtecao
    Dim li_LinSel As Integer
    
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
  
'- Verifica se existe coobrigado com este cpf/cnpj
    If Range("FIM_COOB").value >= 2 Then
       bd5Coob.Activate
       protPlan.DesprotegePlanilha
       On Error Resume Next
       Range("G2:G" & Range("FIM_COOB").value).Select
       If Range("TP_COOB").value = 0 Then
          Selection.Find(What:=Range("CPF_COOB").value, After:=ActiveCell, LookIn:=xlValues, _
              lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
              MatchCase:=False).Activate
       Else
          Selection.Find(What:=Range("CGC_COOB").value, After:=ActiveCell, LookIn:=xlValues, _
              lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
              MatchCase:=False).Activate
       End If
       If Err Then
          On Error GoTo 0
          MsgBox "CPF/CNPJ n|fffd|o cadastrado!", vbCritical, "Erro!"
          GoTo Fim
       End If
       On Error GoTo 0
    Else
       MsgBox "N|fffd|o existem coobrigados cadastrados." & vbCrLf & _
              "Utilize o bot|fffd|o [Incluir] para cadastrar.", vbExclamation
       GoTo Fim
    End If
'-
    xl5Coob.Activate
    If Range("TP_COOB").value = 0 Then
       lngErr = 0
       strMsg = ""
       For lngLin = 9 To 35
           If Range("O" & [lngLin]).value = "-1" Then
              strMsg = strMsg & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
              lngErr = lngErr + 1
           End If
       Next lngLin
       If Left(Range("E19").value, 9) = "Casado(a)" _
          Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
          For lngLin = 43 To 57
              If Range("O" & [lngLin]).value = "-1" Then
                 strMsg = strMsg & "C|fffd|njuge: " & Application.WorksheetFunction.Substitute(Range("C" & [lngLin]).value, ":", ";") & " "
                 lngErr = lngErr + 1
              End If
          Next lngLin
       End If
       
       If lngErr > 0 Then
          MsgBox "Os seguintes campos n|fffd|o foram informados ou est|fffd|o inv|fffd|lidos:" & vbCrLf & vbCrLf & _
                 strMsg & vbCrLf & vbCrLf & _
                 "O arquivo para importa|fffd||fffd|o dos cadastros ser|fffd| gerado com inconsist|fffd|ncias!", vbExclamation, ":: Custeio Agr|fffd|cola"
       End If
    End If
    
    If MsgBox("Confirma atualiza|fffd||fffd|o dos dados do coobrigado?", vbYesNo + vbQuestion, "Atualiza|fffd||fffd|o") = vbNo Then GoTo Fim
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    Range("A1").Select
    If Range("TP_COOB").value = 0 Then
       Selection.AutoFilter Field:=7, Criteria1:=Range("CPF_COOB").value
    Else
       Selection.AutoFilter Field:=7, Criteria1:=Range("CGC_COOB").value
    End If
    Selection.CurrentRegion.Select
    Selection.Offset(1, 0).Resize(Selection.Rows.Count - 1).Select
    Selection.SpecialCells(xlVisible).Select
    li_LinSel = ActiveCell.Row
'- atualiza registros
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    xl5Coob.Activate
    Range("E11").Select
    bd5Coob.Range("E" & [li_LinSel]).value = Range("TP_COOB").value
    bd5Coob.Range("F" & [li_LinSel]).value = Range("E11").value
    If Range("TP_COOB").value = 0 Then
       bd5Coob.Range("G" & [li_LinSel]).value = Range("CPF_COOB").value
    Else
       bd5Coob.Range("G" & [li_LinSel]).value = Range("CGC_COOB").value
    End If
    bd5Coob.Range("H" & [li_LinSel]).value = Range("E14").value
    bd5Coob.Range("I" & [li_LinSel]).value = Range("E15").value
    bd5Coob.Range("J" & [li_LinSel]).value = Range("E16").value
    bd5Coob.Range("K" & [li_LinSel]).value = Range("E17").value
    bd5Coob.Range("L" & [li_LinSel]).value = Range("E18").value
    bd5Coob.Range("M" & [li_LinSel]).value = Range("E19").value
    bd5Coob.Range("N" & [li_LinSel]).value = Range("E20").value
    bd5Coob.Range("O" & [li_LinSel]).value = Range("O20").value
    bd5Coob.Range("P" & [li_LinSel]).value = Range("E21").value
    bd5Coob.Range("Q" & [li_LinSel]).value = Range("E22").value
    bd5Coob.Range("R" & [li_LinSel]).value = Range("E24").value
    bd5Coob.Range("S" & [li_LinSel]).value = Range("E25").value
    bd5Coob.Range("T" & [li_LinSel]).value = Range("O25").value
    bd5Coob.Range("U" & [li_LinSel]).value = Range("E26").value
    bd5Coob.Range("V" & [li_LinSel]).value = Range("E27").value
    bd5Coob.Range("W" & [li_LinSel]).value = Range("E28").value
    bd5Coob.Range("X" & [li_LinSel]).value = Range("E29").value
    bd5Coob.Range("Y" & [li_LinSel]).value = Range("E30").value
    bd5Coob.Range("Z" & [li_LinSel]).value = Range("E31").value
    bd5Coob.Range("AA" & [li_LinSel]).value = Range("O31").value
    bd5Coob.Range("AB" & [li_LinSel]).value = Range("E32").value
    bd5Coob.Range("AC" & [li_LinSel]).value = Range("E33").value
    bd5Coob.Range("AD" & [li_LinSel]).value = Range("E34").value
    bd5Coob.Range("AE" & [li_LinSel]).value = Range("E35").value
    bd5Coob.Range("AF" & [li_LinSel]).value = Range("E36").value
    bd5Coob.Range("AG" & [li_LinSel]).value = Range("E44").value
    bd5Coob.Range("AH" & [li_LinSel]).value = Range("E45").value
    bd5Coob.Range("AI" & [li_LinSel]).value = Range("E46").value
    bd5Coob.Range("AJ" & [li_LinSel]).value = Range("E47").value
    bd5Coob.Range("AK" & [li_LinSel]).value = Range("E48").value
    bd5Coob.Range("AL" & [li_LinSel]).value = Range("E49").value
    bd5Coob.Range("AM" & [li_LinSel]).value = Range("E50").value
    bd5Coob.Range("AN" & [li_LinSel]).value = Range("E51").value
    bd5Coob.Range("AO" & [li_LinSel]).value = Range("E52").value
    bd5Coob.Range("AP" & [li_LinSel]).value = Range("O52").value
    bd5Coob.Range("AQ" & [li_LinSel]).value = Range("E53").value
    bd5Coob.Range("AR" & [li_LinSel]).value = Range("E54").value
    bd5Coob.Range("AS" & [li_LinSel]).value = Range("E55").value
    bd5Coob.Range("AT" & [li_LinSel]).value = Range("E56").value
    bd5Coob.Range("AU" & [li_LinSel]).value = Range("O56").value
    bd5Coob.Range("AV" & [li_LinSel]).value = Range("E57").value
    bd5Coob.Range("AW" & [li_LinSel]).value = Range("E58").value
    bd5Coob.Range("AX" & [li_LinSel]).value = Range("E23").value
    bd5Coob.Range("AY" & [li_LinSel]).value = Range("O23").value
    bd5Coob.Range("AZ" & [li_LinSel]).value = Range("P25").value
    bd5Coob.Range("BA" & [li_LinSel]).value = Range("P56").value
    bd5Coob.Range("BB" & [li_LinSel]).value = Range("O22").value
    bd5Coob.Range("BC" & [li_LinSel]).value = Range("O54").value
    bd5Coob.Range("BD" & [li_LinSel]).value = Range("CRC_S400_COOB").value
    bd5Coob.Range("BE" & [li_LinSel]).value = strMsg
    bd5Coob.Activate
    Range("A1").Select
    Selection.AutoFilter
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    protPlan.FinalizaRotina
    MsgBox "Coobrigado atualizado no projeto.", vbInformation
    Range("E11").Select
    Set protPlan = Nothing
    Exit Sub
     
Fim:
    bd5Coob.Activate
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    Range("E11").Select
End Sub

Sub btnExcluiCoob_Clique()
    Dim li_LinSel As Integer
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    li_LinSel = Range("FIM_COOB").value
    If li_LinSel = 1 Then
       MsgBox "N|fffd|o existem coobrigados cadastrados!", vbExclamation
       GoTo Fim
    End If
    Range("A1").Select
    Selection.AutoFilter
    Application.GoTo Reference:="R2:R" & li_LinSel
    Selection.Copy
    Sheets.Add
    ActiveSheet.Name = "tmp"
    Range("A2").Select
    ActiveSheet.Paste
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    Range("BK2:BM" & Range("QT_COOB").value + 1).ClearContents
    Sheets("tmp").Activate
    On Error Resume Next
    Selection.SpecialCells(xlVisible).Select
    If Err Then GoTo Fim
    On Error GoTo 0
    li_LinSel = ActiveCell.Row
    Do While Range("G" & [li_LinSel]).value <> vbNullString
       xl99Auxi.Range("BK" & [li_LinSel]).value = Range("F" & [li_LinSel]).value
       xl99Auxi.Range("BL" & [li_LinSel]).value = Range("G" & [li_LinSel]).value
       xl99Auxi.Range("BM" & [li_LinSel]).value = Range("D" & [li_LinSel]).value
       li_LinSel = li_LinSel + 1
       If Range("G" & [li_LinSel]).value = vbNullString Then Exit Do
    Loop
    ActiveWorkbook.Names.Add Name:="listaCOOB_CPF", RefersToR1C1:= _
        "=Auxiliar!R2C63:R" & li_LinSel - 1 & "C65"
    DelXlTmp
    Range("flagEXCLUI_COOB").value = 1
    frmSelCoob.Show
    Set protPlan = Nothing
    Exit Sub
     
Fim:
    DelXlTmp
    On Error Resume Next
    bd5Coob.Activate
    Selection.AutoFilter
    protPlan.ProtegePlanilha
    xl99Auxi.Activate
    protPlan.ProtegePlanilha
    xl5Coob.Activate
    Range("E10").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Attribute VB_Name = "mdlCritica"
Public ErroFatalGeral As Boolean

Function Verifica_CPF(CPF As String) As Boolean
         Dim soma As Integer
         Dim Resto As Integer
         Dim i As Integer
         Dim CPFsInvalido(1 To 10)
         If CPF = vbNullString Then
            Verifica_CPF = False
            Exit Function
         End If
         If Len(CPF) > 11 Then
            Verifica_CPF = False
            Exit Function
         End If
         
         For i = 1 To 10
             CPFsInvalido(i) = String(11, i + 47)
         Next i
         CPF = Format(CPF, "00000000000")
         For i = 1 To Len(Trim(CPF))
             If Not IsNumeric(Mid$(CPF, i, 1)) Then
                Verifica_CPF = False
                Exit Function
             End If
         Next i
         For i = 1 To 10
             If CPF = CPFsInvalido(i) Then
                Verifica_CPF = False
                Exit Function
             End If
         Next i

         soma = 0
         For i = 1 To 9
             soma = soma + Val(Mid$(CPF, i, 1)) * (11 - i)
         Next i
         Resto = 11 - (soma - (Int(soma / 11) * 11))
         If Resto = 10 Or Resto = 11 Then Resto = 0
         If Resto <> Val(Mid$(CPF, 10, 1)) Then
            Verifica_CPF = False
            Exit Function
         End If
                
         soma = 0
         For i = 1 To 10
             soma = soma + Val(Mid$(CPF, i, 1)) * (12 - i)
         Next i
         Resto = 11 - (soma - (Int(soma / 11) * 11))
         If Resto = 10 Or Resto = 11 Then Resto = 0
         If Resto <> Val(Mid$(CPF, 11, 1)) Then
            Verifica_CPF = False
            Exit Function
         End If
            
         Verifica_CPF = True
End Function

Function Verifica_CGC(VLL_CGC As String) As Boolean

    Dim NRL_CGC As String
    Dim NRL_SOMA As Long
    Dim NRL_DIG1 As Integer
    Dim NRL_DIG2 As Integer
    If VLL_CGC = vbNullString Then
       Verifica_CGC = False
       Exit Function
    End If
    
    If Len(VLL_CGC) > 14 Then
       Verifica_CGC = False
       Exit Function
    End If
    
    NRL_CGC = Format(VLL_CGC, "000000000000000")
    
    For i = 1 To Len(Trim(NRL_CGC))
        If Not IsNumeric(Mid$(NRL_CGC, i, 1)) Then
           Verifica_CGC = False
           Exit Function
        End If
    Next i

    NRL_SOMA = Val(Mid(NRL_CGC, 1, 1)) * 6 + Val(Mid(NRL_CGC, 2, 1)) * 5 + Val(Mid(NRL_CGC, 3, 1)) * 4 + Val(Mid(NRL_CGC, 4, 1)) * 3 + Val(Mid(NRL_CGC, 5, 1)) * 2 + Val(Mid(NRL_CGC, 6, 1)) * 9 + Val(Mid(NRL_CGC, 7, 1)) * 8 + Val(Mid(NRL_CGC, 8, 1)) * 7 + Val(Mid(NRL_CGC, 9, 1)) * 6 + Val(Mid(NRL_CGC, 10, 1)) * 5 + Val(Mid(NRL_CGC, 11, 1)) * 4 + Val(Mid(NRL_CGC, 12, 1)) * 3 + Val(Mid(NRL_CGC, 13, 1)) * 2
    'NRL_DIG1 = Right(11 - NRL_SOMA Mod 11, 1)
    NRL_DIG1 = 11 - NRL_SOMA Mod 11
    If NRL_DIG1 = 10 Or NRL_DIG1 = 11 Then
        NRL_DIG1 = 0
    End If

    NRL_SOMA = Val(Mid(NRL_CGC, 1, 1)) * 7 + Val(Mid(NRL_CGC, 2, 1)) * 6 + Val(Mid(NRL_CGC, 3, 1)) * 5 + Val(Mid(NRL_CGC, 4, 1)) * 4 + Val(Mid(NRL_CGC, 5, 1)) * 3 + Val(Mid(NRL_CGC, 6, 1)) * 2 + Val(Mid(NRL_CGC, 7, 1)) * 9 + Val(Mid(NRL_CGC, 8, 1)) * 8 + Val(Mid(NRL_CGC, 9, 1)) * 7 + Val(Mid(NRL_CGC, 10, 1)) * 6 + Val(Mid(NRL_CGC, 11, 1)) * 5 + Val(Mid(NRL_CGC, 12, 1)) * 4 + Val(Mid(NRL_CGC, 13, 1)) * 3 + Val(Mid(NRL_CGC, 14, 1)) * 2
    'NRL_DIG2 = Right(11 - NRL_SOMA Mod 11, 1)
    NRL_DIG2 = 11 - NRL_SOMA Mod 11
    If NRL_DIG2 = 10 Or NRL_DIG2 = 11 Then
        NRL_DIG2 = 0
    End If
    Verifica_CGC = False
    
    If Right(VLL_CGC, 2) = NRL_DIG1 & NRL_DIG2 Then
        Verifica_CGC = True
    End If
End Function


Public Function VerDataCron(ByVal strPeriodo As String)
       On Error Resume Next
       'GSOL00089205
       Dim dtDataContrato As Date, dtDataDesembolso As Date

       VerDataCron = False
       If Len(Trim(strPeriodo)) = 0 Then
          VerDataCron = True
          Exit Function
       End If
       If Len(strPeriodo) <> 6 Then Exit Function
       
       'GSOL00089205
       If Not IsDate(xl2Prop.Range("E14").value) Then Exit Function
       dtDataContrato = CDate(xl2Prop.Range("E14").value)
       '
       
       'strPeriodo = Day(dtDataContrato) & "/" & Mid(strPeriodo, 1, 2) & "/" & Mid(strPeriodo, 3, 4)
       strPeriodo = FimMes("01" & "/" & Mid(strPeriodo, 1, 2) & "/" & Mid(strPeriodo, 3, 4))
           
       'if Day(dtDataContrato) = 31 and (Mid(strPeriodo, 1, 2) = 2 or Mid(strPeriodo, 1, 2) = 4 or Mid(strPeriodo, 1, 2) = 6 or Mid(strPeriodo, 1, 2) = 8 or Mid(strPeriodo, 1, 2) =
       'If Mid(strPeriodo, 1, 2) = 2 Then
       If Not IsDate(strPeriodo) Then
         VerDataCron = False   'Alterado 7 sprint
         Exit Function
       End If
       
       'GSOL00089205
       dtDataDesembolso = CDate(strPeriodo)
       If dtDataDesembolso < dtDataContrato Then Exit Function
       '
       
       VerDataCron = True
End Function

Public Function ValidaNome(ByVal fa_nome As String, ByVal fa_tppes As String)
'Fun|fffd||fffd|o para validar sequ|fffd|ncia de caracteres (evitando repeti|fffd||fffd|es)
'Autora: L|fffd|gia Rosane(Unisys) - Vers|fffd|o PowerBuilder
'Vers|fffd|o Visual Basic por Washington Santos (Media System)
    Dim ls_letra As String, ls_ant As String, ls_atu As String, ls_prx As String, ls_dprx As String
    Dim li_i As Integer, li_tamnome As Integer, li_pos As Integer, li_n As Integer
    Dim errMensagem As String
    'Sequencia de 4 caracteres iguais... (posi|fffd||fffd|o atual, -1, +1, +2)
    For li_i = 2 To Len(Trim(fa_nome))
        ls_ant = Mid(fa_nome, li_i - 1, 1)
        ls_atu = Mid(fa_nome, li_i, 1)
        ls_prx = Mid(fa_nome, li_i + 1, 1)
        ls_dprx = Mid(fa_nome, li_i + 2, 1)
    
        If ls_ant = ls_atu And ls_atu = ls_prx And ls_atu = ls_dprx Then
            errMensagem = "Sequ|fffd|ncia de caracteres inv|fffd|lida (caracteres repetidos)!"
            GoTo NomeInvalido
        End If
    Next li_i

    'O primeiro caracter n|fffd|o pode ser branco
    If Mid(fa_nome, 1, 1) = " " Then
       errMensagem = "O primeiro caracter de um NOME n|fffd|o pode ser vazio!"
       GoTo NomeInvalido
    End If

    'Se for pessoa F|fffd|sica, n|fffd|o permitir cadastrar o primeiro nome com menos de 2 letras
    If fa_tppes = "F" Then

        If InStr(1, fa_nome, " ") > 0 And InStr(1, fa_nome, " ") < 3 Then
            errMensagem = "O primeiro NOME do cliente deve possuir mais de uma letra!"
            GoTo NomeInvalido
        End If
    
        'Verifica se o primeiro caracter |fffd| uma letra e se n|fffd|o possui caracteres inv|fffd|lidos
        '(os valores ap|fffd|strofo, ponto, h|fffd|fen podem ser aceitos em nomes)
        If Not Application.WorksheetFunction.IsText(fa_nome) Then
            errMensagem = "Sequ|fffd|ncia de caracteres inv|fffd|lida!"
            GoTo NomeInvalido
        End If

        'N|fffd|o permitir cadastrar nenhum dos nomes PF com menos de 2 letras
        li_tamnome = Len(Trim(fa_nome))
    
        'O nome de pessoa f|fffd|sica n|fffd|o pode ser abreviado (Auditoria, 08/09/2003)
        If InStr(fa_nome, ".") Or InStr(fa_nome, ",") Then
            errMensagem = "O nome de pessoa f|fffd|sica n|fffd|o pode ser abreviado!"
            GoTo NomeInvalido
            
        End If

        For li_n = 1 To li_tamnome
            li_pos = InStr(li_n, fa_nome, " ")
            If li_pos > 0 Then
                'Contar qtas posi|fffd||fffd|es da |fffd|ltima posi|fffd||fffd|o at|fffd| o pr|fffd|ximo espa|fffd|o
                If (li_pos - li_n) < 2 Then
                    'testar se |fffd|ltimo nome (alterado para incluir cliente com nome terminado com somente 1 letra - 08/09/2003)
                    If (li_tamnome - li_pos) = 1 And (li_tamnome - li_n) = 1 Then

                        If MsgBox("O |fffd|ltimo nome possui apenas uma letra, deseja continuar o cadastro?", vbQuestion + vbYesNo) = vbNo Then
                            errMensagem = "Complete o nome!"
                            GoTo NomeInvalido
                        End If
                    End If
                End If
            End If
        Next li_n
    End If

    'Devido ao tipo logradouro + nome???
    'If (Len(fa_nome) < 30 And InStr(Trim(fa_nome), " ") = 0) Then
    '   errMensagem = "O campo Nome/Logradouro deve ser composto por pelo menos 2 nomes!"
    '   GoTo NomeInvalido
    'End If

    'N|fffd|o permitir cadastrar valores como "N|fffd|o consta", "N|fffd|o existe"
    If UCase(Mid(fa_nome, 1, 4)) = "NAO " Or UCase(Mid(fa_nome, 1, 4)) = "N|fffd|O " Then
       errMensagem = "Sequ|fffd|ncia inicial de caracteres inv|fffd|lida!"
       GoTo NomeInvalido
    End If

    'A |fffd|ltima posi|fffd||fffd|o do nome n|fffd|o pode ser um ponto
    li_tamnome = Len(Trim(fa_nome))
    If Mid(fa_nome, li_tamnome, 1) = "." Then
       errMensagem = "O |fffd|ltimo caracter de um NOME n|fffd|o pode ser um ponto!"
       GoTo NomeInvalido
    End If
    ValidaNome = True
    Exit Function
    
NomeInvalido:
    MsgBox errMensagem, vbExclamation
    ValidaNome = False
End Function

Function ValidaSEAP() As Integer
        ' Resultados poss|fffd|veis:
        ' 0 = Projeto sem erros
        ' 1 = Projeto com avisos
        ' 2 = Projeto com erros fatais (que impedem a gera|fffd||fffd|o do arquivo para o SEAP)
        
        Dim erroFATAL As Boolean
        erroFATAL = False
                
        Dim strMsgCritica As String, xlPlanOri As String, strMsg As String, strMsgAviso As String
        Dim lngErro, lngAviso, lngLin, lngCol As Long
                
        Application.StatusBar = "Executando as cr|fffd|ticas do SEAP, favor aguardar"
                
        'Sprint 9 Carrega as atividades para critica
        AtividadeEcon
        'Sprint16 Coordenadas
        InserirResumoGleba
                
        xlPlanOri = ActiveSheet.Name
        xl00Critica.Activate
        Range("B10:E100").ClearContents
        xl2Prop.Activate
        lngErro = 0
        lngAviso = 0
        
        If Range("TP_PROP").value = 9 Then
            strMsgCritica = strMsgCritica & "- Tipo da proposta" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("CD_ORG").value = -1 Then
            strMsgCritica = strMsgCritica & "- Nome da ag|fffd|ncia" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("E14").value = vbNullString Then
            strMsgCritica = strMsgCritica & "- Data da contrata|fffd||fffd|o" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("U15").value = -1 Then
            strMsgCritica = strMsgCritica & "- Prazo da opera|fffd||fffd|o" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("S22").value = -1 Then
            strMsgCritica = strMsgCritica & "- Nome do proponente" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("S44").value = -1 Then
            strMsgCritica = strMsgCritica & "- Atividade Principal" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("S24").value = -1 Then
            strMsgCritica = strMsgCritica & "- C.P.F. ou C.N.P.J" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("CD_MUNI").value = -1 Then
            strMsgCritica = strMsgCritica & "- Munic|fffd|pio do proponente" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        
       'GSOL00953122 - Custeio Agroamigo Crescer 11/2016  -  INI
        xl99Auxi.Range("IJ28").Calculate
        Dim BoGrava As Boolean
        BoGrava = False
        For aux = 30 To 29 + xl99Auxi.Range("IJ28").value
            flagBusca = 1
            If xl99Auxi.Range("IK" & [aux]).value = -1 Then
                If Not BoGrava Then
                   strMsgCritica = strMsgCritica & "- Optar pelo Custeio AgroAmigo Crescer torna obrigat|fffd|rio o preenchimento adequado do(s) Campo(s) abaixo:" & Chr(10)
                End If
                strMsgCritica = strMsgCritica & "   - " & LTrim(RTrim(xl99Auxi.Range("IG" & [aux]).value))
                preencherLinhaCritica "AgroAmigo Crescer", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
                BoGrava = True
            End If
        Next aux
        
        If BoGrava Then strMsgCritica = strMsgCritica & Chr(10)
        
       'REGRA ABAIXO FOI DESATIVADA DEVIDO DUPLICIDADE NA DEMANDA ABAIXO
       ' GSOL01044922-CUSTEIO AGR|fffd|COLA/OR|fffd|AMENTOS-ALTERAR A QUANTIDADE DE PARCELAS DE DESEMBOLSOS.
        
'        If xl2Prop.Range("E10").value = "Sim" Then
'          Dim intColcel As Integer
'          Dim intLincel As Integer
'          Dim intOrc As Integer
'
'          intLincel = 21
'          intColcel = 3
'
'          For intOrc = 1 To 10
'              For intLincel = 21 To 84
'                If xl1Orca.Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> vbNullString Then        'Parcela de Desembolso <> ""
'                      If UCase(xl1Orca.Cells(intLincel, intColcel + (17 * (intOrc - 1))).value) = "COLHEITA / BENEFICIAMENTO" Or _
'                         UCase(xl1Orca.Cells(intLincel, intColcel + (17 * (intOrc - 1))).value) = "COLHEITA/BENEFICIAMENTO" Then   ' Se o sub-grupo = "Colheita / Beneficiamento" ou "Colheita/Beneficiamento"
'                          If xl1Orca.Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> "2|fffd| Parcela" Then '- Desembolso
'                             strMsgCritica = strMsgCritica & "   - Or|fffd|amento " & xl1Orca.Cells(7, intColcel + (1 + (17 * (intOrc - 1)))).value & " est|fffd| com o formato de parcela(s) de Desembolso fora do formato adequado |fffd| op|fffd||fffd|o de Custeio Agroamigo Crescer, utilize o bot|fffd|o Atualizar na janela Or|fffd|amento para corre|fffd||fffd|o" & ";"
'                             preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
'                             strMsgCritica = vbNullString
'                             lngErro = lngErro + 1
'                             erroFATAL = True
'                          End If
'                      Else
'                          If xl1Orca.Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> "1|fffd| Parcela" Then '- Desembolso
'                             strMsgCritica = strMsgCritica & "   - Or|fffd|amento " & xl1Orca.Cells(7, intColcel + (1 + (17 * (intOrc - 1)))).value & " est|fffd| com o formato de parcela(s) de Desembolso fora do formato adequado |fffd| op|fffd||fffd|o de Custeio Agroamigo Crescer, utilize o bot|fffd|o Atualizar na janela Or|fffd|amento para corre|fffd||fffd|o" & ";"
'                             preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
'                             strMsgCritica = vbNullString
'                             lngErro = lngErro + 1
'                             erroFATAL = True
'                          End If
'                      End If
'                End If
'              Next intLincel
'          Next intOrc
'        End If
       'GSOL00953122 - Custeio Agroamigo Crescer 11/2016  -  FIM
        
        For lngLin = 33 To 42
            If Cells(lngLin, "AA").value = -1 Then
                strMsgCritica = strMsgCritica & "- CPF/CNPJ do Propriet|fffd|rio do im|fffd|vel " & Cells(lngLin, "D").value & _
                                "" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
            End If
            If Cells(lngLin, "AB").value = -1 Then
                strMsgCritica = strMsgCritica & "- Nome do Propriet|fffd|rio do im|fffd|vel " & Cells(lngLin, "D").value & _
                                "" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
            End If
            If Cells(lngLin, "AC").value = -1 Then
                strMsgCritica = strMsgCritica & "- Campos Municipio, |fffd|rea ou Ocupa|fffd||fffd|o do im|fffd|vel " & Cells(lngLin, "D").value & _
                                "" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
            End If
             
        Next lngLin
         
        If Range("S46").value = -1 Then
            strMsgCritica = strMsgCritica & "- Programa de Cr|fffd|dito" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("E47").value = vbNullString Then
            strMsgCritica = strMsgCritica & "- Taxa de juros" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        'RTC 31115 - Plano SAFRA 2016/2017 RNM INI
        If Range("R53").value = vbNullString Then
            strMsgCritica = strMsgCritica & "- 'Finalidade do Cr|fffd|dito/Aplica|fffd||fffd|o de Recursos' n|fffd|o informada." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        
        'RTC 31115 - Plano SAFRA 2016/2017 RNM INI
        If Range("totalPROP").value = vbNullString Then
            strMsgCritica = strMsgCritica & "- Valor do plano" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("S89").value = -1 Then
            strMsgCritica = strMsgCritica & "- Valor do Desembolso" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        If Range("E53").value = "" Then
            Range("E53").value = 0
        End If
       
        'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - INI
        If Range("R45").value = -1 Then
            strMsgCritica = strMsgCritica & "- O campo 'Proposta com origem nos planos de a|fffd||fffd|o territorial?' n|fffd|o foi informado corretamente." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        
        If Range("R48").value = -1 Then
            strMsgCritica = strMsgCritica & "- O campo 'Possui Seguro Rural?' n|fffd|o foi informado corretamente." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        
        If Range("S54").value = -1 Then
            strMsgCritica = strMsgCritica & "- O Campo 'Esta Proposta refere-se |fffd| Produ|fffd||fffd|o de Base Agroecol|fffd|gia/Org|fffd|nica? ' n|fffd|o foi informado corretamente." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
        'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - FIM
       'Or|fffd|amento at|fffd| 1 milh|fffd|o Cr|fffd|tica INI 03/07/2017 - INI
        If (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 Or xl2Prop.Range("portePROD") <> 2) Then
           If Range("M46").value = "Sim" And Range("valorTOTAL").value > 1000000 Then
                strMsgCritica = strMsgCritica & "- O valor financiado esta incompat|fffd|vel com a op|fffd||fffd|o de or|fffd|amento at|fffd| 1 milh|fffd|o." & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
            ElseIf Range("M46").value = "N|fffd|o" And Range("valorTOTAL").value <= 1000000 Then
                strMsgCritica = strMsgCritica & "- O valor financiado esta incompat|fffd|vel com a op|fffd||fffd|o de or|fffd|amento at|fffd| 1 milh|fffd|o." & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
            End If
        End If
        
        Dim lngLavoura As Integer
        lngLavoura = 0
        lngLin = 58
        Do While lngLin <= 67
             If Range("M" & [lngLin]).value > 0 And _
                Range("W" & [lngLin]).value = vbNullString Then
                strMsgCritica = strMsgCritica & "- Enquadramento do BACEN (Empreendimento)" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
                'Exit Do
             End If
             
'             'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
'             If Range("M" & [lngLin]).value > 0 And Range("BD" & [lngLin]).value = -1 Then
'                strMsgCritica = strMsgCritica & "- Os campos com informa|fffd||fffd|es das datas de plantio e colheita n|fffd|o foram preenchidos da Invers|fffd|o " & Range("D" & [lngLin]).value & ";"
'                preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
'                strMsgCritica = vbNullString
'                erroFATAL = True
'                lngErro = lngErro + 1
'                'Exit Do
'             End If
             
             'Proagro +
'             If Range("S48").Value = 2 Then
'                If Range("AI" & [lngLin]).Value = "-1" Then
'                   strMsgCritica = strMsgCritica & "- Empreendimento n|fffd|o contemplado no PROAGRO MAIS (" & _
'                                                   Range("D" & [lngLin]).Value & ");"
'                   lngErro = lngErro + 1
'                   Exit Do
'                End If
'             End If
'----------------------------------------------------------------------------------------------------------------------
            
            '- ADES|fffd|O AO PROAGRO SOMENTE LAVOURA.
             If Range("M" & [lngLin]).value > 0 Then
                If Range("CF" & [lngLin]).value = 1 Then
                    lngLavoura = lngLavoura + 1
                ElseIf Range("CF" & [lngLin]).value <> 1 And Range("flagPROAGRO").value <> 0 Then 'CF = LAVOURA
                    lngLavoura = lngLavoura + 1
                End If
             End If
            
            'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
            'GSOL01045542    CUSTEIO AGR|fffd|COLA-ALTERAR CR|fffd|TICAS DE ADES|fffd|O AO PROAGRO E DATAS DE PLANTIO E COLHEITA.
            '- DATAS DE PLANTIO E COLHEITA SOMENTE LAVOURA E EXCETO CULTURA PERMANENTE.
             If Range("M" & [lngLin]).value > 0 And Range("BD" & [lngLin]).value = -1 And lngLavoura > 0 Then
              If Range("AV" & [lngLin]).value <> "Permanente" Then
                strMsgCritica = strMsgCritica & "O(s) campo(s) 'Data(s) de Plantio/Colheita do item " & Range("D" & [lngLin]).value & " n|fffd|o foi(ram) informado(s), sendo obrigat|fffd|rio(s) para 'Lavoura', exceto de 'Cultura Permanente'. "
                preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
                strMsgCritica = vbNullString
                erroFATAL = True
                lngErro = lngErro + 1
                'Exit Do
              End If
             End If
             'GSOL01044922-CUSTEIO AGR|fffd|COLA/OR|fffd|AMENTOS-ALTERAR A QUANTIDADE DE PARCELAS DE DESEMBOLSOS.
             If Range("M" & [lngLin]).value > 0 And Range("CG" & [lngLin]).value = 1 Then
                strMsgCritica = strMsgCritica & "O orcamento " & Range("D" & [lngLin]).value & " n|fffd|o deve conter na lista de Desembolso 3|fffd| ou 4|fffd| parcela. "
                preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
                strMsgCritica = vbNullString
                erroFATAL = True
                lngErro = lngErro + 1
                'Exit Do
              End If
              
             'GSOL01044922-CUSTEIO AGR|fffd|COLA/OR|fffd|AMENTOS-ALTERAR A QUANTIDADE DE PARCELAS DE DESEMBOLSOS.
              If Range("M" & [lngLin]).value > 0 And Range("CH" & [lngLin]).value > 0 Then
                strMsgCritica = strMsgCritica & "O or|fffd|amento " & Range("D" & [lngLin]).value & " possui Parcela(s) de Desembolso em desacordo com o normativo, devendo para item de 'COLHEITA / BENEFICIAMENTO' ser considerado na 2|fffd| Parcela e os demais itens na 1|fffd| Parcela de Desembolso. "
                preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
                strMsgCritica = vbNullString
                erroFATAL = True
                lngErro = lngErro + 1
                'Exit Do
              End If
             
             'GSOL01044922-CUSTEIO AGR|fffd|COLA/OR|fffd|AMENTOS-ALTERAR A QUANTIDADE DE PARCELAS DE DESEMBOLSOS.
              'Incluir cr|fffd|tica ao "Gerar Arquivo SEAP", para cada or|fffd|amento, referente |fffd| obrigatoriedade do preenchimento do "Sub-Grupo", caso o "Valor Total" do item seja maior que zero, com o texto "{ERRO} Existe(m) item(ns) do or|fffd|amento '[Descri|fffd||fffd|o do Or|fffd|amento]' sem o preenchimento do 'Sub-Grupo'."
              If Range("M" & [lngLin]).value > 0 And Range("CI" & [lngLin]).value > 0 Then
                strMsgCritica = strMsgCritica & "Existe(m) item(ns) do or|fffd|amento " & Range("D" & [lngLin]).value & " sem o preenchimento do 'Sub-Grupo'."
                preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
                strMsgCritica = vbNullString
                erroFATAL = True
                lngErro = lngErro + 1
                'Exit Do
              End If
'----------------------------------------------------------------------------------------------------------------------
             'GSOL01921067 - CUSTEIO AGR|fffd|COLA-RETIRAR A CR|fffd|TICA DA AL|fffd|QUOTA DO PROAGRO - RNM - INI
'             If Range("M" & [lngLin]).value > 0 And _
'                Range("flagPROAGRO").value <> 0 And _
'                Range("AL" & [lngLin]).value = vbNullString Then
'                strMsgCritica = strMsgCritica & "- Al|fffd|quota PROAGRO or|fffd|amento " & Range("D" & [lngLin]).value & "" & ";"
'                preencherLinhaCritica "Proposta", strMsgCritica & ". "
'                strMsgCritica = vbNullString
'                lngErro = lngErro + 1
'                'Exit Do
'             End If
             'GSOL01921067 - CUSTEIO AGR|fffd|COLA-RETIRAR A CR|fffd|TICA DA AL|fffd|QUOTA DO PROAGRO - RNM - FIM
             
             'GSOL00132768
             If Range("M" & [lngLin]).value > 0 And _
                Range("AN" & [lngLin]).value = "4" And _
                Range("AM" & [lngLin]).value = vbNullString Then
                strMsgCritica = strMsgCritica & "- Cultivar do or|fffd|amento " & Range("D" & [lngLin]).value & "" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
                'Exit Do
             End If
             
             lngLin = lngLin + 1
         Loop
        
        'Or|fffd|amento at|fffd| 1 milh|fffd|o Cr|fffd|tica INI 03/07/2017 - INI
       
       
         'Proagro +
'         If Range("S48").Value = 2 And Range("J48").Value > 2 Then
'            strMsgCritica = strMsgCritica & "- Programa de Cr|fffd|dito n|fffd|o contemplado no PROAGRO MAIS;"
'            lngErro = lngErro + 1
'         End If
    
If lngLavoura > 0 Then

        'ALTERAR POR EMPREENDIMENTO
        If Range("S48").value = 0 And Range("R48").value = "N" And Range("valorTOTAL").value <= 300000 Then
            strMsgCritica = strMsgCritica & "- [Aviso] Informar a op|fffd||fffd|o pelo 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO'" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngAviso = lngAviso + 1
            strMsgAviso = strMsgAviso + "- [Aviso] Informar a op|fffd||fffd|o pelo 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO'"
            'lngErro = lngErro + 1
            'erroFATAL = True
        End If

        'INICIO: Tratamento de obrigatoriedade do PROAGRO para PRONAF (GSOL00223679)
        Dim isPRONAF As Boolean
        Dim contrataPROAGROTRAD As Boolean
        Dim contrataPROAGROMAIS As Boolean
        Dim contrataPROAGRO As Boolean   'Projeto contrata PROAGRO ( PROAGROMAIS OU PROAGROTRADICIONAL )
        Dim OrcMod(10) As String     'Localiza|fffd||fffd|o da modalidade na aba Or|fffd|amento
        Dim BoBenefTodo As Boolean   'Or|fffd|amentos com modalidade iguais a Beneficiamento ou Industrializa|fffd||fffd|o OU EXTRATIVISMO DE ESP|fffd|CIES NATIVA
        Dim BoBenefExtra As Boolean  'Or|fffd|amentos com modalidade iguais a EXTRATIVISMO DE ESP|fffd|CIES NATIVAS
        Dim BoBenefBenef As Boolean  'Or|fffd|amentos com modalidade iguais a Beneficiamento ou Industrializa|fffd||fffd|o
        Dim BoBenefDist As Boolean   'Or|fffd|amentos com Modalidade distintas, por|fffd|m h|fffd| Beneficiamento ou Industrializa|fffd||fffd|o
        Dim BoOutros As Boolean      'Or|fffd|amentos com Modalidade distinta a Beneficiamento ou Industrializa|fffd||fffd|o OU EXTRATIVISMO DE ESP|fffd|CIES NATIVAS
        
        isPRONAF = xl99Auxi.Range("flagORCA_PRONAF").value = "1"
        contrataPROAGROTRAD = xl2Prop.Range("flagPROAGRO").value = "1"
        contrataPROAGROMAIS = xl2Prop.Range("flagPROAGRO").value = "2"
       
        'H|fffd| uma depend|fffd|ncia das vari|fffd|veis desta cr|fffd|tica em rela|fffd||fffd|o a cr|fffd|tica acima GSOL00223679 -
        '    CUIDADO AO EXCLUIR A CR|fffd|TICA ACIMA
        'FIM: Tratamento de obrigatoriedade do PROAGRO para PRONAF (GSOL00223679)
        'Atendimento a Demanda GSOL01034762 - Cr|fffd|tica PROAGRO em Custeio Agricola - 09/2016 INI
        'contrataPROAGRO INDICA SE CONTRATA PROAGRO
        If contrataPROAGROTRAD Or contrataPROAGROMAIS Then
           contrataPROAGRO = True
        End If
        'ISPRONAF INDICA QUE |fffd| programa PRONAF
        'Indicar Beneficiamento ou Industrializa|fffd||fffd|o em todas ou parte.
        OrcMod(1) = "D11": OrcMod(2) = "U11": OrcMod(3) = "AL11": OrcMod(4) = "BC11": OrcMod(5) = "BT11"
        OrcMod(6) = "CK11": OrcMod(7) = "DB11": OrcMod(8) = "DS11": OrcMod(9) = "EJ11": OrcMod(10) = "FA11"

        BoBenefTodo = False
        BoBenefExtra = False
        BoBenefBenef = False
        BoBenefDist = False
        BoOutros = False

        For i = 58 To 67
           If xl2Prop.Range("V" & [i]).value <> 0 Then
              If xl1Orca.Range(OrcMod(xl2Prop.Range("V" & [i]).value)).value = "BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O" Then
                 BoBenefBenef = True
              ElseIf xl1Orca.Range(OrcMod(xl2Prop.Range("V" & [i]).value)).value = "EXTRATIVISMO DE ESP|fffd|CIES NATIVAS" Then
                 BoBenefExtra = True
              Else
                 BoOutros = True
              End If
           End If
        Next i
                
        If (BoBenefBenef Or BoBenefExtra) And Not BoOutros Then
           BoBenefTodo = True                     '1
           BoBenefDist = False
        ElseIf BoBenefBenef And Not BoOutros And Not BoBenefExtra Then
           BoBenefTodo = True                     '1
           BoBenefDist = False
        ElseIf BoBenefExtra And Not BoOutros And Not BoBenefBenef Then
           BoBenefTodo = True                     '1
           BoBenefDist = False
        ElseIf BoBenefBenef And (BoBenefExtra Or BoOutros) Then
           BoBenefTodo = False                    '2
           BoBenefDist = True
        ElseIf BoBenefExtra And (BoBenefBenef Or BoOutros) Then
           BoBenefTodo = False                    '2
           BoBenefDist = True
        ElseIf Not BoBenefBenef And Not BoBenefExtra And BoOutros Then
           BoBenefTodo = False                    '3
           BoBenefDist = False
        End If
          
        If isPRONAF Then
           If contrataPROAGRO Then
             If BoBenefTodo Then
               'Regra1 de acordo com a demanda
                strMsgCritica = strMsgCritica & "- Existe(m) item(ns) com empreendimento(s), cuja(s) modalidade(s) se enquadra(m) em 'BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O' OU 'EXTRATIVISMO DE ESP|fffd|CIES NATIVAS'." & Chr(10) & _
                                          "Portanto, o campo 'Op|fffd||fffd|o pelo PROAGRO' dever|fffd| ser preenchido com 'N|fffd|o se aplica'."
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
             End If
             If BoBenefDist Then
               'Regra2 de acordo com a demanda
                strMsgCritica = strMsgCritica & "- Existem itens com empreendimentos, cujas modalidades se enquadram em 'BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O' OU 'EXTRATIVISMO DE ESP|fffd|CIES NATIVAS' e outra modalidade distinta informada." & Chr(10) & _
                                    "Portanto, o campo 'Op|fffd||fffd|o pelo PROAGRO' dever|fffd| ser preenchido com 'N|fffd|o se aplica'."
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
             End If
           End If
           
           If BoOutros Then
             If Not contrataPROAGROTRAD And Not contrataPROAGROMAIS Then
               strMsgCritica = strMsgCritica & "- Quando o programa de cr|fffd|dito |fffd| PRONAF a contrata|fffd||fffd|o do PROAGRO (Tradicional ou Mais) |fffd| obrigat|fffd|ria;"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
               lngErro = lngErro + 1
               erroFATAL = True
             End If
           End If
        ElseIf Not isPRONAF Then
           If contrataPROAGRO Then
              If BoBenefTodo Then
                If contrataPROAGROMAIS Then
                 'Regra Existente
                  strMsgCritica = strMsgCritica & "- Para ades|fffd|o ao Proagro Mais Investimento |fffd| necess|fffd|rio que o tipo de programa seja PRONAF"
                    preencherLinhaCritica "Proposta", strMsgCritica & ". "
                    strMsgCritica = vbNullString
                  lngErro = lngErro + 1
                  erroFATAL = True
                End If
              ElseIf BoBenefDist Then
                If contrataPROAGROMAIS Then
                 'Regra Existente
                  strMsgCritica = strMsgCritica & "- Para ades|fffd|o ao Proagro Mais Investimento |fffd| necess|fffd|rio que o tipo de programa seja PRONAF"
                  preencherLinhaCritica "Proposta", strMsgCritica & ". "
                  strMsgCritica = vbNullString
                  lngErro = lngErro + 1
                  erroFATAL = True
                Else
                 'Regra2 de acordo com a demanda
                  strMsgCritica = strMsgCritica & "- Existem itens com empreendimentos, cujas modalidades se enquadram em 'BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O' e outra modalidade distinta informada." & Chr(10) & _
                                     "Portanto, o campo 'Op|fffd||fffd|o pelo PROAGRO' dever|fffd| ser preenchido com 'N|fffd|o se aplica'."
                  preencherLinhaCritica "Proposta", strMsgCritica & ". "
                  strMsgCritica = vbNullString
                  lngErro = lngErro + 1
                  erroFATAL = True
                End If
              ElseIf BoOutros Then
                If contrataPROAGROMAIS Then
                 'Regra Existente
                  strMsgCritica = strMsgCritica & "- Para ades|fffd|o ao Proagro Mais Investimento |fffd| necess|fffd|rio que o tipo de programa seja PRONAF"
                  preencherLinhaCritica "Proposta", strMsgCritica & ". "
                  strMsgCritica = vbNullString
                  lngErro = lngErro + 1
                  erroFATAL = True
                End If
              End If
           End If
        End If
        'Atendimento a Demanda GSOL01034762 - Cr|fffd|tica PROAGRO em Custeio Agricola - 09/2016 FIM
End If
        
        'GSOL01921067 - CUSTEIO AGR|fffd|COLA-RETIRAR A CR|fffd|TICA DA AL|fffd|QUOTA DO PROAGRO - RNM - INI 30/07/2018
'        ' aliquota proagro - JSR
'        Dim culturaOrc As String
'        Dim aliquotaPA As Double
'        Dim resultadoPA As Range
'        Dim orcamentosPA() As String
'
'        orcamentosPA = Split("D,U,AL,BC,BT,CK,DB,DS,EJ,FA", ",")
'
'        For i = LBound(orcamentosPA) To UBound(orcamentosPA)
'            culturaOrc = xl1Orca.Range(orcamentosPA(i) & "7").value
'            aliquotaPA = IIf(IsEmpty(xl1Orca.Range(orcamentosPA(i) & "14").value) = True, 0, CDbl(xl1Orca.Range(orcamentosPA(i) & "14").value))
'            Set resultadoPA = xl2Prop.Range("D56:D67").Find(culturaOrc)
'
'            If resultadoPA Is Nothing Then GoTo pulandoOrcamento
'
'            If (contrataPROAGROTRAD And (aliquotaPA < 2 Or aliquotaPA > 4)) _
'                Or (contrataPROAGROMAIS And (aliquotaPA < 1 Or aliquotaPA > 6)) Then
'                 strMsgCritica = strMsgCritica & "- O or|fffd|amento para a '" & culturaOrc _
'                    & "' est|fffd| com a 'Al|fffd|quota do PROAGRO' fora do par|fffd|metros determinados pelo Banco Central do Brasil;"
'                preencherLinhaCritica "Proposta", strMsgCritica & ". "
'                strMsgCritica = vbNullString
'                 lngErro = lngErro + 1
'                erroFATAL = True
'            End If
'
'pulandoOrcamento:
'        Next i
        'GSOL01921067 - CUSTEIO AGR|fffd|COLA-RETIRAR A CR|fffd|TICA DA AL|fffd|QUOTA DO PROAGRO - RNM - FIM 30/07/2018
                    
         lngLin = 74
         Do While lngLin <= 78
             If Range("M" & [lngLin]).value > 0 And _
                Range("W" & [lngLin]).value = vbNullString Then
                strMsgCritica = strMsgCritica & "- Enquadramento do BACEN (Empreendimento)" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
                'Exit Do
             End If
             lngLin = lngLin + 1
         Loop
        
         lngLin = 94
         Do While lngLin <= 108
             For lngCol = 6 To 15 Step 3
                 If Cells(lngLin, lngCol).value > 0 And _
                    Cells(lngLin, lngCol + 1).value = vbNullString Then
                    strMsgCritica = strMsgCritica & "- M|fffd|s do Desembolso no Cronograma" & ";"
                    preencherLinhaCritica "Proposta", strMsgCritica & ". "
                    strMsgCritica = vbNullString
                    lngErro = lngErro + 1
                    erroFATAL = True
                    Exit Do
                 End If
             Next lngCol
             lngLin = lngLin + 1
         Loop
'         lngLin = 113
'         For lngCol = 6 To 15 Step 3
'             If Cells(lngLin, lngCol).value > 0 And _
'                Cells(lngLin, lngCol + 1).value = vbNullString Then
'                strMsgCritica = strMsgCritica & "- M|fffd|s do Desembolso da taxa de elabora|fffd||fffd|o no Cronograma" & ";"
'                preencherLinhaCritica "Proposta", strMsgCritica & ". "
'                strMsgCritica = vbNullString
'                lngErro = lngErro + 1
'                erroFATAL = True
'             End If
'         Next lngCol
         
         If Range("T118").value > 0 Then
            strMsgCritica = strMsgCritica & "- Total Reembolso" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
         End If
         
         lngLin = 120
         If Range("D120").value = vbNullString Then
            strMsgCritica = strMsgCritica & "- Data do 1|fffd| reembolso" & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
         End If
         Do While lngLin <= 124
            If Cells(lngLin, "A").value > 0 And _
               Cells(lngLin, "E").value = vbNullString Then
               strMsgCritica = strMsgCritica & "- Parcelas / Percentuais do reembolso" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
               lngErro = lngErro + 1
               erroFATAL = True
               Exit Do
            End If
            lngLin = lngLin + 1
         Loop
'         lngLin = 120
'         Do While lngLin <= 124
'            If Cells(lngLin, "U").Value > Range("T15").Value Then
'               strMsgCritica = strMsgCritica & "- Reembolso - Prazo" & ";"
'               lngErro = lngErro + 1
'               Exit Do
'            End If
'            lngLin = lngLin + 1
'         Loop
         
'         If Range("N171").value <= 0 Then
'            strMsgCritica = strMsgCritica & "- Apura|fffd||fffd|o do resultado" & ";"
'                preencherLinhaCritica "", strMsgCritica & ". "
'                strMsgCritica = vbNullString
'            lngErro = lngErro + 1
'         End If
         
         lngLin = 204
         Do While lngLin <= 213
            If Cells(lngLin, "M").value > 0 And _
               Cells(lngLin, "D").value = vbNullString Then
               strMsgCritica = strMsgCritica & "- Descri|fffd||fffd|o da garantia (Penhor agr|fffd|cola)"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
               lngErro = lngErro + 1
               erroFATAL = True
               Exit Do
            End If
            lngLin = lngLin + 1
         Loop
         
        'GSOL00089205
        strMsg = processaCriticaDesembolso()
        If strMsg <> vbNullString Then
            strMsgCritica = strMsgCritica & "- " & strMsg
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
         
        'GSOL00536344
        strMsg = processaCriticaEstiagem()
        If strMsg <> vbNullString Then
            strMsgCritica = strMsgCritica & "- " & strMsg
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If
         
        'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
        'In|fffd|cio da cr|fffd|tica
        Dim Str_Glb_Fto As String
        Dim Str_Pts As String
        
        For lngLinSel = 101 To bd10Geodesica.Range("B99").value + 100
            'DESABILITADO NA SPRINT 11
            'If bd10Geodesica.Range("S" & [lngLinSel]).value = -1 Then
            '    Str_Glb_Fto = Str_Glb_Fto & bd10Geodesica.Range("F" & [lngLinSel]).value & " - " & bd10Geodesica.Range("G" & [lngLinSel]).value & Chr(10)
            '    lngErro = lngErro + 1
            '    erroFATAL = True
            'End If

            If (bd10Geodesica.Range("J" & [lngLinSel]).value < -33 Or bd10Geodesica.Range("J" & [lngLinSel]).value > 5) Then
                Str_Pts = Str_Pts & "Gleba - " & bd10Geodesica.Range("F" & [lngLinSel]).value & " / Pontos - " & bd10Geodesica.Range("I" & [lngLinSel]).value & " - Latitude " & Chr(10)
                lngErro = lngErro + 1
                erroFATAL = True
            End If
               
            If (bd10Geodesica.Range("K" & [lngLinSel]).value < -74 Or bd10Geodesica.Range("K" & [lngLinSel]).value > -33) Then
                Str_Pts = Str_Pts & "Gleba - " & bd10Geodesica.Range("F" & [lngLinSel]).value & " / Pontos - " & bd10Geodesica.Range("I" & [lngLinSel]).value & " - Longitude " & Chr(10)
                lngErro = lngErro + 1
                erroFATAL = True
            End If
            
            If (bd10Geodesica.Range("L" & [lngLinSel]).value < -100 Or bd10Geodesica.Range("L" & [lngLinSel]).value > 3000) Then
                Str_Pts = Str_Pts & "Gleba - " & bd10Geodesica.Range("F" & [lngLinSel]).value & " / Pontos - " & bd10Geodesica.Range("I" & [lngLinSel]).value & " - Altitude " & Chr(10)
                lngErro = lngErro + 1
                erroFATAL = True
            End If
            
       
            
        Next lngLinSel
        
        If Str_Glb_Fto <> vbNullString Then
          strMsgCritica = strMsgCritica & "- {ERRO}{Geod|fffd|sicas} A(s) Gleba(s)" & Chr(10) _
                  & Str_Glb_Fto & Chr(10) _
                  & ", n|fffd|o apresenta(m) a quantidade m|fffd|nima de pontos compat|fffd|vel com o(s) formato(s) informado(s);" & Chr(10)
                  lngErro = lngErro + 1
                  erroFATAL = True
        End If
        
        If Str_Pts <> vbNullString Then
          strMsgCritica = strMsgCritica & "- {ERRO}{Geod|fffd|sicas} As(s) Gleba(s) - Pontos(s) " & Chr(10) & _
                   Str_Pts & ", n|fffd|o est|fffd|(|fffd|o) no formato e/ou limite compat|fffd|vel(is);" & Chr(10) & Chr(10)
              lngErro = lngErro + 1
              erroFATAL = True
        End If
        
        Dim Str_Glb_Ausencia As String
        Dim Str_Empreed_Ausencia As String
        Dim Str_Inv_Ausencia As String
        Dim Str_Glb_Obrigat As String
        
             
        For lngLinSel = 58 To 67
            'GSOL01044612    SEAP/CUSTEIO AGR|fffd|COLA-AJUSTAR A CR|fffd|TICA DE OBRIGATORIEDADE DE INFORMA|fffd||fffd|ES GEOD|fffd|SICAS PARA OS PROJETOS DE CUSTEIO AGR|fffd|COLA.
            If xl2Prop.Range("AY" & [lngLinSel]).value = -1 And xl2Prop.Range("BB" & [lngLinSel]).value = 1 Then
                Str_Glb_Obrigat = Str_Glb_Obrigat & " Invers|fffd|o - " & xl2Prop.Range("AD" & [lngLinSel]).value & " - " & xl2Prop.Range("AJ" & [lngLinSel]).value & Chr(10)
            End If
            
'            20171127 - RNM - INI - Retirada da cr|fffd|tica de acordo com a - Retirada de exibi|fffd||fffd|o da cr|fffd|tica, referente |fffd|s informa|fffd||fffd|es geod|fffd|sicas, nos projetos diferentes de lavoura (Incidente 2017-7653176)./
            If Str_Glb_Obrigat <> vbNullString Then
              strMsgCritica = strMsgCritica & "- {ERRO}{Geod|fffd|sicas} O(s) campo(s) de 'Informa|fffd||fffd|es Geod|fffd|sicas' do item " & Str_Glb_Obrigat & " n|fffd|o foram informados, sendo obrigat|fffd|rio." & Chr(10)
                preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
                strMsgCritica = vbNullString
              lngErro = lngErro + 1
              erroFATAL = True
            End If
'            20171127 - RNM - FIM - Retirada da cr|fffd|tica de acordo com a - Retirada de exibi|fffd||fffd|o da cr|fffd|tica, referente |fffd|s informa|fffd||fffd|es geod|fffd|sicas, nos projetos diferentes de lavoura (Incidente 2017-7653176)./

            Str_Glb_Obrigat = vbNullString
            '
        Next lngLinSel
       
        Dim StrInv As String
        Dim IntInv As Integer
        Dim IntGleba As Integer
        Dim DBAreaNaoCult As Double
        Dim FlagProxGleba As Boolean
        Dim invIni As Integer
        Dim invLinItem As Integer
        Dim StrInverDesc As String
        FlagProxGleba = True
        StrInv = vbNullString
        invIni = 0
        
        'Corre|fffd||fffd|o Atividade 311961
        bd10Geodesica.Calculate
          
        For lngLinSel = 101 To bd10Geodesica.Range("BA101").End(xlDown).Row
           
            'Quantidade de Pontos por Gleba
           If bd10Geodesica.Range("BM" & lngLinSel).value > 60 Then
                StrInv = bd10Geodesica.Range("BA" & lngLinSel).value
                strMsgCritica = strMsgCritica & " - {ERRO}{Geod|fffd|sicas}  O(s) item(ns) de invers|fffd|o " & StrInv & " da Gleba " & bd10Geodesica.Range("BB" & lngLinSel).value & " ultrapassa o limite de 60 pontos por Gleba." & Chr(10)
                preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
           End If
           If lngLinSel - 100 <= bd10Geodesica.Range("BJ99").value Then
                    'GSOL01923494 item 3 - Cr|fffd|tica de quantidade de pontos incompativeis com o limite estabelecido pelo FORMATO DA GLEBA rnm 26/12/2018
                    If bd10Geodesica.Range("BQ" & [lngLinSel]).value = -1 Then
                        For invLinItem = 1 To bd10Geodesica.Range("A1").End(xlDown).Row
                            If bd10Geodesica.Range("BA" & [lngLinSel]).value = bd10Geodesica.Range("A" & invLinItem + 1).value Then
                                StrInverDesc = bd10Geodesica.Range("B" & invLinItem + 1).value
                            End If
                        Next invLinItem
                        ' Formato da Gleba e a quantidade de pontos
                        If bd10Geodesica.Range("BA" & [lngLinSel]).value <> invIni Then
                           strMsgCritica = strMsgCritica & "{ERRO} - O item de invers|fffd|o " & Format(bd10Geodesica.Range("BA" & lngLinSel).value, "00") & ", " & StrInverDesc & _
                           ", da janela 'Coordenadas Geod|fffd|sicas' n|fffd|o apresenta(m) a quantidade m|fffd|nima de pontos compat|fffd|vel com o(s) formato(s) informado(s)."
                           lngMsgErros = lngMsgErros + 1
                           preencherLinhaCritica "Geod|fffd|sicas", strMsgCritica & ". "
                           strMsgCritica = vbNullString
                           lngErro = lngErro + 1
                           erroFATAL = True
                           invIni = 0
                        End If
                   End If
                   'GSOL01923494 item 3 - Cr|fffd|tica de quantidade de pontos incompativeis com o limite estabelecido pelo FORMATO DA GLEBA rnm 26/12/2018
                   If (bd10Geodesica.Range("BP" & lngLinSel).value < -0.1 Or bd10Geodesica.Range("BP" & lngLinSel).value > 0.1) And bd10Geodesica.Range("BM" & lngLinSel).value > 1 Then
                       For invLinItem = 1 To bd10Geodesica.Range("A1").End(xlDown).Row
                             If bd10Geodesica.Range("BA" & [lngLinSel]).value = bd10Geodesica.Range("A" & invLinItem + 1).value Then
                                 StrInverDesc = bd10Geodesica.Range("B" & invLinItem + 1).value
                             End If
                       Next invLinItem
                        
                       If bd10Geodesica.Range("BA" & [lngLinSel]).value <> invIni And bd10Geodesica.Range("BR" & [lngLinSel]).value = 0 Then
                           strMsgCritica = strMsgCritica & "{ERRO} - O item de invers|fffd|o " & Format(bd10Geodesica.Range("BA" & lngLinSel).value, "00") & ", " & StrInverDesc & _
                           ", possui o percentual da diferen|fffd|a entre a |fffd|rea Financiada e a |fffd|rea da(s) Gleba(s), em rela|fffd||fffd|o |fffd| |fffd|rea Financiada, fora dos par|fffd|metros determinados pelo Banco Central do Brasil." & Chr(10)
                           preencherLinhaCritica "Geod|fffd|sicas", strMsgCritica & ". "
                           strMsgCritica = vbNullString
                           lngErro = lngErro + 1
                           erroFATAL = True
                           invIni = 0
                       End If
                        
                       If bd10Geodesica.Range("BJ" & lngLinSel).value > bd10Geodesica.Range("BI" & lngLinSel).value Then
                          strMsgCritica = strMsgCritica & " - {ERRO} - A Gleba " & Format(bd10Geodesica.Range("BB" & lngLinSel).value, "00") & _
                           " do item de invers|fffd|o " & Format(bd10Geodesica.Range("BA" & lngLinSel).value, "00") & ", " & StrInverDesc & _
                           ", possui |fffd|rea Cultivada maior que |fffd|rea Financiada." & Chr(10)
                           preencherLinhaCritica "Geod|fffd|sicas", strMsgCritica & ". "
                           strMsgCritica = vbNullString
                           lngErro = lngErro + 1
                           erroFATAL = True
                       End If
                        
                   End If
                     
                   invIni = bd10Geodesica.Range("BA" & [lngLinSel]).value
                     
                   If bd10Geodesica.Range("BD" & lngLinSel).value < 0 Then
                       strMsgCritica = strMsgCritica & " - {ERRO} - A Gleba " & Format(bd10Geodesica.Range("BB" & lngLinSel).value, "00") & _
                        " do item de invers|fffd|o " & Format(bd10Geodesica.Range("BA" & lngLinSel).value, "00") & " possui |fffd|rea N|fffd|o Cultivada com valor negativo." & Chr(10)
                       preencherLinhaCritica "Geod|fffd|sicas", strMsgCritica & ". "
                       strMsgCritica = vbNullString
                       lngErro = lngErro + 1
                       erroFATAL = True
                   End If
           End If
           If bd10Geodesica.Range("BN" & lngLinSel).value <> vbNullString And bd10Geodesica.Range("BN" & lngLinSel).value = 0 Then
                StrInv = bd10Geodesica.Range("BA" & lngLinSel).value
                strMsgCritica = strMsgCritica & " - {ERRO}{Geod|fffd|sicas} A Gleba " & Format(bd10Geodesica.Range("BB" & lngLinSel).value, "00") & _
                     " do item de invers|fffd|o " & Format(bd10Geodesica.Range("BA" & lngLinSel).value, "00") & " possui o formato da Gleba inv|fffd|lido." & Chr(10)
                preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True

           End If
           
           
           'DESABILITADO NA SPRINT 11
           'Valida|fffd||fffd|o da |fffd|rea n|fffd|o Cultivada
'           If IntInv = bd10Geodesica.Range("C" & lngLinSel).value Then
'             If IntGleba = bd10Geodesica.Range("F" & lngLinSel).value Then
'                If DBAreaNaoCult <> bd10Geodesica.Range("H" & lngLinSel).value And FlagProxGleba = True Then
'                     strMsgCritica = strMsgCritica & " - {ERRO}{Geod|fffd|sicas} A Gleba " & Format(bd10Geodesica.Range("F" & lngLinSel).value, "00") & _
'                     " do item de invers|fffd|o " & Format(IntInv, "00") & ", '" & _
'                     bd10Geodesica.Range("D" & lngLinSel).value & "', possui ponto(s) com informa|fffd||fffd|o de '|fffd|rea n|fffd|o Cultivada' diferente." & Chr$(10)
'                 preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
'                 strMsgCritica = vbNullString
'                     lngErro = lngErro + 1
'                     erroFATAL = True
'                     FlagProxGleba = False
'                End If
'             Else
'                FlagProxGleba = True
'             End If
'           End If
                

                
'              IntInv = bd10Geodesica.Range("C" & lngLinSel).value
'              IntGleba = bd10Geodesica.Range("F" & lngLinSel).value
'              DBAreaNaoCult = bd10Geodesica.Range("H" & lngLinSel).value
'
        Next lngLinSel
      
        'GSOL01923494 item 3 - Cr|fffd|tica de quantidade de pontos incompativeis com o limite estabelecido pelo FORMATO DA GLEBA rnm 26/12/2018
        If bd10Geodesica.Range("B99").value > 4090 Then
              strMsgCritica = strMsgCritica & "{ERRO} - A quantidade de pontos informada [(Total de Pontos de todas as glebas)] excede o limite permitido pelo BACEN (4.090)."
              preencherLinhaCritica "Geod|fffd|sicas", strMsgCritica & ". "
              strMsgCritica = vbNullString
              lngMsgErros = lngMsgErros + 1
              lngErro = lngErro + 1
              erroFATAL = True
        End If
        'GSOL01923494 item 3 - Cr|fffd|tica de quantidade de pontos incompativeis com o limite estabelecido pelo FORMATO DA GLEBA rnm 26/12/2018
      
        
        'Empreendimento
        For lngLinSel = 58 To 67
            If xl2Prop.Range("BA" & [lngLinSel]).value = -1 Then
                Str_Empreed_Ausencia = Str_Empreed_Ausencia & " Invers|fffd|o - " & xl2Prop.Range("AD" & [lngLinSel]).value & " - " & xl2Prop.Range("AJ" & [lngLinSel]).value & " n|fffd|o possui empreendimento!" & Chr(10)
                lngErro = lngErro + 1
                erroFATAL = True
            End If
        Next lngLinSel
        
        'T|fffd|rmino da valida|fffd||fffd|o da Coordenada Geod|fffd|sica
        'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
        
        'GSOL00670264
        'If xl2Prop.Range("T50").Value = 1 And xl2Prop.Range("totalPROP").Value > xl99Auxi.Range("II3").Value Then 'Identificar proponente INSTITUTO NORDESTE DE CIDADANIA
        '    strMsgCritica = strMsgCritica & "- 1 - Valor do FINANCIAMENTO maior do que o valor de cr|fffd|dito permitido para o Elaborador em quest|fffd|o" & ";" 'Se  Prog = Programa Pronaf Mulher (406) limite = R$ 30.000,00 sen|fffd|o Limite = R$ 15.000,00
        '    lngErro = lngErro + 1
        '    erroFATAL = True
        'End If
     
        'GSOL00670264
        For lngLinSel = 2 To 33
            If xl99Auxi.Range("BP" & [lngLinSel]).value = xl2Prop.Range("E46").value Then 'Se encontrar o programa
                If xl99Auxi.Range("BQ" & [lngLinSel]).value = 528 Or xl99Auxi.Range("BQ" & [lngLinSel]).value = 529 Then 'Verificar se |fffd| 528 ou 529
                    If xl2Prop.Range("totalPROP").value > xl99Auxi.Range("BU" & [lngLinSel]).value Then
                          strMsgCritica = strMsgCritica & "- Valor do financiamento maior do que o valor de cr|fffd|dito permitido para o programa" & ";"
                          preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
                          strMsgCritica = vbNullString
                          lngErro = lngErro + 1
                          erroFATAL = True
                    End If
                End If
                If xl99Auxi.Range("BQ" & [lngLinSel]).value = 0 Then  ' DESABILITA (PROG=0)       'Verificar se trata do programa 433 Pronaf Comum
                   ' If xl2Prop.Range("totalPROP").Value > xl99Auxi.Range("BU" & [lngLinSel]).Value Then 'Verificar se permite o valor
                   '       strMsgCritica = strMsgCritica & "- Valor do FINANCIAMENTO maior do que o valor de cr|fffd|dito permitido para o programa" & ";"
                   '       lngErro = lngErro + 1
                   '       erroFATAL = True
                   ' End If
                    
                    If xl2Prop.Range("E47").value > xl99Auxi.Range("BX" & [lngLinSel]).value Then  'Verifica se excede a taxa Anual do programa
                          strMsgCritica = strMsgCritica & "- Valor da TAXA DE JUROS ANUAL maior do que a taxa permitida para o programa" & ";"
                 preencherLinhaCritica "Geodesicas", strMsgCritica & ". "
                strMsgCritica = vbNullString
                         lngErro = lngErro + 1
                          erroFATAL = True
                    End If
                End If
             End If
        Next lngLinSel
         
        
        '<< GSOL00551305
'        If Range("flagPROAGRO") > 0 _
'            And Range("Proposta!$F$55") < Range("valorLimPROAGRO") _
'            And (Range("Proposta!$F$55") + Range("totalCUSTEIO")) > Range("valorLimPROAGRO") Then
'
'            strMsgAviso = strMsgAviso & "- O valor do PROAGRO foi recalculado observando o limite estabelecido (R$ " & _
'                Format(Range("valorLimPROAGRO"), "#,##0.00") & ")" & vbCrLf & _
'                "  > Valor j|fffd| enquadrado: R$ " & Format(Range("Proposta!$F$55"), "#,##0.00") & vbCrLf & _
'                "  > Valor PROAGRO: R$ " & Format(Range("Auxiliar!$GE$19"), "#,##0.00")
'            'GSOL00586070 - SEAP-RECOR - Manuten|fffd||fffd|o de Sistema - Ajustes em mensagens da Planilha de Custeio - INI RNM 15/10/2012
'            'lngErro = lngErro + 1
'            'Manuten|fffd||fffd|o onde |fffd| retirado o flag de inconsist|fffd|ncia e exibe a mensagem de aviso.
'            ' JSR - TRANSFERIDO PARA O FINAL DO M|fffd|TODO
'            'GSOL00586070 - SEAP-RECOR - Manuten|fffd||fffd|o de Sistema - Ajustes em mensagens da Planilha de Custeio - FIM RNM 15/10/2012
'
'            lngAviso = lngAviso + 1
'        End If
        
        
        
'        REATIVAR BASEADO NO EMPREENDIMENTO
'        If Range("flagPROAGRO") > 0 _
'            And Range("Proposta!$F$55") >= Range("valorLimPROAGRO") Then
'
'            strMsgCritica = strMsgCritica & "- Esta proposta excede o valor limite dispon|fffd|vel para o seguro PROAGRO (R$ " & _
'                Format(Range("valorLimPROAGRO"), "#,##0.00") & ")"
'            lngErro = lngErro + 1
'            erroFATAL = True
'        End If
        
        ' d000347 -  16/09/2014 - GSOL00822636
        For i = 58 To 67
            If Len(Range("D" & [i])) > 0 And Len(Range("P" & [i])) = 0 Then
                strMsgCritica = strMsgCritica & "- Cultura sem im|fffd|vel digitado em Programa de Invers|fffd|es" & ";"
                preencherLinhaCritica "Proposta", strMsgCritica & ". "
                strMsgCritica = vbNullString
                lngErro = lngErro + 1
                erroFATAL = True
                Exit For
            End If
        Next i
        
        'Sprint 11
        'Carga de Or|fffd|amentos para comparar
        Dim SQOrc As Long
        Dim TpOrcamento As Byte
        Dim ArrOrc(10) As String, ArrOrc_Result(10) As String
        Dim StrAnt, StrNmOrc As String
        Dim Y As Integer
        Dim BoCarrega As Boolean
        Dim DtOrcaFixa As Date
        Dim DtOrcaSel As String
        
        BoCarrega = False
        DtOrcaSelForca = "03/11/2017"
        
        For i = 1 To 10
           ArrOrc(i) = vbNullString
        Next i
        
        For i = 1 To 10
           ArrOrc([i]) = xl2Prop.Range("S" & (i + 57)).value
        Next i

        QuickSort ArrOrc, LBound(ArrOrc), UBound(ArrOrc)
        
        StrAnt = vbNullString

        Y = 1
        For i = 1 To 10
           If ArrOrc(i) <> StrAnt And ArrOrc(i) <> vbNullString Then
              ArrOrc_Result(Y) = ArrOrc(i)
              Y = Y + 1
              StrAnt = ArrOrc(i)
           End If
        Next i
                
        ' Desabilitado em 03/11/2017 Sprint 13
'        If (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2) and And xl2Prop.Range("M46").value <> "Sim" Then
'                'And xl2Prop.Range("M46").value <> "Sim")
'           'Or|fffd|amento ate 1 milh|fffd|o
'           BoCarrega = False
'        End If
        
        'If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then
        If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("portePROD").value = 2)) Then
           'Pronaf
           BoCarrega = True
        End If
                
        If BoCarrega Then   'True indica que o Or|fffd|amento |fffd| PRONAF ou AT|fffd| 1 MILH|fffd|O
            'Cr|fffd|tica de Or|fffd|amento
           'Atividade 118797 - Retirar a cr|fffd|tica momentaneamente - INI 2017/06/22
          ' DtOrcaSel = Range("DTORCA" & Format(i, "00")).value
        
           For i = 1 To 10
'                'lngOrca - Nro do Or|fffd|amento (Sequencial) para obter o Sequencial do Or|fffd|amento.
'                'TpOrca  - Tipo de Or|fffd|amento ( 0 - Pronaf e 1 - At|fffd| 1 milh|fffd|o)
'                'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
'                'StrNmOrca - Nome do Or|fffd|amento
                If ArrOrc_Result(i) <> vbNullString Then
                    SQOrc = xl1Orca.Range("SQORCA" & Mid(ArrOrc_Result(i), 8, 2)).value
                    If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then
                       TpOrcamento = 0  ' Pronaf
                    ElseIf (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD").value <> 2 And xl2Prop.Range("M46").value = "Sim") Then
                       TpOrcamento = 1  ' Milh|fffd|o
                    End If
                    StrNmOrc = xl1Orca.Range("nomeORCA" & Mid(ArrOrc_Result(i), 8, 2)).value
                    If Len(StrNmOrc) <> 12 And Mid(StrNmOrc, 1, 10) <> "Or|fffd|amento " And StrNmOrc <> vbNullString Then
                      CarregaOrca SQOrc, Mid(ArrOrc_Result(i), 8, 2), TpOrcamento, 1  ', StrNmOrc
                    End If
                End If
           Next i
            
           'Atividade 118797 - Retirar a cr|fffd|tica momentaneamente - FIM 2017/06/22
     '      Calculate
        'Cr|fffd|tica de Or|fffd|amento
        'SPRINT 13 - critica sele|fffd||fffd|o do orcamento - INI 2017/11/06
'           For i = 1 To 10
'               If Mid(ArrOrc_Result(i), 8, 2) <> vbNullString Then
'                  If Range("DTORCA" & Mid(ArrOrc_Result(i), 8, 2)).value = vbNullString Or _
'                    (Range("DTORCA" & Mid(ArrOrc_Result(i), 8, 2)).value <> vbNullString And _
'                     CDate(Range("DTORCA" & Mid(ArrOrc_Result(i), 8, 2)).value) < DtOrcaSelForca) Then
'                        strMsgCritica = strMsgCritica & "- O or|fffd|amento " & xl1OrcaBkp.Range("A" & CInt(Mid(ArrOrc_Result(i), 8, 2)) + 10).value & " existente na proposta necessita atualizar a 'Base de Dados' da Planilha de Custeio Agr|fffd|cola. Portanto, dever|fffd| selecionar novamente o or|fffd|amento para vincula|fffd||fffd|o |fffd| proposta." & ";"
'                        preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
'                        strMsgCritica = vbNullString
'                        lngErro = lngErro + 1
'                        erroFATAL = True
'                   Else
'                     If xl1OrcaBkp.Range("A" & CInt(Mid(ArrOrc_Result(i), 8, 2)) + 10).value <> vbNullString And _
'                        Range("MODOrca" & Mid(ArrOrc_Result(i), 8, 2)).value <> "EXTRATIVISMO" Then
'                        strMsgCritica = strMsgCritica & "- O or|fffd|amento " & xl1OrcaBkp.Range("A" & CInt(Mid(ArrOrc_Result(i), 8, 2)) + 10).value & " n|fffd|o confere com a Base de Dados existente na Planilha. Sugerimos 'Selecionar' o or|fffd|amento novamente e inclu|fffd|-lo no projeto" & ";"
'                        preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
'                        strMsgCritica = vbNullString
'                        lngErro = lngErro + 1
'                        erroFATAL = True
'                    End If
'                  End If
'               End If
'           Next i
           
        End If
                      
 '      SPRINT 13 - critica sele|fffd||fffd|o do orcamento - FIM 2017/11/06
      
       'Sprint 11
       'Aba Ag|fffd|ncia
       If xl8Agencia.Range("D5").value = "Sim" Then
          If xl8Agencia.Range("D6").value = vbNullString Or _
             xl8Agencia.Range("D7").value = vbNullString Or _
             xl8Agencia.Range("D8").value = vbNullString Or _
             xl8Agencia.Range("D9").value = vbNullString Or _
             xl8Agencia.Range("D6").value = vbNullString Then
             strMsgCritica = strMsgCritica & "- Existe(m) campo(s) da janela 'Proagro Mais Investimento (Uso exclusivo - AG|fffd|NCIA)' , n|fffd|o preenchido(s) e o campo 'Proagro Mais Investimento' est|fffd| preenchido com 'Sim'" & ";"
             preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
             strMsgCritica = vbNullString
             lngErro = lngErro + 1
             erroFATAL = True
          End If
       End If
If lngLavoura > 0 Then ' SPRINT 13 CUSTEIO AGR|fffd|COLA-ALTERAR CR|fffd|TICAS DE ADES|fffd|O AO PROAGRO E DATAS DE PLANTIO E COLHEITA INI 20171106
       'Critica do Flag do PROAGRO por INVERS|fffd|O  GSOL01042026 e GSOL01042027 20170323 INI
       Dim StrInvEmpree(10) As String
       Dim StrInvEmpree_Ordenado(10, 5) As String   'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
       Dim StrInvEmpree_Result(10, 5) As String     'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
       Dim StrInvx() As String

       Dim StrInvEmpreedimento As String
       Dim StrInvMunic|fffd|pio As String
       Dim StrInvProagro As String

       Dim lng_Acumulado As Double
       Dim Lng_TotalFinc As Double

       Dim booCritica As Boolean
       Dim booProagro As Boolean
       'Carregar as invers|fffd|es com os dados de empreendimentos, munic|fffd|pio,FlagProagro e valor
       For i = 58 To 67
           StrInvEmpree(i - 57) = xl2Prop.Range("W" & [i]).value   'Empreendimento
           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & xl2Prop.Range("AC" & [i]).value  'Munic|fffd|pio
           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & IIf(xl2Prop.Range("H" & [i]).value = "Sim", 1, 0) 'Flag Proagro
           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & xl2Prop.Range("M" & [i]).value 'Valor
           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & Mid(xl2Prop.Range("S" & [i]).value, 8, 2)  'Sequencial do Or|fffd|amento  'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
       Next i

       'Ordenar o Array para realizar as cr|fffd|ticas
       QuickSort StrInvEmpree, LBound(StrInvEmpree), UBound(StrInvEmpree)
       'Desagrupar o Array para realizar a somat|fffd|ria posteriormente
       For i = 1 To 10
           StrInvx() = Split(StrInvEmpree(i), ";")
           StrInvEmpree_Ordenado(i, 1) = StrInvx(0)
           StrInvEmpree_Ordenado(i, 2) = StrInvx(1)
           StrInvEmpree_Ordenado(i, 3) = StrInvx(2)
           StrInvEmpree_Ordenado(i, 4) = StrInvx(3)
           StrInvEmpree_Ordenado(i, 5) = StrInvx(4)   'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
           If StrInvEmpree_Ordenado(i, 3) = 1 And Not booProagro Then
              booProagro = True
           End If
       Next i
                    
       'Cr|fffd|tica para verificar se n|fffd|o se aplica ades|fffd|o, por|fffd|m h|fffd| itens com ades|fffd|o.
       If xl2Prop.Range("FlagProagro").value = 0 And booProagro Then
            strMsgCritica = strMsgCritica & "- Existe(m) item(ns) com ades|fffd|o ao PROAGRO e o campo 'Op|fffd||fffd|o pelo PROAGRO' est|fffd| preenchido com 'N|fffd|o se aplica'." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
       End If

       If xl2Prop.Range("FlagProagro").value <> 0 And Not booProagro Then
            strMsgCritica = strMsgCritica & "- N|fffd|o existe(m) item(ns) com ades|fffd|o ao PROAGRO e o campo 'Op|fffd||fffd|o pelo PROAGRO' est|fffd| preenchido, n|fffd|o foi informado nenhum item com ades|fffd|o ao PROAGRO." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
       End If

       'Inicializar as vari|fffd|veis de controle
       StrInvEmpreedimento = vbNullString
       StrInvMunic|fffd|pio = vbNullString
       StrInvProagro = vbNullString
       Y = 1

       For i = 1 To 10
         'Soma o valor financiado por empreendimento e Munic|fffd|pio
         If (StrInvEmpree_Ordenado(i, 1) <> vbNullString) Then
             If (StrInvEmpree_Ordenado(i, 1) <> StrInvEmpreedimento) Then
                   StrInvEmpree_Result(Y, 1) = StrInvEmpree_Ordenado(i, 1)
                   StrInvEmpree_Result(Y, 2) = StrInvEmpree_Ordenado(i, 2)
                   StrInvEmpree_Result(Y, 3) = StrInvEmpree_Ordenado(i, 3)
                   StrInvEmpree_Result(Y, 4) = StrInvEmpree_Ordenado(i, 4)
                   StrInvEmpree_Result(Y, 5) = StrInvEmpree_Ordenado(i, 5)  'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
                   Y = Y + 1
                   StrInvEmpreedimento = StrInvEmpree_Ordenado(i, 1)
                   StrInvMunic|fffd|pio = StrInvEmpree_Ordenado(i, 2)
                   StrInvProagro = StrInvEmpree_Ordenado(i, 3)
             Else
               If (StrInvEmpree_Ordenado(i, 2) = StrInvMunic|fffd|pio) _
                  And (StrInvEmpree_Ordenado(i, 3) = StrInvProagro) Then     ' compara empreed
                   lng_Acumulado = CDbl(StrInvEmpree_Result(Y - 1, 4)) + CDbl(StrInvEmpree_Ordenado(i, 4))
                   StrInvEmpree_Result(Y - 1, 4) = CStr(lng_Acumulado)
               Else
                   StrInvEmpree_Result(Y, 1) = StrInvEmpree_Ordenado(i, 1)
                   StrInvEmpree_Result(Y, 2) = StrInvEmpree_Ordenado(i, 2)
                   StrInvEmpree_Result(Y, 3) = StrInvEmpree_Ordenado(i, 3)
                   StrInvEmpree_Result(Y, 4) = StrInvEmpree_Ordenado(i, 4)
                   StrInvEmpree_Result(Y, 5) = StrInvEmpree_Ordenado(i, 5)  'OS Padr|fffd|o 156835 - Demanda GSOL01049552 incluir o sequencial de Or|fffd|amento de 4 para 5
                   Y = Y + 1
                   StrInvEmpreedimento = StrInvEmpree_Ordenado(i, 1)
                   StrInvMunic|fffd|pio = StrInvEmpree_Ordenado(i, 2)
                   StrInvProagro = StrInvEmpree_Ordenado(i, 3)
               End If
             End If
         End If
       Next i

       'Verificar se o valor de invers|fffd|es com PROAGRO SOMADAS N|fffd|O ULTRAPASSA O LIMITE DE 300.000,00
        For i = 1 To 10
           If StrInvEmpree_Result(i, 1) <> vbNullString Then
             If StrInvEmpree_Result(i, 3) = 1 Then  'verificar se |fffd| PROAGRO
               Lng_TotalFinc = Lng_TotalFinc + CDbl(StrInvEmpree_Result(i, 4))
             End If
             '27/06/2017 - RNM - INI - Atendimento ao incidente INCIDENTE 116495-2017-7135380
             If (xl2Prop.Range("J48").value = "Sim" And booProagro) _
             Or (xl2Prop.Range("J48").value = "N|fffd|o" And Not booProagro) _
             And CDbl(StrInvEmpree_Result(i, 4)) < (xl99Auxi.Range("valorLimPROAGRO")) Then
'                  strMsgCritica = strMsgCritica & "- [Aviso] A proposta somente dever|fffd| indicar 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO', devendo ser exibida quando ocorrer uma das situa|fffd||fffd|es a seguir:" & Chr(10) & _
'                               "a) 'Seguro Rural' = 'Sim' e nenhum item de invers|fffd|o de cultura = 'Sim'." & Chr(10) & _
'                               "b) 'Seguro Rural = 'N|fffd|o' e pelo menos um item de invers|fffd|o de cultura = 'Sim'." & ";"
                  strMsgCritica = strMsgCritica & "- [Aviso] A proposta/item de invers|fffd|o somente dever|fffd| indicar 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO'."
                  preencherLinhaCritica "Proposta", strMsgCritica & ". "
                  strMsgCritica = vbNullString
                  lngAviso = lngAviso + 1  'Passa a ser aviso (Incidente 2017-7653176
                  strMsgAviso = strMsgAviso + "- [Aviso] A proposta/item de invers|fffd|o somente dever|fffd| indicar 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO'"
                  'lngErro = lngErro + 1   'Comentado (Incidente 2017-7653176
                  'erroFATAL = True        'Comentado (Incidente 2017-7653176
             End If
             '27/06/2017 - RNM - FIM - Atendimento ao incidente INCIDENTE 116495-2017-7135380
           End If
        Next i

        If (Lng_TotalFinc + xl2Prop.Range("ENQUADRA_PROAGRO").value) > (xl99Auxi.Range("valorLimPROAGRO")) Then
            strMsgCritica = strMsgCritica & "- O 'Valor j|fffd| Enquadrado no PROAGRO' mais o 'Valor Financiado do Empreendimento de R$ " & Format((Lng_TotalFinc + xl2Prop.Range("ENQUADRA_PROAGRO").value), "#,##0.00") & " , do(s) item(ns) com ades|fffd|o ao PROAGRO, no mesmo Munic|fffd|pio', |fffd| superior a R$ " & Format(xl99Auxi.Range("valorLimPROAGRO"), "#,##0.00") & "." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
        End If

        StrInvEmpreedimento = vbNullString
        StrInvMunic|fffd|pio = vbNullString
        StrInvProagro = vbNullString


        booCritica = False
        'Verifica se o valor com ades|fffd|o PROAGRO por empreendimento/Munic|fffd|pio foi feito integralmente
        For i = 1 To 10
           If StrInvEmpree_Result(i, 1) <> vbNullString Then
              If Not booCritica Then
                If (StrInvEmpree_Result(i, 1) <> StrInvEmpreedimento) Then
                   StrInvEmpreedimento = StrInvEmpree_Result(i, 1)
                   StrInvMunic|fffd|pio = StrInvEmpree_Result(i, 2)
                   StrInvProagro = StrInvEmpree_Result(i, 3)
                Else
                   If (StrInvEmpree_Result(i, 2) = StrInvMunic|fffd|pio) Then
                     If (StrInvEmpree_Result(i, 3) <> StrInvProagro) Then
                        booCritica = True
                     End If
                   End If
                End If
              End If
           End If
        Next i

        If booCritica Then
          strMsgCritica = strMsgCritica & "- Existe(m) item(ns) com ades|fffd|o ao 'PROAGRO' em, pelo menos, uma das situa|fffd||fffd|es a seguir:" & Chr(10) & _
                                          "Com valor apenas 'Parcial' para o mesmo Empreendimento, no mesmo Munic|fffd|pio." & ";"
            preencherLinhaCritica "Proposta", strMsgCritica & ". "
            strMsgCritica = vbNullString
          lngErro = lngErro + 1
          erroFATAL = True
        End If
End If 'SPRINT 13 CUSTEIO AGR|fffd|COLA-ALTERAR CR|fffd|TICAS DE ADES|fffd|O AO PROAGRO E DATAS DE PLANTIO E COLHEITA FIM 20171106

        'INI - OS Padr|fffd|o 156835 - Demanda GSOL01049552 - CUSTEIO AGR|fffd|COLA-INCLUIR CR|fffd|TICA PARA OS CAMPOS OBRIGAT|fffd|RIOS DO ZONEAMENTO AGR|fffd|COLA.  INI
        'Atividade Obtendo as informa|fffd||fffd|es de Modalidade = "Lavoura" e Zoneamento = "Zoneado"
        'do empreendimento ser|fffd| necess|fffd|ria obrigatoriedade no preenchimento dos campos
        '"Solo", "Ciclo", "%Risco" e "Data In|fffd|cio/Fim - Plantio"
        'no momento de gera|fffd||fffd|o de Dados para o SEAP
        
        Dim lobjintegra2 As Object
        Dim lobjemp2 As Object
        Dim StrModalidade, StrZoneamento As String
        Dim NMOr|fffd|amento As String
        Dim StrZona As String
        
        StrZoneamento = vbNullString
        
        Set lobjintegra2 = CreateObject("PreencherEmpreendimento.Integracao")
                
        For i = 1 To 10
          If StrInvEmpree_Ordenado(i, 5) <> "" Then
            If NMOr|fffd|amento <> xl1Orca.Range("nomeORCA" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value Then
            'If CodEmpreendimento <> StrInvEmpree_Ordenado(i, 1) Then
        
               Set lobjemp2 = lobjintegra2.IsValido(StrInvEmpree_Ordenado(i, 1), "0")
            
               If Not lobjemp2 Is Nothing Then
                  NMOr|fffd|amento = xl1Orca.Range("nomeORCA" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value
                  StrModalidade = LTrim(RTrim(lobjemp2.Modalidade.descricao))
                  StrZoneamento = LTrim(RTrim(lobjemp2.Zoneamento.descricao))
                  If UCase(StrModalidade) = "LAVOURA" And UCase(StrZoneamento) = "ZONEADO" Then
                    If xl1Orca.Range("SoloOrca" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Then
                       StrZona = StrZona & " 'Solo',"
                    End If
                    
                    If xl1Orca.Range("CicloOrca" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Then
                       StrZona = StrZona & " 'Ciclo',"
                    End If
                    
                    If xl1Orca.Range("RiscoOrca" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Then
                       StrZona = StrZona & " '% Risco',"
                    End If
                       
                    If xl1Orca.Range("DtPlanINI" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Or _
                       xl1Orca.Range("DtPlanFIM" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Then
                       StrZona = StrZona & " 'Data In|fffd|cio/Fim - Plantio',"
                    End If
                                          
                    If xl1Orca.Range("DtColhFIM" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Or _
                       xl1Orca.Range("DtColhINI" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value = vbNullString Then
                       StrZona = StrZona & " 'Data In|fffd|cio/Fim - Colheita'"
                    End If
                    If StrZona <> vbNullString And xl1Orca.Range("Cultura_TP" & Format(StrInvEmpree_Ordenado(i, 5), "00" & "_Bacen")).value <> "Permanente" Then
                        strMsgCritica = strMsgCritica & "{Erro} - O(s) campo(s)" & StrZona & " n|fffd|o foi(ram) informado(s) para o Or|fffd|amento - ( " & xl1Orca.Range("nomeORCA" & Format(StrInvEmpree_Ordenado(i, 5), "00")).value & " )"
                        preencherLinhaCritica "Or|fffd|amento", strMsgCritica & ". "
                        strMsgCritica = vbNullString
                        lngErro = lngErro + 1
                        erroFATAL = True
                    End If
                    
                  End If
               End If
            End If
          End If
        Next i
        
        Set lobjemp2 = Nothing
        Set lobjintegra2 = Nothing
        
        'Atividade 184799 Sprint 14
        'Cr|fffd|tica das informa|fffd||fffd|es de Im|fffd|veis para opera|fffd||fffd|es Rurais
        
        Dim Munic_Bioma As String
        
        For i = 1 To 10
          'NIRF
          If xl2Prop.Range("AN" & [i] + 32).value = -1 Then
            strMsgCritica = strMsgCritica & "- {Erro} - O campo (" & xl2Prop.Range("AN32").value & ") do im|fffd|vel (" & xl2Prop.Range("D" & [i] + 32).value & "-" & xl2Prop.Range("J" & [i] + 32).value & ") n|fffd|o est|fffd| com o formato compat|fffd|vel determinado pelo Banco Central do Brasil."
            preencherLinhaCritica "Proposta - Im|fffd|vel", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
          End If
          
          'Matricula CEI
          If xl2Prop.Range("AO" & [i] + 32).value = -1 Then
            strMsgCritica = strMsgCritica & "- {Erro} - O campo (" & xl2Prop.Range("AO32").value & ") do im|fffd|vel (" & xl2Prop.Range("D" & [i] + 32).value & "-" & xl2Prop.Range("J" & [i] + 32).value & ") supera o total de 12 caracteres."
            preencherLinhaCritica "Proposta - Im|fffd|vel", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
          End If
          
          'C|fffd|digo SNCR
          If xl2Prop.Range("AP" & [i] + 32).value = -1 Then
            strMsgCritica = strMsgCritica & "- {Erro} - O campo " & xl2Prop.Range("AP32").value & ") do im|fffd|vel (" & xl2Prop.Range("D" & [i] + 32).value & "-" & xl2Prop.Range("J" & [i] + 32).value & ") n|fffd|o est|fffd| com o formato compat|fffd|vel determinado pelo Banco Central do Brasil."
            preencherLinhaCritica "Proposta - Im|fffd|vel", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
          End If
          
          'N|fffd|mero Registro CAR
          If xl2Prop.Range("AQ" & [i] + 32).value = -1 Then
            strMsgCritica = strMsgCritica & "- {Erro} - O campo (" & xl2Prop.Range("AQ32").value & ") do im|fffd|vel (" & xl2Prop.Range("D" & [i] + 32).value & "-" & xl2Prop.Range("J" & [i] + 32).value & ") n|fffd|o est|fffd| com o formato compat|fffd|vel determinado pelo Banco Central do Brasil."
            preencherLinhaCritica "Proposta - Im|fffd|vel", strMsgCritica & ". "
            strMsgCritica = vbNullString
            lngErro = lngErro + 1
            erroFATAL = True
          End If
          
          'BIOMA
          If xl2Prop.Range("AR" & [i] + 32).value = -1 Then
            Munic_Bioma = Munic_Bioma & xl2Prop.Range("J" & [i] + 32).value & ";"
          End If

        Next i

        'BIOMA - 01/2018 - RNM
        'GSOL01925329: SEAP-PLANILHAS-RETIRAR CR|fffd|TICA DE PREENCHIMENTO OBRIGAT|fffd|RIO DO REGISTRO CAR E DEMAIS CAMPOS DE CONTROLE DE OPERA|fffd||fffd|ES RURAIS - INI - RNM
'        If xl99Auxi.Range("Param_Hoje").value >= xl99Auxi.Range("Param_Bioma").value Then
'            If Munic_Bioma <> "" Then
'              Munic_Bioma = Mid(Munic_Bioma, 1, Len(Munic_Bioma) - 1)
'              strMsgCritica = strMsgCritica & "- {Erro} - O(s) munic|fffd|pio(s) (" & Munic_Bioma & ") , contido(s) no Bioma da Amaz|fffd|nia, possui(em) im|fffd|vel(is) sem a informa|fffd||fffd|o do 'N|fffd|mero Registro CAR'."
'              preencherLinhaCritica "Proposta - BIOMA", strMsgCritica & ". "
'              strMsgCritica = vbNullString
'              lngErro = lngErro + 1
'              erroFATAL = True
'            End If
'        End If
        'GSOL01925329: SEAP-PLANILHAS-RETIRAR CR|fffd|TICA DE PREENCHIMENTO OBRIGAT|fffd|RIO DO REGISTRO CAR E DEMAIS CAMPOS DE CONTROLE DE OPERA|fffd||fffd|ES RURAIS - FIM - RNM
        
        'GSOL01921068 - RNM Cr|fffd|ticas INI - Inclus|fffd|o da Taxa de Juros de Cr|fffd|dito Rural
        If xl2Prop.Range("S320").value = 2 And xl2Prop.Range("S46").value = 84 Then
           strMsgCritica = strMsgCritica & "- {Erro} A 'Metodologia de C|fffd|lculo de Taxa de Juros Opera|fffd||fffd|es de Cr|fffd|dito Rural' para o Programa/Fonte 'POUPAN|fffd|A RURAL' dever|fffd| ser 'TCRpr|fffd| -Taxa de Juros do Cr|fffd|dito Rural prefixada."
           preencherLinhaCritica "Proposta - TJCR", strMsgCritica & ". "
           strMsgCritica = vbNullString
           lngErro = lngErro + 1
           erroFATAL = True
        End If
        
        'GSOL01923226 - RNM INI
        If xl2Prop.Range("S46").value = 382 Or xl2Prop.Range("S46").value = 368 Or xl2Prop.Range("S46").value = 401 Then  'GSOL01923226 - RNM
            If xl2Prop.Range("S320").value = 1 Or xl2Prop.Range("S320").value = 2 Then
               strMsgCritica = strMsgCritica & "- {Erro} A 'Metodologia de C|fffd|lculo de Taxa de Juros Opera|fffd||fffd|es de Cr|fffd|dito Rural' foi informada indevidamente, ou seja, n|fffd|o |fffd| permitida para esse Programa de Cr|fffd|dito."
               preencherLinhaCritica "Proposta - TJCR", strMsgCritica & ". "
               strMsgCritica = vbNullString
               lngErro = lngErro + 1
               erroFATAL = True
            End If
        End If
        'GSOL01923226 - RNM FIM
        
        If xl2Prop.Range("S46").value <> 382 And xl2Prop.Range("S46").value <> 368 And xl2Prop.Range("S46").value <> 401 Then  'GSOL01923226 - RNM
            If xl2Prop.Range("S320").value = vbNullString Then
               strMsgCritica = strMsgCritica & "- {Erro} A 'Metodologia de C|fffd|lculo de Taxa de Juros Opera|fffd||fffd|es de Cr|fffd|dito Rural' n|fffd|o foi informada."
               preencherLinhaCritica "Proposta - TJCR", strMsgCritica & ". "
               strMsgCritica = vbNullString
               lngErro = lngErro + 1
               erroFATAL = True
            End If                                                                       'GSOL01923226 - RNM
        End If 'GSOL01923226 - RNM
        'GSOL01921068 - RNM Cr|fffd|ticas FIM - Inclus|fffd|o da Taxa de Juros de Cr|fffd|dito Rural
        
        'FIM - OS Padr|fffd|o 156835 - Demanda GSOL01049552 - CUSTEIO AGR|fffd|COLA-INCLUIR CR|fffd|TICA PARA OS CAMPOS OBRIGAT|fffd|RIOS DO ZONEAMENTO AGR|fffd|COLA.  FIM
       
        'Critica do Flag do PROAGRO por INVERS|fffd|O  GSOL01042026 e GSOL01042027 20170323 FIM
       
        'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM INI
        'Retirar a critica  - RNM - GSOL00878466 02/2015 - INI
        'If Range("S27").Value = -1 Then
        '  strMsgCritica = strMsgCritica & "- Munic|fffd|pio com Decreto de Emerg|fffd|ncia (S/N) Inv|fffd|lido" & ";"
        '  lngErro = lngErro + 1
        '  erroFATAL = True
        'End If
        'Retirar a critica  - RNM - GSOL00878466 02/2015 - INI
        'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM FIM
        
        ' GSOL00551305 >>
        'GSOL00720626 - INI 25/11/2013 RNM
        'Dim Unid1, Unid2, Unid3, UnidEmpr, DescrProd As String
        'For lngLinSel = 1 To 10
          
        '  If Range("UnidError" & Format(lngLinSel, "00")) <> "ok" Then
        '     Unid1 = Range("prodUN1ORCA" & Format(lngLinSel, "00"))
        '     Unid2 = Range("prodUN2ORCA" & Format(lngLinSel, "00"))
        '     Unid3 = Range("prodUN3ORCA" & Format(lngLinSel, "00"))
        '     UnidEmpr = Range("UnidEmpr" & Format(lngLinSel, "00"))
        '
        '     DescProd = ""
        '
        '     If Range("UnidError01Orca" & Format(lngLinSel, "00")) <> 0 Then
        '       DescProd = Format(lngLinSel, "00") & "|fffd| Produto = " & Unid1 & " ,"
        '     End If
        '     If Range("UnidError02Orca" & Format(lngLinSel, "00")) <> 0 Then
        '       DescProd = Format(lngLinSel, "00") & "|fffd| Produto = " & Unid2 & " ,"
        '     End If
        '     If Range("UnidError02Orca" & Format(lngLinSel, "00")) <> 0 Then
        '       DescProd = Format(lngLinSel, "00") & "|fffd| Produto = " & Unid3 & " "
        '     End If
        '
        '     strMsgCritica = strMsgCritica & Chr(10) & "A unidade dos itens de invers|fffd|o ( " & DescProd & _
        '     " ) est|fffd|(|fffd|o) diferente(s) da unidade do Empreendimento( " & UnidEmpr & " )" & Chr(10) & _
        '     "Aten|fffd||fffd|o - Portanto, dever|fffd| substituir a unidade do item de invers|fffd|o pela unidade do Empreendimento, aba Proposta , ajustando tamb|fffd|m a '|fffd|rea' e  o 'Valor Unit|fffd|rio' correspondente |fffd| unidade alterada."
        '     lngErro = lngErro + 1
        '     erroFATAL = True
        '  End If
        '
        'Next lngLinSel
        'GSOL00720626 - FIM 25/11/2013 RNM
        
        ErroFatalGeral = False
        If Not processaCriticaGeral(strMsgCritica) Then
            lngErro = lngErro + 1
        End If
        
        If ErroFatalGeral Then erroFATAL = True
        ErroFatalGeral = False
        
                
        Application.StatusBar = ""
        
        If lngAviso > 0 Then
            MsgBox "OBSERVA|fffd||fffd|O: " & _
                vbCrLf & vbCrLf & Replace(strMsgAviso, ";", ";" & vbCrLf), vbCritical, ":: Custeio Agr|fffd|cola"
            ValidaSEAP = 0
        End If
        
        xl00Critica.Activate
        
        'GSOL00134459
        If lngErro > 0 Then
           If MsgBox("Foram detectadas inconsist|fffd|ncias no projeto." & vbCrLf & _
              "Deseja imprimir o relat|fffd|rio de Cr|fffd|ticas?", vbQuestion + vbYesNo, _
              ":: Planilha de Custeio Agr|fffd|cola - Verifica|fffd||fffd|o") = vbYes Then ActiveWindow.SelectedSheets.PrintPreview
'             MsgBox "As seguintes informa|fffd||fffd|es n|fffd|o foram registradas, s|fffd|o inv|fffd|lidas ou devem ser certificadas: " & _
'                vbCrLf & vbCrLf & Replace(strMsgCritica, ";", ";" & vbCrLf), vbCritical, ":: Custeio Agr|fffd|cola"
            ValidaSEAP = 1
        Else
            ValidaSEAP = 0
        End If
        
        If erroFATAL Then ValidaSEAP = 2
      
        If Not erroFATAL Then
           If iFlag <> 1 Then MsgBox "As criticas relizadas n|fffd|o retornaram erros" & vbCrLf & _
                                "Projeto OK", vbInformation
          Set protPlan = Nothing
          Exit Function
        End If
       
       'On Error GoTo fim
       ' protPlan.DesprotegePlanilha
       ' Range("B12:E100").Font.Bold = False
       ' Range("B12:E100").ClearContents
       ' protPlan.ProtegePlanilha
        
       ' Sheets([xlPlanOri]).Activate
End Function
Private Function FimMes(ByVal D As Date) As Date
        FimMes = DateSerial(Year(D), Month(D) + 1, 0)
End Function
Public Function FDataAdd(ByVal D As Date) As Date
        FDataAdd = DateSerial(Year(D), Month(D) + 1, Day(D))
        
End Function

'GSOL00089205
'Verificar se existe alguma data de desembolso anterior a data de contrata|fffd||fffd|o.
Private Function processaCriticaDesembolso() As String
    Dim IntCol As Integer, intRow As Integer, j As Integer
    Dim dtDataContrato As Date, dtDataDesembolso As Date
    Dim strMsg As String
    Dim intColx As Integer
    
    If Not IsDate(xl2Prop.Range("E14").value) Then Exit Function
    dtDataContrato = CDate(xl2Prop.Range("E14").value)
    
    'culturas
    j = 0
    For IntCol = 31 To 34
        For intRow = 58 To 67
            If Not IsError(Cells(intRow, IntCol).value) Then
               If Cells(intRow, IntCol).value <> vbNullString Then
                    If IntCol = 31 Then
                        intColx = 7
                    ElseIf IntCol = 32 Then
                        intColx = 10
                    ElseIf IntCol = 33 Then
                        intColx = 13
                    Else
                        intColx = 16
                    End If
                    If VerDataCron(Cells(intRow + 36, intColx).value) Then
                       dtDataDesembolso = CDate(xl2Prop.Cells(intRow, IntCol).value)
                       If dtDataDesembolso < dtDataContrato Then
                         strMsg = strMsg & _
                                xl2Prop.Cells(92, IntCol - 26 + j).value & _
                                " - m|fffd|s do Desembolso de " & Trim(xl2Prop.Cells(intRow, "D").value) & "; "
                       End If
                    'Else    'Esta cr|fffd|tica n|fffd|o foi ativada para n|fffd|o ficar em duplicidade, por|fffd|m identifica a data errada RNM 10/2015 7 Sprint
                    
                    '  strMsg = strMsg & _
                    '  Cells(intRow + 36, intColx).Value & _
                    '  " - m|fffd|s do Desembolso err|fffd|neo; "
                    End If
               End If
            End If
        Next intRow
        j = j + 2
    Next IntCol
    
    'implementos
    j = 0
    For IntCol = 29 To 32
        For intRow = 104 To 108
            If Not IsError(Cells(intRow, IntCol).value) Then
               If Cells(intRow, IntCol).value <> vbNullString Then
                  dtDataDesembolso = CDate(xl2Prop.Cells(intRow, IntCol).value)
                  If dtDataDesembolso < dtDataContrato Then
                     strMsg = strMsg & _
                              xl2Prop.Cells(92, IntCol - 24 + j).value & _
                              " - m|fffd|s do Desembolso de " & Trim(xl2Prop.Cells(intRow, "D").value) & "; "
                  End If
               End If
            End If
        Next intRow
        j = j + 2
    Next IntCol
    
    'Taxa de elabora|fffd||fffd|o
'    j = 0
'    intRow = 113
'    For IntCol = 29 To 32
'        If Not IsError(Cells(intRow, IntCol).value) Then
'           If Cells(intRow, IntCol).value <> vbNullString Then
'              dtDataDesembolso = CDate(xl2Prop.Cells(intRow, IntCol).value)
'              If dtDataDesembolso < dtDataContrato Then
'                 strMsg = strMsg & _
'                          xl2Prop.Cells(92, IntCol - 24 + j).value & _
'                          " - m|fffd|s do Desembolso de " & Trim(xl2Prop.Cells(intRow, "D").value) & "; "
'              End If
'           End If
'        End If
'        j = j + 2
'    Next IntCol
    
    processaCriticaDesembolso = strMsg
End Function


Private Function processaCriticaEstiagem() As String
'GSOL00536344
    Dim lintRow As Integer
    Dim lstrMsg As String
    For lintRow = 32 To 42
        If xl2Prop.Range("$AC$46").value = 1 _
            And xl2Prop.Range("D" & [lintRow]) <> vbNullString _
            And xl2Prop.Range("AD" & [lintRow]) = 0 Then
            lstrMsg = lstrMsg & "Elaborar o projeto apenas se no munic|fffd|pio " & _
                    xl2Prop.Range("J" & [lintRow]) & _
                    " foi decretado estado de calamidade (SECA/ESTIAGEM); "
        End If
    Next lintRow
    processaCriticaEstiagem = lstrMsg
End Function

Private Function processaCriticaGeral(ByRef astrMsg As String) As Boolean

    Dim lstrPlanilha As String
    lstrPlanilha = ActiveSheet.Name
    
    processaCriticaGeral = True
    
    xl99Auxi.Activate
    Calculate
    Range("visaoCritica").Select
    While ActiveCell.value <> vbNullString
        If ActiveCell.Offset(0, 2).value = "-1" Then
            processaCriticaGeral = False
            astrMsg = astrMsg & "- " & ActiveCell.value & ";" & Chr(10)
            'Sprint 9 - RNM incluir os itens de critica Fatal a exporta|fffd||fffd|o para o SEAP 26/04/2016 INI
            If ActiveCell.Offset(0, 3).value = 2 Then
              ErroFatalGeral = True
            End If
            'Sprint 9 - RNM incluir os itens de critica Fatal a exporta|fffd||fffd|o para o SEAP 26/04/2016 FIM
        End If
        ActiveCell.Offset(1, 0).Select
    Wend
    If astrMsg <> vbNullString Then
        preencherLinhaCritica "Geral", astrMsg & ". "
    End If

    Sheets(lstrPlanilha).Activate
End Function

Private Sub QuickSort(strArray() As String, intBottom As Integer, intTop As Integer)
    Dim strPivot As String, strTemp As String
 
    Dim intBottomTemp As Integer, intTopTemp As Integer
    intBottomTemp = intBottom
 
    intTopTemp = intTop
    strPivot = strArray((intBottom + intTop) \ 2)
    While (intBottomTemp <= intTopTemp)
        While (strArray(intBottomTemp) < strPivot And intBottomTemp < intTop)
 
            intBottomTemp = intBottomTemp + 1
 
        Wend
        While (strPivot < strArray(intTopTemp) And intTopTemp > intBottom)
 
            intTopTemp = intTopTemp - 1
 
        Wend
        If intBottomTemp < intTopTemp Then
 
            strTemp = strArray(intBottomTemp)
 
            strArray(intBottomTemp) = strArray(intTopTemp)
 
            strArray(intTopTemp) = strTemp
 
        End If
        If intBottomTemp <= intTopTemp Then
 
            intBottomTemp = intBottomTemp + 1
 
            intTopTemp = intTopTemp - 1
 
        End If
    Wend
    'faz a chamada recursiva a si pr|fffd|pria at|fffd| que lista esteja preenchida
 
    If (intBottom < intTopTemp) Then QuickSort strArray, intBottom, intTopTemp
 
    If (intBottomTemp < intTop) Then QuickSort strArray, intBottomTemp, intTop
End Sub

'Sub teste()
'Dim StrInvEmpree(10) As String
'       Dim StrInvEmpree_Ordenado(10, 4) As String
'       Dim StrInvEmpree_Result(10, 4) As String
'       Dim StrInv() As String
'
'       Dim StrInvEmpreedimento As String
'       Dim StrInvMunic|fffd|pio As String
'       Dim StrInvProagro As String
'
'       Dim lng_Acumulado As Double
'       Dim Lng_TotalFinc As Double
'       Dim i, y As Integer
'
'       Dim booCritica As Boolean
'       Dim booProagro As Boolean
'       'Carregar as invers|fffd|es com os dados de empreendimentos, munic|fffd|pio,FlagProagro e valor
'       For i = 58 To 67
'           StrInvEmpree(i - 57) = xl2Prop.Range("W" & [i]).value   'Empreendimento
'           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & xl2Prop.Range("AC" & [i]).value  'Munic|fffd|pio
'           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & IIf(xl2Prop.Range("H" & [i]).value = "Sim", 1, 0) 'Flag Proagro
'           StrInvEmpree(i - 57) = StrInvEmpree(i - 57) & ";" & xl2Prop.Range("M" & [i]).value 'Valor
'       Next i
'
'       'Ordenar o Array para realizar as cr|fffd|ticas
'       QuickSort StrInvEmpree, LBound(StrInvEmpree), UBound(StrInvEmpree)
'       'Desagrupar o Array para realizar a somat|fffd|ria posteriormente
'       For i = 1 To 10
'           StrInv() = Split(StrInvEmpree(i), ";")
'           StrInvEmpree_Ordenado(i, 1) = StrInv(0)
'           StrInvEmpree_Ordenado(i, 2) = StrInv(1)
'           StrInvEmpree_Ordenado(i, 3) = StrInv(2)
'           StrInvEmpree_Ordenado(i, 4) = StrInv(3)
'           If StrInvEmpree_Ordenado(i, 3) = 1 And Not booProagro Then
'              booProagro = True
'           End If
'       Next i
'       'Cr|fffd|tica para verificar se n|fffd|o se aplica ades|fffd|o, por|fffd|m h|fffd| itens com ades|fffd|o.
'       If xl2Prop.Range("FlagProagro").value = 0 And booProagro Then
'            MsgBox ("- Existe(m) item(ns) com ades|fffd|o ao PROAGRO e o campo 'Op|fffd||fffd|o pelo PROAGRO' est|fffd| preenchido com 'N|fffd|o se aplica'.")
'       End If
'
'       If xl2Prop.Range("FlagProagro").value <> 0 And Not booProagro Then
'            MsgBox ("- N|fffd|o existe(m) item(ns) com ades|fffd|o ao PROAGRO e o campo 'Op|fffd||fffd|o pelo PROAGRO' est|fffd| preenchido, n|fffd|o foi informado nenhum item com ades|fffd|o ao PROAGRO.")
'       End If
'
'       If (xl2Prop.Range("J48").value = "Sim" And booProagro) _
'        Or (xl2Prop.Range("J48").value = "N|fffd|o" And Not booProagro) Then
'            MsgBox ("- A proposta somente dever|fffd| indicar 'Seguro Rural' ou ades|fffd|o ao 'PROAGRO', devendo ser exibida quando ocorrer uma das situa|fffd||fffd|es a seguir:" & Chr(10) & _
'                         "a) 'Seguro Rural' = 'Sim' e nenhum item de invers|fffd|o de cultura = 'Sim'." & Chr(10) & _
'                         "b) 'Seguro Rural = 'N|fffd|o' e pelo menos um item de invers|fffd|o de cultura = 'Sim'.")
'       End If
'
'       'Inicializar as vari|fffd|veis de controle
'       StrInvEmpreedimento = vbNullString
'       StrInvMunic|fffd|pio = vbNullString
'       StrInvProagro = vbNullString
'       y = 1
'
'       For i = 1 To 10
'         'Soma o valor financiado por empreendimento e Munic|fffd|pio
'         If (StrInvEmpree_Ordenado(i, 1) <> vbNullString) Then
'             If (StrInvEmpree_Ordenado(i, 1) <> StrInvEmpreedimento) Then
'                   StrInvEmpree_Result(y, 1) = StrInvEmpree_Ordenado(i, 1)
'                   StrInvEmpree_Result(y, 2) = StrInvEmpree_Ordenado(i, 2)
'                   StrInvEmpree_Result(y, 3) = StrInvEmpree_Ordenado(i, 3)
'                   StrInvEmpree_Result(y, 4) = StrInvEmpree_Ordenado(i, 4)
'                   y = y + 1
'                   StrInvEmpreedimento = StrInvEmpree_Ordenado(i, 1)
'                   StrInvMunic|fffd|pio = StrInvEmpree_Ordenado(i, 2)
'                   StrInvProagro = StrInvEmpree_Ordenado(i, 3)
'             Else
'               If (StrInvEmpree_Ordenado(i, 2) = StrInvMunic|fffd|pio) _
'                  And (StrInvEmpree_Ordenado(i, 3) = StrInvProagro) Then     ' compara empreed
'                   lng_Acumulado = CDbl(StrInvEmpree_Result(y - 1, 4)) + CDbl(StrInvEmpree_Ordenado(i, 4))
'                   StrInvEmpree_Result(y - 1, 4) = CStr(lng_Acumulado)
'               Else
'                   StrInvEmpree_Result(y, 1) = StrInvEmpree_Ordenado(i, 1)
'                   StrInvEmpree_Result(y, 2) = StrInvEmpree_Ordenado(i, 2)
'                   StrInvEmpree_Result(y, 3) = StrInvEmpree_Ordenado(i, 3)
'                   StrInvEmpree_Result(y, 4) = StrInvEmpree_Ordenado(i, 4)
'                   y = y + 1
'                   StrInvEmpreedimento = StrInvEmpree_Ordenado(i, 1)
'                   StrInvMunic|fffd|pio = StrInvEmpree_Ordenado(i, 2)
'                   StrInvProagro = StrInvEmpree_Ordenado(i, 3)
'               End If
'             End If
'         End If
'       Next i
'
'       'Verificar se o valor de invers|fffd|es com PROAGRO SOMADAS N|fffd|O ULTRAPASSA O LIMITE DE 300.000,00
'        For i = 1 To 10
'           If StrInvEmpree_Result(i, 1) <> vbNullString Then
'             If StrInvEmpree_Result(i, 3) = 1 Then  'verificar se |fffd| PROAGRO
'               Lng_TotalFinc = Lng_TotalFinc + CDbl(StrInvEmpree_Result(i, 4))
'             End If
'           End If
'        Next i
'
'        If (Lng_TotalFinc + xl2Prop.Range("ENQUADRA_PROAGRO").value) > (xl99Auxi.Range("valorLimPROAGRO")) Then
'            MsgBox ("- O 'Valor j|fffd| Enquadrado no PROAGRO' mais o 'Valor Financiado do Empreendimento de R$ " & Format((Lng_TotalFinc + xl2Prop.Range("ENQUADRA_PROAGRO").value), "#,##0.00") & " , do(s) item(ns) com ades|fffd|o ao PROAGRO, no mesmo Munic|fffd|pio', |fffd| superior a R$ " & Format(xl99Auxi.Range("valorLimPROAGRO"), "#,##0.00") & ".")
'        End If
'
'        StrInvEmpreedimento = vbNullString
'        StrInvMunic|fffd|pio = vbNullString
'        StrInvProagro = vbNullString
'
'
'        booCritica = False
'        'Verifica se o valor com ades|fffd|o PROAGRO por empreendimento/Munic|fffd|pio foi feito integralmente
'        For i = 1 To 10
'           If StrInvEmpree_Result(i, 1) <> vbNullString Then
'              If Not booCritica Then
'                If (StrInvEmpree_Result(i, 1) <> StrInvEmpreedimento) Then
'                   StrInvEmpreedimento = StrInvEmpree_Result(i, 1)
'                   StrInvMunic|fffd|pio = StrInvEmpree_Result(i, 2)
'                   StrInvProagro = StrInvEmpree_Result(i, 3)
'                Else
'                   If (StrInvEmpree_Result(i, 2) = StrInvMunic|fffd|pio) Then
'                     If (StrInvEmpree_Result(i, 3) <> StrInvProagro) Then
'                        booCritica = True
'                     End If
'                   End If
'                End If
'              End If
'           End If
'        Next i
'
'        If booCritica Then
'          MsgBox ("- Existe(m) item(ns) com ades|fffd|o ao 'PROAGRO' em, pelo menos, uma das situa|fffd||fffd|es a seguir:" & Chr(10) & _
'                                          "Com valor apenas 'Parcial' para o mesmo Empreendimento, no mesmo Munic|fffd|pio.")
'        End If
'        MsgBox ("Cr|fffd|tica realizada")
'End Sub


Sub preencherLinhaCritica(Optional strTitulo As String, Optional strMsg As String)
    Dim xlPlanAtualErro As String
    Dim lngLinCrc As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    xlPlanAtualErro = ActiveSheet.Name
    xl00Critica.Activate
    protPlan.DesprotegePlanilha
    lngLinCrc = Application.WorksheetFunction.CountA(Range("E10:E1000")) + 12
    Range("B" & [lngLinCrc]).value = strTitulo
    Range("E" & [lngLinCrc]).value = strMsg
    Range("B" & [lngLinCrc]).Font.Bold = True
    Range("E" & [lngLinCrc]).EntireRow.AutoFit
    protPlan.ProtegePlanilha
    Sheets([xlPlanAtualErro]).Activate
    Set protPlan = Nothing
End Sub
Attribute VB_Name = "mdlCultivar"
Function pegaOrcamentoAtual() As Integer
    Dim lintOrca As Integer
    '-Indentifica o orcamento atual
    lintOrca = 1
    Do While lintOrca <= 10
       strOrca = "ORCA" & Format([lintOrca], "00")
       If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
       lintOrca = lintOrca + 1
    Loop
    pegaOrcamentoAtual = lintOrca
End Function

Function montaBaseCultivar(alngOrca As Long, adblBacen As Double) As Long
    Dim lstrOrca As String
    Dim lstrCultivar As String
    Dim lstrPlanilhaAtual As String
    Dim llngLinhas As Long
    Dim lFiltro
    Dim protPlan As New clsProtecao
    
    lstrPlanilhaAtual = ActiveSheet.Name
    lstrOrca = Format(alngOrca, "00")
    lstrCultivar = "listaCULTIVAR" & lstrOrca
    
    xl99Auxi.Select
    protPlan.DesprotegePlanilha
    Range([lstrCultivar]).ClearContents
    Range("listaCultivar").Select
    Selection.AutoFilter Field:=2, Criteria1:=adblBacen
    Range("listaCultivar").Select
    
    'verifica se tem op|fffd||fffd|es
    llngLinhas = -2
    For Each lFiltro In _
        ActiveCell.CurrentRegion.SpecialCells(xlVisible).Areas
        llngLinhas = llngLinhas + lFiltro.Rows.Count
    Next
    
    If llngLinhas > 0 Then
    'se o filtro retornou op|fffd||fffd|es, prepara para sele|fffd||fffd|o
        Selection.Offset(1, 0).Resize(Selection.Rows.Count - 1, Selection.Columns.Count - 2).Select
        Selection.Copy
        Range([lstrCultivar]).Select
        Selection.Resize(1).Select
        ActiveSheet.PasteSpecial
    Else
        Range([lstrCultivar]).Select
        Selection.Resize(1).Select
    End If
    
    ActiveWorkbook.Names.Add Name:=lstrCultivar, RefersTo:= _
       "=Auxiliar!" & Selection.Address
    Application.CutCopyMode = False
    ActiveSheet.AutoFilterMode = False
    ActiveSheet.FilterMode = False
    protPlan.ProtegePlanilha
    
    Sheets(lstrPlanilhaAtual).Select
    montaBaseCultivar = llngLinhas
    Set protPlan = Nothing
End Function
Sub exibeCultivar(alngOrca As Long)
'GSOL00131364 - exibe as op|fffd||fffd|es de cultivar
    Dim aColuna(10) As String   'coluna que cont|fffd|m o c|fffd|digo do empreendimento para cultivar
                                'o indice reflete o c|fffd|digo referente ao or|fffd|amento atual
    Dim lstrOrca As String
    Dim lstrCultivar As String
    Dim sProt As New clsProtecao
    Dim lbolEvent As Boolean
    
    lbolEvent = Application.EnableEvents
    Application.EnableEvents = False
    
    lstrOrca = Format(alngOrca, "00")
    lstrCultivar = "listaCULTIVAR" & lstrOrca
    aColuna(1) = "N": aColuna(2) = "AE": aColuna(3) = "AV": aColuna(4) = "BM": aColuna(5) = "CD"
    aColuna(6) = "CU": aColuna(7) = "DL": aColuna(8) = "EC": aColuna(9) = "ET": aColuna(10) = "FK"
    
    If Cells(12, aColuna(alngOrca)).value = "1" And _
       montaBaseCultivar(alngOrca, Cells(12, aColuna(alngOrca)).Offset(0, -2).value) > 0 Then
    'se o empreendimento informado conste cultivar ent|fffd|o seleciona as op|fffd||fffd|es de cultivar correspondente.
                
        sProt.DesprotegePlanilha
        Cells(12, aColuna(alngOrca)).Offset(-1, -7).Resize(2, 2).Select
        
        'ActiveCell.FormulaR1C1 = "Cultivar:"
        ActiveCell.Offset(1, 0).Resize(1, 2).Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=" & [lstrCultivar]
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = False
            .ShowError = False
        End With

    Else
    'se n|fffd|o for um empreendimento que conste cultivar ent|fffd|o limpa o cultivar
        sProt.DesprotegePlanilha
        limpaCampoCultivar alngOrca
    End If
    Application.EnableEvents = lbolEvent
    Set sProt = Nothing
End Sub

Sub limpaCampoCultivar(alngOrca As Long)
    Dim aColuna(10) As String   'coluna que cont|fffd|m o c|fffd|digo do empreendimento para cultivar
                                'o indice reflete o c|fffd|digo referente ao or|fffd|amento atual
    Dim lRange As Range
    aColuna(1) = "N": aColuna(2) = "AE": aColuna(3) = "AV": aColuna(4) = "BM": aColuna(5) = "CD"
    aColuna(6) = "CU": aColuna(7) = "DL": aColuna(8) = "EC": aColuna(9) = "ET": aColuna(10) = "FK"
    
    Set lRange = ActiveCell
    Cells(12, aColuna(alngOrca)).Offset(0, -6).Select
    Selection.ClearContents
    Selection.Validation.Delete
    lRange.Select
    Set lRange = Nothing
End Sub

' verifica se a inversao |fffd| cultura consorciada
' se a cultura n|fffd|o estiver associada, retornar|fffd| "",
' caso contr|fffd|rio retornar|fffd| "Sim" ou "N|fffd|o"
Function retornaCulturaConsorciada(cultura) As String
    retornaCulturaConsorciada = ""

    Dim campoC() As String, campoCA() As String, i As Integer
    
    campoC = Split("D,U,AL,BC,BT,CK,DB,DS,EJ,FA", ",")   ' cultura or|fffd|amento
    campoCA = Split("J;AA;AR;BI;BZ;CQ;DH;DY;EP;FG", ";") ' cultura consorciada
            
    For i = LBound(campoC) To UBound(campoC)
        DoEvents
        If cultura = xl1Orca.Range(campoC(i) & "7").value Then
            retornaCulturaConsorciada = xl1Orca.Range(campoCA(i) & "13").value
        End If
    Next i
    
    If retornaCulturaConsorciada = vbNullString Then
       retornaCulturaConsorciada = "N|fffd|o"
    End If
End Function

' se o produto fizer parte do itens da regra, dota coment|fffd|rio
' informando que a unidade deve ser em toneladas (T)
'Sub comentarioToneladaBC()
'
'    Dim tem As Boolean
'    Dim item As String
'    Dim itens As String
'
'    Dim ProtPlan As clsProtecao
'    Set ProtPlan = New clsProtecao
'
'    ' lista todos os itens com e sem acentos
'    itens = UCase("Algod|fffd|o, Algodao, Arroz, Batata-inglesa, Caf|fffd|, Cafe, Cana-de-a|fffd||fffd|car, Cana-de-acucar, Cebola, Laranja, Tomate, feijao, Feij|fffd|o, Mandioca, Milho, Soja, Sorgo e Trigo.")
'
'    For i = 16 To 18
'        tem = False
'        xl1Orca.Activate
'        ProtPlan.DesprotegePlanilha
'        item = UCase(Range("c" & CStr(i)))
'        If InStr(itens, item) > 0 And item <> vbNullString Then tem = True
'
'        Dim rng As Range
'        Set rng = Range("f" & CStr(i))
'        rng.ClearComments
'
'        If tem = True Then
'            rng.AddComment "Informar a unidade Tonelada (T) para as atividades: Algod|fffd|o, Arroz, Batata-inglesa, Caf|fffd|, Cana-de-a|fffd||fffd|car, Cebola, Laranja, Tomate, Feij|fffd|o, Mandioca, Milho, Soja, Sorgo e Trigo."
'            rng.Comment.Shape.Width = 200
'            rng.Comment.Shape.Height = 70
'        End If
'    Next
'End Sub
Attribute VB_Name = "mdlFiltros"
Public celBusca As String, planBusca As String
Public resBusca As String, flagBusca As Integer, flagRotina As Integer
Public tipoBusca As Long

Public Sub filtraBacen()
       Dim protPlan As clsProtecao
       Set protPlan = New clsProtecao
       bd1.Select
       protPlan.DesprotegePlanilha
       Range("E2:F1000").Clear
       xl99Auxi.Activate
       protPlan.DesprotegePlanilha
       Range("listaBACEN_COD1").Select
       Selection.AutoFilter Field:=1, Criteria1:="=*" & Trim([celBusca]) & "*", Operator:=xlAnd
       Range("listaBACEN_COD1").Select
       Selection.Copy
       bd1.Select
       Range("E1").Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       Application.CutCopyMode = False
       LI = 1
       Do While Range("E" & [LI]).value <> vbNullString
          LI = LI + 1
       Loop
       ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
               "=bd1!R2C5:R" & [LI] & "C6"
       Sheets([planBusca]).Select
       On Error Resume Next
       tipoBusca = 1
       frmFiltro.Show
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
erroFiltro:
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
End Sub

Public Sub filtraMuni()
       Dim protPlan As clsProtecao
       Set protPlan = New clsProtecao

       tipoBusca = 2
       bd1.Select
       protPlan.DesprotegePlanilha
       Range("J2:J3000").Clear
       xl99Auxi.Activate
       protPlan.DesprotegePlanilha
       Range("listaMUNI1").Select
       Selection.AutoFilter Field:=1, Criteria1:="=" & Trim([celBusca]) & "*", Operator:=xlAnd
       Range("listaMUNI1").Select
       Selection.Copy
       bd1.Select
       Range("J1").Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       Application.CutCopyMode = False
       LI = 1
       Do While Range("J" & [LI]).value <> vbNullString
          LI = LI + 1
       Loop
       ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
               "=bd1!R2C10:R" & [LI] & "C10"
       Sheets([planBusca]).Select
       On Error Resume Next
       frmFiltro.Show
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
erroFiltro:
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
End Sub

Public Sub filtraAgencia()
       Dim protPlan As clsProtecao
       Set protPlan = New clsProtecao

       tipoBusca = 3
       bd1.Select
       protPlan.DesprotegePlanilha
       Range("N2:O5000").Clear
       xl99Auxi.Activate
       protPlan.DesprotegePlanilha
       Range("listaAGC_COD").Select
       Selection.AutoFilter Field:=1, Criteria1:="=*" & Trim([celBusca]) & "*", Operator:=xlAnd
       Range("listaAGC_COD").Select
       Selection.Copy
       bd1.Select
       Range("N1").Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       Application.CutCopyMode = False
       LI = 1
       Do While Range("N" & [LI]).value <> vbNullString
          LI = LI + 1
       Loop
       ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
              "=bd1!R2C14:R" & [LI] & "C15"
       Sheets([planBusca]).Select
       On Error Resume Next
       frmFiltro.Show
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
erroFiltro:
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
End Sub

Public Sub filtraAtiv()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        tipoBusca = 4
        bd1.Activate
        protPlan.DesprotegePlanilha
        Range("T2:V5000").Clear
        xl99Auxi.Activate
        protPlan.DesprotegePlanilha
        Range("listaATVE_COD").Select
        Selection.AutoFilter Field:=1, Criteria1:="=*" & Trim([celBusca]) & "*", Operator:=xlAnd
        Range("listaATVE_COD").Select
        Selection.Copy
        bd1.Activate
        Range("T1").Select
        Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
        Application.CutCopyMode = False
        LI = 1
        Do While Range("T" & [LI]).value <> vbNullString
           LI = LI + 1
        Loop
        
        ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
               "=bd1!R2C20:R" & [LI] & "C21"
        Sheets([planBusca]).Select
        On Error Resume Next
        frmFiltro.Show
        Sheets([planBusca]).Select
        flagBusca = 0
        Set protPlan = Nothing
        Exit Sub
erroFiltro:
        Sheets([planBusca]).Select
        flagBusca = 0
        Set protPlan = Nothing
        Exit Sub
End Sub


'Sub compacta()
'    For linha = 3 To 928
'        For coluna = 158 To 162
'            Cells(linha, coluna).Value = Trim(Cells(linha, coluna).Value)
'        Next coluna
'    Next linha
'End Sub


Public Sub filtraBacenTaxa()
       Dim protPlan As clsProtecao
       Set protPlan = New clsProtecao
       bd1.Select
       protPlan.DesprotegePlanilha
       Range("E2:F1000").Clear
       xl99Auxi.Activate
       protPlan.DesprotegePlanilha
       Range("listaBACEN_COD").Select
       Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       Selection.AutoFilter Field:=1, Criteria1:="=*" & Trim([celBusca]) & "*", Operator:=xlAnd
       Range("listaBACEN_COD").Select
       Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'Selection.SpecialCells(xlVisible).Select
       Selection.Copy
       bd1.Select
       Range("E1").Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       Application.CutCopyMode = False
       LI = Application.WorksheetFunction.CountA(Range("E2:E1000")) + 2
'       LI = 1
'       Do While Range("E" & [LI]).Value <> vbNullString
'          LI = LI + 1
'       Loop
       ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
               "=bd1!R2C5:R" & [LI] & "C6"
       Sheets([planBusca]).Select
       On Error Resume Next
       tipoBusca = 1
       frmFiltro.Show
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
erroFiltro:
       Sheets([planBusca]).Select
       flagBusca = 0
       Set protPlan = Nothing
       Exit Sub
End Sub

'GSOL00083049 - Declara|fffd||fffd|o do B|fffd|NUS PRONAF
Sub editarDeclaraBonus()
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina False
    Application.ScreenUpdating = True
    frmDecBonusPRONAF.Show
    protPlan.FinalizaRotina
    btnATUA_PROP_Clique
End Sub

'GSOL00083049 - Declara|fffd||fffd|o do B|fffd|NUS PRONAF
Sub selecionarDeclaraBonus_1()
    'selecionar op|fffd||fffd|o 1 de declara|fffd||fffd|o. Desmarcar se j|fffd| estiver selecionado
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    Application.EnableEvents = False
    If xl99Auxi.Range("GH12").value = 1 Then
       xl99Auxi.Range("GG12").value = 0
       xl99Auxi.Range("GH12").value = 0
    Else
       xl99Auxi.Range("GH12").value = 1
       editarDeclaraBonus
    End If
    Application.EnableEvents = True
End Sub

'GSOL00083049 - Declara|fffd||fffd|o do B|fffd|NUS PRONAF
Sub selecionarDeclaraBonus_2()
    'selecionar op|fffd||fffd|o 2 de declara|fffd||fffd|o. Desmarcar se j|fffd| estiver selecionado
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    Application.EnableEvents = False
    If xl99Auxi.Range("GH12").value = 2 Then
       xl99Auxi.Range("GG12").value = 0
       xl99Auxi.Range("GH12").value = 0
    Else
       xl99Auxi.Range("GH12").value = 2
       editarDeclaraBonus
    End If
    Application.EnableEvents = True
End Sub

'GSOL00083049 - Declara|fffd||fffd|o do B|fffd|NUS PRONAF
Sub telaDeclPRONAF(Optional flagOpcao As Integer)
    'Exibe as linhas com as op|fffd||fffd|es de declara|fffd||fffd|o de acordo com o programa informado
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    If flagOpcao = 1 Then
       Rows("302:308").Hidden = False
       ActiveSheet.Shapes("cxDeclPRONAF").Visible = True
       ActiveSheet.Shapes("cmdDec_1").Visible = True
       ActiveSheet.Shapes("cmdDec_2").Visible = True
    Else
       ActiveSheet.Shapes("cxDeclPRONAF").Visible = False
       ActiveSheet.Shapes("cmdDec_1").Visible = False
       ActiveSheet.Shapes("cmdDec_2").Visible = False
       Rows("302:308").Hidden = True
    End If

End Sub

Public Sub BuscaTipoLogradouro()
         'On Error GoTo erroFiltro
         tipoBusca = 5
         bd1.Activate
         Excluir_a
         Range("BO2:BO5000").Clear
         xl99Auxi.Activate
         Excluir_a
         Range("visaoTP_LOG_BUSCA").Select
         Selection.AutoFilter Field:=1, Criteria1:="=*" & Trim([celBusca]) & "*", Operator:=xlAnd
         'Selection.AutoFilter Field:=1, Criteria1:="=" & Trim([celBusca]) & "*", Operator:=xlAnd
         Range("visaoTP_LOG_BUSCA").Select
         Selection.Copy
         bd1.Activate
         Range("BO11").Select
         Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
         Application.CutCopyMode = False
         LI = Application.WorksheetFunction.CountA(Range("BO12:BO6000")) + 12
         
         ActiveWorkbook.Names.Add Name:="filtro_", RefersToR1C1:= _
                "=bd1!R12C67:R" & [LI] & "C67"
         Sheets([planBusca]).Select
         On Error Resume Next
         frmFiltro.Show
         Sheets([planBusca]).Select
         flagBusca = 0
         
         Exit Sub
erroFiltro:
         Sheets([planBusca]).Select
         flagBusca = 0
         Exit Sub
End Sub


'Manutencao evolutiva sendo realizada nesse comentario
'Marilia - 10/11/10 - GSOL00373526
'Public Sub PreencheDistrito(UF As String, Cel As String)
'' Exibe a lista de distrito quando o municipio for escolhido
'    ActiveSheet.Unprotect Password:="senhasBN"
'    Range("L" & [Cel]).Select
'    Selection.ClearContents
'    With Selection.Validation
'        .Delete
'        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
'        xlBetween, Formula1:="=Dist" & [UF]
'        .IgnoreBlank = True
'        .InCellDropdown = True
'        .InputTitle = ""
'        .ErrorTitle = ""
'        .InputMessage = ""
'        .ErrorMessage = ""
'        .ShowInput = True
'        .ShowError = True
'    End With
'End Sub
'
Attribute VB_Name = "mdlGeodesica"
Public ArrayInvProj() As Variant
Public ArrayInvImp() As Variant
Public ArrayInvAssocia() As Variant
Public lngTotLin As Long
Public intlinh As Integer

' Importa|fffd||fffd|o geodesica
Function SelecionarArquivo() As String
Dim sb As clsProgressBar
Dim xlArqImp As String

       
    strFilter = "Arquivos de Excel (*.csv; *.xls), *.xls"
    xlArqImp = Application.GetOpenFilename(strFilter, , ":: importar dados de invers|fffd|o")
    SelecionarArquivo = xlArqImp
    
    If Err Then
       MsgBox "N|fffd|o foi possivel abrir o arquivo!", vbExclamation
       Exit Function
    End If
    
End Function
Function CalcularArea()

Dim MediaPond As Double

Dim MediaPMin As Double
Dim MediaPMax As Double
'RNM corre|fffd||fffd|o do fator de reajuste visto estar fixo, agora utiliza o praticado na janela de coordenada Geod|fffd|sica
MediaPMin = xl14Geodesica.Range("W9").value ' "47,8"
MediaPMax = xl14Geodesica.Range("W10").value ' "59,106"
CalcularArea = Round((MediaPMax / MediaPMin) * 1, 9)

End Function


Sub ImportaFileCoord()
On Error GoTo ErroImportaFileCoord

    Dim lngLinCont As Single
    Dim arrayOfElements() As Variant
    Dim xlArqImp As Variant
    Dim sb As clsProgressBar
    Dim destCell As Range
    Dim xlPlan As String
    Dim protPlan As clsProtecao
    Dim lngTotLin As Integer                            'Atendimento ao incidente de inserir gleba 20181003 RNM
    Dim NomeArqAberto, NomeArqImp As String
    Set protPlan = New clsProtecao

    Boorel = True
    
    Set sb = New clsProgressBar
     
    xlPlan = ActiveSheet.Name
     
    Application.ScreenUpdating = False
    xl00Busca.Activate
    
    Call LimparDadosGleba
    
    Application.ScreenUpdating = False
    CarregamentoRapido True
    
    MediaPondCalc = CalcularArea() ' Calculo da media ponderada da |fffd|rea
    xlArqImp = SelecionarArquivo() ' Selecionar o arquivo  para importa|fffd||fffd|o as glebas
    If xlArqImp = False Then
        GoTo ErroImportaFileCoord
    End If
        
    NomeArqAberto = ActiveWorkbook.Name
    NomeArqImp = Dir(xlArqImp, vbArchive)
    
    If NomeArqAberto = NomeArqImp Then
        MsgBox "O arquivo que est|fffd| tentando abrir n|fffd|o |fffd| uma base de coordenadas geod|fffd|sica!", vbCritical, "Erro na sele|fffd||fffd|o do arquivo"
        GoTo ErroImportaFileCoord
    End If
        
    '    sb.Show "Importando os dados ", vbNullString, 0
    Application.StatusBar = "Importando os dados 5%"
        
    Call LimparDadosGleba  ' Limpar todas os dados anteriores
    
    If UCase(Right(xlArqImp, 4)) = ".CSV" Then ' Importa|fffd||fffd|o do Arquivo no formato CSV
     
            'sb.Show "Importando os dados ", vbNullString, 1
            Application.StatusBar = "Importando os dados 15%"
            
            Application.ScreenUpdating = False
            Application.Calculation = xlCalculationAutomatic
            
            Set destCell = Worksheets("BUSCA").Cells(Rows.Count, "FN").End(xlUp).Offset(1)
                       
            With destCell.Parent.QueryTables.Add(Connection:="TEXT;" & xlArqImp, Destination:=destCell)
                .TextFileStartRow = 1
                .TextFileParseType = xlDelimited
                .TextFileSemicolonDelimiter = True
                .TextFileDecimalSeparator = ";"
                .Refresh BackgroundQuery:=False
            End With
            
            xl00Busca.Range("FN2").Calculate
            lngTotLin = xl00Busca.Range("FN2").value + 1
            'GSOL01920132 - SEAP/PLANILHAS-AJUSTAR O IMPORTADOR DE COORDENADAS - RNM INI 27/03/2018
            xl00Busca.Range("FN3:GR" & lngTotLin + 1).Select
                ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Clear
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FN4:FN" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FQ4:FQ" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FR4:FR" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            With ActiveWorkbook.Worksheets("BUSCA").Sort
                .SetRange Range("FN3:GQ" & lngTotLin + 1)
                .Header = xlYes
                .MatchCase = False
                .Orientation = xlTopToBottom
                .SortMethod = xlPinYin
                .Apply
            End With
            'GSOL01920132 - SEAP/PLANILHAS-AJUSTAR O IMPORTADOR DE COORDENADAS - RNM FIM 27/03/2018
            arrayOfElements() = xl00Busca.Range("FN3:GR" & lngTotLin + 1)    'Atendimento ao incidente de inserir gleba 20181003 RNM
            
            tipoCap = "C"   'Identificar MOBILE , ARQUIVO ENVIADO POR USU|fffd|RIO   ATEN|fffd||fffd|O
'--------------------------------------------------------------------------------------------'
'            |fffd|M|fffd| |fffd| Manual  ( Dados inseridos via Aplicativo Mobile |fffd|Georreferenciamento|fffd|);   '
'            |fffd|A|fffd| |fffd| Autom|fffd|tica ( Dados inseridos via Aplicativo Mobile |fffd|Georreferenciamento|fffd|);'
'            |fffd|C|fffd| |fffd| Importa|fffd||fffd|o via arquivo CSV ;                                              '
'            |fffd|E|fffd| |fffd| Editado pelo usu|fffd|rio.                                                     '
'--------------------------------------------------------------------------------------------'
   ElseIf UCase(Right(xlArqImp, 4)) = ".XLS" Then 'Importa|fffd||fffd|o do Arquivo no formato XLS
    
            xl00Busca.Activate
            protPlan.DesprotegePlanilha
            
            On Error Resume Next
            Set importWorkbook = Application.Workbooks.Add(xlArqImp)
            Set importSheet = importWorkbook.Worksheets(1)
               
            Application.ScreenUpdating = False
            importSheet.Range("A1:AE" & Range("A1").End(xlDown).Row).Select
            Selection.Copy
            xl00Busca.Activate
           ' xl00Busca.Select
            xl00Busca.Range("FN3").Select
            Selection.PasteSpecial Paste:=xlPasteValues
            
            importWorkbook.Close SaveChanges:=False
            
            xl00Busca.Range("FN2").Calculate
            lngTotLin = xl00Busca.Range("FN2").value + 1
            'GSOL01920132 - SEAP/PLANILHAS-AJUSTAR O IMPORTADOR DE COORDENADAS - RNM INI 27/03/2018
            xl00Busca.Range("FN3:GR" & lngTotLin + 1).Select
                ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Clear
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FN4:FN" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FQ4:FQ" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            ActiveWorkbook.Worksheets("BUSCA").Sort.SortFields.Add Key:=Range("FR4:FR" & lngTotLin + 1) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            With ActiveWorkbook.Worksheets("BUSCA").Sort
                .SetRange Range("FN3:GQ" & lngTotLin + 1)
                .Header = xlYes
                .MatchCase = False
                .Orientation = xlTopToBottom
                .SortMethod = xlPinYin
                .Apply
            End With
            'GSOL01920132 - SEAP/PLANILHAS-AJUSTAR O IMPORTADOR DE COORDENADAS - RNM FIM 27/03/2018
                       
            xl00Busca.Range("FN2").Calculate
            lngTotLin = IIf(xl00Busca.Range("FN2").value = 0, 1, xl00Busca.Range("FN2").value)
            arrayOfElements() = xl00Busca.Range("FN3:GR" & Rows.Count)
            
            tipoCap = "E" ' Tipo do Arquivo
            
   End If

            'sb.Show "Importando os dados ", vbNullString, 1
            Application.StatusBar = "Importando os dados 30%"
            lngTotLin = IIf(xl00Busca.Range("FN2").value = 0, 1, xl00Busca.Range("FN2").value)   'Atendimento ao incidente de inserir gleba 20181003 RNM
            
            If InserirGleba(arrayOfElements, lngTotLin) = 1 Then                         'Atendimento ao incidente de inserir gleba 20181003 RNM
                MsgBox "Erro na importa|fffd||fffd|o do arquivo!", vbCritical, "Arquivo Inv|fffd|lido"
                Sheets(xlPlan).Activate
                GoTo ErroImportaFileCoord
            End If
            
            Application.StatusBar = "Importando os dados 80%"
            'Limpar Tela de glela
            xl00Busca.Range("FN3:GR" & Rows.Count).ClearContents
            xl00Busca.Range("FN3:GR" & Rows.Count).ClearFormats
            
            ' Fechar o arquivo importado
            On Error Resume Next
            importWorkbook.Close SaveChanges:=False
            Sheets(xlPlan).Activate
            CarregamentoRapido False
            Set sb = Nothing
                     
            Application.StatusBar = ""
                     
            frmAssociaGlebas.Show
            Exit Sub
            
ErroImportaFileCoord:

    If Err.Number > 0 Then
        MsgBox "Erro na importa|fffd||fffd|o do arquivo!", vbCritical, "Erro"
        importWorkbook.Close SaveChanges:=False
        xl00Busca.Range("DM3:GR" & Rows.Count).ClearContents
        xl00Busca.Range("DM3:GR" & Rows.Count).ClearFormats
    End If
    Boorel = False
    xl00Busca.Visible = xlSheetVeryHidden
    Sheets(xlPlan).Activate
    
End Sub


Sub AssociarGlebas()
  frmAssociaGlebas.Show
End Sub
Function InserirGleba(arrayOfElements As Variant, ItotLin As Integer) As Byte  'Atendimento ao incidente de inserir gleba 20181003 RNM

    On Error GoTo ErroFimImportarGleba
    
    'Variaveis para Importa|fffd||fffd|o das coordenadas Geod|fffd|sicas
    Dim lngArqExp As Long, lngLinSel As Long
    Dim xlImporta As String
    Dim strFilter As String
    Dim xlPlan
    
    Dim sb As clsProgressBar
    Dim protPlan As clsProtecao

    Dim line As String
    
    Dim tipoCap As String
    Dim CulturaAtual, CulturaProx, GlebaAtual, ImovelAtual As String
    Dim ContlinCult, ContLinGleba, ContlinImv, ContlinhaImv, intCdImovel, _
    intQuantReg As Long
    Dim Municipio As String
    Dim InseriCalc As Boolean
    Dim ArrayNomeGleba()
    Dim i, j, ContNomeGleba, ContPontos As Integer
    Const lngLinIni As Integer = 4
    Const lngColIni As Integer = 114

 '---------------------------------------------------
    'Iniciando as V|fffd|riaveis
     
    lngLinSel = lngLinIni
    ContLinGleba = lngLinIni
    ContlinCult = 0
    ContlinhaImv = lngLinIni
    SomaGlebaArea = 0
    CulturaAtual = ""
    CulturaProx = ""
    ImovelAtual = ""
    GlebaAtual = ""
    IniGleba = True
    ArrayNomeGleba() = Range("Nome_gleba")
    ContPontos = 0
    ContNomeGleba = 0
  '--------------------------------------------------
    Application.ScreenUpdating = False
    CarregamentoRapido True
           
    
    lngTotLin = IIf(xl00Busca.Range("FN2").value = 0, ItotLin, xl00Busca.Range("FN2").value)  'Atendimento ao incidente de inserir gleba 20181003 RNM
    
    For i = 1 To lngTotLin
        
        'DESATIVADO TEMPORARIAMENTE AT|fffd| IMPLATAN|fffd|AO DOS DADOS MOBILE
        arrayOfElements(i, 23) = vbNullString
        arrayOfElements(i, 24) = vbNullString
        arrayOfElements(i, 25) = vbNullString
        arrayOfElements(i, 26) = vbNullString
        arrayOfElements(i, 27) = vbNullString
        arrayOfElements(i, 28) = vbNullString
        arrayOfElements(i, 29) = vbNullString
        arrayOfElements(i, 30) = vbNullString
        arrayOfElements(i, 31) = vbNullString
    
       '-- Validar o cabe|fffd|alho do arquivo
       If arrayOfElements(1, 1) <> "Cultura" Or _
          arrayOfElements(1, 2) <> "Formato da Gleba" Or _
          arrayOfElements(1, 3) <> "Area Nao Cultivada" Or _
          arrayOfElements(1, 4) <> "Gleba" Or _
          arrayOfElements(1, 5) <> "Ponto" Or _
          arrayOfElements(1, 6) <> "Lat" Or _
          arrayOfElements(1, 7) <> "Long" Or _
          arrayOfElements(1, 8) <> "Alt" Then
          ' Incluir demais campos
         
         MsgBox "Dados do cabe|fffd|alho inv|fffd|lido.", vbCritical, "Erro nos dados do arquivo"
         InserirGleba = 1
         
         Exit Function
            
       End If
       
       '-- Pular importa|fffd||fffd|o da primeira linha do arquivo
       If arrayOfElements(i, 1) = "Cultura" Then GoTo Sair
            
            '-- Validar se h|fffd| celulas vazias na planilha
            If arrayOfElements(i, 1) = vbNullString Or _
                 arrayOfElements(i, 2) = vbNullString Or _
                 arrayOfElements(i, 3) = vbNullString Or _
                 arrayOfElements(i, 4) = vbNullString Or _
                 arrayOfElements(i, 5) = vbNullString Or _
                 arrayOfElements(i, 6) = vbNullString Or _
                 arrayOfElements(i, 7) = vbNullString Or _
                 arrayOfElements(i, 8) = vbNullString Then
                 ' Incluir demais campos

                 MsgBox "Existe(m) Campo(s) vazio(s) na linha " & i & ".", vbCritical, "Erro nos dados formato do arquivo"
                 InserirGleba = 1
                 Exit Function

            End If
        
           ' -- Validar o formato da gleba
            For j = 1 To UBound(ArrayNomeGleba())
                 If Trim(UCase(arrayOfElements(i, 2))) = Trim(UCase(ArrayNomeGleba(j, 1))) Then
                     ContNomeGleba = ContNomeGleba + 1
                     j = UBound(ArrayNomeGleba()) ' Armaneza na variavel o |fffd|ltimo registro para sair do loop
                 End If
            Next j
            If ContNomeGleba = 0 Then
                 MsgBox "Formato da gleba inv|fffd|lido na linha " & i & ".", vbCritical, "Erro nos dados formato do arquivo"
                 InserirGleba = 1
                 Exit Function
            End If
            ContNomeGleba = 0
            
            '-- Validar sequ|fffd|ncia de pontos
            ContPontos = ContPontos + 1
            CulturaAtual = Trim(arrayOfElements(i, 1) & arrayOfElements(i, 23) & arrayOfElements(i, 24) & arrayOfElements(i, 25))
            
            If GlebaAtual <> arrayOfElements(i, 4) Or CulturaAtual <> CulturaProx Then
                ContPontos = 1
            End If
            If ContPontos <> CInt(arrayOfElements(i, 5)) Then
                MsgBox "Sequ|fffd|ncia de ponto inv|fffd|lido na linha " & i & ".", vbCritical, "Erro nos dados do arquivo"
                InserirGleba = 1
                Exit Function
            End If
             GlebaAtual = arrayOfElements(i, 4)  ' Armazena gleba selecionada
            
       With xl00Busca
            
            Application.StatusBar = "Importando os dados 40%"
            Application.Calculation = xlCalculationManual               '
            
            
            If CulturaAtual <> CulturaProx Then   'ARMAZENA O RESUMO DE CULTURAS
                ContlinCult = ContlinCult + 1
               .Cells([ContlinCult] + lngLinIni - 1, lngColIni + 4) = ContlinCult   'C|fffd|digo
               .Cells([ContlinCult] + lngLinIni - 1, lngColIni + 5) = arrayOfElements(i, 1) ' Cultura
               .Cells([ContlinCult] + lngLinIni - 1, lngColIni + 6).FormulaLocal = "=DM" & [ContlinCult] + lngLinIni - 1 ' Formula para Associa|fffd||fffd|o
               .Cells([ContlinCult] + lngLinIni - 1, lngColIni + 7) = arrayOfElements(i, 23) ' IM|fffd|VEL
               .Cells([ContlinCult] + lngLinIni - 1, lngColIni + 8) = arrayOfElements(i, 24) & " - " & arrayOfElements(i, 25) ' Municipio
                
            End If
                        
            CulturaProx = Trim(arrayOfElements(i, 1) & arrayOfElements(i, 23) & arrayOfElements(i, 24) & arrayOfElements(i, 25))
                        
            If ImovelAtual <> arrayOfElements(i, 23) Then ' ARMAZENA LISTA DE IM|fffd|VEL
                intCdImovel = ContlinhaImv - lngLinIni + 1
                .Cells([ContlinhaImv], lngColIni) = intCdImovel 'C|fffd|digo 124
                .Cells([ContlinhaImv], lngColIni + 1) = arrayOfElements(i, 23) 'im|fffd|vel 125
                ContlinhaImv = ContlinhaImv + 1
            End If
                
                ImovelAtual = arrayOfElements(i, 23)
                Application.Calculation = xlCalculationManual
                
                .Cells([lngLinSel], lngColIni + 16).FormulaLocal = "=SE(|fffd|ERROS(PROCV(EW" & [lngLinSel] & ";$DN$4:$DR$64545;3;FALSO));0;PROCV(EW" & lngLinSel & ";$DN$4:$DR$64545;3;FALSO))" 'Seq_Invers|fffd|o_Assoc
                .Cells([lngLinSel], lngColIni + 20) = CInt(arrayOfElements(i, 4)) ' Gleba
                .Cells([lngLinSel], lngColIni + 21) = arrayOfElements(i, 2) ' Formato da Gleba
                .Cells([lngLinSel], lngColIni + 22) = CDbl(arrayOfElements(i, 3)) ' |fffd|rea n|fffd|o Cultivada
                .Cells([lngLinSel], lngColIni + 23) = CInt(arrayOfElements(i, 5)) ' Ponto
                .Cells([lngLinSel], lngColIni + 24).NumberFormat = "0.00000000000"
                .Cells([lngLinSel], lngColIni + 24) = CDbl(arrayOfElements(i, 6)) ' Latitude
                .Cells([lngLinSel], lngColIni + 25).NumberFormat = "0.00000000000"
                .Cells([lngLinSel], lngColIni + 25) = CDbl(arrayOfElements(i, 7)) ' Longitude
                .Cells([lngLinSel], lngColIni + 26).NumberFormat = "##0.000"
                .Cells([lngLinSel], lngColIni + 26) = CDbl(arrayOfElements(i, 8)) ' Altitude
                
                 If arrayOfElements(i, 26) = "M" Or arrayOfElements(i, 26) = "A" Or arrayOfElements(i, 26) = "E" Then
                    .Cells([lngLinSel], lngColIni + 34) = arrayOfElements(i, 26) ' Tipo Cap
                 Else
                    .Cells([lngLinSel], lngColIni + 34) = tipoCap                ' Tipo Cap
                 End If
             
                .Cells([lngLinSel], lngColIni + 39) = ContlinCult ' Cod cultura
                .Cells([lngLinSel], lngColIni + 40) = Trim(arrayOfElements(i, 1)) ' Descri|fffd||fffd|o Cultura
                .Cells([lngLinSel], lngColIni + 41) = arrayOfElements(i, 24) ' Municipio
                .Cells([lngLinSel], lngColIni + 42) = arrayOfElements(i, 25) ' uf
                .Cells([lngLinSel], lngColIni + 43) = arrayOfElements(i, 27) ' proponente
                .Cells([lngLinSel], lngColIni + 44) = arrayOfElements(i, 28) ' CPF_CNPJ
                .Cells([lngLinSel], lngColIni + 45).NumberFormat = "0.00"
                .Cells([lngLinSel], lngColIni + 45) = arrayOfElements(i, 29) ' Area Capturada
                .Cells([lngLinSel], lngColIni + 46).NumberFormat = "0.00"
                .Cells([lngLinSel], lngColIni + 46) = arrayOfElements(i, 30) ' Area Cultivada
                .Cells([lngLinSel], lngColIni + 47) = arrayOfElements(i, 31) ' Data / Hora
               
                lngLinSel = lngLinSel + 1
         
         End With
         
Sair:
    
    Next i

ErroFimImportarGleba:
If Err.Number = 13 Then
    InserirGleba = 1
End If
End Function

Sub LimparDadosGleba()
Dim protPlan As clsProtecao

    Set protPlan = New clsProtecao
    xl00Busca.Activate
    protPlan.DesprotegePlanilha
    xl00Busca.Range("DJ4:GT" & Rows.Count).ClearContents
    xl00Busca.Range("DJ4:GT" & Rows.Count).ClearFormats
    
    xl00Busca.Range("FN3:GR" & Rows.Count).ClearContents
    xl00Busca.Range("FN3:GR" & Rows.Count).ClearFormats
    
    
End Sub
' --------------------------------------------------------------------------------
' PROCEDURES GRAVA|fffd||fffd|O DAS GLEBAS
' --------------------------------------------------------------------------------
Sub InserirResumoGleba()

    Dim protPlan As clsProtecao
    Dim TotalLine As Integer
    Dim lngLinSel As Integer
    Dim Inversao As String
    Dim CalcTotAreaCap, SomaTotAreaCap As Double
    Dim PosLinIni As Integer
    Dim PosLinFim As Integer
    Dim GlebaIni As Integer
    Dim GlebaFim As Integer
    Dim PontoGleba As Integer
    Dim PosLinINIGlb As Integer
    Dim PosLinFIMGlb As Integer
    
    
    Const lngLinIni As Integer = 101
    
    Set protPlan = New clsProtecao
    
    Application.ScreenUpdating = False
    
    bd10Geodesica.Activate
    
    protPlan.DesprotegePlanilha
    
    Application.Calculation = xlCalculationAutomatic
    
    Call OrdenarListaGleba
    
    Application.Calculation = xlCalculationManual
    
    Range("B99").Calculate
    Range("BJ99").Calculate
    
    'Limpar antes de inserir
    'If Range("B99").value > 0 Then
    Range("BA101:BR10000").ClearContents
    'End If
    invPrev = bd10Geodesica.Cells([lngLinIni], 3)
    GlebaAtual = bd10Geodesica.Cells([lngLinIni], 6)
    TipoForm = bd10Geodesica.Cells([lngLinIni], 7)
    PosLinIni = lngLinIni
    GlebaIni = bd10Geodesica.Cells([lngLinIni], 6)
    lngLinRes = lngLinIni
    Inversao = bd10Geodesica.Cells([lngLinIni], 3)
    MediaPondCalc = CalcularArea()
    AreaNCult = vbNullString
   
    PosLinINIGlb = 101
    PosLinFIMGlb = 101
  
    For lngLinSel = PosLinIni To Range("B99").value + 100
    
      With bd10Geodesica
      
            If invPrev <> bd10Geodesica.Cells([lngLinSel], 3) Or GlebaAtual <> bd10Geodesica.Cells([lngLinSel], 6) Then
                .Cells([lngLinRes], 53) = invPrev 'Seq invers|fffd|o
                .Cells([lngLinRes], 54) = GlebaAtual ' Numero da Gleba
                .Cells([lngLinRes], 55) = TipoForm ' Tipo
                .Cells([lngLinRes], 56) = AreaNCult
                .Cells([lngLinRes], 59) = PosLinIni
                .Cells([lngLinRes], 60) = PosLinFim
                .Cells([lngLinRes], 61).NumberFormat = "##0.00"
                .Cells([lngLinRes], 61).FormulaLocal = "=SEERRO(PROCV($BA" & [lngLinRes] & ";Lst_InV_Proj;10;FALSO);"""")"
                .Cells([lngLinRes], 62) = CalcularAreaCapt(PosLinIni, PosLinFim)
                .Cells([lngLinRes], 63).FormulaLocal = "=SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BJ$101:$BJ$" & bd10Geodesica.Cells(99, 2).value + 100 & ")- SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BD$101:$BD$" & bd10Geodesica.Cells(99, 2).value + 100 & ")"
                .Cells([lngLinRes], 64).FormulaLocal = "=CONT.SE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";$BA" & [lngLinRes] & ")"
                .Cells([lngLinRes], 65).FormulaLocal = PontoGleba
                .Cells([lngLinRes], 66).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO));"""";PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO))" ' Critica
                .Cells([lngLinRes], 67).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO));0;PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO))" ' CriticaItem"
                .Cells([lngLinRes], 68).FormulaLocal = "=SE(|fffd|ERROS(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100);0;SE(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/1= 100;0;ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100))" ' Critica percentual"
                .Cells([lngLinRes], 69).FormulaLocal = "=SE(BM" & [lngLinRes] & ">1;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0);SE(BM" & [lngLinRes] & "=1;0;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0)))"   '  Critica Formato"  'GSOL01923494 - Demanda Legal RNM Dez/2018
                .Cells([lngLinRes], 70).FormulaLocal = "=CONT.SES($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BM$101:$BM$" & bd10Geodesica.Cells(99, 2).value + 100 & ";1)"
                 bd10Geodesica.Range("BE" & PosLinINIGlb & ":BE" & PosLinFIMGlb).value = GlebaIni
                 bd10Geodesica.Range("BF" & PosLinINIGlb & ":BF" & PosLinFIMGlb).value = GlebaFim
                 
                 PosLinIni = lngLinSel
                 lngLinRes = lngLinRes + 1
                 PontoGleba = 0
                 If invPrev <> bd10Geodesica.Cells([lngLinSel], 3) Then
                    PosLinINIGlb = lngLinRes
                 End If
                 
                 invPrev = .Cells([lngLinSel], 3) 'Seq invers|fffd|o
                 TipoForm = .Cells([lngLinSel], 7)   ' Formato Atividade 311961
                 GlebaAtual = .Cells([lngLinSel], 6)
                 GlebaFim = .Cells([lngLinSel], 6)
                 
            
                If Inversao <> .Cells([lngLinSel], 3) Then
                   GlebaIni = .Cells([lngLinSel], 6)   ' Gleba INI
                   Inversao = .Cells([lngLinSel], 3)   ' Invers|fffd|o
                End If
                
                'SomaValor = SomaValor + .Cells([lngLinSel], 8)
                PosLinFim = lngLinSel
                GlebaFim = .Cells([lngLinSel], 6)
                invPrev = .Cells([lngLinSel], 3) 'Seq invers|fffd|o
                AreaNCult = .Cells([lngLinSel], 8)
                PosLinFIMGlb = lngLinRes
                PontoGleba = PontoGleba + 1
                 If lngLinSel = Range("B99").value + 100 Then
                 
                     .Cells([lngLinRes], 53) = .Cells([lngLinSel], 3) 'Seq invers|fffd|o
                     .Cells([lngLinRes], 54) = .Cells([lngLinSel], 6) ' Numero da Gleba
                     .Cells([lngLinRes], 55) = .Cells([lngLinSel], 7) ' Tipo Atividade 311961
                     .Cells([lngLinRes], 56) = .Cells([lngLinSel], 8)  ' Area n|fffd|o cultivada
                     .Cells([lngLinRes], 59) = PosLinIni
                     .Cells([lngLinRes], 60) = PosLinFim
                     .Cells([lngLinRes], 61).NumberFormat = "##0.00"
                     .Cells([lngLinRes], 61).FormulaLocal = "=SEERRO(PROCV($BA" & [lngLinRes] & ";Lst_InV_Proj;10;FALSO);"""")"
                     .Cells([lngLinRes], 62) = CalcularAreaCapt(PosLinIni, PosLinFim)
                     .Cells([lngLinRes], 63).FormulaLocal = "=SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BJ$101:$BJ$" & bd10Geodesica.Cells(99, 2).value + 100 & ")- SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BD$101:$BD$" & bd10Geodesica.Cells(99, 2).value + 100 & ")"
                     .Cells([lngLinRes], 64).FormulaLocal = "=CONT.SE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";$BA" & [lngLinRes] & ")"
                     .Cells([lngLinRes], 65).FormulaLocal = PontoGleba
                     .Cells([lngLinRes], 66).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO));"""";PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO))" ' Critica
                     .Cells([lngLinRes], 67).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO));0;PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO))" ' CriticaItem"
                     .Cells([lngLinRes], 68).FormulaLocal = "=SE(|fffd|ERROS(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100);0;SE(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/1= 100;0;ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100))" ' Critica percentual"
                     .Cells([lngLinRes], 69).FormulaLocal = "=SE(BM" & [lngLinRes] & ">1;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0);SE(BM" & [lngLinRes] & "=1;0;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0)))"   '  Critica Formato"  'GSOL01923494 - Demanda Legal RNM Dez/2018
                     .Cells([lngLinRes], 70).FormulaLocal = "=CONT.SES($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BM$101:$BM$" & bd10Geodesica.Cells(99, 2).value + 100 & ";1)"
                     bd10Geodesica.Range("BE" & PosLinINIGlb & ":BE" & PosLinFIMGlb).value = GlebaIni
                     bd10Geodesica.Range("BF" & PosLinINIGlb & ":BF" & PosLinFIMGlb).value = GlebaFim
                     
                 End If
            Else
                If Inversao <> .Cells([lngLinSel], 3) Then
                   GlebaIni = .Cells([lngLinSel], 6)   ' Gleba INI
                   Inversao = .Cells([lngLinSel], 3)   ' Invers|fffd|o
                   TipoForm = .Cells([lngLinIni], 7)   ' Formato
                End If
                
                'SomaValor = SomaValor + .Cells([lngLinSel], 8)
                PosLinFim = lngLinSel
                GlebaFim = .Cells([lngLinSel], 6)
                invPrev = .Cells([lngLinSel], 3) 'Seq invers|fffd|o
                AreaNCult = .Cells([lngLinSel], 8)
                PosLinFIMGlb = lngLinRes
                PontoGleba = PontoGleba + 1
                 If lngLinSel = Range("B99").value + 100 Then
                 
                     .Cells([lngLinRes], 53) = .Cells([lngLinSel], 3) 'Seq invers|fffd|o
                     .Cells([lngLinRes], 54) = .Cells([lngLinSel], 6) ' Numero da Gleba
                     .Cells([lngLinRes], 55) = .Cells([lngLinSel], 7) ' Tipo Atividade 311961
                     .Cells([lngLinRes], 56) = .Cells([lngLinSel], 8)  ' Area n|fffd|o cultivada
                     .Cells([lngLinRes], 59) = PosLinIni
                     .Cells([lngLinRes], 60) = PosLinFim
                     .Cells([lngLinRes], 61).NumberFormat = "##0.00"
                     .Cells([lngLinRes], 61).FormulaLocal = "=SEERRO(PROCV($BA" & [lngLinRes] & ";Lst_InV_Proj;10;FALSO);"""")"
                     .Cells([lngLinRes], 62) = CalcularAreaCapt(PosLinIni, PosLinFim)
                     .Cells([lngLinRes], 63).FormulaLocal = "=SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BJ$101:$BJ$" & bd10Geodesica.Cells(99, 2).value + 100 & ")- SOMASE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BD$101:$BD$" & bd10Geodesica.Cells(99, 2).value + 100 & ")"
                     .Cells([lngLinRes], 64).FormulaLocal = "=CONT.SE($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";$BA" & [lngLinRes] & ")"
                     .Cells([lngLinRes], 65).FormulaLocal = PontoGleba
                     .Cells([lngLinRes], 66).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO));"""";PROCV($BC" & [lngLinRes] & ";Cod_Gleba;3;FALSO))" ' Critica
                     .Cells([lngLinRes], 67).FormulaLocal = "=SE(|fffd|ERROS(PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO));0;PROCV($BA" & [lngLinRes] & ";$A$2:$A$35;1;FALSO))" ' CriticaItem"
                     .Cells([lngLinRes], 68).FormulaLocal = "=SE(|fffd|ERROS(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100);0;SE(ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/1= 100;0;ARRED((1-((BK" & [lngLinRes] & ")/BI" & [lngLinRes] & "))*100;2)/100))" ' Critica percentual"
                     .Cells([lngLinRes], 69).FormulaLocal = "=SE(BM" & [lngLinRes] & ">1;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0);SE(BM" & [lngLinRes] & "=1;0;SE(BM" & [lngLinRes] & "<BN" & [lngLinRes] & ";-1;0)))"   '  Critica Formato"  'GSOL01923494 - Demanda Legal RNM Dez/2018
                     .Cells([lngLinRes], 70).FormulaLocal = "=CONT.SES($BA$101:$BA$" & bd10Geodesica.Cells(99, 2).value + 100 & ";BA" & [lngLinRes] & ";$BM$101:$BM$" & bd10Geodesica.Cells(99, 2).value + 100 & ";1)"
                     bd10Geodesica.Range("BE" & PosLinINIGlb & ":BE" & PosLinFIMGlb).value = GlebaIni
                     bd10Geodesica.Range("BF" & PosLinINIGlb & ":BF" & PosLinFIMGlb).value = GlebaFim
                     
                 End If
            End If
              
       End With
     Next lngLinSel
     
     
     bd10Geodesica.Range("BE" & PosLinINIGlb & ":BE" & PosLinFIMGlb).value = GlebaIni
     bd10Geodesica.Range("BF" & PosLinINIGlb & ":BF" & PosLinFIMGlb).value = GlebaFim
     Call OrdenarResumoGleba
     
           
End Sub
Sub InserirFormulasGleba(ByVal lngLinIni As Integer)
    Dim protPlan As clsProtecao
    Dim TotalLine As Integer
    Dim lngLinSel As Integer
    Dim Inversao As String
    Dim CalcTotAreaCap, SomaTotAreaCap As Double
    Dim PosLinIni As Integer
    Dim PosLinFim As Integer
'    Const lngLinIni As Integer = 101

    Set protPlan = New clsProtecao
    
    'Inserir Formula!
    Application.ScreenUpdating = False
    
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    
    Range("B99").Calculate
    
    CarregamentoRapido True
    
    ingTotalLin = bd10Geodesica.Range("B99").value + 100
    Application.Calculation = xlCalculationManual
    
    For lngLinSel = lngLinIni To Range("B99").value + 100
   
        Application.StatusBar = "Associando os dados 60%"

        With bd10Geodesica
            
            Application.ScreenUpdating = False
            
           .Cells([lngLinSel], 1).FormulaLocal = "=CONCATENAR($C" & [lngLinSel] & ";$D" & [lngLinSel] & ")" ' Chave de Invers|fffd|o
           .Cells([lngLinSel], 2).FormulaLocal = "=CONCATENAR($A" & [lngLinSel] & ";SE(N|fffd|M.CARACT($F" & [lngLinSel] & ")=1;0;"""");$F" & _
           [lngLinSel] & ";SE(N|fffd|M.CARACT($I" & [lngLinSel] & ")=1;0;"""");$I" & [lngLinSel] & ")" ' Chave Da gleba
'
           .Cells([lngLinSel], 4).FormulaLocal = "=SE(|fffd|ERROS(PROCV($C" & [lngLinSel] & ";Inv_Geodesica;2;FALSO));"""";PROCV($C" & [lngLinSel] & ";Inv_Geodesica;2;FALSO))" ' Invers|fffd|o
           .Cells([lngLinSel], 5).FormulaLocal = "=SE(|fffd|ERROS(PROCV($C" & [lngLinSel] & ";Inv_Geodesica;3;FALSO));0;PROCV($C" & [lngLinSel] & ";Inv_Geodesica;3;FALSO))" ' Cod Empreedimento
           .Cells([lngLinSel], 5).NumberFormat = "0000000000"
           .Cells([lngLinSel], 13).FormulaR1C1 = "=ROW(RC[-1])" ' ID
           .Cells([lngLinSel], 14).FormulaLocal = "=SE(|fffd|ERROS(PROCV($G" & [lngLinSel] & ";Cod_Gleba;2;FALSO));0;PROCV($G" & [lngLinSel] & ";Cod_Gleba;2;FALSO))" 'Cd_Tp_Glb
           .Cells([lngLinSel], 15).FormulaLocal = "=SE(|fffd|ERROS(PROCV($G" & [lngLinSel] & ";Cod_Gleba;3;FALSO));0;PROCV($G" & [lngLinSel] & ";Cod_Gleba;3;FALSO))" 'Limite
           .Cells([lngLinSel], 16).FormulaLocal = "=CONCATENAR($C" & [lngLinSel] & ";$F" & [lngLinSel] & ")" 'Gleba/Pontos
           .Cells([lngLinSel], 17).FormulaLocal = 1 'Fixo
           '.Cells([lngLinSel], 18).FormulaLocal = 0
           '.Cells([lngLinSel], 19).FormulaLocal = "=SE($R" & [lngLinSel] & "<$O" & [lngLinSel] & ";-1;0)" ' Critica
           
             
        End With
        
    Next lngLinSel
    'Application.Calculation = xlCalculationAutomatic
    Application.StatusBar = False
    Call OrdenarListaGleba
End Sub
Function CalcularAreaCapt(PosLinIni As Integer, PosLinFim As Integer) As Double

    Dim protPlan As clsProtecao
    Dim lngLinSel As Integer
    Dim Inversao As String
    Dim CalcTotAreaCap, SomaTotAreaCap As Double
    Dim LatFirst, LongFirst, LatNext, LongNext, LatPrev, LongPrev As Double
    Dim SomaGlebaArea, SomaTotGlebaArea, SomaTotGlebaAreaP, CalcArea As Double
        
    Const lngLinIni As Integer = 101
    
    Set protPlan = New clsProtecao
    
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    
    Application.Calculation = xlCalculationManual
    
    Range("B99").Calculate
    
    GlebaAtual = bd10Geodesica.Cells([lngLinIni], 6)
 
    lngLinRes = lngLinIni
    MediaPondCalc = CalcularArea()
        
    ContLinArea = lngLinIni - 1
    ContLinGleba = lngLinIni
    SomaGlebaArea = 0
    CulturaAtual = ""
    CulturaProx = ""
    IniGleba = True
    
    Application.Calculation = xlCalculationManual
    
    PosLinFim = PosLinFim + 1
    
    For lngLinSel = PosLinIni To PosLinFim
         
         With bd10Geodesica
         
            LatNext = .Cells([lngLinSel], 10)   ' Armazena a Latitude seleciona no arquivo
            LongNext = .Cells([lngLinSel], 11)     'Armazena a Longitude seleciona no arquivo
            
            If IniGleba = True Then
                'Armazenar o Valor da primeira linha para futuros c|fffd|lculos
                LatFirst = .Cells([lngLinSel], 10)
                LongFirst = .Cells([lngLinSel], 11)
                LatPrev = LatFirst
                LongPrev = LongFirst
                CalcArea = Empty
                IniGleba = False
                InseriCalc = False
            End If
       
            CalcArea = (LatPrev * LongNext) - (LongPrev * LatNext)
            InseriCalc = True
            CalcAreaCont = CalcArea
        
      
            If lngLinSel = PosLinFim Then '
                CalcArea = (LatPrev * LongFirst) - (LongPrev * LatFirst)
                SomaTotGlebaArea = SomaGlebaArea + CalcArea
                SomaTotGlebaAreaP = Abs((SomaTotGlebaArea) / 2) * 1000000
                CalcularAreaCapt = SomaTotGlebaAreaP * MediaPondCalc
                Exit Function
            End If
    
            LatPrev = CDbl(LatNext)     'Armazena a Latitude atual
            LongPrev = CDbl(LongNext)   'Armazena a Longitude atual

            SomaGlebaArea = SomaGlebaArea + CalcArea
            GlebaAtual = .Cells([lngLinSel], 6)  ' Armazena gleba selecionada
          
                
         End With
     
    Next lngLinSel
           
End Function
Sub LimparGlebasSemInv()
    Dim protPlan As clsProtecao
    Dim TotalLine As Integer
    Dim lngLinSel As Integer
    Dim Inversao As String
    Dim CalcTotAreaCap, SomaTotAreaCap As Double
    Dim PosLinIni As Integer
    Dim PosLinFim As Integer
    Dim ContExcluir As Integer
'    Const lngLinIni As Integer = 101
    
    ContExcluir = 0
    Set protPlan = New clsProtecao
    
    'Inserir Formula!
    Application.ScreenUpdating = False
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    
    Range("BJ99").Calculate
    
    CarregamentoRapido True
    
    ingTotalLin = bd10Geodesica.Range("BJ99").value + 100
    Application.Calculation = xlCalculationManual
   
   For i = 101 To ingTotalLin
        If bd10Geodesica.Range("BO" & i).value = 0 And bd10Geodesica.Range("BO" & i).value <> vbNullString Then
           ExcluirGleba bd10Geodesica.Range("BG" & i).value, bd10Geodesica.Range("BH" & i).value, CInt(i)
           ContExcluir = ContExcluir + 1
        End If
   Next i

   Call OrdenarListaGleba
   Call InserirResumoGleba
   Call OrdenarResumoGleba
   
   
   If ContExcluir > 0 Or ingTotalLin = 100 Then
        xl14Geodesica.Range("E4:I4").value = ""
        xl14Geodesica.Range("E14:F14").ClearContents
        xl14Geodesica.Range("E15:G15").ClearContents
    End If
   'CarregamentoRapido False
End Sub
Sub ExcluirGleba(PosLinIni As Integer, PosLinFim As Integer, PosLinResumo As Integer)
    
    Dim lngQtdeInv As Integer
    Dim ArrayVar() As Variant
    Dim protPlan As clsProtecao
            
    Set protPlan = New clsProtecao
           
    bd10Geodesica.Activate
    Application.ScreenUpdating = False
    protPlan.DesprotegePlanilha
    
    With bd10Geodesica
        
        CarregamentoRapido True
        .Range("A" & PosLinIni & ":U" & PosLinFim).Select
        .Range("A" & PosLinIni & ":U" & PosLinFim).ClearContents
        .Range("BA" & [PosLinResumo], "BR" & [PosLinResumo]).Select
        .Range("BA" & [PosLinResumo], "BR" & [PosLinResumo]).ClearContents
        .Range("BJ99").Calculate
    End With
         
End Sub
Sub OrdenarResumoGleba()
  CarregamentoRapido True
  If ActiveSheet.Name <> "Geodesica" Then Exit Sub
  Range("BA101:BQ" & Rows.Count).Select
     Selection.Sort Key1:=Range("BA101:BA" & Rows.Count), Order1:=xlAscending, Key2:=Range("BB101:BB" & Rows.Count), _
     Order2:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase _
     :=False, Orientation:=xlTopToBottom
  'Incluir referencia de SQ_Inv_Resumo
  'SQ_Inv_Resumo
   bd10Geodesica.Range("BJ99").Calculate
   ActiveWorkbook.Names.Add Name:="SQ_Inv_Resumo", RefersTo:= _
                    "=Geodesica!$BA$101:$BR$" & bd10Geodesica.Range("BJ99").value + 100
End Sub
Sub OrdenarListaGleba()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    CarregamentoRapido True
    If ActiveSheet.Name <> "Geodesica" Then Exit Sub
    
    Range("A101:U" & Rows.Count).Select
    protPlan.DesprotegePlanilha
'
'    Selection.Sort Key1:=Range("B101:B" & Rows.Count), Order1:=xlAscending, Key2:=Range("F101:F" & Rows.Count), _
'    Order2:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase _
'    :=False, Orientation:=xlTopToBottom
    
    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Add Key:=Range( _
        "C101:C" & Rows.Count), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Add Key:=Range( _
        "F101:F" & Rows.Count), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Geodesica").Sort
        .SetRange Range("A100:T" & Rows.Count)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
    'Adequar o range das linhas de acordo com a quantidade de Pontos
    'SQ_GlebaPontos
    ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos", RefersToR1C1:= _
    "=Geodesica!R101C6:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
    
    'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
    'SQ_Geodesica
    ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
    "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
    
    'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
    'SQ_Invers|fffd|o_Gleba
    ActiveWorkbook.Names.Add Name:="SQ_Invers|fffd|o_Gleba", RefersToR1C1:= _
    "=Geodesica!R101C3:R" & bd10Geodesica.Range("B99").value + 100 & "C19"
    
    'Invers|fffd|o para carregar a lista da Tela de coordenada Geod|fffd|sica
    ActiveWorkbook.Names.Add Name:="SQ_InversaoGeodesica", RefersToR1C1:= _
    "=Geodesica!R2C6:R" & IIf(bd10Geodesica.Range("f1").value = 0, 0, bd10Geodesica.Range("F1").value + 1) & "C6"
    
    Set protPlan = Nothing
End Sub

Attribute VB_Name = "mdlGeodesicaTela"
Public Sub CargaIniGeodesica()

   Dim L_Inv, L_seq, L_SeqInv As Byte
   Dim protPlan As clsProtecao
   Set protPlan = New clsProtecao

   If flagBusca = 1 Then Exit Sub
   flagBusca = 1

   Application.ScreenUpdating = False
   bd10Geodesica.Activate
   bd10Geodesica.Calculate

   protPlan.DesprotegePlanilha

   L_seq = 2
   L_SeqInv = 58
   bd10Geodesica.Range("A2:E97").ClearContents
   
   Application.Calculation = xlCalculationManual
 
    For L_Inv = 2 To 12
    
      If xl2Prop.Range("CF" & [L_SeqInv]).value = 1 Then
      
        bd10Geodesica.Range("A" & [L_seq]).value = xl2Prop.Range("BI" & [L_SeqInv]).value 'AD NRO DA INVERSAO  AD  PARA
        xl2Prop.Range("BK" & [L_Inv]).Calculate
        bd10Geodesica.Range("B" & [L_seq]).value = xl2Prop.Range("BK" & [L_SeqInv]).value       'NOME DA INVERSAO AJ PARA B
        bd10Geodesica.Range("C" & [L_seq]).value = xl2Prop.Range("BM" & [L_SeqInv]).value       'C|fffd|DIGO Do EMPREENDIMENTO
        bd10Geodesica.Range("D" & [L_seq]).value = xl2Prop.Range("BT" & [L_SeqInv]).value  ' Munic|fffd|pio para D
        bd10Geodesica.Range("E" & [L_seq]).value = 0   ' |fffd|rea  G para E
        
        bd10Geodesica.Range("M" & [L_seq]).value = bd10Geodesica.Range("A" & [L_seq]).value
        bd10Geodesica.Range("N" & [L_seq]).value = bd10Geodesica.Range("B" & [L_seq]).value
        bd10Geodesica.Range("O" & [L_seq]).value = bd10Geodesica.Range("C" & [L_seq]).value
        bd10Geodesica.Range("P" & [L_seq]).value = xl2Prop.Range("BO" & [L_SeqInv]).value   ' Sprint 11 - inclus|fffd|o do Im|fffd|vel
                      
        Application.Calculation = xlCalculationManual
        xl2Prop.Calculate
        L_seq = L_seq + 1
        
      End If
    L_SeqInv = L_SeqInv + 1
    
   Next L_Inv
   
   Application.ScreenUpdating = False
   bd10Geodesica.Range("F1").Calculate
   bd10Geodesica.Range("B99").Calculate
   bd10Geodesica.Range("BJ99").Calculate

   'Ordenar
   Call OrdenarListaGleba
   Call InserirResumoGleba
   Call OrdenarResumoGleba
   
  'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
   'Inv_Geodesica
   ActiveWorkbook.Names.Add Name:="Inv_Geodesica", RefersToR1C1:= _
                 "=Geodesica!R2C1:R" & bd10Geodesica.Range("f1").value + 1 & "C6"
   'Inv_Geodesica_Hist
   ActiveWorkbook.Names.Add Name:="Inv_Geodesica_Hist", RefersToR1C1:= _
                 "=Geodesica!R2C13:R" & IIf(bd10Geodesica.Range("f1").value = 0, 0, bd10Geodesica.Range("F1").value + 1) & "C16"  ' Sprint 11 - inclus|fffd|o do Im|fffd|vel alterar de 14 para 16 a Coluna
   'Nome do hist|fffd|rico_Nome
   ActiveWorkbook.Names.Add Name:="Inv_Geodesica_Hist_NM", RefersToR1C1:= _
                 "=Geodesica!R2C14:R" & bd10Geodesica.Range("F1").value + 1 & "C14"
   'Invers|fffd|o para carregar a lista da Tela de coordenada Geod|fffd|sica
   ActiveWorkbook.Names.Add Name:="SQ_InversaoGeodesica", RefersToR1C1:= _
                 "=Geodesica!R2C6:R" & IIf(bd10Geodesica.Range("F1").value = 0, 0, bd10Geodesica.Range("F1").value + 1) & "C6"
   
   Application.ScreenUpdating = False
   
  'Limpar os campos para iniciar a digita|fffd||fffd|o

   flagBusca = 1
   bd10Geodesica.Visible = xlSheetHidden
   CarregamentoRapido True
   Application.Calculation = xlCalculationAutomatic
   xl14Geodesica.Activate
    
   flagBusca = 0

   Set protPlan = Nothing
   Application.ScreenUpdating = False

End Sub


Public Sub Ordenar_Geodesica(ByVal Referencia As String, ByVal Aba As String, ByVal Ref_Fis, Ref_Sort As String)

    Application.ScreenUpdating = False

    If Referencia = "SQ_Geodesica" Then
      bd10Geodesica.Activate
      Application.GoTo Reference:="SQ_Geodesica"
    ElseIf Referencia = "SQ_Geodesica_F" Then
      xl00Busca.Activate
      Application.GoTo Reference:="SQ_Geodesica_F"
    End If
    ActiveWorkbook.Worksheets(Aba).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(Aba).Sort.SortFields.Add Key:=Range(Ref_Sort), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(Aba).Sort
        .SetRange Range(Ref_Fis)
        .Header = xlYes     'xlGuess = Sem cabe|fffd|alho
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    'xl00Busca.Visible = xlSheetVisible

End Sub


Sub CargaGlebaTela(ByVal SQ_Inv As Byte, ByVal Sq_Glb As Byte)

Dim L_seq As Integer
Dim L_SeqInv As Integer

Dim ArrayVarList()
Dim Cont, xLine, xQtdeLine As Integer

   L_seq = 1
   L_SeqInv = 0
   xLine = 0

   Application.Calculation = xlCalculationManual
    
   For L_Inv = 101 To bd10Geodesica.Range("Q101").End(xlDown).Row
        'If bd10Geodesica.Range("R" & [L_Inv]).value <> vbNullString Then
          If bd10Geodesica.Range("C" & [L_Inv]).value = SQ_Inv And CInt(bd10Geodesica.Range("F" & [L_Inv]).value) = Sq_Glb Then
            xLine = xLine + 1
          End If
        'End If

   ReDim ArrayVarList(xLine, 5)

   Next L_Inv
   For L_Inv = 101 To bd10Geodesica.Range("Q101").End(xlDown).Row
        'If bd10Geodesica.Range("R" & [L_Inv]).value <> vbNullString Then
          If bd10Geodesica.Range("C" & [L_Inv]).value = SQ_Inv And CInt(bd10Geodesica.Range("F" & [L_Inv]).value) = Sq_Glb Then
            ArrayVarList(L_seq, 0) = bd10Geodesica.Range("G" & [L_Inv]).value ' Tipo de Formato
            ArrayVarList(L_seq, 1) = bd10Geodesica.Range("H" & [L_Inv]).value ' |fffd|rea n|fffd|o cultivada
            ArrayVarList(L_seq, 3) = bd10Geodesica.Range("J" & [L_Inv]).value ' Latitude
            ArrayVarList(L_seq, 4) = bd10Geodesica.Range("K" & [L_Inv]).value ' Longitude
            ArrayVarList(L_seq, 5) = CDbl(bd10Geodesica.Range("L" & [L_Inv]).value) ' Altitude
            L_seq = L_seq + 1
          End If
        'End If
   Next L_Inv

   Dim BoPrim As Boolean
   BoPrim = True
   
   CarregamentoRapido True
   xl14Geodesica.Range("G21:I80").ClearContents

   For L_Inv = 21 To 21 + xLine - 1
      If BoPrim Then
         xl14Geodesica.Range("E14").value = ArrayVarList([L_Inv] - 20, 1)  '|fffd|rea n|fffd|o cultivada
         xl14Geodesica.Range("E15").value = StrConv(ArrayVarList([L_Inv] - 20, 0), vbProperCase) 'Formato da Gleba
         BoPrim = False
      End If
      xl14Geodesica.Range("G" & [L_Inv]).value = ArrayVarList([L_Inv] - 20, 3)  'Latitude
      xl14Geodesica.Range("H" & [L_Inv]).value = ArrayVarList([L_Inv] - 20, 4)  'Longitude
      xl14Geodesica.Range("I" & [L_Inv]).value = ArrayVarList([L_Inv] - 20, 5)  'Altitude
   Next L_Inv


  'CarregamentoRapido False
  Erase ArrayVarList

End Sub

Sub CargaProximo()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        Dim BtGleba As Byte

        If Range("E4").value = vbNullString Then GoTo Fim

        protPlan.IniciaRotina False
        flagBusca = 1

        bd10Geodesica.Range("BJ99").Calculate
        If CInt(xl14Geodesica.Range("N17").value) + 1 <= CInt(xl14Geodesica.Range("N15").value) Then
          For i = 101 To CInt(bd10Geodesica.Range("BJ99").value + 100)
            If bd10Geodesica.Range("BA" & [i]).value = CInt(xl14Geodesica.Range("SQ_Inv_Tela").value) Then
               If bd10Geodesica.Range("BB" & [i]).value >= CInt(xl14Geodesica.Range("N17").value) + 1 Then
                 BtGleba = CInt(bd10Geodesica.Range("BB" & [i]).value)
                 xl14Geodesica.Range("N17").value = BtGleba
                 CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), BtGleba
                 Exit For
               End If
            End If
          Next i
        Else
          BtGleba = CInt(xl14Geodesica.Range("N15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          MsgBox "|fffd|ltima Gleba a ser exibida!", vbInformation, "|fffd|ltima"
        End If

        flagBusca = 0
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Exit Sub

Fim:
        flagBusca = 0

        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub CargaAnterior()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        Dim BtGleba As Byte


        If Range("E4").value = vbNullString Then GoTo Fim

        protPlan.IniciaRotina False
        flagBusca = 1

        i = CInt(bd10Geodesica.Range("BJ99").value + 100)
        If CInt(xl14Geodesica.Range("N17").value) - 1 >= CInt(xl14Geodesica.Range("M15").value) Then
          Do While i >= 101
            If bd10Geodesica.Range("BA" & [i]).value = CInt(xl14Geodesica.Range("SQ_Inv_Tela").value) Then
               If bd10Geodesica.Range("BB" & [i]).value <= CInt(xl14Geodesica.Range("N17").value) - 1 Then
                 BtGleba = CInt(bd10Geodesica.Range("BB" & [i]).value)
                 xl14Geodesica.Range("N17").value = BtGleba
                 CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), BtGleba
                 i = 101
               End If
            End If
            i = i - 1
          Loop
        Else
          BtGleba = CInt(xl14Geodesica.Range("M15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          MsgBox "Primeira Gleba a ser exibida!", vbInformation, "In|fffd|cio"
        End If

        flagBusca = 0
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Exit Sub

Fim:
        flagBusca = 0

        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub CargaPrimeiro()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        Dim BtGleba As Byte


        If Range("E4").value = vbNullString Then GoTo Fim

        protPlan.IniciaRotina False
        flagBusca = 1

        If CInt(xl14Geodesica.Range("N17").value) <> CInt(xl14Geodesica.Range("M15").value) Then
          BtGleba = CInt(xl14Geodesica.Range("M15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), BtGleba
        Else
          BtGleba = CInt(xl14Geodesica.Range("M15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          MsgBox "Primeira Gleba a ser exibida!", vbInformation, "In|fffd|cio"
        End If

        flagBusca = 0
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Exit Sub

Fim:
        flagBusca = 0

        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub CargaUltimo()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        Dim BtGleba As Byte


        If Range("E4").value = vbNullString Then GoTo Fim

        protPlan.IniciaRotina False
        flagBusca = 1

        If CInt(xl14Geodesica.Range("N17").value) <> CInt(xl14Geodesica.Range("N15").value) Then
          BtGleba = CInt(xl14Geodesica.Range("N15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), BtGleba
        Else
          BtGleba = CInt(xl14Geodesica.Range("N15").value)
          xl14Geodesica.Range("N17").value = BtGleba
          MsgBox "|fffd|ltima Gleba a ser exibida!", vbInformation, "|fffd|ltima"
        End If

        flagBusca = 0
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        Exit Sub

Fim:
        flagBusca = 0

        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub


Sub NovaGlebaTela(Optional Flag As Integer)

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
                               
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        protPlan.DesprotegePlanilha

        If Range("E4").value = vbNullString Then
          MsgBox "Para informar a Gleba, |fffd| necess|fffd|rio selecionar o item de invers|fffd|o!", vbInformation, "Nova Gleba"
          Range("E4").Select
          GoTo Fim
        End If
        
        If MsgBox("Confirma a limpeza dos campos para a inclus|fffd|o de nova Gleba?", vbYesNo + vbInformation, "Nova") = vbNo Then GoTo Fim
         If Range("N15").value = 1 And Range("G21").value = vbNullString Then  'Atendimento ao incidente de inserir gleba 20181003 RNM
           Range("N17").value = 1                                              'Atendimento ao incidente de inserir gleba 20181003 RNM
         Else                                                                  'Atendimento ao incidente de inserir gleba 20181003 RNM
           Range("N17").value = Range("N15").value + 1
         End If                                                                'Atendimento ao incidente de inserir gleba 20181003 RNM
        
        protPlan.DesprotegePlanilha
        Range("E14:F14").ClearContents
        protPlan.DesprotegePlanilha
        Range("E15:G15").ClearContents
        protPlan.DesprotegePlanilha
        Range("G21:I80").ClearContents
        ActiveWindow.ScrollRow = 15
        Range("E14").Select
        
        If Flag = 0 Then
            Range("E14").Select
        End If
        
Fim:
        flagBusca = 0

        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub LimparGlebaTela(Optional Flag As Integer)

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        
        If MsgBox("Confirma a limpeza dos campos?", vbYesNo + vbInformation, "Limpar") = vbNo Then Exit Sub
        
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        protPlan.DesprotegePlanilha

        'If Range("E4").value = vbNullString Then GoTo Limpar
        
        CarregamentoRapido True
        Range("N17").value = Range("M15").value
        
        If Flag = 0 Then
            CarregamentoRapido True
            Range("E4:I4").ClearContents
            Range("E14:F14").ClearContents
            Range("E15:G15").ClearContents
        End If
        Range("G21:I80").ClearContents

        Application.ScreenUpdating = False

        protPlan.DesprotegePlanilha
        For i = 21 To 80
            CarregamentoRapido True
            Range("G" & i).Select
            Selection.FormatConditions.Delete
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$S$" & i & "=-1"
            Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
            With Selection.FormatConditions(1).Font
                .Bold = True
                .Italic = False
                .Color = -16776961
                .TintAndShade = 0
            End With
            Selection.FormatConditions(1).StopIfTrue = True
            Range("H" & i).Select
            Selection.FormatConditions.Delete
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$T$" & i & "=-1"
            Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
            With Selection.FormatConditions(1).Font
                .Bold = True
                .Italic = False
                .Color = -16776961
                .TintAndShade = 0
            End With
            Selection.FormatConditions(1).StopIfTrue = True
            Range("I" & i).Select
            Selection.FormatConditions.Delete
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$U$" & i & "=-1"
            Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
            With Selection.FormatConditions(1).Font
                .Bold = True
                .Italic = False
                .Color = -16776961
                .TintAndShade = 0
            End With
            Selection.FormatConditions(1).StopIfTrue = True
        Next i
        
        Range("E4").Select
        Application.ScreenUpdating = True
        
        If Flag = 0 Then MsgBox "Campos apagados com sucesso!", vbInformation, "Limpar Tela"
        
Fim:
        flagBusca = 0
        CarregamentoRapido False
        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub ExcluirGlebaTela()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
                
        If flagBusca = 1 Then Exit Sub
        
        Dim Ln_inv As Integer
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        If Range("E4").value = vbNullString Then
          MsgBox "Para excluir a Gleba, |fffd| necess|fffd|rio selecionar o item de invers|fffd|o!", vbInformation, "Excluir Gleba"
          Range("E4").Select
          GoTo Fim
        End If
     
        If MsgBox("Confirma a exclus|fffd|o da Gleba?", vbYesNo + vbInformation, "Excluir") = vbNo Then GoTo Fim
        
        protPlan.IniciaRotina False
        flagBusca = 1
             
        bd10Geodesica.Activate
        Call InserirResumoGleba                                 'Atendimento ao incidente de inserir gleba 20181003 RNM
        
        CarregamentoRapido True
        For Ln_inv = 101 To bd10Geodesica.Range("BJ99").value + 100
           If bd10Geodesica.Range("BA" & Ln_inv).value = CInt(Range("SQ_Inv_Tela").value) And _
              bd10Geodesica.Range("BB" & Ln_inv).value = xl14Geodesica.Range("N17").value Then
              
              ExcluirGleba bd10Geodesica.Range("BG" & Ln_inv).value, bd10Geodesica.Range("BH" & [Ln_inv]).value, Ln_inv
              MsgBox "Exclus|fffd|o realizada com sucesso!", vbInformation, "Excluir Gleba"
              Call OrdenarListaGleba
              Call InserirResumoGleba
              Call OrdenarResumoGleba
              Exit For
           End If
        Next Ln_inv
     
        xl14Geodesica.Activate
        Range("M15").Calculate
        Range("N17").value = Range("M15").value
        
        CarregamentoRapido True
        flagBusca = 1
        'Call LimparGlebaTela(1)
        CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), xl14Geodesica.Range("N17").value
        CarregamentoRapido True
Fim:
        flagBusca = 0
        CarregamentoRapido False
        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Sub InserirGlebaTela()

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
                    
        If flagBusca = 1 Then Exit Sub
             
        Dim arrayOfElements() As Variant
        Dim Ln_inv As Integer
        Dim lngTotLin As Integer               'Atendimento ao incidente de inserir gleba 20181003 RNM
        Dim lngLinIni As Integer
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
                
        Boorel = True

        'Iniciar cr|fffd|tica!
        If Range("E4").value = vbNullString Then
          MsgBox "|fffd| necess|fffd|rio selecionar o item de invers|fffd|o!", vbCritical, "Dados Inv|fffd|lidos"
          Range("E4").Select
          GoTo Fim
        End If
        
        If Range("M14").value = -1 Then
          MsgBox "|fffd| necess|fffd|rio selecionar o formato da Gleba!, ", vbCritical, "Dados Inv|fffd|lidos!"
          Range("E4").Select
          GoTo Fim
        End If
        
        If MsgBox("Confirma a inclus|fffd|o/atualiza|fffd||fffd|o da Gleba?", vbYesNo + vbInformation, "Atualizar") = vbNo Then GoTo Fim
        
'       Transferido valida|fffd||fffd|o da Cr|fffd|tica do Projeto
'        If Range("M13").value = -1 Then
'          MsgBox "|fffd|rea n|fffd|o cultivada com valor inv|fffd|lido!" & Chr(10) & _
'                 "- |fffd|rea n|fffd|o cultivada maior que |fffd|rea |fffd|rea Cultivada." & Chr(10) & _
'                 "- |fffd|rea n|fffd|o cultivada com valor negativo.", vbCritical, "Dados Inv|fffd|lidos!"
'          Range("E4").Select
'          GoTo Fim
'        End If

        If Range("E14").value = vbNullString Then
          Range("E14").value = 0
        End If
        
'        If Range("S20").value = -1 Or Range("T20").value = -1 Or Range("U20") = -1 Then
'          MsgOK = MsgBox("H|fffd| inconsist|fffd|ncia nos limites de Coordenadas Geod|fffd|sicas informados. Verificar as instru|fffd||fffd|es de preenchimento!", vbInformation, "Dados Inv|fffd|lidos")
'          Range("E21").Select
'          GoTo Fim
'        End If
        
        If Range("P20").value = -1 Then
          MsgOK = MsgBox("H|fffd| inconsist|fffd|ncia nas informa|fffd||fffd|es das Coordenadas Geod|fffd|sicas!, ", vbInformation, "Informar as coordenadas correta")
          Range("E21").Select
          GoTo Fim
        End If
        
        protPlan.IniciaRotina False
        flagBusca = 1
        
        CarregamentoRapido True
        bd10Geodesica.Activate
        Call InserirResumoGleba                           'Atendimento ao incidente de inserir gleba 20181003 RNM
        
        'Excluir se houver
        For Ln_inv = 101 To bd10Geodesica.Range("BJ99").value + 100
           If bd10Geodesica.Range("BA" & Ln_inv).value = CInt(Range("SQ_Inv_Tela").value) And _
              bd10Geodesica.Range("BB" & Ln_inv).value = xl14Geodesica.Range("N17").value Then
              
              ExcluirGleba bd10Geodesica.Range("BG" & Ln_inv).value, bd10Geodesica.Range("BH" & Ln_inv).value, Ln_inv
              Call OrdenarListaGleba
              Call InserirResumoGleba
              Call OrdenarResumoGleba
                            
              Exit For
           End If
        Next Ln_inv
                
        CarregamentoRapido True
        xl14Geodesica.Activate
        'Gravar os Dados
        xl14Geodesica.Range("CA16").Calculate
        xl14Geodesica.Range("CA20:DE" & 20 + xl14Geodesica.Range("CA16").value).Select
        
        'Limpeza Geral da tela de Busca
        xl00Busca.Activate
        protPlan.DesprotegePlanilha
        xl00Busca.Range("DJ4:DK" & xl00Busca.Range("DK2").value + 3).ClearContents
        xl00Busca.Range("DM4:DR" & xl00Busca.Range("DR2").value + 3).ClearContents
        xl00Busca.Range("DZ4:FH" & xl00Busca.Range("FG2").value + 3).ClearContents
        
        CarregamentoRapido True
        xl14Geodesica.Range("CA16").Calculate
        
        'Carregar Coordenadas para transfer|fffd|ncia!
        lngTotLin = xl14Geodesica.Range("CA16").value + 1
        arrayOfElements() = xl14Geodesica.Range("CA20:DE" & 20 + xl14Geodesica.Range("CA16").value)

        If InserirGleba(arrayOfElements, lngTotLin) = 1 Then                 'Atendimento ao incidente de inserir gleba 20181003 RNM
            MsgBox "Erro na Inser|fffd||fffd|o dos dados!", vbCritical, "Erro"
            GoTo Fim
        End If
        
        'Limpar Array
        Erase arrayOfElements
        
        'Ordenar Coordenadas Geodesica
        CarregamentoRapido True
        bd10Geodesica.Activate
        protPlan.DesprotegePlanilha
        
        Call OrdenarListaGleba
        Call InserirResumoGleba
        Call OrdenarResumoGleba

        'Buscar os dados inseridos na XL00Busca
        CarregamentoRapido True
        xl00Busca.Activate
        protPlan.DesprotegePlanilha
        
        xl00Busca.Range("FG2").Calculate
        lngLinBusca = xl00Busca.Range("FG2").value
        
        'Transfer|fffd|ncia de dados geodesica!
        CarregamentoRapido True
        'Invers|fffd|o da Tela
        Range("DZ4:DZ" & lngLinBusca + 3).value = xl14Geodesica.Range("SQ_Inv_Tela").value
        Range("DZ4:DZ" & lngLinBusca + 3).Select
        Selection.Copy
    
        Range("EA4").Select
     
        Selection.PasteSpecial Paste:=xlPasteValues
        
        Application.CutCopyMode = False
        
        xl00Busca.Range("FG2").Calculate
        
        CarregamentoRapido True
        ActiveWorkbook.Names.Add Name:="Lst_Coord_Geod", RefersTo:= _
                          "=BUSCA!$EA$4:$ER$" & xl00Busca.Range("FG2").value + 3
        
        
        CarregamentoRapido True
        
        xl00Busca.Range("Lst_Coord_Geod").Select
        Selection.Copy
        
        Application.ScreenUpdating = False
        bd10Geodesica.Activate
        protPlan.DesprotegePlanilha
        Range("B99").Calculate
        bd10Geodesica.Range("C" & Range("B99").value + 101).Select
        lngLinIni = bd10Geodesica.Range("B99").value + 101
        Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats
        Application.CutCopyMode = False
                
        CarregamentoRapido True
        xl00Busca.Activate
        ActiveSheet.AutoFilterMode = False
        
        'Ordenar Coordenadas Geodesicas!
        CarregamentoRapido True
        bd10Geodesica.Activate
        Application.Calculation = xlCalculationAutomatic
        Call InserirFormulasGleba(lngLinIni)
        Call OrdenarListaGleba
        Call InserirResumoGleba
        Call OrdenarResumoGleba
        
        'Nova Gleba!
        Call NovaGlebaTela(1)

        MsgBox "Inclus|fffd|o/Atualiza|fffd||fffd|o realizada com sucesso!", vbInformation, "Inclus|fffd|o/Atualiza|fffd||fffd|o de Gleba"
        xl14Geodesica.Activate
      
Fim:
        'Inclus|fffd|o bem sucedida!
        Boorel = False
        xl14Geodesica.Activate
        flagBusca = 0
        CarregamentoRapido False
        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub

Attribute VB_Name = "mdlIntegra"
Private Type inscricaoFederal
        inscricao As Long
        filial As Integer
        digito As Integer
End Type

Sub botaoSALVA_ORCA_Clique()
    Dim lngOrca As Long, lngCont As Long, lngArqExp As Long, lngErrS400 As Long
    Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim colCel4 As String, colCel5 As String, colCel6 As String
    Dim colCel7 As String, colCel8 As String, colCel9 As String  'RNM INCLUS|fffd|O GSOL00660171
    Dim colCel10 As String    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim strOrca As String
    Dim xlCusteio As String, xlOrca As String
    Dim strFilter As String
    Dim flagArquivo As Boolean
    Dim xlArqExp
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    flagArquivo = False
    protPlan.IniciaRotina True
    '-Indentifica o orcamento atual
    Application.StatusBar = "Gerando arquivo (Aguarde) ..."
    lngOrca = 1
    Do While lngOrca <= 10
       strOrca = "ORCA" & Format([lngOrca], "00")
       If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
       lngOrca = lngOrca + 1
    Loop
    Select Case lngOrca
           Case 1
                colCel1 = "C"
                colCel2 = "D"
                colCel3 = "E"
                colCel4 = "F"
                colCel5 = "G"
                colCel6 = "I"
                colCel7 = "H"
                colCel8 = "L"
                colCel9 = "M"
                colCel10 = "J"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 2
                colCel1 = "T"
                colCel2 = "U"
                colCel3 = "V"
                colCel4 = "W"
                colCel5 = "X"
                colCel6 = "Z"
                colCel7 = "Y"
                colCel8 = "AC"
                colCel9 = "AD"
                colCel10 = "AA"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 3
                colCel1 = "AK"
                colCel2 = "AL"
                colCel3 = "AM"
                colCel4 = "AN"
                colCel5 = "AO"
                colCel6 = "AQ"
                colCel7 = "AP"
                colCel8 = "AT"
                colCel9 = "AV"
                colCel10 = "AR"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 4
                colCel1 = "BB"
                colCel2 = "BC"
                colCel3 = "BD"
                colCel4 = "BE"
                colCel5 = "BF"
                colCel6 = "BH"
                colCel7 = "BG"
                colCel8 = "BK"
                colCel9 = "BL"
                colCel10 = "BI"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 5
                colCel1 = "BS"
                colCel2 = "BT"
                colCel3 = "BU"
                colCel4 = "BV"
                colCel5 = "BW"
                colCel6 = "BY"
                colCel7 = "BX"
                colCel8 = "CB"
                colCel9 = "CC"
                colCel10 = "BZ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 6
                colCel1 = "CJ"
                colCel2 = "CK"
                colCel3 = "CL"
                colCel4 = "CM"
                colCel5 = "CN"
                colCel6 = "CP"
                colCel7 = "CO"
                colCel8 = "CS"
                colCel9 = "CT"
                colCel10 = "CQ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 7
                colCel1 = "DA"
                colCel2 = "DB"
                colCel3 = "DC"
                colCel4 = "DD"
                colCel5 = "DE"
                colCel6 = "DG"
                colCel7 = "DF"
                colCel8 = "DJ"
                colCel9 = "DK"
                colCel10 = "DH"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 8
                colCel1 = "DR"
                colCel2 = "DS"
                colCel3 = "DT"
                colCel4 = "DU"
                colCel5 = "DV"
                colCel6 = "DX"
                colCel7 = "DW"
                colCel8 = "EA"
                colCel9 = "EB"
                colCel10 = "DY"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 9
                colCel1 = "EI"
                colCel2 = "EJ"
                colCel3 = "EK"
                colCel4 = "EL"
                colCel5 = "EM"
                colCel6 = "EO"
                colCel7 = "EN"
                colCel8 = "ER"
                colCel9 = "ES"
                colCel10 = "EP"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 10
                colCel1 = "EZ"
                colCel2 = "FA"
                colCel3 = "FB"
                colCel4 = "FC"
                colCel5 = "FD"
                colCel6 = "FF"
                colCel7 = "FE"
                colCel8 = "FI"
                colCel9 = "FJ"
                colCel10 = "FG"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
    End Select
    '-Sequencia do or|fffd|amento atual = lngOrca
    strOrca = Range([colCel2] & "7").text
    xlCusteio = ActiveWorkbook.Name
    strFilter = "Pasta de trabalho do Microsoft Excel (*.xls),*.xls"
    Do While Not flagArquivo
          xlArqExp = Application.GetSaveAsFilename([strOrca] & "_ORCA.XLS", strFilter, , "Exportar Or|fffd|amento")
             
          If xlArqExp = False Then Exit Do
          
          If ExisteArquivo(xlArqExp) Then
             If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
                       "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
                flagArquivo = True
             End If
          Else
             flagArquivo = True
          End If
    
    Loop
    If Not flagArquivo Then GoTo Fim
    If InStr(xlArqExp, "_ORCA") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, "_ORCA") - 1) & ".XLS"
    End If
    If InStr(xlArqExp, ".") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, ".") - 1) & "_ORCA.XLS"
    Else
       xlArqExp = xlArqExp & "_ORCA.XLS"
    End If
     
    On Error Resume Next
    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
    On Error GoTo 0
    Application.DisplayAlerts = False
    Workbooks.Add
    ActiveSheet.Name = "Orcamento"
    If Int(Left(Application.Version, 2)) >= 11 Then
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlExcel8, Password:="senhasBN", _
                   ReadOnlyRecommended:=False, CreateBackup:=False
    Else
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlNormal, Password:="senhasBN", _
                   ReadOnlyRecommended:=False, CreateBackup:=False
    End If
    xlOrca = ActiveWorkbook.Name
    Windows([xlCusteio]).Activate
    bd7Orca.Activate
    protPlan.DesprotegePlanilha
    Range("A1:F14").Select
    Selection.Copy
    Windows([xlOrca]).Activate
    Sheets("Orcamento").Activate
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Windows([xlCusteio]).Activate
    protPlan.ProtegePlanilha
    xl1Orca.Activate
    
    '-Copia os dados
    protPlan.DesprotegePlanilha
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B3").value = Range([colCel2] & "7").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B4").value = Range([colCel2] & "8").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B5").value = Range([colCel2] & "9").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B6").value = Range([colCel2] & "11").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B7").value = Range([colCel2] & "12").value
    
    'Extrativismo/beneficiamento
    Workbooks([xlOrca]).Sheets("Orcamento").Range("D2").value = Range([colCel6] & "7").value ' Produtividade/milheiro
    Workbooks([xlOrca]).Sheets("Orcamento").Range("D3").value = Range([colCel10] & "7").value  ' Modalidade do Or|fffd|amento
    Workbooks([xlOrca]).Sheets("Orcamento").Range("D4").value = Range([colCel6] & "12").value  ' Quantidade a ser colhida
    ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    Workbooks([xlOrca]).Sheets("Orcamento").Range("E2").value = Range([colCel2] & "19").value  ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    Workbooks([xlOrca]).Sheets("Orcamento").Range("E3").value = Range([colCel3] & "19").value  ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    Workbooks([xlOrca]).Sheets("Orcamento").Range("E4").value = Range([colCel5] & "19").value  ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    Workbooks([xlOrca]).Sheets("Orcamento").Range("E5").value = Range([colCel7] & "19").value  ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    
    'GSOL00660171 INI  INCLUS|fffd|O DO COMPONENTE DE EMPREENDIMENTOS
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Workbooks([xlOrca]).Sheets("Orcamento").Range("D7").value = Range([colCel8] & "12").value  'Cod. Empreendimento
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Workbooks([xlOrca]).Sheets("Orcamento").Range("D8").value = Range([colCel8] & "13").value  'Cod Sist Produ|fffd|ao
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Workbooks([xlOrca]).Sheets("Orcamento").Range("E7").value = Range([colCel9] & "12").value  'Desc. Unidade
    'GSOL00660171 FIM  INCLUS|fffd|O DO COMPONENTE DE EMPREENDIMENTOS
    
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B8").value = Range([colCel2] & "13").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("B9").value = Range([colCel2] & "14").value
    Workbooks([xlOrca]).Sheets("Orcamento").Range("C7").value = Range([colCel7] & "12").value 'GSOL00131364
    
    For lngCont = 16 To 18
        Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 5).value = Range([colCel1] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 5).value = Range([colCel4] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("E" & [lngCont] - 5).value = Range([colCel5] & [lngCont]).value
    Next lngCont
    
    For lngCont = 21 To 84
        Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 6).value = Range([colCel1] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("B" & [lngCont] - 6).value = Range([colCel2] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("C" & [lngCont] - 6).value = Range([colCel3] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 6).value = Range([colCel4] & [lngCont]).value
        Workbooks([xlOrca]).Sheets("Orcamento").Range("E" & [lngCont] - 6).value = Range([colCel5] & [lngCont]).value
        'Workbooks([xlOrca]).Sheets("Orcamento").Range("F" & [lngCont] - 6).value = Range([colCel6] & [lngCont]).value
        ' Formula determina o Desembolso -  173755 (RTC) - (2017-7660731)
    Next lngCont
    
    protPlan.ProtegePlanilha
    Windows([xlOrca]).Activate
    ActiveWorkbook.Close (True)
    Windows([xlCusteio]).Activate
    Application.StatusBar = "Gerando arquivo ... Conclu|fffd|do"
    MsgBox "Arquivo com or|fffd|amento gerado." & vbCrLf & _
           "Caminho: " & [xlArqExp]
 
Fim:
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Windows([xlCusteio]).Activate
    xl1Orca.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub botaoABRE_ORCA_Clique()
    If xl99Auxi.Range("flagORCA_PRONAF").value = 1 Then
       MsgBox "Esta rotina est|fffd| desabilitada por se tratar de or|fffd|amento do programa PRONAF." & vbCrLf & _
              "Utilize o bot|fffd|o [Selecionar] para buscar um or|fffd|amento v|fffd|lido.", vbInformation
       Exit Sub
    End If
    Dim lngOrca As Long, lngCont As Long, lngArqExp As Long
    Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim colCel4 As String, colCel5 As String, colCel6 As String
    Dim colCel7 As String, strOrca As String
    Dim colCel8 As String, colCel9 As String  'RNM INCLUS|fffd|O GSOL00660171
    Dim colCel10 As String    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim xlCusteio As String, xlOrca As String
    Dim strFilter As String
    Dim xlArqImp
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
     
    protPlan.IniciaRotina True
    Application.StatusBar = "Importando arquivo (Aguarde) ..."
    '-Indentifica o orcamento atual
    lngOrca = 1
    Do While lngOrca <= 10
       strOrca = "ORCA" & Format([lngOrca], "00")
       If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
       lngOrca = lngOrca + 1
    Loop
    Select Case lngOrca
           Case 1
              colCel1 = "C"
              colCel2 = "D"
              colCel3 = "E"
              colCel4 = "F"
              colCel5 = "G"
              colCel6 = "I"
              colCel7 = "H"
              colCel8 = "L"
              colCel9 = "M"
              colCel10 = "J"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 2
              colCel1 = "T"
              colCel2 = "U"
              colCel3 = "V"
              colCel4 = "W"
              colCel5 = "X"
              colCel6 = "Z"
              colCel7 = "Y"
              colCel8 = "AC"
              colCel9 = "AD"
              colCel10 = "AA"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 3
              colCel1 = "AK"
              colCel2 = "AL"
              colCel3 = "AM"
              colCel4 = "AN"
              colCel5 = "AO"
              colCel6 = "AQ"
              colCel7 = "AP"
              colCel8 = "AT"
              colCel9 = "AV"
              colCel10 = "AR"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 4
              colCel1 = "BB"
              colCel2 = "BC"
              colCel3 = "BD"
              colCel4 = "BE"
              colCel5 = "BF"
              colCel6 = "BH"
              colCel7 = "BG"
              colCel8 = "BK"
              colCel9 = "BL"
              colCel10 = "BI"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 5
              colCel1 = "BS"
              colCel2 = "BT"
              colCel3 = "BU"
              colCel4 = "BV"
              colCel5 = "BW"
              colCel6 = "BY"
              colCel7 = "BX"
              colCel8 = "CB"
              colCel9 = "CC"
              colCel10 = "BZ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 6
              colCel1 = "CJ"
              colCel2 = "CK"
              colCel3 = "CL"
              colCel4 = "CM"
              colCel5 = "CN"
              colCel6 = "CP"
              colCel7 = "CO"
              colCel8 = "CS"
              colCel9 = "CT"
              colCel10 = "CQ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 7
              colCel1 = "DA"
              colCel2 = "DB"
              colCel3 = "DC"
              colCel4 = "DD"
              colCel5 = "DE"
              colCel6 = "DG"
              colCel7 = "DF"
              colCel8 = "DJ"
              colCel9 = "DK"
              colCel10 = "DH"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 8
              colCel1 = "DR"
              colCel2 = "DS"
              colCel3 = "DT"
              colCel4 = "DU"
              colCel5 = "DV"
              colCel6 = "DX"
              colCel7 = "DW"
              colCel8 = "EA"
              colCel9 = "EB"
              colCel10 = "DY"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 9
              colCel1 = "EI"
              colCel2 = "EJ"
              colCel3 = "EK"
              colCel4 = "EL"
              colCel5 = "EM"
              colCel6 = "EO"
              colCel7 = "EN"
              colCel8 = "ER"
              colCel9 = "ES"
              colCel10 = "EP"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 10
              colCel1 = "EZ"
              colCel2 = "FA"
              colCel3 = "FB"
              colCel4 = "FC"
              colCel5 = "FD"
              colCel6 = "FF"
              colCel7 = "FE"
              colCel8 = "FI"
              colCel9 = "FJ"
              colCel10 = "FG"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
    End Select
    '-Sequencia do or|fffd|amento atual = lngOrca
    xlCusteio = ActiveWorkbook.Name
    strFilter = "Pasta de trabalho do Microsoft Excel (*.xls),*.xls"
 
    'Nome do arquivo
    xlArqImp = Application.GetOpenFilename(strFilter, , ":: Importar Or|fffd|amento")
    If xlArqImp = False Then GoTo Fim
  
    On Error Resume Next
    Workbooks.Open xlArqImp, Password:="senhasBN"
    xlOrca = ActiveWorkbook.Name
    Sheets("Orcamento").Activate
    If Err Then
       MsgBox "N|fffd|o foi possivel abrir o arquivo", vbExclamation
       GoTo Fim
    End If
    On Error GoTo erroOrca
    Application.StatusBar = "Importando o arquivo " & xlArqImp & " Aguarde."
    Windows([xlCusteio]).Activate
    xl1Orca.Activate
    '-Copia os dados
    If Val(Workbooks([xlOrca]).Sheets("Orcamento").Range("B2").value) >= 20040722 Then
       flagBusca = 1
       Range([colCel2] & "7").Select
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel2] & "7").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B3").value
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel2] & "8").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B4").value
       Range([colCel2] & "9").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B5").value
       'Range([colCel2] & "11").Select
       'Range([colCel2] & "11").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B6").value
       'Range([colCel2] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B7").value
       
       'Extrativismo/beneficiamento
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
           'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
           protPlan.DesprotegePlanilha
           Range([colCel6] & "7").Locked = True
       Else
           protPlan.DesprotegePlanilha
           Range([colCel6] & "7").Locked = False
       End If
       Range([colCel6] & "7").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D2").value ' Produtividade/milheiro
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel10] & "7").Locked = False
       Range([colCel10] & "7").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D3").value ' Modalidade do Or|fffd|amento
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel6] & "12").Locked = False
       Range([colCel6] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D4").value ' Quantidade a ser colhida
       
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel8] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D7").value 'GSOL00660171 - INCLUS|fffd|O DE COD EMPREENDIMENTO RNM
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel8] & "13").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D8").value 'GSOL00660171 - INCLUS|fffd|O DE COD SIST PRODU|fffd|AO RNM
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel9] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E7").value 'GSOL00660171 - INCLUS|fffd|O DE UNIDADE RNM
       
       If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       Range([colCel2] & "13").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B8").value
       Range([colCel2] & "14").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B9").value
       Range([colCel7] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("C7").value 'GSOL00131364
       ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Range([colCel2] & "19").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E2").value ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Range([colCel3] & "19").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E3").value ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Range([colCel5] & "19").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E4").value ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Range([colCel7] & "19").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E5").value ' OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Range([colCel2] & "5").Select
        
       If Val(Workbooks([xlOrca]).Sheets("Orcamento").Range("B2").value) >= 20040813 Then
            'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
            protPlan.DesprotegePlanilha
            If LTrim(RTrim(Range([colCel10] & "7").value)) = "EXTRATIVISMO" Then
            
              For lngCont = 16 To 18
                If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
                If Range([colCel1] & [lngCont]).Locked Then Range([colCel1] & [lngCont]).Locked = False
                Range([colCel1] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 5).value
                If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
                If Range([colCel4] & [lngCont]).Locked Then Range([colCel4] & [lngCont]).Locked = False
                Range([colCel4] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 5).value
              Next lngCont
              protPlan.DesprotegePlanilha
              If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
              '    Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
                  protPlan.DesprotegePlanilha
                  Range([colCel6] & "7").Locked = True
              Else
                  protPlan.DesprotegePlanilha
                  Range([colCel6] & "7").Locked = False
              End If
              protPlan.DesprotegePlanilha
              Range([colCel10] & "12").Locked = False
              protPlan.DesprotegePlanilha
              Range([colCel5] & "16").Select
              protPlan.DesprotegePlanilha
              Range([colCel5] & "16").Locked = True
              Range([colCel5] & "16").FormulaHidden = True
              Range([colCel5] & "16").FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),0,(R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),"""")"
              protPlan.DesprotegePlanilha
              
              Range([colCel5] & "17").Select
              Range([colCel5] & "17").Locked = True
              Range([colCel5] & "17").FormulaHidden = True
              Range([colCel5] & "17").FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),0,(R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),"""")"
    
              protPlan.DesprotegePlanilha
              
              Range([colCel5] & "18").Select
              Range([colCel5] & "18").Locked = True
              Range([colCel5] & "18").FormulaHidden = True
              Range([colCel5] & "18").FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),0,(R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),"""")"
            Else
              Range([colCel6] & "7").Select
              protPlan.DesprotegePlanilha
              With Selection
                .Locked = True
                .value = ""
              End With
                
              Range([colCel10] & "12").Select
              protPlan.DesprotegePlanilha
              With Selection
                .Locked = True
                .value = ""
              End With
              
            'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 FIM
             For lngCont = 16 To 18
                If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
                If Range([colCel1] & [lngCont]).Locked Then Range([colCel1] & [lngCont]).Locked = False
                Range([colCel1] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 5).value
                If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
                If Range([colCel4] & [lngCont]).Locked Then Range([colCel4] & [lngCont]).Locked = False
                Range([colCel4] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 5).value
                If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
                If Range([colCel5] & [lngCont]).Locked Then Range([colCel5] & [lngCont]).Locked = False
                Range([colCel5] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E" & [lngCont] - 5).value
             Next lngCont
          End If
       Else
          Range([colCel1] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B3").value
          Range([colCel4] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B11").value
          Range([colCel5] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B10").value
       End If
       
       For lngCont = 21 To 84
           Range([colCel1] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 6).value
           Range([colCel2] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B" & [lngCont] - 6).value
           Range([colCel3] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("C" & [lngCont] - 6).value
           Range([colCel4] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 6).value
           Range([colCel5] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E" & [lngCont] - 6).value
         '  Range([colCel6] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("F" & [lngCont] - 6).value
         ' Formula determina o Desembolso -  173755 (RTC) - (2017-7660731)
       Next lngCont
    
    Else
       Range([colCel2] & "7").Select
       protPlan.DesprotegePlanilha
       Range([colCel2] & "7").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B3").value
       Range([colCel2] & "11").Select
       protPlan.DesprotegePlanilha
       Range([colCel2] & "13").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B4").value
       Range([colCel2] & "14").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B6").value
'       Range([colCel2] & "16").Value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B7").Value
'       Range([colCel2] & "12").Select
       Range([colCel2] & "12").value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B8").value
       Range([colCel2] & "5").Select
       
       Range([colCel1] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B3").value
       Range([colCel4] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B7").value
       Range([colCel5] & 16).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B6").value
      
       For lngCont = 21 To 84
           Range([colCel1] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("A" & [lngCont] - 10).value
           Range([colCel2] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("B" & [lngCont] - 10).value
           Range([colCel3] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("C" & [lngCont] - 10).value
           Range([colCel4] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("D" & [lngCont] - 10).value
           Range([colCel5] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("E" & [lngCont] - 10).value
         '  Range([colCel6] & [lngCont]).value = Workbooks([xlOrca]).Sheets("Orcamento").Range("F" & [lngCont] - 10).value
         ' Formula determina o Desembolso -  173755 (RTC) - (2017-7660731)
       Next lngCont
    End If
    Windows([xlOrca]).Activate
    ActiveWorkbook.Close (False)
    Windows([xlCusteio]).Activate
    flagBusca = 0
    xl1Orca.Activate
    
    'Extrativismo
    protPlan.DesprotegePlanilha
    If Range("ModOrca" & Format(Range("A11").value, "00")).value = "EXTRATIVISMO" Then
       'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = False
       Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = False
       Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = True
       Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = True
       Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = True
    Else
      If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
          'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
        'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = True
        Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = True
      Else
        'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = True
        Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = False
        Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = False
        Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = False
      End If
    End If
    
    flagBusca = 0
    
    TelaOrcaPinta CInt(Range("A11").value)
    
    protPlan.FinalizaRotina
    Application.StatusBar = "Importando o arquivo " & xlArqImp & "... Conclu|fffd|do!"
    MsgBox "Importa|fffd||fffd|o conclu|fffd|da"
    Application.StatusBar = False
    flagBusca = 0
    Set protPlan = Nothing
    Exit Sub
     
erroOrca:
    Application.StatusBar = "Erro ..."
    MsgBox "Ocorreu um erro no processo.", vbExclamation
     
Fim:
    Windows([xlCusteio]).Activate
    Application.StatusBar = False
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub exportaDADOS()
    Dim lngOrca As Long, lngCont As Long, lngArqExp As Long, lngLinSel As Long
    Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim colCel4 As String, colCel5 As String, colCel6 As String
    Dim colCel7 As String, colCel8 As String, colCel9 As String  'RNM INCLUS|fffd|O GSOL0060
    Dim colCel10 As String    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim IntLin As Integer     'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim strOrca As String
    Dim xlCusteio As String, xlExporta As String
    Dim strFilter As String
    Dim xlPlan, xlArqExp
    Dim ArrayVar()
    Dim flagArquivo As Boolean
    Dim CriticaCons As Boolean 'Para atendimento da GSOL00524582
     
    If Range("totalPROP").value = 0 Then
       If MsgBox("Proposta sem valor informado. Deseja continuar com a exporta|fffd||fffd|o?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
    End If
    
    'Atendimento da GSOL00524582
    '-------------------------------------------------
    
    CriticaCons = True
    'Verifica se |fffd| PRONAF e tem atividade consorciada
    Application.ScreenUpdating = False
    
    xl2Prop.Activate
    If Range("W46").value > 0 Then
    xl1Orca.Activate
        If Range("FQ20").value > 0 Then
        CriticaCons = False
        End If
    End If
    
    'Bloqueia Exporta|fffd||fffd|o
    If Not CriticaCons Then
        If MsgBox("Diante da necessidade de identifica|fffd||fffd|o do produto PGPAF, s|fffd| |fffd| poss|fffd|vel empreendimento(s) para uma mesma cultura. Caso existam culturas diferentes, dever|fffd| elaborar nova(s) proposta(s), podendo utilizar as op|fffd||fffd|es 'Exportar/Importar dados da Proposta' para a cria|fffd||fffd|o de nova(s) propostas(s).", vbOKOnly, "Erro atividade") = vbOK Then
            xl2Prop.Activate
            Exit Sub
        End If
    End If
    
    'GSOL00863772 - 03|fffd| Sprint Dez/2014 - INI
    CriticaCons = True
    
    For IntLin = 1 To 10
      If (xl1Orca.Range("CULTURA_TP" & Format([IntLin], "00")).value = vbNullString And _
          xl1Orca.Range("bacenORCA" & Format([IntLin], "00")).value <> vbNullString) Then
         CriticaCons = False
         Exit For
      End If
    Next IntLin
        
    If Not CriticaCons Then
        If MsgBox("Para realizar o c|fffd|lculo de limite PROAGRO |fffd| necess|fffd|rio que o tipo de cultura seja definido na aba de or|fffd|amentos", vbOKOnly, "Erro no c|fffd|lculo PROAGRO") = vbOK Then
            xl2Prop.Activate
            Exit Sub
        End If
    End If
    'GSOL00863772 - 03|fffd| Sprint Dez/2014 - FIM
    
    '---------------------------------------------------
      
    Dim sb As clsProgressBar
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    Set sb = New clsProgressBar
    sb.Show "Exportando os dados ", vbNullString, 0
    sb.PercentComplete = 1
    protPlan.IniciaRotina True
    xlCusteio = ActiveWorkbook.Name
    flagArquivo = False
      
    strFilter = "Pasta de trabalho do Microsoft Excel (*.xls),*.xls"
    Do While Not flagArquivo
       xlArqExp = Application.GetSaveAsFilename("Plano_CUSTEIO.XLS", strFilter, , ":: Exportar Plano Custeio Agr|fffd|cola")
       If xlArqExp = False Then Exit Do
          If ExisteArquivo(xlArqExp) Then
             If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
                       "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
                flagArquivo = True
             End If
          Else
             flagArquivo = True
          End If
    Loop
    If Not flagArquivo Then GoTo Fim
  
    If InStr(xlArqExp, "_CUSTEIO") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, "_CUSTEIO") - 1) & ".XLS"
    End If
    If InStr(xlArqExp, ".") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, ".") - 1) & "_CUSTEIO.XLS"
    Else
       xlArqExp = xlArqExp & "_CUSTEIO.XLS"
    End If
    sb.PercentComplete = 5
    On Error Resume Next
    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
    On Error GoTo 0
    Application.DisplayAlerts = False
    Workbooks.Add
    sb.Show "Exportando os dados ", vbNullString, 3
    ActiveSheet.Name = "0"
    For Each xlPlan In ActiveWorkbook.Sheets
        If Left(xlPlan.Name, 4) = "Plan" Then xlPlan.Delete
    Next
    Application.DisplayAlerts = True
    'Verifica a vers|fffd|o do excel
    If Int(Left(Application.Version, 2)) >= 11 Then
        ActiveWorkbook.SaveAs Filename:=xlArqExp, FileFormat:=xlExcel8, Password:="senhasBN", WriteResPassword:="", ReadOnlyRecommended:=False, CreateBackup:=False
    Else
        ActiveWorkbook.SaveAs Filename:=xlArqExp, FileFormat:=xlNormal, Password:="senhasBN", WriteResPassword:="", ReadOnlyRecommended:=False, CreateBackup:=False
    End If
    xlExporta = ActiveWorkbook.Name
    Windows([xlCusteio]).Activate
    sb.Show "Exportando os dados ", vbNullString, 10
     
    bd8Custeio.Activate
    protPlan.DesprotegePlanilha
    Range("A1:U200").Select     'Inclus|fffd|o de TJCR em 23/07/2018 RNM GSOL01921068
    Selection.Copy
    Windows([xlExporta]).Activate
    Sheets("0").Select
    Range("A1").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
    
    'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    'Alocar a informa|fffd||fffd|o de Glebas de Invers|fffd|es
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    Call CargaIniGeodesica
    Call LimparGlebasSemInv
    Range("C101:O" & Range("B99").value + 100).Select
    Selection.Copy
    Windows([xlExporta]).Activate
    Sheets("0").Select
    Range("AB100").value = bd10Geodesica.Range("B99").value + 100
    Range("AC101").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
             
    'T|fffd|rmino de coordenadas geod|fffd|sica
    'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    
    
    'Sprint 11 04/2017 - Nova coluna de Status de digita|fffd||fffd|o INI
    bd10Geodesica.Activate
    bd10Geodesica.Calculate
    bd10Geodesica.Range("T101:T" & Range("B99").value + 100).Select
    Selection.Copy
    
    'Sprint 11
    Windows([xlExporta]).Activate
    Sheets("0").Select
    Range("AP101").Select
    
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
              True, Transpose:=False
              
     'T|fffd|rmino de coordenadas geod|fffd|sica
     'Sprint 11
      
      
  
        
    sb.Show "Exportando os dados ", vbNullString, 15
    Windows([xlCusteio]).Activate
     
    For lngLinSel = 1 To 10
        lngOrca = xl2Prop.Range("V" & [lngLinSel] + 57).value
        If lngOrca = 0 Then GoTo proxOrca
        oFuncao = "selORCA" & Format(lngOrca, "00")
        Run [oFuncao]
        Select Case lngOrca
               Case 1
                    colCel1 = "C"
                    colCel2 = "D"
                    colCel3 = "E"
                    colCel4 = "F"
                    colCel5 = "G"
                    colCel6 = "I"
                    colCel7 = "H"
                    colCel8 = "L"
                    colCel9 = "M"
                    colCel10 = "J" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 2
                    colCel1 = "T"
                    colCel2 = "U"
                    colCel3 = "V"
                    colCel4 = "W"
                    colCel5 = "X"
                    colCel6 = "Z"
                    colCel7 = "Y"
                    colCel8 = "AC"
                    colCel9 = "AD"
                    colCel10 = "AA" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 3
                    colCel1 = "AK"
                    colCel2 = "AL"
                    colCel3 = "AM"
                    colCel4 = "AN"
                    colCel5 = "AO"
                    colCel6 = "AQ"
                    colCel7 = "AP"
                    colCel8 = "AT"
                    colCel9 = "AV"
                    colCel10 = "AR" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 4
                    colCel1 = "BB"
                    colCel2 = "BC"
                    colCel3 = "BD"
                    colCel4 = "BE"
                    colCel5 = "BF"
                    colCel6 = "BH"
                    colCel7 = "BG"
                    colCel8 = "BK"
                    colCel9 = "BL"
                    colCel10 = "BI" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 5
                    colCel1 = "BS"
                    colCel2 = "BT"
                    colCel3 = "BU"
                    colCel4 = "BV"
                    colCel5 = "BW"
                    colCel6 = "BY"
                    colCel7 = "BX"
                    colCel8 = "CB"
                    colCel9 = "CC"
                    colCel10 = "BZ" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 6
                    colCel1 = "CJ"
                    colCel2 = "CK"
                    colCel3 = "CL"
                    colCel4 = "CM"
                    colCel5 = "CN"
                    colCel6 = "CP"
                    colCel7 = "CO"
                    colCel8 = "CS"
                    colCel9 = "CT"
                    colCel10 = "CQ" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 7
                    colCel1 = "DA"
                    colCel2 = "DB"
                    colCel3 = "DC"
                    colCel4 = "DD"
                    colCel5 = "DE"
                    colCel6 = "DG"
                    colCel7 = "DF"
                    colCel8 = "DJ"
                    colCel9 = "DK"
                    colCel10 = "DH" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 8
                    colCel1 = "DR"
                    colCel2 = "DS"
                    colCel3 = "DT"
                    colCel4 = "DU"
                    colCel5 = "DV"
                    colCel6 = "DX"
                    colCel7 = "DW"
                    colCel8 = "EA"
                    colCel9 = "EB"
                    colCel10 = "DY" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 9
                    colCel1 = "EI"
                    colCel2 = "EJ"
                    colCel3 = "EK"
                    colCel4 = "EL"
                    colCel5 = "EM"
                    colCel6 = "EO"
                    colCel7 = "EN"
                    colCel8 = "ER"
                    colCel9 = "ES"
                    colCel10 = "EP" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
               Case 10
                    colCel1 = "EZ"
                    colCel2 = "FA"
                    colCel3 = "FB"
                    colCel4 = "FC"
                    colCel5 = "FD"
                    colCel6 = "FF"
                    colCel7 = "FE"
                    colCel8 = "FI"
                    colCel9 = "FJ"
                    colCel10 = "FG" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
        End Select
        If Range("totalORCA" & Format([lngOrca], "00")).value = 0 Then GoTo proxOrca
        Windows([xlExporta]).Activate
        Sheets.Add
        strOrca = Trim(Str(lngOrca))
        On Error Resume Next
        ActiveSheet.Name = strOrca
        If Err Then GoTo proxOrca
        On Error GoTo 0
        Windows([xlCusteio]).Activate
        
        Workbooks([xlExporta]).Sheets([strOrca]).Range("J3").value = Range("SQORCA" & Format([lngOrca], "00")).value     ' Sequencial do Or|fffd|amento
        Workbooks([xlExporta]).Sheets([strOrca]).Range("K3").value = Range("DTORCA" & Format([lngOrca], "00")).value     ' DATA CARGA do Or|fffd|amento
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B3").value = Range([colCel2] & "7").value     ' Cultura
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B4").value = Range([colCel2] & "8").value     ' Estado
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B5").value = Range([colCel2] & "9").value     ' Mesoregi|fffd|o
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B6").value = Range([colCel2] & "11").value    ' Atividade/finalidade
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B7").value = Range([colCel2] & "12").value    ' Empreendimento Bacen
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B8").value = Range([colCel2] & "13").value    ' Espa|fffd|amento
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B9").value = Range([colCel2] & "14").value    ' Al|fffd|quota PROAGRO (%)
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B10").value = Range([colCel7] & "9").value    ' N|fffd|vel Tecnologico
        Workbooks([xlExporta]).Sheets([strOrca]).Range("C7").value = Range([colCel7] & "12").value    'GSOL00131364  Cultura
        Workbooks([xlExporta]).Sheets([strOrca]).Range("D7").value = Range([colCel10] & "12").value   'GSOL00863772 - 03|fffd| Sprint Dez/2014 Tipo de cultura
        
        ' ATIVIDADE ZONEAMENTO
        Workbooks([xlExporta]).Sheets([strOrca]).Range("A16").value = Range([colCel4] & "13").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B16").value = Range([colCel4] & "14").value
       
        ArrayVar() = Range("Tipo_Perc_Risco") 'Armazena referencia baseado no Gerenciador de Nomes

        For i = 1 To UBound(ArrayVar)
            If ArrayVar(i, 2) = Range([colCel7] & "14").value Then
                Workbooks([xlExporta]).Sheets([strOrca]).Range("C16").value = ArrayVar(i, 1)
               Exit For
            End If
        Next i
        
        Workbooks([xlExporta]).Sheets([strOrca]).Range("E6").value = Range([colCel8] & "12").value 'GSOL00660171 - Cod Empreendimento
        Workbooks([xlExporta]).Sheets([strOrca]).Range("E7").value = Format(Range([colCel8] & "13").value, "000000000") 'GSOL00660171 - Cod Sist Produ|fffd||fffd|o
        Workbooks([xlExporta]).Sheets([strOrca]).Range("E8").value = Range([colCel9] & "12").value 'GSOL00660171 - Unidade
        
        
        ' JSR - GSOL00910095 - EXPORTA CAMPO 'CULTURA CONSORCIADA'
        Workbooks([xlExporta]).Sheets([strOrca]).Range("E9").value = Range([colCel10] & "13").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("F7").value = Range([colCel6] & "7").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("F8").value = Range([colCel6] & "12").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("F9").value = Range([colCel10] & "7").value
        
        'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 01 Milh|fffd|o
        Workbooks([xlExporta]).Sheets([strOrca]).Range("E10").value = Range([colCel9] & "1").value  'Tipo de Or|fffd|amento ( PRONAF OU AT|fffd| 1 MILH|fffd|O )
        
        For lngCont = 16 To 18
            Workbooks([xlExporta]).Sheets([strOrca]).Range("A" & [lngCont] - 5).value = Range([colCel1] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("D" & [lngCont] - 5).value = Range([colCel4] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("E" & [lngCont] - 5).value = Range([colCel5] & [lngCont]).value
        Next lngCont
        
        'CAT|fffd|LOGO - INI - RNM  Exporta|fffd||fffd|o de dados de Plantio
        Workbooks([xlExporta]).Sheets([strOrca]).Range("A15").value = Range([colCel2] & "19").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("B15").value = Range([colCel3] & "19").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("C15").value = Range([colCel5] & "19").value
        Workbooks([xlExporta]).Sheets([strOrca]).Range("D15").value = Range([colCel7] & "19").value
        'CAT|fffd|LOGO - FIM - RNM  Exporta|fffd||fffd|o de dados de Plantio
               
        For lngCont = 21 To 84
            Workbooks([xlExporta]).Sheets([strOrca]).Range("A" & [lngCont]).value = Range([colCel1] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("B" & [lngCont]).value = Range([colCel2] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("C" & [lngCont]).value = Range([colCel3] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("D" & [lngCont]).value = Range([colCel4] & [lngCont]).value
            Workbooks([xlExporta]).Sheets([strOrca]).Range("E" & [lngCont]).value = Range([colCel5] & [lngCont]).value
           ' Workbooks([xlExporta]).Sheets([strOrca]).Range("F" & [lngCont]).value = Range([colCel6] & [lngCont]).value
           ' Formula determina o Desembolso -  173755 (RTC) - (2017-7660731)
        Next lngCont
                
proxOrca:
        sb.PercentComplete = lngLinSel * 7 + 7
    Next lngLinSel
     
    Windows([xlCusteio]).Activate
    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    If Range("FIM_BCLI").value > 1 Then
       Rows("2:" & Range("FIM_BCLI").value).Select
       Application.CutCopyMode = False
       Selection.Copy
       Windows([xlExporta]).Activate
       Sheets.Add
       ActiveSheet.Name = "-1"
       Range("A2").Select
       ActiveSheet.Paste
       Application.CutCopyMode = False
    End If
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    If Range("FIM_COOB").value > 1 Then
       Rows("2:" & Range("FIM_COOB").value).Select
       Application.CutCopyMode = False
       Selection.Copy
       Windows([xlExporta]).Activate
       Sheets.Add
       ActiveSheet.Name = "-2"
       Range("A2").Select
       ActiveSheet.Paste
       Application.CutCopyMode = False
    End If
     
    Windows([xlExporta]).Activate
    sb.Show "Exportando os dados ", vbNullString, 83
    Application.DisplayAlerts = False
    For Each xlPlan In ActiveWorkbook.Sheets
        If Left(xlPlan.Name, 4) = "Plan" Then xlPlan.Delete
    Next
    Application.DisplayAlerts = True
    
    ActiveWorkbook.Close (True)
    Windows([xlCusteio]).Activate
    sb.Show "Exportando os dados ", vbNullString, 95
    sb.PercentComplete = 100
    MsgBox "Arquivo com dados da proposta gerado." & vbCrLf & _
           "Caminho: " & [xlArqExp], vbInformation
    
Fim:
    Set sb = Nothing
    Windows([xlCusteio]).Activate
    bd8Custeio.Activate
    protPlan.ProtegePlanilha
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    bd5Coob.Activate
    protPlan.ProtegePlanilha
    xl0Menu.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub btnGeraS400_Clique()
    If Range("FIM_BCLI").value = 1 And Range("FIM_COOB").value = 1 Then
       MsgBox "N|fffd|o existem cadastros!"
       Exit Sub
    End If
    If Range("CD_ORG").value = vbNullString Then
       MsgBox "Ag|fffd|ncia n|fffd|o especificada na guia da Proposta!"
       Exit Sub
    End If
    If MsgBox("Ser|fffd|o gerados dados para importa|fffd||fffd|o de cadastros da Ag|fffd|ncia:" & vbCrLf & _
            Range("CD_ORG").value & " - " & _
            Sheets("Proposta").Range("E13").value & vbCrLf & vbCrLf & _
            "Confirma procedimento?", vbQuestion + vbYesNo, _
            "S400-Cadastro |fffd|nico") = vbNo Then Exit Sub
            
    Dim lngLinSel As Long, lngLinBD As Long, lngNumReg As Long
    Dim boJunto As Boolean
    Dim xlPasta As String, xlExporta As String
    Dim lngArqExp, lngErrS400 As Long
    Dim strFilter, strMsgCad As String
    Dim lngTotReg As Long
    Dim flagArquivo As Boolean
    Dim xlArqExp
    Dim protPlan As clsProtecao

    flagArquivo = False
    
    xlPasta = ActiveWorkbook.Name
    strFilter = "Pasta de trabalho do Microsoft Excel (*.xls),*.xls"
    Do While Not flagArquivo
          xlArqExp = Application.GetSaveAsFilename("cadaS400.xls", strFilter, , ":: Exportar arquivo Cadastro")
             
          If xlArqExp = False Then Exit Do
          
          If ExisteArquivo(xlArqExp) Then
             If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
                       "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
                flagArquivo = True
             End If
          Else
             flagArquivo = True
          End If
    
    Loop
    If Not flagArquivo Then
       Application.Calculation = xlCalculationAutomatic
       Exit Sub
    End If
    xlExporta = xlArqExp
    On Error Resume Next
    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
    On Error GoTo 0
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True
    GeraCliente
    bd6S400.Activate
    protPlan.DesprotegePlanilha
    lngTotReg = 0
    lngErrS400 = 0
    strMsgCad = ""
    lngLinBD = 4
    lngNumReg = 1
    
    If Range("FIM_BCLI").value > 1 Then  'Importa|fffd||fffd|o dos benefici|fffd|rios
       bd4Benef.Activate
       For lngLinSel = 2 To Range("FIM_BCLI").value
           boJunto = False
           
           '- Tabela Identifica|fffd||fffd|o
           If Range("CP" & [lngLinSel]).value = 1 Then
                lngTotReg = lngTotReg + 1
                bd6S400.Cells([lngLinBD], "A").value = Range("CD_ORG").value
                bd6S400.Cells([lngLinBD], "B").value = [lngNumReg]
                bd6S400.Cells([lngLinBD], "C").value = Range("F" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "D").value = Format(Range("H" & [lngLinSel]).value, "00000000000")
                bd6S400.Cells([lngLinBD], "E").value = Range("G" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "F").value = "F"
                bd6S400.Cells([lngLinBD], "G").value = "1"
                'bd6S400.Cells([lngLinBD], "H").Value = Format(Range("J" & [lngLinSel]).Value, "dd/mm/yyyy")
                bd6S400.Cells([lngLinBD], "H").value = Range("J" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "I").value = Left(Range("O" & [lngLinSel]).value, 1)
                bd6S400.Cells([lngLinBD], "J").value = Range("K" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "K").value = Range("L" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "L").value = Range("M" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "M").value = Format(Range("N" & [lngLinSel]).value, "dd/mm/yyyy")
                If Range("CS" & [lngLinSel]).value = vbNullString Then
                   bd6S400.Cells([lngLinBD], "R").value = Range("portePROD").value
                Else
                   bd6S400.Cells([lngLinBD], "R").value = Range("CS" & [lngLinSel]).value
                End If
                
                bd6S400.Cells([lngLinBD], "S").value = Range("Q" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "T").value = Range("U" & [lngLinSel]).value 'Ver com Paulo a Tabela de Profiss|fffd|es e atualizar a planilha
                bd6S400.Cells([lngLinBD], "U").value = Range("X" & [lngLinSel]).value
                If Range("Z" & [lngLinSel]).value <> vbNullString Then
                   bd6S400.Cells([lngLinBD], "V").value = CLng(Left(Format(Range("Z" & [lngLinSel]).value, "000000"), 5))
                End If
                
                bd6S400.Cells([lngLinBD], "W").value = Range("CQ" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "X").value = "BRASIL"
                bd6S400.Cells([lngLinBD], "Y").value = Range("CW" & [lngLinSel]).value
                
                '- Tabela Endere|fffd|o
                bd6S400.Cells([lngLinBD], "AA").value = Range("CD_ORG").value
                bd6S400.Cells([lngLinBD], "AB").value = [lngNumReg]
                bd6S400.Cells([lngLinBD], "AC").value = Range("AA" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AD").value = Range("AB" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AE").value = Range("AC" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AF").value = Range("AD" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AH").value = Range("AF" & [lngLinSel]).value
                If Range("AG" & [lngLinSel]).value <> vbNullString Then
                   bd6S400.Cells([lngLinBD], "AI").value = CLng(Left(Format(Range("AG" & [lngLinSel]).value, "000000"), 5))
                End If
    
                bd6S400.Cells([lngLinBD], "AJ").value = Range("AH" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AK").value = Left(Range("AE" & [lngLinSel]).value, 5)
                bd6S400.Cells([lngLinBD], "AL").value = Right(Range("AE" & [lngLinSel]).value, 3)
                bd6S400.Cells([lngLinBD], "AM").value = Range("AI" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AN").value = Range("AJ" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AP").value = Range("CX" & [lngLinSel]).value
                
                '- Tabela Atividade
                bd6S400.Cells([lngLinBD], "AR").value = [lngNumReg]
                bd6S400.Cells([lngLinBD], "AS").value = Range("W" & [lngLinSel]).value
                If Range("AG" & [lngLinSel]).value <> vbNullString Then
                 bd6S400.Cells([lngLinBD], "AT").value = CLng(Left(Format(Range("AG" & [lngLinSel]).value, "000000"), 5))
                End If
                
                '- Tabela Parentes
                bd6S400.Cells([lngLinBD], "AW").value = [lngNumReg]
                bd6S400.Cells([lngLinBD], "AX").value = Range("AL" & [lngLinSel]).value
                bd6S400.Cells([lngLinBD], "AY").value = Range("AK" & [lngLinSel]).value
                If Range("Q" & [lngLinSel]).value >= 2 And Range("Q" & [lngLinSel]).value <= 4 Then 'Casado gera c|fffd|njuge
                   If Range("AO" & [lngLinSel]).value <> vbNullString And Range("AP" & [lngLinSel]).value <> vbNullString Then
                      bd6S400.Cells([lngLinBD], "AZ").value = Range("AO" & [lngLinSel]).value
                      bd6S400.Cells([lngLinBD], "BA").value = Format(Range("AP" & [lngLinSel]).value, "00000000000")
                      boJunto = True
                   End If
                Else
                   If Range("AO" & [lngLinSel]).value <> vbNullString And Range("AP" & [lngLinSel]).value <> vbNullString Then
                      bd6S400.Cells([lngLinBD], "BB").value = Range("AO" & [lngLinSel]).value
                      bd6S400.Cells([lngLinBD], "BC").value = Format(Range("AP" & [lngLinSel]).value, "00000000000")
                      boJunto = True
                   End If
                End If
                
                '- Tabela Endere|fffd|o Correspondencia
                If Range("DA" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "BF").value = Range("CD_ORG").value
                    bd6S400.Cells([lngLinBD], "BG").value = [lngNumReg]
                    bd6S400.Cells([lngLinBD], "BH").value = Range("DA" & [lngLinSel]).value
                    bd6S400.Cells([lngLinBD], "BI").value = Range("DB" & [lngLinSel]).value
                    bd6S400.Cells([lngLinBD], "BJ").value = Range("DC" & [lngLinSel]).value
                    bd6S400.Cells([lngLinBD], "BK").value = Range("DD" & [lngLinSel]).value
                    If Range("DF" & [lngLinSel]).value <> vbNullString Then _
                       bd6S400.Cells([lngLinBD], "BM").value = Left(Range("DF" & [lngLinSel]).value, InStr(1, Range("DF" & [lngLinSel]).value, "-") - 1)
                    If Range("DG" & [lngLinSel]).value <> vbNullString Then _
                       bd6S400.Cells([lngLinBD], "BN").value = CLng(Left(Format(Range("DG" & [lngLinSel]).value, "000000"), 5))
                    bd6S400.Cells([lngLinBD], "BO").value = Range("DH" & [lngLinSel]).value
                    If Range("DE" & [lngLinSel]).value <> vbNullString Then
                       bd6S400.Cells([lngLinBD], "BP").value = Left(Format(Range("DE" & [lngLinSel]).value, "00000-000"), 5)
                       bd6S400.Cells([lngLinBD], "BQ").value = Right(Format(Range("DE" & [lngLinSel]).value, "00000-000"), 3)
                    End If
                    bd6S400.Cells([lngLinBD], "BR").value = Range("CZ" & [lngLinSel]).value
                End If
                lngLinBD = lngLinBD + 1
                lngNumReg = lngNumReg + 1
                
                '- Conjuge ou companheiro
                If boJunto Then
                
                  '- Tabela Identifica|fffd||fffd|o
                   bd6S400.Cells([lngLinBD], "A").value = Range("CD_ORG").value
                   bd6S400.Cells([lngLinBD], "B").value = [lngNumReg]
                   bd6S400.Cells([lngLinBD], "C").value = Range("AO" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "D").value = Format(Range("AP" & [lngLinSel]).value, "00000000000")
                   bd6S400.Cells([lngLinBD], "F").value = "F"
                   If Range("AP" & [lngLinSel]).value = Range("H" & [lngLinSel]).value Then
                      bd6S400.Cells([lngLinBD], "G").value = "2"
                   Else
                      bd6S400.Cells([lngLinBD], "G").value = "1"
                   End If
                   bd6S400.Cells([lngLinBD], "H").value = Format(Range("AQ" & [lngLinSel]).value, "dd/mm/yyyy")
                   bd6S400.Cells([lngLinBD], "I").value = Left(Range("AV" & [lngLinSel]).value, 1)
                   bd6S400.Cells([lngLinBD], "J").value = Range("AR" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "K").value = Range("AS" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "L").value = Range("AT" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "M").value = Format(Range("AU" & [lngLinSel]).value, "dd/mm/yyyy")
                   If Range("CS" & [lngLinSel]).value = vbNullString Then
                    bd6S400.Cells([lngLinBD], "R").value = Range("portePROD").value
                   Else
                    bd6S400.Cells([lngLinBD], "R").value = Range("CS" & [lngLinSel]).value
                   End If
                   bd6S400.Cells([lngLinBD], "S").value = Range("AX" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "T").value = Range("BB" & [lngLinSel]).value 'Ver com Paulo a Tabela de Profiss|fffd|es e atualizar a planilha
                   bd6S400.Cells([lngLinBD], "U").value = Range("BC" & [lngLinSel]).value
                   If Range("BE" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "V").value = CLng(Left(Format(Range("BE" & [lngLinSel]).value, "000000"), 5))
                   End If
    
                   bd6S400.Cells([lngLinBD], "W").value = Range("CR" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "X").value = "BRASIL"
                   bd6S400.Cells([lngLinBD], "Y").value = Range("CW" & [lngLinSel]).value

                   '- Tabela Endere|fffd|o
                   bd6S400.Cells([lngLinBD], "AA").value = Range("CD_ORG").value
                   bd6S400.Cells([lngLinBD], "AB").value = [lngNumReg]
                   bd6S400.Cells([lngLinBD], "AC").value = Range("AA" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AD").value = Range("AB" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AE").value = Range("AC" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AF").value = Range("AD" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AH").value = Range("AF" & [lngLinSel]).value
                   If Range("AG" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "AI").value = CLng(Left(Format(Range("AG" & [lngLinSel]).value, "000000"), 5))
                   End If
                   
                   bd6S400.Cells([lngLinBD], "AJ").value = Range("AH" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AK").value = Left(Range("AE" & [lngLinSel]).value, 5)
                   bd6S400.Cells([lngLinBD], "AL").value = Right(Range("AE" & [lngLinSel]).value, 3)
                   bd6S400.Cells([lngLinBD], "AM").value = Range("AI" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AN").value = Range("AJ" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AP").value = Range("CX" & [lngLinSel]).value
                   
                   '- Tabela Atividade
                   bd6S400.Cells([lngLinBD], "AR").value = [lngNumReg]
                   bd6S400.Cells([lngLinBD], "AS").value = Range("W" & [lngLinSel]).value
                   If Range("AG" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "AT").value = CLng(Left(Format(Range("AG" & [lngLinSel]).value, "000000"), 5))
                   End If
                   
                   '- Tabela Parentes
                   bd6S400.Cells([lngLinBD], "AW").value = [lngNumReg]
                   bd6S400.Cells([lngLinBD], "AX").value = Range("BG" & [lngLinSel]).value
                   bd6S400.Cells([lngLinBD], "AY").value = Range("BF" & [lngLinSel]).value
                   If Range("AX" & [lngLinSel]).value >= 2 And Range("AX" & [lngLinSel]).value <= 4 Then 'Casado gera c|fffd|njuge
                      If Range("F" & [lngLinSel]).value <> vbNullString And Range("H" & [lngLinSel]).value <> vbNullString Then
                         bd6S400.Cells([lngLinBD], "AZ").value = Range("F" & [lngLinSel]).value
                         bd6S400.Cells([lngLinBD], "BA").value = Format(Range("H" & [lngLinSel]).value, "00000000000")
                      End If
                   Else
                      If Range("F" & [lngLinSel]).value <> vbNullString And Range("H" & [lngLinSel]).value <> vbNullString Then
                         bd6S400.Cells([lngLinBD], "BB").value = Range("F" & [lngLinSel]).value
                         bd6S400.Cells([lngLinBD], "BC").value = Format(Range("H" & [lngLinSel]).value, "00000000000")
                      End If
                   End If
                    '- Tabela Endere|fffd|o Correspondencia
                    If Range("DA" & [lngLinSel]).value <> vbNullString Then
                        bd6S400.Cells([lngLinBD], "BF").value = Range("CD_ORG").value
                        bd6S400.Cells([lngLinBD], "BG").value = [lngNumReg]
                        bd6S400.Cells([lngLinBD], "BH").value = Range("DA" & [lngLinSel]).value
                        bd6S400.Cells([lngLinBD], "BI").value = Range("DB" & [lngLinSel]).value
                        bd6S400.Cells([lngLinBD], "BJ").value = Range("DC" & [lngLinSel]).value
                        bd6S400.Cells([lngLinBD], "BK").value = Range("DD" & [lngLinSel]).value
                        If Range("DF" & [lngLinSel]).value <> vbNullString Then _
                           bd6S400.Cells([lngLinBD], "BM").value = Left(Range("DF" & [lngLinSel]).value, InStr(1, Range("DF" & [lngLinSel]).value, "-") - 1)
                        If Range("DG" & [lngLinSel]).value <> vbNullString Then _
                           bd6S400.Cells([lngLinBD], "BN").value = CLng(Left(Format(Range("DG" & [lngLinSel]).value, "000000"), 5))
                        bd6S400.Cells([lngLinBD], "BO").value = Range("DH" & [lngLinSel]).value
                        If Range("DE" & [lngLinSel]).value <> vbNullString Then
                           bd6S400.Cells([lngLinBD], "BP").value = Left(Format(Range("DE" & [lngLinSel]).value, "00000-000"), 5)
                           bd6S400.Cells([lngLinBD], "BQ").value = Right(Format(Range("DE" & [lngLinSel]).value, "00000-000"), 3)
                        End If
                        bd6S400.Cells([lngLinBD], "BR").value = Range("CZ" & [lngLinSel]).value
                    End If
                   
                   lngLinBD = lngLinBD + 1
                   lngNumReg = lngNumReg + 1
                End If
                
           End If
           If Range("CP" & [lngLinSel]).value = "-1" Then
              lngErrS400 = lngErrS400 + 1
              uf_LogErro "Benefici|fffd|rio: " & Range("F" & [lngLinSel]).value
              uf_LogErro "C.P.F.      : " & Format(Range("H" & [lngLinSel]).value, "000000000-00")
              uf_LogErro "Pend|fffd|ncias  : " & Range("CT" & [lngLinSel]).value
              uf_LogErro "---" & vbCrLf
           End If
       Next lngLinSel
    End If
    If Range("FIM_COOB").value > 1 Then  'Importa|fffd||fffd|o dos coobrigados
       bd5Coob.Activate
       'lngLinBD = 4
       'lngNumReg = 1
       For lngLinSel = 2 To Range("FIM_COOB").value
           If Range("E" & [lngLinSel]).value = 0 Then 'somente pessoa f|fffd|sica
              lngTotReg = lngTotReg + 1
              boJunto = False
              '- Tabela Identifica|fffd||fffd|o
              bd6S400.Cells([lngLinBD], "A").value = Range("CD_ORG").value
              bd6S400.Cells([lngLinBD], "B").value = [lngNumReg]
              bd6S400.Cells([lngLinBD], "C").value = Range("F" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "D").value = Format(Range("G" & [lngLinSel]).value, "00000000000")
              bd6S400.Cells([lngLinBD], "F").value = "F"
              bd6S400.Cells([lngLinBD], "G").value = "1"
              bd6S400.Cells([lngLinBD], "H").value = Format(Range("H" & [lngLinSel]).value, "dd/mm/yyyy")
              bd6S400.Cells([lngLinBD], "I").value = Left(Range("M" & [lngLinSel]).value, 1)
              bd6S400.Cells([lngLinBD], "J").value = Range("I" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "K").value = Range("J" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "L").value = Range("K" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "M").value = Format(Range("L" & [lngLinSel]).value, "dd/mm/yyyy")
              bd6S400.Cells([lngLinBD], "R").value = 99
              bd6S400.Cells([lngLinBD], "S").value = Range("O" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "T").value = Range("BB" & [lngLinSel]).value 'Ver com Paulo a Tabela de Profiss|fffd|es e atualizar a planilha
              bd6S400.Cells([lngLinBD], "U").value = Range("R" & [lngLinSel]).value
              If Range("T" & [lngLinSel]).value <> vbNullString Then
               bd6S400.Cells([lngLinBD], "V").value = CLng(Left(Format(Range("T" & [lngLinSel]).value, "000000"), 5))
              End If
              
              bd6S400.Cells([lngLinBD], "W").value = Range("AZ" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "X").value = "BRASIL"
              '- Tabela Endere|fffd|o
              bd6S400.Cells([lngLinBD], "AA").value = Range("CD_ORG").value
              bd6S400.Cells([lngLinBD], "AB").value = [lngNumReg]
              bd6S400.Cells([lngLinBD], "AC").value = Range("U" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AD").value = Range("V" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AE").value = Range("W" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AF").value = Range("X" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AH").value = Range("Z" & [lngLinSel]).value
              If Range("AA" & [lngLinSel]).value <> vbNullString Then
               bd6S400.Cells([lngLinBD], "AI").value = CLng(Left(Format(Range("AA" & [lngLinSel]).value, "000000"), 5))
              End If
              
              bd6S400.Cells([lngLinBD], "AJ").value = Range("AB" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AK").value = Left(Range("Y" & [lngLinSel]).value, 5)
              bd6S400.Cells([lngLinBD], "AL").value = Right(Range("Y" & [lngLinSel]).value, 3)
              bd6S400.Cells([lngLinBD], "AM").value = Range("AC" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AN").value = Range("AD" & [lngLinSel]).value
              '- Tabela Atividade
              bd6S400.Cells([lngLinBD], "AR").value = [lngNumReg]
              bd6S400.Cells([lngLinBD], "AS").value = Range("AY" & [lngLinSel]).value
              If Range("AA" & [lngLinSel]).value <> vbNullString Then
               bd6S400.Cells([lngLinBD], "AT").value = CLng(Left(Format(Range("AA" & [lngLinSel]).value, "000000"), 5))
              End If
              
              '- Tabela Parentes
              bd6S400.Cells([lngLinBD], "AW").value = [lngNumReg]
              bd6S400.Cells([lngLinBD], "AX").value = Range("AF" & [lngLinSel]).value
              bd6S400.Cells([lngLinBD], "AY").value = Range("AE" & [lngLinSel]).value
              If Range("O" & [lngLinSel]).value >= 2 And Range("O" & [lngLinSel]).value <= 4 Then 'Casado gera c|fffd|njuge
                 If Range("AG" & [lngLinSel]).value <> vbNullString And Range("AH" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "AZ").value = Range("AG" & [lngLinSel]).value
                    bd6S400.Cells([lngLinBD], "BA").value = Format(Range("AH" & [lngLinSel]).value, "00000000000")
                    boJunto = True
                 End If
              Else
                 If Range("AG" & [lngLinSel]).value <> vbNullString And Range("AH" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "BB").value = Range("AG" & [lngLinSel]).value
                    bd6S400.Cells([lngLinBD], "BC").value = Format(Range("AH" & [lngLinSel]).value, "00000000000")
                    boJunto = True
                 End If
              End If
             
              lngLinBD = lngLinBD + 1
              lngNumReg = lngNumReg + 1
           
              '- Conjuge ou companheiro
              If boJunto Then
                 '- Tabela Identifica|fffd||fffd|o
                 bd6S400.Cells([lngLinBD], "A").value = Range("CD_ORG").value
                 bd6S400.Cells([lngLinBD], "B").value = [lngNumReg]
                 bd6S400.Cells([lngLinBD], "C").value = Range("AG" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "D").value = Format(Range("AH" & [lngLinSel]).value, "00000000000")
                 bd6S400.Cells([lngLinBD], "F").value = "F"
                 bd6S400.Cells([lngLinBD], "G").value = "1"
                 bd6S400.Cells([lngLinBD], "H").value = Format(Range("AI" & [lngLinSel]).value, "dd/mm/yyyy")
                 bd6S400.Cells([lngLinBD], "I").value = Left(Range("AN" & [lngLinSel]).value, 1)
                 bd6S400.Cells([lngLinBD], "J").value = Range("AJ" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "K").value = Range("AK" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "L").value = Range("AL" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "M").value = Format(Range("AM" & [lngLinSel]).value, "dd/mm/yyyy")
                 bd6S400.Cells([lngLinBD], "R").value = 99
                 bd6S400.Cells([lngLinBD], "S").value = Range("AP" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "T").value = Range("BC" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "U").value = Range("AS" & [lngLinSel]).value
                 If Range("AU" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "V").value = CLng(Left(Format(Range("AU" & [lngLinSel]).value, "000000"), 5))
                 End If
                 
                 bd6S400.Cells([lngLinBD], "W").value = Range("BA" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "X").value = "BRASIL"
                 '- Tabela Endere|fffd|o
                 bd6S400.Cells([lngLinBD], "AA").value = Range("CD_ORG").value
                 bd6S400.Cells([lngLinBD], "AB").value = [lngNumReg]
                 bd6S400.Cells([lngLinBD], "AC").value = Range("U" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AD").value = Range("V" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AE").value = Range("W" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AF").value = Range("X" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AH").value = Range("Z" & [lngLinSel]).value
                 If Range("AA" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "AI").value = CLng(Left(Format(Range("AA" & [lngLinSel]).value, "000000"), 5))
                 End If
                 
                 bd6S400.Cells([lngLinBD], "AJ").value = Range("AB" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AK").value = Left(Range("Y" & [lngLinSel]).value, 5)
                 bd6S400.Cells([lngLinBD], "AL").value = Right(Range("Y" & [lngLinSel]).value, 3)
                 bd6S400.Cells([lngLinBD], "AM").value = Range("AC" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AN").value = Range("AD" & [lngLinSel]).value
                 '- Tabela Atividade
                 bd6S400.Cells([lngLinBD], "AR").value = [lngNumReg]
                 bd6S400.Cells([lngLinBD], "AS").value = Range("AY" & [lngLinSel]).value
                 If Range("AA" & [lngLinSel]).value <> vbNullString Then
                    bd6S400.Cells([lngLinBD], "AT").value = CLng(Left(Format(Range("AA" & [lngLinSel]).value, "000000"), 5))
                 End If
                 
                 '- Tabela Parentes
                 bd6S400.Cells([lngLinBD], "AW").value = [lngNumReg]
                 bd6S400.Cells([lngLinBD], "AX").value = Range("AW" & [lngLinSel]).value
                 bd6S400.Cells([lngLinBD], "AY").value = Range("AV" & [lngLinSel]).value
                 If Range("AP" & [lngLinSel]).value >= 2 And Range("AP" & [lngLinSel]).value <= 4 Then 'Casado gera c|fffd|njuge
                    If Range("F" & [lngLinSel]).value <> vbNullString And Range("G" & [lngLinSel]).value <> vbNullString Then
                       bd6S400.Cells([lngLinBD], "AZ").value = Range("F" & [lngLinSel]).value
                       bd6S400.Cells([lngLinBD], "BA").value = Format(Range("G" & [lngLinSel]).value, "00000000000")
                    End If
                 Else
                    If Range("F" & [lngLinSel]).value <> vbNullString And Range("G" & [lngLinSel]).value <> vbNullString Then
                       bd6S400.Cells([lngLinBD], "BB").value = Range("F" & [lngLinSel]).value
                       bd6S400.Cells([lngLinBD], "BC").value = Format(Range("G" & [lngLinSel]).value, "00000000000")
                    End If
                 End If
              End If
           End If
           If Range("BD" & [lngLinSel]).value = "-1" Then
              lngErrS400 = lngErrS400 + 1
              uf_LogErro "Coobrigado  : " & Range("F" & [lngLinSel]).value
              uf_LogErro "C.P.F.      : " & Format(Range("G" & [lngLinSel]).value, "000000000-00")
              uf_LogErro "Pend|fffd|ncias  : " & Range("BE" & [lngLinSel]).value
              uf_LogErro "---" & vbCrLf
           End If
       
       Next lngLinSel
    End If
    bd6S400.Activate
    If lngTotReg = 0 Then
       MsgBox "Nenhum registro foi gerado, por n|fffd|o haver cadastros preenchidos para importa|fffd||fffd|o", vbInformation
       GoTo Fim
    End If
    Workbooks.Add
    If Int(Left(Application.Version, 2)) >= 11 Then
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlExcel8, _
            ReadOnlyRecommended:=False, CreateBackup:=False
    Else
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlNormal, _
            ReadOnlyRecommended:=False, CreateBackup:=False
    End If
    xlArqExp = ActiveWorkbook.Name
    Windows([xlPasta]).Activate
    bd6S400.Activate
    Range("A1:BR" & Range("B1").value).Select
    Selection.Copy
    Windows([xlArqExp]).Activate
    Sheets("Plan1").Activate
    Range("A1").Select
    Selection.PasteSpecial Paste:=xlValues
    Selection.PasteSpecial Paste:=xlFormats
    ActiveWorkbook.Names.Add Name:="Atividade", RefersToR1C1:= _
        "=Plan1!R3C44:R" & Range("B1").value & "C46"
    ActiveWorkbook.Names.Add Name:="Endereco", RefersToR1C1:= _
        "=Plan1!R3C27:R" & Range("B1").value & "C42"
    ActiveWorkbook.Names.Add Name:="Identificacao", RefersToR1C1:= _
        "=Plan1!R3C1:R" & Range("B1").value & "C25"
    ActiveWorkbook.Names.Add Name:="Parentes", RefersToR1C1:= _
        "=Plan1!R3C49:R" & Range("B1").value & "C55"
        
    Range("BF3:BR" & Range("B1").value).Select
    Selection.Sort Key1:=Range("BF4"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
        DataOption1:=xlSortNormal
    
    'Selection.Sort Key1:=Range("BG4"), Order1:=xlAscending, Header:=xlGuess, _
    '    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
    '    DataOption1:=xlSortNormal
    
    iLin = Application.WorksheetFunction.Count(Range("BG4:BG" & Range("B1").value)) + 3
    If iLin < 3 Then iLin = 3
    Range("BF1").value = iLin - 3
    Range("BG1").value = iLin
        
    ActiveWorkbook.Names.Add Name:="Correspondencia", RefersToR1C1:= _
        "=Plan1!R3C58:R" & Range("BG1").value & "C70"
        
    'Limpa campos em branco (ODBC interpreta como caracter)
    For iCol = 1 To 70
        For iLin = 4 To Range("B1").value
            If Cells([iLin], [iCol]).value = vbNullString Then Cells([iLin], [iCol]).Clear
        Next iLin
    Next iCol
    For iLin = 4 To Range("B1").value
        If Not IsNumeric(Cells([iLin], "AD").value) Then Cells([iLin], "AD").Clear
        If Not IsNumeric(Cells([iLin], "AN").value) Then Cells([iLin], "AN").Clear
        If IsNumeric(Cells([iLin], "AX").value) Then Cells([iLin], "AX").Clear
        If IsNumeric(Cells([iLin], "AY").value) Then Cells([iLin], "AY").Clear
        If IsNumeric(Cells([iLin], "AZ").value) Then Cells([iLin], "AZ").Clear
        If IsNumeric(Cells([iLin], "BB").value) Then Cells([iLin], "BB").Clear
        
        If Not IsNumeric(Cells([iLin], "BI").value) Then Cells([iLin], "BI").Clear
    Next iLin
 
    For iLin = 4 To Range("B1").value
        If Range("H" & [iLin]).value <> vbNullString Then
            If Right(Range("H" & [iLin]).value, 1) = "/" Then
                Range("H" & [iLin]).value = Left(Range("H" & [iLin]).value, Len(Range("H" & [iLin]).value) - 1)
            End If
            dtData = CDate(Range("H" & [iLin]).value)
            Range("H" & [iLin]).FormulaR1C1 = dtData
        End If
  
        If Range("M" & [iLin]).value <> vbNullString Then
            If Right(Range("M" & [iLin]).value, 1) = "/" Then
                Range("M" & [iLin]).value = Left(Range("M" & [iLin]).value, Len(Range("M" & [iLin]).value) - 1)
            End If
            dtData = CDate(Range("M" & [iLin]).value)
            Range("M" & [iLin]).FormulaR1C1 = dtData
        End If
  
        If Range("Q" & [iLin]).value <> vbNullString Then
            If Right(Range("Q" & [iLin]).value, 1) = "/" Then
                Range("Q" & [iLin]).value = Left(Range("Q" & [iLin]).value, Len(Range("Q" & [iLin]).value) - 1)
            End If
            dtData = CDate(Range("Q" & [iLin]).value)
            Range("Q" & [iLin]).FormulaR1C1 = dtData
        End If
    Next iLin
   
    'Finaliza o arquivo dados
    ActiveWorkbook.Close (True)
    MsgBox "Arquivo de Cadastro (S400) gerado." & vbCrLf & _
           "Utilize a op|fffd||fffd|o de importa|fffd||fffd|o do S400 <Ferramentas / Importar Clientes / Planilha Pronaf>." & vbCrLf & _
           "Caminho do arquivo: " & [xlExporta], vbInformation, "Exporta|fffd||fffd|o"
    
Fim:
    Windows([xlPasta]).Activate
    bd6S400.Activate
    If Range("B1").value > 3 Then Range("A4:EW" & Range("B1").value).ClearContents
    protPlan.ProtegePlanilha
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    xl0Menu.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    If lngErrS400 > 0 Then
       MsgBox "Alguns cadastros foram gerados com inconsistencias que podem impedir a importa|fffd||fffd|o no S400." & vbCrLf & _
              "Atualize os dados dos benefici|fffd|rios ou coobrigados e gere o arquivo novamente.", vbExclamation
              On Error Resume Next
              Shell "Notepad.exe " & ActiveWorkbook.Path & "\LOG033XL.TXT", vbNormalFocus
              Kill ActiveWorkbook.Path & "\LOG033XL.TXT"
              On Error GoTo 0
    End If

End Sub

Sub importaDADOS()
    Dim lngOrca As Long, lngCont As Long, lngArqExp As Long, lngLinSel As Long
    Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim colCel4 As String, colCel5 As String, colCel6 As String
    Dim colCel7 As String, colCel8 As String, colCel9 As String
    Dim colCel10 As String 'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim strOrca As String
    Dim xlCusteio As String, xlImporta As String
    Dim strFilter As String
    Dim xlPlan, xlArqImp
    Dim ArrayVar()
    
    Dim sb As clsProgressBar
    Dim boProp As Boolean
    Dim protPlan As clsProtecao
    Dim ldtVersaoDados As Date
    Set protPlan = New clsProtecao
    
    boProp = False
    Set sb = New clsProgressBar
    sb.Show "Importando os dados ", vbNullString, 0
    sb.PercentComplete = 1
    protPlan.IniciaRotina True
    manterManual = True
    xlCusteio = ActiveWorkbook.Name
    strFilter = "Pasta de trabalho do Microsoft Excel (*.xls),*.xls"
 
    'Nome do arquivo
    xlArqImp = Application.GetOpenFilename(strFilter, , ":: Importar Plano Custeio Agr|fffd|cola")
    If xlArqImp = False Then GoTo Fim
'    on error Resume Next
    xl99Auxi.Activate
    'protPlan.DesprotegePlanilha
    'GSOL00660171 INI RNM - INCLUS|fffd|O DO COMPONENTE
    'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersToR1C1:= _
    '           "=Auxiliar!R1C77:R537C78"
    'GSOL00660171 INI RNM - INCLUS|fffd|O DO COMPONENTE
    protPlan.ProtegePlanilha
    
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 INI RNM 23/07/2018
    'Deixar o valor padr|fffd|o
    xl2Prop.Activate
    protPlan.DesprotegePlanilha
    Range("TJCRural").value = 1
    protPlan.ProtegePlanilha
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 FIM RNM 23/07/2018

    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    lngLinSel = Range("FIM_BCLI").value
    If lngLinSel > 1 Then
       Rows("2:" & lngLinSel).ClearContents
'       Range("A2:CZ" & [lngLinSel]).ClearContents
    End If
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    lngLinSel = Range("FIM_COOB").value
    If lngLinSel > 1 Then
       'Range("A2:CZ" & [lngLinSel]).ClearContents
      Rows("2:" & lngLinSel).ClearContents
    End If
        
    'apaga os orcamentos existentes e o Backup para compara|fffd||fffd|o 'Sprint 11
    xl1OrcaBkp.Activate
    For lngCont = 1 To 10
        LimparOrcamento lngCont, 1
    Next lngCont
    
    xl1Orca.Activate
    For lngCont = 1 To 10
        LimparOrcamento lngCont, 0
    Next lngCont
    
    selORCA01
    
    xl0Menu.Activate
    Workbooks.Open xlArqImp, Password:="senhasBN"
    xlImporta = ActiveWorkbook.Name
    Sheets("0").Activate
    
    If Err Then
       MsgBox "N|fffd|o foi possivel abrir o arquivo", vbExclamation
       GoTo Fim
    End If
    If IsDate(Range("B2").value) Then
        ldtVersaoDados = Range("B2").value
    Else
        ldtVersaoDados = CDate("31/12/2007")
    End If
    'GSOL00119964
    If Workbooks([xlImporta]).Sheets("0").Range("C54").value = "N|fffd|o" Then
        Workbooks([xlImporta]).Sheets("0").Range("C54").value = 2
    Else
        Workbooks([xlImporta]).Sheets("0").Range("C54").value = 1
    End If
    On Error GoTo erroDados
    Application.DisplayAlerts = False
    sb.Show "Importando os dados ", vbNullString, 3
    Windows([xlCusteio]).Activate
    
    sb.Show "Importando os dados ", vbNullString, 10
    Sheets("Proposta").Unprotect Password:="senhasBN"
    'limpa programa de cr|fffd|dito
    Sheets("Proposta").Range("X46").value = 0
    Sheets("Proposta").Range("V46").ClearContents
    Sheets("Proposta").Range("E46:J46").ClearContents '
    Sheets("Proposta").Range("L130:M160").ClearContents
    Sheets("Proposta").Range("E10").value = Workbooks([xlImporta]).Sheets("0").Range("C50").value  'Sprint 9 AgroAmigo Crescer RNM 04/2016
    If Sheets("Proposta").Range("E10").value = "Sim" Then
       Sheets("Proposta").Range("S10").value = "S"
    Else
       Sheets("Proposta").Range("E10").value = "N|fffd|o"   'Aloca|fffd||fffd|o se o projeto importado n|fffd|o enviar a resposta "N|fffd|o"
       Sheets("Proposta").Range("S10").value = "N"
    End If
    
    Sheets("Proposta").Range("E11").value = Workbooks([xlImporta]).Sheets("0").Range("C51").value
    Sheets("Proposta").Range("E12").value = Workbooks([xlImporta]).Sheets("0").Range("C52").value
    Sheets("Proposta").Range("E13").value = Workbooks([xlImporta]).Sheets("0").Range("C53").value
    Sheets("Proposta").Range("E14").value = Workbooks([xlImporta]).Sheets("0").Range("K51").value
    'Sheets("Proposta").Range("E15").Value = Workbooks([xlImporta]).Sheets("0").Range("K52").Value
    Sheets("Proposta").Range("S21").value = Workbooks([xlImporta]).Sheets("0").Range("C54").value
    Sheets("Proposta").Range("E22").value = Workbooks([xlImporta]).Sheets("0").Range("C55").value
    Sheets("Proposta").Range("E23").value = Workbooks([xlImporta]).Sheets("0").Range("C56").value
    Sheets("Proposta").Range("E24").value = Workbooks([xlImporta]).Sheets("0").Range("C57").value
    Sheets("Proposta").Range("E25").value = Workbooks([xlImporta]).Sheets("0").Range("C58").value
    Sheets("Proposta").Range("E26").value = Workbooks([xlImporta]).Sheets("0").Range("C59").value
    'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM INI
    Sheets("Proposta").Range("E27").value = Workbooks([xlImporta]).Sheets("0").Range("C60").value  'RNM GSOL00878466 RETIRAR 02/2015
    'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM FIM
    
    'Inclus|fffd|o do Campo Benefici|fffd|rio de pol|fffd|ticas P|fffd|blicas  INI RNM
    Sheets("Proposta").Range("E28").value = Workbooks([xlImporta]).Sheets("0").Range("K60").value  'RNM GSOL01926271 INI 06/2019
    'Inclus|fffd|o do Campo Benefici|fffd|rio de pol|fffd|ticas P|fffd|blicas  FIM  rnm
    
    Sheets("Proposta").Range("CD319").value = Workbooks([xlImporta]).Sheets("0").Range("C187").value
    Sheets("Proposta").Range("P315").value = Workbooks([xlImporta]).Sheets("0").Range("D187").value
    Sheets("Proposta").Range("E54").value = Workbooks([xlImporta]).Sheets("0").Range("E187").value
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 - RNM 23/07/2018 - INI
    Sheets("Proposta").Range("S320").value = Workbooks([xlImporta]).Sheets("0").Range("F187").value
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 - RNM 23/07/2018 - FIM
    'Sheets("Proposta").Range("N54").Value = Workbooks([xlImporta]).Sheets("0").Range("K75").Value  'Sprint 9 Retirada da campo SECA
    Sheets("Proposta").Range("F55").value = Workbooks([xlImporta]).Sheets("0").Range("C76").value 'GSOL00551305
    
    'Proagro Mais Investimento
    xl8Agencia.Activate
    protPlan.DesprotegePlanilha
    Range("D6").Select
    ActiveCell.FormulaR1C1 = ""
    Sheets("Agencia").Range("I5").value = Workbooks([xlImporta]).Sheets("0").Range("K79").value
    Sheets("Agencia").Range("D6").value = Workbooks([xlImporta]).Sheets("0").Range("K80").value
    
    If Sheets("Agencia").Range("D6").value = 0 Then
    Sheets("Agencia").Range("D6").value = Sheets("Proposta").Range("E13").value
    End If
    
    Sheets("Agencia").Range("D7").value = Workbooks([xlImporta]).Sheets("0").Range("K81").value
    Sheets("Agencia").Range("D8").value = Workbooks([xlImporta]).Sheets("0").Range("K82").value
    Sheets("Agencia").Range("D9").value = Workbooks([xlImporta]).Sheets("0").Range("K83").value
    Sheets("Agencia").Range("D10").value = Workbooks([xlImporta]).Sheets("0").Range("K84").value
    protPlan.ProtegePlanilha
    
    sb.PercentComplete = 11
    If Workbooks([xlImporta]).Sheets("0").Range("B2").value = "01/03/2004" Then
       For lngCont = 63 To 65
           Sheets("Proposta").Range("D" & [lngCont] - 30).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
           Sheets("Proposta").Range("J" & [lngCont] - 30).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
           Sheets("Proposta").Range("M" & [lngCont] - 30).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
           Sheets("Proposta").Range("N" & [lngCont] - 30).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
       Next lngCont
       sb.PercentComplete = 15
       On Error Resume Next
       Sheets("Proposta").Range("E45").value = Workbooks([xlImporta]).Sheets("0").Range("C68").value
       
       If Sheets("Proposta").Range("S45").value = 2 Or Sheets("Proposta").Range("S45").value = 3 Then
            Sheets("Proposta").Range("E45").value = 1
       Else
            Sheets("Proposta").Range("E45").value = 0
       End If
       
       Sheets("Proposta").Range("E46").value = Workbooks([xlImporta]).Sheets("0").Range("C69").value
       Sheets("Proposta").Range("E48").value = Workbooks([xlImporta]).Sheets("0").Range("C70").value
       Sheets("Proposta").Range("E49").value = Workbooks([xlImporta]).Sheets("0").Range("C71").value
       Sheets("Proposta").Range("E50").value = Workbooks([xlImporta]).Sheets("0").Range("C72").value
       Sheets("Proposta").Range("E51").value = Workbooks([xlImporta]).Sheets("0").Range("C73").value
       Sheets("Proposta").Range("E52").value = Workbooks([xlImporta]).Sheets("0").Range("C74").value
       
       'RTC 3115 - Plano Safra 2016/2017 RNM INI
       If Workbooks([xlImporta]).Sheets("0").Range("F75").value = vbNullString Then
         Sheets("Proposta").Range("R53").value = "CUSTEIO AGR|fffd|COLA (54)"
       Else
         Sheets("Proposta").Range("R53").value = Workbooks([xlImporta]).Sheets("0").Range("F75").value
       End If
       'RTC 3115 - Plano Safra 2016/2017 RNM FIM
       
       'Sheets("Proposta").Range("K48").Value = Workbooks([xlImporta]).Sheets("0").Range("D70").Value
       On Error GoTo 0
       sb.PercentComplete = 20
    Else
       For lngCont = 61 To 66
           Sheets("Proposta").Range("D" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
           Sheets("Proposta").Range("J" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
           Sheets("Proposta").Range("M" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
           Sheets("Proposta").Range("N" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
           'GSOL00069586
           Sheets("Proposta").Range("E" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
           Sheets("Proposta").Range("G" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
       Next lngCont
       sb.PercentComplete = 15
       For lngCont = 61 To 64
           Sheets("Proposta").Range("D" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("K" & [lngCont]).value
           Sheets("Proposta").Range("J" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("L" & [lngCont]).value
           Sheets("Proposta").Range("M" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("M" & [lngCont]).value
           Sheets("Proposta").Range("N" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("N" & [lngCont]).value
           'GSOL00069586
           Sheets("Proposta").Range("E" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("O" & [lngCont]).value
           Sheets("Proposta").Range("G" & [lngCont] - 22).value = Workbooks([xlImporta]).Sheets("0").Range("P" & [lngCont]).value
       Next lngCont
       
       'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
       Dim StrCol As String
       Dim Bnro As Byte
       For lngCont = 61 To 70
            StrCol = IIf(lngCont <= 66, "C", "K")    'Corre|fffd||fffd|o de Importa|fffd||fffd|o de dados do Im|fffd|vel
            Bnro = IIf(lngCont <= 66, 0, 6)          'Corre|fffd||fffd|o de Importa|fffd||fffd|o de dados do Im|fffd|vel
            If Workbooks([xlImporta]).Sheets("0").Range(StrCol & [lngCont] - [Bnro]).value <> "" Then  '20181009
              Sheets("Proposta").Range("AI" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("R" & [lngCont]).value
              Sheets("Proposta").Range("AJ" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("S" & [lngCont]).value
              Sheets("Proposta").Range("AK" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("T" & [lngCont]).value
              Sheets("Proposta").Range("AL" & [lngCont] - 28).value = Workbooks([xlImporta]).Sheets("0").Range("U" & [lngCont]).value
            Else
              Sheets("Proposta").Range("AI" & [lngCont] - 28).value = vbNullString
              Sheets("Proposta").Range("AJ" & [lngCont] - 28).value = vbNullString
              Sheets("Proposta").Range("AK" & [lngCont] - 28).value = vbNullString
              Sheets("Proposta").Range("AL" & [lngCont] - 28).value = vbNullString
            End If
           
           InserirComentImv ([lngCont] - 28)
           
       Next lngCont
       'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - FIM
       
       sb.PercentComplete = 18
       On Error Resume Next
        Sheets("Proposta").Range("M48").value = Workbooks([xlImporta]).Sheets("0").Range("D71").value  ' Bot|fffd|o desativado Sprint 10 deixa de importar para dar lugar ao Seguro Rural.
       On Error GoTo 0
       For lngCont = 67 To 75
           Sheets("Proposta").Range("E" & [lngCont] - 23).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
       Next lngCont
       
       Sheets("Proposta").Range("s45").Calculate
       If Sheets("Proposta").Range("s45").value = 2 Then
          Sheets("Proposta").Range("V44").value = 1
       Else
          Sheets("Proposta").Range("V44").value = 0
       End If
       
       'Sprint 11 - Pergunta Projeto at|fffd| 1 Milh|fffd|o
       Sheets("Proposta").Range("M46").value = Workbooks([xlImporta]).Sheets("0").Range("L69").value
       
       'Or|fffd|amento at|fffd| 1 milh|fffd|o
       If Sheets("Proposta").Range("M46").value = "Sim" Then
          Sheets("Proposta").Range("U46").value = 1
       Else
          Sheets("Proposta").Range("U46").value = 0
       End If
       
       'RTC 3115 - Plano Safra 2016/2017 RNM INI
       If Workbooks([xlImporta]).Sheets("0").Range("F75").value = vbNullString Then
         Sheets("Proposta").Range("L53").value = "CUSTEIO AGR|fffd|COLA (54)"
       Else
         Sheets("Proposta").Range("L53").value = Workbooks([xlImporta]).Sheets("0").Range("F75").value
       End If
       'RTC 3115 - Plano Safra 2016/2017 RNM FIM
       
       'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - INI
       Sheets("Proposta").Range("O45").value = Workbooks([xlImporta]).Sheets("0").Range("I69").value
       Sheets("Proposta").Range("J48").value = Workbooks([xlImporta]).Sheets("0").Range("I70").value
       Sheets("Proposta").Range("N54").value = Workbooks([xlImporta]).Sheets("0").Range("I71").value
       'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - FIM
      
       sb.PercentComplete = 20
    End If
    
    'PROAGRO+
    If UCase(Sheets("Proposta").Range("E48").value) = "SIM" Then Sheets("Proposta").Range("E48").value = "PROAGRO Tradicional"
    If UCase(Sheets("Proposta").Range("E48").value) = "N|fffd|O" Then Sheets("Proposta").Range("E48").value = "N|fffd|o se aplica"
    
    For lngCont = 78 To 87
        Sheets("Proposta").Range("D" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("G" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        'implementa|fffd||fffd|o recursos pr|fffd|prios
        If CDate(Workbooks([xlImporta]).Sheets("0").Range("B2").value) < CDate("31/07/2004") Then
           If Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value <> vbNullString Then _
              Sheets("Proposta").Range("K" & [lngCont] - 20).value = Application.WorksheetFunction.Round(Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value / Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value, 2)
        Else
           Sheets("Proposta").Range("K" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        End If
        'Sprint 11 Inclus|fffd|o do Item de Proagro por Empreendimento ini 20170321
        Sheets("Proposta").Range("H" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
        'Sprint 11 Inclus|fffd|o do Item de Proagro por Empreendimento fim  20170321
        Sheets("Proposta").Range("O" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
        Sheets("Proposta").Range("P" & [lngCont] - 20).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
    Next lngCont
    sb.PercentComplete = 25
    Sheets("Proposta").Range("E53").value = Workbooks([xlImporta]).Sheets("0").Range("H96").value
   'Sheets("Proposta").Range("K83").value = Workbooks([xlImporta]).Sheets("0").Range("H97").value ' Recursos Proprios   GSOL00878466
    For lngCont = 91 To 95
        Sheets("Proposta").Range("D" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("G" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("I" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        'implementa|fffd||fffd|o recursos pr|fffd|prios
        If CDate(Workbooks([xlImporta]).Sheets("0").Range("B2").value) < CDate("31/07/2004") Then
           If Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value <> vbNullString Then _
              Sheets("Proposta").Range("K" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value / Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Else
           Sheets("Proposta").Range("K" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
        End If
        Sheets("Proposta").Range("O" & [lngCont] - 17).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
        'Sprint 9 RNM Alocar o empreendimento Bacen de acordo com o componente. INI
        Dim lobjintegra2 As Object
        Dim lobjemp2 As Object
        Dim strTipoCult As String
        Dim lngcodCult As Byte
        
        Set lobjintegra2 = CreateObject("PreencherEmpreendimento.Integracao")
        Set lobjemp2 = lobjintegra2.IsValido(Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value, "0")
        
        If Not lobjemp2 Is Nothing Then
            protPlan.DesprotegePlanilha
            strTipoCult = LTrim(RTrim(lobjintegra2.TipodeCultura(lobjemp2.codigo)))
            Select Case UCase(LTrim(RTrim(strTipoCult)))
                Case "OLERICULTURA": lngcodCult = 1
                Case "PERMANENTE": lngcodCult = 2
                Case "DEMAIS CULTURAS": lngcodCult = 3
                Case "HORT|fffd|CULAS": lngcodCult = 4
                Case "": lngcodCult = 3
            End Select
            
            Sheets("Proposta").Range("PropBacen" & [lngCont] - 90).value = lobjemp2.codigo
            Sheets("Proposta").Range("O" & [lngCont] - 17).ClearComments
            Sheets("Proposta").Range("O" & [lngCont] - 17).AddComment
            Sheets("Proposta").Range("O" & [lngCont] - 17).Comment.text text:="Produto = " & LTrim(RTrim(lobjemp2.produto.descricao)) & Chr(10) & _
                                           "Finalidade = " & LTrim(RTrim(lobjemp2.Finalidade.descricao)) & Chr(10) & _
                                           "Atividade = " & LTrim(RTrim(lobjemp2.ATIVIDADE.descricao)) & Chr(10) & _
                                           "Modalidade =  " & LTrim(RTrim(lobjemp2.Modalidade.descricao)) & Chr(10) & _
                                           "Variedade = " & LTrim(RTrim(lobjemp2.variedade.descricao)) & Chr(10) & _
                                           "Cod.Empreendimento = " & lobjemp2.codigo & Chr(10) & _
                                           "Tipo de Cultura = [" & lngcodCult & "] " & strTipoCult
            'aumentar a caixa de coment|fffd|rio
            Sheets("Proposta").Range("O" & [lngCont] - 17).Comment.Shape.ScaleHeight 2.3, msoFalse, msoScaleFromTopLeft
            Sheets("Proposta").Range("O" & [lngCont] - 17).Comment.Shape.ScaleWidth 3.1, msoFalse, msoScaleFromTopLeft
            Sheets("Proposta").Range("O" & [lngCont] - 17).value = Left(lobjemp2.produto.descricao, 15)
            Sheets("Proposta").Range("O" & [lngCont] - 17).Comment.Visible = False
        Else
            Sheets("Proposta").Range("PropBacen" & [lngCont] - 90).value = vbNullString
            Sheets("Proposta").Range("O" & [lngCont] - 17).value = vbNullString  'Produto
            Sheets("Proposta").Range("O" & [lngCont] - 17).ClearComments                ' Primeiro apaga o coment|fffd|rio se houver ou n|fffd|o

        End If
        Set lobjintegra2 = Nothing
        Set lobjemp2 = Nothing
        'Sprint 9 - RNM Fim da aloca|fffd||fffd|o de empreendimentos FIM
    Next lngCont
    sb.PercentComplete = 30
    For lngCont = 99 To 108
        Sheets("Proposta").Range("G" & [lngCont] - 5).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("J" & [lngCont] - 5).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("M" & [lngCont] - 5).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        Sheets("Proposta").Range("P" & [lngCont] - 5).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
    Next lngCont
    sb.PercentComplete = 35
    For lngCont = 112 To 116
        Sheets("Proposta").Range("E" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("G" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("H" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        Sheets("Proposta").Range("J" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
        Sheets("Proposta").Range("K" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
        Sheets("Proposta").Range("M" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
        Sheets("Proposta").Range("P" & [lngCont] - 8).value = Workbooks([xlImporta]).Sheets("0").Range("I" & [lngCont]).value
    Next lngCont
    sb.PercentComplete = 40
'    Sheets("Proposta").Range("E113").value = Workbooks([xlImporta]).Sheets("0").Range("C119").value
'    Sheets("Proposta").Range("G113").value = Workbooks([xlImporta]).Sheets("0").Range("D119").value
'    Sheets("Proposta").Range("H113").value = Workbooks([xlImporta]).Sheets("0").Range("E119").value
'    Sheets("Proposta").Range("J113").value = Workbooks([xlImporta]).Sheets("0").Range("F119").value
'    Sheets("Proposta").Range("K113").value = Workbooks([xlImporta]).Sheets("0").Range("G119").value
'    Sheets("Proposta").Range("M113").value = Workbooks([xlImporta]).Sheets("0").Range("H119").value
'    Sheets("Proposta").Range("P113").value = Workbooks([xlImporta]).Sheets("0").Range("I119").value
    
    Sheets("Proposta").Range("E116").value = Workbooks([xlImporta]).Sheets("0").Range("K120").value
    If Sheets("Proposta").Range("E116").value = vbNullString Then Sheets("Proposta").Range("E116").value = "Mensal"
    Sheets("Proposta").Range("D120").value = Workbooks([xlImporta]).Sheets("0").Range("C120").value
    For lngCont = 120 To 124
'        Sheets("Proposta").Range("D" & [lngCont]).Value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).Value
        If Val(Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value) > 1 Then
           Sheets("Proposta").Range("E" & [lngCont]).value = Val(Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value) / 100
        Else
           Sheets("Proposta").Range("E" & [lngCont]).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        End If
    Next lngCont
    sb.PercentComplete = 45
    lngLinSel = 130
    Calculate
    For lngCont = 128 To 137
        Sheets("Proposta").Range("L" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("L" & [lngLinSel] + 1).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("L" & [lngLinSel] + 2).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        lngLinSel = lngLinSel + 3
        If Sheets("Proposta").Range("M" & [lngCont] + 76).value > 0 Then
           If Workbooks([xlImporta]).Sheets("0").Range("I" & [lngCont]).value = vbNullString Then
              Sheets("Proposta").Range("D" & [lngCont] + 76).value = Sheets("Proposta").Range("S" & [lngCont] + 76).value
           Else
              Sheets("Proposta").Range("D" & [lngCont] + 76).value = Workbooks([xlImporta]).Sheets("0").Range("I" & [lngCont]).value
           End If
        End If
    Next lngCont
    sb.PercentComplete = 50
    For lngCont = 141 To 144
        Sheets("Proposta").Range("D" & [lngCont] + 45).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("H" & [lngCont] + 45).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("J" & [lngCont] + 45).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        Sheets("Proposta").Range("O" & [lngCont] + 45).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
    Next lngCont
    sb.PercentComplete = 55
        
    'GSOL00064951
    If Workbooks([xlImporta]).Sheets("0").Range("C167").value = vbNullString Then
       Sheets("Proposta").Range("S275").value = 1
    Else
       Sheets("Proposta").Range("S275").value = Workbooks([xlImporta]).Sheets("0").Range("C167").value
    End If
    'GSOL00094929
    For lngCont = 168 To 175
        Sheets("Proposta").Range("C" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("E" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("G" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        
        If CDate(Workbooks([xlImporta]).Sheets("0").Range("B2").value) < CDate("05/12/2006") Then
           Sheets("Proposta").Range("N" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
           Sheets("Proposta").Range("I" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
        Else
           Sheets("Proposta").Range("I" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
           Sheets("Proposta").Range("J" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
           Sheets("Proposta").Range("L" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
           Sheets("Proposta").Range("N" & [lngCont] + 112).value = Workbooks([xlImporta]).Sheets("0").Range("I" & [lngCont]).value
        End If
    Next lngCont
    
    For lngCont = 178 To 185
        Sheets("Proposta").Range("C" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("C" & [lngCont]).value
        Sheets("Proposta").Range("E" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("D" & [lngCont]).value
        Sheets("Proposta").Range("G" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("E" & [lngCont]).value
        Sheets("Proposta").Range("I" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("F" & [lngCont]).value
        Sheets("Proposta").Range("J" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("G" & [lngCont]).value
        Sheets("Proposta").Range("L" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("H" & [lngCont]).value
        Sheets("Proposta").Range("N" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("I" & [lngCont]).value
        Sheets("Proposta").Range("O" & [lngCont] + 115).value = Workbooks([xlImporta]).Sheets("0").Range("J" & [lngCont]).value
    Next lngCont
    xl99Auxi.Range("GK18").value = Workbooks([xlImporta]).Sheets("0").Range("C177").value
    
    sb.PercentComplete = 56
     
    Sheets("Proposta").Range("D237").value = Workbooks([xlImporta]).Sheets("0").Range("C150").value
    Sheets("Proposta").Range("M237").value = Workbooks([xlImporta]).Sheets("0").Range("D150").value
    Sheets("Proposta").Range("D242").value = Workbooks([xlImporta]).Sheets("0").Range("C154").value
    Sheets("Proposta").Range("E245").value = Workbooks([xlImporta]).Sheets("0").Range("F154").value
    Sheets("Proposta").Range("E246").value = Workbooks([xlImporta]).Sheets("0").Range("G154").value
    Sheets("Proposta").Range("E252").value = Workbooks([xlImporta]).Sheets("0").Range("C158").value
    Sheets("Proposta").Range("F252").value = Workbooks([xlImporta]).Sheets("0").Range("D158").value
    Sheets("Proposta").Range("E253").value = Workbooks([xlImporta]).Sheets("0").Range("C159").value
    Sheets("Proposta").Range("F253").value = Workbooks([xlImporta]).Sheets("0").Range("D159").value
    Sheets("Proposta").Range("D270").value = Workbooks([xlImporta]).Sheets("0").Range("C163").value
    Sheets("Proposta").Range("E272").value = Workbooks([xlImporta]).Sheets("0").Range("C166").value
    Sheets("Proposta").Range("E273").value = Workbooks([xlImporta]).Sheets("0").Range("D166").value
    Sheets("Proposta").Range("J273").value = Workbooks([xlImporta]).Sheets("0").Range("E166").value
    sb.PercentComplete = 57

    'Importa dados de atividades PGPAF nos Or|fffd|amentos
    Dim i_ As Integer
    Dim j_ As Integer
    Dim temp_ As String

    For i_ = 190 To 199
        For j_ = 3 To 5
           temp_ = Workbooks([xlImporta]).Sheets("0").Cells(i_, j_).value

           If Left$(temp_, 1) <> "" And Left$(temp_, 1) <> "0" Then
               xl1Orca.Cells(j_ + 13, (i_ - 182) + (i_ - 190) * 16).value = temp_
           End If
        Next
    Next
    
    'Atividade PGPAF do Projeto
    temp_ = Workbooks([xlImporta]).Sheets("0").Range("G190").value
    xl2Prop.Range("J47").value = temp_

    If temp_ = "N|fffd|o se aplica." Then
        xl2Prop.Range("J47").Interior.ColorIndex = 15
        xl2Prop.Range("J47:O47").Locked = True

    Else
        xl2Prop.Range("J47").Interior.ColorIndex = xlNone
        xl2Prop.Range("J47:O47").Locked = False
    End If
    
    '------------

    'GSOL00083049-Declara|fffd||fffd|o Bonus PRONAF
    xl99Auxi.Range("GG12").value = Workbooks([xlImporta]).Sheets("0").Range("K69").value
    xl99Auxi.Range("GG13").value = Workbooks([xlImporta]).Sheets("0").Range("K70").value
    xl99Auxi.Range("GG14").value = Workbooks([xlImporta]).Sheets("0").Range("K71").value
    xl99Auxi.Range("GG15").value = Workbooks([xlImporta]).Sheets("0").Range("K72").value
    xl99Auxi.Range("GH12").value = Workbooks([xlImporta]).Sheets("0").Range("K69").value
    
    Windows([xlImporta]).Activate
    sb.Show "Importando os dados ", vbNullString, 59
    lngArqExp = ActiveWorkbook.Sheets.Count - 1
    For Each xlPlan In ActiveWorkbook.Sheets
        lngOrca = Val(xlPlan.Name)
        If lngOrca > 0 Then
           oFuncao = "selORCA" & Format(lngOrca, "00")
           Windows([xlCusteio]).Activate
           sb.Show "Importando os dados ", vbNullString, 60 + 30 / lngArqExp
           Run [oFuncao]
           Range("flagORCA_").value = 1
           Select Case lngOrca
                  Case 1
                       colCel1 = "C"
                       colCel2 = "D"
                       colCel3 = "E"
                       colCel4 = "F"
                       colCel5 = "G"
                       colCel6 = "I"
                       colCel7 = "H"
                       colCel8 = "L"
                       colCel9 = "M"
                       colCel10 = "J" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 2
                       colCel1 = "T"
                       colCel2 = "U"
                       colCel3 = "V"
                       colCel4 = "W"
                       colCel5 = "X"
                       colCel6 = "Z"
                       colCel7 = "Y"
                       colCel8 = "AC"
                       colCel9 = "AD"
                       colCel10 = "AA" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 3
                       colCel1 = "AK"
                       colCel2 = "AL"
                       colCel3 = "AM"
                       colCel4 = "AN"
                       colCel5 = "AO"
                       colCel6 = "AQ"
                       colCel7 = "AP"
                       colCel8 = "AT"
                       colCel9 = "AV"
                       colCel10 = "AR" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 4
                       colCel1 = "BB"
                       colCel2 = "BC"
                       colCel3 = "BD"
                       colCel4 = "BE"
                       colCel5 = "BF"
                       colCel6 = "BH"
                       colCel7 = "BG"
                       colCel8 = "BK"
                       colCel9 = "BL"
                       colCel10 = "BI" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 5
                       colCel1 = "BS"
                       colCel2 = "BT"
                       colCel3 = "BU"
                       colCel4 = "BV"
                       colCel5 = "BW"
                       colCel6 = "BY"
                       colCel7 = "BX"
                       colCel8 = "CB"
                       colCel9 = "CC"
                       colCel10 = "BZ" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 6
                       colCel1 = "CJ"
                       colCel2 = "CK"
                       colCel3 = "CL"
                       colCel4 = "CM"
                       colCel5 = "CN"
                       colCel6 = "CP"
                       colCel7 = "CO"
                       colCel8 = "CS"
                       colCel9 = "CT"
                       colCel10 = "CQ" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 7
                       colCel1 = "DA"
                       colCel2 = "DB"
                       colCel3 = "DC"
                       colCel4 = "DD"
                       colCel5 = "DE"
                       colCel6 = "DG"
                       colCel7 = "DF"
                       colCel8 = "DJ"
                       colCel9 = "DK"
                       colCel10 = "DH" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 8
                       colCel1 = "DR"
                       colCel2 = "DS"
                       colCel3 = "DT"
                       colCel4 = "DU"
                       colCel5 = "DV"
                       colCel6 = "DX"
                       colCel7 = "DW"
                       colCel8 = "EA"
                       colCel9 = "EB"
                       colCel10 = "DY" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 9
                       colCel1 = "EI"
                       colCel2 = "EJ"
                       colCel3 = "EK"
                       colCel4 = "EL"
                       colCel5 = "EM"
                       colCel6 = "EO"
                       colCel7 = "EN"
                       colCel8 = "ER"
                       colCel9 = "ES"
                       colCel10 = "EP" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
                  Case 10
                       colCel1 = "EZ"
                       colCel2 = "FA"
                       colCel3 = "FB"
                       colCel4 = "FC"
                       colCel5 = "FD"
                       colCel6 = "FF"
                       colCel7 = "FE"
                       colCel8 = "FI"
                       colCel9 = "FJ"
                       colCel10 = "FG" 'GSOL00863772 - 03|fffd| Sprint Dez/2014
           End Select
           
           strOrca = Trim(Str(lngOrca))
           If CDate(Workbooks([xlImporta]).Sheets("0").Range("B2").value) >= CDate("22/07/2004") Then
              protPlan.DesprotegePlanilha
              Range("SQORCA" & Format([lngOrca], "00")).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("J3").value ' Sequencial do Or|fffd|amento
              Range("DTORCA" & Format([lngOrca], "00")).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("K3").value ' Data carga do Or|fffd|amento
              Range([colCel2] & "7").Select
              
              protPlan.DesprotegePlanilha
              Range([colCel2] & "7").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B3").value
              protPlan.DesprotegePlanilha
              Range([colCel2] & "8").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B4").value
              protPlan.DesprotegePlanilha
              Range([colCel2] & "9").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B5").value
              Range([colCel2] & "11").Select
              Range([colCel2] & "11").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B6").value
              protPlan.DesprotegePlanilha
              Range([colCel7] & "9").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B10").value   'Nivel tecnologico
                                          
              Dim lobjintegra As Object
              Dim lobjemp As Object
              Set lobjintegra = CreateObject("PreencherEmpreendimento.Integracao")
              'Set lobjemp = lobjintegra.IsValido(Workbooks([xlImporta]).Sheets([strOrca]).Range("E6").Value, Workbooks([xlImporta]).Sheets([strOrca]).Range("E7").Value)
              '20140313 -RNM Foi substitu|fffd|do a linha acima pelo par|fffd|metro Sistema de produ|fffd||fffd|o = 0), devido inconsist|fffd|ncia do Componente.
              Set lobjemp = lobjintegra.IsValido(Workbooks([xlImporta]).Sheets([strOrca]).Range("E6").value, "0")
             
              protPlan.DesprotegePlanilha
              If Not lobjemp Is Nothing Then
                strTipoCult = LTrim(RTrim(lobjintegra.TipodeCultura(lobjemp.codigo)))
              End If
              Select Case UCase(LTrim(RTrim(strTipoCult)))
                Case "OLERICULTURA": lngcodCult = 1
                Case "PERMANENTE": lngcodCult = 2
                Case "DEMAIS CULTURAS": lngcodCult = 3
                Case "HORT|fffd|CULAS": lngcodCult = 4
                Case "": lngcodCult = 3
              End Select
              
              If Not lobjemp Is Nothing Then
                  Range([colCel2] & "12").ClearComments
                  Range([colCel2] & "12").AddComment
                  Range([colCel2] & "12").Comment.text text:="Produto = " & LTrim(RTrim(lobjemp.produto.descricao)) & Chr(10) & _
                                                 "Finalidade = " & LTrim(RTrim(lobjemp.Finalidade.descricao)) & Chr(10) & _
                                                 "Atividade = " & LTrim(RTrim(lobjemp.ATIVIDADE.descricao)) & Chr(10) & _
                                                 "Modalidade =  " & LTrim(RTrim(lobjemp.Modalidade.descricao)) & Chr(10) & _
                                                 "Variedade = " & LTrim(RTrim(lobjemp.variedade.descricao)) & Chr(10) & _
                                                 "Cod.Empreendimento = " & lobjemp.codigo & Chr(10) & _
                                                 "Tipo de Cultura = [" & lngcodCult & "] " & strTipoCult
                  Range([colCel2] & "12").Comment.Visible = False
                  ' INICIO GSOL00910095: copia o valor de cultura consorciada para a planilha
                  Dim codigoOrcamentoAtual As String, codigoCulturaConsorciada As String
                  Dim programaPRONAF As Boolean
                
                  codigoOrcamentoAtual = xl1Orca.Range("BacenOrca" & Format(Range("A11").value, "00")).value
                  codigoCulturaConsorciada = IIf(xl1Orca.Range([colCel10] & "13").value = "Sim", "8", "0")
                
                  protPlan.DesprotegePlanilha
                  programaPRONAF = IIf(InStr(xl2Prop.Range("E46"), "PRONAF") > 0, True, False)
                  xl1Orca.Range([colCel10] & "13").value = IIf(Mid(codigoOrcamentoAtual, 12, 1) = "8", "Sim", "N|fffd|o")
                  'Tipo de Cultura
                  protPlan.DesprotegePlanilha
                  xl1Orca.Range([colCel10] & "138").value = strTipoCult
                        
                        
                  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
                  If lobjemp.Modalidade.descricao = "BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O" Then
                     xl1Orca.Range([colCel5] & "15").value = "Produtividade/T"
                  Else
                     xl1Orca.Range([colCel5] & "15").value = "Produtividade/Ha"
                  End If
                                                 
                  'aumentar a caixa de coment|fffd|rio
                  Range([colCel2] & "12").Comment.Shape.ScaleHeight 2.3, msoFalse, msoScaleFromTopLeft
                  Range([colCel2] & "12").Comment.Shape.ScaleWidth 3.1, msoFalse, msoScaleFromTopLeft
                  Range([colCel2] & "12").value = lobjemp.produto.descricao
                  Range([colCel8] & "9").value = LTrim(RTrim(lobjemp.variedade.descricao)) '- Variedade
                  protPlan.DesprotegePlanilha
                  Range([colCel9] & "9").value = lngcodCult ' c|fffd|digo de cultura
                  
                  ' JSR - GSOL00910095 - IMPORTA CAMPO 'CULTURA CONSORCIADA'
                  protPlan.DesprotegePlanilha
                  Range([colCel10] & "13").value = IIf(Mid(Workbooks([xlImporta]).Sheets([strOrca]).Range("E6").value, 12, 1) = "8", "Sim", "N|fffd|o")
                  Range([colCel10] & "138").value = strTipoCult
              Else
                  Range([colCel2] & "12").value = vbNullString  'Produto
                  Range([colCel8] & "9").value = vbNullString  '- Variedade
                  Range([colCel10] & "13").value = "N|fffd|o" ' cultura consorciada - GSOL00910095 03/2016 - GSOL00982015
                  Range([colCel10] & "138").value = vbNullString ' Tipo de cultura para Cr|fffd|tica
              End If
              Set lobjintegra = Nothing
              Set lobjemp = Nothing
              
              'flagBusca = 0
              Range([colCel8] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E6").value 'GSOL00660171 - Cod Empreendimento
              Range([colCel8] & "13").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E7").value 'GSOL00660171 - Cod Sist Produ|fffd||fffd|o
              If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
              Range([colCel9] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E8").value 'GSOL00660171 - Unidade
              If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
              Range([colCel6] & "7").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("F7").value
              If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
              Range([colCel6] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("F8").value
              
              
             ' ATIVIDADE ZONEAMENTO
              Range([colCel4] & "13").value = CStr(Workbooks([xlImporta]).Sheets([strOrca]).Range("A16").value) ' Solo
              Range([colCel4] & "14").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B16").value ' Ciclo
              
              ArrayVar() = Range("Tipo_Perc_Risco") 'Armazena referencia baseado no Gerenciador de Nomes

              For i = 1 To UBound(ArrayVar)
                If ArrayVar(i, 1) = CInt(Workbooks([xlImporta]).Sheets([strOrca]).Range("C16").value) Then
                     Range([colCel7] & "14").value = CStr(ArrayVar(i, 2)) ' Risco
                   Exit For
                End If
              Next i
              
           '   Range([colCel7] & "14").value = CStr(Workbooks([xlImporta]).Sheets([strOrca]).Range("C16").value)
              
              'CAT|fffd|LOGO - INI - RNM  Importa|fffd||fffd|o de dados de Plantio
              Range([colCel2] & "19").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("A15").value
              Range([colCel3] & "19").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B15").value
              Range([colCel5] & "19").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("C15").value
              Range([colCel7] & "19").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D15").value
              'CAT|fffd|LOGO - FIM - RNM  Importa|fffd||fffd|o de dados de Plantio
              If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
              If Workbooks([xlImporta]).Sheets([strOrca]).Range("F9").value = vbNullString Then
                Range([colCel10] & "7").value = "LAVOURA"
              Else
                Range([colCel10] & "7").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("F9").value
              End If
              
              
              'Sprint11 - Inclus|fffd|o dos Or|fffd|amentos at|fffd| 1 Milh|fffd|o - INI tipo de or|fffd|amento
              If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
              If Workbooks([xlImporta]).Sheets([strOrca]).Range("E10").value = vbNullString Then
                Range([colCel9] & "1").value = 0
              Else
                Range([colCel9] & "1").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E10").value
              End If
              'Sprint11 - Inclus|fffd|o dos Or|fffd|amentos at|fffd| 1 Milh|fffd|o - fim  tipo de or|fffd|amento
              
              'atualizar a lista para n|fffd|o invalidar o empreendimento a ser inserido
              ' Range([colCel2] & "12:" & [colCel5] & "12").Select
              ' Calculate
              ' RNM ALTERAR
              ' With Selection.Validation
              '      .Delete
              '      If Range([colCel2] & "11").Value = vbNullString Then
              '         .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
              '              xlBetween, Formula1:="Selecione a Atividade/Finalidade"
              '      Else
              '       '  .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
              '              xlBetween, Formula1:="=listaBACEN" & Cells(11, 12 + (lngOrca - 1) * 17).Value
              '      End If
              '     ' .IgnoreBlank = True
              '     ' .InCellDropdown = True
              '     ' .InputTitle = ""
              '     ' .ErrorTitle = ""
              '     ' .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
              '     ' .ErrorMessage = ""
              '     ' .ShowInput = True
              '     ' .ShowError = False
              ' End With

               'atualizacao da valida|fffd||fffd|o. Os campos alterados servem para "autoformata|fffd||fffd|o".
              ' If Range([colCel2] & "11").Value <> vbNullString Then
              '     Cells(12, 12 + (lngOrca - 1) * 17).FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
              '                                Cells(11, 12 + (lngOrca - 1) * 17).Value & "_COD,2,0))"
              '     Cells(12, 13 + (lngOrca - 1) * 17).FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
              '                                Cells(11, 12 + (lngOrca - 1) * 17).Value & "_COD,4,0))"
              '  End If
              'Range([colCel2] & "12").Value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B7").Value
              'flagBusca = 0
              
              flagBusca = 1
              protPlan.DesprotegePlanilha
              Range([colCel2] & "13").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B8").value
              Range([colCel2] & "14").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B9").value
              Range([colCel7] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("C7").value  'GSOL00131364
              Range([colCel10] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D7").value 'GSOL00863772 - 03|fffd| Sprint Dez/2014 Tipo de cultura
              
              Range([colCel2] & "5").Select
              
              If CDate(Workbooks([xlImporta]).Sheets("0").Range("B2").value) >= CDate("13/08/2004") Then
                If Range([colCel10] & "7").value = "EXTRATIVISMO" Then
                    For lngCont = 16 To 18
                        flagBusca = 1
                        Range([colCel1] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("A" & [lngCont] - 5).value
                        Range([colCel4] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D" & [lngCont] - 5).value
                        
                        Range([colCel5] & [lngCont]).Select
                        If lngCont = 16 Then
                          ActiveCell.FormulaR1C1 = _
                          "=IF(RC[-4]<>"""",IF(ISERROR((R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),0,(R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),"""")"
                        ElseIf lngCont = 17 Then
                          ActiveCell.FormulaR1C1 = _
                          "=IF(RC[-4]<>"""",IF(ISERROR((R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),0,(R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),"""")"
                        Else
                          ActiveCell.FormulaR1C1 = _
                          "=IF(RC[-4]<>"""",IF(ISERROR((R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),0,(R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),"""")"
                        End If
                    Next lngCont
                Else
                    For lngCont = 16 To 18
                        flagBusca = 1
                        Range([colCel1] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("A" & [lngCont] - 5).value
                        Range([colCel4] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D" & [lngCont] - 5).value
                        Range([colCel5] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E" & [lngCont] - 5).value
                    Next lngCont
                End If
              Else
                 Range([colCel1] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B3").value
                 Range([colCel4] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B11").value
                 Range([colCel5] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B10").value
              End If
              
              For lngCont = 21 To 84
                  Range([colCel1] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("A" & [lngCont]).value
                  Range([colCel2] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B" & [lngCont]).value
                  Range([colCel3] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("C" & [lngCont]).value
                  Range([colCel4] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D" & [lngCont]).value
                  Range([colCel5] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E" & [lngCont]).value
                 ' Range([colCel6] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("F" & [lngCont]).value
                 ' Formula determina o Desembolso -  173755 (RTC) - (2017-7660731)
              Next lngCont
           Else
              Range([colCel2] & "7").Select
              protPlan.DesprotegePlanilha
              Range([colCel2] & "7").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B3").value
              protPlan.DesprotegePlanilha
              Range([colCel2] & "13").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B4").value
              Range([colCel2] & "11").Select
              Range([colCel2] & "14").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B6").value
'              Range([colCel2] & "16").Value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B7").Value
              Range([colCel2] & "12").value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B8").value
              Range([colCel2] & "5").Select
              
              Range([colCel1] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B3").value
              Range([colCel4] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B7").value
              Range([colCel5] & 16).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B6").value
              
              For lngCont = 21 To 84
                  Range([colCel1] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("A" & [lngCont]).value
                  Range([colCel2] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("B" & [lngCont]).value
                  Range([colCel3] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("C" & [lngCont]).value
                  Range([colCel4] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("D" & [lngCont]).value
                  Range([colCel5] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("E" & [lngCont]).value
                  'Range([colCel6] & [lngCont]).value = Workbooks([xlImporta]).Sheets([strOrca]).Range("F" & [lngCont]).value
                  'Formula determina a parcela de Desembolso  173755 (RTC) - (2017-7660731)
              Next lngCont
           End If
           Windows([xlImporta]).Activate
           lngArqExp = lngArqExp + 1
           sb.Show "Importando os dados ", vbNullString, 60 + 30 / lngArqExp
        End If
    Next xlPlan
    
    flagBusca = 0
    'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    Application.ScreenUpdating = False
    bd10Geodesica.Activate
    Application.ScreenUpdating = False
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    bd10Geodesica.Range("A101:S" & Rows.Count).ClearContents
    bd10Geodesica.Range("M2:N99").ClearContents
    Application.ScreenUpdating = False
    
    lngLinBD = 200
    lngLinSel = 101
    
    Do While lngLinSel <= (Workbooks([xlImporta]).Sheets("0").Range("AB100").value)
       DoEvents
'       bd10Geodesica.Range("A" & [lngLinSel]).FormulaLocal = "=CONCATENAR(" & "C" & [lngLinSel] & ";D" & [lngLinSel] & ")"      'Chave da invers|fffd|o
'       bd10Geodesica.Range("B" & [lngLinSel]).FormulaLocal = "=CONCATENAR(" & "A" & [lngLinSel] & ";SE(N|fffd|M.CARACT(F" & [lngLinSel] & ")=1;" & """" & "0" & """" & ";" & """" & """" & ");F" & _
                                                                 [lngLinSel] & ";SE(N|fffd|M.CARACT(I" & [lngLinSel] & ")=1;" & """" & "0" & """" & ";" & """" & """" & ");I" & [lngLinSel] & ")" 'Chave da Gleba
       bd10Geodesica.Range("C" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AC" & [lngLinSel]).value   ' SQ_INV
       bd10Geodesica.Range("F" & [lngLinSel]).value = Format(Str(Workbooks([xlImporta]).Sheets("0").Range("AF" & [lngLinSel]).value), "00")     ' CD_GLB
       bd10Geodesica.Range("G" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AG" & [lngLinSel]).value   ' TIPO FORMATO
       If Workbooks([xlImporta]).Sheets("0").Range("AH" & [lngLinSel]).value = vbNullString Then
         bd10Geodesica.Range("H" & [lngLinSel]).value = 0
       Else
         bd10Geodesica.Range("H" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AH" & [lngLinSel]).value   ' AR_NAO_CUL
       End If
       bd10Geodesica.Range("I" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AI" & [lngLinSel]).value   ' SQ_COO_GLE
       bd10Geodesica.Range("J" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AJ" & [lngLinSel]).value   ' VR_LAT
       bd10Geodesica.Range("K" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AK" & [lngLinSel]).value   ' VR_LGT
       bd10Geodesica.Range("L" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AL" & [lngLinSel]).value   ' VR_ALT
'       bd10Geodesica.Range("M" & [lngLinSel]).FormulaR1C1 = "=ROW(RC[-1])"               'ID
'       bd10Geodesica.Range("N" & [lngLinSel]).FormulaLocal = "=PROCV(G" & [lngLinSel] & ";Cod_Gleba;2;FALSO)" ' TP_GLB
'       bd10Geodesica.Range("O" & [lngLinSel]).FormulaLocal = "=PROCV(G" & [lngLinSel] & ";Cod_Gleba;3;FALSO)" 'Limite"
'       bd10Geodesica.Range("P" & [lngLinSel]).FormulaLocal = "=CONCATENAR(C" & [lngLinSel] & ";F" & [lngLinSel] & ")"   'Gleba/ponto
'       bd10Geodesica.Range("Q" & [lngLinSel]).value = 1
'       Fixo  =1
        If Workbooks([xlImporta]).Sheets("0").Range("AP" & [lngLinSel]).value <> vbNullString Then
                bd10Geodesica.Range("T" & [lngLinSel]).value = Workbooks([xlImporta]).Sheets("0").Range("AP" & [lngLinSel]).value ' Status
        End If
       lngLinSel = lngLinSel + 1
       
    Loop
    'Atualizar a tela
   
'    For i = 101 To Range("B99").value + 100
'      bd10Geodesica.Range("R" & [i]).FormulaLocal = "=SOMASE($P$101:$Q$" & bd10Geodesica.Range("B99").value + 100 & ";P" & [i] & ";$Q$101:$Q$" & bd10Geodesica.Range("B99").value + 100 & ")"
'    Next i
    
    Application.ScreenUpdating = False
    'Atualiza as coordenadas geod|fffd|sicas
    atualizaRef
    
    protPlan.DesprotegePlanilha
'    lngLinSel = 101
'    Do While lngLinSel <= (bd10Geodesica.Range("B99").value + 100)
'        bd10Geodesica.Range("D" & [lngLinSel]).FormulaLocal = "=PROCV(C" & [lngLinSel] & ";Inv_Geodesica;2;FALSO)"  'NOME DA INVERS|fffd|O
'        bd10Geodesica.Range("E" & [lngLinSel]).FormulaLocal = "=PROCV(C" & [lngLinSel] & ";Inv_Geodesica;3;FALSO)"   'Cod Empreendimento
'        lngLinSel = lngLinSel + 1
'    Loop
    Call InserirFormulasGleba(101)
    Call OrdenarListaGleba
    Call InserirResumoGleba
    Call OrdenarResumoGleba
    Call CargaIniGeodesica
    Call LimparGlebasSemInv
    
   'Ordenar
   'frmGeodesica.Ordenar_Geodesica "SQ_Geodesica", "Geodesica", "A100:M" & bd10Geodesica.Range("B99").value + 100, "B100:B" & bd10Geodesica.Range("B99").value + 100
  
   protPlan.ProtegePlanilha
   'T|fffd|RMINO DE COORDENADAS
   'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    
    Windows([xlCusteio]).Activate
    Workbooks([xlCusteio]).Sheets("Orcamento").Range("flagORCA_").value = 0
    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    Windows([xlImporta]).Activate
    sb.Show "Importando os dados ", vbNullString, 93
    For Each xlPlan In ActiveWorkbook.Sheets
        If xlPlan.Name = "-1" Then boProp = True
    Next xlPlan
    If boProp Then
       Sheets("-1").Select
       lngLinSel = 2
       
       While Range("H" & [lngLinSel]).value <> vbNullString
            If ldtVersaoDados < CDate("07/07/2008") Then 'dados adicionais do cadastro de clientes
                Cells(lngLinSel, "CP").value = -1
                Cells(lngLinSel, "CT").value = Cells(lngLinSel, "CT").value & " Porte; DAP; Dados para correspondencia"
            End If
             lngLinSel = lngLinSel + 1
       Wend
       Rows("2:" & [lngLinSel] - 1).Select
       Application.CutCopyMode = False
       Selection.Copy
       Windows([xlCusteio]).Activate
       Range("A2").Select
       Selection.PasteSpecial Paste:=xlValues
       sb.Show "Importando os dados ", vbNullString, 95
       Application.CutCopyMode = False
       protPlan.ProtegePlanilha
    End If
    boProp = False
    Windows([xlCusteio]).Activate
    sb.Show "Importando os dados ", vbNullString, 95
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    Windows([xlImporta]).Activate
    sb.Show "Importando os dados ", vbNullString, 95
    For Each xlPlan In ActiveWorkbook.Sheets
        If xlPlan.Name = "-2" Then boProp = True
    Next xlPlan
    If boProp Then
       Sheets("-2").Select
       lngLinSel = 2
       While Range("G" & [lngLinSel]).value <> vbNullString
             lngLinSel = lngLinSel + 1
       Wend
       Rows("2:" & [lngLinSel] - 1).Select
       Application.CutCopyMode = False
       Selection.Copy
       Windows([xlCusteio]).Activate
       Range("A2").Select
       Selection.PasteSpecial Paste:=xlValues
       sb.Show "Importando os dados ", vbNullString, 95
       Application.CutCopyMode = False
       protPlan.ProtegePlanilha
    End If
     
    Windows([xlImporta]).Activate
    sb.Show "Importando os dados ", vbNullString, 96
    ActiveWorkbook.Close (False)
    Windows([xlCusteio]).Activate
    sb.Show "Importando os dados ", vbNullString, 98
    Calculate
    xl2Prop.Activate
    protPlan.DesprotegePlanilha
    
    
    'GSOL01923226 - RNM - INI
    'Omitir da proposta a TX de Juros, quando for um destes programas FNE/PRONAF COMUM (433) e o programa FNE/PRONAF GRUPO "A" - FNE (368)
     If Range("S46").value = 382 Or Range("S46").value = 368 Or Range("S46").value = 401 Then
        Rows("320:326").Hidden = True
        ActiveSheet.Shapes("btn_opc_TcrPre").Visible = False
        ActiveSheet.Shapes("btn_opc_TcrPos").Visible = False
        ActiveSheet.Shapes("Caixa de grupo 7635").Visible = False
        Range("S320").value = 0
     Else
        Rows("320:326").Hidden = False
        ActiveSheet.Shapes("btn_opc_TcrPre").Visible = True
        ActiveSheet.Shapes("btn_opc_TcrPos").Visible = True
        ActiveSheet.Shapes("Caixa de grupo 7635").Visible = True
        'Range("S320").value = 1
     End If
    'GSOL01923226 - RNM - FIM
    
   '- al|fffd|quota
    If Range("flagPROAGRO").value <> "0" Then
        TelaProAgro 1
        protPlan.DesprotegePlanilha
        Rows("83:84").Hidden = True
    Else
        TelaProAgro 0
        protPlan.DesprotegePlanilha
        Rows("83:84").Hidden = True   'GSOL01923762 - EXIBIR O CUSTO DE ASSESSORIA
    End If
    
    Range("C8").Select
    
    '-al|fffd|quota [fim] -
    
    'GSOL00083049-Declara|fffd||fffd|o Bonus PRONAF
    telaDeclPRONAF xl99Auxi.Range("flagDecPRONAF").value

    Calculate
    btnATUA_PROP_Clique
    Calculate
    'montaPropIndi
    
    xl3Bene.Activate
    protPlan.DesprotegePlanilha
    Range("E9:E21").value = vbNullString
    Range("E23:E28").value = vbNullString
    Range("E32:E41").value = vbNullString
    Range("E45:E54").value = vbNullString
    Range("E58:E72").value = vbNullString
    Range("O44").value = True
    preencherDadosCorrespondencia 1

    protPlan.ProtegePlanilha
    
    xl5Coob.Activate
    protPlan.DesprotegePlanilha
    Range("E10:E31").value = vbNullString
    Range("E33:E36").value = vbNullString
    Range("E44:E58").value = vbNullString
    protPlan.ProtegePlanilha
    
    'Aliquotas proagro em 2% quando PRONAF (GSOL00223679)
    'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
    'ajustaAliquotasPROAGRO
    
    ' JSR - 28/07/2015 - Apaga os valores unit|fffd|rios das receitas ocultas (inexistentes)
    For i = 130 To 160
        If xl2Prop.Rows(i).EntireRow.Hidden = True And Len(xl2Prop.Range("L" & CStr(i)).value) > 0 Then
            xl2Prop.Range("L" & CStr(i)).value = vbNullString
        End If
    Next i
    
    ' JSR - 03/08/2015 - Define se a cultura |fffd| consorciada nas invers|fffd|es
    For i = 58 To 67
        culturaInversao = Sheets("Proposta").Range("D" & i).value
        If culturaInversao <> vbNullString Then
            protPlan.DesprotegeTudo
            Sheets("Proposta").Range("F" & i).value = retornaCulturaConsorciada(culturaInversao)
            protPlan.ProtegePlanilha
        End If
    Next i
    'RNM - Incluir a prote|fffd||fffd|o ao final da importa|fffd||fffd|o.
    'Application.Run "PlanilhaCusteio.xls!ProtegeAll"
        
    'Edi|fffd||fffd|o dos campos que n|fffd|o est|fffd|o calculando
    xl2Prop.Activate
    Call Edit_CampoFormula
    Calculate
            
    xl0Menu.Activate
    sb.PercentComplete = 100
    MsgBox "Arquivo com dados da proposta importado.", vbInformation

Fim:
    Set sb = Nothing
    Windows([xlCusteio]).Activate
    xl0Menu.Activate
    manterManual = False
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    Exit Sub
     
erroDados:
    MsgBox "Ocorreu um erro no processo.", vbExclamation
    Set sb = Nothing
    Windows([xlCusteio]).Activate
    xl0Menu.Activate
    manterManual = False
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    Exit Sub
End Sub

Sub btnGeraSeap_Clique()
    'RTC 31115 - Plano Safra 2016/2017 - RNM INI
    'Const FINALIDADE_CUSTEIO As Integer = 54
    'RTC 31115 - Plano Safra 2016/2017 - RNM FIM
 
    Dim xlCusteio, xlSEAP As String
    Dim lngLinSel, lngQtMod, lngContPrd, lngCont, lngLinBD, lngLinMod, lngLinProd As Long
    Dim lngSqMod, lngSqIvs As Long
    Dim xlArqExp
    Dim strFilter As String, strAliPROAGRO As String
    Dim xlModelo As String
    Dim flagArquivo, boRecPrp As Boolean
    Dim pCPFCGC As inscricaoFederal
    
    'variaveis do desembolso
    Dim strMes, strAno As String
    Dim dblPcl As Double
    Dim dtPcl As Date
    Dim diaPcl As Long
    '-
    Dim dblVrFin, dblVrPrp, dblPcPrp, dblPcFin As Double
    Dim protPlan As clsProtecao

    'Verifica se |fffd| PRONAF e tem atividade consorciada
    Dim CriticaCons As Boolean
    CriticaCons = True

    Application.ScreenUpdating = False
    xl2Prop.Activate
    If Range("W46").value > 0 Then
    xl1Orca.Activate
        If Range("FQ20").value > 0 Then
        CriticaCons = False
        End If
    End If
    
    'CPMBraxis
    If VerificaProgramaEstiagemValor() = True Then
        MsgBox ("Valor do financiamento maior do que o valor de cr|fffd|dito permitido para o programa")
        Exit Sub
    End If
    
    If VerificaProgramaEstiagem() = True Then
        If xl2Prop.Range("E54") <> "N|fffd|o" Then
            MsgBox ("Custeio Rotativo para o programa selecionado deve ser obrigatoriamente marcado como N|fffd|o")
            Exit Sub
        End If
    End If
    
    'Bloqueia SEAP
    If Not CriticaCons Then
        If MsgBox("Diante da necessidade de identifica|fffd||fffd|o do produto PGPAF, s|fffd| |fffd| poss|fffd|vel empreendimento(s) para uma mesma cultura. Caso existam culturas diferentes, dever|fffd| elaborar nova(s) proposta(s), podendo utilizar as op|fffd||fffd|es 'Exportar/Importar dados da Proposta' para a cria|fffd||fffd|o de nova(s) propostas(s).", vbOKOnly, "Erro atividade") = vbOK Then
            xl2Prop.Activate
            Exit Sub
        End If
    End If

    'Verifica se |fffd| PRONAF e tem atividade consorciada na Atividade Principal
    CriticaCons = True
    xl2Prop.Activate
    If Range("W46").value > 0 Then
        If Range("S30").value > 0 Then
        CriticaCons = False
        End If
    End If

    'Bloqueia SEAP
    If Not CriticaCons Then
        If MsgBox("Para projetos PRONAF, n|fffd|o |fffd| permitido o uso de atividades consorciadas", vbOKOnly, "Erro atividade") = vbOK Then
            xl2Prop.Activate
            Exit Sub
        End If
    End If

    'Se |fffd| PRONAF, exceto Agrinf, e tem mais de uma cultura, n|fffd|o permita.
    Dim CriticaPronaf As Boolean
    CriticaPronaf = True

    xl2Prop.Activate
    If Range("W46").value > 0 And Range("S46").value <> 410 Then 'Verifica se |fffd| PRONAF
        If Range("AA46").value > 1 And Range("AB46").value <> Range("AA46").value Then 'Se tem mais de uma cultura e essa possui o mesmo or|fffd|amento
            CriticaPronaf = False
        End If
    End If

    'Bloqueia SEAP
    'If Not CriticaPronaf Then
    '    If MsgBox("Para projetos PRONAF, n|fffd|o |fffd| permitido a inclus|fffd|o de culturas distintas", vbOKOnly, "Erro atividade") = vbOK Then
    '        xl2Prop.Activate
    '        Exit Sub
    '    End If
    'End If

    'Verificar se uma das atividades do PGPAF |fffd| atividade do projeto
    Dim ErroAtividadePGPAF As Boolean
    ErroAtividadePGPAF = True

    btnATUA_PROP_Clique
    For i = 0 To 3
        'colorIndex = 15 quer dizer que Atv. PGPAF n|fffd|o se Aplica.
        If xl2Prop.Range("J47").Interior.ColorIndex = 15 Or xl2Prop.Cells(47, 10) = xl2Prop.Cells(47, 23 + i) Then
            ErroAtividadePGPAF = False
            Exit For
        End If
    Next

    If ErroAtividadePGPAF Then
        If MsgBox("Atividade PGPAF inv|fffd|lida. Favor alterar para existente(s).", vbOKOnly, "Erro atividade") = vbOK Then
            xl2Prop.Activate
            Exit Sub
        End If
    End If

    If MsgBox("Ser|fffd|o gerados dados para importa|fffd||fffd|o da Ag|fffd|ncia:" & vbCrLf & _
              Range("CD_ORG").value & " - " & _
              Sheets("Proposta").Range("E13").value & vbCrLf & vbCrLf & _
               "Confirma procedimento?", vbQuestion + vbYesNo, _
               ":: S033- SEAP Elabora|fffd||fffd|o e An|fffd|lise") = vbNo Then Exit Sub
    
    '----
    xl0Menu.Activate
    xlCusteio = ActiveWorkbook.Name
    flagArquivo = False

    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True
    GeraCliente
    
    Dim criticaProjeto As Integer
    Dim geraArquivo As Boolean
    criticaProjeto = ValidaSEAP

    geraArquivo = True
    If criticaProjeto <> 0 Then
        If criticaProjeto = 1 Then
            If MsgBox("Foram encontradas inconsist|fffd|ncias no plano." & vbCrLf & _
                 "Gerar o arquivo mesmo assim?", vbQuestion + vbYesNo, ":: S033-SEAP") = vbNo Then
                 geraArquivo = False
            End If
        Else
            'Aqui criticaProjeto == 2
            geraArquivo = False
            MsgBox "Um ou mais erros s|fffd|o restritivos e o arquivo para o SEAP n|fffd|o ser|fffd| gerado.", vbCritical, ":: Custeio Agr|fffd|cola"
        End If

        If Not geraArquivo Then
            xl0Menu.Activate
            protPlan.FinalizaRotina
            Set protPlan = Nothing
            Exit Sub
       End If
    End If
'    -------

    strFilter = "Arquivo de exporta|fffd||fffd|o SEAP (*.xls),*.xls, Pasta de Trabalho do Microsof Excel (*.xls),*.xls"
    Do While Not flagArquivo
       xlArqExp = Application.GetSaveAsFilename("Plano_CUSTEIO-SEAP.xls", [strFilter], , ":: Plano de Custeio Agr|fffd|cola")
       If xlArqExp = False Then
         'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM INI
         xl0Menu.Activate
         'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM FIM
         Exit Do
       End If
       If ExisteArquivo(xlArqExp) Then
          If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
                    "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
             flagArquivo = True
          End If
       Else
          flagArquivo = True
       End If
    Loop
    If Not flagArquivo Then
       xl0Menu.Activate
       Exit Sub
    End If
    
    If InStr(xlArqExp, "_CUSTEIO-SEAP") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, "_CUSTEIO-SEAP") - 1) & ".XLS"
    End If
    If InStr(xlArqExp, ".") > 0 Then
       xlArqExp = Left(xlArqExp, InStr(xlArqExp, ".") - 1) & "_CUSTEIO-SEAP.XLS"
    Else
       xlArqExp = xlArqExp & "_CUSTEIO-SEAP.XLS"
    End If
    
    'removida as cr|fffd|ticas daqui
    
    Calculate
    'preenche o BD
    BD0SEAP.Activate
    protPlan.DesprotegePlanilha
    Range("A100:IV100").ClearContents
    Range("A101:S57000").ClearContents
    Range("W101:AB57000").ClearContents
    Range("AC120:AG57000").ClearContents
    Range("AH101:ET57000").ClearContents
    Range("EU101:EY117").ClearContents
    Range("EU120:EY57000").ClearContents
    Range("EZ101:IV57000").ClearContents
    'GSOL01921068 - RNM Limpar campo INI TJCR
    Range("T36").ClearContents
    'GSOL01921068 - RNM Limpar campo FIM TJCR
    
    Range("C3").value = bd4Benef.Range("FIM_BCLI").value - 1 'BENEFICI|fffd|RIOS
    Range("C2").value = 1 'MODELOS
    lngLinBD = 100
    lngLinSel = 2
    
    Range("B" & [lngLinBD]).value = xl2Prop.Range("E24").value & _
                                    xl2Prop.Range("E12").Value2 & _
                                    CLng(xl2Prop.Range("CD_ORG").value) & _
                                    "PRJ"
'T033CLIE
    Range("C" & [lngLinBD]).value = xl2Prop.Range("E24").value
    Range("D" & [lngLinBD]).value = xl2Prop.Range("E22").value
    Range("E" & [lngLinBD]).value = xl2Prop.Range("S44").value
    Range("F" & [lngLinBD]).value = bd4Benef.Range("AA" & [lngLinSel]).value
    Range("G" & [lngLinBD]).value = bd4Benef.Range("AB" & [lngLinSel]).value
    Range("H" & [lngLinBD]).value = bd4Benef.Range("AC" & [lngLinSel]).value
    Range("I" & [lngLinBD]).value = bd4Benef.Range("AD" & [lngLinSel]).value
    Range("J" & [lngLinBD]).value = xl2Prop.Range("CD_MUNI").value
    Range("K" & [lngLinBD]).value = bd4Benef.Range("AE" & [lngLinSel]).value
    Range("L" & [lngLinBD]).value = xl2Prop.Range("portePROD2").value
    Range("M" & [lngLinBD]).value = xl2Prop.Range("FTE_REC").value
        
    'T033CLIE - GSOL01926271  INI - Inclus|fffd|o de campo Benefici|fffd|rio de pol|fffd|tica P|fffd|blica.
    Range("GE" & [lngLinBD]).value = xl2Prop.Range("S28").value
    

'Atividade PGPAF
    Range("I3").value = xl2Prop.Range("V47").value

'T033AVLR
    If xl2Prop.Range("E52").value <> vbNullString Then
       Range("P" & [lngLinBD]).value = xl2Prop.Range("E52").value
       Range("Q" & [lngLinBD]).value = xl2Prop.Range("E51").value
    Else
       Range("P" & [lngLinBD]).value = xl2Prop.Range("E50").value
       Range("Q" & [lngLinBD]).value = xl2Prop.Range("E49").value
    End If
    
'T033PROJ
   'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM INI
    Range("T" & [lngLinBD]).value = xl2Prop.Range("S27").value
   'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM FIM
   
   'GSOL01921068 - RNM Limpar campo INI - Inclus|fffd|o da Taxa de Juros de Cr|fffd|dito Rural
   If xl2Prop.Range("S320").value = 0 Then
      Range("T36").value = ""
   Else
      Range("T36").value = xl2Prop.Range("S320").value
   End If
   'GSOL01921068 - RNM Limpar campo FIM - Inclus|fffd|o da Taxa de Juros de Cr|fffd|dito Rural
   
   'Inclus|fffd|o do Custeio AgroAmigo Crescer GSOL00953122 ini
    Range("IV" & [lngLinBD]).value = Mid(xl2Prop.Range("E10").value, 1, 1)
   'Inclus|fffd|o do Custeio AgroAmigo Crescer GSOL00953122 fim
    Range("U" & [lngLinBD]).value = bd4Benef.Range("AG" & [lngLinSel]).value
    Range("V" & [lngLinBD]).value = xl2Prop.Range("CD_ORG").value
    Range("W" & [lngLinBD]).value = xl2Prop.Range("E12").value
    Range("X" & [lngLinBD]).value = xl2Prop.Range("D215").value
    Range("Y" & [lngLinBD]).value = xl2Prop.Range("E14").value
    Range("Z" & [lngLinBD]).value = xl2Prop.Range("S15").value
    Range("AA" & [lngLinBD]).value = xl2Prop.Range("TP_PROP").value
    'SPRINT 13 - iNFORMAR PROAGRO COM C|fffd|DIGO 3 CASO SEJA SELECIONADO A OP|fffd||fffd|O SEGUROR-RURAL - GSOL01045406
    If xl2Prop.Range("R48").value = "S" Then
      Range("AB" & [lngLinBD]).value = 3
    Else
      Range("AB" & [lngLinBD]).value = xl2Prop.Range("flagPROAGRO").value
    End If

          
'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - INI
    Range("U103").value = xl2Prop.Range("R45").value
    Range("V103").value = xl2Prop.Range("R48").value
    Range("T103").value = xl2Prop.Range("S54").value
'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - FIM
   
    
    
    
'T033CUST
    Range("I5").value = xl2Prop.Range("R54").value
    
'T033INAD
    Range("N" & [lngLinBD]).value = xl2Prop.Range("E190").value
    Range("O" & [lngLinBD]).value = xl2Prop.Range("E191").value
    Range("R" & [lngLinBD]).value = IIf(xl99Auxi.Range("flagORCA_PRONAF").value = 1, 0, 1)
    
'T033INVE / T033FOFI
    lngLinBD = 100
    lngLinSel = 58
    lngLinProd = 130
    lngCont = 0
    lngContPrd = 0
    lngContiv = 0
    strAliPROAGRO = vbNullString

    'limpar |fffd|rea ATCU
    Range("U36:X45").ClearContents

    'culturas
    Do While lngLinSel <= 67
       If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
          lngSqIvs = lngLinBD - 99
          Range("AC" & [lngLinBD]).value = lngSqIvs
          Range("AD" & [lngLinBD]).value = Left(xl2Prop.Range("D" & [lngLinSel]).value, 70)
          Range("AE" & [lngLinBD]).value = 14 'Capital de Giro
          Range("AF" & [lngLinBD]).value = xl2Prop.Range("X" & [lngLinSel]).value
          Range("AG" & [lngLinBD]).value = xl2Prop.Range("W" & [lngLinSel]).value
          Range("S" & [lngLinBD]).value = xl2Prop.Range("AQ" & [lngLinSel]).value  'GSOL00660171 - INI RNM SISTEMA DE PRODU|fffd||fffd|O INCLUS|fffd|O
          Range("AH" & [lngLinBD]).value = 31 'manuten|fffd||fffd|o
          Range("AI" & [lngLinBD]).value = 1 'Custeio
          'RTC 31115 - Plano Safra 2016/2017 - RNM INI
          'Range("AJ" & [lngLinBD]).value = FINALIDADE_CUSTEIO
          Range("AJ" & [lngLinBD]).value = xl2Prop.Range("R53").value
          'RTC 31115 - Plano Safra 2016/2017 - RNM FIM
          Range("AK" & [lngLinBD]).value = xl2Prop.Range("G" & [lngLinSel]).value
          Range("AL" & [lngLinBD]).value = UCase(xl2Prop.Range("BC" & [lngLinSel]).value) '"HA" ' Demanda GSOL01037532 - RNM - OUT-2016 INI
          Range("AM" & [lngLinBD]).value = xl2Prop.Range("I" & [lngLinSel]).value
          Range("AN" & [lngLinBD]).value = 2
          Range("BE" & [lngLinBD]).value = xl2Prop.Range("E53").value
          Range("BG" & [lngLinBD]).value = Application.WorksheetFunction.Round(xl2Prop.Range("G" & [lngLinSel]).value * _
                                           xl2Prop.Range("I" & [lngLinSel]).value, 2)
          'xl2Prop.Range("AD" & [lngLinSel]).value = lngSqIvs
          Range("BH" & [lngLinBD]).value = xl2Prop.Range("AL" & [lngLinSel]).value
          Range("BT" & [lngLinBD]).value = Trim(xl2Prop.Range("AM" & [lngLinSel]).value) 'GSOL00131364
          Range("BS" & [lngLinBD]).value = xl2Prop.Range("AP" & [lngLinSel]).value 'GSOL00142352
          ' GSOL00890423 Expor a produ|fffd||fffd|o prevista independente do proagro.
           Range("BU" & [lngLinBD]).value = xl2Prop.Range("AT" & [lngLinSel]).value ' GSOL00890423
          'Sprint 11 desativado substituir o campo por um flag de Proagro por empreendimento
          '<< GSOL00551305
          'If Range("flagPROAGRO") > 0 Then
          '  Range("BR" & [lngLinBD]).value = xl2Prop.Range("AS" & [lngLinSel]).value
          ' ' Range("BU" & [lngLinBD]).Value = xl2Prop.Range("AT" & [lngLinSel]).Value ' GSOL00890423
          'End If
          'Sprint 11 a aus|fffd|ncia de informa|fffd||fffd|o |fffd| considerada como 0 Zero (N|fffd|o) 20170321
          Range("BR" & [lngLinBD]).value = IIf(xl2Prop.Range("H" & [lngLinSel]).value = "Sim", 1, 0)
          ''GSOL00551305 >>
                    
          'GSOL00066285 - aliquota do PROAGRO = 1|fffd| empreendimento informado
          If strAliPROAGRO = vbNullString And _
             Range("BH" & [lngLinBD]).value <> vbNullString Then strAliPROAGRO = Range("BH" & [lngLinBD]).value
             
          xl2Prop.Range("F" & [lngLinSel] + 36).Calculate
          dblPcl = xl2Prop.Range("F" & [lngLinSel] + 36).value
          
          xl2Prop.Range("Y" & [lngLinSel]).Calculate
          diaPcl = xl2Prop.Range("Y" & [lngLinSel]).value
          
          If dblPcl > 0 Then 'parcela 1
             Range("AO" & [lngLinBD]).value = dblPcl
             Range("AP" & [lngLinBD]).value = diaPcl
          End If
          
          dblPcl = xl2Prop.Range("I" & [lngLinSel] + 36).value
          diaPcl = xl2Prop.Range("Z" & [lngLinSel]).value
          If dblPcl > 0 Then 'parcela 2
             Range("AQ" & [lngLinBD]).value = dblPcl
             Range("AR" & [lngLinBD]).value = diaPcl
          End If
          
          dblPcl = xl2Prop.Range("L" & [lngLinSel] + 36).value
          diaPcl = xl2Prop.Range("AA" & [lngLinSel]).value
          If dblPcl > 0 Then 'parcela 3
             Range("AS" & [lngLinBD]).value = dblPcl
             Range("AT" & [lngLinBD]).value = diaPcl
          End If
                      
          xl2Prop.Range("AE" & [lngLinSel] + 36).Calculate
          xl2Prop.Range("AF" & [lngLinSel] + 36).Calculate
          xl2Prop.Range("AG" & [lngLinSel] + 36).Calculate
          xl2Prop.Range("AH" & [lngLinSel] + 36).Calculate
          
          xl2Prop.Range("O" & [lngLinSel] + 36).Calculate
          dblPcl = xl2Prop.Range("O" & [lngLinSel] + 36).value
       
          xl2Prop.Range("AB" & [lngLinSel]).Calculate
          diaPcl = xl2Prop.Range("AB" & [lngLinSel]).value
          
          If dblPcl > 0 Then 'parcela 4
             Range("AU" & [lngLinBD]).value = dblPcl
             Range("AV" & [lngLinBD]).value = diaPcl
          End If

          'T033ATCU
          exportaATCU lngSqIvs, (130 + (3 * (lngSqIvs - 1)))
          'Demanda GSOL00795760 - Atividades
          exportaATNv lngSqIvs, (130 + (3 * (lngSqIvs - 1))), Mid(xl2Prop.Range("S" & [lngLinSel]).value, 8, 2)
                    
          'T033FOFI
          dblVrFin = CDbl(xl2Prop.Range("M" & [lngLinSel]).value)
          dblVrPrp = CDbl(xl2Prop.Range("K" & [lngLinSel]).value) * CDbl(xl2Prop.Range("G" & [lngLinSel]).value)
          dblPcPrp = Application.WorksheetFunction.Round((dblVrPrp / (dblVrFin + dblVrPrp)) * 100, 2)
          'dblPcPrp = (dblVrPrp / (dblVrFin + dblVrPrp)) * 100
          dblPcFin = 100 - dblPcPrp
          Range("BV" & [lngLinBD]).value = lngLinBD - 99
          Range("BW" & [lngLinBD]).value = xl2Prop.Range("S46").value
          Range("BX" & [lngLinBD]).value = dblPcFin
          Range("BY" & [lngLinBD]).value = dblPcPrp
          
          dblVrPrp = CDbl(xl2Prop.Range("K" & [lngLinSel]).value)
          dblVrFin = CDbl(xl2Prop.Range("I" & [lngLinSel]).value) - dblVrPrp
          Range("BZ" & [lngLinBD]).value = dblVrFin
          Range("CA" & [lngLinBD]).value = dblVrPrp
          Range("CB" & [lngLinBD]).value = Application.WorksheetFunction.Round(dblVrFin * _
                                           CDbl(xl2Prop.Range("G" & [lngLinSel]).value), 2)
          Range("CC" & [lngLinBD]).value = Range("BG" & [lngLinBD]).value - (Application.WorksheetFunction.Round(dblVrFin * _
                                           CDbl(xl2Prop.Range("G" & [lngLinSel]).value), 2))
                                           
'          ' JSR - GSOL00910095 - 08/07/2015 (gerando SEAP com os booleanos das culturas consorciadas)
'          ' {
'                Dim campoC() As String, campoCC() As String
'                Dim j As Integer, rng As Range, tem As Boolean
'                Dim orcamento As String
'
'                campoC = Split("D,U,AL,BC,BT,CK,DB,DS,EJ,FA", ",")   ' cultura
'                campoCA = Split("J;AA;AR;BI;BZ;CQ;DH;DY;EP;FG", ";") ' cultura consorciada
'
'                ' verifica se o or|fffd|amento est|fffd| em culturas (Proposta)
'                ' ap|fffd|s confirma|fffd||fffd|o, inscrever no arquivo do SEAP
'                For j = 0 To 9
'                    tem = False
'
'                    ' pesquisa se o orcamento pesquisado est|fffd| registrado em Culturas na tela de Proposta
'                    For Each rng In xl2Prop.Range("D58:D67").Cells
'                        orcamento = xl1Orca.Range(campoC(j) & "7").Value
'                        If rng.Value = orcamento Then tem = True
'                    Next
'
'                    ' copia o or|fffd|amento para a linha seguinte
'                    If tem = True Then
'                        Range("CD" & lngLinBD).Value = IIf(xl1Orca.Range(campoCA(j) & "13").Value = "Sim", "S", "N")
'                    End If
'                Next j
'          ' }
          
          'T033ATPJ
          Range("GF" & [lngLinBD]).value = lngSqIvs
          Range("GG" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("GH" & [lngLinBD]).value = 1
          Range("GI" & [lngLinBD]).value = 1
          Range("GJ" & [lngLinBD]).value = ""
          Range("GK" & [lngLinBD]).value = xl2Prop.Range("X" & [lngLinSel]).value
          Range("GL" & [lngLinBD]).value = ""
          Range("GM" & [lngLinBD]).value = ""
          Range("GN" & [lngLinBD]).value = 0
         
          'T033CANU
          Range("GR" & [lngLinBD]).value = lngSqIvs
          Range("GS" & [lngLinBD]).value = 1
          Range("GT" & [lngLinBD]).value = xl2Prop.Range("G" & [lngLinSel]).value  'GSOL00890423 - |fffd|rea respectiva a invers|fffd|o - RNM
          Range("GU" & [lngLinBD]).value = xl2Prop.Range("AW" & [lngLinSel]).value 'GSOL00890423 - Produtividade por Hectare de acordo com o or|fffd|amento RNM
                    
          'T033PROD
          If xl2Prop.Range("D" & [lngLinProd]).value <> vbNullString Then
             Range("GY" & [lngLinBD] + [lngContPrd]).value = lngSqIvs
             Range("GZ" & [lngLinBD] + [lngContPrd]).value = 1
             Range("HA" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("D" & [lngLinProd]).value
             Range("HB" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("G" & [lngLinProd]).value
             lngContPrd = lngContPrd + 1
          End If
          If xl2Prop.Range("D" & [lngLinProd] + 1).value <> vbNullString Then
             Range("GY" & [lngLinBD] + [lngContPrd]).value = lngSqIvs
             Range("GZ" & [lngLinBD] + [lngContPrd]).value = 2
             Range("HA" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("D" & [lngLinProd] + 1).value
             Range("HB" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("G" & [lngLinProd] + 1).value
             lngContPrd = lngContPrd + 1
          End If
          If xl2Prop.Range("D" & [lngLinProd] + 2).value <> vbNullString Then
             Range("GY" & [lngLinBD] + [lngContPrd]).value = lngSqIvs
             Range("GZ" & [lngLinBD] + [lngContPrd]).value = 3
             Range("HA" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("D" & [lngLinProd] + 2).value
             Range("HB" & [lngLinBD] + [lngContPrd]).value = xl2Prop.Range("G" & [lngLinProd] + 2).value
             lngContPrd = lngContPrd + 1
          End If
          
          'T033PANU
          If xl2Prop.Range("D" & [lngLinProd]).value <> vbNullString Then
             Range("HE" & [lngLinBD] + [lngCont]).value = lngSqIvs
             Range("HF" & [lngLinBD] + [lngCont]).value = 1
             Range("HG" & [lngLinBD] + [lngCont]).value = 1
             Range("HH" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("W" & [lngLinProd]).value 'Int(xl2Prop.Range("I" & [lngLinProd]).value * xl2Prop.Range("J" & [lngLinProd]).value * 100) / 100
             Range("HI" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("L" & [lngLinProd]).value
             lngCont = lngCont + 1
          End If
          If xl2Prop.Range("D" & [lngLinProd] + 1).value <> vbNullString Then
             Range("HE" & [lngLinBD] + [lngCont]).value = lngSqIvs
             Range("HF" & [lngLinBD] + [lngCont]).value = 2
             Range("HG" & [lngLinBD] + [lngCont]).value = 1
             Range("HH" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("W" & [lngLinProd] + 1).value 'Int(xl2Prop.Range("I" & [lngLinProd] + 1).value* xl2Prop.Range("J" & [lngLinProd] + 1).value * 100) / 100
             
             Range("HI" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("L" & [lngLinProd] + 1).value
             lngCont = lngCont + 1
          End If
          If xl2Prop.Range("D" & [lngLinProd] + 2).value <> vbNullString Then
             Range("HE" & [lngLinBD] + [lngCont]).value = lngSqIvs
             Range("HF" & [lngLinBD] + [lngCont]).value = 3
             Range("HG" & [lngLinBD] + [lngCont]).value = 1
             Range("HH" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("W" & [lngLinProd] + 2).value 'Int(xl2Prop.Range("I" & [lngLinProd] + 2).value * xl2Prop.Range("J" & [lngLinProd] + 2).value * 100) / 100
             Range("HI" & [lngLinBD] + [lngCont]).value = xl2Prop.Range("L" & [lngLinProd] + 2).value
             lngCont = lngCont + 1
          End If
          
          'T033CUDE
          Range("HM" & [lngLinBD]).value = lngSqIvs
          Range("HN" & [lngLinBD]).value = lngSqIvs '1
          Range("HO" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("HP" & [lngLinBD]).value = ""
          Range("HQ" & [lngLinBD]).value = ""
          Range("HR" & [lngLinBD]).value = ""
          Range("HS" & [lngLinBD]).value = 2
          Range("HT" & [lngLinBD]).value = ""
          Range("HU" & [lngLinBD]).value = 1
          
          'T033CDAN
          Range("HX" & [lngLinBD]).value = lngSqIvs
          Range("HY" & [lngLinBD]).value = lngSqIvs '1
          Range("HZ" & [lngLinBD]).value = 1
          Range("IA" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinSel]).value
          
          'T033ORCA
          flagBusca = 1
          GeraBDOrcam lngSqIvs, xl2Prop.Range("V" & [lngLinSel]).value
          flagBusca = 0
          
          lngLinBD = lngLinBD + 1
          lngContPrd = lngContPrd - 1
          lngContiv = lngContiv - 1
          
          lngCont = lngCont - 1
       End If
       lngLinSel = lngLinSel + 1
       lngLinProd = lngLinProd + 3
    Loop
    
    lngLinSel = 74
    'implementos
    Do While lngLinSel <= 78
       'T033INVE
       If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
          Range("AC" & [lngLinBD]).value = lngLinBD - 99
          Range("AD" & [lngLinBD]).value = Left(xl2Prop.Range("D" & [lngLinSel]).value, 70)
          Range("AE" & [lngLinBD]).value = 14 'Capital de Giro
          Range("AF" & [lngLinBD]).value = xl2Prop.Range("X" & [lngLinSel]).value
          Range("AG" & [lngLinBD]).value = xl2Prop.Range("W" & [lngLinSel]).value
          Range("S" & [lngLinBD]).value = xl2Prop.Range("AQ" & [lngLinSel]).value  'GSOL00660171 - INI RNM SISTEMA DE PRODU|fffd||fffd|O INCLUS|fffd|O
          Range("AH" & [lngLinBD]).value = 31 'manuten|fffd||fffd|o
          Range("AI" & [lngLinBD]).value = 1 'Custeio
          Range("AJ" & [lngLinBD]).value = FINALIDADE_CUSTEIO
          Range("AK" & [lngLinBD]).value = xl2Prop.Range("G" & [lngLinSel]).value
          Range("AL" & [lngLinBD]).value = "UND"
          Range("AM" & [lngLinBD]).value = xl2Prop.Range("I" & [lngLinSel]).value
          Range("AN" & [lngLinBD]).value = 2
          Range("BE" & [lngLinBD]).value = xl2Prop.Range("E53").value
          Range("BG" & [lngLinBD]).value = Application.WorksheetFunction.Round(xl2Prop.Range("G" & [lngLinSel]).value * _
                                           xl2Prop.Range("I" & [lngLinSel]).value, 2)
          dblPcl = xl2Prop.Range("F" & [lngLinSel] + 30).value
          diaPcl = xl2Prop.Range("Y" & [lngLinSel] + 30).value
          boRecPrp = True
          If dblPcl > 0 Then 'parcela 1
             Range("AO" & [lngLinBD]).value = dblPcl
             Range("AP" & [lngLinBD]).value = diaPcl
          
             'T033ORCA
             Range("BI100").Select
             While Range("BI" & ActiveCell.Row).value <> vbNullString
                   ActiveCell.Offset(1, 0).Select
             Wend
             Range("BI" & ActiveCell.Row).value = lngLinBD - 99
             Range("BJ" & ActiveCell.Row).value = 1
             Range("BK" & ActiveCell.Row).value = 99
             Range("BL" & ActiveCell.Row).value = 1
             Range("BM" & ActiveCell.Row).value = "UND"
             Range("BN" & ActiveCell.Row).value = xl2Prop.Range("D" & [lngLinSel]).value
             Range("BO" & ActiveCell.Row).value = xl2Prop.Range("AP" & [lngLinSel] + 30).value
             Range("BP" & ActiveCell.Row).value = diaPcl
             Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
             
'             If boRecPrp = True Then Range("BO" & ActiveCell.Row).Value = Range("BO" & ActiveCell.Row).Value + xl2Prop.Range("K" & [lngLinSel]).Value
'             boRecPrp = False
          End If
          
          dblPcl = xl2Prop.Range("I" & [lngLinSel] + 30).value
          diaPcl = xl2Prop.Range("Z" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 2
             Range("AQ" & [lngLinBD]).value = dblPcl
             Range("AR" & [lngLinBD]).value = diaPcl
             'T033ORCA
             Range("BI100").Select
             While Range("BI" & ActiveCell.Row).value <> vbNullString
                   ActiveCell.Offset(1, 0).Select
             Wend
             Range("BI" & ActiveCell.Row).value = lngLinBD - 99
             Range("BJ" & ActiveCell.Row).value = 2
             Range("BK" & ActiveCell.Row).value = 99
             Range("BL" & ActiveCell.Row).value = 1
             Range("BM" & ActiveCell.Row).value = "UND"
             Range("BN" & ActiveCell.Row).value = xl2Prop.Range("D" & [lngLinSel]).value
             Range("BO" & ActiveCell.Row).value = xl2Prop.Range("AQ" & [lngLinSel] + 30).value
             Range("BP" & ActiveCell.Row).value = diaPcl
             Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
'             If boRecPrp = True Then Range("BO" & ActiveCell.Row).Value = Range("BO" & ActiveCell.Row).Value + xl2Prop.Range("K" & [lngLinSel]).Value
'             boRecPrp = False
          End If
          
          dblPcl = xl2Prop.Range("L" & [lngLinSel] + 30).value
          diaPcl = xl2Prop.Range("AA" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 3
             Range("AS" & [lngLinBD]).value = dblPcl
             Range("AT" & [lngLinBD]).value = diaPcl
             
             'T033ORCA
             Range("BI100").Select
             While Range("BI" & ActiveCell.Row).value <> vbNullString
                   ActiveCell.Offset(1, 0).Select
             Wend
             Range("BI" & ActiveCell.Row).value = lngLinBD - 99
             Range("BJ" & ActiveCell.Row).value = 3
             Range("BK" & ActiveCell.Row).value = 99
             Range("BL" & ActiveCell.Row).value = 1
             Range("BM" & ActiveCell.Row).value = "UND"
             Range("BN" & ActiveCell.Row).value = xl2Prop.Range("D" & [lngLinSel]).value
             Range("BO" & ActiveCell.Row).value = xl2Prop.Range("AR" & [lngLinSel] + 30).value
             Range("BP" & ActiveCell.Row).value = diaPcl
             Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
'             If boRecPrp = True Then Range("BO" & ActiveCell.Row).Value = Range("BO" & ActiveCell.Row).Value + xl2Prop.Range("K" & [lngLinSel]).Value
'             boRecPrp = False
          End If
            
          dblPcl = xl2Prop.Range("O" & [lngLinSel] + 30).value
          diaPcl = xl2Prop.Range("AB" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 4
             Range("AU" & [lngLinBD]).value = dblPcl
             Range("AV" & [lngLinBD]).value = diaPcl
          
             'T033ORCA
             Range("BI100").Select
             While Range("BI" & ActiveCell.Row).value <> vbNullString
                   ActiveCell.Offset(1, 0).Select
             Wend
             Range("BI" & ActiveCell.Row).value = lngLinBD - 99
             Range("BJ" & ActiveCell.Row).value = 4
             Range("BK" & ActiveCell.Row).value = 99
             Range("BL" & ActiveCell.Row).value = 1
             Range("BM" & ActiveCell.Row).value = "UND"
             Range("BN" & ActiveCell.Row).value = xl2Prop.Range("D" & [lngLinSel]).value
             Range("BO" & ActiveCell.Row).value = xl2Prop.Range("AS" & [lngLinSel] + 30).value
             Range("BP" & ActiveCell.Row).value = diaPcl
             Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
'             If boRecPrp = True Then Range("BO" & ActiveCell.Row).Value = Range("BO" & ActiveCell.Row).Value + xl2Prop.Range("K" & [lngLinSel]).Value
'             boRecPrp = False
          End If
          
          'T033FOFI
          dblVrFin = CDbl(xl2Prop.Range("M" & [lngLinSel]).value)
          dblVrPrp = CDbl(xl2Prop.Range("K" & [lngLinSel]).value) * CDbl(xl2Prop.Range("G" & [lngLinSel]).value)
          dblPcPrp = Application.WorksheetFunction.Round((dblVrPrp / (dblVrFin + dblVrPrp)) * 100, 2)
          dblPcFin = 100 - dblPcPrp
          Range("BV" & [lngLinBD]).value = lngLinBD - 99
          Range("BW" & [lngLinBD]).value = xl2Prop.Range("S46").value
          Range("BX" & [lngLinBD]).value = dblPcFin
          Range("BY" & [lngLinBD]).value = dblPcPrp
          
          dblVrPrp = CDbl(xl2Prop.Range("K" & [lngLinSel]).value)
          dblVrFin = CDbl(xl2Prop.Range("I" & [lngLinSel]).value) - dblVrPrp
          Range("BZ" & [lngLinBD]).value = dblVrFin
          Range("CA" & [lngLinBD]).value = dblVrPrp
          Range("CB" & [lngLinBD]).value = Application.WorksheetFunction.Round(dblVrFin * _
                                           CDbl(xl2Prop.Range("G" & [lngLinSel]).value), 2)
          Range("CC" & [lngLinBD]).value = Range("BG" & [lngLinBD]).value - (Application.WorksheetFunction.Round(dblVrFin * _
                                           CDbl(xl2Prop.Range("G" & [lngLinSel]).value), 2))
                      
          lngLinBD = lngLinBD + 1
       End If
       lngLinSel = lngLinSel + 1
    Loop
    
    lngLinSel = 83
    'taxa de elabora|fffd||fffd|o
    If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
       Range("AC" & [lngLinBD]).value = lngLinBD - 99
       Range("AD" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
       Range("AE" & [lngLinBD]).value = 12 'Estudos e projetos
       Range("AF" & [lngLinBD]).value = xl2Prop.Range("X" & [lngLinSel]).value
       Range("AG" & [lngLinBD]).value = xl2Prop.Range("W" & [lngLinSel]).value
       Range("AH" & [lngLinBD]).value = 31 'manuten|fffd||fffd|o
       Range("AI" & [lngLinBD]).value = 1 'Custeio
       Range("AJ" & [lngLinBD]).value = FINALIDADE_CUSTEIO
       Range("AK" & [lngLinBD]).value = 1
       Range("AL" & [lngLinBD]).value = "VERBA"
       Range("AM" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinSel]).value
       Range("AN" & [lngLinBD]).value = 1
       Range("BE" & [lngLinBD]).value = xl2Prop.Range("E53").value
       Range("BG" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinSel]).value
       
       'GSOL83123 - Al|fffd|quota 0 para o empreendimento de assessoria para proagro tradicional
       If xl2Prop.Range("flagPROAGRO").value = 1 Then
          Range("BH" & [lngLinBD]).value = 0
       Else
          Range("BH" & [lngLinBD]).value = strAliPROAGRO
       End If
       
       dblPcl = xl2Prop.Range("F" & [lngLinSel] + 30).value
       diaPcl = xl2Prop.Range("Y" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 1
          Range("AO" & [lngLinBD]).value = dblPcl
          Range("AP" & [lngLinBD]).value = diaPcl
          
          'T033ORCA
          Range("BI100").Select
          While Range("BI" & ActiveCell.Row).value <> vbNullString
                ActiveCell.Offset(1, 0).Select
          Wend
          Range("BI" & ActiveCell.Row).value = lngLinBD - 99
          Range("BJ" & ActiveCell.Row).value = 1
          Range("BK" & ActiveCell.Row).value = 99
          Range("BL" & ActiveCell.Row).value = 1
          Range("BM" & ActiveCell.Row).value = "VERBA"
          'Range("BN" & ActiveCell.Row).Value = xl2Prop.Range("D" & [lngLinSel]).Value
          Range("BN" & ActiveCell.Row).value = "Custo de Elabora|fffd||fffd|o do Plano de Custeio"
          Range("BO" & ActiveCell.Row).value = dblPcl
          Range("BP" & ActiveCell.Row).value = diaPcl
          Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
       End If
       
       dblPcl = xl2Prop.Range("I" & [lngLinSel] + 30).value
       diaPcl = xl2Prop.Range("Z" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 2
          Range("AQ" & [lngLinBD]).value = dblPcl
          Range("AR" & [lngLinBD]).value = diaPcl
          
          'T033ORCA
          Range("BI100").Select
          While Range("BI" & ActiveCell.Row).value <> vbNullString
                ActiveCell.Offset(1, 0).Select
          Wend
          Range("BI" & ActiveCell.Row).value = lngLinBD - 99
          Range("BJ" & ActiveCell.Row).value = 2
          Range("BK" & ActiveCell.Row).value = 99
          Range("BL" & ActiveCell.Row).value = 1
          Range("BM" & ActiveCell.Row).value = "VERBA"
          'Range("BN" & ActiveCell.Row).Value = xl2Prop.Range("D" & [lngLinSel]).Value
          Range("BN" & ActiveCell.Row).value = "Custo de Assessoria Empresarial e T|fffd|cnica"
          Range("BO" & ActiveCell.Row).value = dblPcl
          Range("BP" & ActiveCell.Row).value = diaPcl
          Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
       End If
       
       dblPcl = xl2Prop.Range("L" & [lngLinSel] + 30).value
       diaPcl = xl2Prop.Range("AA" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 3
          Range("AS" & [lngLinBD]).value = dblPcl
          Range("AT" & [lngLinBD]).value = diaPcl
          
          'T033ORCA
          Range("BI100").Select
          While Range("BI" & ActiveCell.Row).value <> vbNullString
                ActiveCell.Offset(1, 0).Select
          Wend
          Range("BI" & ActiveCell.Row).value = lngLinBD - 99
          Range("BJ" & ActiveCell.Row).value = 3
          Range("BK" & ActiveCell.Row).value = 99
          Range("BL" & ActiveCell.Row).value = 1
          Range("BM" & ActiveCell.Row).value = "VERBA"
          'Range("BN" & ActiveCell.Row).Value = xl2Prop.Range("D" & [lngLinSel]).Value
          Range("BN" & ActiveCell.Row).value = "Custo de Assessoria Empresarial e T|fffd|cnica"
          Range("BO" & ActiveCell.Row).value = dblPcl
          Range("BP" & ActiveCell.Row).value = diaPcl
          Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
       End If
       diaPcl = xl2Prop.Range("AB" & [lngLinSel] + 30).value
       dblPcl = xl2Prop.Range("O" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 4
          Range("AU" & [lngLinBD]).value = dblPcl
          Range("AV" & [lngLinBD]).value = diaPcl
          
          'T033ORCA
          Range("BI100").Select
          While Range("BI" & ActiveCell.Row).value <> vbNullString
                ActiveCell.Offset(1, 0).Select
          Wend
          Range("BI" & ActiveCell.Row).value = lngLinBD - 99
          Range("BJ" & ActiveCell.Row).value = 4
          Range("BK" & ActiveCell.Row).value = 99
          Range("BL" & ActiveCell.Row).value = 1
          Range("BM" & ActiveCell.Row).value = "VERBA"
          Range("BN" & ActiveCell.Row).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("BO" & ActiveCell.Row).value = dblPcl
          Range("BP" & ActiveCell.Row).value = diaPcl
          Range("BQ" & ActiveCell.Row).value = xl2Prop.Range("E14").value + diaPcl
       End If
       
       'T033FOFI
       dblVrFin = CDbl(xl2Prop.Range("M" & [lngLinSel]).value)
       dblVrPrp = CDbl(xl2Prop.Range("K" & [lngLinSel]).value) ' Inclus|fffd|o RNM - GSOL00878466 02/2015 - INI - OK
       dblPcPrp = Application.WorksheetFunction.Round((dblVrPrp / (dblVrFin + dblVrPrp)) * 100, 2)
       dblPcFin = 100 - dblPcPrp
       Range("BV" & [lngLinBD]).value = lngLinBD - 99
       Range("BW" & [lngLinBD]).value = xl2Prop.Range("S46").value
       Range("BX" & [lngLinBD]).value = dblPcFin
       Range("BY" & [lngLinBD]).value = dblPcPrp

       Range("BZ" & [lngLinBD]).value = dblVrFin
       Range("CA" & [lngLinBD]).value = dblVrPrp
       Range("CB" & [lngLinBD]).value = dblVrFin
       Range("CC" & [lngLinBD]).value = dblVrPrp
       
    End If
    
'T033MDIV
    lngLinBD = 100
    Range("CE" & [lngLinBD]).value = 1
    Range("CF" & [lngLinBD]).value = "Modelo Padr|fffd|o"
    Range("CG" & [lngLinBD]).value = "Modelo b|fffd|sico com todos os itens"
    Range("CH" & [lngLinBD]).value = 2
    
'T033CMIV/T033CRND/T033CRIV
    lngLinBD = 100
    lngLinSel = 58
    'culturas
    Do While lngLinSel <= 67
       If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
          Range("CO" & [lngLinBD]).value = lngLinBD - 99
          Range("CP" & [lngLinBD]).value = 1
          Range("CQ" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("CR" & [lngLinBD]).value = bd4Benef.Range("FIM_BCLI").value - 1
          Range("CS" & [lngLinBD]).value = 32 'implanta|fffd||fffd|o
          Range("CT" & [lngLinBD]).value = 1 'Custeio
          Range("CU" & [lngLinBD]).value = 2
          Range("ED" & [lngLinBD]).value = IIf(xl2Prop.Range("P" & [lngLinSel]).value = vbNullString, 1, _
                                               xl2Prop.Range("P" & [lngLinSel]).value)
          
          dblPcl = xl2Prop.Range("F" & [lngLinSel] + 36).value
          If dblPcl > 0 Then 'parcela 1
             Range("CV" & [lngLinBD]).value = xl2Prop.Range("E" & [lngLinSel] + 36).value
             Range("CW" & [lngLinBD]).value = dblPcl
             Range("CX" & [lngLinBD]).value = Format(xl2Prop.Range("G" & [lngLinSel] + 36), "000000")
             Range("DT" & [lngLinBD]).value = xl2Prop.Range("Y" & [lngLinSel]).value
          End If
          
          dblPcl = xl2Prop.Range("I" & [lngLinSel] + 36).value
          If dblPcl > 0 Then 'parcela 2
             Range("CY" & [lngLinBD]).value = xl2Prop.Range("H" & [lngLinSel] + 36).value
             Range("CZ" & [lngLinBD]).value = dblPcl
             Range("DA" & [lngLinBD]).value = Format(xl2Prop.Range("J" & [lngLinSel] + 36), "000000")
             Range("DU" & [lngLinBD]).value = xl2Prop.Range("Z" & [lngLinSel]).value
          End If
          
          dblPcl = xl2Prop.Range("L" & [lngLinSel] + 36).value
          If dblPcl > 0 Then 'parcela 3
             Range("DB" & [lngLinBD]).value = xl2Prop.Range("K" & [lngLinSel] + 36).value
             Range("DC" & [lngLinBD]).value = dblPcl
             Range("DD" & [lngLinBD]).value = Format(xl2Prop.Range("M" & [lngLinSel] + 36), "000000")
             Range("DV" & [lngLinBD]).value = xl2Prop.Range("AA" & [lngLinSel]).value
          End If
            
          dblPcl = xl2Prop.Range("O" & [lngLinSel] + 36).value
          If dblPcl > 0 Then 'parcela 4
             Range("DE" & [lngLinBD]).value = xl2Prop.Range("N" & [lngLinSel] + 36).value
             Range("DF" & [lngLinBD]).value = dblPcl
             Range("DG" & [lngLinBD]).value = Format(xl2Prop.Range("P" & [lngLinSel] + 36), "000000")
             Range("DW" & [lngLinBD]).value = xl2Prop.Range("AB" & [lngLinSel]).value
          End If
          
          'T033Inve ( DATA DE PLANTIO )
          Range("AC" & [lngLinBD] + 20).value = xl2Prop.Range("BJ" & [lngLinSel]).value
          Range("AD" & [lngLinBD] + 20).value = xl2Prop.Range("BY" & [lngLinSel]).value
          Range("AE" & [lngLinBD] + 20).value = xl2Prop.Range("BZ" & [lngLinSel]).value
          Range("AF" & [lngLinBD] + 20).value = xl2Prop.Range("CA" & [lngLinSel]).value
          Range("AG" & [lngLinBD] + 20).value = xl2Prop.Range("CB" & [lngLinSel]).value
          
          'ZONEAMENTO
          Range("AJ" & [lngLinBD] + 20).value = xl2Prop.Range("CC" & [lngLinSel]).value ' Solo
          Range("AK" & [lngLinBD] + 20).value = xl2Prop.Range("CD" & [lngLinSel]).value ' Ciclo
          Range("AL" & [lngLinBD] + 20).value = xl2Prop.Range("CE" & [lngLinSel]).value ' %Risco
          
          
          lngLinBD = lngLinBD + 1
       End If
       lngLinSel = lngLinSel + 1
    Loop
    
    lngLinSel = 74
    'implementos
    Do While lngLinSel <= 78
       If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
          Range("CO" & [lngLinBD]).value = lngLinBD - 99
          Range("CP" & [lngLinBD]).value = 1
          Range("CQ" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("CR" & [lngLinBD]).value = bd4Benef.Range("FIM_BCLI").value - 1
          Range("CS" & [lngLinBD]).value = 32 'implanta|fffd||fffd|o
          Range("CT" & [lngLinBD]).value = 1 'Custeio
          Range("CU" & [lngLinBD]).value = 2
          Range("ED" & [lngLinBD]).value = 1
          
          dblPcl = xl2Prop.Range("F" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 1
             Range("CV" & [lngLinBD]).value = xl2Prop.Range("E" & [lngLinSel] + 30).value
             Range("CW" & [lngLinBD]).value = dblPcl
             Range("CX" & [lngLinBD]).value = Format(xl2Prop.Range("G" & [lngLinSel] + 30), "000000")
             Range("DT" & [lngLinBD]).value = xl2Prop.Range("Y" & [lngLinSel] + 30).value
          End If
          
          dblPcl = xl2Prop.Range("I" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 2
             Range("CY" & [lngLinBD]).value = xl2Prop.Range("H" & [lngLinSel] + 30).value
             Range("CZ" & [lngLinBD]).value = dblPcl
             Range("DA" & [lngLinBD]).value = Format(xl2Prop.Range("J" & [lngLinSel] + 30), "000000")
             Range("DU" & [lngLinBD]).value = xl2Prop.Range("Z" & [lngLinSel] + 30).value
          End If
          
          dblPcl = xl2Prop.Range("L" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 3
             Range("DB" & [lngLinBD]).value = xl2Prop.Range("K" & [lngLinSel] + 30).value
             Range("DC" & [lngLinBD]).value = dblPcl
             Range("DD" & [lngLinBD]).value = Format(xl2Prop.Range("M" & [lngLinSel] + 30), "000000")
             Range("DV" & [lngLinBD]).value = xl2Prop.Range("AA" & [lngLinSel] + 30).value
          End If
            
          dblPcl = xl2Prop.Range("O" & [lngLinSel] + 30).value
          If dblPcl > 0 Then 'parcela 4
             Range("DE" & [lngLinBD]).value = xl2Prop.Range("N" & [lngLinSel] + 30).value
             Range("DF" & [lngLinBD]).value = dblPcl
             Range("DG" & [lngLinBD]).value = Format(xl2Prop.Range("P" & [lngLinSel] + 30), "000000")
             Range("DW" & [lngLinBD]).value = xl2Prop.Range("AB" & [lngLinSel] + 30).value
          End If
          
          lngLinBD = lngLinBD + 1
       End If
       lngLinSel = lngLinSel + 1
    Loop
    
    lngLinSel = 83
    'taxa de elabora|fffd||fffd|o
    If xl2Prop.Range("M" & [lngLinSel]).value > 0 Then
       Range("CO" & [lngLinBD]).value = lngLinBD - 99
       Range("CP" & [lngLinBD]).value = 1
       Range("CQ" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
       Range("CR" & [lngLinBD]).value = bd4Benef.Range("FIM_BCLI").value - 1
       Range("CS" & [lngLinBD]).value = 32 'implanta|fffd||fffd|o
       Range("CT" & [lngLinBD]).value = 1 'Custeio
       Range("CU" & [lngLinBD]).value = 1
       Range("ED" & [lngLinBD]).value = 1
       
       dblPcl = xl2Prop.Range("F" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 1
          Range("CV" & [lngLinBD]).value = xl2Prop.Range("E" & [lngLinSel] + 30).value
          Range("CW" & [lngLinBD]).value = dblPcl
          Range("CX" & [lngLinBD]).value = Format(xl2Prop.Range("G" & [lngLinSel] + 30), "000000")
          Range("DT" & [lngLinBD]).value = xl2Prop.Range("Y" & [lngLinSel] + 30).value
       End If
       
       dblPcl = xl2Prop.Range("I" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 2
          Range("CY" & [lngLinBD]).value = xl2Prop.Range("H" & [lngLinSel] + 30).value
          Range("CZ" & [lngLinBD]).value = dblPcl
          Range("DA" & [lngLinBD]).value = Format(xl2Prop.Range("J" & [lngLinSel] + 30), "000000")
          Range("DU" & [lngLinBD]).value = xl2Prop.Range("Z" & [lngLinSel] + 30).value
       End If
       
       dblPcl = xl2Prop.Range("L" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 3
          Range("DB" & [lngLinBD]).value = xl2Prop.Range("K" & [lngLinSel] + 30).value
          Range("DC" & [lngLinBD]).value = dblPcl
          Range("DD" & [lngLinBD]).value = Format(xl2Prop.Range("M" & [lngLinSel] + 30), "000000")
          Range("DV" & [lngLinBD]).value = xl2Prop.Range("AA" & [lngLinSel] + 30).value
       End If
         
       dblPcl = xl2Prop.Range("O" & [lngLinSel] + 30).value
       If dblPcl > 0 Then 'parcela 4
          Range("DE" & [lngLinBD]).value = xl2Prop.Range("N" & [lngLinSel] + 30).value
          Range("DF" & [lngLinBD]).value = dblPcl
          Range("DG" & [lngLinBD]).value = Format(xl2Prop.Range("P" & [lngLinSel] + 30), "000000")
          Range("DW" & [lngLinBD]).value = xl2Prop.Range("AB" & [lngLinSel] + 30).value
       End If
    End If
 
    geraGarantias
    '- T033GBEN
    Calculate
    lngLinBD = 100
    lngLinSel = 2
    Do While lngLinSel <= bd5Garan.Range("FIM_GBEN").value
       Range("FO" & [lngLinBD]).value = bd5Garan.Range("H" & [lngLinSel]).value
       Range("FP" & [lngLinBD]).value = bd5Garan.Range("D" & [lngLinSel]).value
       Range("FQ" & [lngLinBD]).value = bd5Garan.Range("E" & [lngLinSel]).value
       Range("FR" & [lngLinBD]).value = bd5Garan.Range("F" & [lngLinSel]).value
       Range("FS" & [lngLinBD]).value = 100
       Range("FT" & [lngLinBD]).value = bd5Garan.Range("G" & [lngLinSel]).value
       Range("FU" & [lngLinBD]).value = bd5Garan.Range("L" & [lngLinSel]).value
       Range("FV" & [lngLinBD]).value = bd5Garan.Range("M" & [lngLinSel]).value
       Range("FZ" & [lngLinBD]).value = bd5Garan.Range("I" & [lngLinSel]).value
       Range("GA" & [lngLinBD]).value = bd5Garan.Range("J" & [lngLinSel]).value
       Range("GB" & [lngLinBD]).value = bd5Garan.Range("K" & [lngLinSel]).value

       lngLinSel = lngLinSel + 1
       lngLinBD = lngLinBD + 1
'       If lngLinSEL > Range("FIM_GBEN").Value Then Exit Do
    Loop
    
    'Clientes
    'T033BCLI
    lngLinBD = 100
    lngLinSel = 2
    Do While lngLinSel <= bd4Benef.Range("FIM_BCLI").value
       Range("EG" & [lngLinBD]).value = bd4Benef.Range("H" & [lngLinSel]).value
       Range("EH" & [lngLinBD]).value = 1
       Range("EI" & [lngLinBD]).value = 1
       Range("EJ" & [lngLinBD]).value = bd4Benef.Range("F" & [lngLinSel]).value
       Range("EK" & [lngLinBD]).value = bd4Benef.Range("G" & [lngLinSel]).value
       Range("EL" & [lngLinBD]).value = bd4Benef.Range("AA" & [lngLinSel]).value
       Range("EM" & [lngLinBD]).value = bd4Benef.Range("AB" & [lngLinSel]).value
       Range("EN" & [lngLinBD]).value = bd4Benef.Range("AC" & [lngLinSel]).value
       Range("EO" & [lngLinBD]).value = bd4Benef.Range("AD" & [lngLinSel]).value
       Range("EP" & [lngLinBD]).value = bd4Benef.Range("AG" & [lngLinSel]).value
       Range("EQ" & [lngLinBD]).value = bd4Benef.Range("AE" & [lngLinSel]).value
       Range("ER" & [lngLinBD]).value = bd4Benef.Range("AJ" & [lngLinSel]).value
       Range("ES" & [lngLinBD]).value = bd4Benef.Range("R" & [lngLinSel]).value
       Range("ET" & [lngLinBD]).value = bd4Benef.Range("U" & [lngLinSel]).value
       lngLinSel = lngLinSel + 1
       lngLinBD = lngLinBD + 1
    Loop
    
    'T033IMOV
    lngLinBD = 100
    
    For lngLinSel = 33 To 42
       If xl2Prop.Range("P" & [lngLinSel]).value <> vbNullString Then
          pCPFCGC = detalhaCPFCGC(xl2Prop.Range("E" & [lngLinSel]).value)
          Range("EV" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinSel]).value
          Range("EW" & [lngLinBD]).value = xl2Prop.Range("S" & [lngLinSel]).value
          Range("EX" & [lngLinBD]).value = ""
          Range("EY" & [lngLinBD]).value = ""
          Range("EZ" & [lngLinBD]).value = ""
          Range("FA" & [lngLinBD]).value = ""
          Range("FB" & [lngLinBD]).value = xl2Prop.Range("G" & [lngLinSel]).value
          Range("FC" & [lngLinBD]).value = IIf(pCPFCGC.inscricao = 0, "", pCPFCGC.inscricao)
          Range("FD" & [lngLinBD]).value = IIf(pCPFCGC.filial = 0, "", pCPFCGC.filial)
          Range("FE" & [lngLinBD]).value = IIf(pCPFCGC.digito = 0, "", pCPFCGC.digito)
          Range("FF" & [lngLinBD]).value = ""
          Range("FG" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinSel]).value
          Range("FH" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinSel]).value
          Range("FI" & [lngLinBD]).value = ""
          Range("FJ" & [lngLinBD]).value = "HA"
          Range("FK" & [lngLinBD]).value = xl2Prop.Range("T" & [lngLinSel]).value
          'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
          Range("EV" & [lngLinBD] + 20).value = xl2Prop.Range("AU" & [lngLinSel]).value ' NR_IMV_RCT - NIRF
          Range("EW" & [lngLinBD] + 20).value = xl2Prop.Range("AV" & [lngLinSel]).value ' MT_CEI - Matr|fffd|cula CEI
          Range("EX" & [lngLinBD] + 20).value = xl2Prop.Range("AW" & [lngLinSel]).value ' CD_SNR - C|fffd|digo SNCR
          Range("EY" & [lngLinBD] + 20).value = xl2Prop.Range("AX" & [lngLinSel]).value ' NR_REG_CBR - N|fffd|mero Registro CAR
          'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - FIM
          lngLinBD = lngLinBD + 1
       End If
'       If lngLinSEL > Range("FIM_GBEN").Value Then Exit Do
    Next lngLinSel
    
    'Financiamento
    'T033OPSE
    lngLinBD = 100
    lngLinSel = 2
    Range("ID" & [lngLinBD]).value = 1
    Range("IE" & [lngLinBD]).value = 2
    Range("IF" & [lngLinBD]).value = xl2Prop.Range("S46").value
    Range("IG" & [lngLinBD]).value = xl2Prop.Range("E15").value
    Range("IH" & [lngLinBD]).value = xl2Prop.Range("AC120").value
    Range("II" & [lngLinBD]).value = xl2Prop.Range("S47").value
    Range("IJ" & [lngLinBD]).value = xl2Prop.Range("AD120").value
    Range("IK" & [lngLinBD]).value = xl2Prop.Range("totalPROP").value
    Range("IL" & [lngLinBD]).value = ""
    Range("IM" & [lngLinBD]).value = 4
    
    'T033RPAN
    lngLinBD = 100
    For lngLinSel = 120 To 121
        Range("IP" & [lngLinBD]).value = 1
        Range("IQ" & [lngLinBD]).value = 2
        Range("IR" & [lngLinBD]).value = xl2Prop.Range("Z" & [lngLinSel]).value
        Range("IS" & [lngLinBD]).value = xl2Prop.Range("AA" & [lngLinSel]).value
        Range("IT" & [lngLinBD]).value = xl2Prop.Range("AA" & [lngLinSel]).value / xl2Prop.Range("totalPROP").value * 100
        Range("IU" & [lngLinBD]).value = xl2Prop.Range("X" & [lngLinSel]).value
        lngLinBD = lngLinBD + 1
    Next lngLinSel
    
    'T033CRNR
    lngLinBD = 100
    lngLinSel = 120
    For lngLinSel = 120 To 124
        If Round(xl2Prop.Range("Y" & [lngLinSel]).value, 2) > 0 Then
           Range("IN" & [lngLinBD]).value = xl2Prop.Range("Y" & [lngLinSel]).value
           Range("IO" & [lngLinBD]).value = xl2Prop.Range("Y" & [lngLinSel]).value / xl2Prop.Range("totalPROP").value * 100
           lngLinBD = lngLinBD + 1
        End If
    Next lngLinSel
    'T0339CPP
    lngLinBD = 18
    For lngLinSel = 1 To 2
        Range("C" & [lngLinBD]).value = lngLinSel
        Range("D" & [lngLinBD]).value = xl2Prop.Range("D171").value
        Range("E" & [lngLinBD]).value = 0
        Range("F" & [lngLinBD]).value = 0
        Range("G" & [lngLinBD]).value = xl2Prop.Range("D171").value
        Range("H" & [lngLinBD]).value = 0
        Range("I" & [lngLinBD]).value = xl2Prop.Range("E171").value
        Range("J" & [lngLinBD]).value = 0
        Range("K" & [lngLinBD]).value = xl2Prop.Range("H171").value
        lngLinBD = lngLinBD + 1
    Next lngLinSel
    
    'T033PAAG - PROAGRO MAIS INVESTIMENTO
    lngLinBD = 43
    lngLinSel = 1
        Range("C" & [lngLinBD]).value = xl8Agencia.Range("J5").value
        Range("D" & [lngLinBD]).value = xl8Agencia.Range("I6").value
        Range("E" & [lngLinBD]).value = xl8Agencia.Range("I7").value
        Range("F" & [lngLinBD]).value = xl8Agencia.Range("D8").value
        Range("G" & [lngLinBD]).value = xl8Agencia.Range("D9").value
        Range("H" & [lngLinBD]).value = xl8Agencia.Range("D10").value
        Range("I" & [lngLinBD]).value = xl99Auxi.Range("GE11").value
        Range("J" & [lngLinBD]).value = xl99Auxi.Range("GE12").value
        Range("K" & [lngLinBD]).value = xl99Auxi.Range("GE13").value
        Range("L" & [lngLinBD]).value = xl99Auxi.Range("GE14").value
        lngLinBD = lngLinBD + 1
    
    'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    'Alocar a informa|fffd||fffd|o de Glebas de Invers|fffd|es
    Range("AC200:AJ65536").ClearContents
    lngLinBD = 200
    lngLinSel = 101
    
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    Call CargaIniGeodesica
    Call LimparGlebasSemInv
    BD0SEAP.Activate
    Do While lngLinSel <= bd10Geodesica.Range("B99").value + 100
       Range("AC" & [lngLinBD]).value = bd10Geodesica.Range("C" & [lngLinSel]).value  ' SQ_INV
       Range("AD" & [lngLinBD]).value = bd10Geodesica.Range("F" & [lngLinSel]).value  ' CD_GLB
       Range("AE" & [lngLinBD]).value = bd10Geodesica.Range("N" & [lngLinSel]).value  ' TP_GLB
       If bd10Geodesica.Range("H" & [lngLinSel]).value = "" Then
         Range("AF" & [lngLinBD]).value = 0
       Else
         Range("AF" & [lngLinBD]).value = bd10Geodesica.Range("H" & [lngLinSel]).value ' AR_NAO_CUL
       End If
       Range("AG" & [lngLinBD]).value = bd10Geodesica.Range("I" & [lngLinSel]).value  ' SQ_COO_GLE
       Range("AH" & [lngLinBD]).value = bd10Geodesica.Range("J" & [lngLinSel]).value  ' VR_LAT
       Range("AI" & [lngLinBD]).value = bd10Geodesica.Range("K" & [lngLinSel]).value  ' VR_LGT
       Range("AJ" & [lngLinBD]).value = bd10Geodesica.Range("L" & [lngLinSel]).value  ' VR_ALT
       Range("AK" & [lngLinBD]).value = bd10Geodesica.Range("T" & [lngLinSel]).value  ' ST_EDC_GLB
       lngLinSel = lngLinSel + 1
       lngLinBD = lngLinBD + 1
    Loop
        
     Range("AC199").value = "SQ_IVS"
     Range("AD199").value = "CD_GLB"
     Range("AE199").value = "TP_GLB"
     Range("AF199").value = "AR_NAO_CUL"
     Range("AG199").value = "SQ_COO_GLE"
     Range("AH199").value = "VR_LAT"
     Range("AI199").value = "VR_LGT"
     Range("AJ199").value = "VR_ALT"
     Range("AK199").value = "ST_EDC_GLB"
    'T|fffd|RMINO DE COORDENADAS
    'COORDENADAS GEODESICAS  RNM - GSOL00969220 21/12/2015
    
    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
    Workbooks.Add
    On Error GoTo tratarErro:
    If Int(Left(Application.Version, 2)) >= 11 Then
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlExcel8, Password:="PSNBN009", ReadOnlyRecommended:=False, CreateBackup:=False
    Else
        ActiveWorkbook.SaveAs Filename:=[xlArqExp], FileFormat:=xlNormal, Password:="PSNBN009", ReadOnlyRecommended:=False, CreateBackup:=False
    End If
    ActiveSheet.Name = "SEAP"
    xlSEAP = ActiveWorkbook.Name
    Windows([xlCusteio]).Activate
    BD0SEAP.Activate
    Cells.Copy
    Windows([xlSEAP]).Activate
    Range("A1").Select
    Cells.PasteSpecial
    
    'vers|fffd|o da planilha
    Windows([xlCusteio]).Activate
    Range("C1:D1").Copy
    Windows([xlSEAP]).Activate
    'Range("C1").PasteSpecial Paste:=xlPasteValues
    Range("C1:D1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    Cells.Select
    With Selection
        .Font.Size = 8
    End With
    Range("A1").Select
    ActiveWorkbook.Close (True)
    
    Windows([xlCusteio]).Activate
    bd5Garan.Activate
    protPlan.DesprotegePlanilha
    If Range("FIM_GBEN").value > 1 Then Range("A2:L" & Range("FIM_GBEN").value).ClearContents
    protPlan.ProtegePlanilha
    bd4Benef.Activate
    protPlan.ProtegePlanilha
    BD0SEAP.Activate
    protPlan.DesprotegePlanilha
    Range("A100:IV5000").ClearContents
    protPlan.ProtegePlanilha
    
    Application.ScreenUpdating = True
    
    xl0Menu.Activate
    protPlan.FinalizaRotina
    MsgBox "Arquivo de importa|fffd||fffd|o do SEAP gerado!" & vbCrLf & _
           "Caminho: " & [xlArqExp] & vbCrLf & vbCrLf & _
           "No SEAP M|fffd|dulo Simplificado:" & vbCrLf & _
           "<Projeto / Importar Planilha Custeio>."
    Set protPlan = Nothing
    Exit Sub
    
    
tratarErro:
ActiveWorkbook.Close (False)
MsgBox "Voc|fffd| n|fffd|o tem permiss|fffd|o de escrita nesse diret|fffd|rio"
xl0Menu.Activate
protPlan.FinalizaRotina
Set protPlan = Nothing
Exit Sub

errSEAP1:
    MsgBox "Projeto apresenta inconsist|fffd|ncias impedindo a gera|fffd||fffd|o para o SEAP."
    Set protPlan = Nothing
    Exit Sub
End Sub


Private Sub GeraCliente()
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        bd4Benef.Activate
        protPlan.DesprotegePlanilha
        If Range("FIM_BCLI").value > 1 Then
           If xl2Prop.Range("TP_PROP").value = 3 Then
              If Range("F2").value <> xl2Prop.Range("E22").value Then
                 MsgBox "O CPF indicado no cadastro |fffd| diferente do CPF informado na" & vbCrLf & _
                        " Proposta, indicando que os dados informados na guia de " & vbCrLf & _
                        "cadastro n|fffd|o correspondem aos informados na proposta. " & vbCrLf & _
                        "Os campos NOME e CPF ser|fffd|o atualizados para os da proposta." & vbCrLf & _
                        " Verifique as outras informa|fffd||fffd|es do cadastro.", vbExclamation, "Aten|fffd||fffd|o"
              End If
              Range("F2").value = xl2Prop.Range("E22").value
              Range("H2").value = xl2Prop.Range("E24").value
              Range("B3").Select
              While ActiveCell.Row <= Range("FIM_BCLI").value
                    Rows(ActiveCell.Row).ClearContents
                    ActiveCell.Offset(1, 0).Select
              Wend
           End If
           Range("H2").Select
           While ActiveCell.Row <= Range("FIM_BCLI").value
                 Range("W" & ActiveCell.Row).value = xl3Bene.Range("O22").value
                 If Range("AA" & ActiveCell.Row).value = vbNullString Then Range("AA" & ActiveCell.Row).value = xl2Prop.Range("E25").value
                 If Range("AF" & ActiveCell.Row).value = vbNullString Then Range("AG" & ActiveCell.Row).value = xl2Prop.Range("CD_MUNI").value
                 ActiveCell.Offset(1, 0).Select
           Wend
        Else
           Range("B2").value = 1
           Range("C2").value = 1
           Range("D2").value = 1
           Range("E2").value = 1
           Range("F2").value = xl2Prop.Range("E22").value
           Range("H2").value = xl2Prop.Range("E24").value
           Range("W2").value = xl3Bene.Range("O22").value
           Range("AA2").value = xl2Prop.Range("E25").value
           Range("AG2").value = xl2Prop.Range("CD_MUNI").value
        End If
        Set protPlan = Nothing
End Sub


Sub GeraBDOrcam(ByVal SqIvs As Long, ByVal lngOrca As Long)
     Dim lngLinSel, lngLinBD, lngSqOrc, lngLin As Long
     Dim aColunas(10, 8) As String
     
     'colunas dos or|fffd|amentos
     aColunas(1, 1) = "L"
     aColunas(1, 2) = "F"
     aColunas(1, 3) = "N"
     aColunas(1, 4) = "D"
     aColunas(1, 5) = "G"
     aColunas(1, 6) = "O"
     aColunas(1, 7) = "M"
     aColunas(1, 8) = "J"
          
     aColunas(2, 1) = "AC"
     aColunas(2, 2) = "W"
     aColunas(2, 3) = "AE"
     aColunas(2, 4) = "U"
     aColunas(2, 5) = "X"
     aColunas(2, 6) = "AF"
     aColunas(2, 7) = "AD"
     aColunas(2, 8) = "AA"
          
     aColunas(3, 1) = "AT"
     aColunas(3, 2) = "AN"
     aColunas(3, 3) = "AV"
     aColunas(3, 4) = "AL"
     aColunas(3, 5) = "AO"
     aColunas(3, 6) = "AW"
     aColunas(3, 7) = "AU"
     aColunas(3, 8) = "AR"
     
     aColunas(4, 1) = "BK"
     aColunas(4, 2) = "BE"
     aColunas(4, 3) = "BM"
     aColunas(4, 4) = "BC"
     aColunas(4, 5) = "BF"
     aColunas(4, 6) = "BN"
     aColunas(4, 7) = "BL"
     aColunas(4, 8) = "BI"
    
     aColunas(5, 1) = "CB"
     aColunas(5, 2) = "BV"
     aColunas(5, 3) = "CD"
     aColunas(5, 4) = "BT"
     aColunas(5, 5) = "BW"
     aColunas(5, 6) = "CE"
     aColunas(5, 7) = "CC"
     aColunas(5, 8) = "BZ"
     
     aColunas(6, 1) = "CS"
     aColunas(6, 2) = "CM"
     aColunas(6, 3) = "CU"
     aColunas(6, 4) = "CK"
     aColunas(6, 5) = "CN"
     aColunas(6, 6) = "CV"
     aColunas(6, 7) = "CT"
     aColunas(6, 8) = "CQ"
    
     aColunas(7, 1) = "DJ"
     aColunas(7, 2) = "DD"
     aColunas(7, 3) = "DL"
     aColunas(7, 4) = "DB"
     aColunas(7, 5) = "DE"
     aColunas(7, 6) = "DM"
     aColunas(7, 7) = "DK"
     aColunas(7, 8) = "DH"
     
     aColunas(8, 1) = "EA"
     aColunas(8, 2) = "DU"
     aColunas(8, 3) = "EC"
     aColunas(8, 4) = "DS"
     aColunas(8, 5) = "DV"
     aColunas(8, 6) = "ED"
     aColunas(8, 7) = "EB"
     aColunas(8, 8) = "DY"
     
     aColunas(9, 1) = "ER"
     aColunas(9, 2) = "EL"
     aColunas(9, 3) = "ET"
     aColunas(9, 4) = "EJ"
     aColunas(9, 5) = "EM"
     aColunas(9, 6) = "EU"
     aColunas(9, 7) = "ES"
     aColunas(9, 8) = "EP"
          
     aColunas(10, 1) = "FI"
     aColunas(10, 2) = "FC"
     aColunas(10, 3) = "FK"
     aColunas(10, 4) = "FA"
     aColunas(10, 5) = "FD"
     aColunas(10, 6) = "FL"
     aColunas(10, 7) = "FJ"
     aColunas(10, 8) = "FG"
        
     lngLin = 100
     lngSqOrc = 1
     'identifica a linha
     While Range("BI" & [lngLin]).value <> vbNullString
           lngLin = lngLin + 1
     Wend
     For lngLinSel = 21 To 88
         If xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 1)).value = 1 Then
            Range("BI" & [lngLin]).value = SqIvs
            Range("BJ" & [lngLin]).value = lngSqOrc
            'Range("BK" & [lngLin]).Value = 99
            Range("BK" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 7)).value   'RNM Cart|fffd|o AGRONEGOCIO GSOL00711124 26/05/2014
            If UCase(Range("ModOrca" & Format(lngOrca, "00")).value) = "EXTRATIVISMO" Then
               Range("BL" & [lngLin]).value = xl1Orca.Cells([lngLinSel] + 200, aColunas([lngOrca], 2)).value  '13 Sprint 13/10/2017
            Else
               Range("BL" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 2)).value
            End If
            Range("BM" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 3)).value
            Range("BN" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 4)).value
            Range("BO" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 5)).value
            Range("BP" & [lngLin]).value = xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 6)).value
            Range("BQ" & [lngLin]).value = xl2Prop.Range("E14").value + xl1Orca.Cells([lngLinSel], aColunas([lngOrca], 6)).value
            Range("CD" & [lngLin]).value = IIf(Mid(xl1Orca.Range("BacenOrca" & Format(lngOrca, "00")).value, 12, 1) = "8", "S", "N") ' JSR
                        
            lngLin = lngLin + 1
            lngSqOrc = lngSqOrc + 1
         End If
     Next lngLinSel
     
End Sub

Sub geraGarantias()
    Dim lngLinIvs, lngLinAval, lngLinCli, lngLinBD As Long
    Dim lngSeqCli As Long
    Dim xlPlanX As String
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    xlPlanX = ActiveSheet.Name
    bd5Garan.Activate
    protPlan.DesprotegePlanilha
    If Range("A1").value > 1 Then Range("A2:M" & Range("A1").value).ClearContents
    Calculate
    bd4Benef.Activate
    lngLinCli = 2
    lngLinBD = 2
    Do While lngLinCli <= Range("FIM_BCLI").value
'       'invers|fffd|es
'       For lngLinIvs = 58 To 67
'           If xl2Prop.Range("U" & [lngLinIvs]).Value > 0 Then  '- garantia
'              bd5Garan.Range("B" & [lngLinBD]).Value = lngLinBD - 1
'              'bd5Garan.Range("C" & [lngLinBD]).Value = Range("REG_PROJ").Value
'              bd5Garan.Range("D" & [lngLinBD]).Value = lngLinBD - 1
'              bd5Garan.Range("E" & [lngLinBD]).Value = 3
'              bd5Garan.Range("F" & [lngLinBD]).Value = 2
'              bd5Garan.Range("G" & [lngLinBD]).Value = xl2Prop.Range("AD" & [lngLinIvs]).Value
'              bd5Garan.Range("H" & [lngLinBD]).Value = Range("H" & [lngLinCli]).Value
'              bd5Garan.Range("L" & [lngLinBD]).Value = xl2Prop.Range("U" & [lngLinIvs]).Value
'              lngLinBD = lngLinBD + 1
'           End If
'       Next lngLinIvs
       'penhor - evolutiva
       For lngLinIvs = 204 To 213
           If xl2Prop.Range("M" & [lngLinIvs]).value > 0 Then  '- garantia
              bd5Garan.Range("B" & [lngLinBD]).value = lngLinBD - 1
              'bd5Garan.Range("C" & [lngLinBD]).Value = Range("REG_PROJ").Value
              bd5Garan.Range("D" & [lngLinBD]).value = lngLinBD - 1
              'GSOL00042588 - Altera|fffd||fffd|o cadastros garantias
              'bd5Garan.Range("E" & [lngLinBD]).Value = 5
              bd5Garan.Range("E" & [lngLinBD]).value = 3
              bd5Garan.Range("F" & [lngLinBD]).value = 2
              'bd5Garan.Range("G" & [lngLinBD]).Value = xl2Prop.Range("AD" & [lngLinIvs]).Value
              bd5Garan.Range("H" & [lngLinBD]).value = Range("H" & [lngLinCli]).value
              bd5Garan.Range("L" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinIvs]).value
              bd5Garan.Range("M" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinIvs]).value
              lngLinBD = lngLinBD + 1
           End If
       Next lngLinIvs
       
       'avalistas
       For lngLinAval = 186 To 189
           If xl2Prop.Range("H" & [lngLinAval]).value <> vbNullString Then
              bd5Garan.Range("B" & [lngLinBD]).value = lngLinBD - 1
              'bd5Garan.Range("C" & [lngLinBD]).Value = Range("REG_PROJ").Value
              bd5Garan.Range("D" & [lngLinBD]).value = lngLinBD - 1
              bd5Garan.Range("E" & [lngLinBD]).value = 4
              bd5Garan.Range("F" & [lngLinBD]).value = 7
              bd5Garan.Range("H" & [lngLinBD]).value = Range("H" & [lngLinCli]).value
              bd5Garan.Range("I" & [lngLinBD]).value = xl2Prop.Range("H" & [lngLinAval]).value
              bd5Garan.Range("J" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinAval]).value
              bd5Garan.Range("K" & [lngLinBD]).value = 2
              lngLinBD = lngLinBD + 1
           End If
           '- conjugue 1|fffd| aval
           If xl2Prop.Range("O" & [lngLinAval]).value <> vbNullString Then
              bd5Garan.Range("B" & [lngLinBD]).value = lngLinBD - 1
              'bd5Garan.Range("C" & [lngLinBD]).Value = Range("REG_PROJ").Value
              bd5Garan.Range("D" & [lngLinBD]).value = lngLinBD - 1
              bd5Garan.Range("E" & [lngLinBD]).value = 4
              bd5Garan.Range("F" & [lngLinBD]).value = 7
              'bd5Coob1.Range("G" & [lngLinBD]).Value = Range("E" & [lngLinSel]).Value
              bd5Garan.Range("H" & [lngLinBD]).value = Range("H" & [lngLinCli]).value
              bd5Garan.Range("I" & [lngLinBD]).value = xl2Prop.Range("O" & [lngLinAval]).value
              bd5Garan.Range("J" & [lngLinBD]).value = xl2Prop.Range("J" & [lngLinAval]).value
              bd5Garan.Range("K" & [lngLinBD]).value = 2
              lngLinBD = lngLinBD + 1
           End If
       Next lngLinAval
       
       'hipoteca
       lngLinIvs = 237
        If xl2Prop.Range("M" & [lngLinIvs]).value > 0 Then  '- garantia
           bd5Garan.Range("B" & [lngLinBD]).value = lngLinBD - 1
           'bd5Garan.Range("C" & [lngLinBD]).Value = Range("REG_PROJ").Value
           bd5Garan.Range("D" & [lngLinBD]).value = lngLinBD - 1
           bd5Garan.Range("E" & [lngLinBD]).value = 5
           bd5Garan.Range("F" & [lngLinBD]).value = 1
           'bd5Garan.Range("G" & [lngLinBD]).Value = xl2Prop.Range("AD" & [lngLinIvs]).Value
           bd5Garan.Range("H" & [lngLinBD]).value = Range("H" & [lngLinCli]).value
           bd5Garan.Range("L" & [lngLinBD]).value = xl2Prop.Range("M" & [lngLinIvs]).value
           bd5Garan.Range("M" & [lngLinBD]).value = xl2Prop.Range("D" & [lngLinIvs]).value
           lngLinBD = lngLinBD + 1
        End If
      
       lngLinCli = lngLinCli + 1
       If lngLinCli > Range("FIM_BCLI").value Then Exit Do
    Loop
    bd5Garan.Activate
    protPlan.ProtegePlanilha
    Sheets([xlPlanX]).Activate
    Set protPlan = Nothing
End Sub

Sub geraBDRel1(lngSqOrc As Long, TpOrca As Byte)
    'Gera dados para o relat|fffd|rio de or|fffd|amento com agrupamento dos insumos
    Dim lngLinBD As Long, lngLinSel As Long, lngSbgIns As Long
    Dim dblVrIns As Double
    Dim bdInsu As String
    Dim bdPrso As String
    Dim bdPlan As String
    Dim bdTrcu As String
    Dim bdCobe As String
    Dim bdIrri As String
    Dim bdOutr As String
    
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    DelXlTmp
    Sheets.Add
    ActiveSheet.Name = "tmp"
    bdRel1.Activate
    protPlan.DesprotegePlanilha
    If Range("A1").value > 1 Then Range("A2:Z" & Range("A1").value).ClearContents
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd2Insu.Activate
    Else
      bd2Insu1.Activate
    End If
    protPlan.DesprotegePlanilha
    Range("A1").Calculate  ' Sprint 9 for|fffd|ar o c|fffd|lculo da c|fffd|lula para emitir BDRel
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
       lngLinBD = 2
       lngLinSel = Range("FIM_REL1").value + 1
       lngSbgIns = Range("E" & [lngLinBD]).value
       Do While Range("D" & [lngLinBD]).value <> vbNullString
          If Range("E" & [lngLinBD]).value = 0 Then
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "INSUMOS"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
              bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
              bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
              bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              lngLinSel = lngLinSel + 1
           Else
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "INSUMOS"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
              bdRel1.Range("I" & [lngLinSel]).value = 1
              bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                      (Range("L" & [lngLinBD]).value * _
                                                      Range("K" & [lngLinBD]).value)
              bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                      Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                 lngSbgIns = Range("E" & [lngLinBD] + 1).value
                 lngLinSel = lngLinSel + 1
              End If
           End If
           lngLinBD = lngLinBD + 1
           lngSbgIns = Range("E" & [lngLinBD]).value
           If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
        Loop
    End If
    
    If TpOrca = 0 Then
      bd2Insu.Activate
    Else
      bd2Insu1.Activate
    End If
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd3Prso.Activate
    Else
      bd3Prso1.Activate
    End If
    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
       lngLinBD = 2
       lngLinSel = Range("FIM_REL1").value + 1
       lngSbgIns = Range("E" & [lngLinBD]).value
       Do While Range("D" & [lngLinBD]).value <> vbNullString
          If Range("E" & [lngLinBD]).value = 0 Then
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "PREPARO DO SOLO"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
             bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
             bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
             bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             lngLinSel = lngLinSel + 1
          Else
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "PREPARO DO SOLO"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
             bdRel1.Range("I" & [lngLinSel]).value = 1
             bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                     (Range("L" & [lngLinBD]).value * _
                                                     Range("K" & [lngLinBD]).value)
             bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                     Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                lngSbgIns = Range("E" & [lngLinBD] + 1).value
                lngLinSel = lngLinSel + 1
             End If
          End If
          lngLinBD = lngLinBD + 1
          lngSbgIns = Range("E" & [lngLinBD]).value
          If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
       Loop
    End If
    
    If TpOrca = 0 Then
      bd3Prso.Activate
    Else
      bd3Prso1.Activate
    End If
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd4Plan.Activate
    Else
      bd4Plan1.Activate
    End If
    
    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
       lngLinBD = 2
       lngLinSel = Range("FIM_REL1").value + 1
       lngSbgIns = Range("E" & [lngLinBD]).value
       Do While Range("D" & [lngLinBD]).value <> vbNullString
          If Range("E" & [lngLinBD]).value = 0 Then
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "PLANTIO"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
             bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
             bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
             bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             lngLinSel = lngLinSel + 1
          Else
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "PLANTIO"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
             bdRel1.Range("I" & [lngLinSel]).value = 1
             bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                     (Range("L" & [lngLinBD]).value * _
                                                     Range("K" & [lngLinBD]).value)
             bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                     Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                lngSbgIns = Range("E" & [lngLinBD] + 1).value
                lngLinSel = lngLinSel + 1
             End If
          End If
          lngLinBD = lngLinBD + 1
          lngSbgIns = Range("E" & [lngLinBD]).value
          If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
       Loop
    End If

    If TpOrca = 0 Then
      bd4Plan.Activate
    Else
      bd4Plan1.Activate
    End If
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd5Trcu.Activate
    Else
      bd5Trcu1.Activate
    End If
    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
       lngLinBD = 2
       lngLinSel = Range("FIM_REL1").value + 1
       lngSbgIns = Range("E" & [lngLinBD]).value
       Do While Range("D" & [lngLinBD]).value <> vbNullString
          If Range("E" & [lngLinBD]).value = 0 Then
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "TRATOS CULTURAIS"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
             bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
             bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
             bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             lngLinSel = lngLinSel + 1
          Else
             bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
             bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
             bdRel1.Range("D" & [lngLinSel]).value = "TRATOS CULTURAIS"
             bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
             bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
             bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
             bdRel1.Range("I" & [lngLinSel]).value = 1
             bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                     (Range("L" & [lngLinBD]).value * _
                                                     Range("K" & [lngLinBD]).value)
             bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                     Range("I" & [lngLinBD]).value
             bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
             If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                lngSbgIns = Range("E" & [lngLinBD] + 1).value
                lngLinSel = lngLinSel + 1
             End If
          End If
          lngLinBD = lngLinBD + 1
          lngSbgIns = Range("E" & [lngLinBD]).value
          If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
       Loop
    End If
    
    If TpOrca = 0 Then
      bd5Trcu.Activate
    Else
      bd5Trcu1.Activate
    End If
    
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd6Cobe.Activate
    Else
      bd6Cobe1.Activate
    End If
    
    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
        lngLinBD = 2
        lngLinSel = Range("FIM_REL1").value + 1
        lngSbgIns = Range("E" & [lngLinBD]).value
        Do While Range("D" & [lngLinBD]).value <> vbNullString
           If Range("E" & [lngLinBD]).value = 0 Then
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "COLHEITA/BENEFICIAMENTO"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
              bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
              bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
              bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              lngLinSel = lngLinSel + 1
           Else
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "COLHEITA/BENEFICIAMENTO"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
              bdRel1.Range("I" & [lngLinSel]).value = 1
              bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                      (Range("L" & [lngLinBD]).value * _
                                                      Range("K" & [lngLinBD]).value)
              bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                      Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                 lngSbgIns = Range("E" & [lngLinBD] + 1).value
                 lngLinSel = lngLinSel + 1
              End If
           End If
           lngLinBD = lngLinBD + 1
           lngSbgIns = Range("E" & [lngLinBD]).value
           If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
        Loop
    End If

    If TpOrca = 0 Then
      bd6Cobe.Activate
    Else
      bd6Cobe1.Activate
    End If
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd7Irri.Activate
    Else
      bd7Irri1.Activate
    End If

    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
        lngLinBD = 2
        lngLinSel = Range("FIM_REL1").value + 1
        lngSbgIns = Range("E" & [lngLinBD]).value
        Do While Range("D" & [lngLinBD]).value <> vbNullString
           If Range("E" & [lngLinBD]).value = 0 Then
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "IRRIGA|fffd||fffd|O"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
              bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
              bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
              bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              lngLinSel = lngLinSel + 1
           Else
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "IRRIGA|fffd||fffd|O"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
              bdRel1.Range("I" & [lngLinSel]).value = 1
              bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                      (Range("L" & [lngLinBD]).value * _
                                                      Range("K" & [lngLinBD]).value)
              bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                      Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                 lngSbgIns = Range("E" & [lngLinBD] + 1).value
                 lngLinSel = lngLinSel + 1
              End If
           End If
           lngLinBD = lngLinBD + 1
           lngSbgIns = Range("E" & [lngLinBD]).value
           If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
        Loop
    End If
    
    If TpOrca = 0 Then
      bd7Irri.Activate
    Else
      bd7Irri1.Activate
    End If
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    If TpOrca = 0 Then
      bd8Outr.Activate
    Else
      bd8Outr1.Activate
    End If
    
    protPlan.DesprotegePlanilha
    Range("A1:Z" & Range("A1").value).Select
    Selection.AutoFilter Field:=4, Criteria1:="=" & lngSqOrc, Operator:=xlAnd
    Selection.Copy
    Sheets("tmp").Activate
    Range("A1").Select
    Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
    Application.CutCopyMode = False
    If Range("A1").value >= 2 Then
       ordenaBD
        lngLinBD = 2
        lngLinSel = Range("FIM_REL1").value + 1
        lngSbgIns = Range("E" & [lngLinBD]).value
        Do While Range("D" & [lngLinBD]).value <> vbNullString
           If Range("E" & [lngLinBD]).value = 0 Then
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "OUTROS"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("G" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = Range("J" & [lngLinBD]).value
              bdRel1.Range("I" & [lngLinSel]).value = Range("K" & [lngLinBD]).value
              bdRel1.Range("J" & [lngLinSel]).value = Range("L" & [lngLinBD]).value
              bdRel1.Range("K" & [lngLinSel]).value = Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              lngLinSel = lngLinSel + 1
           Else
              bdRel1.Range("B" & [lngLinSel]).value = lngSqOrc
              bdRel1.Range("C" & [lngLinSel]).value = Range("M" & [lngLinBD]).value
              bdRel1.Range("D" & [lngLinSel]).value = "OUTROS"
              bdRel1.Range("E" & [lngLinSel]).value = Range("E" & [lngLinBD]).value
              bdRel1.Range("F" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("G" & [lngLinSel]).value = Range("F" & [lngLinBD]).value
              bdRel1.Range("H" & [lngLinSel]).value = "VERBA"
              bdRel1.Range("I" & [lngLinSel]).value = 1
              bdRel1.Range("J" & [lngLinSel]).value = bdRel1.Range("J" & [lngLinSel]).value + _
                                                      (Range("L" & [lngLinBD]).value * _
                                                      Range("K" & [lngLinBD]).value)
              bdRel1.Range("K" & [lngLinSel]).value = bdRel1.Range("K" & [lngLinSel]).value + _
                                                      Range("I" & [lngLinBD]).value
              bdRel1.Range("L" & [lngLinSel]).value = Range("Q" & [lngLinBD]).value
              If Range("E" & [lngLinBD] + 1).value <> lngSbgIns Then
                 lngSbgIns = Range("E" & [lngLinBD] + 1).value
                 lngLinSel = lngLinSel + 1
              End If
           End If
           lngLinBD = lngLinBD + 1
           lngSbgIns = Range("E" & [lngLinBD]).value
           If Range("D" & [lngLinBD]).value = vbNullString Then Exit Do
        Loop
    End If
    
    If TpOrca = 0 Then
      bd8Outr.Activate
    Else
      bd8Outr1.Activate
    End If
        
    Selection.AutoFilter
    Sheets("tmp").Activate
    Cells.Select
    Selection.ClearContents
    bdRel1.Activate
    Calculate
    lngLinSel = Range("FIM_REL1").value + 1
    
    DelXlTmp
    
    If TpOrca = 0 Then   'Pronaf
        bd2Insu.Activate
        protPlan.ProtegePlanilha
        bd3Prso.Activate
        protPlan.ProtegePlanilha
        bd4Plan.Activate
        protPlan.ProtegePlanilha
        bd5Trcu.Activate
        protPlan.ProtegePlanilha
        bd6Cobe.Activate
        protPlan.ProtegePlanilha
        bd7Irri.Activate
        protPlan.ProtegePlanilha
        bd8Outr.Activate
        protPlan.ProtegePlanilha
    Else
        bd2Insu1.Activate
        protPlan.ProtegePlanilha
        bd3Prso1.Activate
        protPlan.ProtegePlanilha
        bd4Plan1.Activate
        protPlan.ProtegePlanilha
        bd5Trcu1.Activate
        protPlan.ProtegePlanilha
        bd6Cobe1.Activate
        protPlan.ProtegePlanilha
        bd7Irri1.Activate
        protPlan.ProtegePlanilha
        bd8Outr1.Activate
        protPlan.ProtegePlanilha
    
    End If
    
    bdRel1.Activate
    Set protPlan = Nothing
End Sub


Sub ordenaBD()
    'Classifica por
    '1. Or|fffd|amento
    '2. C|fffd|digo Sub-grupo Insumo
    ''3. Descri|fffd||fffd|o
    Range("A1:Z" & Range("A1").value).Sort Key1:=Range("D2"), Order1:=xlAscending, Key2:=Range("E2") _
        , Order2:=xlAscending, Header:=xlYes, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
End Sub
Private Function detalhaCPFCGC(ByVal astrCPFCGC As String) As inscricaoFederal
        Dim inscricao As inscricaoFederal
        astrCPFCGC = Trim(astrCPFCGC)
        astrCPFCGC = Application.WorksheetFunction.Substitute(astrCPFCGC, "-", "")
        astrCPFCGC = Application.WorksheetFunction.Substitute(astrCPFCGC, ".", "")
        astrCPFCGC = Application.WorksheetFunction.Substitute(astrCPFCGC, "/", "")
        
        If Verifica_CPF(astrCPFCGC) Then
           inscricao.inscricao = CLng(Mid(astrCPFCGC, 1, Len(astrCPFCGC) - 2))
           inscricao.filial = 0
           inscricao.digito = CInt(Right(astrCPFCGC, 2))
           
        ElseIf Verifica_CGC(astrCPFCGC) Then
           inscricao.inscricao = CLng(Mid(astrCPFCGC, 1, Len(astrCPFCGC) - 6))
           inscricao.filial = CInt(Left(Right(astrCPFCGC, 6), 4))
           inscricao.digito = CInt(Right(astrCPFCGC, 2))
        Else
           'deve ser inv|fffd|lido
        End If
        
        detalhaCPFCGC = inscricao
End Function
'Esta fun|fffd||fffd|o considera que existem no m|fffd|ximo 3 produtos para cada item de invers|fffd|o.
Sub exportaATCU(ByVal seqItemInversao As Integer, ByVal numCel As Integer)
    Dim Linha As Integer
    Linha = 35 + seqItemInversao
    Dim max, i, j, Col As Integer
    max = 0
    
    'identificando a maior receita e a quantidade de produtos com receita maior que zero
    For i = 1 To 2
        If xl2Prop.Range("N" & (numCel + i)).value = 0 Then
            Exit For
        ElseIf xl2Prop.Range("N" & (numCel + max)).value < xl2Prop.Range("N" & (numCel + i)).value Then
            max = i
        End If
    Next

   ' 'Preenchimento do seq de invers|fffd|o
   ' BD0SEAP.Cells(linha, 21).Value = seqItemInversao

    'Preenchimento das atividades
   ' col = 22 'correspondente a coluna V
   ' For j = 0 To i - 1
   '         BD0SEAP.Cells(linha, col).Value = xl2Prop.Range("T" & (numCel + j)).Value
   '         If j > 0 Then 'S|fffd| entra pra comparar se tiver mais de uma atividade (atendimento do incidente 2012-2307256)
   '             For Z = 1 To j
   '                 If BD0SEAP.Cells(linha, col - Z).Value = xl2Prop.Range("T" & (numCel + j)).Value Then
   '                     BD0SEAP.Cells(linha, col).Value = ""
   '                 End If
   '             Next
   '         End If
   '         col = col + 1
   ' Next
    
    'Define o indicador de consorcio.
    BD0SEAP.Range("I4").value = "N"

    For i = 130 To 159
        If xl2Prop.Range("S" & (i)).value = xl2Prop.Range("J47").value Then
            BD0SEAP.Range("I4").value = xl2Prop.Range("U" & (i)).value
            Exit For
        End If
    Next

End Sub

'Esta fun|fffd||fffd|o considera que existem no m|fffd|ximo 3 ATIVIDADES para cada item de invers|fffd|o.
Sub exportaATNv(ByVal seqItemInversao As Integer, ByVal numCel As Integer, ByVal OrcOrig As Integer)
    Dim Linha As Integer
    Linha = 35 + seqItemInversao
    Dim i, j, Col As Integer
    Dim aColuna(10) As String
        
    aColuna(1) = "M": aColuna(2) = "AD": aColuna(3) = "AU": aColuna(4) = "BL": aColuna(5) = "CC"
    aColuna(6) = "CT": aColuna(7) = "DK": aColuna(8) = "EB": aColuna(9) = "ES": aColuna(10) = "FJ"
        
    'Preenchimento do seq de invers|fffd|o
    BD0SEAP.Cells(Linha, 21).value = seqItemInversao

    'Preenchimento das atividades
    Col = 22 'correspondente a coluna V do DB0SEAP
    For i = 1 To 3
      If xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value <> 0 And xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value <> vbNullString Then
         If BD0SEAP.Cells(Linha, 22).value <> xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value And _
              BD0SEAP.Cells(Linha, 23).value <> xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value And _
              BD0SEAP.Cells(Linha, 24).value <> xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value Then
           BD0SEAP.Cells(Linha, Col).value = xl1Orca.Range(aColuna(OrcOrig) & (15 + i)).value
           Col = Col + 1
         End If
      End If
    Next i

End Sub

Public Sub atualizaListaPGPAF()

    xl2Prop.Range("W47:Z47").ClearContents
    Dim coluna As Integer
    coluna = 23

    For i = 130 To 159
        DoEvents
        If xl2Prop.Range("N" & i).value > 0 And xl2Prop.Range("N" & i).value = xl99Auxi.Range("FK21").value Then
        
            If xl2Prop.Range("S" & i).value <> "" And xl2Prop.Range("S" & i).value <> "0" Then
                xl2Prop.Cells(47, coluna) = xl2Prop.Range("S" & i).value
                coluna = coluna + 1
                flagBusca = 1
            End If

        End If
    Next
    
    flagBusca = 1
    
    If coluna = 23 Or xl2Prop.Range("W46").value = 0 Then 'N|fffd|o |fffd| PRONAF
        xl2Prop.Range("J47").value = "N|fffd|o se aplica."
        xl2Prop.Range("J47").Interior.ColorIndex = 15
        xl2Prop.Range("J47:O47").Locked = True

    Else
        xl2Prop.Range("J47:O47").Locked = False

        If xl2Prop.Range("J47").value = "N|fffd|o se aplica." Then
            xl2Prop.Range("J47").value = ""
            xl2Prop.Range("J47").Interior.ColorIndex = xlNone
        End If
    End If
    flagBusca = 0
End Sub

Public Function VerificaProgramaEstiagem() As Boolean

    'CPMBraxis
    For lngLinSel = 2 To 33

        If xl99Auxi.Range("BP" & [lngLinSel]).value = xl2Prop.Range("E46").value Then
        
            If xl99Auxi.Range("BQ" & [lngLinSel]).value = 528 Or xl99Auxi.Range("BQ" & [lngLinSel]).value = 529 Then
                    VerificaProgramaEstiagem = True
                    Exit Function
            End If

         End If
         
    Next lngLinSel

VerificaProgramaEstiagem = False

End Function

Private Function VerificaProgramaEstiagemValor() As Boolean

    'CPMBraxis
    'Verificar se o limite do cr|fffd|dito foi atingido e n|fffd|o deixar Gerar SEAP
    For lngLinSel = 2 To 33

        If xl99Auxi.Range("BP" & [lngLinSel]).value = xl2Prop.Range("E46").value Then
        
            If xl99Auxi.Range("BQ" & [lngLinSel]).value = 528 Or xl99Auxi.Range("BQ" & [lngLinSel]).value = 529 Then
        
                If xl2Prop.Range("M85").value > xl99Auxi.Range("BU" & [lngLinSel]).value Then
                    VerificaProgramaEstiagemValor = True
                    Exit Function
    
                End If
                
            End If

         End If
         
    Next lngLinSel

VerificaProgramaEstiagemValor = False

End Function
'Sprint 9 RNM - INI
Sub AtividadeEcon()
    
    Dim aColuna(10) As String
    Dim Seq, Lin, Ord As Byte
    Dim StrAba As String
        
    StrAba = ActiveSheet.Name
        
    aColuna(1) = "M": aColuna(2) = "AD": aColuna(3) = "AU": aColuna(4) = "BL": aColuna(5) = "CC"
    aColuna(6) = "CT": aColuna(7) = "DK": aColuna(8) = "EB": aColuna(9) = "ES": aColuna(10) = "FJ"
        
    'Preenchimento do seq de invers|fffd|o
    Application.ScreenUpdating = False
    'Limpar os dados
    xl99Auxi.Range("IG53:IG" & xl99Auxi.Range("IH52").value).ClearContents
    
    'Preenchimento das atividades
    Lin = 53
    For Seq = 1 To 10
      For Ord = 1 To 3
         If (xl1Orca.Range(aColuna(Seq) & Ord + 15).value <> vbNullString) Or _
             (xl1Orca.Range(aColuna(Seq) & Ord + 15).value <> 0) Then
            xl99Auxi.Range("IG" & Lin).value = xl1Orca.Range(aColuna(Seq) & Ord + 15).value
            Lin = Lin + 1
         End If
      Next Ord
    Next Seq
    
    xl99Auxi.Range("IH52").Calculate
     
    If xl99Auxi.Range("IH52").value > 52 Then
        ActiveWorkbook.Names.Add Name:="listaAtivOrc", RefersToR1C1:= _
            "=Auxiliar!R53C241:R" & xl99Auxi.Range("IH52").value & "C241"
        
       ' Ordena|fffd||fffd|o das atividades
       ' xl99Auxi.Range("IG51").Select
       ' Application.Goto Reference:="listaAtivOrc"
       ' ActiveWorkbook.Worksheets("Auxiliar").Sort.SortFields.Clear
       ' ActiveWorkbook.Worksheets("Auxiliar").Sort.SortFields.Add Key:=Range("IG51:IG" & xl99Auxi.Range("IH50").Value - 1 _
       '      ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
       ' With ActiveWorkbook.Worksheets("Auxiliar").Sort
       '     .SetRange Range("IG51:IG" & xl99Auxi.Range("IH50").Value - 1)
       '     .Header = xlGuess
       '     .MatchCase = False
       '     .Orientation = xlTopToBottom
       '     .SortMethod = xlPinYin
       '     .Apply
       ' End With
     Else
        ActiveWorkbook.Names.Add Name:="listaAtivOrc", RefersToR1C1:= _
            "=Auxiliar!R53C241"
     End If

End Sub
'Sprint 9 RNM - FIM

'Sprint 10 RNM - INI
Sub atualizaRef()

   Dim L_Inv, L_seq As Byte
   Dim xlPlan As String
   Dim protPlan As clsProtecao
   Set protPlan = New clsProtecao
          
   flagBusca = 1
   xlPlan = ActiveSheet.Name
   Application.ScreenUpdating = False
   bd10Geodesica.Activate
   Calculate
   protPlan.DesprotegePlanilha
   
   L_seq = 1
   bd10Geodesica.Range("A2:E97").ClearContents
   
   'Custeio agricola
   For L_Inv = 58 To 67
      If xl2Prop.Range("AJ" & [L_Inv]).value <> vbNullString Then
          L_seq = L_seq + 1
          bd10Geodesica.Range("A" & [L_seq]).value = xl2Prop.Range("AD" & [L_Inv]).value  'AD NRO DA INVERSAO  AD  PARA A
          bd10Geodesica.Range("B" & [L_seq]).value = xl2Prop.Range("AJ" & [L_Inv]).value  'NOME DA INVERSAO AJ PARA B
          bd10Geodesica.Range("C" & [L_seq]).value = xl2Prop.Range("W" & [L_Inv]).value   'C|fffd|DIGO DA INVERSAO W PARA C
          bd10Geodesica.Range("D" & [L_seq]).FormulaLocal = "=SE(|fffd|ERROS(PROCV(Proposta!P" & [L_Inv] & ";SQ_Municipio;1;0));"""";PROCV(Proposta!P" & [L_Inv] & ";SQ_Municipio;2;0))" ' para D
          bd10Geodesica.Range("E" & [L_seq]).value = xl2Prop.Range("G" & [L_Inv]).value  '|fffd|rea  G para E
      End If
   Next L_Inv
   
   'Historico de Invers|fffd|o para eventual altera|fffd||fffd|o de invers|fffd|o.
   For L_Inv = 2 To 97
       bd10Geodesica.Range("M" & [L_Inv]).value = bd10Geodesica.Range("A" & [L_Inv]).value
       bd10Geodesica.Range("N" & [L_Inv]).value = bd10Geodesica.Range("B" & [L_Inv]).value
   Next L_Inv
   
   'calculate   INCLUS|fffd|O
   bd10Geodesica.Range("F1").Calculate
   bd10Geodesica.Range("B99").Calculate
   
   'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
   'Inv_Geodesica
   ActiveWorkbook.Names.Add Name:="Inv_Geodesica_Hist", RefersToR1C1:= _
                 "=Geodesica!R2C13:R" & bd10Geodesica.Range("f1").value + 1 & "C14"

   'Adequar o range das linhas de acordo com a quantidade de invers|fffd|es
   'Inv_Geodesica
   bd10Geodesica.Range("F1").Calculate
   ActiveWorkbook.Names.Add Name:="Inv_Geodesica", RefersToR1C1:= _
                 "=Geodesica!R2C1:R" & bd10Geodesica.Range("F1").value + 1 & "C5"
   
   'Adequar o range das linhas de acordo com a quantidade de Pontos
   'SQ_GlebaPontos
   bd10Geodesica.Range("B99").Calculate
   ActiveWorkbook.Names.Add Name:="SQ_GlebaPontos", RefersToR1C1:= _
                 "=Geodesica!R101C6:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
                 
   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
   'SQ_Geodesica
   ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
                 "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
                 
   'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
   'SQ_Invers|fffd|o_Gleba
   ActiveWorkbook.Names.Add Name:="SQ_Invers|fffd|o_Gleba", RefersToR1C1:= _
                 "=Geodesica!R101C3:R" & bd10Geodesica.Range("B99").value + 100 & "C19"
   Application.ScreenUpdating = False

   'Impedir que tenha sujeira na planilha quando inicializar o cadastro de Coordenadas
   bd10Geodesica.Calculate
   For L_Inv = 101 To 65536
     On Error Resume Next
     If bd10Geodesica.Range("A" & [L_Inv]).value <> "" Then
        If bd10Geodesica.Range("A" & [L_Inv]).value = "#N/D" Then
           bd10Geodesica.Rows(L_Inv).Select
           Selection.Delete Shift:=xlUp
        End If
     Else
        Exit For
     End If
   Next L_Inv

   protPlan.ProtegePlanilha
   Set protPlan = Nothing
   
   Sheets([xlPlan]).Activate
End Sub
'Sprint 10 RNM - FIM


Sub AtualizaOrca()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    Dim ContLin As Byte  ' GSOL00695920
    Dim oFuncao As String
    Dim ListaPosicao() As String
    
    protPlan.DesprotegePlanilha
    Rows("85:88").EntireRow.Hidden = True           'RNM 16052016
    oFuncao = "selORCA" & Format(Range("A11").value, "00")
    protPlan.DesprotegePlanilha
    Run [oFuncao]
    
    ActiveSheet.Shapes("btnORCA_PRONAF").Visible = True
    protPlan.DesprotegePlanilha
    Rows("92:114").EntireRow.Hidden = True
    protPlan.DesprotegePlanilha
    Rows("128:135").EntireRow.Hidden = True
    protPlan.DesprotegePlanilha
    Rows("138:144").EntireRow.Hidden = True
    protPlan.DesprotegePlanilha
    Rows("221:288").EntireRow.Hidden = True
    If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
        'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
       protPlan.DesprotegePlanilha
       ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
       Range(ListaPosicao(Range("A11").value - 1) & "7").Select
       Selection.Locked = True
       
       Range(ListaPosicao(Range("A11").value - 1) & "7").Offset(, -1).Select
       Selection.Locked = True
       
       Range("J12").Locked = False
       Range("D7:G7").Locked = True
       Range("D8:G10").Locked = True
       Range("D13:E13").Locked = True
       Range("C16:G18").Locked = True
       Range("C21:G84").Locked = True
       Range("I21:I84").Locked = True
       
       Range("AA12").Locked = False
       Range("U7:X7").Locked = True
       Range("U8:X10").Locked = True
       Range("U13:V13").Locked = True
       Range("T16:X18").Locked = True
       Range("T21:X84").Locked = True
       Range("Z21:Z84").Locked = True
       
       Range("AR12").Locked = False
       Range("AL7:AO7").Locked = True
       Range("AL8:AO10").Locked = True
       Range("AL13:AM13").Locked = True
       Range("AK16:AO18").Locked = True
       Range("AK21:AO84").Locked = True
       Range("AQ21:AQ84").Locked = True
       
       Range("BI12").Locked = False
       Range("BC7:BF7").Locked = True
       Range("BC8:BF10").Locked = True
       Range("BC13:BD13").Locked = True
       Range("BB16:BF18").Locked = True
       Range("BB21:BF84").Locked = True
       Range("BH21:BH84").Locked = True
       
       Range("BZ12").Locked = False
       Range("BT7:BW7").Locked = True
       Range("BT8:BW10").Locked = True
       Range("BT13:BU13").Locked = True
       Range("BS16:BW18").Locked = True
       Range("BS21:BW84").Locked = True
       Range("BY21:BY84").Locked = True
       
       Range("CQ12").Locked = False
       Range("CK7:CN7").Locked = True
       Range("CK8:CN10").Locked = True
       Range("CK13:CL13").Locked = True
       Range("CJ16:CN18").Locked = True
       Range("CJ21:CN84").Locked = True
       Range("CP21:CP84").Locked = True
       
       Range("DH12").Locked = False
       Range("DB7:DE7").Locked = True
       Range("DB8:DE10").Locked = True
       Range("DB13:DC13").Locked = True
       Range("DA16:DE18").Locked = True
       Range("DA21:DE84").Locked = True
       Range("DG21:DG84").Locked = True
       
       Range("DY12").Locked = False
       Range("DS7:DV7").Locked = True
       Range("DS8:DV10").Locked = True
       Range("DS13:DT13").Locked = True
       Range("DR16:DV18").Locked = True
       Range("DR21:DV84").Locked = True
       Range("DX21:DX84").Locked = True
       
       Range("EP12").Locked = False
       Range("EJ7:EM7").Locked = True
       Range("EJ8:EM10").Locked = True
       Range("EJ13:EK13").Locked = True
       Range("EI16:EM18").Locked = True
       Range("EI21:EM84").Locked = True
       Range("EO21:EO84").Locked = True
       
       Range("FG12").Locked = False
       Range("FA7:FD7").Locked = True
       Range("FA8:FD10").Locked = True
       Range("FA13:FB13").Locked = True
       Range("EZ16:FD18").Locked = True
       Range("EZ21:FD84").Locked = True
       Range("FF21:FF84").Locked = True
       Rows("8:9").Hidden = False
       ActiveSheet.Shapes("CmDBtn01").Left = 465
       ActiveSheet.Shapes("CmDBtn01").Top = 141.75
       'TelaOrca 0

    Else
       
       protPlan.DesprotegePlanilha
       ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
       Range(ListaPosicao(Range("A11").value - 1) & "7").Select
       With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=ListaTPOrca"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
       End With
       
       Selection.Locked = False

       Range(ListaPosicao(Range("A11").value - 1) & "7").Offset(, -1).Select
       Selection.Locked = False

       protPlan.DesprotegePlanilha
       Range("J12").Locked = False
       Range("D7:G7").Locked = False
       Range("D8:G10").Locked = False
       Range("D13:G13").Locked = False
       Range("C16:G18").Locked = False
       Range("C21:G84").Locked = False
       Range("I21:I84").Locked = True
       
       Range("AA12").Locked = False
       Range("U7:X7").Locked = False
       Range("U8:X10").Locked = False
       Range("U13:X13").Locked = False
       Range("T16:X18").Locked = False
       Range("T21:X84").Locked = False
       Range("Z21:Z84").Locked = True
       
       Range("AR12").Locked = False
       Range("AL7:AO7").Locked = False
       Range("AL8:AO10").Locked = False
       Range("AL13:AO13").Locked = False
       Range("AK16:AO18").Locked = False
       Range("AK21:AO84").Locked = False
       Range("AQ21:AQ84").Locked = True
       
       Range("BI12").Locked = False
       Range("BC7:BF7").Locked = False
       Range("BC8:BF10").Locked = False
       Range("BC13:BF13").Locked = False
       Range("BB16:BF18").Locked = False
       Range("BB21:BF84").Locked = False
       Range("BH21:BH84").Locked = True
       
       Range("BZ12").Locked = False
       Range("BT7:BW7").Locked = False
       Range("BT8:BW10").Locked = False
       Range("BT13:BW13").Locked = False
       Range("BS16:BW18").Locked = False
       Range("BS21:BW84").Locked = True
       Range("BY21:BY84").Locked = False
       
       Range("CQ12").Locked = False
       Range("CK7:CN7").Locked = False
       Range("CK8:CN10").Locked = False
       Range("CK13:CN13").Locked = False
       Range("CJ16:CN18").Locked = False
       Range("CJ21:CN84").Locked = False
       Range("CP21:CP84").Locked = True
       
       Range("DH12").Locked = False
       Range("DB7:DE7").Locked = False
       Range("DB8:DE10").Locked = False
       Range("DB13:DE13").Locked = False
       Range("DA16:DE18").Locked = False
       Range("DA21:DE84").Locked = False
       Range("DG21:DG84").Locked = True
       
       Range("DY12").Locked = False
       Range("DS7:DV7").Locked = False
       Range("DS8:DV10").Locked = False
       Range("DS13:DV13").Locked = False
       Range("DR16:DV18").Locked = False
       Range("DR21:DV84").Locked = False
       Range("DX21:DX84").Locked = True
       
       Range("EP12").Locked = False
       Range("EJ7:EM7").Locked = False
       Range("EJ8:EM10").Locked = False
       Range("EJ13:EM13").Locked = False
       Range("EI16:EM18").Locked = False
       Range("EI21:EM84").Locked = False
       Range("EO21:EO84").Locked = True
       
       Range("FG12").Locked = False
       Range("FA7:FD7").Locked = False
       Range("FA8:FD10").Locked = False
       Range("FA13:FD13").Locked = False
       Range("EZ16:FD18").Locked = False
       Range("EZ21:FD84").Locked = False
       Range("FF21:FF84").Locked = True
       
       'pintar de cinza
       
       protPlan.DesprotegePlanilha
       If xl2Prop.Range("M46").value = "N|fffd|o" Then
          Rows("8:9").Hidden = True  'INI - OS Padr|fffd|o 156835 - Demanda GSOL01049552 - CUSTEIO AGR|fffd|COLA-INCLUIR CR|fffd|TICA PARA OS CAMPOS OBRIGAT|fffd|RIOS DO ZONEAMENTO AGR|fffd|COLA.
          ActiveSheet.Shapes("CmDBtn01").Top = 117
       Else
          Rows("8:9").Hidden = False  'FIM - OS Padr|fffd|o 156835 - Demanda GSOL01049552 - CUSTEIO AGR|fffd|COLA-INCLUIR CR|fffd|TICA PARA OS CAMPOS OBRIGAT|fffd|RIOS DO ZONEAMENTO AGR|fffd|COLA.
          ActiveSheet.Shapes("CmDBtn01").Top = 147
       End If
       protPlan.DesprotegePlanilha
       Rows("19:88").Hidden = False
       ActiveSheet.Shapes("CmDBtn01").Left = 465
    End If
    
    
    'INICIO: Tratamento da aliquota do PROAGRO (GSOL00223679)
    Dim contrataPROAGRO As Boolean
    Dim programaPRONAF As Boolean
    Dim proagroMAIS As Boolean
    Dim listaPROAGRO() As String
    Dim lngCor As Variant
    
    '  status padr|fffd|o
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    listaPROAGRO = Split("D,U,AL,BC,BT,CK,DB,DS,EJ,FA", ",")
    
    ' define os booleanos PROAGRO
    contrataPROAGRO = xl2Prop.Range("flagPROAGRO").value <> "0"
    programaPRONAF = IIf(InStr(xl2Prop.Range("E46"), "PRONAF") > 0, True, False)
    proagroMAIS = IIf(InStr(xl2Prop.Range("E48"), "mais") > 0, True, False)
    
    For i = LBound(listaPROAGRO) To UBound(listaPROAGRO)
        protPlan.DesprotegePlanilha
  '      xl1Orca.Range(listaPROAGRO(i) & "14").EntireRow.Hidden = Not contrataPROAGRO
        If Not contrataPROAGRO Then
            Range(listaPROAGRO(i) & 14).ClearContents
            Range(listaPROAGRO(i) & 14).Locked = True
            PintaTela 0, listaPROAGRO(i) & 14, -0.249946592608417
        Else
            PintaTela 0, listaPROAGRO(i) & 14, 0
            Range(listaPROAGRO(i) & 14).Locked = False
        End If
        

    Next i
    
'        Dim listaPROAGRO() As String
'    listaPROAGRO = Split("D,U,AL,BC,BT,CK,DB,DS,EJ,FA", ",")
'
'    For i = LBound(listaPROAGRO) To UBound(listaPROAGRO)
'        protPlan.DesprotegePlanilha
'  '      xl1Orca.Range(listaPROAGRO(i) & "14").EntireRow.Hidden = Not contrataPROAGRO
'        PintaTela lngTelaOrca, aColunas([lngTelaOrca], 2) & 14, lngCorBranco
'    Next i
    
'    RETIRADA DA OP|fffd||fffd|O DE EXCLUS|fffd|O DE PARCELAS - (GSOL01044922) - INI
'    protPlan.DesprotegePlanilha
'    If Range("totalORCA" & Format(Range("A11").value, "00")).value > 0 And xl2Prop.Range("E10").value <> "Sim" Then
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = True
'        ActiveSheet.Shapes("Drop-down 738").Visible = True
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = True
'
'        ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
'
'        DoEvents
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top
'        ActiveSheet.Shapes("Drop-down 738").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 10
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 35
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 10
'        ActiveSheet.Shapes("Drop-down 738").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 20
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 19
'
'    Else
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
'        ActiveSheet.Shapes("Drop-down 738").Visible = False
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
'    End If
'    RETIRADA DA OP|fffd||fffd|O DE EXCLUS|fffd|O DE PARCELAS - (GSOL01044922) - INI
    
    flagBusca = 0
    Range("nomeORCA" & Format(Range("A11").value, "00")).Select
    protPlan.ProtegePlanilha
    
'    If xl2Prop.Range("E10").value = "Sim" Then
'       Alterar_Parcelas CInt(Format(Range("A11").value, "00"))
'    End If
    
    Set protPlan = Nothing
End Sub

Sub AtualizaOrcamento()
  AtualizaOrca
  Extrativismo CInt(xl1Orca.Range("A11").value)
  TelaOrcaPinta CInt(xl1Orca.Range("A11").value)
End Sub

'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
Sub LimparComentImv(NumImv As Integer)
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
     
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    
    With xl2Prop
          .Range("P" & NumImv).ClearComments
          .Range("P" & NumImv).AddComment
          .Range("P" & NumImv).Comment.Delete
    End With


End Sub
'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - FIM
Sub InserirComentImv(NumImv As Integer)
    Dim strNIRF, strCEI, strSNCR, strCAR As String
    
    Set protPlan = New clsProtecao
     
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    
    
    With xl2Prop
        strNIRF = .Range("AI" & NumImv).value
        strCEI = .Range("AJ" & NumImv).value
        strSNCR = .Range("AK" & NumImv).value
        strCAR = .Range("AL" & NumImv).value
        
        .Range("P" & NumImv).ClearComments
        .Range("P" & NumImv).AddComment                                 ' Criar coment|fffd|rio com  a finalidade, Atividade, Modalidade e Variedade do empreendimento
        .Range("P" & NumImv).Comment.Visible = False
        .Range("P" & NumImv).Comment.text text:="NIRF: " & strNIRF & Chr(10) & _
                                              "Matr|fffd|cula CEI: " & strCEI & Chr(10) & _
                                              "C|fffd|digo SNCR: " & strSNCR & Chr(10) & _
                                              "N|fffd|mero Registro CAR: " & strCAR
        'aumentar a caixa de coment|fffd|rio
        .Range("P" & NumImv).Comment.Shape.ScaleHeight 1.1, msoFalse, msoScaleFromTopLeft
        .Range("P" & NumImv).Comment.Shape.ScaleWidth 1.8, msoFalse, msoScaleFromTopLeft
        .Range("P" & NumImv).Comment.Visible = False
    
    
    End With
protPlan.ProtegePlanilha


End Sub
Function ConvertToLetter(iCol As Integer) As String
   Dim iAlpha As Integer
   Dim iRemainder As Integer
   iAlpha = Int(iCol / 27)
   iRemainder = iCol - (iAlpha * 26)
   If iAlpha > 0 Then
      ConvertToLetter = Chr(iAlpha + 64)
   End If
   If iRemainder > 0 Then
      ConvertToLetter = ConvertToLetter & Chr(iRemainder + 64)
   End If
End Function
Attribute VB_Name = "mdlInterface"
Sub girPENHOR_Altera|fffd||fffd|o()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    Range("E114").RowHeight = Range("P114").value
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub
Sub girHIPOT_Altera|fffd||fffd|o()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    protPlan.DesprotegePlanilha
    Range("E124").RowHeight = Range("P124").value
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub limpaBene()
    If MsgBox("Deseja limpar todos os campos?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
    Range("E9:E21").value = vbNullString
    Range("E23:E28").value = vbNullString
    Range("E32:E41").value = vbNullString
    'Range("E45:E54").Value = vbNullString
    Range("E58:E72").value = vbNullString
    Range("O44").value = True
    preencherEndCorrespondencia
    'Range("E80:E83").Value = vbNullString
    'Range("C98:C102").Value = ""
    'Range("E114:E115").Value = vbNullString
    'Range("E124:E125").Value = vbNullString
    Range("E9").Select
End Sub
Sub girPARTEC_Altera|fffd||fffd|o()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.DesprotegePlanilha
    Range("D270").RowHeight = Range("S270").value
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub
Sub girCONSI_Altera|fffd||fffd|o()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    protPlan.DesprotegePlanilha
    Range("D242").RowHeight = Range("S242").value
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub montaPropIndi()
    Dim lngLinSel As Long
End Sub
Sub incluiCULT_Clique()
    Dim lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    lngLinSel = 58
    protPlan.DesprotegePlanilha
    Do While lngLinSel <= 67
       If Range("D" & [lngLinSel]).EntireRow.Hidden = True Then
          Range("D" & [lngLinSel]).EntireRow.Hidden = False
          protPlan.DesprotegePlanilha
          Range("D" & [lngLinSel] + 36).EntireRow.Hidden = False
          protPlan.DesprotegePlanilha
          Range("D" & [lngLinSel] + 72).EntireRow.Hidden = False
          Exit Do
       End If
       lngLinSel = lngLinSel + 1
    Loop
    Range("D" & [lngLinSel]).Select
incluiCULT_Fim:
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
    Exit Sub
End Sub
Sub incluiIMPLE_Clique()
    Dim lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    lngLinSel = 74
    protPlan.DesprotegePlanilha
    Do While lngLinSel <= 78
       If Range("D" & [lngLinSel]).EntireRow.Hidden = True Then
          Range("D" & [lngLinSel]).EntireRow.Hidden = False
          Range("D" & [lngLinSel] + 30).EntireRow.Hidden = False
          Exit Do
       End If
       lngLinSel = lngLinSel + 1
    Loop
    Range("D" & [lngLinSel]).Select
incluiIMPLE_Fim:
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
    Exit Sub
End Sub

Sub ocultaBarras()
    On Error Resume Next
    Application.CommandBars("Formatting").Visible = False
    Application.CommandBars("Drawing").Visible = False
    'Application.CommandBars("EuroValue").Visible = False
    ActiveWindow.DisplayWorkbookTabs = False
    'Application.DisplayFormulaBar = False
    Application.DisplayStatusBar = True
    On Error GoTo 0
    
End Sub

Sub exibeBarras()
    On Error Resume Next
    Application.CommandBars("Formatting").Visible = True
    Application.CommandBars("Drawing").Visible = True
    Application.DisplayFormulaBar = True
    Application.DisplayStatusBar = True
    ActiveWindow.DisplayWorkbookTabs = True
End Sub

Sub incluiIMOVEL_Clique()
    Dim lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    lngLinSel = 34
    protPlan.DesprotegePlanilha
    Do While lngLinSel <= 42
       If Range("D" & [lngLinSel]).EntireRow.Hidden = True Then
          Range("D" & [lngLinSel]).EntireRow.Hidden = False
          ActiveWorkbook.Names.Add Name:="listaIMV", RefersToR1C1:= _
                                         "=Proposta!R33C16:R" & [lngLinSel] & "C16"
          Exit Do
       End If
       lngLinSel = lngLinSel + 1
    Loop
    Range("D" & [lngLinSel]).Select
incluiIMOVEL_Fim:
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
    Exit Sub
End Sub

Sub incluiAVAL_Clique()
    Dim lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    lngLinSel = 186
    protPlan.DesprotegePlanilha
    Do While lngLinSel <= 189
       If Range("D" & [lngLinSel]).EntireRow.Hidden = True Then
          Range("D" & [lngLinSel]).EntireRow.Hidden = False
          Range("D" & [lngLinSel] + 30).EntireRow.Hidden = False
          Exit Do
       End If
       lngLinSel = lngLinSel + 1
    Loop
    Range("D" & [lngLinSel]).Select
incluiAVAL_Fim:
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
    Exit Sub
End Sub
Sub btnATUA_PROP_Clique()
    Dim lngLinSel As Long
    Dim FormulaName, FormulaRefer As String
    Dim Pos As Variant
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    Pos = ActiveCell.Address
    
    protPlan.IniciaRotina True
    If Range("P33").value <> vbNullString Then
        FormulaName = "=Proposta!R33C16:R33C16"
        FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
        ActiveWorkbook.Names.Add Name:="listaIMV", RefersTo:=FormulaRefer
        Rows(33).AutoFit
    End If
    If Range("E24").value <> vbNullString Then
       If Verifica_CPF(Range("E24").value) Then
          Range("E24").NumberFormat = "000"".""000"".""000-00"
       ElseIf Verifica_CGC(Range("E24").value) Then
          Range("E24").NumberFormat = "00"".""000"".""000""/""0000-00"
       Else
          Range("E24").NumberFormat = "000"".""000"".""000-00"
       End If
    End If
    
    If Range("E33").value <> vbNullString Then
       If Verifica_CPF(Range("E33").value) Then
          Range("E33").NumberFormat = "000"".""000"".""000-00"
       ElseIf Verifica_CGC(Range("E33").value) Then
          Range("E33").NumberFormat = "00"".""000"".""000""/""0000-00"
       Else
          Range("E33").NumberFormat = "000"".""000"".""000-00"
       End If
    End If
   
    For lngLinSel = 34 To 42
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
           FormulaName = "=Proposta!R33C16:R" & [lngLinSel] & "C16"
           FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
           ActiveWorkbook.Names.Add Name:="listaIMV", RefersTo:=FormulaRefer
           If Verifica_CPF(Range("E" & [lngLinSel]).value) Then
              Range("E" & [lngLinSel]).NumberFormat = "000"".""000"".""000-00"
           ElseIf Verifica_CGC(Range("E" & [lngLinSel]).value) Then
              Range("E" & [lngLinSel]).NumberFormat = "00"".""000"".""000""/""0000-00"
           Else
              Range("E" & [lngLinSel]).NumberFormat = "000"".""000"".""000-00"
           End If
           
           Rows([lngLinSel]).AutoFit
           'ActiveWorkbook.Names.Add Name:="listaIMV", RefersToR1C1:= _
                                         "=Proposta!R33C16:R" & [lngLinSel] & "C16"
        Else
           protPlan.DesprotegePlanilha
           Range("D" & [lngLinSel] & ":O" & [lngLinSel]).ClearContents
           If Not Range("A" & [lngLinSel]).EntireRow.Hidden Then Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
     
    xl2Prop.Activate
    xl2Prop.Range("E46:j46").Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=listaP_CRED"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erro no preenchimento"
        .InputMessage = ""
        .ErrorMessage = "Selecione um dos Programas de Cr|fffd|dito listados no campo."
        .ShowInput = True
        .ShowError = True
    End With
     
     
    For lngLinSel = 58 To 67
        Range("A" & [lngLinSel]).EntireRow.AutoFit
        flagBusca = 1
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
           xl2Prop.Range("F" & [lngLinSel]).value = retornaCulturaConsorciada(Range("D" & [lngLinSel]))
        Else
           Range("D" & [lngLinSel] & ":H" & [lngLinSel]).value = vbNullString
           Range("K" & [lngLinSel] & ":L" & [lngLinSel]).value = vbNullString
           Range("O" & [lngLinSel] & ":P" & [lngLinSel]).value = vbNullString
           protPlan.IniciaRotina True
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
        
    Next lngLinSel
    flagBusca = 0
    For lngLinSel = 74 To 78
        Range("A" & [lngLinSel]).EntireRow.AutoFit
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
        Else
           Range("D" & [lngLinSel]).value = vbNullString
           Range("G" & [lngLinSel]).value = vbNullString
           Range("I" & [lngLinSel]).value = vbNullString
           Range("K" & [lngLinSel]).value = vbNullString
           Range("O" & [lngLinSel]).value = vbNullString
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
       End If
       
    Next lngLinSel
    
    Calculate
    protPlan.IniciaRotina True
    For lngLinSel = 94 To 103
        Range("A" & [lngLinSel]).EntireRow.AutoFit
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
        Else
           Range("G" & [lngLinSel]).value = vbNullString
           Range("J" & [lngLinSel]).value = vbNullString
           Range("M" & [lngLinSel]).value = vbNullString
           Range("P" & [lngLinSel]).value = vbNullString
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
    For lngLinSel = 104 To 113
        Range("A" & [lngLinSel]).EntireRow.AutoFit
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False

            'Divis|fffd|o das parcelas da taxa de elabora|fffd||fffd|o.
'            If lngLinSel = 113 Then
'                Range("E113").value = 25
'                If Range("valorTOTAL") <= 100000 Then
'                    Range("H113").value = 37.5
'                    Range("K113").value = 37.5
'                Else
'                    Range("H113").value = 25
'                    Range("K113").value = 25
'                End If
'
'                Range("E113").Locked = False
'                Range("E113").Interior.ColorIndex = xlNone
'
'                Range("H113").Locked = False
'                Range("H113").Interior.ColorIndex = xlNone
'
'                Range("K113").Locked = False
'                Range("K113").Interior.ColorIndex = xlNone
'
'            End If
             Range("E113").EntireRow.Hidden = True
        Else
           Range("E" & [lngLinSel]).value = vbNullString
           Range("G" & [lngLinSel]).value = vbNullString
           Range("H" & [lngLinSel]).value = vbNullString
           Range("J" & [lngLinSel]).value = vbNullString
           Range("K" & [lngLinSel]).value = vbNullString
           Range("M" & [lngLinSel]).value = vbNullString
           Range("P" & [lngLinSel]).value = vbNullString
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel

    For lngLinSel = 121 To 124
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
        Else
           Range("E" & [lngLinSel]).value = vbNullString
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
     
    For lngLinSel = 130 To 159
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
        Else
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
    For lngLinSel = 187 To 189
        If Range("A" & [lngLinSel]).value = 1 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
        Else
           Range("H" & [lngLinSel]).value = vbNullString
           Range("J" & [lngLinSel]).value = vbNullString
           Range("O" & [lngLinSel]).value = vbNullString
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
    For lngLinSel = 204 To 213
        If Range("M" & [lngLinSel]).value > 0 Then
           Range("A" & [lngLinSel]).EntireRow.Hidden = False
           If Range("D" & [lngLinSel]).value = vbNullString Then
              Range("D" & [lngLinSel]).value = Range("S" & [lngLinSel]).value
           End If
        Else
           Range("A" & [lngLinSel]).EntireRow.Hidden = True
        End If
    Next lngLinSel
    
    'GSOL00064951
    If Range("S275").value = 1 Then
       Range("C280:O287").ClearContents
       Rows("279:287").Hidden = True
    Else
       Rows("279:287").Hidden = False
       For lngLinSel = 280 To 287
           If Range("A" & [lngLinSel]).value = 1 Then
              Rows([lngLinSel]).Hidden = False
           Else
              Rows([lngLinSel]).Hidden = True
           End If
       Next lngLinSel
    End If
    
       
    'teste
    Dim intColcel As Integer
    Dim intLincel As Integer
    Dim intLincel2 As Integer
    intColcel = 14
    intColcel2 = 8
    For i = 0 To 9
        For intLincel = 3 To 6
           If xl1Orca.Cells(intLincel, intColcel + (17 * [i])).value = "Verdadeiro" Or xl1Orca.Cells(intLincel, intColcel + (17 * [i])).value = "Falso" Then
              PlanilhaAtual = ActiveSheet.Name
              flagBusca = 1
              xl1Orca.Activate
              protPlan.IniciaRotina
              flagBusca = 1
              If intLincel < 6 Then
                xl1Orca.Cells(intLincel, intColcel + (17 * [i])).FormulaLocal = "=SE(" & ConvertToLetter((intColcel - 1) + (17 * [i])) & intLincel & ">0;" & ConvertToLetter((intColcel - 1) + (17 * [i])) & intLincel & "/" & ConvertToLetter(intColcel2 + (17 * [i])) & "$90%;0)"
              Else                                                                       '=100-SOMA(BM3:BM5)
                xl1Orca.Cells(intLincel, intColcel + (17 * [i])).FormulaLocal = "=100-SOMA(" & ConvertToLetter(intColcel + (17 * [i])) & "3:" & ConvertToLetter(intColcel + (17 * [i])) & "5)"
              End If
              protPlan.FinalizaRotina
              Sheets([PlanilhaAtual]).Activate
           End If
        Next intLincel
        flagBusca = 0
    Next i
    
'    If xl1Orca.Range("N5").value = "Verdadeiro" Or xl1Orca.Range("N5").value = "Falso" Then
'       PlanilhaAtual = ActiveSheet.Name
'       xl1Orca.Activate
'       protPlan.IniciaRotina
'       xl1Orca.Range("N5").FormulaLocal = "=SE(M5>0;M5/H90%;0)"
'       protPlan.FinalizaRotina
'       Sheets([PlanilhaAtual]).Activate
'    End If
'
'    If xl1Orca.Range("N6").value = "Verdadeiro" Or xl1Orca.Range("N6").value = "Falso" Then
'       PlanilhaAtual = ActiveSheet.Name
'       xl1Orca.Activate
'       protPlan.IniciaRotina
'       xl1Orca.Range("N6").FormulaLocal = "=SE(M6>0;M6/H90%;0)"
'       protPlan.FinalizaRotina
'       Sheets([PlanilhaAtual]).Activate
'    End If

   
    If ActiveSheet.Name = "Proposta" Then
       Range("E48").Select
       MontaListaProagro
       Range("E54").Select
       MontaLista
    End If
   
    'GSOL00094929

    If xl99Auxi.Range("GK18").value = 2 Then
      xl2Prop.Activate
       For lngLinSel = 293 To 300
           On Error Resume Next
           If Range("A" & [lngLinSel]).value = 1 Then
              Rows([lngLinSel]).Hidden = True
           Else
              xl2Prop.Rows([lngLinSel]).Hidden = True
           End If
       Next lngLinSel
    End If
    
    If ActiveSheet.Name <> "Orcamento" Then
        protPlan.DesprotegePlanilha
        atualizaListaPGPAF
    End If

    Range(Pos).Select
    
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub botaoNOVO_Clique()
    If MsgBox("Deseja limpar as informa|fffd||fffd|es da Proposta?", _
       vbQuestion + vbYesNo, "Nova Proposta de Custeio") = vbNo Then Exit Sub
    Dim lngOrca As Long
    Dim lngLinSel As Integer
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
    Range("E10").value = "N|fffd|o"   ' Sprint 9 - RNM - INI AgroAmigo Crescer
    Range("E11:E14").value = vbNullString
    Range("S21").value = vbNullString
    Range("E22:E26").value = vbNullString
    'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM INI
    Range("E27").value = vbNullString
    'Inclus|fffd|o do item Munic|fffd|pio Com Decreto de Emerg|fffd|ncia (S/N) GSOL00800850 - RNM FIM
    Range("E28").value = vbNullString
    Range("D33:K42").ClearContents
    protPlan.IniciaRotina True
    Range("M33:O42").ClearContents
    protPlan.IniciaRotina True
    'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    For lngLinSel = 33 To 42
        LimparComentImv lngLinSel
    Next lngLinSel
    Range("AI33:AL42").value = vbNullString
    'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - FIM
    Range("D34:O42").EntireRow.Hidden = True
    Range("V44").value = 0
    'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - INI
    Range("O45").value = vbNullString
    Range("J48").value = vbNullString
    Range("N54").value = vbNullString
    'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - FIM
    'Sprint 11 - INI
    Range("M46").value = ""
    Range("U46").value = 0
    'Sprint 11 - FIM
    Range("E11:E14").value = vbNullString
    'Range("J48").value = vbNullString   Desativado a inser|fffd||fffd|o de PROAGRO
    Range("E44:E52").value = vbNullString
    Range("E53").ClearContents
    Range("M48:O48").ClearContents    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Range("L53").value = "CUSTEIO AGR|fffd|COLA (54)"  'RTC 31115 - PLANO SAFRA 2016/2017 RNM
    flagBusca = 1
    Range("D58:H67").ClearContents
    flagBusca = 0
    Range("K58:L67").ClearContents
    Range("O58:P67").ClearContents
    Range("D74:L78").ClearContents
    'Sprint 9 - RNM  - INI
    protPlan.IniciaRotina True
    Range("O74:O78").Select
    Selection.Locked = False
    Selection.ClearContents
    Selection.ClearComments
    Selection.Locked = True
    Range("S74:S78").ClearContents
    'Sprint 9 - RNM  - FIM
    Range("K83:L83").ClearContents        'GSOL00878466  - Inclus|fffd|o de Terceiros da taxa
    'GSOL00122838 Range("E104:E113").ClearContents
    Range("E104:E113").ClearContents
    Range("G94:G113").ClearContents
    'GSOL00122838 Range("H104:G113").ClearContents
    Range("H104:G112").ClearContents
    Range("J94:J113").ClearContents
    Range("E113").EntireRow.Hidden = True
    'GSOL00122838 Range("K104:K113").ClearContents
    Range("K104:K112").ClearContents
    Range("M94:M113").ClearContents
    Range("P94:P113").ClearContents
    Range("D120:F120").ClearContents
    Range("E120:F124").ClearContents
    Range("L130:M159").ClearContents
    Range("D186:P189").ClearContents
    Range("D204:L213").ClearContents
    Range("D237:O237").ClearContents
    Range("D242:O242").ClearContents
    Range("E245:O246").ClearContents
    Range("F252:O253").ClearContents
    Range("D270:O270").ClearContents
    Range("E272:O272").ClearContents
    Range("E273:G273").ClearContents
    Range("J273:O273").ClearContents
     protPlan.DesprotegePlanilha
    Range("F58:F67").ClearContents 'GSOL00910095
    Range("E272").value = "=E51"
    Range("E116").value = vbNullString
    Range("D58").EntireRow.Hidden = False
    Range("D74").EntireRow.Hidden = False
    Range("S275").value = 1
    Range("C280:O287").ClearContents
    Rows("279:287").Hidden = True
    
    xl8Agencia.Activate
    protPlan.DesprotegePlanilha
    Range("I5").Select
    ActiveCell.FormulaR1C1 = "2"
    Range("D6:F6").Select
    ActiveCell.FormulaR1C1 = "=IF(Proposta!R13C5=0,"" "",Proposta!R13C5)"
    Range("D7:F7").Select
    Selection.ClearContents
    Range("D8:F8").Select
    Selection.ClearContents
    Range("D9:F9").Select
    Selection.ClearContents
    Range("D10:F10").Select
    Selection.ClearContents
    protPlan.ProtegePlanilha
    
    bd4Benef.Activate
    protPlan.DesprotegePlanilha
    If Range("FIM_BCLI").value > 1 Then
       Range("A2:CZ" & Range("FIM_BCLI").value).ClearContents
    End If
    protPlan.ProtegePlanilha
    bd5Coob.Activate
    protPlan.DesprotegePlanilha
    If Range("FIM_COOB").value > 1 Then
       Range("A2:CZ" & Range("FIM_COOB").value).ClearContents
    End If
    protPlan.ProtegePlanilha
    xl99Auxi.Activate '
    protPlan.DesprotegePlanilha
    'GSOL00660171 - RNM INCLUS|fffd|O DO COMPONENTE
    'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersToR1C1:= _
    '           "=Auxiliar!R1C77:R537C78"
    'GSOL00660171 - RNM INCLUS|fffd|O DO COMPONENTE
    'GSOL00083049
    Range("GG12").value = 0
    Range("GG13").value = Date
    Range("GG14").value = "segunda"
    Range("GG15").value = 1
    Range("GH12").value = 0
    
    protPlan.ProtegePlanilha
    
    xl3Bene.Activate
    protPlan.DesprotegePlanilha
    Range("E9:E21").value = vbNullString
    Range("E23:E30").value = vbNullString
    Range("E32:E41").value = vbNullString   'RNM ALTERADO DE 35 PARA 41 PARA LIMPAR ENDERE|fffd|O 20130529
    Range("E43:E57").value = vbNullString
    Range("E62:E67").value = vbNullString
    Range("E75:E78").value = vbNullString
    Range("E80:E83").value = vbNullString
    Range("E114:E115").value = vbNullString
    Range("E124:E125").value = vbNullString
    protPlan.ProtegePlanilha
    
    xl5Coob.Activate
    protPlan.DesprotegePlanilha
    Range("E10:E31").value = vbNullString
    Range("E33:E36").value = vbNullString
    Range("E44:E58").value = vbNullString
    protPlan.ProtegePlanilha
    
    Dim BooLimpa As Boolean
    BooLimpa = False
    If MsgBox("Deseja limpar as informa|fffd||fffd|es dos OR|fffd|AMENTOS?", _
       vbQuestion + vbYesNo, ":: Custeio - Nova Proposta") = vbYes Then
       Application.ScreenUpdating = False
       For lngOrca = 1 To 10
           flagBusca = 1
           Application.ScreenUpdating = False
           xl1Orca.Activate
           LimparOrcamento lngOrca, 0
           xl1OrcaBkp.Activate
           LimparOrcamento lngOrca, 1   'Sprint 13  - RNM 16/10/2017
           Application.ScreenUpdating = False
           'LimparGlebaPontos CInt(xl1Orca.Range("A11").value), "0"  'SQ_invers|fffd|o
           Application.ScreenUpdating = False
           BooLimpa = True
       Next lngOrca
       Application.ScreenUpdating = False
       selORCA01
    End If
    flagBusca = 0
    Application.ScreenUpdating = False
    xl2Prop.Activate
    
    'Coordenadas Geod|fffd|sicas
    If BooLimpa Then
      Application.ScreenUpdating = False
      bd10Geodesica.Activate
      protPlan.DesprotegePlanilha
      Application.ScreenUpdating = False
      Range("A2:E98").ClearContents
      Range("A101:BQ" & Rows.Count).ClearContents
      Range("M2:N99").ClearContents
      Range("B99").Calculate
      'Limpar tela Geodesica
      xl14Geodesica.Range("E4:I4").ClearContents
      xl14Geodesica.Range("E14").value = vbNullString
      xl14Geodesica.Range("E15").value = vbNullString
      xl14Geodesica.Range("G21:I80").ClearContents
      'Sprint 11 limpar dados de importa|fffd||fffd|o
       protPlan.DesprotegePlanilha
       On Error Resume Next
      xl00Busca.Range("DM3:GR" & Rows.Count).ClearContents
      xl00Busca.Range("DM3:GR" & Rows.Count).ClearFormats
    End If
    
    xl2Prop.Activate
    protPlan.DesprotegePlanilha
    'GSOL01923226 - RNM - INI
    Rows("320:326").Hidden = False
    ActiveSheet.Shapes("btn_opc_TcrPre").Visible = True
    ActiveSheet.Shapes("btn_opc_TcrPos").Visible = True
    ActiveSheet.Shapes("Caixa de grupo 7635").Visible = True
    Range("S320").value = 1
    'GSOL01923226 - RNM - FIM
    
    'GSOL00083049
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    telaDeclPRONAF xl99Auxi.Range("flagDecPRONAF").value
    
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 INI RNM 23/07/2018
    'Deixar o valor padr|fffd|o
    xl2Prop.Range("TJCRural").value = 1
    'GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 INI RNM 23/07/2018
    
    'GSOL00094929
    TelaProAgro 0
    Application.ScreenUpdating = False
    btnATUA_PROP_Clique
    
    flagBusca = 0
    
    protPlan.FinalizaRotina
    Range("E11").Select  'Sprint 9 - RNM - INI
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Set protPlan = Nothing
End Sub


Sub incluiREEM_Clique()
    If Range("AD120").value = 999 Then
       MsgBox "A periodicidade escolhida permite apenas um reembolso.", vbExclamation, "Reembolso Custeio"
       Exit Sub
    End If
     Dim lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
     
     lngLinSel = 121
     protPlan.DesprotegePlanilha
     Do While lngLinSel <= 124
        If Range("D" & [lngLinSel]).EntireRow.Hidden = True Then
           Range("D" & [lngLinSel]).EntireRow.Hidden = False
           Exit Do
        End If
        lngLinSel = lngLinSel + 1
     Loop
     Range("D" & [lngLinSel]).Select
incluiREEM_Fim:
     protPlan.ProtegePlanilha
     Set protPlan = Nothing
     Exit Sub
End Sub

Sub btnAJUDA_Clique()
    Dim oWrdAjuda As Object
    On Error Resume Next
    Set oWrdAjuda = CreateObject("word.application")
    If Err Then
       MsgBox "Ocorreu um erro ao iniciar o aplicativo Microsoft Word." & vbCrLf & _
              "Pode ser que o mesmo n|fffd|o esteja instalado." & vbCrLf & _
              "O arquivo de ajuda n|fffd|o pode ser visualizado.", vbExclamation, ":: Arquivo de Ajuda"
       Exit Sub
    End If

    oWrdAjuda.ChangeFileOpenDirectory ActiveWorkbook.Path & "\"
    oWrdAjuda.Documents.Open Filename:="""Manual Custeio Agr|fffd|cola.doc"""
    oWrdAjuda.Visible = True
    Set oWrdAjuda = Nothing
End Sub
'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos Desativar Procedure- INI
'Sub btnATIV_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
    
'    Range("D11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
'    flagBusca = 1
'    Range("D11").Value = aListaATV(Range("M11").Value)
'    ProtPlan.DesprotegePlanilha
'    Range("undORCA01").ClearContents
'    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV2_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("U11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("U11").Value = aListaATV(Range("AD11").Value)
''    ProtPlan.DesprotegePlanilha
'    Range("undORCA02").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub
'Sub btnATIV3_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
' '   Dim ProtPlan As clsProtecao
' '   Set ProtPlan = New clsProtecao
'
'    Range("AL11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("AL11").Value = aListaATV(Range("AU11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA03").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV4_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
'    Set ProtPlan = New clsProtecao
'
'    Range("BC11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("BC11").Value = aListaATV(Range("BL11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA04").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV5_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("BT11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("BT11").Value = aListaATV(Range("CC11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA05").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV6_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
' '   Dim ProtPlan As clsProtecao
' '   Set ProtPlan = New clsProtecao
'
'    Range("BT11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("CK11").Value = aListaATV(Range("CT11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA06").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub
'Sub btnATIV7_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("DB11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("DB11").Value = aListaATV(Range("DK11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA07").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV8_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("DS11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("DS11").Value = aListaATV(Range("EB11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA08").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub

'Sub btnATIV9_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("EJ11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("EJ11").Value = aListaATV(Range("ES11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA09").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub


'Sub btnATIV10_Altera|fffd||fffd|o()
'    Dim aListaATV(5) As String
''    Dim ProtPlan As clsProtecao
''    Set ProtPlan = New clsProtecao
'
'    Range("FA11").Select
'    aListaATV(1) = "CR|fffd|DITO ROTATIVO"
'    aListaATV(2) = "BENEFICIAMENTO OU INDUSTRIALIZACAO"
'    aListaATV(3) = "EXTRACAO DE PRODUTOS DE ESPECIES NATIVAS"
'    aListaATV(4) = "LAVOURA"
'    aListaATV(5) = "OUTRAS APLICACOES CUSTEIO"
''    flagBusca = 1
'    Range("FA11").Value = aListaATV(Range("FJ11").Value)
''    ProtPlan.DesprotegePlanilha
''    Range("undORCA10").ClearContents
'    flagBusca = 0
''    Set ProtPlan = Nothing
'End Sub
'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos Desativar Procedure- FIM

Sub btnORCA_PRONAF_Clique()
    frmOrca.Show
    AtualizaOrca
    flagBusca = 0
End Sub

Sub TelaProAgro(flagProagro As Integer)
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    If flagProagro = 1 Then
        'GSOL00142352
        If Range("flagPROAGRO").value = 2 Then
            Range("K48:L48").Select
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            Selection.Borders(xlInsideVertical).LineStyle = xlNone
            Range("M48:O48").Select
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            
            protPlan.DesprotegePlanilha
            ActiveCell.ClearComments
            ActiveCell.AddComment
            ActiveCell.Comment.text text:= _
                  "Preencher, caso exista Valor Gar.Renda Min., em  opera|fffd||fffd|es, com  PROAGRO+."
                  '"Preencher caso exista valor de recursos pr|fffd|prios enquadrado em outras opera|fffd||fffd|es, com ades|fffd|o ao PROAGRO+."
            ActiveCell.Comment.Visible = False
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                :=xlBetween, Formula1:="0", Formula2:=xl99Auxi.Range("GD2").value
                .ErrorMessage = "Valor fora do intervalo de 0,00 a " + _
                                Format(xl99Auxi.Range("GD2").value, "#,###.00")
                .ShowInput = True
                .ShowError = True
            End With
            Selection.Interior.ColorIndex = xlNone
            Selection.Locked = False
            Selection.FormulaHidden = False
            Range("K48:L48").Select
            ActiveCell.FormulaR1C1 = "Garantia de Renda M|fffd|nima:"
         Else
            Range("K48:O48").Select
            Selection.Validation.Delete
            Selection.ClearContents
            Selection.ClearComments
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlHairline
                .ColorIndex = xlAutomatic
            End With
            Selection.Borders(xlEdgeRight).LineStyle = xlNone
            Selection.Borders(xlInsideVertical).LineStyle = xlNone
            Selection.Locked = True
            Selection.FormulaHidden = False
            Selection.Interior.ColorIndex = 15
            Range("M48:O48").Select
            Selection.ClearContents    'Essa linha est|fffd| selecionando outras celulas fora do contexto K48:O48, por isso foi comentada.
        End If

        'Comentando o trecho para atender ao incidente GSOL00507818, conforme orienta|fffd||fffd|o de Paulo Manso. Em 25/01/2012
        'Range("D74:L78").Select
        'Selection.ClearContents
        'Selection.Locked = True
        'Selection.Interior.ColorIndex = 15
        'Range("O74:O78").Select
        'Selection.ClearContents
        'Selection.Locked = True
        'Selection.Interior.ColorIndex = 15
        
        'GSOL00094929
        protPlan.DesprotegePlanilha
        Rows("288:290").Hidden = False
        ActiveSheet.Shapes("cxDecPROAGRO").Visible = True
        ActiveSheet.Shapes("optDECL_1b").Visible = True
        ActiveSheet.Shapes("optDECL_2b").Visible = True
        If xl99Auxi.Range("GK18").value <> 2 Then
            Range("C293:O300").ClearContents
            Rows("291:301").Hidden = True
        Else
            Rows("291:301").Hidden = False
            For lngLinSel = 294 To 300
                If Range("A" & [lngLinSel]).value = 1 Then
                    Rows([lngLinSel]).Hidden = False
                Else
                    Rows([lngLinSel]).Hidden = True
                End If
            Next lngLinSel
        End If
        
        'GSOL00551305
        Rows("55").Hidden = False
        
        Range("E49").Select
    Else
        Range("K48:O48").Select
        Range("K48:O48").ClearContents
        Selection.Validation.Delete
        Selection.ClearComments
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlHairline
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlHairline
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlHairline
            .ColorIndex = xlAutomatic
        End With
        Selection.Borders(xlEdgeRight).LineStyle = xlNone
        Selection.Borders(xlInsideVertical).LineStyle = xlNone
        Selection.Locked = True
        Selection.FormulaHidden = False
        Selection.Interior.ColorIndex = 15
        
        Range("D74:L78").Select
        Selection.Locked = False
        Selection.Interior.ColorIndex = xlNone
       ' Range("O74:O78").Select  'Sprint 9 retirada do campo
       ' Selection.Locked = False
       ' Selection.Interior.ColorIndex = xlNone
        
        'GSOL00094929
        xl99Auxi.Range("GK18").value = 1
        Range("C293:O300").ClearContents
        ActiveSheet.Shapes("cxDecPROAGRO").Visible = False
        ActiveSheet.Shapes("optDECL_1b").Visible = False
        ActiveSheet.Shapes("optDECL_2b").Visible = False
        protPlan.DesprotegePlanilha
        Rows("288:301").Hidden = True
        
        '<< GSOL00551305
        Rows("55").Hidden = True
        Range("F55:G55").ClearContents
        ' GSOL00551305 >>
        
        Range("M48:O48").Select
        Selection.ClearContents    'Essa linha est|fffd| selecionando outras celulas fora do contexto K48:O48, por isso foi comentada.
        
        Range("E49").Select
        
        Range("E46:j46").Select
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=listaP_CRED"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Erro no preenchimento"
            .InputMessage = ""
            .ErrorMessage = "Selecione um dos Programas de Cr|fffd|dito listados no campo."
            .ShowInput = True
            .ShowError = True
        End With
        
    End If

    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub TelaOrca(lngTelaOrca As Integer)
    Dim lngOrca As Long
    Dim lngLinSelOrc As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    Dim aColOrc(1, 10) As String, strTelaOrca As String
    
    aColOrc(1, 1) = "L"
    aColOrc(1, 2) = "AC"
    aColOrc(1, 3) = "AT"
    aColOrc(1, 4) = "BK"
    aColOrc(1, 5) = "CB"
    aColOrc(1, 6) = "CS"
    aColOrc(1, 7) = "DJ"
    aColOrc(1, 8) = "EA"
    aColOrc(1, 9) = "ER"
    aColOrc(1, 10) = "FI"
    
    'If xl99Auxi.Range("flagORCA_PRONAF").value <> "1" Then
    'If xl2Prop.Range("flagPROAGRO").value <> "0" And lngTelaOrca <> 0 Then  'GSOL01923762 Retirar PROAGRO PARA EXIBIR TAXA
    If lngTelaOrca <> 0 Then  'GSOL01923762 Retirar PROAGRO PARA EXIBIR TAXA
        protPlan.DesprotegePlanilha
        For lngLinSelOrc = 85 To 88
            If Cells([lngLinSelOrc], aColOrc(1, [lngTelaOrca])).value = 0 Then
               If Not Rows([lngLinSelOrc]).Hidden Then Rows([lngLinSelOrc]).Hidden = True
            Else
               If Rows([lngLinSelOrc]).Hidden Then Rows([lngLinSelOrc]).Hidden = False
            End If
        Next lngLinSelOrc
    
  '    Exit Sub
    End If
'   Exit Sub
   
    If lngTelaOrca = 0 Then
       'or|fffd|amento ativo
       lngTelaOrca = 1
       Do While lngTelaOrca <= 10
          strTelaOrca = "ORCA" & Format([lngTelaOrca], "00")
          If Range([strTelaOrca]).EntireColumn.Hidden = False Then Exit Do
          lngTelaOrca = lngTelaOrca + 1
       Loop
    End If
    Application.ScreenUpdating = False
    
    For lngLinSelOrc = 21 To 84                       'RNM16022016
       protPlan.DesprotegePlanilha
       If Rows([lngLinSelOrc]).Hidden Then
          Rows([lngLinSelOrc]).Hidden = False
       End If
    Next lngLinSelOrc
    
   ' OrdenarOr|fffd|amento CInt(Range("A11").value), 0
    
    TelaOrcaPinta CInt(Range("A11").value)
    
    If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then ' _
        'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then 'N|fffd|O CRITICAR OR|fffd|AMENTO 1 MILH|fffd|O 20170630
        For lngLinSelOrc = 21 To 88
            If Cells([lngLinSelOrc], aColOrc(1, [lngTelaOrca])).value = 0 Then
               protPlan.DesprotegePlanilha
               Rows([lngLinSelOrc]).Hidden = True
            Else
               protPlan.DesprotegePlanilha
               Rows([lngLinSelOrc]).Hidden = False
            End If
        Next lngLinSelOrc
    End If

    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Function ExisteArquivo(ByVal Arquivo As String)
'- Verifica a exist|fffd|ncia de um arquivo
         If Len(Dir(Arquivo)) > 0 Then
            ExisteArquivo = True
         Else
            ExisteArquivo = False
         End If
End Function



Sub uf_LogErro(ByVal strMsgErr As String)
    Dim intArq As Integer
    intArq = FreeFile
    Open ActiveWorkbook.Path & "\LOG033XL.TXT" For Append As intArq
    Print #intArq, strMsgErr
    Close #intArq
End Sub


'Exibe ou n|fffd|o os itens da Declara|fffd||fffd|o
Sub ExibeDeclaracao()
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.DesprotegePlanilha
    If Range("S275").value = 1 Then
       Range("C280:O287").ClearContents
       Rows("279:287").Hidden = True
    Else
       Rows("279:287").Hidden = False
       If Range("C280").value = vbNullString Then Range("C280").value = "X"
    End If
    btnATUA_PROP_Clique
    Set protPlan = Nothing
End Sub

'GSOL00094929 Exibe ou n|fffd|o os itens da Declara|fffd||fffd|o
Sub ExibeDeclaracaoPROAGRO()
    If ActiveSheet.Name <> "Proposta" Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina False
    If xl99Auxi.Range("GK18").value = 1 Then
       Range("C293:O300").ClearContents
       Rows("291:301").Hidden = True
    Else
       Rows("291:301").Hidden = False
       If Range("C293").value = vbNullString Then Range("C293").value = "X"
    End If
    btnATUA_PROP_Clique
    Range("C290").Select
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

'Tem que fechar versao com o nome PlanilhaCusteio.xls
Sub FechaVersao()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    Application.Run "PlanilhaCusteio.xls!NotProtegeAll"
    
    'MsgBox ("Recomenda|fffd|ao ao realizar o fechamento da planilha de Custeio! Deve-se realizar a conex|fffd|o manualmente e conferir os dados relativo ao or|fffd|amento")
    
   'atualizar tabela Atividade
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    'ActiveWorkbook.Connections("AG016_GER01 Ddes033 V400ATVE(Atividades_Custeio)").Refresh
    Range("FA3").Select
    Selection.QueryTable.Refresh BackgroundQuery:=False3
    
   'atualizar tabela Ag|fffd|ncias
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
'    ActiveWorkbook.Connections("G07MSCP02\BD03 ddes400 t400unop(Ag|fffd|ncia_Custeio)").Refresh
    Range("L3").Select
    Selection.QueryTable.Refresh BackgroundQuery:=False3
    
    'atualizar tabela jurisdi|fffd||fffd|o
    xl99Auxi.Activate
    Range("O3").Select
    protPlan.DesprotegePlanilha
'    ActiveWorkbook.Connections("G07MSCP02\BD03 ddes400").Refresh
    Selection.QueryTable.Refresh BackgroundQuery:=False3
    
    Sheets("BD_ORC").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_INSU").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PRSO").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PLAN").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_TRCU").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_COBE").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_IRRI").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PRC").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3

' SPRINT 11 - INCLUS|fffd|O DO OR|fffd|AMENTO AT|fffd| 01 MILH|fffd|O - 01/03/2017 - INI
    Sheets("BD_ORC1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_INSU1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PRSO1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PLAN1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_TRCU1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_COBE1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_IRRI1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
'
    Sheets("BD_PRC1").Select
    protPlan.DesprotegePlanilha
'    Selection.QueryTable.Refresh BackgroundQuery:=False3
' SPRINT 11 - INCLUS|fffd|O DO OR|fffd|AMENTO AT|fffd| 01 MILH|fffd|O - 01/03/2017 - FIM

    Sheets("Menu").Select
    Range("I21").Select
    protPlan.DesprotegePlanilha
    ActiveCell.FormulaR1C1 = "=TODAY()"
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.Run "PlanilhaCusteio.xls!ProtegeAll"
End Sub
Sub limparOrcamentos()
    Set protPlan = New clsProtecao

    protPlan.IniciaRotina False
   
    xl1Orca.Activate
    For lngLinSel = 1 To 10
        LimparOrcamento [lngLinSel], 0
        'LimparGlebaPontos [lngLinSel], "0"  'SQ_invers|fffd|o
    Next lngLinSel
    
    'apaga os orcamentos existentes e o Backup para compara|fffd||fffd|o 'Sprint 11
    xl1OrcaBkp.Activate
    For lngCont = 1 To 10
        LimparOrcamento [lngCont], 1
    Next lngCont
        
    selORCA01
    flagBusca = 1
    xl2Prop.Activate
    'Range("M45").Value = "N|fffd|o" 'Sprint 9 Retirada do Campo Enquadramento no PTAE RNM
    flagBusca = 1
    protPlan.DesprotegePlanilha
    Range("D58:H67").ClearContents
    Range("K58:L67").ClearContents
    Range("O58:P67").ClearContents
    protPlan.FinalizaRotina
End Sub

Sub MontaLista()
' Monta uma Lista SIM/NAO na c|fffd|lula selecionada
    ActiveSheet.Unprotect Password:="senhasBN"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=ListaSIMNAO"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    ActiveSheet.Protect Password:="senhasBN"
End Sub

Sub MontaListaProagro()
' Monta uma Lista SIM/NAO na c|fffd|lula selecionada
    ActiveSheet.Unprotect Password:="senhasBN"
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=listaPROAGRO"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    ActiveSheet.Protect Password:="senhasBN"
End Sub


Sub habilitar()

  'HABILITAR LINHAS HORIZONTAIS, VERTICAIS, GUIA DE PLANILHAS CABE|fffd|ALHOS E FORMULAS


    With ActiveWindow
        .DisplayHorizontalScrollBar = True  ' Linha Horizontal
        .DisplayVerticalScrollBar = True    ' Linha Vertical
        .DisplayWorkbookTabs = True         ' Guia de Planilhas
    End With
    ActiveWindow.DisplayHeadings = True     ' Cabe|fffd|alhos
    Application.DisplayFormulaBar = True    ' Formula
End Sub

Sub Desabilitar()

 'DESABILITAR LINHAS HORIZONTAIS, VERTICAIS, GUIA DE PLANILHAS CABE|fffd|ALHOS E FORMULAS

    With ActiveWindow
        .DisplayHorizontalScrollBar = False  ' Linha Horizontal
        .DisplayVerticalScrollBar = False    ' Linha Vertical
        .DisplayWorkbookTabs = False         ' Guia de Planilhas
    End With
    ActiveWindow.DisplayHeadings = False     ' Cabe|fffd|alhos
    Application.DisplayFormulaBar = False    ' Formula
End Sub

Sub ListarRefer|fffd|ncias()
    'Identifica o GUID de uma dll para que seja poss|fffd|vel for|fffd|ar a inclus|fffd|o na refer|fffd|ncia
    Dim i As Long
    Debug.Print "Refer|fffd|ncia", "GUID", , , "Caminho"
    
    For i = 1 To ThisWorkbook.VBProject.References.Count
        With ThisWorkbook.VBProject.References(i)
            Debug.Print .Name, .GUID, .fullpath
        End With
    Next i

End Sub

Sub AdicionarRefer|fffd|ncia()
     
    Dim strGUID As String
     
    'Mude a GUID abaixo para a refer|fffd|ncia que precisar
    'Neste exemplo, a refer|fffd|ncia |fffd| ao Word 2010
    strGUID = "{39D0D43F-CF94-4188-A474-FBD54E7A67F8}"
     
    'Suprimir erros para trat|fffd|-los posteriormente
    On Error Resume Next
     
    'Adicionar refer|fffd|ncia
    ThisWorkbook.VBProject.References.AddFromGuid GUID:=strGUID _
      , Major:=1 _
      , Minor:=0
    
    On Error GoTo 0

End Sub

Sub Chama_Empree(NrOrc As String, CodEmpre As String, CodSistProd As String)

'GSOL00605618 - RNM - Inclus|fffd|o do componente preencherempreendimento.dll
Dim OrcFin(10) As String
Dim OrcBac(10) As String
Dim OrcUnid(10) As String
Dim OrcSitProd(10) As String
Dim OrcVared(10) As String
Dim OrcCons(10) As String
Dim OrcCult(10) As String

Dim CProg As String
Dim strTipoCult As String
Dim lngcodCult As Integer
Dim lobjintegra As Object
Dim lobjemp As Object

Dim protPlan As clsProtecao
Set protPlan = New clsProtecao

 'Valida|fffd||fffd|o se h|fffd| um programa selecionado.
    If xl2Prop.Range("S46").value <> vbNullString And xl2Prop.Range("S46").value <> -1 Then
        CProg = xl2Prop.Range("S46").value
    Else
        MsgBox ("|fffd| necess|fffd|rio que seja preenchido o Programa de Cr|fffd|dito para realizar a pesquisa de empreendimento")
      Exit Sub
    End If
    
    OrcCons(1) = "J13": OrcCons(2) = "AA13": OrcCons(3) = "AR13": OrcCons(4) = "BI13": OrcCons(5) = "BZ13"      'Descri|fffd||fffd|o  // GSOL00982015
    OrcCons(6) = "CQ13": OrcCons(7) = "DH13": OrcCons(8) = "DT13": OrcCons(9) = "EP13": OrcCons(10) = "FG13"    'Consorciado // GSOL00982015
    
    OrcFin(1) = "D11": OrcFin(2) = "U11": OrcFin(3) = "AL11": OrcFin(4) = "BC11": OrcFin(5) = "BT11"            'Descri|fffd||fffd|o  //
    OrcFin(6) = "CK11": OrcFin(7) = "DB11": OrcFin(8) = "DS11": OrcFin(9) = "EJ11": OrcFin(10) = "FA11"         'Finalidade //

    OrcBac(1) = "D12": OrcBac(2) = "U12": OrcBac(3) = "AL12": OrcBac(4) = "BC12": OrcBac(5) = "BT12"            'Descri|fffd||fffd|o  //
    OrcBac(6) = "CK12": OrcBac(7) = "DB12": OrcBac(8) = "DS12": OrcBac(9) = "EJ12": OrcBac(10) = "FA12"         'Empreendim //

    OrcUnid(1) = "M12": OrcUnid(2) = "AD12": OrcUnid(3) = "AU12": OrcUnid(4) = "BL12": OrcUnid(5) = "CC12"      'Descri|fffd||fffd|o //
    OrcUnid(6) = "CT12": OrcUnid(7) = "DK12": OrcUnid(8) = "EB12": OrcUnid(9) = "ES12": OrcUnid(10) = "FJ12"    'Unidade   //

    OrcSitProd(1) = "L13": OrcSitProd(2) = "AC13": OrcSitProd(3) = "AT13": OrcSitProd(4) = "BK13": OrcSitProd(5) = "CB13" 'C|fffd|digo          //
    OrcSitProd(6) = "CS13": OrcSitProd(7) = "DJ13": OrcSitProd(8) = "EA13": OrcSitProd(9) = "ER13": OrcSitProd(10) = "FI13" 'Sistema Produ|fffd||fffd|o//
  
    OrcVared(1) = "L9": OrcVared(2) = "AC9": OrcVared(3) = "AT9": OrcVared(4) = "BK9": OrcVared(5) = "CB9"      'Descri|fffd||fffd|o         //
    OrcVared(6) = "CS9": OrcVared(7) = "DJ9": OrcVared(8) = "EA9": OrcVared(9) = "ER9": OrcVared(10) = "FI9"    'Variedade//
    
    OrcCult(1) = "M9": OrcCult(2) = "AD9": OrcCult(3) = "AU9": OrcCult(4) = "BL9": OrcCult(5) = "CC9"      'Descri|fffd||fffd|o //
    OrcCult(6) = "CT9": OrcCult(7) = "DK9": OrcCult(8) = "EB9": OrcCult(9) = "ES9": OrcCult(10) = "FJ9"    'Unidade   //
    
    'Iniciar o objeto de integra|fffd||fffd|o
    Set lobjintegra = CreateObject("PreencherEmpreendimento.Integracao")
    
    If Len(CodEmpre) < 14 Then CodEmpre = ""
    If Len(CodSistProd) <> -1 Then CodSistProd = ""

    'Parametro Nro 3 (0 - Manual e 1 - Importa|fffd||fffd|o autom|fffd|tica)
    lobjintegra.FixarCriterios 2, 1                                                 ' Finalidade, Atividade
    lobjintegra.CarregarFormulario CProg, CodEmpre, CodSistProd ' Programa,cod.Empreendimento
    lobjintegra.Show
    Set lobjemp = lobjintegra.ObterEmpreendimento                                   ' Carregar o Lobjemp com os dados do formul|fffd|rio.
    
    xl1Orca.Activate
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
   
    'Se o Lobjemp est|fffd| carregado |fffd| porque trata-se de um empreendimento v|fffd|lido e deve ser alimentado na planilha.
    If Not lobjemp Is Nothing Then
        Range("BacenOrca" & NrOrc).value = lobjemp.codigo                               ' C|fffd|digo do empreendimento
                                                                                        ' Para que carregue os Cultivares.
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcBac(NrOrc)).value = LTrim(RTrim(lobjemp.produto.descricao))            ' Descri|fffd||fffd|o do Empreendimento
        
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcFin(NrOrc)).value = LTrim(RTrim(lobjemp.Modalidade.descricao))         ' Descri|fffd||fffd|o do Finalidade
        
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcUnid(NrOrc)).value = LTrim(RTrim(lobjemp.UnidadeMedida.Sigla))         ' Descri|fffd||fffd|o do Unidade
      
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcSitProd(NrOrc)).value = lobjemp.SistemaProducao.codigo                 ' C|fffd|digo Sistema de Produ|fffd||fffd|o
        
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcVared(NrOrc)).value = LTrim(RTrim(lobjemp.variedade.descricao))        ' Descri|fffd||fffd|o de Variedade
       
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        If lobjemp.codigo <> vbNullString Then strTipoCult = LTrim(RTrim(lobjintegra.TipodeCultura(lobjemp.codigo)))
        Select Case UCase(LTrim(RTrim(strTipoCult)))
            Case "OLERICULTURA": lngcodCult = 1
            Case "PERMANENTE": lngcodCult = 2
            Case "DEMAIS CULTURAS": lngcodCult = 3
            Case "HORT|fffd|CULAS": lngcodCult = 4
            Case "": lngcodCult = 3
        End Select
        
        Range(OrcCult(NrOrc)).value = lngcodCult
       
        ' C|fffd|digo do Sistema de Produ|fffd||fffd|o  SistemaProducao.Codigo
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcBac(NrOrc)).Select                                     ' Primeiro apaga o coment|fffd|rio se houver ou n|fffd|o
        Selection.ClearComments
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcBac(NrOrc)).AddComment                                 ' Criar coment|fffd|rio com  a finalidade, Atividade, Modalidade e Variedade do empreendimento
        Range(OrcBac(NrOrc)).Comment.Visible = False
        Range(OrcBac(NrOrc)).Comment.text text:="Produto = " & LTrim(RTrim(lobjemp.produto.descricao)) & Chr(10) & _
                                                 "Finalidade = " & LTrim(RTrim(lobjemp.Finalidade.descricao)) & Chr(10) & _
                                                 "Atividade = " & LTrim(RTrim(lobjemp.ATIVIDADE.descricao)) & Chr(10) & _
                                                 "Modalidade =  " & LTrim(RTrim(lobjemp.Modalidade.descricao)) & Chr(10) & _
                                                 "Variedade = " & LTrim(RTrim(lobjemp.variedade.descricao)) & Chr(10) & _
                                                 "Cod.Empreendimento = " & lobjemp.codigo & Chr(10) & _
                                                 "Tipo de Cultura = [" & lngcodCult & "] " & strTipoCult
        'aumentar a caixa de coment|fffd|rio
        Range(OrcBac(NrOrc)).Comment.Shape.ScaleHeight 2.3, msoFalse, msoScaleFromTopLeft
        Range(OrcBac(NrOrc)).Comment.Shape.ScaleWidth 3.1, msoFalse, msoScaleFromTopLeft
        Range(OrcBac(NrOrc)).Comment.Visible = False
        ' INICIO GSOL00910095: copia o valor de cultura consorciada para a planilha
        Dim codigoOrcamentoAtual As String, codigoCulturaConsorciada As String
        Dim listaCampoConsorciada As String, rangeCampoCulturaConsorciadaAtual As String
        
        Dim programaPRONAF As Boolean
        
        listaCampoConsorciada = "J;AA;AR;BI;BZ;CQ;DH;DY;EP;FG"
        rangeCampoCulturaConsorciadaAtual = Split(listaCampoConsorciada, ";")(CInt(Range("A11").value) - 1)
        codigoOrcamentoAtual = xl1Orca.Range("BacenOrca" & Format(Range("A11").value, "00")).value
        codigoCulturaConsorciada = IIf(xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "13").value = "Sim", "8", "0")
        
        protPlan.DesprotegePlanilha
        programaPRONAF = IIf(InStr(xl2Prop.Range("E46"), "PRONAF") > 0, True, False)
        xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "13").value = IIf(Mid(codigoOrcamentoAtual, 12, 1) = "8", "Sim", "N|fffd|o")
        'Tipo de Cultura
        protPlan.DesprotegePlanilha
        xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "138").value = strTipoCult
                
                
        'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        Dim listaCampoProdutividade As String, rangeCampoProdutividade As String
        
        listaCampoProdutividade = "G;X;AO;BF;BW;CN;DE;DV;EM;FD"
        rangeCampoProdutividade = Split(listaCampoProdutividade, ";")(CInt(Range("A11").value) - 1)
              
        If lobjemp.Modalidade.descricao = "BENEFICIAMENTO OU INDUSTRIALIZA|fffd||fffd|O" Then
           xl1Orca.Range(rangeCampoProdutividade & "15").value = "Produtividade/T"
        Else
           xl1Orca.Range(rangeCampoProdutividade & "15").value = "Produtividade/Ha"
        End If
        'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 FIM
                
    '    If Mid(codigoOrcamentoAtual, 12, 1) <> codigoCulturaConsorciada Or xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "13").Value = vbNullString Then
    '        If programaPRONAF = False Then
    '            MsgBox "O campo 'Cultura Consorciada' na planilha est|fffd| diferente do que foi selecionado na janela de sele|fffd||fffd|o de emprendimento."
    '        Else
    '            ' sendo pronaf, aplica o valor selecionado em empreendimento
    '            protPlan.DesprotegePlanilha
    '            xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "13").Value = IIf(Mid(codigoOrcamentoAtual, 12, 1) = "8", "Sim", "N|fffd|o")
    '        End If
    '    End If
        ' FIM GSOL00910095
        
    Else
        'Caso n|fffd|o retorne com informa|fffd||fffd|o, deve ser um empreendimento inv|fffd|lido ou cancelamento da carga do Formul|fffd|rio.
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range("BacenOrca" & NrOrc).value = -1                'C|fffd|digo do empreendimento
        Range(OrcSitProd(NrOrc)).value = -1
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcBac(NrOrc)).value = vbNullString
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcFin(NrOrc)).value = vbNullString
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcVared(NrOrc)).value = vbNullString
        Range(OrcUnid(NrOrc)).value = ""
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcCons(NrOrc)).value = "N|fffd|o" 'GSOL00982015
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(OrcBac(NrOrc)).Select                                     ' Primeiro apaga o coment|fffd|rio se houver ou n|fffd|o
        Selection.ClearComments
        'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        listaCampoProdutividade = "G;X;AO;BF;BW;CN;DE;DV;EM;FD"
        rangeCampoProdutividade = Split(listaCampoProdutividade, ";")(CInt(Range("A11").value) - 1)
      
        xl1Orca.Range(rangeCampoProdutividade & "15").value = "Produtividade/Ha"
        'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 FIM
        
        listaCampoConsorciada = "J;AA;AR;BI;BZ;CQ;DH;DY;EP;FG"
        rangeCampoCulturaConsorciadaAtual = Split(listaCampoConsorciada, ";")(CInt(Range("A11").value) - 1)
        xl1Orca.Range(rangeCampoCulturaConsorciadaAtual & "138").value = vbNullString
        
    End If
    
    protPlan.ProtegePlanilha
    flagBusca = 0
    'Liberar o Componente
    Set lobjintegra = Nothing
    Set lobjemp = Nothing
    Set protPlan = Nothing
End Sub


Public Function ValidaEmpreendimento(CodEmpre As String, CodSistProd As String) As Boolean

Dim lobjintegra As Object
Dim lobjemp As Object

'Iniciar o objeto de integra|fffd||fffd|o
Set lobjintegra = CreateObject("PreencherEmpreendimento.Integracao")
    If Len(CodEmpre) < 14 Then CodEmpre = ""
    If CodSistProd = vbNullString Then CodSistProd = ""

    ' Testa se o empreendimento ou sistema de produ|fffd||fffd|o s|fffd|o v|fffd|lidos e aloca nos respectivos campos
    Set lobjemp = lobjintegra.IsValido(CodEmpre, "0")  'CodSistProd)

    'Se o Lobjemp est|fffd| carregado |fffd| porque trata-se de um empreendimento v|fffd|lido e deve ser alimentado na planilha.
    If Not lobjemp Is Nothing Then
       ValidaEmpreendimento = True
    Else
       ValidaEmpreendimento = False
    End If
    lobjintegra = Nothing
End Function

Public Function busca_data() As Date

     Dim lobjintegra As Object

     On Error Resume Next
       'Iniciar o objeto de integra|fffd||fffd|o
       Set lobjintegra = CreateObject("PreencherEmpreendimento.Integracao")
       
       busca_data = lobjintegra.PesquisaArquivo
       
    On Error GoTo Erro

Fim:
  Set lobjintegra = Nothing
  Exit Function
    
Erro:
    MsgBox "A base de empreendimentos BACEN est|fffd| desatualizada, necess|fffd|rio baixar do Site do BNB www.bnb.gov.br atualiza|fffd||fffd|o do empreendimento!", vbCritical, "Erro!"
   Resume Fim

End Function

'Sub Excluir_Parcelas(intOrc As Integer, intParc As Integer)
'    Dim intColcel As Integer
'    Dim intLincel As Integer
'    Dim intMaxParc As Integer
'    Dim intLinini As Integer
'    Dim BooGrava As Boolean
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    protPlan.DesprotegePlanilha
'    Application.ScreenUpdating = False
'    'Identificar a |fffd|ltima parcela a ser localizada para permitir a exclus|fffd|o de parcelas
'    If intParc = 1 Then
'      intMaxParc = 2
'    ElseIf intParc = 2 Then
'      intMaxParc = 3
'    ElseIf intParc = 3 Then
'      intMaxParc = 4
'    End If
'    'Verificar se h|fffd| poss|fffd|bilidade de excluir parcelas.
'    If BuscarParcelas(intOrc, intMaxParc) = True Then
'      MsgBox "N|fffd|o h|fffd| parcelas subsequentes para substituir a " & intParc & "|fffd| parcela", vbCritical, "[Or|fffd|amentos] - Busca de parcelas subsequentes"
'      Exit Sub
'    End If
'
'    intLincel = 21
'    intColcel = 3
'    intLinini = 21
'
'    'Loclizar e realizar a exclus|fffd|o virtual das parcelas alocando Nulo no campo
'    For intLincel = 21 To 84
'      If Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> vbNullString Then
'         If intParc = 1 Then
'            If Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) = 1 Then
'                Cells(intLincel, intColcel + (0 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (1 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (2 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (3 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (4 + (17 * (intOrc - 1)))).value = vbNullString
'                'Cells(intLincel, intColcel + (5 + (17 * (intOrc - 1)))).Value = vbNullString este campo n|fffd|o deve ser usado por utilizar formula.
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = vbNullString
'            ElseIf Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) > 1 Then
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) - 1 & "|fffd| Parcela"
'            End If
'        ElseIf intParc = 2 Then
'             If Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) <= 2 Then
'                Cells(intLincel, intColcel + (0 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (1 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (2 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (3 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (4 + (17 * (intOrc - 1)))).value = vbNullString
'                'Cells(intLincel, intColcel + (5 + (17 * (intOrc - 1)))).Value = vbNullString  este campo n|fffd|o deve ser usado por utilizar formula.
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = vbNullString
'            ElseIf Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) > 2 Then
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) - 2 & "|fffd| Parcela"
'            End If
'        ElseIf intParc = 3 Then
'            If Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) <= 3 Then
'                Cells(intLincel, intColcel + (0 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (1 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (2 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (3 + (17 * (intOrc - 1)))).value = vbNullString
'                Cells(intLincel, intColcel + (4 + (17 * (intOrc - 1)))).value = vbNullString
'                'Cells(intLincel, intColcel + (5 + (17 * (intOrc - 1)))).Value = vbNullString  este campo n|fffd|o deve ser usado por utilizar formula.
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = vbNullString
'            ElseIf Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) > 3 Then
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) - 3 & "|fffd| Parcela"
'            End If
'         End If
'       End If
'    Next intLincel
'
'    intLinini = 21
'    intColcel = 3
'    BooGrava = False
'    'Ordenar os campos
'    For intLincel = 21 To 84
'    If (Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = vbNullString) And (BooGrava = False) Then
'       intLinini = intLincel
'       BooGrava = True
'    End If
'    If (Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> vbNullString) And (BooGrava) Then
'        Cells(intLinini, intColcel + (0 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (0 + (17 * (intOrc - 1)))).value
'        Cells(intLinini, intColcel + (1 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (1 + (17 * (intOrc - 1)))).value
'        Cells(intLinini, intColcel + (2 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (2 + (17 * (intOrc - 1)))).value
'        Cells(intLinini, intColcel + (3 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (3 + (17 * (intOrc - 1)))).value
'        Cells(intLinini, intColcel + (4 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (4 + (17 * (intOrc - 1)))).value
'        Cells(intLinini, intColcel + (6 + (17 * (intOrc - 1)))).value = Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value
'
'        intLinini = intLinini + 1
'        Cells(intLincel, intColcel + (0 + (17 * (intOrc - 1)))).value = vbNullString
'        Cells(intLincel, intColcel + (1 + (17 * (intOrc - 1)))).value = vbNullString
'        Cells(intLincel, intColcel + (2 + (17 * (intOrc - 1)))).value = vbNullString
'        Cells(intLincel, intColcel + (3 + (17 * (intOrc - 1)))).value = vbNullString
'        Cells(intLincel, intColcel + (4 + (17 * (intOrc - 1)))).value = vbNullString
'        Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = vbNullString
'
'      End If
'    Next intLincel
'
'    Rows("21:88").Select
'    ActiveWindow.SmallScroll Down:=-13
'    protPlan.DesprotegePlanilha  'Sprint 9 solu|fffd||fffd|o para mensagem ao excluir parcela ( SOP )
'    Rows("21:88").EntireRow.AutoFit
'
'    If intLinini + 1 <= 84 Then
'       protPlan.DesprotegePlanilha 'Sprint 9 solu|fffd||fffd|o para mensagem ao excluir parcela ( SOP )
'       Rows([intLinini] & ":" & 84).Hidden = True
'    End If
'
'    For i = 85 To 89
'      If Cells(i, 3 + (5 + (17 * (intOrc - 1)))).value <= 0 Then
'          protPlan.DesprotegePlanilha 'Sprint 9 solu|fffd||fffd|o para mensagem ao excluir parcela ( SOP )
'         Rows([i] & ":" & [i]).Hidden = True
'      Else
'          protPlan.DesprotegePlanilha 'Sprint 9 solu|fffd||fffd|o para mensagem ao excluir parcela ( SOP )
'         Rows([i] & ":" & [i]).Hidden = False
'      End If
'    Next i
'
'    Cells(7, 3 + 1 + (17 * (intOrc - 1))).Select
'
'    Application.ScreenUpdating = True
'
'    MsgBox "A(s) parcela(s) selecionada(s) foi(ram) removida(s) e as parcela(s) subsequente(s) foi(ram) reordenada(s).", vbExclamation, "[Or|fffd|amentos] - Exclus|fffd|o"
'
'    protPlan.ProtegePlanilha
'    Set protPlan = Nothing
'
'End Sub

Function BuscarParcelas(intOrc As Integer, intParc As Integer) As Boolean
    Dim intColcel As Integer
    Dim intLincel As Integer
    Dim Busco_OK As Boolean
       
    intColcel = 3
    
    busca_ok = True
    
    For intLincel = 21 To 84
      If busca_ok = True And Mid(Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value, 1, 1) = CStr(intParc) Then
         busca_ok = False
      End If
    Next intLincel
    
    BuscarParcelas = busca_ok
End Function

Sub btGeodesica_Clique()
'    Application.ScreenUpdating = False
'    xl2Prop.Activate
'    btnATUA_PROP_Clique    'Chama atualiza|fffd||fffd|o da tela para carregar os itens
'    atualizaRef
'    Application.ScreenUpdating = False
'    xl1Orca.Activate
'    'frmGeodesica.ActiveControl
'    frmGeodesica.Show
'    'DoEvents
'    flagBusca = 0
xl14Geodesica.Activate
AtualizaTela
End Sub

Sub Chama_Empree_Prop(NrOrc As String, CodEmpre As String, CodSistProd As String)

Dim EmpNro(5) As String
Dim CProg As String

Dim lobjintegra1 As Object
Dim lobjemp1 As Object

Dim protPlan As clsProtecao
Set protPlan = New clsProtecao

 'Valida|fffd||fffd|o se h|fffd| um programa selecionado.
    If xl2Prop.Range("S46").value <> vbNullString And xl2Prop.Range("S46").value <> -1 Then
        CProg = xl2Prop.Range("S46").value
    Else
        MsgBox ("|fffd| necess|fffd|rio que seja preenchido o Programa de Cr|fffd|dito para realizar a pesquisa de empreendimento")
      Exit Sub
    End If
    
    EmpNro(1) = "O74": EmpNro(2) = "O75": EmpNro(3) = "O76": EmpNro(4) = "O77": EmpNro(4) = "O78"
    
    'Iniciar o objeto de integra|fffd||fffd|o
    Set lobjintegra1 = CreateObject("PreencherEmpreendimento.Integracao")
    
    If Len(CodEmpre) < 14 Then CodEmpre = ""
    If Len(CodSistProd) <> -1 Then CodSistProd = ""

    'Parametro Nro 3 (0 - Manual e 1 - Importa|fffd||fffd|o autom|fffd|tica)
    lobjintegra1.FixarCriterios 2, 1                                                 ' Finalidade, Atividade
    lobjintegra1.CarregarFormulario CProg, CodEmpre, CodSistProd ' Programa,cod.Empreendimento
    lobjintegra1.Show
    Set lobjemp1 = lobjintegra1.ObterEmpreendimento                                   ' Carregar o Lobjemp com os dados do formul|fffd|rio.
    
    xl2Prop.Activate
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
   
    'Se o Lobjemp est|fffd| carregado |fffd| porque trata-se de um empreendimento v|fffd|lido e deve ser alimentado na planilha.
    If Not lobjemp1 Is Nothing Then
        Range("PropBacen" & NrOrc).value = lobjemp1.codigo                               ' C|fffd|digo do empreendimento
        
        ' C|fffd|digo do Sistema de Produ|fffd||fffd|o  SistemaProducao.Codigo
        Range(EmpNro(NrOrc)).Select                                     ' Primeiro apaga o coment|fffd|rio se houver ou n|fffd|o
        Selection.ClearComments
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        Range(EmpNro(NrOrc)).value = Left(lobjemp1.produto.descricao, 15)
        Range(EmpNro(NrOrc)).AddComment                                 ' Criar coment|fffd|rio com  a finalidade, Atividade, Modalidade e Variedade do empreendimento
        Range(EmpNro(NrOrc)).Comment.Visible = False
        Range(EmpNro(NrOrc)).Comment.text text:="Produto = " & LTrim(RTrim(lobjemp1.produto.descricao)) & Chr(10) & _
                                                "Finalidade = " & LTrim(RTrim(lobjemp1.Finalidade.descricao)) & Chr(10) & _
                                                "Atividade = " & LTrim(RTrim(lobjemp1.ATIVIDADE.descricao)) & Chr(10) & _
                                                "Modalidade =  " & LTrim(RTrim(lobjemp1.Modalidade.descricao)) & Chr(10) & _
                                                "Variedade = " & LTrim(RTrim(lobjemp1.variedade.descricao)) & Chr(10) & _
                                                "Cod.Empreendimento = " & lobjemp1.codigo
        'aumentar a caixa de coment|fffd|rio
        Range(EmpNro(NrOrc)).Comment.Shape.ScaleHeight 2.3, msoFalse, msoScaleFromTopLeft
        Range(EmpNro(NrOrc)).Comment.Shape.ScaleWidth 3.1, msoFalse, msoScaleFromTopLeft
        Range(EmpNro(NrOrc)).Comment.Visible = False
    Else
        'Caso n|fffd|o retorne com informa|fffd||fffd|o, deve ser um empreendimento inv|fffd|lido ou cancelamento da carga do Formul|fffd|rio.
        Range("PropBacen" & NrOrc).value = vbNullString                'C|fffd|digo do empreendimento
        Range(EmpNro(NrOrc)).value = vbNullString
        Range(EmpNro(NrOrc)).Select                                     ' Primeiro apaga o coment|fffd|rio se houver ou n|fffd|o
        Selection.ClearComments
    End If
    
    protPlan.ProtegePlanilha
    flagBusca = 0
    'Liberar o Componente
    Set lobjintegra1 = Nothing
    Set lobjemp1 = Nothing
    Set protPlan = Nothing
End Sub

Public Function Trunc(ByVal value As Double, ByVal num As Integer) As Double
  Trunc = Int(value * (10 ^ num)) / (10 ^ num)
End Function

Sub TelaOrcaPinta(lngTelaOrca As Integer)
'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
Dim protPlan As clsProtecao
Set protPlan = New clsProtecao
Dim aColunas(10, 10) As String, strTelaOrca As String
Dim lngCor As Variant

Dim lngCorBranco As Variant
Dim lngCorCinza As Variant

lngCorBranco = 0
lngCorCinza = -0.249946592608417

   'defini|fffd||fffd|o das colunas do or|fffd|amento
    aColunas(1, 1) = "C"
    aColunas(1, 2) = "D"
    aColunas(1, 3) = "E"
    aColunas(1, 4) = "F"
    aColunas(1, 5) = "G"
    aColunas(1, 6) = "I"
    aColunas(1, 7) = "H"
    aColunas(1, 8) = "J"
    aColunas(1, 9) = "L"
    aColunas(1, 10) = "M"
        
    aColunas(2, 1) = "T"
    aColunas(2, 2) = "U"
    aColunas(2, 3) = "V"
    aColunas(2, 4) = "W"
    aColunas(2, 5) = "X"
    aColunas(2, 6) = "Z"
    aColunas(2, 7) = "Y"
    aColunas(2, 8) = "AA"
    aColunas(2, 9) = "AC"
    aColunas(2, 10) = "AD"
     
    aColunas(3, 1) = "AK"
    aColunas(3, 2) = "AL"
    aColunas(3, 3) = "AM"
    aColunas(3, 4) = "AN"
    aColunas(3, 5) = "AO"
    aColunas(3, 6) = "AQ"
    aColunas(3, 7) = "AP"
    aColunas(3, 8) = "AR"
    aColunas(3, 9) = "AT"
    aColunas(3, 10) = "AV"
     
    aColunas(4, 1) = "BB"
    aColunas(4, 2) = "BC"
    aColunas(4, 3) = "BD"
    aColunas(4, 4) = "BE"
    aColunas(4, 5) = "BF"
    aColunas(4, 6) = "BH"
    aColunas(4, 7) = "BG"
    aColunas(4, 8) = "BI"
    aColunas(4, 9) = "BK"
    aColunas(4, 10) = "BL"
     
    aColunas(5, 1) = "BS"
    aColunas(5, 2) = "BT"
    aColunas(5, 3) = "BU"
    aColunas(5, 4) = "BV"
    aColunas(5, 5) = "BW"
    aColunas(5, 6) = "BY"
    aColunas(5, 7) = "BX"
    aColunas(5, 8) = "BZ"
    aColunas(5, 9) = "CB"
    aColunas(5, 10) = "CC"
     
    aColunas(6, 1) = "CJ"
    aColunas(6, 2) = "CK"
    aColunas(6, 3) = "CL"
    aColunas(6, 4) = "CM"
    aColunas(6, 5) = "CN"
    aColunas(6, 6) = "CP"
    aColunas(6, 7) = "CO"
    aColunas(6, 8) = "CQ"
    aColunas(6, 9) = "CS"
    aColunas(6, 10) = "CT"
     
    aColunas(7, 1) = "DA"
    aColunas(7, 2) = "DB"
    aColunas(7, 3) = "DC"
    aColunas(7, 4) = "DD"
    aColunas(7, 5) = "DE"
    aColunas(7, 6) = "DG"
    aColunas(7, 7) = "DF"
    aColunas(7, 8) = "DH"
    aColunas(7, 9) = "DJ"
    aColunas(7, 10) = "DK"
     
    aColunas(8, 1) = "DR"
    aColunas(8, 2) = "DS"
    aColunas(8, 3) = "DT"
    aColunas(8, 4) = "DU"
    aColunas(8, 5) = "DV"
    aColunas(8, 6) = "DX"
    aColunas(8, 7) = "DW"
    aColunas(8, 8) = "DY"
    aColunas(8, 9) = "EA"
    aColunas(8, 10) = "EB"
     
    aColunas(9, 1) = "EI"
    aColunas(9, 2) = "EJ"
    aColunas(9, 3) = "EK"
    aColunas(9, 4) = "EL"
    aColunas(9, 5) = "EM"
    aColunas(9, 6) = "EO"
    aColunas(9, 7) = "EN"
    aColunas(9, 8) = "EP"
    aColunas(9, 9) = "ER"
    aColunas(9, 10) = "ES"
     
    aColunas(10, 1) = "EZ"
    aColunas(10, 2) = "FA"
    aColunas(10, 3) = "FB"
    aColunas(10, 4) = "FC"
    aColunas(10, 5) = "FD"
    aColunas(10, 6) = "FF"
    aColunas(10, 7) = "FE"
    aColunas(10, 8) = "FG"
    aColunas(10, 9) = "FI"
    aColunas(10, 10) = "FJ"

    Dim IntLin As Integer
    Dim IntCol As Integer
      
    'Cabe|fffd|alho ( Coluna 2 linhas 7 a 13) (1)
    For IntLin = 7 To 13
      If Range(aColunas([lngTelaOrca], 2) & [IntLin]).Locked Then
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 2) & [IntLin], lngCorCinza
      Else
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 2) & [IntLin], lngCorBranco
      End If
    Next IntLin
  
   'Produtividade ( Coluna 6 linhas 7) (2)
    If Range(aColunas([lngTelaOrca], 6) & 7).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 7, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 7, lngCorBranco
    End If
   
   'Modalidade do Or|fffd|amento ( Coluna 8 linhas 7) (3)
    If Range(aColunas([lngTelaOrca], 8) & 7).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 8) & 7, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 8) & 7, lngCorBranco
    End If
   
   'Cultivar ( Coluna 7 linhas 12) (4)
    If Range(aColunas([lngTelaOrca], 7) & 12).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 7) & 12, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 7) & 12, lngCorBranco
    End If
   
   'Qtd a ser colhida ( Coluna 6 linhas 12) (5)
    If Range(aColunas([lngTelaOrca], 6) & 12).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 12, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 12, lngCorBranco
    End If
   
   'Tipo de Cultura ( Coluna 8 linhas 12) (6)
    If Range(aColunas([lngTelaOrca], 8) & 12).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 8) & 12, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 8) & 12, lngCorBranco
    End If
   
   'Tipo de Cultura ( Coluna 1,4,5,7 linhas 16 a 18) (7.8.9.10)
    For IntLin = 16 To 18
      'Produto 1
      If Range(aColunas([lngTelaOrca], 1) & [IntLin]).Locked Then
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 1) & [IntLin], lngCorCinza
      Else
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 1) & [IntLin], lngCorBranco
      End If
      'Unidade 4
      If Range(aColunas([lngTelaOrca], 4) & [IntLin]).Locked Then
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 4) & [IntLin], lngCorCinza
      Else
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 4) & [IntLin], lngCorBranco
      End If
      'Produtividade/HA 5
      If Range(aColunas([lngTelaOrca], 5) & [IntLin]).Locked Then
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 5) & [IntLin], lngCorCinza
      Else
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 5) & [IntLin], lngCorBranco
      End If
      'Atividade 7
      If Range(aColunas([lngTelaOrca], 7) & [IntLin]).Locked Then
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 7) & [IntLin], lngCorCinza
      Else
         PintaTela lngTelaOrca, aColunas([lngTelaOrca], 7) & [IntLin], lngCorBranco
      End If
    Next IntLin
   
   
   'Or|fffd|amento ( Coluna 1 a 5 linhas 21 a 88  // Coluna 6 linhas 21 a 88 ) (11 e 12)
    If Range(aColunas([lngTelaOrca], 1) & 21).Locked Then
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 1) & 21 & ":" & aColunas([lngTelaOrca], 5) & 88, lngCorCinza
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 21 & ":" & aColunas([lngTelaOrca], 6) & 88, lngCorCinza
    Else
       PintaTela lngTelaOrca, aColunas([lngTelaOrca], 1) & 21 & ":" & aColunas([lngTelaOrca], 5) & 88, lngCorBranco
        ' PintaTela lngTelaOrca, aColunas([lngTelaOrca], 6) & 21 & ":" & aColunas([lngTelaOrca], 6) & 88, lngCorBranco
    End If
    
    If Range(aColunas([lngTelaOrca], 8) & 7).value = "EXTRATIVISMO" Then
       Rows("91").EntireRow.Hidden = False
       protPlan.DesprotegePlanilha
       Range(aColunas([lngTelaOrca], 6) & 90).value = "POR MILHEIRO"
       protPlan.DesprotegePlanilha
       Range(aColunas([lngTelaOrca], 6) & 91).value = "POR HECTARE"
    Else
       Rows("91").EntireRow.Hidden = True
       protPlan.DesprotegePlanilha
       Range(aColunas([lngTelaOrca], 6) & 90).value = "POR HECTARE"
    End If
        

'    If (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
'        Range("ORCA" & Format([lngTelaOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento at|fffd| 1 milh|fffd|o)"              'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
'        Range("TPORCA" & Format([lngTelaOrca], "00")).value = 0                                         'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
'    ElseIf (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then
'        Range("ORCA" & Format([lngTelaOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento)"              'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
'        Range("TPORCA" & Format([lngTelaOrca], "00")).value = 0                                         'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
'    End If
    
    If Range("TPORCA" & Format([lngTelaOrca], "00")).value = 1 Then
        Range("ORCA" & Format([lngTelaOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento at|fffd| 1 milh|fffd|o)"              'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
    ElseIf Range("TPORCA" & Format([lngTelaOrca], "00")).value = 0 Then
        Range("ORCA" & Format([lngTelaOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento)"              'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
    End If
    
    'Selecionar sempre a 1 linha do or|fffd|amento.
    Range(aColunas([lngTelaOrca], 1) & 5).Select
    Set protPlan = Nothing
End Sub

Sub PintaTela(lngTelaOrca As Integer, RefColLin As String, Cor As Variant)

    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    Application.ScreenUpdating = False
    protPlan.DesprotegePlanilha
    Range(RefColLin).Select
    With Selection.Interior
      .Pattern = xlSolid
      .PatternColorIndex = xlAutomatic
      .ThemeColor = xlThemeColorDark1
      .TintAndShade = Cor
      .PatternTintAndShade = 0
    End With

    Set protPlan = Nothing
    
End Sub


Sub OrdenarOr|fffd|amento(lngTelaOrca As Integer, TpCarga As Byte)
'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
    Dim Str_AreaOrdenar, Str_AreaINI As String
    Dim Str_AreaOrdenar1, Str_AreaOrdenar2 As String
    Dim Str_Aba As String

    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    Select Case lngTelaOrca
        Case 1
           Str_AreaOrdenar = "C21:I84"
           Str_AreaOrdenar1 = "I21:I84"
           Str_AreaOrdenar2 = "C21:C84"
           Str_AreaINI = "C21"
        Case 2
           Str_AreaOrdenar = "T21:Z84"
           Str_AreaOrdenar1 = "Z21:Z84"
           Str_AreaOrdenar2 = "T21:T84"
           Str_AreaINI = "T21"
        Case 3
           Str_AreaOrdenar = "AK21:AQ84"
           Str_AreaOrdenar1 = "AQ21:AQ84"
           Str_AreaOrdenar2 = "AK21:AK84"
           Str_AreaINI = "AK21"
        Case 4
           Str_AreaOrdenar = "BB21:BH84"
           Str_AreaOrdenar1 = "BH21:BH84"
           Str_AreaOrdenar2 = "BB21:BB84"
           Str_AreaINI = "BB21"
        Case 5
           Str_AreaOrdenar = "BS21:BY84"
           Str_AreaOrdenar1 = "BY21:BY84"
           Str_AreaOrdenar2 = "BS21:BS84"
           Str_AreaINI = "BS21"
        Case 6
           Str_AreaOrdenar = "CJ21:CP84"
           Str_AreaOrdenar1 = "CP21:CP84"
           Str_AreaOrdenar2 = "CJ21:CJ84"
           Str_AreaINI = "CJ21"
        Case 7
           Str_AreaOrdenar = "DA21:DG84"
           Str_AreaOrdenar1 = "DG21:DG84"
           Str_AreaOrdenar2 = "DA21:DA84"
           Str_AreaINI = "DA21"
        Case 8
           Str_AreaOrdenar = "DR21:DX84"
           Str_AreaOrdenar1 = "DX21:DX84"
           Str_AreaOrdenar2 = "DR21:DR84"
           Str_AreaINI = "DR21"
        Case 9
           Str_AreaOrdenar = "EI21:EO84"
           Str_AreaOrdenar1 = "EO21:EO84"
           Str_AreaOrdenar2 = "EI21:EI84"
           Str_AreaINI = "EI21"
        Case 10
           Str_AreaOrdenar = "EZ21:FF84"
           Str_AreaOrdenar1 = "FF21:FF84"
           Str_AreaOrdenar2 = "EZ21:EZ84"
           Str_AreaINI = "EZ21"
    End Select
    
    
    
    'Ordenar
    protPlan.DesprotegePlanilha
    Application.ScreenUpdating = False
    Range(Str_AreaINI).Select
    Range(Str_AreaOrdenar).Select
    Str_Aba = IIf(TpCarga = 0, "Orcamento", "OrcamentoBkp")
    
    ActiveWorkbook.Worksheets(Str_Aba).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(Str_Aba).Sort.SortFields.Add Key:=Range( _
        Str_AreaOrdenar1), _
        SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets(Str_Aba).Sort.SortFields.Add Key:=Range( _
        Str_AreaOrdenar2), _
        SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(Str_Aba).Sort
        .SetRange Range(Str_AreaOrdenar)
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Range(Str_AreaINI).Select
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub


'Sub CarregaOrca(lngSqOrca As Long, OrdOrca As Byte, TpOrca As Byte, TpCarga As String, NmOrc As String)
Sub CarregaOrca(lngSqOrca As Long, OrdOrca As Byte, TpOrca As Byte, TpCarga As Byte)

'lngOrca - Sequencial do Or|fffd|amento
'OrdOrca - Nro do Or|fffd|amento
'TpOrca  - Tipo de Or|fffd|amento ( 0 - Pronaf e 1 - At|fffd| 1 milh|fffd|o)
'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
'NmOrc   - Nome do Or|fffd|amento

        Dim xlPlan As String
        Dim lngLinSel, lngLinBD, lngTotOrc, lngLinRel As Long
        Dim dblSubTot As Double, dblTotOrc As Double, dblTotGer As Double
        Dim dblFrete As Double
        Dim lngSubIns As Long
        Dim lngOrca As Long
        Dim colCel1, colCel2, colCel3, colCel4, colCel5, colCel6, colCel7 As String
        Dim StrAbaOrc As String, StrRefOrc As String  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        Dim strOrca, aColunas(10, 9) As String
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        
        'defini|fffd||fffd|o das colunas do or|fffd|amento
        aColunas(1, 1) = "C"
        aColunas(1, 2) = "D"
        aColunas(1, 3) = "E"
        aColunas(1, 4) = "F"
        aColunas(1, 5) = "G"
        aColunas(1, 6) = "I"
        aColunas(1, 7) = "J"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(1, 8) = "O"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(1, 9) = "H"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    
        aColunas(2, 1) = "T"
        aColunas(2, 2) = "U"
        aColunas(2, 3) = "V"
        aColunas(2, 4) = "W"
        aColunas(2, 5) = "X"
        aColunas(2, 6) = "Z"
        aColunas(2, 7) = "AA"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(2, 8) = "AF"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(2, 9) = "Y"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(3, 1) = "AK"
        aColunas(3, 2) = "AL"
        aColunas(3, 3) = "AM"
        aColunas(3, 4) = "AN"
        aColunas(3, 5) = "AO"
        aColunas(3, 6) = "AQ"
        aColunas(3, 7) = "AR"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(3, 8) = "AW"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(3, 9) = "AP"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(4, 1) = "BB"
        aColunas(4, 2) = "BC"
        aColunas(4, 3) = "BD"
        aColunas(4, 4) = "BE"
        aColunas(4, 5) = "BF"
        aColunas(4, 6) = "BH"
        aColunas(4, 7) = "BI"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(4, 8) = "BN"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(4, 9) = "BG"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(5, 1) = "BS"
        aColunas(5, 2) = "BT"
        aColunas(5, 3) = "BU"
        aColunas(5, 4) = "BV"
        aColunas(5, 5) = "BW"
        aColunas(5, 6) = "BY"
        aColunas(5, 7) = "BZ"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(5, 8) = "CE"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(5, 9) = "BX"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(6, 1) = "CJ"
        aColunas(6, 2) = "CK"
        aColunas(6, 3) = "CL"
        aColunas(6, 4) = "CM"
        aColunas(6, 5) = "CN"
        aColunas(6, 6) = "CP"
        aColunas(6, 7) = "CQ"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(6, 8) = "CV"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(6, 9) = "CO"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(7, 1) = "DA"
        aColunas(7, 2) = "DB"
        aColunas(7, 3) = "DC"
        aColunas(7, 4) = "DD"
        aColunas(7, 5) = "DE"
        aColunas(7, 6) = "DG"
        aColunas(7, 7) = "DH"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(7, 8) = "DM"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(7, 9) = "DF"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(8, 1) = "DR"
        aColunas(8, 2) = "DS"
        aColunas(8, 3) = "DT"
        aColunas(8, 4) = "DU"
        aColunas(8, 5) = "DV"
        aColunas(8, 6) = "DX"
        aColunas(8, 7) = "DY"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(8, 8) = "ED"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(8, 9) = "DW"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(9, 1) = "EI"
        aColunas(9, 2) = "EJ"
        aColunas(9, 3) = "EK"
        aColunas(9, 4) = "EL"
        aColunas(9, 5) = "EM"
        aColunas(9, 6) = "EO"
        aColunas(9, 7) = "EP"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(9, 8) = "EU"  'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(9, 9) = "EN"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
         
        aColunas(10, 1) = "EZ"
        aColunas(10, 2) = "FA"
        aColunas(10, 3) = "FB"
        aColunas(10, 4) = "FC"
        aColunas(10, 5) = "FD"
        aColunas(10, 6) = "FF"
        aColunas(10, 7) = "FG"  'GSOL00863772 - 03|fffd| Sprint Dez/2014
        aColunas(10, 8) = "FL"  'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 INI
        aColunas(10, 9) = "FE"  'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
        
        flagBusca = 1
        xlPlan = ActiveSheet.Name
        protPlan.IniciaRotina True
        Application.StatusBar = "Preenchendo campos do Or|fffd|amento " & Format([OrdOrca], "00") & ". Favor Aguardar."
        
        'OrdOrca - Nro do Or|fffd|amento
        'TpOrca  - Tipo de Or|fffd|amento ( 0 - Pronaf e 1 - At|fffd| 1 milh|fffd|o)
        'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
        
        If TpOrca = 1 Then    ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o INI
          StrAbaOrc = "BD_ORC1"
          StrRefOrc = "listaORCA_SQ1"
        Else
          StrAbaOrc = "BD_ORC"
          StrRefOrc = "listaORCA_SQ"
        End If                         ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o FIM
       
        NmOrc = xl1Orca.Range("NMORCA" & Format([OrdOrca], "00"))
       
        Sheets(StrAbaOrc).Activate   ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
        protPlan.DesprotegePlanilha
        'Range("C2:C" & Range("FIM_ORC").value).Select
        
        Dim vbusca As Object
                
        If TpCarga = 1 Then
           'Esta carga pode ser referenciada pelo Nome do Or|fffd|amento ou sequencial do Or|fffd|amento.
           If lngSqOrca <> 0 Then
              Range("C2:C" & Range("FIM_ORC").value).Select
              
              On Error Resume Next
              Selection.Find(What:=[lngSqOrca], After:=ActiveCell, LookIn:=xlValues, _
                         lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                         MatchCase:=False).Activate
              On Error GoTo 0
              If Not Err And ActiveCell.value = lngSqOrca Then
                  lngLinSel = ActiveCell.Row
              Else
                  protPlan.ProtegePlanilha
                  flagBusca = 0
                  Sheets([xlPlan]).Activate
                  protPlan.FinalizaRotina
                  Set protPlan = Nothing
                  Exit Sub
              End If
              
            'SPRINT 13 - Desabilitado em caso de houver or|fffd|amento
'           Else
'             ' Selection.AutoFilter
'              Range("az2:ba" & Range("FIM_ORC").value).Select
'             ' Selection.AutoFilter Field:=1, Criteria1:="=" & NmOrc & "*", Operator:=xlAnd
'               Dim BooLocalizado As Boolean
'               BooLocalizado = False
'
'               For i = 2 To Range("FIM_ORC").value
'                 If Range("AZ" & [i]).value = NmOrc Then
'                    Range("D" & [i]).Activate
'                    lngLinSel = i
'                    lngSqOrca = Range("C" & i).value
'                    BooLocalizado = True
'                    Exit For
'                 End If
'               Next i
'
'               If Not BooLocalizado Then
'                 protPlan.ProtegePlanilha
'                 flagBusca = 0
'                 Sheets([xlPlan]).Activate
'                 protPlan.FinalizaRotina
'                 Set vbusca = Nothing
'                 Set protPlan = Nothing
'                 Exit Sub
'               End If
           End If
        Else  'Esta carga sempre ser|fffd| referenciada pelo Sequencial do Or|fffd|amento.
            Range("C2:C" & Range("FIM_ORC").value).Select
            If ActiveCell.value <> lngSqOrca Then
               Selection.Find(What:=[lngSqOrca], After:=ActiveCell, LookIn:=xlValues, _
                         lookat:=xlWhole, SearchOrder:=xlByColumns, SearchDirection:=xlNext, _
                         MatchCase:=False).Activate
            End If
            
            If Not Err And ActiveCell.value = lngSqOrca Then
               lngLinSel = ActiveCell.Row
            Else
               If TpCarga = 0 Then
                 MsgBox "Or|fffd|amento n|fffd|o encontrado na base de dados", vbExclamation
               End If
               protPlan.ProtegePlanilha
               flagBusca = 0
               Sheets([xlPlan]).Activate
               protPlan.FinalizaRotina
               Set protPlan = Nothing
               Exit Sub
            End If
            
        End If
        
        'gera a base do relat|fffd|rio
        'TpOrca  - Tipo de Or|fffd|amento ( 0 - Pronaf e 1 - At|fffd| 1 milh|fffd|o)
        geraBDRel1 lngSqOrca, TpOrca
               
        bdRel1.Activate
        lngTotOrc = Range("FIM_REL1").value
        
        If TpCarga = 0 Then
           xl1Orca.Activate
        Else
           xl1OrcaBkp.Activate
        End If
        protPlan.DesprotegePlanilha
        
        If lngLinSel <> 0 Then
            'Identifica o or|fffd|amento ativo e limpa as colunas
            lngOrca = OrdOrca
            
            If TpCarga = 0 Then
                Do While lngOrca <= 10
                   strOrca = "ORCA" & Format([lngOrca], "00")
                   'Comentado para liberar a vers|fffd|o proagro, dever|fffd| entrar em vigor em 05/2017
                   If frmOrca.Optate1milhao.value Then                                                                   'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                     Range("ORCA" & Format([lngOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento) At|fffd| 1 Milh|fffd|o" 'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                     Range("TPORCA" & Format([lngOrca], "00")).value = 1                                         'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                   Else                                                                                          'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                     Range("ORCA" & Format([lngOrca], "00")).value = "Custeio Agr|fffd|cola (Or|fffd|amento)"              'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                     Range("TPORCA" & Format([lngOrca], "00")).value = 0                                         'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                   End If                                                                                        'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
                   
                   If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
                   lngOrca = lngOrca + 1
                Loop
            End If
            
            Range(aColunas([lngOrca], 1) & 21 & ":" & aColunas([lngOrca], 5) & 84).ClearContents
            'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
            If TpCarga = 1 Then
              Range(aColunas([lngOrca], 6) & 21 & ":" & aColunas([lngOrca], 6) & 84).ClearContents
            End If
            
            'Sq do Or|fffd|amento
            If TpCarga = 0 Then
                protPlan.DesprotegePlanilha
                Range("SQORCA" & Format([lngOrca], "00")).value = lngSqOrca
                Range("DTORCA" & Format([lngOrca], "00")).value = Date
            Else
                protPlan.DesprotegePlanilha
                Cells(1, aColunas([lngOrca], 8)).value = lngSqOrca
                Cells(7, aColunas([lngOrca], 8)).value = Date
            End If
            
            'Identifica|fffd||fffd|o do or|fffd|amento
            protPlan.DesprotegePlanilha
     '       Cells(7, aColunas([lngOrca], 2)).value = bd1Orca.Range("D" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(7, aColunas([lngOrca], 2)).value = Sheets(StrAbaOrc).Range("D" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
      '      Cells(8, aColunas([lngOrca], 2)).value = bd1Orca.Range("F" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(8, aColunas([lngOrca], 2)).value = Sheets(StrAbaOrc).Range("F" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
       '     Cells(9, aColunas([lngOrca], 2)).value = bd1Orca.Range("H" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(9, aColunas([lngOrca], 2)).value = Sheets(StrAbaOrc).Range("H" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            'GSOL00863772 - 03|fffd| Sprint Dez/2014 Tipo de Cultura
            'Cells(12, aColunas([lngOrca], 7)).value = bd1Orca.Range("J" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(12, aColunas([lngOrca], 7)).value = Sheets(StrAbaOrc).Range("J" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            'Cells(13, aColunas([lngOrca], 2)).value = bd1Orca.Range("K" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(13, aColunas([lngOrca], 2)).value = Sheets(StrAbaOrc).Range("K" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            'Cells(7, aColunas([lngOrca], 7)).value = bd1Orca.Range("AA" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(7, aColunas([lngOrca], 7)).value = Sheets(StrAbaOrc).Range("AA" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            
            'Inclus|fffd|o do N|fffd|vel Tecnologico  Sprint 14 RNM - ini
            protPlan.DesprotegePlanilha
            Cells(9, aColunas([lngOrca], 9)).value = Sheets(StrAbaOrc).Range("I" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            'Inclus|fffd|o do N|fffd|vel Tecnologico  Sprint 14 RNM  - fim
            
            'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
            protPlan.DesprotegePlanilha
            'If LTrim(RTrim(bd1Orca.Range("AA" & [lngLinSel]).value)) = "EXTRATIVISMO" Then  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            If LTrim(RTrim(Sheets(StrAbaOrc).Range("AA" & [lngLinSel]).value)) = "EXTRATIVISMO" Then  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
              protPlan.DesprotegePlanilha
              Cells(7, aColunas([lngOrca], 6)).value = bd1Orca.Range("M" & [lngLinSel]).value          ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
              Cells(7, aColunas([lngOrca], 6)).value = Sheets(StrAbaOrc).Range("M" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
              If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
                  'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
                Cells(7, aColunas([lngOrca], 6)).Locked = True
              Else
                Cells(7, aColunas([lngOrca], 6)).Locked = False
              End If
              protPlan.DesprotegePlanilha
              Cells(12, aColunas([lngOrca], 6)).Locked = False
              protPlan.DesprotegePlanilha
              
              Cells(16, aColunas([lngOrca], 5)).Select
              protPlan.DesprotegePlanilha
              Cells(16, aColunas([lngOrca], 5)).Locked = True
              Cells(16, aColunas([lngOrca], 5)).FormulaHidden = True
              Cells(16, aColunas([lngOrca], 5)).FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),0,(R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),"""")"
              protPlan.DesprotegePlanilha
              Cells(16, aColunas([lngOrca], 5)).Locked = True
              Cells(16, aColunas([lngOrca], 5)).FormulaHidden = True
              
              
              protPlan.DesprotegePlanilha
              
              Cells(17, aColunas([lngOrca], 5)).Select
              Cells(17, aColunas([lngOrca], 5)).Locked = True
              Cells(17, aColunas([lngOrca], 5)).FormulaHidden = True
              Cells(17, aColunas([lngOrca], 5)).FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),0,(R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),"""")"
              protPlan.DesprotegePlanilha
              Cells(17, aColunas([lngOrca], 5)).Locked = True
              Cells(17, aColunas([lngOrca], 5)).FormulaHidden = True
    
              protPlan.DesprotegePlanilha
              
              Cells(18, aColunas([lngOrca], 5)).Select
              Cells(18, aColunas([lngOrca], 5)).Locked = True
              Cells(18, aColunas([lngOrca], 5)).FormulaHidden = True
              Cells(18, aColunas([lngOrca], 5)).FormulaR1C1 = _
              "=IF(RC[-4]<>"""",IF(ISERROR((R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),0,(R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),"""")"
               protPlan.DesprotegePlanilha
              Cells(18, aColunas([lngOrca], 5)).Locked = True
              Cells(18, aColunas([lngOrca], 5)).FormulaHidden = True
    
            Else
              Cells(7, aColunas([lngOrca], 6)).Select
              protPlan.DesprotegePlanilha
              With Selection
                .Locked = True
                .value = ""
              End With
                
              Cells(12, aColunas([lngOrca], 6)).Select
              protPlan.DesprotegePlanilha
              With Selection
                .Locked = True
                .value = ""
              End With
            End If
            
            protPlan.DesprotegePlanilha
            'Cells(16, aColunas([lngOrca], 5)).value = bd1Orca.Range("M" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(16, aColunas([lngOrca], 5)).value = Sheets(StrAbaOrc).Range("M" & [lngLinSel]).value
            protPlan.DesprotegePlanilha
            Cells(16, aColunas([lngOrca], 5)).Select
            With Selection
              .Locked = True
            End With
            protPlan.DesprotegePlanilha
            'Cells(17, aColunas([lngOrca], 5)).value = bd1Orca.Range("U" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(17, aColunas([lngOrca], 5)).value = Sheets(StrAbaOrc).Range("U" & [lngLinSel]).value
            protPlan.DesprotegePlanilha
            Cells(17, aColunas([lngOrca], 5)).Select
            With Selection
              .Locked = True
            End With
            protPlan.DesprotegePlanilha
            'Cells(18, aColunas([lngOrca], 5)).value = bd1Orca.Range("X" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            Cells(18, aColunas([lngOrca], 5)).value = Sheets(StrAbaOrc).Range("X" & [lngLinSel]).value
            protPlan.DesprotegePlanilha
            Cells(18, aColunas([lngOrca], 5)).Select
            With Selection
              .Locked = True
            End With
            
            'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 FIM
            
            protPlan.DesprotegePlanilha
            Cells(16, aColunas([lngOrca], 1)).value = Sheets(StrAbaOrc).Range("S" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            Cells(16, aColunas([lngOrca], 4)).value = Sheets(StrAbaOrc).Range("N" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
                        
            protPlan.DesprotegePlanilha
            Cells(17, aColunas([lngOrca], 1)).value = Sheets(StrAbaOrc).Range("T" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            Cells(17, aColunas([lngOrca], 4)).value = Sheets(StrAbaOrc).Range("V" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
                        
            protPlan.DesprotegePlanilha
            Cells(18, aColunas([lngOrca], 1)).value = Sheets(StrAbaOrc).Range("W" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            protPlan.DesprotegePlanilha
            Cells(18, aColunas([lngOrca], 4)).value = Sheets(StrAbaOrc).Range("Y" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
                    
            'EXTRATIVISMO - RNM 25/10/2016 INI
            protPlan.DesprotegePlanilha
            Cells(7, aColunas([lngOrca], 7)).value = Sheets(StrAbaOrc).Range("AA" & [lngLinSel]).value  ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            'EXTRATIVISMO - RNM 25/10/2016 FIM
                                
            protPlan.DesprotegePlanilha
            If Cells(16, aColunas([lngOrca], 1)).value = vbNullString Then
               Cells(16, aColunas([lngOrca], 1)).value = Sheets(StrAbaOrc).Range("D" & [lngLinSel]).value ' Sprint 11 Inclus|fffd|o do Or|fffd|amento at|fffd| 1 milh|fffd|o
            End If
        End If
        lngLinRel = 21
        lngLinBD = 2
        dblFrete = 0
        lngSbgIns = bdRel1.Range("C" & [lngLinBD]).value
        protPlan.DesprotegePlanilha
        Do While lngLinBD <= lngTotOrc
           protPlan.DesprotegePlanilha
           Cells([lngLinRel], aColunas([lngOrca], 1)).value = bdRel1.Range("D" & [lngLinBD]).value
           protPlan.DesprotegePlanilha
           Cells([lngLinRel], aColunas([lngOrca], 2)).value = bdRel1.Range("G" & [lngLinBD]).value
           protPlan.DesprotegePlanilha
           Cells([lngLinRel], aColunas([lngOrca], 3)).value = bdRel1.Range("H" & [lngLinBD]).value
           protPlan.DesprotegePlanilha
           Cells([lngLinRel], aColunas([lngOrca], 4)).value = bdRel1.Range("I" & [lngLinBD]).value
           protPlan.DesprotegePlanilha
           Cells([lngLinRel], aColunas([lngOrca], 5)).value = bdRel1.Range("J" & [lngLinBD]).value
           If TpCarga = 1 Then
              protPlan.DesprotegePlanilha
              Cells([lngLinRel], aColunas([lngOrca], 6)).value = bdRel1.Range("L" & [lngLinBD]).value
           End If
           If bdRel1.Range("J" & [lngLinBD]).value <> 0 Then
             dblFrete = dblFrete + bdRel1.Range("K" & [lngLinBD]).value
           End If
           lngLinRel = lngLinRel + 1
           lngLinBD = lngLinBD + 1
           If lngLinBD > lngTotOrc Then
              Exit Do
           End If
           If lngSbgIns <> bdRel1.Range("C" & [lngLinBD]).value Then
              If dblFrete > 0 Then
                 Cells([lngLinRel], aColunas([lngOrca], 1)).value = "INSUMOS"
                 Cells([lngLinRel], aColunas([lngOrca], 2)).value = "FRETE"
                 Cells([lngLinRel], aColunas([lngOrca], 3)).value = "VERBA"
                 Cells([lngLinRel], aColunas([lngOrca], 4)).value = 1
                 Cells([lngLinRel], aColunas([lngOrca], 5)).value = dblFrete
                 If TpCarga = 1 Then Cells([lngLinRel], aColunas([lngOrca], 6)).value = "1|fffd| Parcela"
                 lngLinRel = lngLinRel + 1
              End If
              dblFrete = 0
           End If
        Loop
        
        If dblFrete > 0 Then
           Cells([lngLinRel], aColunas([lngOrca], 1)).value = "INSUMOS"
           Cells([lngLinRel], aColunas([lngOrca], 2)).value = "FRETE"
           Cells([lngLinRel], aColunas([lngOrca], 3)).value = "VERBA"
           Cells([lngLinRel], aColunas([lngOrca], 4)).value = 1
           Cells([lngLinRel], aColunas([lngOrca], 5)).value = dblFrete
           If TpCarga = 1 Then Cells([lngLinRel], aColunas([lngOrca], 6)).value = "1|fffd| Parcela"
        Else
       '    lngLinRel = lngLinRel - 1
        End If
        
        'lngLinRel = lngLinRel + 1
        protPlan.DesprotegePlanilha
        
        Rows("22:88").Hidden = False
        'TpCarga - Tipo de Carga ( 0 - Carregar tela de Or|fffd|amento e 1 - Carregar Tela de Compara|fffd||fffd|o)
        If TpCarga = 0 Then
          If lngLinRel <= 88 Then Rows([lngLinRel] & ":" & 84).Hidden = True
        End If
        protPlan.DesprotegePlanilha
        For lngLinSel = 21 To lngLinRel - 1
            Rows([lngLinSel]).AutoFit
        Next lngLinSel
        
        If TpCarga = 1 Then
           'OrdenarOr|fffd|amento CInt(lngOrca), TpCarga
        End If
        
        If TpCarga = 0 Then
            Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 88).Select
            'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = -0.249946592608417
                .PatternTintAndShade = 0
            End With
            Selection.FormulaHidden = True
            
'            For i = 21 To 88
'              If Range(aColunas([lngOrca], 5) & [i]).value = 0 Then
'                Rows([i]).Hidden = True
'              End If
'            Next i
            
        End If
 
        Application.Calculation = xlCalculationAutomatic
        Application.StatusBar = ""
End Sub

Function Valida_Campo(Texto As String, Tipo As Byte) As Boolean
    'Esta fun|fffd||fffd|o tem a finalidade de textar o texto, para verificar se n|fffd|o h|fffd| caracteres especiais
    'Tipo     '1 = Num|fffd|rico     '2 = Consoante     '3 = Alfanum|fffd|rico
    
    'Declara as vari|fffd|veis
    Dim i As Integer
    Dim Caracter As String
    Dim C1 As String
    
    'Inicializa as vari|fffd|veis
    Texto = UCase(Texto)
    Valida_Campo = True
    
    'Determina qual o conjunto de caracteres a ser utilizado, de acordo com o tipo.
    If Tipo = 1 Then
       Caracter = "0123456789"
    ElseIf Tipo = 2 Then
       Caracter = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    Else
       Caracter = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    End If
    
    'Caso n|fffd|o localize os caracteres do texto, no grupo de caracteres v|fffd|lidos, determina que h|fffd| ERRO.
    For i = 1 To Len(Texto)
    C1 = Mid(Texto, i, 1)
      If InStr(Caracter, C1) = 0 Then
         Valida_Campo = False
         Exit For
      End If
    Next i
         
End Function
Attribute VB_Name = "mdlNavega"
Sub botaoEDITA_CULT_Clique()
    Dim oFuncao As String, lngLinSel As Long
    Dim aCelula As String
    lngLinSel = ActiveCell.Row
    If lngLinSel < 58 Or lngLinSel > 67 Then
       MsgBox "Selecione a cultura para edi|fffd||fffd|o. (Programa de Invers|fffd|es - linha 58 a 67)", vbInformation
       GoTo Fim
    End If
    If Range("D" & [lngLinSel]) = vbNullString Then
       MsgBox "Selecione a cultura para edi|fffd||fffd|o", vbInformation
       GoTo Fim
    End If
    oFuncao = Range("S" & [lngLinSel]).value
    If oFuncao = vbNullString Then GoTo Fim
    Range("flagORCA_2").value = lngLinSel
    Run [oFuncao]
Fim:
    Exit Sub
End Sub

Sub cboORCA_Altera|fffd||fffd|o()
    Dim oFuncao As String, lngLinSel As Long
    Dim aCelula As String
    On Error Resume Next
    If xl99Auxi.Range("flagORCA_PRONAF").value = -1 Then
       MsgBox "Para acessar os or|fffd|amentos, |fffd| necess|fffd|rio informar o Programa de Cr|fffd|dito na guia Proposta.", vbExclamation
       If ActiveSheet.Name = "Proposta" Then Range("E46").Select
       Exit Sub
    End If
    lngLinSel = xl1Orca.Range("A11").value
    oFuncao = xl99Auxi.Range("AM" & [lngLinSel]).value
    AjusteTelaOrca (lngLinSel)
    If oFuncao = vbNullString Then GoTo Fim
    Run [oFuncao]
    AtualizaOrca
Fim:
    Exit Sub
End Sub

Sub selMENU()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    xl0Menu.Activate
    Range("B2").Select
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub ordenaMENU_ORCA()
    If Range("flagORCA_").value = 1 Then Exit Sub
    xl99Auxi.Unprotect Password:="senhasBN"
    xl99Auxi.Range("AM1:AT10").Sort Key1:=xl99Auxi.Range("AM1")
    xl99Auxi.Protect Password:="senhasBN"
End Sub
Sub selORCA01()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA01").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 1
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
       
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA02()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA02").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 2
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA03()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA03").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 3
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA04()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA04").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 4
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA05()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA05").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 5
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA06()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA06").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 6
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA07()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA07").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 7
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA08()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA08").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 8
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA09()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA09").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 9
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub selORCA10()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    xl1Orca.Activate
    protPlan.IniciaRotina True
    Range("B2:FM2").EntireColumn.Hidden = True
    Range("ORCA10").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Selection.EntireColumn.Hidden = False
    TelaOrca 10
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    ActiveSheet.Shapes("CmDBtn01").Left = 465
    If Rows("8:9").Hidden Then
       ActiveSheet.Shapes("CmDBtn01").Top = 117
    Else
       ActiveSheet.Shapes("CmDBtn01").Top = 147
    End If
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - FIM
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Sub selBENE()
    xl3Bene.Activate
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Range("B5").Select
End Sub

Sub selPROPINDI()
    xl2Prop.Activate
End Sub

Sub btnRORCA_Clique()
    Dim lngLinSel As Long, lngLinBD As Long, somaOrca As Double
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.IniciaRotina True
    xl99Auxi.Activate
    protPlan.DesprotegePlanilha
    somaOrca = 0
    lngLinBD = 1
    lngLinSel = 2
    Do While lngLinBD <= 10
       If Range("AN" & [lngLinBD]).value > 0 Then
          Range("G" & [lngLinSel]).value = Range("AR" & [lngLinBD]).value
          Range("H" & [lngLinSel]).value = Range("AL" & [lngLinBD]).value
          Range("I" & [lngLinSel]).value = Range("AN" & [lngLinBD]).value
          lngLinSel = lngLinSel + 1
          somaOrca = somaOrca + Range("AN" & [lngLinBD]).value
       End If
       lngLinBD = lngLinBD + 1
    Loop
    Range("flagORCA_V").value = somaOrca
    ActiveWorkbook.Names.Add Name:="listaORCA_VINC", RefersToR1C1:= _
           "=Auxiliar!R2C7:R" & [lngLinSel] - 1 & "C9"
    protPlan.ProtegePlanilha
    xl0Menu.Activate
    frmRelMode.Show
    xl0Menu.Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub


Sub LimparOrcamentoAtual()
    'Limpa os campos do or|fffd|amento atualmente vis|fffd|vel
    Dim strOrca, aColunas(10, 10) As String
    Dim lngOrca As Long, lngLinOrca, lngLinDes As Long
    Dim protPlan As clsProtecao
    
    If MsgBox("Deseja limpar os campos do or|fffd|amento atual?", _
       vbQuestion + vbYesNo, ":: Planilha Custeio") = vbNo Then Exit Sub
    Application.ScreenUpdating = False
    'defini|fffd||fffd|o das colunas do or|fffd|amento
    aColunas(1, 1) = "C"
    aColunas(1, 2) = "D"
    aColunas(1, 3) = "E"
    aColunas(1, 4) = "F"
    aColunas(1, 5) = "G"
    aColunas(1, 6) = "I"
    aColunas(1, 7) = "L"   'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    aColunas(1, 8) = "M"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(1, 9) = "J"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(1, 10) = "H"
    
    aColunas(2, 1) = "T"
    aColunas(2, 2) = "U"
    aColunas(2, 3) = "V"
    aColunas(2, 4) = "W"
    aColunas(2, 5) = "X"
    aColunas(2, 6) = "Z"
    aColunas(2, 7) = "AC"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(2, 8) = "AD"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(2, 9) = "AA"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(2, 10) = "Y"
    
    aColunas(3, 1) = "AK"
    aColunas(3, 2) = "AL"
    aColunas(3, 3) = "AM"
    aColunas(3, 4) = "AN"
    aColunas(3, 5) = "AO"
    aColunas(3, 6) = "AQ"
    aColunas(3, 7) = "AT"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(3, 8) = "AV"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(3, 9) = "AR"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(3, 10) = "AP"
       
    aColunas(4, 1) = "BB"
    aColunas(4, 2) = "BC"
    aColunas(4, 3) = "BD"
    aColunas(4, 4) = "BE"
    aColunas(4, 5) = "BF"
    aColunas(4, 6) = "BH"
    aColunas(4, 7) = "BK"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(4, 8) = "BL"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(4, 9) = "BI"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(4, 10) = "BG"
      
    aColunas(5, 1) = "BS"
    aColunas(5, 2) = "BT"
    aColunas(5, 3) = "BU"
    aColunas(5, 4) = "BV"
    aColunas(5, 5) = "BW"
    aColunas(5, 6) = "BY"
    aColunas(5, 7) = "CB"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(5, 8) = "CC"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(5, 9) = "BZ"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(5, 10) = "BX"
 
    aColunas(6, 1) = "CJ"
    aColunas(6, 2) = "CK"
    aColunas(6, 3) = "CL"
    aColunas(6, 4) = "CM"
    aColunas(6, 5) = "CN"
    aColunas(6, 6) = "CP"
    aColunas(6, 7) = "CS"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(6, 8) = "CT"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(6, 9) = "CQ"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(6, 10) = "CO"
    
    aColunas(7, 1) = "DA"
    aColunas(7, 2) = "DB"
    aColunas(7, 3) = "DC"
    aColunas(7, 4) = "DD"
    aColunas(7, 5) = "DE"
    aColunas(7, 6) = "DG"
    aColunas(7, 7) = "DJ"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(7, 8) = "DK"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(7, 9) = "DH"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(7, 10) = "DF"
    
    aColunas(8, 1) = "DR"
    aColunas(8, 2) = "DS"
    aColunas(8, 3) = "DT"
    aColunas(8, 4) = "DU"
    aColunas(8, 5) = "DV"
    aColunas(8, 6) = "DX"
    aColunas(8, 7) = "EA"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(8, 8) = "EB"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(8, 9) = "DY"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(8, 10) = "DW"
     
    aColunas(9, 1) = "EI"
    aColunas(9, 2) = "EJ"
    aColunas(9, 3) = "EK"
    aColunas(9, 4) = "EL"
    aColunas(9, 5) = "EM"
    aColunas(9, 6) = "EO"
    aColunas(9, 7) = "ER"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(9, 8) = "ES"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(9, 9) = "EP"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(9, 10) = "EN"
     
    aColunas(10, 1) = "EZ"
    aColunas(10, 2) = "FA"
    aColunas(10, 3) = "FB"
    aColunas(10, 4) = "FC"
    aColunas(10, 5) = "FD"
    aColunas(10, 6) = "FF"
    aColunas(10, 7) = "FI"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(10, 8) = "FJ"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(10, 9) = "FG"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(10, 10) = "FE"
    
    'Identifica o or|fffd|amento ativo e limpa as colunas
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    lngOrca = 1
    Do While lngOrca <= 10
       strOrca = "ORCA" & Format([lngOrca], "00")
       If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
       lngOrca = lngOrca + 1
    Loop
    flagBusca = 1
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha   'Sprint 11
    Range("SQORCA" & Format(lngOrca, "00")).ClearContents
    Range("DTORCA" & Format(lngOrca, "00")).ClearContents
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 7 & ":" & aColunas([lngOrca], 6) & 7).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 11 & ":" & aColunas([lngOrca], 5) & 11).ClearContents ' Descri|fffd||fffd|o Finalidade - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 12 & ":" & aColunas([lngOrca], 5) & 12).ClearContents ' Descri|fffd||fffd|o Empreendimento - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    Range(aColunas([lngOrca], 2) & 11 & ":" & aColunas([lngOrca], 5) & 11).Select        '
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 11 & ":" & aColunas([lngOrca], 5) & 12).ClearComments ' Retirar coment|fffd|rios anteriores.
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
        
    Range(aColunas([lngOrca], 2) & 13 & ":" & aColunas([lngOrca], 2) & 14).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 4) & 13 & ":" & aColunas([lngOrca], 5) & 13).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 10) & 9).ClearContents                                   ' N|fffd|vel Tecnol|fffd|gico
   
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 4) & 14).ClearContents
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 10) & 14).ClearContents
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    flagBusca = 1
    Range(aColunas([lngOrca], 7) & 12 & ":" & aColunas([lngOrca], 7) & 12).ClearContents ' Cod Empreendimento - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    flagBusca = 1
    Range(aColunas([lngOrca], 7) & 13 & ":" & aColunas([lngOrca], 7) & 13).ClearContents ' Cod Sist Producao  - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 8) & 12 & ":" & aColunas([lngOrca], 8) & 12).ClearContents ' Unidade - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 8 & ":" & aColunas([lngOrca], 5) & 12).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & 16 & ":" & aColunas([lngOrca], 9) & 18).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 19 & ":" & aColunas([lngOrca], 7) & 19).ClearContents ' 'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & 21 & ":" & aColunas([lngOrca], 5) & 84).ClearContents
   ' If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
   ' Range(aColunas([lngOrca], 6) & 21 & ":" & aColunas([lngOrca], 6) & 84).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    flagBusca = 1
    Range(aColunas([lngOrca], 2) & 7).value = "Or|fffd|amento " & Format(lngOrca, "00")
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 9) & 12 & ":" & aColunas([lngOrca], 9) & 12).ClearContents  'GSOL00863772 - 03|fffd| Sprint Dez/2014
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 9) & 13 & ":" & aColunas([lngOrca], 9) & 12).ClearContents  'GSOL00910095 - campo Cultura Consorciada
    protPlan.DesprotegePlanilha
    
    'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 INI
    'PRODUTIVIDADE/MILHEIRO
    flagBusca = 1
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 6) & 7 & ":" & aColunas([lngOrca], 9) & 7).ClearContents
'    protPlan.DesprotegePlanilha
'    Cells(7, aColunas([lngOrca], 6)).Locked = False
    
    'QUANTIDADE A SER COLHIDA MILHEIRO
    flagBusca = 1
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 6) & 12 & ":" & aColunas([lngOrca], 6) & 12).ClearContents
'    protPlan.DesprotegePlanilha
'    Cells(12, aColunas([lngOrca], 6)).Locked = False
    
    'Produtividade 1
    flagBusca = 1
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 5) & 16).ClearContents
'    protPlan.DesprotegePlanilha
'    If Range(aColunas([lngOrca], 9) & 7).value = "EXTRATIVISMO DE ESP|fffd|CIES NATIVAS" Then
'        With Selection
'          .Locked = True
'        End With
'    Else
'        With Selection
'          .Locked = False
'        End With
'    End If
    'Produtividade 2
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 5) & 17).ClearContents
'    protPlan.DesprotegePlanilha
'    If Range(aColunas([lngOrca], 9) & 7).value = "EXTRATIVISMO DE ESP|fffd|CIES NATIVAS" Then
'        With Selection
'          .Locked = True
'        End With
'    Else
'        With Selection
'          .Locked = False
'        End With
'    End If
    
    'Produtividade 3
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 5) & 18).ClearContents
            
    flagBusca = 1
    protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 84).Locked = True
    Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 84).FormulaHidden = True
    If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then ' _
        'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
        Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 84).Locked = True
        Range(aColunas([lngOrca], 6) & "21:" & aColunas([lngOrca], 6) & 84).Locked = True
    Else
        Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 84).Locked = False
        'Range(aColunas([lngOrca], 6) & "21:" & aColunas([lngOrca], 6) & 84).FormulaHidden = True
        Range(aColunas([lngOrca], 6) & "21:" & aColunas([lngOrca], 6) & 84).Locked = True
    End If
    
    TelaOrcaPinta CInt(lngOrca)
    
    'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 FIM
    
    'GSOL00131364
    limpaCampoCultivar lngOrca
    
    
    PlanilhaAtual = ActiveSheet.Name
    'LimparGlebaPontos lngOrca, "0"      'SQ_invers|fffd|o
    Sheets([PlanilhaAtual]).Activate
    
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Rows("21:88").Hidden = False
    lngLinOrca = 21
    lngLinDes = 101
    Range(aColunas([lngOrca], 1) & [lngLinOrca]).Select
    While xl99Auxi.Range("A" & [lngLinDes]).value <> vbNullString
          If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
          Range(aColunas([lngOrca], 1) & [lngLinOrca]).value = xl99Auxi.Range("A" & [lngLinDes]).value
          If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
          Range(aColunas([lngOrca], 2) & [lngLinOrca]).value = xl99Auxi.Range("B" & [lngLinDes]).value
          lngLinDes = lngLinDes + 1
          lngLinOrca = lngLinOrca + 1
          If xl99Auxi.Range("A" & [lngLinDes]).value <> xl99Auxi.Range("A" & [lngLinDes] - 1).value Then lngLinOrca = lngLinOrca + 1
    Wend
    
'    INI - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA / BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922)
'    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
'    If Range("totalORCA" & Format(Range("A11").value, "00")).value > 0 And xl2Prop.Range("E10").value <> "Sim" Then
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = True
'        ActiveSheet.Shapes("Drop-down 738").Visible = True
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = True
'
'        Dim ListaPosicao() As String
'        ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
'
'        DoEvents
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top
'        ActiveSheet.Shapes("Drop-down 738").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 10
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 35
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 10
'        ActiveSheet.Shapes("Drop-down 738").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 20
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 19
'
'    Else
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
'        ActiveSheet.Shapes("Drop-down 738").Visible = False
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
'    End If
'    FIM - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA / BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922)
    flagBusca = 0
    
    TelaOrcaPinta CInt(lngOrca)
    Range(aColunas([lngOrca], 2) & 7).Select
    
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Sub LimparOrcamento(ByVal lngOrca As Long, FlagBkp As Byte)
    'Limpa os campos do or|fffd|amento atualmente vis|fffd|vel
    Dim strOrca, aColunas(10, 11) As String
    Dim lngLinOrca, lngLinDes As Long
    Dim protPlan As clsProtecao
    
    'defini|fffd||fffd|o das colunas do or|fffd|amento
    aColunas(1, 1) = "C"
    aColunas(1, 2) = "D"
    aColunas(1, 3) = "E"
    aColunas(1, 4) = "F"
    aColunas(1, 5) = "G"
    aColunas(1, 6) = "I"
    aColunas(1, 7) = "H"
    aColunas(1, 8) = "J"
    aColunas(1, 9) = "L"    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    aColunas(1, 10) = "M"   'RNM INCLUS|fffd|O DA LIMPEZA
        
    aColunas(2, 1) = "T"
    aColunas(2, 2) = "U"
    aColunas(2, 3) = "V"
    aColunas(2, 4) = "W"
    aColunas(2, 5) = "X"
    aColunas(2, 6) = "Z"
    aColunas(2, 7) = "Y"
    aColunas(2, 8) = "AA"
    aColunas(2, 9) = "AC"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(2, 10) = "AD"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(3, 1) = "AK"
    aColunas(3, 2) = "AL"
    aColunas(3, 3) = "AM"
    aColunas(3, 4) = "AN"
    aColunas(3, 5) = "AO"
    aColunas(3, 6) = "AQ"
    aColunas(3, 7) = "AP"
    aColunas(3, 8) = "AR"
    aColunas(3, 9) = "AT"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(3, 10) = "AV"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(4, 1) = "BB"
    aColunas(4, 2) = "BC"
    aColunas(4, 3) = "BD"
    aColunas(4, 4) = "BE"
    aColunas(4, 5) = "BF"
    aColunas(4, 6) = "BH"
    aColunas(4, 7) = "BG"
    aColunas(4, 8) = "BI"
    aColunas(4, 9) = "BK"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(4, 10) = "BL"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(5, 1) = "BS"
    aColunas(5, 2) = "BT"
    aColunas(5, 3) = "BU"
    aColunas(5, 4) = "BV"
    aColunas(5, 5) = "BW"
    aColunas(5, 6) = "BY"
    aColunas(5, 7) = "BX"
    aColunas(5, 8) = "BZ"
    aColunas(5, 9) = "CB"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(5, 10) = "CC"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(6, 1) = "CJ"
    aColunas(6, 2) = "CK"
    aColunas(6, 3) = "CL"
    aColunas(6, 4) = "CM"
    aColunas(6, 5) = "CN"
    aColunas(6, 6) = "CP"
    aColunas(6, 7) = "CO"
    aColunas(6, 8) = "CQ"
    aColunas(6, 9) = "CS"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(6, 10) = "CT"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(7, 1) = "DA"
    aColunas(7, 2) = "DB"
    aColunas(7, 3) = "DC"
    aColunas(7, 4) = "DD"
    aColunas(7, 5) = "DE"
    aColunas(7, 6) = "DG"
    aColunas(7, 7) = "DF"
    aColunas(7, 8) = "DH"
    aColunas(7, 9) = "DJ"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(7, 10) = "DK"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(8, 1) = "DR"
    aColunas(8, 2) = "DS"
    aColunas(8, 3) = "DT"
    aColunas(8, 4) = "DU"
    aColunas(8, 5) = "DV"
    aColunas(8, 6) = "DX"
    aColunas(8, 7) = "DW"
    aColunas(8, 8) = "DY"
    aColunas(8, 9) = "EA"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(8, 10) = "EB"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(9, 1) = "EI"
    aColunas(9, 2) = "EJ"
    aColunas(9, 3) = "EK"
    aColunas(9, 4) = "EL"
    aColunas(9, 5) = "EM"
    aColunas(9, 6) = "EO"
    aColunas(9, 7) = "EN"
    aColunas(9, 8) = "EP"
    aColunas(9, 9) = "ER"    'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(9, 10) = "ES"   'RNM INCLUS|fffd|O DA LIMPEZA
     
    aColunas(10, 1) = "EZ"
    aColunas(10, 2) = "FA"
    aColunas(10, 3) = "FB"
    aColunas(10, 4) = "FC"
    aColunas(10, 5) = "FD"
    aColunas(10, 6) = "FF"
    aColunas(10, 7) = "FE"
    aColunas(10, 8) = "FG"
    aColunas(10, 9) = "FI"   'RNM INCLUS|fffd|O DA LIMPEZA
    aColunas(10, 10) = "FJ"  'RNM INCLUS|fffd|O DA LIMPEZA
    
    'Identifica o or|fffd|amento ativo e limpa as colunas
    Set protPlan = New clsProtecao
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha '11 Sprint
    Range("SQORCA" & Format(lngOrca, "00")).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha '11 Sprint
    Range("DTORCA" & Format(lngOrca, "00")).ClearContents
        
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 7 & ":" & aColunas([lngOrca], 6) & 7).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 8 & ":" & aColunas([lngOrca], 5) & 8).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 8 & ":" & aColunas([lngOrca], 5) & 9).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 4) & 13 & ":" & aColunas([lngOrca], 5) & 13).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 4) & 14).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 7) & 14).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha    'Sprint 14
    Range(aColunas([lngOrca], 7) & 9).ClearContents                    'N|fffd|vel Tecnol|fffd|gico
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & 16 & ":" & aColunas([lngOrca], 8) & 18).ClearContents 'RNM ALTERADO DE 5 PAR 8 g / j
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & 21 & ":" & aColunas([lngOrca], 5) & 84).ClearContents
   ' If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
   ' Range(aColunas([lngOrca], 6) & 21 & ":" & aColunas([lngOrca], 6) & 84).ClearContents
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 7).value = "Or|fffd|amento " & Format(lngOrca, "00")
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 11 & ":" & aColunas([lngOrca], 5) & 11).ClearContents ' Descri|fffd||fffd|o Finalidade - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 12 & ":" & aColunas([lngOrca], 5) & 12).ClearContents ' Descri|fffd||fffd|o Empreendimento - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 11 & ":" & aColunas([lngOrca], 5) & 12).ClearComments ' Retirar coment|fffd|rios anteriores.
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 7) & 12 & ":" & aColunas([lngOrca], 6) & 12).ClearContents ' Cultivar - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 2) & 14 & ":" & aColunas([lngOrca], 2) & 14).ClearContents '
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 7) & 14 & ":" & aColunas([lngOrca], 7) & 14).ClearContents '
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 9) & 12 & ":" & aColunas([lngOrca], 9) & 12).ClearContents ' Cod Empreendimento - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 9) & 13 & ":" & aColunas([lngOrca], 9) & 13).ClearContents ' Cod Sist Producao  - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 10) & 12 & ":" & aColunas([lngOrca], 10) & 12).ClearContents ' Unidade - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 10) & 9 & ":" & aColunas([lngOrca], 10) & 14).ClearContents ' Risco  - 13 Sprint identificar a cultura do empreendimento  2017/10/13
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 9) & 9 & ":" & aColunas([lngOrca], 9) & 9).ClearContents     ' Variedade  - LIMPEZA GSOL00660171 - 2013/05/26 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 8) & 13 & ":" & aColunas([lngOrca], 8) & 12).ClearContents   'GSOL00910095 - campo Cultura Consorciada
    'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    Range(aColunas([lngOrca], 2) & 19 & ":" & aColunas([lngOrca], 7) & 19).ClearContents 'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 10) & 9 & ":" & aColunas([lngOrca], 10) & 9).ClearContents ' N|fffd|vel Tecnol|fffd|gico
        
    'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 INI
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 6) & 7 & ":" & aColunas([lngOrca], 8) & 7).ClearContents
    protPlan.DesprotegePlanilha
    Cells(7, aColunas([lngOrca], 6)).Locked = False
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 6) & 12 & ":" & aColunas([lngOrca], 6) & 12).ClearContents
    protPlan.DesprotegePlanilha
    Cells(12, aColunas([lngOrca], 6)).Locked = False
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 1) & "21:" & aColunas([lngOrca], 5) & 84).Locked = True
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Range(aColunas([lngOrca], 6) & "21:" & aColunas([lngOrca], 6) & 84).Locked = True

       
       
    'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM     INI
    If FlagBkp = 0 Then
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
       ' Range("TPORCA" & Format([lngOrca], "00")).value = 0     'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM

        TelaOrcaPinta CInt(lngOrca)
    
        'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 FIM
       
        'GSOL00131364
        limpaCampoCultivar lngOrca
    End If
    'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM     FIM
    'Atividades dos Produtos
    Range(aColunas([lngOrca], 7) & 16 & ":" & aColunas([lngOrca], 8) & 18).ClearContents
    
    If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
    Rows("21:88").Hidden = False
        
    lngLinOrca = 21
    lngLinDes = 101
    Range(aColunas([lngOrca], 1) & [lngLinOrca]).Select
    While xl99Auxi.Range("A" & [lngLinDes]).value <> vbNullString
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
          Range(aColunas([lngOrca], 1) & [lngLinOrca]).value = xl99Auxi.Range("A" & [lngLinDes]).value
        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
          Range(aColunas([lngOrca], 2) & [lngLinOrca]).value = xl99Auxi.Range("B" & [lngLinDes]).value
          lngLinDes = lngLinDes + 1
          lngLinOrca = lngLinOrca + 1
          If xl99Auxi.Range("A" & [lngLinDes]).value <> xl99Auxi.Range("A" & [lngLinDes] - 1).value Then lngLinOrca = lngLinOrca + 1
    Wend
    
'    INI - Retirar a Exclus|fffd|o de parcelas - Sprint 13 - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA / BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922) 2017/10/13
'    If FlagBkp = 0 Then
'        If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
'        If Range("totalORCA" & Format(Range("A11").value, "00")).value > 0 And xl2Prop.Range("E10").value <> "Sim" Then
'            ActiveSheet.Shapes("Caixa de Grupo 739").Visible = True
'            ActiveSheet.Shapes("Drop-down 738").Visible = True
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = True
'
'            Dim ListaPosicao() As String
'            ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
'
'            DoEvents
'
'            ActiveSheet.Shapes("Caixa de Grupo 739").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top
'            ActiveSheet.Shapes("Drop-down 738").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 10
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 35
'
'            ActiveSheet.Shapes("Caixa de Grupo 739").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 10
'            ActiveSheet.Shapes("Drop-down 738").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 20
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 19
'
'        Else
'            ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
'            ActiveSheet.Shapes("Drop-down 738").Visible = False
'            ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
'        End If
'    End If
'    FIM - Retirar a Exclus|fffd|o de parcelas - Sprint 13 - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA/BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922) 2017/10/13
        
    Application.ScreenUpdating = False
    PlanilhaAtual = ActiveSheet.Name
    'LimparGlebaPontos lngOrca, "0"      'SQ_invers|fffd|o
    Sheets([PlanilhaAtual]).Activate
        
        
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
    
    'Aliquotas proagro em 2% quando PRONAF (GSOL00223679)
    'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
    'ajustaAliquotasPROAGRO lngOrca
End Sub



Sub incluiOperacaoSER()
    Dim linSel As Integer
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina True
    If ActiveSheet.Name = "Proposta" And _
       Range("S275").value = 2 Then
       If ActiveCell.Row >= 275 And ActiveCell.Row <= 286 Then
          linSel = 280
          Do While linSel <= 287
             If Rows(linSel).Hidden = True Then
                Range("C" & [linSel]).value = "x"
                Rows(linSel).Hidden = False
                Exit Do
             End If
             linSel = linSel + 1
          Loop
       End If
    End If
    
    'GSOL00094929
    If ActiveSheet.Name = "Proposta" And _
       xl99Auxi.Range("GK18").value = 2 Then
       If ActiveCell.Row >= 289 And ActiveCell.Row <= 299 Then
          linSel = 293
          Do While linSel <= 300
             If Rows(linSel).Hidden = True Then
                Range("C" & [linSel]).value = "x"
                Rows(linSel).Hidden = False
                Exit Do
             End If
             linSel = linSel + 1
          Loop
       End If
    End If
    
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

'GSOL00119964
Sub cboCliente_Altera|fffd||fffd|o()
    If Range("S21").value = 2 Then
       Range("E22").Select
       If MsgBox("Deseja preencher os dados completos do cadastro do Proponente?" & vbCrLf & _
                 "Obs.: Apenas para Proponentes Pessoas F|fffd|sicas.", vbQuestion + vbYesNo) = vbYes Then
          xl3Bene.Activate
          Application.EnableEvents = False
          xl3Bene.Range("O9").value = 2
          ActiveWindow.ScrollRow = 1
          ActiveWindow.ScrollColumn = 1
          MsgBox "Ap|fffd|s informar os dados, clique no bot|fffd|o [Incluir] para gravar" & vbCrLf & _
                 "e depois clique no bot|fffd|o [Proposta] para retornar a edi|fffd||fffd|o da proposta.", vbInformation
          Application.EnableEvents = True
          Exit Sub
       End If
    End If
    Range("E22").Select
End Sub
Sub cboBenef_Altera|fffd||fffd|o()
    If ActiveSheet.Name <> "Benef" Then Exit Sub
    
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    Application.EnableEvents = False
    protPlan.IniciaRotina True
    
    If Range("P8").value = 2 Then
        'Range("A12:A24").EntireRow.Hidden = False
        'Range("A32:A35").EntireRow.Hidden = False
        Range("A12:A51").EntireRow.Hidden = False
    Else
        'Range("A12:A24").EntireRow.Hidden = True
        'Range("A32:A35").EntireRow.Hidden = True
        Range("A12:A26").EntireRow.Hidden = True
        Range("A55:A72").EntireRow.Hidden = True
    End If
    Range("A22").EntireRow.Hidden = True
    Range("A39").EntireRow.Hidden = True   'campo Estado
    Range("A52").EntireRow.Hidden = True   'campo Estado
    Range("E9").Select
    protPlan.FinalizaRotina
    Application.EnableEvents = True
    Set protPlan = Nothing
End Sub


Sub ajustaAliquotasPROAGRO(Optional ByVal orcamento As Integer)
    Dim aColunas(10, 7) As String
    'Defini|fffd||fffd|o das colunas do or|fffd|amento
    'GSOL00795449 - Altera|fffd||fffd|o da refer|fffd|ncia do munic|fffd|pio ao or|fffd|amento
    aColunas(1, 1) = "C"
    aColunas(1, 2) = "D"
    aColunas(1, 3) = "E"
    aColunas(1, 4) = "F"
    aColunas(1, 5) = "G"
    aColunas(1, 6) = "I"
    aColunas(1, 7) = "N"

    aColunas(2, 1) = "T"
    aColunas(2, 2) = "U"
    aColunas(2, 3) = "V"
    aColunas(2, 4) = "W"
    aColunas(2, 5) = "X"
    aColunas(2, 6) = "Z"
    aColunas(2, 7) = "AE"
     
    aColunas(3, 1) = "AK"
    aColunas(3, 2) = "AL"
    aColunas(3, 3) = "AM"
    aColunas(3, 4) = "AN"
    aColunas(3, 5) = "AO"
    aColunas(3, 6) = "AQ"
    aColunas(3, 7) = "AV"
     
    aColunas(4, 1) = "BB"
    aColunas(4, 2) = "BC"
    aColunas(4, 3) = "BD"
    aColunas(4, 4) = "BE"
    aColunas(4, 5) = "BF"
    aColunas(4, 6) = "BH"
    aColunas(4, 7) = "BM"
     
    aColunas(5, 1) = "BS"
    aColunas(5, 2) = "BT"
    aColunas(5, 3) = "BU"
    aColunas(5, 4) = "BV"
    aColunas(5, 5) = "BW"
    aColunas(5, 6) = "BY"
    aColunas(5, 7) = "CD"
     
    aColunas(6, 1) = "CJ"
    aColunas(6, 2) = "CK"
    aColunas(6, 3) = "CL"
    aColunas(6, 4) = "CM"
    aColunas(6, 5) = "CN"
    aColunas(6, 6) = "CP"
    aColunas(6, 7) = "CU"
     
    aColunas(7, 1) = "DA"
    aColunas(7, 2) = "DB"
    aColunas(7, 3) = "DC"
    aColunas(7, 4) = "DD"
    aColunas(7, 5) = "DE"
    aColunas(7, 6) = "DG"
    aColunas(7, 7) = "DL"
     
    aColunas(8, 1) = "DR"
    aColunas(8, 2) = "DS"
    aColunas(8, 3) = "DT"
    aColunas(8, 4) = "DU"
    aColunas(8, 5) = "DV"
    aColunas(8, 6) = "DX"
    aColunas(8, 7) = "EC"
     
    aColunas(9, 1) = "EI"
    aColunas(9, 2) = "EJ"
    aColunas(9, 3) = "EK"
    aColunas(9, 4) = "EL"
    aColunas(9, 5) = "EM"
    aColunas(9, 6) = "EO"
    aColunas(9, 7) = "ET"
     
    aColunas(10, 1) = "EZ"
    aColunas(10, 2) = "FA"
    aColunas(10, 3) = "FB"
    aColunas(10, 4) = "FC"
    aColunas(10, 5) = "FD"
    aColunas(10, 6) = "FF"
    aColunas(10, 7) = "FK"

    Dim i As Integer
    Dim isPRONAF As Boolean
    isPRONAF = xl99Auxi.Range("flagORCA_PRONAF").value = "1"
    
    'Quando PRONAF, fixar as aliquotas em 2% (GSOL00223679)
    'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
    xl1Orca.Unprotect Password:="senhasBN"
    If orcamento = 0 Then
        For i = 1 To 10
            aliquotaPROAGRO isPRONAF, aColunas(i, 7), aColunas(i, 2), aColunas(i, 5)
        Next i
    Else
        aliquotaPROAGRO isPRONAF, aColunas(orcamento, 7), aColunas(orcamento, 2), aColunas(orcamento, 5)
    End If
    xl1Orca.Protect Password:="senhasBN"
    
End Sub

Private Sub aliquotaPROAGRO(isPRONAF As Boolean, nImovel As String, C1 As String, c2 As String)
    Dim aliquota As Byte
    'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
    'GSOL00795449 - Altera|fffd||fffd|o da refer|fffd|ncia do munic|fffd|pio ao or|fffd|amento
    If Mid(xl2Prop.Range("T44").value, 1, 7) = "Irrigad" Then
        aliquota = 1
    Else
        If isPRONAF Then
            If xl2Prop.Range("U" & (xl1Orca.Range(nImovel & "13").value) + 32).value = "SEMI-|fffd|RIDA" Then
               aliquota = 1         'Se "semi|fffd|rido" e "pronaf" = 1
            Else
               aliquota = 2         'Se "n|fffd|o Semi|fffd|rido" e "pronaf" = 2
            End If
        Else
            If xl2Prop.Range("U" & ((xl1Orca.Range(nImovel & "13").value) + 32)).value = "SEMI-|fffd|RIDA" Then
              aliquota = 2          'Se "semi|fffd|rido" e "n|fffd|o pronaf" = 2
            Else
              aliquota = 3          'Se "n|fffd|o Semi|fffd|rido" e "N|fffd|o Pronaf" = 3
            End If
       End If
    End If
    'SE programa de credito for pronaf
    '   seta aliquotas 2% nas celulas
    '   trava celulas
    '   seta background cinza
    'SENAO (programa de credito for nao pronaf ou vazio)
    '   destrava celulas
    '   seta background branco
    'FIM
    If isPRONAF Then
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).value = aliquota
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).Locked = True
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).Interior.ColorIndex = 15
    Else
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).value = aliquota   ' GSOL00676184
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).Locked = False
        xl1Orca.Range(C1 & 14 & ":" & c2 & 14).Interior.ColorIndex = xlNone
    End If
End Sub

Sub bnt_ProAgroMais_Clique()
    Sheets("Agencia").Select
End Sub

Sub botaoMOD_AG_Clique()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    protPlan.IniciaRotina True
    Range("D6:F6").Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=listaAGC"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = _
        "O nome informado |fffd| invalido ou excede o limite de caracteres." & Chr(10) & "(M|fffd|ximo 55 caracteres)"
        .ShowInput = True
        .ShowError = True
    End With
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    
End Sub


Sub AjusteTelaOrca(ByVal lngOrca As Long)
    'Limpa os campos do or|fffd|amento atualmente vis|fffd|vel
    Dim aColunas(10, 8) As String
    Dim protPlan As clsProtecao
    
    'defini|fffd||fffd|o das colunas do or|fffd|amento
    aColunas(1, 1) = "C"
    aColunas(1, 2) = "D"
    aColunas(1, 3) = "E"
    aColunas(1, 4) = "F"
    aColunas(1, 5) = "G"
    aColunas(1, 6) = "H"
    aColunas(1, 7) = "I"
    aColunas(1, 8) = "J"
        
    aColunas(2, 1) = "T"
    aColunas(2, 2) = "U"
    aColunas(2, 3) = "V"
    aColunas(2, 4) = "W"
    aColunas(2, 5) = "X"
    aColunas(2, 6) = "Y"
    aColunas(2, 7) = "Z"
    aColunas(2, 8) = "AA"
     
    aColunas(3, 1) = "AK"
    aColunas(3, 2) = "AL"
    aColunas(3, 3) = "AM"
    aColunas(3, 4) = "AN"
    aColunas(3, 5) = "AO"
    aColunas(3, 6) = "AP"
    aColunas(3, 7) = "AQ"
    aColunas(3, 8) = "AR"
     
    aColunas(4, 1) = "BB"
    aColunas(4, 2) = "BC"
    aColunas(4, 3) = "BD"
    aColunas(4, 4) = "BE"
    aColunas(4, 5) = "BF"
    aColunas(4, 6) = "BG"
    aColunas(4, 7) = "BH"
    aColunas(4, 8) = "BI"
     
    aColunas(5, 1) = "BS"
    aColunas(5, 2) = "BT"
    aColunas(5, 3) = "BU"
    aColunas(5, 4) = "BV"
    aColunas(5, 5) = "BW"
    aColunas(5, 6) = "BX"
    aColunas(5, 7) = "BY"
    aColunas(5, 8) = "BZ"
     
    aColunas(6, 1) = "CJ"
    aColunas(6, 2) = "CK"
    aColunas(6, 3) = "CL"
    aColunas(6, 4) = "CM"
    aColunas(6, 5) = "CN"
    aColunas(6, 6) = "CO"
    aColunas(6, 7) = "CP"
    aColunas(6, 8) = "CQ"
     
    aColunas(7, 1) = "DA"
    aColunas(7, 2) = "DB"
    aColunas(7, 3) = "DC"
    aColunas(7, 4) = "DD"
    aColunas(7, 5) = "DE"
    aColunas(7, 6) = "DF"
    aColunas(7, 7) = "DG"
    aColunas(7, 8) = "DH"
     
    aColunas(8, 1) = "DR"
    aColunas(8, 2) = "DS"
    aColunas(8, 3) = "DT"
    aColunas(8, 4) = "DU"
    aColunas(8, 5) = "DV"
    aColunas(8, 6) = "DW"
    aColunas(8, 7) = "DX"
    aColunas(8, 8) = "DY"
     
    aColunas(9, 1) = "EI"
    aColunas(9, 2) = "EJ"
    aColunas(9, 3) = "EK"
    aColunas(9, 4) = "EL"
    aColunas(9, 5) = "EM"
    aColunas(9, 6) = "EN"
    aColunas(9, 7) = "EO"
    aColunas(9, 8) = "EP"
     
    aColunas(10, 1) = "EZ"
    aColunas(10, 2) = "FA"
    aColunas(10, 3) = "FB"
    aColunas(10, 4) = "FC"
    aColunas(10, 5) = "FD"
    aColunas(10, 6) = "FE"
    aColunas(10, 7) = "FF"
    aColunas(10, 8) = "FG"
    'Identifica o or|fffd|amento ativo e limpa as colunas
    Dim ListaPosicao() As String
    Set protPlan = New clsProtecao
    If ActiveSheet.Name <> "Orcamento" Then Exit Sub
    protPlan.IniciaRotina True
    Columns(aColunas([lngOrca], 1) & ":" & aColunas([lngOrca], 1)).ColumnWidth = 19
    Columns(aColunas([lngOrca], 2) & ":" & aColunas([lngOrca], 2)).ColumnWidth = 31.29
    Columns(aColunas([lngOrca], 3) & ":" & aColunas([lngOrca], 3)).ColumnWidth = 6.43
    Columns(aColunas([lngOrca], 4) & ":" & aColunas([lngOrca], 4)).ColumnWidth = 12.71
    Columns(aColunas([lngOrca], 5) & ":" & aColunas([lngOrca], 5)).ColumnWidth = 18.43
    Columns(aColunas([lngOrca], 6) & ":" & aColunas([lngOrca], 6)).ColumnWidth = 18.14
    Columns(aColunas([lngOrca], 7) & ":" & aColunas([lngOrca], 7)).ColumnWidth = 18.57
    Columns(aColunas([lngOrca], 8) & ":" & aColunas([lngOrca], 8)).ColumnWidth = 23.89
    protPlan.FinalizaRotina
    
'    If Range("totalORCA" & Format(Range("A11").value, "00")).value > 0 And xl2Prop.Range("E10").value <> "Sim" Then
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = True
'        ActiveSheet.Shapes("Drop-down 738").Visible = True
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = True
'
'        ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
'
'        DoEvents
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top
'        ActiveSheet.Shapes("Drop-down 738").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 10
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Top = Range(ListaPosicao(Range("A11").value - 1) & "21").Top + 35
'
'        ActiveSheet.Shapes("Caixa de Grupo 739").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 10
'        ActiveSheet.Shapes("Drop-down 738").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 20
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Left = Range(ListaPosicao(Range("A11").value - 1) & "21").Left + 19
'
'    Else
'        ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
'        ActiveSheet.Shapes("Drop-down 738").Visible = False
'        ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
'    End If
'
    protPlan.DesprotegePlanilha
    ListaPosicao = Split("J,AA,AR,BI,BZ,CQ,DH,DY,EP,FG", ",")
    Range(ListaPosicao(Range("A11").value - 1) & "7").Select
    If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then ' _
        'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
        Selection.Locked = True
        Range(ListaPosicao(Range("A11").value - 1) & "7").Offset(, -1).Select
        Selection.Locked = True
    Else
        With Selection.Validation
         .Delete
         .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
         xlBetween, Formula1:="=ListaTPOrca"
         .IgnoreBlank = True
         .InCellDropdown = True
         .InputTitle = ""
         .ErrorTitle = ""
         .InputMessage = ""
         .ErrorMessage = ""
         .ShowInput = True
         .ShowError = True
        End With
        
        Selection.Locked = False
        Range(ListaPosicao(Range("A11").value - 1) & "7").Offset(, -1).Select
        Selection.Locked = False
    End If
    
'    If xl2Prop.Range("E10").value = "Sim" Then
'       Alterar_Parcelas CInt(Format(Range("A11").value, "00"))
'    End If
    
    Extrativismo lngOrca
    Set protPlan = Nothing
        
End Sub


Sub Geodesica_clique()

    If Range("flagORCA_").value = 1 Then Exit Sub
    bd10Geodesica.Unprotect Password:="senhasBN"
    frmGeodesica.Show

End Sub


'Sub LimparGlebaPontos(ByVal SQ_Inv As Byte, Glb As String)
'
'    Dim protPlan As clsProtecao
'    Dim LI As Long
'    Dim PosIni, PosFim, Qtd_Reg As Long
'    Set protPlan = New clsProtecao
'    Dim Inv As Byte
'
'    Application.ScreenUpdating = False
'    flagBusca = 1
'
'    Inv = CInt(SQ_Inv)
'
'    bd10Geodesica.Visible = xlSheetVisible
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'
'    Application.ScreenUpdating = False
'    'Ordenar antes de aplicar o filtro
'    bd10Geodesica.Range("B99").Calculate
'    Application.GoTo Reference:="SQ_Geodesica"
'    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Add Key:=Range("B100:B" & Range("B99").value + 100), _
'        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
'    With ActiveWorkbook.Worksheets("Geodesica").Sort
'        .SetRange Range("A100:M" & Range("B99").value + 100)
'        .Header = xlYes     'xlGuess = Sem cabe|fffd|alho
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
'    Application.ScreenUpdating = False
'    'Recuperar a quantidade de linhas antes do filtro
'    Qtd_Reg = bd10Geodesica.Range("B99").value + 100
'
'    'Application.ScreenUpdating = False
'
'    'bd10Geodesica.Activate
'    Selection.AutoFilter
'    If bd10Geodesica.Range("B99").value > 0 Then
'        If Glb = "0" Then
'          For i = 101 To bd10Geodesica.Range("c101").End(xlDown).Row
'            If bd10Geodesica.Range("c" & [i]).value = SQ_Inv Then
'              ActiveSheet.Range("C101:M" & 100 + bd10Geodesica.Range("B99").value).AutoFilter Field:=3, Criteria1:=SQ_Inv
'              Exit For
'            End If
'          Next i
'        Else
'           ActiveSheet.Range("A101:M" & 100 + bd10Geodesica.Range("B99").value).AutoFilter Field:=3, Criteria1:=CStr(SQ_Inv)
'           ActiveSheet.Range("A101:M" & 100 + bd10Geodesica.Range("B99").value).AutoFilter Field:=6, Criteria1:=Glb
'        End If
'    End If
'
'    Application.ScreenUpdating = False
'    PosIni = 0
'    PosFim = 0
'    LI = 101
'    Do While LI <= Qtd_Reg
'      If Range("C" & [LI]).Height > 0 Then
'        If PosIni = 0 Then
'           PosIni = LI
'        End If
'        PosFim = LI
'      End If
'      LI = LI + 1
'    Loop
'
'    Application.ScreenUpdating = False
'    If PosIni = 0 Or PosFim = 0 Then
'       Selection.AutoFilter
'    Else
'      If Glb = "0" Then
'        Rows(PosIni & ":" & PosFim).Select
'        Selection.Delete Shift:=xlUp
'        Selection.AutoFilter
'      Else
'        For i = PosFim To 101 Step -1
'          If SQ_Inv = Range("C" & [i]).value And CInt(Glb) = Range("F" & [i]).value Then
'             Rows([i] & ":" & [i]).Select
'             Selection.Delete Shift:=xlDown
'          End If
'        Next i
'      End If
'    End If
'
'    'Desfazer a sele|fffd||fffd|o
'    'Selection.AutoFilter
'
'    Application.ScreenUpdating = False
'
'    bd10Geodesica.Range("B99").Calculate
'
'    Application.ScreenUpdating = False
'    Application.GoTo Reference:="SQ_Geodesica"
'    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Add Key:=Range("B100:B" & Range("B99").value + 100), _
'        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
'    With ActiveWorkbook.Worksheets("Geodesica").Sort
'        .SetRange Range("A100:M" & Range("B99").value + 100)
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
'Application.ScreenUpdating = False
'
'    If Glb = "0" Then
'       bd10Geodesica.Range("f1").Calculate
'        bd10Geodesica.Range("A1:E97").Select
'        ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Clear
'        ActiveWorkbook.Worksheets("Geodesica").Sort.SortFields.Add Key:=Range("A1:A97"), _
'            SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
'        With ActiveWorkbook.Worksheets("Geodesica").Sort
'            .SetRange Range("A1:E97")
'            .Header = xlYes     'xlGuess = Sem cabe|fffd|alho
'            .MatchCase = False
'            .Orientation = xlTopToBottom
'            .SortMethod = xlPinYin
'            .Apply
'        End With
'
'        Application.ScreenUpdating = False
'        Selection.AutoFilter
'
'        'Recuperar a quantidade de linhas antes do filtro
'        Qtd_Reg = bd10Geodesica.Range("F1").value + 1
'
'
'        ActiveSheet.Range("A2:A97").AutoFilter Field:=1, Criteria1:=Inv
'
'        Application.ScreenUpdating = False
'        PosIni = 0
'        PosFim = 0
'        LI = 2
'        Do While LI <= Qtd_Reg
'          If Range("A" & [LI]).Height > 0 Then
'            If PosIni = 0 Then
'               PosIni = LI
'            End If
'            PosFim = LI
'          End If
'          LI = LI + 1
'        Loop
'
'        Application.ScreenUpdating = False
'        If PosIni = 0 Or PosFim = 0 Then
'           Selection.AutoFilter
'        Else
'          Rows(PosIni & ":" & PosFim).Select
'          ActiveSheet.Range("A" & [PosIni] & ":E" & [PosFim]).ClearContents
'          If Qtd_Reg > 2 Then
'            Selection.AutoFilter
'          End If
'        End If
'    End If
'
'    flagBusca = 0
'    protPlan.ProtegePlanilha
'    bd10Geodesica.Visible = xlSheetHidden
'
'   ' If Glb <> "0" Then frmGeodesica.Sel_Pontos (0)
'    'xl2Prop.Activate
'
'    Set protPlan = Nothing
'
'End Sub

Sub Extrativismo(ByVal lngOrca As Long)

    Dim PlanilhaAtual As String
    Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim colCel4 As String, colCel5 As String, colCel6 As String
    Dim colCel7 As String, strOrca As String
    Dim colCel8 As String, colCel9 As String  'RNM INCLUS|fffd|O GSOL00660171
    Dim colCel10 As String    'GSOL00863772 - 03|fffd| Sprint Dez/2014
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao


    PlanilhaAtual = ActiveSheet.Name


    Application.ScreenUpdating = False

    xl1Orca.Activate
    protPlan.IniciaRotina True
    flagBusca = 1

    Select Case lngOrca
           Case 1
              colCel1 = "C"
              colCel2 = "D"
              colCel3 = "E"
              colCel4 = "F"
              colCel5 = "G"
              colCel6 = "I"
              colCel7 = "H"
              colCel8 = "L"
              colCel9 = "M"
              colCel10 = "J"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 2
              colCel1 = "T"
              colCel2 = "U"
              colCel3 = "V"
              colCel4 = "W"
              colCel5 = "X"
              colCel6 = "Z"
              colCel7 = "Y"
              colCel8 = "AC"
              colCel9 = "AD"
              colCel10 = "AA"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 3
              colCel1 = "AK"
              colCel2 = "AL"
              colCel3 = "AM"
              colCel4 = "AN"
              colCel5 = "AO"
              colCel6 = "AQ"
              colCel7 = "AP"
              colCel8 = "AT"
              colCel9 = "AV"
              colCel10 = "AR"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 4
              colCel1 = "BB"
              colCel2 = "BC"
              colCel3 = "BD"
              colCel4 = "BE"
              colCel5 = "BF"
              colCel6 = "BH"
              colCel7 = "BG"
              colCel8 = "BK"
              colCel9 = "BL"
              colCel10 = "BI"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 5
              colCel1 = "BS"
              colCel2 = "BT"
              colCel3 = "BU"
              colCel4 = "BV"
              colCel5 = "BW"
              colCel6 = "BY"
              colCel7 = "BX"
              colCel8 = "CB"
              colCel9 = "CC"
              colCel10 = "BZ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 6
              colCel1 = "CJ"
              colCel2 = "CK"
              colCel3 = "CL"
              colCel4 = "CM"
              colCel5 = "CN"
              colCel6 = "CP"
              colCel7 = "CO"
              colCel8 = "CS"
              colCel9 = "CT"
              colCel10 = "CQ"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 7
              colCel1 = "DA"
              colCel2 = "DB"
              colCel3 = "DC"
              colCel4 = "DD"
              colCel5 = "DE"
              colCel6 = "DG"
              colCel7 = "DF"
              colCel8 = "DJ"
              colCel9 = "DK"
              colCel10 = "DH"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 8
              colCel1 = "DR"
              colCel2 = "DS"
              colCel3 = "DT"
              colCel4 = "DU"
              colCel5 = "DV"
              colCel6 = "DX"
              colCel7 = "DW"
              colCel8 = "EA"
              colCel9 = "EB"
              colCel10 = "DY"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 9
              colCel1 = "EI"
              colCel2 = "EJ"
              colCel3 = "EK"
              colCel4 = "EL"
              colCel5 = "EM"
              colCel6 = "EO"
              colCel7 = "EN"
              colCel8 = "ER"
              colCel9 = "ES"
              colCel10 = "EP"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
           Case 10
              colCel1 = "EZ"
              colCel2 = "FA"
              colCel3 = "FB"
              colCel4 = "FC"
              colCel5 = "FD"
              colCel6 = "FF"
              colCel7 = "FE"
              colCel8 = "FI"
              colCel9 = "FJ"
              colCel10 = "FG"   'GSOL00863772 - 03|fffd| Sprint Dez/2014
    End Select


    'EXTRATIVISMO - ' Demanda GSOL01037532 - RNM - OUT-2016 INI
      protPlan.DesprotegePlanilha
      If LTrim(RTrim(Range([colCel10] & "7").value)) = "EXTRATIVISMO" Then
      
        protPlan.DesprotegePlanilha
        If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then ' _
            'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
            protPlan.DesprotegePlanilha
            Range([colCel6] & "7").Locked = True
        Else
            protPlan.DesprotegePlanilha
            Range([colCel6] & "7").Locked = False
        End If
        protPlan.DesprotegePlanilha
        Range([colCel6] & "12").Locked = False
        protPlan.DesprotegePlanilha
        Range([colCel5] & "16").Select
        protPlan.DesprotegePlanilha
        Range([colCel5] & "16").FormulaR1C1 = _
        "=IF(RC[-4]<>"""",IF(ISERROR((R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),0,(R[-9]C[2]*R[-4]C[2])/R[-5]C[8]),"""")"
        protPlan.DesprotegePlanilha
        Range([colCel5] & "16").Locked = True
        Range([colCel5] & "16").FormulaHidden = True
        
        Range([colCel5] & "17").Select
        Range([colCel5] & "17").FormulaR1C1 = _
        "=IF(RC[-4]<>"""",IF(ISERROR((R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),0,(R[-10]C[2]*R[-5]C[2])/R[-6]C[8]),"""")"
        Range([colCel5] & "17").Locked = True
        Range([colCel5] & "17").FormulaHidden = True

        protPlan.DesprotegePlanilha
        
        Range([colCel5] & "18").Select
        Range([colCel5] & "18").FormulaR1C1 = _
        "=IF(RC[-4]<>"""",IF(ISERROR((R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),0,(R[-11]C[2]*R[-6]C[2])/R[-7]C[8]),"""")"
        Range([colCel5] & "18").Locked = True
        Range([colCel5] & "18").FormulaHidden = True
      Else
        Range([colCel6] & "7").Select
        protPlan.DesprotegePlanilha
        With Selection
          .Locked = True
          '.value = ""
        End With
          
        Range([colCel6] & "12").Select
        protPlan.DesprotegePlanilha
        With Selection
          .Locked = True
          .value = ""
        End With
        
      'EXTRATIVISMO - Demanda GSOL01037532 - RNM - OUT-2016 FIM
       For lngCont = 16 To 18
         If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then '_
             'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
           If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
           If Not Range([colCel1] & [lngCont]).Locked Then Range([colCel1] & [lngCont] & ":" & [colCel4] & [lngCont]).Locked = True
           If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
           If Not Range([colCel5] & [lngCont]).Locked Then Range([colCel5] & [lngCont]).Locked = True
         Else
           If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
           If Range([colCel1] & [lngCont]).Locked Then Range([colCel1] & [lngCont] & ":" & [colCel4] & [lngCont]).Locked = False
           If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
           If Range([colCel5] & [lngCont]).Locked Then Range([colCel5] & [lngCont]).Locked = False
           
         End If
       Next lngCont
    End If

    'Extrativismo
    protPlan.DesprotegePlanilha
    If Range("ModOrca" & Format(Range("A11").value, "00")).value = "EXTRATIVISMO" Then
       'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = False
       Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = False
       Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = True
       Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = True
       Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = True
    Else
      If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then ' _
          'Or (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD") <> 2 And xl2Prop.Range("M46").value = "Sim") Then
        'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = True
        Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = True
      Else
        'Range("ProdMil" & Format(Range("A11").value, "00")).Locked = True
        Range("QtdSerColh" & Format(Range("A11").value, "00")).Locked = True
        Range("prodQT1ORCA" & Format(Range("A11").value, "00")).Locked = False
        Range("prodQT2ORCA" & Format(Range("A11").value, "00")).Locked = False
        Range("prodQT3ORCA" & Format(Range("A11").value, "00")).Locked = False
      End If
    End If
  
    protPlan.FinalizaRotina

    Sheets([PlanilhaAtual]).Activate

    flagBusca = 0
    Set protPlan = Nothing

    
End Sub

'Base de dados de Or|fffd|amento, j|fffd| esta padronizado com 1 e 2 Parcelas, Sprint 13 - RNM - 20171128
'Sub Alterar_Parcelas(intOrc As Integer)
'
'    'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - INI
'    Dim intColcel As Integer
'    Dim intLincel As Integer
'    Dim intLinini As Integer
'    Dim PlanilhaAtual As String
'
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    PlanilhaAtual = ActiveSheet.Name
'
'    Application.ScreenUpdating = False
'    xl1Orca.Activate
'    Application.ScreenUpdating = False
'    protPlan.IniciaRotina True
'    flagBusca = 1
'
'    Application.ScreenUpdating = False
'
'    intLincel = 21
'    intColcel = 3
'    intLinini = 21
'
'    'Loclizar e realizar a exclus|fffd|o virtual das parcelas alocando Nulo no campo
'    For intLincel = 21 To 84
'      If Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value <> vbNullString Then        'Parcela de Desembolso <> ""
'            If UCase(Cells(intLincel, intColcel + (17 * (intOrc - 1))).value) = "COLHEITA / BENEFICIAMENTO" Or _
'               UCase(Cells(intLincel, intColcel + (17 * (intOrc - 1))).value) = "COLHEITA/BENEFICIAMENTO" Then   ' Se o sub-grupo = "Colheita / Beneficiamento" ou "Colheita/Beneficiamento"
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = "2|fffd| Parcela"  '- Desembolso
'            Else
'                Cells(intLincel, intColcel + (6 + (17 * (intOrc - 1)))).value = "1|fffd| Parcela"
'            End If
'      End If
'    Next intLincel
'
''    INI - Retirar a Exclus|fffd|o de parcelas - Sprint 13 - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA / BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922) 2017/10/13
''    ActiveSheet.Shapes("Caixa de Grupo 739").Visible = False
''    ActiveSheet.Shapes("Drop-down 738").Visible = False
''    ActiveSheet.Shapes("cmdbtn_ExcluirParcelas").Visible = False
''    FIM - Retirar a Exclus|fffd|o de parcelas - Sprint 13 - - Ajuste nas Parcelas de Desembolsos, considerando como 2|fffd| Parcela os itens pertencentes ao Sub-Grupo |fffd|COLHEITA / BENEFICIAMENTO|fffd| e como 1|fffd| Parcela de Desembolso os demais itens, exceto os itens referentes |fffd| Taxa de Elabora|fffd||fffd|o do Projeto (GSOL01044922) 2017/10/13
'
'    OrdenarOr|fffd|amento intOrc, 0
'
'    Application.ScreenUpdating = False
'
'    protPlan.FinalizaRotina
'
'    Sheets([PlanilhaAtual]).Activate
'    Application.ScreenUpdating = False
'
'    flagBusca = 1
'
'    Set protPlan = Nothing
'
'    'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - FIM
'
'End Sub

Sub PintaTitulo()
    Dim xcolorRed As Single
    Dim protPlan As clsProtecao
    
    Set protPlan = New clsProtecao

    xcolorRed = 3938726
    CarregamentoRapido True
    
    'Menu Principal
    xl0Menu.Activate
    protPlan.DesprotegePlanilha
    xl0Menu.Range("B2:K2").Interior.Color = xcolorRed
    xl0Menu.Range("B20:I21").Interior.Color = xcolorRed
    
    'Proposta
    xl2Prop.Activate
    protPlan.DesprotegePlanilha
    xl2Prop.Range("C8").Interior.Color = xcolorRed

   'Proponente
    xl3Bene.Activate
    protPlan.DesprotegePlanilha
    xl3Bene.Range("B5").Interior.Color = xcolorRed
'
    'Coobrigado
    xl5Coob.Activate
    protPlan.DesprotegePlanilha
    xl5Coob.Range("B5").Interior.Color = xcolorRed

'    'Or|fffd|amento
    xl1Orca.Activate
    protPlan.DesprotegePlanilha
    For i = 1 To 10
        xl1Orca.Range("ORCA" & Format(i, "00")).Interior.Color = xcolorRed
    Next i
    
    'Coordenada Geodesica
    xl14Geodesica.Activate
    protPlan.DesprotegePlanilha
    xl14Geodesica.Range("C2").Interior.Color = xcolorRed
    protPlan.DesprotegePlanilha
    xl14Geodesica.Range("AQ2").Interior.Color = xcolorRed
'
    'Agencia
    xl8Agencia.Activate
    protPlan.DesprotegePlanilha
    xl8Agencia.Range("B3").Interior.Color = xcolorRed
    
    protPlan.ProtegePlanilha
    CarregamentoRapido False

End Sub
Attribute VB_Name = "mdlRelatorio"
Sub imprimePROP()
Attribute imprimePROP.VB_Description = "Macro gravada em 26/01/2004 por Banco do Nordeste S.A"
Attribute imprimePROP.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim xlPlan As String, lngLinSel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True
    
    Dim criticaProjeto As Integer
    criticaProjeto = ValidaSEAP
    If criticaProjeto = 1 Then
       If MsgBox("Foram encontradas inconsist|fffd|ncias no plano." & vbCrLf & _
                 "Gerar o relat|fffd|rio mesmo assim?", vbQuestion + vbYesNo, ":: Planilha de Custeio") = vbNo Then
          protPlan.ProtegePlanilha
          Sheets([xlPlan]).Activate
          protPlan.FinalizaRotina
          Set protPlan = Nothing
          Exit Sub
       End If
    End If
    
    xl6Prop.Activate
    AtualizaTela
    protPlan.DesprotegePlanilha
    Rows("219:219").EntireRow.AutoFit
    Rows("225:225").EntireRow.AutoFit
    'GSOL01923226 - RNM - INI
      'Omitir da proposta a TX de Juros, quando for um destes programas FNE/PRONAF COMUM (433) e o programa FNE/PRONAF GRUPO "A" - FNE (368)
      If xl2Prop.Range("S46").value = 382 Or xl2Prop.Range("S46").value = 368 Or xl2Prop.Range("S46").value = 401 Then
          Rows("260:266").Hidden = True
      Else
          Rows("260:266").Hidden = False
      End If
    'GSOL01923226 - RNM - FIM
    'INI - Foi exclu|fffd|do esta altera|fffd||fffd|o visto que a |fffd|rea de neg|fffd|cios solicitou durante a homologa|fffd||fffd|o - 13/09/2018 RNM
    ''GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 - INI RNM 23/07/2018
    'If xl2Prop.Range("FlagPronaf").value = 0 And xl2Prop.Range("FTE_REC").value = 24 Then
    '  xl6Prop.Rows("260:266").EntireRow.Hidden = True
    'Else
    '  xl6Prop.Rows("260:266").EntireRow.Hidden = False
    'End If
    ''GSOL01921068 - SEAP/PLANILHAS-PLANO SAFRA 2018/2019 - FIM RNM 23/07/2018
    'FIM - Foi exclu|fffd|do esta altera|fffd||fffd|o visto que a |fffd|rea de neg|fffd|cios solicitou durante a homologa|fffd||fffd|o - 13/09/2018 RNM
    
    ActiveSheet.PageSetup.PrintArea = "$C$3:$P$276"
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$3:$4"
'        .LeftMargin = Application.InchesToPoints(0.393700787401575)
'        .RightMargin = Application.InchesToPoints(0.393700787401575)
'        .TopMargin = Application.InchesToPoints(0.196850393700787)
'        .BottomMargin = Application.InchesToPoints(0.590551181102362)
'        .HeaderMargin = Application.InchesToPoints(0.590551181102362)
'        .FooterMargin = Application.InchesToPoints(0.708661417322835)
'        .FitToPagesWide = 1
'        .FitToPagesTall = 1
    End With
    
    ActiveWindow.SelectedSheets.PrintPreview
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Sub relORCA(ByVal lngOrca As Long)
     Dim lngLinSel As Long
     Dim xlPlan As String
     Dim oFuncao As String
     Dim colCel1 As String, colCel2 As String, colCel3 As String
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
     
     xlPlan = ActiveSheet.Name
     oFuncao = "selORCA" & Format(lngOrca, "00")
     protPlan.DesprotegePlanilha
     Run [oFuncao]
     Select Case lngOrca
            Case 1
                 colCel1 = "B"
                 colCel2 = "J"
                 colCel3 = "L"
            Case 2
                 colCel1 = "S"
                 colCel2 = "AA"
                 colCel3 = "AC"
            Case 3
                 colCel1 = "AJ"
                 colCel2 = "AR"
                 colCel3 = "AT"
            Case 4
                 colCel1 = "BA"
                 colCel2 = "BI"
                 colCel3 = "BK"
            Case 5
                 colCel1 = "BR"
                 colCel2 = "BZ"
                 colCel3 = "CB"
            Case 6
                 colCel1 = "CI"
                 colCel2 = "CQ"
                 colCel3 = "CS"
            Case 7
                 colCel1 = "CZ"
                 colCel2 = "DH"
                 colCel3 = "DJ"
            Case 8
                 colCel1 = "DQ"
                 colCel2 = "DY"
                 colCel3 = "EA"
            Case 9
                 colCel1 = "EH"
                 colCel2 = "EP"
                 colCel3 = "ER"
            Case 10
                 colCel1 = "EY"
                 colCel2 = "FG"
                 colCel3 = "FI"
     End Select
     For lngLinSel = 21 To 88
         protPlan.DesprotegePlanilha
         If Range([colCel3] & [lngLinSel]).value = 1 Then
            Range([colCel3] & [lngLinSel]).EntireRow.Hidden = False
         Else
            Range([colCel3] & [lngLinSel]).EntireRow.Hidden = True
         End If
     Next
     For lngLinSel = 92 To 114
         protPlan.DesprotegePlanilha
         If Range([colCel3] & [lngLinSel]).value = 1 Then
            Range([colCel3] & [lngLinSel]).EntireRow.Hidden = False
         Else
            Range([colCel3] & [lngLinSel]).EntireRow.Hidden = True
         End If
     Next
     Range("flagORCA_").value = 1
     xl5RelOrca.Activate
     protPlan.DesprotegePlanilha
     Range("B5:J89").Clear
     Range("B5:J89").EntireRow.Hidden = False
     xl1Orca.Activate
     Range([colCel1] & "5:" & [colCel2] & "89").Select
     Selection.Copy
     xl5RelOrca.Activate
     Range("B5").Select
     Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
     Range("B5").Select
     ActiveSheet.Paste
     
     xl1Orca.Activate
     Range("H91").Select
     Selection.Copy
     xl5RelOrca.Activate
     Range("H91").Select
     Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
     'INI - Sprint 13 - 2017/10/13 - Ajuste na formata|fffd||fffd|o do |fffd|Relat|fffd|rio de Or|fffd|amento|fffd|, com a impress|fffd|o correta da |fffd|ltima coluna (GSOL01044612).
     xl1Orca.Activate
     Range("J11:J12").Select
     Selection.Copy
     xl5RelOrca.Activate
     Range("H10").Select
     Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=True
    'FIM - Sprint 13 - 2017/10/13 - Ajuste na formata|fffd||fffd|o do |fffd|Relat|fffd|rio de Or|fffd|amento|fffd|, com a impress|fffd|o correta da |fffd|ltima coluna (GSOL01044612).
        
     'Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
     Application.CutCopyMode = False
     Rows("05:05").Hidden = True     'RNM 25/10/2016 - EXTRATIVISMO
'     Rows("08:09").Hidden = True    'RNM 03/11/2017 - SPRINT 13
     'Rows("17:18").Hidden = True
     'RNM 25/10/2016 - EXTRATIVISMO INI
     Range("I13:J13").Select
     Selection.Copy
     Range("H13").Select
     ActiveSheet.Paste
     
     Range("I6:J7").Select
     Selection.Copy
     Range("H6").Select
     ActiveSheet.Paste
     
     'RNM 25/10/2016 - EXTRATIVISMO FIM
     'Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
     Application.CutCopyMode = False
     Rows("21:88").AutoFit
  
     'RNM 03/11/2017 - SPRINT 13
     If (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then
         Rows("8:9").Hidden = False
     Else
        If xl2Prop.Range("M46").value = "N|fffd|o" Then
           Rows("8:9").Hidden = True
        Else
           Rows("8:9").Hidden = False
        End If
     End If
     
     If xl2Prop.Range("flagPROAGRO").value = 0 Then
        Rows("14").Hidden = True
     Else
        Rows("14").Hidden = False
     End If
     For lngLinSel = 16 To 18
         If Range("C" & [lngLinSel]).value = vbNullString Then
            Range("C" & [lngLinSel]).EntireRow.Hidden = True
         Else
            Range("C" & [lngLinSel]).EntireRow.Hidden = False
         End If
     Next lngLinSel
     
     For lngLinSel = 21 To 88
         If Range("H" & [lngLinSel]).value = 0 Then
            Range("H" & [lngLinSel]).EntireRow.Hidden = True
         Else
            Range("H" & [lngLinSel]).EntireRow.Hidden = False
            If Range("C" & [lngLinSel]).value = "" Then Range("C" & [lngLinSel]).value = "Outros"
         End If
     Next lngLinSel
     For lngLinSel = 92 To 115
         If Range("H" & [lngLinSel]).value = 0 Then
            Range("H" & [lngLinSel]).EntireRow.Hidden = True
         Else
            Range("H" & [lngLinSel]).EntireRow.Hidden = False
         End If
     Next lngLinSel
     
    'Sprint 11 inclus|fffd|o do Or|fffd|amento at|fffd| 1 Milh|fffd|o - INI
    If xl1Orca.Range("TPORCA" & Format([lngOrca], "00")) = 0 Then
       Range("B3").value = "Or|fffd|amentos - Plano de Custeio"
    Else
       Range("B3").value = "Or|fffd|amentos At|fffd| R$ 1 Milh|fffd|o - Plano de Custeio"
    End If
    'Sprint 11 inclus|fffd|o do Or|fffd|amento at|fffd| 1 Milh|fffd|o - FIM
     
    If Range("I" & 7).value = "EXTRATIVISMO" Then
       Rows("91").EntireRow.Hidden = False
       protPlan.DesprotegePlanilha
       Range("I" & 90).value = "POR MILHEIRO"
       Range("I" & 90).value = "POR MILHEIRO"
       protPlan.DesprotegePlanilha
       Range("I" & 91).value = "POR HECTARE"
    Else
       Rows("91").EntireRow.Hidden = True
       protPlan.DesprotegePlanilha
       Range("I" & 90).value = "POR HECTARE"
    End If
     
     
     ActiveSheet.PageSetup.PrintArea = "B3:I121"
     ActiveSheet.PageSetup.PrintTitleRows = "$3:$20"
     If Range("flagRELATORIO").value = 1 Then
        Range("flagRELATORIO").value = 0
        ActiveSheet.PrintOut
     Else
        ActiveWindow.SelectedSheets.PrintPreview
     End If
     protPlan.ProtegePlanilha
     
Fim:
     xl1Orca.Activate
     Range("flagORCA_").value = 0
     protPlan.DesprotegePlanilha
     If xl99Auxi.Range("flagORCA_PRONAF").value <> 1 Then
        protPlan.DesprotegePlanilha
        Rows("21:91").Hidden = False
     End If
     protPlan.DesprotegePlanilha
     Rows("92:114").Hidden = True
     Range([colCel1] & "5").Select
     protPlan.ProtegePlanilha
     Sheets([xlPlan]).Activate
     protPlan.FinalizaRotina
     Set protPlan = Nothing
End Sub

Sub cboORCA_I_Altera|fffd||fffd|o()
    Dim lngOrca As Long, lngLinSel As Long
    On Error Resume Next
    lngLinSel = Range("A11").value
    lngOrca = xl99Auxi.Range("AR" & [lngLinSel]).value
    If Not IsNumeric(lngOrca) Then GoTo Fim
    relORCA lngOrca
Fim:
 
End Sub

Sub relORCA_Todos()
    Dim lngLinSel As Long, lngOrca As Long
    Dim xlPlan As String
    xlPlan = ActiveSheet.Name
    For lngLinSel = 1 To 10
        lngOrca = xl2Prop.Range("V" & [lngLinSel] + 57).value
        If lngOrca > 0 Then relORCA [lngOrca]
    Next lngLinSel
    If ActiveSheet.Name <> xlPlan Then Sheets([xlPlan]).Activate
End Sub

Sub relORCA_Todos_U()
    If MsgBox("Confirma impress|fffd|o de todos os or|fffd|amentos vinculados ao plano?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
    Dim lngLinSel As Long, lngOrca As Long
    Dim xlPlan As String
    xlPlan = ActiveSheet.Name
    For lngLinSel = 1 To 10
        lngOrca = xl2Prop.Range("V" & [lngLinSel] + 57).value
        If lngOrca > 0 Then
     
     
        End If
    Next lngLinSel
    If ActiveSheet.Name <> xlPlan Then Sheets([xlPlan]).Activate
End Sub


Sub relBene()
    If MsgBox("Confirma impress|fffd|o da lista de Proponentes?", vbQuestion + vbYesNo, "Relat|fffd|rio") = vbNo Then Exit Sub
    If Range("TP_PROP").value = 3 Then
       MsgBox "Relat|fffd|rio n|fffd|o dispon|fffd|vel para Proposta Individual", vbExclamation
       Exit Sub
    End If
    Dim xlPlan As String
    Dim lngLinSel As Long, lngLinBD As Long, lngTotBene As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    xlPlan = ActiveSheet.Name
    protPlan.IniciaRotina True
    xl7RelBene.Activate
    protPlan.DesprotegePlanilha
    bd4Benef.Activate
    lngTotBene = Range("FIM_BCLI")
    xl7RelBene.Activate
    lngLinSel = 34
    lngLinBD = 2
    Do While lngLinBD <= lngTotBene
       Range("C" & [lngLinSel]).value = bd4Benef.Range("F" & [lngLinBD]).value
       Range("H" & [lngLinSel]).value = bd4Benef.Range("H" & [lngLinBD]).value
       Range("J" & [lngLinSel]).value = bd4Benef.Range("J" & [lngLinBD]).value
       lngLinSel = lngLinSel + 1
       If lngLinBD = lngTotBene Then Exit Do
       Rows([lngLinSel]).Insert
       Rows([lngLinSel] - 1).Copy
       Rows([lngLinSel]).Select
       Selection.PasteSpecial xlPasteValues, xlPasteSpecialOperationNone
       lngLinBD = lngLinBD + 1
    Loop
    
    ActiveSheet.PageSetup.PrintArea = "C3:P" & [lngLinSel] + 1
    ActiveSheet.PageSetup.PrintTitleRows = "$3:$33"
    Application.Dialogs(xlDialogPrint).Show
    xl7RelBene.Activate
    lngLinSel = 35
    While Range("A" & [lngLinSel]).value = 1
          Rows([lngLinSel]).Delete
    Wend
    Range("C34:P34").ClearContents
    protPlan.ProtegePlanilha
    Sheets([xlPlan]).Activate
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub


Sub Rel_InfComplInv()
    Application.ScreenUpdating = False
    Sheets("EMPREE_REL").Activate
    AtualizaTela
    ActiveSheet.PrintPreview
    Application.ScreenUpdating = True
    Sheets("Menu").Activate
End Sub
Sub RelCoodGeod() '(Optional ImpressaoDireta As Integer)
    'GSOL00966571 - RNM - INI Relat|fffd|rio de Coordenandas Geodesicas
    Application.ScreenUpdating = False
    Dim xlPlan As String
    Dim xlplan1 As Variant
    Dim flagArquivo As Boolean
    Dim xlArquivo
    Dim lngLinSel As Long, lngLinBD As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    Dim ArrayRelCSV(30, 2) As Variant
    'Sprint 11 04/2017 - Permitir utilizar a |fffd|rea de transfer|fffd|ncia
    Boorel = True
         
 '   xl00Menu.Activate
 '   xlInvRural = ActiveWorkbook.Name
    flagArquivo = False
    strFiltro = "Arquivo de Planilha (*.xls),*.xls"
    Do While Not flagArquivo
       xlArquivo = Application.GetSaveAsFilename("", [strFiltro], , ":: GERAR COORDENADAS GEOD|fffd|SICAS")
       If xlArquivo = False Then Exit Do
       If ExisteArquivo(xlArquivo) Then
          If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
                    "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
             flagArquivo = True
          End If
       Else
          flagArquivo = True
       End If
    Loop
    If Not flagArquivo Then
       Set sb = Nothing
       Set protPlan = Nothing
       Exit Sub
    End If
    protPlan.IniciaRotina False
    
    xlArqExp = Application.WorksheetFunction.Substitute(UCase(xlArquivo), ".xls", ".XLS")
    xlArqExp = Application.WorksheetFunction.Proper(xlArqExp)
    On Error Resume Next
    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
    
    
    xlPlan = ActiveSheet.Name
    bd10Geodesica.Activate
    protPlan.IniciaRotina True
        
    Application.ScreenUpdating = False
    bd10Geodesica.Visible = xlSheetVisible
    bd10Geodesica.Activate
    protPlan.DesprotegePlanilha
    bd10Geodesica.Calculate
    
    Range("CA101:DE101").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    
    Application.Calculation = xlCalculationManual
    
    For i = 101 To 131
       ArrayRelCSV(i - 101, 0) = Cells([i], 76).value 'Coluna que deve ser gravado
       ArrayRelCSV(i - 101, 1) = Cells([i], 77).value 'Valor de -1 (Formula) a posi|fffd||fffd|o
       ArrayRelCSV(i - 101, 2) = Cells([i], 78).value 'Formula (texto)
    Next i
    
    For i = 0 To 30
        Cells(101, ArrayRelCSV(i, 0)).Select
        Cells(101, ArrayRelCSV(i, 0)).FormulaR1C1 = ArrayRelCSV(i, 2)
        Cells(101, ArrayRelCSV(i, 0)).Select
        Selection.Copy
        ActiveSheet.Range(Cells(102, ArrayRelCSV(i, 0)), Cells(Range("B99").value + 100, ArrayRelCSV(i, 0))).Select
        ActiveSheet.Paste
        Application.CutCopyMode = False
    Next i
    
    Application.Calculation = xlCalculationAutomatic
    
    'Tirar as formulas
    Range("CA101:DE101").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

    'Carregar a planilha com os dados criados
    Application.ScreenUpdating = False
    Sheets("GEO").Visible = xlSheetVisible
    Sheets("GEO").Select
    protPlan.DesprotegePlanilha
    Sheets("GEO").Range("A2:AE" & Rows.Count).ClearContents
    bd10Geodesica.Visible = xlSheetVisible
    Sheets("Geodesica").Select
    Range("CA100:CH100").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    'Descarregar os dados na GEO
    Sheets("GEO").Select
    Sheets("GEO").Range("A1").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
          
    'Criar o diret|fffd|rio
    On Error Resume Next
      ChDir xlArqExp
    
    'Criar o arquivo de sa|fffd|da
    'xlArquivo = "C:\Suporte Tecnico a Projetos\Georreferenciamento\" & "GEO" & xl01Cliente.Range("E15").Value & Year(Date) & Format(Date, "MM") & Format(Date, "DD") & Format(Now, "hhmmss") & ".xls"
    
    CarregamentoRapido True
    Application.DisplayAlerts = False
    
    'Criar o novo arquivo
    Workbooks.Add
    ActiveWorkbook.SaveAs Filename:=xlArquivo
    xlArquivo = ActiveWorkbook.Name
    Application.DisplayAlerts = False
    ActiveSheet.Name = "GEO"
    
    'Apagando as abas n|fffd|o utilizar
    For Each xlplan1 In Sheets
        If xlplan1.Name <> "GEO" Then xlplan1.Delete
    Next

    Application.DisplayAlerts = True

    '---- Salvar a Planilha GEO ----
    Sheets("GEO").Activate
    Workbooks("PlanilhaCusteio.xls").Activate
    Sheets("GEO").Activate
    Application.ScreenUpdating = False
    Cells.Select
    Selection.Copy
    Workbooks([xlArquivo]).Activate
    Sheets("GEO").Activate
    Range("A1").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlFormats
    Application.CutCopyMode = False
    ActiveWorkbook.Close SaveChanges:=True

    Workbooks("PlanilhaCusteio.xls").Activate
    protPlan.ProtegePlanilha
    
    'Omitir
    Sheets("GEO").Visible = xlSheetHidden
    
    'Retorno
    Sheets([xlPlan]).Activate
    Application.ScreenUpdating = False
        
    'Limpar a origem
    Sheets("Geodesica").Visible = xlSheetVisible
    Sheets("Geodesica").Select
    Range("CA101:DE101").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Sheets("Geodesica").Visible = xlSheetHidden
    
    Application.ScreenUpdating = False
    
    'Retorna a planilha de origem
    Sheets([xlPlan]).Activate
    
    Application.ScreenUpdating = True
    
    protPlan.FinalizaRotina
    Set protPlan = Nothing
    
    MsgBox "Arquivo gerado: " & Chr(10) & xlArqExp
    
    MsgOK = MsgBox("Deseja abrir o arquivo gerado neste instante?", vbYesNoCancel, "Abrir arquivo")
    If MsgOK = vbYes Then
       Workbooks.Open xlArqExp
    End If
    'Sprint 11 04/2017 - Permitir utilizar a |fffd|rea de transfer|fffd|ncia
    Boorel = False
    
'GSOL00966571 - RNM - FIM Relat|fffd|rio de Coordenandas Geodesicas

End Sub
'Sub RelCoodGeod() '(Optional ImpressaoDireta As Integer)
'    'GSOL00966571 - RNM - INI Relat|fffd|rio de Coordenandas Geodesicas
'    On Error GoTo ErroRelCoodGeod
'
'    Application.ScreenUpdating = False
'    Dim xlPlan As String
'    Dim xlplan1 As Variant
'    Dim flagArquivo As Boolean
'    Dim xlArquivo
'    Dim lngLinSel As Long, lngLinBD As Long
'    Dim protPlan As clsProtecao
'    Set protPlan = New clsProtecao
'
'    Dim ArrayRelCSV(30, 2) As Variant
'    'Sprint 11 04/2017 - Permitir utilizar a |fffd|rea de transfer|fffd|ncia
'    Boorel = True
'
'
'    flagArquivo = False
'    strFiltro = "Arquivo de Planilha (*.xls),*.xls"
'    Do While Not flagArquivo
'       xlArquivo = Application.GetSaveAsFilename("", [strFiltro], , ":: GERAR COORDENADAS")
'       If xlArquivo = False Then Exit Do
'       If ExisteArquivo(xlArquivo) Then
'          If MsgBox("J|fffd| existe um arquivo com este nome." & vbCrLf & _
'                    "Deseja sobrescrever?", vbQuestion + vbYesNo) = vbYes Then
'             flagArquivo = True
'          End If
'       Else
'          flagArquivo = True
'       End If
'    Loop
'    If Not flagArquivo Then
'       Set sb = Nothing
'       Set protPlan = Nothing
'       Exit Sub
'    End If
'    protPlan.IniciaRotina False
'
'    xlArqExp = Application.WorksheetFunction.Substitute(UCase(xlArquivo), ".xls", ".XLS")
'    xlArqExp = Application.WorksheetFunction.Proper(xlArqExp)
'    If ExisteArquivo(xlArqExp) Then Kill (xlArqExp)
'
'    xlPlan = ActiveSheet.Name
'    bd10Geodesica.Activate
'    protPlan.IniciaRotina True
'
'    Application.ScreenUpdating = False
'    bd10Geodesica.Visible = xlSheetVisible
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'    bd10Geodesica.Calculate
'
'    Range("CA101:DE101").Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
'
'    Application.Calculation = xlCalculationManual
'
'    For i = 101 To 131
'       ArrayRelCSV(i - 101, 0) = Cells([i], 76).value 'Coluna que deve ser gravado
'       ArrayRelCSV(i - 101, 1) = Cells([i], 77).value 'Valor de -1 (Formula) a posi|fffd||fffd|o
'       ArrayRelCSV(i - 101, 2) = Cells([i], 78).value 'Formula (texto)
'    Next i
'
'    For i = 0 To 30
'        Cells(101, ArrayRelCSV(i, 0)).Select
'        Cells(101, ArrayRelCSV(i, 0)).FormulaR1C1 = ArrayRelCSV(i, 2)
'        Cells(101, ArrayRelCSV(i, 0)).Select
'        Selection.Copy
'        ActiveSheet.Range(Cells(102, ArrayRelCSV(i, 0)), Cells(Range("B99").value + 100, ArrayRelCSV(i, 0))).Select
'        ActiveSheet.Paste
'        Application.CutCopyMode = False
'    Next i
'
'    Application.Calculation = xlCalculationAutomatic
'
'    'Tirar as formulas
'    Range("CA101:DE101").Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.Copy
'    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
'        :=False, Transpose:=False
'
'    'Carregar a planilha com os dados criados
'    Application.ScreenUpdating = False
'    Sheets("GEO").Visible = xlSheetVisible
'    Sheets("GEO").Select
'    protPlan.DesprotegePlanilha
'    Sheets("GEO").Range("A2:AE65536").ClearContents
'    bd10Geodesica.Visible = xlSheetVisible
'    Sheets("Geodesica").Select
'    Range("CA100:DE100").Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.Copy
'    'Descarregar os dados na GEO
'    Sheets("GEO").Select
'    Sheets("GEO").Range("A1").Select
'    ActiveSheet.Paste
'    Application.CutCopyMode = False
'
'    'Criar o diret|fffd|rio
'    On Error Resume Next
'    MkDir xlArqExp
'    'Criar o arquivo de sa|fffd|da
'    xlArquivo = xlArqExp
'
'    CarregamentoRapido True
'    Application.DisplayAlerts = False
'
'    'Criar o novo arquivo
'    Workbooks.Add
'    ActiveWorkbook.SaveAs Filename:=xlArquivo
'    xlArquivo = ActiveWorkbook.Name
'    Application.DisplayAlerts = False
'    ActiveSheet.Name = "GEO"
'
'    'Apagando as abas n|fffd|o utilizar
'    For Each xlplan1 In Sheets
'        If xlplan1.Name <> "GEO" Then xlplan1.Delete
'    Next
'
'    Application.DisplayAlerts = True
'
'    '---- Salvar a Planilha GEO ----
'    Sheets("GEO").Activate
'    Workbooks("PlanilhaCusteio.xls").Activate
'    Sheets("GEO").Activate
'    Application.ScreenUpdating = False
'    Cells.Select
'    Selection.Copy
'    Workbooks([xlArqExp]).Activate
'    Sheets("GEO").Activate
'    Range("A1").Select
'    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
'    Selection.PasteSpecial Paste:=xlFormats
'    Application.CutCopyMode = False
'   ' ActiveWorkbook.Close SaveChanges:=True
'
'    'Workbooks("PlanilhaPRONAF.xls").Activate
'    protPlan.ProtegePlanilha
'
'    'Omitir
'    Sheets("GEO").Visible = xlSheetHidden
'
'    'Retorno
'    Sheets([xlPlan]).Activate
'    Application.ScreenUpdating = False
'
'    'Limpar a origem
'    Sheets("Geodesica").Visible = xlSheetVisible
'    Sheets("Geodesica").Select
'    Range("CA101:DE101").Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
'    Sheets("Geodesica").Visible = xlSheetHidden
'
'    Application.ScreenUpdating = False
'
'    'Retorna a planilha de origem
'    Sheets([xlPlan]).Activate
'
'    Application.ScreenUpdating = True
'
'    protPlan.FinalizaRotina
'    Set protPlan = Nothing
'
'    MsgBox "Arquivo gerado: " & Chr(10) & xlArquivo
'
'    MsgOK = MsgBox("Deseja abrir o arquivo gerado neste instante?", vbYesNoCancel, "Abrir arquivo")
'    If MsgOK = vbYes Then
'       Workbooks.Open(xlArquivo).Worksheets("GEO").Activate
'       Range("A1").Select
'    End If
'    'Sprint 11 04/2017 - Permitir utilizar a |fffd|rea de transfer|fffd|ncia
'    Boorel = False
'    Exit Sub
''GSOL00966571 - RNM - FIM Relat|fffd|rio de Coordenandas Geodesicas
'ErroRelCoodGeod:
'
'If Err.Number <> 0 Then: MsgBox "Dados inv|fffd|lido para exporta|fffd||fffd|o", vbCritical, "Erro"
'
'
'End Sub


'DESABILITADO NA SPRINT 11 - 08/05/2017
'Sub RelCoodGeod()

'    Application.ScreenUpdating = False
'    Dim xlPlan As String
'    Dim lngLinSel As Long, lngLinBD As Long
'    Dim protPlan As clsProtecao
'    Dim LI As Integer
'    Set protPlan = New clsProtecao
'
'    xlPlan = ActiveSheet.Name
'    protPlan.IniciaRotina True
'    xl9RelGeod.Activate
'    protPlan.DesprotegePlanilha
'    Range("B10:G57000").ClearContents
'    Range("B10:G57000").ClearFormats
'
'    bd10Geodesica.Activate
'    protPlan.DesprotegePlanilha
'    bd10Geodesica.Calculate
'
'    'Adequar o range das linhas de acordo com a quantidade de Gleba/Pontos
'    'SQ_Geodesica
'     ActiveWorkbook.Names.Add Name:="SQ_Geodesica", RefersToR1C1:= _
'                 "=Geodesica!R100C1:R" & bd10Geodesica.Range("B99").value + 100 & "C13"
'
'    'Ordenar para impress|fffd|o.
'    frmGeodesica.Ordenar_Geodesica "SQ_Geodesica", "Geodesica", "A100:M" & bd10Geodesica.Range("B99").value + 100, "B100:B" & bd10Geodesica.Range("B99").value + 100
'
'    Dim SqInv, SqGlb, SqPts As String
'    Dim BooGrava As Boolean
'
'    lngLinSel = 10
'    lngLinBD = 14
'    LI = 101
'    bd1.Activate
'    protPlan.DesprotegePlanilha
'    bd1.Range("cb13").Calculate
'    bd1.Range("CC14:CF57000").ClearContents
'    FormatRel
'    SqInv = vbNullString
'    SqGlb = vbNullString
'    SqPts = vbNullString
'
'    Do While bd10Geodesica.Range("C" & [LI]).value <> vbNullString
'      DoEvents
'
'      If CInt(bd10Geodesica.Range("C" & [LI]).value) <> SqInv Then
'
'        bd1.Activate
'        If lngLinBD <> 14 Then
' '          bd1.Activate
' '          xl9RelGeod.Activate
'           bd1.Range("cb13").Calculate
'           ActiveWorkbook.Names.Add Name:="Template_Pontos", RefersToR1C1:= _
'           "=BD1!R13C80:R" & bd1.Range("cb13").value + 12 & "C84"
'
'           'Tipo
'           '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'           lngLinSel = GravaRelGeodesica("Template_Pontos", 2, lngLinSel)
'           bd1.Range("CC14:CF" & bd1.Range("cb13").value + 13).ClearContents
'
'           Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'        End If
'
'
'        SqInv = bd10Geodesica.Range("C" & [LI]).value
'        bd1.Activate
'        bd1.Range("CB3").value = bd10Geodesica.Range("C" & [LI]).value                     ' Item de Invers|fffd|o
'        bd1.Range("CC3").Calculate
'        bd1.Range("CD3").value = bd10Geodesica.Range("D" & [LI]).value                     ' Nome Item de Invers|fffd|o
'        bd1.Range("CD3").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        bd1.Range("CD4").value = bd10Geodesica.Range("E" & [LI]).value                     'C|fffd|digo de Empreendimento
'        bd1.Range("CD4").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        bd1.Range("CD5").FormulaLocal = "=SE(|fffd|ERROS(PROCV(" & bd10Geodesica.Range("E" & [LI]).value & ";LISTAORCA_NMEMPREE;2;FALSO));" & "N|fffd|o Localizado" & ";PROCV(" & bd10Geodesica.Range("E" & [LI]).value & ";LISTAORCA_NMEMPREE;2;FALSO))"        'C|fffd|digo de Empreendimento"
'        bd1.Range("CD5").Calculate
'        bd1.Range("CD5").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        bd1.Range("CD6").value = bd10Geodesica.Range("D" & [SqInv] + 1).value              'Nome do Munic|fffd|pio
'        bd1.Range("CD6").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        bd1.Range("CD7").value = bd10Geodesica.Range("E" & [SqInv] + 1).value                 '|fffd|rea
'        bd1.Range("CD7").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#,##0.00"
'        'Tipo
'        '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'        lngLinSel = GravaRelGeodesica("Template_Inversao", 0, lngLinSel)
'
'        xl9RelGeod.Activate
'        Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'        SqGlb = vbNullString
'        SqPts = vbNullString
'        lngLinBD = 14
'      End If
'
'      If CInt(bd10Geodesica.Range("F" & [LI]).value) <> SqGlb Then
'
'        bd1.Activate
'        If lngLinBD <> 14 Then
'           bd1.Activate
'           xl9RelGeod.Activate
'           bd1.Range("cb13").Calculate
'           ActiveWorkbook.Names.Add Name:="Template_Pontos", RefersToR1C1:= _
'           "=BD1!R13C80:R" & bd1.Range("cb13").value + 12 & "C84"
'
'           'Tipo
'           '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'           lngLinSel = GravaRelGeodesica("Template_Pontos", 2, lngLinSel)
'           bd1.Range("CC14:CF" & bd1.Range("cb13").value + 13).ClearContents
'
'           Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'
'        End If
'
'        SqGlb = bd10Geodesica.Range("F" & [LI]).value
'        bd1.Activate
'        bd1.Range("CD9").value = bd10Geodesica.Range("F" & [LI]).value                     ' SEQUENCIAL DA GLEBA
'        bd1.Range("CD9").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "00"
'        bd1.Range("CD10").value = bd10Geodesica.Range("G" & [LI]).value                     ' Tipo de Gleba
'        bd1.Range("CD9").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        bd1.Range("CD11").value = bd10Geodesica.Range("H" & [LI]).value                    ' |fffd|rea n|fffd|o Cultivada
'        bd1.Range("CD11").Select
'        Selection.HorizontalAlignment = xlLeft
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#,##0.00"
'        xl9RelGeod.Activate
'        'Tipo
'        '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'        lngLinSel = GravaRelGeodesica("Template_Gleba", 1, lngLinSel)
'
'        xl9RelGeod.Activate
'        Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'        SqPts = vbNullString
'        lngLinBD = 14
'      End If
'
'      'If CInt(bd10Geodesica.Range("I" & [LI]).Value) <> SqPts Then
'      '  SqPts = bd10Geodesica.Range("I" & [LI]).Value
'      'End If
'
'      If bd10Geodesica.Range("I" & [LI]).value <> SqPts And _
'         CInt(bd10Geodesica.Range("F" & [LI]).value) = SqGlb And _
'         CInt(bd10Geodesica.Range("C" & [LI]).value) = SqInv Then
'        bd1.Activate
'        SqPts = bd10Geodesica.Range("I" & [LI]).value
'        bd1.Range("CC" & [lngLinBD]).value = bd10Geodesica.Range("I" & [LI]).value         ' SEQUENCIAL DA Pontos
'        bd1.Range("CC" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "00"
'        bd1.Range("CD" & [lngLinBD]).value = bd10Geodesica.Range("J" & [LI]).value         ' Latitude
'        bd1.Range("CD" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CE" & [lngLinBD]).value = bd10Geodesica.Range("K" & [LI]).value         ' Longitude
'        bd1.Range("CE" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CF" & [lngLinBD]).value = bd10Geodesica.Range("L" & [LI]).value         ' Altitude
'        bd1.Range("CF" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#,##0.00;[Red]-##0.00"
'        xl9RelGeod.Activate
'        lngLinBD = lngLinBD + 1
'        BooGrava = False
'      ElseIf CInt(bd10Geodesica.Range("F" & [LI]).value) <> SqGlb And _
'             CInt(bd10Geodesica.Range("C" & [LI]).value) = SqInv Then
'        bd1.Activate
'        SqPts = bd10Geodesica.Range("I" & [LI]).value
'        bd1.Range("CC" & [lngLinBD]).value = bd10Geodesica.Range("I" & [LI]).value         ' SEQUENCIAL DA Pontos
'        bd1.Range("CC" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "00"
'        bd1.Range("CD" & [lngLinBD]).value = bd10Geodesica.Range("J" & [LI]).value         ' Latitude
'        bd1.Range("CD" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CE" & [lngLinBD]).value = bd10Geodesica.Range("K" & [LI]).value         ' Longitude
'        bd1.Range("CE" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CF" & [lngLinBD]).value = bd10Geodesica.Range("L" & [LI]).value         ' Altitude
'        bd1.Range("CF" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#,##0.00;[Red]-##0.00"
'        xl9RelGeod.Activate
'        lngLinBD = lngLinBD + 1
'        BooGrava = False
'      ElseIf CInt(bd10Geodesica.Range("C" & [LI]).value) <> SqInv Then
'        bd1.Activate
'        SqPts = bd10Geodesica.Range("I" & [LI]).value
'        bd1.Range("CC" & [lngLinBD]).value = bd10Geodesica.Range("I" & [LI]).value         ' SEQUENCIAL DA Pontos
'        bd1.Range("CC" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "00"
'        bd1.Range("CD" & [lngLinBD]).value = bd10Geodesica.Range("J" & [LI]).value         ' Latitude
'        bd1.Range("CD" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CE" & [lngLinBD]).value = bd10Geodesica.Range("K" & [LI]).value         ' Longitude
'        bd1.Range("CE" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#0.00000000000;[Red]-#0.00000000000"
'        bd1.Range("CF" & [lngLinBD]).value = bd10Geodesica.Range("L" & [LI]).value         ' Altitude
'        bd1.Range("CF" & [lngLinBD]).Select
'        Selection.HorizontalAlignment = xlCenter
'        Selection.VerticalAlignment = xlBottom
'        Selection.NumberFormat = "#,##0.00;[Red]-##0.00"
'        xl9RelGeod.Activate
'        lngLinBD = lngLinBD + 1
'        BooGrava = True
'      End If
'
'      If BooGrava = True Then
'
'       bd1.Range("cb13").Calculate
'       ActiveWorkbook.Names.Add Name:="Template_Pontos", RefersToR1C1:= _
'                 "=BD1!R13C80:R" & bd1.Range("cb13").value + 12 & "C83"
'
'        'Tipo
'        '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'        lngLinSel = GravaRelGeodesica("Template_Pontos", 2, lngLinSel)
'        bd1.Range("CC14:CF" & bd1.Range("cb13").value + 13).ClearContents
'
'        Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'
'      End If
'
'
'      LI = LI + 1
'    Loop
'
'    If lngLinBD <> 14 Then
'       bd1.Range("cb13").Calculate
' '      bd1.Activate
' '      xl9RelGeod.Activate
'       ActiveWorkbook.Names.Add Name:="Template_Pontos", RefersToR1C1:= _
'       "=BD1!R13C80:R" & bd1.Range("cb13").value + 12 & "C84"
'
'       'Tipo
'       '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
'       lngLinSel = GravaRelGeodesica("Template_Pontos", 2, lngLinSel)
'
'       Sheets("RelGeodesica").Range("B" & [lngLinSel]).Select
'
'    End If
'
'
'    ActiveSheet.PageSetup.PrintArea = "C1:F" & [lngLinSel]
'    ActiveSheet.PageSetup.PrintTitleRows = "$1:$9"
'    ActiveSheet.PageSetup.Zoom = 80
'    ActiveSheet.PageSetup.FitToPagesWide = 1
'    ActiveSheet.PageSetup.FitToPagesTall = 1
'    Application.Dialogs(xlDialogPrint).Show
'    xl9RelGeod.Activate
'
'    protPlan.ProtegePlanilha
'    Sheets([xlPlan]).Activate
'    protPlan.FinalizaRotina
'    Set protPlan = Nothing
'
'End Sub
Function GravaRelGeodesica(ByVal Referencia As String, Tipo As Byte, Linha As Long) As Long

        Application.GoTo Reference:=Referencia
        Selection.Copy
        Sheets("relGeodesica").Activate
        Sheets("relGeodesica").Range("B" & [Linha]).Select
             Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
        ActiveSheet.Paste
       
        bd1.Range("cb13").Calculate
       
        'Tipo
        '0 - Invers|fffd|o // 1 - Gleba // 2 - Pontos
        If Tipo = 0 Then
           Linha = Linha + 6
           Sheets("RelGeodesica").Range("B" & [Linha]).Select
           
        ElseIf Tipo = 1 Then
           Linha = Linha + 4
           lngLinBD = 14
           Sheets("RelGeodesica").Range("B" & [Linha]).Select
        Else
           Linha = Linha + bd1.Range("cb13").value + 1
           Sheets("RelGeodesica").Range("B" & [Linha]).Select
           lngLinBD = 14
        End If

        GravaRelGeodesica = Linha

End Function




Sub AtualizaTela()
    Dim lngLinCel As Long
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.IniciaRotina False
    'GSOL00724908 - RNM  INI
    If ActiveSheet.Name = "EMPREE_REL" Then
        'Acomodar a informa|fffd||fffd|o nas c|fffd|lulas
        Rows("10:19").Select
        Rows("10:19").EntireRow.AutoFit
        
        Sheets("EMPREE_REL").Visible = xlSheetVisible
        Application.ScreenUpdating = False
        Dim Ini, Fim As Byte
        
        Rows("10:19").Select
        Selection.EntireRow.Hidden = False

        For lngLinCel = 10 To 19
            If Range("D" & lngLinCel).value = "" Then
               If Ini = 0 Then
                  Ini = lngLinCel
                  Fim = lngLinCel
               End If
               If Fim + 1 = lngLinCel Then Fim = lngLinCel
            Else
               If (Ini <> 0) And (Fim <> 0) Then
                    Rows(Ini & ":" & Fim).Select
                    Selection.EntireRow.Hidden = True
                    Ini = 0
                    Fim = 0
               End If
            End If
            If lngLinCel = 19 Then
              If (Ini <> 0) And (Fim <> 0) Then
                  Rows(Ini & ":" & Fim).Select
                  Selection.EntireRow.Hidden = True
              End If
            End If
        Next lngLinCel
 '   ElseIf ActiveSheet.Name = "Coord.Geodesica" Then
 '      Call InserirResumoGleba
    End If
    
    If ActiveSheet.Name = "relProposta" Then
        protPlan.IniciaRotina False
        Dim lngLinSel As Long
        For lngLinSel = 33 To 52
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 57 To 71
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel

        For lngLinSel = 87 To 106
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel

        For lngLinSel = 118 To 121
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel

        For lngLinSel = 130 To 159
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel

        For lngLinSel = 174 To 209
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 232 To 242
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               If lngLinSel > 225 Then Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        
        'GSOL00094929
        For lngLinSel = 243 To 254
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               If lngLinSel > 237 Then Range("A" & [lngLinSel]).EntireRow.AutoFit
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel

        'GSOL00083049
        If Range("A258").value = 1 Then
           Range("A258").EntireRow.Hidden = False
        Else
           Range("A258").EntireRow.Hidden = True
        End If

        Range("Z210").EntireRow.AutoFit
        Range("Z216").EntireRow.AutoFit
        protPlan.FinalizaRotina
    End If
    
    protPlan.FinalizaRotina
    Set protPlan = Nothing

End Sub


Sub FormatRel()

    Range("CC3:CF3").Select
    With Selection.Font
        .Name = "Calibri"
        .FontStyle = "Negrito"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    Range("CC9:CF9").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.14996795556505
        .PatternTintAndShade = 0
    End With
    Range("D5").Select
    ActiveCell.FormulaR1C1 = ""
    Range("CC13:CF13").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
    End With
    Range("J11").Select

End Sub
Attribute VB_Name = "xl00Busca"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
        Me.Visible = xlSheetVisible
        Me.Select
End Sub

Private Sub Worksheet_Deactivate()
        Me.Visible = xlSheetVeryHidden
End Sub
Attribute VB_Name = "xl00Critica"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "xl00RelEmpr"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
        Me.Visible = xlSheetVisible
        Me.Select
End Sub


Private Sub Worksheet_Deactivate()
        Me.Visible = xlSheetVeryHidden
End Sub


Attribute VB_Name = "xl0Menu"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

















Private Sub Worksheet_Activate()
        ocultaBarras
End Sub

Attribute VB_Name = "xl14Geodesica"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Public BoAlt As Boolean

Private Sub Worksheet_Activate()

  Dim protPlan As clsProtecao
  Set protPlan = New clsProtecao

  'Limpar tela para nova exibi|fffd||fffd|o
  BoAlt = False
  Boorel = False
  Application.ScreenUpdating = False
  
  Call LimparGlebasSemInv
  Call CargaIniGeodesica    'Carrega as refer|fffd|ncias
  Application.ScreenUpdating = False

  xl14Geodesica.Activate
  
  xl2Prop.Calculate
 
  If Range("E4").value = vbNullString Then
     protPlan.FinalizaRotina
     Set protPlan = Nothing
     Exit Sub
  End If
   
   CargaGlebaTela CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), CInt(xl14Geodesica.Range("M15").value)
   CarregamentoRapido False
   xl14Geodesica.Range("N17").value = xl14Geodesica.Range("M15").value
   
  
'  If flagBusca = 0 Then
'    Application.Calculation = xlCalculationManual
'    'Limpar os dados iniciais
'    xl14Geodesica.Range("E4:I4").ClearContents   ' Invers|fffd|o
'    xl14Geodesica.Range("E4").Value = vbNullString  'Invers|fffd|o
'    xl14Geodesica.Range("N17").Value = 0            'Nro da Gleba
'    xl14Geodesica.Range("E12").Value = vbNullString '|fffd|rea n|fffd|o cultivada
'    xl14Geodesica.Range("E13").Value = vbNullString 'Formato da Gleba
'    xl14Geodesica.Range("G21:I80").ClearContents    'Valor dos Pontos
'    Application.Calculation = xlCalculationAutomatic
'  End If
  BoAlt = False
  'Application.ScreenUpdating = True
  AtualizaTela
  
  Application.Calculation = xlCalculationAutomatic
  
  protPlan.FinalizaRotina
  Set protPlan = Nothing
  'CarregamentoRapido False
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

        If ActiveSheet.Name <> "Coord.Geodesica" Then Exit Sub
        If flagBusca = 1 Then Exit Sub

        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao

        If Target.Address = "$E$4" Then
           If Range("E4").value = vbNullString Then GoTo Fim
           protPlan.IniciaRotina False
           flagBusca = 1
           CarregamentoRapido True
           Call CargaIniGeodesica
           Call CargaGlebaTela(CInt(xl14Geodesica.Range("SQ_Inv_Tela").value), CInt(xl14Geodesica.Range("M15").value))
           CarregamentoRapido False
           BoAlt = False

           xl14Geodesica.Range("N17").value = xl14Geodesica.Range("M15").value
           xl14Geodesica.Range("G21").Select
           
           flagBusca = 0
           protPlan.FinalizaRotina
           Set protPlan = Nothing
           Exit Sub
        End If

        If Target.Address = "$E$12" Or Target.Address = "$E$13" Then
           BoAlt = True
        End If

        If Target.Row >= 21 And Target.Row <= 80 Then
          If Target.Column >= 7 And Target.Column <= 9 Then
            If flagBusca = 1 Then Exit Sub
                Dim iCol, iLin As Integer
                iCol = Target.Column
                iLin = Target.Row
                BoAlt = True
                protPlan.DesprotegePlanilha
                Application.ScreenUpdating = False
                CarregamentoRapido True
                For i = 21 To 80
                    Range("G" & [i]).Locked = False
                    Range("G" & [i]).Select
                    Selection.NumberFormat = "0.00000000000_ ;[Red]-0.00000000000 "
                    Selection.Font.Name = "Arial"
                    Selection.Font.Size = 10
                    Selection.FormatConditions.Delete
                    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$S$" & i & "=-1"
                    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                    With Selection.FormatConditions(1).Font
                        .Bold = True
                        .Italic = False
                        .Color = -16776961
                        .TintAndShade = 0
                    End With
                    Selection.FormatConditions(1).StopIfTrue = True
                    Range("H" & i).Locked = False
                    Range("H" & i).Select
                    Selection.NumberFormat = "0.00000000000_ ;[Red]-0.00000000000 "
                    Selection.Font.Name = "Arial"
                    Selection.Font.Size = 10
                    Selection.FormatConditions.Delete
                    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$T$" & i & "=-1"
                    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                    With Selection.FormatConditions(1).Font
                        .Bold = True
                        .Italic = False
                        .Color = -16776961
                        .TintAndShade = 0
                    End With
                    Selection.FormatConditions(1).StopIfTrue = True
                    Range("I" & i).Locked = False
                    Range("I" & i).Select
                    Selection.NumberFormat = "0.00_ ;[Red]-0.00 "
                    Selection.Font.Name = "Arial"
                    Selection.Font.Size = 10
                    Selection.FormatConditions.Delete
                    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$U$" & i & "=-1"
                    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                    With Selection.FormatConditions(1).Font
                        .Bold = True
                        .Italic = False
                        .Color = -16776961
                        .TintAndShade = 0
                    End With
                    Selection.FormatConditions(1).StopIfTrue = True
                Next i

                Cells(iLin + 1, iCol).Select
                Application.ScreenUpdating = True

          End If
        End If
Fim:
        flagBusca = 0
        CarregamentoRapido False
        protPlan.FinalizaRotina
        Set protPlan = Nothing

End Sub


Private Sub Worksheet_Deactivate()

'    If BoAlt = True Then
'       resp = MsgBox("Houve altera|fffd||fffd|o da Gleba! Deseja Salvar?", vbQuestion + vbYesNo, "Altera|fffd||fffd|o de Coord.Geod|fffd|sica")
'       If resp = 6 Then
'          xlPlan = ActiveSheet.Name
'          xl14Geodesica.Activate
'          Call InserirGlebaTela
'          Sheets(xlPlan).Activate
'          BoAlt = False
'       Else
'          Call LimparGlebaTela
'          BoAlt = True
'       End If
'
'    End If
    flagBusca = 0
End Sub

Attribute VB_Name = "xl15RelGeodesica"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "xl1Orca"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdBtn01, 452, 1, MSForms, CommandButton"
'Private Sub cmdbtn_ExcluirParcelas_Click()
'    If MsgBox("Confirma a exclus|fffd|o do(s) item(ns) referente(s) |fffd|(s) parcela(s) selecionada(s)?", vbQuestion + vbOKCancel, "[Or|fffd|amentos] - Exclus|fffd|o de Parcelas") = vbOK Then
'      Excluir_Parcelas xl1Orca.Range("A11").value, xl1Orca.Range("M91").value
'End If
'End Sub

Private Sub CmdBtn01_Click()
    'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - INI
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    protPlan.DesprotegePlanilha
    
    'Param.01 (Nro do Or|fffd|amento), Param.02 (CodEmpreendimento),Param.03 (CodSistema Produ|fffd||fffd|o)
    Chama_Empree Format(Range("A11").value, "00"), Range("BacenOrca" & Format(Range("A11").value, "00")).value, "0"
    '20140313 -RNM Foi substitu|fffd|do a linha acima pelo par|fffd|metro Sistema de produ|fffd||fffd|o = 0), devido inconsist|fffd|ncia do Componente.
    '          Range("SitProd" & Format(Range("A11").Value, "00")).Value
    If xl2Prop.Range("flagPROAGRO").value <> 0 Then
       Range("CULTIVAR_COD" & Format(Range("A11").value, "00")).Select
    End If
    
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Private Sub Worksheet_Activate()

    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    
    If flagBusca = 1 Then Exit Sub
    AtualizaOrca

    Extrativismo CInt(xl1Orca.Range("A11").value)
    TelaOrcaPinta CInt(xl1Orca.Range("A11").value)
    
    protPlan.ProtegePlanilha
    Set protPlan = Nothing
End Sub

Private Sub Worksheet_Calculate()
    If ActiveSheet.Name <> "Orcamento" Then Exit Sub
    'If ActiveCell.Value = vbNullString Then Exit Sub
    If flagBusca = 1 Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao

    If ActiveCell.Address = "$D$11" Then 'Atividade Or|fffd|amento 1
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("D12:G12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("D11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("L11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("D11").Value <> vbNullString Then
       '   Range("L12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                              Range("L11").Value & "_COD,2,0))"
       '   Range("M12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                              Range("L11").Value & "_COD,4,0))"
       'End If
       'Range("D12:G12").ClearContents
       'GSOL00131364
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimentO
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 1
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$U$11" Then 'Atividade Or|fffd|amento 2
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("U12:X12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("U11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("AC11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '      .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("U11").Value <> vbNullString Then
       '   Range("AC12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                              Range("AC11").Value & "_COD,2,0))"
       '   Range("AD12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                              Range("AC11").Value & "_COD,4,0))"
       'End If
       'Range("U12:X12").ClearContents
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 2
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$AL$11" Then 'Atividade Or|fffd|amento 3
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("AL12:AO12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("AL11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("AT11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("AL11").Value <> vbNullString Then
       '   Range("AT12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("AT11").Value & "_COD,2,0))"
       '   Range("AU12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("AT11").Value & "_COD,4,0))"
       'End If
       'Range("AL12:AO12").ClearContents
       'GSOL00131364
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 3
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$BC$11" Then 'Atividade Or|fffd|amento 4
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("BC12:BF12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("BC11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("BK11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("BC11").Value <> vbNullString Then
       '   Range("BK12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("BK11").Value & "_COD,2,0))"
       '   Range("BL12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("BK11").Value & "_COD,4,0))"
       'End If
       'Range("BC12:BF12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 4
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$BT$11" Then 'Atividade Or|fffd|amento 5
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("BT12:BW12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("BT11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("CB11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("BT11").Value <> vbNullString Then
       '   Range("CB12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("CB11").Value & "_COD,2,0))"
       '   Range("CC12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("CB11").Value & "_COD,4,0))"
       'End If
       'Range("BT12:BW12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 5
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$CK$11" Then 'Atividade Or|fffd|amento 6
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("CK12:CN12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("CK11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("CS11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("CK11").Value <> vbNullString Then
       '   Range("CS12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("CS11").Value & "_COD,2,0))"
       '   Range("CT12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("CS11").Value & "_COD,4,0))"
       'End If
       'Range("CK12:CN12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 6
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$DB$11" Then 'Atividade Or|fffd|amento 7
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("DB12:DE12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("DB11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("DJ11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("DB11").Value <> vbNullString Then
       '   Range("DJ12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("DJ11").Value & "_COD,2,0))"
       '   Range("DK12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("DJ11").Value & "_COD,4,0))"
       'End If
       'Range("DB12:DE12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 7
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$DS$11" Then 'Atividade Or|fffd|amento 8
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("DS12:DV12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("DS11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("EA11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("DS11").Value <> vbNullString Then
       '   Range("EA12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("EA11").Value & "_COD,2,0))"
       '   Range("EB12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("EA11").Value & "_COD,4,0))"
       'End If
       'Range("DS12:DV12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 8
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$EJ$11" Then 'Atividade Or|fffd|amento 9
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("EJ12:EM12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("EJ11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("ER11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("EJ11").Value <> vbNullString Then
       '   Range("ER12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("ER11").Value & "_COD,2,0))"
       '   Range("ES12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("ER11").Value & "_COD,4,0))"
       'End If
       'Range("EJ12:EM12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 9
       flagBusca = 0
       
    ElseIf ActiveCell.Address = "$FA$11" Then 'Atividade Or|fffd|amento 10
       flagBusca = 1
       protPlan.DesprotegePlanilha
       Range("FA12:FD12").Select
       'GSOL00660171 - 2013/05/26 - INI Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'With Selection.Validation
       '     .Delete
       '     If Range("FA11").Value = vbNullString Then
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="Selecione a Atividade/Finalidade"
       '     Else
       '        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
       '             xlBetween, Formula1:="=listaBACEN" & Range("FI11").Value
       '     End If
       '     .IgnoreBlank = True
       '     .InCellDropdown = True
       '     .InputTitle = ""
       '     .ErrorTitle = ""
       '     .InputMessage = "Selecione uma das op|fffd||fffd|es ou digite alguns caracteres e tecle <enter> para pesquisa."
       '     .ErrorMessage = ""
       '     .ShowInput = True
       '     .ShowError = False
       'End With
       'If Range("FA11").Value <> vbNullString Then
       '   Range("FI12").FormulaR1C1 = "=IF(RC[-8]="""","""",VLOOKUP(RC[-8],listaBACEN" & _
       '                               Range("FI11").Value & "_COD,2,0))"
       '   Range("FJ12").FormulaR1C1 = "=IF(RC[-9]="""","""",VLOOKUP(RC[-9],listaBACEN" & _
       '                               Range("FI11").Value & "_COD,4,0))"
       'End If
       'Range("FA12:FD12").ClearContents
       'GSOL00660171 - 2013/05/26 - FIM Desabilitar busca de c|fffd|digo via PROCV, devido a inclus|fffd|o do componente de empreendimento
       'GSOL00131364
       protPlan.DesprotegePlanilha
       limpaCampoCultivar 10
       flagBusca = 0
    End If
    
    'protPlan.ProtegePlanilha
    Set protPlan = Nothing

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim protPlan As clsProtecao
    
    If Target.Row = 7 And Target.Column = (17 * (xl1Orca.Range("A11").value - 1) + 9) Then
      Cells(Target.Row + 5, Target.Column - 1).Select
    End If
    
    If Target.Row = 7 And Target.Column = 10 Then
       Set protPlan = New clsProtecao
       If flagBusca = 1 Then Exit Sub
       protPlan.IniciaRotina True
       flagBusca = 1
       ordenaMENU_ORCA
       TelaOrca CInt(Range("A11").value)
       AjusteTelaOrca CInt(Range("A11").value)
       TelaOrcaPinta CInt(Range("a11").value)
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
       Exit Sub
    End If
    
    Dim FormulaName, FormulaRefer As String
    If Left(Target.Address, 5) = "$A$11" Then
      MsgBox ("Alterando or|fffd|amento")
    End If
    
    
    If Left(Target.Address, 5) = "$D$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("D12").value = vbNullString Then
            limpaCampoCultivar 1  'GSOL00695920
            Exit Sub
       End If
       'If Range("L11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("D12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "D12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("L11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00131364
       Calculate
       exibeCultivar 1
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 5) = "$U$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("U12").value = vbNullString Then
         limpaCampoCultivar 2  'GSOL00695920
         Exit Sub
       End If
       'If Range("AC11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("U12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "U12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("AC11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM
       
       'GSOL00131364
       Calculate
        exibeCultivar 2
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$AL$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("AL12").value = vbNullString Then
         limpaCampoCultivar 3  'GSOL00695920
         Exit Sub
       End If
       'If Range("AT11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("AL12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "AL12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("AT11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM
       If Not IsError(Range("AU12").value) Then
          protPlan.DesprotegePlanilha
          If Range("AU12").value <> "0" Then Range("AN16").value = Range("AU12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 3
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$BC$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("BC11").value = vbNullString Then
         limpaCampoCultivar 4  'GSOL00695920
         Exit Sub
       End If
       'If Range("BK11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("BC12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "BC12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("BK11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("BL12").value) Then
          protPlan.DesprotegePlanilha
          If Range("BL12").value <> "0" Then Range("BE16").value = Range("BL12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 4
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If
    
    If Left(Target.Address, 6) = "$BT$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("BT12").value = vbNullString Then
         limpaCampoCultivar 5  'GSOL00695920
         Exit Sub
       End If
       'If Range("CB11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("BT12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "BT12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("CB11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM
       If Not IsError(Range("CC12").value) Then
          protPlan.DesprotegePlanilha
          If Range("CC12").value <> "0" Then Range("BV16").value = Range("CC12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 5
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$CK$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("CK12").value = vbNullString Then
         limpaCampoCultivar 6  'GSOL00695920
         Exit Sub
       End If
       'If Range("CS11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("CK12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "CK12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("CS11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("CT12").value) Then
          protPlan.DesprotegePlanilha
          If Range("CT12").value <> "0" Then Range("CM16").value = Range("CT12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 6
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$DB$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("DB12").value = vbNullString Then
         limpaCampoCultivar 7  'GSOL00695920
         Exit Sub
       End If
       'If Range("DJ11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("DB12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "DB12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("DJ11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("DK12").value) Then
          protPlan.DesprotegePlanilha
          If Range("DK12").value <> "0" Then Range("DD16").value = Range("DK12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 7
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$DS$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("DS12").value = vbNullString Then
         limpaCampoCultivar 8  'GSOL00695920
         Exit Sub
       End If
       'If Range("EA11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("DS12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "DS12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("EA11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("EB12").value) Then
          protPlan.DesprotegePlanilha
          If Range("EB12").value <> "0" Then Range("DU16").value = Range("EB12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 8
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$EJ$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("EJ12").value = vbNullString Then
         limpaCampoCultivar 9  'GSOL00695920
         Exit Sub
       End If
       'If Range("ER11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("EJ12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "EJ12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("ER11").Value & "_COD").Select
       'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("ES12").value) Then
          protPlan.DesprotegePlanilha
          If Range("ES12").value <> "0" Then Range("EL16").value = Range("ES12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 9
       flagBusca = 0
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If

    If Left(Target.Address, 6) = "$FA$12" Then
       If flagBusca = 1 Then Exit Sub
       If Range("FA12").value = vbNullString Then
         limpaCampoCultivar 10 'GSOL00695920
         Exit Sub
       End If
       'If Range("FI11").Value = "-1" Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa INI
       'celBusca = Range("FA12").Value
       'planBusca = ActiveSheet.Name
       'resBusca = "FA12"
       'xl99Auxi.Select
       'ProtPlan.DesprotegePlanilha
       'xl99Auxi.Range("listaBACEN" & xl1Orca.Range("FI11").Value & "_COD").Select
    'Selection.Offset(-1, 0).Resize(Selection.Rows.Count + 1).Select
       'FormulaName = "=Auxiliar!R3C" & ActiveCell.Column & ":R" & Selection.Rows.Count + 2 & "C" & ActiveCell.Column + 1
       'FormulaRefer = Application.ConvertFormula(Formula:=FormulaName, FromReferenceStyle:=xlR1C1, ToReferenceStyle:=xlA1)
       'ActiveWorkbook.Names.Add Name:="listaBACEN_COD1", RefersTo:=FormulaRefer
       'filtraBacen
       'GSOL00660171 - 20130524 RNM Inclus|fffd|o do Componente de Empreendimentos Novos - comentar para n|fffd|o chamar mais a tela de pesquisa FIM

       If Not IsError(Range("FJ12").value) Then
          protPlan.DesprotegePlanilha
          If Range("FJ12").value <> "0" Then Range("FC16").value = Range("FJ12").value

       End If
       'GSOL00131364
       Calculate
        exibeCultivar 10
       flagBusca = 0
    ' define os booleanos PROAGRO
    contrataPROAGRO = xl2Prop.Range("flagPROAGRO") <> "0"
    programaPRONAF = IIf(InStr(xl2Prop.Range("E46"), "PRONAF") > 0, True, False)
    proagroMAIS = IIf(InStr(xl2Prop.Range("E48"), "mais") > 0, True, False)
    xl1Orca.Range("D14").EntireRow.Hidden = Not contrataPROAGRO
    xl1Orca.Range("D14").Locked = False
       
       protPlan.FinalizaRotina
       Set protPlan = Nothing
    End If
    '- For|fffd|a valores em duas casas decimais
    
    If flagBusca = 1 Then Exit Sub
    If Target.Row >= 16 And Target.Row <= 84 Then
       If Target.Column >= 6 And Target.Column <= 7 Or _
          Target.Column >= 23 And Target.Column <= 24 Or _
          Target.Column >= 40 And Target.Column <= 41 Or _
          Target.Column >= 57 And Target.Column <= 58 Or _
          Target.Column >= 74 And Target.Column <= 75 Or _
          Target.Column >= 91 And Target.Column <= 92 Or _
          Target.Column >= 108 And Target.Column <= 109 Or _
          Target.Column >= 125 And Target.Column <= 126 Or _
          Target.Column >= 142 And Target.Column <= 143 Or _
          Target.Column >= 159 And Target.Column <= 160 Then
          If Cells(Target.Row, Target.Column).text = "" Then Exit Sub
          If Not IsNumeric(Cells(Target.Row, Target.Column).value) Then Exit Sub
          flagBusca = 1
          Set protPlan = New clsProtecao
          If ActiveSheet.ProtectContents Then protPlan.DesprotegePlanilha
          Cells(Target.Row, Target.Column).FormulaR1C1 = Application.WorksheetFunction.Round(Cells(Target.Row, Target.Column).value, 2)
          'protPlan.ProtegePlanilha
          flagBusca = 0
          Set protPlan = Nothing
       End If
    End If
    
    'GSOL00982015 - Inclus|fffd|o de busca de atividade no or|fffd|amento
    If Target.Row >= 16 And Target.Row <= 18 Then
      If Target.Column >= 8 And Target.Column <= 10 Or _
         Target.Column >= 25 And Target.Column <= 27 Or _
         Target.Column >= 42 And Target.Column <= 44 Or _
         Target.Column >= 59 And Target.Column <= 61 Or _
         Target.Column >= 76 And Target.Column <= 78 Or _
         Target.Column >= 93 And Target.Column <= 95 Or _
         Target.Column >= 109 And Target.Column <= 111 Or _
         Target.Column >= 127 And Target.Column <= 129 Or _
         Target.Column >= 143 And Target.Column <= 145 Or _
         Target.Column >= 161 And Target.Column <= 163 Then
            If flagBusca = 1 Then Exit Sub
            If Cells(Target.Row, Target.Column).text = "" Then Exit Sub
            Set protPlan = New clsProtecao
            protPlan.IniciaRotina True
            flagBusca = 1
            celBusca = Cells(Target.Row, Target.Column).value
            planBusca = ActiveSheet.Name
            Range("A5").FormulaR1C1 = "=ADDRESS(" & Target.Row & "," & Target.Column & ",4)"
            resBusca = Range("A5").value
            filtraAtiv
            protPlan.FinalizaRotina
            flagBusca = 0
            Set protPlan = Nothing
      End If
    End If
    
'    Dim Orca As Integer
'
'    Orca = 3
'
'    Set protPlan = New clsProtecao
'    For i = 1 To 10
'        If Target.Column = Orca And Target.Row >= 21 And Target.Row <= 84 Then
'          protPlan.IniciaRotina True
'          If Cells(Target.Row, Orca + 10).value = vbNullString Then
'                Cells(Target.Row, Orca + 6).value = ""
'          ElseIf Cells(Target.Row, Orca + 10).value = 6 Then
'                Cells(Target.Row, Orca + 6).value = "2|fffd| Parcela"
'          Else
'                Cells(Target.Row, Orca + 6).value = "1|fffd| Parcela"
'          End If
'          protPlan.FinalizaRotina
'        End If
'        Orca = Orca + 17
'    Next i
    flagBusca = 0
    ' verificar se |fffd| produto para comentar (T)
    'mdlCultivar.comentarioToneladaBC
        
End Sub

Private Sub Worksheet_Deactivate()
    If flagBusca = 1 Then Exit Sub
    If Range("flagORCA_").value = 1 Then Exit Sub
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    If Range("flagORCA_2").value > 0 Then 'identifica o or|fffd|amento ativo 1-10
       Dim lngOrca As Long
       Dim strOrca As String
       lngOrca = 1
       Do While lngOrca <= 10
          strOrca = "ORCA" & Format([lngOrca], "00")
          If Range([strOrca]).EntireColumn.Hidden = False Then Exit Do
          lngOrca = lngOrca + 1
       Loop
       strOrca = "nomeORCA" & Format([lngOrca], "00")
       xl2Prop.Range("D" & Range("flagORCA_2").value).value = Range([strOrca]).value
       Range("flagORCA_2").value = 0
    End If
    protPlan.IniciaRotina True
    ordenaMENU_ORCA
    xl1Orca.Protect Password:="senhasBN"
    'xl99Auxi.Range("D2").value = 0
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Attribute VB_Name = "xl1OrcaBkp"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "xl2Prop"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
        'If FlagProp Then             N|fffd|O CRITICAR OR|fffd|AMENTO 1 MILH|fffd|O 20170630
        '   FlagProp = False
        '   If Range("M46").Select Then
        '     Range("E11").Select
        '   End If
        '   Exit Sub
        'End If
        Dim lngLinSel As Long
        Dim protPlan As clsProtecao
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina False
        
        Range("V46").value = Range("E46").value
        Rows(33).AutoFit
        For lngLinSel = 34 To 42
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               Rows([lngLinSel]).AutoFit
            Else
               Range("D" & [lngLinSel] & ":O" & [lngLinSel]).ClearContents
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 59 To 67
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("D" & [lngLinSel]).value = vbNullString
               Range("G" & [lngLinSel]).value = vbNullString
               Range("K" & [lngLinSel]).value = vbNullString
               Range("O" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 75 To 78
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("D" & [lngLinSel]).value = vbNullString
               Range("G" & [lngLinSel]).value = vbNullString
               Range("I" & [lngLinSel]).value = vbNullString
               Range("K" & [lngLinSel]).value = vbNullString
               Range("O" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 95 To 103
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("G" & [lngLinSel]).value = vbNullString
               Range("J" & [lngLinSel]).value = vbNullString
               Range("M" & [lngLinSel]).value = vbNullString
               Range("P" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 104 To 112
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("E" & [lngLinSel]).value = vbNullString
               Range("G" & [lngLinSel]).value = vbNullString
               Range("H" & [lngLinSel]).value = vbNullString
               Range("J" & [lngLinSel]).value = vbNullString
               Range("K" & [lngLinSel]).value = vbNullString
               Range("M" & [lngLinSel]).value = vbNullString
               Range("P" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 121 To 124
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("E" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 130 To 159
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 187 To 189
            If Range("A" & [lngLinSel]).value = 1 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
            Else
               Range("H" & [lngLinSel]).value = vbNullString
               Range("J" & [lngLinSel]).value = vbNullString
               Range("O" & [lngLinSel]).value = vbNullString
               Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        For lngLinSel = 204 To 213
            If Range("M" & [lngLinSel]).value > 0 Then
               Range("A" & [lngLinSel]).EntireRow.Hidden = False
               If Range("D" & [lngLinSel]).value = vbNullString Then
                  Range("D" & [lngLinSel]).value = Range("S" & [lngLinSel]).value
               End If
            Else
            Range("A" & [lngLinSel]).EntireRow.Hidden = True
            End If
        Next lngLinSel
        
        lngLinSel = 1
        Do While lngLinSel <= 10                                                     'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
           If xl1Orca.Range("TPORCA" & Format([lngLinSel], "00")).value = 1 Then     'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
             Range("U46").value = 1                                                'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
             Exit Do                                                               'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
           Else                                                                    'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
             Range("U46").value = 0                                                'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
           End If                                                                  'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
           lngLinSel = lngLinSel + 1                                                   'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
        Loop                                                                       'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM
        
        protPlan.FinalizaRotina
        Set protPlan = Nothing

        'Atualiza|fffd||fffd|o autom|fffd|tica da tela. O mesmo que clicar no bot|fffd|o para este fim.
        btnATUA_PROP_Clique
End Sub

Private Sub Worksheet_Calculate()
        If flagBusca = 1 Then Exit Sub
        Dim lngLinSel As Long
        Dim strOrca As String
        Dim protPlan As clsProtecao
        If ActiveSheet.Name <> "Proposta" Then Exit Sub
        If ActiveCell.Address = "$E$13" Then Exit Sub
        If ActiveCell.Address = "$J$33" Then Exit Sub
        If ActiveCell.Address = "$J$34" Then Exit Sub
        If ActiveCell.Address = "$J$35" Then Exit Sub
        If ActiveCell.Address = "$J$36" Then Exit Sub
        If ActiveCell.Address = "$J$37" Then Exit Sub
        If ActiveCell.Address = "$J$38" Then Exit Sub
        If ActiveCell.Address = "$J$39" Then Exit Sub
        If ActiveCell.Address = "$J$40" Then Exit Sub
        If ActiveCell.Address = "$J$41" Then Exit Sub
        If ActiveCell.Address = "$J$42" Then Exit Sub
        
        Set protPlan = New clsProtecao
        
        'GSOL00043702
        If ActiveCell.Address = "$E$11" Then
           If Range("TP_PROP").value < 3 And _
              bd4Benef.Range("FIM_BCLI").value <= 2 Then
              MsgBox "Informe os proponentes / co-emitentes, cadastrando-os atrav|fffd|s do bot|fffd|o PROPONENTES", vbExclamation
              
           ElseIf Range("TP_PROP").value = 3 And _
                  bd4Benef.Range("FIM_BCLI").value > 2 Then
                  If MsgBox("Existem mais de um proponente / co-emitente cadastrado." & vbCrLf & _
                            "Provavelmente a proposta elaborada anteriormente era Coletiva." & vbCrLf & _
                            "Confirma exclus|fffd|o dos dados dos proponentes para esta proposta?", vbQuestion + vbYesNo, _
                            ":: Proposta de Custeio Agr|fffd|cola") = vbYes Then
                     Set protPlan = New clsProtecao
                     protPlan.IniciaRotina False
                     bd4Benef.Activate
                     protPlan.DesprotegePlanilha
                     bd4Benef.Rows("3:" & bd4Benef.Range("FIM_BCLI").value).ClearContents
                     protPlan.ProtegePlanilha
                     xl2Prop.Activate
                     protPlan.FinalizaRotina
                     Set protPlan = Nothing
                  End If
           End If
           
           Exit Sub
        End If

        Set protPlan = New clsProtecao

        If ActiveCell.Address = "$E$45" Then
            flagBusca = 1
            
            If Range("S45").value = 2 Then
                If Range("V44").value = 0 Then
                    If MsgBox("A categoria selecionada exige o uso dos or|fffd|amentos padr|fffd|o!" & vbCrLf & _
                                    "Os or|fffd|amentos ser|fffd|o zerados. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
                        Range("E45").value = vbNullString ' Range("X44").value  'RNM Alterado de W44 para X44
                    Else
                        protPlan.IniciaRotina False
                        Range("V44").value = 1
                        'Range("E46").Select                        ' RNM VERIFICAR
                        limparOrcamentos
                        protPlan.FinalizaRotina
                    End If
                End If
            Else
                protPlan.IniciaRotina False
                Range("V44").value = 0
                protPlan.FinalizaRotina
            End If
            
            'protPlan.IniciaRotina False
            'Range("X44").Value = Range("E45").Value
            'protPlan.FinalizaRotina
            
            flagBusca = 0
            
            Exit Sub
        End If
   
'        'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM - INI  VOLTA
'        If ActiveCell.Address = "$M$46" Then
'         If flagBusca = 0 Then
'           flagBusca = 1
'           If Range("U46").value = 1 And (xl99Auxi.Range("flagORCA_PRONAF").value = 1 Or (xl2Prop.Range("flagCAT_USO_ORCA_PADRAO").value = 1)) Then
'             If Range("U46").value = 1 Then
'                If MsgBox("A op|fffd||fffd|o por Projeto Pronaf exige o uso dos or|fffd|amentos padr|fffd|o!" & vbCrLf & _
'                                "Os or|fffd|amentos ser|fffd|o zerados. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
'                    Range("M46").value = "Sim" ' Range("X44").value  'RNM Alterado de W44 para X44
'                    Range("E47").Select
'                  '  flagBusca = 0
'                  '  Exit Sub
'                Else
'                    protPlan.IniciaRotina False
'                    Range("U46").value = 0
'                    limparOrcamentos
'                    Range("E47").Select
'                    protPlan.FinalizaRotina
'                End If
'             End If
'           Else
'             '(xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And xl2Prop.Range("portePROD").value <> 2 And xl2Prop.Range("M46").value = "Sim") Then
'             If Range("U46").value = 0 And (xl99Auxi.Range("flagORCA_PRONAF").value <> 1 And Range("portePROD").value <> 2) Then
'             'If Range("U46").value = 1 Then
'                If MsgBox("A op|fffd||fffd|o por Projeto at|fffd| R$ 1 Milh|fffd|o exige o uso dos or|fffd|amentos at|fffd| R$ 1 Milh|fffd|o!" & vbCrLf & _
'                                    "Os or|fffd|amentos ser|fffd|o zerados. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
'                   Range("M46").value = "N|fffd|o"
'                   Range("E47").Select
'                 '  flagBusca = 0
'                 '  Exit Sub
'                Else
'                   protPlan.IniciaRotina False
'                   Range("U46").value = 1
'                   limparOrcamentos
'                   Range("E47").Select
'                   protPlan.FinalizaRotina
'                End If
'             End If
'           End If
'           flagBusca = 0
'         End If
'        End If
'        'Sprint 11 - Inclus|fffd|o de Or|fffd|amento at|fffd| 1 milh|fffd|o - RNM - FIM

        If ActiveCell.Address = "$E$46" Then
           If Range("E46").value = vbNullString Then Exit Sub
           Application.EnableEvents = False
           Range("E47").Select
           If Range("V46").value <> vbNullString And _
              Range("V46").value <> Range("E46").value And _
              Range("W46").value > 0 And _
              Range("X46").value = 0 Then
              If MsgBox("Foi selecionado Programa PRONAF. Os or|fffd|amentos ser|fffd|o zerados da base!" & vbCrLf & _
                        "Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
                 flagBusca = 1
                 protPlan.IniciaRotina False
                 Range("E46").value = Range("V46").value
                 protPlan.FinalizaRotina
                 flagBusca = 0
                 Exit Sub
              End If

              'limpa todos os orcamentos.
              limparOrcamentos
              Range("E47").Select  'RNM VERIFICAR

            protPlan.FinalizaRotina
            'Set ProtPlan = Nothing
           End If
           flagBusca = 1
           
           'GSOL00083049
           Application.EnableEvents = False
           protPlan.DesprotegePlanilha
           telaDeclPRONAF xl99Auxi.Range("flagDecPRONAF").value
           protPlan.ProtegePlanilha
           
           If Range("W46").value > 0 Then
              Range("X46").value = 1
           Else
              Range("X46").value = 0
           End If
 
           Range("V46").value = Range("E46").value
           
           If xl99Auxi.Range("flagORCA_PRONAF").value <> "1" And _
              Range("flagPROAGRO").value = "2" Then
              MsgBox "Programa de Cr|fffd|dito n|fffd|o contemplado pelo seguro PROAGRO+", vbCritical
              protPlan.DesprotegePlanilha
              Range("E48:G48").ClearContents
              Rows("83:84").Hidden = True 'GSOL01923762 - N|fffd|o EXIBIR O CUSTO DE ASSESSORIA
              TelaProAgro 0
              protPlan.ProtegePlanilha
           End If
           
           protPlan.FinalizaRotina
           
           flagBusca = 0
           Range("E47").Select
           
           'Aliquotas proagro em 2% quando PRONAF (GSOL00223679)
           'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
           'ajustaAliquotasPROAGRO
           
           protPlan.FinalizaRotina
           Set protPlan = Nothing
           Application.Calculation = xlCalculationAutomatic
           
           Exit Sub
        End If

        If ActiveCell.Address = "$E$48" Then
           Application.EnableEvents = False
           Application.ScreenUpdating = False
           'Set ProtPlan = New clsProtecao
           protPlan.DesprotegePlanilha
           If Range("flaGPROAGRO").value <> "0" Then
              TelaProAgro 1
              protPlan.DesprotegePlanilha
              Rows("83:84").Hidden = True
           Else
              TelaProAgro 0
              protPlan.DesprotegePlanilha
              Rows("83:84").Hidden = True  'GSOL01923762 - EXIBIR O CUSTO DE ASSESSORIA
           End If

           If Range("flagPROAGRO").value = "2" Then
              If xl99Auxi.Range("flagORCA_PRONAF").value <> "1" Then
                 MsgBox "Programa de Cr|fffd|dito n|fffd|o contemplado pelo seguro PROAGRO+", vbCritical
                 Range("E48:G48").ClearContents
                 Rows("83:84").Hidden = True  'GSOL01923762 - N|fffd|O EXIBIR O CUSTO DE ASSESSORIA
                 TelaProAgro 0
                 protPlan.ProtegePlanilha
                 Application.EnableEvents = True
                 Set protPlan = Nothing
                 Exit Sub
              End If
           End If

           protPlan.ProtegePlanilha
           Application.EnableEvents = True
           Set protPlan = Nothing

            btnATUA_PROP_Clique 'chama a atualiza|fffd||fffd|o de itens.
           Exit Sub
        End If
        
'     'Tratar a troca do or|fffd|amento.
'     If Target.Row >= 58 And Target.Row <= 67 Then
'       Application.ScreenUpdating = False
'       If Cells(Target.Row, 50).value <> vbNullString Then
'         If Cells(Target.Row, 4).text <> Cells(Target.Row, 50).text Then
'           If flagBusca = 0 Then
'             'If MsgBox("Exclus|fffd|o/Altera|fffd||fffd|o da Invers|fffd|o!" & vbCrLf & _
'                     "A Gleba/Pontos correspondentes ao item de invers|fffd|o deve ser exclu|fffd|do. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbYes Then
'              PlanilhaAtual = ActiveSheet.Name
'             ' LimparGlebaPontos Cells(Target.Row, 30).text, "0"  'SQ_invers|fffd|o
'              Sheets([PlanilhaAtual]).Activate
'             'End If
'           Else
'              PlanilhaAtual = ActiveSheet.Name
'              'LimparGlebaPontos Cells(Target.Row, 30).text, "0"  'SQ_invers|fffd|o
'              Sheets([PlanilhaAtual]).Activate
'           End If
'           MsgBox "Coordenadas Geod|fffd|sicas relativas a invers|fffd|o selecionada, ser|fffd|o exclu|fffd|das", vbInformation, "Exclus|fffd|o de Coordenadas Geod|fffd|sicas"
'           Call CargaIniGeodesica
'           Call LimparGlebasSemInv
'           btnATUA_PROP_Clique
'         End If
'       End If
   '  End If
        'Tratamento de Altera|fffd||fffd|o do Campo Enquadramento PTAE.
        'Sempre que o valor for alterado de SIM para N|fffd|O
        'Os Or|fffd|amentos dever|fffd|o ser apagados.
        '09 Sprint GSOL00953122  - Exclus|fffd|o do Campo ENQUADRADO NO PTAE 03/2016 - INI
'        If ActiveCell.Address = "$M$45" Then
'
'           'Application.EnableEvents = False
'           Range("E47").Select
'           If Range("V45").Value = 0 Then 'Se PTAE = N|fffd|o
'              If MsgBox("Enquadrado no PTAE foi alterado para 'N|fffd|o'. Os or|fffd|amentos ser|fffd|o zerados da base!" & vbCrLf & _
'                        "Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
'                 flagBusca = 1
'                 protPlan.IniciaRotina False
'                 Range("M45").Value = "Sim"
'                 protPlan.FinalizaRotina
'                 Set protPlan = Nothing
'                 flagBusca = 0
'                 Exit Sub
'              End If
'              protPlan.IniciaRotina False
'              xl1Orca.Activate
'              For lngLinSel = 1 To 10
'                  LimparOrcamento [lngLinSel]
'              Next lngLinSel
'              selORCA01
'              flagBusca = 1
'              xl2Prop.Activate
'              Range("D58:H67").ClearContents
'              Range("K58:L67").ClearContents
'              Range("O58:P67").ClearContents
'              protPlan.FinalizaRotina
'              flagBusca = 0
'           End If
'        End If
'        '09 Sprint GSOL00953122  - Exclus|fffd|o do Campo ENQUADRADO NO PTAE 03/2016 - FIM
        
        Set protPlan = Nothing

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

     If ActiveSheet.Name <> "Proposta" Then Exit Sub
     If Target.Address = "$F$58" Then Exit Sub
     If Target.Address = "$F$59" Then Exit Sub
     If Target.Address = "$F$60" Then Exit Sub
     If Target.Address = "$F$61" Then Exit Sub
     If Target.Address = "$F$62" Then Exit Sub
     If Target.Address = "$F$63" Then Exit Sub
     If Target.Address = "$F$64" Then Exit Sub
     If Target.Address = "$F$65" Then Exit Sub
     If Target.Address = "$F$66" Then Exit Sub
     If Target.Address = "$F$67" Then Exit Sub
     If Target.Address = "$E$15" Then Exit Sub
     If Target.Address = "$E$45" Then Exit Sub
     If Target.Address = "$V$46" Then Exit Sub
     
     Dim protPlan As clsProtecao
     On Error GoTo errChange
     
     FlagProp = True
     
     If flagBusca = 1 Then Exit Sub
     
     Dim aux As Long
     Application.ScreenUpdating = False
     'Manutencao evolutiva sendo realizada nesse comentario
     'Marilia - 10/11/10 - GSOL00373526
'        Application.EnableEvents = False
'        If Not Intersect(Target, Range("J33:J42")) Is Nothing Then
'        Dim UF As String
'        Dim Cel As String
'        UF = Right(Target.Value, 2)
'        Cel = Right(Target.Address, 2)
'        Call PreencheDistrito(UF, Cel)
'        End If
'        Application.EnableEvents = True
     
     ' GSOL00910095 - JSR - 09/07/2015 - apresentando informa|fffd||fffd|o de Cultura Consorciada na aba Propostas -> Culturas
     If Left(Target.Address, 3) = "$D$" And CInt(Right(Target.Address, 2)) >= 58 And CInt(Right(Target.Address, 2)) <= 67 Then
        Set protPlan = New clsProtecao
        protPlan.DesprotegePlanilha
        
        xl2Prop.Range("F" & Right(Target.Address, 2)).value = retornaCulturaConsorciada(Range("D" & CInt(Right(Target.Address, 2))))
        protPlan.ProtegePlanilha

     End If
            
     'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - INI
     If Target.Address = "$E$10" Then
       Set protPlan = New clsProtecao
       If flagBusca = 1 Then Exit Sub
       If Range("R10").value <> Range("S10").value Then
            Application.EnableEvents = False
            flagBusca = 1
            If Range("R10").value <> Range("S10").value Then
                 If MsgBox("Foi alterado o campo Custeio Agroamigo Crescer! Os or|fffd|amentos ser|fffd|o zerados da base!" & vbCrLf & _
                              "Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
                       protPlan.DesprotegePlanilha
                       If Range("S10").value = "S" Then
                          Range("E10").value = "Sim"
                       Else
                          Range("E10").value = "N|fffd|o"
                       End If
                       Range("S10").value = Range("R10").value
                       protPlan.ProtegePlanilha
                       flagBusca = 0
                 Else
                    'limpa todos os orcamentos.
                    Application.ScreenUpdating = False
                    limparOrcamentos
                    
                    Range("S10").value = Range("R10").value
                    'Range("E10").Select  'RNM VERIFICAR
                    flagBusca = 0
                 End If
            End If
            
            flagBusca = 1
'            If Range("E10").value = "Sim" Then
'              For i = 0 To 9
'                DoEvents
'                Application.ScreenUpdating = False
'                If xl1Orca.Cells(21, (3 + (17 * [i]))).value <> vbNullString Then
'                  Alterar_Parcelas i + 1
'                  flagBusca = 1
'                End If
'              Next i
'            End If
            
            flagBusca = 0
                    
            protPlan.FinalizaRotina
       End If
       Set protPlan = Nothing
       'Sprint 10 - GSOL01030509 novos campos ETENE/BACEN - FIM
     End If
     'Sprint 10 - Demanda - GSOL00953122 AGROAMIGO CRESCER - FIM
     'Sprint 9
     If Target.Address = "$E$27" Then
        Set protPlan = New clsProtecao
        protPlan.DesprotegePlanilha
        If Range("E27").value = "Sim" Then
          xl2Prop.Range("E47").value = 0.02
        Else
          xl2Prop.Range("E47").value = 0.025
        End If
        protPlan.ProtegePlanilha
        Set protPlan = Nothing
     End If
     
     If Target.Address = "$E$26" Then
        If flagBusca = 1 Then Exit Sub
        If Range("E26").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("E26").value
        planBusca = ActiveSheet.Name
        resBusca = "E26"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
     End If
     
     If Target.Address = "$E$44" Then
        If flagBusca = 1 Then Exit Sub
        If Range("E44").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("E44").value
        planBusca = ActiveSheet.Name
        resBusca = "E44"
        
        'Aliquotas proagro em 2% quando PRONAF (GSOL00223679)
        'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
        'ajustaAliquotasPROAGRO
        
        filtraAtiv
        protPlan.FinalizaRotina
        Set protPlan = Nothing
     End If
     
     'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - INI
     If (Target.Column = 4 And Target.Row >= 33 And Target.Row <= 42) Then
        
        If flagBusca = 1 Then Exit Sub
        If Target.value <> vbNullString Then Exit Sub
        'Calculate
        If MsgBox("Os dados de informa|fffd||fffd|es dos Im|fffd|veis vinculados ao plano ser|fffd|o apagados." & Chr(13) & _
                   "Deseja confirmar a exclus|fffd|o?", vbYesNo + vbInformation, "Aten|fffd||fffd|o") = vbYes Then
           Range("AI" & Target.Row & ":" & "AL" & Target.Row).ClearContents
           LimparComentImv Target.Row
        Else
           'Range("E27").Select
           flagBusca = 1
           Application.Undo
        End If
        protPlan.FinalizaRotina
        Set protPlan = Nothing
     End If
     'OPERA|fffd||fffd|ES RURAIS - DATA - 30062017 - FIM
     
     
     
     If (Target.Column = 5 And _
        Target.Row >= 33 And _
        Target.Row <= 42) Or _
        Target.Address = "$E$24" Then
        If flagBusca = 1 Then Exit Sub
        If Target.value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        If Verifica_CPF(Target.value) Then
           Target.NumberFormat = "000"".""000"".""000-00"
        ElseIf Verifica_CGC(Target.value) Then
           Target.NumberFormat = "00"".""000"".""000""/""0000-00"
        Else
           Target.NumberFormat = "000"".""000"".""000-00"
        End If
        flagBusca = 0
        protPlan.FinalizaRotina
        Set protPlan = Nothing
     End If
     
     If Target.Address = "$J$33" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J33").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J33").value
        planBusca = ActiveSheet.Name
        resBusca = "J33"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD33") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$34" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J34").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J34").value
        planBusca = ActiveSheet.Name
        resBusca = "J34"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD34") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$35" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J35").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J35").value
        planBusca = ActiveSheet.Name
        resBusca = "J35"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD35") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
      
     If Target.Address = "$J$36" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J36").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J36").value
        planBusca = ActiveSheet.Name
        resBusca = "J36"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD36") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$37" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J37").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J37").value
        planBusca = ActiveSheet.Name
        resBusca = "J37"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD37") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$38" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J38").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J38").value
        planBusca = ActiveSheet.Name
        resBusca = "J38"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD38") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$39" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J39").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J39").value
        planBusca = ActiveSheet.Name
        resBusca = "J39"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD39") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$40" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J40").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J40").value
        planBusca = ActiveSheet.Name
        resBusca = "J40"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD40") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$41" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J41").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J41").value
        planBusca = ActiveSheet.Name
        resBusca = "J41"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD41") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$J$42" Then
        If flagBusca = 1 Then Exit Sub
        If Range("J42").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("J42").value
        planBusca = ActiveSheet.Name
        resBusca = "J42"
        filtraMuni
        protPlan.FinalizaRotina
        Set protPlan = Nothing
        If Range("$AC$46").value = 1 And Range("AD42") = 0 Then
         MsgBox "Verifique se o munic|fffd|pio do empreendimento foi decretado estado de calamidade (SECA/ESTIAGEM)", vbExclamation, "Programa Estiagem 2012"
        End If
     End If
     If Target.Address = "$E$13" Then
        If flagBusca = 1 Then Exit Sub
        If Range("E13").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("E13").value
        planBusca = ActiveSheet.Name
        resBusca = "E13"
        filtraAgencia
        protPlan.FinalizaRotina
        Set protPlan = Nothing
     End If
     
     'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
     If Target.Address = "$E$46" Then
        If Range("E46").value = vbNullString Then Exit Sub
        Set protPlan = New clsProtecao
        protPlan.IniciaRotina True
        flagBusca = 1
        celBusca = Range("E46").value
        planBusca = ActiveSheet.Name
        resBusca = "E46"
        'GSOL01049552 - OSPADR|fffd|O 156835 INI
        Dim PRONAF As Boolean
        If ActiveCell.Address = "$E$46" Then
            flagBusca = 1
            PRONAF = IIf(InStr(xl2Prop.Range("E46").value, "PRONAF") > 0, True, False)
            
            If PRONAF And Range("M46").value = "Sim" Then
                If MsgBox("A categoria selecionada exige o uso dos or|fffd|amentos padr|fffd|o!" & vbCrLf & _
                                "Os or|fffd|amentos ser|fffd|o zerados. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbNo Then
                    Range("E46").value = vbNullString
                Else
                    protPlan.IniciaRotina False
                    limparOrcamentos
                    protPlan.FinalizaRotina
                End If
                protPlan.FinalizaRotina
            End If
        End If
        'GSOL01049552 - OSPADR|fffd|O 156835 FIM
        
        'GSOL01923226 - RNM - INI
        'Omitir da proposta a TX de Juros, quando for um destes programas FNE/PRONAF COMUM (433) e o programa FNE/PRONAF GRUPO "A" - FNE (368)
        If Range("S46").value = 382 Or Range("S46").value = 368 Or Range("S46").value = 401 Then
            Rows("320:326").Hidden = True
            ActiveSheet.Shapes("btn_opc_TcrPre").Visible = False
            ActiveSheet.Shapes("btn_opc_TcrPos").Visible = False
            ActiveSheet.Shapes("Caixa de grupo 7635").Visible = False
            Range("S320").value = 0
        Else
            Rows("320:326").Hidden = False
            ActiveSheet.Shapes("btn_opc_TcrPre").Visible = True
            ActiveSheet.Shapes("btn_opc_TcrPos").Visible = True
            ActiveSheet.Shapes("Caixa de grupo 7635").Visible = True
        End If
        'GSOL01923226 - RNM - FIM
        
        flagBusca = 0
     End If
   
   
        'Aliquotas proagro em 2% quando PRONAF (GSOL00223679)
        'GSOL00676184 - altera|fffd||fffd|o de aliquota PROAGRO + Cultura Irrigado PARA 1%  e Cultura Sequeiro e Outros Para 2%
        'ajustaAliquotasPROAGRO
       
            
'       Indicador de Custeio Rotativo
     'For|fffd|a o custeio rotativo a ser SIM
     If Range("E45").value = "Mini-Produtor" Or Range("E45").value = "Produtor de Pequeno Porte" Or Range("W46").value <> 0 Then
         
         If VerificaProgramaEstiagem() = False Then
         
             If Range("E54").value <> "Sim" Then
                 'Range("E54").Validation.Delete
                 Range("E54").value = "Sim"
             End If
         
         End If
         
     End If
     
     'Indicador de Custeio Rotativo
     'Monta op|fffd||fffd|o SIM/N|fffd|O para o projetista escolher no Custeio Rotativo
     'If Range("E45").Value <> "Mini-Produtor" And Range("E45").Value <> "Produtor de Pequeno Porte" Then
     '    If Range("W46").Value = 0 And Range("E46").Value <> "" Then
     '        Set protPlan = New clsProtecao
     '        protPlan.IniciaRotina True
     '        Range("E54").Select
     '        'MontaLista
     '        't|fffd| deixando a planilha desprotegida e sem c|fffd|lculo habilitado
     '        Set protPlan = Nothing
     '    End If
     'End If
          
     '- For|fffd|a valores em duas casas decimais
     'GSOL00946388 07 Sprint
     If Target.Row >= 130 And Target.Row <= 159 Then
        If Target.Column >= 12 And Target.Column <= 13 Then
           If flagBusca = 1 Then Exit Sub
           If Cells(Target.Row, Target.Column).text = "" Then Exit Sub
           flagBusca = 1
           Cells(Target.Row, Target.Column).FormulaR1C1 = Cells(Target.Row, Target.Column + 10).value
           flagBusca = 0
        End If
     End If
     
     '- For|fffd|a valores em duas casas decimais
     
     If Target.Row >= 58 And Target.Row <= 82 Then
        If Target.Column >= 7 And Target.Column <= 12 Then
           If flagBusca = 1 Then Exit Sub
           If Cells(Target.Row, Target.Column).text = "" Then Exit Sub
           flagBusca = 1
           Cells(Target.Row, Target.Column).FormulaR1C1 = Application.WorksheetFunction.Round(Cells(Target.Row, Target.Column).value, 2)
           flagBusca = 0
           'RNM ATUALIZAR AS REFER|fffd|NCIAS
          ' atualizaRef   'RNM SPRINT 10 - Atualiza|fffd||fffd|o de Geod|fffd|sicas 25/05/2016
        End If
     End If
     
'     'Tratar a troca do or|fffd|amento.
'     If (Target.Row >= 58 And Target.Row <= 67) And Target.Column = 4 Then
'       Application.ScreenUpdating = False
'       If Cells(Target.Row, 50).value <> vbNullString Then
'         If Cells(Target.Row, 4).text <> Cells(Target.Row, 50).text Then
'           If flagBusca = 0 Then
'             'If MsgBox("Exclus|fffd|o/Altera|fffd||fffd|o da Invers|fffd|o!" & vbCrLf & _
'                     "A Gleba/Pontos correspondentes ao item de invers|fffd|o deve ser exclu|fffd|do. Confirma?", vbQuestion + vbYesNo, ":: Custeio Agr|fffd|cola") = vbYes Then
'              PlanilhaAtual = ActiveSheet.Name
'             ' LimparGlebaPontos Cells(Target.Row, 30).text, "0"  'SQ_invers|fffd|o
'              Sheets([PlanilhaAtual]).Activate
'             'End If
'           Else
'              PlanilhaAtual = ActiveSheet.Name
'              'LimparGlebaPontos Cells(Target.Row, 30).text, "0"  'SQ_invers|fffd|o
'              Sheets([PlanilhaAtual]).Activate
'           End If
'           MsgBox "Coordenadas Geod|fffd|sicas relativas a invers|fffd|o selecionada, ser|fffd|o exclu|fffd|das", vbInformation, "Exclus|fffd|o de Coordenadas Geod|fffd|sicas"
'           Call CargaIniGeodesica
'           Call LimparGlebasSemInv
'
'           btnATUA_PROP_Clique
'         End If
'       End If
'     End If
     
     
     'Tratamento para o PGPAF
     If Target.Address = "$E$46" Or (Target.Row >= 58 And Target.Row <= 67) Or (Target.Row >= 130 And Target.Row <= 159) Then
         Dim fecha As Integer
         fecha = 0
         If flagRotina = 0 Then
             Set protPlan = New clsProtecao
             protPlan.IniciaRotina True
             flagBusca = 1
             fecha = 1
         End If
         
        atualizaListaPGPAF
         
         If fecha = 1 Then
             flagBusca = 0
             protPlan.FinalizaRotina
             fecha = 0
         End If
         flagBusca = 0
     End If
     
     If Target.Address = "$E$46" Then
     
         If VerificaProgramaEstiagem() = True Then
             Range("E54").Validation.Delete
             Range("E54").value = "N|fffd|o"
             ActiveWorkbook.Names.Add Name:="listaPER", RefersToR1C1:="=Auxiliar!R2C175:R3C175"
             ActiveWorkbook.Names.Add Name:="listaPER_COD", RefersToR1C1:="=Auxiliar!R2C175:R3C177"
         Else
             ActiveWorkbook.Names.Add Name:="listaPER", RefersToR1C1:="=Auxiliar!R2C175:R7C175"
             ActiveWorkbook.Names.Add Name:="listaPER_COD", RefersToR1C1:="=Auxiliar!R2C175:R7C177"
         End If
         
         Application.Calculation = xlCalculationAutomatic
         protPlan.ProtegePlanilha
         Application.EnableEvents = True
         flagRotina = 0
        
         Set protPlan = Nothing
             
     End If
     
'    Atividade 94562 - Exclus|fffd|o da regra do limite proagro, visto o mesmo usar o limite da proposta, qdo correto |fffd| o EMPREENDIMENTO    - INI RNM 28/03/2017
'    'GSOL00586070 - SEAP-RECOR - Manuten|fffd||fffd|o de Sistema - Ajustes em mensagens da Planilha de Custeio - INI RNM 15/10/2012
'    If Range("flagPROAGRO") > 0 _
'        And Range("ENQUADRA_PROAGRO") >= xl99Auxi.Range("valorLimPROAGRO") Then
'
'         aux = xl99Auxi.Range("valorLimPROAGRO") - Range("ENQUADRA_PROAGRO")
'
'         strMsgCritica = strMsgCritica & "Foi informado ades|fffd|o ao PROAGRO, por|fffd|m n|fffd|o h|fffd| margem dispon|fffd|vel para o cliente:" & vbCrLf & _
'             "Valor limite do PROAGRO: R$ " & Format(xl99Auxi.Range("valorLimPROAGRO"), "#,##0.00") & vbCrLf & _
'             "Valor j|fffd| enquadrado : R$ " & Format(Range("ENQUADRA_PROAGRO"), "#,##0.00") & vbCrLf & _
'             "Margem do PROAGRO: R$ " & Format(aux, "#,##0.00")
'
'        MsgBox strMsgCritica, vbCritical, ":: Custeio Agr|fffd|cola"
'
'        Range("ENQUADRA_PROAGRO").value = 0
'        aux = 0
'
'    End If
'    'GSOL00586070 - SEAP-RECOR - Manuten|fffd||fffd|o de Sistema - Ajustes em mensagens da Planilha de Custeio - INI FIM 16/10/2012
'    Atividade 94562 - Exclus|fffd|o da regra do limite proagro, visto o mesmo usar o limite da proposta, qdo correto |fffd| o EMPREENDIMENTO    - FIM RNM 28/03/2017
                   
     ' O valor do decreto de emerg|fffd|ncia for vazio, colocar N|fffd|o
     If xl2Prop.Range("E27").value = vbNullString Then xl2Prop.Range("E27").value = "N|fffd|o"
     
     ' Se o Op|fffd||fffd|o-Proagro estiver vazio, colocar N|fffd|o se aplica
     If xl2Prop.Range("E48").value = vbNullString Then xl2Prop.Range("E48").value = "N|fffd|o se aplica"
     

     'Sprint 9
     flagBusca = 1
     FlagProp = True
     
     protPlan.ProtegePlanilha
     flagBusca = 0
     Set protPlan = Nothing
        
errChange:
     flagBusca = 0
     Exit Sub
End Sub

Private Sub Worksheet_FollowHyperlink(ByVal Target As Hyperlink)
'Dim teste
'
'teste = Target.Range.Offset(0, 0).Address
''teste = Target.Offset(0, 1).value
'MsgBox teste
'Range("R33").value = Target.Offset(0, 1).Address

'ok = MsgBox("Instru|fffd||fffd|es de Preenchimento da Informa|fffd||fffd|o do Im|fffd|vel" & Chr(10) & Chr(10) & _
'       "- NIRF: Campo Num|fffd|rico; Limite de caracteres 9; " & Chr(10) & _
'       "        Exemplo: 026627639." & Chr(10) & _
'       "- C|fffd|digo SNCR: Campo Num|fffd|rico; Limite de caracteres 13; " & Chr(10) & _
'       "        Exemplo: 0009807191179." & Chr(10) & _
'       "- N|fffd|mero Registro CAR: Campo AlfaNum|fffd|rico; Limite de caracteres 41;" & Chr(10) & _
'       "        COMPOSTO: [a-zA-Z]{2}, [0-9]{7}, [0-9a-zA-Z]{32}; " & Chr(10) & _
'       "        Exemplo: MA211157337050000000000000000000000000000;", vbInformation, "Instru|fffd||fffd|o de Preenchimento")
'frmInfoImovel.TxtNrImovel.text = Target.Range.Offset(0, 0).Address
frmInfoImovel.TxtNrImovel.text = Target.Range.Offset(0, 0).value
frmInfoImovel.Show
End Sub


Attribute VB_Name = "xl3Bene"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub

Private Sub Worksheet_Calculate()
        If ActiveSheet.Name <> "Benef" Then Exit Sub
        If Range("O9").value = 2 Then
           Range("O9").value = 1
           Exit Sub
        End If
        If ActiveCell.Address = "$E$38" Then Exit Sub
        If ActiveCell.Address = "$E$22" Then Exit Sub
        Dim protPlan As clsProtecao
        
        If ActiveCell.Address = "$E$19" Then
           Set protPlan = New clsProtecao
           Application.EnableEvents = False
           protPlan.IniciaRotina True
           If Left(Range("E19").value, 9) = "Casado(a)" _
              Or Left(Range("E19").value, 5) = "Uni|fffd|o" Then
              Range("A55:A72").EntireRow.Hidden = False
              Range("E66").value = Range("E19").value
           Else
              Range("E58:E72").value = ""
              Range("A55:A72").EntireRow.Hidden = True
           End If
           Range("E20").Select
           protPlan.FinalizaRotina
           Application.EnableEvents = True
           Set protPlan = Nothing
        End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    
    If ActiveSheet.Name <> "Benef" Then Exit Sub
    
    If Range("flagBNF") = 1 Then Exit Sub
    
    Dim protPlan As clsProtecao
        
    If Left(Target.Address, 5) = "$E$32" Then
       If Range("E32").value = vbNullString Then Exit Sub
       Processa_r
       flagBusca = 1
       celBusca = Range("E32").value
       planBusca = ActiveSheet.Name
       resBusca = "E32"
       BuscaTipoLogradouro
       Finaliza_Rotina
       Exit Sub
    End If

    If Left(Target.Address, 5) = "$E$45" Then
       If Range("E45").value = vbNullString Then Exit Sub
       Processa_r
       flagBusca = 1
       celBusca = Range("E45").value
       planBusca = ActiveSheet.Name
       resBusca = "E45"
       BuscaTipoLogradouro
       Finaliza_Rotina
       Exit Sub
    End If
    
    If Left(Target.Address, 5) = "$E$38" Then
       If flagBusca = 1 Then Exit Sub
       If Range("E38").value = vbNullString Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       celBusca = Range("E38").value
       planBusca = ActiveSheet.Name
       resBusca = "E38"
       filtraMuni
       protPlan.FinalizaRotina
       Set protPlan = Nothing
       Exit Sub
    End If

    If Left(Target.Address, 5) = "$E$51" Then
       If flagBusca = 1 Then Exit Sub
       If Range("E51").value = vbNullString Then Exit Sub
       Set protPlan = New clsProtecao
       protPlan.IniciaRotina True
       flagBusca = 1
       celBusca = Range("E51").value
       planBusca = ActiveSheet.Name
       resBusca = "E51"
       filtraMuni
       protPlan.FinalizaRotina
       Set protPlan = Nothing
       Exit Sub
    End If

End Sub

Private Sub Worksheet_Deactivate()
        If xl3Bene.Range("O9").value = 1 Then
           xl2Prop.Range("E22").value = bd4Benef.Range("F2").value
           xl2Prop.Range("E23").value = bd4Benef.Range("G2").value
           xl2Prop.Range("E24").value = bd4Benef.Range("H2").value
           xl2Prop.Range("E33").value = bd4Benef.Range("AA2").text & ", " & _
                                        bd4Benef.Range("AB2").text & ", " & _
                                        bd4Benef.Range("AC2").text & " - " & _
                                        bd4Benef.Range("AD2").text
           xl2Prop.Range("E34").value = bd4Benef.Range("AF2").text
        End If
        xl3Bene.Range("O9").ClearContents
End Sub

Attribute VB_Name = "xl5Coob"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    Dim protPlan As clsProtecao
    Set protPlan = New clsProtecao
    protPlan.FinalizaRotina
    Set protPlan = Nothing
End Sub
Private Sub Worksheet_Calculate()
        If ActiveSheet.Name <> "Coob" Then Exit Sub
        If ActiveCell.Address = "$E$23" Then Exit Sub
        Dim protPlan As clsProtecao
        
        If ActiveSheet.Name = "Coob" And ActiveCell.Address = "$E$20" Then
           Set protPlan = New clsProtecao
           Application.EnableEvents = False
           protPlan.IniciaRotina True
           If Left(Range("E20").value, 9) = "Casado(a)" _
              Or Left(Range("E20").value, 5) = "Uni|fffd|o" Then
              Range("A41:A59").EntireRow.Hidden = False
              Range("E52").value = Range("E20").value
           Else
              Range("E52").value = ""
              Range("E41:L59").ClearContents
              Range("A41:A59").EntireRow.Hidden = True
           End If
           Range("E21").Select
           protPlan.FinalizaRotina
           Application.EnableEvents = True
           Set protPlan = Nothing
        End If
        If ActiveSheet.Name = "Coob" And ActiveCell.Address = "$E$10" Then
           Set protPlan = New clsProtecao
           Application.EnableEvents = False
           protPlan.IniciaRotina True
           If Range("O10").value = 0 Then '- pessoa f|fffd|sica
              Range("E12:L12").ClearContents
              Range("A12").EntireRow.Hidden = True
              Range("A13:A22").EntireRow.Hidden = False
              Range("A24:A25").EntireRow.Hidden = False
              Range("A35:A36").EntireRow.Hidden = False
           Else
              Range("A12").EntireRow.Hidden = False
              Range("E13:L22").ClearContents
              Range("E24:L25").ClearContents
              Range("E35:L36").ClearContents
              Range("E41:L59").ClearContents
              Range("A13:A22").EntireRow.Hidden = True
              Range("A24:A25").EntireRow.Hidden = True
              Range("A35:A36").EntireRow.Hidden = True
              Range("A41:A59").EntireRow.Hidden = True
           End If
           Range("E11").Select
           protPlan.FinalizaRotina
           Application.EnableEvents = True
           Set protPlan = Nothing
        End If
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
        If ActiveSheet.Name <> "Coob" Then Exit Sub
        Dim protPlan As clsProtecao
        If Left(Target.Address, 5) = "$E$23" Then
           If flagBusca = 1 Then Exit Sub
           If Range("E23").value = vbNullString Then Exit Sub
           Set protPlan = New clsProtecao
           protPlan.IniciaRotina True
           flagBusca = 1
           celBusca = Range("E23").value
           planBusca = ActiveSheet.Name
           resBusca = "E23"
           filtraAtiv
           protPlan.FinalizaRotina
           flagBusca = 0
           Set protPlan = Nothing
        End If

End Sub
Attribute VB_Name = "xl5RelOrca"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True











































































Attribute VB_Name = "xl6Prop"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
  
  Call AtualizaTela
   
End Sub



Private Sub Worksheet_Change(ByVal Target As Range)

End Sub
Attribute VB_Name = "xl7RelBene"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True













































































Attribute VB_Name = "xl8Agencia"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "xl99Auxi"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True












































































Attribute VB_Name = "xl9RelGRM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "xl9RelGeod"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
        Me.Visible = xlSheetVisible
        Me.Select
End Sub

Private Sub Worksheet_Deactivate()
        Me.Visible = xlSheetVeryHidden
End Sub



' InQuest injected base64 decoded content
' K+-zc
' K+-zc
' az+Z
' ^r*'j
' +-h&

INQUEST-PP=macro
