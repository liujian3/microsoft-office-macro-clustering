Attribute VB_Name = "Add_del_rows_form"
Attribute VB_Base = "0{DCC5FB12-08BA-4F28-8FFE-5A91F65D727A}{63BF741B-C68A-4932-B0B2-314AE8E36A02}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Add_rows_optionbutton_Click()

    If Add_rows_optionbutton.value Then

            Del_rows_label.Enabled = False
            Del_rows_textbox.Text = ""
            Del_rows_textbox.Enabled = False
            
            From_row_label.Enabled = True
            From_row_textbox.Enabled = True
            Number_rows_label.Enabled = True
            Number_rows_textbox.Enabled = True
        
        End If

End Sub

Private Sub Cancel_button_Click()

    Unload Add_del_rows_form

End Sub

Private Sub Del_rows_optionbutton_Change()

    If Del_rows_optionbutton.value Then

            Del_rows_label.Enabled = True
            Del_rows_textbox.Enabled = True
            
            From_row_label.Enabled = False
            From_row_textbox.Text = ""
            From_row_textbox.Enabled = False
            Number_rows_label.Enabled = False
            Number_rows_textbox.Text = ""
            Number_rows_textbox.Enabled = False
        
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Add_rows_optionbutton.value Then
    
            If Not (isLong(From_row_textbox.Text) Or isLong(Number_rows_textbox.Text)) Then
    
                    error_text = error_input_row_number_text
                    
                    check_values = False
                    
                    Exit Function
                    
                End If
            
        Else
    
            If Not (split_multiple_interval(Del_rows_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If

        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function

Private Sub Erase_BOM_optionbutton_Click()

    If Erase_BOM_optionbutton.value Then

            Del_rows_label.Enabled = False
            Del_rows_textbox.Text = ""
            Del_rows_textbox.Enabled = False
            
            From_row_label.Enabled = False
            From_row_textbox.Text = ""
            From_row_textbox.Enabled = False
            Number_rows_label.Enabled = False
            Number_rows_textbox.Text = ""
            Number_rows_textbox.Enabled = False
        
        End If

End Sub

Private Sub OK_button_Click()

    Dim cell_1 As String
    Dim cell_2 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim row_string As String
    Dim last_row As Long
    Dim last_row_1 As Long
    Dim last_row_2 As Long
    Dim last_row_3 As Long
    Dim last_row_4 As Long
    Dim act_row As Long
    Dim del_row_number As Long
    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    Dim sheet_xls_4 As Worksheet

    Dim error_text As String
    Dim choosed_position() As Boolean
    
    Dim free_group_list() As free_group
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    last_row = sheet_xls_1.UsedRange.Rows.Count
    
    cell_1 = "BD2"
    cell_2 = "BF1"
    
    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" And Not (Erase_BOM_optionbutton) Then
    
            If check_values(error_text, choosed_position) Then
            
                    unlock_xls_1
        
                    If Add_rows_optionbutton.value Then
                    
                            If Not (CLng(From_row_textbox.Text) > first_row) Then
                            
                                    row_string = CStr(first_row) + ":" + CStr(first_row)
                                
                                    sheet_xls_1.Rows(row_string).Insert Shift:=xlDown
                                    
                                    row_string = CStr(first_row + 1) + ":" + CStr(first_row + 1)
                                    
                                    sheet_xls_1.Rows(row_string).Copy
                                    
                                    row_string = CStr(first_row) + ":" + CStr(first_row)
                                    
                                    sheet_xls_1.Rows(row_string).Select
                                    sheet_xls_1.Paste
                                    
                                    Application.CutCopyMode = False
                                    Selection.ClearContents
        
                                    row_string = CStr(first_row + 1) + ":" + CStr(first_row + CLng(Number_rows_textbox.Text) - 1)
                                
                                    sheet_xls_1.Rows(row_string).Insert Shift:=xlDown
                                    
                                Else
                                
                                    row_string = From_row_textbox.Text + ":" + CStr(CLng(From_row_textbox.Text) + CLng(Number_rows_textbox.Text) - 1)
                                
                                    sheet_xls_1.Rows(row_string).Insert Shift:=xlDown
                                
                                End If
        
                        Else
                    
                            del_row_number = 0
                    
                            For i = first_row To last_row
                            
                                If Not (i > UBound(choosed_position)) Then
                            
                                        If choosed_position(i) Then
                            
                                                row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                            
                                                sheet_xls_1.Rows(row_string).Delete
                                                
                                                del_row_number = del_row_number + 1
                                                
                                            End If
                                            
                                    End If
                                    
                            Next i
                                        
                        End If
                        
                    lock_xls_1
                                             
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                        
                        End If
                    
                    Unload Add_del_rows_form
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_2
                
                End If
            
        Else
        
            If Erase_BOM_optionbutton Then
            
                    Set book_xls = ActiveWorkbook
                    Set sheet_xls_1 = book_xls.Worksheets(1)
                    Set sheet_xls_2 = book_xls.Worksheets(2)
                    Set sheet_xls_3 = book_xls.Worksheets(3)
                    Set sheet_xls_4 = book_xls.Worksheets(4)
                
                    last_row_1 = sheet_xls_1.UsedRange.Rows.Count
                    last_row_2 = sheet_xls_2.UsedRange.Rows.Count
                    last_row_3 = sheet_xls_3.UsedRange.Rows.Count
                    last_row_4 = sheet_xls_4.UsedRange.Rows.Count
                    
                    unlock_xls
                    
                    If (last_row_1 > first_row) Or (last_row_1 = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row_1)
                        
                            sheet_xls_1.Rows(row_string).Delete
                        
                        End If
                        
                    If (last_row_2 > first_row) Or (last_row_2 = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row_2)
                        
                            sheet_xls_2.Rows(row_string).Delete
                        
                        End If
                        
                    If (last_row_3 > first_row) Or (last_row_3 = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row_3)
                        
                            sheet_xls_3.Rows(row_string).Delete
                        
                        End If
                        
                    If (last_row_4 > first_row) Or (last_row_4 = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row_4)
                        
                            sheet_xls_4.Rows(row_string).Delete
                        
                        End If
                        
                        changed_area.is_area = True
                        changed_area.start_column = 1
                        changed_area.end_column = 3
                        changed_area.start_row = first_row
                        changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                    
                        If get_positions(pos_list, error_text) Then
                        
                                reload_parts pos_list, changed_area
                                
                                If get_free_groups(free_group_list, error_text) Then
                                
                                        reload_free_groups free_group_list
                                    
                                    Else
                                    
                                        MsgBox error_text, vbInformation, msgbox_title_1
                                    
                                    End If
                    
                            Else
                            
                                MsgBox error_text, vbInformation, msgbox_title_1
                            
                            End If
                    
                    lock_xls
                    
                    Unload Add_del_rows_form
            
                Else
        
                    MsgBox error_run_function, vbInformation, msgbox_title_4
                    
                    Unload Add_del_rows_form
                    
                End If
        
        End If

End Sub
Attribute VB_Name = "Choice_bolt_del_form"
Attribute VB_Base = "0{62E6E6EA-5BEA-463C-A2EE-69CB069453CA}{32A5F5ED-E388-4039-BB85-83D0D193E2DC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit

Private Sub Cancel_button_Click() 'PREVEDENO NA BOLT

    Unload Choice_bolt_del_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    Dim choosed_position() As Boolean
    Dim del_row_number As Long
    
    If check_values(error_text, choosed_position) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            'Dim cell_2 As String
            'Dim cell_3 As String
            Dim changed_area As area_limits
            Dim pos_list() As position
            Dim row_string As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(3)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Position_no_optionbutton.value Then
            
                    del_row_number = 0
                    
                    unlock_xls_1_3
            
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i - del_row_number)
                    
                        If Not (sheet_xls_2.Range(cell_1).value > UBound(choosed_position)) Then
                                
                                If choosed_position(sheet_xls_2.Range(cell_1).value) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_3
                    
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_bolt_del_form
                    
                Else
            
                    del_row_number = 0
                    
                    unlock_xls_1_3
            
                    For i = first_row To last_row
                    
                        If Not (i > UBound(choosed_position)) Then
                                
                                If choosed_position(i) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_3
                    
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_bolt_del_form
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Position_no_optionbutton_Click() 'PREVEDENO NA BOLT

    If Position_no_optionbutton.value Then
    
            Position_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click() 'PREVEDENO NA BOLT

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Position_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Position_no_optionbutton.value Then
    
            If Not (split_multiple_interval(Position_number_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        Else
    
            If Not (split_multiple_interval(Row_no_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function
Attribute VB_Name = "Choice_bolt_edit_form"
Attribute VB_Base = "0{CB5D7227-5437-4003-B8D1-A55F6E22DD31}{C7C024B6-C794-4DDA-B448-A91AC4383FB8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click()

    Unload Choice_bolt_edit_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            'Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            'Dim cell_2 As String
            'Dim cell_3 As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            'Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(3)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Position_no_optionbutton.value Then
            
                    For i = first_row To last_row
            
                        cell_1 = "A" + CStr(i)
                        
                        If CStr(sheet_xls_2.Range(cell_1).value) = CStr(Position_number_textbox.Text) Then
                        
                                Row_no_textbox.Text = CStr(i)
                                
                                unlock_xls_1_3
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                                
                                lock_xls_1_3
                                
                                Edit_bolt_form.Show (1)
                                
                                unlock_xls_1_3
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = ""
                                
                                lock_xls_1_3
                                
                                Unload Choice_bolt_edit_form
                                
                                Exit Sub
                            
                            End If
                        
                    Next i
                    
                    MsgBox error_pos_exist_text, vbInformation, msgbox_title_2
                    
                Else
                
                    cell_1 = "A" + CStr(Row_no_textbox.Text)
                
                    If CStr(sheet_xls_2.Range(cell_1).value) = "" Or CDbl(Row_no_textbox.Text) < 8 Then
                    
                            MsgBox error_row_pos_exist_text, vbInformation, msgbox_title_2
                    
                        Else
                                
                            unlock_xls_1_3
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                            
                            lock_xls_1_3
                                
                            Edit_bolt_form.Show (1)
                                
                            unlock_xls_1_3
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = ""
                            
                            lock_xls_1_3
                            
                            Unload Choice_bolt_edit_form
                            
                            Exit Sub
                        
                        End If
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Position_no_optionbutton_Click()

    If Position_no_optionbutton.value Then
    
            Position_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click()

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Position_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If (Not (isLong(Position_number_textbox.Text))) And Position_no_optionbutton.value Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If (Not (isLong(Row_no_textbox.Text))) And Row_no_optionbutton.value Then
    
            error_text = error_row_num_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "Choice_free_group_del_form"
Attribute VB_Base = "0{BE1CEB22-74A9-4F77-9CB4-4E269FCCE58E}{8F8D2967-F709-4839-BC33-66B569637E55}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit

Private Sub Cancel_button_Click()

    Unload Choice_free_group_del_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    Dim choosed_position() As Boolean
    Dim del_row_number As Long
    
    If check_values(error_text, choosed_position) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            Dim free_group_list() As free_group
            Dim row_string As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(4)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Free_group_no_optionbutton.value Then
            
                    del_row_number = 0
                    
                    unlock_xls_1_4
            
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i - del_row_number)
                    
                        If Not (sheet_xls_2.Range(cell_1).value > UBound(choosed_position)) Then
                                
                                If choosed_position(sheet_xls_2.Range(cell_1).value) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_4
                                    
                    'reload volnych skupin
                    
                    If get_free_groups(free_group_list, error_text) Then
                    
                            reload_free_groups free_group_list
                        
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_free_group_del_form
                    
                Else
            
                    del_row_number = 0
                    
                    unlock_xls_1_4
            
                    For i = first_row To last_row
                    
                        If Not (i > UBound(choosed_position)) Then
                                
                                If choosed_position(i) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_4
                                    
                    'reload volnych skupin
                    
                    If get_free_groups(free_group_list, error_text) Then
                    
                            reload_free_groups free_group_list
                        
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_free_group_del_form
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Free_group_no_optionbutton_Click()

    If Free_group_no_optionbutton.value Then
    
            Free_group_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click()

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Free_group_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Free_group_no_optionbutton.value Then
    
            If Not (split_multiple_interval(Free_group_number_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        Else
    
            If Not (split_multiple_interval(Row_no_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function
Attribute VB_Name = "Choice_free_group_edit_form"
Attribute VB_Base = "0{9C0354BC-2312-4AFD-877A-44E689919FC4}{772A8165-82CE-4A33-84D5-8514678FD610}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload Choice_free_group_edit_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            'Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            'Dim cell_2 As String
            'Dim cell_3 As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            'Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(4)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Free_group_no_optionbutton.value Then
            
                    For i = first_row To last_row
            
                        cell_1 = "A" + CStr(i)
                        
                        If CStr(sheet_xls_2.Range(cell_1).value) = CStr(Free_group_number_textbox.Text) Then
                        
                                Row_no_textbox.Text = CStr(i)
                                
                                unlock_xls_1_4
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                                
                                lock_xls_1_4
                                
                                Edit_free_group_form.Show (1)
                                
                                unlock_xls_1_4
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = ""
                                
                                lock_xls_1_4
                                
                                Unload Choice_free_group_edit_form
                                
                                Exit Sub
                            
                            End If
                        
                    Next i
                    
                    MsgBox error_free_group_exist_text, vbInformation, msgbox_title_2
                    
                Else
                
                    cell_1 = "A" + CStr(Row_no_textbox.Text)
                
                    If CStr(sheet_xls_2.Range(cell_1).value) = "" Or CDbl(Row_no_textbox.Text) < 8 Then
                    
                            MsgBox error_row_free_group_exist_text, vbInformation, msgbox_title_2
                    
                        Else
                                
                            unlock_xls_1_4
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                            
                            lock_xls_1_4
                                
                            Edit_free_group_form.Show (1)
                                
                            unlock_xls_1_4
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = ""
                            
                            lock_xls_1_4
                            
                            Unload Choice_free_group_edit_form
                            
                            Exit Sub
                        
                        End If
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Free_group_no_optionbutton_Click()

    If Free_group_no_optionbutton.value Then
    
            Free_group_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click()

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Free_group_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If (Not (isLong(Free_group_number_textbox.Text))) And Free_group_no_optionbutton.value Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If (Not (isLong(Row_no_textbox.Text))) And Row_no_optionbutton.value Then
    
            error_text = error_row_num_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "Choice_position_del_form"
Attribute VB_Base = "0{245E74E7-425E-4008-8FD3-D4567854E225}{F8D34857-19AA-426B-B853-98DFFCF288FA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click()

    Unload Choice_position_del_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    Dim choosed_position() As Boolean
    Dim del_row_number As Long
    
    If check_values(error_text, choosed_position) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            'Dim cell_2 As String
            'Dim cell_3 As String
            Dim changed_area As area_limits
            Dim pos_list() As position
            Dim row_string As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Position_no_optionbutton.value Then
            
                    del_row_number = 0
                    
                    unlock_xls_1_2
            
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i - del_row_number)
                    
                        If Not (sheet_xls_2.Range(cell_1).value > UBound(choosed_position)) Then
                                
                                If choosed_position(sheet_xls_2.Range(cell_1).value) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_2
                    
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_position_del_form
                    
                Else
            
                    del_row_number = 0
                    
                    unlock_xls_1_2
            
                    For i = first_row To last_row
                    
                        If Not (i > UBound(choosed_position)) Then
                                
                                If choosed_position(i) Then
                                    
                                        row_string = CStr(i - del_row_number) + ":" + CStr(i - del_row_number)
                                    
                                        sheet_xls_2.Rows(row_string).Delete
                                                
                                        del_row_number = del_row_number + 1
                                        
                                    End If
                                    
                            End If
                        
                    Next i
                    
                    lock_xls_1_2
                    
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                    
                    Unload Choice_position_del_form
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Position_no_optionbutton_Click()

    If Position_no_optionbutton.value Then
    
            Position_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click()

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Position_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Position_no_optionbutton.value Then
    
            If Not (split_multiple_interval(Position_number_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        Else
    
            If Not (split_multiple_interval(Row_no_textbox.Text, choosed_position)) Then
            
                    error_text = error_interval_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
                
        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function


Attribute VB_Name = "Choice_position_edit_form"
Attribute VB_Base = "0{1EB8AE15-78D4-4084-91F7-C167C29714A4}{7E97E073-6BD8-46A5-989B-9255CE7DF240}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload Choice_position_edit_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim last_row As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            'Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            'Dim cell_2 As String
            'Dim cell_3 As String
            Dim write_pos As Boolean
            Dim i As Long
            
            Set book_xls = ActiveWorkbook
            'Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            If Position_no_optionbutton.value Then
            
                    For i = first_row To last_row
            
                        cell_1 = "A" + CStr(i)
                        
                        If CStr(sheet_xls_2.Range(cell_1).value) = CStr(Position_number_textbox.Text) Then
                        
                                Row_no_textbox.Text = CStr(i)
                                
                                unlock_xls_1_2
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                                
                                lock_xls_1_2
                                
                                Edit_position_form.Show (1)
                                
                                unlock_xls_1_2
                                
                                cell_1 = "CA2"
                                
                                sheet_xls_2.Range(cell_1).value = ""
                                
                                lock_xls_1_2
                                
                                Unload Choice_position_edit_form
                                
                                Exit Sub
                            
                            End If
                        
                    Next i
                    
                    MsgBox error_pos_exist_text, vbInformation, msgbox_title_2
                    
                Else
                
                    cell_1 = "A" + CStr(Row_no_textbox.Text)
                
                    If CStr(sheet_xls_2.Range(cell_1).value) = "" Or CDbl(Row_no_textbox.Text) < 8 Then
                    
                            MsgBox error_row_pos_exist_text, vbInformation, msgbox_title_2
                    
                        Else
                                
                            unlock_xls_1_2
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = Row_no_textbox.Text
                            
                            lock_xls_1_2
                                
                            Edit_position_form.Show (1)
                                
                            unlock_xls_1_2
                            
                            cell_1 = "CA2"
                            
                            sheet_xls_2.Range(cell_1).value = ""
                            
                            lock_xls_1_2
                            
                            Unload Choice_position_edit_form
                            
                            Exit Sub
                        
                        End If
                        
                End If
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Position_no_optionbutton_Click()

    If Position_no_optionbutton.value Then
    
            Position_number_textbox.Enabled = True
            Row_no_textbox.Enabled = False
    
        End If

End Sub

Private Sub Row_no_optionbutton_Click()

    If Row_no_optionbutton.value Then
    
            Row_no_textbox.Enabled = True
            Position_number_textbox.Enabled = False
    
        End If

End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If (Not (isLong(Position_number_textbox.Text))) And Position_no_optionbutton.value Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If (Not (isLong(Row_no_textbox.Text))) And Row_no_optionbutton.value Then
    
            error_text = error_row_num_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "Edit_bolt_form"
Attribute VB_Base = "0{30378846-84DD-4927-A2DE-A179874C8196}{4B7CF95D-64D9-482B-9C86-0C495067CEE6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click() 'PREVEDENO NA BOLT

    Unload Edit_bolt_form

End Sub

Private Sub Name_combobox_Change() 'PREVEDENO NA BOLT

    If Not (StrComp(Mem_box2_text.Text, Name_combobox.Text) = 0) Then
    
            Dim norm_pos As Long
            Dim norm_name As String
            Dim norm_norm As String
            Dim norm_mat As String
            Dim norm_note As String
            Dim norm_weight As Double
            
            Dim in_ok As Boolean
            Dim i As Long
            
            in_ok = False
            
            For i = 1 To UBound(Name_combobox.Column, 2)
            
                If StrComp(Name_combobox.Text, Name_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Name_combobox.Column, 2)
                        
                    End If
            
            Next i
                    
            If (Not (Name_combobox.Text = "-")) And in_ok Then
                    
                    If get_norm_bolt_data(Norm_combobox.Text, norm_pos, norm_name, Name_combobox.Text, norm_norm, norm_mat, norm_note, norm_weight) Then
    
                            'is_standard_checkbox.value = True
                            
                            If norm_pos > 0 Then
                            
                                    Position_number_textbox.Text = CStr(norm_pos)
                                    
                                End If
                            
                            Position_name_textbox.Text = norm_name
                            Position_dimension_textbox.Text = Name_combobox.Text
                            Position_norm_textbox.Text = norm_norm
                            Position_material_textbox.Text = norm_mat
                            Position_note_textbox.Text = norm_note
                            Position_weight_textbox.Text = norm_weight
                            
                            Position_number_textbox.SetFocus
                                
                            'Position_dimension_textbox_Change
                    
                        End If
                        
                Else
                
                    If Not (UBound(Name_combobox.List, 1) = -1) Then
                
                            Name_combobox.Text = "-"
                
                        End If
                
                    'is_standard_checkbox.value = False
                        
                End If
            
            Mem_box2_text.Text = Name_combobox.Text
        
        End If

End Sub

Private Sub Norm_combobox_change() 'PREVEDENO NA BOLT

    If Not (StrComp(Mem_box1_text.Text, Norm_combobox.Text) = 0) Then
    
            Dim bolt_list() As String
            Dim i As Long
            
            Dim in_ok As Boolean
            
            in_ok = False
            
            For i = 1 To UBound(Norm_combobox.Column, 2)
            
                If StrComp(Norm_combobox.Text, Norm_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Norm_combobox.Column, 2)
                        
                    End If
            
            Next i

            'zmena seznamu rozmeru profilu
            
            Name_combobox.Clear
                    
            If in_ok Then
                    
                    If get_norm_bolts(Norm_combobox.Text, bolt_list) Then
                    
                            Name_combobox.AddItem "-"
                            
                            For i = 0 To UBound(bolt_list)
                            
                                If Not (bolt_list(i) = "") Then
                            
                                        Name_combobox.AddItem (bolt_list(i))
                                        
                                    End If
                            
                            Next i
                            
                            Name_combobox.Text = "-"
                    
                        End If
                        
                Else
                
                    Name_combobox.AddItem "-"
                    Name_combobox.Text = "-"
                    Norm_combobox.Text = "-"
                        
                End If
            
            'Name_combobox.AddItem ("pokus")
            
            'Name_combobox.Clear
            
            Mem_box1_text.Text = Norm_combobox.Text
        
        End If

End Sub

Private Sub OK_button_Click() 'PREVEDENO NA BOLT
    
    Dim error_text As String
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim sheet_xls_3 As Worksheet
            
            Dim changed_area As area_limits
            
            Dim pos_list() As position
            Dim h_str As String
            Dim last_row As Long
            Dim i As Long

            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(3)
            Set sheet_xls_3 = book_xls.Worksheets(2)
            
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If (CStr(sheet_xls_2.Range(cell_1).value) = CStr(Position_number_textbox.Text)) And (Not (CLng(row_pos_temp_textbox.Text) = i)) Then
                
                        MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                        
                        Exit Sub
                
                    End If
            
            Next i
            
            last_row = sheet_xls_3.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If CStr(sheet_xls_3.Range(cell_1).value) = CStr(Position_number_textbox.Text) Then
                
                        MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                        
                        Exit Sub
                
                    End If
            
            Next i
            
            unlock_xls_1_3

            cell_1 = "A" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = CLng(Position_number_textbox.Text)
    
            cell_1 = "C" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_name_textbox.Text
            
            cell_1 = "D" + CStr(row_pos_temp_textbox.Text)
            
            If IsNumeric(Position_dimension_textbox.Text) Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_dimension_textbox.Text)
            
                Else
                
                    h_str = "'" + Position_dimension_textbox.Text
            
                    sheet_xls_2.Range(cell_1).value = h_str
                    
                End If
            
            cell_1 = "E" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
            
            cell_1 = "F" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
            
            cell_1 = "G" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
            
            cell_1 = "H" + CStr(row_pos_temp_textbox.Text)
            
            If Not (Position_weight_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_weight_textbox.Text)
                    
                End If
        
            cell_1 = "BA" + CStr(row_pos_temp_textbox.Text)
            
            If Not (Position_empty_rows_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CLng(Position_empty_rows_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = ""
                    
                End If
                
            lock_xls_1_3
            
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
                
                End If
                
            Unload Edit_bolt_form

        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If
        
End Sub

Private Sub UserForm_Activate() 'PREVEDENO NA BOLT

    Dim norm_list() As String

    Dim i As Long
    
    Dim book_xls As Workbook
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_2 = book_xls.Worksheets(3)
    
    cell_1 = "CA2"
    i = CLng(sheet_xls_2.Range(cell_1).value)
    
    row_pos_temp_textbox.Text = CStr(i)
                    
    cell_1 = "A" + CStr(i)
    Position_number_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "C" + CStr(i)
    Position_name_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "D" + CStr(i)
    Position_dimension_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "E" + CStr(i)
    Position_norm_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "F" + CStr(i)
    Position_material_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "G" + CStr(i)
    Position_note_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "H" + CStr(i)
    Position_weight_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    'cell_1 = "J" + CStr(i)
    'Position_area_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "BA" + CStr(i)
    Position_empty_rows_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    'vlozeni norem do listboxu
    
    If get_bolt_norms_from_database(norm_list) Then
    
            Norm_combobox.AddItem ("-")
            Name_combobox.AddItem ("-")
            'Norm_listbox.AddItem ("")
    
            For i = 0 To UBound(norm_list)
            
                Norm_combobox.AddItem (norm_list(i))
                'Norm_listbox.AddItem (norm_list(i))
        
            Next i
            
            Mem_box1_text.Text = "-"
            Mem_box2_text.Text = "-"
            
            Norm_combobox.Text = "-"
            Name_combobox.Text = "-"
            'Norm_listbox.Text = ("")
    
        End If
    
End Sub

Private Function check_values(error_text As String) As Boolean 'PREVEDENO NA BOLT

    check_values = True
    
    If Not (isLong(Position_number_textbox.Text)) Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_name_textbox.Text = "" Then
    
            error_text = error_name_description_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_weight_textbox.Text)) And Not (Position_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    'If Not (IsNumeric(Position_area_textbox.Text)) And Not (Position_area_textbox.Text = "") Then
    
            'error_text = error_area_pc_text
            
            'check_values = False
            
            'Exit Function
    
        'End If
    
    If Not (isLong(Position_empty_rows_textbox.Text)) And Not (Position_empty_rows_textbox.Text = "0") And Not (Position_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "Edit_free_group_form"
Attribute VB_Base = "0{91DEC787-CC0E-45A0-B1BA-3F92D7CEBFA4}{0DB845D3-4E4C-471C-8A84-714D8C3D81BD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click()

    Unload Edit_free_group_form

End Sub

Private Sub OK_button_Click()
    
    Dim error_text As String
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            
            Dim free_group_list() As free_group
            Dim h_str As String
            Dim last_row As Long
            Dim i As Long

            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(4)
            
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If (CStr(sheet_xls_2.Range(cell_1).value) = CStr(Free_group_number_textbox.Text)) And (Not (CLng(row_free_group_temp_textbox.Text) = i)) Then
                
                        MsgBox error_free_group_duplicity_text, vbInformation, msgbox_title_2
                        
                        Exit Sub
                
                    End If
            
            Next i
            
            unlock_xls_1_4
            
            cell_1 = "A" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = CLng(Free_group_number_textbox.Text)

            cell_1 = "B" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = CLng(Free_group_pcs_textbox.Text)
    
            cell_1 = "C" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Free_group_name_textbox.Text
            
            cell_1 = "D" + CStr(row_free_group_temp_textbox.Text)
            
            If IsNumeric(Free_group_dimension_textbox.Text) Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Free_group_dimension_textbox.Text)
            
                Else
                
                    h_str = "'" + Free_group_dimension_textbox.Text
            
                    sheet_xls_2.Range(cell_1).value = h_str
                    
                End If
            
            cell_1 = "E" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Free_group_norm_textbox.Text
            
            cell_1 = "F" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Free_group_material_textbox.Text
            
            cell_1 = "G" + CStr(row_free_group_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Free_group_note_textbox.Text
            
            cell_1 = "H" + CStr(row_free_group_temp_textbox.Text)
            
            If Not (Free_group_weight_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = 0
                    
                End If
            
            cell_1 = "I" + CStr(row_free_group_temp_textbox.Text)
            
            If Not (Free_group_weight_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text) * CLng(Free_group_pcs_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = 0
                    
                End If
            
            cell_1 = "AA" + CStr(row_free_group_temp_textbox.Text)
            
            If Not (Free_group_weight_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text) * CLng(Free_group_pcs_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = 0
                    
                End If
        
            cell_1 = "BA" + CStr(row_free_group_temp_textbox.Text)
            
            If Not (Free_group_empty_rows_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CLng(Free_group_empty_rows_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = ""
                    
                End If
                
            lock_xls_1_4
                                    
            'reload volnych skupin
            
            If get_free_groups(free_group_list, error_text) Then
            
                    reload_free_groups free_group_list
                
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
                
            Unload Edit_free_group_form

        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If Not (isLong(Free_group_number_textbox.Text)) Then
    
            error_text = error_free_group_num_text
            
            check_values = False
            
            Exit Function
            
        Else
        
            If CLng(Free_group_number_textbox.Text) > 999 Then
            
                    error_text = error_free_group_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
    
        End If
    
    If Not (isLong(Free_group_pcs_textbox.Text)) Then
    
            error_text = error_free_group_pcs_text
            
            check_values = False
            
            Exit Function
            
        End If
    
    'If Free_group_name_textbox.Text = "" Then
    
            'error_text = error_name_description_text
            
            'check_values = False
            
            'Exit Function
    
        'End If
    
    If Not (IsNumeric(Free_group_weight_textbox.Text)) And Not (Free_group_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (isLong(Free_group_empty_rows_textbox.Text)) And Not (Free_group_empty_rows_textbox.Text = "0") And Not (Free_group_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function

Private Sub UserForm_Activate()

    Dim norm_list() As String

    Dim i As Long
    
    Dim book_xls As Workbook
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_2 = book_xls.Worksheets(4)
    
    cell_1 = "CA2"
    i = CLng(sheet_xls_2.Range(cell_1).value)
    
    row_free_group_temp_textbox.Text = CStr(i)
                    
    cell_1 = "A" + CStr(i)
    Free_group_number_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "B" + CStr(i)
    Free_group_pcs_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "C" + CStr(i)
    Free_group_name_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "D" + CStr(i)
    Free_group_dimension_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "E" + CStr(i)
    Free_group_norm_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "F" + CStr(i)
    Free_group_material_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "G" + CStr(i)
    Free_group_note_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "H" + CStr(i)
    Free_group_weight_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "BA" + CStr(i)
    Free_group_empty_rows_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
        
End Sub
Attribute VB_Name = "Edit_position_form"
Attribute VB_Base = "0{1DA90183-6151-420E-BE2B-5AD18AEBBC1A}{E9BEB637-AA3C-454F-967E-5582F9E70EAC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Plate_weight_correction_textbox_Change()

    If IsNumeric(Plate_weight_correction_textbox.Text) And IsNumeric(plate_thickness_textbox.Text) Then
    
            Position_dimension_textbox_Change
            
        Else
        
            Plate_weight_correction_textbox.Text = ""
            Position_dimension_textbox_Change
            
        End If

End Sub

Private Sub Cancel_button_Click()

    Unload Edit_position_form

End Sub

Private Sub insert_area_checkbox_Click()

    If insert_area_checkbox.value Then
    
            If is_standard_checkbox.value Or Not (plate_thickness_textbox.Text = "") Then
            
                    Position_dimension_textbox_Change
            
                End If
    
        Else
        
            Position_area_textbox.Text = ""
        
        End If

End Sub

Private Sub is_standard_checkbox_Change()

    If is_standard_checkbox.value Then
    
            is_standard_checkbox.Caption = "Position is normalized"
            is_standard_checkbox.Enabled = True
    
            Position_name_textbox.Enabled = False
            Position_norm_textbox.Enabled = False
            Position_weight_textbox.Enabled = False
            Position_area_textbox.Enabled = False
            Position_name_label.Enabled = False
            Position_norm_label.Enabled = False
            Position_weight_label.Enabled = False
            Position_area_label.Enabled = False
            'Norm_code_textbox.Enabled = False
            Norm_combobox.Enabled = False
            Name_combobox.Enabled = False
            'Norm_code_label.Enabled = False
            Norm_label.Enabled = False
            Name_label.Enabled = False
            plate_thickness_textbox.Enabled = False
            plate_thickness_label.Enabled = False
            
            Position_number_textbox.SetFocus
    
        Else
        
            is_standard_checkbox.Caption = "Position is not normalized"
            is_standard_checkbox.Enabled = False
            Position_name_textbox.Enabled = True
            Position_norm_textbox.Enabled = True
            Position_weight_textbox.Enabled = True
            Position_area_textbox.Enabled = True
            Position_name_label.Enabled = True
            Position_norm_label.Enabled = True
            Position_weight_label.Enabled = True
            Position_area_label.Enabled = True
            'Norm_code_textbox.Enabled = True
            Norm_combobox.Enabled = True
            Name_combobox.Enabled = True
            'Norm_code_label.Enabled = True
            Norm_label.Enabled = True
            Name_label.Enabled = True
            plate_thickness_textbox.Enabled = True
            plate_thickness_label.Enabled = True
            Normed_weight_textbox.value = ""
            Normed_area_textbox.value = ""
            plate_thickness_textbox.Enabled = True
            plate_thickness_label.Enabled = True
            
            Name_combobox.Text = "-"
            
            Position_number_textbox.SetFocus
        
        End If

End Sub

Private Sub Name_combobox_Change()

    If Not (StrComp(Mem_box2_text.Text, Name_combobox.Text) = 0) Then
    
            Dim norm_weight As Double
            Dim norm_area As Double
            
            Dim in_ok As Boolean
            Dim i As Long
            
            in_ok = False
            
            For i = 1 To UBound(Name_combobox.Column, 2)
            
                If StrComp(Name_combobox.Text, Name_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Name_combobox.Column, 2)
                        
                    End If
            
            Next i
                    
            If (Not (Name_combobox.Text = "-")) And in_ok Then
                    
                    If get_norm_shape_data(Norm_combobox.Text, Name_combobox.Text, norm_weight, norm_area) Then
    
                            is_standard_checkbox.value = True
                            
                            Position_name_textbox.Text = Name_combobox.Text
                            Position_norm_textbox.Text = short_norm(Norm_combobox.Text)
                            Normed_weight_textbox.Text = norm_weight
                            Normed_area_textbox.Text = norm_area
                                
                            Position_dimension_textbox_Change
                    
                        End If
                        
                Else
                
                    If Not (UBound(Name_combobox.List, 1) = -1) Then
                
                            Name_combobox.Text = "-"
                
                        End If
                
                    is_standard_checkbox.value = False
                        
                End If
            
            Mem_box2_text.Text = Name_combobox.Text
        
        End If

End Sub

Private Sub Norm_combobox_change()

    If Not (StrComp(Mem_box1_text.Text, Norm_combobox.Text) = 0) Then
    
            Dim shape_list() As String
            Dim i As Long
            
            Dim in_ok As Boolean
            
            in_ok = False
            
            For i = 1 To UBound(Norm_combobox.Column, 2)
            
                If StrComp(Norm_combobox.Text, Norm_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Norm_combobox.Column, 2)
                        
                    End If
            
            Next i

            'zmena seznamu rozmeru profilu
            
            Name_combobox.Clear
                    
            If in_ok Then
                    
                    If get_norm_shapes(Norm_combobox.Text, shape_list) Then
                    
                            Name_combobox.AddItem "-"
                            
                            For i = 0 To UBound(shape_list)
                            
                                If Not (shape_list(i) = "") Then
                            
                                        Name_combobox.AddItem (shape_list(i))
                                        
                                    End If
                            
                            Next i
                            
                            Name_combobox.Text = "-"
                    
                        End If
                        
                Else
                
                    Name_combobox.AddItem "-"
                    Name_combobox.Text = "-"
                    Norm_combobox.Text = "-"
                        
                End If
            
            'Name_combobox.AddItem ("pokus")
            
            'Name_combobox.Clear
            
            Mem_box1_text.Text = Norm_combobox.Text
        
        End If

End Sub

Private Sub OK_button_Click()
    
    Dim error_text As String
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim sheet_xls_3 As Worksheet
            
            Dim changed_area As area_limits
            
            Dim pos_list() As position
            Dim h_str As String
            Dim last_row As Long
            Dim i As Long

            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
            Set sheet_xls_3 = book_xls.Worksheets(3)
            
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If (CStr(sheet_xls_2.Range(cell_1).value) = CStr(Position_number_textbox.Text)) And (Not (CLng(row_pos_temp_textbox.Text) = i)) Then
                
                        MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                        
                        Exit Sub
                
                    End If
            
            Next i
            
            last_row = sheet_xls_3.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If CStr(sheet_xls_3.Range(cell_1).value) = CStr(Position_number_textbox.Text) Then
                
                        MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                        
                        Exit Sub
                
                    End If
            
            Next i
            
            unlock_xls_1_2

            cell_1 = "A" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = CLng(Position_number_textbox.Text)
    
            cell_1 = "C" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_name_textbox.Text
            
            cell_1 = "D" + CStr(row_pos_temp_textbox.Text)
            
            If IsNumeric(Position_dimension_textbox.Text) Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_dimension_textbox.Text)
            
                Else
                
                    h_str = "'" + Position_dimension_textbox.Text
            
                    sheet_xls_2.Range(cell_1).value = h_str
                    
                End If
            
            cell_1 = "E" + CStr(row_pos_temp_textbox.Text)
            
            If IsNumeric(Position_plate_dimension_textbox.Text) Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_plate_dimension_textbox.Text)
            
                Else
                
                    h_str = "'" + Position_plate_dimension_textbox.Text
            
                    sheet_xls_2.Range(cell_1).value = h_str
                    
                End If
            
            cell_1 = "F" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
            
            cell_1 = "G" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
            
            cell_1 = "H" + CStr(row_pos_temp_textbox.Text)
            sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
            
            cell_1 = "I" + CStr(row_pos_temp_textbox.Text)
            
            If Not (Position_weight_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_weight_textbox.Text)
                    
                End If

            cell_1 = "J" + CStr(row_pos_temp_textbox.Text)
            
            If Not (Position_area_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CDbl(Position_area_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = ""
                    
                End If
        
            cell_1 = "BA" + CStr(row_pos_temp_textbox.Text)
            
            If Not (Position_empty_rows_textbox.Text = "") Then
            
                    sheet_xls_2.Range(cell_1).value = CLng(Position_empty_rows_textbox.Text)
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = ""
                    
                End If
                
            If is_standard_checkbox.value And IsNumeric(Normed_weight_textbox.Text) Then
            
                    cell_1 = "BC" + CStr(row_pos_temp_textbox.Text)
                    sheet_xls_2.Range(cell_1).value = 1
                    
                    cell_1 = "BD" + CStr(row_pos_temp_textbox.Text)
                    sheet_xls_2.Range(cell_1).value = CDbl(Normed_weight_textbox.Text)
                    
                    If IsNumeric(Normed_area_textbox.Text) Then
                    
                            cell_1 = "BE" + CStr(row_pos_temp_textbox.Text)
                            sheet_xls_2.Range(cell_1).value = CDbl(Normed_area_textbox.Text)
                            
                        End If
                        
                Else
                    
                    If IsNumeric(plate_thickness_textbox.Text) Then
                    
                            cell_1 = "BG" + CStr(row_pos_temp_textbox.Text)
                            sheet_xls_2.Range(cell_1).value = CDbl(plate_thickness_textbox.Text)
            
                            cell_1 = "BH" + CStr(row_pos_temp_textbox.Text)
                            
                            If IsNumeric(Plate_weight_correction_textbox.Text) Then
                            
                                    sheet_xls_2.Range(cell_1).value = CDbl(Plate_weight_correction_textbox.Text)
                                    
                                Else
                                
                                    sheet_xls_2.Range(cell_1).value = ""
                                    
                                End If
        
                            cell_1 = "BI" + CStr(row_pos_temp_textbox.Text)
                            sheet_xls_2.Range(cell_1).value = Plate_short_name_textbox.Text
                            
                        End If
                        
                    cell_1 = "BC" + CStr(row_pos_temp_textbox.Text)
                    sheet_xls_2.Range(cell_1).value = ""
                    
                    cell_1 = "BD" + CStr(row_pos_temp_textbox.Text)
                    sheet_xls_2.Range(cell_1).value = ""
                    
                    cell_1 = "BE" + CStr(row_pos_temp_textbox.Text)
                    sheet_xls_2.Range(cell_1).value = ""
            
                End If

            cell_1 = "CA1"
            
            If insert_area_checkbox.value Then
                
                    sheet_xls_2.Range(cell_1).value = 1
                    
                Else
                
                    sheet_xls_2.Range(cell_1).value = ""
                    
                End If
                
            lock_xls_1_2
            
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
                
                End If
                
            Unload Edit_position_form

        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Plate_short_name_textbox_Change()

    If Plate_short_name_textbox.Text = "" Then
    
            Position_name_textbox.Text = plate_short_name + plate_thickness_textbox.Text
                    
            If Position_norm_textbox.Text = "" Then
            
                    Position_norm_textbox.Text = plate_norm
            
                End If
            
        Else
        
            Position_name_textbox.Text = Plate_short_name_textbox.Text
                    
            If Position_norm_textbox.Text = plate_norm Then
            
                    Position_norm_textbox.Text = ""
            
                End If
        
        End If

End Sub

Private Sub plate_thickness_textbox_Change()

    If IsNumeric(CStr(plate_thickness_textbox.Text)) Then
    
            If CDbl(plate_thickness_textbox.Text) >= 0 Then
                                                            
                    Position_plate_dimension_textbox.Enabled = True
                    Position_plate_dimension_label.Enabled = True
                                                            
                    'Norm_code_textbox.Enabled = False
                    Norm_combobox.Enabled = False
                    Name_combobox.Enabled = False
                    'Norm_code_label.Enabled = False
                    Norm_label.Enabled = False
                    Name_label.Enabled = False
            
                    Position_name_textbox.Enabled = False
                    Position_weight_textbox.Enabled = False
                    Position_area_textbox.Enabled = False
                    Position_name_label.Enabled = False
                    Position_weight_label.Enabled = False
                    Position_area_label.Enabled = False
                    
                    Plate_weight_correction_label.Enabled = True
                    Plate_short_name_label.Enabled = True
                    Plate_weight_correction_textbox.Enabled = True
                    Plate_short_name_textbox.Enabled = True
                    Plate_weight_correction_textbox.Locked = False
                    Plate_short_name_textbox.Locked = False
                    
                    If Plate_short_name_textbox.Text = "" Then
                    
                            Position_name_textbox.Text = plate_short_name + plate_thickness_textbox.Text
                            
                        Else
                        
                            Position_name_textbox.Text = Plate_short_name_textbox.Text
                        
                        End If
                    
                    Position_dimension_textbox_Change
                    
                    If Position_norm_textbox.Text = "" And Plate_short_name_textbox.Text = "" Then
                    
                            Position_norm_textbox.Text = plate_norm
                    
                        End If
    
                Else
                
                    MsgBox error_plate_thickness_text, vbInformation, msgbox_title_2
            
                    plate_thickness_textbox.Text = ""
                
                End If
    
        Else
        
            If Not (CStr(plate_thickness_textbox.Text) = "") Then
            
                    MsgBox error_plate_thickness_text, vbInformation, msgbox_title_2
            
                    plate_thickness_textbox.Text = ""
                    
                Else
                                                                                                    
                    Position_plate_dimension_textbox.Text = ""
                    Position_plate_dimension_textbox.Enabled = False
                    Position_plate_dimension_label.Enabled = False
                                                            
                    'Norm_code_textbox.Enabled = True
                    Norm_combobox.Enabled = True
                    Name_combobox.Enabled = True
                    'Norm_code_label.Enabled = True
                    Norm_label.Enabled = True
                    Name_label.Enabled = True
            
                    Position_name_textbox.Enabled = True
                    Position_weight_textbox.Enabled = True
                    Position_area_textbox.Enabled = True
                    Position_name_label.Enabled = True
                    Position_weight_label.Enabled = True
                    Position_area_label.Enabled = True
                    
                    Plate_weight_correction_label.Enabled = False
                    Plate_short_name_label.Enabled = False
                    Plate_weight_correction_textbox.Enabled = False
                    Plate_short_name_textbox.Enabled = False
                    Plate_weight_correction_textbox.Locked = True
                    Plate_short_name_textbox.Locked = True
            
                End If
                
            
        
        End If

End Sub

Private Sub Position_dimension_textbox_Change()

    If is_standard_checkbox.value Then
    
            Position_weight_textbox.Text = ""
            Position_area_textbox.Text = ""
    
            If IsNumeric(Position_dimension_textbox.Text) Then
            
                    If CDbl(Position_dimension_textbox.Text) > 0 Then
            
                            Position_weight_textbox.Text = CStr(((CDbl(Position_dimension_textbox.Text) * lenght_transition) * CDbl(Normed_weight_textbox.Text)))
                            
                            If insert_area_checkbox.value Then
                            
                                    Position_area_textbox.Text = CStr(((CDbl(Position_dimension_textbox.Text) * lenght_transition) * CDbl(Normed_area_textbox.Text)))
                            
                                Else
                                
                                    Position_area_textbox.Text = ""
                                
                                End If
                                
                        Else
                        
                            MsgBox error_norm_dimension_text, vbInformation, msgbox_title_2
                            
                            Position_dimension_textbox.Text = ""
                        
                        End If
            
                Else
                
                    If Not (Position_dimension_textbox.Text = "") Then
                        
                            MsgBox error_norm_dimension_text, vbInformation, msgbox_title_2
                            
                            Position_dimension_textbox.Text = ""
                            
                        End If
                
                End If
    
        Else
        
            If Not (plate_thickness_textbox.Text = "") Then
    
                    Position_weight_textbox.Text = ""
                    Position_area_textbox.Text = ""
            
                    If IsNumeric(Position_dimension_textbox.Text) Then
                    
                            If CDbl(Position_dimension_textbox.Text) > 0 Then
                            
                                    If IsNumeric(Position_plate_dimension_textbox.Text) Then
                                    
                                            If CDbl(Position_plate_dimension_textbox.Text) > 0 Then
                                            
                                                    If Not (Plate_weight_correction_textbox.Text = "") Then

                                                            Position_weight_textbox.Text = CStr((((CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * CDbl(plate_thickness_textbox.Text)) * (lenght_transition ^ 3)) * material_density * (CDbl(Plate_weight_correction_textbox.Text) / 100)))

                                                        Else

                                                            Position_weight_textbox.Text = CStr((((CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * CDbl(plate_thickness_textbox.Text)) * (lenght_transition ^ 3)) * material_density))
                                                            
                                                        End If
                                                    
                                                    If insert_area_checkbox.value Then
                                                    
                                                            If Not (Plate_weight_correction_textbox.Text = "") Then
                                                    
                                                                    Position_area_textbox.Text = CStr(2 * (CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * (lenght_transition ^ 2) * (CDbl(Plate_weight_correction_textbox.Text) / 100)))
                                                                    
                                                                Else
                                                                
                                                                    Position_area_textbox.Text = CStr(2 * (CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * (lenght_transition ^ 2)))
                                                                    
                                                                End If
                                                    
                                                        Else
                                                        
                                                            Position_area_textbox.Text = ""
                                                        
                                                        End If
                                                        
                                                End If
                                                
                                        End If
                                        
                                Else
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_dimension_textbox.Text = ""
                                
                                End If
                    
                        Else
                        
                            If Not (Position_dimension_textbox.Text = "") Then
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_dimension_textbox.Text = ""
                                    
                                End If
                        
                        End If
                                            
                    If IsNumeric(Position_plate_dimension_textbox.Text) Then
                    
                            If Not (CDbl(Position_plate_dimension_textbox.Text) > 0) Then
                            
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_plate_dimension_textbox.Text = ""
                            
                                End If
                                
                        Else
                        
                            If Not (Position_plate_dimension_textbox.Text = "") Then
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_plate_dimension_textbox.Text = ""
                                    
                                End If
                                
                        End If
                
                End If
    
        End If
        
End Sub

Private Sub Position_empty_rows_textbox_Change()

    'If Not (Position_empty_rows_textbox.Text = "") Then

            'If IsNumeric(Position_empty_rows_textbox.Text) Then
            
                    'If Not (isLong(Position_empty_rows_textbox.Text)) Then
                    
                            'Position_empty_rows_textbox.Text = ""
                    
                        'End If
                        
                'Else
                
                    'Position_empty_rows_textbox.Text = ""
                
                'End If
                
        'End If

End Sub

Private Sub Position_plate_dimension_textbox_Change()

    Position_dimension_textbox_Change

End Sub

Private Sub UserForm_Activate()

    Dim norm_list() As String

    Dim i As Long
    
    Dim book_xls As Workbook
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_2 = book_xls.Worksheets(2)
    
    cell_1 = "CA2"
    i = CLng(sheet_xls_2.Range(cell_1).value)
    
    row_pos_temp_textbox.Text = CStr(i)
                    
    cell_1 = "A" + CStr(i)
    Position_number_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "C" + CStr(i)
    Position_name_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "D" + CStr(i)
    Position_dimension_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "F" + CStr(i)
    Position_norm_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "G" + CStr(i)
    Position_material_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "H" + CStr(i)
    Position_note_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
    
    cell_1 = "I" + CStr(i)
    Position_weight_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "J" + CStr(i)
    Position_area_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "BA" + CStr(i)
    Position_empty_rows_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

    cell_1 = "BC" + CStr(i)
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "1" Then
    
            cell_1 = "BD" + CStr(i)
            
            If IsNumeric(CStr(sheet_xls_2.Range(cell_1).value)) Then
    
                    is_standard_checkbox.value = True
                    Normed_weight_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
            
                    cell_1 = "BE" + CStr(i)
                    
                    If IsNumeric(CStr(sheet_xls_2.Range(cell_1).value)) Then
                    
                            Normed_area_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
                            
                        End If
                        
                    Position_dimension_textbox_Change
                    
                Else
                
                    is_standard_checkbox.value = False
                    
                End If
                
        Else
        
            is_standard_checkbox.value = False
    
            cell_1 = "BG" + CStr(i)
            
            If IsNumeric(CStr(sheet_xls_2.Range(cell_1).value)) Then
                    
                    cell_1 = "E" + CStr(i)
                    Position_plate_dimension_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

                    cell_1 = "BG" + CStr(i)
                    plate_thickness_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)

                    cell_1 = "BH" + CStr(i)
                    
                    If IsNumeric(sheet_xls_2.Range(cell_1).value) Then
                    
                            Plate_weight_correction_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
                            
                        End If

                    cell_1 = "BI" + CStr(i)
                    Plate_short_name_textbox.Text = CStr(sheet_xls_2.Range(cell_1).value)
            
                End If
        
        End If

    cell_1 = "CA1"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "1" Then
        
            insert_area_checkbox.value = True
            
        End If
    
    'vlozeni norem do listboxu
    
    If get_shape_norms_from_database(norm_list) Then
    
            Norm_combobox.AddItem ("-")
            Name_combobox.AddItem ("-")
            'Norm_listbox.AddItem ("")
    
            For i = 0 To UBound(norm_list)
            
                Norm_combobox.AddItem (norm_list(i))
                'Norm_listbox.AddItem (norm_list(i))
        
            Next i
            
            Mem_box1_text.Text = "-"
            Mem_box2_text.Text = "-"
            
            Norm_combobox.Text = "-"
            Name_combobox.Text = "-"
            'Norm_listbox.Text = ("")
    
        End If
    
End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If Not (isLong(Position_number_textbox.Text)) Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_name_textbox.Text = "" Then
    
            error_text = error_name_description_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_weight_textbox.Text)) And Not (Position_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_area_textbox.Text)) And Not (Position_area_textbox.Text = "") Then
    
            error_text = error_area_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (isLong(Position_empty_rows_textbox.Text)) And Not (Position_empty_rows_textbox.Text = "0") And Not (Position_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_plate_dimension_textbox.Enabled And (Position_plate_dimension_textbox.Text = "" Or Position_dimension_textbox.Text = "") Then
    
            error_text = error_plate_dim_exist_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "External_data_as01_form"
Attribute VB_Base = "0{A86ABDDF-4C18-4980-AFC6-61CC2C7802C9}{BA0B11DF-19ED-4130-9AAD-2E7A8C604696}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload External_data_as01_form

End Sub

Private Sub Empty_rows_textbox_Change()

    If Not (isLong(Empty_rows_textbox.Text)) Then
    
            If Not (IsNumeric(Empty_rows_textbox.Text)) Then
    
                    MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                    
                    Empty_rows_textbox.Text = "1"
                    
                Else
                
                    If Not (CDbl(Empty_rows_textbox.Text) = 0) Then
    
                            MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                            
                            Empty_rows_textbox.Text = "1"
                    
                        End If
                
                End If
                
        End If

End Sub

Private Sub Insert_file_button_Click()

    Dim file_name As String
    
    If SelectFileOpenDialog("Exported data from Advancesteel", "txt", file_name) Then
    
            File_path_textbox.Text = file_name
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim fso, text_file
    Dim row_values() As String
    
    Dim file_name As String
    Dim row_string As String
    Dim row_no As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    
    Dim part_no As Long
    Dim part_pc As Long
    Dim bolt_no As Long
    Dim bolt_pc As Long
    Dim part_name As String
    Dim part_row As Long
    Dim pos_row As Long
    
    Dim pos_list() As position
    Dim part_list() As parts
    'Dim pos_sum_list() As pos_sum
    
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    'Dim sheet_xls_4 As Worksheet
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    Dim write_pos As Boolean
    Dim last_row_1 As Long
    Dim last_row_2 As Long
    Dim last_row_3 As Long
    'Dim last_row_4 As Long
    Dim last_row_5 As Long
    'Dim lock_ind As Boolean
    
    ReDim pos_list(0)
    ReDim part_list(0)
    'ReDim pos_sum_list(0)
    
    Dim changed_area As area_limits
    Dim error_text As String
    
    part_no = 0
    file_name = File_path_textbox.Text
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(file_name) Then

            Set text_file = fso.OpenTextFile(file_name, 1, True, -2)
            
            row_no = 0

            Do While Not (text_file.AtEndOfStream)
                
                row_no = row_no + 1
                
                row_string = text_file.ReadLine
               
                If Not (row_string = "") Then
               
                        row_values = Split(row_string, ";")
                        
                        If Not (row_values(0) = "") Then
                        
                                'hlavicka dilce
                                
                                If check_part_in(row_values, part_no, part_pc, part_name) Then
                        
                                        If part_no > UBound(part_list) Then
                                        
                                                ReDim Preserve part_list(part_no)
                                            
                                            End If
                                            
                                        If part_list(part_no).pc = 0 Then
                                
                                                part_list(part_no).pc = part_pc
                                                part_list(part_no).part_name = part_name
                                                
                                                'If part_list(part_no).exist_pos Then
                                                
                                                        'For j = 1 To UBound(part_list(part_no).pos_list_short)
                        
                                                            'pos_sum_list(part_list(part_no).pos_list_short(j)).pc = pos_sum_list(part_list(part_no).pos_list_short(j)).pc + (part_list(part_no).pos_list(part_list(part_no).pos_list_short(j)).pc_part * part_list(part_no).pc)
                                                        
                                                        'Next j
                                                        
                                                    'End If
                                        
                                            Else
                                            
                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                                Exit Sub
                                            
                                            End If
                        
                                    Else
                                    
                                        MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                        Exit Sub
                        
                                    End If
                        
                            Else
                            
                                'zaznam pozice v dilci

                                If Not (Mid(row_values(1), 1, 4) = "Bolt" Or Mid(row_values(1), 1, 4) = "Anch") Then
                                
                                        If Not (Not (isLong(row_values(2))) Or Not (isLong(row_values(3))) Or (row_values(4) = "")) Then
                                        
                                                'If Not (Mid(row_values(1), 1, 4) = "Bolt") Then

                                                If CLng(row_values(2)) > UBound(pos_list) Then
                                                
                                                        ReDim Preserve pos_list(CLng(row_values(2)))
                                                    
                                                    End If
                                                    
                                                If pos_list(CLng(row_values(2))).name_description = "" Then
                                                
                                                        'nacist pozici pokud neni spojovak
                                                        
                                                        If Not (read_pos_import_file(pos_list, row_values)) Then
                                                    
                                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                                Exit Sub
                                                        
                                                            End If
                                                        
                                                    Else
                                                    
                                                        'kontrola nactene pozice
                                                        
                                                        If Not (check_pos_import_file(pos_list, row_values)) Then
                                                            
                                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                                Exit Sub
                                                        
                                                            End If
                                        
                                                    End If
                                                    
                                                    'End If
                                                    
                                                'nacist pozici do dilce
                                                
                                                If part_list(part_no).exist_pos Then
                                                
                                                        If CLng(row_values(2)) > UBound(part_list(part_no).pos_list) Then
                                                        
                                                                ReDim Preserve part_list(part_no).pos_list(CLng(row_values(2)))
                                                        
                                                            End If
                                                
                                                        ReDim Preserve part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short) + 1)
                                                
                                                    Else
                                                    
                                                        ReDim part_list(part_no).pos_list(CLng(row_values(2)))
                                                        ReDim part_list(part_no).pos_list_short(1)
                                                        part_list(part_no).exist_pos = True
                                                    
                                                    End If
                                                    
                                                If part_list(part_no).pos_list(CLng(row_values(2))).pc_part = 0 Then
                                                
                                                        part_list(part_no).pos_list(CLng(row_values(2))).pc_part = CLng(row_values(3))
                                                        part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short)) = CLng(row_values(2))
                                                
                                                    Else
                                            
                                                        MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                        Exit Sub
                                                    
                                                    End If
                                        
                                            Else
                                            
                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                        
                                                Exit Sub
                                            
                                            End If
                                    
                                    Else
                                    
                                        'nacist spojovak do dilce
                                        
                                        If get_bolt_split(row_values(12), bolt_no, bolt_pc) And isLong(row_values(3)) Then
                                                
                                                If part_list(part_no).exist_pos Then
                                                
                                                        If CLng(bolt_no) > UBound(part_list(part_no).pos_list) Then
                                                        
                                                                ReDim Preserve part_list(part_no).pos_list(CLng(bolt_no))
                                                        
                                                            End If
                                                            
                                                        If part_list(part_no).pos_list(CLng(bolt_no)).pc_part = 0 Then
                                                
                                                                ReDim Preserve part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short) + 1)
                                                                
                                                            End If
                                                
                                                    Else
                                                    
                                                        ReDim part_list(part_no).pos_list(CLng(bolt_no))
                                                        ReDim part_list(part_no).pos_list_short(1)
                                                        part_list(part_no).exist_pos = True
                                                    
                                                    End If
                                                    
                                                If part_list(part_no).pos_list(CLng(bolt_no)).pc_part = 0 Then
                                                
                                                        part_list(part_no).pos_list(CLng(bolt_no)).pc_part = (CLng(row_values(3)) * CLng(bolt_pc))
                                                        part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short)) = CLng(bolt_no)
                                                
                                                    Else
                                            
                                                        part_list(part_no).pos_list(CLng(bolt_no)).pc_part = part_list(part_no).pos_list(CLng(bolt_no)).pc_part + (CLng(row_values(3)) * CLng(bolt_pc))
                                            
                                                        'MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                        'Exit Sub
                                                    
                                                    End If
                                                        
                                                For k = 13 To 15
                                                        
                                                    If get_bolt_split(row_values(k), bolt_no, bolt_pc) Then
                                                            
                                                            If part_list(part_no).exist_pos Then
                                                            
                                                                    If CLng(bolt_no) > UBound(part_list(part_no).pos_list) Then
                                                                    
                                                                            ReDim Preserve part_list(part_no).pos_list(CLng(bolt_no))
                                                                    
                                                                        End If
                                                                    
                                                                    If part_list(part_no).pos_list(CLng(bolt_no)).pc_part = 0 Then
                                                                    
                                                                            ReDim Preserve part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short) + 1)
                                                                            
                                                                        End If
                                                            
                                                                Else
                                                                
                                                                    ReDim part_list(part_no).pos_list(CLng(bolt_no))
                                                                    ReDim part_list(part_no).pos_list_short(1)
                                                                    part_list(part_no).exist_pos = True
                                                                
                                                                End If
                                                                
                                                            If part_list(part_no).pos_list(CLng(bolt_no)).pc_part = 0 Then
                                                            
                                                                    part_list(part_no).pos_list(CLng(bolt_no)).pc_part = (CLng(row_values(3)) * CLng(bolt_pc))
                                                                    part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short)) = CLng(bolt_no)
                                                            
                                                                Else
                                                        
                                                                    part_list(part_no).pos_list(CLng(bolt_no)).pc_part = part_list(part_no).pos_list(CLng(bolt_no)).pc_part + (CLng(row_values(3)) * CLng(bolt_pc))
                                                        
                                                                    'MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                            
                                                                    'Exit Sub
                                                                
                                                                End If
                                                    
                                                        End If
                                                    
                                                Next k
                                                    
                                            Else
                                            
                                                MsgBox error_import_file_text_bolt_no + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                                Exit Sub
                                            
                                            End If
                                    
                                    End If

                            End If
                    
                    End If
            
            Loop
            
            'vymazani kusovniku

            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
            Set sheet_xls_3 = book_xls.Worksheets(3)
            'Set sheet_xls_4 = book_xls.Worksheets(4)
        
            last_row_1 = sheet_xls_1.UsedRange.Rows.Count
            last_row_2 = sheet_xls_2.UsedRange.Rows.Count
            last_row_3 = sheet_xls_3.UsedRange.Rows.Count
            'last_row_4 = sheet_xls_4.UsedRange.Rows.Count
            
            unlock_xls
            
            If (last_row_1 > first_row) Or (last_row_1 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_1)
                
                    sheet_xls_1.Rows(row_string).Delete
                
                End If
                
            If (last_row_2 > first_row) Or (last_row_2 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_2)
                
                    sheet_xls_2.Rows(row_string).Delete
                
                End If
                
            If (last_row_3 > first_row) Or (last_row_3 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_3)
                
                    sheet_xls_3.Rows(row_string).Delete
                
                End If
                
            'zapis nactenych dat
            
            If UBound(pos_list) > 0 Then
            
                    'pozice
                    
                    pos_row = 0
            
                    For i = 1 To UBound(pos_list)
                    
                        pos_row = pos_row + 1
                    
                        If Not (pos_list(i).name_description = "") Then
            
                                write_pos_import_file i, pos_list(i), sheet_xls_2, (first_row + pos_row - 1)
                                
                            Else
                            
                                pos_row = pos_row - 1
                                
                            End If
                        
                    Next i
                    
                    'dilce
                    
                    If UBound(part_list) > 0 Then
                    
                            part_row = first_row
                            
                            For i = 1 To UBound(part_list)
                            
                                part_row = part_row + 1
                            
                                If part_list(i).pc > 0 Then
                                
                                        cell_1 = "A" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = i
                                        
                                        cell_1 = "C" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = part_list(i).pc
                                        
                                        If part_list(i).exist_pos Then
                                        
                                                For j = 1 To UBound(part_list(i).pos_list_short)
                                                
                                                    part_row = part_row + 1
                                
                                                    cell_1 = "A" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = i
                                        
                                                    cell_1 = "B" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list_short(j)
                                                    
                                                    cell_1 = "C" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list(part_list(i).pos_list_short(j)).pc_part

                                                Next j
                                        
                                            End If
                                            
                                        part_row = part_row + CLng(Empty_rows_textbox.Text)
                                        
                                    Else
                                    
                                        part_row = part_row - 1
                                
                                    End If
                            
                            Next i
                        
                        End If
            
                End If
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            'zapsat jmena dilcu do csv
            
            Set sheet_xls_5 = book_xls.Worksheets(5)
            
            last_row_5 = sheet_xls_5.UsedRange.Rows.Count
            
            unlock_xls
                
            For i = first_row To last_row_5
                                
                cell_1 = "A" + CStr(i)
                
                j = CLng(sheet_xls_5.Range(cell_1).value)
                                        
                If Not (part_list(j).part_name = "") Then
                            
                        cell_1 = "C" + CStr(i)
                        
                        sheet_xls_5.Range(cell_1).value = ("'" + part_list(j).part_name)
                
                    End If
                                                
            Next i
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
        
            Unload External_data_as01_form

        Else
        
            MsgBox error_import_file_name_text, vbInformation, msgbox_title_5

        End If
        
    Set fso = Nothing
    
End Sub

Private Function check_part_in(part_string() As String, part_no As Long, part_pc As Long, part_name As String) As Boolean

    Dim i As Long
    'Dim j As Long
    'Dim left_side As Long
    'Dim right_side As Long
    Dim h_str As String
    'Dim h_dbl As Double
    
    h_str = ""
    
    part_no = 0
    part_pc = 0
    part_name = ""
    'left_side = 0
    'right_side = 0
    
    check_part_in = True

    For i = 1 To Len(part_string(0))
    
        If IsNumeric(Mid(part_string(0), i, 1)) Then
        
                h_str = h_str + Mid(part_string(0), i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If part_no = 0 Then
                        
                                part_no = Val(h_str)
                                
                                h_str = ""
                                
                                'left_side = i + 1
                                
                                i = Len(part_string(0))
                        
                            'Else
                            
                                'If part_pc = 0 Then
                        
                                        'part_pc = Val(h_str)
                                        
                                        'h_str = ""
                            
                                    'Else
                                    
                                        'check_part_in = False
                                    
                                    'End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If Not (h_str = "") Then
    
            If part_no = 0 Then
                        
                    part_no = Val(h_str)
                    
                    h_str = ""
                    
                End If
            
        Else
        
            If part_no = 0 Then

                    check_part_in = False
                    
                End If
            
        End If
        
    If IsNumeric(part_string(1)) Then
    
            If isLong(part_string(1)) Then
                
                    part_pc = CLng(part_string(1))
                    
                Else
    
                    check_part_in = False
                
                End If
    
        Else
    
            check_part_in = False
        
        End If

    part_name = part_string(2)
    
    'If part_no = 0 Or part_pc = 0 Then
    
            'check_part_in = False
    
        'End If

End Function

Private Function read_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long

    read_pos_import_file = True
    
    pos_no = CLng(row_values(2))
    
    pos_list(pos_no).name_description = row_values(4)
    
    'If Not (get_dimension_split(row_values(4), pos_list(pos_no).dimension, pos_list(pos_no).plate_dimension)) Then
    
    If change_dot(row_values(5)) = CStr(Val(row_values(5))) Then
    
            pos_list(pos_no).dimension = Val(row_values(5))
            
        Else
        
            pos_list(pos_no).dimension = row_values(5)
        
        End If
    
    If change_dot(row_values(6)) = CStr(Val(row_values(6))) Then
    
            pos_list(pos_no).plate_dimension = Val(row_values(6))
            
        Else
        
            pos_list(pos_no).plate_dimension = row_values(6)
        
        End If
    
    pos_list(pos_no).norm_drawing = row_values(7)
    pos_list(pos_no).material = row_values(8)
    pos_list(pos_no).note = row_values(9)
    'pos_list(pos_no).weight_pc = Val(row_values(10))
    'pos_list(pos_no).area_pc = Val(row_values(11))
    
    If change_dot(row_values(10)) = CStr(Val(row_values(10))) Then
    
            pos_list(pos_no).weight_pc = Val(row_values(10))
            
        Else
        
            pos_list(pos_no).weight_pc = row_values(10)
        
        End If
    
    If change_dot(row_values(11)) = CStr(Val(row_values(11))) Then
    
            pos_list(pos_no).area_pc = Val(row_values(11))
            
        Else
        
            pos_list(pos_no).area_pc = row_values(11)
        
        End If

    pos_list(pos_no).type = 1

End Function

Private Sub write_pos_import_file(pos_no As Long, pos_list As position, sheet_xls_2 As Worksheet, row As Long)

    Dim cell_1 As String
    Dim h_str As String
    
    cell_1 = "A" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_no
    
    cell_1 = "C" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.name_description

    cell_1 = "D" + CStr(row)
    
    If IsNumeric(pos_list.dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.dimension
        
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "E" + CStr(row)
    
    If IsNumeric(pos_list.plate_dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.plate_dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.plate_dimension
            
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "F" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.norm_drawing
    
    cell_1 = "G" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.material
    
    cell_1 = "H" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.note
    
    cell_1 = "I" + CStr(row)
    
    If IsNumeric(pos_list.weight_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.weight_pc) * CDbl(Transformation_weight_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.weight_pc
            
        End If
    
    cell_1 = "J" + CStr(row)
    
    If IsNumeric(pos_list.area_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.area_pc) * CDbl(Transformation_area_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.area_pc
            
        End If

End Sub

Private Function check_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long
    
    Dim h_dimension As String
    Dim h_plate_dimension As String

    check_pos_import_file = True
    
    pos_no = CLng(row_values(2))
    
    If Not (pos_list(pos_no).name_description = row_values(4)) Then
    
            check_pos_import_file = False
    
        End If
    
    'If Not (get_dimension_split(row_values(4), h_dimension, h_plate_dimension)) Then
    
            'If Not (pos_list(pos_no).dimension = row_values(4)) And Not (Val(pos_list(pos_no).dimension) = Val(h_dimension)) Then
            
                    'check_pos_import_file = False
            
                'End If
    
        'Else
    
    If Not (pos_list(pos_no).dimension = row_values(5)) Then
    
            check_pos_import_file = False
    
        End If

    If Not (pos_list(pos_no).plate_dimension = row_values(6)) Then
    
            check_pos_import_file = False
    
        End If
    
        'End If
    
    If Not (pos_list(pos_no).norm_drawing = row_values(7)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).material = row_values(8)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).note = row_values(9)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).weight_pc = Val(del_chr_160(row_values(10)))) And Not (pos_list(pos_no).weight_pc = Val(change_dot_back(del_chr_160(row_values(10))))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).area_pc = Val(del_chr_160(row_values(11)))) And Not (pos_list(pos_no).area_pc = Val(change_dot_back(del_chr_160(row_values(11))))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).type = 1) Then
    
            check_pos_import_file = False
    
        End If

End Function

Private Sub Transformation_area_textbox_Change()

    If Not (IsNumeric(Transformation_area_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_area_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_length_textbox_Change()

    If Not (IsNumeric(Transformation_length_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_length_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_weight_textbox_Change()

    If Not (IsNumeric(Transformation_weight_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_weight_textbox.Text = "1"
                
        End If
        
End Sub

Private Function change_dot(val_string As String) As String

    Dim i As Long
    
    change_dot = val_string
    
    For i = 1 To Len(val_string)
    
        If Mid(val_string, i, 1) = "." Then
        
                change_dot = Left(change_dot, (i - 1)) + "," + Right(change_dot, (Len(change_dot) - i))
            
            End If
            
    Next i

End Function

Private Function del_chr_160(val_string As String) As String

    Dim i As Long
    Dim j As Long
    
    del_chr_160 = val_string
    j = 0
    
    For i = 1 To Len(val_string)
    
        If Mid(val_string, i, 1) = Chr(160) Then
        
                del_chr_160 = Left(del_chr_160, (i - 1 - j)) + "" + Right(del_chr_160, (Len(val_string) - i))
                j = j + 1
            
            End If
            
    Next i

End Function

Private Function change_dot_back(val_string As String) As String

    Dim i As Long
    
    change_dot_back = val_string
    
    For i = 1 To Len(val_string)
    
        If Mid(val_string, i, 1) = "," Then
        
                change_dot_back = Left(change_dot_back, (i - 1)) + "." + Right(change_dot_back, (Len(change_dot_back) - i))
            
            End If
            
    Next i

End Function

Private Function get_bolt_split(bolt_string As String, bolt_no As Long, bolt_pc As Long) As Boolean

    Dim i As Long
    'Dim j As Long
    'Dim left_side As Long
    'Dim right_side As Long
    Dim h_str As String
    
    h_str = ""
    
    bolt_no = 0
    bolt_pc = 0
    'part_name = ""
    'left_side = 0
    'right_side = 0
    
    get_bolt_split = True

    For i = 1 To Len(bolt_string)
    
        If IsNumeric(Mid(bolt_string, i, 1)) Then
        
                h_str = h_str + Mid(bolt_string, i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If bolt_no = 0 Then
                        
                                bolt_no = Val(h_str)
                                
                                h_str = ""
                                
                                'left_side = i + 1
                                
                                'i = Len(bolt_string)
                        
                            Else
                            
                                If bolt_pc = 0 Then
                        
                                        bolt_pc = Val(h_str)
                                        
                                        h_str = ""
                            
                                    Else
                                    
                                        get_bolt_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If Not (h_str = "") Then
    
            If bolt_no = 0 Then
                        
                    bolt_no = Val(h_str)
                    bolt_pc = 1
                    
                    h_str = ""
            
                Else
                
                    If bolt_pc = 0 Then
            
                            bolt_pc = Val(h_str)
                            
                            h_str = ""
                
                        Else
                        
                            get_bolt_split = False
                        
                        End If
                
                End If
                
        End If
    
    If bolt_no = 0 Or bolt_pc = 0 Then
    
            get_bolt_split = False
    
        End If

End Function



Attribute VB_Name = "External_data_frmdrw01_form"
Attribute VB_Base = "0{A5B99D03-532E-44A0-9351-6CBAE97DFC1B}{051E1E99-ED04-46ED-B4A9-8099FE91FB77}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click()

    Unload External_data_frmdrw01_form

End Sub

Private Sub Empty_rows_textbox_Change()

    If Not (isLong(Empty_rows_textbox.Text)) Then
    
            If Not (IsNumeric(Empty_rows_textbox.Text)) Then
    
                    MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                    
                    Empty_rows_textbox.Text = "1"
                    
                Else
                
                    If Not (CDbl(Empty_rows_textbox.Text) = 0) Then
    
                            MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                            
                            Empty_rows_textbox.Text = "1"
                    
                        End If
                
                End If
                
        End If

End Sub

Private Sub Insert_file_button_Click()

    Dim file_name As String
    
    If SelectFileOpenDialog("Exported data from FrmDrw", "xml", file_name) Then
    
            File_path_textbox.Text = file_name
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim fso, text_file
    Dim row_values() As String
    Dim XML_data As MSXML2.DOMDocument
    Dim file_name As String
    Dim row_string As String
    Dim item_no(1 To 3) As Long
    Dim i As Long
    Dim j As Long
    
    Dim part_no As Long
    Dim part_pc As Long
    Dim part_name As String
    Dim part_row As Long
    Dim pos_row As Long
    Dim free_group_row As Long
    
    Dim pos_list() As position
    Dim part_list() As parts
    Dim free_group_list() As free_group
    'Dim pos_sum_list() As pos_sum
    
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    Dim sheet_xls_4 As Worksheet
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    Dim write_pos As Boolean
    Dim last_row_1 As Long
    Dim last_row_2 As Long
    Dim last_row_3 As Long
    Dim last_row_4 As Long
    Dim last_row_5 As Long
    Dim err_ind As Boolean
    
    ReDim pos_list(0)
    ReDim part_list(0)
    'ReDim pos_sum_list(0)
    
    Dim changed_area As area_limits
    Dim error_text As String
    
    Dim project_name As String
    Dim drawing_name As String
    Dim pcs As String
    Dim project_no As String
    Dim drawing_no As String
    Dim pipe_type As String
    Dim drawing_revision As String
    Dim processed As String
    Dim note As String
    Dim drawing_date As String
    
    part_no = 0
    file_name = File_path_textbox.Text
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(file_name) Then
    
            Set XML_data = loadXml(file_name)

            'Set text_file = fso.OpenTextFile(file_name, 1, True, -2)
            
            item_no(1) = 0
            item_no(2) = 0
            item_no(3) = 0
            
            Do While Not (item_no(1) = XML_data.ChildNodes.Length)
            
                item_no(1) = item_no(1) + 1
                
                Select Case XML_data.ChildNodes.Item(item_no(1) - 1).BaseName
                
                    Case "FrameDrwExportData" 'exportn|fffd| data z FrmDrw
            
                        Do While Not (item_no(2) = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Length)
                        
                            item_no(2) = item_no(2) + 1
                
                            Select Case XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).BaseName
                            
                                Case "Header" 'hlavi|fffd|ka kusovn|fffd|ku
            
                                    Do While Not (item_no(3) = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Length)
                                    
                                        item_no(3) = item_no(3) + 1
                                        
                                        Select Case XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).BaseName
                            
                                            Case "ProjectName" 'jm|fffd|no projektu
                                            
                                                project_name = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "DrawingName" 'jm|fffd|no v|fffd|kresu
                                            
                                                drawing_name = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "Pieces" 'po|fffd|et kus|fffd|
                                            
                                                pcs = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "ProjectNo" '|fffd||fffd|slo projektu
                                            
                                                project_no = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "DrawingNo" '|fffd||fffd|slo v|fffd|kresu
                                            
                                                drawing_no = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "PipeType" 'typ pipu
                                            
                                                pipe_type = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "DrawingRevision" 'revize v|fffd|kresu
                                            
                                                drawing_revision = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "Processed" 'vytvo|fffd|il - nakreslil
                                            
                                                processed = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "Note" 'pozn|fffd|mka
                                            
                                                note = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                            
                                            Case "Date" 'datum
                                            
                                                drawing_date = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
  
                                        End Select

                                    Loop
                                    
                                    item_no(3) = 0
            
            
                                Case "PartList" 'v|fffd|pis d|fffd|lc|fffd|
            
                                    Do While Not (item_no(3) = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Length)
                                    
                                        item_no(3) = item_no(3) + 1

                                        row_string = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                        
                                            If Not (row_string = "") Then
                                           
                                                    row_values = Split(row_string, ";")
                                                    
                                                    If UBound(row_values) = 0 Then
                                                    
                                                            'hlavicka dilce
                                                            
                                                            If get_part_split(row_values(0), part_no, part_pc, part_name) Then
                                                    
                                                                    If part_no > UBound(part_list) Then
                                                                    
                                                                            ReDim Preserve part_list(part_no)
                                                                        
                                                                        End If
                                                                        
                                                                    If part_list(part_no).pc = 0 Then
                                                            
                                                                            part_list(part_no).pc = part_pc
                                                                            part_list(part_no).part_name = part_name
                                                                            
                                                                            'If part_list(part_no).exist_pos Then
                                                                            
                                                                                    'For j = 1 To UBound(part_list(part_no).pos_list_short)
                                                    
                                                                                        'pos_sum_list(part_list(part_no).pos_list_short(j)).pc = pos_sum_list(part_list(part_no).pos_list_short(j)).pc + (part_list(part_no).pos_list(part_list(part_no).pos_list_short(j)).pc_part * part_list(part_no).pc)
                                                                                    
                                                                                    'Next j
                                                                                    
                                                                                'End If
                                                                    
                                                                        Else
                                                                        
                                                                            MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                            
                                                                            Exit Sub
                                                                        
                                                                        End If
                                                    
                                                                Else
                                                                
                                                                    MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                            
                                                                    Exit Sub
                                                    
                                                                End If
                                                    
                                                        Else
                                                        
                                                            'zaznam pozice v dilci
                                                            
                                                            If Not (Not (isLong(row_values(1))) Or Not (isLong(row_values(2))) Or (row_values(3) = "")) Then
                                                            
                                                                    If CLng(row_values(1)) < 5000 Then
                            
                                                                            If CLng(row_values(1)) > UBound(pos_list) Then
                                                                            
                                                                                    ReDim Preserve pos_list(CLng(row_values(1)))
                                                                                
                                                                                End If
                                                                                
                                                                            If pos_list(CLng(row_values(1))).name_description = "" Then
                                                                            
                                                                                    'nacist pozici pokud neni vetsi nez 4999 (spojovak)
                                                                                    
                                                                                    If Not (read_pos_import_file(pos_list, row_values)) Then
                                                                                
                                                                                            MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                                            
                                                                                            Exit Sub
                                                                                    
                                                                                        End If
                                                                                    
                                                                                Else
                                                                                
                                                                                    'kontrola nactene pozice
                                                                                    
                                                                                    If Not (check_pos_import_file(pos_list, row_values)) Then
                                                                                        
                                                                                            MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                                            
                                                                                            Exit Sub
                                                                                    
                                                                                        End If
                                                                    
                                                                                End If
                                                                                
                                                                        End If
                                                                        
                                                                    'nacist pozici do dilce
                                                                    
                                                                    If part_list(part_no).exist_pos Then
                                                                    
                                                                            If CLng(row_values(1)) > UBound(part_list(part_no).pos_list) Then
                                                                            
                                                                                    ReDim Preserve part_list(part_no).pos_list(CLng(row_values(1)))
                                                                            
                                                                                End If
                                                                    
                                                                            ReDim Preserve part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short) + 1)
                                                                    
                                                                        Else
                                                                        
                                                                            ReDim part_list(part_no).pos_list(CLng(row_values(1)))
                                                                            ReDim part_list(part_no).pos_list_short(1)
                                                                            part_list(part_no).exist_pos = True
                                                                        
                                                                        End If
                                                                        
                                                                    If part_list(part_no).pos_list(CLng(row_values(1))).pc_part = 0 Then
                                                                    
                                                                            part_list(part_no).pos_list(CLng(row_values(1))).pc_part = CLng(row_values(2))
                                                                            part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short)) = CLng(row_values(1))
                                                                    
                                                                        Else
                                                                
                                                                            MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                                    
                                                                            Exit Sub
                                                                        
                                                                        End If
                                                            
                                                                Else
                                                                
                                                                    MsgBox error_import_file_partlist_line + row_string, vbInformation, msgbox_title_5
                                                                            
                                                                    Exit Sub
                                                                
                                                                End If
                                                        
                                                        End If
                                                
                                                End If
                                                                
                                    Loop
                        
                                    item_no(3) = 0
                                                                
                                Case "FreeParts" 'voln|fffd| skupiny
                                
                                    ReDim free_group_list(0)
            
                                    Do While Not (item_no(3) = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Length)
                                    
                                        item_no(3) = item_no(3) + 1

                                        row_string = XML_data.ChildNodes.Item(item_no(1) - 1).ChildNodes.Item(item_no(2) - 1).ChildNodes.Item(item_no(3) - 1).Text
                        
                                            If Not (row_string = "") Then
                                           
                                                    row_values = Split(row_string, ";")
                                
                                                    ReDim Preserve free_group_list(UBound(free_group_list) + 1)
                                                    
                                                    err_ind = False
                                                    
                                                    If isLong_0(row_values(1)) Then
                                                    
                                                            free_group_list(UBound(free_group_list)).no = CLng(row_values(1))
                                                            
                                                        Else
                                                        
                                                            err_ind = True
                                                            
                                                        End If
                                                    
                                                    If isLong_0(row_values(2)) Then
                                                        
                                                            free_group_list(UBound(free_group_list)).pcs = CLng(row_values(2))
                                                            
                                                        Else
                                                        
                                                            err_ind = True
                                                            
                                                        End If
                                                    
                                                    If Not (row_values(3) = "") Then
                                                        
                                                            free_group_list(UBound(free_group_list)).name_description = row_values(3)
                                                            
                                                        Else
                                                        
                                                            err_ind = True
                                                            
                                                        End If
                                                        
                                                    free_group_list(UBound(free_group_list)).dimension = row_values(4)
                                                    free_group_list(UBound(free_group_list)).norm_drawing = row_values(5)
                                                    free_group_list(UBound(free_group_list)).material = row_values(6)
                                                    free_group_list(UBound(free_group_list)).note = row_values(7)
                                                    
                                                    If IsNumeric(row_values(8)) Then
                                                    
                                                            free_group_list(UBound(free_group_list)).weight_pc = CDbl(row_values(8))
                                                            
                                                        Else
                                                        
                                                            free_group_list(UBound(free_group_list)).weight_pc = 0
                                                            
                                                        End If
                                                        
                                                    If err_ind Then
                                                        
                                                            ReDim Preserve free_group_list(UBound(free_group_list) - 1)
                                                            
                                                        End If
                                                            
                                                End If
                                                                
                                    Loop
                                                                
                                    item_no(3) = 0

                            End Select
                
                        Loop
                        
                        item_no(2) = 0
                    
                End Select

            Loop
            
            item_no(1) = 0

            'vymazani kusovniku

            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
            Set sheet_xls_3 = book_xls.Worksheets(3)
            Set sheet_xls_4 = book_xls.Worksheets(4)
            Set sheet_xls_5 = book_xls.Worksheets(5)
        
            last_row_1 = sheet_xls_1.UsedRange.Rows.Count
            last_row_2 = sheet_xls_2.UsedRange.Rows.Count
            last_row_3 = sheet_xls_3.UsedRange.Rows.Count
            last_row_4 = sheet_xls_4.UsedRange.Rows.Count
            last_row_5 = sheet_xls_5.UsedRange.Rows.Count
            
            unlock_xls
            
            If (last_row_1 > first_row) Or (last_row_1 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_1)
                
                    sheet_xls_1.Rows(row_string).Delete
                
                End If
                
            If (last_row_2 > first_row) Or (last_row_2 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_2)
                
                    sheet_xls_2.Rows(row_string).Delete
                
                End If
                
            If (last_row_3 > first_row) Or (last_row_3 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_3)
                
                    sheet_xls_3.Rows(row_string).Delete
                
                End If
                
            If (last_row_4 > first_row) Or (last_row_4 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_4)
                
                    sheet_xls_4.Rows(row_string).Delete
                
                End If
                
            If (last_row_5 > first_row) Or (last_row_5 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_5)
                
                    sheet_xls_5.Rows(row_string).Delete
                
                End If
                
            'zapis nactenych dat
            
            'hlavi|fffd|ka
                
            sheet_xls_1.Range("C1").value = project_name
            sheet_xls_1.Range("H1").value = drawing_name
            sheet_xls_1.Range("L1").value = pcs
            sheet_xls_1.Range("C2").value = project_no
            sheet_xls_1.Range("H2").value = drawing_no
            sheet_xls_1.Range("C3").value = pipe_type
            sheet_xls_1.Range("H3").value = drawing_revision
            sheet_xls_1.Range("C4").value = processed
            sheet_xls_1.Range("H4").value = note
            sheet_xls_1.Range("L4").value = drawing_date

            If UBound(pos_list) > 0 Then
            
                    'pozice
                    
                    pos_row = 0
            
                    For i = 1 To UBound(pos_list)
                    
                        pos_row = pos_row + 1
                    
                        If Not (pos_list(i).name_description = "") Then
            
                                write_pos_import_file i, pos_list(i), sheet_xls_2, (first_row + pos_row - 1)
                                
                            Else
                            
                                pos_row = pos_row - 1
                                
                            End If
                        
                    Next i
                    
                    'dilce
                    
                    If UBound(part_list) > 0 Then
                    
                            part_row = first_row
                            
                            For i = 1 To UBound(part_list)
                            
                                part_row = part_row + 1
                            
                                If part_list(i).pc > 0 Then
                                
                                        cell_1 = "A" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = i
                                        
                                        cell_1 = "C" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = part_list(i).pc
                                        
                                        If part_list(i).exist_pos Then
                                        
                                                For j = 1 To UBound(part_list(i).pos_list_short)
                                                
                                                    part_row = part_row + 1
                                
                                                    cell_1 = "A" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = i
                                        
                                                    cell_1 = "B" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list_short(j)
                                                    
                                                    cell_1 = "C" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list(part_list(i).pos_list_short(j)).pc_part

                                                Next j
                                        
                                            End If
                                            
                                        part_row = part_row + CLng(Empty_rows_textbox.Text)
                                        
                                    Else
                                    
                                        part_row = part_row - 1
                                
                                    End If
                            
                            Next i
                        
                        End If
            
                End If
            
            If UBound(free_group_list) > 0 Then
                
                    'voln|fffd| skupiny
            
                    free_group_row = 0
            
                    For i = 1 To UBound(free_group_list)
                    
                        free_group_row = free_group_row + 1
                    
                        If Not (free_group_list(i).name_description = "") Then
            
                                write_free_group_import_file free_group_list(i), sheet_xls_4, sheet_xls_5, (first_row + free_group_row - 1)
                                
                            Else
                            
                                free_group_row = free_group_row - 1
                                
                            End If
                        
                    Next i

                End If
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            'zapsat jmena dilcu do csv
            
            Set sheet_xls_5 = book_xls.Worksheets(5)
            
            last_row_5 = sheet_xls_5.UsedRange.Rows.Count
            
            unlock_xls
                
            For i = first_row To last_row_5
                                
                cell_1 = "A" + CStr(i)
                
                j = CLng(sheet_xls_5.Range(cell_1).value)
                                        
                If Not (part_list(j).part_name = "") Then
                            
                        cell_1 = "C" + CStr(i)
                        
                        sheet_xls_5.Range(cell_1).value = ("'" + part_list(j).part_name)
                
                    End If
                                                
            Next i
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
        
            Unload External_data_frmdrw01_form

        Else
        
            MsgBox error_import_file_name_text, vbInformation, msgbox_title_5

        End If
        
    Set fso = Nothing
    
End Sub

Private Function get_part_split(part_string As String, part_no As Long, part_pc As Long, part_name As String) As Boolean

    Dim i As Long
    Dim j As Long
    Dim left_side As Long
    Dim right_side As Long
    Dim h_str As String
    
    h_str = ""
    
    part_no = 0
    part_pc = 0
    part_name = ""
    left_side = 0
    right_side = 0
    
    get_part_split = True

    For i = 1 To Len(part_string)
    
        If IsNumeric(Mid(part_string, i, 1)) Then
        
                h_str = h_str + Mid(part_string, i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If part_no = 0 Then
                        
                                part_no = Val(h_str)
                                
                                h_str = ""
                                
                                left_side = i + 1
                                
                                i = Len(part_string)
                        
                            Else
                            
                                If part_pc = 0 Then
                        
                                        part_pc = Val(h_str)
                                        
                                        h_str = ""
                            
                                    Else
                                    
                                        get_part_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i

    For i = 1 To Len(part_string)
    
        j = Len(part_string) - i + 1
    
        If IsNumeric(Mid(part_string, j, 1)) Then
        
                h_str = Mid(part_string, j, 1) + h_str
        
            Else
            
                If Not (h_str = "") Then
                
                        If part_no = 0 Then
                        
                                part_no = Val(h_str)
                                
                                h_str = ""
                        
                            Else
                            
                                If part_pc = 0 Then
                        
                                        part_pc = Val(h_str)
                                        
                                        h_str = ""
                                
                                        right_side = Len(part_string) - i - 2
                                
                                        i = Len(part_string)
                            
                                    Else
                                    
                                        get_part_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If (Not (right_side < left_side)) And (Not (left_side = 0)) And (Not (right_side = 0)) Then
    
            part_name = Mid(part_string, left_side, (right_side - left_side + 1))
    
        End If
    
    If Not (h_str = "") Then
    
            If part_no = 0 Then
                        
                    part_no = Val(h_str)
                    
                    h_str = ""
            
                Else
                
                    If part_pc = 0 Then
            
                            part_pc = Val(h_str)
                            
                            h_str = ""
                
                        Else
                        
                            get_part_split = False
                        
                        End If
                
                End If
                
        End If
    
    If part_no = 0 Or part_pc = 0 Then
    
            get_part_split = False
    
        End If

End Function

Private Function get_dimension_split(dimension_string As String, dimension As String, plate_dimension As String) As Boolean

    Dim i As Long
    Dim h_str As String
    
    h_str = ""
    
    dimension = ""
    plate_dimension = ""
    
    get_dimension_split = True

    For i = 1 To Len(dimension_string)
    
        If IsNumeric(Mid(dimension_string, i, 1)) Or (Mid(dimension_string, i, 1) = ".") Then
        
                h_str = h_str + Mid(dimension_string, i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If dimension = "" Then
                        
                                dimension = CStr(Val(h_str))
                                
                                h_str = ""
                        
                            Else
                            
                                If plate_dimension = "" Then
                        
                                        plate_dimension = CStr(Val(h_str))
                                        
                                        h_str = ""
                            
                                    Else
                                    
                                        get_dimension_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If Not (h_str = "") Then
    
            If dimension = "" Then
                        
                    dimension = CStr(Val(h_str))
                    
                    h_str = ""
            
                Else
                
                    If plate_dimension = "" Then
            
                            plate_dimension = CStr(Val(h_str))
                            
                            h_str = ""
                
                        Else
                        
                            get_dimension_split = False
                        
                        End If
                
                End If
                
        End If
    
    If dimension = "" Or plate_dimension = "" Then
    
            get_dimension_split = False
    
        End If

End Function

Private Function read_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long

    read_pos_import_file = True
    
    pos_no = CLng(row_values(1))
    
    pos_list(pos_no).name_description = row_values(3)
    
    If Not (get_dimension_split(row_values(4), pos_list(pos_no).dimension, pos_list(pos_no).plate_dimension)) Then
    
            If change_dot(row_values(4)) = CStr(Val(row_values(4))) Then
            
                    pos_list(pos_no).dimension = Val(row_values(4))
                    
                Else
                
                    pos_list(pos_no).dimension = row_values(4)
                
                End If
    
        End If
    
    pos_list(pos_no).norm_drawing = row_values(5)
    pos_list(pos_no).material = row_values(6)
    pos_list(pos_no).note = row_values(7)
    pos_list(pos_no).weight_pc = Val(row_values(8))
    pos_list(pos_no).area_pc = Val(row_values(9))
    pos_list(pos_no).type = 1

End Function

Private Sub write_pos_import_file(pos_no As Long, pos_list As position, sheet_xls_2 As Worksheet, row As Long)

    Dim cell_1 As String
    Dim h_str As String
    
    cell_1 = "A" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_no
    
    cell_1 = "C" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.name_description

    cell_1 = "D" + CStr(row)
    
    If IsNumeric(pos_list.dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.dimension
        
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "E" + CStr(row)
    
    If IsNumeric(pos_list.plate_dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.plate_dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.plate_dimension
            
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "F" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.norm_drawing
    
    cell_1 = "G" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.material
    
    cell_1 = "H" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.note
    
    cell_1 = "I" + CStr(row)
    
    If IsNumeric(pos_list.weight_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.weight_pc) * CDbl(Transformation_weight_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.weight_pc
            
        End If
    
    cell_1 = "J" + CStr(row)
    
    If IsNumeric(pos_list.area_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.area_pc) * CDbl(Transformation_area_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.area_pc
            
        End If

End Sub

Private Sub write_free_group_import_file(free_group_list As free_group, sheet_xls_4 As Worksheet, sheet_xls_5 As Worksheet, row As Long)

    Dim cell_1 As String
    Dim h_str As String
    
    cell_1 = "A" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.no
    
    cell_1 = "G" + CStr(row)
    sheet_xls_5.Range(cell_1).value = free_group_list.no
    
    cell_1 = "B" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.pcs
    
    cell_1 = "H" + CStr(row)
    sheet_xls_5.Range(cell_1).value = free_group_list.pcs
    
    cell_1 = "C" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.name_description
    
    cell_1 = "D" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.dimension
    
    cell_1 = "E" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.norm_drawing
    
    cell_1 = "F" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.material
    
    cell_1 = "G" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.note
    
    cell_1 = "H" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.weight_pc
    
    cell_1 = "I" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.pcs * free_group_list.weight_pc
    
    cell_1 = "AA" + CStr(row)
    sheet_xls_4.Range(cell_1).value = free_group_list.pcs * free_group_list.weight_pc
    
    cell_1 = "BA" + CStr(row)
    sheet_xls_4.Range(cell_1).value = 0

End Sub

Private Function check_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long
    
    Dim h_dimension As String
    Dim h_plate_dimension As String

    check_pos_import_file = True
    
    pos_no = CLng(row_values(1))
    
    If Not (pos_list(pos_no).name_description = row_values(3)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (get_dimension_split(row_values(4), h_dimension, h_plate_dimension)) Then
    
            If Not (pos_list(pos_no).dimension = row_values(4)) And Not (Val(pos_list(pos_no).dimension) = Val(h_dimension)) Then
            
                    check_pos_import_file = False
            
                End If
    
        Else
    
            If Not (pos_list(pos_no).dimension = h_dimension) Then
            
                    check_pos_import_file = False
            
                End If

            If Not (pos_list(pos_no).plate_dimension = h_plate_dimension) Then
            
                    check_pos_import_file = False
            
                End If
    
        End If
    
    If Not (pos_list(pos_no).norm_drawing = row_values(5)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).material = row_values(6)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).note = row_values(7)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).weight_pc = Val(row_values(8))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).area_pc = Val(row_values(9))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).type = 1) Then
    
            check_pos_import_file = False
    
        End If

End Function

Private Sub Transformation_area_textbox_Change()

    If Not (IsNumeric(Transformation_area_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_area_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_length_textbox_Change()

    If Not (IsNumeric(Transformation_length_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_length_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_weight_textbox_Change()

    If Not (IsNumeric(Transformation_weight_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_weight_textbox.Text = "1"
                
        End If
        
End Sub

Private Function change_dot(val_string As String) As String

    Dim i As Long
    
    change_dot = val_string
    
    For i = 1 To Len(val_string)
    
        If Mid(val_string, i, 1) = "." Then
        
                change_dot = Left(change_dot, (i - 1)) + "," + Right(change_dot, (Len(change_dot) - i))
            
            End If
            
    Next i

End Function

Private Function loadXml(xml_name As String) As MSXML2.DOMDocument

    'Dim loadXml As MSXML2.DOMDocument
    'Dim xEmpDetails As MSXML2.IXMLDOMNode
    'Dim xEmployee As MSXML2.IXMLDOMNode
    'Dim xChild As MSXML2.IXMLDOMNode
    
    Set loadXml = New MSXML2.DOMDocument
    loadXml.async = False
    loadXml.validateOnParse = False
    loadXml.Load (xml_name)
    
    'Set xEmpDetails = XDoc.DocumentElement
    'Set xEmployee = xEmpDetails.FirstChild
    
    'For Each xEmployee In xEmpDetails.ChildNodes
    
        'For Each xChild In xEmployee.ChildNodes
        
            'MsgBox xChild.BaseName & " " & xChild.Text
        
        'Next xChild
        
    'Next xEmployee
    
End Function
Attribute VB_Name = "External_data_gosteel01_form"
Attribute VB_Base = "0{92EE0E82-0968-420B-9B92-A88668068341}{D054CFAE-B8A3-41AD-B306-B2B4DF74C0D3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload External_data_gosteel01_form

End Sub

Private Sub Empty_rows_textbox_Change()

    If Not (isLong(Empty_rows_textbox.Text)) Then
    
            If Not (IsNumeric(Empty_rows_textbox.Text)) Then
    
                    MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                    
                    Empty_rows_textbox.Text = "1"
                    
                Else
                
                    If Not (CDbl(Empty_rows_textbox.Text) = 0) Then
    
                            MsgBox error_empty_rows_text, vbInformation, msgbox_title_2
                            
                            Empty_rows_textbox.Text = "1"
                    
                        End If
                
                End If
                
        End If

End Sub

Private Sub Insert_file_button_Click()

    Dim file_name As String
    
    If SelectFileOpenDialog("Exported data from Gosteel", "txt", file_name) Then
    
            File_path_textbox.Text = file_name
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim fso, text_file
    Dim row_values() As String
    
    Dim file_name As String
    Dim row_string As String
    Dim row_no As Long
    Dim i As Long
    Dim j As Long
    
    Dim part_no As Long
    Dim part_pc As Long
    Dim part_name As String
    Dim part_row As Long
    Dim pos_row As Long
    
    Dim pos_list() As position
    Dim part_list() As parts
    'Dim pos_sum_list() As pos_sum
    
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    'Dim sheet_xls_4 As Worksheet
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    Dim write_pos As Boolean
    Dim last_row_1 As Long
    Dim last_row_2 As Long
    Dim last_row_3 As Long
    'Dim last_row_4 As Long
    Dim last_row_5 As Long
    'Dim lock_ind As Boolean
    
    ReDim pos_list(0)
    ReDim part_list(0)
    'ReDim pos_sum_list(0)
    
    Dim changed_area As area_limits
    Dim error_text As String
    
    part_no = 0
    file_name = File_path_textbox.Text
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(file_name) Then

            Set text_file = fso.OpenTextFile(file_name, 1, True, -2)
            
            row_no = 0

            Do While Not (text_file.AtEndOfStream)
                
                row_no = row_no + 1
                
                row_string = text_file.ReadLine
               
                If Not (row_string = "") Then
               
                        row_values = Split(row_string, ";")
                        
                        If UBound(row_values) = 0 Then
                        
                                'hlavicka dilce
                                
                                If get_part_split(row_values(0), part_no, part_pc, part_name) Then
                        
                                        If part_no > UBound(part_list) Then
                                        
                                                ReDim Preserve part_list(part_no)
                                            
                                            End If
                                            
                                        If part_list(part_no).pc = 0 Then
                                
                                                part_list(part_no).pc = part_pc
                                                part_list(part_no).part_name = part_name
                                                
                                                'If part_list(part_no).exist_pos Then
                                                
                                                        'For j = 1 To UBound(part_list(part_no).pos_list_short)
                        
                                                            'pos_sum_list(part_list(part_no).pos_list_short(j)).pc = pos_sum_list(part_list(part_no).pos_list_short(j)).pc + (part_list(part_no).pos_list(part_list(part_no).pos_list_short(j)).pc_part * part_list(part_no).pc)
                                                        
                                                        'Next j
                                                        
                                                    'End If
                                        
                                            Else
                                            
                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                                Exit Sub
                                            
                                            End If
                        
                                    Else
                                    
                                        MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                        Exit Sub
                        
                                    End If
                        
                            Else
                            
                                'zaznam pozice v dilci
                                
                                If Not (Not (isLong(row_values(1))) Or Not (isLong(row_values(2))) Or (row_values(3) = "")) Then
                                
                                        If CLng(row_values(1)) < 5000 Then

                                                If CLng(row_values(1)) > UBound(pos_list) Then
                                                
                                                        ReDim Preserve pos_list(CLng(row_values(1)))
                                                    
                                                    End If
                                                    
                                                If pos_list(CLng(row_values(1))).name_description = "" Then
                                                
                                                        'nacist pozici pokud neni vetsi nez 4999 (spojovak)
                                                        
                                                        If Not (read_pos_import_file(pos_list, row_values)) Then
                                                    
                                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                                Exit Sub
                                                        
                                                            End If
                                                        
                                                    Else
                                                    
                                                        'kontrola nactene pozice
                                                        
                                                        If Not (check_pos_import_file(pos_list, row_values)) Then
                                                            
                                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                                
                                                                Exit Sub
                                                        
                                                            End If
                                        
                                                    End If
                                                    
                                            End If
                                            
                                        'nacist pozici do dilce
                                        
                                        If part_list(part_no).exist_pos Then
                                        
                                                If CLng(row_values(1)) > UBound(part_list(part_no).pos_list) Then
                                                
                                                        ReDim Preserve part_list(part_no).pos_list(CLng(row_values(1)))
                                                
                                                    End If
                                        
                                                ReDim Preserve part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short) + 1)
                                        
                                            Else
                                            
                                                ReDim part_list(part_no).pos_list(CLng(row_values(1)))
                                                ReDim part_list(part_no).pos_list_short(1)
                                                part_list(part_no).exist_pos = True
                                            
                                            End If
                                            
                                        If part_list(part_no).pos_list(CLng(row_values(1))).pc_part = 0 Then
                                        
                                                part_list(part_no).pos_list(CLng(row_values(1))).pc_part = CLng(row_values(2))
                                                part_list(part_no).pos_list_short(UBound(part_list(part_no).pos_list_short)) = CLng(row_values(1))
                                        
                                            Else
                                    
                                                MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                        
                                                Exit Sub
                                            
                                            End If
                                
                                    Else
                                    
                                        MsgBox error_import_file_text + CStr(row_no), vbInformation, msgbox_title_5
                                                
                                        Exit Sub
                                    
                                    End If
                            
                            End If
                    
                    End If
            
            Loop
            
            'vymazani kusovniku

            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
            Set sheet_xls_3 = book_xls.Worksheets(3)
            'Set sheet_xls_4 = book_xls.Worksheets(4)
        
            last_row_1 = sheet_xls_1.UsedRange.Rows.Count
            last_row_2 = sheet_xls_2.UsedRange.Rows.Count
            last_row_3 = sheet_xls_3.UsedRange.Rows.Count
            'last_row_4 = sheet_xls_4.UsedRange.Rows.Count
            
            unlock_xls
            
            If (last_row_1 > first_row) Or (last_row_1 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_1)
                
                    sheet_xls_1.Rows(row_string).Delete
                
                End If
                
            If (last_row_2 > first_row) Or (last_row_2 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_2)
                
                    sheet_xls_2.Rows(row_string).Delete
                
                End If
                
            If (last_row_3 > first_row) Or (last_row_3 = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row_3)
                
                    sheet_xls_3.Rows(row_string).Delete
                
                End If
                
            'zapis nactenych dat
            
            If UBound(pos_list) > 0 Then
            
                    'pozice
                    
                    pos_row = 0
            
                    For i = 1 To UBound(pos_list)
                    
                        pos_row = pos_row + 1
                    
                        If Not (pos_list(i).name_description = "") Then
            
                                write_pos_import_file i, pos_list(i), sheet_xls_2, (first_row + pos_row - 1)
                                
                            Else
                            
                                pos_row = pos_row - 1
                                
                            End If
                        
                    Next i
                    
                    'dilce
                    
                    If UBound(part_list) > 0 Then
                    
                            part_row = first_row
                            
                            For i = 1 To UBound(part_list)
                            
                                part_row = part_row + 1
                            
                                If part_list(i).pc > 0 Then
                                
                                        cell_1 = "A" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = i
                                        
                                        cell_1 = "C" + CStr(part_row)
                                        sheet_xls_1.Range(cell_1).value = part_list(i).pc
                                        
                                        If part_list(i).exist_pos Then
                                        
                                                For j = 1 To UBound(part_list(i).pos_list_short)
                                                
                                                    part_row = part_row + 1
                                
                                                    cell_1 = "A" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = i
                                        
                                                    cell_1 = "B" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list_short(j)
                                                    
                                                    cell_1 = "C" + CStr(part_row)
                                                    sheet_xls_1.Range(cell_1).value = part_list(i).pos_list(part_list(i).pos_list_short(j)).pc_part

                                                Next j
                                        
                                            End If
                                            
                                        part_row = part_row + CLng(Empty_rows_textbox.Text)
                                        
                                    Else
                                    
                                        part_row = part_row - 1
                                
                                    End If
                            
                            Next i
                        
                        End If
            
                End If
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            'zapsat jmena dilcu do csv
            
            Set sheet_xls_5 = book_xls.Worksheets(5)
            
            last_row_5 = sheet_xls_5.UsedRange.Rows.Count
            
            unlock_xls
                
            For i = first_row To last_row_5
                                
                cell_1 = "A" + CStr(i)
                
                j = CLng(sheet_xls_5.Range(cell_1).value)
                                        
                If Not (part_list(j).part_name = "") Then
                            
                        cell_1 = "C" + CStr(i)
                        
                        sheet_xls_5.Range(cell_1).value = ("'" + part_list(j).part_name)
                
                    End If
                                                
            Next i
            
            lock_xls

            'refresh kusovniku

            ReDim pos_list(0)

            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
        
            Unload External_data_gosteel01_form

        Else
        
            MsgBox error_import_file_name_text, vbInformation, msgbox_title_5

        End If
        
    Set fso = Nothing
    
End Sub

Private Function get_part_split(part_string As String, part_no As Long, part_pc As Long, part_name As String) As Boolean

    Dim i As Long
    Dim j As Long
    Dim left_side As Long
    Dim right_side As Long
    Dim h_str As String
    
    h_str = ""
    
    part_no = 0
    part_pc = 0
    part_name = ""
    left_side = 0
    right_side = 0
    
    get_part_split = True

    For i = 1 To Len(part_string)
    
        If IsNumeric(Mid(part_string, i, 1)) Then
        
                h_str = h_str + Mid(part_string, i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If part_no = 0 Then
                        
                                part_no = Val(h_str)
                                
                                h_str = ""
                                
                                left_side = i + 1
                                
                                i = Len(part_string)
                        
                            Else
                            
                                If part_pc = 0 Then
                        
                                        part_pc = Val(h_str)
                                        
                                        h_str = ""
                            
                                    Else
                                    
                                        get_part_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i

    For i = 1 To Len(part_string)
    
        j = Len(part_string) - i + 1
    
        If IsNumeric(Mid(part_string, j, 1)) Then
        
                h_str = Mid(part_string, j, 1) + h_str
        
            Else
            
                If Not (h_str = "") Then
                
                        If part_no = 0 Then
                        
                                part_no = Val(h_str)
                                
                                h_str = ""
                        
                            Else
                            
                                If part_pc = 0 Then
                        
                                        part_pc = Val(h_str)
                                        
                                        h_str = ""
                                
                                        right_side = Len(part_string) - i - 2
                                
                                        i = Len(part_string)
                            
                                    Else
                                    
                                        get_part_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If (Not (right_side < left_side)) And (Not (left_side = 0)) And (Not (right_side = 0)) Then
    
            part_name = Mid(part_string, left_side, (right_side - left_side + 1))
    
        End If
    
    If Not (h_str = "") Then
    
            If part_no = 0 Then
                        
                    part_no = Val(h_str)
                    
                    h_str = ""
            
                Else
                
                    If part_pc = 0 Then
            
                            part_pc = Val(h_str)
                            
                            h_str = ""
                
                        Else
                        
                            get_part_split = False
                        
                        End If
                
                End If
                
        End If
    
    If part_no = 0 Or part_pc = 0 Then
    
            get_part_split = False
    
        End If

End Function

Private Function get_dimension_split(dimension_string As String, dimension As String, plate_dimension As String) As Boolean

    Dim i As Long
    Dim h_str As String
    
    h_str = ""
    
    dimension = ""
    plate_dimension = ""
    
    get_dimension_split = True

    For i = 1 To Len(dimension_string)
    
        If IsNumeric(Mid(dimension_string, i, 1)) Or (Mid(dimension_string, i, 1) = ".") Then
        
                h_str = h_str + Mid(dimension_string, i, 1)
        
            Else
            
                If Not (h_str = "") Then
                
                        If dimension = "" Then
                        
                                dimension = CStr(Val(h_str))
                                
                                h_str = ""
                        
                            Else
                            
                                If plate_dimension = "" Then
                        
                                        plate_dimension = CStr(Val(h_str))
                                        
                                        h_str = ""
                            
                                    Else
                                    
                                        get_dimension_split = False
                                    
                                    End If
                            
                            End If
                
                    End If
            
            End If
    
    Next i
    
    If Not (h_str = "") Then
    
            If dimension = "" Then
                        
                    dimension = CStr(Val(h_str))
                    
                    h_str = ""
            
                Else
                
                    If plate_dimension = "" Then
            
                            plate_dimension = CStr(Val(h_str))
                            
                            h_str = ""
                
                        Else
                        
                            get_dimension_split = False
                        
                        End If
                
                End If
                
        End If
    
    If dimension = "" Or plate_dimension = "" Then
    
            get_dimension_split = False
    
        End If

End Function

Private Function read_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long

    read_pos_import_file = True
    
    pos_no = CLng(row_values(1))
    
    pos_list(pos_no).name_description = row_values(3)
    
    If Not (get_dimension_split(row_values(4), pos_list(pos_no).dimension, pos_list(pos_no).plate_dimension)) Then
    
            If change_dot(row_values(4)) = CStr(Val(row_values(4))) Then
            
                    pos_list(pos_no).dimension = Val(row_values(4))
                    
                Else
                
                    pos_list(pos_no).dimension = row_values(4)
                
                End If
    
        End If
    
    pos_list(pos_no).norm_drawing = row_values(5)
    pos_list(pos_no).material = row_values(6)
    pos_list(pos_no).note = row_values(7)
    pos_list(pos_no).weight_pc = Val(row_values(8))
    pos_list(pos_no).area_pc = Val(row_values(9))
    pos_list(pos_no).type = 1

End Function

Private Sub write_pos_import_file(pos_no As Long, pos_list As position, sheet_xls_2 As Worksheet, row As Long)

    Dim cell_1 As String
    Dim h_str As String
    
    cell_1 = "A" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_no
    
    cell_1 = "C" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.name_description

    cell_1 = "D" + CStr(row)
    
    If IsNumeric(pos_list.dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.dimension
        
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "E" + CStr(row)
    
    If IsNumeric(pos_list.plate_dimension) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.plate_dimension) * CDbl(Transformation_length_textbox.Text)
            
        Else
        
            h_str = "'" + pos_list.plate_dimension
            
            sheet_xls_2.Range(cell_1).value = h_str
            
        End If
    
    cell_1 = "F" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.norm_drawing
    
    cell_1 = "G" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.material
    
    cell_1 = "H" + CStr(row)
    sheet_xls_2.Range(cell_1).value = pos_list.note
    
    cell_1 = "I" + CStr(row)
    
    If IsNumeric(pos_list.weight_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.weight_pc) * CDbl(Transformation_weight_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.weight_pc
            
        End If
    
    cell_1 = "J" + CStr(row)
    
    If IsNumeric(pos_list.area_pc) Then
    
            sheet_xls_2.Range(cell_1).value = CDbl(pos_list.area_pc) * CDbl(Transformation_area_textbox.Text)
            
        Else
        
            sheet_xls_2.Range(cell_1).value = pos_list.area_pc
            
        End If

End Sub

Private Function check_pos_import_file(pos_list() As position, row_values() As String) As Boolean

    Dim pos_no As Long
    
    Dim h_dimension As String
    Dim h_plate_dimension As String

    check_pos_import_file = True
    
    pos_no = CLng(row_values(1))
    
    If Not (pos_list(pos_no).name_description = row_values(3)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (get_dimension_split(row_values(4), h_dimension, h_plate_dimension)) Then
    
            If Not (pos_list(pos_no).dimension = row_values(4)) And Not (Val(pos_list(pos_no).dimension) = Val(h_dimension)) Then
            
                    check_pos_import_file = False
            
                End If
    
        Else
    
            If Not (pos_list(pos_no).dimension = h_dimension) Then
            
                    check_pos_import_file = False
            
                End If

            If Not (pos_list(pos_no).plate_dimension = h_plate_dimension) Then
            
                    check_pos_import_file = False
            
                End If
    
        End If
    
    If Not (pos_list(pos_no).norm_drawing = row_values(5)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).material = row_values(6)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).note = row_values(7)) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).weight_pc = Val(row_values(8))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).area_pc = Val(row_values(9))) Then
    
            check_pos_import_file = False
    
        End If
    
    If Not (pos_list(pos_no).type = 1) Then
    
            check_pos_import_file = False
    
        End If

End Function

Private Sub Transformation_area_textbox_Change()

    If Not (IsNumeric(Transformation_area_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_area_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_length_textbox_Change()

    If Not (IsNumeric(Transformation_length_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_length_textbox.Text = "1"
                
        End If

End Sub

Private Sub Transformation_weight_textbox_Change()

    If Not (IsNumeric(Transformation_weight_textbox.Text)) Then
    
            MsgBox error_import_parametr_text, vbInformation, msgbox_title_2
            
            Transformation_weight_textbox.Text = "1"
                
        End If
        
End Sub

Private Function change_dot(val_string As String) As String

    Dim i As Long
    
    change_dot = val_string
    
    For i = 1 To Len(val_string)
    
        If Mid(val_string, i, 1) = "." Then
        
                change_dot = Left(change_dot, (i - 1)) + "," + Right(change_dot, (Len(change_dot) - i))
            
            End If
            
    Next i

End Function
Attribute VB_Name = "Import_BOM_form"
Attribute VB_Base = "0{161315A9-ACAA-4B81-840D-F7D9A066D862}{CD46DBCA-B734-4891-9EF8-43137A34BC77}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit

Private Sub Cancel_button_Click()

    Unload Import_BOM_form

End Sub

Private Sub Insert_file_button_Click()

    Dim file_name As String
    
    If SelectFileOpenDialog("Excel - bill of materilals", "xls", file_name) Then
    
            File_path_textbox.Text = file_name
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim book_xls_1 As Workbook
    Dim book_xls_2 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim last_row As Long
    Dim row_range As String
    
    Dim i As Long
    Dim cell_1 As String
    
    Dim fso
    Dim import_file_path As String
    
    Dim changed_area As area_limits
    
    Dim pos_list() As position
    Dim free_group_list() As free_group
    Dim error_text As String
    
    import_file_path = File_path_textbox.Text
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    Set book_xls_2 = ActiveWorkbook
    Set sheet_xls_2 = book_xls_2.Worksheets(1)
    
    If fso.FileExists(import_file_path) Then
    
            unlock_xls
    
            Workbooks.Open Filename:=import_file_path, ReadOnly:=True
            
            Set book_xls_1 = ActiveWorkbook
            Set sheet_xls_1 = book_xls_1.Worksheets(1)
            
            'kopirovani hlavicky
            
            cell_1 = "C1"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "C2"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "C3"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "C4"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "C5"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "H1"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "H2"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "H3"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "H4"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "L1"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            cell_1 = "L4"
            
            sheet_xls_1.Range(cell_1).Copy
            sheet_xls_2.Activate
            Range(cell_1).Select
            Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            'kopirovani listu
                
            cell_1 = "A" + CStr(first_row)
            
            For i = 1 To 4
            
                book_xls_1.Activate
                
                Set sheet_xls_1 = book_xls_1.Worksheets(i)
                
                sheet_xls_1.Activate
                
                last_row = sheet_xls_1.UsedRange.Rows.Count
                
                row_range = CStr(first_row) + ":" + CStr(last_row)
                
                sheet_xls_1.Rows(row_range).Copy
                
                book_xls_2.Activate
                
                Set sheet_xls_2 = book_xls_2.Worksheets(i)
                
                sheet_xls_2.Activate
                
                last_row = sheet_xls_2.UsedRange.Rows.Count + 1
                
                row_range = CStr(last_row) + ":" + CStr(last_row)
                
                sheet_xls_2.Rows(row_range).Select
                Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                
                sheet_xls_2.Range(cell_1).Select
                
                sheet_xls_1.Activate
                sheet_xls_1.Range(cell_1).Select
                
            Next i
                
            Set sheet_xls_1 = book_xls_1.Worksheets(1)
            
            sheet_xls_1.Activate
            
            Application.CutCopyMode = False
            
            book_xls_1.Close SaveChanges:=False
            
            Set sheet_xls_2 = book_xls_2.Worksheets(1)
                
            sheet_xls_2.Activate
            
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_2.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
                    
                    If get_free_groups(free_group_list, error_text) Then
                    
                            reload_free_groups free_group_list
                        
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            lock_xls
            
            Unload Import_BOM_form
            
        Else
        
            MsgBox error_import_file_name_text, vbInformation, msgbox_title_6
        
        End If

End Sub
Attribute VB_Name = "Module1_Constants_and_types"
Option Explicit

Public Const pass = "beumer"
Public Const first_row = 8
Public Const lenght_transition = 0.001 'mm -> m
Public Const material_density = 7850 'kg/m3
Public Const part_name = "Part SN"
Public Const part_short_name = "SN "
Public Const plate_short_name = "Pl "
Public Const plate_norm = "DIN 1543"

Public Const position_no = "Position"
Public Const pos_sum = "Pieces"
Public Const pos_name = "Name"
Public Const pos_dim = "Dimension"
Public Const pos_norm = "Norm"

Public Const error_nonstandard_unlock = "BOM was unlocked and changed without authorization !!! Contact administrator."

Public Const error_BOM_text = "BOM CONTAINS ERRORS!!! It is not possible to use this function, if BOM contains errors."
Public Const error_cell_value_text = "BOM contains errors. Error value in cell. "
Public Const error_pos_double_counting_text_1 = "BOM contains errors. Duplicity of position in cell "
Public Const error_pos_double_counting_text_2 = " with position in cell "
Public Const error_double_value_text_1 = "BOM CONTAINS ERRORS. Value in cell "
Public Const error_double_value_text_2 = " not numerical !!!"
Public Const error_free_group_double_counting_text = "BOM CONTAINS ERRORS. Duplicity of free group in cell "
Public Const error_run_function = "Remove errors of BOM, which not allow to start required function !!!"
Public Const error_parts_incomplete_input = "Incomplete input of part in row "
Public Const error_parts_incomplete_input_cell = "INCOMPLETE INPUT !!!"
Public Const error_parts_double_counting_part = "Duplicity of part in row "
Public Const error_parts_double_counting_part_cell = "DUPLICITY OF PART !!!"
Public Const error_parts_exist_part_1 = "Part in row "
Public Const error_parts_exist_part_2 = " doesn|fffd|t exist !!!"
Public Const error_parts_exist_part_cell = "PART DOES|fffd|T EXIST !!!"
Public Const error_parts_double_counting_pos = "Duplicity of positin (within part) in row "
Public Const error_parts_double_counting_pos_cell = "DUPLICITY OF POSITION IN PARTS !!!"
Public Const error_parts_exist_pos_1 = "Position in listing of parts in row "
Public Const error_parts_exist_pos_2 = " doesn|fffd|t exist !!!"
Public Const error_parts_exist_pos_cell = "POSITION DOESN|fffd|T EXIST !!!"

Public Const error_pos_num_text = "Number of the position is not positive integer or is not filled in !!!"
Public Const error_free_group_num_text = "Number of free group is not positive integer or is bigger than 999 !!!"
Public Const error_free_group_pcs_text = "Number of pieces of free group is not positive integer !!!"
Public Const error_row_num_text = "Number of row is not positive integer or is not filled in !!!"
Public Const error_pos_duplicity_text = "Position under this number already exists !!!"
Public Const error_bolt_duplicity_text = "Bolt under this number already exists !!!"
Public Const error_free_group_duplicity_text = "Free group under this number already exists !!!"
Public Const error_pos_exist_text = "Position under this number doesn|fffd|t exist !!!"
Public Const error_bolt_exist_text = "Bolt under this number doesn|fffd|t exist !!!"
Public Const error_free_group_exist_text = "Group under this number doesn|fffd|t exist !!!"
Public Const error_row_pos_exist_text = "Position in this row doesn|fffd|t exist !!!"
Public Const error_row_free_group_exist_text = "Group in this row doesn|fffd|t exist !!!"
Public Const error_name_description_text = "Title/description must be filled in !!!"
Public Const error_weight_pc_text = "Weight is not numerical value !!!"
Public Const error_area_pc_text = "Area is not numerical value !!!"
Public Const error_empty_rows_text = "Number of empty rows is not positive integer !!!"
Public Const error_plate_dim_exist_text = "No dimension of sheet !!!"
Public Const error_norm_dimension_text = "Inserted value of dimension of normalized position must be number ( without text signs) bigger than 0 !!!"
Public Const error_plate_thickness_text = "Inserted value of sheet thickness must be number ( without text signs ) bigger than 0 !!!"
Public Const error_plate_dimension_text = "Inserted value of dimension of sheet must be number ( without text signs ) bigger than 0  !!!"
Public Const error_part_not_exist_text = "No part exists !!!"
Public Const error_interval_num_text = "Format of inserted interval is not correct or no one entered  !!!"
Public Const error_null_change_text = "Value to change is not entered !!!"
Public Const error_input_row_number_text = "Values of starting row and numbers of deleted rows must be positive integer !!!"
Public Const error_numeric_value_text = "Inserted value must be positive integer !!!"
Public Const error_form_value_text = "All required values are not filled in !!!"

Public Const error_shape_database_file_name_text = "Profile database file doesn|fffd|t exist !!!"
Public Const error_bolt_database_file_name_text = "Bolt database file doesn|fffd|t exist !!!"
Public Const error_template_file_name_text = "Export template doesn|fffd|t exist !!!"
Public Const error_save_BOM_text = "Before export save BOM !!!"

Public Const error_import_file_name_text = "File doesn|fffd|t exist !!!"
Public Const error_import_file_text = "Error note, duplicity of part or duplicity of position in part in imported file in row "
Public Const error_import_file_text_bolt_no = "Error note, bolt set external names are missing (or bolt pcs) in row "
Public Const error_import_file_partlist_line = "Error note, duplicity of part or duplicity of position in part in imported file in PartList Line "
Public Const error_import_parametr_text = "Value of ratio for import must be numerical or no zero !!!"

Public Const question_clear_text = "Are you sure you want to delete table !!!"

Public Const msgbox_title_1 = "Checking of listing of positions and bolt"
Public Const msgbox_title_2 = "Checking of form"
Public Const msgbox_title_3 = "Checking of listing of parts"
Public Const msgbox_title_4 = "Checking of part errors"
Public Const msgbox_title_5 = "Checking of input file"
Public Const msgbox_title_6 = "Checking of export of BOM"
Public Const msgbox_title_7 = "Checking of BOM"
Public Const msgbox_title_8 = "Question"

Public temp_part_names() As temp_part_name
Public temp_positions() As temp_position

Public Type position
        row As Long
        type As Long
        name_description As String
        dimension As String
        plate_dimension As String
        norm_drawing As String
        material As String
        note As String
        weight_pc As Double
        area_pc As Double
        empty_rows As Long
        normed_pos As Boolean
        normed_weight As Double
        normed_area As Double
        is_plate As Boolean
        plate_thickness As Double
        area_plate_weight As Double
        plate_short_name As String
    End Type
    
Public Type short_position
        no As Long
        pc As Long
    End Type

Public Type positions_list
        row As Long
        pc_part As Long
    End Type

Public Type parts
        row As Long
        pc As Long
        pos_list() As positions_list
        pos_list_short() As Long
        exist_pos As Boolean
        weight_pc As Double
        area_pc As Double
        part_name As String
    End Type

Public Type short_parts
        pc As Long
        pos_list_short() As short_position
        exist_pos As Boolean
    End Type

Public Type free_group
        no As Long
        pcs As Long
        name_description As String
        dimension As String
        norm_drawing As String
        material As String
        note As String
        weight_pc As Double
        empty_rows As Long
    End Type

Public Type pos_sum
        pc As Long
    End Type
    
Public Type area_limits
        is_area As Boolean
        start_column As Long
        end_column As Long
        start_row As Long
        end_row As Long
    End Type
    
Public Type temp_part_name
        part_no As String
        part_name As String
    End Type
    
Public Type temp_position
        position_no As Long
        pos_sum As Long
        pos_name As String
        pos_dim As String
        pos_norm As String
    End Type
Attribute VB_Name = "Module2_Subs"
Option Explicit

Sub lock_xls()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    clear_ind
    
    For i = 1 To book_xls.Worksheets.Count
    
        Set sheet_xls = book_xls.Worksheets(i)
    
        sheet_xls.Protect (pass)
        
    Next i

End Sub

Sub unlock_xls()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    For i = 1 To book_xls.Worksheets.Count
    
        book_xls.Worksheets(book_xls.Worksheets.Count - i + 1).Unprotect (pass)
        
    Next i
    
    write_ind

End Sub

Sub lock_xls_2_3()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(2)
    
    'clear_ind

    sheet_xls.Protect (pass)
    
    Set sheet_xls = book_xls.Worksheets(3)

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_2_3()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(2).Unprotect (pass)
    
    book_xls.Worksheets(3).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_5()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(5)
    
    'clear_ind

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_5()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(5).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_1()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(1)
    
    clear_ind

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_1()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(1).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_1_2()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(1)
    
    clear_ind

    sheet_xls.Protect (pass)
    
    Set sheet_xls = book_xls.Worksheets(2)

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_1_2()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(1).Unprotect (pass)
    
    book_xls.Worksheets(2).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_1_3()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(1)
    
    clear_ind

    sheet_xls.Protect (pass)
    
    Set sheet_xls = book_xls.Worksheets(3)

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_1_3()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(1).Unprotect (pass)
    
    book_xls.Worksheets(3).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_1_4()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(1)
    
    clear_ind

    sheet_xls.Protect (pass)
    
    Set sheet_xls = book_xls.Worksheets(4)

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_1_4()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(1).Unprotect (pass)
    
    book_xls.Worksheets(4).Unprotect (pass)
    
    write_ind

End Sub

Sub lock_xls_1_5()

    Dim i As Long
    Dim book_xls As Workbook
    Dim sheet_xls As Worksheet
    
    Set book_xls = ActiveWorkbook
    
    Set sheet_xls = book_xls.Worksheets(1)
    
    clear_ind

    sheet_xls.Protect (pass)
    
    Set sheet_xls = book_xls.Worksheets(5)

    sheet_xls.Protect (pass)

End Sub

Sub unlock_xls_1_5()

    Dim i As Long
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    book_xls.Worksheets(1).Unprotect (pass)
    
    book_xls.Worksheets(5).Unprotect (pass)
    
    write_ind

End Sub

Sub write_ind()

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    cell_1 = "CC1"
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = 1) Then
    
            book_xls.Worksheets(1).Range(cell_1).value = 1
            
        End If

End Sub

Sub clear_ind()

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    cell_1 = "CC1"
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
            
        End If

End Sub

Sub write_error(error_text As String, error_type As Long)

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    cell_1 = "BD" + CStr(error_type)
    
    unlock_xls_1
    
    book_xls.Worksheets(1).Range(cell_1).value = 1
    
    cell_1 = "BC" + CStr(error_type)
    
    book_xls.Worksheets(1).Range(cell_1).value = error_text
    
    lock_xls_1

End Sub

Sub clear_error(error_type As Long)

    Dim cell_1 As String
    Dim cell_2 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    cell_1 = "BC" + CStr(error_type)
    cell_2 = "BD" + CStr(error_type)
    
    If Not (CStr(book_xls.Worksheets(1).Range(cell_1).value) = "") Or Not (CStr(book_xls.Worksheets(1).Range(cell_2).value) = "") Then
    
            unlock_xls_1
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
            book_xls.Worksheets(1).Range(cell_2).value = ""
    
            lock_xls_1
        
        End If

End Sub

Sub clear_parts_line(line_no As Long)

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    cell_1 = "D" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "E" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "F" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "G" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "H" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "I" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "J" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "K" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "L" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "AA" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "AB" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "BB" + CStr(line_no)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If

End Sub

Sub reload_parts_pos_line(part_pc As Long, part_pos As positions_list, pos As position)

    Dim cell_1 As String
    Dim book_xls As Workbook
    Dim h_str As String
    
    Set book_xls = ActiveWorkbook
    
    cell_1 = "D" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = part_pc * part_pos.pc_part) Then
    
            book_xls.Worksheets(1).Range(cell_1).value = part_pc * part_pos.pc_part
            
        End If
    
    cell_1 = "E" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.name_description) Then
    
            book_xls.Worksheets(1).Range(cell_1).value = pos.name_description
            
        End If
    
    cell_1 = "F" + CStr(part_pos.row)
    
    If Not (pos.dimension = "") Then
    
            If Not (CStr(book_xls.Worksheets(1).Range(cell_1).value) = pos.dimension) Then
            
                    If IsNumeric(pos.dimension) Then
    
                            book_xls.Worksheets(1).Range(cell_1).value = CDbl(pos.dimension)
                            
                        Else
                        
                            h_str = "'" + pos.dimension
                        
                            book_xls.Worksheets(1).Range(cell_1).value = h_str
                            
                        End If
                    
                End If
            
        Else
        
            If Not (CStr(book_xls.Worksheets(1).Range(cell_1).value) = "") Then
            
                    book_xls.Worksheets(1).Range(cell_1).value = ""
                    
                End If
        
        End If
    
    cell_1 = "G" + CStr(part_pos.row)
    
    If Not (pos.plate_dimension = "") Then
    
            If Not (CStr(book_xls.Worksheets(1).Range(cell_1).value) = pos.plate_dimension) Then
            
                    If IsNumeric(pos.plate_dimension) Then
            
                            book_xls.Worksheets(1).Range(cell_1).value = CDbl(pos.plate_dimension)
            
                        Else
                        
                            h_str = "'" + pos.plate_dimension
            
                            book_xls.Worksheets(1).Range(cell_1).value = h_str
                            
                        End If
                    
                End If
            
        Else
        
            If Not (CStr(book_xls.Worksheets(1).Range(cell_1).value) = "") Then
            
                    book_xls.Worksheets(1).Range(cell_1).value = ""
                    
                End If
        
        End If
    
    cell_1 = "H" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.norm_drawing) Then
    
            book_xls.Worksheets(1).Range(cell_1).value = pos.norm_drawing
            
        End If
    
    cell_1 = "I" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.material) Then
            
            book_xls.Worksheets(1).Range(cell_1).value = pos.material
            
        End If
    
    cell_1 = "J" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.note) Then
            
            book_xls.Worksheets(1).Range(cell_1).value = pos.note
            
        End If
    
    cell_1 = "K" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.weight_pc) Then
            
            book_xls.Worksheets(1).Range(cell_1).value = pos.weight_pc
            
        End If
    
    cell_1 = "L" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = pos.weight_pc * part_pos.pc_part) Then
            
            book_xls.Worksheets(1).Range(cell_1).value = pos.weight_pc * part_pos.pc_part
            
        End If
    
    cell_1 = "AA" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
            
            book_xls.Worksheets(1).Range(cell_1).value = ""
            
        End If
    
    cell_1 = "AB" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
            
            book_xls.Worksheets(1).Range(cell_1).value = ""
            
        End If
    
    cell_1 = "BB" + CStr(part_pos.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
            
            book_xls.Worksheets(1).Range(cell_1).value = ""
            
        End If

End Sub

Sub reload_parts_part_line(part_no As Long, part As parts, pos() As position)

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    cell_1 = "D" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "E" + CStr(part.row)

    If part.part_name = "" Then

            If Not (book_xls.Worksheets(1).Range(cell_1).value = (part_name + CStr(part_no))) Then
            
                    book_xls.Worksheets(1).Range(cell_1).value = (part_name + CStr(part_no))
                    
                End If

        Else

            If Not (book_xls.Worksheets(1).Range(cell_1).value = (part_name + CStr(part_no) + " - " + part.part_name)) Then
            
                    book_xls.Worksheets(1).Range(cell_1).value = (part_name + CStr(part_no) + " - " + part.part_name)
                    
                End If
                
        End If
    
    cell_1 = "F" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "G" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "H" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "I" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "J" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
    
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "K" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc) Then
        
            book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc
        
        End If
    
    cell_1 = "L" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc * part.pc) Then
        
            book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc * part.pc
        
        End If
    
    cell_1 = "AA" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc * part.pc) Then
        
            book_xls.Worksheets(1).Range(cell_1).value = part.weight_pc * part.pc
        
        End If
    
    cell_1 = "AB" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = part.area_pc * part.pc) Then
        
            book_xls.Worksheets(1).Range(cell_1).value = part.area_pc * part.pc
        
        End If
    
    cell_1 = "BB" + CStr(part.row)
    
    If Not (book_xls.Worksheets(1).Range(cell_1).value = "") Then
        
            book_xls.Worksheets(1).Range(cell_1).value = ""
        
        End If
    
End Sub

Sub reload_parts_pos_sums(part As parts)

    Dim i As Long
    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    If part.exist_pos Then
    
            For i = 1 To UBound(part.pos_list_short)
            
                cell_1 = "D" + CStr(part.pos_list(part.pos_list_short(i)).row)
                
                If Not (book_xls.Worksheets(1).Range(cell_1).value = (part.pc * part.pos_list(part.pos_list_short(i)).pc_part)) Then
                                    
                        book_xls.Worksheets(1).Range(cell_1).value = (part.pc * part.pos_list(part.pos_list_short(i)).pc_part)
            
                    End If
            
            Next i
            
        End If

End Sub

Sub clear_csv_line(line_no As Long, unlock_csv As Boolean)

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    cell_1 = "A" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "B" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "C" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "D" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "E" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If

End Sub

Sub export_BOM()

    Dim book_xls_1 As Workbook
    Dim book_xls_2 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    
    Dim i As Long
    Dim cell_1 As String
    
    Set book_xls_1 = ActiveWorkbook
    
    If Not (book_xls_1.Path = "") Then
    
            Dim fso
        
            Dim tepmplate_file_path As String
            Dim export_file_path As String
            
            Set sheet_xls_1 = book_xls_1.Worksheets(1)
            
            cell_1 = "CA3"
            tepmplate_file_path = sheet_xls_1.Range(cell_1).value
            
            Set fso = CreateObject("Scripting.FileSystemObject")
            
            If fso.FileExists(tepmplate_file_path) Then
    
                    Workbooks.Open Filename:=tepmplate_file_path
                    
                    export_file_path = book_xls_1.Path + "\" + book_xls_1.Name
                    
                    export_file_path = Left(export_file_path, (Len(export_file_path) - 4))
                    
                    export_file_path = export_file_path + "_export.xls"
                    
                    ActiveWorkbook.SaveAs Filename:=export_file_path, FileFormat:=xlNormal, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False, CreateBackup:=False
                    
                    Set book_xls_2 = ActiveWorkbook
                    
                    'kopirovani listu
                    
                    For i = 1 To 5
                    
                        book_xls_1.Activate
                        
                        Set sheet_xls_1 = book_xls_1.Worksheets(i)
                        
                        sheet_xls_1.Activate
                        
                        Select Case i
                        
                            Case 1
                            
                                Columns("A:L").Copy
                        
                            Case 2
                            
                                Columns("A:K").Copy
                        
                            Case 3
                            
                                Columns("A:I").Copy
                        
                            Case 4
                            
                                Columns("A:I").Copy
                        
                            Case 5
                            
                                Columns("A:H").Copy
                            
                        End Select
                        
                        book_xls_2.Activate
                        
                        Set sheet_xls_2 = book_xls_2.Worksheets(i)
                        
                        sheet_xls_2.Activate
                    
                        Columns("A:A").Select
                        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                        
                        Range("A7").Select
                        Selection.ClearContents
                        
                        Range("A8").Select
                        
                        sheet_xls_2.Protect
                        
                    Next i
                        
                    Set sheet_xls_1 = book_xls_1.Worksheets(1)
                    
                    sheet_xls_1.Activate
                    
                    Set sheet_xls_2 = book_xls_2.Worksheets(1)
                        
                    sheet_xls_2.Activate
                    
                    book_xls_2.Save
                    
                Else
                
                    MsgBox error_template_file_name_text, vbInformation, msgbox_title_6
                
                End If
            
        Else
        
            MsgBox error_save_BOM_text, vbInformation, msgbox_title_6
        
        End If

End Sub

Sub clear_csv_free_group_line(line_no As Long, unlock_csv As Boolean)

    Dim cell_1 As String
    Dim book_xls As Workbook
    
    Set book_xls = ActiveWorkbook
    
    cell_1 = "G" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If
    
    cell_1 = "H" + CStr(line_no)
    
    If Not (book_xls.Worksheets(5).Range(cell_1).value = "") Then
    
            If Not (unlock_csv) Then
            
                    unlock_xls_5
            
                    unlock_csv = True
            
                End If
    
            book_xls.Worksheets(5).Range(cell_1).value = ""
        
        End If

End Sub


Attribute VB_Name = "Module3_Functions"
Option Explicit

Public Function get_positions(pos_list() As position, error_text As String) As Boolean

    Dim i As Long
    Dim lng_val As Long
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(2)
    Set sheet_xls_2 = book_xls.Worksheets(3)
    Set sheet_xls_3 = book_xls.Worksheets(1)
    
    ReDim pos_list(0)
    
    get_positions = True
    error_text = ""
    
    last_row = sheet_xls_1.UsedRange.Rows.Count
    
    For i = first_row To last_row
    
        cell_1 = "A" + CStr(i)
        
        If Not (CStr(sheet_xls_1.Range(cell_1).value) = "") Then
        
                If isLong(CStr(sheet_xls_1.Range(cell_1).value)) Then
                
                        lng_val = CLng(sheet_xls_1.Range(cell_1).value)
                        
                        If UBound(pos_list) < lng_val Then
                        
                                ReDim Preserve pos_list(lng_val)
        
                            End If
                                
                    Else
                    
                        error_text = error_cell_value_text + sheet_xls_1.Name + "!" + cell_1 + " !!!"
                        
                        get_positions = False
                        
                        write_error error_text, 2
                        
                        Exit Function
                        
                    End If
                
                If pos_list(lng_val).row = 0 Then
                
                        pos_list(lng_val).row = i
                        pos_list(lng_val).type = 1
                        
                        cell_1 = "C" + CStr(i)
                        pos_list(lng_val).name_description = CStr(sheet_xls_1.Range(cell_1).value)
                        
                        cell_1 = "D" + CStr(i)
                        pos_list(lng_val).dimension = CStr(sheet_xls_1.Range(cell_1).value)

                        cell_1 = "E" + CStr(i)
                        pos_list(lng_val).plate_dimension = CStr(sheet_xls_1.Range(cell_1).value)
                        
                        cell_1 = "F" + CStr(i)
                        pos_list(lng_val).norm_drawing = CStr(sheet_xls_1.Range(cell_1).value)
                        
                        cell_1 = "G" + CStr(i)
                        pos_list(lng_val).material = CStr(sheet_xls_1.Range(cell_1).value)
                        
                        cell_1 = "H" + CStr(i)
                        pos_list(lng_val).note = CStr(sheet_xls_1.Range(cell_1).value)
                        
                        cell_1 = "I" + CStr(i)
                        
                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Or CStr(sheet_xls_1.Range(cell_1).value) = "" Then
                        
                                pos_list(lng_val).weight_pc = CDbl(sheet_xls_1.Range(cell_1).value)

                            Else
                            
                                error_text = error_double_value_text_1 + sheet_xls_1.Name + "!" + cell_1 + error_double_value_text_2
                                
                                get_positions = False
                                
                                write_error error_text, 2
                                
                                Exit Function
                            
                            End If

                        cell_1 = "J" + CStr(i)
                        
                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Or CStr(sheet_xls_1.Range(cell_1).value) = "" Then
                        
                                pos_list(lng_val).area_pc = CDbl(sheet_xls_1.Range(cell_1).value)

                            Else
                            
                                error_text = error_double_value_text_1 + sheet_xls_1.Name + "!" + cell_1 + error_double_value_text_2
                                
                                get_positions = False
                                
                                write_error error_text, 2
                                
                                Exit Function
                            
                            End If

                        cell_1 = "BA" + CStr(i)
                        
                        If isLong(CStr(sheet_xls_1.Range(cell_1).value)) Then
                        
                                pos_list(lng_val).empty_rows = CLng(sheet_xls_1.Range(cell_1).value)
                            
                            End If

                        cell_1 = "BC" + CStr(i)
                        
                        If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                        
                                cell_1 = "BD" + CStr(i)
                                
                                If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                        
                                        pos_list(lng_val).normed_pos = True
                                        pos_list(lng_val).normed_weight = CDbl(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "BE" + CStr(i)
                                        
                                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                        
                                                pos_list(lng_val).normed_area = CDbl(sheet_xls_1.Range(cell_1).value)
                                        
                                            End If
                                            
                                        pos_list(lng_val).is_plate = False
                                        
                                    Else
                                    
                                        pos_list(lng_val).normed_pos = False
                                        
                                    End If
                                    
                            Else
                            
                                pos_list(lng_val).normed_pos = False
                            
                            End If
                            
                        If pos_list(lng_val).normed_pos = False Then
                        
                                cell_1 = "BG" + CStr(i)
                        
                                If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                
                                        If CDbl(sheet_xls_1.Range(cell_1).value) > 0 Then
                                        
                                                pos_list(lng_val).is_plate = True
                                                
                                                pos_list(lng_val).plate_thickness = CDbl(sheet_xls_1.Range(cell_1).value)
                                                
                                                cell_1 = "BH" + CStr(i)
                                                
                                                If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                                
                                                        pos_list(lng_val).area_plate_weight = CDbl(sheet_xls_1.Range(cell_1).value)
                                                        
                                                    End If
                                                    
                                                cell_1 = "BI" + CStr(i)
                                                pos_list(lng_val).plate_short_name = CStr(sheet_xls_1.Range(cell_1).value)

                                            Else
                                            
                                                pos_list(lng_val).is_plate = False
                                            
                                            End If
                                
                                    Else
                                    
                                        pos_list(lng_val).is_plate = False
                                
                                    End If
                                
                            End If
                    
                    Else
                    
                        Select Case pos_list(lng_val).type
                        
                            Case 1
                            
                                error_text = error_pos_double_counting_text_1 + sheet_xls_1.Name + "!" + cell_1 + error_pos_double_counting_text_2 + sheet_xls_1.Name + "!A" + CStr(pos_list(lng_val).row) + " !!!"
                            
                            Case 2
                            
                                error_text = error_pos_double_counting_text_1 + sheet_xls_1.Name + "!" + cell_1 + error_pos_double_counting_text_2 + sheet_xls_2.Name + "!A" + CStr(pos_list(lng_val).row) + " !!!"
                            
                        End Select
        
                        get_positions = False
                        
                        write_error error_text, 2
                        
                        Exit Function
                    
                    End If
                    
            End If
        
    Next i
    
    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    For i = first_row To last_row
    
        cell_1 = "A" + CStr(i)
        
        If Not (CStr(sheet_xls_2.Range(cell_1).value) = "") Then
        
                If isLong(CStr(sheet_xls_2.Range(cell_1).value)) Then
                
                        lng_val = CLng(sheet_xls_2.Range(cell_1).value)
                        
                        If UBound(pos_list) < lng_val Then
                        
                                ReDim Preserve pos_list(lng_val)
        
                            End If
                                
                    Else
                    
                        error_text = error_cell_value_text + sheet_xls_2.Name + "!" + cell_1 + " !!!"
                        
                        get_positions = False
                        
                        write_error error_text, 2
                        
                        Exit Function
                        
                    End If
                
                If pos_list(lng_val).row = 0 Then
                
                        pos_list(lng_val).row = i
                        pos_list(lng_val).type = 2
                        
                        cell_1 = "C" + CStr(i)
                        pos_list(lng_val).name_description = CStr(sheet_xls_2.Range(cell_1).value)
                        
                        cell_1 = "D" + CStr(i)
                        pos_list(lng_val).dimension = CStr(sheet_xls_2.Range(cell_1).value)
                        
                        cell_1 = "E" + CStr(i)
                        pos_list(lng_val).norm_drawing = CStr(sheet_xls_2.Range(cell_1).value)
                        
                        cell_1 = "F" + CStr(i)
                        pos_list(lng_val).material = CStr(sheet_xls_2.Range(cell_1).value)
                        
                        cell_1 = "G" + CStr(i)
                        pos_list(lng_val).note = CStr(sheet_xls_2.Range(cell_1).value)
                        
                        cell_1 = "H" + CStr(i)
                        
                        If IsNumeric(CStr(sheet_xls_2.Range(cell_1).value)) Or CStr(sheet_xls_2.Range(cell_1).value) = "" Then
                        
                                pos_list(lng_val).weight_pc = CDbl(sheet_xls_2.Range(cell_1).value)

                            Else
                            
                                error_text = error_double_value_text_1 + sheet_xls_2.Name + "!" + cell_1 + error_double_value_text_2
                                
                                get_positions = False
                                
                                write_error error_text, 2
                                
                                Exit Function
                            
                            End If

                        cell_1 = "BA" + CStr(i)
                        
                        If isLong(CStr(sheet_xls_2.Range(cell_1).value)) Then
                        
                                pos_list(lng_val).empty_rows = CLng(sheet_xls_2.Range(cell_1).value)
                            
                            End If
                            
                        pos_list(lng_val).normed_pos = False
                        pos_list(lng_val).is_plate = False
                    
                    Else
                    
                        Select Case pos_list(lng_val).type
                        
                            Case 1
                            
                                error_text = error_pos_double_counting_text_1 + sheet_xls_2.Name + "!" + cell_1 + error_pos_double_counting_text_2 + sheet_xls_1.Name + "!A" + CStr(pos_list(lng_val).row) + " !!!"
                            
                            Case 2
                            
                                error_text = error_pos_double_counting_text_1 + sheet_xls_2.Name + "!" + cell_1 + error_pos_double_counting_text_2 + sheet_xls_2.Name + "!A" + CStr(pos_list(lng_val).row) + " !!!"
                            
                        End Select
        
                        get_positions = False
                        
                        write_error error_text, 2
                        
                        Exit Function
                    
                    End If
                    
            End If
        
    Next i
    
    clear_error 2

End Function

Public Function reload_parts(pos_list() As position, changed_area As area_limits) As Boolean

    Dim parts_list() As parts
    Dim positions_sum() As pos_sum
    Dim new_bolt As position

    Dim i As Long
    Dim j As Long
    Dim lng_val_1 As Long
    Dim lng_val_2 As Long
    Dim last_row_1 As Long
    Dim last_row_2 As Long
    Dim last_row_3 As Long
    Dim last_row_5 As Long
    Dim end_csv_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim sheet_xls_3 As Worksheet
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    Dim cell_3 As String
    Dim cell_4 As String
    Dim cell_5 As String
    Dim cell_6 As String
    Dim cell_7 As String
    
    Dim cell_11 As String
    Dim cell_12 As String
    Dim cell_13 As String
    Dim cell_14 As String
    
    Dim cell_21 As String
    Dim cell_22 As String
    Dim cell_23 As String
    Dim cell_24 As String
    Dim cell_25 As String
    Dim cell_26 As String
    Dim cell_27 As String
    
    Dim error_text_1 As String
    Dim error_text_2 As String
    Dim error_text_3 As String
    Dim error_text_4 As String
    Dim error_text_5 As String
    
    Dim h_str As String
    
    Dim unlock_csv As Boolean
    Dim unlock_pos_bolt As Boolean
    Dim recheck_line As Boolean
    Dim part_sum() As Long
    Dim row_string As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(2)
    Set sheet_xls_3 = book_xls.Worksheets(3)
    Set sheet_xls_5 = book_xls.Worksheets(5)
    
    ReDim parts_list(0)
    ReDim positions_sum(UBound(pos_list))
    
    'get_parts = True
    'error_text = ""
    
    unlock_xls_1
    
    last_row_1 = sheet_xls_1.UsedRange.Rows.Count
    last_row_2 = sheet_xls_2.UsedRange.Rows.Count
    last_row_3 = sheet_xls_3.UsedRange.Rows.Count
    last_row_5 = sheet_xls_5.UsedRange.Rows.Count
    
    For i = first_row To last_row_1
    
        cell_1 = "A" + CStr(i)
        cell_2 = "B" + CStr(i)
        cell_3 = "C" + CStr(i)
        
        If (isLong(sheet_xls_1.Range(cell_1).value) And CStr(sheet_xls_1.Range(cell_2).value) = "" And isLong(sheet_xls_1.Range(cell_3).value)) Or (isLong(sheet_xls_1.Range(cell_1).value) And isLong(sheet_xls_1.Range(cell_2).value) And isLong(sheet_xls_1.Range(cell_3).value)) Then
        
                If (isLong(sheet_xls_1.Range(cell_1).value) And CStr(sheet_xls_1.Range(cell_2).value) = "" And isLong(sheet_xls_1.Range(cell_3).value)) Then
                
                        'je to zapis dilce
                
                        lng_val_1 = CLng(sheet_xls_1.Range(cell_1).value)
                        
                        If UBound(parts_list) < lng_val_1 Then
                        
                                ReDim Preserve parts_list(lng_val_1)
        
                            End If
                            
                        If parts_list(lng_val_1).row = 0 Then
                        
                                'zapis noveho dilce
                                
                                parts_list(lng_val_1).row = i
                                parts_list(lng_val_1).pc = CLng(sheet_xls_1.Range(cell_3).value)
                                parts_list(lng_val_1).part_name = get_part_name(lng_val_1)
                                
                                If parts_list(lng_val_1).exist_pos Then
                                
                                        For j = 1 To UBound(parts_list(lng_val_1).pos_list_short)
        
                                            positions_sum(parts_list(lng_val_1).pos_list_short(j)).pc = positions_sum(parts_list(lng_val_1).pos_list_short(j)).pc + (parts_list(lng_val_1).pos_list(parts_list(lng_val_1).pos_list_short(j)).pc_part * parts_list(lng_val_1).pc)
                                        
                                        Next j
                                        
                                    End If
                        
                            Else
                            
                                'dilec existuje
                                
                                cell_12 = "E" + CStr(i)
                                
                                If Not (sheet_xls_1.Range(cell_12).value = error_parts_double_counting_part_cell) Then
                                
                                        clear_parts_line i
                                        
                                        cell_13 = "BB" + CStr(i)
                                        
                                        sheet_xls_1.Range(cell_12).value = error_parts_double_counting_part_cell
                                        sheet_xls_1.Range(cell_13).value = 1
                                            
                                    End If
                                        
                                If error_text_2 = "" Then
                                
                                        error_text_2 = error_parts_double_counting_part + CStr(i) + " !!!"
                                        
                                        cell_12 = "BE3"
                                        cell_13 = "BF3"
                                        
                                        sheet_xls_1.Range(cell_12).value = error_text_2
                                        sheet_xls_1.Range(cell_13).value = 1
                                        
                                    End If
                            
                            End If
                
                    Else
                    
                        'je to zapis pozice
                
                        lng_val_1 = CLng(sheet_xls_1.Range(cell_1).value)
                        
                        If UBound(parts_list) < lng_val_1 Then
                        
                                ReDim Preserve parts_list(lng_val_1)
        
                            End If
                
                        lng_val_2 = CLng(sheet_xls_1.Range(cell_2).value)
                        
                        If Not (lng_val_2 > UBound(pos_list)) Then
                            
                                If pos_list(lng_val_2).row = 0 Then
                                    
                                        cell_14 = "E" + CStr(i)
                                        
                                        If Not ((Not (i > (changed_area.start_row - 1) And i < (changed_area.end_row + 1))) And (sheet_xls_1.Range(cell_14).value = error_parts_exist_pos_cell)) Then
                                    
                                                If get_bolt_from_database_pos_no(lng_val_2, new_bolt) Then
                                                        
                                                        last_row_3 = last_row_3 + 1
                                                
                                                        cell_21 = "A" + CStr(last_row_3)
                                                        cell_22 = "C" + CStr(last_row_3)
                                                        cell_23 = "D" + CStr(last_row_3)
                                                        cell_24 = "E" + CStr(last_row_3)
                                                        cell_25 = "F" + CStr(last_row_3)
                                                        cell_26 = "G" + CStr(last_row_3)
                                                        cell_27 = "H" + CStr(last_row_3)
                                                        
                                                        If Not (unlock_pos_bolt) Then
                                                        
                                                                unlock_xls_2_3
                                                        
                                                                unlock_pos_bolt = True
                                                        
                                                            End If
                                                            
                                                        sheet_xls_3.Range(cell_21).value = lng_val_2
                                                        sheet_xls_3.Range(cell_22).value = new_bolt.name_description
                                                        
                                                        If IsNumeric(new_bolt.dimension) Then
                                                        
                                                                sheet_xls_3.Range(cell_23).value = CDbl(new_bolt.dimension)
                                                        
                                                            Else
                                                            
                                                                h_str = "'" + new_bolt.dimension
                                                        
                                                                sheet_xls_3.Range(cell_23).value = h_str
                                                                
                                                            End If
                                                            
                                                        sheet_xls_3.Range(cell_24).value = new_bolt.norm_drawing
                                                        sheet_xls_3.Range(cell_25).value = new_bolt.material
                                                        sheet_xls_3.Range(cell_26).value = new_bolt.note
                                                        sheet_xls_3.Range(cell_27).value = new_bolt.weight_pc
                                                        
                                                        'ReDim Preserve pos_list(lng_val_2)
                                                        
                                                        pos_list(lng_val_2).name_description = new_bolt.name_description
                                                        pos_list(lng_val_2).dimension = new_bolt.dimension
                                                        pos_list(lng_val_2).norm_drawing = new_bolt.norm_drawing
                                                        pos_list(lng_val_2).material = new_bolt.material
                                                        pos_list(lng_val_2).note = new_bolt.note
                                                        pos_list(lng_val_2).weight_pc = new_bolt.weight_pc
                                                        pos_list(lng_val_2).row = last_row_3
                                                        pos_list(lng_val_2).type = 2
                                                
                                                        recheck_line = True
                                                
                                                    Else
                                        
                                                        'pozice neexistuje
                                                        
                                                        cell_12 = "E" + CStr(i)
                                                        
                                                        If Not (sheet_xls_1.Range(cell_12).value = error_parts_exist_pos_cell) Then
                                                        
                                                                clear_parts_line i
                        
                                                                cell_13 = "BB" + CStr(i)
                                                                
                                                                sheet_xls_1.Range(cell_12).value = error_parts_exist_pos_cell
                                                                sheet_xls_1.Range(cell_13).value = 1
                                                                    
                                                            End If
                                                                
                                                        If error_text_5 = "" Then
                                                        
                                                                error_text_5 = error_parts_exist_pos_1 + CStr(i) + error_parts_exist_pos_2
                                                                
                                                                cell_12 = "BK3"
                                                                cell_13 = "BL3"
                                                                
                                                                sheet_xls_1.Range(cell_12).value = error_text_5
                                                                sheet_xls_1.Range(cell_13).value = 1
                                                                
                                                            End If
                                                            
                                                    End If
                                    
                                            Else
                                            
                                                If sheet_xls_1.Range(cell_14).value = error_parts_exist_pos_cell Then
                                                
                                                        If error_text_5 = "" Then
                                                        
                                                                error_text_5 = error_parts_exist_pos_1 + CStr(i) + error_parts_exist_pos_2
                                                                
                                                                cell_12 = "BK3"
                                                                cell_13 = "BL3"
                                                                
                                                                sheet_xls_1.Range(cell_12).value = error_text_5
                                                                sheet_xls_1.Range(cell_13).value = 1
                                                                
                                                            End If
                                                            
                                                    End If
                                                    
                                            End If
                                        
                                    Else
                                
                                        If parts_list(lng_val_1).exist_pos Then
                                
                                                If UBound(parts_list(lng_val_1).pos_list) < lng_val_2 Then
                                                
                                                        ReDim Preserve parts_list(lng_val_1).pos_list(lng_val_2)
                                
                                                    End If
                                                    
                                            Else
                                            
                                                ReDim parts_list(lng_val_1).pos_list(0)
                                                
                                                ReDim Preserve parts_list(lng_val_1).pos_list(lng_val_2)
                                            
                                                ReDim parts_list(lng_val_1).pos_list_short(0)
                                                parts_list(lng_val_1).exist_pos = True
                                                    
                                            End If
                                    
                                        If parts_list(lng_val_1).pos_list(lng_val_2).row = 0 Then
                                        
                                                'zapis pozice do dilce
                                        
                                                parts_list(lng_val_1).pos_list(lng_val_2).row = i
                                                parts_list(lng_val_1).pos_list(lng_val_2).pc_part = CLng(sheet_xls_1.Range(cell_3).value)
                                                
                                                ReDim Preserve parts_list(lng_val_1).pos_list_short(UBound(parts_list(lng_val_1).pos_list_short) + 1)
        
                                                parts_list(lng_val_1).pos_list_short(UBound(parts_list(lng_val_1).pos_list_short)) = lng_val_2
                                                
                                                parts_list(lng_val_1).weight_pc = parts_list(lng_val_1).weight_pc + (parts_list(lng_val_1).pos_list(lng_val_2).pc_part * pos_list(lng_val_2).weight_pc)
                                                
                                                parts_list(lng_val_1).area_pc = parts_list(lng_val_1).area_pc + (parts_list(lng_val_1).pos_list(lng_val_2).pc_part * pos_list(lng_val_2).area_pc)
                                                    
                                                positions_sum(lng_val_2).pc = positions_sum(lng_val_2).pc + (parts_list(lng_val_1).pos_list(lng_val_2).pc_part * parts_list(lng_val_1).pc)
                                                
                                                'Next j
                                        
                                            Else
                                            
                                                'duplicita pozice v ramci jednoho dilce
                                        
                                                cell_12 = "E" + CStr(i)
                                                
                                                If Not (sheet_xls_1.Range(cell_12).value = error_parts_double_counting_pos_cell) Then
                                                
                                                        clear_parts_line i
                                                        
                                                        cell_13 = "BB" + CStr(i)
                                                        
                                                        sheet_xls_1.Range(cell_12).value = error_parts_double_counting_pos_cell
                                                        sheet_xls_1.Range(cell_13).value = 1
                                                            
                                                    End If
                                                        
                                                If error_text_4 = "" Then
                                                
                                                        error_text_4 = error_parts_double_counting_pos + CStr(i) + " !!!"
                                                        
                                                        cell_12 = "BI3"
                                                        cell_13 = "BJ3"
                                                        
                                                        sheet_xls_1.Range(cell_12).value = error_text_4
                                                        sheet_xls_1.Range(cell_13).value = 1
                                                        
                                                    End If
                                            
                                            End If
                                    
                                    End If
                                    
                            Else
                            
                                cell_14 = "E" + CStr(i)
                                
                                If Not ((Not (i > (changed_area.start_row - 1) And i < (changed_area.end_row + 1))) And (sheet_xls_1.Range(cell_14).value = error_parts_exist_pos_cell)) Then

                                        If get_bolt_from_database_pos_no(lng_val_2, new_bolt) Then
                                                
                                                last_row_3 = last_row_3 + 1
                                        
                                                cell_21 = "A" + CStr(last_row_3)
                                                cell_22 = "C" + CStr(last_row_3)
                                                cell_23 = "D" + CStr(last_row_3)
                                                cell_24 = "E" + CStr(last_row_3)
                                                cell_25 = "F" + CStr(last_row_3)
                                                cell_26 = "G" + CStr(last_row_3)
                                                cell_27 = "H" + CStr(last_row_3)
                                                
                                                If Not (unlock_pos_bolt) Then
                                                
                                                        unlock_xls_2_3
                                                
                                                        unlock_pos_bolt = True
                                                
                                                    End If
                                                    
                                                sheet_xls_3.Range(cell_21).value = lng_val_2
                                                sheet_xls_3.Range(cell_22).value = new_bolt.name_description
                                                
                                                If IsNumeric(new_bolt.dimension) Then
                                                
                                                        sheet_xls_3.Range(cell_23).value = CDbl(new_bolt.dimension)
                                                
                                                    Else
                                                    
                                                        h_str = "'" + new_bolt.dimension
                                                
                                                        sheet_xls_3.Range(cell_23).value = h_str
                                                        
                                                    End If
                                                    
                                                sheet_xls_3.Range(cell_24).value = new_bolt.norm_drawing
                                                sheet_xls_3.Range(cell_25).value = new_bolt.material
                                                sheet_xls_3.Range(cell_26).value = new_bolt.note
                                                sheet_xls_3.Range(cell_27).value = new_bolt.weight_pc
                                                
                                                ReDim Preserve pos_list(lng_val_2)
                                                ReDim Preserve positions_sum(lng_val_2)
                                                
                                                pos_list(lng_val_2).name_description = new_bolt.name_description
                                                pos_list(lng_val_2).dimension = new_bolt.dimension
                                                pos_list(lng_val_2).norm_drawing = new_bolt.norm_drawing
                                                pos_list(lng_val_2).material = new_bolt.material
                                                pos_list(lng_val_2).note = new_bolt.note
                                                pos_list(lng_val_2).weight_pc = new_bolt.weight_pc
                                                pos_list(lng_val_2).row = (last_row_3)
                                                pos_list(lng_val_2).type = 2
                                        
                                                recheck_line = True
                                        
                                            Else
                                    
                                            'pozice neexistuje
                                                
                                                cell_12 = "E" + CStr(i)
                                                
                                                If Not (sheet_xls_1.Range(cell_12).value = error_parts_exist_pos_cell) Then
                                                
                                                        clear_parts_line i
                                                        
                                                        cell_13 = "BB" + CStr(i)
                                                        
                                                        sheet_xls_1.Range(cell_12).value = error_parts_exist_pos_cell
                                                        sheet_xls_1.Range(cell_13).value = 1
                                                            
                                                    End If
                                                        
                                                If error_text_5 = "" Then
                                                
                                                        error_text_5 = error_parts_exist_pos_1 + CStr(i) + error_parts_exist_pos_2
                                                        
                                                        cell_12 = "BK3"
                                                        cell_13 = "BL3"
                                                        
                                                        sheet_xls_1.Range(cell_12).value = error_text_5
                                                        sheet_xls_1.Range(cell_13).value = 1
                                                        
                                                    End If
                                                    
                                            End If
                                    
                                    Else
                                    
                                        If sheet_xls_1.Range(cell_14).value = error_parts_exist_pos_cell Then
                                        
                                                If error_text_5 = "" Then
                                                
                                                        error_text_5 = error_parts_exist_pos_1 + CStr(i) + error_parts_exist_pos_2
                                                        
                                                        cell_12 = "BK3"
                                                        cell_13 = "BL3"
                                                        
                                                        sheet_xls_1.Range(cell_12).value = error_text_5
                                                        sheet_xls_1.Range(cell_13).value = 1
                                                        
                                                    End If
                                                    
                                            End If
                                    
                                    End If

                            End If
                    
                    End If
        
            Else
            
                If Not (CStr(sheet_xls_1.Range(cell_1).value) = "" And CStr(sheet_xls_1.Range(cell_2).value) = "" And CStr(sheet_xls_1.Range(cell_3).value) = "") Then
                
                        If (Not (isLong(sheet_xls_1.Range(cell_1).value)) And Not (CStr(sheet_xls_1.Range(cell_1).value) = "")) Or (Not (isLong(sheet_xls_1.Range(cell_2).value)) And Not (CStr(sheet_xls_1.Range(cell_2).value) = "")) Or (Not (isLong(sheet_xls_1.Range(cell_3).value)) And Not (CStr(sheet_xls_1.Range(cell_3).value) = "")) Then
                        
                                If (Not (isLong(sheet_xls_1.Range(cell_1).value)) And Not (CStr(sheet_xls_1.Range(cell_1).value) = "")) Then
                                
                                        'chybny zapis v bunce cell_1
                                                                                
                                        sheet_xls_1.Range(cell_1).value = ""
                                        
                                        recheck_line = True
                                
                                    Else
                        
                                        If (Not (isLong(sheet_xls_1.Range(cell_2).value)) And Not (CStr(sheet_xls_1.Range(cell_2).value) = "")) Then
                                        
                                                'chybny zapis v bunce cell_2
                                                                                        
                                                sheet_xls_1.Range(cell_2).value = ""
                                        
                                                recheck_line = True
                                        
                                            Else
                                            
                                                'chybny zapis v bunce cell_3
                                                                                        
                                                sheet_xls_1.Range(cell_3).value = ""
                                        
                                                recheck_line = True
                                            
                                            End If
                                            
                                    End If

                            Else
                            
                                'zapis je neuplny
                                
                                cell_12 = "E" + CStr(i)
                                
                                If Not (sheet_xls_1.Range(cell_12).value = error_parts_incomplete_input_cell) Then
                                
                                        clear_parts_line i
                                        
                                        cell_13 = "BB" + CStr(i)
                                        
                                        sheet_xls_1.Range(cell_12).value = error_parts_incomplete_input_cell
                                        sheet_xls_1.Range(cell_13).value = 1
                                            
                                    End If
                                        
                                If error_text_1 = "" Then
                                
                                        error_text_1 = error_parts_incomplete_input + CStr(i) + " !!!"
                                        
                                        cell_12 = "BC3"
                                        cell_13 = "BD3"
                                        
                                        sheet_xls_1.Range(cell_12).value = error_text_1
                                        sheet_xls_1.Range(cell_13).value = 1
                                        
                                    End If
                            
                            End If
                
                    End If
                    
                If (CStr(sheet_xls_1.Range(cell_1).value) = "" And CStr(sheet_xls_1.Range(cell_2).value) = "" And CStr(sheet_xls_1.Range(cell_3).value) = "") Then
                
                        cell_4 = "E" + CStr(i)
                        
                        If Not (sheet_xls_1.Range(cell_4).value = "") Then
                        
                                clear_parts_line i
                        
                            End If
                
                    End If
            
            End If
            
        If recheck_line Then
            
                i = i - 1
                
                recheck_line = False
                
            End If
        
    Next i
    
    'kontrola naplneni hlavicek
    
    For i = 1 To UBound(parts_list)
    
        If parts_list(i).row = 0 Then
        
                If parts_list(i).exist_pos Then
        
                        For j = 1 To UBound(parts_list(i).pos_list_short)
                        
                            'dilec neexistuje
                                
                            cell_12 = "E" + CStr(parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row)
                            
                            If Not (sheet_xls_1.Range(cell_12).value = error_parts_exist_part_cell) Then
                            
                                    clear_parts_line parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row
                                    
                                    cell_13 = "BB" + CStr(parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row)
                                            
                                    
                                    sheet_xls_1.Range(cell_12).value = error_parts_exist_part_cell
                                    sheet_xls_1.Range(cell_13).value = 1
                                        
                                End If
                                    
                            If error_text_3 = "" Then
                            
                                    error_text_3 = error_parts_exist_part_1 + CStr(parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row) + error_parts_exist_part_2
                                    
                                    cell_12 = "BG3"
                                    cell_13 = "BH3"
                                    
                                    sheet_xls_1.Range(cell_12).value = error_text_3
                                    sheet_xls_1.Range(cell_13).value = 1
                                    
                                End If
                        
                        Next j
                        
                    End If
        
            End If
    
    Next i
    
    'pokud probehne kontrola bez chyb, tak chyby vymazat
    
    If error_text_1 = "" Then
    
            cell_12 = "BC3"
            cell_13 = "BD3"
            
            If sheet_xls_1.Range(cell_13).value = 1 Then
                        
                    sheet_xls_1.Range(cell_12).value = ""
                    sheet_xls_1.Range(cell_13).value = ""
                    
                End If
    
        End If
    
    If error_text_2 = "" Then
    
            cell_12 = "BE3"
            cell_13 = "BF3"
            
            If sheet_xls_1.Range(cell_13).value = 1 Then
                        
                    sheet_xls_1.Range(cell_12).value = ""
                    sheet_xls_1.Range(cell_13).value = ""
                    
                End If
    
        End If
    
    If error_text_3 = "" Then
    
            cell_12 = "BG3"
            cell_13 = "BH3"
            
            If sheet_xls_1.Range(cell_13).value = 1 Then
                        
                    sheet_xls_1.Range(cell_12).value = ""
                    sheet_xls_1.Range(cell_13).value = ""
                    
                End If
    
        End If
    
    If error_text_4 = "" Then
    
            cell_12 = "BI3"
            cell_13 = "BJ3"
            
            If sheet_xls_1.Range(cell_13).value = 1 Then
                        
                    sheet_xls_1.Range(cell_12).value = ""
                    sheet_xls_1.Range(cell_13).value = ""
                    
                End If
    
        End If
    
    If error_text_5 = "" Then
    
            cell_12 = "BK3"
            cell_13 = "BL3"
            
            If sheet_xls_1.Range(cell_13).value = 1 Then
                       
                    sheet_xls_1.Range(cell_12).value = ""
                    sheet_xls_1.Range(cell_13).value = ""
                    
                End If
    
        End If
        
    'kontrola dilcu - zmeny
    
    'zmeny pozic
    
    For i = 1 To UBound(parts_list)
    
        If Not (parts_list(i).row = 0) Then
        
                If parts_list(i).exist_pos Then
        
                        For j = 1 To UBound(parts_list(i).pos_list_short)
                        
                            cell_11 = "BB" + CStr(parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row)
                        
                            If (parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row > (changed_area.start_row - 1) And parts_list(i).pos_list(parts_list(i).pos_list_short(j)).row < (changed_area.end_row + 1)) Or (sheet_xls_1.Range(cell_11).value = 1) Then
                                        
                                    reload_parts_pos_line parts_list(i).pc, parts_list(i).pos_list(parts_list(i).pos_list_short(j)), pos_list(parts_list(i).pos_list_short(j))
                            
                                End If
                        
                        Next j
                        
                    End If
        
            End If
    
    Next i
    
    'zmeny dilcu
    
    For i = 1 To UBound(parts_list)
    
        If Not (parts_list(i).row = 0) Then
                
                cell_11 = "BB" + CStr(parts_list(i).row)
            
                If (parts_list(i).row > (changed_area.start_row - 1) And parts_list(i).row < (changed_area.end_row + 1)) Or (sheet_xls_1.Range(cell_11).value = 1) Then
                        
                        reload_parts_part_line i, parts_list(i), pos_list
                        
                        reload_parts_pos_sums parts_list(i)
                        
                    Else

                        cell_1 = "K" + CStr(parts_list(i).row)
                        cell_2 = "L" + CStr(parts_list(i).row)
                        cell_3 = "AA" + CStr(parts_list(i).row)
                        cell_4 = "AB" + CStr(parts_list(i).row)
                        
                        If Abs(sheet_xls_1.Range(cell_1).value - parts_list(i).weight_pc) > 0.0009 Then
                        
                                sheet_xls_1.Range(cell_1).value = parts_list(i).weight_pc
                        
                            End If
                        
                        If Abs(sheet_xls_1.Range(cell_2).value - parts_list(i).weight_pc * parts_list(i).pc) > 0.0009 Then
                        
                                sheet_xls_1.Range(cell_2).value = parts_list(i).weight_pc * parts_list(i).pc
                        
                            End If
                        
                        If Abs(sheet_xls_1.Range(cell_3).value - parts_list(i).weight_pc * parts_list(i).pc) > 0.0009 Then
                        
                                sheet_xls_1.Range(cell_3).value = parts_list(i).weight_pc * parts_list(i).pc
                        
                            End If
                        
                        If Abs(sheet_xls_1.Range(cell_4).value - parts_list(i).area_pc * parts_list(i).pc) > 0.0009 Then
                        
                                sheet_xls_1.Range(cell_4).value = parts_list(i).area_pc * parts_list(i).pc
                        
                            End If

                    End If
            
            End If
    
    Next i
    
    'kontrola poctu pozic ve vypisu
    
    For i = first_row To last_row_2
    
        cell_1 = "A" + CStr(i)
        cell_2 = "B" + CStr(i)
        cell_3 = "I" + CStr(i)
        cell_4 = "J" + CStr(i)
        cell_5 = "K" + CStr(i)
        cell_6 = "AA" + CStr(i)
        cell_7 = "AB" + CStr(i)
        
        If Not (sheet_xls_2.Range(cell_1).value = "") Then
        
                j = CLng(sheet_xls_2.Range(cell_1).value)
        
                If Not (positions_sum(j).pc = CLng(sheet_xls_2.Range(cell_2).value)) Then
                
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_2.Range(cell_2).value = positions_sum(j).pc
                
                    End If
        
                If Abs((positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_3).value)) - CDbl(sheet_xls_2.Range(cell_5).value)) > 0.0009 Then
                
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_2.Range(cell_5).value = (positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_3).value))
                
                    End If
        
                If Abs((positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_3).value)) - CDbl(sheet_xls_2.Range(cell_6).value)) > 0.0009 Then
                
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_2.Range(cell_6).value = (positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_3).value))
                
                    End If
        
                If Abs((positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_4).value)) - CDbl(sheet_xls_2.Range(cell_7).value)) > 0.0009 Then
                
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_2.Range(cell_7).value = (positions_sum(j).pc * CDbl(sheet_xls_2.Range(cell_4).value))
                
                    End If
        
            End If
        
    Next i
    
    For i = first_row To last_row_3
    
        cell_1 = "A" + CStr(i)
        cell_2 = "B" + CStr(i)
        cell_3 = "H" + CStr(i)
        cell_4 = "I" + CStr(i)
        cell_5 = "AA" + CStr(i)
        
        If Not (sheet_xls_3.Range(cell_1).value = "") Then
        
                j = CLng(sheet_xls_3.Range(cell_1).value)
        
                If Not (positions_sum(j).pc = CLng(sheet_xls_3.Range(cell_2).value)) Then
                        
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_3.Range(cell_2).value = positions_sum(j).pc
                
                    End If
        
                If Abs((positions_sum(j).pc * CDbl(sheet_xls_3.Range(cell_3).value)) - CDbl(sheet_xls_3.Range(cell_4).value)) > 0.0009 Then
                        
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_3.Range(cell_4).value = (positions_sum(j).pc * CDbl(sheet_xls_3.Range(cell_3).value))
                
                    End If
        
                If Abs((positions_sum(j).pc * CDbl(sheet_xls_3.Range(cell_3).value)) - CDbl(sheet_xls_3.Range(cell_5).value)) > 0.0009 Then
                        
                        If Not (unlock_pos_bolt) Then
                        
                                unlock_xls_2_3
                        
                                unlock_pos_bolt = True
                        
                            End If
                
                        sheet_xls_3.Range(cell_5).value = (positions_sum(j).pc * CDbl(sheet_xls_3.Range(cell_3).value))
                
                    End If
        
            End If
        
    Next i
    
    'kontrola csv
        
    ReDim part_sum(0)
    
    For i = 1 To UBound(parts_list)
    
        If Not (parts_list(i).row = 0) Then
        
                ReDim Preserve part_sum(UBound(part_sum) + 1)
                
                part_sum(UBound(part_sum)) = i
        
            End If
    
    Next i
    
    If (UBound(part_sum) + first_row - 1) > last_row_5 Then
    
            end_csv_row = (UBound(part_sum) + first_row - 1)
            
        Else
        
            end_csv_row = last_row_5
        
        End If
    
    For i = first_row To end_csv_row
    
        cell_1 = "A" + CStr(i)
        cell_2 = "B" + CStr(i)
        cell_3 = "C" + CStr(i)
        cell_4 = "D" + CStr(i)
        cell_5 = "E" + CStr(i)
        cell_6 = "G" + CStr(i)
        
        If i > (UBound(part_sum) + first_row - 1) Then
                
                'vymazat udaje o dilci na radku nebo cely radek, pokud neni zadny udaj o volne skupine
                
                If CStr(sheet_xls_5.Range(cell_6).value) = "" Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        row_string = CStr(i) + ":" + CStr(end_csv_row)
                    
                        sheet_xls_5.Rows(row_string).Delete
                        
                        i = end_csv_row
                
                    Else
                        
                        clear_csv_line i, unlock_csv
                        
                    End If
                    
            Else
            
                If Not (sheet_xls_5.Range(cell_1).value = part_sum(i - first_row + 1)) Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_1).value = part_sum(i - first_row + 1)
                
                    End If
            
                If Not (sheet_xls_5.Range(cell_2).value = parts_list(part_sum(i - first_row + 1)).pc) Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_2).value = parts_list(part_sum(i - first_row + 1)).pc
                
                    End If
            
                If Not (sheet_xls_5.Range(cell_3).value = parts_list(part_sum(i - first_row + 1)).part_name) Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_3).value = parts_list(part_sum(i - first_row + 1)).part_name
                
                    End If
                    
                If Abs(sheet_xls_5.Range(cell_4).value - parts_list(part_sum(i - first_row + 1)).weight_pc) > 0.0009 Or CStr(sheet_xls_5.Range(cell_4).value) = "" Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_4).value = parts_list(part_sum(i - first_row + 1)).weight_pc
                
                    End If
                    
                If Abs(sheet_xls_5.Range(cell_5).value - parts_list(part_sum(i - first_row + 1)).area_pc) > 0.0009 Or CStr(sheet_xls_5.Range(cell_5).value) = "" Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_5).value = parts_list(part_sum(i - first_row + 1)).area_pc
                
                    End If
                    
            End If
        
    Next i
    
    'konecne zamknuti dokumentu
    
    If unlock_pos_bolt Then
    
            lock_xls_2_3
    
            unlock_pos_bolt = False
    
        End If
    

    
    If unlock_csv Then
    
            lock_xls_5
    
            unlock_csv = False
    
        End If
    
    
    lock_xls_1

End Function

Public Function isLong(str_val As String) As Boolean

    Dim value As Double
    Dim long_max_value As Long
    
    isLong = True
    long_max_value = 2147483647
    
    If IsNumeric(str_val) Then
    
            value = CDbl(str_val)
            
            If (value - Int(value)) = 0 Then
            
                    If Not ((value > 0) And (value < long_max_value)) Then
                    
                            isLong = False
                            
                        End If
                
                Else
        
                    isLong = False
                
                End If
        
        Else
        
            isLong = False
        
        End If

End Function

Public Function isLong_0(str_val As String) As Boolean

    Dim value As Double
    Dim long_max_value As Long
    
    isLong_0 = True
    long_max_value = 2147483647
    
    If IsNumeric(str_val) Then
    
            value = CDbl(str_val)
            
            If (value - Int(value)) = 0 Then
            
                    If Not ((value > -1) And (value < long_max_value)) Then
                    
                            isLong_0 = False
                            
                        End If
                
                Else
        
                    isLong_0 = False
                
                End If
        
        Else
        
            isLong_0 = False
        
        End If

End Function

Public Function get_input_limits(Target As Range) As area_limits

    If IsArray(Target) Then
    
            get_input_limits.is_area = True
            
            get_input_limits.start_column = Target.Column
            get_input_limits.start_row = Target.row
            get_input_limits.end_row = get_input_limits.start_row + UBound(Target.value) - 1
            get_input_limits.end_column = get_input_limits.start_column + (Target.Count / UBound(Target.value)) - 1
            
        Else
        
            get_input_limits.is_area = False
            
            get_input_limits.start_column = Target.Column
            get_input_limits.start_row = Target.row
            get_input_limits.end_row = Target.row
            get_input_limits.end_column = Target.Column
        
        End If

End Function

Public Function get_part_name(part_no As Long) As String

    'Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_5 As Worksheet
    'Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    'Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_5 = book_xls.Worksheets(5)
    'Set sheet_xls_2 = book_xls.Worksheets(2)

    last_row = sheet_xls_5.UsedRange.Rows.Count
    
    get_part_name = ""
            
    For i = first_row To last_row
                        
        cell_1 = "A" + CStr(i)
                                
        If StrComp(CStr(sheet_xls_5.Range(cell_1).value), CStr(part_no)) = 0 Then
        
                cell_1 = "C" + CStr(i)
                
                get_part_name = CStr(sheet_xls_5.Range(cell_1).value)
                
                i = last_row
        
            End If
                                        
    Next i

End Function

Public Function get_free_groups(free_group_list() As free_group, error_text As String) As Boolean

    'Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_4 As Worksheet
    'Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    Dim act_no As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_4 = book_xls.Worksheets(4)
    'Set sheet_xls_2 = book_xls.Worksheets(2)

    last_row = sheet_xls_4.UsedRange.Rows.Count
    
    get_free_groups = True
    
    ReDim free_group_list(0)
            
    For i = first_row To last_row
                        
        cell_1 = "A" + CStr(i)
        
        If Not (CStr(sheet_xls_4.Range(cell_1).value) = "") Then
                                
                If isLong(CStr(sheet_xls_4.Range(cell_1).value)) Then
                
                        If CLng(sheet_xls_4.Range(cell_1).value) > 0 And CLng(sheet_xls_4.Range(cell_1).value) < 1000 Then
                        
                                act_no = CLng(sheet_xls_4.Range(cell_1).value)
                                
                                cell_1 = "B" + CStr(i)
                                
                                If isLong(CStr(sheet_xls_4.Range(cell_1).value)) Then
                                
                                        cell_1 = "H" + CStr(i)
                                        
                                        If IsNumeric(CStr(sheet_xls_4.Range(cell_1).value)) Or CStr(sheet_xls_4.Range(cell_1).value) = "" Then
                                                
                                                If act_no > UBound(free_group_list) Then
                                                
                                                        ReDim Preserve free_group_list(act_no)
                                                
                                                    End If
                                                    
                                                If Not (free_group_list(act_no).pcs > 0) Then
                                                
                                                        'vse v poradku, nacist hodnoty
                                                        
                                                        cell_1 = "B" + CStr(i)
                                                        
                                                        free_group_list(act_no).pcs = CLng(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "C" + CStr(i)
                                                        
                                                        free_group_list(act_no).name_description = CStr(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "D" + CStr(i)
                                                        
                                                        free_group_list(act_no).dimension = CStr(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "E" + CStr(i)
                                                        
                                                        free_group_list(act_no).norm_drawing = CStr(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "F" + CStr(i)
                                                        
                                                        free_group_list(act_no).material = CStr(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "G" + CStr(i)
                                                        
                                                        free_group_list(act_no).note = CStr(sheet_xls_4.Range(cell_1).value)
                                                        
                                                        cell_1 = "H" + CStr(i)
                                                        
                                                        If Not (CStr(sheet_xls_4.Range(cell_1).value) = "") Then
                                                        
                                                                free_group_list(act_no).weight_pc = CDbl(sheet_xls_4.Range(cell_1).value)
                                                                
                                                            Else
                                                            
                                                                free_group_list(act_no).weight_pc = 0
                                                                
                                                            End If
                                                        
                                                        cell_1 = "BA" + CStr(i)
                                                        
                                                        If isLong(CStr(sheet_xls_4.Range(cell_1).value)) Then
                                                        
                                                                free_group_list(act_no).empty_rows = CLng(sheet_xls_4.Range(cell_1).value)
                                                                
                                                            Else
                                                            
                                                                free_group_list(act_no).empty_rows = 0
                                                            
                                                            End If
                                                
                                                    Else
                                                    
                                                        error_text = error_free_group_double_counting_text + sheet_xls_4.Name + "!A" + CStr(i) + " !!!"
                                                        
                                                        get_free_groups = False
                                                        
                                                        write_error error_text, 4
                                                        
                                                        Exit Function
                                                    
                                                    End If
                                        
                                            Else
                                                            
                                                error_text = error_double_value_text_1 + sheet_xls_4.Name + "!" + cell_1 + error_double_value_text_2
                                                
                                                get_free_groups = False
                                                
                                                write_error error_text, 4
                                                
                                                Exit Function
                                            
                                            End If
                                            
                                    Else
                                                            
                                        error_text = error_cell_value_text + sheet_xls_4.Name + "!" + cell_1 + " !!!"
                                        
                                        get_free_groups = False
                                        
                                        write_error error_text, 4
                                        
                                        Exit Function
                                    
                                    End If
                                
                            Else
                            
                                error_text = error_cell_value_text + sheet_xls_4.Name + "!" + cell_1 + " !!!"
                                
                                get_free_groups = False
                                
                                write_error error_text, 4
                                
                                Exit Function
                        
                            End If
                        
                    Else
                    
                        error_text = error_cell_value_text + sheet_xls_4.Name + "!" + cell_1 + " !!!"
                        
                        get_free_groups = False
                        
                        write_error error_text, 4
                        
                        Exit Function
                
                    End If
                    
            End If
                                        
    Next i
    
    clear_error 4

End Function

Public Function reload_free_groups(free_group_list() As free_group)

    Dim i As Long
    
    Dim book_xls As Workbook
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    Dim cell_3 As String
    
    Dim unlock_csv As Boolean
    Dim row_string As String
    
    Dim free_group_sum() As Long
    Dim last_row_5 As Long
    Dim end_csv_row As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_5 = book_xls.Worksheets(5)
    
    last_row_5 = sheet_xls_5.UsedRange.Rows.Count
    
    ReDim free_group_sum(0)
    
    unlock_xls_1
    
    For i = 1 To UBound(free_group_list)
    
        If Not (free_group_list(i).pcs = 0) Then
        
                ReDim Preserve free_group_sum(UBound(free_group_sum) + 1)
                
                free_group_sum(UBound(free_group_sum)) = i
        
            End If
    
    Next i
    
    If (UBound(free_group_sum) + first_row - 1) > last_row_5 Then
    
            end_csv_row = (UBound(free_group_sum) + first_row - 1)
            
        Else
        
            end_csv_row = last_row_5
        
        End If
    
    For i = first_row To end_csv_row
    
        cell_1 = "G" + CStr(i)
        cell_2 = "H" + CStr(i)
        cell_3 = "A" + CStr(i)
        
        If i > (UBound(free_group_sum) + first_row - 1) Then
                
                'vymazat udaje o dilci na radku nebo cely radek, pokud neni zadny udaj o volne skupine
                
                If CStr(sheet_xls_5.Range(cell_3).value) = "" Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        row_string = CStr(i) + ":" + CStr(end_csv_row)
                    
                        sheet_xls_5.Rows(row_string).Delete
                        
                        i = end_csv_row
                
                    Else
                        
                        clear_csv_free_group_line i, unlock_csv
                        
                    End If
                    
            Else
            
                If Not (sheet_xls_5.Range(cell_1).value = free_group_sum(i - first_row + 1)) Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_1).value = free_group_sum(i - first_row + 1)
                
                    End If
            
                If Not (sheet_xls_5.Range(cell_2).value = free_group_list(free_group_sum(i - first_row + 1)).pcs) Then
                        
                        If Not (unlock_csv) Then
                        
                                unlock_xls_5
                        
                                unlock_csv = True
                        
                            End If
                
                        sheet_xls_5.Range(cell_2).value = free_group_list(free_group_sum(i - first_row + 1)).pcs
                
                    End If
                    
            End If
        
    Next i
    
    'konecne zamknuti dokumentu
    
    If unlock_csv Then
    
            lock_xls_5
    
            unlock_csv = False
    
        End If
    
    lock_xls_1

End Function
Attribute VB_Name = "Module4_Database_functions"
Option Explicit

Function get_bolt_from_database_pos_no(pos_no As Long, bolt_pos As position) As Boolean

    Dim fso
    Dim i As Long

    Dim bolts_database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim bolt_list() As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim question As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_bolt_from_database_pos_no = True
    
    cell_1 = "CA2"
    bolts_database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(bolts_database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + bolts_database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + bolts_database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
        
            get_bolt_norms_from_database_directly bolt_list, cn

            For i = 0 To UBound(bolt_list)
        
                'sestaven|fffd| SQL dotazu
                
                question = "SELECT * FROM [" + CStr(bolt_list(i)) + "$] WHERE pos = " + CStr(pos_no) + ";"
                
                Debug.Print question
                
                rs.Open question, cn, adOpenKeyset, adLockOptimistic
                
                If rs.RecordCount = 0 Then
                
                        If Not (i = UBound(bolt_list)) Then
                
                                Set rs = Nothing
                                
                            End If
                        
                    Else
                    
                        i = UBound(bolt_list)
                    
                    End If
            
            Next i
            
            If rs.RecordCount = 0 Then
            
                    get_bolt_from_database_pos_no = False
                    
                Else
            
                    rs.MoveFirst
                    
                    If Not (IsNull(rs!Name)) Then
                    
                            bolt_pos.name_description = CStr(rs!Name)
                            
                        Else
                        
                            bolt_pos.name_description = ""
                            
                        End If
                    
                    If Not (IsNull(rs!dimension)) Then
                        
                            bolt_pos.dimension = CStr(rs!dimension)
                            
                        Else
                        
                            bolt_pos.dimension = ""
                            
                        End If
                    
                    If Not (IsNull(rs!norm)) Then
                    
                            bolt_pos.norm_drawing = CStr(rs!norm)
                            
                        Else
                        
                            bolt_pos.norm_drawing = ""
                                
                        End If
                    
                    If Not (IsNull(rs!material)) Then
                    
                            bolt_pos.material = CStr(rs!material)
                            
                        Else
                        
                            bolt_pos.material = ""
                            
                        End If
                    
                    If Not (IsNull(rs!note)) Then
                    
                            bolt_pos.note = CStr(rs!note)
                            
                        Else
                        
                            bolt_pos.note = ""
                            
                        End If
                    
                    If Not (IsNull(rs!Weight)) Then
                    
                            bolt_pos.weight_pc = CDbl(rs!Weight)
                            
                        Else
                        
                            bolt_pos.weight_pc = 0
                            
                        End If
                    
                End If
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_bolt_database_file_name_text, vbInformation, msgbox_title_5
            
            get_bolt_from_database_pos_no = False
            
        End If

End Function

Function get_shape_norms_from_database(norm_list() As String) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim question As String
    
    Dim h_norm_list_1() As String
    Dim h_norm_list_2() As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_shape_norms_from_database = True
    
    cell_1 = "CA1"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
        
            Set rs = cn.OpenSchema(adSchemaTables)
    
            rs.MoveFirst
            str = rs.GetString(adClipString, , ";", vbCrLf)
            str = Left(str, Len(str) - 2)

            h_norm_list_1 = Split(str, vbCrLf)
            
            ReDim norm_list(UBound(h_norm_list_1))
            
            For i = 0 To UBound(h_norm_list_1)
            
                h_norm_list_2 = Split(h_norm_list_1(i), ";")
                
                norm_list(i) = Mid(h_norm_list_2(2), 2, (Len(h_norm_list_2(2)) - 3))
            
            Next i
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_shape_database_file_name_text, vbInformation, msgbox_title_5
            
            get_shape_norms_from_database = False
            
        End If

End Function

Function get_norm_shapes(norm_name As String, shape_list() As String) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim question As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_norm_shapes = True
    
    cell_1 = "CA1"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
            
            'sestaven|fffd| SQL dotazu
            
            question = "SELECT name FROM [" + norm_name + "$];"
            
            Debug.Print question
            
            rs.Open question, cn, adOpenKeyset, adLockOptimistic
            
            If Not (rs.RecordCount = 0) Then
    
                    rs.MoveLast
                    rs.MoveFirst
                    
                    ReDim shape_list(rs.RecordCount)
                    
                    shape_list(0) = ""
                    
                    rs.MoveFirst
                    str = rs.GetString(adClipString, , ";", vbCrLf)
                    str = Left(str, Len(str) - 2)

                    shape_list = Split(str, vbCrLf)
                    
                End If
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_shape_database_file_name_text, vbInformation, msgbox_title_5
            
            get_norm_shapes = False
            
        End If

End Function

Function get_norm_shape_data(norm_name As String, norm_dim As String, norm_weight As Double, norm_area As Double) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim split_str
    Dim question As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_norm_shape_data = True
    
    cell_1 = "CA1"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
            
            'sestaven|fffd| SQL dotazu
            
            question = "SELECT weight_m, area_m FROM [" + norm_name + "$] WHERE name = '" + norm_dim + "';"
            
            Debug.Print question
            
            rs.Open question, cn, adOpenKeyset, adLockOptimistic
            
            If Not (rs.RecordCount = 0) Then
    
                    rs.MoveLast
                    rs.MoveFirst
                    
                    'ReDim shape_list(rs.RecordCount)
                    
                    'shape_list(0) = ""
                    
                    rs.MoveFirst
                    str = rs.GetString(adClipString, , ";", vbCrLf)
                    str = Left(str, Len(str) - 2)

                    split_str = Split(str, ";")
                    
                    norm_weight = CDbl(split_str(0))
                    norm_area = CDbl(split_str(1))
                    
                End If
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_shape_database_file_name_text, vbInformation, msgbox_title_5
            
            get_norm_shape_data = False
            
        End If

End Function

Function short_norm(norm_name As String) As String

    Dim long_str As Boolean
    Dim i As Long
    
    short_norm = ""
    long_str = True

    For i = 1 To Len(norm_name)
    
        If (Mid(norm_name, i, 1) = "_") And long_str Then
        
                short_norm = ""
                long_str = False
        
            Else
            
                short_norm = short_norm + Mid(norm_name, i, 1)
                
            End If
            
    Next i

End Function

Function get_bolt_norms_from_database_directly(bolt_list() As String, cn As ADODB.Connection)

    Dim i As Long

    Dim rs As New ADODB.Recordset
    Dim str As String
    
    Dim h_bolt_list_1() As String
    Dim h_bolt_list_2() As String
        
    Set rs = cn.OpenSchema(adSchemaTables)

    rs.MoveFirst
    str = rs.GetString(adClipString, , ";", vbCrLf)
    str = Left(str, Len(str) - 2)

    h_bolt_list_1 = Split(str, vbCrLf)
    
    ReDim bolt_list(UBound(h_bolt_list_1))
    
    For i = 0 To UBound(h_bolt_list_1)
    
        h_bolt_list_2 = Split(h_bolt_list_1(i), ";")
        
        bolt_list(i) = Mid(h_bolt_list_2(2), 2, (Len(h_bolt_list_2(2)) - 3))
    
    Next i
    
    'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti

    rs.Close

    Set rs = Nothing

End Function

Function get_bolt_norms_from_database(norm_list() As String) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim question As String
    
    Dim h_norm_list_1() As String
    Dim h_norm_list_2() As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_bolt_norms_from_database = True
    
    cell_1 = "CA2"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
'                cn.Open "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
            
            Set rs = cn.OpenSchema(adSchemaTables)
    
            rs.MoveFirst
            str = rs.GetString(adClipString, , ";", vbCrLf)
            str = Left(str, Len(str) - 2)

            h_norm_list_1 = Split(str, vbCrLf)
            
            ReDim norm_list(UBound(h_norm_list_1))
            
            For i = 0 To UBound(h_norm_list_1)
            
                h_norm_list_2 = Split(h_norm_list_1(i), ";")
                
                norm_list(i) = Mid(h_norm_list_2(2), 2, (Len(h_norm_list_2(2)) - 3))
            
            Next i
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_bolt_database_file_name_text, vbInformation, msgbox_title_5
            
            get_bolt_norms_from_database = False
            
        End If

End Function

Function get_norm_bolts(norm_name As String, bolt_list() As String) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim question As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_norm_bolts = True
    
    cell_1 = "CA2"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
'                cn.Open "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
            
            'sestaven|fffd| SQL dotazu
            
            question = "SELECT dimension FROM [" + norm_name + "$];"
            
            Debug.Print question
            
            rs.Open question, cn, adOpenKeyset, adLockOptimistic
            
            If Not (rs.RecordCount = 0) Then
    
                    rs.MoveLast
                    rs.MoveFirst
                    
                    ReDim bolt_list(rs.RecordCount)
                    
                    bolt_list(0) = ""
                    
                    rs.MoveFirst
                    str = rs.GetString(adClipString, , ";", vbCrLf)
                    str = Left(str, Len(str) - 2)

                    bolt_list = Split(str, vbCrLf)
                    
                End If
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_bolt_database_file_name_text, vbInformation, msgbox_title_5
            
            get_norm_bolts = False
            
        End If

End Function

Function get_norm_bolt_data(norm As String, norm_pos As Long, norm_name As String, norm_dim As String, norm_norm As String, norm_mat As String, norm_note As String, norm_weight As Double) As Boolean

    Dim fso
    Dim i As Long

    Dim database_path As String
    Dim book_xls_1 As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim cn As New ADODB.Connection
    Dim rs As New ADODB.Recordset
    Dim str As String
    Dim split_str
    Dim question As String
    
    Set book_xls_1 = ActiveWorkbook
    Set sheet_xls_1 = book_xls_1.Worksheets(1)
    
    get_norm_bolt_data = True
    
    cell_1 = "CA2"
    database_path = sheet_xls_1.Range(cell_1).value 'cesta k se|fffd|itu se zdroji dat
    'bolts_database_path = book_xls_1.path + bolts_database_path
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    If fso.FileExists(database_path) Then

            'nav|fffd|z|fffd|n|fffd| spojen|fffd|
        
'                cn.Open "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
        
            #If Win64 Then
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #Else
                cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + database_path + ";" + "Extended Properties=""Excel 8.0;"""
            #End If
            
            'sestaven|fffd| SQL dotazu
            
            question = "SELECT pos, name, norm, material, note, weight FROM [" + norm + "$] WHERE dimension = '" + norm_dim + "';"
            
            Debug.Print question
            
            rs.Open question, cn, adOpenKeyset, adLockOptimistic
            
            If Not (rs.RecordCount = 0) Then
    
                    rs.MoveLast
                    rs.MoveFirst
                    
                    'ReDim bolt_list(rs.RecordCount)
                    
                    'bolt_list(0) = ""
                    
                    rs.MoveFirst
                    str = rs.GetString(adClipString, , ";", vbCrLf)
                    str = Left(str, Len(str) - 2)

                    split_str = Split(str, ";")
                    
                    If isLong(CStr(split_str(0))) Then
                                        
                            norm_pos = CLng(split_str(0))
                            
                        End If
                        
                    norm_name = split_str(1)
                    norm_norm = split_str(2)
                    norm_mat = split_str(3)
                    norm_note = split_str(4)
                    
                    If IsNumeric(split_str(5)) Then
                    
                            norm_weight = CDbl(split_str(5))
                            
                        End If
                    
                End If
            
            'ukon|fffd|en|fffd| spojen|fffd| a uvoln|fffd|n|fffd| z pam|fffd|ti
        
            rs.Close
        
            Set rs = Nothing
        
            cn.Close
        
            Set cn = Nothing
            
        Else
        
            MsgBox error_bolt_database_file_name_text, vbInformation, msgbox_title_5
            
            get_norm_bolt_data = False
            
        End If

End Function
Attribute VB_Name = "Module5_Open_dialog"
Option Explicit

'Public Declare Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (pOpenfilename As OPENFILENAME) As Long
'
'Public Type OPENFILENAME
'    lStructSize As Long
'    hwndOwner As Long
'    hInstance As Long
'    lpstrFilter As String
'    lpstrCustomFilter As String
'    nMaxCustFilter As Long
'    nFilterIndex As Long
'    lpstrFile As String
'    nMaxFile As Long
'    lpstrFileTitle As String
'    nMaxFileTitle As Long
'    lpstrInitialDir As String
'    lpstrTitle As String
'    flags As Long
'    nFileOffset As Integer
'    nFileExtension As Integer
'    lpstrDefExt As String
'    lCustData As Long
'    lpfnHook As Long
'    lpTemplateName As String
'End Type

#If Win64 Then
    Public Declare PtrSafe Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (pOpenfilename As OPENFILENAME) As Long
       
    Public Type OPENFILENAME
        lStructSize As Long
        hwndOwner As LongPtr
        hInstance As LongPtr
        lpstrFilter As String
        lpstrCustomFilter As String
        nMaxCustFilter As Long
        nFilterIndex As Long
        lpstrFile As String
        nMaxFile As Long
        lpstrFileTitle As String
        nMaxFileTitle As Long
        lpstrInitialDir As String
        lpstrTitle As String
        flags As Long
        nFileOffset As Integer
        nFileExtension As Integer
        lpstrDefExt As String
        lCustData As Long
        lpfnHook As LongPtr
        lpTemplateName As String
    End Type
   
#Else

    Public Declare Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (pOpenfilename As OPENFILENAME) As Long
       
    Public Type OPENFILENAME
        lStructSize As Long
        hwndOwner As Long
        hInstance As Long
        lpstrFilter As String
        lpstrCustomFilter As String
        nMaxCustFilter As Long
        nFilterIndex As Long
        lpstrFile As String
        nMaxFile As Long
        lpstrFileTitle As String
        nMaxFileTitle As Long
        lpstrInitialDir As String
        lpstrTitle As String
        flags As Long
        nFileOffset As Integer
        nFileExtension As Integer
        lpstrDefExt As String
        lCustData As Long
        lpfnHook As Long
        lpTemplateName As String
    End Type
#End If

Public Function SelectFileOpenDialog(sFilter_description As String, sFilter_extension As String, file_name As String) As Boolean

    Dim strTemp, strTemp1, pathStr As String
    Dim i, n, j As Long
    Dim OpenFile As OPENFILENAME
    Dim lReturn As Long
    Dim sFilter As String
    Dim Fname As String
    
    SelectFileOpenDialog = False

'    OpenFile.lStructSize = Len(OpenFile)
    sFilter = sFilter_description + " " + Chr(40) + "*." + sFilter_extension + Chr(41) + Chr(0) + "*." + sFilter_extension + Chr(0) + "All files (*.*)" + Chr(0) + "*.*" + Chr(0)
    OpenFile.lpstrFilter = sFilter
    'sFilter = "All files (*.*)" & Chr(0) & "*.*" & Chr(0)
    'OpenFile.lpstrFilter = sFilter
    OpenFile.nFilterIndex = 1
    OpenFile.lpstrFile = String(257, 0)
'    OpenFile.nMaxFile = Len(OpenFile.lpstrFile) - 1
    
    #If Win64 Then
        OpenFile.nMaxFile = LenB(OpenFile.lpstrFile) - 1
        OpenFile.lStructSize = LenB(OpenFile)
    #Else
        OpenFile.nMaxFile = Len(OpenFile.lpstrFile) - 1
        OpenFile.lStructSize = Len(OpenFile)
    #End If
    
    OpenFile.lpstrFileTitle = OpenFile.lpstrFile
    OpenFile.nMaxFileTitle = OpenFile.nMaxFile
    'OpenFile.lpstrInitialDir = "C:\"
    OpenFile.lpstrTitle = "Select File"
    OpenFile.flags = 0
    
    lReturn = GetOpenFileName(OpenFile)

    If Not (lReturn = 0) Then
    
            file_name = Trim(OpenFile.lpstrFile)
            SelectFileOpenDialog = True
    
        End If
        
    'Fname = Trim$(OpenFile.lpstrFileTitle) ' copy the filename to "Fname"
    
    'n = FileLen(OpenFile.lpstrFile) 'length of the file

End Function
Attribute VB_Name = "Multiple_bolt_edit_form"
Attribute VB_Base = "0{444E1E7B-9EBE-4026-9107-5DFED0F2FB72}{E08AA84A-5F86-4E2A-8189-5172E0610B7B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Cancel_button_Click()

    Unload Multiple_bolt_edit_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim choosed_position() As Boolean
    
    If check_values(error_text, choosed_position) Then
    
            Dim i As Long
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim last_row As Long
            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(3)
            
            unlock_xls_1_3
            
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If Not (UBound(choosed_position) < CLng(sheet_xls_2.Range(cell_1).value)) Then
                
                        If choosed_position(CLng(sheet_xls_2.Range(cell_1).value)) Then
                        
                                If Position_norm_checkbox.value Then
                        
                                        cell_1 = "E" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
                                        
                                    End If
                        
                                If Position_material_checkbox.value Then
                                
                                        cell_1 = "F" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
                                        
                                    End If
                        
                                If Position_note_checkbox.value Then
                                
                                        cell_1 = "G" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
                                        
                                    End If
                        
                            End If
                            
                    End If
                
            Next i
            
            lock_xls_1_3
            
            Dim changed_area As area_limits
            Dim pos_list() As position
                                     
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
                
                End If
            
            Unload Multiple_bolt_edit_form
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Not (split_multiple_interval(Positions_number_textbox.Text, choosed_position)) Then
    
            error_text = error_interval_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (Position_norm_checkbox.value Or Position_material_checkbox.value Or Position_note_checkbox.value) Then
    
            error_text = error_null_change_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function

Private Sub Position_material_checkbox_Change()

    If Position_material_checkbox.value Then
    
            Position_material_textbox.Enabled = True
    
        Else
        
            Position_material_textbox.Text = ""
            Position_material_textbox.Enabled = False
        
        End If

End Sub

Private Sub Position_norm_checkbox_Change()

    If Position_norm_checkbox.value Then
    
            Position_norm_textbox.Enabled = True
    
        Else
        
            Position_norm_textbox.Text = ""
            Position_norm_textbox.Enabled = False
        
        End If

End Sub

Private Sub Position_note_checkbox_Change()

    If Position_note_checkbox.value Then
    
            Position_note_textbox.Enabled = True
    
        Else
        
            Position_note_textbox.Text = ""
            Position_note_textbox.Enabled = False
        
        End If

End Sub
Attribute VB_Name = "Multiple_position_edit_form"
Attribute VB_Base = "0{9ACAE1F1-D830-4D6E-9B68-371D41040EE6}{4E807DC7-3C15-46D4-85C5-53C9E0C41A09}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload Multiple_position_edit_form

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim choosed_position() As Boolean
    
    If check_values(error_text, choosed_position) Then
    
            Dim i As Long
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim last_row As Long
            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
            
            unlock_xls_1_2
            
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                
                If Not (UBound(choosed_position) < CLng(sheet_xls_2.Range(cell_1).value)) Then
                
                        If choosed_position(CLng(sheet_xls_2.Range(cell_1).value)) Then
                        
                                If Position_norm_checkbox.value Then
                        
                                        cell_1 = "F" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
                                        
                                    End If
                        
                                If Position_material_checkbox.value Then
                                
                                        cell_1 = "G" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
                                        
                                    End If
                        
                                If Position_note_checkbox.value Then
                                
                                        cell_1 = "H" + CStr(i)
                                        sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
                                        
                                    End If
                        
                            End If
                            
                    End If
                
            Next i
            
            lock_xls_1_2
            
            Dim changed_area As area_limits
            Dim pos_list() As position
                                     
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                        
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
                
                End If
            
            Unload Multiple_position_edit_form
                    
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Function check_values(error_text As String, choosed_position() As Boolean) As Boolean

    check_values = True
    
    If Not (split_multiple_interval(Positions_number_textbox.Text, choosed_position)) Then
    
            error_text = error_interval_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (Position_norm_checkbox.value Or Position_material_checkbox.value Or Position_note_checkbox.value) Then
    
            error_text = error_null_change_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function

Private Function split_multiple_interval(interval_text As String, choosed_position() As Boolean) As Boolean

    Dim str_1 As String
    Dim str_2 As String
    Dim h_str_1 As String
    Dim h_str_2 As String
    Dim number_continue_1 As Boolean
    Dim number_continue_2 As Boolean
    Dim interval_ok As Boolean
    Dim str_len As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim l As Long
    
    ReDim choosed_position(0)
    
    split_multiple_interval = True
    number_continue_1 = True
    str_len = Len(interval_text)
    
    For i = 1 To str_len
    
        h_str_1 = Mid(interval_text, i, 1)
        
        If isLong_0(h_str_1) Then
        
                If number_continue_1 Then
        
                        str_1 = str_1 + h_str_1
                        
                    Else
                    
                        If str_1 = "" Then
                        
                                number_continue_1 = True
                        
                                str_1 = h_str_1
                        
                            Else
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                    
                    End If
        
            Else
            
                If h_str_1 = " " Then
                
                        number_continue_1 = False
                        
                    End If
                    
                If h_str_1 = "," Then
                
                        number_continue_1 = True
                        
                        If Not (str_1 = "") Then
                        
                                If CLng(str_1) > UBound(choosed_position) Then
                        
                                        ReDim Preserve choosed_position(CLng(str_1))
                                        
                                    End If
                                
                                choosed_position(CLng(str_1)) = True
                                
                                str_1 = ""
                                
                            Else
                            
                                split_multiple_interval = False
                                
                                i = str_len
                            
                            End If
                        
                    End If
                    
                If h_str_1 = "-" And Not (str_1 = "") Then
                
                        str_2 = ""
                        number_continue_2 = True
                        interval_ok = False
                
                        For j = i + 1 To str_len
                        
                            h_str_2 = Mid(interval_text, j, 1)
                            
                            If isLong_0(h_str_2) Then
                            
                                    If number_continue_2 Then
                            
                                            str_2 = str_2 + h_str_2
                                            
                                        Else
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                        
                                        End If
                                    
                                Else
                                
                                    If h_str_2 = " " Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    number_continue_2 = False
                                                    
                                                End If
                                            
                                        End If
                                        
                                    If h_str_2 = "," Then
                                    
                                            If Not (str_2 = "") Then
                                    
                                                    If Not (CLng(str_2) < CLng(str_1)) Then
                                            
                                                            k = j
                                        
                                                            If CLng(str_2) > UBound(choosed_position) Then
                                                    
                                                                    ReDim Preserve choosed_position(CLng(str_2))
                                                                    
                                                                End If
                                                            
                                                            For l = CLng(str_1) To CLng(str_2)
                                                            
                                                                choosed_position(l) = True
                                                            
                                                            Next l
                                                            
                                                            str_1 = ""
                                                            str_2 = ""
                                                            
                                                            interval_ok = True
                                                    
                                                            j = str_len
                                                            
                                                        Else
                                                                
                                                            split_multiple_interval = False
                                                            
                                                            Exit Function
                                                    
                                                        End If
                                                    
                                                Else
                                                        
                                                    split_multiple_interval = False
                                                    
                                                    Exit Function
                                            
                                                End If
                                    
                                        End If
                                        
                                    If Not (h_str_2 = " " Or h_str_2 = ",") Then
                                                
                                            split_multiple_interval = False
                                            
                                            Exit Function
                                    
                                        End If
                                
                                End If
                        
                        Next j
                        
                        If Not (str_2 = "") Then
        
                                If Not (CLng(str_2) < CLng(str_1)) Then
                        
                                        k = j
                    
                                        If CLng(str_2) > UBound(choosed_position) Then
                                
                                                ReDim Preserve choosed_position(CLng(str_2))
                                                
                                            End If
                                        
                                        For l = CLng(str_1) To CLng(str_2)
                                        
                                            choosed_position(l) = True
                                        
                                        Next l
                                        
                                        str_1 = ""
                                        str_2 = ""
                                
                                        j = str_len
                                        
                                    Else
                                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                
                                    End If
                                    
                            Else
                            
                                If Not (interval_ok) Then
                            
                                        split_multiple_interval = False
                                        
                                        Exit Function
                                        
                                    End If
                                    
                            End If
                        
                        i = k
                        
                    Else
                    
                        If h_str_1 = "-" And str_1 = "" Then
                    
                                split_multiple_interval = False
                                
                                i = str_len
                                
                            End If
                        
                    End If
                    
                If Not (h_str_1 = " " Or h_str_1 = "," Or h_str_1 = "-") Then
                
                        split_multiple_interval = False
                        
                        i = str_len
                        
                    End If
        
            End If
    
    Next i
    
    If Not (str_1 = "") Then
                        
            If CLng(str_1) > UBound(choosed_position) Then
    
                    ReDim Preserve choosed_position(CLng(str_1))
                    
                End If
    
            choosed_position(CLng(str_1)) = True
    
        Else
    
            If split_multiple_interval And (UBound(choosed_position) = 0) Then
            
                    split_multiple_interval = False
            
                End If
                
        End If

End Function

Private Sub Position_material_checkbox_Change()

    If Position_material_checkbox.value Then
    
            Position_material_textbox.Enabled = True
    
        Else
        
            Position_material_textbox.Text = ""
            Position_material_textbox.Enabled = False
        
        End If

End Sub

Private Sub Position_norm_checkbox_Change()

    If Position_norm_checkbox.value Then
    
            Position_norm_textbox.Enabled = True
    
        Else
        
            Position_norm_textbox.Text = ""
            Position_norm_textbox.Enabled = False
        
        End If

End Sub

Private Sub Position_note_checkbox_Change()

    If Position_note_checkbox.value Then
    
            Position_note_textbox.Enabled = True
    
        Else
        
            Position_note_textbox.Text = ""
            Position_note_textbox.Enabled = False
        
        End If

End Sub
Attribute VB_Name = "New_bolt_form"
Attribute VB_Base = "0{47255F87-EF77-43CA-A002-FE35DF3019F9}{90FB7D0A-4E5E-4C98-A6D0-CBABA49C45E8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit

Private Sub Cancel_button_Click() 'PREVEDENO NA BOLT

    Unload New_bolt_form

End Sub

Private Sub Name_combobox_Change() 'PREVEDENO NA BOLT

    If Not (StrComp(Mem_box2_text.Text, Name_combobox.Text) = 0) Then
    
            Dim norm_pos As Long
            Dim norm_name As String
            Dim norm_norm As String
            Dim norm_mat As String
            Dim norm_note As String
            Dim norm_weight As Double
            
            Dim in_ok As Boolean
            Dim i As Long
            
            in_ok = False
            
            For i = 1 To UBound(Name_combobox.Column, 2)
            
                If StrComp(Name_combobox.Text, Name_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Name_combobox.Column, 2)
                        
                    End If
            
            Next i
                    
            If (Not (Name_combobox.Text = "-")) And in_ok Then
                    
                    If get_norm_bolt_data(Norm_combobox.Text, norm_pos, norm_name, Name_combobox.Text, norm_norm, norm_mat, norm_note, norm_weight) Then
    
                            'is_standard_checkbox.value = True
                            
                            If norm_pos > 0 Then
                            
                                    Position_number_textbox.Text = CStr(norm_pos)
                                    
                                End If
                            
                            Position_name_textbox.Text = norm_name
                            Position_dimension_textbox.Text = Name_combobox.Text
                            Position_norm_textbox.Text = norm_norm
                            Position_material_textbox.Text = norm_mat
                            Position_note_textbox.Text = norm_note
                            Position_weight_textbox.Text = norm_weight
                            
                            Position_number_textbox.SetFocus
                                
                            'Position_dimension_textbox_Change
                    
                        End If
                        
                Else
                
                    If Not (UBound(Name_combobox.List, 1) = -1) Then
                
                            Name_combobox.Text = "-"
                
                        End If
                
                    'is_standard_checkbox.value = False
                        
                End If
            
            Mem_box2_text.Text = Name_combobox.Text
        
        End If

End Sub

Private Sub Norm_combobox_change() 'PREVEDENO NA BOLT

    If Not (StrComp(Mem_box1_text.Text, Norm_combobox.Text) = 0) Then
    
            Dim bolt_list() As String
            Dim i As Long
            
            Dim in_ok As Boolean
            
            in_ok = False
            
            For i = 1 To UBound(Norm_combobox.Column, 2)
            
                If StrComp(Norm_combobox.Text, Norm_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Norm_combobox.Column, 2)
                        
                    End If
            
            Next i

            'zmena seznamu rozmeru profilu
            
            Name_combobox.Clear
                    
            If in_ok Then
                    
                    If get_norm_bolts(Norm_combobox.Text, bolt_list) Then
                    
                            Name_combobox.AddItem "-"
                            
                            For i = 0 To UBound(bolt_list)
                            
                                If Not (bolt_list(i) = "") Then
                            
                                        Name_combobox.AddItem (bolt_list(i))
                                        
                                    End If
                            
                            Next i
                            
                            Name_combobox.Text = "-"
                    
                        End If
                        
                Else
                
                    Name_combobox.AddItem "-"
                    Name_combobox.Text = "-"
                    Norm_combobox.Text = "-"
                        
                End If
            
            'Name_combobox.AddItem ("pokus")
            
            'Name_combobox.Clear
            
            Mem_box1_text.Text = Norm_combobox.Text
        
        End If

End Sub

Private Sub OK_button_Click() 'PREVEDENO NA BOLT

    Dim pos_list() As position
    Dim error_text As String
    Dim last_row As Long
    Dim row_more As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            Dim cell_2 As String
            Dim cell_3 As String
            Dim h_str As String
            Dim write_pos As Boolean
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(3)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            cell_1 = "BF1"
            cell_2 = "BD1"
            cell_3 = "BD2"
            
            If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" And sheet_xls_1.Range(cell_2).value = "" Then
            
                    If get_positions(pos_list, error_text) Then
                    
                            write_pos = False
                            
                            If last_row = 7 Then
                            
                                    write_pos = True
                            
                                Else
                            
                                    If CLng(Position_number_textbox.Text) > UBound(pos_list) Then
                                    
                                            write_pos = True
                                                
                                        Else
                            
                                            If pos_list(CLng(Position_number_textbox.Text)).row = 0 Then
                                            
                                                    write_pos = True
                                                    
                                                End If
                                        
                                        End If
                                        
                                End If
                            
                            If write_pos Then
                            
                                    cell_1 = "BA" + CStr(last_row)
                                    row_more = CLng(sheet_xls_2.Range(cell_1).value)
                            
                                    unlock_xls_1_3

                                    cell_1 = "A" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = CLng(Position_number_textbox.Text)
                            
                                    cell_1 = "C" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_name_textbox.Text
                                    
                                    cell_1 = "D" + CStr(last_row + 1 + row_more)
                                    
                                    If IsNumeric(Position_dimension_textbox.Text) Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_dimension_textbox.Text)
                                    
                                        Else
                                        
                                            h_str = "'" + Position_dimension_textbox.Text
                                    
                                            sheet_xls_2.Range(cell_1).value = h_str
                                            
                                        End If
                                    
                                    'cell_1 = "E" + CStr(last_row + 1 + row_more)
                                    
                                    'If IsNumeric(Position_plate_dimension_textbox.Text) Then
                                    
                                            'sheet_xls_2.Range(cell_1).value = CDbl(Position_plate_dimension_textbox.Text)
                                    
                                        'Else
                                        
                                            'h_str = "'" + Position_plate_dimension_textbox.Text
                                        
                                            'sheet_xls_2.Range(cell_1).value = h_str
                                            
                                        'End If
                                    
                                    cell_1 = "E" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
                                    
                                    cell_1 = "F" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
                                    
                                    cell_1 = "G" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
                                    
                                    cell_1 = "H" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Position_weight_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_weight_textbox.Text)
                                            
                                        End If
                
                                    'cell_1 = "J" + CStr(last_row + 1 + row_more)
                                    
                                    'If Not (Position_area_textbox.Text = "") Then
                                    
                                            'sheet_xls_2.Range(cell_1).value = CDbl(Position_area_textbox.Text)
                                            
                                        'End If
                                
                                    cell_1 = "BA" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Position_empty_rows_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CLng(Position_empty_rows_textbox.Text)
                                            
                                        End If
                                        
                                    'If is_standard_checkbox.value And IsNumeric(Normed_weight_textbox.Text) Then
                                    
                                            'cell_1 = "BC" + CStr(last_row + 1 + row_more)
                                            'sheet_xls_2.Range(cell_1).value = 1
                                            
                                            'cell_1 = "BD" + CStr(last_row + 1 + row_more)
                                            'sheet_xls_2.Range(cell_1).value = CDbl(Normed_weight_textbox.Text)
                                            
                                            'If IsNumeric(Normed_area_textbox.Text) Then
                                            
                                                    'cell_1 = "BE" + CStr(last_row + 1 + row_more)
                                                    'sheet_xls_2.Range(cell_1).value = CDbl(Normed_area_textbox.Text)
                                                    
                                                'End If
                                                
                                        'Else
                                            
                                            'If IsNumeric(plate_thickness_textbox.Text) Then
                                            
                                                    'cell_1 = "BG" + CStr(last_row + 1 + row_more)
                                                    'sheet_xls_2.Range(cell_1).value = CDbl(plate_thickness_textbox.Text)
                                                    
                                                'End If
                                    
                                        'End If
                
                                    'cell_1 = "CA1"
                                    
                                    'If insert_area_checkbox.value Then
                                        
                                            'sheet_xls_2.Range(cell_1).value = 1
                                            
                                        'End If
                            
                                    cell_1 = "BL3"
                                    
                                    If sheet_xls_1.Range(cell_1).value = 1 Then
                                    
                                            'doplnit pozicce do d|fffd|lc|fffd| a doplnit spr|fffd|vn|fffd| po|fffd|ty pozic z d|fffd|lc|fffd|
                                            
                                            lock_xls_1_3
                                            
                                            Dim changed_area As area_limits
                                                                     
                                            changed_area.is_area = True
                                            changed_area.start_column = 1
                                            changed_area.end_column = 3
                                            changed_area.start_row = first_row
                                            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                                        
                                            If get_positions(pos_list, error_text) Then
                                            
                                                    reload_parts pos_list, changed_area
                                                
                                                End If
                                            
                                            Unload New_bolt_form
                                            
                                        Else
                                        
                                            lock_xls_1_3
                                            
                                            Unload New_bolt_form
                                        
                                        End If
                            
                                Else
                                
                                    MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                                
                                End If
                    
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
            
                Else
                
                    MsgBox error_run_function, vbInformation, msgbox_title_4
                
                End If
                
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub UserForm_Activate() ' PREVEDENO NA BOLT

    Dim norm_list() As String
    'Dim name_list() As String
    Dim i As Long

    If Page3.pos_no_checkbox.value Or Page3.pos_last_checkbox.value Then
    
            Dim last_val(1) As Long
            Dim last_row As Long
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            'Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(3)
            'Set sheet_xls_2 = book_xls.Worksheets(3)
                    
            last_row = sheet_xls_1.UsedRange.Rows.Count
    
            If Page3.pos_no_checkbox.value Then
                    
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i)
                        
                        If Not (CStr(sheet_xls_1.Range(cell_1).value) = "") Then
                        
                                If (CStr(sheet_xls_1.Range(cell_1).value) = Page3.pos_no_textbox.Text) Then
                                
                                        'Position_number_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                
                                        cell_1 = "C" + CStr(i)
                                        Position_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "D" + CStr(i)
                                        Position_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "E" + CStr(i)
                                        Position_norm_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "F" + CStr(i)
                                        Position_material_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "G" + CStr(i)
                                        Position_note_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "H" + CStr(i)
                                        Position_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                
                                        'cell_1 = "J" + CStr(i)
                                        'Position_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                
                                        'cell_1 = "BA" + CStr(i)
                                        'Position_empty_rows_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                        'cell_1 = "BC" + CStr(i)
                                        
                                        'If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                        
                                                'cell_1 = "BD" + CStr(i)
                                                
                                                'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                        
                                                        'is_standard_checkbox.value = True
                                                        'Normed_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                
                                                        'cell_1 = "BE" + CStr(i)
                                                        
                                                        'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                                        
                                                                'Normed_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                                
                                                            'End If
                                                            
                                                        'Position_dimension_textbox_Change
                                                        
                                                    'Else
                                                    
                                                        'is_standard_checkbox.value = False
                                                        
                                                    'End If
                                                    
                                            'Else
                                            
                                                'is_standard_checkbox.value = False
                                        
                                                'cell_1 = "BG" + CStr(i)
                                                
                                                'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                                        
                                                        'cell_1 = "E" + CStr(i)
                                                        'Position_plate_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                                        'cell_1 = "BG" + CStr(i)
                                                        'plate_thickness_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                        
                                                    'Else
                                                
                                                    'End If
                                            
                                            'End If

                                        'cell_1 = "CA1"
                                        
                                        'If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                            
                                                'insert_area_checkbox.value = True
                                                
                                            'End If
                                
                                        i = last_row
                                
                                    End If
                        
                            End If
                        
                    Next i
                    
                Else
                
                    last_val(0) = 0
                    last_val(1) = 0
                
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i)
                        
                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                        
                                    If CLng(sheet_xls_1.Range(cell_1).value) > last_val(0) Then
                                    
                                            last_val(0) = CLng(sheet_xls_1.Range(cell_1).value)
                                            last_val(1) = i
                                    
                                        End If
                        
                            End If
                        
                    Next i
                        
                    If last_val(1) > 0 Then
                    
                            'cell_1 = "A" + CStr(last_val(1))
                            'Position_number_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                    
                            cell_1 = "C" + CStr(last_val(1))
                            Position_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "D" + CStr(last_val(1))
                            Position_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "E" + CStr(last_val(1))
                            Position_norm_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "F" + CStr(last_val(1))
                            Position_material_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "G" + CStr(last_val(1))
                            Position_note_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "H" + CStr(last_val(1))
                            Position_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
    
                            'cell_1 = "J" + CStr(last_val(1))
                            'Position_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
    
                            'cell_1 = "BA" + CStr(last_val(1))
                            'Position_empty_rows_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                            'cell_1 = "BC" + CStr(last_val(1))
                            
                            'If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                            
                                    'cell_1 = "BD" + CStr(last_val(1))
                                        
                                    'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                            
                                            'is_standard_checkbox.value = True
                                            'Normed_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                    
                                            'cell_1 = "BE" + CStr(last_val(1))
                                            
                                            'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                            
                                                    'Normed_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                    
                                                'End If
                                                
                                            'Position_dimension_textbox_Change
                                            
                                        'Else
                                        
                                            'is_standard_checkbox.value = False
                                            
                                        'End If
                                        
                                'Else
                                
                                    'is_standard_checkbox.value = False
                                
                                    'cell_1 = "BG" + CStr(last_val(1))
                                    
                                    'If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                            
                                            'cell_1 = "E" + CStr(last_val(1))
                                            'Position_plate_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                            'cell_1 = "BG" + CStr(last_val(1))
                                            'plate_thickness_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                            
                                        'Else
                                    
                                        'End If
                                
                                'End If

                                'cell_1 = "CA1"
                                
                                'If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                    
                                        'insert_area_checkbox.value = True
                                        
                                    'End If
                    
                        End If
                
                End If
        
        Else
            
            Position_material_textbox.Text = Page3.impl_material_textbox.Text
            Position_note_textbox.Text = Page3.impl_note_textbox.Text
        
        End If
    
    'vlozeni norem do listboxu
    
    If get_bolt_norms_from_database(norm_list) Then
    
            Norm_combobox.AddItem ("-")
            Name_combobox.AddItem ("-")
            'Norm_listbox.AddItem ("")
    
            For i = 0 To UBound(norm_list)
            
                Norm_combobox.AddItem (norm_list(i))
                'Norm_listbox.AddItem (norm_list(i))
        
            Next i
            
            Mem_box1_text.Text = "-"
            Mem_box2_text.Text = "-"
            
            Norm_combobox.Text = "-"
            Name_combobox.Text = "-"
            'Norm_listbox.Text = ("")
    
        End If
    
End Sub

Private Function check_values(error_text As String) As Boolean 'PREVEDENO NA BOLT

    check_values = True
    
    If Not (isLong(Position_number_textbox.Text)) Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_name_textbox.Text = "" Then
    
            error_text = error_name_description_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_weight_textbox.Text)) And Not (Position_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    'If Not (IsNumeric(Position_area_textbox.Text)) And Not (Position_area_textbox.Text = "") Then
    
            'error_text = error_area_pc_text
            
            'check_values = False
            
            'Exit Function
    
        'End If
    
    If Not (isLong(Position_empty_rows_textbox.Text)) And Not (Position_empty_rows_textbox.Text = "0") And Not (Position_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "New_free_group_form"
Attribute VB_Base = "0{B5240D9D-C6E9-44C5-8D57-17A0767D0D8A}{69FEE91D-35EC-4DB2-A926-F29223B53035}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Click()

    Unload New_free_group_form

End Sub

Private Sub Free_group_empty_rows_label_Click()

End Sub

Private Sub OK_button_Click()

    Dim free_group_list() As free_group
    Dim error_text As String
    Dim last_row As Long
    Dim row_more As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            Dim cell_2 As String
            Dim cell_3 As String
            Dim h_str As String
            Dim write_free_group As Boolean
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(4)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            cell_1 = "BF1"
            cell_2 = "BD1"
            cell_3 = "BD4"
            
            If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" And sheet_xls_1.Range(cell_2).value = "" Then
            
                    If get_free_groups(free_group_list, error_text) Then
                    
                            write_free_group = False
                            
                            If last_row = 7 Then
                            
                                    write_free_group = True
                            
                                Else
                            
                                    If CLng(Free_group_number_textbox.Text) > UBound(free_group_list) Then
                                    
                                            write_free_group = True
                                                
                                        Else
                            
                                            If free_group_list(CLng(Free_group_number_textbox.Text)).pcs = 0 Then
                                            
                                                    write_free_group = True
                                                    
                                                End If
                                        
                                        End If
                                        
                                End If
                            
                            If write_free_group Then
                            
                                    cell_1 = "BA" + CStr(last_row)
                                    row_more = CLng(sheet_xls_2.Range(cell_1).value)
                            
                                    unlock_xls_1_4

                                    cell_1 = "A" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = CLng(Free_group_number_textbox.Text)

                                    cell_1 = "B" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = CLng(Free_group_pcs_textbox.Text)
                            
                                    cell_1 = "C" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Free_group_name_textbox.Text
                                    
                                    cell_1 = "D" + CStr(last_row + 1 + row_more)
                                    
                                    If IsNumeric(Free_group_dimension_textbox.Text) Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Free_group_dimension_textbox.Text)
                                    
                                        Else
                                        
                                            h_str = "'" + Free_group_dimension_textbox.Text
                                    
                                            sheet_xls_2.Range(cell_1).value = h_str
                                            
                                        End If
                                    
                                    cell_1 = "E" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Free_group_norm_textbox.Text
                                    
                                    cell_1 = "F" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Free_group_material_textbox.Text
                                    
                                    cell_1 = "G" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Free_group_note_textbox.Text
                                    
                                    cell_1 = "H" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Free_group_weight_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text)
                                            
                                        Else
                                        
                                            sheet_xls_2.Range(cell_1).value = 0
                                            
                                        End If
                                    
                                    cell_1 = "I" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Free_group_weight_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text) * CLng(Free_group_pcs_textbox.Text)
                                            
                                        Else
                                        
                                            sheet_xls_2.Range(cell_1).value = 0
                                            
                                        End If
                                    
                                    cell_1 = "AA" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Free_group_weight_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Free_group_weight_textbox.Text) * CLng(Free_group_pcs_textbox.Text)
                                            
                                        Else
                                        
                                            sheet_xls_2.Range(cell_1).value = 0
                                            
                                        End If
                                
                                    cell_1 = "BA" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Free_group_empty_rows_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CLng(Free_group_empty_rows_textbox.Text)
                                            
                                        End If
                                    
                                    lock_xls_1_4
                                    
                                    'reload volnych skupin
                                    
                                    If get_free_groups(free_group_list, error_text) Then
                                    
                                            reload_free_groups free_group_list
                                        
                                        Else
                                        
                                            MsgBox error_text, vbInformation, msgbox_title_1
                                        
                                        End If
                                    
                                    Unload New_free_group_form
                            
                                Else
                                
                                    MsgBox error_free_group_duplicity_text, vbInformation, msgbox_title_2
                                
                                End If
                    
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
            
                Else
                
                    MsgBox error_run_function, vbInformation, msgbox_title_4
                
                End If
                
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If Not (isLong(Free_group_number_textbox.Text)) Then
    
            error_text = error_free_group_num_text
            
            check_values = False
            
            Exit Function
            
        Else
        
            If CLng(Free_group_number_textbox.Text) > 999 Then
            
                    error_text = error_free_group_num_text
                    
                    check_values = False
                    
                    Exit Function
            
                End If
    
        End If
    
    If Not (isLong(Free_group_pcs_textbox.Text)) Then
    
            error_text = error_free_group_pcs_text
            
            check_values = False
            
            Exit Function
            
        End If
    
    'If Free_group_name_textbox.Text = "" Then
    
            'error_text = error_name_description_text
            
            'check_values = False
            
            'Exit Function
    
        'End If
    
    If Not (IsNumeric(Free_group_weight_textbox.Text)) And Not (Free_group_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (isLong(Free_group_empty_rows_textbox.Text)) And Not (Free_group_empty_rows_textbox.Text = "0") And Not (Free_group_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "New_position_form"
Attribute VB_Base = "0{2C79D5D1-FB67-4363-A890-31E9BCE6BB84}{AD0C7186-D983-4933-BD87-5127BC078AB4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Plate_weight_correction_textbox_Change()

    If IsNumeric(Plate_weight_correction_textbox.Text) And IsNumeric(plate_thickness_textbox.Text) Then
    
            Position_dimension_textbox_Change
            
        Else
        
            Plate_weight_correction_textbox.Text = ""
            Position_dimension_textbox_Change
            
        End If

End Sub

Private Sub Cancel_button_Click()

    Unload New_position_form

End Sub

Private Sub insert_area_checkbox_Click()

    If insert_area_checkbox.value Then
    
            If is_standard_checkbox.value Or Not (plate_thickness_textbox.Text = "") Then
            
                    Position_dimension_textbox_Change
            
                End If
    
        Else
        
            Position_area_textbox.Text = ""
        
        End If

End Sub

Private Sub is_standard_checkbox_Change()

    If is_standard_checkbox.value Then
    
            is_standard_checkbox.Caption = "Position is normalized"
            is_standard_checkbox.Enabled = True
    
            Position_name_textbox.Enabled = False
            Position_norm_textbox.Enabled = False
            Position_weight_textbox.Enabled = False
            Position_area_textbox.Enabled = False
            Position_name_label.Enabled = False
            Position_norm_label.Enabled = False
            Position_weight_label.Enabled = False
            Position_area_label.Enabled = False
            'Norm_code_textbox.Enabled = False
            Norm_combobox.Enabled = False
            Name_combobox.Enabled = False
            'Norm_code_label.Enabled = False
            Norm_label.Enabled = False
            Name_label.Enabled = False
            plate_thickness_textbox.Enabled = False
            plate_thickness_label.Enabled = False
            
            Position_number_textbox.SetFocus
    
        Else
        
            is_standard_checkbox.Caption = "Position is not normalized"
            is_standard_checkbox.Enabled = False
            Position_name_textbox.Enabled = True
            Position_norm_textbox.Enabled = True
            Position_weight_textbox.Enabled = True
            Position_area_textbox.Enabled = True
            Position_name_label.Enabled = True
            Position_norm_label.Enabled = True
            Position_weight_label.Enabled = True
            Position_area_label.Enabled = True
            'Norm_code_textbox.Enabled = True
            Norm_combobox.Enabled = True
            Name_combobox.Enabled = True
            'Norm_code_label.Enabled = True
            Norm_label.Enabled = True
            Name_label.Enabled = True
            plate_thickness_textbox.Enabled = True
            plate_thickness_label.Enabled = True
            Normed_weight_textbox.value = ""
            Normed_area_textbox.value = ""
            plate_thickness_textbox.Enabled = True
            plate_thickness_label.Enabled = True
            
            Name_combobox.Text = "-"
            
            Position_number_textbox.SetFocus
        
        End If

End Sub

Private Sub Name_combobox_Change()

    If Not (StrComp(Mem_box2_text.Text, Name_combobox.Text) = 0) Then
    
            Dim norm_weight As Double
            Dim norm_area As Double
            
            Dim in_ok As Boolean
            Dim i As Long
            
            in_ok = False
            
            For i = 1 To UBound(Name_combobox.Column, 2)
            
                If StrComp(Name_combobox.Text, Name_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Name_combobox.Column, 2)
                        
                    End If
            
            Next i
                    
            If (Not (Name_combobox.Text = "-")) And in_ok Then
                    
                    If get_norm_shape_data(Norm_combobox.Text, Name_combobox.Text, norm_weight, norm_area) Then
    
                            is_standard_checkbox.value = True
                            
                            Position_name_textbox.Text = Name_combobox.Text
                            Position_norm_textbox.Text = short_norm(Norm_combobox.Text)
                            Normed_weight_textbox.Text = norm_weight
                            Normed_area_textbox.Text = norm_area
                                
                            Position_dimension_textbox_Change
                    
                        End If
                        
                Else
                
                    If Not (UBound(Name_combobox.List, 1) = -1) Then
                
                            Name_combobox.Text = "-"
                
                        End If
                    
                    is_standard_checkbox.value = False
                        
                End If
            
            Mem_box2_text.Text = Name_combobox.Text
        
        End If

End Sub

Private Sub Norm_combobox_change()

    If Not (StrComp(Mem_box1_text.Text, Norm_combobox.Text) = 0) Then
    
            Dim shape_list() As String
            Dim i As Long
            
            Dim in_ok As Boolean
            
            in_ok = False
            
            For i = 1 To UBound(Norm_combobox.Column, 2)
            
                If StrComp(Norm_combobox.Text, Norm_combobox.Column(0, i)) = 0 Then
                
                        in_ok = True
                        i = UBound(Norm_combobox.Column, 2)
                        
                    End If
            
            Next i

            'zmena seznamu rozmeru profilu
            
            Name_combobox.Clear
                    
            If in_ok Then
                    
                    If get_norm_shapes(Norm_combobox.Text, shape_list) Then
                    
                            Name_combobox.AddItem "-"
                            
                            For i = 0 To UBound(shape_list)
                            
                                If Not (shape_list(i) = "") Then
                            
                                        Name_combobox.AddItem (shape_list(i))
                                        
                                    End If
                            
                            Next i
                            
                            Name_combobox.Text = "-"
                    
                        End If
                        
                Else
                
                    Name_combobox.AddItem "-"
                    Name_combobox.Text = "-"
                    Norm_combobox.Text = "-"
                        
                End If
            
            'Name_combobox.AddItem ("pokus")
            
            'Name_combobox.Clear
            
            Mem_box1_text.Text = Norm_combobox.Text
        
        End If

End Sub

Private Sub OK_button_Click() 'zbyva predelat - dodelat

    Dim pos_list() As position
    Dim error_text As String
    Dim last_row As Long
    Dim row_more As Long
    
    If check_values(error_text) Then
    
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            Dim cell_2 As String
            Dim cell_3 As String
            Dim h_str As String
            Dim write_pos As Boolean
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(1)
            Set sheet_xls_2 = book_xls.Worksheets(2)
    
            last_row = sheet_xls_2.UsedRange.Rows.Count
            
            cell_1 = "BF1"
            cell_2 = "BD1"
            cell_3 = "BD2"
            
            If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" And sheet_xls_1.Range(cell_2).value = "" Then
            
                    If get_positions(pos_list, error_text) Then
                    
                            write_pos = False
                            
                            If last_row = 7 Then
                            
                                    write_pos = True
                            
                                Else
                            
                                    If CLng(Position_number_textbox.Text) > UBound(pos_list) Then
                                    
                                            write_pos = True
                                                
                                        Else
                            
                                            If pos_list(CLng(Position_number_textbox.Text)).row = 0 Then
                                            
                                                    write_pos = True
                                                    
                                                End If
                                        
                                        End If
                                        
                                End If
                            
                            If write_pos Then
                            
                                    cell_1 = "BA" + CStr(last_row)
                                    row_more = CLng(sheet_xls_2.Range(cell_1).value)
                            
                                    unlock_xls_1_2

                                    cell_1 = "A" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = CLng(Position_number_textbox.Text)
                            
                                    cell_1 = "C" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_name_textbox.Text
                                    
                                    cell_1 = "D" + CStr(last_row + 1 + row_more)
                                    
                                    If IsNumeric(Position_dimension_textbox.Text) Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_dimension_textbox.Text)
                                    
                                        Else
                                        
                                            h_str = "'" + Position_dimension_textbox.Text
                                    
                                            sheet_xls_2.Range(cell_1).value = h_str
                                            
                                        End If
                                    
                                    cell_1 = "E" + CStr(last_row + 1 + row_more)
                                    
                                    If IsNumeric(Position_plate_dimension_textbox.Text) Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_plate_dimension_textbox.Text)
                                    
                                        Else
                                        
                                            h_str = "'" + Position_plate_dimension_textbox.Text
                                        
                                            sheet_xls_2.Range(cell_1).value = h_str
                                            
                                        End If
                                    
                                    cell_1 = "F" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_norm_textbox.Text
                                    
                                    cell_1 = "G" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_material_textbox.Text
                                    
                                    cell_1 = "H" + CStr(last_row + 1 + row_more)
                                    sheet_xls_2.Range(cell_1).value = Position_note_textbox.Text
                                    
                                    cell_1 = "I" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Position_weight_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_weight_textbox.Text)
                                            
                                        End If
                
                                    cell_1 = "J" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Position_area_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CDbl(Position_area_textbox.Text)
                                            
                                        End If
                                
                                    cell_1 = "BA" + CStr(last_row + 1 + row_more)
                                    
                                    If Not (Position_empty_rows_textbox.Text = "") Then
                                    
                                            sheet_xls_2.Range(cell_1).value = CLng(Position_empty_rows_textbox.Text)
                                            
                                        End If
                                        
                                    If is_standard_checkbox.value And IsNumeric(Normed_weight_textbox.Text) Then
                                    
                                            cell_1 = "BC" + CStr(last_row + 1 + row_more)
                                            sheet_xls_2.Range(cell_1).value = 1
                                            
                                            cell_1 = "BD" + CStr(last_row + 1 + row_more)
                                            sheet_xls_2.Range(cell_1).value = CDbl(Normed_weight_textbox.Text)
                                            
                                            If IsNumeric(Normed_area_textbox.Text) Then
                                            
                                                    cell_1 = "BE" + CStr(last_row + 1 + row_more)
                                                    sheet_xls_2.Range(cell_1).value = CDbl(Normed_area_textbox.Text)
                                                    
                                                End If
                                                
                                        Else
                                            
                                            If IsNumeric(plate_thickness_textbox.Text) Then
                                            
                                                    cell_1 = "BG" + CStr(last_row + 1 + row_more)
                                                    sheet_xls_2.Range(cell_1).value = CDbl(plate_thickness_textbox.Text)
                                    
                                                    cell_1 = "BH" + CStr(last_row + 1 + row_more)
                                                    
                                                    If IsNumeric(Plate_weight_correction_textbox.Text) Then
                                                    
                                                            sheet_xls_2.Range(cell_1).value = CDbl(Plate_weight_correction_textbox.Text)
                                                            
                                                        Else
                                                        
                                                            sheet_xls_2.Range(cell_1).value = ""
                                                            
                                                        End If
                                
                                                    cell_1 = "BI" + CStr(last_row + 1 + row_more)
                                                    sheet_xls_2.Range(cell_1).value = Plate_short_name_textbox.Text
                                                    
                                                End If
                                    
                                        End If
                
                                    cell_1 = "CA1"
                                    
                                    If insert_area_checkbox.value Then
                                        
                                            sheet_xls_2.Range(cell_1).value = 1
                                            
                                        Else
                                        
                                            sheet_xls_2.Range(cell_1).value = ""
                                            
                                        End If
                            
                                    cell_1 = "BL3"
                                    
                                    If sheet_xls_1.Range(cell_1).value = 1 Then
                                    
                                            'doplnit pozicce do d|fffd|lc|fffd| a doplnit spr|fffd|vn|fffd| po|fffd|ty pozic z d|fffd|lc|fffd|
                                            
                                            lock_xls_1_2
                                            
                                            Dim changed_area As area_limits
                                                                     
                                            changed_area.is_area = True
                                            changed_area.start_column = 1
                                            changed_area.end_column = 3
                                            changed_area.start_row = first_row
                                            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                                        
                                            If get_positions(pos_list, error_text) Then
                                            
                                                    reload_parts pos_list, changed_area
                                                
                                                End If
                                            
                                        Else
                                        
                                            lock_xls_1_2
                                        
                                        End If
                                                
                                    If rep_pos_checkbox.value Then
                                    
                                            Position_number_textbox.Text = CStr(CLng(Position_number_textbox.Text) + 1)
                                    
                                        Else
                                    
                                            Unload New_position_form
                                            
                                        End If
                            
                                Else
                                
                                    MsgBox error_pos_duplicity_text, vbInformation, msgbox_title_2
                                
                                End If
                    
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
            
                Else
                
                    MsgBox error_run_function, vbInformation, msgbox_title_4
                
                End If
                
        Else
        
            MsgBox error_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Plate_short_name_textbox_Change()

    If Plate_short_name_textbox.Text = "" Then
    
            Position_name_textbox.Text = plate_short_name + plate_thickness_textbox.Text
                    
            If Position_norm_textbox.Text = "" Then
            
                    Position_norm_textbox.Text = plate_norm
            
                End If
            
        Else
        
            Position_name_textbox.Text = Plate_short_name_textbox.Text
                    
            If Position_norm_textbox.Text = plate_norm Then
            
                    Position_norm_textbox.Text = ""
            
                End If
        
        End If

End Sub

Private Sub plate_thickness_textbox_Change()

    If IsNumeric(CStr(plate_thickness_textbox.Text)) Then
    
            If CDbl(plate_thickness_textbox.Text) >= 0 Then
                                                            
                    Position_plate_dimension_textbox.Enabled = True
                    Position_plate_dimension_label.Enabled = True
                                                            
                    'Norm_code_textbox.Enabled = False
                    Norm_combobox.Enabled = False
                    Name_combobox.Enabled = False
                    'Norm_code_label.Enabled = False
                    Norm_label.Enabled = False
                    Name_label.Enabled = False
            
                    Position_name_textbox.Enabled = False
                    Position_weight_textbox.Enabled = False
                    Position_area_textbox.Enabled = False
                    Position_name_label.Enabled = False
                    Position_weight_label.Enabled = False
                    Position_area_label.Enabled = False
                    
                    Plate_weight_correction_label.Enabled = True
                    Plate_short_name_label.Enabled = True
                    Plate_weight_correction_textbox.Enabled = True
                    Plate_short_name_textbox.Enabled = True
                    Plate_weight_correction_textbox.Locked = False
                    Plate_short_name_textbox.Locked = False
                    
                    If Plate_short_name_textbox.Text = "" Then
                    
                            Position_name_textbox.Text = plate_short_name + plate_thickness_textbox.Text
                            
                        Else
                        
                            Position_name_textbox.Text = Plate_short_name_textbox.Text
                        
                        End If
                    
                    Position_dimension_textbox_Change
                    
                    If Position_norm_textbox.Text = "" And Plate_short_name_textbox.Text = "" Then
                    
                            Position_norm_textbox.Text = plate_norm
                    
                        End If
    
                Else
                
                    MsgBox error_plate_thickness_text, vbInformation, msgbox_title_2
            
                    plate_thickness_textbox.Text = ""
                
                End If
    
        Else
        
            If Not (CStr(plate_thickness_textbox.Text) = "") Then
            
                    MsgBox error_plate_thickness_text, vbInformation, msgbox_title_2
            
                    plate_thickness_textbox.Text = ""
                    
                Else
                                                            
                    Position_plate_dimension_textbox.Text = ""
                    Position_plate_dimension_textbox.Enabled = False
                    Position_plate_dimension_label.Enabled = False
                                                            
                    'Norm_code_textbox.Enabled = True
                    Norm_combobox.Enabled = True
                    Name_combobox.Enabled = True
                    'Norm_code_label.Enabled = True
                    Norm_label.Enabled = True
                    Name_label.Enabled = True
            
                    Position_name_textbox.Enabled = True
                    Position_weight_textbox.Enabled = True
                    Position_area_textbox.Enabled = True
                    Position_name_label.Enabled = True
                    Position_weight_label.Enabled = True
                    Position_area_label.Enabled = True
                    
                    Plate_weight_correction_label.Enabled = False
                    Plate_short_name_label.Enabled = False
                    Plate_weight_correction_textbox.Enabled = False
                    Plate_short_name_textbox.Enabled = False
                    Plate_weight_correction_textbox.Locked = True
                    Plate_short_name_textbox.Locked = True
            
                End If
                
            
        
        End If

End Sub

Private Sub Position_dimension_textbox_Change()

    If is_standard_checkbox.value Then
    
            Position_weight_textbox.Text = ""
            Position_area_textbox.Text = ""
    
            If IsNumeric(Position_dimension_textbox.Text) Then
            
                    If CDbl(Position_dimension_textbox.Text) > 0 Then
            
                            Position_weight_textbox.Text = CStr(((CDbl(Position_dimension_textbox.Text) * lenght_transition) * CDbl(Normed_weight_textbox.Text)))
                            
                            If insert_area_checkbox.value Then
                            
                                    Position_area_textbox.Text = CStr(((CDbl(Position_dimension_textbox.Text) * lenght_transition) * CDbl(Normed_area_textbox.Text)))
                            
                                Else
                                
                                    Position_area_textbox.Text = ""
                                
                                End If
                                
                        Else
                        
                            MsgBox error_norm_dimension_text, vbInformation, msgbox_title_2
                            
                            Position_dimension_textbox.Text = ""
                        
                        End If
            
                Else
                
                    If Not (Position_dimension_textbox.Text = "") Then
                        
                            MsgBox error_norm_dimension_text, vbInformation, msgbox_title_2
                            
                            Position_dimension_textbox.Text = ""
                            
                        End If
                
                End If
    
        Else
        
            If Not (plate_thickness_textbox.Text = "") Then
    
                    Position_weight_textbox.Text = ""
                    Position_area_textbox.Text = ""
            
                    If IsNumeric(Position_dimension_textbox.Text) Then
                    
                            If CDbl(Position_dimension_textbox.Text) > 0 Then
                            
                                    If IsNumeric(Position_plate_dimension_textbox.Text) Then
                                    
                                            If CDbl(Position_plate_dimension_textbox.Text) > 0 Then
                                            
                                                    If Not (Plate_weight_correction_textbox.Text = "") Then

                                                            Position_weight_textbox.Text = CStr((((CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * CDbl(plate_thickness_textbox.Text)) * (lenght_transition ^ 3)) * material_density * (CDbl(Plate_weight_correction_textbox.Text) / 100)))

                                                        Else

                                                            Position_weight_textbox.Text = CStr((((CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * CDbl(plate_thickness_textbox.Text)) * (lenght_transition ^ 3)) * material_density))
                                                            
                                                        End If
                                                    
                                                    If insert_area_checkbox.value Then
                                                    
                                                            If Not (Plate_weight_correction_textbox.Text = "") Then
                                                    
                                                                    Position_area_textbox.Text = CStr(2 * (CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * (lenght_transition ^ 2) * (CDbl(Plate_weight_correction_textbox.Text) / 100)))
                                                                    
                                                                Else
                                                                
                                                                    Position_area_textbox.Text = CStr(2 * (CDbl(Position_dimension_textbox.Text) * CDbl(Position_plate_dimension_textbox.Text) * (lenght_transition ^ 2)))
                                                                    
                                                                End If
                                                    
                                                        Else
                                                        
                                                            Position_area_textbox.Text = ""
                                                        
                                                        End If
                                                        
                                                End If
                                                
                                        End If
                                        
                                Else
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_dimension_textbox.Text = ""
                                
                                End If
                    
                        Else
                        
                            If Not (Position_dimension_textbox.Text = "") Then
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_dimension_textbox.Text = ""
                                    
                                End If
                        
                        End If
                                            
                    If IsNumeric(Position_plate_dimension_textbox.Text) Then
                    
                            If Not (CDbl(Position_plate_dimension_textbox.Text) > 0) Then
                            
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_plate_dimension_textbox.Text = ""
                            
                                End If
                                
                        Else
                        
                            If Not (Position_plate_dimension_textbox.Text = "") Then
                                
                                    MsgBox error_plate_dimension_text, vbInformation, msgbox_title_2
                                    
                                    Position_plate_dimension_textbox.Text = ""
                                    
                                End If
                                
                        End If
                
                End If
    
        End If

End Sub

Private Sub Position_empty_rows_textbox_Change()

    'If Not (Position_empty_rows_textbox.Text = "") Then

            'If IsNumeric(Position_empty_rows_textbox.Text) Then
            
                    'If Not (isLong(Position_empty_rows_textbox.Text)) Then
                    
                            'Position_empty_rows_textbox.Text = ""
                    
                        'End If
                        
                'Else
                
                    'Position_empty_rows_textbox.Text = ""
                
                'End If
                
        'End If

End Sub

Private Sub Position_plate_dimension_textbox_Change()

    Position_dimension_textbox_Change

End Sub

Private Sub UserForm_Activate()

    Dim norm_list() As String
    'Dim name_list() As String
    Dim i As Long

    If Page2.pos_no_checkbox.value Or Page2.pos_last_checkbox.value Then
    
            Dim last_val(1) As Long
            Dim last_row As Long
            Dim book_xls As Workbook
            Dim sheet_xls_1 As Worksheet
            'Dim sheet_xls_2 As Worksheet
            Dim cell_1 As String
            
            Set book_xls = ActiveWorkbook
            Set sheet_xls_1 = book_xls.Worksheets(2)
            'Set sheet_xls_2 = book_xls.Worksheets(3)
                    
            last_row = sheet_xls_1.UsedRange.Rows.Count
    
            If Page2.pos_no_checkbox.value Then
                    
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i)
                        
                        If Not (CStr(sheet_xls_1.Range(cell_1).value) = "") Then
                        
                                If (CStr(sheet_xls_1.Range(cell_1).value) = Page2.pos_no_textbox.Text) Then
                                
                                        'Position_number_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                
                                        cell_1 = "C" + CStr(i)
                                        Position_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "D" + CStr(i)
                                        Position_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "F" + CStr(i)
                                        Position_norm_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "G" + CStr(i)
                                        Position_material_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "H" + CStr(i)
                                        Position_note_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                        
                                        cell_1 = "I" + CStr(i)
                                        Position_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                
                                        cell_1 = "J" + CStr(i)
                                        Position_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                
                                        'cell_1 = "BA" + CStr(i)
                                        'Position_empty_rows_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                        cell_1 = "BC" + CStr(i)
                                        
                                        If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                        
                                                cell_1 = "BD" + CStr(i)
                                                
                                                If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                        
                                                        is_standard_checkbox.value = True
                                                        Normed_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                
                                                        cell_1 = "BE" + CStr(i)
                                                        
                                                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                                        
                                                                Normed_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                                
                                                            End If
                                                            
                                                        Position_dimension_textbox_Change
                                                        
                                                    Else
                                                    
                                                        is_standard_checkbox.value = False
                                                        
                                                    End If
                                                    
                                            Else
                                            
                                                is_standard_checkbox.value = False
                                        
                                                cell_1 = "BG" + CStr(i)
                                                
                                                If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                                        
                                                        cell_1 = "E" + CStr(i)
                                                        Position_plate_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                                        cell_1 = "BG" + CStr(i)
                                                        plate_thickness_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                                        cell_1 = "BH" + CStr(i)
                                                        
                                                        If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                                        
                                                                Plate_weight_correction_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                                
                                                            End If

                                                        cell_1 = "BI" + CStr(i)
                                                        Plate_short_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                
                                                    End If
                                            
                                            End If

                                        cell_1 = "CA1"
                                        
                                        If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                            
                                                insert_area_checkbox.value = True
                                                
                                            End If
                                
                                        i = last_row
                                
                                    End If
                        
                            End If
                        
                    Next i
                    
                Else
                
                    last_val(0) = 0
                    last_val(1) = 0
                
                    For i = first_row To last_row
                    
                        cell_1 = "A" + CStr(i)
                        
                        If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                        
                                    If CLng(sheet_xls_1.Range(cell_1).value) > last_val(0) Then
                                    
                                            last_val(0) = CLng(sheet_xls_1.Range(cell_1).value)
                                            last_val(1) = i
                                    
                                        End If
                        
                            End If
                        
                    Next i
                        
                    If last_val(1) > 0 Then
                    
                            'cell_1 = "A" + CStr(last_val(1))
                            'Position_number_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                    
                            cell_1 = "C" + CStr(last_val(1))
                            Position_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "D" + CStr(last_val(1))
                            Position_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "F" + CStr(last_val(1))
                            Position_norm_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "G" + CStr(last_val(1))
                            Position_material_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "H" + CStr(last_val(1))
                            Position_note_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                            
                            cell_1 = "I" + CStr(last_val(1))
                            Position_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
    
                            cell_1 = "J" + CStr(last_val(1))
                            Position_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
    
                            'cell_1 = "BA" + CStr(last_val(1))
                            'Position_empty_rows_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                            cell_1 = "BC" + CStr(last_val(1))
                            
                            If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                            
                                    cell_1 = "BD" + CStr(last_val(1))
                                        
                                    If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                            
                                            is_standard_checkbox.value = True
                                            Normed_weight_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                    
                                            cell_1 = "BE" + CStr(last_val(1))
                                            
                                            If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                            
                                                    Normed_area_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                    
                                                End If
                                                
                                            Position_dimension_textbox_Change
                                            
                                        Else
                                        
                                            is_standard_checkbox.value = False
                                            
                                        End If
                                        
                                Else
                                
                                    is_standard_checkbox.value = False
                                
                                    cell_1 = "BG" + CStr(last_val(1))
                                    
                                    If IsNumeric(CStr(sheet_xls_1.Range(cell_1).value)) Then
                                            
                                            cell_1 = "E" + CStr(last_val(1))
                                            Position_plate_dimension_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                            cell_1 = "BG" + CStr(last_val(1))
                                            plate_thickness_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)

                                            cell_1 = "BH" + CStr(last_val(1))
                                            
                                            If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                            
                                                    Plate_weight_correction_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                                    
                                                End If

                                            cell_1 = "BI" + CStr(last_val(1))
                                            Plate_short_name_textbox.Text = CStr(sheet_xls_1.Range(cell_1).value)
                                            
                                        Else
                                    
                                        End If
                                
                                End If

                                cell_1 = "CA1"
                                
                                If CStr(sheet_xls_1.Range(cell_1).value) = "1" Then
                                    
                                        insert_area_checkbox.value = True
                                        
                                    End If
                    
                        End If
                
                End If
        
        Else
            
            Position_material_textbox.Text = Page2.impl_material_textbox.Text
            Position_note_textbox.Text = Page2.impl_note_textbox.Text
        
        End If
    
    'vlozeni norem do listboxu
    
    If get_shape_norms_from_database(norm_list) Then
    
            Norm_combobox.AddItem ("-")
            Name_combobox.AddItem ("-")
            'Norm_listbox.AddItem ("")
    
            For i = 0 To UBound(norm_list)
            
                Norm_combobox.AddItem (norm_list(i))
                'Norm_listbox.AddItem (norm_list(i))
        
            Next i
            
            Mem_box1_text.Text = "-"
            Mem_box2_text.Text = "-"
            
            Norm_combobox.Text = "-"
            Name_combobox.Text = "-"
            'Norm_listbox.Text = ("")
    
        End If
    
End Sub

Private Function check_values(error_text As String) As Boolean

    check_values = True
    
    If Not (isLong(Position_number_textbox.Text)) Then
    
            error_text = error_pos_num_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_name_textbox.Text = "" Then
    
            error_text = error_name_description_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_weight_textbox.Text)) And Not (Position_weight_textbox.Text = "") Then
    
            error_text = error_weight_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (IsNumeric(Position_area_textbox.Text)) And Not (Position_area_textbox.Text = "") Then
    
            error_text = error_area_pc_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Not (isLong(Position_empty_rows_textbox.Text)) And Not (Position_empty_rows_textbox.Text = "0") And Not (Position_empty_rows_textbox.Text = "") Then
    
            error_text = error_empty_rows_text
            
            check_values = False
            
            Exit Function
    
        End If
    
    If Position_plate_dimension_textbox.Enabled And (Position_plate_dimension_textbox.Text = "" Or Position_dimension_textbox.Text = "") Then
    
            error_text = error_plate_dim_exist_text
            
            check_values = False
            
            Exit Function
    
        End If

End Function
Attribute VB_Name = "Page1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "external_advancesteel_button, 47, 0, MSForms, CommandButton"
Attribute VB_Control = "Import_BOM_button, 46, 1, MSForms, CommandButton"
Attribute VB_Control = "add_del_rows_button, 42, 2, MSForms, CommandButton"
Attribute VB_Control = "position_to_part_button, 41, 3, MSForms, CommandButton"
Attribute VB_Control = "sort_button, 40, 4, MSForms, CommandButton"
Attribute VB_Control = "external_gosteel_button, 39, 5, MSForms, CommandButton"
Attribute VB_Control = "export_BOM_button, 19, 6, MSForms, CommandButton"
Attribute VB_Control = "edit_part_names_button, 18, 7, MSForms, CommandButton"
Attribute VB_Control = "external_frmdrw_button, 50, 8, MSForms, CommandButton"
Option Explicit

'Developed by Tomas Nagl for Beumer group - www.beumer.com
'tomas.nagl@beumer.com, tomas.nagl@gmail.com

Private Sub add_del_rows_button_Click()

    Add_del_rows_form.Show (1)

End Sub

Private Sub external_frmdrw_button_Click()

    External_data_frmdrw01_form.Show (1)
    
End Sub

Private Sub external_gosteel_button_Click()

    External_data_gosteel01_form.Show (1)

End Sub

Private Sub external_advancesteel_button_Click()

    External_data_as01_form.Show (1)

End Sub

Private Sub export_BOM_button_Click()

    export_BOM

End Sub

Private Sub edit_part_names_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_5 = book_xls.Worksheets(5)
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_5.Range(cell_1).value) = "" Then
    
            If sheet_xls_5.UsedRange.Rows.Count > first_row - 1 Then
            
                    Part_names_editor_form.Show (1)
                    
                Else
                
                    MsgBox error_part_not_exist_text, vbInformation, msgbox_title_7
                
                End If
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub Import_BOM_button_Click()

    Import_BOM_form.Show (1)

End Sub

Private Sub position_to_part_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "BD2"
    cell_2 = "BF1"
    
    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" Then

            Position_to_part_form.Show (1)
            
        Else
        
            MsgBox error_run_function, vbInformation, msgbox_title_4
        
        End If
        
End Sub

Private Sub sort_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_1.Range(cell_1).value) = "" Then
    
            Sort_parts_form.Show (1)
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub Worksheet_Calculate()

    If (Abs(Range("BA1").value - Range("BA2").value)) > 0.00001 Then
    
            If Range("CC1").value = 1 Then
            
                    Range("BA2").value = Range("BA1").value
            
                Else
            
                    Unprotect (pass)
                    
                    'Range("CC1").value = 1
        
                    Range("BA2").value = Range("BA1").value
                    
                    'Range("CC1").value = ""
                    
                    Protect (pass)
                    
                End If
            
        End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    
    Dim changed_area As area_limits
    
    Dim error_ind As Boolean
    
    Dim pos_list() As position
    Dim error_text As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    changed_area = get_input_limits(Target)
    
    cell_1 = "CC1"

    If (Not (sheet_xls_1.Range(cell_1).value = 1) And Not ((changed_area.is_area = False) And (changed_area.start_column = 53) And (changed_area.start_row < 4)) And Not ((changed_area.is_area = False) And (changed_area.start_column = 81) And (changed_area.start_row = 1))) Then
    
            error_ind = True
            
            If changed_area.start_column > 2 And changed_area.end_column < 11 And changed_area.end_row < 6 Then
            
                    error_ind = False
            
                End If
                
            If changed_area.start_column = 12 And changed_area.end_column = 12 And changed_area.end_row = 1 Then
            
                    error_ind = False
            
                End If
                
            If changed_area.start_column = 12 And changed_area.end_column = 12 And changed_area.start_row > 3 And changed_area.end_row < 6 Then
            
                    error_ind = False
            
                End If

            If changed_area.end_column < 4 And changed_area.start_row > 7 Then
            
                    'tady zpracovat zmeny zadani dilcu, ale zkontrolovat nejprve chybu pozic a neopravneneho odemcecni
                    
                    cell_1 = "BD2"
                    cell_2 = "BF1"
                    
                    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" Then
                
                            If get_positions(pos_list, error_text) Then
                            
                                    reload_parts pos_list, changed_area
                    
                                Else
                                
                                    MsgBox error_text, vbInformation, msgbox_title_1
                                
                                End If
                            
                        Else
                        
                            MsgBox error_run_function, vbInformation, msgbox_title_4
                        
                        End If
            
                    error_ind = False
            
                End If
            
            If error_ind Then
    
                    'Dim cell_2 As String
                    
                    unlock_xls_1
            
                    cell_1 = "BE1"
                    
                    sheet_xls_1.Range(cell_1).value = error_nonstandard_unlock
        
                    cell_1 = "BF1"
                    
                    sheet_xls_1.Range(cell_1).value = 1
                    
                    lock_xls_1
            
                    MsgBox error_nonstandard_unlock, vbInformation, msgbox_title_4
                    
                End If
        
        End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Dim cell_1 As String
    
    Dim selected_area As area_limits
    
    selected_area = get_input_limits(Target)
    
    If selected_area.is_area = False And selected_area.start_column = 4 And selected_area.start_row > 7 Then
    
            cell_1 = "A" + CStr(selected_area.start_row + 1)
            
            Range(cell_1).Select
    
        End If

End Sub
Attribute VB_Name = "Page2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "multiple_edit_button, 34, 0, MSForms, CommandButton"
Attribute VB_Control = "impl_note_label, 30, 1, MSForms, Label"
Attribute VB_Control = "impl_material_label, 28, 2, MSForms, Label"
Attribute VB_Control = "impl_note_textbox, 27, 3, MSForms, TextBox"
Attribute VB_Control = "impl_material_textbox, 26, 4, MSForms, TextBox"
Attribute VB_Control = "clear_positions_button, 20, 5, MSForms, CommandButton"
Attribute VB_Control = "sort_positions_button, 19, 6, MSForms, CommandButton"
Attribute VB_Control = "del_position_button, 18, 7, MSForms, CommandButton"
Attribute VB_Control = "edit_position_button, 17, 8, MSForms, CommandButton"
Attribute VB_Control = "pos_last_checkbox, 16, 9, MSForms, CheckBox"
Attribute VB_Control = "pos_no_textbox, 13, 10, MSForms, TextBox"
Attribute VB_Control = "pos_no_checkbox, 11, 11, MSForms, CheckBox"
Attribute VB_Control = "new_position_button, 8, 12, MSForms, CommandButton"
Option Explicit

Private Sub clear_positions_button_Click()

    Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim row_string As String
    Dim h_str As String
    Dim write_pos As Boolean
    Dim sum_pos() As Long
    Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(2)

    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "" Then
            
            If MsgBox(question_clear_text, vbYesNo, msgbox_title_8) = vbYes Then

                    If get_positions(pos_list, error_text) Then
                    
                            'Nacist pocty kusu
                            
                            ReDim sum_pos(UBound(pos_list))
                            
                            For i = 0 To UBound(pos_list)
                            
                                If Not (pos_list(i).name_description = "") And (pos_list(i).type = 1) Then
                                
                                        cell_1 = "B" + CStr(pos_list(i).row)
                                        
                                        If Not (CStr(sheet_xls_2.Range(cell_1).value) = "") Then
                                        
                                                sum_pos(i) = CLng(sheet_xls_2.Range(cell_1).value)
                                        
                                            End If
                                
                                    End If
                            
                            Next i
                    
                            'vymazat pozice
                            
                            unlock_xls_1_2
                                
                            If (last_row > first_row) Or (last_row = first_row) Then
                                
                                    row_string = CStr(first_row) + ":" + CStr(last_row)
                                
                                    sheet_xls_2.Rows(row_string).Delete
                                
                                End If
                                
                            'zapis serazenych pozic
                            
                            act_row = 8
                            
                            For i = 0 To UBound(pos_list)
                            
                                If Not (pos_list(i).name_description = "") And (pos_list(i).type = 1) And sum_pos(i) > 0 Then
                                
                                        'vypsat radek pozice
                                    
                                        cell_1 = "A" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = i
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = sum_pos(i)
                                
                                        cell_1 = "C" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).name_description
                                        
                                        cell_1 = "D" + CStr(act_row)
                                        
                                        If IsNumeric(pos_list(i).dimension) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).dimension
                                        
                                            Else
                                            
                                                h_str = "'" + pos_list(i).dimension
                                        
                                                sheet_xls_2.Range(cell_1).value = h_str
                                                
                                            End If
                                        
                                        cell_1 = "E" + CStr(act_row)
                                        
                                        If IsNumeric(pos_list(i).plate_dimension) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).plate_dimension
                                        
                                            Else
                                            
                                                h_str = "'" + pos_list(i).plate_dimension
                                            
                                                sheet_xls_2.Range(cell_1).value = h_str
                                                
                                            End If
                                        
                                        cell_1 = "F" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).norm_drawing
                                        
                                        cell_1 = "G" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).material
                                        
                                        cell_1 = "H" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).note
                                        
                                        cell_1 = "I" + CStr(act_row)
                                        
                                        If Not (pos_list(i).weight_pc = 0) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).weight_pc
                                                
                                            End If
                    
                                        cell_1 = "J" + CStr(act_row)
                                        
                                        If Not (pos_list(i).area_pc = 0) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).area_pc
                                                
                                            End If
                                    
                                        cell_1 = "BA" + CStr(act_row)
                                        
                                        If Not (pos_list(i).empty_rows = 0) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).empty_rows
                                                
                                            End If
                                            
                                        If pos_list(i).normed_pos Then
                                        
                                                cell_1 = "BC" + CStr(act_row)
                                                sheet_xls_2.Range(cell_1).value = 1
                                                
                                                cell_1 = "BD" + CStr(act_row)
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).normed_weight
                                        
                                                cell_1 = "BE" + CStr(act_row)
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).normed_area
                                                    
                                            Else
                                                
                                                If pos_list(i).is_plate Then
                                                
                                                        cell_1 = "BG" + CStr(act_row)
                                                        sheet_xls_2.Range(cell_1).value = pos_list(i).plate_thickness
                                    
                                                        cell_1 = "BH" + CStr(act_row)
                                                        
                                                        If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                                        
                                                          sheet_xls_2.Range(cell_1).value = pos_list(i).area_plate_weight
                                                                
                                                        End If
                                    
                                                        cell_1 = "BI" + CStr(act_row)
                                                        sheet_xls_2.Range(cell_1).value = pos_list(i).plate_short_name
                                                        
                                                    End If
                                        
                                            End If
                                            
                                        act_row = act_row + pos_list(i).empty_rows + 1
                                
                                    End If
                            
                            Next i
                            
                            lock_xls_1_2
                                                
                            'spustit celkovou kontrolu kusovniku
                            
                            changed_area.is_area = True
                            changed_area.start_column = 1
                            changed_area.end_column = 3
                            changed_area.start_row = first_row
                            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                        
                            If get_positions(pos_list, error_text) Then
                            
                                    reload_parts pos_list, changed_area
                        
                                Else
                                
                                    MsgBox error_text, vbInformation, msgbox_title_1
                                
                                End If
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
                        
                End If

        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub del_position_button_Click()

    Choice_position_del_form.Show (1)

End Sub

Private Sub edit_position_button_Click()

    Choice_position_edit_form.Show (1)
            
End Sub

Private Sub multiple_edit_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_1.Range(cell_1).value) = "" Then
            
            Multiple_position_edit_form.Show (1)
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub new_position_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "BD2"
    cell_2 = "BF1"
    
    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" Then

            New_position_form.Show (1)
            
        Else
        
            MsgBox error_run_function, vbInformation, msgbox_title_4
        
        End If

End Sub

Private Sub pos_last_checkbox_Click()

    If pos_last_checkbox.value And pos_no_checkbox.value Then
    
            pos_no_checkbox.value = False
    
        End If

End Sub

Private Sub pos_no_checkbox_Click()

    If pos_last_checkbox.value And pos_no_checkbox.value Then
    
            pos_last_checkbox.value = False
    
        End If

End Sub

Private Sub pos_no_textbox_Change()

End Sub

Private Sub sort_positions_button_Click()

    Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim row_string As String
    Dim h_str As String
    Dim write_pos As Boolean
    Dim sum_pos() As Long
    Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(2)

    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "" Then
            
            If get_positions(pos_list, error_text) Then
            
                    'Nacist pocty kusu
                    
                    ReDim sum_pos(UBound(pos_list))
                    
                    For i = 0 To UBound(pos_list)
                    
                        If Not (pos_list(i).name_description = "") And (pos_list(i).type = 1) Then
                        
                                cell_1 = "B" + CStr(pos_list(i).row)
                                
                                If Not (CStr(sheet_xls_2.Range(cell_1).value) = "") Then
                                
                                        sum_pos(i) = CLng(sheet_xls_2.Range(cell_1).value)
                                
                                    End If
                        
                            End If
                    
                    Next i
            
                    'vymazat pozice
                    
                    unlock_xls_1_2
                        
                    If (last_row > first_row) Or (last_row = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row)
                        
                            sheet_xls_2.Rows(row_string).Delete
                        
                        End If
                        
                    'zapis serazenych pozic
                    
                    act_row = 8
                    
                    For i = 0 To UBound(pos_list)
                    
                        If Not (pos_list(i).name_description = "") And (pos_list(i).type = 1) Then
                        
                                'vypsat radek pozice
                            
                                cell_1 = "A" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = i
                                
                                If sum_pos(i) > 0 Then
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = sum_pos(i)
                                        
                                    Else
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = 0
                                        
                                    End If
                        
                                cell_1 = "C" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).name_description
                                
                                cell_1 = "D" + CStr(act_row)
                                
                                If IsNumeric(pos_list(i).dimension) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).dimension
                                
                                    Else
                                    
                                        h_str = "'" + pos_list(i).dimension
                                
                                        sheet_xls_2.Range(cell_1).value = h_str
                                        
                                    End If
                                
                                cell_1 = "E" + CStr(act_row)
                                
                                If IsNumeric(pos_list(i).plate_dimension) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).plate_dimension
                                
                                    Else
                                    
                                        h_str = "'" + pos_list(i).plate_dimension
                                    
                                        sheet_xls_2.Range(cell_1).value = h_str
                                        
                                    End If
                                
                                cell_1 = "F" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).norm_drawing
                                
                                cell_1 = "G" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).material
                                
                                cell_1 = "H" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).note
                                
                                cell_1 = "I" + CStr(act_row)
                                
                                If Not (pos_list(i).weight_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).weight_pc
                                        
                                    End If
            
                                cell_1 = "J" + CStr(act_row)
                                
                                If Not (pos_list(i).area_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).area_pc
                                        
                                    End If
                            
                                cell_1 = "BA" + CStr(act_row)
                                
                                If Not (pos_list(i).empty_rows = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).empty_rows
                                        
                                    End If
                                    
                                If pos_list(i).normed_pos Then
                                
                                        cell_1 = "BC" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = 1
                                        
                                        cell_1 = "BD" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).normed_weight
                                
                                        cell_1 = "BE" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).normed_area
                                            
                                    Else
                                        
                                        If pos_list(i).is_plate Then
                                        
                                                cell_1 = "BG" + CStr(act_row)
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).plate_thickness
                            
                                                cell_1 = "BH" + CStr(act_row)
                                                
                                                If IsNumeric(sheet_xls_1.Range(cell_1).value) Then
                                                
                                                        If (pos_list(i).area_plate_weight = 0) Then
                                                            sheet_xls_2.Range(cell_1).value = ""
                                                        Else
                                                            sheet_xls_2.Range(cell_1).value = pos_list(i).area_plate_weight
                                                        End If
                                                        
                                                    End If
                            
                                                cell_1 = "BI" + CStr(act_row)
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).plate_short_name
                                                
                                            End If
                                
                                    End If
                                    
                                act_row = act_row + pos_list(i).empty_rows + 1
                        
                            End If
                    
                    Next i
                    
                    lock_xls_1_2
                                        
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim error_ind As Boolean
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "CC1"

    If Not (sheet_xls_1.Range(cell_1).value = 1) Then
    
            Dim cell_2 As String
            
            unlock_xls_1
    
            cell_1 = "BE1"
            
            sheet_xls_1.Range(cell_1).value = error_nonstandard_unlock

            cell_1 = "BF1"
            
            sheet_xls_1.Range(cell_1).value = 1
            
            lock_xls_1
    
            MsgBox error_nonstandard_unlock, vbInformation, msgbox_title_4
        
        End If

End Sub
Attribute VB_Name = "Page3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "multiple_edit_button, 15, 0, MSForms, CommandButton"
Attribute VB_Control = "impl_note_label, 14, 1, MSForms, Label"
Attribute VB_Control = "impl_material_label, 13, 2, MSForms, Label"
Attribute VB_Control = "impl_note_textbox, 12, 3, MSForms, TextBox"
Attribute VB_Control = "impl_material_textbox, 11, 4, MSForms, TextBox"
Attribute VB_Control = "clear_positions_button, 10, 5, MSForms, CommandButton"
Attribute VB_Control = "sort_positions_button, 9, 6, MSForms, CommandButton"
Attribute VB_Control = "del_position_button, 8, 7, MSForms, CommandButton"
Attribute VB_Control = "edit_position_button, 7, 8, MSForms, CommandButton"
Attribute VB_Control = "pos_last_checkbox, 6, 9, MSForms, CheckBox"
Attribute VB_Control = "pos_no_textbox, 5, 10, MSForms, TextBox"
Attribute VB_Control = "pos_no_checkbox, 4, 11, MSForms, CheckBox"
Attribute VB_Control = "new_position_button, 3, 12, MSForms, CommandButton"
Option Explicit

Private Sub clear_positions_button_Click() 'PREVEDENO NA BOLT

    Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim row_string As String
    Dim h_str As String
    Dim write_pos As Boolean
    Dim sum_pos() As Long
    Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(3)

    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "" Then
    
            If MsgBox(question_clear_text, vbYesNo, msgbox_title_8) = vbYes Then
            
                    If get_positions(pos_list, error_text) Then
                    
                            'Nacist pocty kusu
                            
                            ReDim sum_pos(UBound(pos_list))
                            
                            For i = 0 To UBound(pos_list)
                            
                                If Not (pos_list(i).name_description = "") And (pos_list(i).type = 2) Then
                                
                                        cell_1 = "B" + CStr(pos_list(i).row)
                                        
                                        If Not (CStr(sheet_xls_2.Range(cell_1).value) = "") Then
                                        
                                                sum_pos(i) = CLng(sheet_xls_2.Range(cell_1).value)
                                        
                                            End If
                                
                                    End If
                            
                            Next i
                    
                            'vymazat pozice
                            
                            unlock_xls_1_3
                                
                            If (last_row > first_row) Or (last_row = first_row) Then
                                
                                    row_string = CStr(first_row) + ":" + CStr(last_row)
                                
                                    sheet_xls_2.Rows(row_string).Delete
                                
                                End If
                                
                            'zapis serazenych pozic
                            
                            act_row = 8
                            
                            For i = 0 To UBound(pos_list)
                            
                                If Not (pos_list(i).name_description = "") And (pos_list(i).type = 2) And sum_pos(i) > 0 Then
                                
                                        'vypsat radek pozice
                                    
                                        cell_1 = "A" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = i
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = sum_pos(i)
                                
                                        cell_1 = "C" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).name_description
                                        
                                        cell_1 = "D" + CStr(act_row)
                                        
                                        If IsNumeric(pos_list(i).dimension) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).dimension
                                        
                                            Else
                                            
                                                h_str = "'" + pos_list(i).dimension
                                        
                                                sheet_xls_2.Range(cell_1).value = h_str
                                                
                                            End If
                                        
                                        cell_1 = "E" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).norm_drawing
                                        
                                        cell_1 = "F" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).material
                                        
                                        cell_1 = "G" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).note
                                        
                                        cell_1 = "H" + CStr(act_row)
                                        
                                        If Not (pos_list(i).weight_pc = 0) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).weight_pc
                                                
                                            End If
                                    
                                        cell_1 = "BA" + CStr(act_row)
                                        
                                        If Not (pos_list(i).empty_rows = 0) Then
                                        
                                                sheet_xls_2.Range(cell_1).value = pos_list(i).empty_rows
                                                
                                            End If
                                            
                                        act_row = act_row + pos_list(i).empty_rows + 1
                                
                                    End If
                            
                            Next i
                            
                            lock_xls_1_3
                                                
                            'spustit celkovou kontrolu kusovniku
                            
                            changed_area.is_area = True
                            changed_area.start_column = 1
                            changed_area.end_column = 3
                            changed_area.start_row = first_row
                            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                        
                            If get_positions(pos_list, error_text) Then
                            
                                    reload_parts pos_list, changed_area
                        
                                Else
                                
                                    MsgBox error_text, vbInformation, msgbox_title_1
                                
                                End If
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
    
                End If
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub del_position_button_Click() 'PREVEDENO NA BOLT

    Choice_bolt_del_form.Show (1)

End Sub

Private Sub edit_position_button_Click() 'PREVEDENO NA BOLT

    Choice_bolt_edit_form.Show (1)
            
End Sub

Private Sub multiple_edit_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_1.Range(cell_1).value) = "" Then
            
            Multiple_bolt_edit_form.Show (1)
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub new_position_button_Click() 'PREVEDENO NA BOLT

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "BD2"
    cell_2 = "BF1"
    
    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" Then

            New_bolt_form.Show (1)
            
        Else
        
            MsgBox error_run_function, vbInformation, msgbox_title_4
        
        End If

End Sub

Private Sub pos_last_checkbox_Click() 'PREVEDENO NA BOLT

    If pos_last_checkbox.value And pos_no_checkbox.value Then
    
            pos_no_checkbox.value = False
    
        End If

End Sub

Private Sub pos_no_checkbox_Click() 'PREVEDENO NA BOLT

    If pos_last_checkbox.value And pos_no_checkbox.value Then
    
            pos_last_checkbox.value = False
    
        End If

End Sub

Private Sub sort_positions_button_Click() 'PREVEDENO NA BOLT

    Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim row_string As String
    Dim h_str As String
    Dim write_pos As Boolean
    Dim sum_pos() As Long
    Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(3)

    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "" Then
            
            If get_positions(pos_list, error_text) Then
            
                    'Nacist pocty kusu
                    
                    ReDim sum_pos(UBound(pos_list))
                    
                    For i = 0 To UBound(pos_list)
                    
                        If Not (pos_list(i).name_description = "") And (pos_list(i).type = 2) Then
                        
                                cell_1 = "B" + CStr(pos_list(i).row)
                                
                                If Not (CStr(sheet_xls_2.Range(cell_1).value) = "") Then
                                
                                        sum_pos(i) = CLng(sheet_xls_2.Range(cell_1).value)
                                
                                    End If
                        
                            End If
                    
                    Next i
            
                    'vymazat pozice
                    
                    unlock_xls_1_3
                        
                    If (last_row > first_row) Or (last_row = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row)
                        
                            sheet_xls_2.Rows(row_string).Delete
                        
                        End If
                        
                    'zapis serazenych pozic
                    
                    act_row = 8
                    
                    For i = 0 To UBound(pos_list)
                    
                        If Not (pos_list(i).name_description = "") And (pos_list(i).type = 2) Then
                        
                                'vypsat radek pozice
                            
                                cell_1 = "A" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = i
                                
                                If sum_pos(i) > 0 Then
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = sum_pos(i)
                                        
                                    Else
                                    
                                        cell_1 = "B" + CStr(act_row)
                                        sheet_xls_2.Range(cell_1).value = 0
                                        
                                    End If
                        
                                cell_1 = "C" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).name_description
                                
                                cell_1 = "D" + CStr(act_row)
                                
                                If IsNumeric(pos_list(i).dimension) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).dimension
                                
                                    Else
                                    
                                        h_str = "'" + pos_list(i).dimension
                                
                                        sheet_xls_2.Range(cell_1).value = h_str
                                        
                                    End If
                                
                                cell_1 = "E" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).norm_drawing
                                
                                cell_1 = "F" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).material
                                
                                cell_1 = "G" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = pos_list(i).note
                                
                                cell_1 = "H" + CStr(act_row)
                                
                                If Not (pos_list(i).weight_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).weight_pc
                                        
                                    End If
                            
                                cell_1 = "BA" + CStr(act_row)
                                
                                If Not (pos_list(i).empty_rows = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = pos_list(i).empty_rows
                                        
                                    End If
                                    
                                act_row = act_row + pos_list(i).empty_rows + 1
                        
                            End If
                    
                    Next i
                    
                    lock_xls_1_3
                                        
                    'spustit celkovou kontrolu kusovniku
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                                
                    If get_positions(pos_list, error_text) Then
                    
                            reload_parts pos_list, changed_area
                
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range) 'PREVEDENO NA BOLT

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim error_ind As Boolean
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "CC1"

    If Not (sheet_xls_1.Range(cell_1).value = 1) Then
    
            Dim cell_2 As String
            
            unlock_xls_1
    
            cell_1 = "BE1"
            
            sheet_xls_1.Range(cell_1).value = error_nonstandard_unlock

            cell_1 = "BF1"
            
            sheet_xls_1.Range(cell_1).value = 1
            
            lock_xls_1
    
            MsgBox error_nonstandard_unlock, vbInformation, msgbox_title_4
        
        End If

End Sub
Attribute VB_Name = "Page4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "sort_groups_button, 7, 0, MSForms, CommandButton"
Attribute VB_Control = "del_group_button, 6, 1, MSForms, CommandButton"
Attribute VB_Control = "edit_group_button, 5, 2, MSForms, CommandButton"
Attribute VB_Control = "new_group_button, 4, 3, MSForms, CommandButton"
Option Explicit

Private Sub del_group_button_Click()

    Choice_free_group_del_form.Show (1)

End Sub

Private Sub edit_group_button_Click()

    Choice_free_group_edit_form.Show (1)

End Sub

Private Sub new_group_button_Click()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "BD4"
    cell_2 = "BF1"
    
    If sheet_xls_1.Range(cell_1).value = "" And sheet_xls_1.Range(cell_2).value = "" Then

            New_free_group_form.Show (1)
            
        Else
        
            MsgBox error_run_function, vbInformation, msgbox_title_4
        
        End If

End Sub

Private Sub sort_groups_button_Click()

    Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    'Dim changed_area As area_limits
    Dim free_group_list() As free_group
    Dim row_string As String
    Dim h_str As String
    Dim act_row As Long
    Dim i As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_2 = book_xls.Worksheets(4)

    last_row = sheet_xls_2.UsedRange.Rows.Count
    
    cell_1 = "A7"
    
    If CStr(sheet_xls_2.Range(cell_1).value) = "" Then
            
            If get_free_groups(free_group_list, error_text) Then
            
                    'vymazat skupiny
                    
                    unlock_xls_1_4
                        
                    If (last_row > first_row) Or (last_row = first_row) Then
                        
                            row_string = CStr(first_row) + ":" + CStr(last_row)
                        
                            sheet_xls_2.Rows(row_string).Delete
                        
                        End If
                        
                    'zapis serazenych skupin
                    
                    act_row = 8
                    
                    For i = 0 To UBound(free_group_list)
                    
                        If Not (free_group_list(i).pcs = 0) Then
                        
                                'vypsat radek pozice
                            
                                cell_1 = "A" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = i
                                    
                                cell_1 = "B" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = free_group_list(i).pcs

                                cell_1 = "C" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = free_group_list(i).name_description
                                
                                cell_1 = "D" + CStr(act_row)
                                
                                If IsNumeric(free_group_list(i).dimension) Then
                                
                                        sheet_xls_2.Range(cell_1).value = free_group_list(i).dimension
                                
                                    Else
                                    
                                        h_str = "'" + free_group_list(i).dimension
                                
                                        sheet_xls_2.Range(cell_1).value = h_str
                                        
                                    End If
                                
                                cell_1 = "E" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = free_group_list(i).norm_drawing
                                
                                cell_1 = "F" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = free_group_list(i).material
                                
                                cell_1 = "G" + CStr(act_row)
                                sheet_xls_2.Range(cell_1).value = free_group_list(i).note
                                
                                cell_1 = "H" + CStr(act_row)
                                
                                If Not (free_group_list(i).weight_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = free_group_list(i).weight_pc
                                        
                                    End If
            
                                cell_1 = "I" + CStr(act_row)
                                
                                If Not (free_group_list(i).weight_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = free_group_list(i).weight_pc * free_group_list(i).pcs
                                        
                                    Else
                                    
                                        sheet_xls_2.Range(cell_1).value = 0
                                        
                                    End If
                                
                                cell_1 = "AA" + CStr(act_row)
                                
                                If Not (free_group_list(i).weight_pc = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = free_group_list(i).weight_pc * free_group_list(i).pcs
                                        
                                    Else
                                    
                                        sheet_xls_2.Range(cell_1).value = 0
                                        
                                    End If
                            
                                cell_1 = "BA" + CStr(act_row)
                                
                                If Not (free_group_list(i).empty_rows = 0) Then
                                
                                        sheet_xls_2.Range(cell_1).value = free_group_list(i).empty_rows
                                        
                                    End If
                                    
                                act_row = act_row + free_group_list(i).empty_rows + 1
                        
                            End If
                    
                    Next i
                    
                    lock_xls_1_4
                                    
                    'reload volnych skupin
                    
                    If get_free_groups(free_group_list, error_text) Then
                    
                            reload_free_groups free_group_list
                        
                        Else
                        
                            MsgBox error_text, vbInformation, msgbox_title_1
                        
                        End If
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
    
        Else
        
            MsgBox error_BOM_text, vbInformation, msgbox_title_7
        
        End If
        
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim error_ind As Boolean
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "CC1"

    If Not (sheet_xls_1.Range(cell_1).value = 1) Then
    
            Dim cell_2 As String
            
            unlock_xls_1
    
            cell_1 = "BE1"
            
            sheet_xls_1.Range(cell_1).value = error_nonstandard_unlock

            cell_1 = "BF1"
            
            sheet_xls_1.Range(cell_1).value = 1
            
            lock_xls_1
    
            MsgBox error_nonstandard_unlock, vbInformation, msgbox_title_4
        
        End If

End Sub
Attribute VB_Name = "Page5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    
    Dim error_ind As Boolean
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    cell_1 = "CC1"

    If Not (sheet_xls_1.Range(cell_1).value = 1) Then
    
            Dim cell_2 As String
            
            unlock_xls_1
    
            cell_1 = "BE1"
            
            sheet_xls_1.Range(cell_1).value = error_nonstandard_unlock

            cell_1 = "BF1"
            
            sheet_xls_1.Range(cell_1).value = 1
            
            lock_xls_1
    
            MsgBox error_nonstandard_unlock, vbInformation, msgbox_title_4
        
        End If

End Sub
Attribute VB_Name = "Part_names_editor_form"
Attribute VB_Base = "0{27164E45-91E7-4970-BF5C-B8D9BE9AE124}{5569AB2A-AF80-4D08-B22E-13A91351E888}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Cancel_button_Enter()

    If temp_checkbox Then
    
            'temp_checkbox.value = False
                    
            'Part_name_primary_textbox.SelStart = 0
            'Part_name_primary_textbox.SelLength = Len(Part_name_primary_textbox.Text)
            
            Part_name_primary_textbox.SetFocus
    
        End If

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim str As String
    Dim csv_locked As Boolean
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim sheet_xls_5 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    'Dim act_row As Long
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim i As Long
    Dim j As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    Set sheet_xls_5 = book_xls.Worksheets(5)

    last_row = sheet_xls_5.UsedRange.Rows.Count
    
    csv_locked = True
    
    For j = 1 To UBound(temp_part_names)
    
        str = temp_part_names(j).part_no
    
        str = Mid(str, (Len(part_short_name) + 1), (Len(str) - Len(part_short_name)))
            
        For i = first_row To last_row
                            
            cell_1 = "A" + CStr(i)
                                    
            If CStr(sheet_xls_5.Range(cell_1).value) = str Then
                        
                    cell_1 = "C" + CStr(i)
                    
                    If Not (StrComp(CStr(sheet_xls_5.Range(cell_1).value), temp_part_names(j).part_name) = 0) Then
            
                            If csv_locked Then
                            
                                    unlock_xls_1_5
                                    
                                    csv_locked = False
                            
                                End If
                                
                            sheet_xls_5.Range(cell_1).value = ("'" + temp_part_names(j).part_name)
                                
                        End If
                    
                    i = last_row
            
                End If
                                            
        Next i
            
    Next j
            
    If Not (csv_locked) Then
    
            lock_xls_1_5
    
        End If
            
    'reloudnout vsechny hodnoty
    
    changed_area.is_area = True
    changed_area.start_column = 1
    changed_area.end_column = 3
    changed_area.start_row = first_row
    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                
    If get_positions(pos_list, error_text) Then
    
            reload_parts pos_list, changed_area

        Else
        
            MsgBox error_text, vbInformation, msgbox_title_1
        
        End If
    
    Unload Part_names_editor_form
         
End Sub

Private Sub OK_button_Enter()

    If temp_checkbox Then
    
            'temp_checkbox.value = False
                    
            'Part_name_primary_textbox.SelStart = 0
            'Part_name_primary_textbox.SelLength = Len(Part_name_primary_textbox.Text)
            
            Part_name_primary_textbox.SetFocus
    
        End If

End Sub

Private Sub Cancel_button_Click()

    Unload Part_names_editor_form

End Sub

Private Sub Part_name_primary_textbox_Change()

    change_name

End Sub

Private Sub Part_name_primary_textbox_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

    If KeyCode = 13 Then
    
            If move_sel Then
            
                    temp_checkbox.value = True
            
                End If
    
        End If

End Sub

Private Sub Part_no_primary_listbox_Enter()

    If temp_checkbox Then
    
            temp_checkbox.value = False
                    
            Part_name_primary_textbox.SelStart = 0
            Part_name_primary_textbox.SelLength = Len(Part_name_primary_textbox.Text)
            
            Part_name_primary_textbox.SetFocus
    
        End If

End Sub

Private Sub Part_no_primary_listbox_Change()

    refresh_view

End Sub

Private Sub UserForm_Activate()

    'Dim str As String
    'Dim error_text As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_5 As Worksheet
    'Dim sheet_xls_2 As Worksheet
    Dim cell_1 As String
    'Dim cell_2 As String
    'Dim cell_3 As String
    'Dim act_row As Long
    Dim i As Long
    Dim j As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_5 = book_xls.Worksheets(5)
    'Set sheet_xls_2 = book_xls.Worksheets(2)

    last_row = sheet_xls_5.UsedRange.Rows.Count
    
    j = 0
                
    ReDim temp_part_names(0)
            
    For i = first_row To last_row
                        
        cell_1 = "A" + CStr(i)
                                
        If Not (CStr(sheet_xls_5.Range(cell_1).value) = "") Then
                
                j = j + 1
                
                ReDim Preserve temp_part_names(j)
                
                temp_part_names(j).part_no = part_short_name + CStr(sheet_xls_5.Range(cell_1).value)
                Part_no_primary_listbox.AddItem (temp_part_names(j).part_no)
        
                cell_1 = "C" + CStr(i)
                
                temp_part_names(j).part_name = sheet_xls_5.Range(cell_1).value
                
                'i = last_row
        
            End If
                                        
    Next i
    
    'nastavit vyber na prvni dilec
    
    Part_no_primary_listbox.Text = temp_part_names(1).part_no
    
End Sub

Private Sub refresh_view()

    Dim i As Long
    Dim sel_row As Long
    Dim act_sel As String
    
    act_sel = Part_no_primary_listbox.Text
    
    'neprve zjistit, kde je aktualni vyber
    
    sel_row = 1
    
    For i = 1 To UBound(temp_part_names)
        
        If StrComp(temp_part_names(i).part_no, act_sel) = 0 Then
        
                sel_row = i
                
                i = UBound(temp_part_names)
        
            End If
    
    Next i
    
    'prepsat aktualni vyber
    
    If (sel_row - 3) > 0 Then
    
            Part_name_label_1.Caption = temp_part_names(sel_row - 3).part_name
            Part_no_label_1.Caption = temp_part_names(sel_row - 3).part_no
    
        Else

            Part_name_label_1.Caption = ""
            Part_no_label_1.Caption = ""
            
        End If
    
    If (sel_row - 2) > 0 Then
    
            Part_name_label_2.Caption = temp_part_names(sel_row - 2).part_name
            Part_no_label_2.Caption = temp_part_names(sel_row - 2).part_no
    
        Else

            Part_name_label_2.Caption = ""
            Part_no_label_2.Caption = ""
            
        End If
    
    If (sel_row - 1) > 0 Then
    
            Part_name_label_3.Caption = temp_part_names(sel_row - 1).part_name
            Part_no_label_3.Caption = temp_part_names(sel_row - 1).part_no
    
        Else

            Part_name_label_3.Caption = ""
            Part_no_label_3.Caption = ""
            
        End If
    
    Part_name_primary_textbox.Text = temp_part_names(sel_row).part_name
    Part_no_primary_label.Caption = temp_part_names(sel_row).part_no
    
    If (sel_row + 1) < (UBound(temp_part_names) + 1) Then
    
            Part_name_label_4.Caption = temp_part_names(sel_row + 1).part_name
            Part_no_label_4.Caption = temp_part_names(sel_row + 1).part_no
    
        Else

            Part_name_label_4.Caption = ""
            Part_no_label_4.Caption = ""
            
        End If
    
    If (sel_row + 2) < (UBound(temp_part_names) + 1) Then
    
            Part_name_label_5.Caption = temp_part_names(sel_row + 2).part_name
            Part_no_label_5.Caption = temp_part_names(sel_row + 2).part_no
    
        Else

            Part_name_label_5.Caption = ""
            Part_no_label_5.Caption = ""
            
        End If
    
    If (sel_row + 3) < (UBound(temp_part_names) + 1) Then
    
            Part_name_label_6.Caption = temp_part_names(sel_row + 3).part_name
            Part_no_label_6.Caption = temp_part_names(sel_row + 3).part_no
    
        Else

            Part_name_label_6.Caption = ""
            Part_no_label_6.Caption = ""
            
        End If

End Sub

Private Function move_sel() As Boolean

    Dim i As Long
    Dim sel_row As Long
    Dim act_sel As String
    
    act_sel = Part_no_primary_listbox.Text
    
    'neprve zjistit, kde je aktualni vyber
    
    sel_row = 1
    
    move_sel = True
    
    For i = 1 To UBound(temp_part_names)
        
        If StrComp(temp_part_names(i).part_no, act_sel) = 0 Then
        
                sel_row = i
                
                i = UBound(temp_part_names)
        
            End If
    
    Next i
    
    'posunout vyber
    
    If (sel_row + 1) < (UBound(temp_part_names) + 1) Then
    
            Part_no_primary_listbox.Text = temp_part_names(sel_row + 1).part_no
            
        Else
        
            move_sel = False
    
        End If

End Function

Private Sub change_name()

    Dim i As Long
    Dim sel_row As Long
    Dim act_sel As String
    
    act_sel = Part_no_primary_listbox.Text
    
    'neprve zjistit, kde je aktualni vyber
    
    sel_row = 1
    
    For i = 1 To UBound(temp_part_names)
        
        If StrComp(temp_part_names(i).part_no, act_sel) = 0 Then
        
                sel_row = i
                
                i = UBound(temp_part_names)
        
            End If
    
    Next i
    
    'zmenit jmeno dilce
    
    temp_part_names(sel_row).part_name = Part_name_primary_textbox.Text

End Sub
Attribute VB_Name = "Position_to_part_form"
Attribute VB_Base = "0{AB49385E-398F-4A99-A98D-CD625AFC4B7E}{F5A25559-0C78-43FF-89BE-579FF2E58851}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Bolt_pos_number_textbox_Change()

    If Not (isLong(Bolt_pos_number_textbox.Text)) And Not (Bolt_pos_number_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Bolt_pos_number_textbox.Text = ""
            
        End If

End Sub

Private Sub Delete_bolt_button_Click()

    Dim i As Long
    Dim end_row As Long
    Dim find_row As Long
    Dim h_str As String
    
    end_row = UBound(temp_positions)
    
    If isLong(Bolt_pos_number_textbox.Text) Then
    
            If is_bolt_insert(CLng(Bolt_pos_number_textbox.Text), find_row) Then
            
                    For i = find_row To (end_row - 1)
                    
                        temp_positions(i) = temp_positions(i + 1)
                        
                    Next i
                    
                    ReDim Preserve temp_positions(end_row - 1)
                    
                    reload_pos_list
            
                Else
                
                    MsgBox error_bolt_exist_text, vbInformation, msgbox_title_2
                
                End If
                
        Else
        
            MsgBox error_form_value_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Insert_bolt_button_Click()

    Dim pos_list() As position
    Dim error_text As String
    Dim new_bolt As position
    Dim end_row As Long
    Dim find_row As Long
    
    end_row = UBound(temp_positions) + 1
    
    If isLong(Bolt_pos_number_textbox.Text) And isLong(Number_bolt_pos_in_part_textbox.Text) Then
                
            If get_positions(pos_list, error_text) Then
            
                    If is_bolt_insert(CLng(Bolt_pos_number_textbox.Text), find_row) Then
                    
                            'spojovak jiz byl zadan
                            
                            MsgBox error_bolt_duplicity_text, vbInformation, msgbox_title_2
                    
                        Else
            
                            If CLng(Bolt_pos_number_textbox.Text) > UBound(pos_list) Then
                            
                                    ReDim Preserve pos_list(CLng(Bolt_pos_number_textbox.Text))
                            
                                End If
                    
                            If pos_list(CLng(Bolt_pos_number_textbox.Text)).row = 0 Or pos_list(CLng(Bolt_pos_number_textbox.Text)).type = 1 Then
                                                    
                                    If get_bolt_from_database_pos_no(CLng(Bolt_pos_number_textbox.Text), new_bolt) Then
                    
                                            ReDim Preserve temp_positions(end_row)
                                            
                                            temp_positions(end_row).position_no = CLng(Bolt_pos_number_textbox.Text)
                                            temp_positions(end_row).pos_sum = Number_bolt_pos_in_part_textbox
                                            temp_positions(end_row).pos_name = new_bolt.name_description
                                            temp_positions(end_row).pos_dim = new_bolt.dimension
                                            temp_positions(end_row).pos_norm = new_bolt.norm_drawing
                                            
                                            reload_pos_list
                                    
                                        Else
                                        
                                            MsgBox error_bolt_exist_text, vbInformation, msgbox_title_2
                                        
                                        End If
                                    
                                Else
                    
                                    ReDim Preserve temp_positions(end_row)
                                    
                                    temp_positions(end_row).position_no = CLng(Bolt_pos_number_textbox.Text)
                                    temp_positions(end_row).pos_sum = Number_bolt_pos_in_part_textbox
                                    temp_positions(end_row).pos_name = new_bolt.name_description
                                    temp_positions(end_row).pos_dim = new_bolt.dimension
                                    temp_positions(end_row).pos_norm = new_bolt.norm_drawing
                                    
                                    reload_pos_list
                                    
                                End If
                                
                        End If
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
                
        Else
        
            MsgBox error_form_value_text, vbInformation, msgbox_title_2
        
        End If

End Sub

Private Sub Number_bolt_pos_in_part_textbox_Change()

    If Not (isLong(Number_bolt_pos_in_part_textbox.Text)) And Not (Number_bolt_pos_in_part_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Number_bolt_pos_in_part_textbox.Text = ""
            
        End If

End Sub

Private Sub Number_pos_in_part_textbox_Change()

    If Not (isLong(Number_pos_in_part_textbox.Text)) And Not (Number_pos_in_part_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Number_pos_in_part_textbox.Text = ""
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim row_string As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim round_no As Long
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim short_pos_list() As Long
    Dim end_row As Long
    Dim act_row As Long
    Dim i As Long
    Dim j As Long
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)

    last_row = sheet_xls_1.UsedRange.Rows.Count
    end_row = UBound(temp_positions)
    ReDim short_pos_list(0)
    
    If isLong(Number_pos_in_part_textbox.Text) Then
            
            unlock_xls_1
            
            'Nejprve smazat list part
            
            If (last_row > first_row) Or (last_row = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row)
                
                    sheet_xls_1.Rows(row_string).Delete
                
                End If
            
            'Nacist pozice
            
            lock_xls_1
            
            If get_positions(pos_list, error_text) Then
            
                    'Postupne je zapsat
                    
                    round_no = 3 + end_row
                    
                    For i = i To UBound(pos_list)
                    
                        If Not (pos_list(i).row = 0) And pos_list(i).type = 1 Then
                        
                                ReDim Preserve short_pos_list(UBound(short_pos_list) + 1)
                                
                                short_pos_list(UBound(short_pos_list)) = i
                                
                            End If
                    
                    Next i
                    
                    unlock_xls_1
                    
                    For i = 1 To UBound(short_pos_list)
                                
                        act_row = first_row + ((i - 1) * round_no) + 1
                        
                        cell_1 = "A" + CStr(act_row)
                        
                        sheet_xls_1.Range(cell_1).value = i
                        
                        cell_1 = "C" + CStr(act_row)
                        
                        sheet_xls_1.Range(cell_1).value = 1
                                
                        act_row = first_row + ((i - 1) * round_no) + 2
                        
                        cell_1 = "A" + CStr(act_row)
                        
                        sheet_xls_1.Range(cell_1).value = i
                        
                        cell_1 = "B" + CStr(act_row)
                        
                        sheet_xls_1.Range(cell_1).value = short_pos_list(i)
                        
                        cell_1 = "C" + CStr(act_row)
                        
                        sheet_xls_1.Range(cell_1).value = CLng(Number_pos_in_part_textbox.Text)
                        
                        For j = 1 To end_row
                                
                            act_row = first_row + ((i - 1) * round_no) + 2 + j
                            
                            cell_1 = "A" + CStr(act_row)
                            
                            sheet_xls_1.Range(cell_1).value = i
                            
                            cell_1 = "B" + CStr(act_row)
                            
                            sheet_xls_1.Range(cell_1).value = temp_positions(j).position_no
                            
                            cell_1 = "C" + CStr(act_row)
                            
                            sheet_xls_1.Range(cell_1).value = temp_positions(j).pos_sum
                        
                        Next j
                    
                    Next i
                    
                    lock_xls_1
            
                    'reloudnout vsechny hodnoty
                    
                    changed_area.is_area = True
                    changed_area.start_column = 1
                    changed_area.end_column = 3
                    changed_area.start_row = first_row
                    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                    
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            Unload Position_to_part_form
                
        Else
        
            MsgBox error_form_value_text, vbInformation, msgbox_title_2
        
        End If
         
End Sub

Private Sub Cancel_button_Click()

    Unload Position_to_part_form

End Sub

Private Sub UserForm_Activate()

    ReDim temp_positions(0)
    
End Sub

Private Function is_bolt_insert(bolt_no As Long, find_row As Long) As Boolean

    Dim i As Long
    
    is_bolt_insert = False
       
    For i = 1 To UBound(temp_positions)
        
        If temp_positions(i).position_no = bolt_no Then
        
                is_bolt_insert = True
                
                find_row = i
                
                i = UBound(temp_positions)
        
            End If
        
    Next i
    
End Function

Private Sub reload_pos_list()

    Dim i As Long
    Dim str As String
    
    Temp_memory_listbox.Clear
       
    For i = 1 To UBound(temp_positions)
    
        str = CStr(temp_positions(i).position_no) + " - " + CStr(temp_positions(i).pos_sum) + "x"
        
        Temp_memory_listbox.AddItem (str)
        
    Next i
    
End Sub
Attribute VB_Name = "Sort_parts_form"
Attribute VB_Base = "0{40CE760D-FE22-454E-96F0-AA4EBE31E428}{B7C4A4C3-ED8C-4245-B82D-F9826900BAA3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub Part_distance_textbox_Change()

    If Not (isLong_0(Part_distance_textbox.Text)) And Not (Part_distance_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Part_distance_textbox.Text = ""
            
        End If

End Sub

Private Sub Bolt_distance_textbox_Change()

    If Not (isLong_0(Bolt_distance_textbox.Text)) And Not (Bolt_distance_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Bolt_distance_textbox.Text = ""
            
        End If

End Sub

Private Sub OK_button_Click()

    Dim error_text As String
    Dim row_string As String
    Dim last_row As Long
    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    Dim cell_1 As String
    Dim cell_2 As String
    Dim cell_3 As String
    Dim changed_area As area_limits
    Dim pos_list() As position
    Dim short_parts_list() As short_parts
    Dim act_row As Long
    Dim i As Long
    Dim j As Long
    Dim k As Long
    Dim min_pos As Long
    Dim is_bolt_distance As Boolean
    Dim is_position_distance As Boolean
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)

    last_row = sheet_xls_1.UsedRange.Rows.Count
    ReDim short_parts_list(0)
            
    If isLong_0(Bolt_distance_textbox.Text) And isLong_0(Part_distance_textbox.Text) And isLong_0(Position_distance_textbox.Text) Then
    
            unlock_xls_1
            
            'nacist dilce
            
            For i = first_row To last_row
            
                cell_1 = "A" + CStr(i)
                cell_2 = "B" + CStr(i)
                cell_3 = "C" + CStr(i)
                
                If Not (sheet_xls_1.Range(cell_1).value = "") And sheet_xls_1.Range(cell_2).value = "" And Not (sheet_xls_1.Range(cell_3).value = "") Then
                
                        'hlavicka dilce
                        
                        If CLng(sheet_xls_1.Range(cell_1).value) > UBound(short_parts_list) Then
                        
                                ReDim Preserve short_parts_list(CLng(sheet_xls_1.Range(cell_1).value))
                        
                            End If
                            
                        short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pc = CLng(sheet_xls_1.Range(cell_3).value)
                    
                    End If
                
                If Not (sheet_xls_1.Range(cell_1).value = "") And Not (sheet_xls_1.Range(cell_2).value = "") And Not (sheet_xls_1.Range(cell_3).value = "") Then
                
                        'pozice v dilci - pozor, jeste nemusela byt nactena hlavicka
                        
                        If CLng(sheet_xls_1.Range(cell_1).value) > UBound(short_parts_list) Then
                        
                                ReDim Preserve short_parts_list(CLng(sheet_xls_1.Range(cell_1).value))
                        
                            End If
                            
                        If Not (short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).exist_pos) Then
                        
                                ReDim short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short(0)
                                
                                short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).exist_pos = True
                                
                            End If
                            
                        ReDim Preserve short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short(UBound(short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short) + 1)
                            
                        short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short(UBound(short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short)).no = CLng(sheet_xls_1.Range(cell_2).value)
                        short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short(UBound(short_parts_list(CLng(sheet_xls_1.Range(cell_1).value)).pos_list_short)).pc = CLng(sheet_xls_1.Range(cell_3).value)
                    
                    End If
            
            Next i
            
            'Smazat list part
            
            If (last_row > first_row) Or (last_row = first_row) Then
                
                    row_string = CStr(first_row) + ":" + CStr(last_row)
                
                    sheet_xls_1.Rows(row_string).Delete
                
                End If
            
            'Zapsat dilce

            If get_positions(pos_list, error_text) Then
            
                    act_row = first_row - 1
                            
                    For i = 1 To UBound(short_parts_list)
                    
                        If Not (short_parts_list(i).pc = 0) Then
                    
                                act_row = act_row + 1 + CLng(Part_distance_textbox.Text)
                                
                                cell_1 = "A" + CStr(act_row)
                                cell_3 = "C" + CStr(act_row)
                                
                                sheet_xls_1.Range(cell_1).value = i
                                sheet_xls_1.Range(cell_3).value = short_parts_list(i).pc
                                
                                If short_parts_list(i).exist_pos Then
                                
                                        is_position_distance = False
                                        is_bolt_distance = False
                                
                                        For j = 1 To UBound(short_parts_list(i).pos_list_short)
                                                
                                            min_pos = 1
                                            
                                            For k = 2 To (UBound(short_parts_list(i).pos_list_short))
                                            
                                                If (short_parts_list(i).pos_list_short(k).no < short_parts_list(i).pos_list_short(min_pos).no And Not (short_parts_list(i).pos_list_short(k).no = 0)) Or short_parts_list(i).pos_list_short(min_pos).no = 0 Then
                                                
                                                        min_pos = k
                                                
                                                    End If
                                            
                                            Next k
                                            
                                            If pos_list(short_parts_list(i).pos_list_short(min_pos).no).type = 1 And Not (is_position_distance) Then
                                            
                                                    act_row = act_row + CLng(Position_distance_textbox.Text)
                                                    is_position_distance = True
                                            
                                                End If
                                            
                                            If pos_list(short_parts_list(i).pos_list_short(min_pos).no).type = 2 And Not (is_bolt_distance) Then
                                            
                                                    act_row = act_row + CLng(Bolt_distance_textbox.Text)
                                                    is_bolt_distance = True
                                            
                                                End If
                                                
                                            act_row = act_row + 1
                                            
                                            cell_1 = "A" + CStr(act_row)
                                            cell_2 = "B" + CStr(act_row)
                                            cell_3 = "C" + CStr(act_row)
                                            
                                            sheet_xls_1.Range(cell_1).value = i
                                            sheet_xls_1.Range(cell_2).value = short_parts_list(i).pos_list_short(min_pos).no
                                            sheet_xls_1.Range(cell_3).value = short_parts_list(i).pos_list_short(min_pos).pc
                                            
                                            short_parts_list(i).pos_list_short(min_pos).no = 0
                                        
                                        Next j
                                        
                                    End If
                                
                            End If
                    
                    Next i
                
                End If
            
            lock_xls_1
    
            'reloudnout vsechny hodnoty
            
            changed_area.is_area = True
            changed_area.start_column = 1
            changed_area.end_column = 3
            changed_area.start_row = first_row
            changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
            
            If get_positions(pos_list, error_text) Then
            
                    reload_parts pos_list, changed_area
        
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If
            
            Unload Sort_parts_form
                
        Else
        
            MsgBox error_form_value_text, vbInformation, msgbox_title_2
        
        End If
         
End Sub

Private Sub Cancel_button_Click()

    Unload Sort_parts_form

End Sub

Private Sub Position_distance_textbox_Change()

    If Not (isLong_0(Position_distance_textbox.Text)) And Not (Position_distance_textbox.Text = "") Then
    
            MsgBox error_numeric_value_text, vbInformation, msgbox_title_2
    
            Position_distance_textbox.Text = ""
            
        End If

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Developed by Tomas Nagl for BEUMER Group Czech Republic a.s. www.BEUMERGroup.com
'tomas.nagl@beumergroup.com, tomas.nagl@gmail.com

Private Sub Workbook_Open()

    Dim book_xls As Workbook
    Dim sheet_xls_1 As Worksheet
    
    Dim changed_area As area_limits
    
    Dim pos_list() As position
    Dim free_group_list() As free_group
    Dim error_text As String
    
    Set book_xls = ActiveWorkbook
    Set sheet_xls_1 = book_xls.Worksheets(1)
    
    changed_area.is_area = True
    changed_area.start_column = 1
    changed_area.end_column = 3
    changed_area.start_row = first_row
    changed_area.end_row = sheet_xls_1.UsedRange.Rows.Count
                
    If get_positions(pos_list, error_text) Then
    
            reload_parts pos_list, changed_area
            
            If get_free_groups(free_group_list, error_text) Then
            
                    reload_free_groups free_group_list
                
                Else
                
                    MsgBox error_text, vbInformation, msgbox_title_1
                
                End If

        Else
        
            MsgBox error_text, vbInformation, msgbox_title_1
        
        End If
        
    unlock_xls_1

    'Sheets("Parts").Range("BA2").value = Sheets("Parts").Range("BA1").value
    
    lock_xls

End Sub


INQUEST-PP=macro
