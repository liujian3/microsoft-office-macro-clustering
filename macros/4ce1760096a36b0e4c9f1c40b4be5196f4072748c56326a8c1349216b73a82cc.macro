Attribute VB_Name = "Module1"
'Not mine, don't know what it does, left it in
Function ColorFunction(rColor As Range, rRange As Range, Optional SUM As Boolean)
Dim rCell As Range
Dim lCol As Long
Dim vResult
lCol = rColor.Interior.ColorIndex
If SUM = True Then
For Each rCell In rRange
If rCell.Interior.ColorIndex = lCol Then
vResult = WorksheetFunction.SUM(rCell, vResult)
End If
Next rCell
Else
For Each rCell In rRange
If rCell.Interior.ColorIndex = lCol Then
vResult = 1 + vResult
End If
Next rCell
End If
ColorFunction = vResult
End Function

'the save this Use Case button
Sub Final_save2()
    On Error GoTo ErrorHandler
'first Popup
    If MsgBox("Clicking OK will:    Save this TC_Mastertemplate to its last location.    Create one or more separate files starting with TCMT in the same folder.   Please upload these TCMT-files to the TC-Tool and keep the TC-Mastertemplate for possible changes", vbOKCancel) = vbCancel Then Exit Sub
'Upadte list of inactive (hidden) sheets
        Call SheetNames_Inactive
        ActiveWorkbook.Save
        Application.DisplayAlerts = False
        
'Only if OK, otherwise popup (else at the end)
    If Range("A1").Value = "OK" Then
        Calculate
        Application.ScreenUpdating = False
'Update values in Sheetnames, define variables
            D = Sheets("Sheetnames").Range("J2").Value
            'FrontBack = Sheets("Start here").Range("C6").Value
            TC = Sheets("Start here").Range("C32").Value
'From 8 because 1-7 are the dropdown lists, Start here etc., those we don't delete, but everything else inactive (hidden)
                For x = 10 To D
                    B = Sheets("Sheetnames").Range("G" & x)
                    Sheets(B).Delete
                Next x
'Some of the values have to be set to OK, because otherwise the saved file will drop a #REF error (only sheets with multiple versions and OR-check on Start here status, QG1, CSS)
                
                Sheets("Start here").Unprotect Password:="Zamunda"
                Sheets("Start here").Range("C33").Value = "Saved"
                Sheets("Start here").Range("E18").Value = "OK"
                Sheets("Start here").Range("E17").Value = "OK"
                Sheets("Start here").Range("E22").Value = "OK"
                Sheets("Start here").Range("E23").Value = "OK"
                Sheets("Start here").Range("E24").Value = "OK"
                Sheets("Start here").Range("E12").Value = "OK"
                Sheets("Start here").Range("E15").Value = "OK"
                Sheets("Start here").Range("E19").Value = "OK"
                Sheets("Start here").Protect Password:="Zamunda"
'For Appcom (D3 = 2(non Sap), 5(SAP) or 6(DCS3) we have to save the OS sheets separately, that happens in Breakitup
    If Sheets("Start here").Range("D3").Value = 2 Or Sheets("Start here").Range("D3").Value = 5 Or Sheets("Start here").Range("D3").Value = 6 Or Sheets("Start here").Range("D3").Value = 13 Then
    
    Call BreakItUp
'Save all Appcom-sheets as new Workbook (this is the Frontend)
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveAs ThisWorkbook.Path & "\" & "TCMT_1.28.02_TC" & TC & "_Frontend.xlsx", FileFormat:=51
    Else
'CLassic and DSI are saved as is
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveAs ThisWorkbook.Path & "\" & "TCMT_1.28.02_TC" & TC & ".xlsx", FileFormat:=51
    End If
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Else
    MsgBox "To be able to save this file, all mandatory sheets have to be filled (Status has to be OK (green)"
    End If
ErrorHandler:    Resume Next
    End Sub
    

Sub BreakItUp()
    Dim sht As Worksheet
    Dim wbk As Workbook
    Dim nm As Name
    TC = Sheets("Start here").Range("C32").Value
    
'Application.ScreenUpdating = True
'Application.DisplayAlerts = True
    For Each sht In ThisWorkbook.Worksheets
 'To put Capacity, Core info and Info(dropdownlists) in one file, like and * because of multiple Capacity Concepts/ VLAN-ID instead of V1
        If sht.Visible = xlSheetVisible And sht.Name Like "*Capacity*" Then
'Create new blank workbook
        Set wbk = Workbooks.Add(xlWBATWorksheet)

'Copy Capacity and additional sheets to new workbook
        sht.Copy After:=wbk.Sheets(1)
        ThisWorkbook.Sheets("Appcom Core info").Copy After:=wbk.Sheets(1)
        ThisWorkbook.Sheets("Appcom Info").Copy After:=wbk.Sheets(1)
        Application.DisplayAlerts = False
''Delete default sheets from workbook
'        wbk.Sheets(6).Delete
'        wbk.Sheets(5).Delete
        wbk.Sheets(1).Delete
        
'Hide Dropdownlist
        wbk.Sheets("Appcom Info").Visible = xlSheetHidden
        wbk.SaveAs ThisWorkbook.Path & "\" & "TCMT_TC" & TC & "_" & sht.Name, FileFormat:=51
        Application.DisplayAlerts = True
        wbk.Close
'Save and close
        Set wbk = Nothing
        
 'The same for Appcom Server
        ElseIf sht.Visible = xlSheetVisible And sht.Name Like "*Server*" Then
        Set wbk = Workbooks.Add(xlWBATWorksheet)
        sht.Copy After:=wbk.Sheets(1)
        ThisWorkbook.Sheets("Appcom Info").Copy After:=wbk.Sheets(1)
        wbk.Sheets("Appcom Info").Visible = xlSheetHidden
        Application.DisplayAlerts = False
'        wbk.Sheets(5).Delete
'        wbk.Sheets(4).Delete
        wbk.Sheets(1).Delete
        
'The following lines are for copy/pasting only format and values, to evade broken external links, doesn't work with protected sheets
'           sht.Cells.Copy
'           sht.[A1].PasteSpecial Paste:=xlValues
'           sht.Cells.Hyperlinks.Delete
'           Application.CutCopyMode = False
        wbk.SaveAs ThisWorkbook.Path & "\" & "TCMT_TC" & TC & "_" & sht.Name, FileFormat:=51
        Application.DisplayAlerts = True
        wbk.Close
        Set wbk = Nothing
 
 'The same for FS-Definition
         ElseIf sht.Visible = xlSheetVisible And (sht.Name Like "*Qtree*" Or sht.Name Like "*Data_LUN*") Then
        Set wbk = Workbooks.Add(xlWBATWorksheet)
        sht.Copy After:=wbk.Sheets(1)
        ThisWorkbook.Sheets("Appcom Info").Copy After:=wbk.Sheets(1)
        wbk.Sheets("Appcom Info").Visible = xlSheetHidden
        Application.DisplayAlerts = False
'        wbk.Sheets(5).Delete
'        wbk.Sheets(4).Delete
        wbk.Sheets(1).Delete
        
'           sht.Cells.Copy
'           sht.[A1].PasteSpecial Paste:=xlValues
'           sht.Cells.Hyperlinks.Delete
'           Application.CutCopyMode = False
        wbk.SaveAs ThisWorkbook.Path & "\" & "TCMT_TC" & TC & "_" & sht.Name, FileFormat:=51
        Application.DisplayAlerts = True
        wbk.Close
        Set wbk = Nothing

'The same for dcs3
        ElseIf sht.Visible = xlSheetVisible And (sht.Name Like "*DCS3 Capacity*" Or sht.Name Like "*DCS3 Specification*" Or sht.Name Like "*Storage*") Then
        Set wbk = Workbooks.Add(xlWBATWorksheet)
        sht.Copy After:=wbk.Sheets(1)
        ThisWorkbook.Sheets("DCS3 Info").Copy After:=wbk.Sheets(1)
        wbk.Sheets("DCS3 Info").Visible = xlSheetHidden
        Application.DisplayAlerts = False
        wbk.Sheets(1).Delete
'        wbk.Sheets("Sheet2").Delete
'        wbk.Sheets("Sheet3").Delete
        
'           sht.Cells.Copy
'           sht.[A1].PasteSpecial Paste:=xlValues
'           sht.Cells.Hyperlinks.Delete
'           Application.CutCopyMode = False
        wbk.SaveAs ThisWorkbook.Path & "\" & "TCMT_TC" & TC & "_" & sht.Name, FileFormat:=51
        Application.DisplayAlerts = True
        wbk.Close
        Set wbk = Nothing
           
'           'The same for dsi2.1
'        ElseIf sht.Visible = xlSheetVisible And sht.Name Like "DSI vCloud2.1@DCP*" Then
'        Set wbk = Workbooks.Add(xlWBATWorksheet)
'        sht.Copy After:=wbk.Sheets(1)
'        ThisWorkbook.Sheets("DSI vCloud2.1 Lists").Copy After:=wbk.Sheets(1)
'        wbk.Sheets("DSI vCloud2.1 Lists").Visible = xlSheetHidden
'        Application.DisplayAlerts = False
'        wbk.Sheets(1).Delete
''        wbk.Sheets("Sheet2").Delete
''        wbk.Sheets("Sheet3").Delete
'
''           sht.Cells.Copy
''           sht.[A1].PasteSpecial Paste:=xlValues
''           sht.Cells.Hyperlinks.Delete
''           Application.CutCopyMode = False
'        wbk.SaveAs ThisWorkbook.Path & "\" & "TCMT_TC" & TC & "_" & sht.Name, FileFormat:=51
'        Application.DisplayAlerts = True
'        wbk.Close
'        Set wbk = Nothing
           
           
           End If
        Next
   
End Sub

Attribute VB_Name = "Module10"

Sub hw_pool()
Attribute hw_pool.VB_ProcData.VB_Invoke_Func = " \n14"
'
' To retrieve data from hardware-pool webpage(used hardware, which is still usable), filter for unreserved hw
'and provide email-links to request reservation
'

''
'    Range("A1:J115").Select
'    Selection.QueryTable.Delete
'    Selection.ClearContents

    Application.ScreenUpdating = False
    Sheets("HW-Pool").Visible = xlSheetVisible
    Sheets("CSSpec-Dropdownlists").Visible = xlSheetVisible
    Sheets("HW-Pool").Select
    ActiveSheet.Range("$A$1:$I$150").AutoFilter Field:=6
    Columns("A:Z").Select
    Selection.ClearContents
    
    Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:= _
        "URL;http://windows.telekom.de/inhalt/hardwareboerse/uebersicht.php?selno=1", _
        Destination:=Range("$A$1"))
       .Name = "uebersicht.php?selno=1_1"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .BackgroundQuery = True
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .WebSelectionType = xlSpecifiedTables
        .WebFormatting = xlWebFormattingNone
        .WebTables = "2"
        .WebPreFormattedTextToColumns = True
        .WebConsecutiveDelimitersAsOne = True
        .WebSingleBlockTextImport = False
        .WebDisableDateRecognition = False
        .WebDisableRedirections = False
        .Refresh BackgroundQuery:=False
    End With
'    ActiveWindow.ScrollColumn = 2
'    ActiveWindow.ScrollColumn = 1
'    Rows("1:1").Select
'    Selection.Delete Shift:=xlUp
'    Rows("2:2").Select
'    Selection.Delete Shift:=xlUp

    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    Rows("2:2").Select
    Selection.Delete Shift:=xlUp
    Columns("A:J").Select
    Selection.AutoFilter
    ActiveSheet.Range("$A$1:$J$150").AutoFilter Field:=6, Criteria1:="="
    Columns("A:A").ColumnWidth = 9.5
    Columns("F:F").ColumnWidth = 53
    Columns("G:G").Select
    Selection.EntireColumn.Hidden = True
    Columns("J:J").Select
    Selection.EntireColumn.Hidden = True




For xUxline = 2 To 149
xUx86 = Sheets("CSSpec-Dropdownlists").Range("A36").Value
xUxnix = Sheets("CSSpec-Dropdownlists").Range("A37").Value
xUx = Cells(xUxline, 3).Value
xUy = Cells(xUxline, 6).Value

    Sheets("CSSpec-Dropdownlists").Select
    Range("A38").Select
    Application.CutCopyMode = False
    Selection.Copy
    Sheets("HW-Pool").Select

Range("F1").Select
ActiveSheet.Paste


If xUx Like "UNIX" And IsEmpty(xUy) Then
    Sheets("CSSpec-Dropdownlists").Select
    Range("A37").Select
    Application.CutCopyMode = False
    Selection.Copy
    Sheets("HW-Pool").Select

Cells(xUxline, 6).Select
ActiveSheet.Paste

ElseIf xUx Like "x86" And IsEmpty(xUy) Then
    Sheets("CSSpec-Dropdownlists").Select
    Range("A36").Select
    Application.CutCopyMode = False
    Selection.Copy
    Sheets("HW-Pool").Select
Cells(xUxline, 6).Select
ActiveSheet.Paste


End If
Next xUxline
    

Sheets("CSSpec-Dropdownlists").Visible = xlSheetHidden

 Application.ScreenUpdating = True
 
 Sheets("HW-Pool").Select

''to refer to the running copy of Internet Explorer
'
'Dim IE As InternetExplorer
'
''to refer to the HTML document returned
'
'Dim html As HTMLDocument
'Dim SpecID As String
'
''open Internet Explorer in memory, and go to website
'
'Set IE = New InternetExplorer
'IE.Visible = False
'
'IE.navigate "http://windows.telekom.de/inhalt/hardwareboerse/uebersicht.php?selno=1"
'
''Wait until IE is done loading page
'
'Do While IE.READYSTATE <> READYSTATE_COMPLETE
'
'DoEvents
'
'Loop
'
''show text of HTML document returned
'
'Set html = IE.document
'Sheets("Sheet4").Range("K1").Value = html.DocumentElement.innerHTML
'Rows("1:1").RowHeight = 18
'
'Set IE = Nothing
'Application.StatusBar = ""

End Sub

Sub Macro10()
Attribute Macro10.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro10 Macro
'

'
    Range("F4").Select
    ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:= _
        "mailto:Zsuzsanna.Szilagyine-Radi@t-systems.com;Imrene.Zsupos@t-systems.com;mailto:Elke.Kohrs@t-systems.com;mailto:Ralf.Landwehr@t-systems.com?subject=Technical%20Concept:Reserving%20hardware%20from%20hardware%20pool" _
        , TextToDisplay:= _
        "mailto:Zsuzsanna.Szilagyine-Radi@t-systems.com;Imrene.Zsupos@t-systems.com;mailto:Elke.Kohrs@t-systems.com;mailto:Ralf.Landwehr@t-systems.com?subject=Technical Concept:Reserving hardware from hardware pool"
    Range("F4").Select
    Selection.Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
End Sub
Attribute VB_Name = "Module11"



Sub DWP_Profile()

If Range("Amount_of_profiles").Value = 1 Then
    Range("Profile1").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 2 Then
    Range("Profile2").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 3 Then
    Range("Profile3").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 4 Then
    Range("Profile4").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 5 Then
    Range("Profile5").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 6 Then
    Range("Profile6").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 7 Then
    Range("Profile7").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 8 Then
    Range("Profile8").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 9 Then
    Range("Profile9").Rows.Hidden = False
End If

If Range("Amount_of_profiles").Value = 10 Then
    Range("Profile10").Rows.Hidden = False
End If
    
If Range("Amount_of_profiles").Value = 11 Then
    Range("Profile11").Rows.Hidden = False
End If
    
If Range("Amount_of_profiles").Value = 12 Then
    Range("Profile12").Rows.Hidden = False
End If

End Sub
Sub DWP_Undo()

Range("Profile12").Rows.Hidden = True

Range("Amount_of_profiles").Select
    ActiveCell.FormulaR1C1 = "0"
    Range("D34").Select

End Sub

Attribute VB_Name = "Module12"
Sub QG2_UnhideIPs()
Attribute QG2_UnhideIPs.VB_ProcData.VB_Invoke_Func = " \n14"
'
' QG2_UnhideIPs Macro
'

'
Application.ScreenUpdating = False
    Rows("2:501").Select
    Range("B2").Activate
    Selection.EntireRow.Hidden = False
    Range("B3").Select
    Application.ScreenUpdating = True
End Sub
Sub QG2_HideIPs()
Attribute QG2_HideIPs.VB_ProcData.VB_Invoke_Func = " \n14"
'
' QG2_HideIPs Macro
'

'
Application.ScreenUpdating = False
Rows("2:500").Select
    Selection.EntireRow.Hidden = True
    Application.ScreenUpdating = True
End Sub


Sub Hide_sheet()


  If ActiveCell = Sheets("SDE").Range("G26") And Sheets("SDE").Range("G26").Value = 1 Then
        Sheets("SDE-calc").Visible = xlSheetVisible
    Else
        Sheets("SDE-calc").Visible = xlSheetHidden
    End If

End Sub

Attribute VB_Name = "Module13"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    Rows("24:24").Select
    Selection.Copy
    Rows("25:25").Select
    Selection.Insert Shift:=xlDown
    Sheets("DWP_Main").Select
    ActiveSheet.Shapes.Range(Array("Object 1")).Select
    Range("E55:F56").Select
    Application.CutCopyMode = False
    Selection.ClearContents
    ActiveWindow.SmallScroll Down:=-6
    ActiveSheet.Shapes.Range(Array("Object 1")).Select
    Selection.Delete
    Range("G54:H54").Select
    Selection.ClearContents
    ActiveWindow.SmallScroll Down:=-6
    Sheets("DWP_VLAN").Select
    ActiveWindow.SmallScroll Down:=-6
End Sub
Attribute VB_Name = "Module14"
Sub All_WAN_setting(ByVal state As Boolean, row As Integer)
    Select Case row
        Case 14
            Cells(24, 5).Value = ""
            Cells(25, 5).Value = "de-internal / emea1"
            Rows("22:25").EntireRow.Hidden = state
        Case 15
            Cells(28, 5).Value = ""
            Cells(29, 5).Value = ""
            Rows("26:29").EntireRow.Hidden = state
        Case 16
            Cells(32, 5).Value = ""
            Cells(33, 5).Value = ""
            Cells(36, 5).Value = ""
            Cells(37, 5).Value = ""
            Rows("30:37").EntireRow.Hidden = state
        Case 18
            Cells(40, 5).Value = ""
            Cells(41, 5).Value = ""
            Cells(42, 5).Value = "Choose from the list!"
            Rows("38:42").EntireRow.Hidden = state
        Case 19
            Cells(45, 5).Value = ""
            Cells(46, 5).Value = "Choose from the list!"
            Cells(46, 6).Value = ""
            Cells(47, 5).Value = "Choose from the list!"
            Cells(47, 6).Value = ""
            Cells(48, 5).Value = "Choose from the list!"
            Cells(49, 5).Value = ""
            Rows("43:49").EntireRow.Hidden = state
        Case 20
            Cells(52, 5).Value = "Choose from the list!"
            Cells(53, 5).Value = "Choose from the list!"
            Cells(54, 5).Value = "Choose from the list!"
            Cells(55, 5).Value = ""
            Rows("50:55").EntireRow.Hidden = state
        Case 21
            Cells(58, 5).Value = ""
            Cells(59, 5).Value = "Choose from the list!"
            Cells(60, 5).Value = "Choose from the list!"
            Cells(61, 5).Value = ""
            Cells(62, 5).Value = ""
            Rows("56:62").EntireRow.Hidden = state
    End Select
End Sub

Attribute VB_Name = "Module15"
Attribute VB_Name = "Module2"
Sub SheetNames()
'Clean up list
    Sheets("Sheetnames").Unprotect Password:="Zamunda"
    Sheets("Sheetnames").Range("A1:A100").ClearContents
'Write all sheets into column A, one after another
    For i = 1 To Sheets.Count
        Sheets("Sheetnames").Cells(i, 1) = Sheets(i).Name
        Next i
End Sub

Sub SheetNames_Active()
    Sheets("Sheetnames").Range("B1:B49").ClearContents
 'Write all active (unhidden)sheets into column B, one after another
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetVisible Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 2) = Sheets(i).Name
    End If
    Next i
End Sub


Sub SheetNames_Inactive()
    Sheets("Sheetnames").Range("G1:G100").ClearContents
'Write all inactive (hidden)sheets into column G (the "7"in "Cells(n,7)"), one after another
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetHidden Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 7) = Sheets(i).Name
    End If
    Next i
End Sub


  Sub Add_Classic_Server_Spec()
  On Error GoTo ErrorHandler
 Application.ScreenUpdating = False
'Update list of all sheets
 Call SheetNames
 
'E33 is the number of the sheets-selection
  Sheets("Start here").Select
   If Range("E33").Value > 0 Then
'A is the  sheets selection (Classic Server Spec = 1)
        A = Range("E32").Value + 1
'B is the name of the sheet from the selection list (you choose Classic Server Spec, which is the first in the list, Excel writes "1"into E29 and then you look up which is the first in the list.
        B = Sheets("Sheetnames").Range("B" & A).Value
'C is Number of additional sheets minus 1 (don't know why, otherwise does one sheet too much)
        C = Range("E33").Value - 1
'D is the number of already existing sheets of the sheet choosen in E32 (startpoint)
        D = Range("E33").Value
'E gives us the total number of specified sheets after the macro (endpoint)
        E = C + D - 1
'Copy new sheets after original
        For x = D To E
            Sheets(B).Copy After:=Sheets(B)
        Next x
   End If

   Application.ScreenUpdating = True
'Update lists for other scripts
   Call SheetNames
   Call SheetNames_Active
   Call Update_ClassicSS
ErrorHandler:       Resume Next
End Sub


Sub Delete_old()
On Error GoTo ErrorHandler
    Call SheetNames
'Make sure we are on the right sheet, rest see above take total number of specified sheets and delete from 2nd to last
    Sheets("Start here").Select
    D = Range("E33").Value
    A = Range("E32").Value + 1
    B = Sheets("Sheetnames").Range("B" & A).Value
 
         For x = 2 To D
                Sheets(B & " (" & x & ")").Delete
       Next x
    Call SheetNames
    Call SheetNames_Active
ErrorHandler:    Resume Next
    End Sub
    
Sub ComboBox1_Change()
On Error GoTo ErrorHandler
Call SheetNames_Active
Calculate
'Same as above, selecting sheet here writes the position  of the sheet in the selection list into b29, selection list is based on sheetnames column B where we look up what the name of the chosen sheet is, the we jump there
x = Range("B32").Value
Z = Sheets("Sheetnames").Range("B" & x).Value
Sheets(Z).Select
ErrorHandler:
    Resume Next
End Sub


Sub Classic_Cust_Change()
On Error GoTo ErrorHandler
'Call SheetNames_Active

'Same as above, selecting sheet here writes the position  of the sheet in the selection list into b29, selection list is based on sheetnames column B where we look up what the name of the chosen sheet is, the we jump there

Trigger = Sheets("PSP").Range("D1").Value

    Sheets("PSP").Range("E10").Value = "Trig1"

PATIM = ActiveSheet.Name

    Sheets("PSP").Range("E10").Value = "Trig2"

xBase = Sheets(PATIM).Range("F10").Value

    Sheets("PSP").Range("E10").Value = "Trig3"
    

Sheets("PSP").Range("E5").Value = xBase

    Sheets("PSP").Range("E10").Value = "Trig4"

x = xBase + 1
    Sheets("PSP").Range("E10").Value = "Trig5"

Calculate
Z = Sheets("PSP").Range("D" & x).Value
        Sheets("PSP").Range("E10").Value = "Trig6"
    Sheets("PSP").Range("E1").Value = Z
    Sheets("PSP").Range("E2").Value = Trigger
    Sheets("PSP").Range("E3").Value = x
    Sheets("PSP").Range("E4").Value = PATIM
        Sheets("PSP").Range("E10").Value = "Trig7"
        
If Trigger = "go" Or (Trigger = "OK" And xBase = 1) Then
            Sheets("PSP").Range("E10").Value = "Trig8"
Sheets(PATIM).Range("E10").Value = Z
            Sheets("PSP").Range("E10").Value = "Trig9"
Sheets(PATIM).Range("F10").Value = 1
            Sheets("PSP").Range("E10").Value = "Trig10"
Sheets(PATIM).Range("E15").Value = ""
            Sheets("PSP").Range("E10").Value = "Trig11"
Sheets(PATIM).Range("F15").Value = 1
            Sheets("PSP").Range("E10").Value = "Trig12"
            
Else
            Sheets("PSP").Range("E10").Value = "Trig13"
Sheets("PSP").Range("E6").Value = Z
            Sheets("PSP").Range("E10").Value = "Trig14"
Exit Sub
    Sheets("PSP").Range("E10").Value = "Trig15"

End If
    Sheets("PSP").Range("E10").Value = "Trig16"


'Sheets(Z).Select
ErrorHandler:
    Sheets("PSP").Range("E10").Value = "Trig17"
    Resume Next
End Sub


Sub Classic_PSP_Change()
On Error GoTo ErrorHandler
'Call SheetNames_Active

'Same as above, selecting sheet here writes the position  of the sheet in the selection list into b29, selection list is based on sheetnames column B where we look up what the name of the chosen sheet is, the we jump there
'Trigger = Sheets("PSP").Range("J1").Value
PATIM = ActiveSheet.Name



xBase = Sheets(PATIM).Range("F15").Value
Sheets("PSP").Range("K5").Value = xBase
x = xBase + 1
Calculate
Z = Sheets("PSP").Range("J" & x).Value
Sheets("PSP").Range("K1").Value = Z
Sheets("PSP").Range("K2").Value = Trigger

Sheets("PSP").Range("K3").Value = x
Sheets("PSP").Range("K6").Value = xBase
Sheets("PSP").Range("K4").Value = PATIM
'
'If Trigger = "go" Then


'Sheets(PATIM).Range("F15").Value = 1
Sheets(PATIM).Range("E15").Value = Z
'Else
'Exit Sub
'
'End If
ErrorHandler:
    Resume Next
End Sub

Sub Classic_LDAP_Change()
On Error GoTo ErrorHandler
'Call SheetNames_Active
Calculate
Trigger = Sheets("CSSpec-Dropdownlists").Range("AD1").Value
PATIM = ActiveSheet.Name



x = Sheets(PATIM).Range("F107").Value + 1
Z = Sheets("CSSpec-Dropdownlists").Range("AD" & x).Value
'Sheets("CSSpec-Dropdownlists").Range("K1").Value = Z
'Sheets("CSSpec-Dropdownlists").Range("K2").Value = Trigger
'Sheets("CSSpec-Dropdownlists").Range("K3").Value = x
'Sheets("CSSpec-Dropdownlists").Range("K4").Value = PATIM

If Trigger = "go" Then

Sheets(PATIM).Range("E107").Value = Z
Sheets(PATIM).Range("F107").Value = 1

Else
Exit Sub

End If
ErrorHandler:
    Resume Next
End Sub








'Following old sub for Final save and other sub I used for parts of the syntax
    
'  Old  Sub Final_save()
'On Error GoTo ErrorHandler
'If MsgBox("This will delete all unused sheets and save the file as TC_Mastertemplate_<TC_ID>. It is not possible to select another Use Case afterwards. For a new or different Use Case use the original Template", vbOKCancel) = vbCancel Then Exit Sub
'    Call SheetNames_Inactive
'    Application.DisplayAlerts = False
'    If Range("A1").Value = "OK" Then
'        Calculate
'
'            D = Sheets("Sheetnames").Range("G50").Value
'            FrontBack = Sheets("Start here").Range("C6").Value
'            TC = Sheets("Start here").Range("C29").Value
'                For X = 8 To D
'                    B = Sheets("Sheetnames").Range("G" & X)
'                    Sheets(B).Delete
'                Next X
'                Sheets("Start here").Range("C31").Value = "Saved"
'                Sheets("Start here").Range("E18").Value = "OK"
'                Sheets("Start here").Range("E17").Value = "OK"
'                Sheets("Start here").Range("E24").Value = "OK"
'                Sheets("Start here").Range("E12").Value = "OK"
'                Sheets("Start here").Range("E15").Value = "OK"
'                Sheets("Start here").Range("E19").Value = "OK"
'
'
'    If Sheets("Start here").Range("D3").Value = 2 Or Sheets("Start here").Range("D3").Value = 5 Then
'        ActiveWorkbook.SaveCopyAs "TC_Mastertemplate_Frontend-TC" & TC, FileFormat:=52
'        Sheets("AppCom QG1").Delete
'        Sheets("APPCOM QG2").Delete
'        Sheets("NEW IP Addresses").Delete
'        ActiveWorkbook.SaveCopyAs "TC_Mastertemplate_Backend-TC" & TC, FileFormat:=52
'   Else
'    ActiveWorkbook.SaveAs "TC_Mastertemplate_TC" & TC, FileFormat:=52
'    End If
'    Application.DisplayAlerts = True
'    Else
'    MsgBox "To be able to save this file, all mandatory sheets have to be filled (Status has to be OK (green)"
'    End If
'ErrorHandler:    Resume Next
'    End Sub
    



'Option Explicit
 
'Old Sub TwoSheetsAndYourOut for syntax()
'    Dim NewName As String
'    Dim nm As Name
'    Dim ws As Worksheet
'
'
'    With Application
'        .ScreenUpdating = False
'
'         '       Copy specific sheets
'         '       *SET THE SHEET NAMES TO COPY BELOW*
'         '       Array("Sheet Name", "Another sheet name", "And Another"))
'         '       Sheet names go inside quotes, seperated by commas
'        On Error GoTo ErrCatcher
'        Sheets(Array("Copy Me", "Copy Me2")).Copy
'        On Error GoTo 0
'
'         '       Paste sheets as values
'         '       Remove External Links, Hperlinks and hard-code formulas
'         '       Make sure A1 is selected on all sheets
'        For Each ws In ActiveWorkbook.Worksheets
'            ws.Cells.Copy
'            ws.[A1].PasteSpecial Paste:=xlValues
'            ws.Cells.Hyperlinks.Delete
'            Application.CutCopyMode = False
'            Cells(1, 1).Select
'            ws.Activate
'        Next ws
'        Cells(1, 1).Select
'
'         '       Remove named ranges
'        For Each nm In ActiveWorkbook.Names
'            nm.Delete
'        Next nm
'
'         '       Input box to name new file
'        NewName = InputBox("Please Specify the name of your new workbook", "New Copy")
'
'         '       Save it with the NewName and in the same directory as original
'        ActiveWorkbook.SaveCopyAs ThisWorkbook.Path & "\" & NewName & ".xls"
'        ActiveWorkbook.Close SaveChanges:=False
'
'        .ScreenUpdating = True
'    End With
'    Exit Sub
'
'ErrCatcher:
'    MsgBox "Specified sheets do not exist within this workbook"
'End Sub


Attribute VB_Name = "Module3"
'little tool to find external links etc and remove them
Sub ListLinks()
Dim aLinks As Variant
aLinks = ActiveWorkbook.LinkSources(xlExcelLinks)
If Not IsEmpty(aLinks) Then
Sheets.Add
For i = 1 To UBound(aLinks)
Cells(i, 1).Value = aLinks(i)
Next i
End If
End Sub
Sub Worksheet_Magic()
'The script behind the Submit Use Case button

     FrontBack = Range("D6").Value
     Prodline = Range("D3").Value
     DCS3_Sto = Range("D24").Value
     DCS3_OS = Range("C8").Value
     Click = Range("D9").Value
     TSS_TMO = Range("C7").Value
     QG1 = Range("D18").Value
'Click is a counter if at least once a UC has submitted, used in the comment field formula (lines 26/27)
     Click = Click + 1
'Update/reset visible rows, not sure why it is here twice, but I faintly remember it not working otherwise. It doesn't hurt anyway
     Call Hide_Rows
'If additional information fields are mandatory and have not been changed, show popup, then update visible rows
     If DCS3_Sto = "1" And DCS3_OS = "Select OS for DCS3.x system" And Not Range("D5").Value = 13 Then
     MsgBox ("Please select OS, then click to submit updated Use Case selection")
     Call Hide_Rows
     ActiveSheet.Range("C8").Select
'     ElseIf Prodline = "1" And QG1 = "1" And TSS_TMO = "Please select if TSS or T-Mobile" Then
'     MsgBox ("Please select if TSS or T-Mobile, then click to submit updated Use Case selection")
     Call Hide_Rows
     ActiveSheet.Range("C7").Select
     Else
        Call Hide_Rows
        Call Worksheet_Calculate
     End If
     Range("D9").Value = Click
End Sub

'Sub to hide/unhide the sheets
Sub Worksheet_Calculate()

On Error GoTo ErrorHandler
 
     Application.ScreenUpdating = False
     
     FrontBack = Range("C6").Value
     Prodline = Range("D3").Value
     Usecase = Range("D5").Value
     
'Go row by row,if value of D = 1 unhide the sheets, otherwise hide them (D=1 if entry in UC-Matrix is not "Template not necessary")

      
        If Range("D11").Value = 1 Then
        Sheets("AppCom Core info").Visible = xlSheetVisible
        Sheets("AppCom Capacity-V1").Visible = xlSheetVisible
        Sheets("AppCom Info").Visible = xlSheetVisible
    Else
        Sheets("AppCom Core info").Visible = xlSheetHidden
        Sheets("AppCom Capacity-V1").Visible = xlSheetHidden
        Sheets("AppCom Info").Visible = xlSheetHidden
    End If
    
        If Range("D12").Value = 1 And (Prodline = 2 Or Prodline = 5) Then
        Sheets("AppCom Server-V1").Visible = xlSheetVisible
        Sheets("AppCom Info").Visible = xlSheetVisible
     Else
        Sheets("AppCom Server-V1").Visible = xlSheetHidden
        
    End If
    
       If Range("D12").Value = 1 And Prodline = 3 And Usecase = 3 And Not IsEmpty(Range("D12")) Then
        Sheets("DSI vCloud Main").Visible = xlSheetVisible
        Sheets("DSI vCloud vDC Config Info").Visible = xlSheetVisible
     Else
        Sheets("DSI vCloud Main").Visible = xlSheetHidden
        Sheets("DSI vCloud vDC Config Info").Visible = xlSheetHidden
    End If
    
    If Range("D12").Value = 1 And Prodline = 3 And Usecase = 2 And Not IsEmpty(Range("D12")) Then
        Sheets("DSI Central Main").Visible = xlSheetVisible
      Else
        Sheets("DSI Central Main").Visible = xlSheetHidden
     End If
     
'         If Range("D12").Value = 1 And Prodline = 3 And Usecase = 16 And Not IsEmpty(Range("D12")) Then
'        Sheets("DSI vCloud2.1@DCP").Visible = xlSheetVisible
'      Else
'        Sheets("DSI vCloud2.1@DCP").Visible = xlSheetHidden
'     End If
    
        If Range("D13").Value = 1 Then
        Sheets("Appcom Storage").Visible = xlSheetVisible
     Else
        Sheets("Appcom Storage").Visible = xlSheetHidden
    End If
    
        If Range("D14").Value = 1 Then
        Sheets("Data_LUN").Visible = xlSheetVisible
     Else
        Sheets("Data_LUN").Visible = xlSheetHidden
    End If
    
    If Range("D15").Value = 1 Then
        Sheets("Oracle NFS Qtree").Visible = xlSheetVisible
        Sheets("Qtree-Design-Rules").Visible = xlSheetVisible
    Else
        Sheets("Oracle NFS Qtree").Visible = xlSheetHidden
        Sheets("Qtree-Design-Rules").Visible = xlSheetHidden
    End If
    
        If Range("D16").Value = 1 Then
        Sheets("Data FSQtree-V1").Visible = xlSheetVisible
        Sheets("Qtree-Design-Rules").Visible = xlSheetVisible
    Else
        Sheets("Data FS Qtree-V1").Visible = xlSheetHidden
        
  End If
  
  'Use Case is here ITSF
  
'    If Range("D17").Value = 1 And Not Usecase = 9 Then
     If Range("D17").Value = 1 Then
        Sheets("Classic Server Spec").Visible = xlSheetVisible
        Sheets("Additional Software").Visible = xlSheetVisible
        Sheets("BackupRegulations").Visible = xlSheetVisible
        Sheets("SDE").Visible = xlSheetVisible
        
'    ElseIf Range("D17").Value = 1 And Usecase = 9 Then
'        Sheets("Classic Server ITSF2.0").Visible = xlSheetVisible
'        Sheets("Additional Software").Visible = xlSheetVisible
'        Sheets("BackupRegulations").Visible = xlSheetVisible
'        Sheets("SDE-ITSF").Visible = xlSheetVisible
    Else
        Sheets("Classic Server Spec").Visible = xlSheetHidden
'        Sheets("Classic Server ITSF2.0").Visible = xlSheetHidden
        Sheets("Additional Software").Visible = xlSheetHidden
        Sheets("BackupRegulations").Visible = xlSheetHidden
        Sheets("SDE").Visible = xlSheetHidden
        Sheets("SDE-ITSF").Visible = xlSheetHidden
    End If
    
       
'    If Range("D18").Value = 1 And (Prodline = 2 Or Prodline = 5) Then
'        Sheets("Appcom QG1").Visible = xlSheetVisible
'    Else
'        Sheets("Appcom QG1").Visible = xlSheetHidden
'    End If
'
        If Range("D18").Value = 1 And ((Prodline = 1 And Range("C7").Value = "TSS VAS not required") Or (Prodline <> 1)) Then
        Sheets("Network QG1").Visible = xlSheetVisible
    Else
        Sheets("Network QG1").Visible = xlSheetHidden
    End If
    
    
    If Range("D18").Value = 1 And Prodline = 1 And Range("C7").Value = "TSS VAS necessary" And Not IsEmpty(Range("D18")) Then
        Sheets("TSS VAS QG1").Visible = xlSheetVisible
    Else
        Sheets("TSS VAS QG1").Visible = xlSheetHidden
    End If
    
'        If Range("D18").Value = 1 And Prodline = 1 And Range("C7").Value = "T-Mobile" Then
'        Sheets("Classic QG1 T-Mobile").Visible = xlSheetVisible
'    Else
'        Sheets("Classic QG1 T-Mobile").Visible = xlSheetHidden
'    End If
    
'    If Range("D18").Value = 1 And UseCase = 9 And Not IsEmpty(Range("D18")) Then
'        Sheets("Classic QG1 ITSF").Visible = xlSheetVisible
'    Else
'        Sheets("Classic QG1 ITSF").Visible = xlSheetHidden
'    End If
    
'        If Range("D18").Value = 1 And Prodline = 6 And Not IsEmpty(Range("D18")) Then
'        Sheets("DCS3 QG1").Visible = xlSheetVisible
'        ElseIf Range("D18").Value = 1 And UseCase = 13 Then
'        Sheets("HSC QG1").Visible = xlSheetVisible
'
'    Else
'        Sheets("DCS3 QG1").Visible = xlSheetHidden
'        Sheets("HCS QG1").Visible = xlSheetHidden
'    End If
    

    
'        If Range("D18").Value = 1 And UseCase = 2 And Not IsEmpty(Range("D18")) Then
'        Sheets("DSI Central QG1").Visible = xlSheetVisible
'        Sheets("DSI VDC size").Visible = xlSheetVisible
'    Else
'        Sheets("DSI Central QG1").Visible = xlSheetHidden
'        Sheets("DSI VDC size").Visible = xlSheetHidden
'    End If
'
'        If Range("D18").Value = 1 And UseCase = 3 And Not IsEmpty(Range("D18")) Then
'        Sheets("DSI vCloud QG1").Visible = xlSheetVisible
'        Sheets("DSI VDC size").Visible = xlSheetVisible
'    Else
'        Sheets("DSI vCloud QG1").Visible = xlSheetHidden
'    End If
   
   If Range("D19").Value = 1 And Not IsEmpty(Range("D19")) Then
         Sheets("Network QG2").Visible = xlSheetVisible
    ElseIf Range("D19").Value = 0 And Not IsEmpty(Range("D19")) Then
        Sheets("Network QG2").Visible = xlSheetHidden
    End If
    
'    If Range("D19").Value = 1 And (Prodline = 2 Or Prodline = 5) Then
'        Sheets("APPCOM QG2").Visible = xlSheetVisible
'    ElseIf Range("D19").Value = 1 And UseCase = 6 And Not IsEmpty(Range("D19")) Then
'        Sheets("APPCOM QG2").Visible = xlSheetVisible
'    Else
'        Sheets("APPCOM QG2").Visible = xlSheetHidden
'    End If
'
'
'
'    If Range("D19").Value = 1 And Prodline = 1 And Not UseCase = 9 Then
'          Sheets("Classic QG2").Visible = xlSheetVisible
'
'    ElseIf Range("D19").Value = 1 And UseCase = 5 Then
'          Sheets("Classic QG2").Visible = xlSheetVisible
'    ElseIf Range("D19").Value = 1 And UseCase = 10 Then
'          Sheets("Classic QG2").Visible = xlSheetVisible
'    ElseIf Range("D19").Value = 1 And UseCase = 11 Then
'          Sheets("Classic QG2").Visible = xlSheetVisible
'    Else
'          Sheets("Classic QG2").Visible = xlSheetHidden
'    End If
'
'
'
'    If Range("D19").Value = 1 And Prodline = 6 And Not IsEmpty(Range("D19")) Then
'            Sheets("DCS3 QG2").Visible = xlSheetVisible
'    ElseIf Range("D19").Value = 1 And UseCase = 7 And Not IsEmpty(Range("D19")) Then
'            Sheets("DCS3 QG2").Visible = xlSheetVisible
'       Else
'            Sheets("DCS3 QG2").Visible = xlSheetHidden
'    End If
    
        If Range("D20").Value = 1 And Not IsEmpty(Range("D20")) Then
            Sheets("VPN Request").Visible = xlSheetVisible
    Else
            Sheets("VPN Request").Visible = xlSheetHidden
    End If
    
    If Range("D21").Value = 1 And Not IsEmpty(Range("D20")) Then
            Sheets("Release IPs in NOAH").Visible = xlSheetVisible
    Else
            Sheets("Release IPs in NOAH").Visible = xlSheetHidden
    End If
    
    
  If Range("D22").Value = 1 And Range("D5").Value = 12 Then
        Sheets("DCS3 Capacity").Visible = xlSheetVisible
        Sheets("DCS3 Compute POD").Visible = xlSheetVisible
        Sheets("DCS3 Info").Visible = xlSheetVisible
        
        ElseIf Range("D22").Value = 1 And Range("D5").Value = 13 Then
        Sheets("HCS Capacity").Visible = xlSheetVisible
        
    ElseIf Range("D22").Value = 1 And Not (Range("D5").Value = 12 Or Range("D5").Value = 13) Then
        Sheets("DCS3 Info").Visible = xlSheetVisible
        Sheets("DCS3 Capacity").Visible = xlSheetVisible
    Else
        Sheets("DCS3 Compute POD").Visible = xlSheetHidden
        Sheets("DCS3 Capacity").Visible = xlSheetHidden
        Sheets("DCS3 Info").Visible = xlSheetHidden
        Sheets("HCS Capacity").Visible = xlSheetHidden
    End If
    
      If Range("D23").Value = 1 And Not Range("D5").Value = 13 Then
        Sheets("DCS3 Specification").Visible = xlSheetVisible
        Sheets("DCS 3.x Framework").Visible = xlSheetVisible
        Sheets("DCS3 Info").Visible = xlSheetVisible
        
    ElseIf Range("D23").Value = 1 And Range("D5").Value = 13 Then
        Sheets("HCS Server").Visible = xlSheetVisible
        Sheets("HCS Storage Windows").Visible = xlSheetVisible
        
    Else
        Sheets("DCS3 Specification").Visible = xlSheetHidden
        Sheets("DCS 3.x Framework").Visible = xlSheetHidden
        Sheets("HCS Spec").Visible = xlSheetHidden
        Sheets("HCS Storage Windows").Visible = xlSheetHidden
    End If
    
      If Range("D24").Value = 1 Then
        Sheets("DWP_Main").Visible = xlSheetVisible
        Sheets("DWP_VLAN").Visible = xlSheetVisible
'        Sheets("DWP Communication Matrix").Visible = xlSheetVisible
'        Sheets("DWP Service&Groups").Visible = xlSheetVisible
'        Sheets("DWP FW").Visible = xlSheetVisible
'        Sheets("DWP-RHCP-Relay").Visible = xlSheetVisible
'        Sheets("DWP-addresses").Visible = xlSheetVisible
'        Sheets("DCS3 Storage Unix NFS").Visible = xlSheetHidden
'    ElseIf Range("D24").Value = 1 And Range("C8").Value = "Windows" And Not IsEmpty(Range("D24")) Then
'        Sheets("DCS3 Storage Windows").Visible = xlSheetVisible
'        Sheets("DCS3 Storage CIFS SMB").Visible = xlSheetHidden
'        Sheets("DCS3 Storage Unix NFS").Visible = xlSheetHidden
'    ElseIf Range("D24").Value = 1 And Range("C8").Value = "Unix NFS" And Not IsEmpty(Range("D24")) Then
'        Sheets("DCS3 Storage Unix NFS").Visible = xlSheetVisible
'        Sheets("DCS3 Storage Windows").Visible = xlSheetHidden
'        Sheets("DCS3 Storage CIFS SMB").Visible = xlSheetHidden
    Else
        Sheets("DWP_Main").Visible = xlSheetHidden
        Sheets("DWP_VLAN").Visible = xlSheetHidden
'        Sheets("DWP Communication Matrix").Visible = xlSheetHidden
'        Sheets("DWP Service&Groups").Visible = xlSheetHidden
'        Sheets("DWP FW").Visible = xlSheetHidden
'        Sheets("DWP-RHCP-Relay").Visible = xlSheetHidden
'        Sheets("DWP-addresses").Visible = xlSheetHidden
'        Sheets("DCS3 Storage CIFS SMB").Visible = xlSheetHidden
   End If
'
    If Range("D25").Value = 1 Then
        Sheets("SAP NFS Qtree").Visible = xlSheetVisible
'        Sheets("CommunicationComponent").Visible = xlSheetVisible
    Else
        Sheets("SAP NFS Qtree").Visible = xlSheetHidden
'        Sheets("CommunicationComponent").Visible = xlSheetHidden
    End If
    
    
    If Range("D26").Value = 1 And Usecase = 15 Then
        Sheets("DCS2 Slice Change").Visible = xlSheetVisible
        Sheets("Increase_or_Decrease_of_FS").Visible = xlSheetHidden
    ElseIf Range("D26").Value = 1 And Not Usecase = 15 Then
        Sheets("Increase_or_Decrease_of_FS").Visible = xlSheetVisible
        Sheets("DCS2 Slice Change").Visible = xlSheetHidden

    Else
        Sheets("Increase_or_Decrease_of_FS").Visible = xlSheetHidden
        Sheets("DCS2 Slice Change").Visible = xlSheetHidden
    End If
    
    If Range("D27").Value = 1 Then
        Sheets("Termination_of_FS").Visible = xlSheetVisible
    Else
        Sheets("Termination_of_FS").Visible = xlSheetHidden
    End If
    
        If Range("D28").Value = 1 Then
        Sheets("Hitnet IP&DNS Updates").Visible = xlSheetVisible
    Else
        Sheets("Hitnet IP&DNS Updates").Visible = xlSheetHidden
    End If
    
    
'update list of visible sheets
   Call SheetNames_Active
   
   Application.ScreenUpdating = True

ErrorHandler:    Resume Next

End Sub
Attribute VB_Name = "Module4"
'Take VLAN-ID and attach it to end of sheetname (should possibly be private subs, doesn't matter, buttons to execute the scripts are only on respective sheets
Sub Rename_Capacity()
VLAN = Range("E3").Value
ActiveSheet.Name = "Appcom Capacity-" & VLAN
End Sub

Sub Rename_Serverspec()
VLAN = Range("C2").Value
ActiveSheet.Name = "Appcom Server-" & VLAN
End Sub

Sub Rename_Data_FS_QTREE()
VLAN = Range("F5").Value
ActiveSheet.Name = "Data FSQtree-" & VLAN
End Sub

'Little tool to unhide all rows at once (for maintenance)
Sub Show_all_rows()
For r = 11 To 28
Sheets("Start here").Rows(r & ":" & r).Hidden = False
Next r
End Sub

Sub Rename_ClassicSS()
Dim CSSSN As Variant

zetBe = Range("E11").Value
CSSSN = InputBox("Please give a name for this Server Specification (max 22 characters).When using multiple Classic Server Specs, use a unique name for each (i.e. NaPriKlad 1,NaPriKlad 2; NaPriKlad app,NaPriKlad db; Transition XYZ hp,Transition XYZ dell)", "Name for this Classic Server Spec", zetBe)
ActiveSheet.Name = "Classic " & CSSSN
End Sub

Sub Show_TShirts()
MsgBox "XS - Dell R630, 1x Intel Xeon E5-2620 v3 2.4GHz,6C/12T, 16 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, no Fibrechannel" _
& vbNewLine & vbNewLine & "S - Dell R630, 2x Intel Xeon E5-2620 v3 2.4GHz,6C/12T, 64 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, no Fibrechannel" _
& vbNewLine & vbNewLine & "M - Dell R730, 2x Intel Xeon E5-2640 v3 2.6GHz,8C/16T , 64 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, no Fibrechannel" _
& vbNewLine & vbNewLine & "L - Dell R730, 2x Intel Xeon E5-2640 v3 2.6GHz,8C/16T , 64 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, 1x Dual Port Fibrechannel" _
& vbNewLine & vbNewLine & "XL - Dell R730, 2x Intel Xeon E5-2660 v3 2.6GHz,10C/20T, 192 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, no Fibrechannel" _
& vbNewLine & vbNewLine & "XXL - Dell R730, 2x Intel Xeon E5-2660 v3 2.6GHz,10C/20T, 192 GB RAM," & vbNewLine & " 4x 300 GB (Raid 1) HDDs, 8 x 1 GB Port Network, 1x Dual Port Fibrechannel"
End Sub


Attribute VB_Name = "Module5"
Sub Hiddenname()

'Little tool to find/unhide hidden names in the workbook

Dim oneName As Name
For Each oneName In ThisWorkbook.Names
    oneName.Visible = True
Next oneName

End Sub

Sub Hide_Rows()
Application.ScreenUpdating = False

'Hiding first 8 rows (discontinued)
'For S = 6 To 8
'If Sheets("Start here").Range("D" & S).Value = 1 Then
'Sheets("Start here").Rows(S & ":" & S).Hidden = False
'ElseIf Sheets("Start here").Range("D" & S).Value = 0 Then
'Sheets("Start here").Rows(S & ":" & S).Hidden = True
'End If
'Next S

'Start in Row 11, check if D=1, if yes, show row, if not hide it
For r = 11 To 28
If Sheets("Start here").Range("D" & r).Value = 1 Then
Sheets("Start here").Rows(r & ":" & r).Hidden = False
ElseIf Sheets("Start here").Range("D" & r).Value = 0 Then
Sheets("Start here").Rows(r & ":" & r).Hidden = True
End If
Next r
Application.ScreenUpdating = True
End Sub



Attribute VB_Name = "Module6"
Sub Reset_QG1_TMOBILE()
'
' Reset_QG1_TMOBILE Makro
'

    Range("E4:E87").Select
    ActiveWindow.SmallScroll Down:=-72
    Selection.ClearContents
    Range("E4").Select
End Sub

Sub Appcom_reset1()
'
' Appcom_reset1 Makro
'

Application.ScreenUpdating = False

    Range("E3:E71").Select
    Selection.ClearContents
    Range("E3").Select
Application.ScreenUpdating = True
End Sub
Sub Reset_QG2_Appcom()
'
' Makro1 Makro
'
Application.ScreenUpdating = False
    Range("D3:D32").Select
    Selection.ClearContents
    Range("D3").Select
Application.ScreenUpdating = True
End Sub
Sub Reset_QG2_Classic()
'
' Reset_QG2_Classic Makro
'

'
Application.ScreenUpdating = False
    Range("D3:D32").Select
    Selection.ClearContents
    Range("D3").Select
    Application.ScreenUpdating = True
End Sub
Sub Reset_NewIP()
'
' Reset_NewIP Makro
'
Application.ScreenUpdating = False
    Range("B3:H500").Select
    Selection.ClearContents
    Range("B3").Select
    Application.ScreenUpdating = True
End Sub
Sub Reset_SwapIP()
'
' Reset_SwapIP Makro
'
Application.ScreenUpdating = False
    Range("B3:I500").Select
    Selection.ClearContents
    Range("B3").Select
    Application.ScreenUpdating = True
End Sub

Sub Reset_QG1_classic()
'
' Reset_QG1_classic Makro
'

Application.ScreenUpdating = False

    Range("D4:D86").Select
    Selection.ClearContents
    Range("D4").Select
Application.ScreenUpdating = True

End Sub
Sub QG1_TSS_RESET()
'
' QG1_TSS_RESET Macro
'

'
Application.ScreenUpdating = False
    Range("E4:E86").Select
    ActiveWindow.SmallScroll Down:=-78
    Selection.ClearContents
    Range("E4").Select
    Application.ScreenUpdating = True
    
End Sub

Sub Reset_QG2_DCS()
'
' Reset_QG2_DCS Makro
'

Application.ScreenUpdating = False
    Range("D3:D17").Select
    Selection.ClearContents
    Range("D3").Select
     Application.ScreenUpdating = True
End Sub

Sub RESET_QG1_DCS()
'
' RESET_QG1_DCS Makro
'

'
Application.ScreenUpdating = False
    Rows("14:63").EntireRow.Hidden = True
    Rows("66:69").EntireRow.Hidden = True
    Rows("72:80").EntireRow.Hidden = True
    Rows("83:84").EntireRow.Hidden = True
    Rows("87:88").EntireRow.Hidden = True
    Rows("91:122").EntireRow.Hidden = True
    Range("E6,E8:E9,E22:E41,E43:E45,E49:E51,E55:E58,E61:E64,E68:E70,E74,E78:E81,E84:E85,E87").Value = ""
    Range("F3:F90").Select
    Selection.ClearContents
    Range("E5,E7,E10,E13:E21,E42,E46:E48,E52:E54,E59,E60,E65,E67,E71:E73,E75:E78,E82:E83,E86,E90").Value = "Choose from the list!"
    'F14:F21,F43,F42,F67,F69,F74,F76,F80
    Range("E86").Value = "No"
    Cells(25, 5).Value = "de-internal / emea1"
    Cells(66, 5).Value = "Shared"
    Range("E67").Value = "Secure Remote Connect (Customer LAN)"
    Range("VLANs").Select
    Selection.ClearContents
    Range("E3").Select
    QG1_HideNetwork
    Application.ScreenUpdating = True
    RemoveAllGeneratedSheets
End Sub

Sub UnhideVPN()
'
' unhideVPN Macro
'
Dim VPN_Copy As Variant

'VPN_Copy = Sheets("Network QG1").Range("E31").Value
VPN_Copy = InputBox("How many VPNs are requested?", "Amount of requested VPNs", 1)

Sheets("Network QG1").Range("E31") = VPN_Copy

Application.ScreenUpdating = False
'    If VPN_Copy = Empty Then
''MsgBox "Please add Amount of VPNs (in E31) and fill the VPN Request sheet, which will appear", vbOKOnly
'Range("E16").Select
'Selection.ClearContents
'    Else
        Sheets("Network QG1").Select
        Sheets("VPN Request").Visible = True
    For x = 1 To VPN_Copy
            Set ws = Sheets("VPN Request")
            ws.Copy After:=Sheets("Network QG1")
            Set wsNew = Sheets(Sheets("Network QG1").Index + 1)
            wsNew.Name = "Internet VPN(" & x & ")"
    Next x
'End If
      Sheets("Network QG1").Select
      Range("E17").Select
    Sheets("VPN Request").Visible = False
    Application.ScreenUpdating = True
End Sub

Sub HideVPN()
'
' hideVPN Macro
'

'
    Application.ScreenUpdating = False
    Dim ws As Worksheet
    For Each ws In ActiveWorkbook.Worksheets
        If ws.Name Like "Internet VPN*" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
            End If
    Next
    
Sheets("Network QG1").Range("E31") = ""
'    ActiveWindow.SelectedSheets
    Application.ScreenUpdating = True
    
    End Sub

Sub UnhideNonVPN()
'
' unhideVPN Macro
'
Dim VPN_Copy As Variant

'VPN_Copy = Sheets("Network QG1").Range("E31").Value
VPN_Copy = InputBox("How many VPNs are requested?", "Amount of requested VPNs", 1)

Sheets("Network QG1").Range("E35") = VPN_Copy

Application.ScreenUpdating = False
'    If VPN_Copy = Empty Then
''MsgBox "Please add Amount of VPNs (in E31) and fill the VPN Request sheet, which will appear", vbOKOnly
'Range("E16").Select
'Selection.ClearContents
'    Else
        Sheets("Network QG1").Select
        Sheets("VPN Request").Visible = True
    For x = 1 To VPN_Copy
            Set ws = Sheets("VPN Request")
            ws.Copy After:=Sheets("Network QG1")
            Set wsNew = Sheets(Sheets("Network QG1").Index + 1)
            wsNew.Name = "Non Internet VPN (" & x & ")"
    Next x
'End If
      Sheets("Network QG1").Select
      Range("E17").Select
    Sheets("VPN Request").Visible = False
    Application.ScreenUpdating = True
End Sub

Sub HideNonVPN()
'
' hideVPN Macro
'

'
    Application.ScreenUpdating = False
    Dim ws As Worksheet
    For Each ws In ActiveWorkbook.Worksheets
        If ws.Name Like "Non Internet VPN*" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
        End If
    Next
    
Sheets("Network QG1").Range("E35") = ""
'    ActiveWindow.SelectedSheets
    Application.ScreenUpdating = True
    
    End Sub
Sub QG1_HideNetwork()
'
' Hides the network table
'

'
Application.ScreenUpdating = False
    Rows("91:122").Select
    Selection.EntireRow.Hidden = True
    Range("E93").Select
    Application.ScreenUpdating = True
End Sub
Sub QG1_UnHideNetwork()
'
' UnHides the network table
'

'
Application.ScreenUpdating = False
    Rows("91:122").Select
    Selection.EntireRow.Hidden = False
    Range("E93").Select
     Application.ScreenUpdating = True
End Sub


Sub QG1_ResetNetwork()
'
' QG1_ResetNetwork Macro
'

'
Application.ScreenUpdating = False
    Range("VLANs").Select
    Selection.ClearContents
    Range("C77").Select
Application.ScreenUpdating = True
    End Sub
    
Sub RemoveAllGeneratedSheets()
    Application.DisplayAlerts = False
    For Each ws In ActiveWorkbook.Worksheets
        If ws.Name <> "NW-Dropdownlists" And ws.Name <> "VPN Request" And ws.Name <> "Network QG1" And ws.Name <> "How To" Then
            ws.Delete
        End If
    Next
    Application.DisplayAlerts = True
End Sub

Attribute VB_Name = "Module7"
Sub Update_DCS3_Qtree_Win()
'Search for all visible sheets with DCS3 Staorage Windows*** and list them in column C (update of FS-Definition list)
    
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetVisible And Worksheets(i).Name Like "DCS3 Storage*" Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 3) = Sheets(i).Name
    End If
    Next i
End Sub


Sub Update_DCS3_Qtree_Unix()
'Search for all visible sheets with DCS3 Staorage Unix*** and list them in column D (update of FS-Definition list)
    
    For i = 1 To Sheets.Count
   If Worksheets(i).Visible = xlSheetVisible And Worksheets(i).Name Like "DCS3 Storage Unix*" Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 4) = Sheets(i).Name
    End If
    Next i
End Sub

Sub Update_DCS3_Qtree_CIFS()
'Search for all visible sheets with DCS3 Staorage CIFS*** and list them in column E (update of FS-Definition list)
    
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetVisible And Worksheets(i).Name Like "DCS3 Storage CIFS*" Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 5) = Sheets(i).Name
    End If
    Next i
End Sub

Sub Update_DCS3_Qtree()
'Central update-call for all DCS3-FS lists
    Sheets("Sheetnames").Range("C1:E10").ClearContents
    Call Update_DCS3_Qtree_Win
    Call Update_DCS3_Qtree_Unix
    Call Update_DCS3_Qtree_CIFS
End Sub

Sub Update_Appcom_LUN_Qtree()
'Search for all visible sheets which are Appcom FS-Definitions and list them in column F (update of FS-Definition list)
    Sheets("Sheetnames").Range("F1:F20").ClearContents
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetVisible And (Worksheets(i).Name Like "*Data*" Or Worksheets(i).Name Like "*Qtree*") Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 6) = Sheets(i).Name
    End If
    Next i
End Sub

Sub Update_ClassicSS()
'Search for all visible sheets which are Classic Server Specs and list them in column F (update of list)
    Sheets("Sheetnames").Range("H1:H20").ClearContents
    For i = 1 To Sheets.Count
    If Worksheets(i).Visible = xlSheetVisible And (Worksheets(i).Name Like "*Classic*") Then
    n = n + 1
    Sheets("Sheetnames").Cells(n, 8) = Sheets(i).Name

    End If
    Next i
    
    Call shwubblededub

End Sub


Sub shwubblededub()

Sheets("Sheetnames").Range("I1:I30").ClearContents
LastRowCSS = Sheets("Sheetnames").Range("J1").Value

For CSSno = 1 To LastRowCSS
CSSna = Sheets("Sheetnames").Cells(CSSno, 8)
CSSni = Sheets(CSSna).Range("E28").Value

For CSSnu = 1 To CSSni
LastRowCSSnu = Sheets("Sheetnames").Cells(Rows.Count, "I").End(xlUp).row
LastRowCSSnu = LastRowCSSnu + 1
Sheets("Sheetnames").Cells(LastRowCSSnu, 9) = CSSna & "-System-" & CSSnu

Next CSSnu

Next CSSno
    
End Sub




Sub Unhide_all()
        Sheets("AppCom Core info").Visible = xlSheetVisible
        Sheets("AppCom Capacity-V1").Visible = xlSheetVisible
        Sheets("AppCom Info").Visible = xlSheetVisible
        Sheets("AppCom Server-V1").Visible = xlSheetVisible
        Sheets("Appcom Storage").Visible = xlSheetVisible
        Sheets("Data_LUN").Visible = xlSheetVisible
        Sheets("SAP NFS Qtree").Visible = xlSheetVisible
        Sheets("CommunicationComponent").Visible = xlSheetVisible
        Sheets("Oracle NFS Qtree").Visible = xlSheetVisible
        Sheets("Qtree-Design-Rules").Visible = xlSheetVisible
        Sheets("Data FS Qtree-V1").Visible = xlSheetVisible
        Sheets("Classic Server Spec").Visible = xlSheetVisible
        Sheets("Classic Server ITSF2.0").Visible = xlSheetVisible
        Sheets("Additional Software").Visible = xlSheetVisible
        Sheets("BackupRegulations").Visible = xlSheetVisible
        Sheets("Appcom QG1").Visible = xlSheetVisible
        Sheets("Classic QG1").Visible = xlSheetVisible
'        Sheets("Classic QG1 ITSF").Visible = xlSheetVisible
        Sheets("Classic QG1 TSS").Visible = xlSheetVisible
        Sheets("Classic QG1 T-Mobile").Visible = xlSheetVisible
        Sheets("DCS3 QG1").Visible = xlSheetVisible
        Sheets("DSI Central Main").Visible = xlSheetVisible
        Sheets("DSI VDC size").Visible = xlSheetVisible
        Sheets("DSI vCloud QG1").Visible = xlSheetVisible
        Sheets("DSI vCloud Main").Visible = xlSheetVisible
        Sheets("DSI vCloud vDC Config Info").Visible = xlSheetVisible
        Sheets("APPCOM QG2").Visible = xlSheetVisible
        Sheets("NEW IP Addresses").Visible = xlSheetVisible
        Sheets("Classic QG2").Visible = xlSheetVisible
        Sheets("DCS3 QG2").Visible = xlSheetVisible
        Sheets("DCS3 Storage Windows").Visible = xlSheetVisible
        Sheets("DCS3 Capacity").Visible = xlSheetVisible
        Sheets("DCS3 Specification").Visible = xlSheetVisible
        Sheets("DCS 3.x Framework").Visible = xlSheetVisible
        Sheets("DCS3 Info").Visible = xlSheetVisible
        Sheets("DCS3 Storage Unix NFS").Visible = xlSheetVisible
        Sheets("DCS3 Storage CIFS SMB").Visible = xlSheetVisible
       Sheets("Release IP Addresses").Visible = xlSheetVisible
       Sheets("VPN Request").Visible = xlSheetVisible
End Sub

Sub Unprotect_all()

    Sheets("Sheetnames").Unprotect Password:="Zamunda"
    Call SheetNames
       
       For Reiter = 2 To 60
       
       Reitname = Sheets("Sheetnames").Range("A" & Reiter).Value
'       Sheets(Reitname).Protect Password:="Zamunda", DrawingObjects:=False, Contents:=True, Scenarios:= _
'        True, AllowFormattingColumns:=True, AllowFormattingRows:=True, _
'        AllowInsertingRows:=True, AllowDeletingRows:=True
Sheets(Reitname).Visible = xlSheetVisible
'Sheets(Reitname).Unprotect Password:="Zamunda"
Sheets("Sheetnames").Cells(Reiter, 11) = Reitname
        
        Next Reiter
End Sub
Attribute VB_Name = "Module8"
'Macros for DSI-sheets


Sub vDC_1()
'
' vDC_1 Macro
'

'
    
If Range("nr_of_vDC").Value = 1 Then
    Range("Range_vDC1").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 2 Then
    Range("Range_vDC2").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 3 Then
    Range("Range_vDC3").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 4 Then
    Range("Range_vDC4").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 5 Then
    Range("Range_vDC5").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 6 Then
    Range("Range_vDC6").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 7 Then
    Range("Range_vDC7").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 8 Then
    Range("Range_vDC8").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 9 Then
    Range("Range_vDC9").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 10 Then
    Range("Range_vDC10").Rows.Hidden = False
End If

If Range("nr_of_vDC").Value = 0 Then
    Range("Range_vDC10").Rows.Hidden = True
End If

End Sub

'Sub Undo()
''
'' Undo Macro
''
'Range("Range_vDC10").Rows.Hidden = True
'
'Range("nr_of_vDC").Select
'    ActiveCell.FormulaR1C1 = "0"
'    Range("D33").Select
'
'End Sub

Sub Undo()
'
' TEST Macro
'
Range("C79:G79").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C78").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C75").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C73").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C68:G68").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C67").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C66").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H61").Select
    ActiveWindow.SmallScroll Down:=-9
    ActiveCell.FormulaR1C1 = ""
    Range("H60").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H59").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H58").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H57").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H56").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K53:L53").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K52:L52").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K51:L51").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H51").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H52").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H53").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H47").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H45").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D52").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D50").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D49").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D48").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C46").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C45").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C44").Select
    ActiveCell.FormulaR1C1 = ""
    Range("B44").Select

Range("C126:G126").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C125").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C123").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C121").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C116:G116").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C115").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C114").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H109").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H108").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H107").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H106").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H105").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H104").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H105").Select
    Range("K101:L101").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K100:L100").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K99:L99").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H100").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H101").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H99").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H95").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H93").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D100").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D98").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D97").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D96").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C94").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C93").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C92").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E92").Select
    ActiveCell.FormulaR1C1 = ""
    Range("B92").Select

ActiveCell.FormulaR1C1 = ""
    Range("C173").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C171").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C169").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C164:G164").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C163").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C162").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H157").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H156").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H155").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H154").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H153").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H152").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H148").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H147").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H149").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K147:L147").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K149:L149").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K148:L148").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H143").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E140").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H141").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D148").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D146").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D145").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D144").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C142").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C141").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C140").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E145").Select

Range("C221:G221").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C220").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C218").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C216").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C211:G211").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C210").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C209").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H204").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H203").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H202").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H201").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H200").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H199").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K195:L195").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K196:L196").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K194:L194").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H195").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H194").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H196").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H190").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H188").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E187").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D195").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D193").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D192").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D191").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C189").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C188").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C187").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D197").Select

 Range("C269:G269").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C268").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C266").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C264").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C259:G259").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C258").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C257").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H252").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H251").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H250").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H249").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H248").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H247").Select
    ActiveCell.FormulaR1C1 = ""
    Range("I247").Select
    ActiveWindow.SmallScroll Down:=-9
    Range("K244:L244").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K243:L243").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K242:L242").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H243").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H242").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H244").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H238").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H236").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E235").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D243").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D241").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D240").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D239").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C237").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C236").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C235").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E239").Select

 Range("C317:G317").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C316").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C314").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C312").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C307:G307").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C306").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C305").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H300").Select
    ActiveWindow.SmallScroll Down:=-6
    ActiveCell.FormulaR1C1 = ""
    Range("H299").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H298").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H297").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H296").Select
    ActiveCell.FormulaR1C1 = ""
     Range("H295").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K292:L292").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K291:L291").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K290:L290").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H291").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H290").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H292").Select
    ActiveCell.FormulaR1C1 = ""
    Range("I291").Select
    ActiveWindow.SmallScroll Down:=-9
    Range("H286").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H284").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E283").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D291").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D289").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D288").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D287").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C285").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C284").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C283").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E284").Select

Range("C365:G365").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C364").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C362").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C360").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C355:G355").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C353").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C354").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H348").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H347").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H346").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H345").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H344").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H343").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K340:L340").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K339:L339").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K338:L338").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H339").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H338").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H340").Select
    ActiveCell.FormulaR1C1 = ""
    Range("G341:L341").Select
    ActiveWindow.SmallScroll Down:=-12
    Range("H334").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H332").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E331").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D339").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D337").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D336").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D335").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C333").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C332").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C331").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D331").Select

Range("C413:G413").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C412").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C410").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C408").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C403:G403").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C402").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C401").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H396").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H395").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H394").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H393").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H392").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H391").Select
    ActiveCell.FormulaR1C1 = ""
    Range("I399").Select
    ActiveWindow.SmallScroll Down:=-9
    Range("K388:L388").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K387:L387").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K386:L386").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H387").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H386").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H388").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H382").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H380").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D387").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D385").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D384").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D383").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C381").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C380").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C379").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E379").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E386").Select


Range("C461:G461").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C460").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C458").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C456").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C451:G451").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C450").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C449").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D449").Select
    ActiveWindow.SmallScroll Down:=-6
    Range("H444").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H443").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H442").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H441").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H440").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H439").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H435").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K434:L434").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K435:L435").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K436:L436").Select
    ActiveCell.FormulaR1C1 = ""
    Range("M437").Select
    ActiveWindow.SmallScroll Down:=-6
    Range("H430").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H428").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D435").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D434").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D436").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D433").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D432").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D431").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C429").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C428").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C427").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E428").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E427").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E427").Select
    
      ActiveWindow.SmallScroll Down:=18
    Range("C509:G509").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C508").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C506").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C504").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C499:G499").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C498").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E497").Select
    ActiveWindow.SmallScroll Down:=-6
    Range("H492").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H491").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H490").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H489").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H488").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H487").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K483:L483").Select
    ActiveCell.FormulaR1C1 = ""
    Range("K482:L482").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H483").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H478").Select
    ActiveCell.FormulaR1C1 = ""
    Range("H476").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D483").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D482").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D484").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D481").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D480").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D479").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C477").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C476").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C475").Select
    ActiveCell.FormulaR1C1 = ""
    Range("E475").Select
    ActiveCell.FormulaR1C1 = ""
    Range("C497").Select
    ActiveCell.FormulaR1C1 = ""
    Range("D496").Select
    ActiveWindow.SmallScroll Down:=-9

Range("Range_vDC10").Rows.Hidden = True

Range("nr_of_vDC").Select
    ActiveCell.FormulaR1C1 = "0"
    Range("D33").Select

'
End Sub
Attribute VB_Name = "Module9"
Sub Bundle_filler()
'
' Macro1 Macro
'
Sheets("ClassicStdBundles").Range("AB8").Value = ActiveSheet.Range("E24").Value
BundleSel = ActiveSheet.Range("E25").Value
Reitername = ActiveSheet.Name


Sheets("ClassicStdBundles").Range("A37").Value = BundleSel
 Application.ScreenUpdating = False
Sheets("ClassicStdBundles").Visible = xlSheetVisible
For Spalte = 4 To 27
Sheets("ClassicStdBundles").Select
Sheets("ClassicStdBundles").Range("A38").Value = Spalte
BundleCfg = Cells(1, Spalte).Value
Sheets("ClassicStdBundles").Range("A39").Value = BundleCfg
Zmax = Sheets("ClassicStdBundles").Range("A44").Value
If BundleSel = BundleCfg Then

    For Zelle = 2 To Zmax
        Sheets("ClassicStdBundles").Range("A40").Value = Zelle
        Sheets("ClassicStdBundles").Range("A41").Value = Cells(Zelle, Spalte).Value
            If Not Cells(Zelle, Spalte).Value = "<empty>" Then
            ZelleDest = Sheets("ClassicStdBundles").Range("C" & Zelle).Value
            Sheets(Reitername).Range(ZelleDest).Value = Cells(Zelle, Spalte).Value
            Sheets("ClassicStdBundles").Range("A42").Value = Sheets(Reitername).Range(ZelleDest).Value
            End If
    Next Zelle
End If
Next Spalte
Sheets(Reitername).Select
Sheets("ClassicStdBundles").Visible = xlSheetHidden
 Application.ScreenUpdating = True

End Sub

Sub Bundle_reset()
'
' Macro1 Macro
'
Reitername = ActiveSheet.Name
BundleSel = Sheets(Reitername).Range("E25").Value

Sheets("ClassicStdBundles").Range("A37").Value = BundleSel
 Application.ScreenUpdating = False
 Sheets("ClassicStdBundles").Visible = xlSheetVisible
Zmax = Sheets("ClassicStdBundles").Range("A44").Value
'For Spalte = 4 To 25
Sheets("ClassicStdBundles").Select
'Sheets("ClassicStdBundles").Range("A38").Value = Spalte
'BundleCfg = Cells(1, Spalte).Value
'Sheets("ClassicStdBundles").Range("A39").Value = BundleCfg
'
'If BundleSel = BundleCfg Then

    For Zelle = 2 To Zmax
        Sheets("ClassicStdBundles").Range("A40").Value = Zelle
        Sheets("ClassicStdBundles").Range("A41").Value = Cells(Zelle, 28).Value
'            If Cells(Zelle, Spalte).Value = Not "<empty>" Then
            ZelleDest = Sheets("ClassicStdBundles").Range("C" & Zelle).Value
            Sheets(Reitername).Range(ZelleDest).Value = Cells(Zelle, 28).Value
            Sheets("ClassicStdBundles").Range("A42").Value = Sheets(Reitername).Range(ZelleDest).Value
'            End If
    Next Zelle
'End If
'Next Spalte
Sheets(Reitername).Select
Sheets("ClassicStdBundles").Visible = xlSheetHidden
 Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)

'On Error GoTo eh
    Application.ScreenUpdating = False
    Dim task_ms_row As Integer
    Dim task_ms_column As Integer
    task_ms_row = Target.row
    task_ms_column = Target.Column

    If task_ms_column = 3 Then
        Select Case task_ms_row
            Case 11
                Select Case Cells(11, 3).Value
                    Case "Check Point"
                        Rows("12").EntireRow.Hidden = True
                        Cells(12, 3).Value = ""
                        Cells(12, 4).Value = ""
                        Range("C17:D22,C24:D32,C34:D41").ClearContents
                        Range("C13").Select
                    Case "Juniper (Netscreen)"
                        Rows("12").EntireRow.Hidden = True
                        Cells(12, 3).Value = ""
                        Cells(12, 4).Value = ""
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA1"
'                        End With
'                        ActiveSheet.Cells(25, 3).Validation.Delete
'                             'delete previous validation
'                        ActiveSheet.Cells(25, 3).Validation.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="SHA1"

                        LoadJuniper
                        Range("C13").Select
                    Case "Fortigate"
                        'Range("C17:D41").ClearContents
                        Rows("12").EntireRow.Hidden = False
                        Range("C12").Select
                End Select
            Case 12
                Select Case Cells(12, 3).Value
                    Case "NP4"
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA1"
'                        End With
                        LoadFortigate
                    Case "NP6"
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA-512,SHA-384,SHA-256,SHA1"
'                        End With
                        LoadFortigate
                End Select
            Case 17 To 41
            Application.EnableEvents = False
                Cells(task_ms_row, 4).Value = Cells(task_ms_row, 3).Value
                Application.EnableEvents = True
        End Select
    End If

    If task_ms_column = 4 Then
        Select Case task_ms_row
            Case 17 To 41
            Application.EnableEvents = False
                Cells(task_ms_row, 3).Value = Cells(task_ms_row, 4).Value
                Application.EnableEvents = True
        End Select
    End If

    Application.ScreenUpdating = True
'Done:
'    Exit Sub
'eh:
'    MsgBox "The following error occurred: " & Err.Description
    
End Sub
        
Sub LoadJuniper()
    Application.ScreenUpdating = False
    Range("C17:D22,C24:D32,C34:D41").ClearContents
    Cells(18, 3).Value = "Pre-shared Key (PSK)"
    Cells(19, 3).Value = "AutoKey IKE"
    Cells(20, 3) = "IKEv1: only Main Mode"
    Cells(20, 6) = "IKEv1: only Main Mode"
    Cells(24, 3) = "AES"
    Cells(24, 6) = "AES"
    Cells(25, 3).Value = "SHA-1"
    Cells(26, 3) = "DH group 2"
    Cells(26, 6) = "DH group 2"
    Cells(34, 3) = "AES"
    Cells(34, 6) = "AES"
    Cells(35, 3).Value = "SHA-1"
    Cells(36, 3).Value = "Yes"
    Cells(37, 3).Value = "Yes"
    Cells(38, 3) = "DH group 2"
    Cells(38, 6) = "DH group 2"
    Application.ScreenUpdating = True
    
End Sub

Sub LoadFortigate()
    Application.ScreenUpdating = False
    Cells(17, 3) = "Version 2"
    Cells(17, 6) = "Version 2"
    Cells(18, 3).Value = "Pre-shared Key (PSK)"
    Cells(19, 3).Value = "AutoKey IKE"
    Cells(20, 3) = "IKEv2: not applicable"
    Cells(20, 6) = "IKEv2: not applicable"
    Cells(21, 3).Value = "Tunnel Mode"
    Cells(22, 3).Value = "Encapsulating Security Payload (ESP)"
    Cells(24, 3) = "AES128"
    Cells(24, 6) = "AES128"
    Cells(25, 3).Value = "SHA-1"
    Cells(26, 3) = "DH group 14"
    Cells(26, 6) = "DH group 14"
    Cells(27, 3).Value = "86400s"
    Cells(28, 3).Value = "Yes"
    Cells(29, 3).Value = "30s"
    Cells(30, 3).Value = "Yes"
    Cells(31, 3).Value = "10s"
    Cells(32, 3).Value = "no"
    Cells(34, 3) = "AES128"
    Cells(34, 6) = "AES128"
    Cells(35, 3).Value = "SHA-1"
    Cells(36, 3).Value = "Yes"
    Cells(37, 3).Value = "Yes"
    Cells(38, 3) = "DH group 14"
    Cells(38, 6) = "DH group 14"
    Cells(39, 3).Value = "no"
    Cells(40, 3).Value = "no"
    Cells(41, 3).Value = "28800s"
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)

'On Error GoTo eh
    Application.ScreenUpdating = False
    Dim task_ms_row As Integer
    Dim task_ms_column As Integer
    task_ms_row = Target.row
    task_ms_column = Target.Column

    If task_ms_column = 3 Then
        Select Case task_ms_row
            Case 11
                Select Case Cells(11, 3).Value
                    Case "Check Point"
                        Rows("12").EntireRow.Hidden = True
                        Cells(12, 3).Value = ""
                        Cells(12, 4).Value = ""
                        Range("C17:D22,C24:D32,C34:D41").ClearContents
                        Range("C13").Select
                    Case "Juniper (Netscreen)"
                        Rows("12").EntireRow.Hidden = True
                        Cells(12, 3).Value = ""
                        Cells(12, 4).Value = ""
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA1"
'                        End With
'                        ActiveSheet.Cells(25, 3).Validation.Delete
'                             'delete previous validation
'                        ActiveSheet.Cells(25, 3).Validation.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="SHA1"

                        LoadJuniper
                        Range("C13").Select
                    Case "Fortigate"
                        'Range("C17:D41").ClearContents
                        Rows("12").EntireRow.Hidden = False
                        Range("C12").Select
                End Select
            Case 12
                Select Case Cells(12, 3).Value
                    Case "NP4"
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA1"
'                        End With
                        LoadFortigate
                    Case "NP6"
'                        With Range("C25:D25,C35:D35").Validation
'                            .Delete 'delete previous validation
'                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
'                                Formula1:="SHA-512,SHA-384,SHA-256,SHA1"
'                        End With
                        LoadFortigate
                End Select
            Case 17 To 41
            Application.EnableEvents = False
                Cells(task_ms_row, 4).Value = Cells(task_ms_row, 3).Value
                Application.EnableEvents = True
        End Select
    End If

    If task_ms_column = 4 Then
        Select Case task_ms_row
            Case 17 To 41
            Application.EnableEvents = False
                Cells(task_ms_row, 3).Value = Cells(task_ms_row, 4).Value
                Application.EnableEvents = True
        End Select
    End If

    Application.ScreenUpdating = True
'Done:
'    Exit Sub
'eh:
'    MsgBox "The following error occurred: " & Err.Description
    
End Sub
        
Sub LoadJuniper()
    Application.ScreenUpdating = False
    Range("C17:D22,C24:D32,C34:D41").ClearContents
    Cells(18, 3).Value = "Pre-shared Key (PSK)"
    Cells(19, 3).Value = "AutoKey IKE"
    Cells(20, 3) = "IKEv1: only Main Mode"
    Cells(20, 6) = "IKEv1: only Main Mode"
    Cells(24, 3) = "AES"
    Cells(24, 6) = "AES"
    Cells(25, 3).Value = "SHA-1"
    Cells(26, 3) = "DH group 2"
    Cells(26, 6) = "DH group 2"
    Cells(34, 3) = "AES"
    Cells(34, 6) = "AES"
    Cells(35, 3).Value = "SHA-1"
    Cells(36, 3).Value = "Yes"
    Cells(37, 3).Value = "Yes"
    Cells(38, 3) = "DH group 2"
    Cells(38, 6) = "DH group 2"
    Application.ScreenUpdating = True
    
End Sub

Sub LoadFortigate()
    Application.ScreenUpdating = False
    Cells(17, 3) = "Version 2"
    Cells(17, 6) = "Version 2"
    Cells(18, 3).Value = "Pre-shared Key (PSK)"
    Cells(19, 3).Value = "AutoKey IKE"
    Cells(20, 3) = "IKEv2: not applicable"
    Cells(20, 6) = "IKEv2: not applicable"
    Cells(21, 3).Value = "Tunnel Mode"
    Cells(22, 3).Value = "Encapsulating Security Payload (ESP)"
    Cells(24, 3) = "AES128"
    Cells(24, 6) = "AES128"
    Cells(25, 3).Value = "SHA-1"
    Cells(26, 3) = "DH group 14"
    Cells(26, 6) = "DH group 14"
    Cells(27, 3).Value = "86400s"
    Cells(28, 3).Value = "Yes"
    Cells(29, 3).Value = "30s"
    Cells(30, 3).Value = "Yes"
    Cells(31, 3).Value = "10s"
    Cells(32, 3).Value = "no"
    Cells(34, 3) = "AES128"
    Cells(34, 6) = "AES128"
    Cells(35, 3).Value = "SHA-1"
    Cells(36, 3).Value = "Yes"
    Cells(37, 3).Value = "Yes"
    Cells(38, 3) = "DH group 14"
    Cells(38, 6) = "DH group 14"
    Cells(39, 3).Value = "no"
    Cells(40, 3).Value = "no"
    Cells(41, 3).Value = "28800s"
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
    Application.ScreenUpdating = False
    
        
'        If Not Intersect(Target, Range("E5,E7,E10,E13:E21,E42,E46:E48,E52:E54,E59,E60,E65,E67,E71:E73,E75:E78,E82,E83,E86,E90")) Is Nothing Then
'            MsgBox Len(Trim(Target.Value))
'                If Len(Trim(Target.Value)) = 0 Then Application.Undo
'        End If
        
        
        
        Dim task_ms_row As Integer
        Dim task_ms_column As Integer
        task_ms_row = Target.row
        task_ms_column = Target.Column
        If task_ms_column = 4 Then
            If Cells(task_ms_row, task_ms_column).Value = "Admin (CAS)" Or Cells(task_ms_row, task_ms_column).Value = "Storage" Then
                Cells(task_ms_row, 5).Value = "/64 - [IPv6]"
            End If
        End If
        Application.ScreenUpdating = False
        If task_ms_column = 5 Then
            Select Case task_ms_row
                Case 5
                    If Len(Trim(Range("E5").Value)) = 0 Then Application.Undo
                Case 7
                    If Len(Trim(Range("E7").Value)) = 0 Then Application.Undo
                Case 10
                    If Len(Trim(Range("E10").Value)) = 0 Then Application.Undo
                    If Cells(10, 5).Value = "DCS 2.x (Appcom)" Then
                        MsgBox "Appcom platform to be decommissioned (ETA middle of 2018)", vbExclamation
                        Range("F10").Select
                    ElseIf Cells(10, 5).Value = "DCS 3 / vClassic" Then
                        Range("F10").Select
                    End If
                Case 13
                    If Len(Trim(Range("E13").Value)) = 0 Then Application.Undo
                    If Cells(13, 5).Value = "No" Then
                        Rows("14:62").EntireRow.Hidden = True
                        Range("E14:E21").Value = "None"
                        Range("E14:E21").Value = "Choose from the list!"
                        Range("F14:F21").Value = ""
                    ElseIf Cells(13, 5).Value = "New/Existing" Then
                        Rows("14:21").EntireRow.Hidden = False
                    End If
                    Range("F13").Select
                Case 14 To 21
                    Select Case task_ms_row
                        Case 14
                            If Len(Trim(Range("E14").Value)) = 0 Then Application.Undo
                        Case 15
                            If Len(Trim(Range("E15").Value)) = 0 Then Application.Undo
                        Case 16
                            If Len(Trim(Range("E16").Value)) = 0 Then Application.Undo
                        Case 17
                            If Len(Trim(Range("E17").Value)) = 0 Then Application.Undo
                        Case 18
                            If Len(Trim(Range("E18").Value)) = 0 Then Application.Undo
                        Case 19
                            If Len(Trim(Range("E19").Value)) = 0 Then Application.Undo
                        Case 20
                            If Len(Trim(Range("E20").Value)) = 0 Then Application.Undo
                        Case 21
                            If Len(Trim(Range("E21").Value)) = 0 Then Application.Undo
                    End Select
                    If Cells(task_ms_row, 5).Value = "Existing" Then
                        Cells(task_ms_row, 6).Value = "Provide TC number of existing landscape"
                        If task_ms_row = 18 Or task_ms_row = 19 Then
                            Cells(task_ms_row, 6).Value = "Provide TC number of existing landscape or VRF"
                        End If
                        All_WAN_setting True, task_ms_row
                    ElseIf Cells(task_ms_row, 5).Value = "New" Then
                        Cells(task_ms_row, 6).Value = ""
                        All_WAN_setting False, task_ms_row
                    ElseIf Cells(task_ms_row, 5).Value = "None" Then
                        Cells(task_ms_row, 6).Value = ""
                        All_WAN_setting True, task_ms_row
                    End If
                    Range("F13").Select
                Case 32
                    If task_ms_column = 5 Then
                        If Cells(32, 5).Value <> "" Then
                            UnhideVPN
                        Else
                            HideVPN
                        End If
                    End If
                Case 36
                    If task_ms_column = 5 Then
                        If Cells(36, 5).Value <> "" Then
                            UnhideNonVPN
                        Else
                            HideNonVPN
                        End If
                    End If
                Case 42
                    If Len(Trim(Range("E42").Value)) = 0 Then Application.Undo
                Case 46
                    If Len(Trim(Range("E46").Value)) = 0 Then Application.Undo
                    If Cells(46, 5).Value <> "0" And Cells(41, 5).Value <> "Choose from the list!" Then
                        Cells(46, 6).Value = "Provide names of external routers"
                    End If
                Case 47
                    If Len(Trim(Range("E47").Value)) = 0 Then Application.Undo
                    If Cells(47, 5).Value <> "0" And Cells(41, 5).Value <> "Choose from the list!" Then
                        Cells(47, 6).Value = "Provide names of external routers"
                    End If
                Case 48
                    If Len(Trim(Range("E48").Value)) = 0 Then Application.Undo
                    If Cells(48, 5).Value = "static" Then
                        Rows("49").EntireRow.Hidden = True
                    Else
                        Rows("49").EntireRow.Hidden = False
                    End If
                    Range("F48").Select
                Case 52
                    If Len(Trim(Range("E52").Value)) = 0 Then Application.Undo
                Case 53
                    If Len(Trim(Range("E53").Value)) = 0 Then Application.Undo
                Case 54
                    If Len(Trim(Range("E54").Value)) = 0 Then Application.Undo
                Case 59
                    If Len(Trim(Range("E59").Value)) = 0 Then Application.Undo
                Case 60
                    If Len(Trim(Range("E60").Value)) = 0 Then Application.Undo
                Case 65 'Firepass
                    If Len(Trim(Range("E65").Value)) = 0 Then Application.Undo
                    If Cells(65, 5).Value = "Yes" Then
                        Rows("66:69").EntireRow.Hidden = False
                    ElseIf Cells(65, 5).Value = "No" Then
                        Rows("66:69").EntireRow.Hidden = True
                    End If
                    Range("F65").Select
                Case 67
                    If Len(Trim(Range("E67").Value)) = 0 Then Application.Undo
                Case 71 'Cus FW
                    If Len(Trim(Range("E71").Value)) = 0 Then Application.Undo
                    Range("E72:E73,E75:E78").Value = "Choose from the list!"
                    Range("E74").Value = ""
                    Range("E79").Value = ""
                    If Cells(71, 5).Value = "Existing" Then
                        Cells(71, 6).Value = "Provide FW cluster name and vDOM or TC number"
                        Cells(72, 6).Value = ""
                        Rows("73:79").EntireRow.Hidden = True
                        Rows("72").EntireRow.Hidden = False
                    ElseIf Cells(71, 5).Value = "New Dedicated/Virtual" Then
                        Cells(71, 6).Value = ""
                        Rows("73:79").EntireRow.Hidden = True
                        Rows("72").EntireRow.Hidden = False
                    ElseIf Cells(71, 5).Value = "No" Then
                        Cells(71, 6).Value = ""
                        Rows("72:79").EntireRow.Hidden = True
                    End If
                    Range("F71").Select
                Case 72
                    If Len(Trim(Range("E72").Value)) = 0 Then Application.Undo
                    Range("E73,E75:E78").Value = "Choose from the list!"
                    Range("E74").Value = ""
                    Range("E79").Value = ""
                    If Cells(72, 5).Value = "Dedicated" Then
                        If Cells(71, 5).Value = "New Dedicated/Virtual" Then
                            Rows("74").EntireRow.Hidden = True
                            Rows("73").EntireRow.Hidden = False
                        End If
                        Cells(72, 6).Value = "Provide vDOM/vSYS name"
                        If Cells(75, 5).Value = "New Dedicated/Virtual" Then
                            Rows("76").EntireRow.Hidden = False
                            Rows("78").EntireRow.Hidden = True
                            Rows("79").EntireRow.Hidden = True
                        Else
                            Rows("76:79").EntireRow.Hidden = True
                        End If
                    ElseIf Cells(72, 5).Value = "Virtual (Shared HW)" Then
                        If Cells(71, 5).Value = "New Dedicated/Virtual" Then
                            Cells(72, 6).Value = "Provide vDOM/vSYS name"
                            Rows("73").EntireRow.Hidden = True
                            Rows("74").EntireRow.Hidden = False
                        End If
                        If Cells(75, 5).Value = "New Dedicated/Virtual" Then
                            Rows("78").EntireRow.Hidden = False
                            Rows("76").EntireRow.Hidden = True
                            Rows("77").EntireRow.Hidden = True
                            Rows("79").EntireRow.Hidden = True
                        Else
                            Rows("76:79").EntireRow.Hidden = True
                        End If
                    End If
                    If Cells(71, 5).Value = "Existing" Then
                        Cells(72, 6).Value = ""
                    End If
                    Rows("75").EntireRow.Hidden = False
                    Range("F72").Select
                Case 73
                    If Len(Trim(Range("E73").Value)) = 0 Then Application.Undo
                Case 75 'DMZ FW
                    If Len(Trim(Range("E75").Value)) = 0 Then Application.Undo
                    Range("E76:E78").Value = "Choose from the list!"
                    Range("E79").Value = ""
                    If Cells(75, 5).Value = "Existing" Then
                        Cells(75, 6).Value = "Provide FW cluster name and vDOM or TC number"
                        Rows("76:79").EntireRow.Hidden = True
                    ElseIf Cells(75, 5).Value = "New Dedicated/Virtual" Then
                        Cells(75, 6).Value = ""
                        If Cells(72, 5).Value = "Dedicated" Then
                            Rows("76").EntireRow.Hidden = False
                            Rows("78").EntireRow.Hidden = True
                            Rows("79").EntireRow.Hidden = True
                        ElseIf Cells(72, 5).Value = "Virtual (Shared HW)" Then
                            Rows("78").EntireRow.Hidden = False
                            Rows("77").EntireRow.Hidden = True
                            Rows("79").EntireRow.Hidden = True
                        End If
                    ElseIf Cells(75, 5).Value = "No" Then
                        Cells(75, 6).Value = ""
                        Rows("76:79").EntireRow.Hidden = True
                    End If
                    Range("F75").Select
                Case 76
                    If Len(Trim(Range("E76").Value)) = 0 Then Application.Undo
                    Range("E77:E78").Value = "Choose from the list!"
                    Range("E79").Value = ""
                    If Cells(76, 5).Value = "Dedicated" Then
                        Rows("77").EntireRow.Hidden = False
                    Else
                        Cells(76, 6).Value = ""
                        Rows("77").EntireRow.Hidden = True
                    End If
                    Cells(76, 6).Value = "Provide vDOM/vSYS name (inet-xxx)"
                    Range("F76").Select
                Case 77
                    If Len(Trim(Range("E77").Value)) = 0 Then Application.Undo
                Case 78
                    If Len(Trim(Range("E78").Value)) = 0 Then Application.Undo
                    Range("E79").Value = ""
                    If Cells(78, 5).Value = "Virtual shared (inet-shrd)" Then
                        Cells(78, 6).Value = ""
                        Rows("79").EntireRow.Hidden = True
                    ElseIf Cells(78, 5).Value = "Virtual dedicated" Then
                        Cells(78, 6).Value = "Provide vDOM/vSYS name (inet-xxx)"
                        Rows("79").EntireRow.Hidden = False
                    End If
                    Range("F78").Select
                Case 82 'LB
                    If Len(Trim(Range("E82").Value)) = 0 Then Application.Undo
                    If Cells(82, 5).Value = "New" Then
                        Rows("83:84").EntireRow.Hidden = False
                        Cells(82, 6).Value = ""
                    ElseIf Cells(82, 5).Value = "Existing" Then
                        Rows("83:84").EntireRow.Hidden = True
                        Cells(82, 6).Value = "Provide LB name or TC number"
                    ElseIf Cells(82, 5).Value = "None" Then
                        Rows("83:84").EntireRow.Hidden = True
                        Cells(82, 6).Value = ""
                    End If
                    Range("F82").Select
                Case 83
                    If Len(Trim(Range("E83").Value)) = 0 Then Application.Undo
                Case 86
                    If Len(Trim(Range("E86").Value)) = 0 Then Application.Undo
                    If Cells(86, 5).Value = "Yes" Then
                        Rows("87:88").EntireRow.Hidden = False
                    ElseIf Cells(86, 5).Value = "No" Then
                        Rows("87:88").EntireRow.Hidden = True
                    End If
                    Range("F86").Select
                Case 90
                    If Len(Trim(Range("E90").Value)) = 0 Then Application.Undo
                    If Cells(90, 5).Value = "Yes" Then
                        QG1_UnHideNetwork
                    ElseIf Cells(90, 5).Value = "No" Then
                        QG1_HideNetwork
                    End If
                    Range("F90").Select
            End Select
        End If
        Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
