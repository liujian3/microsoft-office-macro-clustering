Attribute VB_Name = "Module1"
Private Sub StartingPositions()

'All sheets to static opening positions

    Application.GoTo Workbooks("2019 Nov Order Tool BASE.xlsm").Sheets("Open Backorders").Range("A2")
    Application.GoTo Workbooks("2019 Nov Order Tool BASE.xlsm").Sheets("Purchase History").Range("A9")
    Application.GoTo Workbooks("2019 Nov Order Tool BASE.xlsm").Sheets("Ordering Tool").Range("Q2")

End Sub
Private Sub Start_CleanHouse()
    Application.DisplayAlerts = False
    On Error Resume Next
    Worksheets("Open Backorders").Range("A2:A4").Clear
    Worksheets("Open Backorders").Range("D2:G7").Clear
    Worksheets("Open Backorders").Range("A8:Z1048576").Clear
    Worksheets("Ordering Tool").Range("V9:V10").ClearContents
    Worksheets("Ordering Tool").Range("M2:M874").ClearContents
    Worksheets("Purchase History").Range("A9:C10000").Clear
    Application.DisplayAlerts = True
End Sub
Private Sub Start_SetupNextDealer()

'Set-up for next Dealer Export
    
'Add column headers back into Open Backorders sheet
    Workbooks("Open Backorders.xlsm").Worksheets("Sheet1").Range("A1:K1").Copy
    Workbooks("2019 Nov Order Tool BASE.xlsm").Worksheets("Open Backorders").Range("A9:K9").PasteSpecial Paste:=xlPasteValues
    Application.CutCopyMode = False
'Add date to both sheets
    Sheets("Open Backorders").Select
    Range("A2").Formula = "=TODAY()"
        With Selection
            .HorizontalAlignment = xlLeft
        End With
    Range("A2").Copy
    Range("A2").PasteSpecial Paste:=xlPasteValues
    Worksheets("Purchase History").Range("A2").PasteSpecial Paste:=xlPasteValues
    Range("A2").NumberFormat = "m/d/yyyy"
    Worksheets("Purchase History").Range("A2").NumberFormat = "m/d/yyyy"
    Application.CutCopyMode = False
'Add dealer info into Open Backorders sheet
    Workbooks("Auto Import Dealer List.xlsx").Worksheets("Sheet1").Range("2:2").Copy
    Workbooks("2019 Nov Order Tool BASE.xlsm").Worksheets("Open Backorders").Range("8:8").PasteSpecial Paste:=xlPasteValues
    Range("A8").Cut Destination:=Range("D6")
    Range("B8").Cut Destination:=Range("D2")
    Range("C8").Cut Destination:=Range("D3")
    Range("D8").Cut Destination:=Range("D7")
    Range("E8").Cut Destination:=Range("D4")
    Range("F8").Cut Destination:=Range("D5")
    Range("E2").Formula = "=D2&""*"""
    Range("E3").Formula = "=IF(D3="""",""#"",D3&""*"")"
    Range("A2").Select
'Add dealer info to Purchase History sheet
    Worksheets("Open Backorders").Range("E2").Copy
    Worksheets("Purchase History").Select
    Range("C2").PasteSpecial Paste:=xlPasteValues
    'Create Dealer Stat# into *PA acceptable dealer # for BW
    Range("D2").Formula = "=LEFT(C2,8)&""PA"""
    Worksheets("Purchase History").Range("D2").Copy
'Start BW in Purchase History update
    Range("C4").Select
    Application.Wait (Now + TimeValue("0:00:01"))
    'Pause for BW to catch up after cell selection
    Selection.PasteSpecial Paste:=xlPasteValues
    Application.Wait (Now + TimeValue("0:00:02"))
    'Pause for BW to pull data and process the request
    Application.CutCopyMode = False
    Range("C2:D2").ClearContents
    'Write Item Description
    Range("B8") = "'Item Description"

End Sub
Private Sub Start_PrepareBackorderReport()
    Sheets("Open Backorders").Select
'Run the Advanced Filter to copy lines
    Application.CutCopyMode = False
    Workbooks("Open Backorders.xlsm").Sheets("Sheet1").Columns("A:K"). _
        AdvancedFilter Action:=xlFilterCopy, CriteriaRange:=Range( _
        "'Open Backorders'!Criteria"), CopyToRange:=Range("'Open Backorders'!A9:K9" _
        ), Unique:=False
'Find the last row, used for filling down formulas
    Dim lastrow As Long
    lastrow = Range("A10000").End(xlUp).Row
'Enter calculated fields and paste values
    Range("L9") = "Open Qty"
    Range("L10").Formula = "=IF(K10=""CT"",F10,J10)"
    Range("M9") = "Item Type"
    Range("M10").Formula = "=IF(K10=""CP"",""Item"",IF(K10=""CT"",""SET/KIT"",""Misc""))"
    Range("N9") = "Order Type"
    Range("N10").Formula = "=IF(I10=""Z11"",""Standard"",IF(I10=""Z12"",""Pre Order"",IF(I10=""Z13"",""Program"",""Other"")))"
    
If lastrow <= 10 Then GoTo OneResultSkip_1
    
    Range("L10:N10").Copy
    Range("L10:N" & lastrow).PasteSpecial Paste:=xlPasteFormulas
    Range("L10:N" & lastrow).Copy
    Range("L10:N" & lastrow).PasteSpecial Paste:=xlPasteValues

OneResultSkip_1:

    Range("L10:N10").Copy
    Range("L10:N10").PasteSpecial Paste:=xlPasteValues

'Prepare helper cells
    Range("E4").Formula = "=LEFT(RemoveSpecial(D4),18)"
    Range("E5").Formula = "=LEFT(RemoveSpecial(D5),18)"
    Range("E6").Formula = _
        "=""2019 November Street PowerParts Program - ""&E4&"" ""&D2"
    Range("A3").Formula = "=TEXT(A2,""m.d.yy"")"
    Range("A2").Select
    
'Overwrite with Values the entire sheet
    Cells.Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues
    Application.CutCopyMode = False
    Range("A2").Select
 
'Rewrite & format report headers for exported dealer report
    Range("A9") = "'Date"
    Range("B9") = "Order #"
    Range("C9") = "Dealer #"
    Range("D9") = "Item Number"
    Range("E9") = "Item Name"
    Range("F9") = "Order Qty"
    Range("G9") = "Delivery Status"
    Range("H9") = "Rejection"
    
    'Remove rejection column
    Columns("H:H").Delete Shift:=xlToLeft
    'Move Order Type from M to F
    Columns("M:M").Cut
    Columns("F:F").Insert Shift:=xlToLeft
    'Move Item Type from L to G
    Columns("M:M").Cut
    Columns("G:G").Insert Shift:=xlToLeft
    'Move Open Qty from M to J
    Columns("M:M").Cut
    Columns("J:J").Insert Shift:=xlToLeft
    'Move Open Qty from M to J
    Columns("K:M").Clear
    'Format the date column
    Range("A10:A" & lastrow).NumberFormat = "m/d/yyyy"
    
    Range("A9:J9").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone

    'Resize the data columns
    Columns("A:A").ColumnWidth = 11
    Columns("B:B").ColumnWidth = 9
    Columns("C:C").ColumnWidth = 12
    Columns("D:D").ColumnWidth = 20
    Columns("E:E").ColumnWidth = 30
    Columns("F:F").ColumnWidth = 12
    Columns("G:G").ColumnWidth = 10
    Columns("H:H").ColumnWidth = 10
    Columns("I:I").ColumnWidth = 16
    Columns("J:J").ColumnWidth = 10

    Range("A3:A7").Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Range("E2:E7").Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With

'Sort the backorders by Dealer#, Order#, Material#
    Range("A9:J9").Select
    Range(Selection, Selection.End(xlDown)).Select
    ActiveWorkbook.Worksheets("Open Backorders").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Open Backorders").Sort.SortFields.Add2 Key:=Range( _
        "C10:C3000"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Open Backorders").Sort.SortFields.Add2 Key:=Range( _
        "B10:B3000"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortTextAsNumbers
    'ActiveWorkbook.Worksheets("Open Backorders").Sort.SortFields.Add2 Key:=Range( _
    '    "D10:D3000"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
    '    xlSortNormal
    With ActiveWorkbook.Worksheets("Open Backorders").Sort
        .SetRange Range("A9:K3000")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

End Sub
Private Sub Start_EnterFormulasAndValues()
' Start_EnterFormulasAndValues Macro

    Sheets("Ordering Tool").Select
    'Fall Program Order Total
    Range("V9").Formula = _
        "=IFERROR(VLOOKUP('Open Backorders'!E2,'[2019 Aug-Sept Program Discount Levels.xlsx]Sheet1'!$A$2:$C$239,2,0),""No order found"")"
    
    'Fall Program Discount
    Range("V10").Formula = _
        "=IFERROR(VLOOKUP('Open Backorders'!E2,'[2019 Aug-Sept Program Discount Levels.xlsx]Sheet1'!$A$2:$C$239,3,0),"""")"

    Range("V9:V10").Copy
    Range("V9:V10").PasteSpecial Paste:=xlPasteValues
    
    Range("T17").Formula = _
        "="" - ""&'Open Backorders'!D2&"" ""&'Open Backorders'!D5"
    
    Range("T17").Copy
    Range("T17").PasteSpecial Paste:=xlPasteValues
    
    
    Sheets("Ordering Tool").Select
    Range("M2").Formula = _
        "=SUMIF('Open Backorders'!$D$5:$D$5000,[@[Item Number]],'Open Backorders'!$J$5:$J$5000)"
    
    'Range("U9:U10").AutoFill Destination:=Range("U9:V10"), Type:=xlFillFormats
    'Range("V9").NumberFormat = "$#,##0.00"
    'Range("V10").Style = "Percent"
    
    
End Sub
Private Sub End_SaveAsCopy()
'Prepare the SaveAsCopy

    Sheets("Open Backorders").Select
    
    Dim dsm As String
        dsm = Range("D7")
    Dim filename As String
        filename = Range("E6")
    Dim currentdate As String
        currentdate = Range("A3")
    Dim district As String
        district = Range("D6")
    Dim Path_ As String
        Path_ = "C:\Users\lubinskid\Documents\November Program Files\" & dsm & "\"
    Dim name_ As String
        name_ = filename & ".xlsm"
    If Dir(Path_, vbDirectory) = "" Then
        Shell ("cmd /c mkdir """ & Path_ & """")
    End If
    Application.Wait (Now + TimeValue("0:00:02"))
    
    Application.Run "Module1.StartingPositions"
    
    ActiveWorkbook.SaveCopyAs filename:=Path_ & name_

End Sub
Private Sub End_PrepareNextDealer()

'Remove Dealer from the list
    Windows("Auto Import Dealer List.xlsx").Activate
    Rows("2:2").Select
    Selection.Delete Shift:=xlUp
    ActiveWorkbook.Save
    Windows("2019 Nov Order Tool BASE.xlsm").Activate
    
End Sub
Attribute VB_Name = "Module2"
Sub SortDefault()
Attribute SortDefault.VB_ProcData.VB_Invoke_Func = " \n14"
'
' SortDefault Macro
'

'
    Range("Q2").Select
    On Error Resume Next
    ActiveWorkbook.Worksheets("Ordering Tool").ListObjects("Table1").Sort. _
        SortFields.Clear
    ActiveSheet.ShowAllData
    ActiveWorkbook.Worksheets("Ordering Tool").ListObjects("Table1").Sort. _
        SortFields.Add2 Key:=Range("Table1[Page]"), SortOn:= _
        xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Ordering Tool").ListObjects("Table1").Sort. _
        SortFields.Add2 Key:=Range("Table1[Item Number]"), SortOn:=xlSortOnValues, _
        Order:=xlAscending, DataOption:=xlSortTextAsNumbers
    With ActiveWorkbook.Worksheets("Ordering Tool").ListObjects("Table1").Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Range("Q2").Select
    ActiveWindow.ScrollColumn = 1
    ActiveWindow.ScrollRow = 1
End Sub
Sub SelectCustomOrder()
'
' SelectCustomOrder Macro
'

'
    Range("J4").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("G1").Select
End Sub

Sub Select3moOrder()
'
' SelectCustomOrder Macro
'

'
    Range("O4").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("G1").Select
End Sub

Sub Select6moOrder()
'
' SelectCustomOrder Macro
'

'
    Range("Q4").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("G1").Select
End Sub
Attribute VB_Name = "Module3"
Sub ExportFile()

Dim x As Long
Dim Count As Variant
Count = InputBox("Number of Dealers to Run", "Dealer Count", 1)



For x = 1 To Count
Application.ScreenUpdating = False
Application.Run "Module1.Start_CleanHouse"
Application.Run "Module1.StartingPositions"
Application.Run "Module1.Start_SetupNextDealer"
Application.Run "Module1.StartingPositions"
Application.Run "Module1.Start_PrepareBackorderReport"
Application.Run "Module1.StartingPositions"
Application.Run "Module1.Start_EnterFormulasAndValues"
Application.Run "Module1.StartingPositions"
Application.Run "Module1.End_SaveAsCopy"
Application.Run "Module1.StartingPositions"
Application.Run "Module1.End_PrepareNextDealer"
Application.Run "Module1.StartingPositions"

Next x

Application.Run "Module1.Start_CleanHouse"
Application.Run "Module1.StartingPositions"

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Module4"
Function RemoveSpecial(Str As String) As String
'updatebyExtendoffice 20160303
    Dim xChars As String
    Dim I As Long
    xChars = "#$%()^*'&/\.?|,"
    For I = 1 To Len(xChars)
        Str = Replace$(Str, Mid$(xChars, I, 1), "")
    Next
    RemoveSpecial = Str
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
     'If this worksheet is activated, refresh the pivot table
     'Change "Pivot" to your sheet's name
     'Change "PivotTable1" to your pivot table's name
     
    Sheets("Import").PivotTables("PivotTable1").RefreshTable
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
     
End Sub
 
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Selection.Count = 1 Then
        If Not Intersect(Target, Range("J3")) Is Nothing Then
            Call SelectCustomOrder
        End If
    End If

    If Selection.Count = 1 Then
        If Not Intersect(Target, Range("O3")) Is Nothing Then
            Call Select3moOrder
        End If
    End If

    If Selection.Count = 1 Then
        If Not Intersect(Target, Range("Q3")) Is Nothing Then
            Call Select6moOrder
        End If
    End If
End Sub


Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
