Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub Deproteger()

    Dim A As Byte, B As Byte, C As Byte, D As Byte, E As Byte
    Dim F As Byte, G As Byte, H As Byte, I As Byte, J As Byte
    Dim K As Byte, L As Byte, M As Byte, N As Byte, O As Byte
    Dim Reponse As Byte, Temps As Variant
    Dim Cible As Object, Passe As String
    
'   Demande ce qu'il faut d|fffd|prot|fffd|ger.
    Reponse = MsgBox("Voulez-vous d|fffd|prot|fffd|ger le classeur actif ?" & vbCrLf & _
     "Si vous r|fffd|pondez non, c'est la feuille active qui sera d|fffd|prot|fffd|g|fffd|e.   ", _
      vbYesNoCancel, "D|fffd|protectionnateur")
                                        
    On Error Resume Next
'   Teste ce qu'il faut d|fffd|prot|fffd|ger.
    Select Case Reponse
        Case vbYes
'           D|fffd|finit le classeur actif comme cible |fffd| d|fffd|prot|fffd|ger.
            Set Cible = ActiveWorkbook
'           Teste si le classeur est prot|fffd|g|fffd|.
            If Not (Cible.ProtectStructure Or Cible.ProtectWindows) Then
                MsgBox "Le classeur actif n'est pas prot|fffd|g|fffd|.   " & vbCrLf & _
                vbCrLf & "Andouille !", vbOKOnly, "D|fffd|protectionnateur"
                Exit Sub
            End If
'           Teste si le classeur est prot|fffd|g|fffd| sans mot de passe.
            Err.Clear
            Cible.Unprotect vbNullString
            If Err = 0 Then
                MsgBox "La protection du classeur actif a |fffd|t|fffd| supprim|fffd|e.   " _
             & vbCrLf & "Il n'y avait pas de mot de passe. Petit rigolo !", _
               vbOKOnly, "D|fffd|protectionnateur"
                Exit Sub
            End If
        Case vbNo
'           D|fffd|finit la feuille active comme cible |fffd| d|fffd|prot|fffd|ger.
            Set Cible = ActiveSheet
'           Teste si la feuille est prot|fffd|g|fffd|e (on ne teste pas UserInterfaceOnly qui ne peut |fffd|tre positionn|fffd| que par macro
'           et n'est pas enregistr|fffd| avec le classeur).
            If Not (Cible.ProtectContents Or Cible.ProtectDrawingObjects Or _
             Cible.ProtectScenarios) Then
                MsgBox "La feuille active n'est pas prot|fffd|g|fffd|e.   " & vbCrLf & _
                vbCrLf & "Patate !", vbOKOnly, "D|fffd|protectionnateur"
                Exit Sub
            End If
'           Teste si la feuille est prot|fffd|g|fffd|e sans mot de passe.
            Err.Clear
            Cible.Unprotect vbNullString
            If Err = 0 Then
               MsgBox "La protection de la feuille active a |fffd|t|fffd| supprim|fffd|e.   " _
             & vbCrLf & "Il n'y avait pas de mot de passe. Quelle burne !", _
               vbOKOnly, "D|fffd|protectionnateur"
               Exit Sub
            End If
        Case Else
'           Annulation demand|fffd|e par l'utilisateur.
            MsgBox String(14, " ") & "Ciao !", vbOKOnly, "D|fffd|protectionnateur"
            Exit Sub
    End Select
        
'   Note l'instant de d|fffd|part.
    Temps = Timer

'   Boucles de calcul des mots de passe. On utilise ici les codes ascii des caract|fffd|res "0" et "1".
    For A = 48 To 49
     For B = 48 To 49
      For C = 48 To 49
       For D = 48 To 49
        For E = 48 To 49
         For F = 48 To 49
          For G = 48 To 49
           For H = 48 To 49
            For I = 48 To 49
             For J = 48 To 49
              For K = 48 To 49
               For L = 48 To 49
                For M = 48 To 49
                 For N = 48 To 49
                  For O = 48 To 49
'                       Calcule le mot de passe.
                        Passe = Chr(A) & Chr(B) & Chr(C) & Chr(D) & Chr(E) & _
                                Chr(F) & Chr(G) & Chr(H) & Chr(I) & Chr(J) & _
                                Chr(K) & Chr(L) & Chr(M) & Chr(N) & Chr(O)
'                       Essaie de d|fffd|prot|fffd|ger la cible.
                        Err.Clear
                        Cible.Unprotect Passe
'                       Teste si la cible est bien d|fffd|prot|fffd|g|fffd|.
                        If Err = 0 Then
'                           Si oui, affiche le mot de passe et sort.
                            MsgBox "La protection a |fffd|t|fffd| supprim|fffd|e en " & _
                            Timer - Temps & " secondes.   " & vbCrLf & _
                             "Le mot de passe |fffd|quivalent trouv|fffd| est :" & _
                            vbCrLf & vbCrLf & String(28, " ") & Passe, _
                            vbOKOnly, "D|fffd|protectionnateur"
                            Exit Sub
                        End If
                  Next
                 Next
                Next
               Next
              Next
             Next
            Next
           Next
          Next
         Next
        Next
       Next
      Next
     Next
    Next

'   Message impossible |fffd| atteindre.
    MsgBox "Mot de passe introuvable." & vbCrLf & vbCrLf & _
            "C'est pas normal !!!", vbOKOnly, "D|fffd|protectionnateur"
    
End Sub

Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 8, 0, MSForms, CommandButton"
Public uniqueCpt As Integer
Dim D As Date


Private Sub CommandButton1_Click()
'1408;ACNA CDG;99000431;AHMAD;CATHERINE;NV6ECI;EXPLOITATION CIES;0901;Interimaires;20101105;J835;0700;1500;AGT;;
'1408;ACNA CDG;142408;MARCEL;BERNARD;NV6ELS;EXPL.NET.LC.SECU;4204;LC. NETTOYAGE 151,67;20101105;M826;0600;1330;CE;CS;
  Dim F, fs
  Dim line As String
  
  uniqueCpt = 0
  

  D = Sheets("JOUR").Cells(5, 4).Value
  Set fs = CreateObject("Scripting.FilesystemObject")
  Set F = fs.opentextfile("L:\APPLIS\SIAD_SGE\Effectif\acna_shifts_" & Format(D, "yyyymmdd") & "ORY.txt", 2, 1)
  
  write_feuille F, 5, 1, D
  write_feuille F, 38, 1, D
  write_feuille F, 71, 1, D
  write_feuille F, 104, 1, D
  write_feuille F, 138, 1, D
  write_feuille F, 171, 1, D
  
  F.Close
  
'  Set F = fs.opentextfile("S:\Effectif\acna_shifts_" & Format(D, "yyyymmdd") & "ORY.txt", 2, 1)
'  write_feuille F, 5, 1, D
'  write_feuille F, 38, 1, D
'  write_feuille F, 71, 1, D
'  write_feuille F, 104, 1, D
'  write_feuille F, 138, 1, D
'  write_feuille F, 171, 1, D
  
'  F.Close
  
  
  
 ' Call Shell("S:\effectif\backup.bat " & Format(D, "yyyymmdd"))
 ' Call Shell("S:\effectif\export.bat")
  
End Sub

Function write_feuille(F, x As Integer, y As Integer, D As Date)
  Dim cpt As Integer
  Dim cpt2 As Integer
  Dim UO As String
  
  UO = Sheets("JOUR").Cells(x, 1).Value
  cpt = 1
  Do While cpt < 28
    cpt2 = 0
    Do While cpt2 <= 8
      write_team F, UO, x + cpt, y + cpt2, D
      cpt2 = cpt2 + 2
    Loop
    cpt = cpt + 7
  Loop
End Function

Function write_team(F, UO As String, x As Integer, y As Integer, D As Date)
  Dim cpt As Integer

  If Sheets("JOUR").Cells(x + 2, y).Value <> "" Then
    cpt = 0
    Do While cpt < 4
      If (Sheets("JOUR").Cells(x + 3 + cpt, y).Value <> "") Then
        
        If Sheets("JOUR").Cells(x + 3 + cpt, y).Value <> 0 Then
            If (cpt = 0) Then
              If IsNumeric(WorksheetFunction.VLookup(Sheets("JOUR").Cells(x + 2, y).Value, Sheets("Base_MATRICULE").Range("Base"), cpt + 16, False)) Then
                line = "1408;ACNA_ORY;" & WorksheetFunction.VLookup(Sheets("JOUR").Cells(x + 2, y).Value, Sheets("Base_MATRICULE").Range("Base"), cpt + 16, False) & ";" & Sheets("JOUR").Cells(x + 3 + cpt, y).Value & ";;" & UO & ";" & WorksheetFunction.VLookup(UO, Sheets("PARAM").Range("UO"), 2, False) & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Format(D, "yyyymmdd") & ";" & Sheets("JOUR").Cells(x + 1, y).Value & ";" & Format(Sheets("JOUR").Cells(x, y).Value, "hhmm") & ";" & Format(Sheets("JOUR").Cells(x, y + 1).Value, "hhmm") & ";CE;" & Sheets("JOUR").Cells(x + 1, y + 1).Value & ";"
              Else
               line = "1408;ACNA_ORY;99" & CompleteIterativeId(uniqueCpt) & ";" & Sheets("JOUR").Cells(x + 3 + cpt, y).Value & ";;" & UO & ";" & WorksheetFunction.VLookup(UO, Sheets("PARAM").Range("UO"), 2, False) & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Format(D, "yyyymmdd") & ";" & Sheets("JOUR").Cells(x + 1, y).Value & ";" & Format(Sheets("JOUR").Cells(x, y).Value, "hhmm") & ";" & Format(Sheets("JOUR").Cells(x, y + 1).Value, "hhmm") & ";CE;" & Sheets("JOUR").Cells(x + 1, y + 1).Value & ";"
                uniqueCpt = uniqueCpt + 1
              End If
            Else
              If IsNumeric(WorksheetFunction.VLookup(Sheets("JOUR").Cells(x + 2, y).Value, Sheets("Base_MATRICULE").Range("Base"), cpt + 16, False)) Then
                line = "1408;ACNA_ORY;" & WorksheetFunction.VLookup(Sheets("JOUR").Cells(x + 2, y).Value, Sheets("Base_MATRICULE").Range("Base"), cpt + 16, False) & ";" & Sheets("JOUR").Cells(x + 3 + cpt, y).Value & ";;" & UO & ";" & WorksheetFunction.VLookup(UO, Sheets("PARAM").Range("UO"), 2, False) & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Format(D, "yyyymmdd") & ";" & Sheets("JOUR").Cells(x + 1, y).Value & ";" & Format(Sheets("JOUR").Cells(x, y).Value, "hhmm") & ";" & Format(Sheets("JOUR").Cells(x, y + 1).Value, "hhmm") & ";AGT;" & Sheets("JOUR").Cells(x + 1, y + 1).Value & ";"
              Else
                line = "1408;ACNA_ORY;99" & CompleteIterativeId(uniqueCpt) & ";" & Sheets("JOUR").Cells(x + 3 + cpt, y).Value & ";;" & UO & ";" & WorksheetFunction.VLookup(UO, Sheets("PARAM").Range("UO"), 2, False) & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Sheets("JOUR").Cells(x + 2, y).Value & ";" & Format(D, "yyyymmdd") & ";" & Sheets("JOUR").Cells(x + 1, y).Value & ";" & Format(Sheets("JOUR").Cells(x, y).Value, "hhmm") & ";" & Format(Sheets("JOUR").Cells(x, y + 1).Value, "hhmm") & ";AGT;" & Sheets("JOUR").Cells(x + 1, y + 1).Value & ";"
                uniqueCpt = uniqueCpt + 1
              End If
            End If
        
        
        
        
            Debug.Print line
            F.writeline line
        Else
            line = ""
        End If
      End If
      cpt = cpt + 1
    Loop
  End If
End Function

Function CompleteIterativeId(id As Integer) As String
    Dim zeros As Integer
    Dim CodeVacation As String
        
    CodeVacation = "2"  'Code Vacation d'ACNA ORY pour les vacations = 2
    zeros = 2 - Len(toto & id) 'Calcul du nombre de z|fffd|ros n|fffd|cessaires pour compl|fffd|ter le compteur
    CompleteIterativeId = Weekday(D, vbMonday) & CodeVacation & String(zeros, "0") & id
End Function

Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




INQUEST-PP=macro
