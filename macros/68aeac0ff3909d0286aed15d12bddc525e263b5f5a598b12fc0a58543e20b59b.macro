Attribute VB_Name = "Module1"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
Call PLC
Call OtherOFR
Call FOB

End Sub

Sub eventstrue()

Application.EnableEvents = True


End Sub

Sub EnableEventsNow()
    Dim sMsg As String
    With Application
        sMsg = IIf(.EnableEvents, _
            "Events were already enabled.", _
            "Events are now enabled.")
        .EnableEvents = True
    End With
    MsgBox sMsg
End Sub

Attribute VB_Name = "Module2"
Sub getCharges2()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

If Sheets("FreightCalculator").Range("E12").Value = 0 Or Sheets("FreightCalculator").Range("E15").Value = 0 Then
MsgBox "Origin or Destination City incorrect. Please check"
Application.Calculation = xlCalculationAutomatic
Exit Sub
End If

Dim i As Long
Dim j As Long
Dim k As Long

Dim str As String
Dim s1 As String
Dim s2 As String
Dim s3 As String
Dim s4 As String

Dim OFR As Worksheet, FOB As Worksheet, PLC As Worksheet

Set OFR = Sheets("Ocean Freight")
Set SURC = Sheets("Surcharges")
Set PLC = Sheets("PLC")

s1 = Range("E12").Value
s2 = Range("E15").Value
s3 = Range("H12").Value
s4 = Range("H15").Value

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If s1 = "" Or s2 = "" Then
    MsgBox ("Each dropdown for Routing Details must be selected")
    Exit Sub
Else
    If IsEmpty(Range("M11")) Then
        MsgBox ("Please input Cubic Meter(cbm)")
        Exit Sub
    Else
        If IsEmpty(Range("M14")) Then
            MsgBox ("Please input Weight(Kgs)")
            Exit Sub
        Else
        End If
    End If
End If

If s1 = "ERROR" Then MsgBox "Please enter correct Origin City"
If s2 = "ERROR" Then MsgBox "Please enter correct Origin City"

 '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Sheets("UNCODE").Visible = True

FOB.Visible = True
OFR.Visible = True
PLC.Visible = True
            
Sheets("FreightCalculator").Select
Rows("16:50").Hidden = False
            
           
lcol = Application.WorksheetFunction.Match("VIA", OFR.Rows("2:2"), 0)
OFR.Range(OFR.Cells(2, 1), OFR.Cells(2, lcol)).AutoFilter
            
ORIG = Application.WorksheetFunction.Match("Origin UN Code", OFR.Rows("3:3"), 0)
DEST = Application.WorksheetFunction.Match("Destination UN Code", OFR.Rows("3:3"), 0)
VIA = Application.WorksheetFunction.Match("Routing Via", OFR.Rows("3:3"), 0)
'Lod = Application.WorksheetFunction.Match("Port Of Loading", OFR.Rows("3:3"), 0)
'Disch = Application.WorksheetFunction.Match("Port Of Discharge", OFR.Rows("3:3"), 0)
RAT = Application.WorksheetFunction.Match("Rate", OFR.Rows("3:3"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", OFR.Rows("3:3"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", OFR.Rows("3:3"), 0)
CURR = Application.WorksheetFunction.Match("Currency", OFR.Rows("3:3"), 0)
Fro = Application.WorksheetFunction.Match("From", OFR.Rows("3:3"), 0)
Tox = Application.WorksheetFunction.Match("To", OFR.Rows("3:3"), 0)

k = OFR.Range("A" & OFR.Rows.Count).End(xlUp).Row

If k = 2 Then
MsgBox "No rates available"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

            
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

If s3 <> "" Then OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
If s4 <> "" Then OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4

str = OFR.Range(OFR.Cells(2, lcol), OFR.Cells(k, lcol)).SpecialCells(xlCellTypeVisible).Count

If str > 1 Then
OFR.Range(OFR.Cells(3, RAT), OFR.Cells(k, RAT + 4)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G26").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, ED), OFR.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N26").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, CGCO), OFR.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A26").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, CURR), OFR.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E26").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, Fro), OFR.Cells(k, Fro)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("R26").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, Tox), OFR.Cells(k, Tox)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("S26").PasteSpecial xlPasteValues

                
NR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("24:24").Copy
Range("A" & NR + 1).PasteSpecial
Range(Cells(NR + 1, 1), Cells(NR + 1, 17)).ClearContents

End If
'End If


lcol = FOB.Cells(2, FOB.Columns.Count).End(xlToLeft).Column
            
FOB.Range(FOB.Cells(2, 1), FOB.Cells(2, lcol)).AutoFilter
            
ORIG = Application.WorksheetFunction.Match("ORIG", FOB.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", FOB.Rows("2:2"), 0)
VIA = Application.WorksheetFunction.Match("VIA", FOB.Rows("2:2"), 0)
Lod = Application.WorksheetFunction.Match("Port Of Loading", FOB.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", FOB.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", FOB.Rows("2:2"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", FOB.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", FOB.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", FOB.Rows("2:2"), 0)
Fro = Application.WorksheetFunction.Match("From", OFR.Rows("2:2"), 0)
Tox = Application.WorksheetFunction.Match("To", OFR.Rows("2:2"), 0)


k = FOB.Range("A" & FOB.Rows.Count).End(xlUp).Row

If k = 2 Then GoTo outt2

FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

Lr1 = FOB.Cells(FOB.Rows.Count, Lod).End(xlUp).Row
If Lr1 <> 2 Then
    If s3 <> "" Then FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
End If

lr2 = FOB.Cells(FOB.Rows.Count, Disch).End(xlUp).Row

If lr2 <> 2 Then
    If s4 <> "" Then FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4
End If
            
On Error Resume Next
str = FOB.Range(FOB.Cells(3, DEST), FOB.Cells(k, DEST)).SpecialCells(xlCellTypeVisible).Count

If Err.Number = 1004 Then
    str = 0
End If

If str >= 1 Then

Rows("24:25").Copy
Range("A" & NR + 3).PasteSpecial
Range("A" & NR + 3) = "Freight on Board"

FOB.Range(FOB.Cells(3, RAT), FOB.Cells(k, RAT + 4)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G" & NR + 5).PasteSpecial xlPasteValues
                
FOB.Range(FOB.Cells(3, ED), FOB.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, CGCO), FOB.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, CURR), FOB.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, Fro), FOB.Cells(k, Fro)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("R" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, Tox), FOB.Cells(k, Tox)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("S" & NR + 5).PasteSpecial xlPasteValues
                                
TR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("24:24").Copy
Range("A" & TR + 1).PasteSpecial
Range(Cells(TR + 1, 1), Cells(TR + 1, 17)).ClearContents

End If

For x = NR + 3 To TR

If Range("A" & x) = "DEN" Then

Range("K" & x) = Range("R" & x) & " - " & Range("S" & x) & " KGS/CBM"

End If


Next x

outt2:

k = PLC.Range("A" & PLC.Rows.Count).End(xlUp).Row

If k = 2 Then GoTo outt3

NR = Cells(Rows.Count, 1).End(xlUp).Row

lcol = PLC.Cells(2, PLC.Columns.Count).End(xlToLeft).Column
PLC.Range(PLC.Cells(2, 1), PLC.Cells(2, lcol)).AutoFilter

ORIG = Application.WorksheetFunction.Match("ORIG", PLC.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", PLC.Rows("2:2"), 0)
VIA = Application.WorksheetFunction.Match("VIA", PLC.Rows("2:2"), 0)
Lod = Application.WorksheetFunction.Match("Port Of Loading", PLC.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", PLC.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", PLC.Rows("2:2"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", PLC.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", PLC.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", PLC.Rows("2:2"), 0)
            
k = PLC.Range("A" & PLC.Rows.Count).End(xlUp).Row


PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

If s3 <> "" Then PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
If s4 <> "" Then PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4

str = PLC.Range(PLC.Cells(2, lcol), PLC.Cells(k, lcol)).SpecialCells(xlCellTypeVisible).Count

If str > 1 Then

Rows("24:24").Copy
Range("A" & NR + 3).PasteSpecial

Rows("24:25").Copy
Range("A" & NR + 3).PasteSpecial
Range("A" & NR + 3) = "Post Landing Charges"

PLC.Range(PLC.Cells(3, RAT), PLC.Cells(k, RAT + 4)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G" & NR + 5).PasteSpecial xlPasteValues
                
PLC.Range(PLC.Cells(3, ED), PLC.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N" & NR + 5).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, CGCO), PLC.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A" & NR + 5).PasteSpecial xlPasteValues
                
PLC.Range(PLC.Cells(3, CURR), PLC.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E" & NR + 5).PasteSpecial xlPasteValues

NR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("24:24").Copy
Range("A" & NR + 1).PasteSpecial
Range(Cells(NR + 1, 1), Cells(NR + 1, 17)).ClearContents
                
End If

outt3:
Application.Calculation = xlCalculationAutomatic

End Sub

Attribute VB_Name = "Module3"
Sub counNACA()

ro = Cells(Rows.Count, 1).End(xlUp).Row

CountNA = Application.WorksheetFunction.CountA(Range("C3:C" & ro))




End Sub
Attribute VB_Name = "Module_AAMASTER"
Sub MASTER()

Application.DisplayAlerts = False
Application.ScreenUpdating = False
Application.EnableEvents = False

Sheets("UNCODE").Visible = True
Sheets("Surcharges Calculate (FOB)").Visible = True
Sheets("Surcharges Calculate (OFR)").Visible = True
Sheets("Surcharges Calculate (PLC)").Visible = True

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Dim i As Long
Dim j As Long
Dim k As Long
'Sheets("Surcharges Calculate (OFR)").Select
k = Sheets("Surcharges Calculate (OFR)").Range("A" & Rows.Count).End(xlUp).Row
If k = 2 Then i = 1
'Sheets("Surcharges Calculate (FOB)").Select
k = Sheets("Surcharges Calculate (FOB)").Range("A" & Sheets("Surcharges Calculate (FOB)").Rows.Count).End(xlUp).Row
If k = 2 Then j = 1
Sheets("Surcharges Calculate (PLC)").Select
k = Sheets("Surcharges Calculate (PLC)").Range("A" & Sheets("Surcharges Calculate (PLC)").Rows.Count).End(xlUp).Row
If k = 2 Then k = 1
If i = 1 And j = 1 And k = 1 Then
   MsgBox "We do not have Data in any of 3 sheets"
   GoTo lastitem
End If
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

OF = Sheets("OFR").Cells(Sheets("OFR").Rows.Count, 1).End(xlUp).Row

If OF = 2 Then
Call PRECLEAN
Call FirstMacro2
Call Origins
Call PLCs2
Call FOBs2
Call Reset


roNA = Sheets("Named Accounts").Cells(Sheets("Named Accounts").Rows.Count, 1).End(xlUp).Row
roOFR = Sheets("OFR").Cells(Sheets("OFR").Rows.Count, 1).End(xlUp).Row
roFOB = Sheets("FOB").Cells(Sheets("FOB").Rows.Count, 1).End(xlUp).Row
roPLC = Sheets("PLC").Cells(Sheets("PLC").Rows.Count, 1).End(xlUp).Row
colPLC = Sheets("PLC").Cells(2, Sheets("PLC").Columns.Count).End(xlToLeft).Column
colNA = Sheets("Named Accounts").Cells(2, Sheets("Named Accounts").Columns.Count).End(xlToLeft).Column
OF = Sheets("OFR").Cells(Sheets("OFR").Rows.Count, 1).End(xlUp).Row
colFOB = Sheets("FOB").Cells(2, Sheets("FOB").Columns.Count).End(xlToLeft).Column
colOFR = Sheets("OFR").Cells(2, Sheets("OFR").Columns.Count).End(xlToLeft).Column


x = 0
y = 0
Z = 0
On Error Resume Next
Sheets("Surcharges Calculate (FOB)").ShowAllData
Sheets("Surcharges Calculate (OFR)").ShowAllData
Sheets("Surcharges Calculate (PLC)").ShowAllData
On Error GoTo 0
If Not Sheets("Surcharges Calculate (FOB)").Columns("M:M").Find("HAZ") Is Nothing Then x = 1
If Not Sheets("Surcharges Calculate (OFR)").Columns("M:M").Find("HAZ") Is Nothing Then y = 1
If Not Sheets("Surcharges Calculate (PLC)").Columns("M:M").Find("HAZ") Is Nothing Then Z = 1
If Not Sheets("Surcharges Calculate (FOB)").Columns("M:M").Find("IMO") Is Nothing Then a = 1
If Not Sheets("Surcharges Calculate (OFR)").Columns("M:M").Find("IMO") Is Nothing Then b = 1
If Not Sheets("Surcharges Calculate (PLC)").Columns("M:M").Find("IMO") Is Nothing Then c = 1

aa = x + y + Z + a + b + c

If aa = 0 Then
    
    With Sheets("FreightCalculator").Range("O4:O9").Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Sheets("FreightCalculator").Range("O4:O9").Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlEdgeTop).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlEdgeBottom).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlEdgeRight).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlInsideVertical).LineStyle = xlNone
    Sheets("FreightCalculator").Range("O4:O9").Borders(xlInsideHorizontal).LineStyle = xlNone
    Sheets("FreightCalculator").OpButYes.Visible = False
    Sheets("FreightCalculator").OpButNo.Visible = False

End If

Call FormatTable(Sheets("Named Accounts"), roNA, colNA, "NamedAccounts")
Call FormatTable(Sheets("FOB"), roFOB, colFOB, "FOB")
Call FormatTable(Sheets("PLC"), roPLC, colPLC, "PLC")
Call FormatTable(Sheets("OFR"), OF, colOFR, "OFR")

End If

Sheets("FreightCalculator").Select
Range("A10").Select

Application.ErrorCheckingOptions.BackgroundChecking = False

Sheets("FreightCalculator").ComboBox5.ListFillRange = "ORREG"
Sheets("FreightCalculator").ComboBox6.ListFillRange = "ORCTRY"
Sheets("FreightCalculator").ComboBox7.ListFillRange = "ORCTY"

lastitem:
Sheets("UNCODE").Visible = xlVeryHidden
Sheets("Surcharges Calculate (FOB)").Visible = xlVeryHidden
Sheets("Surcharges Calculate (OFR)").Visible = xlVeryHidden
Sheets("Surcharges Calculate (PLC)").Visible = xlVeryHidden
Sheets("REF").Visible = xlVeryHidden
'Sheets("Shipco Transport").Select
Sheets("FreightCalculator").Select

Application.EnableEvents = True
Application.ScreenUpdating = True

End Sub

Sub FormatTable(ws, ro, col, t)
ws.Select
Range("A3").Select

If ro = 2 Then
ws.Visible = xlSheetVeryHidden
Else
    ws.ListObjects.Add(xlSrcRange, ws.Range(ws.Cells(2, 1), ws.Cells(ro, col)), , xlYes).Name = t
    ws.ListObjects(t).TableStyle = "TableStyleMedium2"
    
    ws.Range(ws.Cells(1, 1), ws.Cells(1, col)).EntireColumn.AutoFit
    
    Dim POLCOL As Range

    If ws.Name <> "Named Accounts" Then
    Set POLCOL = ws.Range("E3:E" & ro)
    jPOL = Application.WorksheetFunction.CountA(POLCOL)
    If jPOL = 0 Then ws.Columns("E:E").EntireColumn.Hidden = True
    Else
    Set POLCOL = ws.Range("F3:F" & ro)
    jPOL = Application.WorksheetFunction.CountA(POLCOL)
    If jPOL = 0 Then ws.Columns("F:F").EntireColumn.Hidden = True
    TY = Application.WorksheetFunction.Match("Type", ws.Rows("2:2"), 0)
    ws.Cells(1, TY).EntireColumn.Delete
    End If
    
    On Error Resume Next
    COMM = Application.WorksheetFunction.Match("Comments / Remarks", ws.Rows("2:2"), 0)
    If COMM <> "" Then ws.Cells(1, COMM).EntireColumn.ColumnWidth = 30
End If

End Sub

Attribute VB_Name = "Module_Destinations"
Sub Destinations()

Application.Calculation = xlCalculationManual

If Range("E6") = "(ALL)" Or Range("E6") = " (ALL)" Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If Range("E7") = 0 Then
MsgBox "Pls check Origin City"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

Sheets("FreightCalculator").ComboBox8.ListFillRange = ""
Sheets("FreightCalculator").ComboBox9.ListFillRange = ""
Sheets("FreightCalculator").ComboBox10.ListFillRange = ""

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

Dim CALC As Worksheet, REF As Worksheet

Set CALC = Sheets("FreightCalculator")
Set REF = Sheets("REF")

Dim str As String
str = CALC.Range("E7").Value

If str = "0" Then
Application.Calculation = xlCalculationAutomatic
CALC.Range("E7").Value = str
Exit Sub
End If

kk = REF.Range("A" & REF.Rows.Count).End(xlUp).Row

REF.Range("$A$1:$X$" & kk).AutoFilter field:=1, Criteria1:=str
REF.Range("F2:F" & kk).SpecialCells(xlCellTypeVisible).Copy REF.Range("R2")
REF.ShowAllData
REF.Range("$R$1:$R$" & kk).RemoveDuplicates Columns:=Array(1), Header:=xlYes
ORr = REF.Range("R" & REF.Rows.Count).End(xlUp).Row
REF.Range("R" & ORr + 1) = "(ALL)"
REF.Range("R1:R" & ORr + 1).Sort key1:=REF.Range("R1:R" & ORr), Order1:=xlAscending, Header:=xlYes

REF.Range("$A$1:$X$" & kk).AutoFilter field:=1, Criteria1:=str
REF.Range("F2:G" & kk).SpecialCells(xlCellTypeVisible).Copy REF.Range("T2")
REF.ShowAllData
REF.Range("$T$1:$U$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCr = REF.Range("T" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCr + 1, 21), REF.Cells(2 * OCr - 1, 21)) = REF.Range(REF.Cells(2, 21), REF.Cells(OCr, 21)).Value
REF.Range(REF.Cells(OCr + 1, 20), REF.Cells(2 * OCr - 1, 20)) = "(ALL)"
REF.Range("T" & 2 * OCr) = "(ALL)"
REF.Range("U" & 2 * OCr) = "(ALL)"
REF.Range("T1:U" & 2 * OCr).Sort key1:=REF.Range("T1:T" & 2 * OCr), Order1:=xlAscending, key2:=REF.Range("U1:U" & 2 * OCr), Order2:=xlAscending, Header:=xlYes

OCr = REF.Range("T" & REF.Rows.Count).End(xlUp).Row
ORr = REF.Range("R" & REF.Rows.Count).End(xlUp).Row

Count = 0
For i = 3 To OCr
If REF.Range("U" & i) = "USA" Then
Count = Count + 1
End If
Next

If Count = OCr - 2 Then
  
Sheets("FreightCalculator").Range("A8") = "Destination Country"
Sheets("FreightCalculator").Range("C8") = "Destination Region"

REF.Range("U2:U" & ORr) = REF.Range("R2:R" & ORr).Value
REF.Range("T3:T" & ORr) = "USA"
REF.Range("R3:R" & ORr).ClearContents
REF.Range("R3") = "USA"
REF.Range("T" & ORr + 1 & ":U" & OCr).ClearContents
REF.Range("U" & ORr + 1 & ":U" & 2 * ORr - 2) = REF.Range("U3:U" & ORr).Value
REF.Range("T" & ORr + 1 & ":T" & 2 * ORr - 2) = "(ALL)"
OCr = REF.Range("T" & REF.Rows.Count).End(xlUp).Row
REF.Range("T1:U" & 2 * OCr).Sort key1:=REF.Range("T1:T" & 2 * OCr), Order1:=xlAscending, key2:=REF.Range("U1:U" & 2 * OCr), Order2:=xlAscending, Header:=xlYes

REF.Range("$A$1:$X$" & kk).AutoFilter field:=1, Criteria1:=str
REF.Range("F2:F" & kk).SpecialCells(xlCellTypeVisible).Copy REF.Range("W2")
REF.ShowAllData
REF.Range("$A$1:$X$" & kk).AutoFilter field:=1, Criteria1:=str
REF.Range("H2:H" & kk).SpecialCells(xlCellTypeVisible).Copy REF.Range("X2")
REF.ShowAllData
REF.Range("$W$1:$X$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCyr = REF.Range("W" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCyr + 1, 24), REF.Cells(2 * OCyr - 1, 24)) = REF.Range(REF.Cells(2, 24), REF.Cells(OCyr, 24)).Value
REF.Range(REF.Cells(OCyr + 1, 23), REF.Cells(2 * OCyr - 1, 23)) = "(ALL)"
REF.Range("W" & 2 * OCyr) = "(ALL)"
REF.Range("X" & 2 * OCyr) = "(ALL)"
REF.Range("W1:X" & 2 * OCyr).Sort key1:=REF.Range("W1:W" & 2 * OCyr), Order1:=xlAscending, key2:=REF.Range("X1:X" & 2 * OCyr), Order2:=xlAscending, Header:=xlYes

Else

REF.Range("$A$1:$X$" & kk).AutoFilter field:=1, Criteria1:=str
REF.Range("G2:H" & kk).SpecialCells(xlCellTypeVisible).Copy REF.Range("W2")
REF.ShowAllData
REF.Range("$W$1:$X$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCyr = REF.Range("W" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCyr + 1, 24), REF.Cells(2 * OCyr - 1, 24)) = REF.Range(REF.Cells(2, 24), REF.Cells(OCyr, 24)).Value
REF.Range(REF.Cells(OCyr + 1, 23), REF.Cells(2 * OCyr - 1, 23)) = "(ALL)"
REF.Range("W" & 2 * OCyr) = "(ALL)"
REF.Range("X" & 2 * OCyr) = "(ALL)"
REF.Range("W1:X" & 2 * OCyr).Sort key1:=REF.Range("W1:W" & 2 * OCyr), Order1:=xlAscending, key2:=REF.Range("X1:X" & 2 * OCyr), Order2:=xlAscending, Header:=xlYes

End If

Sheets("FreightCalculator").Select

Call getUNCODE
Call HideAll


Application.Calculation = xlCalculationAutomatic

End Sub


Attribute VB_Name = "Module_DummyOpen"
Private Sub Workbook_Open()

Call MASTER

End Sub
Attribute VB_Name = "Module_FOBS2"
Sub FOBs2()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long
Dim j As Long
Dim k As Long
Dim Data As Range
Dim CriRng As Range
Dim str As String
Dim CopyTo As Range

Dim OFR As Worksheet, FOB As Worksheet, PLC As Worksheet, PLCFinal As Worksheet, SURC As Worksheet, REF As Worksheet, wsName As Worksheet, FOBFinal As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set wsOFRFinal = Sheets("OFR")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set PLC = Sheets("Surcharges Calculate (PLC)")
Set FOBFinal = Sheets("FOB")
Set REF = Sheets("REF")
Set wsName = Sheets("Named Accounts")

If Not FOB.Rows("2:2").Find("VIA") Is Nothing Then
VIA = Application.WorksheetFunction.Match("VIA", FOB.Rows("2:2"), 0)
Else
MsgBox "OFR has not been processed"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If FOB.AutoFilterMode Then FOB.Range("A1").AutoFilter
FOB.Range(FOB.Cells(2, 1), FOB.Cells(2, VIA)).AutoFilter

NACA = Application.WorksheetFunction.Match("Named Account", FOB.Rows("2:2"), 0)

lr = FOB.Cells(FOB.Rows.Count, 1).End(xlUp).Row

If lr = 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

OCFSP = Application.WorksheetFunction.Match("ORIG", FOB.Rows("2:2"), 0)
DESTINP = Application.WorksheetFunction.Match("DESTIN", FOB.Rows("2:2"), 0)
VIAP = Application.WorksheetFunction.Match("VIA", FOB.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", FOB.Rows("2:2"), 0)
CGCOP = Application.WorksheetFunction.Match("Charge Code", FOB.Rows("2:2"), 0)
CURRP = Application.WorksheetFunction.Match("Currency", FOB.Rows("2:2"), 0)
RATEP = Application.WorksheetFunction.Match("Rate", FOB.Rows("2:2"), 0)
BASIP = Application.WorksheetFunction.Match("Rate Basis", FOB.Rows("2:2"), 0)
MAXP = Application.WorksheetFunction.Match("Maximum", FOB.Rows("2:2"), 0)
MINP = Application.WorksheetFunction.Match("Minimum", FOB.Rows("2:2"), 0)
EFFP = Application.WorksheetFunction.Match("Effective Date", FOB.Rows("2:2"), 0)
EXPP = Application.WorksheetFunction.Match("Expiration Date", FOB.Rows("2:2"), 0)
COMMP = Application.WorksheetFunction.Match("Comments", FOB.Rows("2:2"), 0)
ASPP = Application.WorksheetFunction.Match("Aspect", FOB.Rows("2:2"), 0)

FOB.Range(FOB.Cells(2, 1), FOB.Cells(lr, VIA)).AutoFilter field:=NACA, Criteria1:=""

lr2 = FOB.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 > 2 Then
 
OCFS = Application.WorksheetFunction.Match("Origin UN Code", FOBFinal.Rows("2:2"), 0)
RVIA = Application.WorksheetFunction.Match("Routing Via", FOBFinal.Rows("2:2"), 0)
DPOL = Application.WorksheetFunction.Match("POL", FOBFinal.Rows("2:2"), 0)
FCFS = Application.WorksheetFunction.Match("Destination UN Code", FOBFinal.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", FOBFinal.Rows("2:2"), 0)
TheRate = Application.WorksheetFunction.Match("Amount", FOBFinal.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("Rate Basis", FOBFinal.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", FOBFinal.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", FOBFinal.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", FOBFinal.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", FOBFinal.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", FOBFinal.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", FOBFinal.Rows("2:2"), 0)

FOB.Range(FOB.Cells(3, OCFSP), FOB.Cells(lr, OCFSP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, OCFS), FOBFinal.Cells(lr2 + 1, OCFS)).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, DESTINP), FOB.Cells(lr, DESTINP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, FCFS), FOBFinal.Cells(lr2 + 1, FCFS)).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, RATEP), FOB.Cells(lr, RATEP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, TheRate), FOBFinal.Cells(lr2 + 1, TheRate)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, BASIP), FOB.Cells(lr, BASIP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, RatB), FOBFinal.Cells(lr2 + 1, RatB)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, MINP), FOB.Cells(lr, MINP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, MINR), FOBFinal.Cells(lr2 + 1, MINR)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, MAXP), FOB.Cells(lr, MAXP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, MAXR), FOBFinal.Cells(lr2 + 1, MAXR)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, COMMP), FOB.Cells(lr, COMMP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, COMM), FOBFinal.Cells(lr2 + 1, COMM)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, EFFP), FOB.Cells(lr, EXPP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, EFFD), FOBFinal.Cells(lr2 + 1, EXPD)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, VIAP), FOB.Cells(lr, VIAP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, RVIA), FOBFinal.Cells(lr2 + 1, RVIA)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, CGCOP), FOB.Cells(lr, CGCOP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, CGCO), FOBFinal.Cells(lr2 + 1, CGCO)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, CURRP), FOB.Cells(lr, CURRP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, CURR), FOBFinal.Cells(lr2 + 1, CURR)).PasteSpecial xlPasteAll
  
FOB.Range(FOB.Cells(3, POL), FOB.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, DPOL), FOBFinal.Cells(lr2 + 1, DPOL)).PasteSpecial xlPasteAll

j = FOBFinal.Cells(FOBFinal.Rows.Count, 1).End(xlUp).Row

Dim cols As Variant

If Not FOB.Range(FOB.Cells(3, ASPP), FOB.Cells(lr, ASPP)).Find("TPB") Is Nothing Then

Sheets("FOB").Columns("Q:Q").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Sheets("FOB").Range("Q2") = "Pay To"
ASP = Application.WorksheetFunction.Match("Pay To", FOBFinal.Rows("2:2"), 0)

FOB.Range(FOB.Cells(3, ASPP), FOB.Cells(lr, ASPP)).SpecialCells(xlCellTypeVisible).Copy
FOBFinal.Range(FOBFinal.Cells(3, ASP), FOBFinal.Cells(lr2, ASP)).PasteSpecial xlPasteAll

FOBCOL = FOBFinal.Cells(2, FOBFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To FOBCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1

Next i

Application.DisplayAlerts = False
FOBFinal.Range(FOBFinal.Cells(2, 1), FOBFinal.Cells(j, FOBCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True
FOBFinal.Range(FOBFinal.Cells(3, ASP), FOBFinal.Cells(j, ASP)).Replace What:="TPB", Replacement:="CFS", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
FOBFinal.Range(FOBFinal.Cells(3, ASP), FOBFinal.Cells(j, ASP)).Replace What:="", Replacement:="SHIPCO", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False

Else

FOBCOL = FOBFinal.Cells(2, FOBFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To FOBCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
FOBFinal.Range(FOBFinal.Cells(2, 1), FOBFinal.Cells(j, FOBCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

End If

ORUN1 = FOBFinal.Cells(3, OCFS).Address(False, False)
DESUN1 = FOBFinal.Cells(3, FCFS).Address(False, False)
CGCO1 = FOBFinal.Cells(3, CGCO).Address(False, False)

FOBFinal.Range(FOBFinal.Cells(3, OCFS + 1), FOBFinal.Cells(j, OCFS + 1)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, OCFS + 2), FOBFinal.Cells(j, OCFS + 2)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, OCFS + 3), FOBFinal.Cells(j, OCFS + 3)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, FCFS + 1), FOBFinal.Cells(j, FCFS + 1)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, FCFS + 2), FOBFinal.Cells(j, FCFS + 2)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, FCFS + 3), FOBFinal.Cells(j, FCFS + 3)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
FOBFinal.Range(FOBFinal.Cells(3, CGCO + 1), FOBFinal.Cells(j, CGCO + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"

FOBFinal.Range(FOBFinal.Cells(3, OCFS + 1), FOBFinal.Cells(j, CGCO + 1)).Value = FOBFinal.Range(FOBFinal.Cells(3, OCFS + 1), FOBFinal.Cells(j, CGCO + 1)).Value

FOBFinal.Cells(1, EFFD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"
FOBFinal.Cells(1, EXPD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"

roFOB = FOBFinal.Cells(FOBFinal.Rows.Count, 1).End(xlUp).Row
coFOB = FOBFinal.Cells(2, FOBFinal.Columns.Count).End(xlToLeft).Column

Application.Calculation = xlCalculationAutomatic

OCFS = Application.WorksheetFunction.Match("Origin UN Code", FOBFinal.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", FOBFinal.Rows("2:2"), 0)
j = FOBFinal.Range("A" & Rows.Count).End(xlUp).Row

FOBFinal.Range(FOBFinal.Cells(3, OCFS), FOBFinal.Cells(j, CGCO + 1)).Value = FOBFinal.Range(FOBFinal.Cells(3, OCFS), FOBFinal.Cells(j, CGCO + 1)).Value

If roFOB > 2 Then
RVIA = Application.WorksheetFunction.Match("Routing Via", FOBFinal.Rows("2:2"), 0)
FOBFinal.Range(FOBFinal.Cells(3, RVIA), FOBFinal.Cells(roFOB, RVIA)).Replace What:="0", Replacement:="", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
FOBFinal.Range(FOBFinal.Cells(3, 1), FOBFinal.Cells(roFOB, coFOB)).Sort key1:=FOBFinal.Range(FOBFinal.Cells(3, OCFS), FOBFinal.Cells(roFOB, OCFS)), Order1:=xlAscending, key2:=FOBFinal.Range(FOBFinal.Cells(3, FCFS), FOBFinal.Cells(roFOB, FCFS)), Order2:=xlAscending, Header:=xlNo
End If


End If

'Named Accounts

Application.Calculation = xlCalculationManual

FOB.ShowAllData
FOB.Range(FOB.Cells(2, 1), FOB.Cells(lr, VIA)).AutoFilter field:=NACA, Criteria1:="<>"

lr2 = FOB.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 > 2 Then
 
roNA = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row + 1
 
NAC = Application.WorksheetFunction.Match("Named Account", wsName.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
RVIA = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
NPOL = Application.WorksheetFunction.Match("POL", wsName.Rows("2:2"), 0)
FCFS = Application.WorksheetFunction.Match("Destination UN Code", wsName.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)
TheRate = Application.WorksheetFunction.Match("Amount", wsName.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("Rate Basis", wsName.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsName.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsName.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", wsName.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsName.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsName.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsName.Rows("2:2"), 0)
TYO = Application.WorksheetFunction.Match("Type", wsName.Rows("2:2"), 0)

FOB.Range(FOB.Cells(3, NACA), FOB.Cells(lr, NACA)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, NAC), wsName.Cells(lr2 + 1 + roNA, NAC)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, OCFSP), FOB.Cells(lr, OCFSP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(lr2 + 1 + roNA, OCFS)).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, DESTINP), FOB.Cells(lr, DESTINP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, FCFS), wsName.Cells(lr2 + 1 + roNA, FCFS)).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, RATEP), FOB.Cells(lr, RATEP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, TheRate), wsName.Cells(lr2 + 1 + roNA, TheRate)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, BASIP), FOB.Cells(lr, BASIP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, RatB), wsName.Cells(lr2 + 1 + roNA, RatB)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, MINP), FOB.Cells(lr, MINP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, MINR), wsName.Cells(lr2 + 1 + roNA, MINR)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, MAXP), FOB.Cells(lr, MAXP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, MAXR), wsName.Cells(lr2 + 1 + roNA, MAXR)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, COMMP), FOB.Cells(lr, COMMP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, COMM), wsName.Cells(lr2 + 1 + roNA, COMM)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, EFFP), FOB.Cells(lr, EXPP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, EFFD), wsName.Cells(lr2 + 1 + roNA, EXPD)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, VIAP), FOB.Cells(lr, VIAP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, RVIA), wsName.Cells(lr2 + 1 + roNA, RVIA)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, CGCOP), FOB.Cells(lr, CGCOP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, CGCO), wsName.Cells(lr2 + 1 + roNA, CGCO)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, CURRP), FOB.Cells(lr, CURRP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, CURR), wsName.Cells(lr2 + 1 + roNA, CURR)).PasteSpecial xlPasteAll

FOB.Range(FOB.Cells(3, POL), FOB.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, NPOL), wsName.Cells(lr2 + 1 + roNA, NPOL)).PasteSpecial xlPasteAll

wsName.Range(wsName.Cells(roNA, TYO), wsName.Cells(lr2 + 1 + roNA, TYO)) = "FOB"
  
j = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row

If Not FOB.Range(FOB.Cells(3, ASPP), FOB.Cells(lr2, ASPP)).Find("TPB") Is Nothing Then

wsName.Columns("Q:Q").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
wsName.Range("Q2") = "Pay To"
ASP = Application.WorksheetFunction.Match("Pay To", wsName.Rows("2:2"), 0)

FOB.Range(FOB.Cells(3, NACA), FOB.Cells(lr, NACA)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, NAC), wsName.Cells(lr2 + 1 + roNA, NAC)).PasteSpecial xlPasteAll

FOBCOL = FOBFinal.Cells(2, FOBFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To FOBCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
FOBFinal.Range(FOBFinal.Cells(2, 1), FOBFinal.Cells(j, FOBCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

wsName.Range(wsName.Cells(3, ASP), wsName.Cells(j, ASP)).Replace What:="TPB", Replacement:="CFS", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
wsName.Range(wsName.Cells(3, ASP), wsName.Cells(j, ASP)).Replace What:="", Replacement:="SHIPCO", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False

Else

FOBCOL = FOBFinal.Cells(2, FOBFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To FOBCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
FOBFinal.Range(FOBFinal.Cells(2, 1), FOBFinal.Cells(j, FOBCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

End If

ORUN1 = wsName.Cells(roNA, OCFS).Address(False, False)
DESUN1 = wsName.Cells(roNA, FCFS).Address(False, False)
CGCO1 = wsName.Cells(roNA, CGCO).Address(False, False)


If j < 3 Then
wsName.Visible = xlSheetVeryHidden
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, OCFS + 1)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
wsName.Range(wsName.Cells(roNA, OCFS + 2), wsName.Cells(j, OCFS + 2)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(roNA, OCFS + 3), wsName.Cells(j, OCFS + 3)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 1), wsName.Cells(j, FCFS + 1)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 2), wsName.Cells(j, FCFS + 2)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 3), wsName.Cells(j, FCFS + 3)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(roNA, CGCO + 1), wsName.Cells(j, CGCO + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"

wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, CGCO + 1)).Value = wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, CGCO + 1)).Value

wsName.Cells(1, EFFD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"
wsName.Cells(1, EXPD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"

roFOB = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row
coFOB = wsName.Cells(2, wsName.Columns.Count).End(xlToLeft).Column

Application.Calculation = xlCalculationAutomatic

OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)
j = wsName.Range("A" & Rows.Count).End(xlUp).Row
'roNA = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row + 1
wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(j, CGCO + 1)).Value = wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(j, CGCO + 1)).Value

If roFOB = 2 Then
wsName.Visible = xlVeryHidden
Else
RVIA = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
wsName.Range(wsName.Cells(roNA, RVIA), wsName.Cells(roFOB, RVIA)).Replace What:="0", Replacement:="", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
wsName.Range(wsName.Cells(roNA, 1), wsName.Cells(roFOB, coFOB)).Sort key1:=wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(roFOB, OCFS)), Order1:=xlAscending, key2:=wsName.Range(wsName.Cells(roNA, FCFS), wsName.Cells(roFOB, FCFS)), Order2:=xlAscending, Header:=xlNo
End If

'delete Type COlumn
'wsName.Cells(1, TYO).EntireColumn.Delete

End If

Application.EnableEvents = True

End Sub



Attribute VB_Name = "Module_FOBs"
Sub FOBs()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

Dim i As Long
Dim j As Long
Dim k As Long
Dim Data As Range
Dim CriRng As Range
Dim str As String
Dim CopyTo As Range

Dim OFR As Worksheet, FOB As Worksheet, SURC As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set wsOFRFinal = Sheets("OFR")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set SURC = Sheets("FOB")

If Not FOB.Rows("2:2").Find("VIA") Is Nothing Then
VIA = Application.WorksheetFunction.Match("VIA", FOB.Rows("2:2"), 0)
Else
MsgBox "OFR has not been processed"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If FOB.AutoFilterMode Then FOB.Range("A1").AutoFilter
FOB.Range(FOB.Cells(2, 1), FOB.Cells(2, VIA)).AutoFilter

roSUC = SURC.Cells(SURC.Rows.Count, 1).End(xlUp).Row + 1

k = FOB.Range("A" & FOB.Rows.Count).End(xlUp).Row

If k > 2 Then

FOB.Range(FOB.Cells(2, VIA + 4), FOB.Cells(2, VIA + 14)) = Array("Charge Code", "Rate", "Rate Basis", "Minimum", "Maximum", "Effective Date", "Expiration Date", "Comments", "ORIG", "DESTIN", "VIA")
    
CGCOP = Application.WorksheetFunction.Match("Charge Code", FOB.Rows("2:2"), 0)

FOB.Range(FOB.Cells(2, VIA + 18), FOB.Cells(k, VIA + 18)) = FOB.Range(FOB.Cells(2, CGCOP), FOB.Cells(k, CGCOP)).Value
FOB.Range(FOB.Cells(2, VIA + 18), FOB.Cells(k, VIA + 18)).RemoveDuplicates Columns:=1, Header:=xlYes
   
Set CopyTo = FOB.Cells(2, VIA + 4).CurrentRegion
    Set CriRng = FOB.Cells(2, VIA + 18).CurrentRegion
    
lr = FOB.Cells(FOB.Rows.Count, 1).End(xlUp).Row

Set Data1 = FOB.Range("A2").Resize(lr - 2, VIA)
Data1.AdvancedFilter xlFilterCopy, CriRng, CopyTo, True
 
lr2 = FOB.Cells(FOB.Rows.Count, VIA + 4).End(xlUp).Row

OCFS = Application.WorksheetFunction.Match("Origin UN Code", SURC.Rows("2:2"), 0)
RVIA = Application.WorksheetFunction.Match("Routing Via", SURC.Rows("2:2"), 0)
FCFS = Application.WorksheetFunction.Match("Destination UN Code", SURC.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", SURC.Rows("2:2"), 0)
TheRate = Application.WorksheetFunction.Match("Amount", SURC.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("Rate Basis", SURC.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", SURC.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", SURC.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", SURC.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", SURC.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments", SURC.Rows("2:2"), 0)
 
SURC.Range(SURC.Cells(roSUC, OCFS), SURC.Cells(roSUC + lr2 + 1, OCFS)) = FOB.Range(FOB.Cells(3, VIA + 12), FOB.Cells(roSUC + lr2, VIA + 12)).Value
SURC.Range(SURC.Cells(roSUC, FCFS), SURC.Cells(roSUC + lr2 + 1, FCFS)) = FOB.Range(FOB.Cells(3, VIA + 13), FOB.Cells(roSUC + lr2, VIA + 13)).Value
SURC.Range(SURC.Cells(roSUC, TheRate), SURC.Cells(roSUC + lr2 + 1, TheRate)) = FOB.Range(FOB.Cells(3, VIA + 5), FOB.Cells(roSUC + lr2, VIA + 5)).Value
SURC.Range(SURC.Cells(roSUC, RatB), SURC.Cells(roSUC + lr2 + 1, RatB)) = FOB.Range(FOB.Cells(3, VIA + 6), FOB.Cells(roSUC + lr2, VIA + 6)).Value
SURC.Range(SURC.Cells(roSUC, MINR), SURC.Cells(roSUC + lr2 + 1, MINR)) = FOB.Range(FOB.Cells(3, VIA + 7), FOB.Cells(roSUC + lr2, VIA + 7)).Value
SURC.Range(SURC.Cells(roSUC, MAXR), SURC.Cells(roSUC + lr2 + 1, MAXR)) = FOB.Range(FOB.Cells(3, VIA + 8), FOB.Cells(roSUC + lr2, VIA + 8)).Value
SURC.Range(SURC.Cells(roSUC, COMM), SURC.Cells(roSUC + lr2 + 1, COMM)) = FOB.Range(FOB.Cells(3, VIA + 11), FOB.Cells(roSUC + lr2, VIA + 11)).Value
SURC.Range(SURC.Cells(roSUC, EFFD), SURC.Cells(roSUC + lr2 + 1, EXPD)) = FOB.Range(FOB.Cells(3, VIA + 9), FOB.Cells(roSUC + lr2, VIA + 10)).Value
SURC.Range(SURC.Cells(roSUC, RVIA), SURC.Cells(roSUC + lr2 + 1, RVIA)) = FOB.Range(FOB.Cells(3, VIA + 14), FOB.Cells(roSUC + lr2, VIA + 14)).Value
SURC.Range(SURC.Cells(roSUC, CGCO), SURC.Cells(roSUC + lr2 + 1, CGCO)) = FOB.Range(FOB.Cells(3, VIA + 4), FOB.Cells(roSUC + lr2, VIA + 4)).Value
       
j = SURC.Range("A" & Rows.Count).End(xlUp).Row

ORUN1 = SURC.Cells(roSUC, OCFS).Address(False, False)
DESUN1 = SURC.Cells(roSUC, FCFS).Address(False, False)
CGCO1 = SURC.Cells(roSUC, CGCO).Address(False, False)

If j < roSUC Then Exit Sub

SURC.Range(SURC.Cells(roSUC, OCFS + 1), SURC.Cells(j, OCFS + 1)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
SURC.Range(SURC.Cells(roSUC, OCFS + 2), SURC.Cells(j, OCFS + 2)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
SURC.Range(SURC.Cells(roSUC, OCFS + 3), SURC.Cells(j, OCFS + 3)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
SURC.Range(SURC.Cells(roSUC, FCFS + 1), SURC.Cells(j, FCFS + 1)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
SURC.Range(SURC.Cells(roSUC, FCFS + 2), SURC.Cells(j, FCFS + 2)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
SURC.Range(SURC.Cells(roSUC, FCFS + 3), SURC.Cells(j, FCFS + 3)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
SURC.Range(SURC.Cells(roSUC, CGCO + 1), SURC.Cells(j, CGCO + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"

Application.Calculation = xlCalculationAutomatic

SURC.Range(SURC.Cells(roSUC, OCFS), SURC.Cells(j, CGCO + 1)).Value = SURC.Range(SURC.Cells(roSUC, OCFS), SURC.Cells(j, CGCO + 1)).Value

'SURC.Cells(1, EFFD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"
'SURC.Cells(1, EXPD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"

roFOB = SURC.Cells(SURC.Rows.Count, 1).End(xlUp).Row
coFOB = SURC.Cells(3, SURC.Columns.Count).End(xlToLeft).Column

SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).Sort key1:=SURC.Range(SURC.Cells(roSUC, OCFS), SURC.Cells(roFOB, OCFS)), Order1:=xlAscending, key2:=SURC.Range(SURC.Cells(roSUC, FCFS), SURC.Cells(roFOB, FCFS)), Order2:=xlAscending, Header:=xlNo

SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions.Add Type:=xlExpression, Formula1:="=MOD(ROW(),2)=1"
SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions(SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions.Count).SetFirstPriority
    With SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions(1).Borders(xlTop)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions(1).Borders(xlBottom)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.799981688894314
    End With
SURC.Range(SURC.Cells(roSUC, 1), SURC.Cells(roFOB, coFOB)).FormatConditions(1).StopIfTrue = False

SURC.Columns("A:T").AutoFit
SURC.Cells(1, COMM).EntireColumn.ColumnWidth = 30

End If

roFOB = SURC.Cells(SURC.Rows.Count, 1).End(xlUp).Row

If roFOB = 2 Then
SURC.Visible = xlSheetVeryHidden
Else
RVIA = Application.WorksheetFunction.Match("Routing Via", SURC.Rows("2:2"), 0)
SURC.Range(SURC.Cells(roSUC, RVIA), SURC.Cells(roFOB, RVIA)).Replace What:="0", Replacement:="", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
End If

End Sub

Attribute VB_Name = "Module_FirstMacro"
Public FMTColl As New Collection

Sub FirstMacro()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long, j As Long, k As Long, Data As Range, CriRng As Range, str As String, CopyTo As Range
Dim wsOFR As Worksheet, wsOFRFinal As Worksheet, wsName As Worksheet
Set wsOFR = Sheets("Surcharges Calculate (OFR)")
Set wsOFRFinal = Sheets("OFR")
Set wsName = Sheets("Named Accounts")

If wsOFR.AutoFilterMode Then wsOFR.Range("A1").AutoFilter
wsOFR.Range("A2:X2").AutoFilter
k = wsOFR.Range("A" & wsOFR.Rows.Count).End(xlUp).Row

If k < 3 Then
    MsgBox "There is no OFR data"
    Application.EnableEvents = True
    Exit Sub
End If

col = wsOFR.Cells(2, wsOFR.Columns.Count).End(xlToLeft).Column

wsOFR.Range(wsOFR.Cells(2, col + 4), wsOFR.Cells(2, col + 18)) = Array("Named Account", "Place Of Receipt", "Port Of Loading", "DESTIN", "Currency", "Rate", "Rate Basis", "Minimum", "Maximum", "From", "To", "Effective Date", "Expiration Date", "Comments", "Prepaid/ Collect")
wsOFR.Cells(2, col + 18).Resize(2.1).Value = Application.Transpose(Array("Charge Code", "OFR"))
    
Set CopyTo = wsOFR.Cells(2, col + 4).CurrentRegion
    Set CriRng = wsOFR.Cells(2, col + 18).CurrentRegion
    
lr = wsOFR.Cells(wsOFR.Rows.Count, 1).End(xlUp).Row

CGCO = Application.WorksheetFunction.Match("Charge Code", wsOFR.Rows("2:2"), 0)
POD = Application.WorksheetFunction.Match("Destination CFS", wsOFR.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", wsOFR.Rows("2:2"), 0)
Disc = Application.WorksheetFunction.Match("Port Of Discharge", wsOFR.Rows("2:2"), 0)

CGCO1 = wsOFR.Cells(3, CGCO).Address(False, False)
POD1 = wsOFR.Cells(3, POD).Address(False, False)
DECON1 = wsOFR.Cells(3, Decon).Address(False, False)
Disc1 = wsOFR.Cells(3, Disc).Address(False, False)

wsOFR.Range(wsOFR.Cells(3, col + 1), wsOFR.Cells(lr, col + 1)) = "=IF(OR(" & CGCO1 & "=""OFR""," & CGCO1 & "=""HAZ""," & CGCO1 & "=""IMO""),IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))," & POD1 & ")"

wsOFR.Cells(2, col + 1).Value = "DESTIN"

    Set Data1 = wsOFR.Range("A2").Resize(lr - 2, col + 1)
    
    Data1.AdvancedFilter xlFilterCopy, CriRng, CopyTo, True
    
    lr2 = wsOFR.Cells(wsOFR.Rows.Count, col + 4).End(xlUp).Row
    
wsOFR.Range(wsOFR.Cells(3, col + 1), wsOFR.Cells(lr, col + 1)) = "=IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))"

If wsOFR.AutoFilterMode Then wsOFR.Range("A1").AutoFilter

wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 17)).AutoFilter
wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 17)).AutoFilter field:=col + 4, Criteria1:=""
wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 17)).AutoFilter field:=col + 5, Criteria1:="<>"

lr2 = wsOFR.AutoFilter.Range.Columns(col + 5).SpecialCells(xlCellTypeVisible).Cells.Count - 1

wsOFRFinal.Select

OREG = Application.WorksheetFunction.Match("Origin Region", wsOFRFinal.Rows("2:2"), 0)
OCTR = Application.WorksheetFunction.Match("Origin Country", wsOFRFinal.Rows("2:2"), 0)
OCTY = Application.WorksheetFunction.Match("Origin City", wsOFRFinal.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsOFRFinal.Rows("2:2"), 0)
DesR = Application.WorksheetFunction.Match("Destination Region", wsOFRFinal.Rows("2:2"), 0)
DesC = Application.WorksheetFunction.Match("Destination Country", wsOFRFinal.Rows("2:2"), 0)
DesCy = Application.WorksheetFunction.Match("Destination City", wsOFRFinal.Rows("2:2"), 0)
DesUN = Application.WorksheetFunction.Match("Destination UN Code", wsOFRFinal.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsOFRFinal.Rows("2:2"), 0)
OFRR = Application.WorksheetFunction.Match("OFR", wsOFRFinal.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("RATE BASIS", wsOFRFinal.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsOFRFinal.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsOFRFinal.Rows("2:2"), 0)
FromR = Application.WorksheetFunction.Match("FROM CBM", wsOFRFinal.Rows("2:2"), 0)
TOR = Application.WorksheetFunction.Match("TO CBM", wsOFRFinal.Rows("2:2"), 0)
Rout = Application.WorksheetFunction.Match("Routing Via", wsOFRFinal.Rows("2:2"), 0)
coll = Application.WorksheetFunction.Match("Collect y/n", wsOFRFinal.Rows("2:2"), 0)
Vald = Application.WorksheetFunction.Match("Effective Date", wsOFRFinal.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsOFRFinal.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsOFRFinal.Rows("2:2"), 0)
  
wsOFR.Range(wsOFR.Cells(3, col + 5), wsOFR.Cells(lr, col + 5)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, OCFS), wsOFRFinal.Cells(lr2, OCFS)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 6), wsOFR.Cells(lr, col + 6)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, Rout), wsOFRFinal.Cells(lr2, Rout)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 7), wsOFR.Cells(lr, col + 7)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesUN), wsOFRFinal.Cells(lr2, DesUN)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 8), wsOFR.Cells(lr, col + 8)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, CURR), wsOFRFinal.Cells(lr2, CURR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 9), wsOFR.Cells(lr, col + 9)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, OFRR), wsOFRFinal.Cells(lr2, OFRR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 10), wsOFR.Cells(lr, col + 10)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, RatB), wsOFRFinal.Cells(lr2, RatB)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 11), wsOFR.Cells(lr, col + 11)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, MINR), wsOFRFinal.Cells(lr2, MINR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 12), wsOFR.Cells(lr, col + 12)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, MAXR), wsOFRFinal.Cells(lr2, MAXR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 13), wsOFR.Cells(lr, col + 13)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, FromR), wsOFRFinal.Cells(lr2, FromR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 14), wsOFR.Cells(lr, col + 14)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, TOR), wsOFRFinal.Cells(lr2, TOR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 15), wsOFR.Cells(lr, col + 15)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, Vald), wsOFRFinal.Cells(lr2, Vald)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 16), wsOFR.Cells(lr, col + 16)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, EXPD), wsOFRFinal.Cells(lr2, EXPD)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 17), wsOFR.Cells(lr, col + 17)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, COMM), wsOFRFinal.Cells(lr2, COMM)).PasteSpecial xlPasteAll
       
    OCFS1 = wsOFRFinal.Cells(3, OCFS).Address(False, False)
    DESUN1 = wsOFRFinal.Cells(3, DesUN).Address(False, False)

j = wsOFRFinal.Range("A" & Rows.Count).End(xlUp).Row

If j < 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If


wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="C", Replacement:="YES", LookAt:=xlWhole
wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="", Replacement:="YES", LookAt:=xlWhole
wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="P", Replacement:="NO", LookAt:=xlWhole

wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, OCTY)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTR), wsOFRFinal.Cells(j, OCTR)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, OREG), wsOFRFinal.Cells(j, OREG)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,4,0),"""")"

wsOFRFinal.Range(wsOFRFinal.Cells(3, DesCy), wsOFRFinal.Cells(j, DesCy)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesC), wsOFRFinal.Cells(j, DesC)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesR), wsOFRFinal.Cells(j, DesR)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"


wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, DesR)).Value = wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, DesR)).Value

roOFR = wsOFRFinal.Cells(wsOFRFinal.Rows.Count, 1).End(xlUp).Row
coOFR = wsOFRFinal.Cells(2, wsOFRFinal.Columns.Count).End(xlToLeft).Column

wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions.Add Type:=xlExpression, Formula1:="=MOD(ROW(),2)=1"
wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions(wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions.Count).SetFirstPriority
    With wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions(1).Borders(xlTop)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions(1).Borders(xlBottom)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.799981688894314
    End With
wsOFRFinal.Range(wsOFRFinal.Cells(3, 1), wsOFRFinal.Cells(roOFR, coOFR)).FormatConditions(1).StopIfTrue = False

wsOFRFinal.Range(wsOFRFinal.Cells(2, 1), wsOFRFinal.Cells(roOFR, coOFR)).Sort key1:=wsOFRFinal.Range(wsOFRFinal.Cells(2, OCFS), wsOFRFinal.Cells(roOFR, OCFS)), Order1:=xlAscending, key2:=wsOFRFinal.Range(wsOFRFinal.Cells(2, DesUN), wsOFRFinal.Cells(roOFR, DesUN)), Order2:=xlAscending, key3:=wsOFRFinal.Range(wsOFRFinal.Cells(2, TOR), wsOFRFinal.Cells(roOFR, TOR)), Order3:=xlAscending, Header:=xlYes

Application.Calculation = xlCalculationAutomatic


wsOFRFinal.Columns("A:V").AutoFit

wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 17)).AutoFilter field:=3, Criteria1:="<>"
lr2 = wsOFR.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 > 2 Then

NAC = Application.WorksheetFunction.Match("Named Account", wsName.Rows("2:2"), 0)
OREG = Application.WorksheetFunction.Match("Origin Region", wsName.Rows("2:2"), 0)
OCTR = Application.WorksheetFunction.Match("Origin Country", wsName.Rows("2:2"), 0)
OCTY = Application.WorksheetFunction.Match("Origin City", wsName.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
DesR = Application.WorksheetFunction.Match("Destination Region", wsName.Rows("2:2"), 0)
DesC = Application.WorksheetFunction.Match("Destination Country", wsName.Rows("2:2"), 0)
DesCy = Application.WorksheetFunction.Match("Destination City", wsName.Rows("2:2"), 0)
DesUN = Application.WorksheetFunction.Match("Destination UN Code", wsName.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsName.Rows("2:2"), 0)
OFRR = Application.WorksheetFunction.Match("Amount", wsName.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("RATE BASIS", wsName.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsName.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsName.Rows("2:2"), 0)
FromR = Application.WorksheetFunction.Match("FROM CBM", wsName.Rows("2:2"), 0)
TOR = Application.WorksheetFunction.Match("TO CBM", wsName.Rows("2:2"), 0)
Rout = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
coll = Application.WorksheetFunction.Match("Collect y/n", wsName.Rows("2:2"), 0)
Vald = Application.WorksheetFunction.Match("Effective Date", wsName.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsName.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsName.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)

wsOFR.Range(wsOFR.Cells(3, col + 4), wsOFR.Cells(lr, col + 4)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, NAC), wsName.Cells(lr2, NAC)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 5), wsOFR.Cells(lr, col + 5)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, OCFS), wsName.Cells(lr2, OCFS)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 6), wsOFR.Cells(lr, col + 6)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, Rout), wsName.Cells(lr2, Rout)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 7), wsOFR.Cells(lr, col + 7)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, DesUN), wsName.Cells(lr2, DesUN)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 8), wsOFR.Cells(lr, col + 8)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, CURR), wsName.Cells(lr2, CURR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 9), wsOFR.Cells(lr, col + 9)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, OFRR), wsName.Cells(lr2, OFRR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 10), wsOFR.Cells(lr, col + 10)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, RatB), wsName.Cells(lr2, RatB)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 11), wsOFR.Cells(lr, col + 11)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, MINR), wsName.Cells(lr2, MINR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 12), wsOFR.Cells(lr, col + 12)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, MAXR), wsName.Cells(lr2, MAXR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 13), wsOFR.Cells(lr, col + 13)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, FromR), wsName.Cells(lr2, FromR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 14), wsOFR.Cells(lr, col + 14)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, TOR), wsName.Cells(lr2, TOR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 15), wsOFR.Cells(lr, col + 15)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, Vald), wsName.Cells(lr2, Vald)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 16), wsOFR.Cells(lr, col + 16)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, EXPD), wsName.Cells(lr2, EXPD)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, col + 17), wsOFR.Cells(lr, col + 17)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, COMM), wsName.Cells(lr2, COMM)).PasteSpecial xlPasteAll
    OCFS1 = wsName.Cells(3, OCFS).Address(False, False)
    DESUN1 = wsName.Cells(3, DesUN).Address(False, False)

j = wsName.Range("A" & Rows.Count).End(xlUp).Row

If j < 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If


wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="C", Replacement:="YES", LookAt:=xlWhole
wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="", Replacement:="YES", LookAt:=xlWhole
wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="P", Replacement:="NO", LookAt:=xlWhole

wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, OCTY)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(3, OCTR), wsName.Cells(j, OCTR)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(3, OREG), wsName.Cells(j, OREG)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,4,0),"""")"

wsName.Range(wsName.Cells(3, DesCy), wsName.Cells(j, DesCy)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(3, DesC), wsName.Cells(j, DesC)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(3, DesR), wsName.Cells(j, DesR)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"


wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, DesR)).Value = wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, DesR)).Value

roOFR = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row
coOFR = wsName.Cells(2, wsName.Columns.Count).End(xlToLeft).Column

wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions.Add Type:=xlExpression, Formula1:="=MOD(ROW(),2)=1"
wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions(wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions.Count).SetFirstPriority
    With wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions(1).Borders(xlTop)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions(1).Borders(xlBottom)
        .LineStyle = xlContinuous
        .TintAndShade = 0
        .Weight = xlHairline
    End With
    With wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.799981688894314
    End With
wsName.Range(wsName.Cells(3, 1), wsName.Cells(roOFR, coOFR)).FormatConditions(1).StopIfTrue = False

wsName.Range(wsName.Cells(2, 1), wsName.Cells(roOFR, coOFR)).Sort key1:=wsName.Range(wsName.Cells(2, OCFS), wsName.Cells(roOFR, OCFS)), Order1:=xlAscending, key2:=wsName.Range(wsName.Cells(2, DesUN), wsName.Cells(roOFR, DesUN)), Order2:=xlAscending, key3:=wsName.Range(wsName.Cells(2, TOR), wsName.Cells(roOFR, TOR)), Order3:=xlAscending, Header:=xlYes

Application.Calculation = xlCalculationAutomatic


wsName.Columns("A:V").AutoFit

End If

Application.EnableEvents = True

End Sub

Attribute VB_Name = "Module_FirstMacro2"
Sub FirstMacro2()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long, j As Long, k As Long, Data As Range, CriRng As Range, str As String, CopyTo As Range
Dim wsOFR As Worksheet, wsOFRFinal As Worksheet, wsName As Worksheet
Set wsOFR = Sheets("Surcharges Calculate (OFR)")
Set wsOFRFinal = Sheets("OFR")
Set wsName = Sheets("Named Accounts")

If wsOFR.AutoFilterMode Then wsOFR.Range("A1").AutoFilter
wsOFR.Range("A2:X2").AutoFilter
k = wsOFR.Range("A" & wsOFR.Rows.Count).End(xlUp).Row

If k < 3 Then
    MsgBox "There is no OFR data"
    Application.EnableEvents = True
    Exit Sub
End If

col = wsOFR.Cells(2, wsOFR.Columns.Count).End(xlToLeft).Column

lr = wsOFR.Cells(wsOFR.Rows.Count, 1).End(xlUp).Row

POR = Application.WorksheetFunction.Match("Place Of Receipt", wsOFR.Rows("2:2"), 0)
NACA = Application.WorksheetFunction.Match("Named Account", wsOFR.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", wsOFR.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsOFR.Rows("2:2"), 0)
POD = Application.WorksheetFunction.Match("Destination CFS", wsOFR.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", wsOFR.Rows("2:2"), 0)
Disc = Application.WorksheetFunction.Match("Port Of Discharge", wsOFR.Rows("2:2"), 0)
CURRO = Application.WorksheetFunction.Match("Currency", wsOFR.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", wsOFR.Rows("2:2"), 0)
BAS = Application.WorksheetFunction.Match("Rate Basis", wsOFR.Rows("2:2"), 0)
MINO = Application.WorksheetFunction.Match("Minimum", wsOFR.Rows("2:2"), 0)
MAXO = Application.WorksheetFunction.Match("Maximum", wsOFR.Rows("2:2"), 0)
FROO = Application.WorksheetFunction.Match("From", wsOFR.Rows("2:2"), 0)
TOO = Application.WorksheetFunction.Match("To", wsOFR.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", wsOFR.Rows("2:2"), 0)
EXPO = Application.WorksheetFunction.Match("Expiration Date", wsOFR.Rows("2:2"), 0)
COMMO = Application.WorksheetFunction.Match("Comments", wsOFR.Rows("2:2"), 0)
PREO = Application.WorksheetFunction.Match("Prepaid/Collect", wsOFR.Rows("2:2"), 0)

CGCO1 = wsOFR.Cells(3, CGCO).Address(False, False)
POD1 = wsOFR.Cells(3, POD).Address(False, False)
DECON1 = wsOFR.Cells(3, Decon).Address(False, False)
Disc1 = wsOFR.Cells(3, Disc).Address(False, False)

wsOFR.Range(wsOFR.Cells(3, col + 1), wsOFR.Cells(lr, col + 1)) = "=IF(OR(" & CGCO1 & "=""OFR""," & CGCO1 & "=""HAZ""," & CGCO1 & "=""IMO""),IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))," & POD1 & ")"

wsOFR.Cells(2, col + 1).Value = "DESTIN"
    
wsOFR.Range(wsOFR.Cells(3, col + 1), wsOFR.Cells(lr, col + 1)) = "=IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))"

wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 1)).AutoFilter field:=NACA, Criteria1:=""
'wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 1)).AutoFilter field:=CGCO, Criteria1:=Array("OFR", "ONC", "PRE"), Operator:=xlFilterValues
'wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 1)).AutoFilter field:=col + 5, Criteria1:="<>"

lr2 = wsOFR.AutoFilter.Range.Columns(col + 5).SpecialCells(xlCellTypeVisible).Cells.Count - 1

wsOFRFinal.Select

OREG = Application.WorksheetFunction.Match("Origin Region", wsOFRFinal.Rows("2:2"), 0)
OCTR = Application.WorksheetFunction.Match("Origin Country", wsOFRFinal.Rows("2:2"), 0)
OCTY = Application.WorksheetFunction.Match("Origin City", wsOFRFinal.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsOFRFinal.Rows("2:2"), 0)
DesR = Application.WorksheetFunction.Match("Destination Region", wsOFRFinal.Rows("2:2"), 0)
DesC = Application.WorksheetFunction.Match("Destination Country", wsOFRFinal.Rows("2:2"), 0)
DesCy = Application.WorksheetFunction.Match("Destination City", wsOFRFinal.Rows("2:2"), 0)
DesUN = Application.WorksheetFunction.Match("Destination UN Code", wsOFRFinal.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsOFRFinal.Rows("2:2"), 0)
OFRR = Application.WorksheetFunction.Match("Amount", wsOFRFinal.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("RATE BASIS", wsOFRFinal.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsOFRFinal.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsOFRFinal.Rows("2:2"), 0)
FromR = Application.WorksheetFunction.Match("FROM CBM", wsOFRFinal.Rows("2:2"), 0)
TOR = Application.WorksheetFunction.Match("TO CBM", wsOFRFinal.Rows("2:2"), 0)
Rout = Application.WorksheetFunction.Match("Routing Via", wsOFRFinal.Rows("2:2"), 0)
coll = Application.WorksheetFunction.Match("Collect y/n", wsOFRFinal.Rows("2:2"), 0)
Vald = Application.WorksheetFunction.Match("Effective Date", wsOFRFinal.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsOFRFinal.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsOFRFinal.Rows("2:2"), 0)
DPOL = Application.WorksheetFunction.Match("POL", wsOFRFinal.Rows("2:2"), 0)
CHG = Application.WorksheetFunction.Match("Charge Code", wsOFRFinal.Rows("2:2"), 0)

If lr2 >= 1 Then

wsOFR.Range(wsOFR.Cells(3, POR), wsOFR.Cells(lr, POR)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, OCFS), wsOFRFinal.Cells(lr2 + 2, OCFS)).PasteSpecial xlPasteValues

wsOFR.Range(wsOFR.Cells(3, Decon), wsOFR.Cells(lr, Decon)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, Rout), wsOFRFinal.Cells(lr2 + 2, Rout)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, POD), wsOFR.Cells(lr, POD)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesUN), wsOFRFinal.Cells(lr2 + 2, DesUN)).PasteSpecial xlPasteValues

wsOFR.Range(wsOFR.Cells(3, CURRO), wsOFR.Cells(lr, CURRO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, CURR), wsOFRFinal.Cells(lr2 + 2, CURR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, RAT), wsOFR.Cells(lr, RAT)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, OFRR), wsOFRFinal.Cells(lr2 + 2, OFRR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, BAS), wsOFR.Cells(lr, BAS)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, RatB), wsOFRFinal.Cells(lr2 + 2, RatB)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, MINO), wsOFR.Cells(lr, MINO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, MINR), wsOFRFinal.Cells(lr2 + 2, MINR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, MAXO), wsOFR.Cells(lr, MAXO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, MAXR), wsOFRFinal.Cells(lr2 + 2, MAXR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, CGCO), wsOFR.Cells(lr, CGCO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, CHG), wsOFRFinal.Cells(lr2 + 2, CHG)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, FROO), wsOFR.Cells(lr, FROO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, FromR), wsOFRFinal.Cells(lr2 + 2, FromR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, TOO), wsOFR.Cells(lr, TOO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, TOR), wsOFRFinal.Cells(lr2 + 2, TOR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, EFFD), wsOFR.Cells(lr, EFFD)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, Vald), wsOFRFinal.Cells(lr2 + 2, Vald)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, EXPO), wsOFR.Cells(lr, EXPO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, EXPD), wsOFRFinal.Cells(lr2 + 2, EXPD)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, COMMO), wsOFR.Cells(lr, COMMO)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, COMM), wsOFRFinal.Cells(lr2 + 2, COMM)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, POL), wsOFR.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
wsOFRFinal.Range(wsOFRFinal.Cells(3, DPOL), wsOFRFinal.Cells(lr2 + 2, DPOL)).PasteSpecial xlPasteAll

    OCFS1 = wsOFRFinal.Cells(3, OCFS).Address(False, False)
    DESUN1 = wsOFRFinal.Cells(3, DesUN).Address(False, False)
    CHG1 = wsOFRFinal.Cells(3, CHG).Address(False, False)

j = wsOFRFinal.Range("A" & Rows.Count).End(xlUp).Row

PLCCOL = wsOFRFinal.Cells(2, wsOFRFinal.Columns.Count).End(xlToLeft).Column

Dim cols As Variant

ReDim cols(0 To PLCCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
wsOFRFinal.Range("$A$2:$W$" & j).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

If j < 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="C", Replacement:="YES", LookAt:=xlWhole
wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="", Replacement:="YES", LookAt:=xlWhole
wsOFRFinal.Range(wsOFRFinal.Cells(3, coll), wsOFRFinal.Cells(j, coll)).Replace What:="P", Replacement:="NO", LookAt:=xlWhole

wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, OCTY)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTR), wsOFRFinal.Cells(j, OCTR)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, OREG), wsOFRFinal.Cells(j, OREG)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,4,0),"""")"

wsOFRFinal.Range(wsOFRFinal.Cells(3, DesCy), wsOFRFinal.Cells(j, DesCy)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesC), wsOFRFinal.Cells(j, DesC)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, DesR), wsOFRFinal.Cells(j, DesR)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
wsOFRFinal.Range(wsOFRFinal.Cells(3, CHG + 1), wsOFRFinal.Cells(j, CHG + 1)).Value = "=iferror(vlookup(" & CHG1 & ", 'UNCODE'!$K:$L,2,0),"""")"


wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, DesR)).Value = wsOFRFinal.Range(wsOFRFinal.Cells(3, OCTY), wsOFRFinal.Cells(j, CHG + 1)).Value

roOFR = wsOFRFinal.Cells(wsOFRFinal.Rows.Count, 1).End(xlUp).Row
coOFR = wsOFRFinal.Cells(2, wsOFRFinal.Columns.Count).End(xlToLeft).Column

wsOFRFinal.Range(wsOFRFinal.Cells(2, 1), wsOFRFinal.Cells(roOFR, coOFR)).Sort key1:=wsOFRFinal.Range(wsOFRFinal.Cells(2, OCFS), wsOFRFinal.Cells(roOFR, OCFS)), Order1:=xlAscending, key2:=wsOFRFinal.Range(wsOFRFinal.Cells(2, DesUN), wsOFRFinal.Cells(roOFR, DesUN)), Order2:=xlAscending, key3:=wsOFRFinal.Range(wsOFRFinal.Cells(2, TOR), wsOFRFinal.Cells(roOFR, TOR)), Order3:=xlAscending, Header:=xlYes

Application.Calculation = xlCalculationAutomatic

wsOFRFinal.Columns("A:V").AutoFit

j = wsOFRFinal.Range("A" & Rows.Count).End(xlUp).Row

Dim POLCOL As Range
Set POLCOL = wsOFRFinal.Range("E3:E" & j)

jPOL = Application.WorksheetFunction.CountA(POLCOL)

If jPOL = 0 Then wsOFRFinal.Columns("E:E").EntireColumn.Hidden = True

End If

wsOFR.ShowAllData

wsOFR.Range(wsOFR.Cells(2, 1), wsOFR.Cells(lr, col + 1)).AutoFilter field:=NACA, Criteria1:="<>"

lr2 = wsOFR.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 >= 1 Then

NAC = Application.WorksheetFunction.Match("Named Account", wsName.Rows("2:2"), 0)
OREG = Application.WorksheetFunction.Match("Origin Region", wsName.Rows("2:2"), 0)
OCTR = Application.WorksheetFunction.Match("Origin Country", wsName.Rows("2:2"), 0)
OCTY = Application.WorksheetFunction.Match("Origin City", wsName.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
DesR = Application.WorksheetFunction.Match("Destination Region", wsName.Rows("2:2"), 0)
DesC = Application.WorksheetFunction.Match("Destination Country", wsName.Rows("2:2"), 0)
DesCy = Application.WorksheetFunction.Match("Destination City", wsName.Rows("2:2"), 0)
DesUN = Application.WorksheetFunction.Match("Destination UN Code", wsName.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsName.Rows("2:2"), 0)
OFRR = Application.WorksheetFunction.Match("Amount", wsName.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("RATE BASIS", wsName.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsName.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsName.Rows("2:2"), 0)
FromR = Application.WorksheetFunction.Match("FROM CBM", wsName.Rows("2:2"), 0)
TOR = Application.WorksheetFunction.Match("TO CBM", wsName.Rows("2:2"), 0)
Rout = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
coll = Application.WorksheetFunction.Match("Collect y/n", wsName.Rows("2:2"), 0)
Vald = Application.WorksheetFunction.Match("Effective Date", wsName.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsName.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsName.Rows("2:2"), 0)
CGCON = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)
TY = Application.WorksheetFunction.Match("Type", wsName.Rows("2:2"), 0)
DPOL = Application.WorksheetFunction.Match("POL", wsName.Rows("2:2"), 0)


wsOFR.Range(wsOFR.Cells(3, NACA), wsOFR.Cells(lr, NACA)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, NAC), wsName.Cells(lr2 + 2, NAC)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, POR), wsOFR.Cells(lr, POR)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, OCFS), wsName.Cells(lr2 + 2, OCFS)).PasteSpecial xlPasteValues

wsOFR.Range(wsOFR.Cells(3, Decon), wsOFR.Cells(lr, Decon)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, Rout), wsName.Cells(lr2 + 2, Rout)).PasteSpecial xlPasteValues

wsOFR.Range(wsOFR.Cells(3, POD), wsOFR.Cells(lr, POD)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, DesUN), wsName.Cells(lr2 + 2, DesUN)).PasteSpecial xlPasteValues

wsOFR.Range(wsOFR.Cells(3, CURRO), wsOFR.Cells(lr, CURRO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, CURR), wsName.Cells(lr2 + 2, CURR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, RAT), wsOFR.Cells(lr, RAT)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, OFRR), wsName.Cells(lr2 + 2, OFRR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, BAS), wsOFR.Cells(lr, BAS)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, RatB), wsName.Cells(lr2 + 2, RatB)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, MINO), wsOFR.Cells(lr, MINO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, MINR), wsName.Cells(lr2 + 2, MINR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, MAXO), wsOFR.Cells(lr, MAXO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, MAXR), wsName.Cells(lr2 + 2, MAXR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, FROO), wsOFR.Cells(lr, FROO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, FromR), wsName.Cells(lr2 + 2, FromR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, TOO), wsOFR.Cells(lr, TOO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, TOR), wsName.Cells(lr2 + 2, TOR)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, EFFD), wsOFR.Cells(lr, EFFD)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, Vald), wsName.Cells(lr2 + 2, Vald)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, EXPO), wsOFR.Cells(lr, EXPO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, EXPD), wsName.Cells(lr2 + 2, EXPD)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, COMMO), wsOFR.Cells(lr, COMMO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, COMM), wsName.Cells(lr2 + 2, COMM)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, CGCO), wsOFR.Cells(lr, CGCO)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, CGCON), wsName.Cells(lr2 + 2, CGCON)).PasteSpecial xlPasteAll

wsOFR.Range(wsOFR.Cells(3, POL), wsOFR.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(3, DPOL), wsName.Cells(lr2 + 2, DPOL)).PasteSpecial xlPasteAll

wsName.Range(wsName.Cells(3, TY), wsName.Cells(lr2, TY)) = "OFR"

    OCFS1 = wsName.Cells(3, OCFS).Address(False, False)
    DESUN1 = wsName.Cells(3, DesUN).Address(False, False)
    CGCO1 = wsName.Cells(3, CGCON).Address(False, False)

j = wsName.Range("A" & Rows.Count).End(xlUp).Row

If j < 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If


wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="C", Replacement:="YES", LookAt:=xlWhole
wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="", Replacement:="YES", LookAt:=xlWhole
wsName.Range(wsName.Cells(3, coll), wsName.Cells(j, coll)).Replace What:="P", Replacement:="NO", LookAt:=xlWhole

wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, OCTY)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(3, OCTR), wsName.Cells(j, OCTR)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(3, OREG), wsName.Cells(j, OREG)).Value = "=iferror(vlookup(" & OCFS1 & ", 'UNCODE'!$A:$F,4,0),"""")"

wsName.Range(wsName.Cells(3, DesCy), wsName.Cells(j, DesCy)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(3, DesC), wsName.Cells(j, DesC)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(3, DesR), wsName.Cells(j, DesR)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"

wsName.Range(wsName.Cells(3, CGCON + 1), wsName.Cells(j, CGCON + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"


wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, DesR)).Value = wsName.Range(wsName.Cells(3, OCTY), wsName.Cells(j, DesR)).Value

roOFR = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row
coOFR = wsName.Cells(2, wsName.Columns.Count).End(xlToLeft).Column

wsName.Range(wsName.Cells(2, 1), wsName.Cells(roOFR, coOFR)).Sort key1:=wsName.Range(wsName.Cells(2, OCFS), wsName.Cells(roOFR, OCFS)), Order1:=xlAscending, key2:=wsName.Range(wsName.Cells(2, DesUN), wsName.Cells(roOFR, DesUN)), Order2:=xlAscending, key3:=wsName.Range(wsName.Cells(2, TOR), wsName.Cells(roOFR, TOR)), Order3:=xlAscending, Header:=xlYes

Application.Calculation = xlCalculationAutomatic

End If

Application.EnableEvents = True

End Sub



Attribute VB_Name = "Module_FunCalRates"
Function CalRates(MSCBM As Variant, MSW As Variant, RateBasis As String, InpRate As Double)
   
    Select Case RateBasis
        Case "W"
            CalRates = Round(((MSW / 1000) * InpRate), 2)
        Case "M"
            CalRates = Round((MSCBM * InpRate), 2)
        Case "F"
            CalRates = Round(MSCBM * 35.147) * InpRate
        Case "K"
            CalRates = Round((MSW * InpRate), 2)
        Case "P"
            CalRates = Round(MSW * 2.2046) * InpRate
        Case "CW"
            CalRates = Round((MSW * InpRate * 0.022046), 2)
        Case "C"
            CalRates = Round((MSW * InpRate / 100), 2)
        Case "LS", "MIN", "PD", "PS", "PTD", "EA"
            CalRates = InpRate
        Case "CA"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 500)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "T"
            CalRates = Round((((MSW * 2.2) * InpRate) / 2000), 2)
        Case "WM"
            CalRates = Application.WorksheetFunction.Max(Round(Abs((MSW / 1000) * InpRate), 2), Round(Abs((MSCBM * InpRate)), 2)) * Sgn(InpRate)
        Case "M8"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs(((MSW / 0.4536) / 800)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M25"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 250)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M33"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 333)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M36"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 360)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M3A"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 363)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M5"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 500)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M3"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 300)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M44"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 444)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M45"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 450)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M4"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 400)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "W2"
            CalRates = Round(Application.WorksheetFunction.Max(Abs((Round((MSW * 0.001), 4) * InpRate)), Abs(Round(((MSCBM / 2) * InpRate), 4)), Abs(InpRate)), 2) * Sgn(InpRate)
        Case "FW"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 100)), 4) * InpRate), Round(Abs((((MSCBM * 333) / 100) * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M7"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 700)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M9"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 200)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M30"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 330)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "W3"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 1000)), 4) * InpRate), Round(Abs(((MSCBM / 3) * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "WM3"
            CalRates = Application.WorksheetFunction.Max(Round(Abs(((MSW / 1000) * InpRate)), 2), Round(Abs((MSCBM * InpRate)), 2), Round(Abs((3 * InpRate)), 2)) * Sgn(InpRate)
        Case "M75"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 750)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "WM1"
            CalRates = Application.WorksheetFunction.Max(Round(Abs(((MSW / 1000) * InpRate)), 2), Round(Abs((MSCBM * InpRate)), 2), Round(Abs((InpRate)), 2)) * Sgn(InpRate)
        Case "M85"
            CalRates = Round(Application.WorksheetFunction.Max(Round(Abs(((Weight * 2.2046) / 1000)), 4) * InpRate, Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "BLK"
            CalRates = Round(Abs(Application.WorksheetFunction.Ceiling_Math((MSCBM / 4) * InpRate)), 2) * Sgn(InpRate)
        Case "WM2"
            CalRates = Application.WorksheetFunction.Max(Round(Abs(((MSW / 1000) * InpRate)), 2), Round(Abs((MSCBM * InpRate)), 2), Round(Abs((2 * InpRate)), 2)) * Sgn(InpRate)
        Case "M80"
            CalRates = Round(Application.WorksheetFunction.Max((Round(Abs((MSW / 800)), 4) * InpRate), Round(Abs((MSCBM * InpRate)), 4)), 2) * Sgn(InpRate)
        Case "M3R"
            x = (RoundUp((MSW / 100) * 100) / 100) * InpRate
            y = ((RoundUp((MSCBM * 333) / 100) * 100) / 100) * InpRate
            CalRates = Application.WorksheetFunction.Max(x, y)
End Select
    
End Function


Function RoundUp(ByVal Value As Double)
    If Int(Value) = Value Then
        RoundUp = Value
    Else
        RoundUp = Int(Value) + 1
    End If
End Function

Attribute VB_Name = "Module_GetCharges"
Sub getCharges()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

If Sheets("FreightCalculator").Range("E7").Value = 0 Or Sheets("FreightCalculator").Range("E10").Value = 0 Then
MsgBox "Origin or Destination City incorrect. Please check"
Application.Calculation = xlCalculationAutomatic
Exit Sub
End If

Dim i As Long
Dim j As Long
Dim k As Long

Dim str As String
Dim s1 As String
Dim s2 As String
Dim s3 As String
Dim s4 As String

Dim OFR As Worksheet, FOB As Worksheet, PLC As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set PLC = Sheets("Surcharges Calculate (PLC)")

s1 = Range("E7").Value
s2 = Range("E10").Value
s3 = Range("H7").Value
s4 = Range("H10").Value

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If s1 = "" Or s2 = "" Then
    MsgBox ("Each dropdown for Routing Details must be selected")
    Exit Sub
Else
    If IsEmpty(Range("M6")) Then
        MsgBox ("Please input Cubic Meter(cbm)")
        Exit Sub
    Else
        If IsEmpty(Range("M9")) Then
            MsgBox ("Please input Weight(Kgs)")
            Exit Sub
        Else
        End If
    End If
End If

If s1 = "ERROR" Then MsgBox "Please enter correct Origin City"
If s2 = "ERROR" Then MsgBox "Please enter correct Origin City"

 '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Sheets("UNCODE").Visible = True

FOB.Visible = True
OFR.Visible = True
PLC.Visible = True
            
Sheets("FreightCalculator").Select
Rows("10:50").Hidden = False
            
           
lcol = Application.WorksheetFunction.Match("VIA", OFR.Rows("2:2"), 0)
OFR.Range(OFR.Cells(2, 1), OFR.Cells(2, lcol)).AutoFilter
            
ORIG = Application.WorksheetFunction.Match("ORIG", OFR.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", OFR.Rows("2:2"), 0)
VIA = Application.WorksheetFunction.Match("VIA", OFR.Rows("2:2"), 0)
Lod = Application.WorksheetFunction.Match("Port Of Loading", OFR.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", OFR.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", OFR.Rows("2:2"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", OFR.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", OFR.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", OFR.Rows("2:2"), 0)
Fro = Application.WorksheetFunction.Match("From", OFR.Rows("2:2"), 0)
Tox = Application.WorksheetFunction.Match("To", OFR.Rows("2:2"), 0)
NACA = Application.WorksheetFunction.Match("Named Account", OFR.Rows("2:2"), 0)
UOM = Application.WorksheetFunction.Match("Unit of Measurement", OFR.Rows("2:2"), 0)
ASP = Application.WorksheetFunction.Match("Aspect", OFR.Rows("2:2"), 0)

k = OFR.Range("A" & OFR.Rows.Count).End(xlUp).Row

If k = 2 Then
MsgBox "No rates available"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

            
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

CountNA = Application.WorksheetFunction.CountA(OFR.Range(OFR.Cells(3, NACA), OFR.Cells(k, NACA)))
If k - 2 <> CountNA Then OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=NACA, Criteria1:=""

If s3 <> "" Then OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
If s4 <> "" Then OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4

str = OFR.Range(OFR.Cells(2, lcol), OFR.Cells(k, lcol)).SpecialCells(xlCellTypeVisible).Count

If str > 1 Then
OFR.Range(OFR.Cells(3, RAT), OFR.Cells(k, RAT + 3)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, ED), OFR.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, CGCO), OFR.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, CURR), OFR.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, Fro), OFR.Cells(k, Fro)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("R19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, Tox), OFR.Cells(k, Tox)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("S19").PasteSpecial xlPasteValues

OFR.Range(OFR.Cells(3, UOM), OFR.Cells(k, UOM)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("T19").PasteSpecial xlPasteValues
                
OFR.Range(OFR.Cells(3, ASP), OFR.Cells(k, ASP)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("U19").PasteSpecial xlPasteValues
                
NR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("17:17").Copy
Range("A" & NR + 1).PasteSpecial
Range(Cells(NR + 1, 1), Cells(NR + 1, 17)).ClearContents

End If

lcol = FOB.Cells(2, FOB.Columns.Count).End(xlToLeft).Column
            
FOB.Range(FOB.Cells(2, 1), FOB.Cells(2, lcol)).AutoFilter
            
ORIG = Application.WorksheetFunction.Match("ORIG", FOB.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", FOB.Rows("2:2"), 0)
VIA = Application.WorksheetFunction.Match("VIA", FOB.Rows("2:2"), 0)
Lod = Application.WorksheetFunction.Match("Port Of Loading", FOB.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", FOB.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", FOB.Rows("2:2"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", FOB.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", FOB.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", FOB.Rows("2:2"), 0)
Fro = Application.WorksheetFunction.Match("From", OFR.Rows("2:2"), 0)
Tox = Application.WorksheetFunction.Match("To", OFR.Rows("2:2"), 0)
NACA = Application.WorksheetFunction.Match("Named Account", FOB.Rows("2:2"), 0)
UOM = Application.WorksheetFunction.Match("Unit of Measurement", FOB.Rows("2:2"), 0)
ASP = Application.WorksheetFunction.Match("Aspect", FOB.Rows("2:2"), 0)

k = FOB.Range("A" & FOB.Rows.Count).End(xlUp).Row

If k = 2 Then GoTo outt2

FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

CountNA = Application.WorksheetFunction.CountA(FOB.Range(FOB.Cells(3, NACA), FOB.Cells(k, NACA)))
If k - 2 <> CountNA Then FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=NACA, Criteria1:=""

Lr1 = FOB.Cells(FOB.Rows.Count, Lod).End(xlUp).Row
If Lr1 <> 2 Then
    If s3 <> "" Then FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
End If

lr2 = FOB.Cells(FOB.Rows.Count, Disch).End(xlUp).Row

If lr2 <> 2 Then
    If s4 <> "" Then FOB.Range(FOB.Cells(2, 1), FOB.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4
End If
            
On Error Resume Next
str = FOB.Range(FOB.Cells(3, DEST), FOB.Cells(k, DEST)).SpecialCells(xlCellTypeVisible).Count

If Err.Number = 1004 Then
    str = 0
End If

If str >= 1 Then

Rows("17:18").Copy
Range("A" & NR + 3).PasteSpecial
Range("A" & NR + 3) = "Freight on Board"

FOB.Range(FOB.Cells(3, RAT), FOB.Cells(k, RAT + 3)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G" & NR + 5).PasteSpecial xlPasteValues
                
FOB.Range(FOB.Cells(3, ED), FOB.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, CGCO), FOB.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, CURR), FOB.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, Fro), FOB.Cells(k, Fro)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("R" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, Tox), FOB.Cells(k, Tox)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("S" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, UOM), FOB.Cells(k, UOM)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("T" & NR + 5).PasteSpecial xlPasteValues

FOB.Range(FOB.Cells(3, ASP), FOB.Cells(k, ASP)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("U" & NR + 5).PasteSpecial xlPasteValues
                                
TR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("17:17").Copy
Range("A" & TR + 1).PasteSpecial
Range(Cells(TR + 1, 1), Cells(TR + 1, 17)).ClearContents

End If

For x = NR + 3 To TR

If Range("A" & x) = "DEN" Then

Range("K" & x) = Range("R" & x) & " - " & Range("S" & x) & " KGS/CBM"

End If


Next x

outt2:

k = PLC.Range("A" & PLC.Rows.Count).End(xlUp).Row

If k = 2 Then GoTo outt3

NR = Cells(Rows.Count, 1).End(xlUp).Row

lcol = PLC.Cells(2, PLC.Columns.Count).End(xlToLeft).Column
PLC.Range(PLC.Cells(2, 1), PLC.Cells(2, lcol)).AutoFilter

ORIG = Application.WorksheetFunction.Match("ORIG", PLC.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", PLC.Rows("2:2"), 0)
VIA = Application.WorksheetFunction.Match("VIA", PLC.Rows("2:2"), 0)
Lod = Application.WorksheetFunction.Match("Port Of Loading", PLC.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", PLC.Rows("2:2"), 0)
RAT = Application.WorksheetFunction.Match("Rate", PLC.Rows("2:2"), 0)
ED = Application.WorksheetFunction.Match("Effective Date", PLC.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", PLC.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", PLC.Rows("2:2"), 0)
Fro = Application.WorksheetFunction.Match("From", PLC.Rows("2:2"), 0)
Tox = Application.WorksheetFunction.Match("To", PLC.Rows("2:2"), 0)
NACA = Application.WorksheetFunction.Match("Named Account", PLC.Rows("2:2"), 0)
UOM = Application.WorksheetFunction.Match("Unit of Measurement", PLC.Rows("2:2"), 0)
ASP = Application.WorksheetFunction.Match("Aspect", PLC.Rows("2:2"), 0)

k = PLC.Range("A" & PLC.Rows.Count).End(xlUp).Row


PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=ORIG, Criteria1:=s1
PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=DEST, Criteria1:=s2

CountNA = Application.WorksheetFunction.CountA(PLC.Range(PLC.Cells(3, NACA), PLC.Cells(k, NACA)))
If k - 2 <> CountNA Then PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=NACA, Criteria1:=""


If s3 <> "" Then PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=Lod, Criteria1:=s3
If s4 <> "" Then PLC.Range(PLC.Cells(2, 1), PLC.Cells(k, lcol)).AutoFilter field:=VIA, Criteria1:=s4

str = PLC.Range(PLC.Cells(2, lcol), PLC.Cells(k, lcol)).SpecialCells(xlCellTypeVisible).Count

If str > 1 Then

Rows("17:17").Copy
Range("A" & NR + 3).PasteSpecial

Rows("17:18").Copy
Range("A" & NR + 3).PasteSpecial
Range("A" & NR + 3) = "Post Landing Charges"

PLC.Range(PLC.Cells(3, RAT), PLC.Cells(k, RAT + 3)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("G" & NR + 5).PasteSpecial xlPasteValues
                
PLC.Range(PLC.Cells(3, ED), PLC.Cells(k, ED + 1)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("N" & NR + 5).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, CGCO), PLC.Cells(k, CGCO)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("A" & NR + 5).PasteSpecial xlPasteValues
                
PLC.Range(PLC.Cells(3, CURR), PLC.Cells(k, CURR)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("E" & NR + 5).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, Fro), PLC.Cells(k, Fro)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("R" & NR + 5).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, Tox), PLC.Cells(k, Tox)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("S" & NR + 5).PasteSpecial xlPasteValues
                                
PLC.Range(PLC.Cells(3, UOM), PLC.Cells(k, UOM)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("T" & NR + 5).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, ASP), PLC.Cells(k, ASP)).SpecialCells(xlCellTypeVisible).Copy
Sheets("FreightCalculator").Range("U" & NR + 5).PasteSpecial xlPasteValues

NR = Cells(Rows.Count, 1).End(xlUp).Row

Rows("17:17").Copy
Range("A" & NR + 1).PasteSpecial
Range(Cells(NR + 1, 1), Cells(NR + 1, 17)).ClearContents

End If

outt3:
Application.Calculation = xlCalculationAutomatic

End Sub



Attribute VB_Name = "Module_GetRates"
Sub GetRates()

Dim i As Long
Dim j As Long
Dim k As Long
Dim kk As Long

Application.Calculation = xlCalculationManual

Set CurrColl = New Collection
Dim UN As Worksheet, FC As Worksheet

Set UN = Sheets("UNCODE")
Set FC = Sheets("FreightCalculator")

Dim UNCODES As Range, CgCodes As Range

RowsUN = UN.Cells(UN.Rows.Count, 1).End(xlUp).Row
Set UNCODES = UN.Range(UN.Cells(1, 1), UN.Cells(RowsUN, 6))

RowsCgC = UN.Cells(UN.Rows.Count, 11).End(xlUp).Row
Set CgCodes = UN.Range(UN.Cells(1, 11), UN.Cells(RowsCgC, 12))

CBM = Range("M6")
WGT = Range("M9")


Dim BASI As String
Dim RAT As Double

Sheets("FreightCalculator").Select
kk = Range("A" & Rows.Count).End(xlUp).Row

i = 0
j = 0
k = 0

TOTOFR = 0
TOTFOB = 0
TOTPLC = 0

CountLOT = 0
SumWGT = 0
SumCBM = 0

'OFR

i = Application.Match("Ocean Freight Rates", Columns("A:A"), 0)

If Not Columns("A:A").Find("Freight On Board") Is Nothing Then
j = Application.Match("Freight On Board", Columns("A:A"), 0)
End If

If Not Columns("A:A").Find("Post Landing Charges") Is Nothing Then
k = Application.Match("Post Landing Charges", Columns("A:A"), 0)
End If

If j = 0 Then
    If k = 0 Then
    tt = kk
    Else
    tt = k
    End If
Else
tt = j
End If
  

For x = i + 2 To tt

If Range("A" & x) <> "" Then

Range("B" & x) = vlook(Range("A" & x), CgCodes, 2)
BASI = Range("H" & x)
RAT = Range("G" & x)
MINR = Range("I" & x)
MAXR = Range("J" & x)

If BASI <> "%" Then

TheRate = CalRates(CBM, WGT, BASI, RAT)
If MINR < TheRate Then
    If MAXR <> "" Then
        If MAXR > TheRate Then
        Range("Q" & x) = TheRate
        Else
        Range("Q" & x) = MAXR
        End If
    Else
    Range("Q" & x) = TheRate
    End If
Else
Range("Q" & x) = MINR
End If

Else

OFR = Application.Match("OFR", Columns("A:A"), 0)
TheOFR = Cells(OFR, 17).Address
ThePerc = Cells(x, 7).Address
TheRate = "=" & TheOFR & "*" & ThePerc & "/100"

Range("Q" & x) = TheRate

End If

On Error Resume Next

HAZ = 0

If Sheet1.OpButNo = True Then
    If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then
    HAZ = Range("Q" & x)
    Range("Q" & x) = 0
    Range("K" & x) = "Subject to approval"
    Range("A" & x).EntireRow.Hidden = True
    End If
    
Else
If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then Range("K" & x) = "Subject to approval"
HAZ = 0
End If

If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) And Range("A" & x) = Range("A" & x - 2) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)
    Q2 = Range("Q" & x - 2)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q >= Q2 Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
    If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q2 > 0 Then
        If Range("N" & x) < Range("N" & x - 2) Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
        End If
    End If
    End If
End If


If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
    If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    End If
End If

CurrColl.Add Cells(x, 5).Value, Cells(x, 5).Value
Range("Q" & x).NumberFormat = "#,##0.00"

End If

Next x

'FOB

If j > 0 Then

    If k > 0 Then
    ttt = k - 3
    Else
    ttt = kk
    End If

NoDen = 0

For x = j + 2 To ttt

Range("B" & x) = vlook(Range("A" & x), CgCodes, 2)
BASI = Range("H" & x)
RAT = Range("G" & x)
MINR = Range("I" & x)
MAXR = Range("J" & x)

If BASI <> "%" Then

TheRate = CalRates(CBM, WGT, BASI, RAT)
If MINR < TheRate Then
    If MAXR <> "" Then
        If MAXR > TheRate Then
        Range("Q" & x) = TheRate
        Else
        Range("Q" & x) = MAXR
        End If
    Else
    Range("Q" & x) = TheRate
    End If
Else
Range("Q" & x) = MINR
End If

Else

OFR = Application.Match("OFR", Columns("A:A"), 0)
TheOFR = Cells(OFR, 17).Address
ThePerc = Cells(x, 7).Address
TheRate = "=" & TheOFR & "*" & ThePerc & "/100"

Range("Q" & x) = TheRate

End If

On Error Resume Next

If Range("A" & x) = "DEN" Then

R = Range("R" & x)
S = Range("S" & x)

If WGT / CBM < R Then
NoDen = Range("Q" & x) + NoDen
Range("Q" & x) = 0
Range("A" & x).EntireRow.Hidden = True
Else
    If WGT / CBM > S Then
    NoDen = Range("Q" & x) + NoDen
    Range("Q" & x) = 0
    Range("A" & x).EntireRow.Hidden = True
    End If
End If

End If

HAZ = 0

If Sheet1.OpButNo = True Then
    If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then
    HAZ = Range("Q" & x)
    Range("Q" & x) = 0
    Range("K" & x) = "Subject to approval"
    Range("A" & x).EntireRow.Hidden = True
    End If
Else
If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then Range("K" & x) = "Subject to approval"
HAZ = 0
End If

If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) And Range("A" & x) = Range("A" & x - 2) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)
    Q2 = Range("Q" & x - 2)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q >= Q2 Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
        If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q2 > 0 Then
        If Range("N" & x) < Range("N" & x - 2) Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
        End If
    End If
    End If
End If


If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
    If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    End If
End If

CurrColl.Add Cells(x, 5).Value, Cells(x, 5).Value
Range("Q" & x).NumberFormat = "#,##0.00"
Next x

End If

'added below 11/27 by PAZ

'add PLC

If k > 0 Then

For x = k + 2 To kk

Range("B" & x) = vlook(Range("A" & x), CgCodes, 2)
BASI = Range("H" & x)
RAT = Range("G" & x)
MINR = Range("I" & x)
MAXR = Range("J" & x)

If BASI <> "%" Then

TheRate = CalRates(CBM, WGT, BASI, RAT)
If MINR < TheRate Then
    If MAXR <> "" Then
        If MAXR > TheRate Then
        Range("Q" & x) = TheRate
        Else
        Range("Q" & x) = MAXR
        End If
    Else
    Range("Q" & x) = TheRate
    End If
Else
Range("Q" & x) = MINR
End If

Else

OFR = Application.Match("OFR", Columns("A:A"), 0)
TheOFR = Cells(OFR, 17).Address
ThePerc = Cells(x, 7).Address
TheRate = "=" & TheOFR & "*" & ThePerc & "/100"

Range("Q" & x) = TheRate

End If

On Error Resume Next
CurrColl.Add Cells(x, 5).Value, Cells(x, 5).Value
Range("Q" & x).NumberFormat = "#,##0.00"

'Overweight

If Range("A" & x) = "OWC" Then

R = Range("R" & x)
S = Range("S" & x)

If WGT < R Then
NoOWC = Range("Q" & x) + NoOWC
Range("Q" & x) = 0
Range("A" & x).EntireRow.Hidden = True
Else
    If WGT > S Then
    NoOWC = Range("Q" & x) + NoOWC
    Range("Q" & x) = 0
    Range("A" & x).EntireRow.Hidden = True
    End If
End If
End If


If Range("A" & x) = "DEN" Then

R = Range("R" & x)
S = Range("S" & x)

If WGT / CBM <= R Then
NoDen = Range("Q" & x) + NoDen
Range("Q" & x) = 0
Range("A" & x).EntireRow.Hidden = True
Else
    If WGT / CBM > S Then
    NoDen = Range("Q" & x) + NoDen
    Range("Q" & x) = 0
    Range("A" & x).EntireRow.Hidden = True
    End If
End If

End If

HAZ = 0

If Sheet1.OpButNo = True Then
    If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then
    HAZ = Range("Q" & x)
    Range("Q" & x) = 0
    Range("K" & x) = "Subject to approval"
    Range("A" & x).EntireRow.Hidden = True
    End If
Else
If Range("A" & x) = "HAZ" Or Range("A" & x) = "IMO" Or Range("A" & x) = "PSA" Or Range("U" & x) = "HAZ" Then Range("K" & x) = "Subject to approval"
HAZ = 0
End If

R = Range("R" & x)
S = Range("S" & x)
UM = Range("T" & x)

If R <> "" And S <> "" And UM <> "" Then
CountLOT = CountLOT + 1
If UM = "LBS" Then
PND = WGT * 2.2046
If PND <= R Or PND > S Then
Range("Q" & x) = 0
Range("Q" & x).EntireRow.Hidden = True
Else
SumWGT = SumWGT + Range("Q" & x)
End If

End If

If UM = "KGS" Then
PND = WGT
If PND <= R Or PND > S Then
Range("Q" & x) = 0
Range("Q" & x).EntireRow.Hidden = True
Else
SumWGT = SumWGT + Range("Q" & x)
End If

End If

If UM = "CBM" Then
If CBM <= R Or CBM > S Then
Range("Q" & x) = 0
Range("Q" & x).EntireRow.Hidden = True
Else
SumCBM = SumCBM + Range("Q" & x)
End If
End If

GoTo TheNext
End If


'added below 12/26/17 PZ

If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) And Range("A" & x) = Range("A" & x - 2) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)
    Q2 = Range("Q" & x - 2)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q >= Q2 Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
    If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    Else
        If Q2 > 0 Then
        If Range("N" & x) < Range("N" & x - 2) Then
        Range("Q" & x - 2) = 0
        Range("Q" & x - 2).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
        End If
    End If
    End If
End If



If Range("A" & x) <> "" And Range("A" & x) = Range("A" & x - 1) Then
    Q = Range("Q" & x)
    Q1 = Range("Q" & x - 1)

    If Range("N" & x) = Range("N" & x - 1) Then
    If Q1 > 0 Then
        If Q >= Q1 Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    Else
    If Q1 > 0 Then
        If Range("N" & x) < Range("N" & x - 1) Then
        Range("Q" & x - 1) = 0
        Range("Q" & x - 1).EntireRow.Hidden = True
        Else
        Range("Q" & x) = 0
        Range("Q" & x).EntireRow.Hidden = True
        End If
    End If
    End If
End If

TheNext:
Next x

End If

If SumWGT > 0 And SumCBM > 0 Then
    If SumWGT >= SumCBM Then
        For x = k + 2 To kk
            If Range("T" & x) = "CBM" Then
            Range("Q" & x) = 0
            Range("Q" & x).EntireRow.Hidden = True
            End If
        Next x
    Else
        For x = k + 2 To kk
            If Range("T" & x) = "LBS" Or Range("T" & x) = "KGS" Then
            Range("Q" & x) = 0
            Range("Q" & x).EntireRow.Hidden = True
            End If
        Next x
    End If
End If


Application.Calculation = xlCalculationAutomatic

jj = 0

For Each CURR In CurrColl

If CURR <> "Currency" Then
    jj = jj + 1
    CurrOFR = 0
    CurrFOB = 0
    CurrPLC = 0
    For a = i + 2 To tt
        If Cells(a, 5).Value = CURR Then
            CurrOFR = CurrOFR + Range("Q" & a).Value
        End If
    Next
    
If j > 0 Then
    For a = j + 2 To ttt
        If Cells(a, 5).Value = CURR Then
            CurrFOB = CurrFOB + Range("Q" & a).Value
        End If
    Next
End If

If k > 0 Then
    
    For a = k + 2 To kk
        If Cells(a, 5).Value = CURR Then
            CurrPLC = CurrPLC + Range("Q" & a).Value
        End If
    Next
    
End If


Cells(11, 13 + jj).Value = CURR
Cells(12, 13 + jj).Value = CurrOFR - MinusOFR
Cells(13, 13 + jj).Value = CurrFOB
Cells(14, 13 + jj).Value = CurrPLC

TOTOFR = TOTOFR + Cells(12, 13 + jj)
TOTFOB = TOTFOB + Cells(13, 13 + jj)
TOTPLC = TOTPLC + Cells(14, 13 + jj)

End If

Range(Cells(11, 13 + jj), Cells(15, 13 + jj)).NumberFormat = "#,##0.00"
Range("N15") = "=SUM(N10:N14)"
Range("N15").Copy
Cells(15, 13 + jj).PasteSpecial xlPasteAll

Range("N11:N15").Copy
Range(Cells(11, 13 + jj), Cells(15, 13 + jj)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Application.CutCopyMode = False

Next

If TOTOFR = 0 Then Cells(12, 1).EntireRow.Hidden = True
If TOTFOB = 0 Then Cells(13, 1).EntireRow.Hidden = True
If TOTPLC = 0 Then Cells(14, 1).EntireRow.Hidden = True

If kk > 18 Then
Range("N19:O" & kk).NumberFormat = "[$-409]dd-mmm-yy;@"
Columns("N:N").AutoFit
Columns("Q19:Q" & kk + 10).HorizontalAlignment = xlLeft
Range("N15").NumberFormat = "#,##0.00"

    With Columns("R:U").Font
        .Name = "Calibri"
        .FontStyle = "Bold"
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
Else

MsgBox "Please try to click on Reset and enter Origin/Destination again. If the problem persist, please contact us for assistance." & vbCrLf & "Thanks"

End If


Application.Calculation = xlCalculationAutomatic

End Sub

Function vlook(lookfor, rangedata, t)

On Error GoTo errorhandlr

errorhandlr:
vlook = ""
Resume Next

vlook = Application.WorksheetFunction.VLookup(lookfor, rangedata, t, 0)

End Function







Attribute VB_Name = "Module_GetUNCODE"
Sub getUNCODE()

Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = False

Dim CALC As Worksheet, UNCODE As Worksheet, UNs As Range

Set CALC = Sheet1
Set UNCODE = Sheet9

roUN = UNCODE.Cells(UNCODE.Rows.Count, 1).End(xlUp).Row

Set UNs = UNCODE.Range("A1:F" & roUN)

If CALC.Range("C5") = "Origin Region" Then
Ctry = "USA"
CALC.Range("E7").FormulaArray = "=iferror(INDEX(UNCODE!$A:$A,MATCH(E6&" & """" & Ctry & """" & ",UNCODE!$B$1:$B$" & roUN & "&UNCODE!$C$1:$C$" & roUN & ",0)),0)"
Else
    If CALC.Range("C6") <> "(ALL)" Then
    Ctry = CALC.Range("C6")
    CALC.Range("E7").FormulaArray = "=iferror(INDEX(UNCODE!$A:$A,MATCH(E6&" & """" & Ctry & """" & ",UNCODE!$B$1:$B$" & roUN & "&UNCODE!$C$1:$C$" & roUN & ",0)),0)"
    Else
    CALC.Range("E7") = "=iferror(VLOOKUP(E6,UNCODE!$B$1:$F$" & roUN & ",5,0),0)"
    End If
End If

'If CALC.Range("E7") = "#N/A" Then CALC.Range("E7") = ""


If CALC.Range("C8") = "Destination Region" Then
Ctry = "USA"
CALC.Range("E10").FormulaArray = "=iferror(INDEX(UNCODE!$A:$A,MATCH(E9&" & """" & Ctry & """" & ",UNCODE!$B$1:$B$" & roUN & "&UNCODE!$C$1:$C$" & roUN & ",0)),0)"
Else
    If CALC.Range("C9") <> "(ALL)" Then
    Ctry = CALC.Range("C9")
    CALC.Range("E10").FormulaArray = "=iferror(INDEX(UNCODE!$A:$A,MATCH(E9&" & """" & Ctry & """" & ",UNCODE!$B$1:$B$" & roUN & "&UNCODE!$C$1:$C$" & roUN & ",0)),0)"
    Else
    CALC.Range("E10") = "=iferror(VLOOKUP(E9,UNCODE!$B$1:$F$" & roUN & ",5,0),0)"
    End If
End If

'If CALC.Range("E5") = "#N/A" Then CALC.Range("E5") = ""

Application.EnableEvents = True

End Sub


Attribute VB_Name = "Module_LOADPZ"
Sub LoadPX()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

If Range("E9") = 0 Then
MsgBox "Please check Destination City"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

Dim OFR As Worksheet, CALC As Worksheet, wsUN As Worksheet, REF As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set CALC = Sheets("FreightCalculator")
Set wsUN = Sheets("UNCODE")
Set REF = Sheets("REF")

Dim s1 As String
Dim s2 As String
Dim OFRRange As Range

Sheets("UNCODE").Visible = True
Sheets("REF").Visible = True
Sheets("Surcharges Calculate (FOB)").Visible = True
Sheets("Surcharges Calculate (OFR)").Visible = True
Sheets("Surcharges Calculate (PLC)").Visible = True

s1 = CALC.Range("E7")
s2 = CALC.Range("E10")

REF.Range("AA2:AD20").ClearContents

OFR.Select
If OFR.AutoFilterMode Then OFR.Range("A1").AutoFilter
VIA = Application.WorksheetFunction.Match("VIA", OFR.Rows("2:2"), 0)
OFR.Range(OFR.Cells(2, 1), OFR.Cells(2, VIA)).AutoFilter
k = OFR.Range("A" & OFR.Rows.Count).End(xlUp).Row
If k = 2 Then MsgBox "There are no OFR Rates available. Please contact your inside sales"

DEST = Application.WorksheetFunction.Match("DESTIN", OFR.Rows("2:2"), 0)
ORIG = Application.WorksheetFunction.Match("ORIG", OFR.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", OFR.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", OFR.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", OFR.Rows("2:2"), 0)
NAC = Application.WorksheetFunction.Match("Named Account", OFR.Rows("2:2"), 0)

Set OFRRange = OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, DEST))

OFRRange.AutoFilter field:=DEST, Criteria1:=s2
OFRRange.AutoFilter field:=ORIG, Criteria1:=s1
OFRRange.AutoFilter field:=CGCO, Criteria1:="OFR"
OFRRange.AutoFilter field:=NAC, Criteria1:=""

RR = OFR.Cells(OFR.Rows.Count, 1).End(xlUp).Row
If RR > 2 Then
OFR.Range(OFR.Cells(3, POL), OFR.Cells(k, POL)).SpecialCells(xlCellTypeVisible).Copy
REF.Range("Z2").PasteSpecial xlPasteValues
OFR.Range(OFR.Cells(3, Decon), OFR.Cells(k, Decon)).SpecialCells(xlCellTypeVisible).Copy
REF.Range("AB2").PasteSpecial xlPasteValues


'Sheets("REF").Select
kk = REF.Range("Z" & REF.Rows.Count).End(xlUp).Row
kkk = REF.Range("AB" & REF.Rows.Count).End(xlUp).Row

If kk > kkk Then
kk = kk
Else
kk = kkk
End If

If kk <> 1 Then

    REF.Range("$Z$1:$AB$" & kk).RemoveDuplicates Columns:=1, Header:=xlYes
    kk = REF.Range("Z" & REF.Rows.Count).End(xlUp).Row
    kkk = REF.Range("AB" & REF.Rows.Count).End(xlUp).Row

If kk > kkk Then
kk = kk
Else
kk = kkk
End If
    REF.Range("AA2:AA" & kk).Value = "=iferror(VLOOKUP(Z2,UNCODE!$A:$B,2,0),"""")"
    REF.Range("AA2:AA" & kk).Value = REF.Range("AA2:AA" & kk).Value
    
    REF.Range("AC2:AC" & kk).Value = "=iferror(VLOOKUP(AB2,UNCODE!$A:$B,2,0),"""")"
    REF.Range("AC2:AC" & kk).Value = REF.Range("AC2:AC" & kk).Value
    
        For i = 2 To kk
    If REF.Range("Z" & i) = "" Then
    REF.Range("AA" & i) = "-"
    REF.Range("Z" & i) = "-"
    End If
    
    If REF.Range("AB" & i) = "" Then
    REF.Range("AC" & i) = "-"
    REF.Range("AB" & i) = "-"
    End If
    Next i
    
    REF.Range("AA2:AA" & kk).Copy
    REF.Range("AE2").PasteSpecial xlPasteAll
    
    REF.Range("AG2").PasteSpecial xlPasteAll
    
    REF.Range("AC2:AC" & kk).Copy
    REF.Range("AH2").PasteSpecial xlPasteAll
    
    Sheets("FreightCalculator").ComboBox11.Value = REF.Range("AA2")
    Sheets("FreightCalculator").ComboBox11.Visible = True
End If

    Sheets("FreightCalculator").ComboBox12.Value = REF.Range("AH2")

End If
Sheets("FreightCalculator").ComboBox11.ListFillRange = "LOADCY"
Sheets("FreightCalculator").ComboBox12.ListFillRange = "DECONCY"
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`

Sheets("UNCODE").Visible = False
Sheets("FreightCalculator").Select
Range("A17").Select
Application.CutCopyMode = False

Application.Calculation = xlCalculationAutomatic


End Sub


Attribute VB_Name = "Module_MasterCalculate"
Sub GetALL()

If Range("E7") = "0" Then
MsgBox "Please check the Origin City"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If Range("E10") = "0" Then
MsgBox "Please check the Origin City"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If Range("M6") = "" Or Range("M9") = "" Then
MsgBox "Please enter volume and weight"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

Call Res2
Call getCharges
Call GetRates
Call HideAll

Range("A17").Select

End Sub


Attribute VB_Name = "Module_Origins"
Sub Origins()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim FOB As Worksheet, OFR As Worksheet, PLC As Worksheet, REF As Worksheet

Set FOB = Sheets("Surcharges Calculate (FOB)")
Set OFR = Sheets("Surcharges Calculate (OFR)")
Set PLC = Sheets("Surcharges Calculate (PLC)")
Set REF = Sheets("REF")

ST = Now

Sheets("UNCODE").Visible = True
Sheets("REF").Visible = True

FOB.Visible = True
OFR.Visible = True
PLC.Visible = True

'OFR.Select
If OFR.AutoFilterMode Then OFR.Range("A1").AutoFilter
lcol = Application.WorksheetFunction.Match("DESTIN", OFR.Rows("2:2"), 0)
OFR.Range(OFR.Cells(2, 1), OFR.Cells(2, lcol)).AutoFilter
k = OFR.Range("A" & OFR.Rows.Count).End(xlUp).Row
If k = 2 Then
MsgBox "There are no Rates available"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If


POR = Application.WorksheetFunction.Match("Place Of Receipt", OFR.Rows("2:2"), 0)
Cons = Application.WorksheetFunction.Match("Consolidation CFS", OFR.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", OFR.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", OFR.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", OFR.Rows("2:2"), 0)
POD = Application.WorksheetFunction.Match("Destination CFS", OFR.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", OFR.Rows("2:2"), 0)

If Not OFR.Rows("2:2").Find("ORIG1") Is Nothing Then
ORIG = Application.WorksheetFunction.Match("ORIG1", OFR.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", OFR.Rows("2:2"), 0)

POR1 = OFR.Cells(3, POR).Address(False, False)
Cons1 = OFR.Cells(3, Cons).Address(False, False)
POL1 = OFR.Cells(3, POL).Address(False, False)
DECON1 = OFR.Cells(3, Decon).Address(False, False)
Disch1 = OFR.Cells(3, Disch).Address(False, False)
POD1 = OFR.Cells(3, POD).Address(False, False)
CGCO1 = OFR.Cells(3, CGCO).Address(False, False)

Else

OFR.Cells(1, lcol).EntireColumn.Insert

lcol1 = OFR.Cells(3, lcol).Address(False, False)
POR1 = OFR.Cells(3, POR).Address(False, False)
POL1 = OFR.Cells(3, POL).Address(False, False)
DECON1 = OFR.Cells(3, Decon).Address(False, False)
Disch1 = OFR.Cells(3, Disch).Address(False, False)
POD1 = OFR.Cells(3, POD).Address(False, False)
CGCO1 = OFR.Cells(3, CGCO).Address(False, False)

OFR.Cells(2, lcol) = "ORIG1"
OFR.Range(OFR.Cells(3, lcol), OFR.Cells(k, lcol)).Value = "=IF(" & CGCO1 & "=""OFR"", IF(" & POR1 & "<>""""," & POR1 & ", " & POL1 & "),"""")"

OFR.Cells(1, lcol).EntireColumn.Insert
OFR.Cells(2, lcol) = "ORIG"

OFR.Range(OFR.Cells(3, lcol), OFR.Cells(k, lcol)).Value = "=IF(" & POR1 & "<>""""," & POR1 & ", " & POL1 & ")"

ORIG = Application.WorksheetFunction.Match("ORIG1", OFR.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", OFR.Rows("2:2"), 0)
NAC = Application.WorksheetFunction.Match("Named Account", OFR.Rows("2:2"), 0)
End If

On Error Resume Next
OFR.ShowAllData
On Error GoTo 0


OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, DEST)).AutoFilter field:=ORIG, Criteria1:="<>"
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, DEST)).AutoFilter field:=NAC, Criteria1:=""

Application.Calculation = xlCalculationAutomatic

Rowz = OFR.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If Rowz >= 1 Then

OFR.Range(OFR.Cells(3, ORIG), OFR.Cells(k, DEST)).SpecialCells(xlCellTypeVisible).Copy

Else

OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, DEST)).AutoFilter field:=ORIG, Criteria1:="<>"
OFR.Range(OFR.Cells(2, 1), OFR.Cells(k, DEST)).AutoFilter field:=NAC, Criteria1:="<>"

OFR.Range(OFR.Cells(3, ORIG), OFR.Cells(k, DEST)).SpecialCells(xlCellTypeVisible).Copy

End If


REF.Range("A2").PasteSpecial xlPasteValues

Application.Calculation = xlCalculationManual

kk = REF.Range("A" & REF.Rows.Count).End(xlUp).Row

On Error Resume Next

OFR.ShowAllData

On Error GoTo 0


'OFR.Select
OFR.Range(OFR.Cells(3, lcol + 2), OFR.Cells(k, lcol + 2)).Value = "=IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disch1 & "))"
OFR.Cells(2, lcol + 3) = "VIA"
OFR.Range(OFR.Cells(3, lcol + 3), OFR.Cells(k, lcol + 3)).Value = "=IF(" & DECON1 & "<>""""," & DECON1 & "," & Disch1 & ")"

'FOB

If Not FOB.Rows("2:2").Find("ORIG") Is Nothing Then
ORIG = Application.WorksheetFunction.Match("ORIG", FOB.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", FOB.Rows("2:2"), 0)
Else
lcol = FOB.Cells(2, FOB.Columns.Count).End(xlToLeft).Column
lrow = FOB.Cells(FOB.Rows.Count, 1).End(xlUp).Row

POR = Application.WorksheetFunction.Match("Place Of Receipt", FOB.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", FOB.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", FOB.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", FOB.Rows("2:2"), 0)
'CFS = Application.WorksheetFunction.Match("Final CFS(uncode)", FOB.Rows("2:2"), 0)
POD = Application.WorksheetFunction.Match("Destination CFS", FOB.Rows("2:2"), 0)

POR1 = FOB.Cells(3, POR).Address(False, False)
POL1 = FOB.Cells(3, POL).Address(False, False)
DECON1 = FOB.Cells(3, Decon).Address(False, False)
Disch1 = FOB.Cells(3, Disch).Address(False, False)
'CFS1 = FOB.Cells(3, CFS).Address(False, False)
POD1 = FOB.Cells(3, POD).Address(False, False)

FOB.Cells(2, lcol + 1) = "ORIG"
FOB.Cells(2, lcol + 2) = "DESTIN"
FOB.Cells(2, lcol + 3) = "VIA"

If lrow > 2 Then

FOB.Range(FOB.Cells(3, lcol + 1), FOB.Cells(lrow, lcol + 1)).Value = "=IF(" & POR1 & "<>""""," & POR1 & ", " & POL1 & ")"
FOB.Range(FOB.Cells(3, lcol + 2), FOB.Cells(lrow, lcol + 2)).Value = "=IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))"
FOB.Range(FOB.Cells(3, lcol + 3), FOB.Cells(lrow, lcol + 3)).Value = "=IF(" & DECON1 & "<>""""," & DECON1 & "," & Disch1 & ")"

End If

End If

'PLC

If Not PLC.Rows("2:2").Find("ORIG") Is Nothing Then
ORIG = Application.WorksheetFunction.Match("ORIG", PLC.Rows("2:2"), 0)
DEST = Application.WorksheetFunction.Match("DESTIN", PLC.Rows("2:2"), 0)
Else
lcol = PLC.Cells(2, PLC.Columns.Count).End(xlToLeft).Column
lrow = PLC.Cells(PLC.Rows.Count, 1).End(xlUp).Row

POR = Application.WorksheetFunction.Match("Place Of Receipt", PLC.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", PLC.Rows("2:2"), 0)
Decon = Application.WorksheetFunction.Match("Deconsolidation CFS", PLC.Rows("2:2"), 0)
Disch = Application.WorksheetFunction.Match("Port Of Discharge", PLC.Rows("2:2"), 0)
'CFS = Application.WorksheetFunction.Match("Final CFS uncode", PLC.Rows("2:2"), 0)
POD = Application.WorksheetFunction.Match("Destination CFS", PLC.Rows("2:2"), 0)

POR1 = PLC.Cells(3, POR).Address(False, False)
POL1 = PLC.Cells(3, POL).Address(False, False)
DECON1 = PLC.Cells(3, Decon).Address(False, False)
Disch1 = PLC.Cells(3, Disch).Address(False, False)
'CFS1 = PLC.Cells(3, CFS).Address(False, False)
POD1 = PLC.Cells(3, POD).Address(False, False)

PLC.Cells(2, lcol + 1) = "ORIG"
PLC.Cells(2, lcol + 2) = "DESTIN"
PLC.Cells(2, lcol + 3) = "VIA"

If lrow > 2 Then

PLC.Range(PLC.Cells(3, lcol + 1), PLC.Cells(lrow, lcol + 1)).Value = "=IF(" & POR1 & "<>""""," & POR1 & ", " & POL1 & ")"
PLC.Range(PLC.Cells(3, lcol + 2), PLC.Cells(lrow, lcol + 2)).Value = "=IF(" & POD1 & "<>""""," & POD1 & ",IF(" & DECON1 & "<>""""," & DECON1 & "," & Disc1 & "))"
PLC.Range(PLC.Cells(3, lcol + 3), PLC.Cells(lrow, lcol + 3)).Value = "=IF(" & DECON1 & "<>""""," & DECON1 & "," & Disch1 & ")"

End If

End If

'Sheets("REF").Select
If REF.AutoFilterMode Then REF.Range("A1").AutoFilter
REF.Range("A1:X1").AutoFilter
REF.Range("$A$1:$B$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes

REF.Range("E2:E" & kk) = REF.Range("B2:B" & kk).Value
REF.Range("B2:B" & kk) = "=iferror(VLOOKUP(A2,UNCODE!$A:$F,5,0),"""")"
REF.Range("C2:C" & kk) = "=iferror(VLOOKUP(A2,UNCODE!$A:$F,3,0),"""")"
REF.Range("D2:D" & kk) = "=iferror(VLOOKUP(A2,UNCODE!$A:$F,2,0),"""")"
REF.Range("F2:F" & kk) = "=iferror(VLOOKUP(E2,UNCODE!$A:$F,5,0),"""")"
REF.Range("G2:G" & kk) = "=iferror(VLOOKUP(E2,UNCODE!$A:$F,3,0),"""")"
REF.Range("H2:H" & kk) = "=iferror(VLOOKUP(E2,UNCODE!$A:$F,2,0),"""")"

Application.Calculation = xlCalculationAutomatic

REF.Range("B2:H" & kk) = REF.Range("B2:H" & kk).Value

Application.Calculation = xlCalculationManual

REF.Range("J2:J" & kk) = REF.Range("B2:B" & kk).Value
REF.Range("$J$1:$J$" & kk).RemoveDuplicates Columns:=Array(1), Header:=xlYes
ORr = REF.Range("J" & Rows.Count).End(xlUp).Row
REF.Range("J" & ORr + 1) = "(ALL)"
REF.Range("J1:J" & ORr + 1).Sort key1:=REF.Range("J1:J" & ORr), Order1:=xlAscending, Header:=xlYes

REF.Range("L2:M" & kk) = REF.Range("B2:C" & kk).Value
REF.Range("$L$1:$M$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCr = REF.Range("L" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCr + 1, 13), REF.Cells(2 * OCr - 1, 13)) = REF.Range(REF.Cells(2, 13), REF.Cells(OCr, 13)).Value
REF.Range(REF.Cells(OCr + 1, 12), REF.Cells(2 * OCr - 1, 12)) = "(ALL)"
REF.Range("L" & 2 * OCr) = "(ALL)"
REF.Range("M" & 2 * OCr) = "(ALL)"
REF.Range("L1:M" & 2 * OCr).Sort key1:=REF.Range("L1:L" & 2 * OCr), Order1:=xlAscending, key2:=REF.Range("M1:M" & 2 * OCr), Order2:=xlAscending, Header:=xlYes

OCr = REF.Range("L" & REF.Rows.Count).End(xlUp).Row
ORr = REF.Range("J" & REF.Rows.Count).End(xlUp).Row

Count = 0
For i = 3 To OCr
If REF.Range("M" & i) = "USA" Then
Count = Count + 1
End If
Next

If Count = OCr - 2 Then
Sheets("FreightCalculator").Range("A5") = "Origin Country"
Sheets("FreightCalculator").Range("C5") = "Origin Region"

REF.Range("M2:M" & ORr) = REF.Range("J2:J" & ORr).Value
REF.Range("L3:L" & ORr) = "USA"
REF.Range("J3:J" & ORr).ClearContents
REF.Range("J3") = "USA"
REF.Range("L" & ORr + 1 & ":M" & OCr).ClearContents
REF.Range("M" & ORr + 1 & ":M" & 2 * ORr - 2) = REF.Range("M3:M" & ORr).Value
REF.Range("L" & ORr + 1 & ":L" & 2 * ORr - 2) = "(ALL)"
OCr = REF.Range("L" & REF.Rows.Count).End(xlUp).Row
REF.Range("L1:M" & 2 * OCr).Sort key1:=REF.Range("L1:L" & 2 * OCr), Order1:=xlAscending, key2:=REF.Range("M1:M" & 2 * OCr), Order2:=xlAscending, Header:=xlYes

REF.Range("O2:O" & kk) = REF.Range("B2:B" & kk).Value
REF.Range("P2:P" & kk) = REF.Range("D2:D" & kk).Value
REF.Range("$O$1:$P$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCyr = REF.Range("O" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCyr + 1, 16), REF.Cells(2 * OCyr - 1, 16)) = REF.Range(REF.Cells(2, 16), REF.Cells(OCyr, 16)).Value
REF.Range(REF.Cells(OCyr + 1, 15), REF.Cells(2 * OCyr - 1, 15)) = "(ALL)"
REF.Range("O" & 2 * OCyr) = "(ALL)"
REF.Range("P" & 2 * OCyr) = "(ALL)"
REF.Range("O1:P" & 2 * OCyr).Sort key1:=REF.Range("O1:O" & 2 * OCyr), Order1:=xlAscending, key2:=REF.Range("P1:P" & 2 * OCyr), Order2:=xlAscending, Header:=xlYes

Else

REF.Range("O2:P" & kk) = REF.Range("C2:D" & kk).Value
REF.Range("$O$1:$P$" & kk).RemoveDuplicates Columns:=Array(1, 2), Header:=xlYes
OCyr = REF.Range("O" & REF.Rows.Count).End(xlUp).Row
REF.Range(REF.Cells(OCyr + 1, 16), REF.Cells(2 * OCyr - 1, 16)) = REF.Range(REF.Cells(2, 16), REF.Cells(OCyr, 16)).Value
REF.Range(REF.Cells(OCyr + 1, 15), REF.Cells(2 * OCyr - 1, 15)) = "(ALL)"
REF.Range("O" & 2 * OCyr) = "(ALL)"
REF.Range("P" & 2 * OCyr) = "(ALL)"
REF.Range("O1:P" & 2 * OCyr).Sort key1:=REF.Range("O1:O" & 2 * OCyr), Order1:=xlAscending, key2:=REF.Range("P1:P" & 2 * OCyr), Order2:=xlAscending, Header:=xlYes

End If

Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True


End Sub

Attribute VB_Name = "Module_PLC2"
Sub PLCs2()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long
Dim j As Long
Dim k As Long
Dim Data As Range
Dim CriRng As Range
Dim str As String
Dim CopyTo As Range

Dim OFR As Worksheet, PLC As Worksheet, FOB As Worksheet, PLCFinal As Worksheet, SURC As Worksheet, REF As Worksheet, wsName As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set wsOFRFinal = Sheets("OFR")
Set PLC = Sheets("Surcharges Calculate (PLC)")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set PLCFinal = Sheets("PLC")
Set SURC = Sheets("FOB")
Set REF = Sheets("REF")
Set wsName = Sheets("Named Accounts")

If Not PLC.Rows("2:2").Find("VIA") Is Nothing Then
VIA = Application.WorksheetFunction.Match("VIA", PLC.Rows("2:2"), 0)
Else
MsgBox "OFR has not been processed"
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

If PLC.AutoFilterMode Then PLC.Range("A1").AutoFilter
PLC.Range(PLC.Cells(2, 1), PLC.Cells(2, VIA)).AutoFilter

NACA = Application.WorksheetFunction.Match("Named Account", PLC.Rows("2:2"), 0)

lr = PLC.Cells(PLC.Rows.Count, 1).End(xlUp).Row

If lr = 2 Then
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If

OCFSP = Application.WorksheetFunction.Match("ORIG", PLC.Rows("2:2"), 0)
DESTINP = Application.WorksheetFunction.Match("DESTIN", PLC.Rows("2:2"), 0)
VIAP = Application.WorksheetFunction.Match("VIA", PLC.Rows("2:2"), 0)
CGCOP = Application.WorksheetFunction.Match("Charge Code", PLC.Rows("2:2"), 0)
CURRP = Application.WorksheetFunction.Match("Currency", PLC.Rows("2:2"), 0)
RATEP = Application.WorksheetFunction.Match("Rate", PLC.Rows("2:2"), 0)
BASIP = Application.WorksheetFunction.Match("Rate Basis", PLC.Rows("2:2"), 0)
MAXP = Application.WorksheetFunction.Match("Maximum", PLC.Rows("2:2"), 0)
MINP = Application.WorksheetFunction.Match("Minimum", PLC.Rows("2:2"), 0)
EFFP = Application.WorksheetFunction.Match("Effective Date", PLC.Rows("2:2"), 0)
EXPP = Application.WorksheetFunction.Match("Expiration Date", PLC.Rows("2:2"), 0)
COMMP = Application.WorksheetFunction.Match("Comments", PLC.Rows("2:2"), 0)
ASPP = Application.WorksheetFunction.Match("Aspect", PLC.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", PLC.Rows("2:2"), 0)


PLC.Range(PLC.Cells(2, 1), PLC.Cells(lr, VIA)).AutoFilter field:=NACA, Criteria1:=""

lr2 = PLC.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 > 2 Then
 

OCFS = Application.WorksheetFunction.Match("Origin UN Code", PLCFinal.Rows("2:2"), 0)
RVIA = Application.WorksheetFunction.Match("Routing Via", PLCFinal.Rows("2:2"), 0)
FCFS = Application.WorksheetFunction.Match("Destination UN Code", PLCFinal.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", PLCFinal.Rows("2:2"), 0)
TheRate = Application.WorksheetFunction.Match("Amount", PLCFinal.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("Rate Basis", PLCFinal.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", PLCFinal.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", PLCFinal.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", PLCFinal.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", PLCFinal.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", PLCFinal.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", PLCFinal.Rows("2:2"), 0)
DPOL = Application.WorksheetFunction.Match("POL", PLCFinal.Rows("2:2"), 0)

PLC.Range(PLC.Cells(3, OCFSP), PLC.Cells(lr, OCFSP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, OCFS), PLCFinal.Cells(lr2 + 1, OCFS)).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, DESTINP), PLC.Cells(lr, DESTINP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, FCFS), PLCFinal.Cells(lr2 + 1, FCFS)).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, RATEP), PLC.Cells(lr, RATEP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, TheRate), PLCFinal.Cells(lr2 + 1, TheRate)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, BASIP), PLC.Cells(lr, BASIP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, RatB), PLCFinal.Cells(lr2 + 1, RatB)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, MINP), PLC.Cells(lr, MINP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, MINR), PLCFinal.Cells(lr2 + 1, MINR)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, MAXP), PLC.Cells(lr, MAXP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, MAXR), PLCFinal.Cells(lr2 + 1, MAXR)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, COMMP), PLC.Cells(lr, COMMP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, COMM), PLCFinal.Cells(lr2 + 1, COMM)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, EFFP), PLC.Cells(lr, EXPP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, EFFD), PLCFinal.Cells(lr2 + 1, EXPD)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, VIAP), PLC.Cells(lr, VIAP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, RVIA), PLCFinal.Cells(lr2 + 1, RVIA)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, CGCOP), PLC.Cells(lr, CGCOP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, CGCO), PLCFinal.Cells(lr2 + 1, CGCO)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, CURRP), PLC.Cells(lr, CURRP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, CURR), PLCFinal.Cells(lr2 + 1, CURR)).PasteSpecial xlPasteAll
  
PLC.Range(PLC.Cells(3, POL), PLC.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, DPOL), PLCFinal.Cells(lr2 + 1, DPOL)).PasteSpecial xlPasteAll

j = PLCFinal.Cells(PLCFinal.Rows.Count, 1).End(xlUp).Row

Dim cols As Variant

If Not PLC.Range(PLC.Cells(3, ASPP), PLC.Cells(lr, ASPP)).Find("TPB") Is Nothing Then

Sheets("PLC").Columns("Q:Q").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Sheets("PLC").Range("Q2") = "Pay To"
ASP = Application.WorksheetFunction.Match("Pay To", PLCFinal.Rows("2:2"), 0)

PLC.Range(PLC.Cells(3, ASPP), PLC.Cells(lr, ASPP)).SpecialCells(xlCellTypeVisible).Copy
PLCFinal.Range(PLCFinal.Cells(3, ASP), PLCFinal.Cells(lr2, ASP)).PasteSpecial xlPasteAll

PLCCOL = PLCFinal.Cells(2, PLCFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To PLCCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1

Next i

Application.DisplayAlerts = False
PLCFinal.Range(PLCFinal.Cells(2, 1), PLCFinal.Cells(j, PLCCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True
PLCFinal.Range(PLCFinal.Cells(3, ASP), PLCFinal.Cells(j, ASP)).Replace What:="TPB", Replacement:="CFS", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
PLCFinal.Range(PLCFinal.Cells(3, ASP), PLCFinal.Cells(j, ASP)).Replace What:="", Replacement:="SHIPCO", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False

Else

PLCCOL = PLCFinal.Cells(2, PLCFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To PLCCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
PLCFinal.Range(PLCFinal.Cells(2, 1), PLCFinal.Cells(j, PLCCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

End If

ORUN1 = PLCFinal.Cells(3, OCFS).Address(False, False)
DESUN1 = PLCFinal.Cells(3, FCFS).Address(False, False)
CGCO1 = PLCFinal.Cells(3, CGCO).Address(False, False)

PLCFinal.Range(PLCFinal.Cells(3, OCFS + 1), PLCFinal.Cells(j, OCFS + 1)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, OCFS + 2), PLCFinal.Cells(j, OCFS + 2)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, OCFS + 3), PLCFinal.Cells(j, OCFS + 3)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, FCFS + 1), PLCFinal.Cells(j, FCFS + 1)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, FCFS + 2), PLCFinal.Cells(j, FCFS + 2)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, FCFS + 3), PLCFinal.Cells(j, FCFS + 3)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
PLCFinal.Range(PLCFinal.Cells(3, CGCO + 1), PLCFinal.Cells(j, CGCO + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"

PLCFinal.Range(PLCFinal.Cells(3, OCFS + 1), PLCFinal.Cells(j, CGCO + 1)).Value = PLCFinal.Range(PLCFinal.Cells(3, OCFS + 1), PLCFinal.Cells(j, CGCO + 1)).Value

PLCFinal.Cells(1, EFFD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"
PLCFinal.Cells(1, EXPD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"

roPLC = PLCFinal.Cells(PLCFinal.Rows.Count, 1).End(xlUp).Row
coPLC = PLCFinal.Cells(2, PLCFinal.Columns.Count).End(xlToLeft).Column

Application.Calculation = xlCalculationAutomatic

OCFS = Application.WorksheetFunction.Match("Origin UN Code", PLCFinal.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", PLCFinal.Rows("2:2"), 0)
j = PLCFinal.Range("A" & Rows.Count).End(xlUp).Row

PLCFinal.Range(PLCFinal.Cells(3, OCFS), PLCFinal.Cells(j, CGCO + 1)).Value = PLCFinal.Range(PLCFinal.Cells(3, OCFS), PLCFinal.Cells(j, CGCO + 1)).Value

If roPLC > 2 Then
'PLCFinal.Visible = xlVeryHidden
'Else
RVIA = Application.WorksheetFunction.Match("Routing Via", PLCFinal.Rows("2:2"), 0)
PLCFinal.Range(PLCFinal.Cells(3, RVIA), PLCFinal.Cells(roPLC, RVIA)).Replace What:="0", Replacement:="", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
PLCFinal.Range(PLCFinal.Cells(3, 1), PLCFinal.Cells(roPLC, coPLC)).Sort key1:=PLCFinal.Range(PLCFinal.Cells(3, OCFS), PLCFinal.Cells(roPLC, OCFS)), Order1:=xlAscending, key2:=PLCFinal.Range(PLCFinal.Cells(3, FCFS), PLCFinal.Cells(roPLC, FCFS)), Order2:=xlAscending, Header:=xlNo
End If

End If

'Named Accounts

Application.Calculation = xlCalculationManual


PLC.ShowAllData
PLC.Range(PLC.Cells(2, 1), PLC.Cells(lr, VIA)).AutoFilter field:=NACA, Criteria1:="<>"

lr2 = PLC.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count - 1

If lr2 > 2 Then
 
roNA = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row + 1
 
NAC = Application.WorksheetFunction.Match("Named Account", wsName.Rows("2:2"), 0)
OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
RVIA = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
FCFS = Application.WorksheetFunction.Match("Destination UN Code", wsName.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)
TheRate = Application.WorksheetFunction.Match("Amount", wsName.Rows("2:2"), 0)
RatB = Application.WorksheetFunction.Match("Rate Basis", wsName.Rows("2:2"), 0)
MINR = Application.WorksheetFunction.Match("Minimum", wsName.Rows("2:2"), 0)
MAXR = Application.WorksheetFunction.Match("Maximum", wsName.Rows("2:2"), 0)
EFFD = Application.WorksheetFunction.Match("Effective Date", wsName.Rows("2:2"), 0)
EXPD = Application.WorksheetFunction.Match("Expiration Date", wsName.Rows("2:2"), 0)
COMM = Application.WorksheetFunction.Match("Comments / Remarks", wsName.Rows("2:2"), 0)
CURR = Application.WorksheetFunction.Match("Currency", wsName.Rows("2:2"), 0)
TYO = Application.WorksheetFunction.Match("Type", wsName.Rows("2:2"), 0)
DPOL = Application.WorksheetFunction.Match("Type", wsName.Rows("2:2"), 0)


PLC.Range(PLC.Cells(3, NACA), PLC.Cells(lr, NACA)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, NAC), wsName.Cells(lr2 + 1 + roNA, NAC)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, OCFSP), PLC.Cells(lr, OCFSP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(lr2 + 1 + roNA, OCFS)).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, DESTINP), PLC.Cells(lr, DESTINP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, FCFS), wsName.Cells(lr2 + 1 + roNA, FCFS)).PasteSpecial xlPasteValues

PLC.Range(PLC.Cells(3, RATEP), PLC.Cells(lr, RATEP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, TheRate), wsName.Cells(lr2 + 1 + roNA, TheRate)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, BASIP), PLC.Cells(lr, BASIP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, RatB), wsName.Cells(lr2 + 1 + roNA, RatB)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, MINP), PLC.Cells(lr, MINP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, MINR), wsName.Cells(lr2 + 1 + roNA, MINR)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, MAXP), PLC.Cells(lr, MAXP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, MAXR), wsName.Cells(lr2 + 1 + roNA, MAXR)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, COMMP), PLC.Cells(lr, COMMP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, COMM), wsName.Cells(lr2 + 1 + roNA, COMM)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, EFFP), PLC.Cells(lr, EXPP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, EFFD), wsName.Cells(lr2 + 1 + roNA, EXPD)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, VIAP), PLC.Cells(lr, VIAP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, RVIA), wsName.Cells(lr2 + 1 + roNA, RVIA)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, CGCOP), PLC.Cells(lr, CGCOP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, CGCO), wsName.Cells(lr2 + 1 + roNA, CGCO)).PasteSpecial xlPasteAll

PLC.Range(PLC.Cells(3, CURRP), PLC.Cells(lr, CURRP)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, CURR), wsName.Cells(lr2 + 1 + roNA, CURR)).PasteSpecial xlPasteAll

wsName.Range(wsName.Cells(roNA, TYO), wsName.Cells(lr2 + 1 + roNA, TYO)) = "PLC"

PLC.Range(PLC.Cells(3, POL), PLC.Cells(lr, POL)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, DPOL), wsName.Cells(lr2 + 1 + roNA, DPOL)).PasteSpecial xlPasteAll

  
j = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row

If Not PLC.Range(PLC.Cells(3, ASPP), PLC.Cells(lr2, ASPP)).Find("TPB") Is Nothing Then

wsName.Columns("Q:Q").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
wsName.Range("Q2") = "Pay To"
ASP = Application.WorksheetFunction.Match("Pay To", wsName.Rows("2:2"), 0)

PLC.Range(PLC.Cells(3, NACA), PLC.Cells(lr, NACA)).SpecialCells(xlCellTypeVisible).Copy
wsName.Range(wsName.Cells(roNA, NAC), wsName.Cells(lr2 + 1 + roNA, NAC)).PasteSpecial xlPasteAll

PLCCOL = PLCFinal.Cells(2, PLCFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To PLCCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
PLCFinal.Range(PLCFinal.Cells(2, 1), PLCFinal.Cells(j, PLCCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

wsName.Range(wsName.Cells(3, ASP), wsName.Cells(j, ASP)).Replace What:="TPB", Replacement:="CFS", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
wsName.Range(wsName.Cells(3, ASP), wsName.Cells(j, ASP)).Replace What:="", Replacement:="SHIPCO", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False

Else

PLCCOL = PLCFinal.Cells(2, PLCFinal.Columns.Count).End(xlToLeft).Column

ReDim cols(0 To PLCCOL - 1)
For i = 0 To UBound(cols)
cols(i) = i + 1
Next i

Application.DisplayAlerts = False
PLCFinal.Range(PLCFinal.Cells(2, 1), PLCFinal.Cells(j, PLCCOL)).RemoveDuplicates Columns:=(cols), Header:=xlYes
Application.DisplayAlerts = True

End If

ORUN1 = wsName.Cells(roNA, OCFS).Address(False, False)
DESUN1 = wsName.Cells(roNA, FCFS).Address(False, False)
CGCO1 = wsName.Cells(roNA, CGCO).Address(False, False)

wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, OCFS + 1)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
wsName.Range(wsName.Cells(roNA, OCFS + 2), wsName.Cells(j, OCFS + 2)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(roNA, OCFS + 3), wsName.Cells(j, OCFS + 3)).Value = "=iferror(vlookup(" & ORUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 1), wsName.Cells(j, FCFS + 1)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,4,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 2), wsName.Cells(j, FCFS + 2)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,3,0),"""")"
wsName.Range(wsName.Cells(roNA, FCFS + 3), wsName.Cells(j, FCFS + 3)).Value = "=iferror(vlookup(" & DESUN1 & ", 'UNCODE'!$A:$F,2,0),"""")"
wsName.Range(wsName.Cells(roNA, CGCO + 1), wsName.Cells(j, CGCO + 1)).Value = "=iferror(vlookup(" & CGCO1 & ", 'UNCODE'!$K:$L,2,0),"""")"

wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, CGCO + 1)).Value = wsName.Range(wsName.Cells(roNA, OCFS + 1), wsName.Cells(j, CGCO + 1)).Value

wsName.Cells(1, EFFD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"
wsName.Cells(1, EXPD).EntireColumn.NumberFormat = "[$-409]dd-mmm-yy;@"

roPLC = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row
coPLC = wsName.Cells(2, wsName.Columns.Count).End(xlToLeft).Column

roPLC = wsName.Cells(wsName.Rows.Count, 1).End(xlUp).Row

Application.Calculation = xlCalculationAutomatic

OCFS = Application.WorksheetFunction.Match("Origin UN Code", wsName.Rows("2:2"), 0)
CGCO = Application.WorksheetFunction.Match("Charge Code", wsName.Rows("2:2"), 0)
j = wsName.Range("A" & Rows.Count).End(xlUp).Row

wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(j, CGCO + 1)).Value = wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(j, CGCO + 1)).Value

If roPLC > 2 Then
RVIA = Application.WorksheetFunction.Match("Routing Via", wsName.Rows("2:2"), 0)
wsName.Range(wsName.Cells(roNA, RVIA), wsName.Cells(roPLC, RVIA)).Replace What:="0", Replacement:="", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
wsName.Range(wsName.Cells(roNA, 1), wsName.Cells(roPLC, coPLC)).Sort key1:=wsName.Range(wsName.Cells(roNA, OCFS), wsName.Cells(roPLC, OCFS)), Order1:=xlAscending, key2:=wsName.Range(wsName.Cells(roNA, FCFS), wsName.Cells(roPLC, FCFS)), Order2:=xlAscending, Header:=xlNo
End If

End If

Application.EnableEvents = True

End Sub


Attribute VB_Name = "Module_PRECLEAN"
Sub PRECLEAN()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

Dim OFR As Worksheet, PLC As Worksheet, FOB As Worksheet

Set OFR = Sheets("Surcharges Calculate (OFR)")
Set PLC = Sheets("Surcharges Calculate (PLC)")
Set FOB = Sheets("Surcharges Calculate (FOB)")

'Place of Receipt (uncode/CountryCode/RegionCode)
'Port of Load  (uncode /CountryCode/RegionCode)

POR = Application.WorksheetFunction.Match("Place Of Receipt", OFR.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", OFR.Rows("2:2"), 0)

lrow = OFR.Cells(OFR.Rows.Count, 1).End(xlUp).Row

For i = 3 To lrow
ThePOR = OFR.Cells(i, POR)
ThePOL = OFR.Cells(i, POL)

If ThePOR = ThePOL Then
OFR.Cells(i, POL) = ""
End If

Next i


'Place of Receipt(uncode)
'Load                 (uncode)

POR = Application.WorksheetFunction.Match("Place Of Receipt", PLC.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", PLC.Rows("2:2"), 0)

lrow = PLC.Cells(PLC.Rows.Count, 1).End(xlUp).Row

For i = 3 To lrow
ThePOR = PLC.Cells(i, POR)
ThePOL = PLC.Cells(i, POL)

If ThePOR = ThePOL Then
PLC.Cells(i, POL) = ""
End If

Next i


'Place of Receipt(uncode)
'Port of Load (uncode)

POR = Application.WorksheetFunction.Match("Place Of Receipt", FOB.Rows("2:2"), 0)
POL = Application.WorksheetFunction.Match("Port Of Loading", FOB.Rows("2:2"), 0)

lrow = FOB.Cells(FOB.Rows.Count, 1).End(xlUp).Row

For i = 3 To lrow
ThePOR = FOB.Cells(i, POR)
ThePOL = FOB.Cells(i, POL)

If ThePOR = ThePOL Then
FOB.Cells(i, POL) = ""
End If

Next i

Application.Calculation = xlCalculationAutomatic

End Sub

Attribute VB_Name = "Module_Reset"
Sub Res()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long, j As Long, k As Long, kk As Long
Dim CALC As Worksheet, REF As Worksheet, OFR As Worksheet, PLC As Worksheet, FOB As Worksheet

Set CALC = Sheets("FreightCalculator")
Set REF = Sheets("REF")
Set OFR = Sheets("Surcharges Calculate (OFR)")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set PLC = Sheets("Surcharges Calculate (PLC)")

Range("T1") = "(ALL)"

roOR = REF.Cells(REF.Rows.Count, 10).End(xlUp).Row

CALC.Rows("10:100").Hidden = False

CALC.Range("H9").ClearContents
CALC.Range("H6").ClearContents

CALC.Range("A8") = "Destination Region"
CALC.Range("C8") = "Destination Country"

If roOR = 3 And REF.Range("J3") = "USA" Then
CALC.Range("A5") = "Origin Country"
CALC.Range("C5") = "Origin Region"
Else
CALC.Range("A5") = "Origin Region"
CALC.Range("C5") = "Origin Country"
End If

CALC.Rows("10:27").Hidden = False

kk = REF.Range("A" & REF.Rows.Count).End(xlUp).Row
If kk > 1 Then REF.Range("R2:AH" & kk * 2).ClearContents

ColCurr = CALC.Cells(17, Columns.Count).End(xlToLeft).Column

If ColCurr > 14 Then
CALC.Range(CALC.Cells(12, 14), CALC.Cells(15, ColCurr)).ClearContents
CALC.Range(CALC.Cells(11, 14), CALC.Cells(11, ColCurr)).ClearContents
CALC.Range(CALC.Cells(11, 15), CALC.Cells(15, ColCurr)).ClearFormats
Else
CALC.Range(CALC.Cells(11, 14), CALC.Cells(15, 14)).ClearContents
End If

kk = CALC.Range("A" & CALC.Rows.Count).End(xlUp).Row

i = Application.Match("Ocean Freight Rates", CALC.Columns("A:A"), 0)

If kk > 18 Then
CALC.Range("A" & kk + 3).Copy
CALC.Rows("19:" & kk + 1).PasteSpecial xlPasteAll

End If

CALC.Rows("11:27").Hidden = True
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CALC.Range("M6").Value = ""
CALC.Range("M9").Value = ""

On Error Resume Next
If OFR.AutoFilterMode Then OFR.ShowAllData
If PLC.AutoFilterMode Then PLC.ShowAllData
If FOB.AutoFilterMode Then FOB.ShowAllData
On Error GoTo 0

CALC.Select
ActiveSheet.ComboBox5.Value = "(ALL)"
ActiveSheet.ComboBox6.Value = "(ALL)"
ActiveSheet.ComboBox7.Value = " (ALL)"
ActiveSheet.ComboBox9.Value = "(ALL)"
ActiveSheet.ComboBox8.Value = "(ALL)"
ActiveSheet.ComboBox10.Value = "(ALL)"
ActiveSheet.ComboBox11.Value = ""
ActiveSheet.ComboBox12.Value = ""
ActiveSheet.ComboBox12.Visible = False
ActiveSheet.ComboBox11.Visible = False

CALC.Range("E6").Select

Sheet1.OpButNo = True

Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True


End Sub

Sub Res2()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

Dim i As Long, j As Long, k As Long, kk As Long
Dim CALC As Worksheet, REF As Worksheet, OFR As Worksheet, PLC As Worksheet, FOB As Worksheet

Set CALC = Sheets("FreightCalculator")
Set REF = Sheets("REF")
Set OFR = Sheets("Surcharges Calculate (OFR)")
Set FOB = Sheets("Surcharges Calculate (FOB)")
Set PLC = Sheets("Surcharges Calculate (PLC)")

roOR = REF.Cells(REF.Rows.Count, 10).End(xlUp).Row

CALC.Rows("10:100").Hidden = False

ColCurr = CALC.Cells(17, Columns.Count).End(xlToLeft).Column

If ColCurr > 14 Then
CALC.Range(CALC.Cells(12, 14), CALC.Cells(15, ColCurr)).ClearContents
CALC.Range(CALC.Cells(11, 14), CALC.Cells(11, ColCurr)).ClearContents
CALC.Range(CALC.Cells(11, 15), CALC.Cells(15, ColCurr)).ClearFormats
Else
CALC.Range(CALC.Cells(11, 14), CALC.Cells(15, 14)).ClearContents
End If

kk = CALC.Range("A" & CALC.Rows.Count).End(xlUp).Row

i = Application.Match("Ocean Freight Rates", CALC.Columns("A:A"), 0)

If kk > 18 Then
CALC.Range("A" & kk + 3).Copy
CALC.Rows("19:" & kk + 1).PasteSpecial xlPasteAll

End If

CALC.Rows("11:27").Hidden = True
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

On Error Resume Next
If OFR.AutoFilterMode Then OFR.ShowAllData
If PLC.AutoFilterMode Then PLC.ShowAllData
If FOB.AutoFilterMode Then FOB.ShowAllData
On Error GoTo 0

CALC.Select

CALC.Range("E6").Select


Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True


End Sub



Attribute VB_Name = "Module_UnhideAll"
Sub unhideall()
For i = 1 To Sheets.Count
Sheets(i).Visible = True
Next i


End Sub
Sub HideAll()

If Sheets("UNCODE").Visible = True Then Sheets("UNCODE").Visible = xlVeryHidden
If Sheets("Surcharges Calculate (OFR)").Visible = True Then Sheets("Surcharges Calculate (OFR)").Visible = xlVeryHidden
If Sheets("Surcharges Calculate (FOB)").Visible = True Then Sheets("Surcharges Calculate (FOB)").Visible = xlVeryHidden
If Sheets("Surcharges Calculate (PLC)").Visible = True Then Sheets("Surcharges Calculate (PLC)").Visible = xlVeryHidden
If Sheets("REF").Visible = True Then Sheets("REF").Visible = xlVeryHidden

End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OpButNo, 31, 2, MSForms, OptionButton"
Attribute VB_Control = "OpButYes, 30, 3, MSForms, OptionButton"
Attribute VB_Control = "ComboBox12, 27, 4, MSForms, ComboBox"
Attribute VB_Control = "ComboBox11, 26, 5, MSForms, ComboBox"
Attribute VB_Control = "ComboBox10, 25, 6, MSForms, ComboBox"
Attribute VB_Control = "ComboBox9, 24, 7, MSForms, ComboBox"
Attribute VB_Control = "ComboBox8, 23, 8, MSForms, ComboBox"
Attribute VB_Control = "ComboBox5, 15, 9, MSForms, ComboBox"
Attribute VB_Control = "ComboBox7, 18, 10, MSForms, ComboBox"
Attribute VB_Control = "ComboBox6, 20, 11, MSForms, ComboBox"

Dim ORIGIN1 As String
Dim DESTIN1 As String
Dim DECON1 As String
Dim Counter As Integer




Private Sub ComboBox10_Change()
Application.EnableEvents = False
'ComboBox10.Enabled = True
'Destination

'ComboBox10=Destination
'ComboBox11=Load
'ComboBox12=Deconsolidation
'ComboBox7=Origin

If ComboBox10.Value = "(ALL)" Then
Application.EnableEvents = True
Exit Sub
End If
Counter = 0

DESTIN1 = Range("T1")


If DESTIN1 <> ComboBox10.Value Then

DESTIN1 = ComboBox10.Value
Range("T1") = DESTIN1
    If ComboBox10.Value <> "(ALL)" And ComboBox7.Value <> "(ALL)" Then
    Call LoadPX
    x = Sheets("REF").Cells(Rows.Count, 31).End(xlUp).Row
    y = Sheets("REF").Cells(Rows.Count, 33).End(xlUp).Row
    
        If x = 1 Then
        ComboBox11.Visible = False
        Range("H6") = ""
        End If
            If x >= 2 Then
            ComboBox11.Visible = True
            ComboBox11.Value = Sheets("REF").Range("AE2")
            End If
                       
        If y = 1 Then
        Range("H9") = ""
        ComboBox12.Visible = False
        End If
        
            If y >= 2 Then
            ComboBox12.Visible = True
            ComboBox12.Value = Sheets("REF").Range("AH2")
            
            End If
    Else
    ComboBox11.Visible = False
    ComboBox12.Visible = False
    End If
    Call HideAll
    Sheets("FreightCalculator").Select
End If



'ComboBox10.Enabled = False

Application.EnableEvents = True
End Sub


Private Sub ComboBox7_Change()
Application.EnableEvents = False

'ComboBox8.ListFillRange = ""
'ComboBox9.ListFillRange = ""
'ComboBox10.ListFillRange = ""
'ORIGIN City
If ComboBox7.Value = "(ALL)" Then
Application.EnableEvents = True
Exit Sub
End If

If ORIGIN1 <> ComboBox7.Value Then
ORIGIN1 = ComboBox7.Value
'reset Load/Decon if Origin Changes
Range("H6") = ""
ComboBox11.Visible = False
Range("H9") = ""
ComboBox12.Visible = False

Set REF = Sheets("REF")

kk = REF.Range("A" & REF.Rows.Count).End(xlUp).Row
If kk > 1 Then REF.Range("R2:AH" & kk * 2).ClearContents

Call getUNCODE
Call Destinations

ComboBox8.ListFillRange = "DESREG"
ComboBox9.ListFillRange = "DESCTRY"
ComboBox10.ListFillRange = "DESCTY"

ComboBox8.Value = "(ALL)"
ComboBox9.Value = "(ALL)"
ComboBox10.Value = "(ALL)"
End If



Application.EnableEvents = True
End Sub

Private Sub ComboBox11_Change()
Application.EnableEvents = False

If DECON1 <> ComboBox11.Value Then
DECON1 = ComboBox11.Value

If ComboBox12.Value = "" Or ComboBox12.Value = "Please Select" Then
Application.EnableEvents = True
Exit Sub
End If


ComboBox12.ListFillRange = "DECONCY"
ComboBox12.ListIndex = 0

Else
Application.EnableEvents = True
Exit Sub
End If

Application.EnableEvents = True
End Sub


Private Sub ComboBox12_Change()
Application.EnableEvents = False

ComboBox12.Value = Range("H9")

Application.EnableEvents = True
End Sub

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private bActivated As Boolean
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Application.ErrorCheckingOptions.BackgroundChecking = True
    Application.EnableEvents = True
End Sub

Private Sub Workbook_Open()
    bActivated = False
End Sub
Private Sub Workbook_Activate()

Application.DisplayAlerts = False
Application.ScreenUpdating = False
'Application.EnableEvents = False

If Not bActivated Then Call MASTER
bActivated = True

Application.EnableEvents = True

End Sub





INQUEST-PP=macro
