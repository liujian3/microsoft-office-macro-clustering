Attribute VB_Name = "Deklarationen"
'*----------------------------------------------------------------------------------
'*  SAP-Formular HAA
'*
'*----------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------
'* 24.11.2016    Spengler    Korrekturen
'* 19.07.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------

'=======================================================================================================================
'++++++++++++++++++++++++++++++++++++++++++++++++  KONSTANTEN  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'=======================================================================================================================

' Debug Modus
Public Const boolc_Fehlerbehandlung As Boolean = False    ' Debug Modus = FALSE / Steuert Fehlerbehandlung / sperren Treeview und
                                                          ' Entf Taste tauschen
                                                                
                                                               
' ----------------------------------------------------------------------------------------------------------------------
' Programmname / Version / PW Excel Mappe
Public Const APPNAME                As String = "HAA"                     ' Programmname
Public Const strcVersion            As String = "1.00 (24.11.2016)"       ' Version des Programms Prio 1* und Teil 1


' ----------------------------------------------------------------------------------------------------------------------
' Namen der Bl|fffd|tter
Public Const c_ws_For        As String = "FORMULAR"         ' Name des Blatts Formular
Public Const c_ws_Dat        As String = "DATEN"            ' Name des Blattes Daten (Import SAP)
Public Const c_ws_Exp        As String = "EXPORT"           ' Name des Blattes Export (Export SAP)
Public Const c_ws_Leg        As String = "Legende"          ' Blatt Legende f|fffd|r Kataloge


' Steuerung Ausgabe
Public Const c_Anz_Seite     As Long = 10000                ' Anzahl Zeilen pro Seite


'F|fffd|r Kataloge Bezeichnungen
Public Const c_Objektt      As String = "Objektteil"
Public Const c_Ma|fffd|nahme     As String = "Ma|fffd|nahme"
Public Const c_Schaden      As String = "Schadenscode"
Public Const c_Ursache      As String = "Ursache"

Public Const c_kat_Obj      As String = "V"
Public Const c_kat_Mas      As String = "P"
Public Const c_kat_Sch      As String = "Q"
Public Const c_kat_Urs      As String = "U"


Public Const c_rg_Filter    As String = "$B$8:$B$1009"


' ----------------------------------------------------------------------------------------------------------------------

Public Type t_hausnr
                hausnr   As Long
                hnk|fffd|rzel As String
End Type


'=======================================================================================================================
'****************************************** GLOBALE VARIABLEN **********************************************************
'=======================================================================================================================

' Variablen
Public str_file            As String
Public str_TPON            As String
Public str_Gemeinde        As String
Public str_G_Teil          As String
Public str_Auftrag         As String
Public str_Inspektion      As String
Public str_VBDLNr          As String
Public lngZeilenZ|fffd|hler     As Long
Public fuellen_sap         As String
Public lngAnzBl|fffd|tter       As Long


'F|fffd|r Muss Felder Check
Public g_feld_name(1 To 2000, 1 To 2) As String


Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'---------------------------------------------------------------------------------------
' Procedure  : Workbook_Activate
' Author     : Johannes Spengler
' Date       : 04.06.2012
' Parameters :  ,
' Purpose    :
'---------------------------------------------------------------------------------------
'
Private Sub Workbook_Activate()
Dim CellenName2 As String

If boolc_Fehlerbehandlung Then On Error GoTo Workbook_Activate_Error

' Pr|fffd|fen auf Office Version
'If version_check = False Then
'                Call MsgBox("Bitte verwenden Sie Microsoft Office 2003 / 2007 / 2010!", vbInformation, "KVS-Datenblatt")
'End If

'<<< J8380 22.04.2013 DieseArbeitsmappe
Worksheets("FORMULAR").Activate
Worksheets("FORMULAR").Cells(1, 2).Activate
'diese Fehlersteuerung muss hier sein da
'der Befehl sonst abbricht wenn noch kein Name vergeben ist!
On Error Resume Next
CellenName2 = ActiveCell.Name.Name
On Error GoTo 0
If datum_check(CellenName2, True) = False Then
    ActiveWorkbook.Close SaveChanges:=False
End If

On Error GoTo 0
Exit Sub

Workbook_Activate_Error:
MsgBox "Error " & Err.Number & " (" & Err.Description & ") in Procedure Workbook_Activate in VBA Dokument Name: DieseArbeitsmappe"
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure  : Workbook_BeforeSave
' Author     : Johannes Spengler
' Date       : 30.04.2010
' Parameters :  ,
' Purpose    :
'---------------------------------------------------------------------------------------
'
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
Dim CellenName, blatt_save, formular As String
Dim zeile, spalte As Long

'Pr|fffd|fen ob bereits Daten eingetragen wurden
If boolc_Fehlerbehandlung Then On Error GoTo Workbook_BeforeSave_Error

Application.ScreenUpdating = False

zeile = ActiveCell.Row
spalte = ActiveCell.Column
formular = ActiveCell.Worksheet.Name

Worksheets("FORMULAR").Activate
Worksheets("FORMULAR").Cells(1, 1).Activate
'diese Fehlersteuerung muss hier sein da
'der Befehl sonst abbricht wenn noch kein Name vergeben ist!
On Error Resume Next
CellenName = ActiveCell.Name.Name
On Error GoTo 0

If CellenName = "Formular_bereits_gef|fffd|llt" And fuellen_sap = "" Then
   'Pr|fffd|fen ob Mussfelder Datum und Name gepflegt
   If Muss_Felder_Check = False Or _
      Muss_Felder_Check_Meldung = False Then
      'ein abspeichern ist nicht m|fffd|glich !
'      MsgBox "Wollen Sie die Pr|fffd|fung |fffd|bergehen?", vbQuestion, "Warnung"
      'Cancel = True
      Exit Sub
   End If
End If
fuellen_sap = ""

Application.ScreenUpdating = True

On Error GoTo 0
Exit Sub

Workbook_BeforeSave_Error:
MsgBox "Error " & Err.Number & " (" & Err.Description & ") in Procedure Workbook_BeforeSave in VBA Dokument Name: DieseArbeitsmappe"

End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Workbook_BeforeClose
' Author    : J8380
' Date      : 13.10.2017
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub Workbook_BeforeClose(Cancel As Boolean)

If boolc_Fehlerbehandlung Then On Error GoTo Workbook_BeforeClose_Error


If Formular_Gef|fffd|llt And fuellen_sap = "" Then
    If Muss_Felder_Check = False Or _
       Muss_Felder_Check_Meldung = False Then
       'ein abspeichern ist nicht m|fffd|glich !
       MsgBox "Bitte erst die Korrekturen einpflegen!", vbQuestion, "Warnung"
       Cancel = True
    End If
End If

    
On Error GoTo 0
Exit Sub

Workbook_BeforeClose_Error:
MsgBox "Error " & Err.Number & " (" & Err.Description & ") in Procedure Workbook_BeforeClose in VBA Dokument Name: DieseArbeitsmappe"

End Sub
Attribute VB_Name = "Ma|fffd|nahme"
Attribute VB_Base = "0{5879CD39-164D-467C-B2FF-8F3324848805}{9BF6AEAA-A7BB-4423-8826-D4E82502F179}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'*  SAP-Formular Objektteil
'*
'*----------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------
'* 06.02.2018    Spengler    INCxx Meldungen
'* 05.08.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------
'
Public l_alle_Werte As Boolean
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_OK_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_OK_Click()
Dim i As Integer
Dim s_Text, s_Key, s_key_a  As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_OK_Click_Error

For i = 1 To TreeView1.Nodes.Count
    If TreeView1.Nodes.Item(i).Selected Then
     s_Text = TreeView1.Nodes.Item(i).Text
     s_Key = TreeView1.Nodes.Item(i).Key
    End If
Next i

If Len(s_Key) = 5 Then
    MsgBox "Falsche Auswahl sie m|fffd|ssen eine Untergruppe ausw|fffd|hlen!"
    Exit Sub
End If

If s_Key <> "" Then
    s_key_a = Mid(s_Key, 10, Len(s_Key) - 9)
End If

ActiveCell.FormulaR1C1 = "=TEXT(""" & s_Text & """,""" & s_key_a & """)"
ActiveCell.Offset(0, 1).Select
Unload Me


On Error GoTo 0
Exit Sub

cmd_OK_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_OK_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_Abbruch_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_Abbruch_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_Abbruch_Click_Error

Unload Me

On Error GoTo 0
Exit Sub

cmd_Abbruch_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_Abbruch_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_DeleteWert_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_DeleteWert_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_DeleteWert_Click_Error

Unload Me
ActiveCell = ""

On Error GoTo 0
Exit Sub

cmd_DeleteWert_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_DeleteWert_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : TreeView1_DblClick
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub TreeView1_DblClick()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo TreeView1_DblClick_Error

Call cmd_OK_Click

On Error GoTo 0
Exit Sub

TreeView1_DblClick_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("TreeView1_DblClick")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : UserForm_Activate
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub UserForm_Activate()
Dim WS_LG           As Worksheet
Dim P_node          As String
Dim C_node          As String
Dim c_zeile         As Long
Dim c_spalte_code   As Long
Dim c_spalte_bez    As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo UserForm_Activate_Error


' Variablen initialisieren
Set WS_LG = ActiveWorkbook.Worksheets(c_ws_Leg)


' ****** Verarbeitungsteil *******
'initialwerte setzten
zeile = 2
c_spalte_code = 10
c_spalte_bez = 11


TreeView1.Nodes.Clear
P_node = "P0000"
TreeView1.Nodes.Add , , P_node, (c_Ma|fffd|nahme)

Do Until WS_LG.Cells(zeile, c_spalte_code).Value = ""
    'Child Node
    C_node = P_node & "_" & WS_LG.Cells(zeile, c_spalte_code).Value
    TreeView1.Nodes.Add P_node, 4, C_node, (WS_LG.Cells(zeile, c_spalte_bez).Value)
    TreeView1.Nodes(P_node).Expanded = True
    zeile = zeile + 1
Loop



On Error GoTo 0
Exit Sub

UserForm_Activate_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("UserForm_Activate")
End Sub

Attribute VB_Name = "Objektteil"
Attribute VB_Base = "0{E52436D1-3F3F-4022-86D7-7214FD2142BD}{5A5FB92A-6B28-48EF-8910-E8563EF5D832}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'*----------------------------------------------------------------------------------
'*  SAP-Formular Objektteil
'*
'*----------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------
'* 06.02.2018    Spengler    INCxx Meldungen
'* 05.08.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------
'

'
'---------------------------------------------------------------------------------------
' Procedure : cmd_OK_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_OK_Click()
Dim i As Integer
Dim s_Text, s_Key, s_key_a  As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_OK_Click_Error

For i = 1 To TreeView1.Nodes.Count
    If TreeView1.Nodes.Item(i).Selected Then
     s_Text = TreeView1.Nodes.Item(i).Text
     s_Key = TreeView1.Nodes.Item(i).Key
    End If
Next i

If Len(s_Key) = 5 Then
    MsgBox "Falsche Auswahl sie m|fffd|ssen eine Untergruppe ausw|fffd|hlen!"
    Exit Sub
End If

If s_Key <> "" Then
    s_key_a = Mid(s_Key, 10, Len(s_Key) - 9)
End If

ActiveCell.FormulaR1C1 = "=TEXT(""" & s_Text & """,""" & s_key_a & """)"
ActiveCell.Offset(0, 1).Select
Unload Me


On Error GoTo 0
Exit Sub

cmd_OK_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_OK_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_Abbruch_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_Abbruch_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_Abbruch_Click_Error

Unload Me

On Error GoTo 0
Exit Sub

cmd_Abbruch_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_Abbruch_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_DeleteWert_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_DeleteWert_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_DeleteWert_Click_Error

Unload Me
ActiveCell = ""

On Error GoTo 0
Exit Sub

cmd_DeleteWert_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_DeleteWert_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : TreeView1_DblClick
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub TreeView1_DblClick()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo TreeView1_DblClick_Error

Call cmd_OK_Click

On Error GoTo 0
Exit Sub

TreeView1_DblClick_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("TreeView1_DblClick")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : UserForm_Activate
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub UserForm_Activate()
Dim WS_LG           As Worksheet
Dim P_node          As String
Dim C_node          As String
Dim c_zeile         As Long
Dim c_spalte_code   As Long
Dim c_spalte_bez    As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo UserForm_Activate_Error


' Variablen initialisieren
Set WS_LG = ActiveWorkbook.Worksheets(c_ws_Leg)


' ****** Verarbeitungsteil *******
'initialwerte setzten
zeile = 2
c_spalte_code = 1
c_spalte_bez = 2


TreeView1.Nodes.Clear
P_node = "P0000"
TreeView1.Nodes.Add , , P_node, (c_Objektt)

Do Until WS_LG.Cells(zeile, c_spalte_code).Value = ""
    'Child Node
    C_node = P_node & "_" & WS_LG.Cells(zeile, c_spalte_code).Value
    TreeView1.Nodes.Add P_node, 4, C_node, (WS_LG.Cells(zeile, c_spalte_bez).Value)
    TreeView1.Nodes(P_node).Expanded = True
    zeile = zeile + 1
Loop



On Error GoTo 0
Exit Sub

UserForm_Activate_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("UserForm_Activate")
End Sub

Attribute VB_Name = "Routinen"
'*----------------------------------------------------------------------------------------------
'*  SAP-Formular HAA
'*
'*----------------------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------------------
'* 22.01.2019    Spengler    Fehlerkorrektur
'* 07.12.2018    Spengler    BAG Improve 2018 ID 23
'* 06.02.2018    Spengler    INCxxx Korrektur Meldungserstellung
'* 24.10.2017    Spengler    Anpassung Pr|fffd|fungen und Kopf bei meherern G.Teilen
'* 6/7.10.2017   Spengler    Pr|fffd|fung Meldungen
'* 06.10.2017    Spengler    Anpassung Export ZBN4-Auftragsnummer
'* 05.09.2017    Spengler    Version ALT f|fffd|r PG4 bis Version 30 eingesetzt wird
'*                           (nur ein Ortsnetz pro Auftrag)
'* 09.08.2017    Spengler    Korrektur Hausnummer
'* 02.08.2017    Spengler    Anpassung BP17 Mail vom Mi 05.07.2017 15:02 H.Wallner
'* 11.05.2017    Spengler    Anpassung an Konzept_BP17_P03_HA-IH-Optimierung_V1-10_2017-03-29
'*                           Version 1.10
'* 24.11.2016    Spengler    Korrekturen
'* 19.07.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------------------
' Explizite Variablendeklaration erzwingen.
Option Explicit
'
'---------------------------------------------------------------------------------------
' Procedure : DATEN_FUELLEN_1
' Author    : J8380
' Date      : 19.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub DATEN_FUELLEN_1()
Dim s_pfad_Name     As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo DATEN_FUELLEN_Error

' Aufruf Formular f|fffd|llen
Call DATEN_FUELLEN

'Pfad wird aus SAP |fffd|bergeben und steht auf Blatt Daten zeile: 1 Spalte: 2
s_pfad_Name = Worksheets("DATEN").Cells(1, 2).Value


' Statusmeldung ausgeben
Application.StatusBar = "Datei: " & s_pfad_Name & " wird erstellt!"
' Sicherheitsabfragen ausschalten, um |fffd|berschreiben ohne Abfrage zu erm|fffd|glichen
Application.DisplayAlerts = False
'Mappe speichern
fuellen_sap = "X"
ActiveWorkbook.SaveAs Filename:=s_pfad_Name
' Sicherheitsabfragen wieder einschalten
Application.DisplayAlerts = True
' Statusmeldung ausgeben
Application.StatusBar = "Formular(e) " & s_pfad_Name & " sind gespeichert!"
' Excel beenden
fuellen_sap = "X"
Application.Quit


On Error GoTo 0
Exit Sub

DATEN_FUELLEN_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("DATEN_FUELLEN")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : DATEN_FUELLEN
' Author    : J8380
' Date      : 19.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub DATEN_FUELLEN()
Dim WS_FO       As Worksheet
Dim ws_da       As Worksheet
Dim zeile_da    As Long
Dim zeile_fo    As Long
Dim seiten_z|fffd|   As Long
Dim pos_z|fffd|      As Long
Dim CellenName  As String
Dim TechPlatz   As String
Dim StartZeile  As Long
Dim EndZeile    As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo DATEN_FUELLEN_1_Error
'
' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)
Set ws_da = ActiveWorkbook.Worksheets(c_ws_Dat)

zeile_da = 10
zeile_fo = 9
seiten_z|fffd| = 1
pos_z|fffd| = 0
lngAnzBl|fffd|tter = 0

'Formular aktivieren
Application.ScreenUpdating = False

'Formular Sortierung anpassen
Call Daten_Sortieren

'Formular entsperren
WS_FO.Activate
Formular_entsperren (c_ws_For)

'Formular wird mit Daten aus SAP gef|fffd|llt
fuellen_sap = "X"

'Pr|fffd|fen ob bereits Daten eingetragen wurden
WS_FO.Cells(1, 1).Activate
'diese Fehlersteuerung muss hier sein da
'der Befehl sonst abbricht wenn noch kein Name vergeben ist!
On Error Resume Next
CellenName = ActiveCell.Name.Name
On Error GoTo 0
If CellenName = "Formular_bereits_gef|fffd|llt" Then
   MsgBox "Das Formular wurde bereits mit Daten gef|fffd|llt!"
   Exit Sub
End If

' Kopfdaten lesen
Call Kopfdaten_Lesen(zeile_da)

'Formular f|fffd|llen
' 1 Schritt Kopfdaten schreiben
Call Kopfdaten_schreiben(1)

' TP speichern
TechPlatz = ws_da.Cells(zeile_da, 10)
StartZeile = zeile_fo
Do Until ws_da.Cells(zeile_da, 1) = ""
    'Zeile ausf|fffd|llen
    pos_z|fffd| = pos_z|fffd| + 1

    If pos_z|fffd| = c_Anz_Seite Or _
       ws_da.Cells(zeile_da, 10) <> TechPlatz Then ' max 1000 oder neuer TP

'       Call Unterschriftenzeile(zeile_fo + 2) nur eine am Schlu|fffd|
'       Zeilenumbruch einf|fffd|gen
'       WS_FO.HPageBreaks.Add Before:=Cells(zeile_fo + 2, 1)

        ' Neue Seite nur falls Daten vorhanden
        If ws_da.Cells(zeile_da, 1) <> "" Then      ' Fehlerkorrektur 22.02.2019  ..zeile_da +1, .. rausgenommen
            Call neue_Seite(zeile_fo + 4)
            Call Kopfdaten_Lesen(zeile_da)
            Call Kopfdaten_schreiben(zeile_fo + 4)
            EndZeile = zeile_fo

            Call Kopfdaten_Formel_anpassen(StartZeile, EndZeile)    ' offen

            ' Neue Zeile
            zeile_fo = zeile_fo + 10
            Call Zeile_schreiben(zeile_da, zeile_fo)
            pos_z|fffd| = 0
            TechPlatz = ws_da.Cells(zeile_da, 10)
            StartZeile = zeile_fo
        End If
    Else
      ' Zeile schreiben
      Call Zeile_schreiben(zeile_da, zeile_fo)
    End If
    zeile_da = zeile_da + 1
    zeile_fo = zeile_fo + 1
Loop

Call Unterschriftenzeile(zeile_fo + 1)
EndZeile = zeile_fo
Call Kopfdaten_Formel_anpassen(StartZeile, EndZeile)

''''Hier hinterlegen dass das Formular bereits gef|fffd|llt wurde
WS_FO.Cells(1, 1).Activate
ActiveCell.Name = "Formular_bereits_gef|fffd|llt"

'<<< J8380 22.04.2013 Datum_f|fffd|llen
WS_FO.Cells(1, 2).Activate
ActiveCell.Name = "D_" & Date

'hier den Filter einbauen
WS_FO.Range(c_rg_Filter).AutoFilter Field:=1, Operator:=xlFilterValues

Formular_sperren

Application.ScreenUpdating = True
Cells(1, 1).Select


On Error GoTo 0
Exit Sub

DATEN_FUELLEN_1_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("DATEN_FUELLEN_1")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Fehlerbehandlung
' Author    : J8380
' Date      : 13.01.2014
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub Fehlerbehandlung(routine As String)
' Fehler melden und Anwendung beenden
' --> routine:   Aufrufende Routine
MsgBox "Folgender schwerer Fehler (" & Error(Err) & " Nr: " & Err & ") ist in der Routine " & UCase(routine) & " aufgetreten.", vbCritical, APPNAME

End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Formular_entsperren
' Author    : J8380
' Date      : 20.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Function Formular_entsperren(Optional Name As String = c_ws_For)

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Formular_entsperren_Error

Worksheets(Name).Unprotect

On Error GoTo 0
Exit Function

Formular_entsperren_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Formular_entsperren")
End Function
'
'---------------------------------------------------------------------------------------
' Procedure : Kopfdaten_Lesen
' Author    : J8380
' Date      : 20.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Kopfdaten_Lesen(zeile_da As Long)
Dim ws_da  As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Kopfdaten_Lesen_Error

' Variablen initialisieren
Set ws_da = ActiveWorkbook.Worksheets(c_ws_Dat)

' Version 3.0 variabel
str_TPON = ws_da.Cells(zeile_da, 10)
str_Gemeinde = ws_da.Cells(zeile_da, 11)
str_G_Teil = ws_da.Cells(zeile_da, 12)
' fix
str_file = ws_da.Cells(1, 2)
str_Auftrag = ws_da.Cells(5, 2)
str_Inspektion = ws_da.Cells(6, 2)
str_VBDLNr = ws_da.Cells(7, 2)

On Error GoTo 0
Exit Sub

Kopfdaten_Lesen_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Kopfdaten_Lesen")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Kopfdaten_schreiben
' Author    : J8380
' Date      : 20.07.2016
' Purpose   : Angabe lng_offset Zeile1 = "Instandhaltung Hausanschluss)
'---------------------------------------------------------------------------------------
'
Public Sub Kopfdaten_schreiben(lng_offset As Long)
Dim WS_FO As Worksheet


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Kopfdaten_schreiben_Error


' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


' Daten in Formular schreiben
'TP
WS_FO.Cells(lng_offset + 2, 2) = str_TPON
WS_FO.Cells(lng_offset + 3, 2) = str_Gemeinde
WS_FO.Cells(lng_offset + 4, 2) = str_G_Teil
'WS_FO.Cells(lng_offset + 2, 10) = str_Auftrag
WS_FO.Range(Cells(lng_offset + 2, 11), Cells(lng_offset + 2, 11)).NumberFormat = "0"
'ge|fffd|ndert am 12.08.2016 --> in Feld Insepktion kommt Inhalt Feld Auftrag
WS_FO.Cells(lng_offset + 3, 11) = str_Auftrag
WS_FO.Range(Cells(lng_offset + 3, 11), Cells(lng_offset + 3, 11)).NumberFormat = "0"


On Error GoTo 0
Exit Sub

Kopfdaten_schreiben_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Kopfdaten_schreiben")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Zeile_schreiben
' Author    : J8380
' Date      : 20.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Zeile_schreiben(zeile_da As Long, zeile_fo As Long)
Dim WS_FO                        As Worksheet
Dim ws_da                        As Worksheet
Dim index                        As Integer

Dim Name_Bereich, Bereich        As String
Dim Zeile_st, Zeile_end, spalte  As Integer


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Zeile_schreiben_Error


' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)
Set ws_da = ActiveWorkbook.Worksheets(c_ws_Dat)


'Kopieren ohne Zwischenablage !!
If zeile_fo <> 8 Then
    WS_FO.Range(Cells(9, 1), Cells(9, 11)).Copy _
    Destination:=WS_FO.Range(Cells(zeile_fo, 1), Cells(zeile_fo, 1))
    ' Inhalte l|fffd|schen
    WS_FO.Cells(zeile_fo, 1) = ""
    WS_FO.Cells(zeile_fo, 2) = ""
    WS_FO.Cells(zeile_fo, 3) = ""
End If

'Equi
WS_FO.Cells(zeile_fo, 1) = ws_da.Cells(zeile_da, 1)
'Bez
WS_FO.Cells(zeile_fo, 2) = ws_da.Cells(zeile_da, 2)
'Art
WS_FO.Cells(zeile_fo, 3) = ws_da.Cells(zeile_da, 7)
' Schutzklasse
WS_FO.Cells(zeile_fo, 4) = ws_da.Cells(zeile_da, 15)


' Formatieren
WS_FO.Cells(zeile_fo, 1).HorizontalAlignment = xlCenter
WS_FO.Cells(zeile_fo, 3).HorizontalAlignment = xlCenter
WS_FO.Cells(zeile_fo, 4).HorizontalAlignment = xlCenter

'Rahmen zeichnen
'For index = xlEdgeLeft To xlInsideHorizontal
'    With WS_FO.Range(Cells(zeile_fo, 1), Cells(zeile_fo, 10)).Borders(index)
'            .LineStyle = xlContinuous
'            .Weight = xlThin
'    End With
'Next index

'******** Namen f|fffd|r Kataloge vergeben ************
lngZeilenZ|fffd|hler = lngZeilenZ|fffd|hler + 1

'Namen festlegen f|fffd|r Formular Bereich Objektteil
Name_Bereich = "Formular_Objektteil" & CStr(lngZeilenZ|fffd|hler)
Zeile_st = zeile_fo
Zeile_end = zeile_fo
spalte = 6
Bereich = "=Formular!" & "R" & CStr(Zeile_st) & "C" & CStr(spalte) & ":" & "R" & CStr(Zeile_end) & "C" & spalte
ActiveWorkbook.Names.Add Name:=Name_Bereich, RefersToR1C1:=Bereich

'Namen festlegen f|fffd|r Formular Bereich Schadensbild
Name_Bereich = "Formular_Schaden" & CStr(lngZeilenZ|fffd|hler)
Zeile_st = zeile_fo
Zeile_end = zeile_fo
spalte = 7
Bereich = "=Formular!" & "R" & CStr(Zeile_st) & "C" & CStr(spalte) & ":" & "R" & CStr(Zeile_end) & "C" & spalte
ActiveWorkbook.Names.Add Name:=Name_Bereich, RefersToR1C1:=Bereich

'Namen festlegen f|fffd|r Formular Bereich Ma|fffd|nahme
Name_Bereich = "Formular_Ursache" & CStr(lngZeilenZ|fffd|hler)
Zeile_st = zeile_fo
Zeile_end = zeile_fo
spalte = 8
Bereich = "=Formular!" & "R" & CStr(Zeile_st) & "C" & CStr(spalte) & ":" & "R" & CStr(Zeile_end) & "C" & spalte
ActiveWorkbook.Names.Add Name:=Name_Bereich, RefersToR1C1:=Bereich

'Namen festlegen f|fffd|r Bezugsobjekt Meldung
Name_Bereich = "Formular_Ma|fffd|nahme" & CStr(lngZeilenZ|fffd|hler)
Zeile_st = zeile_fo
Zeile_end = zeile_fo
spalte = 9
Bereich = "=Formular!" & "R" & CStr(Zeile_st) & "C" & CStr(spalte) & ":" & "R" & CStr(Zeile_end) & "C" & spalte
ActiveWorkbook.Names.Add Name:=Name_Bereich, RefersToR1C1:=Bereich


On Error GoTo 0
Exit Sub

Zeile_schreiben_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Zeile_schreiben")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Neue_Seite
' Author    : J8380
' Date      : 20.07.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub neue_Seite(zeileNeu As Long)
Dim WS_FO       As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Neue_Seite_Error


' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


'Kopieren ohne Zwischenablage !!
WS_FO.Range(Cells(1, 1), Cells(7, 11)).Copy _
Destination:=WS_FO.Range(Cells(zeileNeu, 1), Cells(zeileNeu, 1))


' Formatieren + Inhalte l|fffd|schen
WS_FO.Cells(zeileNeu + 2, 2) = ""
WS_FO.Cells(zeileNeu + 3, 2) = ""
WS_FO.Cells(zeileNeu + 4, 2) = ""
WS_FO.Cells(zeileNeu + 2, 11) = ""
WS_FO.Cells(zeileNeu + 3, 11) = ""


On Error GoTo 0
Exit Sub

Neue_Seite_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Neue_Seite")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Unterschriftenzeile
' Author    : J8380
' Date      : 04.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Unterschriftenzeile(zeileNeu As Long)
Dim WS_FO       As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Unterschriftenzeile_Error

' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


WS_FO.Cells(zeileNeu, 1).Value = "Firma:"
WS_FO.Cells(zeileNeu, 4).Value = "Ausf|fffd|hrender:"
WS_FO.Range(Cells(zeileNeu, 4), Cells(zeileNeu, 4)).HorizontalAlignment = xlCenter
WS_FO.Cells(zeileNeu, 8).Value = "Datum:"

    
    
'Formatieren Unterschrift
WS_FO.Range(Cells(zeileNeu, 6), Cells(zeileNeu, 7)).MergeCells = True
With WS_FO.Range(Cells(zeileNeu, 6), Cells(zeileNeu, 7)).Borders(xlEdgeBottom)
  .LineStyle = xlNone
  .Weight = xlThin
End With

WS_FO.Range(Cells(zeileNeu, 6), Cells(zeileNeu, 7)).Select
With Selection
      .Locked = False
End With

With Selection.Interior
      .Pattern = xlSolid
      .PatternColorIndex = xlAutomatic
      .Color = 65535
      .TintAndShade = 0
      .PatternTintAndShade = 0
End With


'Name:
With WS_FO.Range(Cells(zeileNeu, 2), Cells(zeileNeu, 2)).Borders(xlEdgeBottom)
  .LineStyle = xlNone
  .Weight = xlThin
End With
WS_FO.Range(Cells(zeileNeu, 2), Cells(zeileNeu, 2)).Select
With Selection
      .Locked = False
End With
With Selection.Interior
      .Pattern = xlSolid
      .PatternColorIndex = xlAutomatic
      .Color = 65535
      .TintAndShade = 0
      .PatternTintAndShade = 0
End With

'Datum
WS_FO.Range(Cells(zeileNeu, 9), Cells(zeileNeu, 10)).MergeCells = True
WS_FO.Range(Cells(zeileNeu, 9), Cells(zeileNeu, 10)).HorizontalAlignment = xlLeft
WS_FO.Range(Cells(zeileNeu, 9), Cells(zeileNeu, 10)).Select
With Selection
      .Locked = False
End With
With Selection.Interior
      .Pattern = xlSolid
      .PatternColorIndex = xlAutomatic
      .Color = 65535
      .TintAndShade = 0
      .PatternTintAndShade = 0
End With

' Datumsfeld mit G|fffd|ltigkeit versehen
WS_FO.Range(Cells(zeileNeu, 9), Cells(zeileNeu, 9)).Select
With Selection.Validation
    .Delete
    .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:= _
    xlBetween, Formula1:="1/1/2000", Formula2:="12/31/2020"
    .IgnoreBlank = True
    .InCellDropdown = True
    .InputTitle = ""
    .ErrorTitle = "Datum falsch"
    .InputMessage = ""
    .ErrorMessage = "Bitte ein Datum zwischen 1.1.2000 und 31.12.2020 eingeben!"
    .ShowInput = False
    .ShowError = True
End With



On Error GoTo 0
Exit Sub

Unterschriftenzeile_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Unterschriftenzeile")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Formular_sperren
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Function Formular_sperren(Optional Name As String = c_ws_For)
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Formular_sperren_Error

Worksheets(Name).Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFiltering:=True

On Error GoTo 0
Exit Function

Formular_sperren_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Formular_sperren")
End Function
'
'---------------------------------------------------------------------------------------
' Procedure : DATEN_EXPORTIEREN
' Author    : J8380
' Date      : 09.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub DATEN_EXPORTIEREN()
Dim CellenName    As String


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo DATEN_EXPORTIEREN_Error


'Pr|fffd|fen ob bereits Daten eingetragen wurden
Worksheets("FORMULAR").Activate
Worksheets("FORMULAR").Cells(1, 1).Activate
'diese Fehlersteuerung muss hier sein da
'der Befehl sonst abbricht wenn noch kein Name vergeben ist!
On Error Resume Next
CellenName = ActiveCell.Name.Name
On Error GoTo 0
If CellenName <> "Formular_bereits_gef|fffd|llt" Then
    MsgBox "Das Tabellenblatt <FORMULAR> wurde noch nicht mit Daten aus SAP gef|fffd|llt!"
    Exit Sub
End If


'>>> J8380 22.04.2013 Daten Exportieren
'Pr|fffd|fen ob bereits Daten eingetragen wurden
Worksheets("FORMULAR").Activate
Worksheets("FORMULAR").Cells(1, 2).Activate
'diese Fehlersteuerung muss hier sein da
'der Befehl sonst abbricht wenn noch kein Name vergeben ist!
On Error Resume Next
CellenName = ActiveCell.Name.Name
On Error GoTo 0
If datum_check(CellenName, False) = False Then
    MsgBox "Die Daten sind veraltet, ein SAP Import ist nicht m|fffd|glich!"
    Exit Sub
End If


'Pr|fffd|fen ob Mussfelder Datum und Name gepflegt
If Muss_Felder_Check = False Then Exit Sub


'P|fffd|rfen auf Meldungen
If Muss_Felder_Check_Meldung = False Then Exit Sub


'2 Export erstellen
Call EXPORT_DATEN_erstellen


'CSV-Datei erzeugen
Call csv_datei_erstellen


On Error GoTo 0
Exit Sub

DATEN_EXPORTIEREN_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("DATEN_EXPORTIEREN")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : EXPORT_DATEN_erstellen
' Author    : J8380
' Date      : 09.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub EXPORT_DATEN_erstellen()
Dim WS_FO                        As Worksheet
Dim WS_EX                        As Worksheet
Dim zeile_da                     As Long
Dim zeile_EX                     As Long
Dim i                            As Long

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo EXPORT_DATEN_erstellen_Error


'Initialisierung--------------------------------------------------------------
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)
Set WS_EX = ActiveWorkbook.Worksheets(c_ws_Exp)
zeile_da = 8
zeile_EX = 2

'Blatt Export l|fffd|schen
WS_EX.Activate
WS_EX.Range(Cells(2, 1), Cells(100000, 21)).Clear

' nur die vbdlnr wird gebraucht !!!!
str_VBDLNr = Worksheets(c_ws_Dat).Cells(7, 2)
' ZBN4 - Auftragsnummer NEU hinzu 6.10.2017 --> Fehler Mail Wallner Fr 06.10.2017 11:50
str_Auftrag = Worksheets(c_ws_Dat).Cells(5, 2)

'in erste Zeile kommt die DL Nummer
WS_EX.Cells(zeile_EX, 1) = str_VBDLNr
zeile_EX = zeile_EX + 1

' Export Meldungen auf Blatt Export
For i = zeile_da To 100000 Step 1
    If IsNumeric(WS_FO.Cells(zeile_da, 1).Value) = True And _
       Len(WS_FO.Cells(zeile_da, 1).Value) > 1 And _
       (IsEmpty(WS_FO.Cells(zeile_da, 4)) = False Or IsEmpty(WS_FO.Cells(zeile_da, 5)) = False) Then
       'Equi
       WS_EX.Cells(zeile_EX, 1) = WS_FO.Cells(zeile_da, 1)
       'Bez
       WS_EX.Cells(zeile_EX, 2) = WS_FO.Cells(zeile_da, 2)
       'Art
       WS_EX.Cells(zeile_EX, 3) = WS_FO.Cells(zeile_da, 3)
       'ohne M|fffd|ngel
       If WS_FO.Cells(zeile_da, 5) = Chr$(254) Then
            WS_EX.Cells(zeile_EX, 4) = "X"
       Else
            WS_EX.Cells(zeile_EX, 4) = ""
       End If
       If WS_FO.Cells(zeile_da, 5) <> Chr$(254) Then
            'Katalog Objektteil
            WS_EX.Cells(zeile_EX, 5) = c_kat_Obj
            'Obj.Code.Grp
            WS_EX.Cells(zeile_EX, 6) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 6).FormulaR1C1, "ZT", 1)
            'Code
            WS_EX.Cells(zeile_EX, 7) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 6).FormulaR1C1, "", 2)
            'Schaden
            WS_EX.Cells(zeile_EX, 8) = c_kat_Mas
            'Schaden.Code.Grp
            WS_EX.Cells(zeile_EX, 9) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 7).FormulaR1C1, "ZT", 1)
            'Schaden
            WS_EX.Cells(zeile_EX, 10) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 7).FormulaR1C1, "", 2)
            'Ursache
            WS_EX.Cells(zeile_EX, 11) = c_kat_Urs
            'Schaden.Code.Grp
            WS_EX.Cells(zeile_EX, 12) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 8).FormulaR1C1, "ZT", 1)
            'Schaden
            WS_EX.Cells(zeile_EX, 13) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 8).FormulaR1C1, "", 2)
            'Ma|fffd|nahme
            WS_EX.Cells(zeile_EX, 14) = c_kat_Urs
            'Schaden.Code.Grp
            WS_EX.Cells(zeile_EX, 15) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 9).FormulaR1C1, "ZT", 1)
            'Schaden
            WS_EX.Cells(zeile_EX, 16) = Key_Schadensmeldung(WS_FO.Cells(zeile_da, 9).FormulaR1C1, "", 2)
            'Meldungstext
            WS_EX.Cells(zeile_EX, 17) = WS_FO.Cells(zeile_da, 11)
            'Prio
            WS_EX.Cells(zeile_EX, 18) = WS_FO.Cells(zeile_da, 10)
       End If
       'Meldender
       WS_EX.Cells(zeile_EX, 19) = Meldung_N_D(zeile_da, 1)
       'Meldungsdatum
       WS_EX.Cells(zeile_EX, 20) = Meldung_N_D(zeile_da, 2)
       'ZBN4 Auftrag  'str_Auftrag
       WS_EX.Cells(zeile_EX, 21) = str_Auftrag
       'Schutzklasse
       WS_EX.Cells(zeile_EX, 22) = WS_FO.Cells(zeile_da, 4)
       zeile_EX = zeile_EX + 1
    End If
    zeile_da = zeile_da + 1
Next i


On Error GoTo 0
Exit Sub

EXPORT_DATEN_erstellen_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("EXPORT_DATEN_erstellen")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Key_Schadensmeldung
' Author    : J8380
' Date      : 09.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Function Key_Schadensmeldung(s_Text As String, k|fffd|rzel As String, grp As String)
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Key_Schadensmeldung_Error

s_Text = Left(Right(s_Text, 10), 8)
Select Case grp
    Case 1
       Key_Schadensmeldung = k|fffd|rzel & Left(s_Text, 4)
    Case 2
       Key_Schadensmeldung = k|fffd|rzel & Right(s_Text, 4)
End Select

On Error GoTo 0
Exit Function


Key_Schadensmeldung_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Key_Schadensmeldung")
End Function
'
'
'---------------------------------------------------------------------------------------
' Procedure : Meldung_N_D
' Author    : J8380
' Date      : 09.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function Meldung_N_D(ByVal zeile As Long, Steuerung As Integer) As String
Dim sResult                     As String
Dim WS_FO                       As Worksheet
Dim i                           As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Meldung_N_D_Error

Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


Do Until WS_FO.Cells(zeile, 4) = "Ausf|fffd|hrender:"
    zeile = zeile + 1
    i = i + 1
    If i > c_Anz_Seite Then Exit Do
Loop

Select Case Steuerung
    Case 1
      sResult = WS_FO.Cells(zeile, 6)
    Case 2
      sResult = WS_FO.Cells(zeile, 9)
End Select

Meldung_N_D = sResult

On Error GoTo 0
Exit Function

Meldung_N_D_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Meldung_N_D")
End Function
'---------------------------------------------------------------------------------------
' Procedure  : datum_check
' Author     : Johannes Spengler
' Date       : 20.03.2013
' Parameters : Boolean ,bool
' Purpose    :
'---------------------------------------------------------------------------------------
'
Public Function datum_check(strdatum As Variant, no_dialog As Boolean) As Boolean
Dim boolResult      As Boolean
Dim teil            As Variant
Dim monate          As Integer
Dim meldung         As String
Dim datum           As Date
Dim hinweis         As Variant
Dim ablaufdatum     As Date

If boolc_Fehlerbehandlung Then On Error GoTo datum_check_Error
' Variable initial
boolResult = True
teil = Split(strdatum, "_")
If UBound(teil) = 1 Then
    If teil(1) <> "" Then
        datum = CDate(teil(1))
        monate = DateDiff("d", datum, Now)
        ablaufdatum = DateAdd("yyyy", 1, datum) + 1
        Select Case monate
            Case 0 To 182
            Case 183 To 303
                meldung = "Hinweis - Daten m|fffd|glicherweise veraltet" & vbCrLf & "Bitte pr|fffd|fen und Info an Baubegleiter" & vbCrLf
                hinweis = vbInformation
            Case 304 To 365
                meldung = "Hinweis - Daten m|fffd|glicherweise veraltet" & vbCrLf & "Bitte pr|fffd|fen und Info an Baubegleiter" & vbCrLf & _
                          "ACHTUNG! die |fffd|bernahme in SAP ist ab :" & ablaufdatum & " nicht mehr m|fffd|glich" & vbCrLf
                hinweis = vbInformation
            Case Else
                meldung = "Daten sind veraltet - keine Bearbeitung m|fffd|glich!" & vbCrLf
                hinweis = vbCritical
                boolResult = False
        End Select
        meldung = meldung & vbCrLf & "Die Excel Mappe wurden an:" & datum & " aus SAP ausgespielt"
        If no_dialog = True Then
            If hinweis <> 0 Then
                Call MsgBox(meldung, hinweis, "Pr|fffd|fung auf veraltete Daten")
            End If
        End If
    End If
End If
datum_check = boolResult
On Error GoTo 0
Exit Function

datum_check_Error:
MsgBox "Error " & Err.Number & " (" & Err.Description & ") in Procedure datum_check in VBA Dokument Name: DieseArbeitsmappe"

End Function
'
'---------------------------------------------------------------------------------------
' Procedure : Muss_Felder_Check
' Author    : J8380
' Date      : 10.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function Muss_Felder_Check() As Boolean
Dim bResult         As Boolean
Dim y1              As Long
Dim ende            As Boolean
Dim Fehlertext      As String
Dim datum           As String
Dim z|fffd|_blatt        As Integer
Dim sName           As Long
Dim sDatum          As Long
Dim sAusf|fffd|hrender   As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Muss_Felder_Check_Error

'Initialisierung
ende = False
z|fffd|_blatt = 0
sName = 2
sDatum = 9
sAusf|fffd|hrender = 6

' Alle Zeilen des Formulars durchlaufen
For y1 = 8 To 65536 Step 1
    If Worksheets("FORMULAR").Cells(y1, sName - 1).Value = "Firma:" And Worksheets("FORMULAR").Cells(y1, sDatum - 1).Value = "Datum:" Then
        'Unterschriftenzeile
        'Seitenz|fffd|hler
        z|fffd|_blatt = z|fffd|_blatt + 1
        
        'Pr|fffd|fen auf Firma
        If Worksheets("FORMULAR").Cells(y1, sName).Value = "" Or Worksheets("FORMULAR").Cells(y1, sName).Value = " " Then
            Fehlertext = "Die Firma ist in Zelle " & Cells(y1, sName).Address(RowAbsolute:=False, ColumnAbsolute:=False) & " nicht gef|fffd|llt!"
            Worksheets("FORMULAR").Cells(y1, sName).Select
            ende = True
        Else
           g_feld_name(z|fffd|_blatt, 1) = Worksheets("FORMULAR").Cells(y1, sName).Value
        End If
        
        
        'Pr|fffd|fen auf Ausf|fffd|hrender
        If Worksheets("FORMULAR").Cells(y1, sAusf|fffd|hrender).Value = "" Or Worksheets("FORMULAR").Cells(y1, sAusf|fffd|hrender).Value = " " Then
            Fehlertext = Fehlertext & Chr(13) & _
                         "Der Ausf|fffd|hrende ist in Zelle " & Cells(y1, sAusf|fffd|hrender).Address(RowAbsolute:=False, ColumnAbsolute:=False) & " nicht gef|fffd|llt!"
            Worksheets("FORMULAR").Cells(y1, sAusf|fffd|hrender).Select
            ende = True
        Else
           g_feld_name(z|fffd|_blatt, 1) = Worksheets("FORMULAR").Cells(y1, sAusf|fffd|hrender).Value
        End If
        
        
        'Pr|fffd|fen auf Datum
        If Worksheets("FORMULAR").Cells(y1, sDatum).Value = "" Or Worksheets("FORMULAR").Cells(y1, sDatum).Value = " " Then
            Fehlertext = Fehlertext & Chr(13) & _
                         "Das Datum ist in Zelle " & Cells(y1, sDatum).Address(RowAbsolute:=False, ColumnAbsolute:=False) & " nicht gef|fffd|llt!"
            Worksheets("FORMULAR").Cells(y1, sDatum).Select
            ende = True
        Else
            g_feld_name(z|fffd|_blatt, 2) = Worksheets("FORMULAR").Cells(y1, sDatum).Value
        End If
    End If
    If ende Then
        bResult = False
        MsgBox Fehlertext, vbCritical, "Fehler"
        Exit For
    Else
        bResult = True
    End If
Next y1

Muss_Felder_Check = bResult

On Error GoTo 0
Exit Function

Muss_Felder_Check_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Muss_Felder_Check")
End Function
'
'---------------------------------------------------------------------------------------
' Procedure : Muss_Felder_Check_Meldung
' Author    : J8380
' Date      : 10.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function Muss_Felder_Check_Meldung() As Boolean
Dim bResult         As Boolean
Dim WS_FO           As Worksheet
Dim ende          As Boolean
Dim Fehlertext    As String
Dim zeile         As Long
Dim schrittweite  As Integer
Dim fehler        As Boolean
Dim z|fffd|hler_b      As Long

Const c_sInsp As Integer = 5
Const c_sObjT As Integer = 6
Const c_sSchB As Integer = 7
Const c_sUrsc As Integer = 8
Const c_sMa|fffd|n As Integer = 9
Const c_sPrio As Integer = 10
Const c_sMtxt As Integer = 11


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Muss_Felder_Check_Meldung_Error


'Initialisierung
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)
ende = False
schrittweite = 1
zeile = 8
fehler = False


' Alle Zeilen des Formulars durchlaufen
Do While ende = False
   If Worksheets("FORMULAR").Cells(zeile, 1).Value <> "" And _
      IsNumeric(Worksheets("FORMULAR").Cells(zeile, 1).Value) = True Then
      
        'Inspektion ohne Befund  NEU NEU 5/6.10.2017
        If IsEmpty(WS_FO.Cells(zeile, c_sInsp)) = False Then
            'Objektteil
             If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = False Then
                Fehlertext = "Bitte Objektteil oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
                Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
                fehler = True
                Exit Do
             End If
            'Schaden
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = False Then
               Fehlertext = "Bitte Schaden oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = False Then
               Fehlertext = "Bitte Ursache oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = False Then
               Fehlertext = "Bitte Ma|fffd|nahme oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = False Then
               Fehlertext = "Bitte Priorit|fffd|t oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = False Then
               Fehlertext = "Bitte Meldungstext oder Inspektion ohne Befund l|fffd|schen! Zeile:" & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
        End If
      
      
         'Objektteil
         If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = False Then
            'Schaden
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = True Then
               Fehlertext = "Bitte Schaden in Zeile: " & zeile & " Spalte: c_sschb" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = True Then
               Fehlertext = "Bitte Ursache in Zeile: " & zeile & " Spalte: c_sursc" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = True Then
               Fehlertext = "Bitte Ma|fffd|nahme in Zeile: " & zeile & " Spalte: c_sma|fffd|n" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = True Then
               Fehlertext = "Bitte Priorit|fffd|t in Zeile: " & zeile & " Spalte: c_sprio" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = True Then
               Fehlertext = "Bitte Meldungstext in Zeile: " & zeile & " Spalte: c_smtxt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMtxt).Select
               fehler = True
               Exit Do
            End If
         End If
         
         
         'Schaden
         If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = True Then
               Fehlertext = "Bitte Objektteil in Zeile: " & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = True Then
               Fehlertext = "Bitte Ursache in Zeile: " & zeile & " Spalte: c_sursc" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = True Then
               Fehlertext = "Bitte Ma|fffd|nahme in Zeile: " & zeile & " Spalte: c_sma|fffd|n" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = True Then
               Fehlertext = "Bitte Priorit|fffd|t in Zeile: " & zeile & " Spalte: c_sprio" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = True Then
               Fehlertext = "Bitte Meldungstext in Zeile: " & zeile & " Spalte: c_smtxt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMtxt).Select
               fehler = True
               Exit Do
            End If
         End If
               

         'Ursache
         If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = True Then
               Fehlertext = "Bitte Objektteil in Zeile: " & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Schadensbild
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = True Then
               Fehlertext = "Bitte Schaden in Zeile: " & zeile & " Spalte: c_sschb" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = True Then
               Fehlertext = "Bitte Ma|fffd|nahme in Zeile: " & zeile & " Spalte: c_sma|fffd|n" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = True Then
               Fehlertext = "Bitte Priorit|fffd|t in Zeile: " & zeile & " Spalte: c_sprio" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = True Then
               Fehlertext = "Bitte Meldungstext in Zeile: " & zeile & " Spalte: c_smtxt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMtxt).Select
               fehler = True
               Exit Do
            End If
         End If
         
         
         
         'Ma|fffd|nahme
         If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = True Then
               Fehlertext = "Bitte Objektteil in Zeile: " & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Schadensbild
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = True Then
               Fehlertext = "Bitte Schaden in Zeile: " & zeile & " Spalte: c_sschb" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = True Then
               Fehlertext = "Bitte Ursache in Zeile: " & zeile & " Spalte: c_sursc" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = True Then
               Fehlertext = "Bitte Priorit|fffd|t in Zeile: " & zeile & " Spalte: c_sprio" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = True Then
               Fehlertext = "Bitte Meldungstext in Zeile: " & zeile & " Spalte: c_smtxt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMtxt).Select
               fehler = True
               Exit Do
            End If
          End If
         
         
         'Prio
         If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = True Then
               Fehlertext = "Bitte Objektteil in Zeile: " & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Schadensbild
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = True Then
               Fehlertext = "Bitte Schaden in Zeile: " & zeile & " Spalte: c_sschb" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = True Then
               Fehlertext = "Bitte Ursache in Zeile: " & zeile & " Spalte: c_sursc" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = True Then
               Fehlertext = "Bitte Ma|fffd|nahme in Zeile: " & zeile & " Spalte: c_sma|fffd|n" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Meldungstext
            If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = True Then
               Fehlertext = "Bitte Meldungstext in Zeile: " & zeile & " Spalte: c_smtxt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMtxt).Select
               fehler = True
               Exit Do
            End If
         End If
        
         
         'Meldungstext
         If IsEmpty(WS_FO.Cells(zeile, c_sMtxt)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = True Then
               Fehlertext = "Bitte Objektteil in Zeile: " & zeile & " Spalte: c_sobjt" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Schadensbild
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = True Then
               Fehlertext = "Bitte Schaden in Zeile: " & zeile & " Spalte: c_sschb" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = True Then
               Fehlertext = "Bitte Ursache in Zeile: " & zeile & " Spalte: c_sursc" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = True Then
               Fehlertext = "Bitte Ma|fffd|nahme in Zeile: " & zeile & " Spalte: c_sma|fffd|n" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = True Then
               Fehlertext = "Bitte Priorit|fffd|t in Zeile: " & zeile & " Spalte: c_sprio" & " eintragen !"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
         End If
         
         
         'ohne M|fffd|ngel
         If IsEmpty(WS_FO.Cells(zeile, c_sInsp)) = False Then
            'Objektteil
            If IsEmpty(WS_FO.Cells(zeile, c_sObjT)) = False Then
               Fehlertext = "Bitte ohne M|fffd|ngel Eintrag oder die Meldungseintr|fffd|ge l|fffd|schen!"
               Worksheets("FORMULAR").Cells(zeile, c_sObjT).Select
               fehler = True
               Exit Do
            End If
            'Schadensbild
            If IsEmpty(WS_FO.Cells(zeile, c_sSchB)) = False Then
               Fehlertext = "Bitte ohne M|fffd|ngel Eintrag oder die Meldungseintr|fffd|ge l|fffd|schen!"
               Worksheets("FORMULAR").Cells(zeile, c_sSchB).Select
               fehler = True
               Exit Do
            End If
            'Ursache
            If IsEmpty(WS_FO.Cells(zeile, c_sUrsc)) = False Then
               Fehlertext = "Bitte ohne M|fffd|ngel Eintrag oder die Meldungseintr|fffd|ge l|fffd|schen!"
               Worksheets("FORMULAR").Cells(zeile, c_sUrsc).Select
               fehler = True
               Exit Do
            End If
            'Ma|fffd|nahme
            If IsEmpty(WS_FO.Cells(zeile, c_sMa|fffd|n)) = False Then
               Fehlertext = "Bitte ohne M|fffd|ngel Eintrag oder die Meldungseintr|fffd|ge l|fffd|schen!"
               Worksheets("FORMULAR").Cells(zeile, c_sMa|fffd|n).Select
               fehler = True
               Exit Do
            End If
            'Priorit|fffd|t
            If IsEmpty(WS_FO.Cells(zeile, c_sPrio)) = False Then
               Fehlertext = "Bitte ohne M|fffd|ngel Eintrag oder die Meldungseintr|fffd|ge l|fffd|schen!"
               Worksheets("FORMULAR").Cells(zeile, c_sPrio).Select
               fehler = True
               Exit Do
            End If
         End If
         
   End If
'   z|fffd|hler_b = z|fffd|hler_b + 1
   zeile = zeile + schrittweite
   If zeile = 65536 Or z|fffd|hler_b > 25 Then ende = True
Loop


If fehler Then
    Muss_Felder_Check_Meldung = False
    MsgBox Fehlertext, vbCritical, "Fehler"
Else
     bResult = True
End If

Muss_Felder_Check_Meldung = bResult

On Error GoTo 0
Exit Function

Muss_Felder_Check_Meldung_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Muss_Felder_Check_Meldung")
End Function
'---------------------------------------------------------------------------------------
' Procedure  : version_check
' Author     : Johannes Spengler
' Date       : 30.05.2012
' Parameters : Boolean ,bool
' Purpose    :
'---------------------------------------------------------------------------------------
'
Public Function version_check() As Boolean
Dim boolResult  As Boolean
Dim strVersion     As String


If boolc_Fehlerbehandlung Then On Error GoTo version_check_Error

boolResult = False

strVersion = Application.Version

Select Case Val(strVersion)
    Case 11, 12, 14  ' Office 2003 = 11; Office 2007 = 12; Office 2010 = 14
        boolResult = True
End Select

version_check = boolResult

On Error GoTo 0
Exit Function

version_check_Error:
MsgBox "Error " & Err.Number & " (" & Err.Description & ") in Procedure version_check in Modul Name: Hauptmodul"

End Function
'
'---------------------------------------------------------------------------------------
' Procedure : csv_datei_erstellen
' Author    : J8380
' Date      : 11.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Function csv_datei_erstellen()
' erstellt die CSV-Datei

' lokale Variablendeklaration
Dim path As String
Dim y1 As Long
Dim x1 As Byte
Dim datei As Integer
Dim zeile As String
Dim trenner As String * 1
Dim ersatz As String * 1
Dim txt1 As String
Dim txt2 As String
Dim txt3 As String
Dim anz_ersatz As Long

' Blatt aktivieren
Worksheets(c_ws_Exp).Activate

' Fehlerbehandlung aktivieren
On Error GoTo fehler
' Datei-Dialog aufrufen
path = csv_datei_dialog()
If path = "" Then Exit Function
' Datei schreiben
anz_ersatz = 0
trenner = "|"
ersatz = " "
datei = FreeFile()
Open path For Output As #datei
    For y1 = 1 To 65536
        If Cells(y1, 1).Value = "" Then Exit For
        zeile = ""
        For x1 = 1 To 23
            If x1 <> 23 Then zeile = zeile & Cells(y1, x1).Value & trenner
            If x1 = 23 Then zeile = zeile & Cells(y1, x1).Value
        Next x1
        Print #datei, zeile
    Next y1
Close #datei

' Erfolgsmeldung
txt1 = "CSV-Datei wurde erfolgreich erzeugt!"
MsgBox txt1, vbInformation, "Hinweis"
On Error GoTo 0
Exit Function

' ---------------------------------------
' Fehlerbehandlung
fehler:
    MsgBox "Es ist ein Fehler beim Speichern der Datei aufgetreten!", vbCritical, "Fehler"
    Exit Function

End Function
'
'---------------------------------------------------------------------------------------
' Procedure : csv_datei_dialog
' Author    : J8380
' Date      : 11.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Function csv_datei_dialog() As String
' ruft den Datei-Dialog auf

' lokale Variablendeklaration
Dim fd As FileDialog
Dim fdfs As FileDialogFilters
Dim fdf As FileDialogFilter
Dim i As Byte
Dim l_filter As Boolean

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo csv_datei_dialog_Error


Set fd = Application.FileDialog(msoFileDialogSaveAs)
' FileDialog konfigurieren - Filter einstellen
Set fdfs = fd.Filters
i = 0
l_filter = False
For Each fdf In fdfs
    i = i + 1
    If InStr(1, fdf.Extensions, "csv", vbTextCompare) > 0 Then
        fd.FilterIndex = i
        l_filter = True
        Exit For
    End If
Next fdf
Set fdfs = Nothing
' FileDialog konfigurieren - Sonst
fd.Title = "CSV-Datei erzeugen"
fd.ButtonName = "Speichern"
If l_filter = False Then fd.InitialFileName = Left(Application.ActiveWorkbook.FullName, InStrRev(Application.ActiveWorkbook.FullName, ".")) & "csv"
If l_filter = True Then fd.InitialFileName = Application.ActiveWorkbook.FullName
fd.AllowMultiSelect = False
' FileDialog anzeigen und auswerten
If fd.Show = -1 Then
    csv_datei_dialog = fd.SelectedItems.Item(1)
Else
    MsgBox "CSV-Datei wurde nicht erzeugt!", vbCritical, "Warnung"
    csv_datei_dialog = ""
End If
' Objektvariable freigeben
Set fd = Nothing


On Error GoTo 0
Exit Function

csv_datei_dialog_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("csv_datei_dialog")
End Function
Public Sub testt()

Schadenscode.Show

End Sub

'
'---------------------------------------------------------------------------------------
' Procedure : Formular_Gef|fffd|llt
' Author    : J8380
' Date      : 27.10.2016
' Purpose   : Ist das Formular mit Daten gef|fffd||fffd|lt ?
'---------------------------------------------------------------------------------------
'
Public Function Formular_Gef|fffd|llt() As Boolean
Dim bResult         As Boolean
Dim WS_FO           As Worksheet
Dim CellenName      As String


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Formular_Gef|fffd|llt_Error
bResult = False


' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


On Error Resume Next
CellenName = WS_FO.Cells(1, 1).Name.Name
On Error GoTo 0
If CellenName = "Formular_bereits_gef|fffd|llt" Then
    bResult = True
End If


Formular_Gef|fffd|llt = bResult

On Error GoTo 0
Exit Function

Formular_Gef|fffd|llt_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Formular_Gef|fffd|llt")
End Function
Public Sub test()

Dim WS_FO       As Worksheet

' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)

'WS_FO.Range(c_rg_Filter).AutoFilter Field:=1, Operator:=xlFilterValues

If WS_FO.AutoFilterMode Then WS_FO.AutoFilterMode = False

End Sub
'
'
'---------------------------------------------------------------------------------------
' Procedure : Kopfdaten_Formel_anpassen
' Author    : J8380
' Date      : 12.05.2017
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Kopfdaten_Formel_anpassen(SZeile As Long, EZeile As Long)
Dim zeileFormel1 As Long
Dim zeileFormel2 As Long

Dim formel1  As String
Dim formel2  As String

Dim zeileZ1S  As Long
Dim zeileZ2S  As Long

Dim zeileZ1E As Long
Dim zeileZ2E As Long

Const zeileNrEq  As Long = -10
Const zeileNrOK  As Long = -6
Const zeileNrBZ  As Long = -5

Dim WS_FO       As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Kopfdaten_Formel_anpassen_Error

' Variablen initialisieren
Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)

'Anzahl Bl|fffd|tter (Seiten)
lngAnzBl|fffd|tter = lngAnzBl|fffd|tter + 1

If lngAnzBl|fffd|tter = 1 Then
   zeileFormel1 = SZeile - 4
   zeileFormel2 = SZeile - 3
   zeileZ1S = 4
   zeileZ1E = EZeile - SZeile + 3
   zeileZ2S = 3
   zeileZ2E = EZeile - SZeile + 2
Else
   zeileFormel1 = SZeile - 2
   zeileFormel2 = SZeile - 1
   zeileZ1S = 2
   zeileZ1E = EZeile - SZeile + 1
   zeileZ2S = 1
   zeileZ2E = EZeile - SZeile
End If

' Gesamtzahl HA
formel1 = "=ANZAHL2(Z(" & zeileZ1S & ")S(" & zeileNrEq & "):Z(" & zeileZ1E & ")S(" & zeileNrEq & "))"
' davon gepr|fffd|ft
formel2 = "=ANZAHL2(Z(" & zeileZ2S & ")S(" & zeileNrOK & "):Z(" & zeileZ2E & ")S(" & zeileNrOK & "))" & _
          "+ANZAHL2(Z(" & zeileZ2S & ")S(" & zeileNrBZ & "):Z(" & zeileZ2E & ")S(" & zeileNrBZ & "))"

WS_FO.Range(Cells(zeileFormel1, 11), Cells(zeileFormel1, 11)).FormulaR1C1Local = formel1
WS_FO.Range(Cells(zeileFormel2, 11), Cells(zeileFormel2, 11)).FormulaR1C1Local = formel2


On Error GoTo 0
Exit Sub

Kopfdaten_Formel_anpassen_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Kopfdaten_Formel_anpassen")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Daten_Sortieren
' Author    : J8380
' Date      : 29.06.2017
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Daten_Sortieren()
Dim lnglr       As Long
Dim StartZeile  As Integer
Dim EndSpalte   As Integer
Dim zeile       As Long
Dim ws_da       As Worksheet
Dim sRange      As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Daten_Sortieren_Error

Set ws_da = ActiveWorkbook.Worksheets(c_ws_Dat)

StartZeile = 10
EndSpalte = 12

zeile = StartZeile
Do Until ws_da.Cells(zeile, 1) = ""
    ws_da.Cells(zeile, 13) = Hausnummer(ws_da.Cells(zeile, 6)).hausnr
    ws_da.Cells(zeile, 14) = Hausnummer(ws_da.Cells(zeile, 6)).hnk|fffd|rzel
    zeile = zeile + 1
Loop

'Sortiern
With Worksheets(c_ws_Dat)
    lnglr = .Cells(.Rows.Count, 1).End(xlUp).Row
    .Sort.SortFields.Clear
    .Sort.SortFields.Add Key:=Range("J10"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    .Sort.SortFields.Add Key:=Range("E10"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    .Sort.SortFields.Add Key:=Range("M10"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    .Sort.SortFields.Add Key:=Range("N10"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
End With

sRange = "A10:O" & lnglr

'immer, um die Kriterien anzuwenden
With Worksheets(c_ws_Dat).Sort
    .SetRange Range(sRange)
    .Header = xlNo
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

''StartZeile = 10
''EndSpalte = 12
''
''With Sheets("DATEN")
''        lnglr = .Cells(.Rows.Count, 1).End(xlUp).Row
''        .Cells(StartZeile, 1).Resize(lnglr - 1, EndSpalte).Sort Key1:=Range("J10"), Key2:=Range("E10"), Key3:=Range("F10"), _
''        Order1:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
''End With
    
On Error GoTo 0
Exit Sub

Daten_Sortieren_Error:
   ' Fehlerroutine
    Call Fehlerbehandlung("Daten_Sortieren")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Hausnummer
' Author    : J8380
' Date      : 07.08.2017
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function Hausnummer(hausnr As String) As t_hausnr
Dim i       As Integer
Dim hnr     As String
Dim hk      As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Hausnummer_Error

' String in numerisch und Alphanum zerlegen
For i = 1 To Len(hausnr)
    Select Case Asc(Mid(hausnr, i, 1))
            Case 48 To 57 'Zahl
                hnr = hnr & Mid(hausnr, i, 1)
            Case 65 To 90 'Buchstaben
                hk = hk & Mid(hausnr, i, 1)
            Case 97 To 122 'Buchstaben
                hk = hk & Mid(hausnr, i, 1)
            Case 32 ' Leerzeichen
                If i > 1 Then
                    hk = Trim(Mid(hausnr, i, Len(hausnr) - i + 1))
                    Exit For
                End If
            Case 47 ' /
                If i > 1 Then
                    hk = Trim(Mid(hausnr, i - 1, Len(hausnr) + 1))
                    hnr = Val(Mid(hausnr, 1, i - 2))
                    Exit For
                End If
    End Select
Next i

Hausnummer.hausnr = Val(hnr)
If Len(hk) = 0 Then
    Hausnummer.hnk|fffd|rzel = Chr(32)
Else
    Hausnummer.hnk|fffd|rzel = hk
End If


On Error GoTo 0
Exit Function

Hausnummer_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Hausnummer")
End Function
'
'*******************************************************************************************************************************************
'
'---------------------------------------------------------------------------------------
' Procedure : Sperre
' Author    : J8380
' Date      : 12.10.2017
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Sperre(line_bf As Long, Bereich As String, Aktiv As Boolean)
Dim WS_FO As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Sperre_Error

Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


'1 Blatt schutz aus
Formular_entsperren

If Bereich = "BF" Then
    '2 Zellenschutz ein/aus -> Meldungsbereich
    WS_FO.Range(Cells(line_bf, 6), Cells(line_bf, 11)).Locked = Aktiv
ElseIf Bereich = "OI" Then
    ' Spalte 5 Inspektion ohne/mit
    WS_FO.Range(Cells(line_bf, 5), Cells(line_bf, 5)).Locked = Aktiv
End If

'3 Blatt sch|fffd|tzen
Formular_sperren


On Error GoTo 0
Exit Sub

Sperre_Error:
    MsgBox "Error " & Err.Number & " (" & Err.Description & ") in procedure xx of Modul Routinen"
End Sub
Attribute VB_Name = "Schadenscode"
Attribute VB_Base = "0{DFFB0F5F-7CC2-404A-965F-2CB08DF5E418}{213D658D-5566-4FA0-AC51-B065B343F39D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'*----------------------------------------------------------------------------------
'*  SAP-Formular Objektteil
'*
'*----------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------
'* 06.02.2018    Spengler    INCxx Meldungen
'* 05.08.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------
'
Public l_alle_Werte As Boolean
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_OK_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_OK_Click()
Dim i As Integer
Dim s_Text, s_Key, s_key_a  As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_OK_Click_Error

For i = 1 To TreeView1.Nodes.Count
    If TreeView1.Nodes.Item(i).Selected Then
     s_Text = TreeView1.Nodes.Item(i).Text
     s_Key = TreeView1.Nodes.Item(i).Key
    End If
Next i

If Len(s_Key) = 5 Then
    MsgBox "Falsche Auswahl sie m|fffd|ssen eine Untergruppe ausw|fffd|hlen!"
    Exit Sub
End If

If s_Key <> "" Then
    s_key_a = Mid(s_Key, 10, Len(s_Key) - 9)
End If

ActiveCell.FormulaR1C1 = "=TEXT(""" & s_Text & """,""" & s_key_a & """)"
ActiveCell.Offset(0, 1).Select
Unload Me


On Error GoTo 0
Exit Sub

cmd_OK_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_OK_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_Abbruch_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_Abbruch_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_Abbruch_Click_Error

Unload Me

On Error GoTo 0
Exit Sub

cmd_Abbruch_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_Abbruch_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_DeleteWert_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_DeleteWert_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_DeleteWert_Click_Error

Unload Me
ActiveCell = ""

On Error GoTo 0
Exit Sub

cmd_DeleteWert_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_DeleteWert_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : TreeView1_DblClick
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub TreeView1_DblClick()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo TreeView1_DblClick_Error

Call cmd_OK_Click

On Error GoTo 0
Exit Sub

TreeView1_DblClick_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("TreeView1_DblClick")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : UserForm_Activate
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub UserForm_Activate()
Dim WS_LG           As Worksheet
Dim P_node          As String
Dim C_node          As String
Dim c_zeile         As Long
Dim c_spalte_code   As Long
Dim c_spalte_bez    As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo UserForm_Activate_Error


' Variablen initialisieren
Set WS_LG = ActiveWorkbook.Worksheets(c_ws_Leg)


' ****** Verarbeitungsteil *******
'initialwerte setzten
zeile = 2
c_spalte_code = 4
c_spalte_bez = 5


TreeView1.Nodes.Clear
P_node = "P0000"
TreeView1.Nodes.Add , , P_node, (c_Schaden)

Do Until WS_LG.Cells(zeile, c_spalte_code).Value = ""
    'Child Node
    C_node = P_node & "_" & WS_LG.Cells(zeile, c_spalte_code).Value
    TreeView1.Nodes.Add P_node, 4, C_node, (WS_LG.Cells(zeile, c_spalte_bez).Value)
    TreeView1.Nodes(P_node).Expanded = True
    zeile = zeile + 1
Loop



On Error GoTo 0
Exit Sub

UserForm_Activate_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("UserForm_Activate")
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'
'---------------------------------------------------------------------------------------
' Procedure : Worksheet_BeforeDoubleClick
' Author    : J8380
' Date      : 04.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Dim nms As Variant
Dim wks As Variant
Dim r As Integer

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Worksheet_BeforeDoubleClick_Error

Set nms = ActiveWorkbook.Names
Set wks = Worksheets(c_ws_For)

For r = 1 To nms.Count
    If Left(nms(r).Name, 16) = "Formular_Schaden" Then
      If Not Application.Intersect(Target, Range(nms(r).Name)) Is Nothing Then
         Cancel = True
         If Target.Cells.Locked = False Then
            Schadenscode.Show
         End If
      End If
    End If
    If Left(nms(r).Name, 17) = "Formular_Ma|fffd|nahme" Then
      If Not Application.Intersect(Target, Range(nms(r).Name)) Is Nothing Then
         Cancel = True
         If Target.Cells.Locked = False Then
            Ma|fffd|nahme.Show
         End If
      End If
    End If
    If Left(nms(r).Name, 16) = "Formular_Ursache" Then
      If Not Application.Intersect(Target, Range(nms(r).Name)) Is Nothing Then
         Cancel = True
         If Target.Cells.Locked = False Then
            Ursache.Show
         End If
      End If
    End If
   'Bezugsobjekt Meldungen
    If Left(nms(r).Name, 19) = "Formular_Objektteil" Then
      If Not Application.Intersect(Target, Range(nms(r).Name)) Is Nothing Then
         Cancel = True
         If Target.Cells.Locked = False Then
            Objektteil.Show
         End If
      End If
    End If
Next



On Error GoTo 0
Exit Sub

Worksheet_BeforeDoubleClick_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Worksheet_BeforeDoubleClick")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : Worksheet_SelectionChange
' Author    : J8380
' Date      : 26.10.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
Dim WS_FO   As Worksheet

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo Worksheet_SelectionChange_Error

Set WS_FO = ActiveWorkbook.Worksheets(c_ws_For)


' nur falls Formular gef|fffd|llt
If Formular_Gef|fffd|llt And Target.Column = 5 Then
    If WS_FO.Cells(Target.Row, Target.Column + 1) = "" And _
       WS_FO.Cells(Target.Row, Target.Column + 2) = "" And _
       WS_FO.Cells(Target.Row, Target.Column + 3) = "" And _
       WS_FO.Cells(Target.Row, Target.Column + 4) = "" And _
       WS_FO.Cells(Target.Row, Target.Column + 5) = "" And _
       WS_FO.Cells(Target.Row, Target.Column + 6) = "" Then
        If WS_FO.Cells(Target.Row, Target.Column) = Chr$(254) Then
           Call Sperre(Target.Row, "OI", False)
           WS_FO.Cells(Target.Row, Target.Column) = ""
           Call Sperre(Target.Row, "BF", False)
        Else
           Call Sperre(Target.Row, "OI", False)
           WS_FO.Cells(Target.Row, Target.Column) = Chr$(254)
           ' Aufruf sperre
           Call Sperre(Target.Row, "BF", True)
        End If
    Else
        'nix
    End If
End If
    

' Hier Pr|fffd|fung auf Meldungsbereich
If Target.Column >= 6 And Target.Column <= 11 And Formular_Gef|fffd|llt Then
    Select Case Target.Column
            Case 6
               If WS_FO.Cells(Target.Row, Target.Column) = "" And _
                  WS_FO.Cells(Target.Row + 1, Target.Column) = "" And _
                  WS_FO.Cells(Target.Row + 2, Target.Column) = "" And _
                  WS_FO.Cells(Target.Row + 3, Target.Column) = "" And _
                  WS_FO.Cells(Target.Row + 4, Target.Column) = "" And _
                  WS_FO.Cells(Target.Row + 5, Target.Column) = "" And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
            Case 7
               If IsNull(WS_FO.Cells(Target.Row, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 3, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 4, Target.Column)) And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
            Case 8
               If IsNull(WS_FO.Cells(Target.Row, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 3, Target.Column)) And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
            Case 9
               If IsNull(WS_FO.Cells(Target.Row, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 3, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 2, Target.Column)) And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
            Case 10
              If IsNull(WS_FO.Cells(Target.Row, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 3, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 4, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row + 1, Target.Column)) And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
            Case 11
               If IsNull(WS_FO.Cells(Target.Row, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 1, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 2, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 3, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 4, Target.Column)) And _
                  IsNull(WS_FO.Cells(Target.Row - 5, Target.Column)) And _
                  WS_FO.Cells(4, Target.Column) = "" Then
                    'Sperre aufheben
                    Call Sperre(Target.Row, "OI", False)
               Else
                   Call Sperre(Target.Row, "OI", True)
               End If
    End Select
End If


On Error GoTo 0
Exit Sub

Worksheet_SelectionChange_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("Worksheet_SelectionChange")
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Ursache"
Attribute VB_Base = "0{835E2B77-C625-4120-AD1A-4FF0F6F6644F}{FEB914DE-531B-4791-8D41-F94CC4B6CAA0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'*----------------------------------------------------------------------------------
'*  SAP-Formular Objektteil
'*
'*----------------------------------------------------------------------------------
'* |fffd|nderungshistorie: VB - Teil
'* Datum         Benutzer    Grund
'*----------------------------------------------------------------------------------
'* 06.02.2018    Spengler    INCxx Meldungen
'* 05.08.2016    Spengler    Erstellt
'*----------------------------------------------------------------------------------
'
Public l_alle_Werte As Boolean
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_OK_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_OK_Click()
Dim i As Integer
Dim s_Text, s_Key, s_key_a  As String

' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_OK_Click_Error

For i = 1 To TreeView1.Nodes.Count
    If TreeView1.Nodes.Item(i).Selected Then
     s_Text = TreeView1.Nodes.Item(i).Text
     s_Key = TreeView1.Nodes.Item(i).Key
    End If
Next i

If Len(s_Key) = 5 Then
    MsgBox "Falsche Auswahl sie m|fffd|ssen eine Untergruppe ausw|fffd|hlen!"
    Exit Sub
End If

If s_Key <> "" Then
    s_key_a = Mid(s_Key, 10, Len(s_Key) - 9)
End If

ActiveCell.FormulaR1C1 = "=TEXT(""" & s_Text & """,""" & s_key_a & """)"
ActiveCell.Offset(0, 1).Select
Unload Me


On Error GoTo 0
Exit Sub

cmd_OK_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_OK_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_Abbruch_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_Abbruch_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_Abbruch_Click_Error

Unload Me

On Error GoTo 0
Exit Sub

cmd_Abbruch_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_Abbruch_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : cmd_DeleteWert_Click
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub cmd_DeleteWert_Click()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo cmd_DeleteWert_Click_Error

Unload Me
ActiveCell = ""

On Error GoTo 0
Exit Sub

cmd_DeleteWert_Click_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("cmd_DeleteWert_Click")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : TreeView1_DblClick
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub TreeView1_DblClick()
' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo TreeView1_DblClick_Error

Call cmd_OK_Click

On Error GoTo 0
Exit Sub

TreeView1_DblClick_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("TreeView1_DblClick")
End Sub
'
'---------------------------------------------------------------------------------------
' Procedure : UserForm_Activate
' Author    : J8380
' Date      : 05.08.2016
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub UserForm_Activate()
Dim WS_LG           As Worksheet
Dim P_node          As String
Dim C_node          As String
Dim c_zeile         As Long
Dim c_spalte_code   As Long
Dim c_spalte_bez    As Long


' Fehlerbehandlung
If boolc_Fehlerbehandlung Then On Error GoTo UserForm_Activate_Error


' Variablen initialisieren
Set WS_LG = ActiveWorkbook.Worksheets(c_ws_Leg)


' ****** Verarbeitungsteil *******
'initialwerte setzten
zeile = 2
c_spalte_code = 7
c_spalte_bez = 8


TreeView1.Nodes.Clear
P_node = "P0000"
TreeView1.Nodes.Add , , P_node, (c_Ursache)

Do Until WS_LG.Cells(zeile, c_spalte_code).Value = ""
    'Child Node
    C_node = P_node & "_" & WS_LG.Cells(zeile, c_spalte_code).Value
    TreeView1.Nodes.Add P_node, 4, C_node, (WS_LG.Cells(zeile, c_spalte_bez).Value)
    TreeView1.Nodes(P_node).Expanded = True
    zeile = zeile + 1
Loop



On Error GoTo 0
Exit Sub

UserForm_Activate_Error:
   ' Fehlerroutine
   Call Fehlerbehandlung("UserForm_Activate")
End Sub



INQUEST-PP=macro
