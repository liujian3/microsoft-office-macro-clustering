Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeClose(Cancel As Boolean)
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
End Sub
Private Sub Workbook_Open()
End Sub
Sub alle()
End Sub

Attribute VB_Name = "HTMLForm"
Attribute VB_Base = "0{2B5772D4-C16B-411C-B669-43A3F8133A40}{55659568-6388-4C8E-A5B3-921B75A09427}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim excelver, first, einst, overwrite, oldpath, filetoopen
Dim vollbild, filesavename, fileinit, datname, dateiname, pfad, endung
Private Sub CheckBox11_Click()
Label2.Visible = CheckBox11.Value = False
Label9.Visible = CheckBox11.Value = True
If CheckBox11 Then
CommandButton1.Caption = "Zielordner"
Label4.Caption = pfad
Else
CommandButton1.Caption = "Zieldatei"
Label4.Caption = "(zu ver|fffd|ffentlichende HTML-Seite)"
End If
End Sub
Private Sub CheckBox7_Click()
If CheckBox7 Then
CheckBox6.Caption = "Quotenpunkte-Berechnung"
Else
CheckBox6.Caption = "zus|fffd|tzliche Seite mit Quotenpunkte-Berechnung"
End If
End Sub
Private Sub CommandButton1_Click()
OptionButton2.Value = True
asn = fileinit
If Len(filesavename) <> 0 Then asn = dateiname
Application.CutCopyMode = False
If Len(asn) > 4 Then
If Right(asn, 4) = ".htm" Then
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
Else
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.htm;*.html), *.htm;*.html", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
Else
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
If ziel = False Or Len(ziel) = 0 Then Exit Sub
filesavename = ziel
Label2.Caption = filesavename
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
pfad = Left(filesavename, i)
If CheckBox11 Then
CommandButton1.Caption = "Zielordner"
Label4.Caption = pfad
Else
CommandButton1.Caption = "Zieldatei"
Label4.Caption = "(zu ver|fffd|ffentlichende HTML-Seite)"
End If
For i = Len(dateiname) To 1 Step -1
If Mid(dateiname, i, 1) = "." Then
endung = Right(dateiname, Len(dateiname) - i + 1)
datname = Left(dateiname, i - 1)
einst(1, 2) = dateiname
einst(1, 3) = pfad
Application.CutCopyMode = False
Exit Sub
End If
Next
Application.CutCopyMode = False
End Sub
Private Sub CommandButton2_Click()
If Len(filesavename) = 0 And OptionButton2 Then
If CheckBox11 Then
aw = MsgBox("Der Zielordners des Batchprozesses muss angegeben werden.", vbOKOnly, "Fehler")
Else
aw = MsgBox("Der Name der Zieldatei muss angegeben werden.", vbOKOnly, "Fehler")
End If
Exit Sub
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
idx = Val(HTMLForm.Tag)
If Len(filetoopen) > 0 Then
einst(1, 1) = filetoopen
ElseIf OptionButton2 Then
einst(1, 1) = Null
End If
If idx <> 4 Or (OptionButton2 And Len(dateiname) = 0) Then einst(1, 2) = Null
If Len(pfad) > 0 Then
einst(1, 3) = pfad
ElseIf OptionButton2 Then
einst(1, 3) = Null
End If
einst(1, 4) = OptionButton2.Value
einst(1, 5) = CheckBox2.Value
einst(1, 6) = ComboBox1.ListIndex
Set h = Sheets("html")
h.Range(h.Cells(10 + idx, 2), h.Cells(10 + idx, 7)) = einst
anz = Sheets("tipps").[b6]
If idx = 7 Then
oldidx = Sheets("tipps").[fs20]
aktidx = 0
h.[h17] = CheckBox3.Value
If Not CheckBox3 Then
Sheets("druck").[r45:r48].EntireRow.Hidden = True
Else
Sheets("druck").[r45:r48].EntireRow.Hidden = False
End If
End If
If idx = 6 And CheckBox6 And CheckBox8 And CheckBox6.Visible = True Then
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
Sheets(aktuelleseite).Activate
ppspt = [fr21]
anzmsp = [b6]
If OptionButton1 Then
vollbild = Application.DisplayFullScreen
If CheckBox2 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
Application.Calculation = xlCalculationManual
Set h2 = Sheets("druck")
sn = "druck"
rando = Sheets("druck").PageSetup.TopMargin
h2.[en200:ep211].Value = [fd100:ff111].Value
h2.[em218:ey322].Value = [em118:ey222].Value
h2.[em328:ez448].Value = [fc100:fp220].Value
h2.[em323:ez326].Value = h2.[em559:ez562].Value
With h2
.Range(.Cells(202 + ppspt, 1), .Cells(212, 1)).EntireRow.Hidden = True
.Range(.Cells(221 + anzmsp, 1), .Cells(321, 1)).EntireRow.Hidden = True
.Range(.Cells(349 + anzmsp, 1), .Cells(449, 1)).EntireRow.Hidden = True
.Range(.Cells(330 + ppspt, 1), .Cells(340, 1)).EntireRow.Hidden = True
If Not CheckBox3 Then h2.[em322:ez326].EntireRow.Hidden = True
End With
Application.Calculation = xlCalculationAutomatic
h2.Visible = True
ber = [em218:ez452].Address
pre = CheckBox2.Value = True
HTMLForm.Hide
Application.ScreenUpdating = True
Application.EnableEvents = True
Sheets(sn).Range(ber).PrintOut preview:=pre, copies:=ComboBox1.ListIndex + 1
Application.ScreenUpdating = False
Application.EnableEvents = False
If CheckBox2 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
h2.Visible = xlVeryHidden
h2.[ez200:ez452].EntireRow.Hidden = False
h2.[ez213:ez216].EntireRow.Hidden = True
h2.[ez341:ez344].EntireRow.Hidden = True
Sheets("druck").PageSetup.TopMargin = rando
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
HTMLForm.Show
working = working_shk
Else
Set fs = CreateObject("Scripting.FileSystemObject")
sn = "Tipps"
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, filesavename, True
neu = False
Else
neu = True
If Dir(filesavename) <> "" Then
Application.ScreenUpdating = True
aw2 = MsgBox("Die Datei" & Chr(13) & filesavename & Chr(13) & "besteht bereits!" & Chr(13) & Chr(13) & "Antworten Sie mit JA, um die bestehende Datei zu |fffd|berschreiben." & Chr(13) & "Mit NEIN werden die neuen Daten an die bestehende Datei angeh|fffd|ngt." & Chr(13) & Chr(13) & "Datei |fffd|berschreiben?", 291, "Sicherheitsabfrage")
Application.ScreenUpdating = False
If aw2 = 6 Then
neu = True
ElseIf aw2 = 7 Then
neu = False
Else
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
Set fs = Nothing
Exit Sub
End If
End If
End If
[em1:fp1].EntireColumn.Hidden = False
If CheckBox5 And CheckBox5.Enabled = True And Not CheckBox6 And Not CheckBox8 Then
ppspt = [fr21].Value
parber = Range("fc100:fp" & 101 + ppspt).Address
If Sheets("plan").[f47] = 0 Then parber = Range("em100:er" & 101 + ppspt).Address
Call htmlexport(sn, parber, filesavename, neu, True)
neu = False
End If
ber = Range("em118:ey" & 120 + anzmsp).Address
Call htmlexport(sn, ber, filesavename, neu, True)
neu = False
If CheckBox3 Then
ber = Range("em223:ey227").Address
Call htmlexport(sn, ber, filesavename, False, True)
End If
ppspt = [fr21].Value
parber = Range("fc100:fp" & 101 + ppspt).Address
Call htmlexport(sn, parber, filesavename, neu, True)
neu = False
ber = Range("fc117:fp" & 120 + anzmsp).Address
Call htmlexport(sn, ber, filesavename, neu, True)
ber = Range("fc223:fp225").Address
Call htmlexport(sn, ber, filesavename, False, True)
[em1:fp1].EntireColumn.Hidden = True
Set fs = Nothing
Application.ScreenUpdating = False
Application.EnableEvents = False
aw = MsgBox("HTML-Datei erfolgreich erstellt", vbOKOnly, "Vorgang beendet")
End If
Application.CutCopyMode = False
Exit Sub
End If
If idx = 8 Then
anztipp = Sheets("zusatztipps").[i172:n172]
For i = 1 To 6
If Len(anztipp(1, i)) > 0 Then
If anztipp(1, i) < 5 Then
za = (i - 1) * 10 + 1237 + anztipp(1, i)
ze = (i - 1) * 10 + 1241
With Sheets("druck")
.Range(.Cells(za, 1), .Cells(ze, 1)).EntireRow.Hidden = True
End With
End If
End If
Next
End If
If idx = 13 Then
Set taw = Sheets("teamausw")
anztab = 0
tabsort = taw.[t25:t27].Value
For i = 1 To 3
If Controls("cbta" & i).Value = True Then
anztab = anztab + 1
tabsort(anztab, 1) = i
End If
Sheets("html").Cells(23, 7 + i) = Controls("cbta" & i).Value
Next
If anztab = 0 Then
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
Exit Sub
End If
oldtippdata = Sheets("teamausw").Range("f2:h381").Value
oldtabidx = Sheets("teamausw").[m23]
tanz = Sheets("plan").[e1]
ber = Range("m26:s" & anztab * 25 + 25).Address
If OptionButton2 Then ber = Range("m26:s" & anztab * 25 + 26).Address
CommandButton1.Tag = ber
For i = 1 To anztab
za = (i - 1) * 25 + 29 + tanz
ze = (i - 1) * 25 + 49
taw.Range(taw.Cells(za, 1), taw.Cells(ze, 1)).EntireRow.Hidden = True
Next
shkidx = -1
oldname = Sheets("teamausw").[n26]
If CheckBox11 Or anztab > 1 Or taw.[m23] <> tabsort(1, 1) - 1 Then
Application.Calculation = xlCalculationManual
If Controls("cbta" & taw.[m23] + 1).Value = True Then
shk = taw.[m27:s48].Value
shkidx = taw.[m23] + 1
End If
If Not CheckBox11 Then
For i = anztab To 1 Step -1
za = (i - 1) * 25 + 27
ze = za + 21
taw.[m23] = tabsort(i, 1) - 1
If shkidx = tabsort(i, 1) Then
If za > 27 Then taw.Range(taw.Cells(za, 13), taw.Cells(ze, 19)).Value = shk
Else
s = taw.[m24]
With Sheets("teamausw")
.Calculate
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
If za > 27 Then taw.Range(taw.Cells(za, 13), taw.Cells(ze, 19)).Value = taw.[m27:s48].Value
End If
Next
End If
End If
End If
If OptionButton1 Then
vollbild = Application.DisplayFullScreen
If CheckBox2 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
pre = CheckBox2.Value = True
ber = CommandButton1.Tag
sn = OptionButton2.Tag
If idx = 1 Then
h.[h11] = CheckBox3.Value
ber = Left(ber, Len(ber) - 3) & "562"
With Sheets(sn)
If Not CheckBox3 Then .[a559:a562].EntireRow.Hidden = True
.Range(.Cells(457 + anz, 1), .Cells(557, 1)).EntireRow.Hidden = True
End With
End If
If idx = 2 Then
h.[h12] = CheckBox10.Value
With Sheets("data")
If CheckBox10 Then
.Range(.Cells(7067 + anz, 1), .Cells(7167, 1)).EntireRow.Hidden = True
ber = Left(ber, Len(ber) - 4) & "7175"
Else
.Range(.Cells(7067 + anz, 1), .Cells(7167, 1)).EntireRow.Hidden = False
End If
End With
End If
If idx = 4 Then
If Not CheckBox3 Then ber = Left(ber, Len(ber) - 4) & "8012"
If Not CheckBox4 Then Sheets(sn).[a8000:a8012].EntireRow.Hidden = True
h.[h14] = CheckBox3.Value
h.[i14] = CheckBox4.Value
End If
If idx = 6 Then
ppspt = [fr21].Value
If CheckBox3 Then ber = Left(ber, Len(ber) - 3) & "226"
[a114:a117].EntireRow.Hidden = True
Range("em118:ey226").EntireColumn.Hidden = False
Range(Cells(121 + anz, 1), Cells(221, 1)).EntireRow.Hidden = True
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = True
If CheckBox5 And CheckBox5.Enabled = True Then ber = "$EM$100" & Right(ber, Len(ber) - 7)
h.[h16] = CheckBox3.Value
h.[i16] = CheckBox5.Value
End If
If idx <> 6 Then Sheets(sn).Visible = True
HTMLForm.Hide
Application.ScreenUpdating = True
Application.EnableEvents = True
rando = Sheets(sn).PageSetup.TopMargin
startbatch:
If idx = 7 And CheckBox11 Then
aktidx = aktidx + 1
pre = False
Sheets("tipps").[fs20] = aktidx
ElseIf idx = 13 And CheckBox11 Then
namliste = Sheets("tipps").[by11:ca110]
aktidx = aktidx + 1
pre = False
Set d = Sheets("data")
With Sheets("teamausw")
.[n26] = namliste(aktidx, 1)
nidx = namliste(aktidx, 3)
tippdata = .[f2:h381].Value
tipps = d.Range(d.Cells(2, nidx + 2), d.Cells(1141, nidx + 2)).Value
nr = 0
For j = 1 To 1140 Step 3
nr = nr + 1
tippdata(nr, 1) = tipps(j, 1)
tippdata(nr, 2) = tipps(j + 1, 1)
tippdata(nr, 3) = tipps(j + 2, 1)
Next
tanz = Sheets("plan").[e1]
.Range("f2:h381").Value = tippdata
.Calculate
End With
For i = anztab To 1 Step -1
za = (i - 1) * 25 + 27
ze = za + 21
taw.[m23] = tabsort(i, 1) - 1
s = taw.[m24]
With Sheets("teamausw")
.Calculate
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
If za > 27 Then taw.Range(taw.Cells(za, 13), taw.Cells(ze, 19)).Value = taw.[m27:s48].Value
Next
Sheets("teamausw").Calculate
End If
Call ausdruck(sn, ber, pre, ComboBox1.ListIndex + 1)
If idx = 7 And CheckBox11 And aktidx < anz Then GoTo startbatch
If idx = 13 And CheckBox11 And aktidx < anz Then GoTo startbatch
If idx = 7 And CheckBox11 Then Sheets("Tipps").[fs20] = oldidx
If idx = 13 And CheckBox11 Then
Sheets("teamausw").[n26] = oldname
Sheets("teamausw").Range("f2:h381").Value = oldtippdata
Sheets("teamausw").[m23] = oldtabidx
s = taw.[m24]
With Sheets("teamausw")
.Calculate
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
End If
Sheets(sn).PageSetup.TopMargin = rando
If idx <> 6 Then Sheets(sn).Visible = xlVeryHidden
If idx = 1 Then Sheets(sn).[a454:a562].EntireRow.Hidden = False
If idx = 4 Then Sheets(sn).[a8000:a8012].EntireRow.Hidden = False
If idx = 8 Then Sheets(sn).[a1233:a1292].EntireRow.Hidden = False
If idx = 6 Then
If CheckBox6.Value = True Then
Application.ScreenUpdating = False
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
Sheets(aktuelleseite).Activate
ppspt = [fr21]
Sheets(aktuelleseite).Calculate
[fc1:fp1].EntireColumn.Hidden = False
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = True
Range(Cells(121 + [b6], 1), Cells(221, 1)).EntireRow.Hidden = True
Application.ScreenUpdating = True
Application.EnableEvents = True
rando = Sheets(sn).PageSetup.TopMargin
Call ausdruck(sn, "fc100:fp224", pre, ComboBox1.ListIndex + 1)
Application.ScreenUpdating = False
Sheets(sn).PageSetup.TopMargin = rando
[fc1:fp1].EntireColumn.Hidden = True
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = False
Range(Cells(121 + [b6], 1), Cells(221, 1)).EntireRow.Hidden = False
End If
[a114:a117].EntireRow.Hidden = False
Range("em118:ey220").EntireColumn.Hidden = True
Range(Cells(102, 1), Cells(111, 1)).EntireRow.Hidden = False
Application.ScreenUpdating = True
End If
If CheckBox2 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
HTMLForm.Show
working = working_shk
Application.CutCopyMode = False
Exit Sub
End If
sn = OptionButton2.Tag
ber = CommandButton1.Tag
If idx = 4 Then
h.[h14] = CheckBox3.Value
h.[i14] = CheckBox4.Value
anztag = Sheets("data").[p7184]
ber = Range("a7182:m" & 7185 + anztag).Address
End If
Set fs = CreateObject("Scripting.FileSystemObject")
If Len(filetoopen) > 0 Then
If idx <> 5 And Not CheckBox11 Then fs.CopyFile filetoopen, filesavename, True
If idx <> 5 Then neu = False
Else
neu = True
If Dir(filesavename) <> "" And Not CheckBox11 Then
Application.ScreenUpdating = True
aw2 = MsgBox("Die Datei" & Chr(13) & filesavename & Chr(13) & "besteht bereits!" & Chr(13) & Chr(13) & "Antworten Sie mit JA, um die bestehende Datei zu |fffd|berschreiben." & Chr(13) & "Mit NEIN werden die neuen Daten an die bestehende Datei angeh|fffd|ngt." & Chr(13) & Chr(13) & "Datei |fffd|berschreiben?", 291, "Sicherheitsabfrage")
Application.ScreenUpdating = False
If aw2 = 6 Then
neu = True
ElseIf aw2 = 7 Then
neu = False
Else
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
Exit Sub
End If
End If
End If
If idx <> 6 Then Sheets(sn).Visible = True
If idx <> 5 Then
If idx = 6 Then
h.[h16] = CheckBox3.Value
h.[i16] = CheckBox5.Value
h.[j16] = CheckBox6.Value
Range("em118:ey226").EntireColumn.Hidden = False
Range(Cells(121 + anz, 1), Cells(221, 1)).EntireRow.Hidden = True
If CheckBox6 Then
link2 = pfad & "quoten_spt" & [i5] & ".htm"
Sheets("tipps").Hyperlinks.Add Anchor:=[en228], Address:=link2
ber = Range("em228:ey228").Address
Call htmlexport(sn, ber, filesavename, neu, True)
neu = False
End If
If CheckBox5 And CheckBox5.Enabled = True Then
ppspt = [fr21].Value
parber = Range("em100:ey" & 101 + ppspt).Address
If Sheets("plan").[f47] = 0 Then parber = Range("em100:er" & 101 + ppspt).Address
Call htmlexport(sn, parber, filesavename, neu, True)
neu = False
End If
ber = Range("em118:ey" & 120 + anz).Address
End If
oldcaption = HTMLForm.Caption
startausgabe:
f = filesavename
If idx = 7 And CheckBox11 Then
aktidx = aktidx + 1
HTMLForm.Caption = "Batchmodus: Erstelle Datei " & aktidx & " von " & anz
HTMLForm.Repaint
Sheets("tipps").[fs20] = aktidx
f = pfad & "stats_msp_" & aktidx & ".htm"
neu = True
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, f, True
neu = False
End If
ElseIf idx = 13 And CheckBox11 Then
namliste = Sheets("tipps").[by11:ca110]
aktidx = aktidx + 1
HTMLForm.Caption = "Batchmodus: Erstelle Datei " & aktidx & " von " & anz
HTMLForm.Repaint
f = pfad & "tausw_msp_" & aktidx & ".htm"
neu = True
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, f, True
neu = False
End If
Set d = Sheets("data")
With Sheets("teamausw")
.[n26] = namliste(aktidx, 1)
nidx = namliste(aktidx, 3)
tippdata = .[f2:h381].Value
tipps = d.Range(d.Cells(2, nidx + 2), d.Cells(1141, nidx + 2)).Value
nr = 0
For j = 1 To 1140 Step 3
nr = nr + 1
tippdata(nr, 1) = tipps(j, 1)
tippdata(nr, 2) = tipps(j + 1, 1)
tippdata(nr, 3) = tipps(j + 2, 1)
Next
tanz = Sheets("plan").[e1]
.Range("f2:h381").Value = tippdata
.Calculate
End With
For i = anztab To 1 Step -1
za = (i - 1) * 25 + 27
ze = za + 21
taw.[m23] = tabsort(i, 1) - 1
s = taw.[m24]
With Sheets("teamausw")
.Calculate
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
If za > 27 Then taw.Range(taw.Cells(za, 13), taw.Cells(ze, 19)).Value = taw.[m27:s48].Value
Next
Sheets("teamausw").Calculate
End If
Call htmlexport(sn, ber, f, neu, True)
If idx = 7 And CheckBox11 And aktidx < anz Then GoTo startausgabe
If idx = 13 And CheckBox11 And aktidx < anz Then GoTo startausgabe
If (idx = 7 Or idx = 13) And CheckBox11 Then
namliste = Sheets("tipps").[by11:ca110]
Sheets("druck").[b5001:b5100] = namliste
Sheets("druck").[b5000] = "Mitspieler"
Sheets("druck").Visible = True
f = pfad & "nav_mspstats.htm"
If idx = 13 Then f = pfad & "nav_tausw.htm"
neu = True
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, f, True
neu = False
End If
For i = 1 To anz
linkn = pfad & "stats_msp_" & i & ".htm"
If idx = 13 Then linkn = pfad & "tausw_msp_" & i & ".htm"
Sheets("druck").Hyperlinks.Add Anchor:=Sheets("druck").Cells(5000 + i, 2), Address:=linkn
Next
berln = Range("b5000:b" & 5000 + anz).Address
Sheets("druck").[b5000:b5100].Font.Name = "Tahoma"
Sheets("druck").[b5000:b5100].Font.Size = 9
Call htmlexport("druck", berln, f, neu, True)
If idx = 7 Then
Sheets("druck").[b5000:b5100].Clear
Sheets("Tipps").[fs20] = oldidx
Else
Sheets("teamausw").Range("f2:h381").Value = oldtippdata
Sheets("teamausw").[n26] = oldname
Sheets("teamausw").Calculate
Sheets("druck").Visible = xlVeryHidden
Sheets("teamausw").[m23] = oldtabidx
s = taw.[m24]
With Sheets("teamausw")
.Calculate
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
End If
HTMLForm.Caption = oldcaption
End If
If idx = 8 Then Sheets(sn).[a1233:a1292].EntireRow.Hidden = False
If idx = 2 And CheckBox10 Then
ber = Range("dc7169:dl7175").Address
Call htmlexport(sn, ber, filesavename, False, True)
End If
If idx = 3 Then
Sheets("auswertung").Visible = True
ber = [bb23].Address
Call htmlexport("auswertung", ber, filesavename, False, True)
Sheets("auswertung").Visible = xlVeryHidden
End If
If idx = 4 Then
h.[h14] = CheckBox3.Value
h.[i14] = CheckBox4.Value
If CheckBox4 Then
ber = Range("a8000:k8013").Address
If CheckBox3 Then ber = Range("a8000:k8012").Address
Call htmlexport(sn, ber, filesavename, False, True)
End If
If CheckBox3 Then
ber = Range("a8014:k8018").Address
Call htmlexport(sn, ber, filesavename, False, True)
End If
End If
If idx = 1 And CheckBox3 Then
h.[h11] = CheckBox3.Value
ber = Range("em559:fa562").Address
Call htmlexport(sn, ber, filesavename, False, True)
ElseIf idx = 1 Then
h.[h11] = CheckBox3.Value
End If
If idx = 6 And CheckBox3 Then
h.[h16] = CheckBox3.Value
ber = Range("em223:ey227").Address
Call htmlexport(sn, ber, filesavename, False, True)
ElseIf idx = 6 Then
h.[h16] = CheckBox3.Value
End If
If idx = 6 Then
If CheckBox6 Then
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
ppspt = [fr21]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[fc1:fp1].EntireColumn.Hidden = False
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = True
sn = "Tipps"
fsn = pfad & "quoten_spt" & [i5] & ".htm"
If Len(filetoopen) > 0 Then
neu = False
fs.CopyFile filetoopen, fsn, True
Else
neu = True
End If
link2 = filesavename
Sheets("tipps").Hyperlinks.Add Anchor:=[fd97], Address:=link2
ber = Range("fc97:fp97").Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
ber = Range("fc100:fp" & 120 + [b6]).Address
Call htmlexport(sn, ber, fsn, neu, True)
ber = Range("fc223:fp225").Address
Call htmlexport(sn, ber, fsn, False, True)
[fc1:fp1].EntireColumn.Hidden = True
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = False
End If
Range("em118:ey220").EntireColumn.Hidden = True
End If
Else
Set d = Sheets("ligatabelle")
b = Range("cn384:cv384").Address
If Label7.Visible = False Then
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, filesavename, True
neu = False
End If
Call htmlexport(sn, ber, filesavename, neu, True)
Call htmlexport(sn, b, filesavename, False, True)
Else
fsn = pfad & datname & "_HR" & endung
fsn2 = pfad & datname & "_RR" & endung
If Len(filetoopen) > 0 Then
fs.CopyFile filetoopen, fsn, True
fs.CopyFile filetoopen, fsn2, True
neu = False
End If
If Label4.Tag = "OK" Then
d.[cn384] = "R|fffd|ckrunde"
Sheets("ligatabelle").Hyperlinks.Add Anchor:=d.[cn384], Address:=fsn2
Call htmlexport(sn, b, fsn, neu, True)
d.[cn384] = "Hinrunde"
Sheets("ligatabelle").Hyperlinks.Add Anchor:=d.[cn384], Address:=fsn
Call htmlexport(sn, b, fsn2, neu, True)
neu = False
End If
d.[cn384:cv385].ClearContents
d.[cm1] = 1
Call htmlexport(sn, ber, fsn, neu, True)
Call htmlexport(sn, b, fsn, False, True)
d.[cm1] = 2
Call htmlexport(sn, ber, fsn2, neu, True)
Call htmlexport(sn, b, fsn2, False, True)
End If
End If
If idx <> 6 Then Sheets(sn).Visible = xlVeryHidden
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("HTML-Datei erfolgreich erstellt", vbOKOnly, "Vorgang beendet")
Set fs = Nothing
Application.CutCopyMode = False
End Sub
Private Sub CommandButton3_Click()
HTMLForm.Hide
End Sub
Private Sub CommandButton4_Click()
Application.CutCopyMode = False
vorlage = Application.GetOpenFilename("Webseiten (*.htm; *.html), *.htm;*.html", , "Zu kopierende HTML-Vorlage angeben")
If vorlage = False Then Exit Sub
If Len(vorlage) = 0 Then Exit Sub
overwite = True
filetoopen = vorlage
Label3.Caption = filetoopen
OptionButton2.Value = True
End Sub
Private Sub Image1_Click()
Label3.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End Sub
Private Sub Image2_Click()
txt = "Beim Erstellen einer neuen HTML-Seite oder beim |fffd|berschreiben einer bestehenden Seite wird der zu ver|fffd|ffentlichende Inhalt lediglich auf einen wei|fffd|en Hintergrund gesetzt." & Chr(13) & Chr(13) & "Beim Verwenden einer Vorlage wird zun|fffd|chst eine Kopie der Vorlage unter dem Namen der Zieldatei gespeichert. Eine bereits bestehende Zieldatei wird dabei |fffd|berschrieben. Die neuen Daten werden dann an die nun mit der Vorlage identischen Zieldatei angeh|fffd|ngt." & " Inhalte und Formate (z.B. Hintergrundfarbe) der Datei bleiben dabei erhalten" & Chr(13) & Chr(13) & "Falls beim Arbeiten OHNE Vorlage die Zieldatei bereits besteht, kann entschieden werden, ob die neuen Inhalte an die bestehende Datei angeh|fffd|ngt werden sollen (Inhalte und Formate bleiben erhalten) oder ob die Datei |fffd|berschrieben werden soll (es entsteht eine neue HTML-Seite mit wei|fffd|em Hintergrund, die nur die aktuellen Daten enth|fffd|lt)."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub OptionButton1_Click()
If OptionButton1 Then OptionButton2.Value = False
End Sub
Private Sub OptionButton2_Click()
If OptionButton2 Then OptionButton1.Value = False
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
excelver = Int(Val(Application.Version))
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Set h = Sheets("html")
oldpath = CurDir
idx = Val(HTMLForm.Tag)
If idx = 13 Then
Frame3.Visible = True
cbta1.Value = h.[h23]
cbta2.Value = h.[i23]
cbta3.Value = h.[j23]
txt = "Batchmodus: Es werden vorgegebene Dateinamen 'tausw_msp_x.htm'  verwendet."
txt = txt & Chr(13) & "Der Aufruf kann |fffd|ber eine Navigationsseite erfolgen, die zus|fffd|tzlich erstellt wird."
Label9.Caption = txt
Else
Frame3.Visible = False
End If
If idx = 4 Then
CheckBox4.Value = h.[i14]
CheckBox3.Value = h.[h14]
CheckBox4.Visible = True
Else
CheckBox4.Visible = False
End If
If idx = 1 Or idx = 4 Or idx = 6 Then
CheckBox3.Visible = True
CheckBox3.Value = h.[h11]
If idx = 6 Then
CheckBox5.Visible = True
CheckBox5.Enabled = True
End If
If idx = 6 And Sheets("plan").[f47] <> 0 Then
CheckBox8.Visible = True
CheckBox6.Visible = True
Else
CheckBox8.Value = False
CheckBox6.Value = False
End If
Else
CheckBox3.Visible = False
CheckBox5.Visible = False
CheckBox8.Visible = False
CheckBox6.Value = False
End If
If idx = 6 Then
CheckBox3.Value = h.[h16]
CheckBox5.Value = h.[i16]
CheckBox6.Value = h.[j16]
CheckBox8.Value = h.[k16]
End If
If idx = 7 Then
CheckBox11.Visible = True
CheckBox3.Visible = True
CheckBox3.Value = h.[h12]
End If
If idx = 13 Then
CheckBox11.Visible = True
End If
If idx = 2 Then
CheckBox10.Visible = True
CheckBox10.Value = h.[h17]
End If
If idx = 5 Then
OptionButton2.Value = True
OptionButton1.Enabled = False
ComboBox1.Enabled = False
CheckBox2.Enabled = False
If Label7.Tag = "OK" Then Label7.Visible = True
End If
Set h = Sheets("html")
On Error Resume Next
einst = h.Range(h.Cells(10 + idx, 2), h.Cells(10 + idx, 7))
ComboBox1.ListIndex = einst(1, 6)
If Left(Application.Version, 1) = "8" Then
OptionButton1.Value = True
Frame2.Enabled = False
Frame2.Caption = "HTML-Erstellung erfordert Excel-Versionen h|fffd|her als Excel 97"
CheckBox2.Value = einst(1, 5)
Else
CheckBox2.Value = einst(1, 5)
If Not einst(1, 4) Or Frame2.Enabled = False Then
OptionButton1.Value = True
Else
OptionButton2.Value = True
End If
newpath = einst(1, 3)
If Len(newpath) > 0 Then
If Dir(newpath & "*.*") <> "" Then
ChDir newpath
If Len(einst(1, 2)) > 0 Then
fileinit = einst(1, 2)
Else
fileinit = CommandButton2.Tag
End If
Label2.Caption = ""
filesavename = ""
End If
Else
fileinit = CommandButton2.Tag
End If
If Len(einst(1, 1)) <> 0 Then
If Dir(einst(1, 1)) <> "" Then
Label3.Caption = einst(1, 1)
filetoopen = einst(1, 1)
Else
Label3.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End If
Else
Label3.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End If
End If
working = False
startwert = True
ComboBox1.ListIndex = einst(1, 6)
Sheets("druck").[en323:ew326].Value = Sheets("druck").[en559:ew562].Value
Application.CutCopyMode = False
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Modul1"
#If VBA7 Then
Private Declare PtrSafe Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
#Else
Private Declare Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
#End If
Private Const SM_CXSCREEN = 0
Private Const SM_CYSCREEN = 1
Public aktuelleseite As String, working As Boolean, startwert As Boolean
Sub auto_open()
working = True
startwert = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
If Application.ReferenceStyle = xlR1C1 Then Application.ReferenceStyle = xlA1
dn = 1
Call calczoom(dn)
With Sheets("einstellungen")
If .[b1].EntireColumn.Hidden = True Then
.ScrollArea = "u1:bm43"
Else
.ScrollArea = "a1"
End If
End With
Sheets("tipps").ScrollArea = "d1:ap111"
Application.Calculation = xlCalculationAutomatic
If Sheets("Einstellungen").[n2] = True Then
Application.DisplayFullScreen = True
Application.DisplayFormulaBar = False
Application.DisplayStatusBar = False
End If
If Len(Sheets("data").[b7170]) = 0 Then
Sheets("info").Visible = True
Sheets("info").Activate
Sheets("info").[c2].Select
If Sheets("Einstellungen").[n1] = True Then ActiveWindow.Zoom = Int(100 * dn)
End If
Application.CommandBars("Reviewing").Enabled = False
Application.ScreenUpdating = True
If Int(Val(Application.Version)) > 11 And UCase(Right(ThisWorkbook.Name, 3)) = "XLS" And Sheets("html").[a6] = True Then
aw = MsgBox("Die Datei liegt in einem |fffd|lteren Excelformat vor und wurde im 'Kompatibilit|fffd|tsmodus' ge|fffd|ffnet." & Chr(13) & "Es wird empfohlen, die Mappe umgehend, also ohne zuvor weitere Aktionen durchzuf|fffd|hren," & Chr(13) & "|fffd|ber  'SPEICHERN UNTER ...' als bin|fffd|re Datei ( '*.XLSB' ) in einem Format f|fffd|r Excel 2007 zu speichern." & Chr(13) & Chr(13) & "Schlie|fffd|en sie die Datei nach dem Speichervorgang und |fffd|ffnen sie" & " anschlie|fffd|end die neu erstellte XLSB-Datei!" & Chr(13) & Chr(13) & "Soll die Arbeitsmappe nun automatisch in einem neuen Format gespeichert werden?", vbYesNo, "Hinweis f|fffd|r Nutzer von Excel 2007")
If aw <> 6 Then
aw = MsgBox("Soll dieser Warnhinweis zuk|fffd|nftig erneut angezeigt werden?" & Chr(13) & "(Die Datei muss anschlie|fffd|end gespeichert werden, damit diese Auswahl erhalten bleibt)", vbYesNo, "Die Warnung wurde ignoriert ...")
If aw <> 6 Then Sheets("html").[a6] = False
GoTo ende
End If
If aw = 6 Then
fn = ThisWorkbook.Path & "\" & Left(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 3) & "xlsb"
dn = Application.GetSaveAsFilename(initialfilename:=fn, fileFilter:="Excel Bin|fffd|rarbeitsmappe (*.xlsb), *.xlsb")
If dn <> False Then
On Error GoTo ende
ActiveWorkbook.SaveAs Filename:=dn, FileFormat:=xlExcel12, CreateBackup:=False
aw = MsgBox("Die Datei, die im Kompatibilit|fffd|tsmodus ge|fffd|ffnet wurde, sollte nun geschlossen werden." & Chr(13) & "|fffd|ffnen sie anschlie|fffd|end die gerade erstellte Datei: " & Chr(13) & Chr(13) & dn & Chr(13) & Chr(13) & "Datei im alten Format schlie|fffd|en?", vbYesNo, "Datei wurde neu gespeichert")
If aw = 6 Then
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
ThisWorkbook.Close (False)
End If
End If
End If
End If
ende:
aktuelleseite = ActiveSheet.Name
working = False
startwert = True
Application.ScreenUpdating = True
infowin.Show
Unload infowin

End Sub
Function BildschirmaufloesungX()
BildschirmaufloesungX = GetSystemMetrics(SM_CXSCREEN)
End Function
Function BildschirmaufloesungY()
BildschirmaufloesungY = GetSystemMetrics(SM_CYSCREEN)
End Function
Sub datoeffnen(dateien)
Dim nCnt As Integer
Dim vrtSelectedItem As Variant
On Error GoTo fehler
If Left(Application.Version, 1) = "8" Or Left(Application.Version, 1) = "9" Then
dateien = Application.GetOpenFilename("Tippdateien (*.xl*),*.xl*", , "Dateien zum Import angeben", "Ausw|fffd|hlen", True)
Else
Dim dat() As String
Set fd = Application.FileDialog(msoFileDialogFilePicker)
With fd
.Filters.Add "Tippdateien", "*.xl*", 1
.Title = "Dateien zum Import angeben"
.ButtonName = "Ausw|fffd|hlen"
.AllowMultiSelect = True
If .Show = -1 Then
anzdat = .SelectedItems.Count
If anzdat > 0 Then
ReDim dat(anzdat)
nCnt = 0
For Each vrtSelectedItem In .SelectedItems
nCnt = nCnt + 1
dat(nCnt) = vrtSelectedItem
Next vrtSelectedItem
dateien = dat
End If
End If
End With
End If
fehler:
End Sub
Sub calczoom(z)
dx = BildschirmaufloesungX / 1024
If dx > 2 Then dx = 2
If dx < 0.25 Then dx = 1
Sheets("data").[b7168] = dx
dy = BildschirmaufloesungY / 768
If dy > 2 Then dy = 2
If dy < 0.25 Then dy = 1
Sheets("data").[b7169] = dy
z = dx
If dy < dx Then z = dy
End Sub
Sub fuellen()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("Zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Calculate
anz = Sheets("tipps").[b6]
msp = anz
If anz = 0 Then msp = 1
.Range(.Cells(1, 4), .Cells(1, 2 * msp + 4)).EntireColumn.Hidden = False
.Range(.Cells(1, 2 * msp + 5), .Cells(1, 208)).EntireColumn.Hidden = True
zuord = .[e4:gv4].Value
pkt = .[d111:cz151].Value
dat = .[e7:gv47].Value
tipps = .[d67:cz107].Value
For i = 1 To 100
For j = 1 To 41
idx = zuord(1, i * 2)
If idx < 101 Then
dat(j, (i - 1) * 2 + 1) = tipps(j, idx)
dat(j, i * 2) = pkt(j, idx)
End If
Next
Next
.[e7:gv47].Value = dat
.Range(.Cells(7, anz * 2 + 5), .Cells(47, 205)).ClearContents
Sheets("zusatztipps").ComboBox1.ListIndex = -1
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Sheets(aktuelleseite).Activate
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Sub showhtml(seite, bereich, index, fn)
oldpath = CurDir
HTMLForm.OptionButton2.Tag = seite
HTMLForm.CommandButton1.Tag = bereich
HTMLForm.CommandButton2.Tag = fn
HTMLForm.Tag = index
HTMLForm.ComboBox1.RowSource = "html!a1011:a1110"
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
HTMLForm.Show
working = working_shk
Unload HTMLForm
ChDir oldpath
End Sub
Sub formatieren()
With Sheets("data")
.[ba7067:ba7166].NumberFormat = "[=0]"""";??0.00"
.[bu7067:bu7166].NumberFormat = "[=0]"""";??0.00"
.[dl7067:dl7166].NumberFormat = "[=0]"""";??0.00"
.[ea7067:ea7166].NumberFormat = "[=0]"""";??0.00"
End With
End Sub
Sub katber()
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Set d = Sheets("data")
d.Calculate
best = d.[b2318:cx2395]
anzhr = d.[c3146:cx3159]
anzrr = d.[c3162:cx3175]
anzges = d.[c3268:cx3281]
dat = d.[c1364:cx1933]
anzmsp = Sheets("tipps").[b6].Value
rr = Sheets("plan").[g2] / 2
For s = 1 To anzmsp
For i = 1 To 78
If Len(best(i, 1)) > 0 Then
If best(i, s + 1) = 1 Then
spt = best(i, 1)
z = (spt - 1) * 15
For j = 1 To 14
If i < 20 Then
anzhr(j, s) = anzhr(j, s) + dat(z + j, s)
ElseIf i < 40 Then
anzrr(j, s) = anzrr(j, s) + dat(z + j, s)
Else
anzges(j, s) = anzges(j, s) + dat(z + j, s)
End If
Next
End If
End If
Next
Next
Application.CutCopyMode = False
d.[c1146:cx1159] = anzhr
d.[c1162:cx1175] = anzrr
d.[c1268:cx1281] = anzges
Sheets(aktuelleseite).Activate
End Sub
Sub tageseinsatz()
Application.ScreenUpdating = False
With Sheets("einstellungen")
.[cd2:dq2].AutoFill Destination:=.[cd2:dq102]
.Calculate
Application.CutCopyMode = False
.[cd3:dq102].Value = .[cd3:dq102].Value
End With
Sheets(aktuelleseite).Activate
Application.ScreenUpdating = True
End Sub
Sub setlicence()
If ActiveWorkbook.Path = "E:\Eigene Dateien\EXCEL\Tippdatei_Buli" Or ActiveWorkbook.Path = "E:\web_0506\tippspiel" Then
Sheets("einstellungen").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
aw = InputBox("Lizenznehmer:", "Lizenznehmer angeben", "Vollversion")
Sheets("einstellungen").[h1] = "Lizenz: " & aw
Sheets("einstellungen").Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End If
End Sub
Sub htmlexport(blatt, ber, ziel, neu, noxml)
n = 0
ddo = ActiveWorkbook.DisplayDrawingObjects
If Sheets(aktuelleseite).Name = "Tipps" Then
ActiveWorkbook.DisplayDrawingObjects = xlHide
noxml = False
End If
For i = Len(ziel) To 1 Step -1
If Mid(ziel, i, 1) = "\" Then n = i
If n > 0 Then Exit For
Next
If n = 0 Then n = Len(ziel)
pfad = Left(ziel, n)
If noxml Then
dummy = "lvxxldummydat" & Format(Now(), "hh-mm")
dn = pfad & dummy & ".htm"
If Not neu And Dir(ziel) <> "" Then FileCopy ziel, dn
Else
dn = ziel
End If
ActiveWorkbook.PublishObjects.Add(SourceType:=xlSourceRange, Filename:=dn, Sheet:=blatt, Source:=ber).Publish neu
If noxml Then
FileCopy dn, ziel
Kill dn
dirname = Dir(pfad & dummy & "*", vbDirectory)
Do While dirname <> ""
If dirname <> "." And dirname <> ".." Then
If (GetAttr(pfad & dirname) And vbDirectory) = vbDirectory Then
Kill (pfad & dirname & "\*.*")
End If
RmDir pfad & dirname
End If
dirname = Dir
Loop
End If
If Sheets(aktuelleseite).Name = "Tipps" Then ActiveWorkbook.DisplayDrawingObjects = ddo
End Sub
Sub ausdruck(blatt, bereich, pre, kopien)
scrup = Application.ScreenUpdating
If pre And Int(Val(Application.Version)) > 11 And Not scrup Then Application.ScreenUpdating = True
Sheets(blatt).Range(bereich).PrintOut preview:=pre, copies:=kopien
Application.ScreenUpdating = scrup
End Sub
Attribute VB_Name = "Modul2"
Sub newseason2()
[a1].Select
aw = MsgBox("Alle Tipps und Ergebnisse f|fffd|r die 1. Halbserie werden unwiderruflich gel|fffd|scht!" & Chr(13) & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "Saisondaten l|fffd|schen")
If aw <> 6 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
With Sheets("tipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
einz = .[de11:df110].Value
.[cc11:eh11].AutoFill Destination:=.[cc11:eh110]
.[de11:df110].Value = einz
End With
Sheets(aktuelleseite).Activate
anz = Sheets("tipps").[b6]
With Sheets("data")
If anz > 0 Then .Range(.Cells(2, 3), .Cells(1175, 2 + anz)).ClearContents
If anz > 0 Then .Range(.Cells(1364, 3), .Cells(2315, 2 + anz)).ClearContents
If anz > 0 Then .Range(.Cells(1268, 3), .Cells(1281, 2 + anz)).ClearContents
If anz > 0 Then .Range("cy1936:da2315").ClearContents
End With
With Sheets("ligatabelle")
.[am69:at132].Value = .[at2:am65].Value
.[c2:l381].ClearContents
.[n2:ag21].ClearContents
.[n47:ag66].ClearContents
.[aq2:aq21].ClearContents
.[be2:be21].ClearContents
.[be24:be43].ClearContents
End With
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If anz > 0 Then .Range(.Cells(67, 4), .Cells(109, 3 + anz)).ClearContents
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Set t = Sheets("tipps")
Set d = Sheets("data")
ppspt = Sheets("plan").[h2]
spt = t.[i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
t.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
t.[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
t.[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
t.Calculate
t.[as11:bx11].EntireColumn.Hidden = False
t.Range("AS11:BX110").Sort key1:=t.Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
t.[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
t.Range(t.Cells(11, (i - 1) * 3 + 10), t.Cells(110, (i - 1) * 3 + 11)).Value = t.Range(t.Cells(11, (i - 1) * 3 + 45), t.Cells(110, (i - 1) * 3 + 46)).Value
Next
t.[aq11:aq110].Value = t.[bw11:bw110].Value
With Sheets("tipps")
For i = 1 To 10
.Range(.Cells(8, i * 3 + 7), .Cells(8, i * 3 + 8)).ClearContents
Next
.Calculate
einz = .[de11:df110].Value
.[cc12:eh110].Value = .[cc12:eh110].Value
.[de11:df110].Value = einz
.[j1:am1].EntireColumn.Hidden = False
If ppspt < 10 Then .Range(.Cells(1, ppspt * 3 + 10), .Cells(1, 39)).EntireColumn.Hidden = True
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Call fuellen
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
aw = MsgBox("Sollen die Angaben |fffd|ber die Einzahlungen des Tippspieleinsatzes gel|fffd|scht werden?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[de11:df110].ClearContents
Sheets("tipps").[de7:df7].ClearContents
Sheets("tipps").[de6:df6].ClearContents
[cd105:do204].ClearContents
End If
Call tageseinsatz
aw = MsgBox("Alle Daten wurden erfolgreich gel|fffd|scht!" & Chr(13) & "|fffd|ber die Schaltfl|fffd|che" & " 'Ligaeinstellungen bearbeiten' k|fffd|nnen Sie nun den neuen Spielplan eingeben", vbOKOnly, "Vorgang beendet ...")
Application.ScreenUpdating = False
With Sheets("tipps")
.Range("E9").Comment.Visible = False
.Range("E9").Comment.Text Text:=.[e4].Value
.Range("f10").Comment.Visible = False
.Range("f10").Comment.Text Text:=.[e5].Value
.Range("h10").Comment.Visible = False
.Range("h10").Comment.Text Text:=.[e6].Value
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Sheets("zusatztipps").Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
Application.ScreenUpdating = True
[a1].Select
End Sub
Attribute VB_Name = "Modul3"
Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
'

'
    Sheets(aktuelleseite).Shapes.Range(Array("but_save")).Select
    Application.DisplayFormulaBar = True
    Selection.Formula = "=$E$3"
End Sub
Attribute VB_Name = "Rangliste"
Attribute VB_Base = "0{B168019B-374C-4F53-A3A0-D17FA15F4673}{8276CFF2-135D-4943-A760-FE8E5696CA67}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, atwork As Integer, hrang, hvgl, hfull, best1, best2
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
wshk = working
sshk = startwert
atwork = 1
On Error Resume Next
ListBox1.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("zusatztipps").[b209] = ComboBox1.ListIndex + 1
anzhs = Sheets("plan").[g2] / 2
anz = Sheets("plan").[g2]
ComboBox10.ListIndex = -1
If ComboBox1.ListIndex = 2 Then
ComboBox10.RowSource = "plan!d97:d" & 96 + anz
Else
ComboBox10.RowSource = "plan!d97:d" & 96 + anzhs
End If
Sheets("plan").[f32:f34] = best1
ComboBox10.ListIndex = best1(ComboBox1.ListIndex + 1, 1) - 1
Call katber
Sheets("data").Calculate
Call sortranking(1, Sheets("data").[bc7068])
ListBox1.SetFocus
End Sub
Private Sub ComboBox10_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
wshk = working
sshk = startwert
atwork = 1
ListBox1.SetFocus
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
best1(ComboBox1.ListIndex + 1, 1) = ComboBox10.ListIndex + 1
Sheets("plan").[f32:f34].Value = best1
Call katber
Sheets("data").Calculate
Call sortranking(1, Sheets("data").[bc7068])
ListBox1.SetFocus
End Sub
Private Sub ComboBox11_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
wshk = working
sshk = startwert
atwork = 1
ListBox2.SetFocus
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
best2(ComboBox2.ListIndex + 1, 1) = ComboBox11.ListIndex + 1
Sheets("plan").[f32:f34].Value = best2
Call katber
Sheets("data").Calculate
Call sortranking(2, Sheets("data").[bc7070])
ListBox2.SetFocus
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
wshk = working
sshk = startwert
atwork = 1
ListBox2.SetFocus
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("zusatztipps").[b218] = ComboBox2.ListIndex + 1
anzhs = Sheets("plan").[g2] / 2
anz = Sheets("plan").[g2]
ComboBox11.ListIndex = -1
If ComboBox2.ListIndex = 2 Then
ComboBox11.RowSource = "plan!d97:d" & 96 + anz
Else
ComboBox11.RowSource = "plan!d97:d" & 96 + anzhs
End If
ComboBox11.ListIndex = best2(ComboBox2.ListIndex + 1, 1) - 1
Sheets("plan").[f32:f34] = best2
Call katber
Sheets("data").Calculate
Call sortranking(2, Sheets("data").[bc7070])
ListBox2.SetFocus
End Sub
Private Sub ComboBox4_Change()
If working Or Not startwert Then Exit Sub
If atwork = 1 Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
wshk = working
sshk = startwert
ListBox4.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
atwork = 1
oldval = Controls("listbox" & 4).Value
Controls("listbox" & 4).ListIndex = -1
Controls("listbox" & 4).Visible = False
Controls("listbox" & 5).Visible = False
On Error Resume Next
Sheets("data").[da7065] = ComboBox4.ListIndex + 1
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Controls("listbox" & 4).Value = oldval
Controls("listbox" & 4).Visible = True
If ToggleButton2 Then Controls("listbox" & 5).Visible = True
Application.CutCopyMode = False
Application.EnableEvents = True
Application.ScreenUpdating = True
ListBox4.SetFocus
atwork = 0
End Sub
Private Sub ComboBox5_Change()
If working Or Not startwert Then Exit Sub
If atwork = 1 Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
ListBox5.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
atwork = 1
oldval = Controls("listbox" & 5).Value
Controls("listbox" & 5).ListIndex = -1
Controls("listbox" & 4).Visible = False
Controls("listbox" & 5).Visible = False
On Error Resume Next
Sheets("data").[dp7065] = ComboBox5.ListIndex + 1
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Controls("listbox" & 5).Value = oldval
Controls("listbox" & 4).Visible = True
If ToggleButton2 Then Controls("listbox" & 5).Visible = True
Application.CutCopyMode = False
Application.EnableEvents = True
Application.ScreenUpdating = True
ListBox5.SetFocus
atwork = 0
End Sub
Private Sub ComboBox6_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If ComboBox6.ListIndex = -1 Then Exit Sub
ListBox1.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
atwork = 1
Sheets("zusatztipps").[c209] = ComboBox6.ListIndex
Sheets("plan").[f32:f34].Value = best1
Call katber
Sheets("data").Calculate
Call sortranking(1, Sheets("data").[bc7068])
ListBox1.SetFocus
End Sub
Private Sub ComboBox7_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If ComboBox7.ListIndex = -1 Then Exit Sub
atwork = 1
ListBox2.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("zusatztipps").[c218] = ComboBox7.ListIndex
Sheets("plan").[f32:f34].Value = best2
Call katber
Sheets("data").Calculate
Call sortranking(2, Sheets("data").[bc7070])
ListBox2.SetFocus
End Sub
Private Sub ComboBox8_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If ComboBox8.ListIndex = -1 Then Exit Sub
atwork = 1
ListBox4.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
oldval = Controls("listbox" & 4).Value
Controls("listbox" & 4).ListIndex = -1
Controls("listbox" & 4).Visible = False
Controls("listbox" & 5).Visible = False
Sheets("data").[a7173] = ComboBox8.ListIndex
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Controls("listbox" & 4).Value = oldval
Controls("listbox" & 4).Visible = True
If ToggleButton2 Then Controls("listbox" & 5).Visible = True
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.SetFocus
atwork = 0
End Sub
Private Sub ComboBox9_Change()
If working Or Not startwert Then Exit Sub
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If ComboBox9.ListIndex = -1 Then Exit Sub
atwork = 1
ListBox5.SetFocus
Application.ScreenUpdating = False
Application.EnableEvents = False
oldval = Controls("listbox" & 5).Value
Controls("listbox" & 5).ListIndex = -1
Controls("listbox" & 4).Visible = False
Controls("listbox" & 5).Visible = False
Sheets("data").[a7177] = ComboBox9.ListIndex
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Controls("listbox" & 5).Value = oldval
Controls("listbox" & 4).Visible = True
If ToggleButton2 Then Controls("listbox" & 5).Visible = True
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox5.SetFocus
atwork = 0
End Sub
Private Sub CommandButton1_Click()
anz = [b6]
Sheets("plan").[f32:f34].Value = best1
Sheets("data").Calculate
Sheets("druck").[em457:fa556].Value = Sheets("data").[am6067:ba6166].Value
Sheets("druck").[em454:fa456].Value = Sheets("data").[am7064:ba7066].Value
ber = Range("em454:fa" & anz + 456).Address
k = Sheets("data").Cells(7066 + ComboBox1.ListIndex, 138).Value
Rangliste.Hide
Call showhtml("druck", ber, 1, "Rangliste" & k)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.Calculation = xlCalculationManual
End Sub
Private Sub CommandButton2_Click()
anz = [b6]
If ToggleButton1.Value = True Then
Sheets("plan").[f32:f34].Value = best2
Sheets("data").Calculate
Sheets("druck").[em457:fa556].Value = Sheets("data").[bg6067:bu6166].Value
Sheets("druck").[em454:fa456].Value = Sheets("data").[bg7064:bu7066].Value
ber = Range("em454:fa" & anz + 456).Address
k = Sheets("data").Cells(7066 + ComboBox2.ListIndex, 138).Value
Else
Sheets("plan").[f32:f34].Value = best1
Sheets("data").Calculate
Sheets("druck").[em457:fa556].Value = Sheets("data").[am6067:ba6166].Value
Sheets("druck").[em454:fa456].Value = Sheets("data").[am7064:ba7066].Value
ber = Range("em454:fa" & anz + 456).Address
k = Sheets("data").Cells(7066 + ComboBox1.ListIndex, 138).Value
End If
Rangliste.Hide
Call showhtml("druck", ber, 1, "Rangliste" & k)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.Calculation = xlCalculationManual
End Sub
Private Sub CommandButton3_Click()
anz = [b6]
ber = Range("dc7064:dl" & anz + 7066).Address
k = Sheets("data").Cells(7066 + ComboBox4.ListIndex, 138).Value
Rangliste.Hide
Call showhtml("data", ber, 2, "Zusatztipps" & k)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.Calculation = xlCalculationManual
Sheets("data").[a7067:a7167].EntireRow.Hidden = False
End Sub
Private Sub CommandButton4_Click()
anz = [b6]
If ToggleButton2.Value = False Then
ber = Range("dc7064:dl" & anz + 7066).Address
k = Sheets("data").Cells(7066 + ComboBox4.ListIndex, 138).Value
Else
ber = Range("dr7064:ea" & anz + 7066).Address
k = Sheets("data").Cells(7066 + ComboBox5.ListIndex, 138).Value
End If
Rangliste.Hide
Call showhtml("data", ber, 2, "Zusatztipps" & k)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.Calculation = xlCalculationManual
Sheets("data").[a7067:a7167].EntireRow.Hidden = False
End Sub
Private Sub Image1_Click()
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
Set zt = Sheets("zusatztipps")
nr = zt.[b209]
txt = "Zu den Ergebnistipp-Punkten " & zt.Cells(196 + nr, 9) & " werden die " & Chr(13) & "erspielten Punkte aus den Zusatztipps:" & Chr(13)
For i = 1 To 6
If Len(zt.Cells(171, i + 8)) = 0 Then GoTo weiter
If zt.Cells(178 + nr, 8 + i) = 1 Then
anz = anz + 1
txt = txt & Chr(13) & zt.Cells(171, 8 + i).Value
auswtab = zt.Cells(175, 8 + i).Value
fertig = zt.Cells(280 + auswtab, 3)
If fertig = 1 Then
txt = txt & " (ausgewertet)"
Else
txt = txt & " (noch nicht ausgewertet)"
End If
End If
weiter:
Next
If anz = 0 Then
txt = "Zu den Ergebnistipp-Punkten " & zt.Cells(196 + nr, 9) & " werden keine Zusatztipps addiert!"
Else
txt = txt & Chr(13) & Chr(13) & " addiert."
End If
aw = MsgBox(txt, vbOKOnly, "Information |fffd|ber Zusatztipps")
End Sub
Private Sub Image2_Click()
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
Set zt = Sheets("zusatztipps")
nr = zt.[b218]
txt = "Zu den Ergebnistipp-Punkten " & zt.Cells(196 + nr, 9) & " werden die " & Chr(13) & "erspielten Punkte aus den Zusatztipps:" & Chr(13)
For i = 1 To 6
If Len(zt.Cells(171, i + 8)) = 0 Then GoTo weiter
If zt.Cells(178 + nr, 8 + i) = 1 Then
anz = anz + 1
txt = txt & Chr(13) & zt.Cells(171, 8 + i).Value
auswtab = zt.Cells(175, 8 + i).Value
fertig = zt.Cells(280 + auswtab, 3)
If fertig = 1 Then
txt = txt & " (ausgewertet)"
Else
txt = txt & " (noch nicht ausgewertet)"
End If
End If
weiter:
Next
If anz = 0 Then
txt = "Zu den Ergebnistipp-Punkten " & zt.Cells(196 + nr, 9) & " werden keine Zusatztipps addiert!"
Else
txt = txt & Chr(13) & Chr(13) & " addiert."
End If
aw = MsgBox(txt, vbOKOnly, "Information |fffd|ber Zusatztipps")
End Sub
Private Sub Label197_Click()
With Sheets("zusatztipps")
If .[h168] = 0 Then Exit Sub
If .[hg188] > Sheets("tipps").[b6] Then .[hg188] = Sheets("tipps").[b6]
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
For i = 1 To 6
If Len(.Cells(169, i + 8)) > 0 Then
nr = nr + 1
z = (nr - 1) * 10 + 234
.Cells(z, 210) = i
.Cells(z, 211) = .Cells((i - 1) * 7 + 190, 211).Value
.Cells(z + 1, 210) = .Cells((i - 1) * 7 + 191, 211).Value
z = z + 3
anzt = .Cells(172, 8 + i).Value
.Range(.Cells(z, 210), .Cells(z + 4, 213)).ClearContents
.Range(.Cells(z, 210), .Cells(z - 1 + anzt, 211)).Value = .Range(.Cells((i - 1) * 7 + 192, 210), .Cells((i - 1) * 7 + 191 + anzt, 211)).Value
.Range(.Cells(z, 212), .Cells(z - 1 + anzt, 213)).Value = .Range(.Cells((i - 1) * 7 + 192, 215), .Cells((i - 1) * 7 + 191 + anzt, 216)).Value
zuserg.Controls("ueb_" & nr & "_1").Caption = .Cells((i - 1) * 7 + 190, 211).Value
zuserg.Controls("ueb_" & nr & "_2").Caption = .Cells((i - 1) * 7 + 191, 211).Value
zuserg.Controls("zt" & nr).Caption = "#" & i
zuserg.Controls("listbox" & nr).RowSource = "Zusatztipps!HB" & z & ":he" & z + 5
End If
Next
If Sheets("tipps").[b6].Value = 0 Then
zuserg.ComboBox1.Enabled = False
Else
zuserg.ComboBox1.RowSource = "zusatztipps!b67:b" & 66 + Sheets("tipps").[b6].Value
zuserg.ComboBox1.ListIndex = .[hg188] - 1
End If
.Calculate
End With
Application.ScreenUpdating = True
Application.EnableEvents = True
Rangliste.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
zuserg.Show
Unload zuserg
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.CutCopyMode = False
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub ToggleButton1_Click()
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
On Error Resume Next
ListBox1.SetFocus
If ToggleButton1.Value = True Then
CommandButton1.Visible = True
ListBox1.Height = hvgl
ListBox2.Height = hvgl
Label51.Visible = True
ListBox2.Visible = True
ComboBox7.Visible = True
Frame2.Visible = True
Else
ListBox2.Visible = False
ListBox1.Height = 335
ComboBox7.Visible = False
CommandButton1.Visible = False
Label51.Visible = False
Frame2.Visible = False
End If
ListBox1.SetFocus
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub ToggleButton2_Click()
If Rangliste.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
On Error Resume Next
If ToggleButton2.Value = True Then
ListBox4.Height = hvgl
ListBox5.Height = hvgl
CommandButton3.Visible = True
ListBox5.Visible = True
Else
CommandButton3.Visible = False
ListBox5.Visible = False
ListBox4.Height = 335
End If
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub ueb1_1_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 1)
End Sub
Private Sub ueb1_2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 2)
End Sub
Private Sub ueb1_3_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 3)
End Sub
Private Sub ueb1_4_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 4)
End Sub
Private Sub ueb1_5_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 5)
End Sub
Private Sub ueb1_6_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 6)
End Sub
Private Sub ueb1_7_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 7)
End Sub
Private Sub ueb1_8_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 8)
End Sub
Private Sub ueb1_9_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 9)
End Sub
Private Sub ueb1_10_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 10)
End Sub
Private Sub ueb1_11_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 11)
End Sub
Private Sub ueb1_12_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 12)
End Sub
Private Sub ueb1_13_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 13)
End Sub
Private Sub ueb1_14_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 14)
End Sub
Private Sub ueb1_15_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(1, 15)
End Sub
Private Sub ueb2_1_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 1)
End Sub
Private Sub ueb2_2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 2)
End Sub
Private Sub ueb2_3_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 3)
End Sub
Private Sub ueb2_4_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 4)
End Sub
Private Sub ueb2_5_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 5)
End Sub
Private Sub ueb2_6_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 6)
End Sub
Private Sub ueb2_7_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 7)
End Sub
Private Sub ueb2_8_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 8)
End Sub
Private Sub ueb2_9_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 9)
End Sub
Private Sub ueb2_10_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 10)
End Sub
Private Sub ueb2_11_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 11)
End Sub
Private Sub ueb2_12_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 12)
End Sub
Private Sub ueb2_13_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 13)
End Sub
Private Sub ueb2_14_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 14)
End Sub
Private Sub ueb2_15_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Call sortranking(2, 15)
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
hvgl = ListBox1.Height
atwork = 1
anzhs = Sheets("plan").[g2] / 2
anz = Sheets("plan").[g2]
best1 = Sheets("plan").[f32:f34].Value
best2 = best1
If ComboBox1.ListIndex = 2 Then
ComboBox10.RowSource = "plan!d97:d" & 96 + anz
Else
ComboBox10.RowSource = "plan!d97:d" & 96 + anzhs
End If
If ComboBox2.ListIndex = 2 Then
ComboBox11.RowSource = "plan!d97:d" & 96 + anz
Else
ComboBox11.RowSource = "plan!d97:d" & 96 + anzhs
End If
t = ComboBox1.ListIndex
ComboBox10.ListIndex = Sheets("plan").Cells(32 + t, 6) - 1
t = ComboBox2.ListIndex
ComboBox11.ListIndex = Sheets("plan").Cells(32 + t, 6) - 1
atwork = 0
working = False
startwert = True

Application.ScreenUpdating = True
End Sub
Sub sortranking(tabnr, idx)
If Rangliste.Visible = False Then Exit Sub
atwork = 1
Set d = Sheets("data")
d.Calculate
If tabnr = 1 Then
d.[aj6067:bb6166].Value = d.[aj7067:bb7166].Value
Else
d.[bd6067:bv6166].Value = d.[bd7067:bv7166].Value
End If
oldval = Controls("listbox" & tabnr).Value
Controls("listbox" & tabnr).ListIndex = -1
ListBox1.Visible = False
ListBox2.Visible = False
If tabnr = 1 Then
ber = d.Range("aj6067:bb" & 6066 + [b6]).Address
v = 35
olds = d.[bc7068]
d.[bb6067:bb6166].Value = d.[an7067:an7166].Value
Else
ber = d.Range("bd6067:bv" & 6066 + [b6]).Address
v = 55
olds = d.[bc7070]
d.[bv6067:bv6166].Value = d.[bh7067:bh7166].Value
End If
s = idx + 2
If idx > 1 Then s = s + 1
If idx = 3 Then s = 3
If idx = 2 Then s = 19
Controls("ueb" & tabnr & "_" & olds).ForeColor = &H0&
Controls("ueb" & tabnr & "_" & idx).ForeColor = &HFF&
If idx < 4 Then
If s = 3 Then
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlAscending, Key2:=d.Cells(6067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
ElseIf s = 19 Then
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlAscending, Key2:=d.Cells(6067, v + 3), Order2:=xlAscending, header:=xlNo, MatchCase:=False
Else
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlAscending, Key2:=d.Cells(6067, v + 3), Order2:=xlAscending, Key3:=d.Cells(6067, v + 19), Order3:=xlAscending, header:=xlNo, MatchCase:=False
End If
Else
If s = 3 Then
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlDescending, Key2:=d.Cells(6067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
ElseIf s = 19 Then
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlDescending, Key2:=d.Cells(6067, v + 3), Order2:=xlAscending, header:=xlNo, MatchCase:=False
Else
d.Range(ber).Sort key1:=d.Cells(6067, v + s), order1:=xlDescending, Key2:=d.Cells(6067, v + 3), Order2:=xlAscending, Key3:=d.Cells(6067, v + 19), Order3:=xlAscending, header:=xlNo, MatchCase:=False
End If
End If
d.Cells(7066 + 2 * tabnr, 55) = idx
ende:
If tabnr = 1 Then
d.[am7067:am7166].Copy Destination:=d.[am6067]
Else
d.[bg7067:bg7166].Copy Destination:=d.[bg6067]
End If
Sheets("data").Calculate
If tabnr = 1 Then
d.[am6067:am6166].Value = d.[am6067:am6166].Value
Else
d.[bg6067:bg6166].Value = d.[bg6067:bg6166].Value
End If
anzmsp = [b6] + 1
ListBox1.Visible = True
If ToggleButton1 Then ListBox2.Visible = True
Controls("listbox" & tabnr).Value = oldval
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
atwork = 0
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub einp()
Sheets("data").Visible = True
End Sub

Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub einblenden()
Sheets("html").Visible = True
End Sub

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "nav, 1, 0, MSForms, ComboBox"
Private Sub nav_Change()
If nav.ListIndex = -1 Then Exit Sub
blatt = nav.Value
idx = nav.ListIndex
gespeichert = ThisWorkbook.Saved = True
If nav.ListIndex < 5 Then
[a1].Select
If Len(blatt) = 0 Then Exit Sub
If blatt = Sheets(aktuelleseite).Name Then Exit Sub
If Sheets(blatt).Visible = True Then
Sheets(blatt).Select
Else
[a1].Select
End If
Else
[a1].Select
If idx = 5 Then
ThisWorkbook.Save
gespeichert = True
ElseIf idx = 6 Then
gespeichert = Application.Dialogs(xlDialogSaveAs).Show
ElseIf idx = 7 Then
On Error Resume Next
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
GoTo ende
End If
End If
ThisWorkbook.Saved = gespeichert
Exit Sub
ende:
ThisWorkbook.Close (False)
End Sub
Private Sub nav_LostFocus()
nav.ListIndex = -1
End Sub
Private Sub Worksheet_Activate()
If Len(ThisWorkbook.Sheets("data").[dd1].Value) > 0 Then
ThisWorkbook.Sheets("data").[dd1].ClearContents
working = False
startwert = True
End If
aktuelleseite = "Info"
Sheets(aktuelleseite).ScrollArea = ""
working = False
startwert = True
End Sub

Private Sub Worksheet_Deactivate()
working = False
startwert = True
End Sub

Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "nav, 9, 0, MSForms, ComboBox"
Attribute VB_Control = "CommandButton5, 10, 1, MSForms, CommandButton"
Attribute VB_Control = "ComboBox2, 12, 2, MSForms, ComboBox"
Attribute VB_Control = "CommandButton6, 13, 3, MSForms, CommandButton"
Private Sub CommandButton8_Click()
aw = MsgBox("Dieses Programm wurde optimiert f|fffd|r eine Aufl|fffd|sung von 1024x768. Falls eine h|fffd|here Aufl|fffd|sung verwendet wird" & " kann es sein, dass die einzelnen Dialogfenster (Ranglisten, Tabellen usw.) relativ klein dargestelt werden." & Chr(13) & "Wrd die Zoom-Option aktiviert, werden diese Fenster vergr|fffd||fffd|ert angezeigt. Allerdings kann dies zur Folge haben, dass" & " einzelne Texte und Beschriftungen nicht mehr korrekt dargestellt werden. Dies ist abh|fffd|ngig von der eingestellten Aufl|fffd|sung und dem verwendeten Monitor." & Chr(13) & "Sie m|fffd|ssen selbst testen, ob die Zoom-Funktion f|fffd|r ihre Systemeinstellung sinnvoll ist." & " Falls Probleme entstehen, m|fffd|ssen Sie die Zoom-Funktion deaktivieren.", vbOKOnly, "Zoom-Funktion")
End Sub
Sub zoomfkt()
[a2].Select
aktuelleseite = "Einstellungen"
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm31.Show
working = working_shk
Unload UserForm31
[a2].Select
Application.CutCopyMode = False
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End Sub
Private Sub nav_Change()
If nav.ListIndex = -1 Then Exit Sub
blatt = nav.Value
idx = nav.ListIndex
gespeichert = ThisWorkbook.Saved = True
If nav.ListIndex < 5 Then
[a1].Select
If Len(blatt) = 0 Then Exit Sub
If blatt = Sheets(aktuelleseite).Name Then Exit Sub
If Sheets(blatt).Visible = True Then
Sheets(blatt).Select
Else
[a1].Select
End If
Else
[a1].Select
If idx = 5 Then
ThisWorkbook.Save
gespeichert = True
ElseIf idx = 6 Then
gespeichert = Application.Dialogs(xlDialogSaveAs).Show
ElseIf idx = 7 Then
On Error Resume Next
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
GoTo ende
End If
End If
ThisWorkbook.Saved = gespeichert
Exit Sub
ende:
ThisWorkbook.Close (False)
End Sub
Private Sub nav_LostFocus()
nav.ListIndex = -1
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If Sheets(aktuelleseite).Name <> "Einstellungen" Then Exit Sub
aktuelleseite = "Einstellungen"
wshk = working
sshk = startwert
[z4].Select
cbh = ComboBox2.Height
cbw = ComboBox2.Width
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[am4] = ComboBox2.ListIndex + 1
If ComboBox2.ListIndex = 0 Then
[ap4:ar4].Copy Destination:=[z4:ab4]
[z4].Locked = True
[ab4].Locked = True
Else
[z4].Value = [z4].Value
[z4].Locked = False
[ab4].Value = [ab4].Value
[ab4].Locked = False
End If
ComboBox2.Height = cbh
ComboBox2.Width = cbw + 1
ComboBox2.Width = cbw
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
working = wshk
startwert = sshk
[z4].Select
End Sub
Sub ligasetup()
[a1].Select
aktuelleseite = "Einstellungen"
Application.ScreenUpdating = False
With UserForm1
If Sheets("plan").[i12] = 3 Then
.Label4.Caption = "3 Punkte pro Sieg"
Else
.Label4.Caption = "2 Punkte pro Sieg"
End If
txt = ""
For i = 1 To 4
If Sheets("plan").Cells(6 + i, 9) <> 0 Then txt = txt & Sheets("plan").Cells(6 + i, 8).Value & Chr(13)
Next
.Label6.Caption = txt
.ComboBox1.RowSource = "plan!h22:h30"
.ComboBox1.ListIndex = Sheets("plan").[i21] - 1
If Sheets("data").[b1223] > 0 Or Sheets("ligatabelle").[bp30] > 0 Then
.Frame3.Enabled = False
.Label8.Caption = "Keine Spielplan|fffd|nderungen, wenn Tipps oder Egebnisse vorliegen."
End If
End With
Set d = Sheets("data")
Set t = Sheets("tipps")
Set p = Sheets("plan")
t.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
einz = t.[de11:df110].Value
t.[cc11:eh11].AutoFill Destination:=t.[cc11:eh110]
t.Calculate
t.[de11:df110].Value = einz
Sheets(aktuelleseite).Activate
With Sheets("spielplaene")
.[t2:u2].AutoFill Destination:=.[t2:u381]
.[an2:ao2].AutoFill Destination:=.[an2:ao381]
End With
Sheets(aktuelleseite).Activate
Application.CutCopyMode = False
Application.ScreenUpdating = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm1.Show
working = working_shk
Application.ScreenUpdating = False
With Sheets("spielplaene")
.[t3:u381].ClearContents
.[an3:ao381].ClearContents
End With
If UserForm1.Tag = "new" Then
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Sheets("tipps").Activate
Sheets("tipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
d.Calculate
anzhs = p.[g2] / 2
anzgs = p.[g2]
If p.[f32] > anzhs - 2 Then p.[f32] = anzhs - 2
If p.[f33] > anzhs - 2 Then p.[f33] = anzhs - 2
If p.[f34] > anzgs - 2 Then p.[f34] = anzgs - 2
d.[cy2:db4].AutoFill Destination:=d.[cy2:db1141]
d.[cy1935:da1935].AutoFill Destination:=d.[cy1935:da2315]
d.Calculate
d.[cy1936:da2315].Value = d.[cy1936:da2315].Value
d.[cy3:db1141].ClearContents
Sheets(aktuelleseite).Activate
Call katber
ppspt = Sheets("plan").[h2]
spt = t.[i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
t.[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
t.[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
t.Calculate
t.[as11:bx11].EntireColumn.Hidden = False
t.Range("AS11:BX110").Sort key1:=t.Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
t.[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
t.Range(t.Cells(11, (i - 1) * 3 + 10), t.Cells(110, (i - 1) * 3 + 11)).Value = t.Range(t.Cells(11, (i - 1) * 3 + 45), t.Cells(110, (i - 1) * 3 + 46)).Value
Next
t.[aq11:aq110].Value = t.[bw11:bw110].Value
Sheets("einstellungen").Activate
End If
Unload UserForm1
ppspt = Sheets("plan").[h2]
With Sheets("tipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.ComboBox2.ListFillRange = "tipps!a8:a" & 7 + Sheets("plan").[g2].Value
.Calculate
einz = .[de11:df110].Value
.[cc12:eh110].Value = .[cc12:eh110].Value
.[de11:df110].Value = einz
.[j1:am1].EntireColumn.Hidden = False
If ppspt < 10 Then .Range(.Cells(1, ppspt * 3 + 10), .Cells(1, 39)).EntireColumn.Hidden = True
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Call fuellen
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.CutCopyMode = False
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[a1].Select
End Sub
Sub newseason()
[a1].Select
aktuelleseite = "Einstellungen"
aw = MsgBox("Alle Daten werden unwiderruflich gel|fffd|scht!" & Chr(13) & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "Saisondaten l|fffd|schen")
If aw <> 6 Then Exit Sub
If Sheets("ligatabelle").[ax22] > 0 Then aw = MsgBox("Sollen die eingetragenen Punktabz|fffd|ge gel|fffd|scht werden?", vbYesNo, "Bitte best|fffd|tigen ...")
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
With Sheets("tipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
einz = .[de11:df110].Value
.[cc11:eh11].AutoFill Destination:=.[cc11:eh110]
.[de11:df110].Value = einz
End With
Sheets(aktuelleseite).Activate
anz = Sheets("tipps").[b6]
With Sheets("data")
If anz > 0 Then .Range(.Cells(2, 3), .Cells(1175, 2 + anz)).ClearContents
If anz > 0 Then .Range(.Cells(1364, 3), .Cells(2315, 2 + anz)).ClearContents
If anz > 0 Then .Range(.Cells(1268, 3), .Cells(1281, 2 + anz)).ClearContents
If anz > 0 Then .Range("cy1936:da2315").ClearContents
End With
With Sheets("ligatabelle")
.[c2:l381].ClearContents
.[n2:ag21].ClearContents
.[n47:ag66].ClearContents
.[aq2:aq21].ClearContents
.[be2:be21].ClearContents
.[be24:be43].ClearContents
.[am69:at132].ClearContents
If aw = 6 Then .[ax2:ax21].ClearContents
End With
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If anz > 0 Then .Range(.Cells(67, 4), .Cells(109, 3 + anz)).ClearContents
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Set t = Sheets("tipps")
Set d = Sheets("data")
ppspt = Sheets("plan").[h2]
spt = t.[i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
t.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
t.[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
t.[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
t.Calculate
t.[as11:bx11].EntireColumn.Hidden = False
t.Range("AS11:BX110").Sort key1:=t.Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
t.[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
t.Range(t.Cells(11, (i - 1) * 3 + 10), t.Cells(110, (i - 1) * 3 + 11)).Value = t.Range(t.Cells(11, (i - 1) * 3 + 45), t.Cells(110, (i - 1) * 3 + 46)).Value
Next
t.[aq11:aq110].Value = t.[bw11:bw110].Value
With Sheets("tipps")
For i = 1 To 10
.Range(.Cells(8, i * 3 + 7), .Cells(8, i * 3 + 8)).ClearContents
Next
.Calculate
einz = .[de11:df110].Value
.[cc12:eh110].Value = .[cc12:eh110].Value
.[de11:df110].Value = einz
.[j1:am1].EntireColumn.Hidden = False
If ppspt < 10 Then .Range(.Cells(1, ppspt * 3 + 10), .Cells(1, 39)).EntireColumn.Hidden = True
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Call fuellen
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
aw = MsgBox("Sollen die Angaben |fffd|ber die Einzahlungen des Tippspieleinsatzes gel|fffd|scht werden?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[de11:df110].ClearContents
Sheets("tipps").[de7:df7].ClearContents
Sheets("tipps").[de6:df6].ClearContents
[cd105:do204].ClearContents
End If
Call tageseinsatz
aw = MsgBox("Alle Daten wurden erfolgreich gel|fffd|scht!" & Chr(13) & "|fffd|ber die Schaltfl|fffd|che" & " 'Ligaeinstellungen bearbeiten' k|fffd|nnen Sie nun den neuen Spielplan eingeben und die Teamnamen anpassen (Absteiger durch Aufsteiger ersetzen)," & " falls eine neue Saison gestartet werden soll.", vbOKOnly, "Vorgang beendet ...")
Application.ScreenUpdating = False
With Sheets("tipps")
.Range("E9").Comment.Visible = False
.Range("E9").Comment.Text Text:=.[e4].Value
.Range("f10").Comment.Visible = False
.Range("f10").Comment.Text Text:=.[e5].Value
.Range("h10").Comment.Visible = False
.Range("h10").Comment.Text Text:=.[e6].Value
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Sheets("zusatztipps").Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
Application.ScreenUpdating = True
[a1].Select
End Sub
Sub tippsetup()
[a1].Select
aktuelleseite = "Einstellungen"
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
Set p = Sheets("plan")
beste = p.[f32:f34].Value
With tipp
For i = 1 To 5
.Controls("krit" & i).Caption = p.Cells(i + 65, 11).Value
If i < 5 Then
.Controls("combobox" & i).RowSource = "plan!e97:e146"
.Controls("combobox" & i + 4).RowSource = "plan!e97:e146"
End If
Next
.Controls("combobox" & 10).RowSource = "plan!e148:e158"
.Controls("combobox" & 11).RowSource = "plan!e148:e158"
.Controls("combobox" & 12).RowSource = "plan!e148:e158"
.Controls("optionbutton" & p.[f44]).Value = True
.CheckBox6.Value = p.[f42].Value
If p.[f45] = 0 Then
.CheckBox1.Value = True
Else
.CheckBox1.Value = False
End If
.CheckBox4.Value = p.[f46]
If p.[f43] = 0 Then
.CheckBox5.Value = True
Else
.CheckBox5.Value = False
End If
For i = 1 To 4
.Controls("combobox" & i).ListIndex = p.Cells(48 + i, 10) - 1
.Controls("combobox" & i + 4).ListIndex = p.Cells(55 + i, 10) - 1
Next
.Controls("combobox" & 10).ListIndex = Abs(p.Cells(53, 10))
.Controls("combobox" & 12).ListIndex = Abs(p.Cells(60, 10))
.Controls("combobox" & 11).ListIndex = Abs(p.Cells(54, 10))
Application.EnableEvents = True
Set zt = Sheets("zusatztipps")
'With zt
'.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
'End With
zusidx = zt.[i169:n169]
zuordnung = zt.[i179:n184].Value
ztliste = zt.[d240:o440].Value
For i = 1 To 6
z = (i - 1) * 7 + 7
nr = z + 1
For j = 1 To 5
idx = (i - 1) * 5 + j
z = z + 1
If Len(zt.Cells(nr, 4)) = 0 Then
If j <> 4 Then .Controls("zt" & idx).Caption = ""
If j = 1 Then .Controls("zt" & idx).Caption = "kein Zusatztipp festgelegt"
Else
If j <> 4 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4)
If j = 2 Then
If zt.Cells(z, 4) = 1 Then .Controls("zt" & idx).Caption = "zu tippen: " & zt.Cells(z, 4) & " Team"
If zt.Cells(z, 4) > 1 Then .Controls("zt" & idx).Caption = "zu tippen: " & zt.Cells(z, 4) & " Teams"
End If
If j = 3 Then
txt = zt.Cells(z, 4) & " " & zt.Cells(z + 1, 4)
.Controls("zt" & idx).Caption = txt
End If
If j = 5 Then
If zt.Cells(z, 4) = 1 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4) & " Punkt pro korr. Tipp"
If zt.Cells(z, 4) > 1 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4) & " Punkte pro korr. Tipp"
End If
End If
Next
Next
End With
With Sheets("tipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
einz = .[de11:df110].Value
.[cc11:eh11].AutoFill Destination:=.[cc11:eh110]
.[de11:df110].Value = einz
End With
Sheets(aktuelleseite).Activate
With zt
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
tipp.Tag = "first"
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tipp.Show
working = working_shk
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If tipp.Tag <> "OK" Then
p.[f32:f34].Value = beste
zt.[i169:n169] = zusidx
zt.[i179:n184].Value = zuordnung
zt.[d240:o440].Value = ztliste
Else
zusidxneu = zt.[i169:n169]
ztipps = zt.[d67:cy108].Value
ztippsneu = ztipps
For i = 1 To 6
If zusidx(1, i) <> zusidxneu(1, i) Then
For j = 1 To 6
If zusidx(1, j) = zusidxneu(1, i) Then
For k = 1 To 7
For l = 1 To Sheets("tipps").[b6]
ztippsneu((i - 1) * 7 + k, l) = ztipps((j - 1) * 7 + k, l)
Next
Next
GoTo weiter
End If
Next
For k = 1 To 7
For l = 1 To Sheets("tipps").[b6]
ztippsneu((i - 1) * 7 + k, l) = Null
Next
Next
End If
weiter:
Next
zt.[d67:cy108].Value = ztippsneu
End If
Call katber
Unload tipp
With Sheets("tipps")
Sheets("zusatztipps").[b209] = .[c6]
.Calculate
.[cc12:eh110].Value = .[cc12:eh110].Value
.[de11:df110].Value = einz
If Sheets("plan").[f47] = 0 Then
.Range("F11").ColumnWidth = 7
.Range("H11").ColumnWidth = 6
.Range("e11,g11").ColumnWidth = 5
Else
.Range("F11").ColumnWidth = 9
.Range("H11").ColumnWidth = 7
.Range("e11,g11").ColumnWidth = 3.5
End If
End With
Call fuellen
Application.ScreenUpdating = False
With Sheets("tipps")
.Range("E9").Comment.Visible = False
.Range("E9").Comment.Text Text:=.[e4].Value
.Range("f10").Comment.Visible = False
.Range("f10").Comment.Text Text:=.[e5].Value
.Range("h10").Comment.Visible = False
.Range("h10").Comment.Text Text:=.[e6].Value
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
With zt
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
Application.ScreenUpdating = True
[a1].Select
End Sub
Sub grundeinstellungen()
[a2].Select
aktuelleseite = "Einstellungen"
Application.ScreenUpdating = False
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets(aktuelleseite).ScrollArea = ""
Sheets(aktuelleseite).Shapes("autober").Visible = False
Sheets(aktuelleseite).Shapes("zoombutton").Visible = True
Sheets(aktuelleseite).Shapes("combobox2").Visible = False
CommandButton5.Visible = False
CommandButton6.Visible = False
[u1:bn1].EntireColumn.Hidden = True
[a2:n2].EntireColumn.Hidden = False
'Sheets(aktuelleseite).ScrollArea = "a1"
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
Application.ScreenUpdating = True
[a2].Select
Application.CutCopyMode = False
End Sub
Sub kassensetup()
[a1].Select
aktuelleseite = "Einstellungen"
Application.ScreenUpdating = False
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets(aktuelleseite).ScrollArea = ""
[b2:n2].EntireColumn.Hidden = True
[u1:bn1].EntireColumn.Hidden = False
[al3:ay3].EntireColumn.Hidden = True
Sheets(aktuelleseite).Shapes("autober").Visible = True
Sheets(aktuelleseite).Shapes("zoombutton").Visible = False
Sheets(aktuelleseite).Shapes("combobox2").Visible = True
CommandButton5.Visible = True
CommandButton6.Visible = True
'Sheets(aktuelleseite).ScrollArea = "u1:bm43"
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.ScreenUpdating = True
[v1].Select
Application.CutCopyMode = False
End Sub
Private Sub CommandButton5_Click()
txt = "Der unter 'Ausspielsumme' ausgewiesene Betrag steht f|fffd|r die Halbserien zur Verf|fffd|gung." & " Diese Summe kann auf die einzelnen Ranglisten verteilt werden (prozentual oder als Festbetrag)."
txt = txt & Chr(13) & "Nicht auf die Halbserien-Ranglisten verteilte Betr|fffd|ge verbleiben zur Verteilung auf die Gesamtranglisten."
txt = txt & Chr(13) & Chr(13) & "Die den einzelnen Ranglisten zugewiesenen Summen k|fffd|nnen dann auf die Platzierungen verteilt werden." & Chr(13) & Chr(13) & "Durch Auswahl von 'autom. Berechnung deaktivieren' kann unter 'Ausspielsumme' der Betrag von Hand eingetragen werden."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
aktuelleseite = "Einstellungen"
End Sub
Private Sub CommandButton6_Click()
txt = "Bei der automatischen Anzahlermittlung werden die Angaben |fffd|ber die Einzahlungen der Eins|fffd|tze" & " der einzelnen Mitspieler f|fffd|r die Berechnung herangezogen. Falls dies Probleme verursacht, kann die automatische" & " Anzahlermittlung deaktivert werden und die Anzahl der Mitspieler eingetippt werden." & Chr(13) & "Beachten Sie: Wenn der Einsatz mit 'pro Spieltag' angegeben wird, gibt der angezeigte Wert die Summe aller Tippabgaben w|fffd|hrend einer Halbserie an." & " Nutzen Sie die Einstellung 'pro Spietag mit Tippabgabe', wenn der Einsatz nur dann gezahlt wird, wenn auch eine Tippabgabe erfolgt, und damit die Tageseinnahmen an den einzelnen Spieltagen variieren k|fffd|nnen."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
aktuelleseite = "Einstellungen"
End Sub
Private Sub Worksheet_Activate()
If Len(ThisWorkbook.Sheets("data").[dd1].Value) > 0 Then
ThisWorkbook.Sheets("data").[dd1].ClearContents
working = False
startwert = True
End If
If Not startwert Or working = True Then Exit Sub
aktuelleseite = "Einstellungen"
[bv8] = [be8]
[by8] = [bj8]
Sheets(aktuelleseite).ScrollArea = ""
If Sheets("einstellungen").[n1] Then
[a1].Select
z = 1
Call calczoom(z)
ActiveWindow.Zoom = Int(z * 100)
End If
If [b1].EntireColumn.Hidden = True Then
'Sheets(aktuelleseite).ScrollArea = "u1:bm43"
[v1].Select
Else
'Sheets(aktuelleseite).ScrollArea = "a1"
Sheets(aktuelleseite).Shapes("combobox2").Visible = False
Sheets(aktuelleseite).Shapes("commandbutton5").Visible = False
Sheets(aktuelleseite).Shapes("commandbutton6").Visible = False
[a2].Select
End If
working = False
startwert = True
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
If Not startwert Or working = True Then Exit Sub
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Cancel = True
aktuelleseite = "Einstellungen"
s = Target.Column
z = Target.Row
If s = 22 And z = 11 Then
If [as11] = 0 Then
[as11] = 1
[at11:av11].Copy Destination:=[z11:ab11]
Else
[as11] = 0
[z11:ab11].ClearContents
End If
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
End Sub
Sub noautober()
[z27].Select
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
aktuelleseite = "Einstellungen"
If [am27] Then
[z27].Locked = False
[ab27].Locked = False
[z27] = [z27].Value
[ab27] = [ab27].Value
Else
[ao27:aq27].Copy Destination:=[z27:ab27]
[z27:ab27].Locked = True
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
End Sub
Sub cleareinz()
[z11].Select
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
aktuelleseite = "Einstellungen"
If [am6] = 1 Then
If Sheets("tipps").[de7] > 0 Then
aw = MsgBox("Sollen die gespeicherten Daten f|fffd|r einbehaltene Einzahlungen gel|fffd|scht werden?" & Chr(13) & Chr(13) & "Vorrunde: " & Sheets("tipps").[de7] * [z6] & " |fffd|", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[de7:de7].ClearContents
End If
End If
If Sheets("Tipps").[df7] > 0 Then
aw = MsgBox("Sollen die gespeicherten Daten f|fffd|r einbehaltene Einzahlungen gel|fffd|scht werden?" & Chr(13) & Chr(13) & "R|fffd|ckrunde: " & Sheets("tipps").[df7] * [ab6] & " |fffd|", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[df7:df7].ClearContents
End If
End If
Else
If Sheets("tipps").[de6] > 0 Then
aw = MsgBox("Sollen die gespeicherten Daten f|fffd|r einbehaltene Einzahlungen gel|fffd|scht werden?" & Chr(13) & Chr(13) & "Vorrunde: " & Sheets("tipps").[de6] * [z6] & " |fffd|", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[de6:de6].ClearContents
End If
End If
If Sheets("Tipps").[df6] > 0 Then
aw = MsgBox("Sollen die gespeicherten Daten f|fffd|r einbehaltene Einzahlungen gel|fffd|scht werden?" & Chr(13) & Chr(13) & "R|fffd|ckrunde: " & Sheets("tipps").[df6] * [ab6] & " |fffd|", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
Sheets("tipps").[df6:df6].ClearContents
End If
End If
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
End Sub
Private Sub Worksheet_Calculate()
If Not startwert Or working = True Then Exit Sub
If ActiveWorkbook.Name <> ThisWorkbook.Name Then Exit Sub
If Sheets(aktuelleseite).Name <> "Einstellungen" Then Exit Sub
z = Selection.Cells(1, 1).Row
s = Selection.Cells(1, 1).Column
Application.EnableEvents = False
Set d = Sheets("einstellungen")
If z = 8 And s = 57 And d.[bv8] <> d.[be8] Then
d.[be11:bg40].Value = d.[bv11:bx40].Value
d.[bv8] = d.[be8]
End If
If z = 8 And s = 62 And d.[by8] <> d.[bj8] Then
d.[bj11:bl40].Value = d.[by11:ca40].Value
d.[by8] = d.[bj8]
End If
Application.EnableEvents = True
Application.CutCopyMode = False
End Sub
Sub tagess()
aktuelleseite = "Einstellungen"
If [am6] <> 2 Then
aw = MsgBox("Dieses Dialogfeld wird nur verwendet, wenn der Tippspieleinsatz PRO SPIELTAG MIT TIPPABGABE gezahlt wird.", vbOKOnly, "Hinweis")
Exit Sub
End If
Application.EnableEvents = False
einz = [cd105:do204].Value
sum_hs = [dp104:dq204].Value
With kasse
.ListBox5.RowSource = "einstellungen!du52:dx53"
.Label46.Caption = [dv55].Value
anzspt = Sheets("plan").[g2]
.ListBox4.RowSource = "einstellungen!dt57:dx" & 56 + anzspt
.ComboBox5.RowSource = "einstellungen!ed5:ed" & 4 + Sheets("plan").[g2]
If Sheets("tipps").[b6] > 0 Then
.ComboBox6.RowSource = "tipps!by11:by" & 10 + Sheets("tipps").[b6]
Else
.ComboBox6.Enabled = False
End If
End With
Application.EnableEvents = True
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
If kasse.Tag <> "OK" Then [cd105:do204].Value = einz
Unload kasse
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End Sub
Sub auszahlung()
aktuelleseite = "Einstellungen"
With auszts
.einheitvr.RowSource = "einstellungen!dy43:dy44"
.einheitrr.RowSource = "einstellungen!dy43:dy44"
.einheitvr.ListIndex = [du42] - 1
.einheitrr.ListIndex = [dv42] - 1
For i = 1 To 10
.Controls("vk" & i).RowSource = "einstellungen!cb2:cb102"
.Controls("nk" & i).RowSource = "einstellungen!cb2:cb101"
z = i + 42
If i > 5 Then z = z - 5
s = 125
If i > 5 Then s = 126
If Cells(z, s + 2) = 1 Then
.Controls("vk" & i).ListIndex = Int(Cells(z, s))
.Controls("nk" & i).ListIndex = (Cells(z, s) - Int(Cells(z, s))) * 100
.Controls("checkbox" & i).Value = 1
Else
.Controls("vk" & i).ListIndex = 0
.Controls("nk" & i).ListIndex = 0
.Controls("checkbox" & i).Value = 0
End If
Next
End With
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
auszts.Show
working = working_shk
Unload auszts
End Sub

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub werte()
For i = 1 To 38
Range(Cells((i - 1) * 15 + 1364, 2), Cells((i - 1) * 15 + 1364 + 14, 2)) = i
Next
End Sub
Sub einb()
End Sub

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox1, 16, 0, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2, 17, 1, MSForms, ComboBox"
Attribute VB_Control = "nav, 18, 2, MSForms, ComboBox"
Attribute VB_Control = "Image1, 19, 3, MSForms, Image"
Attribute VB_Control = "Image2, 20, 4, MSForms, Image"
Attribute VB_Control = "Image3, 21, 5, MSForms, Image"
Attribute VB_Control = "Image4, 22, 6, MSForms, Image"
Dim atwork As Integer, druckform
Private Sub nav_Change()
If nav.ListIndex = -1 Then Exit Sub
aktuelleseite = "Tipps"
blatt = nav.Value
idx = nav.ListIndex
gespeichert = ThisWorkbook.Saved = True
If nav.ListIndex < 5 Then
[i7].Select
If Len(blatt) = 0 Then Exit Sub
If blatt = Sheets(aktuelleseite).Name Then Exit Sub
If Sheets(blatt).Visible = True Then
Sheets(blatt).Select
Else
[a1].Select
End If
Else
[a1].Select
If idx = 5 Then
ThisWorkbook.Save
gespeichert = True
ElseIf idx = 6 Then
gespeichert = Application.Dialogs(xlDialogSaveAs).Show
ElseIf idx = 7 Then
On Error Resume Next
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
GoTo ende
End If
End If
ThisWorkbook.Saved = gespeichert
Exit Sub
ende:
ThisWorkbook.Close (False)
End Sub
Private Sub nav_LostFocus()
nav.ListIndex = -1
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If Sheets(aktuelleseite).Name <> "Tipps" Then Exit Sub
If druckform = 1 Then Exit Sub
If UserForm26.Visible = True Then Exit Sub
If HTMLForm.Visible = True Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
wshk = working
sshk = startwert
aktuelleseite = "Tipps"
Cells(ComboBox1.ListIndex + 16, 9).Select
Range(Cells(ComboBox1.ListIndex + 11, 9), Cells(ComboBox1.ListIndex + 11, 39)).Select
If Int(Val(Application.Version)) > 11 Then Exit Sub
ComboBox1.ListIndex = -1
ComboBox1.Height = 13.5
ComboBox1.Width = 13.5
working = wshk
startwert = sshk
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If Sheets(aktuelleseite).Name <> "Tipps" Then Exit Sub
If druckform = 1 Then Exit Sub
If UserForm26.Visible = True Then Exit Sub
If HTMLForm.Visible = True Then Exit Sub
If ComboBox2.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
aktuelleseite = "Tipps"
wshk = working
sshk = startwert
[i7].Select
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If [as112] > 0 Then
atwork = 1
aw = MsgBox("Die |fffd|nderungen an Spieltag " & [i5] & " gehen verloren!" & Chr(13) & Chr(13) & "Vorgang dennoch fortsetzen?", vbYesNo, "Warnung!")
If aw <> 6 Then
ComboBox2.ListIndex = [i5] - 1
[i7].Select
atwork = 0
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Exit Sub
End If
End If
atwork = 0
cbh = Sheets(aktuelleseite).ComboBox2.Height
cbw = Sheets(aktuelleseite).ComboBox2.Width
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
[i5] = [i6]
anzspt = Sheets("plan").[h2]
spt = [i6]
za = (spt - 1) * 3 * anzspt + 2
ze = (za - 1) + 3 * anzspt
Set d = Sheets("data")
[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
[as1:bx1].EntireColumn.Hidden = False
Range("AS11:BX110").Sort key1:=Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
[as1:bx1].EntireColumn.Hidden = True
Sheets(aktuelleseite).Calculate
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[j8:al8].Value = [j4:al4].Value
[aq11:aq110].Value = [bw11:bw110].Value
Sheets("zusatztipps").[b209] = [c6]
einz = [de11:df110].Value
[cc11:eh11].AutoFill Destination:=[cc11:eh110]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[cc12:eh110].Value = [cc12:eh110].Value
[de11:df110].Value = einz
[i7].Select
Application.Calculation = xlCalculationAutomatic
Range("E9").Comment.Visible = False
Range("E9").Comment.Text Text:=[e4].Value
Application.ScreenUpdating = True
Application.EnableEvents = True
[i7].Select
Sheets(aktuelleseite).ComboBox2.Height = cbh
Sheets(aktuelleseite).ComboBox2.Width = cbw + 1
Sheets(aktuelleseite).ComboBox2.Width = cbw
Sheets(aktuelleseite).Calculate
Sheets(aktuelleseite).Shapes("but_save").Select
Selection.Formula = "=$E$3"
[e3].Select
[i7].Select
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
working = wshk
startwert = sshk
End Sub
Private Sub Image1_Click()
anz = [b6]
If anz = 0 Then Exit Sub
aktuelleseite = "Tipps"
If [aq9] = 1 Then
aw = MsgBox("Sollen alle Spieleins|fffd|tze f|fffd|r die Vorrunde als gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Range("de11:de" & 10 + anz).Value = 1
Application.CutCopyMode = False
Else
aw = MsgBox("Sollen alle Eins|fffd|tze f|fffd|r Spieltag " & [i5] & " als gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Set e = Sheets("einstellungen")
sptdat = e.Range(e.Cells(3, 81 + [i5]), e.Cells(102, 81 + [i5])).Value
zdat = e.Range(e.Cells(105, 81 + [i5]), e.Cells(204, 81 + [i5])).Value
For i = 1 To anz
If sptdat(i, 1) > 0 Then
zdat(i, 1) = 1
Else
zdat(i, 1) = 0
End If
Next
e.Range(e.Cells(105, 81 + [i5]), e.Cells(204, 81 + [i5])).Value = zdat
Application.CutCopyMode = False
End If
[i7].Select
End Sub
Private Sub Image2_Click()
anz = [b6]
If anz = 0 Then Exit Sub
If [aq9] = 2 Then Exit Sub
aktuelleseite = "Tipps"
aw = MsgBox("Sollen alle Spieleins|fffd|tze f|fffd|r die R|fffd|ckrunde als gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Range("df11:df" & 10 + anz).Value = 1
Application.CutCopyMode = False
[i7].Select
End Sub
Private Sub Image3_Click()
aktuelleseite = "Tipps"
anz = [b6]
If [aq9] = 1 Then
aw = MsgBox("Sollen alle Spieleins|fffd|tze f|fffd|r die Vorrunde als nicht gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Range("de11:de110").Value = 0
If [de7] > 0 Then
aw = MsgBox("Sollen die einbehaltenen Spieleins|fffd|tze von gel|fffd|schten Mitspielern f|fffd|r die Vorrunde (" & [de7] & ") gel|fffd|scht werden?", vbYesNo, "einbehaltener Spieleinsatz")
If aw = 6 Then [de7].ClearContents
End If
Application.CutCopyMode = False
Else
aw = MsgBox("Sollen alle Eins|fffd|tze f|fffd|r Spieltag " & [i5] & " als nicht gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Set e = Sheets("einstellungen")
zdat = e.Range(e.Cells(105, 81 + [i5]), e.Cells(204, 81 + [i5])).Value
For i = 1 To anz
zdat(i, 1) = 0
Next
e.Range(e.Cells(105, 81 + [i5]), e.Cells(204, 81 + [i5])).Value = zdat
Application.CutCopyMode = False
End If
[i7].Select
End Sub
Private Sub Image4_Click()
aktuelleseite = "Tipps"
anz = [b6]
If [aq9] = 2 Then Exit Sub
aw = MsgBox("Sollen alle Spieleins|fffd|tze f|fffd|r die R|fffd|ckrunde als nicht gezahlt gesetzt werden?", vbYesNo, "Spieleinsatz")
If aw <> 6 Then Exit Sub
Range("df11:df110").Value = 0
If [df7] > 0 Then
aw = MsgBox("Sollen die einbehaltenen Spieleins|fffd|tze von gel|fffd|schten Mitspielern f|fffd|r die R|fffd|ckrunde (" & [df7] & ") gel|fffd|scht werden?", vbYesNo, "einbehaltener Spieleinsatz")
If aw = 6 Then [df7].ClearContents
End If
Application.CutCopyMode = False
[i7].Select
End Sub
Private Sub Worksheet_Activate()
If Len(ThisWorkbook.Sheets("data").[dd1].Value) > 0 Then
ThisWorkbook.Sheets("data").[dd1].ClearContents
working = False
startwert = True
End If
If Not startwert Or working = True Then Exit Sub
aktuelleseite = "Tipps"
If Sheets("einstellungen").[n1] Then
[a1].Select
z = 1
Call calczoom(z)
ActiveWindow.Zoom = Int(z * 100)
End If
Sheets(aktuelleseite).ScrollArea = ""
[i7].Select
'Sheets(aktuelleseite).ScrollArea = "d1:ap111"
ActiveWindow.LargeScroll up:=3, toright:=3
[i7].Select
Application.CutCopyMode = False
working = False
startwert = True
Application.CutCopyMode = False
Sheets(aktuelleseite).[i7].Select
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
startwert = True
atwork = 0
[j7].Select

End Sub
Sub restore_spt()
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
aktuelleseite = "Tipps"
[j8:al8].Value = [j4:al4].Value
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[aq11:aq110].Value = [bw11:bw110].Value
[i7].Select
Application.Calculation = xlCalculationAutomatic
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
[i7].Select
End Sub
Sub saveall()
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[i7].Select
aktuelleseite = "Tipps"
anz = [b6]
Set d = Sheets("data")
Set lt = Sheets("Ligatabelle")
spt = [i6]
ppspt = Sheets("plan").[h2]
If spt > Sheets("plan").[g2] / 2 Then
DV = lt.[n47:ag66].Value
Else
DV = lt.[n2:ag21].Value
End If
einz = [de11:df110].Value
idx = [fb9:fc18].Value
dvneu = [fp9:fq18].Value
za = ppspt * (spt - 1) + 2
ze = za - 1 + ppspt
anzt = Sheets("plan").[e1]
Application.ScreenUpdating = False
Application.EnableEvents = False
If anz > 0 Then
[cc11:eh11].AutoFill Destination:=[cc11:eh110]
[de11:df110].Value = einz
lt.[ay1] = 1
Sheets(aktuelleseite).Activate
Application.Calculation = xlCalculationManual
tagergalt = d.Range(d.Cells((spt - 1) * 15 + 1364, 3), d.Cells((spt - 1) * 15 + 1377, 2 + anz)).Value
sumkat = d.Range(d.Cells([dw8], 3), d.Cells([dw8] + 13, 2 + anz)).Value
Range(Cells(11, 113), Cells(10 + anz, 127)).Copy
d.Cells((spt - 1) * 15 + 1364, 3).PasteSpecial Paste:=xlPasteValues, Transpose:=True
d.Calculate
tagergneu = d.Range(d.Cells((spt - 1) * 15 + 1364, 3), d.Cells((spt - 1) * 15 + 1377, 2 + anz)).Value
For i = 1 To 14
For j = 1 To anz
sumkat(i, j) = sumkat(i, j) - tagergalt(i, j) + tagergneu(i, j)
Next
Next
d.Range(d.Cells([dw8], 3), d.Cells([dw8] + 13, 2 + anz)).Value = sumkat
[ar9] = 2
[a217:a316].EntireRow.Hidden = False
[as217:cf320].ClearContents
Sheets(aktuelleseite).Calculate
Range(Cells(11, 10), Cells(10 + anz, ppspt * 3 + 9)).Copy
[as217].PasteSpecial Paste:=xlPasteValues
Range(Cells(11, 129), Cells(10 + anz, ppspt + 128)).Copy
[bw217].PasteSpecial Paste:=xlPasteValues
Range("ar217:cf316").Sort key1:=Range("ar217"), order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).Calculate
Range(Cells(217, 45), Cells(216 + anz, ppspt * 3 + 44)).Copy
d.Cells((spt - 1) * ppspt * 3 + 2, 3).PasteSpecial Paste:=xlPasteValues, Transpose:=True
Range(Cells(217, 75), Cells(216 + anz, ppspt + 74)).Copy
d.Cells((spt - 1) * ppspt + 1936, 3).PasteSpecial Paste:=xlPasteValues, Transpose:=True
d.Range(d.Cells(1936 + (spt - 1) * ppspt, 103), d.Cells(1935 + spt * ppspt, 105)).Value = Range(Cells(9, 181), Cells(8 + ppspt, 183)).Value
End If
For i = 1 To ppspt
ht = idx(i, 1)
at = idx(i, 2)
DV(ht, at) = dvneu(i, 1)
DV(at, ht) = dvneu(i, 2)
Next
If spt > Sheets("plan").[g2] / 2 Then
lt.[n47:ag66].Value = DV
Else
lt.[n2:ag21].Value = DV
End If
lt.Range(lt.Cells(za, 3), lt.Cells(ze, 12)).Value = Range(Cells(9, 160), Cells(8 + ppspt, 169)).Value
lt.Calculate
pkthr = lt.[ba2:ba21].Value
pktrr = lt.[ba24:ba43].Value
pktg = lt.[am2:am21].Value
dvsumhr = lt.[ah24:ah43].Value
dvranghr = lt.[ai24:ai43].Value
dvsumrr = lt.[ah69:ah88].Value
dvrangrr = lt.[ai24:ai43].Value
dvsumg = lt.[ah114:ah133].Value
dvrangg = lt.[ai24:ai43].Value
For i = 1 To anzt
ranghr = 0
rangrr = 0
rangg = 0
For j = 1 To anzt
If i <> j Then
If pkthr(i, 1) = pkthr(j, 1) And dvsumhr(i, 1) < dvsumhr(j, 1) Then ranghr = ranghr + 1
If pktrr(i, 1) = pktrr(j, 1) And dvsumrr(i, 1) < dvsumrr(j, 1) Then rangrr = rangrr + 1
If pktg(i, 1) = pktg(j, 1) And dvsumg(i, 1) < dvsumg(j, 1) Then rangg = rangg + 1
End If
Next
dvranghr(i, 1) = ranghr
dvrangrr(i, 1) = rangrr
dvrangg(i, 1) = rangg
Next
lt.[aq2:aq21].Value = dvrangg
lt.[be2:be21].Value = dvranghr
lt.[be24:be43].Value = dvrangrr
If anz > 0 Then
Call katber
ppspt = Sheets("plan").[h2]
spt = [i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
Set d = Sheets("data")
[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
Sheets(aktuelleseite).Calculate
[as11:bx11].EntireColumn.Hidden = False
Range("AS11:BX110").Sort key1:=Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[aq11:aq110].Value = [bw11:bw110].Value
[ar9] = 1
Call tageseinsatz
End If
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Call fuellen
[cc12:eh110].Value = [cc12:eh110].Value
[de11:df110].Value = einz
[aq1:hz1].EntireColumn.Hidden = True
Application.CutCopyMode = False
Application.ScreenUpdating = True
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[i7].Select
If anz = 0 And ThisWorkbook.Path = "E:\Eigene Dateien\EXCEL\Tippdatei_Buli" Then
If Dir(ThisWorkbook.Path & "\" & "tippxxl_ergupdate_b1.xls") <> "" Then
Set twb = ThisWorkbook
Application.ScreenUpdating = False
Workbooks.Open (ThisWorkbook.Path & "\" & "tippxxl_ergupdate_b1.xls")
Set nwb = ActiveWorkbook
twb.Activate
With nwb.Sheets("ergeb")
.[a2:l381].Value = twb.Sheets("ligatabelle").[a2:l381].Value
.[n2:ag21].Value = twb.Sheets("ligatabelle").[n2:ag21].Value
.[n47:ag66].Value = twb.Sheets("ligatabelle").[n47:ag66].Value
.[ax2:ax21].Value = twb.Sheets("ligatabelle").[ax2:ax21].Value
.[be2:be21].Value = twb.Sheets("ligatabelle").[be2:be21].Value
.[be24:be43].Value = twb.Sheets("ligatabelle").[be24:be43].Value
End With
nwb.Sheets("Update").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
nwb.Sheets("update").[d3] = Format(Now(), "DD.MM.YYYY")
nwb.Sheets("update").[e3] = "Spieltag " & twb.Sheets("ligatabelle").[bp30]
nwb.Sheets("Update").Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
nwb.Save
On Error Resume Next
Application.DisplayAlerts = False
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:="E:\Eigene Dateien\EXCEL\Buli_Tab\lvxxl-v4\tippxxl_ergupdate_b1.xls", FileFormat:=xlExcel8
Else
nwb.SaveAs "E:\Eigene Dateien\EXCEL\Buli_Tab\lvxxl-v4\tippxxl_ergupdate_b1.xls"
End If
Application.DisplayAlerts = True
nwb.Close (False)
twb.Sheets("info").Activate
Application.DisplayFullScreen = False
twb.Close (True)
End If
End If
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
If Not startwert Or working = True Then Exit Sub
aktuelleseite = "Tipps"
Cancel = True
z = Target(1, 1).Row
s = Target(1, 1).Column
If s = 9 Then
If Len(Cells(z, s)) = 0 Then Exit Sub
If z < 11 Then Exit Sub
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
Sheets(aktuelleseite).Activate
[fs20] = z - 10
Sheets("ligatabelle").[cx1] = z - 10
[ft21] = [i5]
ppspt = [fr21]
quote = Sheets("plan").[f47]
Sheets(aktuelleseite).Calculate
With UserForm22
.ListBox1.RowSource = "tipps!fs22:gf" & ppspt + 21
.ComboBox2.RowSource = "tipps!gh35:gh37"
.perstipp.Caption = Format([gf32], "0.0000")
.bezpkt.Caption = [gf33]
.qpkt.Caption = [gf34]
.tipperg.Caption = [gf36]
.tagerg.Caption = [gf37]
.Caption = "Spielermen|fffd|:  " & Cells(z, s).Value
.Label1.Caption = "Paarungen von Spieltag " & [i5]
.ComboBox1.RowSource = "tipps!A8:a" & Sheets("plan").[g2] + 7
.ComboBox1.ListIndex = [i5] - 1
.ComboBox3.RowSource = "tipps!by11:by" & 10 + [b6]
.CheckBox4.Caption = "Tipps von Spieltag " & [i5]
If [i6] > Sheets("plan").[g2] / 2 Then
.CheckBox11.Value = False
Else
Sheets("ligatabelle").[cm1] = 1
End If
If Left(Application.Version, 1) = "8" Then .OptionButton2.Enabled = False
End With
Application.CutCopyMode = False
UserForm22.ComboBox2.ListIndex = [c6] - 1
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm22.Show
working = working_shk
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
If UserForm22.Tag = "new" Then
Set d = Sheets("data")
d.Calculate
d.[cy2:db4].AutoFill Destination:=d.[cy2:db1141]
d.[cy1935:da1935].AutoFill Destination:=d.[cy1935:da2315]
d.Calculate
d.[cy1936:da2315].Value = d.[cy1936:da2315].Value
d.[cy3:db1141].ClearContents
Sheets(aktuelleseite).Activate
ppspt = Sheets("plan").[h2]
spt = [i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
Sheets(aktuelleseite).Calculate
[as11:bx11].EntireColumn.Hidden = False
Range("AS11:BX110").Sort key1:=Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[aq11:aq110].Value = [bw11:bw110].Value
Call katber
einz = [de11:df110].Value
[cc11:eh11].AutoFill Destination:=[cc11:eh110]
Sheets(aktuelleseite).Calculate
Sheets(aktuelleseite).Activate
[cc12:eh110].Value = [cc12:eh110].Value
[de11:df110].Value = einz
End If
Unload UserForm22
Application.CutCopyMode = False
[fq23:gs31].ClearContents
Sheets("zusatztipps").[b209] = [c6]
Sheets("zusatztipps").[c209] = 1
Sheets("plan").[f47] = quote
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
[e1].Select
Exit Sub
End If
If z > 110 Or z < 11 Then Exit Sub
If s > 39 Or s < 10 Then Exit Sub
If Len(Cells(z, 9)) = 0 Then Exit Sub
If [b2].Value = 0 Then Exit Sub
joker = Cells(6, s)
If Cells(z, 43) = joker Then
Cells(z, 43) = 0
Else
Cells(z, 43) = joker
End If
Application.CutCopyMode = False
End Sub
Sub ligatabelle()
aktuelleseite = "Tipps"
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
With UserForm7
Set lt = Sheets("ligatabelle")
.ListBox1.RowSource = "ligatabelle!ca3:cl" & Sheets("plan").[e1] + 2
.ComboBox1.RowSource = "ligatabelle!bn23:bn27"
lt.[bx2] = 1
lt.[bx21] = 1
lt.[ay1] = 1
lt.Calculate
lt.[by3:cl22].Sort key1:=lt.Cells(3, 77), order1:=xlAscending, header:=xlNo, MatchCase:=False
.ComboBox1.ListIndex = 0
End With
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.CutCopyMode = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm7.Show
working = working_shk
Unload UserForm7
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.ScreenUpdating = False
lt.[ay1] = 1
Set a = Sheets("auswertung")
If a.[t2] = 1 Then
a.[x3:ak381].ClearContents
a.[an3:ay21].ClearContents
a.[az4:bm22].ClearContents
a.[an48:bh66].ClearContents
a.[t2].ClearContents
End If
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.CutCopyMode = False
[i7].Select
End Sub
Sub showranking()
aktuelleseite = "Tipps"
If [b6] = 0 Then
aw = MsgBox("Es wurden noch keine Mitspieler eingegeben!", vbOKOnly, "Hinweis")
Exit Sub
End If
[i7].Select
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
beste = Sheets("plan").[f32:f34].Value
Sheets("data").[a7173] = 0
Sheets("data").[a7177] = 0
Sheets("zusatztipps").[c209] = 1
Sheets("zusatztipps").[c218] = 1
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Set zt = Sheets("zusatztipps")
Set d = Sheets("data")
anz = [b6]
d.[bb7067:bb7166].Value = d.[an7067:an7166].Value
d.[bv7067:bv7166].Value = d.[bh7067:bh7166].Value
d.[bc7068] = 1
d.[bc7070] = 1
d.[ak7067:ba7067].Copy
d.[ak7067:ba7166].PasteSpecial Paste:=xlPasteFormulas
d.[be7067:bu7067].Copy
d.[be7067:bu7166].PasteSpecial Paste:=xlPasteFormulas
d.[da7067:dl7067].Copy
d.[da7067:dl7166].PasteSpecial Paste:=xlPasteFormulas
d.[dp7067:ea7067].Copy
d.[dp7067:ea7166].PasteSpecial Paste:=xlPasteFormulas
d.Calculate
v = 35
d.Range("aj7067:bb" & 7166).Sort key1:=d.Cells(7067, v + 3), order1:=xlAscending, Key2:=d.Cells(7067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
v = 55
d.Range("bd7067:bv" & 7166).Sort key1:=d.Cells(7067, v + 3), order1:=xlAscending, Key2:=d.Cells(7067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
d.[aj6067:bb6166].Value = d.[aj7067:bb7166].Value
d.[bd6067:bv6166].Value = d.[bd7067:bv7166].Value
With Rangliste
If Sheets("plan").[f47] = 0 Then
.ListBox1.ColumnWidths = "28 Pt;156 Pt;40,0 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;28 Pt"
.ListBox2.ColumnWidths = "28 Pt;156 Pt;40,0 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;28 Pt"
.ueb1_3.Caption = "Punkte"
.ueb2_3.Caption = "Punkte"
Else
.ListBox1.ColumnWidths = "28 Pt;146 Pt;50,0 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;28 Pt"
.ListBox2.ColumnWidths = "28 Pt;146 Pt;50,0 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;28 Pt"
.ueb1_3.Caption = "Pkt. [Q]"
.ueb2_3.Caption = "Pkt. [Q]"
End If
anzmsp = [b6] + 1
.ListBox1.RowSource = "data!am6067:ba" & 6066 + anzmsp
.ListBox2.RowSource = "data!bg6067:bu" & 6066 + anzmsp
.ListBox4.RowSource = "data!dc7067:dl" & 7066 + anzmsp
.ListBox5.RowSource = "data!dr7067:ea" & 7066 + anzmsp
.ComboBox1.RowSource = "data!bc7064:bc7066"
.ComboBox2.RowSource = "data!bc7064:bc7066"
.ComboBox1.ListIndex = Sheets("zusatztipps").[b209].Value - 1
.ComboBox2.ListIndex = Sheets("zusatztipps").[b218].Value - 1
.ComboBox4.RowSource = "data!bc7064:bc7066"
.ComboBox5.RowSource = "data!bc7064:bc7066"
.ComboBox4.ListIndex = Sheets("data").[da7065].Value - 1
.ComboBox5.ListIndex = Sheets("data").[dp7065].Value - 1
.ComboBox6.RowSource = "data!ad7067:ad7069"
.ComboBox7.RowSource = "data!ad7067:ad7069"
.ComboBox6.ListIndex = 1
.ComboBox7.ListIndex = 1
.ComboBox8.RowSource = "data!ad7068:ad7069"
.ComboBox9.RowSource = "data!ad7068:ad7069"
.ComboBox8.ListIndex = 0
.ComboBox9.ListIndex = 0
For i = 1 To 6
.Controls("w_" & i).Caption = Sheets("zusatztipps").Cells(177, 14 + i).Value
For j = 1 To 3
.Controls("l" & i & "_" & j).Caption = Sheets("zusatztipps").Cells(170 + j, 14 + i).Value
Next
k = 4
For j = 4 To 6
If Len(Sheets("zusatztipps").Cells(170 + j, 14 + i).Value) > 0 Then
.Controls("l" & i & "_" & k).Caption = Sheets("zusatztipps").Cells(170 + j, 14 + i).Value
k = k + 1
End If
Next
Next
End With
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.CutCopyMode = False
druckform = 1
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Rangliste.Show
working = working_shk
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets("plan").[f32:f34].Value = beste
Call katber
d.[ak7068:ba7166].ClearContents
d.[be7068:bu7166].ClearContents
d.[da7068:dl7166].ClearContents
d.[dp7068:ea7166].ClearContents
Unload Rangliste
Application.CutCopyMode = False
Sheets("zusatztipps").[b209] = [c6]
Sheets("zusatztipps").[c209] = 1
druckform = 0
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
[i7].Select
End Sub
Sub showtagessieger()
aktuelleseite = "Tipps"
If [b6] = 0 Then
aw = MsgBox("Es wurden noch keine Mitspieler eingegeben!", vbOKOnly, "Hinweis")
Exit Sub
End If
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set zt = Sheets("zusatztipps")
Set d = Sheets("data")
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[ft21] = [i5]
[dh117] = [i5]
[df119:ec119].AutoFill Destination:=[df119:ec219]
Sheets("einstellungen").Calculate
Sheets(aktuelleseite).Calculate
Sheets(aktuelleseite).Activate
[dh120:dv219].Value = [dh120:dv219].Value
Range("df120:dv" & 119 + [b6]).Sort key1:=[dh120], order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).Calculate
[dj120:dj219].Value = [dg120:dg219].Value
anz = d.[cz1362]
maxmat = d.[cy1324:cy1361]
indexmat = d.Range(d.Cells(7185, 14), d.Cells(7184 + anz, 15))
pktmat = d.[c1324:cz1361].Value
sortlist = Sheets("tipps").[ca11:cb110].Value
nr = 0
lastspt = 0
For i = 1 To Sheets("plan").[g2]
If maxmat(i, 1) = 0 Then
nr = nr + 1
indexmat(nr, 2) = Null
indexmat(nr, 1) = i
Else
For j = 1 To [b6]
idx = sortlist(j, 1)
If IsError(sortlist(j, 1)) Then GoTo weiter
If pktmat(i, idx) = maxmat(i, 1) Then
nr = nr + 1
indexmat(nr, 1) = i
indexmat(nr, 2) = idx
sortlist(j, 2) = sortlist(j, 2) + 1
weiter:
End If
Next
End If
Next
d.Range(d.Cells(7185, 14), d.Cells(7184 + anz, 15)) = indexmat
d.[a7185:m7185].AutoFill Destination:=d.Range("a7185:m" & 7184 + anz)
d.[t7185].AutoFill Destination:=d.Range("t7185:t" & 7184 + anz)
d.[ab7185].AutoFill Destination:=d.Range("ab7185:ab" & 7184 + anz)
Sheets(aktuelleseite).Activate
With UserForm9
If Sheets("plan").[f47] = 0 Then
.ListBox6.ColumnWidths = "22 Pt;185 Pt;44,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt"
Else
.ListBox6.ColumnWidths = "22 Pt;175 Pt;54,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt;22,5 Pt"
End If
.ComboBox1.RowSource = "tipps!A8:A" & 7 + Sheets("plan").[g2]
.ListBox6.RowSource = "tipps!dj120:dv" & 119 + anz
End With
d.[aj7185:ak7284].Value = sortlist
d.Calculate
d.[aj7185:ak7284].Sort key1:=d.[ak7185], order1:=xlDescending, header:=xlNo, MatchCase:=False
d.Calculate
With UserForm9
For i = 1 To 6
If i < 5 Then .Controls("hr" & i).Caption = d.Cells(7185 + i, 31).Value
If i < 5 Then .Controls("rr" & i).Caption = d.Cells(7185 + i, 32).Value
.Controls("ges" & i).Caption = d.Cells(7185 + i, 33).Value
.Controls("most" & i).Caption = d.Cells(7184 + i, 38).Value
Next
End With
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.CutCopyMode = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm9.Show
working = working_shk
Unload UserForm9
Application.CutCopyMode = False
Application.ScreenUpdating = False
Application.EnableEvents = False
d.Range("a7186:m" & 7184 + anz).Clear
d.Range("t7186:t" & 7184 + anz).Clear
d.Range("ab7186:ab" & 7184 + anz).Clear
[dg120:ec219].ClearContents
[fq23:gs31].Clear
[fb122:fq220].Clear
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.Calculation = xlCalculationAutomatic
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
[i7].Select
End Sub
Sub mitspieler()
aktuelleseite = "Tipps"
working_shk = working
working = True
Application.ScreenUpdating = False
Application.EnableEvents = False
'Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
oldanz = [b6]
einz = [de11:df110].Value
[cc11:eh11].AutoFill Destination:=[cc11:eh110]
[de11:df110].Value = einz
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).ComboBox1.ListIndex = -1
Sheets(aktuelleseite).ComboBox1.ListFillRange = ""
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.ComboBox1.ListIndex = -1
.ComboBox1.ListFillRange = ""
End With
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm10.Show
working = working_shk
anz = [b6]
Unload UserForm10
Application.CutCopyMode = False
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Set d = Sheets("data")
d.[cy2:db4].AutoFill Destination:=d.[cy2:db1141]
d.[cy1935:da1935].AutoFill Destination:=d.[cy1935:da2315]
d.Calculate
d.[cy1936:da2315].Value = d.[cy1936:da2315].Value
d.[cy3:db1141].ClearContents
Sheets(aktuelleseite).Activate
Call katber
[i5] = [i6]
anzspt = Sheets("plan").[h2]
spt = [i6]
za = (spt - 1) * 3 * anzspt + 2
ze = (za - 1) + 3 * anzspt
[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
[as11:bx11].EntireColumn.Hidden = False
Range("AS11:BX110").Sort key1:=Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
[as11:bx11].EntireColumn.Hidden = True
Sheets(aktuelleseite).Calculate
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[j8:al8].Value = [j4:al4].Value
[aq11:aq110].Value = [bw11:bw110].Value
Sheets("zusatztipps").[b209] = [c6]
[i7].Select
Application.CutCopyMode = False
If anz > 0 Then
Sheets(aktuelleseite).ComboBox1.ListFillRange = "tipps!$BY$11:$BY$" & 10 + anz
Sheets("zusatztipps").ComboBox1.ListFillRange = "zusatztipps!$B$67:$B$" & 66 + anz
Else
Sheets(aktuelleseite).ComboBox1.ListFillRange = ""
Sheets("zusatztipps").ComboBox1.ListFillRange = ""
End If
Sheets(aktuelleseite).Calculate
einz = [de11:df110].Value
[cc12:eh110].Value = [cc12:eh110].Value
[de11:df110].Value = einz
If oldanz <> [b6] Then
With Sheets("data")
.[d7018:cx7028].ClearContents
If [b6] > 1 Then .[c7018:c7028].AutoFill Destination:=.Range(.Cells(7018, 3), .Cells(7028, 2 + [b6]))
End With
Sheets(aktuelleseite).Activate
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Call fuellen
Call tageseinsatz
Application.CutCopyMode = False
[i7].Select
End Sub
Sub spielplan()
aktuelleseite = "Tipps"
Application.ScreenUpdating = False
Set lt = Sheets("ligatabelle")
With UserForm13
If [i6] > Sheets("plan").[g2] / 2 Then
.CheckBox3.Value = False
Else
lt.[cm1] = 1
End If
If lt.[cx1] > [b6] Then lt.[cx1] = 1
If [b6] = 0 Then
.ComboBox1.Enabled = False
lt.[cx1] = 0
Else
.ComboBox1.RowSource = "tipps!by11:by" & 10 + [b6]
If lt.[cx1] > 0 Then
.ComboBox1.ListIndex = lt.[cx1] - 1
.CheckBox2.Value = True
End If
End If
.ListBox1.RowSource = "ligatabelle!cn3:cx" & 2 + lt.[cm2]
.CheckBox1.Value = lt.[cz2]
End With
lt.[cn3:cz3].AutoFill Destination:=lt.Range("cn3:cz" & 2 + Sheets("plan").[t1] * 2)
Application.CutCopyMode = False
Application.ScreenUpdating = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Sheets(aktuelleseite).Activate
UserForm13.Show
working = working_shk
Unload UserForm13
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.ScreenUpdating = False
lt.[cn4:cy385].ClearContents
With Sheets("spielplan")
.[b16:bu63].ClearContents
.[k4:aj14].ClearContents
.[au4:bu14].ClearContents
End With
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.CutCopyMode = False
End Sub
Sub import()
aktuelleseite = "Tipps"
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets(aktuelleseite).ComboBox1.ListIndex = -1
Sheets(aktuelleseite).ComboBox1.ListFillRange = ""
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.ComboBox1.ListIndex = -1
.ComboBox1.ListFillRange = ""
End With
einz = Sheets(aktuelleseite).[de11:df110].Value
Sheets(aktuelleseite).[cc11:eh11].AutoFill Destination:=Sheets(aktuelleseite).[cc11:eh110]
Sheets(aktuelleseite).[de11:df110].Value = einz
oldanz = Sheets(aktuelleseite).[b6]
Sheets(aktuelleseite).Activate
Set lt = Sheets("ligatabelle")
With UserForm14
oldtab = lt.[cm1]
oldidx = lt.[cx1]
lt.[cm1] = 3
lt.[cx1] = lt.[db2]
lt.[cz1] = 1
End With
With Sheets("auswertung")
.[g2:h2].AutoFill Destination:=.[g2:h382]
.[l3:n17].AutoFill Destination:=.[l3:n572]
.[k2].AutoFill Destination:=.[k2:k382]
End With
Sheets(aktuelleseite).Activate
lt.[cn3:cz3].AutoFill Destination:=lt.Range("cn3:cz" & 2 + Sheets("plan").[t1] * 2)
lt.[df3:df3].AutoFill Destination:=lt.Range("df3:df40")
lt.[de3].AutoFill Destination:=lt.[de3:de382]
lt.[db3].AutoFill Destination:=lt.[db3:db40]
Sheets(aktuelleseite).Activate
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm14.Show
working = working_shk
Application.CutCopyMode = False
If UserForm14.Tag = "all" Then aw = MsgBox("Importvorgang beendet. Alle Daten wurden |fffd|bertragen." & Chr(13) & "Der Zustand der Ausgangsdatei wurde erfolgreich hergestellt.", vbOKOnly, "Vorgang abgeschlossen")
If Len(Sheets(aktuelleseite).[d1].Value) > 0 Then Workbooks(Sheets(aktuelleseite).[d1].Value).Close (False)
Sheets(aktuelleseite).[d1].ClearContents
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.ScreenUpdating = False
lt.[cn4:cy385].ClearContents
lt.[df4:df40].ClearContents
lt.[de4:de382].ClearContents
lt.[db4:db40].ClearContents
lt.[cm1] = oldtab
lt.[cx1] = oldidx
Application.CutCopyMode = False
With Sheets("auswertung")
.[g3:h382].ClearContents
.[l18:n572].ClearContents
.[k3:k382].ClearContents
End With
Set d = Sheets("data")
If oldanz = 0 And [b6] > 1 Then
d.Range(d.Cells(1178, 3), d.Cells(1361, 3)).AutoFill Destination:=d.Range(d.Cells(1178, 3), d.Cells(1361, [b6] + 2))
d.Range(d.Cells(2318, 3), d.Cells(2395, 3)).AutoFill Destination:=d.Range(d.Cells(2318, 3), d.Cells(2395, [b6] + 2))
ElseIf Sheets(aktuelleseite).[b6] > oldanz And oldanz > 0 Then
d.Range(d.Cells(1178, oldanz + 2), d.Cells(1361, oldanz + 2)).AutoFill Destination:=d.Range(d.Cells(1178, oldanz + 2), d.Cells(1361, [b6] + 2))
d.Range(d.Cells(2318, oldanz + 2), d.Cells(2395, oldanz + 2)).AutoFill Destination:=d.Range(d.Cells(2318, oldanz + 2), d.Cells(2395, [b6] + 2))
ElseIf Sheets(aktuelleseite).[b6] < oldanz And [b6] > 0 Then
d.Range(d.Cells(1178, [b6] + 3), d.Cells(1361, oldanz + 2)).ClearContents
d.Range(d.Cells(2318, [b6] + 3), d.Cells(2395, oldanz + 2)).ClearContents
ElseIf Sheets(aktuelleseite).[b6] = 0 And oldanz > 1 Then
d.Range(d.Cells(1178, 4), d.Cells(1361, oldanz + 2)).ClearContents
d.Range(d.Cells(2318, 4), d.Cells(2395, oldanz + 2)).ClearContents
End If
Application.CutCopyMode = False
Sheets(aktuelleseite).Activate
If oldanz <> Sheets(aktuelleseite).[b6] Then
With Sheets("data")
.[d7018:cx7028].ClearContents
If Sheets(aktuelleseite).[b6] > 1 Then .[c7018:c7028].AutoFill Destination:=.Range(.Cells(7018, 3), .Cells(7028, 2 + [b6]))
End With
End If
Sheets(aktuelleseite).Activate
d.[cy2:db4].AutoFill Destination:=d.[cy2:db1141]
d.[cy1935:da1935].AutoFill Destination:=d.[cy1935:da2315]
d.Calculate
d.[cy1936:da2315].Value = d.[cy1936:da2315].Value
d.[cy3:db1141].ClearContents
Application.CutCopyMode = False
Sheets(aktuelleseite).Activate
Call katber
ppspt = Sheets("plan").[h2]
spt = Sheets(aktuelleseite).[i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
Sheets(aktuelleseite).[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
Sheets(aktuelleseite).Calculate
Sheets(aktuelleseite).[j8:al8].Value = Sheets(aktuelleseite).[j4:al4].Value
[as11:bx11].EntireColumn.Hidden = False
Sheets(aktuelleseite).Range("AS11:BX110").Sort key1:=Sheets(aktuelleseite).Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).[as11:bx11].EntireColumn.Hidden = True
Application.CutCopyMode = False
For i = 1 To 10
Sheets(aktuelleseite).Range(Sheets(aktuelleseite).Cells(11, (i - 1) * 3 + 10), Sheets(aktuelleseite).Cells(110, (i - 1) * 3 + 11)).Value = Sheets(aktuelleseite).Range(Sheets(aktuelleseite).Cells(11, (i - 1) * 3 + 45), Sheets(aktuelleseite).Cells(110, (i - 1) * 3 + 46)).Value
Next
Sheets(aktuelleseite).[aq11:aq110].Value = Sheets(aktuelleseite).[bw11:bw110].Value
Sheets(aktuelleseite).Calculate
einz = Sheets(aktuelleseite).[de11:df110].Value
Sheets(aktuelleseite).[cc12:eh110].Value = Sheets(aktuelleseite).[cc12:eh110].Value
Sheets(aktuelleseite).[de11:df110].Value = einz
Sheets(aktuelleseite).[ar9] = 1
anz = Sheets(aktuelleseite).[b6]
Application.CutCopyMode = False
If anz > 0 Then
Sheets(aktuelleseite).ComboBox1.ListFillRange = "tipps!$BY$11:$BY$" & 10 + anz
Sheets("zusatztipps").ComboBox1.ListFillRange = "zusatztipps!$B$67:$B$" & 66 + anz
Else
Sheets(aktuelleseite).ComboBox1.ListFillRange = ""
Sheets("zusatztipps").ComboBox1.ListFillRange = ""
End If
Sheets(aktuelleseite).[cc12:eh110].Value = Sheets(aktuelleseite).[cc12:eh110].Value
Application.CutCopyMode = False
Call fuellen
Call tageseinsatz
Application.CutCopyMode = False
With Sheets("einstellungen")
tippab = .[cd3:do102].Value
eins = .[cd105:do204].Value
For i = 1 To 100
For j = 1 To 38
If tippab(i, j) = 0 Then eins(i, j) = Null
Next
Next
.[cd105:do204].Value = eins
End With
Application.CutCopyMode = False
Sheets("zusatztipps").Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets(aktuelleseite).Range("E9").Comment.Visible = False
Sheets(aktuelleseite).Range("E9").Comment.Text Text:=[e4].Value
Sheets(aktuelleseite).Range("f10").Comment.Visible = False
Sheets(aktuelleseite).Range("f10").Comment.Text Text:=Sheets(aktuelleseite).[e5].Value
Sheets(aktuelleseite).Range("h10").Comment.Visible = False
Sheets(aktuelleseite).Range("h10").Comment.Text Text:=[e6].Value
Application.CutCopyMode = False
Application.EnableEvents = True
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If Sheets("einstellungen").[n1] And oldanz <> Sheets(aktuelleseite).[b6] Then
[a1].Select
z = 1
Call calczoom(z)
ActiveWindow.Zoom = Int(z * 100)
End If
Unload UserForm14
Application.CutCopyMode = False
Sheets(aktuelleseite).[i7].Select
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
startwert = True
atwork = 0

End Sub
Sub loeschen()
aktuelleseite = "Tipps"
Application.ScreenUpdating = False
UserForm24.CheckBox4.Caption = "Tipps von Spieltag " & [i5]
UserForm24.CheckBox9.Caption = "Ergebnisse von Spieltag " & [i5]
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.ScreenUpdating = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm24.Show
working = working_shk
Application.CutCopyMode = False
If UserForm24.Tag = "new" Then
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Set d = Sheets("data")
d.Calculate
d.[cy2:db4].AutoFill Destination:=d.[cy2:db1141]
d.[cy1935:da1935].AutoFill Destination:=d.[cy1935:da2315]
d.Calculate
d.[cy1936:da2315].Value = d.[cy1936:da2315].Value
d.[cy3:db1141].ClearContents
Application.CutCopyMode = False
Sheets(aktuelleseite).Activate
Call katber
Application.CutCopyMode = False
ppspt = Sheets("plan").[h2]
spt = [i6]
za = (spt - 1) * 3 * ppspt + 2
ze = (za - 1) + 3 * ppspt
[as11:bv110].ClearContents
d.Range(d.Cells(za, 3), d.Cells(ze, 102)).Copy
[as11].PasteSpecial Paste:=xlPasteValues, Transpose:=True
Sheets(aktuelleseite).Calculate
[as11:bx11].EntireColumn.Hidden = False
Range("AS11:BX110").Sort key1:=Range("BX11"), order1:=xlAscending, header:=xlNo, MatchCase:=False
[as11:bx11].EntireColumn.Hidden = True
For i = 1 To 10
Range(Cells(11, (i - 1) * 3 + 10), Cells(110, (i - 1) * 3 + 11)).Value = Range(Cells(11, (i - 1) * 3 + 45), Cells(110, (i - 1) * 3 + 46)).Value
Next
[aq11:aq110].Value = [bw11:bw110].Value
einz = [de11:df110].Value
[cc11:eh11].AutoFill Destination:=[cc11:eh110]
Application.CutCopyMode = False
Sheets(aktuelleseite).Calculate
[cc12:eh110].Value = [cc12:eh110].Value
[de11:df110].Value = einz
End If
Sheets(aktuelleseite).Activate
Unload UserForm24
Application.CutCopyMode = False
Call fuellen
Call tageseinsatz
Application.CutCopyMode = False
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
[i7].Select
End Sub
Sub drucken()
aktuelleseite = "Tipps"
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
cbtop = ComboBox2.Top
cbleft = ComboBox2.Left
cbwidth = ComboBox2.Width
cbheight = ComboBox2.Height
Set h = Sheets("html")
With UserForm26
If [b6] < 51 Then
.CheckBox1.Enabled = False
.CheckBox1.Value = False
Else
.CheckBox1.Value = h.[b62]
End If
.ComboBox1.RowSource = "html!a1011:a1110"
.ComboBox6.RowSource = "html!a1011:a1110"
If [b6] > 0 Then
.ComboBox2.RowSource = "html!a1011:c" & [b6] + 1010
Else
.ComboBox2.RowSource = "html!a1011:a1011"
.ComboBox2.Enabled = False
End If
If Len(h.[b40]) > 0 And Val(h.[b40]) < [b6] Then
.ComboBox2.ListIndex = h.[b40]
ElseIf [b6] > 0 Then
.ComboBox2.ListIndex = [b6] - 1
Else
.ComboBox2.ListIndex = 0
End If
oldpath = CurDir
If Len(h.[b55]) > 0 Then
On Error GoTo weiter
datei = Dir(h.[b55])
If datei <> "" Then
If Dir(h.[b56]) <> "" Then UserForm26.Tag = h.[b56]
End If
End If
weiter:
Dir (oldpath)
On Error GoTo wrongpath
If Len(h.[b39]) > 0 Then
datei = Dir(h.[b39])
If datei <> "" Then ChDir (h.[b39])
End If
wrongpath:
End With
Sheets("html").[b1011:aq1110].Value = [b11:aq110].Value
Sheets("druck").[en323:ew326].Value = Sheets("druck").[en559:ew562].Value
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
druckform = 1
Cells(111, 1).RowHeight = 11.5
Application.CutCopyMode = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm26.Show
working = working_shk
Unload UserForm26
Application.CutCopyMode = False
Cells(111, 1).RowHeight = 22
Sheets("druck").[en200:fa556].ClearContents
ChDir oldpath
ComboBox2.Width = cbwidth
ComboBox2.Height = cbheight
ComboBox2.Top = cbtop
ComboBox2.Left = cbleft
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[i7].Select
Application.CutCopyMode = False
druckform = 0
End Sub
Sub askzuf()
aktuelleseite = "Tipps"
Application.EnableEvents = False
If [af2] Then
aw = MsgBox("Zufallstipps werden nun ohne vorherige Best|fffd|tigung erzeugt.", vbOKOnly, "Zufallstipps: Best|fffd|tigung deaktiviert")
[af2] = False
Sheets(aktuelleseite).Shapes("redon").Visible = False
Sheets(aktuelleseite).Shapes("redoff").Visible = True
Else
aw = MsgBox("Das Generieren der Zufallstipps muss nun best|fffd|tigt werden.", vbOKOnly, "Zufallstipps: Best|fffd|tigung aktiviert")
[af2] = True
Sheets(aktuelleseite).Shapes("redon").Visible = True
Sheets(aktuelleseite).Shapes("redoff").Visible = False
End If
Application.EnableEvents = True
Application.CutCopyMode = False
[i7].Select
End Sub
Sub zufallserg()
aktuelleseite = "Tipps"
If [af2] Then
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm28.Show
working = working_shk
If UserForm28.Tag <> "OK" Then
Unload UserForm28
Application.CutCopyMode = False
Exit Sub
Else
If UserForm28.CheckBox1 Then
[af2] = False
Sheets(aktuelleseite).Shapes("redon").Visible = False
Sheets(aktuelleseite).Shapes("redoff").Visible = True
End If
Unload UserForm28
Application.CutCopyMode = False
End If
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
anz = [b6]
If anz > 0 Then
joker = Range(Cells(11, 43), Cells(10 + anz, 43)).Value
For j = 1 To Sheets("plan").[h2]
tipps = Range(Cells(11, j * 3 + 7), Cells(10 + anz, j * 3 + 8))
For i = 1 To anz
z = i + 10
If Len(tipps(i, 1)) = 0 Or Len(tipps(i, 2)) = 0 Then
tipps(i, 1) = Int(Rnd() * 5)
Randomize
tipps(i, 2) = Int(Rnd() * 4)
If Sheets("plan").[f46] = 1 And j = 1 Then joker(i, 1) = Int(Rnd() * Sheets("plan").[h2]) + 1
End If
Next
Range(Cells(11, j * 3 + 7), Cells(10 + anz, j * 3 + 8)) = tipps
Next
If Sheets("plan").[f46] = 1 Then Range(Cells(11, 43), Cells(10 + anz, 43)).Value = joker
End If
If [ao4] = 0 Then
For j = 1 To Sheets("plan").[h2]
ht = Int(Rnd() * 5)
Randomize
at = Int(Rnd() * 4)
Cells(8, j * 3 + 7) = ht
Cells(8, j * 3 + 8) = at
Next
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[i7].Select
Application.CutCopyMode = False
End Sub
Sub showeinz()
aktuelleseite = "Tipps"
aw = MsgBox("Soll die Spalte mit den Informationen |fffd|ber die Einzahlung des Einsatzes eingeblendet werden?", vbYesNo, "Bitte best|fffd|tigen")
If aw <> 6 Then Exit Sub
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[an1:ao1].EntireColumn.Hidden = False
Sheets(aktuelleseite).Shapes("show").Visible = False
Sheets(aktuelleseite).Shapes("hide").Visible = True
If Sheets("einstellungen").[n1] Then
[e9:ap9].Select
ActiveWindow.Zoom = True
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
[i7].Select
End Sub
Sub hideeinz()
aktuelleseite = "Tipps"
aw = MsgBox("Soll die Spalte mit den Informationen |fffd|ber die Einzahlung des Einsatzes ausgeblendet werden?", vbYesNo, "Bitte best|fffd|tigen")
If aw <> 6 Then Exit Sub
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[an1:ao1].EntireColumn.Hidden = True
Sheets(aktuelleseite).Shapes("show").Visible = True
Sheets(aktuelleseite).Shapes("hide").Visible = False
If Sheets("einstellungen").[n1] Then
[e9:ap9].Select
ActiveWindow.Zoom = True
End If
Application.CutCopyMode = False
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
[i7].Select
End Sub

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox1, 6, 0, MSForms, ComboBox"
Attribute VB_Control = "nav, 7, 1, MSForms, ComboBox"
Private Sub nav_Change()
If nav.ListIndex = -1 Then Exit Sub
blatt = nav.Value
idx = nav.ListIndex
gespeichert = ThisWorkbook.Saved = True
If nav.ListIndex < 5 Then
[a1].Select
If Len(blatt) = 0 Then Exit Sub
If blatt = Sheets(aktuelleseite).Name Then Exit Sub
If Sheets(blatt).Visible = True Then
Sheets(blatt).Select
Else
[a1].Select
End If
Else
[a1].Select
If idx = 5 Then
ThisWorkbook.Save
gespeichert = True
ElseIf idx = 6 Then
gespeichert = Application.Dialogs(xlDialogSaveAs).Show
ElseIf idx = 7 Then
On Error Resume Next
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
Application.CommandBars("Reviewing").Enabled = True
GoTo ende
End If
End If
ThisWorkbook.Saved = gespeichert
Exit Sub
ende:
ThisWorkbook.Close (False)
End Sub
Private Sub nav_LostFocus()
nav.ListIndex = -1
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
wshk = working
sshk = startwert
If Sheets(aktuelleseite).Name <> "Zusatztipps" Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
aktuelleseite = "Zusatztipps"
cbw = ComboBox1.Width
cbh = ComboBox1.Height
Cells(5, ComboBox1.ListIndex * 2 + 7).Select
Cells(5, ComboBox1.ListIndex * 2 + 5).Select
ComboBox1.ListIndex = -1
ComboBox1.Height = 13.5
ComboBox1.Width = 13.5
working = wshk
startwert = sshk
End Sub
Private Sub Worksheet_Activate()
If Len(ThisWorkbook.Sheets("data").[dd1].Value) > 0 Then
ThisWorkbook.Sheets("data").[dd1].ClearContents
working = False
startwert = True
End If
If Not startwert Or working = True Then Exit Sub
If Sheets("einstellungen").[n1] Then
[a1].Select
z = 1
Call calczoom(z)
ActiveWindow.Zoom = Int(z * 100)
End If
[a1].Select
aktuelleseite = "Zusatztipps"
working = False
startwert = True
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
If Not startwert Or working = True Then Exit Sub
Cancel = True
If Sheets(aktuelleseite).Name <> "Zusatztipps" Then Exit Sub
aktuelleseite = "Zusatztipps"
s = Target(1, 1).Column
If s Mod 2 = 0 Then s = s - 1
z = Target(1, 1).Row
If z = 5 And Cells(4, s + 1) <> 101 Then
aw = MsgBox("Alle Tipps l|fffd|schen", vbYesNo, Cells(z, s))
If aw = 6 Then
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
idx = Cells(4, s + 1)
Range(Cells(67, 3 + idx), Cells(106, 3 + idx)).ClearContents
Range(Cells(7, s), Cells(47, s + 1)).ClearContents
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Exit Sub
End If
If Cells(z, 3) <> 1 Then Exit Sub
If s < 5 Or Cells(4, s + 1) = 101 Then Exit Sub
With UserForm3
.ListBox1.RowSource = "zusatztipps!a2:a" & [b1] + 1
.Caption = "Zusatztipps von " & Cells(5, s)
nr = Cells(z, 2)
za = (nr - 1) * 7 + 7
For i = 1 To 5
If Cells(za + i - 1, 3) = 0 Then
.Controls("tipp" & i).Enabled = False
.Controls("tipp" & i).Caption = ""
.Controls("tipp" & i).BackColor = &H808080
Else
.Controls("tipp" & i).Enabled = True
.Controls("tipp" & i).Caption = Cells(za + i - 1, s)
.Controls("tipp" & i).BackColor = &HFFFFC0
If IsNumeric(Cells(za + i - 1, s)) Then .Controls("tipp" & i).Caption = ""
End If
If i <> 5 Then .Controls("ueb" & i).Caption = Cells(za + i - 1, 4).Value
If i = 3 Then
If Cells(za + i - 1, 4) = 1 Then
.Controls("ueb" & i).Caption = "zu tippen: " & .Controls("ueb" & i).Caption & " Team"
Else
.Controls("ueb" & i).Caption = "zu tippen: " & .Controls("ueb" & i).Caption & " Teams"
End If
End If
If i = 4 Then .Controls("ueb" & i).Caption = Cells(za + i - 1, 4).Value & " " & Cells(za + i, 4).Value
Next
End With
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm3.Show
working = working_shk
If UserForm3.Tag = "ok" Then
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets(aktuelleseite).Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
sa = Cells(4, s + 1) + 3
For i = 1 To 5
Cells(za + i + 59, sa).Value = UserForm3.Controls("tipp" & i).Caption
Cells(za + i - 1, s).Value = UserForm3.Controls("tipp" & i).Caption
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Range(Cells(za, s + 1), Cells(za + 5, s + 1)).Value = Range(Cells(za + 104, sa), Cells(za + 109, sa)).Value
End If
Sheets(aktuelleseite).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
Unload UserForm3
Cells(5, s).Select
End Sub
Sub drucken()
aktuelleseite = "Zusatztipps"
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm27.Show
working = working_shk
Unload UserForm27
Application.CutCopyMode = False
[d48].Select
End Sub
Sub aktstand()
If [h168] = 0 Then Exit Sub
If [hg188] > Sheets("tipps").[b6] Then [hg188] = Sheets("tipps").[b6]
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
aktuelleseite = "Zusatztipps"
For i = 1 To 6
If Len(Cells(169, i + 8)) > 0 Then
nr = nr + 1
z = (nr - 1) * 10 + 234
Cells(z, 210) = i
Cells(z, 211) = Cells((i - 1) * 7 + 190, 211).Value
Cells(z + 1, 210) = Cells((i - 1) * 7 + 191, 211).Value
z = z + 3
anzt = Cells(172, 8 + i).Value
Range(Cells(z, 210), Cells(z + 4, 213)).ClearContents
Range(Cells(z, 210), Cells(z - 1 + anzt, 211)).Value = Range(Cells((i - 1) * 7 + 192, 210), Cells((i - 1) * 7 + 191 + anzt, 211)).Value
Range(Cells(z, 212), Cells(z - 1 + anzt, 213)).Value = Range(Cells((i - 1) * 7 + 192, 215), Cells((i - 1) * 7 + 191 + anzt, 216)).Value
zuserg.Controls("ueb_" & nr & "_1").Caption = Cells((i - 1) * 7 + 190, 211).Value
zuserg.Controls("ueb_" & nr & "_2").Caption = Cells((i - 1) * 7 + 191, 211).Value
zuserg.Controls("zt" & nr).Caption = "#" & i
zuserg.Controls("listbox" & nr).RowSource = "Zusatztipps!HB" & z & ":he" & z + 5
End If
Next
If Sheets("tipps").[b6].Value = 0 Then
zuserg.ComboBox1.Enabled = False
Else
zuserg.ComboBox1.RowSource = "zusatztipps!b67:b" & 66 + Sheets("tipps").[b6].Value
zuserg.ComboBox1.ListIndex = [hg188] - 1
End If
Sheets(aktuelleseite).Calculate
Application.ScreenUpdating = True
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
zuserg.Show
working = working_shk
Unload zuserg
Application.Calculation = xlCalculationAutomatic
End Sub

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{7BD2305A-7BFA-4D48-9B24-2AC7E04F2EAF}{CF37DA51-5494-4E96-BA92-A0EA8DB9A77A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, oldplan As Integer, newplan As Integer
Private Sub CheckBox1_Click()
If CheckBox1 Or CheckBox2 Or CheckBox3 Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CheckBox2_Click()
If CheckBox1 Or CheckBox2 Or CheckBox3 Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CheckBox3_Click()
If CheckBox1 Or CheckBox2 Or CheckBox3 Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CheckBox4_Click()
Sheets("plan").[i2] = CheckBox4.Value
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
If ComboBox1.ListIndex = 4 Then
CommandButton1.Enabled = True
CommandButton1.SetFocus
Else
CommandButton1.Enabled = False
CommandButton2.SetFocus
End If
Set p = Sheets("plan")
If p.[i21] <> ComboBox1.ListIndex + 1 Then
p.Range(p.Cells(29, p.[i21] + 59), p.Cells(48, p.[i21] + 59)).Value = p.[be29:be48].Value
p.[be29:be48].Value = p.Range(p.Cells(29, ComboBox1.ListIndex + 60), p.Cells(48, ComboBox1.ListIndex + 60)).Value
p.[i21] = ComboBox1.ListIndex + 1
End If
newplan = ComboBox1.ListIndex + 1
CheckBox4.Enabled = ComboBox1.ListIndex = 8
CheckBox4.Value = p.[i3]
End Sub
Private Sub CommandButton1_Click()
Set p = Sheets("plan")
liga = 5
oldanz = p.[e1]
p.[e1] = 18
p.[n10004:n10029].Value = p.[n4:n29].Value
With plan_s
For i = 1 To 9
.Controls("label" & (i - 1) * 2 + 1).Caption = p.Cells(i + 3, 14)
.Controls("label" & i * 2).Caption = p.Cells(i + 17, 14)
.Controls("label" & Format((i - 1) * 2 + 25, "0")).Caption = p.Cells(i + 2, 25)
.Controls("label" & Format(i * 2 + 24, "0")).Caption = p.Cells(i + 2, 26)
.Controls("label" & Format((i - 1) * 2 + 90, "0")).Caption = p.Cells(i + 43, 27)
.Controls("label" & Format(i * 2 + 89, "0")).Caption = p.Cells(i + 43, 28)
If i > p.[h2] Then
.Controls("label" & (i - 1) * 2 + 1).Enabled = False
.Controls("label" & i * 2).Enabled = False
Else
.Controls("label" & (i - 1) * 2 + 1).Enabled = True
.Controls("label" & i * 2).Enabled = True
End If
Next
.ListBox1.RowSource = "plan!e2:e" & 1 + p.[e1]
End With
UserForm1.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
plan_s.Show
working = working_shk
If plan_s.Tag = "OK" Then

Else
p.[e1] = oldanz
p.[n4:n29].Value = p.[n10004:n10029].Value
End If
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm1.Show
working = working_shk
Unload plan_s
Application.CutCopyMode = False
End Sub
Private Sub CommandButton2_Click()
Set p = Sheets("plan")
Set ss = Sheets("spielplaene")
liga = ComboBox1.ListIndex + 1
nr = UserForm1.ComboBox1.ListIndex + 1
If nr = 0 Then Exit Sub
oldanz = p.[e1]
p.[e1] = p.Cells(nr + 21, 9)
With plan_k
End With
If p.[ad1] > 0 And oldplan <> 5 And liga <> oldplan Then
aw = MsgBox("Soll eine Sicherungskopie des zuletzt f|fffd|r die Ligagr|fffd||fffd|e mit " & p.Cells(oldplan + 21, 8) & " editierten Spielplans erstellt werden? Eine bereits vorhandene Sicherheitskopie dieser Ligagr|fffd||fffd|e wird dabei |fffd|berschrieben." & Chr(13) & Chr(13) & "Sicherheitskopie anlegen?", vbYesNo, "|fffd|nderung der Ligagr|fffd||fffd|e ...")
If aw = 6 Then
ss.Range(ss.Cells(2, oldplan * 2 + 20), ss.Cells(381, oldplan * 2 + 21)).ClearContents
ss.Range(ss.Cells(2, oldplan * 2 + 20), ss.Cells(p.[t1] * 2 + 1, oldplan * 2 + 21)).Value = p.Range("ag3:ah" & p.[t1] * 2 + 2).Value
End If
End If
ss.[an1] = 0
If p.[y16] = 0 And p.[k1] = 1 Then
aw = MsgBox("Vorhandenen Spielplan aus den Schl|fffd|sselzahlen |fffd|bernehmen?", vbYesNo, "Bitte best|fffd|tigen...")
If aw = 6 Then
p.Range("ai3:aj382").ClearContents
p.Range("ai3:aj" & p.[t1] * 2 + 2).Value = p.Range("ae3:af" & p.[t1] * 2 + 2).Value
End If
End If
p.[ai3:aj382].Value = ss.[an2:ao381].Value
UserForm1.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
plan_k.Show
working = working_shk
If plan_k.Tag = "OK" Then

Else
p.[e1] = oldanz
End If
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm1.Show
working = working_shk
Unload plan_k
Application.CutCopyMode = False
End Sub
Private Sub CommandButton3_Click()
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
atwork = 1
Set d = Sheets("data")
Set l = Sheets("ligatabelle")
Set t = Sheets("tipps")
ppspt = Sheets("plan").[h2]
spphs = Sheets("plan").[t1]
spps = 2 * spphs
anzspt = Sheets("plan").[g2]
anzspths = anzspt / 2
halbserie = t.[fu21]
anz = t.[b6]
If CheckBox1 Then
UserForm1.Tag = "new"
l.Range(l.Cells(2, 3), l.Cells(1 + spphs, 12)).ClearContents
l.[n2:ag21].ClearContents
l.[be2:be21].ClearContents
l.[aq2:aq21].Value = l.[be24:be43].Value
If halbserie = 1 Then
For i = 1 To 10
t.Range(t.Cells(8, i * 3 + 7), t.Cells(8, i * 3 + 8)).ClearContents
Next
End If
If anz > 0 Then
d.Range(d.Cells(1936, 3), d.Cells(1935 + spphs, anz + 2)).Value = 0
d.Range(d.Cells(1364, 3), d.Cells(1363 + 15 * anzspths, anz + 2)).Value = 0
d.Range(d.Cells(1146, 3), d.Cells(1158, anz + 2)).Value = 0
End If
End If
If CheckBox2 Then
UserForm1.Tag = "new"
l.Range(l.Cells(2 + spphs, 3), l.Cells(1 + spps, 12)).ClearContents
l.[n47:ag66].ClearContents
l.[be24:be43].ClearContents
l.[aq2:aq21].Value = l.[be2:be21].Value
If halbserie = 2 Then
For i = 1 To 10
t.Range(t.Cells(8, i * 3 + 7), t.Cells(8, i * 3 + 8)).ClearContents
Next
End If
If anz > 0 Then
d.Range(d.Cells(1936 + spphs, 3), d.Cells(1935 + spps, anz + 2)).Value = 0
d.Range(d.Cells(1364 + 15 * anzspths, 3), d.Cells(1363 + 15 * anzspt, anz + 2)).Value = 0
d.Range(d.Cells(1162, 3), d.Cells(1175, anz + 2)).Value = 0
End If
End If
If CheckBox3 Then
l.[ax2:ax21].ClearContents
End If
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
If UserForm1.Tag = "new" Then aw = MsgBox("Die Daten wurden erfolgreich gel|fffd|scht", vbOKOnly, "Vorgang abgeschlossen")
If Sheets("data").[b1223] > 0 Or Sheets("ligatabelle").[bp30] > 0 Then
Frame3.Enabled = False
Label8.Caption = "Keine Spielplan|fffd|nderungen, wenn Tipps oder Egebnisse vorliegen."
Else
Frame3.Enabled = True
Label8.Caption = "Bei |fffd|nderung der Ligagr|fffd||fffd|e muss ein neuer Spielplan erstellt werden!"
End If
Application.CutCopyMode = False
End Sub
Private Sub CommandButton4_Click()
For i = 1 To 4
UserForm2.Controls("krit" & i).Caption = Sheets("plan").Cells(6 + i, 8).Value
If i <> 4 Then UserForm2.Controls("Checkbox" & i + 4).Value = Sheets("plan").Cells(7 + i, 9).Value
Next
If Sheets("plan").[i12] = 3 Then
UserForm2.OptionButton2.Value = True
Else
UserForm2.OptionButton1.Value = True
End If
UserForm1.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm2.Show
working = working_shk
If Sheets("plan").[i12] = 3 Then
Label4.Caption = "3 Punkte pro Sieg"
Else
Label4.Caption = "2 Punkte pro Sieg"
End If
txt = ""
For i = 1 To 4
If Sheets("plan").Cells(6 + i, 9) <> 0 Then txt = txt & Sheets("plan").Cells(6 + i, 8).Value & Chr(13)
Next
Label6.Caption = txt
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm1.Show
working = working_shk
Unload UserForm2
End Sub
Private Sub CommandButton5_Click()
anzt = Sheets("plan").[e1]
oldpktab = Sheets("ligatabelle").[ax2:ax21].Value
With UserForm8
.ListBox1.RowSource = "plan!e2:e" & 1 + anzt
.ListBox2.RowSource = "ligatabelle!ax2:ax" & 1 + anzt
End With
UserForm1.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm8.Show
working = working_shk
If UserForm8.Tag <> "OK" Then Sheets("ligatabelle").[ax2:ax21].Value = oldpktab
Unload UserForm8
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm1.Show
working = working_shk
End Sub
Private Sub CommandButton6_Click()
UserForm25.ListBox1.RowSource = "plan!e2:e" & 1 + Sheets("plan").[e1]
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm25.Show
working = working_shk
Unload UserForm25
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
oldplan = Sheets("plan").[i21]
working = False
startwert = True
End Sub
Private Sub UserForm_Terminate()
If ComboBox1.ListIndex = -1 Then Exit Sub
nr = newplan
Set p = Sheets("plan")
If p.[e1] <> p.[k2] Then
aw = MsgBox("Eine |fffd|nderung der Ligagr|fffd||fffd|e kann nur erfolgen, wenn der Spielplan entsprechend angepasst wird!" & Chr(13) & Chr(13) & "Wenn die  Ligagr|fffd||fffd|e von " & p.[e1] & " auf " & p.[j21] & " ge|fffd|ndert werden soll, muss nun ein passender Spielplan eingerichtet werden. Antworten Sie mit JA, wenn (vor|fffd|bergehend) ein vorgefertigter Spielplan f|fffd|r " & p.[j21] & " Teams verwendet werden soll. Mit Nein erfolgt keine Umstellung der Ligagr|fffd||fffd|e.", vbYesNo, "Hinweis")
If aw = 6 Then
s = oldplan * 2 - 1
Set ss = Sheets("spielplaene")
ss.Range(ss.Cells(2, s), ss.Cells(381, s + 1)).Value = Sheets("ligatabelle").[a2:b381].Value
s = nr * 2 - 1
Sheets("ligatabelle").[a2:b381].Value = ss.Range(ss.Cells(2, s), ss.Cells(381, s + 1)).Value
p.[e1] = p.[k2]
p.[k1] = 2
anzhs = p.[g2] / 2
anzgs = p.[g2]
p.[f32] = anzhs
p.[f33] = anzhs
p.[f34] = anzgs
aw = MsgBox("Ein g|fffd|ltiger Spielplan wurde erstellt. Geben Sie jedoch erst Tipps und Ergebnisse ein, wenn der korrekte Spielplan ihrer Liga editiert wurde!", vbOKOnly, "Vorgang beendet")
Else
Sheets("plan").[i21] = oldplan
End If
End If
End Sub
Attribute VB_Name = "UserForm10"
Attribute VB_Base = "0{BD41D55F-D8D9-46D9-8738-0022DE356064}{227EDC2A-BA0E-4C2D-8C68-08965F9CED24}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, idx As Integer, aidx As Integer, rr, vr, oldname
Private Sub CheckBox1_Click()
If CheckBox1.Value <> vr Or CheckBox2.Value <> rr Or oldname <> Label1.Caption Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CheckBox2_Click()
If CheckBox1.Value <> vr Or CheckBox2.Value <> rr Or oldname <> Label1.Caption Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CheckBox4_Click()
If CheckBox4 Or CheckBox5 Or CheckBox6 Then
CommandButton5.Enabled = True
Else
CommandButton5.Enabled = False
End If
End Sub
Private Sub CheckBox5_Click()
If CheckBox4 Or CheckBox5 Or CheckBox6 Then
CommandButton5.Enabled = True
Else
CommandButton5.Enabled = False
End If
End Sub
Private Sub CheckBox6_Click()
If CheckBox4 Or CheckBox5 Or CheckBox6 Then
CommandButton5.Enabled = True
Else
CommandButton5.Enabled = False
End If
End Sub
Private Sub CommandButton1_Click()
anz = [b6]
If [aq9] = 2 Then
UserForm11.CheckBox1.Visible = False
UserForm11.CheckBox2.Visible = False
End If
working_shk = working
erneut:
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm11.Show
working = working_shk
If UserForm11.Tag = "OK" Then
newname = UserForm11.TextBox1.Value
vr = UserForm11.CheckBox1.Value
rr = UserForm11.CheckBox2.Value
namen = Range("by11:by" & 10 + [b6]).Value
If anz = 1 Then
If namen = newname Then GoTo doppelt
Else
For i = 1 To [b6]
If namen(i, 1) = newname Then GoTo doppelt
Next
End If
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
If vr Then
Cells([b6] + 11, 109) = 1
Else
Cells([b6] + 11, 109) = 0
End If
If rr Then
Cells([b6] + 11, 110) = 1
Else
Cells([b6] + 11, 110) = 0
End If
Cells([b6] + 11, 78) = newname
Cells([b6] + 11, 77) = newname
Label4.Caption = anz + 1 & " Mitspieler eingetragen"
If anz + 1 = 100 Then CommandButton1.Enabled = False
If CheckBox3.Value = True Then
[by11:by110].Sort key1:=[by11], order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
CommandButton6.Enabled = True
If anz > 0 Then
Set d = Sheets("data")
d.Range(d.Cells(1178, anz + 2), d.Cells(1361, anz + 2)).AutoFill Destination:=d.Range(d.Cells(1178, anz + 2), d.Cells(1361, anz + 3))
d.Range(d.Cells(2318, anz + 2), d.Cells(2395, anz + 2)).AutoFill Destination:=d.Range(d.Cells(2318, anz + 2), d.Cells(2395, anz + 3))
End If
Sheets(aktuelleseite).Activate
ListBox1.ListIndex = -1
ListBox1.RowSource = "tipps!by11:by" & 11 + anz
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
Unload UserForm11
Application.CutCopyMode = False
anz = anz + 1
GoTo erneut
End If
oldname = Null
rr = Null
vr = Null
aidx = 0
idx = 0
CheckBox1.Value = False
CheckBox2.Value = False
Label1.Caption = ""
Unload UserForm11
Application.CutCopyMode = False
Exit Sub
doppelt:
aw = MsgBox("Der Name " & newname & Chr(13) & "wird bereits verwendet!" & Chr(13) & Chr(13) & "Mit 'Wiederholen' k|fffd|nnen Sie einen anderen Namen eingeben.", vbRetryCancel, "Fehler!")
If aw = 4 Then
UserForm11.TextBox1.Value = newname
UserForm11.CheckBox1.Value = vr
UserForm11.CheckBox2.Value = rr
Application.CutCopyMode = False
GoTo erneut
Else
Application.CutCopyMode = False
Unload UserForm11
Exit Sub
End If
End Sub
Private Sub CommandButton2_Click()
If Len(Label1.Caption) = 0 Then Exit Sub
With UserForm12
If [aq9] = 2 Then
sollhr = Sheets("einstellungen").Cells(2 + idx, 120)
sollrr = Sheets("einstellungen").Cells(2 + idx, 121)
isthr = Sheets("einstellungen").Cells(104 + idx, 120)
istrr = Sheets("einstellungen").Cells(104 + idx, 121)
dhr = sollhr - isthr
If dhr < 0 Then dhr = 0
drr = sollrr - istrr
If drr < 0 Then drr = 0
.Label4.Caption = "Vorrunde: Einsatz f|fffd|r " & isthr & " von " & sollhr & " Tippabgaben bezahlt"
.Label5.Caption = "R|fffd|ckrunde: Einsatz f|fffd|r " & istrr & " von " & sollrr & " Tippabgaben bezahlt"
.Frame2.Visible = True
.Frame1.Visible = False
Else
If Not vr Then
.Label2.Caption = "Einsatz f|fffd|r die Vorrunde wurde nicht entrichtet!"
.CheckBox1.Caption = "Der Betrag wird nachtr|fffd|glich eingezahlt"
End If
If Not rr Then
.Label3.Caption = "Einsatz f|fffd|r die R|fffd|ckrunde wurde nicht entrichtet!"
.CheckBox2.Caption = "Der Betrag wird nachtr|fffd|glich eingezahlt"
End If
.Frame1.Visible = True
.Frame2.Visible = False
End If
.Label1.Caption = Label1.Caption
End With
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm12.Show
working = working_shk
If UserForm12.Tag <> "OK" Then
Unload UserForm12
Else
With UserForm12
If [aq9] = 2 Then
sumhr = 0
If .OptionButton2 Then
sumhr = isthr
If .CheckBox3 Then sumhr = sollhr
End If
sumrr = 0
If .OptionButton4 Then
sumrr = istrr
If CheckBox4 Then sumrr = sollrr
End If
[de6] = [de6] + sumhr
[df6] = [df6] + sumrr
Else
If .CheckBox1.Value = True Then [de7] = [de7] + 1
If .CheckBox2.Value = True Then [df7] = [df7] + 1
End If
End With
Unload UserForm12
anz = [b6] - 1
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
With Sheets("data")
If anz > 0 Then
.Range(.Cells(2, idx + 2), .Cells(1175, idx + 2)).Delete Shift:=xlShiftToLeft
.Range(.Cells(1364, idx + 2), .Cells(2315, idx + 2)).Delete Shift:=xlShiftToLeft
.Range(.Cells(1268, idx + 2), .Cells(1281, idx + 2)).Delete Shift:=xlShiftToLeft
.Range(.Cells(2, 102), .Cells(1175, 102)).Insert Shift:=xlShiftToRight
.Range(.Cells(1268, 102), .Cells(1281, 102)).Insert Shift:=xlShiftToRight
.Range(.Cells(1364, 102), .Cells(2315, 102)).Insert Shift:=xlShiftToRight
Else
.Range(.Cells(2, idx + 2), .Cells(1175, anz + 3)).ClearContents
.Range(.Cells(1268, idx + 2), .Cells(1281, anz + 3)).ClearContents
.Range(.Cells(1364, idx + 2), .Cells(2315, anz + 3)).ClearContents
End If
End With
With Sheets("tipps")
.Range(.Cells(10 + idx, 109), .Cells(11 + anz, 110)).Value = .Range(.Cells(11 + idx, 109), .Cells(12 + anz, 110)).Value
.Range(.Cells(10 + aidx, 77), .Cells(11 + anz, 77)).Value = .Range(.Cells(11 + aidx, 77), .Cells(12 + anz, 77)).Value
.Range(.Cells(10 + idx, 78), .Cells(11 + anz, 78)).Value = .Range(.Cells(11 + idx, 78), .Cells(12 + anz, 78)).Value
.Range(.Cells(11 + anz, 77), .Cells(111, 78)).ClearContents
End With
With Sheets("zusatztipps")
Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Range(.Cells(67, idx + 3), .Cells(109, anz + 4)).Value = .Range(.Cells(67, idx + 4), .Cells(109, anz + 5)).Value
End With
With Sheets("einstellungen")
.Range(.Cells(104 + idx, 82), .Cells(204, 119)).Value = .Range(.Cells(105 + idx, 82), .Cells(205, 119)).Value
.[cd204:do204].ClearContents
End With
ListBox1.ListIndex = -1
If anz > 0 Then
ListBox1.RowSource = "tipps!by11:by" & 10 + anz
Else
ListBox1.RowSource = ""
End If
CommandButton1.Enabled = True
CommandButton3.Enabled = False
CommandButton5.Enabled = False
CommandButton2.Enabled = False
CommandButton4.Enabled = False
CommandButton6.Enabled = anz
oldname = Null
rr = Null
vr = Null
aidx = 0
idx = 0
CheckBox1.Value = False
CheckBox2.Value = False
Label1.Caption = ""
Label4.Caption = anz & " Mitspieler eingetragen"
If anz > 0 Then
Set d = Sheets("data")
d.Range(d.Cells(1178, anz + 3), d.Cells(1361, anz + 3)).ClearContents
d.Range(d.Cells(2318, anz + 3), d.Cells(2395, anz + 3)).ClearContents
End If
Application.Calculation = xlCalculationAutomatic
With Sheets("tipps")
.[b6].Formula = "=COUNTA(bz11:bz110)"
.[b7].Formula = "=""Mitspieler ( "" & b6 &"" )"""
.Shapes("mspbutton").Select
Selection.Formula = "$B$7"
End With
End If
Unload UserForm12
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton3_Click()
If Len(Label1.Caption) = 0 Then Exit Sub
If oldname = Label1.Caption And vr = CheckBox1.Value And rr = CheckBox2.Value Then Exit Sub
If CheckBox1.Value Then
Cells(idx + 10, 109) = 1
Else
Cells(idx + 10, 109) = 0
End If
If CheckBox2.Value Then
Cells(idx + 10, 110) = 1
Else
Cells(idx + 10, 110) = 0
End If
If oldname <> Label1.Caption Then
Cells(idx + 10, 78) = Label1.Caption
Cells(aidx + 10, 77) = Label1.Caption
If CheckBox3.Value = True Then
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
[by11:by110].Sort key1:=[by11], order1:=xlAscending, header:=xlNo, MatchCase:=False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End If
End If
oldname = Null
rr = Null
vr = Null
aidx = 0
idx = 0
CheckBox1.Value = False
CheckBox2.Value = False
Label1.Caption = ""
ListBox1.ListIndex = -1
CommandButton3.Enabled = False
CommandButton5.Enabled = False
CommandButton2.Enabled = False
CommandButton4.Enabled = False
Application.CutCopyMode = False
End Sub
Private Sub CommandButton4_Click()
namen = Range("by11:bz" & 10 + [b6]).Value
erneut:
newname = Application.InputBox("Bitte den neuen Namen f|fffd|r" & Chr(13) & Label1.Caption & "  eingeben." & Chr(13) & Chr(13) & "Der neue Name muss anschlie|fffd|end |fffd|ber die Schaltfl|fffd|che  '|fffd|nderungen |fffd|bernehmen'  best|fffd|tigt werden.", "Namen editieren", Label1.Caption)
If newname = False Then Exit Sub
If Len(newname) = 0 Then Exit Sub
For i = 1 To [b6]
If namen(i, 1) = newname And i <> aidx Then
aw = MsgBox("Der Name " & newname & Chr(13) & "wird bereits verwendet!" & Chr(13) & Chr(13) & "Mit 'Wiederholen' k|fffd|nnen Sie einen anderen Namen eingeben.", vbRetryCancel, "Fehler!")
If aw = 4 Then
GoTo erneut
Else
Exit Sub
End If
End If
Next
Label1.Caption = newname
If CheckBox1.Value <> vr Or CheckBox2.Value <> rr Or oldname <> Label1.Caption Then
CommandButton3.Enabled = True
Else
CommandButton3.Enabled = False
End If
End Sub
Private Sub CommandButton5_Click()
If CheckBox4 Or CheckBox5 Or CheckBox6 Then
aw = MsgBox("Die ausgew|fffd|hlten Daten werden unwiderruflich gel|fffd|scht!" & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "L|fffd|schen best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
Else
Exit Sub
End If
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
atwork = 1
Set d = Sheets("data")
ppspt = Sheets("plan").[h2]
spphs = Sheets("plan").[t1]
spps = 2 * spphs
anzspt = Sheets("plan").[g2]
anzspths = anzspt / 2
If CheckBox4 Then
d.Range(d.Cells(2, idx + 2), d.Cells(3 * spphs + 1, idx + 2)).ClearContents
d.Range(d.Cells(1146, idx + 2), d.Cells(1159, idx + 2)).ClearContents
d.Range(d.Cells(1364, idx + 2), d.Cells(15 * anzspths + 1363, idx + 2)).ClearContents
d.Range(d.Cells(1936, idx + 2), d.Cells(spphs + 1935, idx + 2)).ClearContents
End If
If CheckBox5 Then
d.Range(d.Cells(3 * spphs + 2, idx + 2), d.Cells(3 * spps + 1, idx + 2)).ClearContents
d.Range(d.Cells(1162, idx + 2), d.Cells(1175, idx + 2)).ClearContents
d.Range(d.Cells(15 * anzspths + 1364, idx + 2), d.Cells(15 * anzspt + 1363, idx + 2)).ClearContents
d.Range(d.Cells(spphs + 1936, idx + 2), d.Cells(spps + 1935, idx + 2)).ClearContents
End If
If CheckBox6 Then
With Sheets("zusatztipps")
Sheets("zusatztipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Range(.Cells(67, idx + 3), .Cells(109, idx + 3)).ClearContents
End With
Call fuellen
End If
Call katber
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
aw = MsgBox("Die Daten wurden erfolgreich gel|fffd|scht", vbOKOnly, "Vorgang abgeschlossen")
End Sub
Private Sub CommandButton6_Click()
aw = MsgBox("Alle MITSPIELER sowie Ergebnis- und Zusatztipps werden gel|fffd|scht!" & Chr(13) & Chr(13) & "Wenn Sie nur die TIPPS l|fffd|schen m|fffd|chten, nutzen Sie bitte die Schaltfl|fffd|che 'Daten l|fffd|schen' auf dem Blatt 'Tipps'!" & Chr(13) & Chr(13) & "L|fffd|chvorgang fortsetzen?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
anz = [b6]
With Sheets("data")
.Range(.Cells(2, 3), .Cells(1175, anz + 2)).ClearContents
.Range(.Cells(1268, 3), .Cells(1281, anz + 2)).ClearContents
.Range(.Cells(1364, 3), .Cells(2315, anz + 2)).ClearContents
End With
With Sheets("tipps")
.Range(.Cells(11, 109), .Cells(110, 110)).ClearContents
.Range(.Cells(11, 77), .Cells(110, 77)).ClearContents
.Range(.Cells(11, 78), .Cells(110, 78)).ClearContents
End With
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Range(.Cells(67, 4), .Cells(109, anz + 3)).ClearContents
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
ListBox1.ListIndex = -1
ListBox1.RowSource = ""
CommandButton1.Enabled = True
CommandButton3.Enabled = False
CommandButton5.Enabled = False
CommandButton2.Enabled = False
CommandButton4.Enabled = False
CommandButton6.Enabled = False
oldname = Null
rr = Null
vr = Null
aidx = 0
idx = 0
CheckBox1.Value = False
CheckBox2.Value = False
Label1.Caption = ""
Label4.Caption = "0 Mitspieler eingetragen"
If anz > 1 Then
Set d = Sheets("data")
d.Range(d.Cells(1178, 4), d.Cells(1361, anz + 2)).ClearContents
d.Range(d.Cells(2318, 4), d.Cells(2395, anz + 2)).ClearContents
End If
[de7:df7].ClearContents
[de6:df6].ClearContents
Sheets("einstellungen").[cd105:do204].ClearContents
Application.Calculation = xlCalculationAutomatic
With Sheets("tipps")
.[b6].Formula = "=COUNTA(bz11:bz110)"
.[b7].Formula = "=""Mitspieler ( "" & b6 &"" )"""
.Shapes("mspbutton").Select
Selection.Formula = "$B$7"
End With
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton7_Click()
UserForm10.Hide
End Sub
Private Sub ListBox1_Click()
If ListBox1.ListIndex = -1 Then Exit Sub
If Len(ListBox1.Value) = 0 Then Exit Sub
aidx = ListBox1.ListIndex + 1
Label1.Caption = ListBox1.Value
oldname = ListBox1.Value
idx = Cells(aidx + 10, 79)
CheckBox1.Value = Cells(aidx + 10, 40)
CheckBox2.Value = Cells(aidx + 10, 41)
vr = CheckBox1.Value
rr = CheckBox2.Value
CommandButton3.Enabled = False
CommandButton5.Enabled = False
CommandButton4.Enabled = True
CommandButton2.Enabled = True
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
With UserForm10
If [b6] = 100 Then .CommandButton1.Enabled = False
If [b6] > 0 Then .ListBox1.RowSource = "tipps!by11:by" & 10 + [b6]
.Label4.Caption = [b6] & " Mitspieler eingetragen"
.CommandButton6.Enabled = [b6]
If Sheets("plan").[f47] > 0 Then .Label6.Visible = True
If [aq9] = 2 Then
.CheckBox1.Visible = False
.CheckBox2.Visible = False
End If
End With

If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm11"
Attribute VB_Base = "0{FC3A3F9E-587E-45C7-BE56-52358659F714}{54407C74-0B6F-4C2E-A52D-58775FC9B796}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
UserForm11.Tag = "OK"
UserForm11.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm11.Tag = ""
UserForm11.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm12"
Attribute VB_Base = "0{B8BB1DC7-753A-4A38-A541-C5B8522C0274}{957C84D2-06F5-4C1B-A7BA-4E9EFD531638}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
aw = MsgBox("Der Mitspieler " & Chr(13) & Chr(13) & Label1.Caption & Chr(13) & Chr(13) & "wird unwiderruflich entfernt." & Chr(13) & Chr(13) & "Sind sie sicher?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw = 6 Then
UserForm12.Tag = "OK"
Else
UserForm12.Tag = ""
End If
UserForm12.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm12.Tag = ""
UserForm12.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm13"
Attribute VB_Base = "0{667B600E-F3E7-4BD2-82CE-5F63F7F1E82A}{DCC6CA0D-9AB1-4802-94DE-91CBEFC567EB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CheckBox1_Click()
If CheckBox1 Then
Sheets("ligatabelle").[cz2] = 1
Else
Sheets("ligatabelle").[cz2] = 0
End If
End Sub
Private Sub CheckBox2_Click()
If CheckBox2 Then
If ComboBox1.ListIndex = -1 Then
ComboBox1.ListIndex = 0
Else
Sheets("ligatabelle").[cx1] = ComboBox1.ListIndex + 1
End If
Else
Sheets("ligatabelle").[cx1] = 0
End If
End Sub
Private Sub CheckBox3_Click()
If Not CheckBox3 And Not CheckBox4 Then
CheckBox4.Value = True
Exit Sub
End If
Application.EnableEvents = False
If CheckBox3 And CheckBox4 Then
CheckBox5.Enabled = True
CheckBox6.Enabled = True
CheckBox7.Enabled = True
Sheets("ligatabelle").[cm1] = 3
Else
CheckBox5.Enabled = False
CheckBox6.Enabled = False
CheckBox7.Enabled = False
If CheckBox3 Then
Sheets("ligatabelle").[cm1] = 1
Else
Sheets("ligatabelle").[cm1] = 2
End If
End If
ListBox1.RowSource = "ligatabelle!cn3:cx" & 2 + Sheets("ligatabelle").[cm2]
Application.EnableEvents = True
End Sub
Private Sub CheckBox4_Click()
If Not CheckBox3 And Not CheckBox4 Then
CheckBox3.Value = True
Exit Sub
End If
Application.EnableEvents = False
If CheckBox3 And CheckBox4 Then
CheckBox5.Enabled = True
CheckBox6.Enabled = True
CheckBox7.Enabled = True
Sheets("ligatabelle").[cm1] = 3
If Not CheckBox6 Then CheckBox7.Enabled = False
Else
CheckBox5.Enabled = False
CheckBox6.Enabled = False
CheckBox7.Enabled = False
If CheckBox4 Then
Sheets("ligatabelle").[cm1] = 2
Else
Sheets("ligatabelle").[cm1] = 1
End If
End If
ListBox1.RowSource = "ligatabelle!cn3:cx" & 2 + Sheets("ligatabelle").[cm2]
Application.EnableEvents = True
End Sub
Private Sub CheckBox6_Click()
If CheckBox6 Then
CheckBox7.Enabled = True
Else
CheckBox7.Enabled = False
End If
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
Sheets("ligatabelle").[cx1] = ComboBox1.ListIndex + 1
CheckBox2.Value = True
CheckBox2.SetFocus
End Sub
Private Sub CommandButton1_Click()
kopien = Val(UserForm13.TextBox1.Value)
If OptionButton1 And kopien <= 0 Then Exit Sub
If Not OptionButton2 Then
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set d = Sheets("plan")
With Sheets("spielplan")
.[b4:i15].AutoFill Destination:=.[b4:i63]
.[b4:j63].AutoFill Destination:=.[b4:ak63]
.Calculate
.[al4:as15].AutoFill Destination:=.[al4:as63]
.[al4:at63].AutoFill Destination:=.[al4:bu63]
If d.[e1] = 15 Then
.[ab1:aj1].EntireColumn.Hidden = True
.[bl3:bt3].EntireColumn.Hidden = True
End If
.Cells.EntireRow.Hidden = False
If d.[e1] < 20 Then
delta = 10 - d.[h2] - 1
For i = 1 To 5
.Range(.Cells(i * 12 + 2 - delta, 1), .Cells(i * 12 + 2, 1)).EntireRow.Hidden = True
Next
End If
.Calculate
End With
Sheets(aktuelleseite).Activate
Set td = ActiveWorkbook
Sheets("spielplan").Visible = True
Sheets("spielplan").Copy
Set ns = ActiveWorkbook
Set hin = ActiveWorkbook.Sheets("spielplan")
hin.[a1:bu63].Value = td.Sheets("spielplan").[a1:bu63].Value
ns.Worksheets.Add before:=ns.Worksheets(1)
If CheckBox3 And CheckBox4 Then
ns.Worksheets.Add after:=ns.Worksheets("spielplan")
hin.[al:bu].Cut Destination:=ns.Sheets(3).[b1]
For i = 1 To 63
ns.Sheets(3).Cells(i, 1).RowHeight = hin.Cells(i, 1).RowHeight
Next
For i = 1 To 37
ns.Sheets(3).Cells(i, 1).ColumnWidth = hin.Cells(i, 1).ColumnWidth
Next
hin.[a1].EntireColumn.Delete
ns.Sheets(3).[a1].EntireColumn.Delete
ns.Sheets(3).Name = "R|fffd|ckrunde"
ns.Sheets(2).Name = "Hinrunde"
ns.Sheets(1).Name = "Info"
Else
hin.[al1:bu63].Clear
hin.[a1].EntireColumn.Delete
If CheckBox3 Then
ns.Sheets(2).Name = "Hinrunde"
Else
ns.Sheets(2).Name = "R|fffd|ckrunde"
End If
ns.Sheets(1).Name = "Info"
End If
With hin.PageSetup
.Zoom = False
.Orientation = xlLandscape
.FitToPagesWide = 1
.FitToPagesTall = 1
.LeftMargin = Application.InchesToPoints(0.47244094488189)
.RightMargin = Application.InchesToPoints(0.47244094488189)
.TopMargin = Application.InchesToPoints(0.47244094488189)
.BottomMargin = Application.InchesToPoints(0.47244094488189)
.HeaderMargin = Application.InchesToPoints(0.511811023622047)
.FooterMargin = Application.InchesToPoints(0.511811023622047)
.CenterHorizontally = True
.CenterVertically = True
End With
If CheckBox3 And CheckBox4 Then
With ns.Sheets("R|fffd|ckrunde").PageSetup
.Zoom = False
.Orientation = xlLandscape
.FitToPagesWide = 1
.FitToPagesTall = 1
.LeftMargin = Application.InchesToPoints(0.47244094488189)
.RightMargin = Application.InchesToPoints(0.47244094488189)
.TopMargin = Application.InchesToPoints(0.47244094488189)
.BottomMargin = Application.InchesToPoints(0.47244094488189)
.HeaderMargin = Application.InchesToPoints(0.511811023622047)
.FooterMargin = Application.InchesToPoints(0.511811023622047)
.CenterHorizontally = True
.CenterVertically = True
End With
End If
sptphs = td.Sheets("plan").[g2] / 2
lastcol = Int(sptphs / 5)
rest = sptphs Mod 5
If rest > 0 Then lastcol = lastcol + 1
lastcol = lastcol * 9
With hin
.Range(.Cells(1, lastcol), .Cells(1, 37)).EntireColumn.Delete
If rest > 0 Then .Range(.Cells(rest * 12 + 3, lastcol - 9), .Cells(63, 37)).Delete
For i = 63 To 1 Step -1
If .Cells(i, 1).EntireRow.Hidden = True Then .Cells(i, 1).EntireRow.Delete
Next
End With
If CheckBox3 And CheckBox4 Then
With ns.Sheets("R|fffd|ckrunde")
.Range(.Cells(1, lastcol), .Cells(1, 37)).EntireColumn.Delete
If rest > 0 Then .Range(.Cells(rest * 12 + 3, lastcol - 9), .Cells(63, 37)).Delete
For i = 63 To 1 Step -1
If .Cells(i, 1).EntireRow.Hidden = True Then .Cells(i, 1).EntireRow.Delete
Next
End With
End If
If OptionButton1 Then
If CheckBox5.Enabled = True And CheckBox5.Value = True Then
hin.PrintOut copies:=kopien
td.Activate
Application.ScreenUpdating = True
aw = MsgBox("Es werden nun " & kopien & " Exemplar(e) von Seite 1 gedruckt." & Chr(13) & "Wenn der Druckvorgang beendet ist, legen Sie die bedruckten Seiten so in den Drucker, dass die R|fffd|ckseiten bedruckt werden." & Chr(13) & Chr(13) & "Starten Sie anschlie|fffd|end das Drucken der R|fffd|ckseiten |fffd|ber die OK-Schaltfl|fffd|che.", vbOKCancel, "Beidseitiger Druck")
If aw <> 1 Then
ns.Close (False)
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If
Application.ScreenUpdating = False
ns.Activate
ns.Sheets("R|fffd|ckrunde").PrintOut copies:=kopien
td.Activate
Else
If CheckBox3 Then hin.PrintOut copies:=kopien
If CheckBox4 Then ns.Sheets("R|fffd|ckrunde").PrintOut copies:=kopien
End If
td.Sheets("spielplan").Visible = xlVeryHidden
ns.Close (False)
Else
td.Sheets("spielplan").Visible = xlVeryHidden
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
aw = MsgBox("Die Datei wurde erfolgreich unter dem Namen  '" & ns.Name & "'  erstellt und kann nach dem Schlie|fffd|en des Dialogfesters |fffd|ber FENSTER aktiviert werden." & Chr(13) & Chr(13) & "Individuelle Anpassungen k|fffd|nnen vorgenommen werden. Auf dem Blatt 'Info' k|fffd|nnen Sie zus|fffd|tzliche Hinweise unterbringen." & Chr(13) & Chr(13) & "Beachten Sie, dass die Datei noch nicht gespeichert wurde!", vbOKOnly, "Vorgang beendet")
td.Activate
End If
Else
inin = "Spielplan"
se = "cv"
If Not CheckBox2 Then se = "cs"
If CheckBox3 And CheckBox4 And Not CheckBox6 Then
ber = Range("cn1:" & se & 2 + Sheets("plan").[t1] * 2).Address
Else
If CheckBox3 And Not CheckBox4 Then inin = inin & "_HR"
If CheckBox4 And Not CheckBox3 Then inin = inin & "_RR"
If CheckBox3 And CheckBox4 And CheckBox6.Value = True Then HTMLForm.Label7.Tag = "OK"
If CheckBox3 And CheckBox4 And CheckBox7.Value = True Then HTMLForm.Label4.Tag = "OK"
ber = Range("cn1:" & se & 2 + Sheets("plan").[t1]).Address
End If
UserForm13.Hide
Call showhtml("ligatabelle", ber, 5, inin)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm13.Show
working = working_shk
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Image1_Click()
txt = "Der Spielplan kann gedruckt, als HTML-Datei ver|fffd|ffentlicht oder als separate Datei gespeichert werden."
txt = txt & Chr(13) & "Wenn beide Halbserien dargestellt werden, k|fffd|nnen diese beim Drucken durch Aktivierung von 'beidseitiger Druck' auf die Vor- und R|fffd|ckseite eines Blattes gedruckt werden."
txt = txt & Chr(13) & "Beim Ver|fffd|ffentlichen k|fffd|nnen die Halbserien auf 2 HTM-Seiten verteilt und gegenseitig verlinkt werden."
txt = txt & Chr(13) & "Wird eine Spielplan-Datei erstellt, werden f|fffd|r die Halbserien getrennte Tabellenbl|fffd|tter verwendet."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub OptionButton1_Click()
Frame2.Visible = True
Frame3.Visible = False
Frame4.Visible = False
If CheckBox3 And CheckBox4 Then
CheckBox5.Enabled = True
Else
CheckBox5.Enabled = False
End If
CommandButton1.Caption = "Drucken"
End Sub
Private Sub OptionButton2_Click()
Frame2.Visible = False
Frame3.Visible = True
Frame4.Visible = False
If CheckBox3 And CheckBox4 Then
CheckBox6.Enabled = True
CheckBox7.Enabled = True
If Not CheckBox6 Then CheckBox7.Enabled = False
Else
CheckBox6.Enabled = False
CheckBox7.Enabled = False
End If
CommandButton1.Caption = "Ver|fffd|ffentlichen"
End Sub
Private Sub OptionButton3_Click()
Frame2.Visible = False
Frame4.Visible = True
Frame3.Visible = False
CommandButton1.Caption = "Datei erstellen"
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
CheckBox5.Enabled = False
CheckBox6.Enabled = False
CheckBox7.Enabled = False
If Left(Application.Version, 1) = "8" Then OptionButton2.Enabled = False
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm14"
Attribute VB_Base = "0{03D390E2-8AD4-4D1D-A885-B1BFB425BB8E}{6C50EE37-910A-4E58-A253-69879646147F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, formular, anzbatch, filetoopen, datei, udname, settings, einsatz, alfasort, settingsp, settingsu
Dim name_o, teiln_o, zielname, atwork, cb1liste, cb1anz
Dim datliste, anzdat, usedatlist
Private Sub CheckBox1_Click()
If CheckBox1 Then
CheckBox5.Enabled = True
Else
CheckBox5.Enabled = False
End If
settings(7, 1) = CheckBox1.Value
settings(11, 1) = CheckBox5.Value
End Sub
Private Sub CheckBox10_Click()
settings(16, 1) = CheckBox10.Value
End Sub
Private Sub CheckBox11_Click()
settings(17, 1) = CheckBox11.Value
End Sub
Private Sub CheckBox12_Click()
If CheckBox12 Then
CheckBox8.Enabled = False
CheckBox9.Enabled = False
Else
CheckBox8.Enabled = True
CheckBox9.Enabled = True
End If
settings(18, 1) = CheckBox12.Value
End Sub
Private Sub CheckBox13_Click()
settings(20, 1) = CheckBox13.Value
End Sub
Private Sub CheckBox14_Click()
settings(21, 1) = CheckBox14.Value
End Sub
Private Sub CheckBox2_Click()
settings(8, 1) = CheckBox2.Value
End Sub
Private Sub CheckBox3_Click()
settings(9, 1) = CheckBox3.Value
End Sub
Private Sub CheckBox4_Click()
settings(10, 1) = CheckBox4.Value
End Sub
Private Sub CheckBox5_Click()
settings(11, 1) = CheckBox5.Value
End Sub
Private Sub CheckBox6_Click()
settings(12, 1) = CheckBox6.Value
End Sub
Private Sub CheckBox7_Click()
settings(13, 1) = CheckBox7.Value
End Sub
Private Sub CheckBox8_Click()
settings(14, 1) = CheckBox8.Value
End Sub
Private Sub CheckBox9_Click()
settings(15, 1) = CheckBox9.Value
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If atwork = 1 Then Exit Sub
CommandButton1.SetFocus
End Sub
Private Sub CommandButton1_Click()
If [b6] = 0 Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
If Len(ComboBox1.Value) = 0 Then Exit Sub
anz = 1
If [b6] > 1 And ComboBox1.ListIndex = [b6] Then anz = [b6]
For na = 1 To anz
tippname = ComboBox1.Value
If anz > 1 Then tippname = cb1liste(na, 1)
aidx = ComboBox1.ListIndex + 1
If anz > 1 Then aidx = na
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set d = ActiveWorkbook.Sheets("data")
Set lt = ActiveWorkbook.Sheets("ligatabelle")
Set p = ActiveWorkbook.Sheets("plan")
Set zt = ActiveWorkbook.Sheets("zusatztipps")
Set tk = ActiveWorkbook.Sheets("einstellungen")
Set tt = ActiveWorkbook.Sheets("tipps")
lt.[cx1] = aidx
lt.Calculate
Set td = ActiveWorkbook
Application.Workbooks.Add
Set nwb = ActiveWorkbook
nwb.Colors = td.Colors
For i = Application.SheetsInNewWorkbook + 1 To 5
nwb.Sheets.Add
Next
nwb.Sheets(1).Name = "Tipps"
nwb.Sheets(2).Name = "daten"
nwb.Sheets(3).Name = "erg"
nwb.Sheets(4).Name = "setup"
nwb.Sheets(5).Name = "ztipps"
nwb.Sheets(2).Visible = xlVeryHidden
nwb.Sheets(3).Visible = xlVeryHidden
nwb.Sheets(4).Visible = xlVeryHidden
nwb.Sheets(5).Visible = xlVeryHidden
nwb.Sheets(1).[a1] = "Pers|fffd|nliche Tippdatei von " & tippname
anzpaar = lt.[cm2]
With nwb.Sheets(1)
lt.Range("cn2:cv" & anzpaar + 2).Copy Destination:=nwb.Sheets(1).[a2]
zt.Range("d7:e47").Copy Destination:=nwb.Sheets(1).[k2]
idx = lt.[cy1]
.Range("n3:n" & p.[e1] + 2).Value = p.Range(p.Cells(2, 5), p.Cells(p.[e1] + 1, 5)).Value
.[p2:p41].Value = zt.[c7:c46].Value
.[d3:f382].ClearContents
.Columns("J:J").ColumnWidth = 24.43
.[j2] = "F|fffd|r Joker j oder J eingeben"
.[c2].Copy
.[j2].PasteSpecial Paste:=xlPasteFormats
td.Sheets("html").[l32:l71].Copy Destination:=.[l2]
For i = 1 To 6
For j = 1 To 5
z = (i - 1) * 7 + j + 1
If zt.Cells(z + 5, 3) = 1 Then
With .Cells(z, 12).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$n$3:$n$" & p.[e1] + 2
.IgnoreBlank = True
.InCellDropdown = True
.ErrorTitle = "Fehler"
.ErrorMessage = "W|fffd|hlen Sie ein Team aus der Liste!"
.ShowInput = False
.ShowError = True
End With
.Cells(z, 12).Locked = False
Else
.Cells(z, 12).Locked = True
End If
Next
Next
td.Sheets("html").[g3:j3].Copy Destination:=.[g3:j3]
.Range("g3:j3").AutoFill Destination:=.Range("g3:j" & anzpaar + 2)
.Range("g3:j" & p.[g2] * p.[h2] + 2).Locked = False
.Range("h3:h" & p.[g2] * p.[h2] + 2).Locked = True
.[m1:p1].EntireColumn.Hidden = True
jsp = .[j3:j382].Value
ergdat = d.Range(d.Cells(2, idx + 2), d.Cells(1141, idx + 2)).Value
lfdnr = 0
Sheets(aktuelleseite).Activate
For i = 3 To 1140 Step 3
lfdnr = lfdnr + 1
If Len(ergdat(i, 1)) > 0 Then
If ergdat(i, 1) > 0 Then jsp(lfdnr, 1) = "J"
End If
Next
.[j3:j382].Value = jsp
For i = 1 To 9
nwb.Sheets(1).Cells(1, i).ColumnWidth = lt.Cells(1, i + 91).ColumnWidth
Next
.[k2].ColumnWidth = zt.[d1].ColumnWidth
.[l2].ColumnWidth = zt.[e1].ColumnWidth
.[d1:f1].EntireColumn.Hidden = True
nwb.Sheets(1).Range("a2:i" & anzpaar + 2).Value = lt.Range("cn2:cv" & anzpaar + 2).Value
.[k2:k42].Value = zt.[d7:d47].Value
.[l2:l42].Value = zt.Range(zt.Cells(7, aidx * 2 + 3), zt.Cells(47, aidx * 2 + 3)).Value
.Range("K1:l100").ClearComments
.[k1:q1].Insert Shift:=xlDown
.[m3] = p.[h2]
End With
With nwb.Sheets(2)
.[a1] = tippname
.[a2] = "perstipp"
.[c2:c1141] = d.Range(d.Cells(2, idx + 2), d.Cells(1141, idx + 2)).Value
.[d2:e2].Value = tt.Range(tt.Cells(idx + 10, 109), tt.Cells(idx + 10, 110)).Value
End With
With nwb.Sheets(5)
.[d67:d109].Value = zt.Range(zt.Cells(67, 3 + idx), zt.Cells(109, 3 + idx)).Value
.[i169:n169].Value = zt.[i169:n169].Value
.[i179:n184].Value = zt.[i179:n184].Value
.[d240:n440].Value = zt.[d240:n440].Value
.[am4] = tk.[am4]
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z6:aj6].Value = tk.[z6:aj6].Value
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then .[z11:ab11].Value = tk.[z11:ab11].Value
.[v12:aj14] = tk.[v12:aj14].Value
.[v20:aj24] = tk.[v20:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then .[z27:ab27] = tk.[z27:ab27]
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[cd1105:do1105].Value = tk.Range(tk.Cells(104 + idx, 82), tk.Cells(104 + idx, 119)).Value
.[du42:dv47].Value = tk.[du42:dv47].Value
End With
With nwb.Sheets(3)
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
With nwb.Sheets(4)
.[h7:i10].Value = p.[h7:i10].Value
.[i21] = p.[i21]
.[i2].Value = p.[i2].Value
.[f42:f47].Value = p.[f42:f47].Value
.[f32:f34].Value = p.[f32:f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
.[e1:e21].Value = p.[e1:e21].Value
.[i12].Value = p.[i12].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
nwb.Names("Teams").Delete
nwb.Activate
nwb.Sheets(1).Select
nwb.Sheets(1).[b3].Select
ActiveWindow.FreezePanes = True
td.Activate
nwb.Sheets(1).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If anz > 1 Then
ptdnam = ThisWorkbook.Path & "\ptd_" & LCase(tippname) & ".xls"
If Dir(ptdnam) <> "" Then Kill ptdnam
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:=ptdnam, FileFormat:=xlExcel8
Else
nwb.SaveAs ptdnam
End If
nwb.Close (False)
End If
Next
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
If anz > 1 Then
aw = MsgBox([b6] & " pers|fffd|nliche Tippdateien wurden im Verzeichnis" & Chr(13) & ThisWorkbook.Path & Chr(13) & "unter den Namen ptd_[Name des Mitspielers] gespeichert!", vbOKOnly, "Vorgang abgeschlossen")
Else
speichern:
On Error GoTo ende
Application.CutCopyMode = False
datname = Application.GetSaveAsFilename("tipps_" & tippname, "Tippdatei (*.xls),*.xls", , "Tippdatei speichern", "Speichern unter")
If datname <> False Then
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:=datname, FileFormat:=xlExcel8
Else
nwb.SaveAs datname
End If
aw = MsgBox("Die Datei wurde erfolgreich erstellt und gespeichert." & Chr(13) & Chr(13) & "|fffd|ber die Importfunktion k|fffd|nnen die gespeicherten Daten in andere Dateien |fffd|bertragen werden.", vbOKOnly, "Vorgang abgeschlossen")
nwb.Close (False)
lt.[db2] = aidx
Exit Sub
End If
ende:
ziel = datname
If Len(ziel) > 0 Then
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
For i = 1 To Application.Workbooks.Count
If dateiname = Application.Workbooks(i).Name Then
aw = MsgBox("Eine Datei mit dem Namen: " & dateiname & Chr(13) & "ist bereits ge|fffd|ffnet! Excel erlaubt nicht, dass 2 gleichnamige Dateien gleichzeitig ge|fffd|ffnet sind, selbst wenn diese in unterschiedlichen Ordnern gespeichert sind.", vbOKOnly, "Bitte einen anderen Namen w|fffd|hlen")
GoTo speichern
End If
Next
End If
On Error Resume Next
aw = MsgBox("Die Datei wurde nicht gespeichert!", vbOKOnly, "Fehler!")
nwb.Close (False)
End If
End Sub
Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set o = ActiveWorkbook
Set d = ActiveWorkbook.Sheets("data")
Set lt = ActiveWorkbook.Sheets("ligatabelle")
Set p = ActiveWorkbook.Sheets("plan")
Set zt = ActiveWorkbook.Sheets("zusatztipps")
Set tk = ActiveWorkbook.Sheets("einstellungen")
lt.[cx1] = ComboBox1.ListIndex + 1
lt.Calculate
Set td = ActiveWorkbook
Application.Workbooks.Add
Set nwb = ActiveWorkbook
td.Activate
nwb.Colors = td.Colors
For i = Application.SheetsInNewWorkbook + 1 To 5
nwb.Sheets.Add
Next
nwb.Sheets(1).Name = "Tipps"
nwb.Sheets(2).Name = "daten"
nwb.Sheets(3).Name = "erg"
nwb.Sheets(4).Name = "setup"
nwb.Sheets(5).Name = "ztipps"
nwb.Sheets(2).Visible = xlVeryHidden
nwb.Sheets(3).Visible = xlVeryHidden
nwb.Sheets(4).Visible = xlVeryHidden
nwb.Sheets(5).Visible = xlVeryHidden
nwb.Sheets(1).[a1] = "Pers|fffd|nliche Tippdatei von " & ComboBox1.Value
anzpaar = lt.[cm2]
anz = o.Sheets("tipps").[b6].Value
With nwb.Sheets(1)
.[a1] = "Tippspielupdatedatei"
.[a2] = Format(Now(), "DD.MM.YYYY.")
.[a2].NumberFormat = "dd/mm/yy;@"
.[b1] = "Mitspieler: " & anz
If anz > 0 Then .Range("b2:b" & anz + 1).Value = o.Sheets("tipps").Range("by11:by" & 10 + anz).Value
.Columns("A:B").EntireColumn.AutoFit
zt.Range("d7:d47").Copy Destination:=nwb.Sheets(1).[e2]
nwb.Sheets(1).[e2].ColumnWidth = zt.[d1].ColumnWidth
nwb.Sheets(1).[e2:e42].Value = zt.[d7:d47].Value
.Range("K1:l100").FormatConditions.Delete
.Range("K1:l100").ClearComments
End With
With nwb.Sheets(2)
.[a1] = Format(Now(), "DD.MM.YYYY")
.[a2] = "tippupdate"
.[b1] = anz
If [b6] > 0 Then
.Range("b2:b" & anz + 1).Value = o.Sheets("tipps").Range("by11:by" & 10 + anz).Value
.Range("db2:db" & anz + 1).Value = o.Sheets("tipps").Range("ca11:ca" & 10 + anz).Value
.Range("dc2:dc" & anz + 1).Value = o.Sheets("tipps").Range("bz11:bz" & 10 + anz).Value
.Range("de2:df" & anz + 1).Value = o.Sheets("tipps").Range("de11:df" & 10 + anz).Value
.Range("de1:df1").Value = o.Sheets("tipps").Range("de7:df7").Value
.Range("de1000:df1000").Value = o.Sheets("tipps").Range("de6:df6").Value
.Range(.Cells(2, 3), .Cells(1141, anz + 2)).Value = d.Range(d.Cells(2, 3), d.Cells(1141, anz + 2)).Value
.Range(.Cells(1146, 3), .Cells(1175, anz + 2)).Value = d.Range(d.Cells(1146, 3), d.Cells(1175, anz + 2)).Value
.Range(.Cells(1364, 3), .Cells(1933, anz + 2)).Value = d.Range(d.Cells(1364, 3), d.Cells(1933, anz + 2)).Value
.Range(.Cells(1936, 3), .Cells(2315, anz + 2)).Value = d.Range(d.Cells(1936, 3), d.Cells(2315, anz + 2)).Value
End If
End With
With nwb.Sheets(5)
If anz > 0 Then .Range(.Cells(67, 4), .Cells(109, 3 + anz)).Value = zt.Range(zt.Cells(67, 4), zt.Cells(109, 3 + anz)).Value
.[i169:n169].Value = zt.[i169:n169].Value
.[i179:n184].Value = zt.[i179:n184].Value
.[d240:n440].Value = zt.[d240:n440].Value
.[am4] = tk.[am4]
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z6:aj6].Value = tk.[z6:aj6].Value
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then .[z11:ab11].Value = tk.[z11:ab11].Value
.[v12:aj14] = tk.[v12:aj14].Value
.[v20:aj24] = tk.[v20:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then .[z27:ab27] = tk.[z27:ab27]
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[cd1105:do1204].Value = tk.[cd105:do204].Value
.[du42:dv47].Value = tk.[du42:dv47].Value
End With
With nwb.Sheets(3)
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
With nwb.Sheets(4)
.[h2] = p.[h2]
.[i2] = p.[i2]
.[h7:i10].Value = p.[h7:i10].Value
.[i21] = p.[i21]
.[f42:f47].Value = p.[f42:f47].Value
.[f32:f34].Value = p.[f32:f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
.[e1:e21].Value = p.[e1:e21].Value
.[i12].Value = p.[i12].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
nwb.Sheets(1).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
speichern:
On Error GoTo ende
Application.CutCopyMode = False
datname = Application.GetSaveAsFilename("tippspielupdate_" & Format(Now(), "DD-MM-YY"), "Tippspiel-Updatedatei (*.xls),*.xls", , "Updatedatei speichern", "Speichern unter")
If datname <> False Then
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:=datname, FileFormat:=xlExcel8
Else
nwb.SaveAs datname
End If
aw = MsgBox("Die Datei wurde erfolgreich erstellt und gespeichert." & Chr(13) & Chr(13) & "|fffd|ber die Importfunktion k|fffd|nnen die gespeicherten Daten in andere Dateien |fffd|bertragen werden.", vbOKOnly, "Vorgang abgeschlossen")
nwb.Close (False)
Exit Sub
End If
ende:
ziel = datname
If Len(ziel) > 0 Then
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
For i = 1 To Application.Workbooks.Count
If dateiname = Application.Workbooks(i).Name Then
aw = MsgBox("Eine Datei mit dem Namen: " & dateiname & Chr(13) & "ist bereits ge|fffd|ffnet! Excel erlaubt nicht, dass 2 gleichnamige Dateien gleichzeitig ge|fffd|ffnet sind, selbst wenn diese in unterschiedlichen Ordnern gespeichert sind.", vbOKOnly, "Bitte einen anderen Namen w|fffd|hlen")
GoTo speichern
End If
Next
End If
On Error Resume Next
aw = MsgBox("Die Datei wurde nicht gespeichert!", vbOKOnly, "Fehler!")
nwb.Close (False)
End Sub
Private Sub CommandButton3_Click()
On Error GoTo ende
Set o = ActiveWorkbook
Application.CutCopyMode = False
Call datoeffnen(filetoopen)
anzbatch = UBound(filetoopen)
If anzbatch = 1 Then
If filetoopen(1) = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name Then
anzbatch = 0
If Not usedatlist Then
Label6.Caption = "Es wurden keine Dateien benannt"
Label7.Caption = ""
End If
aw = MsgBox("Dies ist keine pers|fffd|nliche Tippdatei:" & Chr(13) & filetoopen(1), vbOKOnly, "Fehler!")
filetoopen = Null
Exit Sub
End If
Application.ScreenUpdating = False
Application.EnableEvents = False

Application.ShowWindowsInTaskbar = False
'Mappe |fffd|ffnen
Application.Workbooks.Open Filename:=filetoopen(1)
Set t = ActiveWorkbook
'Fenstertitel in Varibale einlesen
strWindowName = ActiveWindow.Caption
'Fenster (Mappe) ausblenden
Windows(strWindowName).Visible = False
'Anzeige der Fenster in Taskleiste wieder einschalten
Application.ShowWindowsInTaskbar = True


'Application.Workbooks.Open Filename:=filetoopen(1)
'Set t = ActiveWorkbook
o.Activate
offen = True
anzsheet = t.Worksheets.Count
sheetcheck = 0
For j = 1 To anzsheet
If t.Sheets(j).Name = "Tipps" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "daten" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "erg" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "setup" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "ztipps" Then sheetcheck = sheetcheck + 1
Next
If sheetcheck <> 5 Then
anzbatch = 0
t.Close (False)
If Not usedatlist Then
Label6.Caption = "Es wurden keine Dateien benannt"
Label7.Caption = ""
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Dies ist keine pers|fffd|nliche Tippdatei:" & Chr(13) & Chr(13) & filetoopen(1), vbOKOnly, "Fehler!")
filetoopen = ""
Exit Sub
End If
If t.Sheets("daten").[a2] <> "perstipp" Then
anzbatch = 0
t.Close (False)
If Not usedatlist Then Label6.Caption = "Es wurden keine Dateien benannt"
Label7.Caption = ""
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Dies ist keine pers|fffd|nliche Tippdatei:" & Chr(13) & Chr(13) & filetoopen(1), vbOKOnly, "Fehler!")
filetoopen = ""
Exit Sub
End If
dateiname = t.Name
namen = o.Sheets("tipps").[by11:by110].Value
anz = o.Sheets("tipps").[b6]
For i = 1 To anz
If StrComp(namen(i, 1), t.Sheets("daten").[a1], vbTextCompare) = 0 Then
Label6.Caption = filetoopen(1)
Label7.Caption = "Mitspieler: " & namen(i, 1)
usedatlist = False
t.Close (False)
GoTo setup
End If
Next
Label6.Caption = filetoopen(1)
Label7.Caption = "Mitspieler: " & t.Sheets("daten").[a1] & " (unbekannt)"
If t.Sheets("daten").[a3] = "tippform" Then formularblatt = True
usedatlist = False
t.Close (False)
GoTo setup
Else
Label6.Caption = "Batchmodus aktiviert!"
Label7.Caption = anzbatch & " Dateien wurden f|fffd|r den Import angegeben"
usedatlist = False
End If
setup:
If anzbatch = 1 And Not formularblatt Then
CheckBox3.Enabled = True
CheckBox4.Enabled = True
Else
CheckBox3.Enabled = False
CheckBox4.Enabled = False
CheckBox3.Value = False
CheckBox4.Value = False
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
Exit Sub
ende:
On Error Resume Next
If offen Then aw = MsgBox("Dies ist keine pers|fffd|nliche Tippdatei:" & Chr(13) & filetoopen(1), vbOKOnly, "Fehler!")
If Not usedatlist Then
Label6.Caption = "Es wurden keine Dateien benannt"
Label7.Caption = ""
End If
anzbatch = 0
If offen Then t.Close (False)
filetoopen = ""
End Sub
Private Sub CommandButton4_Click()
Application.EnableCancelKey = xlDisabled
oldcaption = CommandButton4.Caption
If OptionButton12 Then
Call updatedat
Else
Call perstipp
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
CommandButton4.Caption = oldcaption
Application.EnableCancelKey = xlInterrupt
Application.CutCopyMode = False
If Not OptionButton12 Or Not op1 Then Exit Sub
CommandButton6.Caption = ""
Workbooks(udname).Close (False)
[d1].ClearContents
Application.CutCopyMode = False
datei = ""
UserForm14.Tag = "all"
UserForm14.Hide
End Sub
Sub updatedat()
If Len(datei) = 0 Then
aw = MsgBox("Geben Sie zun|fffd|chst die Datei mit den zu importierenden Daten an.", vbInformation, "Keine Updatedatei benannt")
Exit Sub
End If
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("plan").[l98:l118].Value = settings
settingsu = settings
Sheets("plan").[h101] = 1
Set o = ActiveWorkbook
Set oa = ActiveWorkbook.Sheets("auswertung")
Set od = ActiveWorkbook.Sheets("data")
Set oz = ActiveWorkbook.Sheets("zusatztipps")
Set ol = ActiveWorkbook.Sheets("ligatabelle")
Set op = ActiveWorkbook.Sheets("plan")
Set oe = ActiveWorkbook.Sheets("einstellungen")
Set ot = ActiveWorkbook.Sheets("tipps")
Set t = Workbooks(udname)
Set t2 = t.Sheets("daten")
Set t5 = t.Sheets("ztipps")
alfasort = False
anzbatch = t2.[b1]
If op1 Then
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
With t2
o.Sheets("tipps").Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
o.Sheets("tipps").Range("by11:by110").Value = .Range("b2:b101").Value
o.Sheets("tipps").Range("bz11:bz110").Value = .Range("dc2:dc101").Value
o.Sheets("tipps").Range("de7:df7").Value = .Range("de1:df1").Value
o.Sheets("tipps").Range("de6:df6").Value = .Range("de1000:df1000").Value
o.Sheets("tipps").Range("de11:df110").Value = .Range("de2:df101").Value
od.Range(od.Cells(2, 3), od.Cells(1141, 102)).Value = .Range(.Cells(2, 3), .Cells(1141, 102)).Value
od.Range(od.Cells(1146, 3), od.Cells(1175, 102)).Value = .Range(.Cells(1146, 3), .Cells(1175, 102)).Value
od.Range(od.Cells(1364, 3), od.Cells(1933, 102)).Value = .Range(.Cells(1364, 3), .Cells(1933, 102)).Value
od.Range(od.Cells(1936, 3), od.Cells(2315, 102)).Value = .Range(.Cells(1936, 3), .Cells(2315, 102)).Value
End With
Application.CutCopyMode = False
With o.Sheets("zusatztipps")
Set zt = t.Sheets("ztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Range(.Cells(67, 4), .Cells(109, 103)).Value = zt.Range(zt.Cells(67, 4), zt.Cells(109, 103)).Value
.[i169:n169].Value = zt.[i169:n169].Value
.[i179:n184].Value = zt.[i179:n184].Value
.[d240:n440].Value = zt.[d240:n440].Value
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
With ol
Set lt = t.Sheets("erg")
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
Application.CutCopyMode = False
With op
Set p = t.Sheets("setup")
.[i12].Value = p.[i12].Value
.[i2] = p.[i2]
.[i21].Value = p.[i21].Value
.[e1].Value = p.[e1].Value
.[e2:e21].Value = p.[e2:e21].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ad4] = p.[ad4]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
Application.CutCopyMode = False
Set p = t.Sheets("setup")
With op
.[h7:i10].Value = p.[h7:i10].Value
.[f42:f47].Value = p.[f42:f47].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
If Len(p.[f32]) > 0 Then .[f32].Value = p.[f32].Value
If Len(p.[f33]) > 0 Then .[f33].Value = p.[f33].Value
If Len(p.[f34]) > 0 Then .[f34].Value = p.[f34].Value
End With
Application.CutCopyMode = False
With oe
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Calculate
Set tk = t.Sheets("ztipps")
.[am4] = tk.[am4]
If tk.[v20] = "Tagessieger" Then tk.[ad6] = "pro Halbserie"
.[z6:aj6].Value = tk.[z6:aj6].Value
If tk.[am4] = 2 Then
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z4:ab4].Locked = False
Else
.[ap4:ar4].Copy Destination:=.[z4]
.[z4:ab4].Locked = True
End If
.ComboBox2.ListIndex = tk.[am4] - 1
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then
.[z11:ab11].Value = tk.[z11:ab11].Value
.[z11:ab11].Locked = False
Else
.[at11:av11].Copy Destination:=.[z11]
.[z11:ab11].Locked = True
End If
.[v12:aj14] = tk.[v12:aj14].Value
.[v21:aj24] = tk.[v21:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then
.[z27:ab27] = tk.[z27:ab27]
.[z27:ab27].Locked = False
Else
.[ao27:aq27].Copy Destination:=.[z27]
.[z27:ab27].Locked = True
End If
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[cd105:do204].Value = tk.[cd1105:do1204].Value
.[du42:dv47].Value = tk.[du42:dv47].Value
If tk.[v20] = "Tagessieger" Then
.[du43] = tk.[z20]
.[dv43] = tk.[ab20]
.[du42] = 1
.[dv42] = 1
End If
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
ppspt = t.Sheets("setup").[h2]
With o.Sheets("tipps")
.[j1:am1].EntireColumn.Hidden = False
If ppspt < 10 Then .Range(.Cells(1, ppspt * 3 + 10), .Cells(1, 39)).EntireColumn.Hidden = True
If Sheets("plan").[f47] = 0 Then
.Range("F11").ColumnWidth = 7
.Range("H11").ColumnWidth = 6
.Range("e11,g11").ColumnWidth = 5
Else
.Range("F11").ColumnWidth = 9
.Range("H11").ColumnWidth = 7
.Range("e11,g11").ColumnWidth = 3.5
End If
End With
Application.CutCopyMode = False
GoTo schluss
End If
d.[dl19:dl24] = d.[dn19:dn24].Value
d.[dh19:dn24].Sort key1:=d.Range("dj19"), order1:=xlAscending, header:=xlNo, MatchCase:=False
Application.Calculation = xlCalculationManual
anzspt = Sheets("plan").[g2]
anzpaar = Sheets("plan").[h2]
spt = [i6]
newall = False
paarung = d.[co3:cp382].Value
If OptionButton5 Then
d.[dd3:dd382].Value = False
za = (spt - 1) * anzpaar + 3
ze = za + anzpaar - 1
d.Range(d.Cells(za, 108), d.Cells(ze, 108)).Value = True
d.Range(d.Cells(3, 111), d.Cells(40, 111)).Value = 0
d.Cells(spt + 2, 111) = anzpaar
d.[di3:dj12].Value = d.Range(d.Cells(za, 93), d.Cells(za + 9, 94)).Value
With UserForm15
.ListBox4.RowSource = "ligatabelle!df3:df" & 2 + anzspt
.ListBox2.RowSource = "ligatabelle!dm3:dm" & 2 + anzpaar
.Label2.Caption = "Paarungen von Spieltag " & [i6]
End With
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm15.Show
working = working_shk
If UserForm15.Tag = "OK" Then
newall = UserForm15.CheckBox1.Value
Application.CutCopyMode = False
Unload UserForm15
Else
Unload UserForm15
Application.CutCopyMode = False
aw = MsgBox("Es wurden keine Daten importiert!", vbOKOnly, "Import abgebrochen")
Exit Sub
End If
ElseIf OptionButton6 Then
d.[dd3:dd382].Value = d.[de3:de382].Value
d.[dl19:dl24] = d.[dn19:dn24].Value
Else
d.Range(d.Cells(3, 108), d.Cells(382, 108)).Value = True
d.[dl19:dl24] = True
End If
Application.CutCopyMode = False
importdat = d.[dd3:dd382].Value
oldcaption = CommandButton4.Caption
CommandButton4.Caption = "Import l|fffd|uft ..."
UserForm14.Repaint
If op4 And anzbatch > 0 Then
playerlist = o.Sheets("plan").[br2:br101].Value
For j = 1 To 100
If Len(playerlist(j, 1)) = 0 Then playerlist(j, 1) = True
If j > anzbatch Then playerlist(j, 1) = False
Next
t.Sheets("daten").Range("da2:da101").Value = playerlist
UserForm19.ListBox1.RowSource = "'[" & t.Name & "]daten'!b2:b" & anzbatch + 1
UserForm19.ListBox1.Tag = anzbatch
UserForm19.Tag = t.Name
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm19.Show
working = working_shk
If UserForm19.Tag = "OK" Then
Application.CutCopyMode = False
Unload UserForm19
Else
Application.CutCopyMode = False
Unload UserForm19
aw = MsgBox("Der Importvorgang wurde abgebrochen.", vbOKOnly, "Hinweis")
Exit Sub
End If
Else
t.Sheets("daten").Range("da2:da101").Value = True
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Application.CutCopyMode = False
playerlist = t.Sheets("daten").[da2:da101].Value
o.Sheets("plan").[br2:br101].Value = playerlist
namen = o.Sheets("tipps").[by11:cb110].Value
teiln = o.Sheets("tipps").[b6].Value
If CheckBox4.Enabled = True And CheckBox4.Value = True Then
erg = t.Sheets("erg").[c2:d381].Value
Else
erg = o.Sheets("ligatabelle").[c2:d381].Value
End If
ztdata = ol.[dl19:dl24].Value
If CheckBox13 Then
ztodaten = oz.[d8:d46].Value
ztidaten = t.Sheets("tipps").[e3:e43].Value
noprob = True
ztcount = 0
With UserForm29
For j = 1 To 36 Step 7
ztcount = ztcount + 1
ztc = (ztcount - 1) * 3 + 1
If Len(ztodaten(j, 1)) > 0 Then
.Controls("l" & ztc + 2).Caption = ztodaten(j, 1)
.Controls("l" & ztc).Caption = "Teams: " & ztodaten(j + 1, 1)
.Controls("l" & ztc + 1).Caption = ztodaten(j + 3, 1)
Else
.Controls("l" & ztc + 2).Caption = "nicht festgelegt"
End If
If Len(ztidaten(j, 1)) > 0 Then
.Controls("nam" & ztcount).Caption = ztidaten(j, 1)
.Controls("anz" & ztcount).Caption = "Teams: " & ztidaten(j + 1, 1)
.Controls("tab" & ztcount).Caption = ztidaten(j + 3, 1)
Else
.Controls("nam" & ztcount).Caption = "nicht festgelegt"
End If
If ztdata(ztcount, 1) And ztodaten(j, 1) <> ztidaten(j, 1) Then noprob = False
If ztdata(ztcount, 1) And ztodaten(j + 1, 1) <> ztidaten(j + 1, 1) Then noprob = False
If ztdata(ztcount, 1) And ztodaten(j + 3, 1) <> ztidaten(j + 3, 1) Then noprob = False
Next
End With
If Not noprob Then
UserForm29.Tag = t.Name
ztsort = t.Sheets("ztipps").[a1:a6]
For j = 1 To 6
UserForm29.Controls("cb" & j).Value = ztdata(j, 1)
ztsort(j, 1) = j
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm29.Show
working = working_shk
UserForm14.Repaint
If UserForm29.Tag = "Cancel" Then
aw = MsgBox("Der Importvorgang wurde abgebrochen.", vbOKOnly, "Hinweis")
Exit Sub
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
ztsort = t.Sheets("ztipps").[a1:a6]
ztdata = t.Sheets("ztipps").[b1:b6]
Unload UserForm29
End If
End If
For i = 1 To anzbatch
Application.CutCopyMode = False
If playerlist(i, 1) = False Then GoTo weiter
newplayer = False
abbruch = False
anzwarnerg = 0
anzwarnzus = 0
spieler = t.Sheets("daten").Cells(1 + i, 2).Value
sidx = t.Sheets("daten").Cells(1 + i, 106).Value
idx = 0
aidx = 0
einsatz = t.Sheets("daten").Range(t.Sheets("daten").Cells(1 + sidx, 109), t.Sheets("daten").Cells(1 + sidx, 110))
For j = 1 To teiln
If namen(j, 1) = spieler Then
aidx = j
idx = namen(j, 3)
aw = 1
GoTo allesklar
End If
Next
Call konflikt(namen, teiln, spieler, aidx, idx, aw)
Application.CutCopyMode = False
If anzbatch = 1 And aw > 2 Then abbruch = True
allesklar:
If aw < 3 Then
Set idzt = t.Sheets("ztipps")
If aw = 1 Or CheckBox12 Then
If CheckBox10 Then ot.Cells(10 + idx, 109) = t.Sheets("daten").Cells(1 + sidx, 109)
If CheckBox11 Then ot.Cells(10 + idx, 110) = t.Sheets("daten").Cells(1 + sidx, 110)
If CheckBox10 Then oe.Range(oe.Cells(104 + idx, 82), oe.Cells(104 + idx, 81 + anzspt / 2)).Value = idzt.Range(idzt.Cells(1104 + sidx, 82), idzt.Cells(1104 + sidx, 81 + anzspt / 2)).Value
If CheckBox11 Then oe.Range(oe.Cells(104 + idx, 82 + anzspt / 2), oe.Cells(104 + idx, 119)).Value = idzt.Range(idzt.Cells(1104 + sidx, 82 + anzspt / 2), idzt.Cells(1104 + sidx, 119)).Value
ElseIf Not OptionButton1.Value = True Then
If CheckBox8 Then ot.Cells(10 + idx, 109) = 1
If CheckBox9 Then ot.Cells(10 + idx, 110) = 1
If CheckBox8 Then oe.Range(oe.Cells(104 + idx, 82), oe.Cells(104 + idx, 81 + anzspt / 2)).Value = 1
If CheckBox9 Then oe.Range(oe.Cells(104 + idx, 82 + anzspt / 2), oe.Cells(104 + idx, 119)).Value = 1
End If
If i = 1 Then oa.[b3:c382].Value = erg
tipps = t2.Range(t2.Cells(2, sidx + 2), t2.Cells(1141, sidx + 2)).Value
tippdata = oa.[d3:f382]
oldtipps = od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value
nr = 0
warnerg = oa.[bs2:ca381].Value
warnzus = oa.[ce2:ci31].Value
For j = 1 To anzspt * anzpaar * 3 Step 3
nr = nr + 1
If newplayer And newall Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
ElseIf Not importdat(nr, 1) Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
ElseIf Len(oldtipps(j, 1)) = 0 And Len(oldtipps(j + 1, 1)) = 0 Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
ElseIf CheckBox14.Value = True And Len(tipps(j, 1)) = 0 And Len(tipps(j + 1, 1)) = 0 Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
ElseIf CheckBox1.Value = True Then
If Not CheckBox5 Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
Else
If Len(erg(nr, 1)) = 0 And Len(erg(nr, 2)) = 0 Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
Else
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
End If
End If
Else
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
If CheckBox2 Then
If oldtipps(j, 1) = ht And oldtipps(j + 1, 1) = at And ((oldtipps(j + 2, 1) = joker) Or (oldtipps(j + 2, 1) = 0 And Len(joker) = 0) Or (joker = 0 And Len(oldtipps(j + 2, 1)) = 0) Or (Len(joker) = 0 And Len(oldtipps(j + 2, 1)) = 0)) Then GoTo eintragen
anzwarnerg = anzwarnerg + 1
warnerg(anzwarnerg, 1) = paarung(nr, 1)
warnerg(anzwarnerg, 2) = paarung(nr, 2)
warnerg(anzwarnerg, 3) = oldtipps(j, 1)
warnerg(anzwarnerg, 4) = oldtipps(j + 1, 1)
If oldtipps(j + 2, 1) > 0 Then
warnerg(anzwarnerg, 5) = "(J)"
Else
warnerg(anzwarnerg, 5) = Null
End If
warnerg(anzwarnerg, 6) = tipps(j, 1)
warnerg(anzwarnerg, 7) = tipps(j + 1, 1)
If tipps(j + 2, 1) > 0 Then
warnerg(anzwarnerg, 8) = "(J)"
Else
warnerg(anzwarnerg, 8) = Null
End If
warnerg(anzwarnerg, 9) = nr
End If
End If
eintragen:
tippdata(nr, 1) = ht
tippdata(nr, 2) = at
tippdata(nr, 3) = joker
Next
ztipps = t5.Range(t5.Cells(67, 3 + sidx), t5.Cells(109, 3 + sidx)).Value
ztold = oz.Range(oz.Cells(67, 3 + idx), oz.Cells(109, 3 + idx)).Value
ztcheck = oz.[c7:c46].Value
For j = 1 To 40
If ztcheck(j, 1) = 0 Then ztipps(j, 1) = ""
Next
If CheckBox13 And Not noprob Then
ztippss = ztipps
For j = 1 To 6
ztnr = ztsort(j, 1)
For k = 1 To 7
ztipps((j - 1) * 7 + k, 1) = ztippss((ztnr - 1) * 7 + k, 1)
Next
Next
End If
If newplayer And newall Then
For j = 1 To 6
For k = 1 To 5
If oz.Cells(172, 8 + j) < k Then ztipps((j - 1) * 7 + k, 1) = ""
Next
Next
Else
For j = 1 To 6
For k = 1 To 5
If Not ztdata(j, 1) Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf oz.Cells(172, 8 + j) < k Then
ztipps((j - 1) * 7 + k, 1) = ""
Else
If Len(ztipps((j - 1) * 7 + k, 1)) = 0 And CheckBox14 Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf Len(ztold((j - 1) * 7 + k, 1)) > 0 And CheckBox6 Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf Len(ztold((j - 1) * 7 + k, 1)) > 0 And CheckBox2 Then
If ztold((j - 1) * 7 + k, 1) <> ztipps((j - 1) * 7 + k, 1) Then
anzwarnzus = anzwarnzus + 1
warnzus(anzwarnzus, 1) = ol.Cells(18 + j, 113).Value
warnzus(anzwarnzus, 2) = ztold((j - 1) * 7 + k, 1)
warnzus(anzwarnzus, 3) = ztipps((j - 1) * 7 + k, 1)
warnzus(anzwarnzus, 4) = j
warnzus(anzwarnzus, 5) = k
End If
End If
End If
Next
Next
End If
If CheckBox2 And (anzwarnzus > 0 Or anzwarnerg > 0) Then
oa.Range(oa.Cells(2, 71), oa.Cells(1 + anzwarnerg, 79)).Value = warnerg
oa.Range(oa.Cells(2, 83), oa.Cells(1 + anzwarnzus, 87)).Value = warnzus
oa.Calculate
With UserForm17
.ListBox1.Tag = anzwarnerg
.ListBox2.Tag = anzwarnzus
.Caption = t.Name & ": " & spieler
End With
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm17.Show
working = working_shk
Application.CutCopyMode = False
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If UserForm17.Tag <> "OK" Then
Unload UserForm17
abbruch = True
GoTo weiter
End If
ergdata = oa.Range("cb2:cb" & 2 + anzwarnerg).Value
zusdata = oa.Range("cj2:cj" & 2 + anzwarnzus).Value
For j = 1 To anzwarnerg
If Not ergdata(j, 1) Then
nr = warnerg(j, 9)
tippdata(nr, 1) = oldtipps((nr - 1) * 3 + 1, 1)
tippdata(nr, 2) = oldtipps((nr - 1) * 3 + 2, 1)
tippdata(nr, 3) = oldtipps((nr - 1) * 3 + 3, 1)
End If
Next
For j = 1 To anzwarnzus
If Not zusdata(j, 1) Then
nr = warnzus(j, 4)
k = warnzus(j, 5)
ztipps((nr - 1) * 7 + k, 1) = ztold((nr - 1) * 7 + k, 1)
End If
Next
End If
namen(aidx, 4) = 1
oa.Range("d3:f382").Value = tippdata
oa.Calculate
For j = 1 To anzpaar * anzspt * 3 Step 3
nr = Int(j / 3) + 1
tipps(j, 1) = tippdata(nr, 1)
tipps(j + 1, 1) = tippdata(nr, 2)
tipps(j + 2, 1) = tippdata(nr, 3)
Next
For j = anzpaar * anzspt * 3 + 1 To 1140 Step 3
tipps(j, 1) = Null
tipps(j + 1, 1) = Null
tipps(j + 2, 1) = Null
Next
od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value = tipps
od.Range(od.Cells(1145, idx + 2), od.Cells(1175, idx + 2)).Value = oa.[j2:j32].Value
od.Range(od.Cells(1364, idx + 2), od.Cells(1933, idx + 2)).Value = oa.[n3:n572].Value
od.Range(od.Cells(1936, idx + 2), od.Cells(2315, idx + 2)).Value = oa.[k3:k382].Value
oz.Range(oz.Cells(67, 3 + idx), oz.Cells(109, 3 + idx)).Value = ztipps
End If
weiter:
Next
If CheckBox4.Enabled = True And CheckBox4.Value = True Then
tippdata = oa.[d3:f382]
For lfdnr = 1 To teiln
idx = namen(lfdnr, 3)
If namen(lfdnr, 4) <> 1 Then
tipps = od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value
nr = 0
For j = 1 To 1140 Step 3
nr = nr + 1
tippdata(nr, 1) = tipps(j, 1)
tippdata(nr, 2) = tipps(j + 1, 1)
tippdata(nr, 3) = tipps(j + 2, 1)
Next
oa.Range("d3:f382").Value = tippdata
oa.Calculate
For j = 1 To anzpaar * anzspt * 3 Step 3
nr = Int(j / 3) + 1
tipps(j, 1) = tippdata(nr, 1)
tipps(j + 1, 1) = tippdata(nr, 2)
tipps(j + 2, 1) = tippdata(nr, 3)
Next
For j = anzpaar * anzspt * 3 + 1 To 1140 Step 3
tipps(j, 1) = Null
tipps(j + 1, 1) = Null
tipps(j + 2, 1) = Null
Next
od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value = tipps
od.Range(od.Cells(1145, idx + 2), od.Cells(1175, idx + 2)).Value = oa.[j2:j32].Value
od.Range(od.Cells(1364, idx + 2), od.Cells(1933, idx + 2)).Value = oa.[n3:n572].Value
od.Range(od.Cells(1936, idx + 2), od.Cells(2315, idx + 2)).Value = oa.[k3:k382].Value
End If
Next
With ol
Set lt = t.Sheets("erg")
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
Application.CutCopyMode = False
With op
Set p = t.Sheets("setup")
.[i12].Value = p.[i12].Value
.[i2] = p.[i2]
.[e2:e21].Value = p.[e2:e21].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
Application.CutCopyMode = False
End If
If CheckBox3.Enabled = True And CheckBox3.Value = True Then
Set p = t.Sheets("setup")
With op
.[h7:i10].Value = p.[h7:i10].Value
.[f42:f47].Value = p.[f42:f47].Value
If Len(p.[f32]) > 0 Then .[f32].Value = p.[f32].Value
If Len(p.[f33]) > 0 Then .[f33].Value = p.[f33].Value
If Len(p.[f34]) > 0 Then .[f34].Value = p.[f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
End With
Application.CutCopyMode = False
With oe
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Calculate
Set tk = t.Sheets("ztipps")
.[am4] = tk.[am4]
If tk.[v20] = "Tagessieger" Then tk.[ad6] = "pro Halbserie"
.[z6:aj6].Value = tk.[z6:aj6].Value
If tk.[am4] = 2 Then
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z4:ab4].Locked = False
Else
.[ap4:ar4].Copy Destination:=.[z4]
.[z4:ab4].Locked = True
End If
.ComboBox2.ListIndex = tk.[am4] - 1
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then
.[z11:ab11].Value = tk.[z11:ab11].Value
.[z11:ab11].Locked = False
Else
.[at11:av11].Copy Destination:=.[z11]
.[z11:ab11].Locked = True
End If
.[v12:aj14] = tk.[v12:aj14].Value
.[v21:aj24] = tk.[v21:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then
.[z27:ab27] = tk.[z27:ab27]
.[z27:ab27].Locked = False
Else
.[ao27:aq27].Copy Destination:=.[z27]
.[z27:ab27].Locked = True
End If
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[du42:dv47].Value = tk.[du42:dv47].Value
If tk.[v20] = "Tagessieger" Then
.[du43] = tk.[z20]
.[dv43] = tk.[ab20]
.[du42] = 1
.[dv42] = 1
End If
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
End If
If alfasort Then
ot.Calculate
ot.[by11:by110].Sort key1:=ot.[by11], order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
If teamzahl Then
aw = MsgBox("Der Daten-Import konnte nicht ausgef|fffd|hrt werden, weil die Ligagr|fffd||fffd|en von Zieldatei und Importdatei unterschiedlich sind!" & Chr(13) & Chr(13) & "Zieldatei: " & tzo & " Mannschaften" & Chr(13) & "Tippdatei: " & tzt & " Mannschaften", vbOKOnly, "Vorgang beendet")
ElseIf abbruch Then
aw = MsgBox("Der Daten-Import wurde abgebrochen!", vbOKOnly, "Vorgang beendet")
Else
txt = "Der Daten-Import wurde erfolgreich abgeschlossen"
If CheckBox3 Then txt = txt & Chr(13) & Chr(13) & "Die Kassenverwaltung kann von den Angaben der Importdatei abweichen, wenn die Angaben der Zieldatei '" & ActiveWorkbook.Name & "' bez|fffd|glich Spielerzahl und eingezahlter Beitr|fffd|ge abweichen."
aw = MsgBox(txt, vbOKOnly, "Vorgang beendet")
End If
CommandButton4.Caption = oldcaption
schluss:
Application.CutCopyMode = False
End Sub
Sub perstipp()
If Not usedatlist And anzbatch = 0 Then
aw = MsgBox("Geben Sie zun|fffd|chst die Datei(en) mit den zu importierenden Daten an.", vbInformation, "Keine Importdateien benannt")
Exit Sub
ElseIf anzdat = 0 And usedatlist Then
aw = MsgBox("Geben Sie zun|fffd|chst die Liste mit den zu importierenden Dateien/Verzeichnissen an.", vbInformation, "Keine Dateiliste benannt")
Exit Sub
End If
Set d = Sheets("ligatabelle")
Dim fs
Set fs = CreateObject("Scripting.FileSystemObject")
Application.CutCopyMode = False
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("plan").[k98:k118].Value = settings
settingsp = settings
Sheets("plan").[h101] = 0
d.[dl19:dl24] = d.[dn19:dn24].Value
d.[dh19:dn24].Sort key1:=d.Range("dj19"), order1:=xlAscending, header:=xlNo, MatchCase:=False
Application.Calculation = xlCalculationManual
anzspt = Sheets("plan").[g2]
anzpaar = Sheets("plan").[h2]
spt = [i6]
newall = False
paarung = d.[co3:cp382].Value
If OptionButton5 Then
d.[dd3:dd382].Value = False
za = (spt - 1) * anzpaar + 3
ze = za + anzpaar - 1
d.Range(d.Cells(za, 108), d.Cells(ze, 108)).Value = True
d.Range(d.Cells(3, 111), d.Cells(40, 111)).Value = 0
d.Cells(spt + 2, 111) = anzpaar
d.[di3:dj12].Value = d.Range(d.Cells(za, 93), d.Cells(za + 9, 94)).Value
With UserForm15
.ListBox4.RowSource = "ligatabelle!df3:df" & 2 + anzspt
.ListBox2.RowSource = "ligatabelle!dm3:dm" & 2 + anzpaar
.Label2.Caption = "Paarungen von Spieltag " & [i6]
End With
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm15.Show
working = working_shk
If UserForm15.Tag = "OK" Then
newall = UserForm15.CheckBox1.Value
Application.CutCopyMode = False
Unload UserForm15
Else
Application.CutCopyMode = False
Unload UserForm15
aw = MsgBox("Es wurden keine Daten importiert!", vbOKOnly, "Import abgebrochen")
Exit Sub
End If
ElseIf OptionButton6 Then
d.[dd3:dd382].Value = d.[de3:de382].Value
d.[dl19:dl24] = d.[dn19:dn24].Value
Else
d.Range(d.Cells(3, 108), d.Cells(382, 108)).Value = True
d.[dl19:dl24] = True
End If
Application.CutCopyMode = False
importdat = d.[dd3:dd382].Value
oldcaption = CommandButton4.Caption
CommandButton4.Caption = "Import l|fffd|uft ..."
UserForm14.Repaint
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Application.CutCopyMode = False
If Len(datei) > 0 Then
opendat = True
olddatei = datei
oldfile = Label9.Caption
Workbooks(datei).Close (False)
Else
opendat = False
End If
Set o = ActiveWorkbook
Set oa = ActiveWorkbook.Sheets("auswertung")
Set od = ActiveWorkbook.Sheets("data")
Set oz = ActiveWorkbook.Sheets("zusatztipps")
Set ol = ActiveWorkbook.Sheets("ligatabelle")
Set op = ActiveWorkbook.Sheets("plan")
Set oe = ActiveWorkbook.Sheets("einstellungen")
Set ot = ActiveWorkbook.Sheets("tipps")
oa.[p2:r200].ClearContents
batchzus = oa.[p2:r2000]
alfasort = False
namen = o.Sheets("tipps").[by11:cb110].Value
For i = 1 To 100
namen(i, 4) = 0
Next
teiln = o.Sheets("tipps").[b6].Value
anzopen = anzbatch
If usedatlist Then anzopen = anzdat
i = 0
For dateioeffnen = 1 To anzopen
Application.CutCopyMode = False
verzeichnis = False
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If Not usedatlist Then
oeffnen = filetoopen(dateioeffnen)
Else
If Right(datliste(1, dateioeffnen), 4) = ".xls" Then
oeffnen = datliste(1, dateioeffnen)
Else
dateipfad = Left(datliste(1, dateioeffnen), Len(datliste(1, dateioeffnen)) - 6)
oeffnen = Dir(Left(datliste(1, dateioeffnen), Len(datliste(1, dateioeffnen)) - 6) & "\*.xls")
If oeffnen <> "" Then oeffnen = dateipfad & "\" & oeffnen
verzeichnis = True
End If
End If
Do While oeffnen <> ""
Application.CutCopyMode = False
On Error GoTo endecheck
Set laufwerk = fs.GetDrive(Left(oeffnen, 1))
If Not laufwerk.IsReady Then GoTo weiter
endecheck:
i = i + 1
Set t = ThisWorkbook
If LCase(oeffnen) = LCase(ActiveWorkbook.Path & "\" & ActiveWorkbook.Name) Then
batchzus(i, 1) = ActiveWorkbook.Name
batchzus(i, 2) = "????"
batchzus(i, 3) = "keine g|fffd|ltige Importdatei"
GoTo weiter
End If
teiln_o = teiln
On Error GoTo weiter
newplayer = False
abbruch = False
anzwarnerg = 0
anzwarnzus = 0
zielname = False
Application.ShowWindowsInTaskbar = False
'Mappe |fffd|ffnen
Application.Workbooks.Open Filename:=oeffnen
Set t = ActiveWorkbook
'Fenstertitel in Varibale einlesen
strWindowName = ActiveWindow.Caption
'Fenster (Mappe) ausblenden
Windows(strWindowName).Visible = False
'Anzeige der Fenster in Taskleiste wieder einschalten
Application.ShowWindowsInTaskbar = True

'Application.Workbooks.Open Filename:=oeffnen
'Set t = ActiveWorkbook
o.Activate
batchzus(i, 1) = t.Name
batchzus(i, 2) = "????"
batchzus(i, 3) = "keine g|fffd|ltige Importdatei"
anzsheet = t.Worksheets.Count
If anzsheet < 5 Then GoTo weiter
sheetcheck = 0
For j = 1 To anzsheet
If t.Sheets(j).Name = "Tipps" Then
Set idti = t.Sheets(j)
sheetcheck = sheetcheck + 1
End If
If t.Sheets(j).Name = "daten" Then
Set idda = t.Sheets(j)
sheetcheck = sheetcheck + 1
End If
If t.Sheets(j).Name = "erg" Then
Set iderg = t.Sheets(j)
sheetcheck = sheetcheck + 1
End If
If t.Sheets(j).Name = "setup" Then
Set idset = t.Sheets(j)
sheetcheck = sheetcheck + 1
End If
If t.Sheets(j).Name = "ztipps" Then
Set idzt = t.Sheets(j)
sheetcheck = sheetcheck + 1
End If
Next
If sheetcheck <> 5 Then GoTo weiter
If idda.[a2] <> "perstipp" Then
batchzus(i, 1) = t.Name
batchzus(i, 2) = "????"
batchzus(i, 3) = "keine g|fffd|ltige Importdatei"
GoTo weiter
End If
teamzahl = False
If idset.[e1] <> o.Sheets("plan").[e1] Then
tzo = op.[i21]
tzt = idset.[e1]
batchzus(i, 1) = t.Name
batchzus(i, 2) = idda.[a1].Value
batchzus(i, 3) = "falsche Ligagr|fffd||fffd|e"
teamzahl = True
GoTo weiter
End If
formular = False
datei = t.Name
batchzus(i, 1) = t.Name
batchzus(i, 2) = idda.[a1]
spieler = idda.[a1].Value
If idda.[a3] = "tippform" Then formular = True
If CheckBox4.Enabled = True And CheckBox4.Value = True Then
erg = iderg.[c2:d381].Value
Else
erg = o.Sheets("ligatabelle").[c2:d381].Value
End If
idx = 0
aidx = 0
einsatz = idda.[d2:e2].Value
For j = 1 To teiln
If namen(j, 1) = spieler Then
aidx = j
idx = namen(j, 3)
aw = 1
GoTo allesklar
End If
Next
Call konflikt(namen, teiln, spieler, aidx, idx, aw)
If anzbatch = 1 And aw > 2 Then abbruch = True
allesklar:
If aw = 1 Then
batchzus(i, 3) = "OK"
ElseIf aw = 2 Then
batchzus(i, 3) = "Neuer Mitspieler"
newplayer = True
ElseIf aw = 3 Then
batchzus(i, 3) = "|fffd|bersprungen"
Else
batchzus(i, 3) = "zu viele Mitspieler"
End If
If aw < 3 Then
If namen(aidx, 4) = 1 Then
Application.ScreenUpdating = True
aw1 = MsgBox("Innerhalb des Batchauftrages wurden die Daten von " & Chr(13) & Chr(13) & namen(aidx, 1) & Chr(13) & Chr(13) & "bereits importiert. Soll der Import-Vorgang fortgesetzt werden?", vbYesNo, datei)
Application.ScreenUpdating = False
If aw1 <> 6 Then
batchzus(i, 3) = "abgebrochen"
abbruch = True
GoTo weiter
End If
End If
ztdata = ol.[dl19:dl24].Value
If CheckBox13 Then
ztodaten = oz.[d8:d46].Value
ztidaten = idti.[k4:k44].Value
noprob = True
ztcount = 0
With UserForm29
For j = 1 To 36 Step 7
ztcount = ztcount + 1
ztc = (ztcount - 1) * 3 + 1
If Len(ztodaten(j, 1)) > 0 Then
.Controls("l" & ztc + 2).Caption = ztodaten(j, 1)
.Controls("l" & ztc).Caption = "Teams: " & ztodaten(j + 1, 1)
.Controls("l" & ztc + 1).Caption = ztodaten(j + 3, 1)
Else
.Controls("l" & ztc + 2).Caption = "nicht festgelegt"
End If
If Len(ztidaten(j, 1)) > 0 Then
.Controls("nam" & ztcount).Caption = ztidaten(j, 1)
.Controls("anz" & ztcount).Caption = "Teams: " & ztidaten(j + 1, 1)
.Controls("tab" & ztcount).Caption = ztidaten(j + 3, 1)
Else
.Controls("nam" & ztcount).Caption = "nicht festgelegt"
End If
If ztdata(ztcount, 1) And ztodaten(j, 1) <> ztidaten(j, 1) Then noprob = False
If ztdata(ztcount, 1) And ztodaten(j + 1, 1) <> ztidaten(j + 1, 1) Then noprob = False
If ztdata(ztcount, 1) And ztodaten(j + 3, 1) <> ztidaten(j + 3, 1) Then noprob = False
Next
End With
If Not noprob Then
UserForm29.Tag = t.Name
ztsort = idzt.[a1:a6]
For j = 1 To 6
UserForm29.Controls("cb" & j).Value = ztdata(j, 1)
ztsort(j, 1) = j
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm29.Show
UserForm14.Repaint
If UserForm29.Tag = "Cancel" Then
batchzus(i, 3) = "abgebrochen"
abbruch = True
Unload UserForm29
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
GoTo weiter
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
ztsort = idzt.[a1:a6]
ztdata = idzt.[b1:b6]
Unload UserForm29
End If
End If
If Not ergcheck Then oa.[b3:c382].Value = erg
ergcheck = True
tipps = idda.[c2:c1141].Value
tippform = idti.[g3:j382].Value
pidx = 0
For j = 1 To anzspt * anzpaar
zkonv = (j - 1) * 3 + 1
pidx = pidx + 1
If pidx > anzpaar Then pidx = 1
If Len(tippform(j, 1)) = 0 Or Len(tippform(j, 3)) = 0 Then
tipps(zkonv, 1) = ""
tipps(zkonv + 1, 1) = ""
tipps(zkonv + 2, 1) = 0
ElseIf Not IsNumeric(tippform(j, 1)) Or Not IsNumeric(tippform(j, 3)) Then
tipps(zkonv, 1) = ""
tipps(zkonv + 1, 1) = ""
tipps(zkonv + 2, 1) = 0
Else
tipps(zkonv, 1) = tippform(j, 1)
tipps(zkonv + 1, 1) = tippform(j, 3)
If tippform(j, 4) <> "j" And tippform(j, 4) <> "J" Then
tipps(zkonv + 2, 1) = 0
Else
tipps(zkonv + 2, 1) = pidx
End If
End If
Next
tippdata = oa.[d3:f382]
oldtipps = od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value
nr = 0
warnerg = oa.[bs2:ca381].Value
warnzus = oa.[ce2:ci31].Value
For j = 1 To anzspt * anzpaar * 3 Step 3
nr = nr + 1
If newplayer And newall Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
ElseIf Not importdat(nr, 1) Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
ElseIf Len(oldtipps(j, 1)) = 0 And Len(oldtipps(j + 1, 1)) = 0 Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
ElseIf CheckBox14.Value = True And Len(tipps(j, 1)) = 0 And Len(tipps(j + 1, 1)) = 0 Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
ElseIf CheckBox1.Value = True Then
If Not CheckBox5 Then
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
Else
If Len(erg(nr, 1)) = 0 And Len(erg(nr, 2)) = 0 Then
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
Else
ht = oldtipps(j, 1)
at = oldtipps(j + 1, 1)
joker = oldtipps(j + 2, 1)
End If
End If
Else
ht = tipps(j, 1)
at = tipps(j + 1, 1)
joker = tipps(j + 2, 1)
If CheckBox2 Then
If oldtipps(j, 1) = ht And oldtipps(j + 1, 1) = at And ((oldtipps(j + 2, 1) = joker) Or (oldtipps(j + 2, 1) = 0 And Len(joker) = 0) Or (joker = 0 And Len(oldtipps(j + 2, 1)) = 0) Or (Len(joker) = 0 And Len(oldtipps(j + 2, 1)) = 0)) Then GoTo eintragen
anzwarnerg = anzwarnerg + 1
warnerg(anzwarnerg, 1) = paarung(nr, 1)
warnerg(anzwarnerg, 2) = paarung(nr, 2)
warnerg(anzwarnerg, 3) = oldtipps(j, 1)
warnerg(anzwarnerg, 4) = oldtipps(j + 1, 1)
If oldtipps(j + 2, 1) > 0 Then
warnerg(anzwarnerg, 5) = "(J)"
Else
warnerg(anzwarnerg, 5) = Null
End If
warnerg(anzwarnerg, 6) = tipps(j, 1)
warnerg(anzwarnerg, 7) = tipps(j + 1, 1)
If tipps(j + 2, 1) > 0 Then
warnerg(anzwarnerg, 8) = "(J)"
Else
warnerg(anzwarnerg, 8) = Null
End If
warnerg(anzwarnerg, 9) = nr
End If
End If
eintragen:
tippdata(nr, 1) = ht
tippdata(nr, 2) = at
tippdata(nr, 3) = joker
Next
ztipps = idzt.[d67:d109].Value
ztold = oz.Range(oz.Cells(67, 3 + idx), oz.Cells(109, 3 + idx)).Value
ztform = idti.[l3:l42].Value
ztset = idti.[p3:p42].Value
ztseto = o.Sheets("zusatztipps").[c7:c46].Value
For j = 1 To 40
If ztseto(j, 1) = 0 Then
ztipps(j, 1) = ""
ElseIf ztset(j, 1) = 1 Then
If Len(ztform(j, 1)) = 0 Then
ztipps(j, 1) = ""
Else
ztipps(j, 1) = ztform(j, 1)
End If
Else
ztipps(j, 1) = ""
End If
Next
For j = 1 To 6
For k = 1 To 4
For l = k + 1 To 5
z1 = (j - 1) * 7 + k
z2 = (j - 1) * 7 + l
If Len(ztipps(z2, 1)) > 0 And ztipps(z2, 1) = ztipps(z1, 1) Then ztipps(z2, 1) = ""
Next
Next
Next
If CheckBox13 And Not noprob Then
ztippss = ztipps
For j = 1 To 6
ztnr = ztsort(j, 1)
For k = 1 To 7
ztipps((j - 1) * 7 + k, 1) = ztippss((ztnr - 1) * 7 + k, 1)
Next
Next
End If
If newplayer And newall Then
For j = 1 To 6
For k = 1 To 5
If oz.Cells(172, 8 + j) < k Then ztipps((j - 1) * 7 + k, 1) = ""
Next
Next
Else
For j = 1 To 6
For k = 1 To 5
If Not ztdata(j, 1) Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf oz.Cells(172, 8 + j) < k Then
ztipps((j - 1) * 7 + k, 1) = ""
Else
If Len(ztipps((j - 1) * 7 + k, 1)) = 0 And CheckBox14 Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf Len(ztold((j - 1) * 7 + k, 1)) > 0 And CheckBox6 Then
ztipps((j - 1) * 7 + k, 1) = ztold((j - 1) * 7 + k, 1)
ElseIf Len(ztold((j - 1) * 7 + k, 1)) > 0 And CheckBox2 Then
If ztold((j - 1) * 7 + k, 1) <> ztipps((j - 1) * 7 + k, 1) Then
anzwarnzus = anzwarnzus + 1
warnzus(anzwarnzus, 1) = ol.Cells(18 + j, 113).Value
warnzus(anzwarnzus, 2) = ztold((j - 1) * 7 + k, 1)
warnzus(anzwarnzus, 3) = ztipps((j - 1) * 7 + k, 1)
warnzus(anzwarnzus, 4) = j
warnzus(anzwarnzus, 5) = k
End If
End If
End If
Next
Next
End If
If CheckBox2 And (anzwarnzus > 0 Or anzwarnerg > 0) Then
oa.Range(oa.Cells(2, 71), oa.Cells(1 + anzwarnerg, 79)).Value = warnerg
oa.Range(oa.Cells(2, 83), oa.Cells(1 + anzwarnzus, 87)).Value = warnzus
oa.Calculate
With UserForm17
.ListBox1.Tag = anzwarnerg
.ListBox2.Tag = anzwarnzus
.Caption = datei & ": " & spieler
End With
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm17.Show
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If UserForm17.Tag <> "OK" Then
Application.CutCopyMode = False
Unload UserForm17
batchzus(i, 3) = "abgebrochen"
abbruch = True
GoTo weiter
End If
ergdata = oa.Range("cb2:cb" & 2 + anzwarnerg).Value
zusdata = oa.Range("cj2:cj" & 2 + anzwarnzus).Value
For j = 1 To anzwarnerg
If Not ergdata(j, 1) Then
nr = warnerg(j, 9)
tippdata(nr, 1) = oldtipps((nr - 1) * 3 + 1, 1)
tippdata(nr, 2) = oldtipps((nr - 1) * 3 + 2, 1)
tippdata(nr, 3) = oldtipps((nr - 1) * 3 + 3, 1)
End If
Next
For j = 1 To anzwarnzus
If Not zusdata(j, 1) Then
nr = warnzus(j, 4)
k = warnzus(j, 5)
ztipps((nr - 1) * 7 + k, 1) = ztold((nr - 1) * 7 + k, 1)
End If
Next
End If
If anzbatch = 1 And spieler = idda.[a1].Value Then Label7.Caption = "Mitspieler: " & spieler
If Not formular Then
If aw = 1 Or CheckBox12 Then
If CheckBox10 Then ot.Cells(10 + idx, 109) = idda.[d2]
If CheckBox11 Then ot.Cells(10 + idx, 110) = idda.[e2]
If CheckBox10 Then oe.Range(oe.Cells(104 + idx, 82), oe.Cells(104 + idx, 81 + anzspt / 2)).Value = idzt.Range(idzt.Cells(1105, 82), idzt.Cells(1105, 81 + anzspt / 2)).Value
If CheckBox11 Then oe.Range(oe.Cells(104 + idx, 82 + anzspt / 2), oe.Cells(104 + idx, 119)).Value = idzt.Range(idzt.Cells(1105, 82 + anzspt / 2), idzt.Cells(1105, 119)).Value
ElseIf Not OptionButton1.Value = True Then
If CheckBox8 Then ot.Cells(10 + idx, 109) = 1
If CheckBox9 Then ot.Cells(10 + idx, 110) = 1
If CheckBox8 Then oe.Range(oe.Cells(104 + idx, 82), oe.Cells(104 + idx, 81 + anzspt / 2)).Value = 1
If CheckBox9 Then oe.Range(oe.Cells(104 + idx, 82 + anzspt / 2), oe.Cells(104 + idx, 119)).Value = 1
End If
End If
namen(aidx, 4) = 1
oa.Range("d3:f382").Value = tippdata
oa.Calculate
For j = 1 To anzpaar * anzspt * 3 Step 3
nr = Int(j / 3) + 1
tipps(j, 1) = tippdata(nr, 1)
tipps(j + 1, 1) = tippdata(nr, 2)
tipps(j + 2, 1) = tippdata(nr, 3)
Next
For j = anzpaar * anzspt * 3 + 1 To 1140 Step 3
tipps(j, 1) = Null
tipps(j + 1, 1) = Null
tipps(j + 2, 1) = Null
Next
od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value = tipps
od.Range(od.Cells(1145, idx + 2), od.Cells(1175, idx + 2)).Value = oa.[j2:j32].Value
od.Range(od.Cells(1364, idx + 2), od.Cells(1933, idx + 2)).Value = oa.[n3:n572].Value
od.Range(od.Cells(1936, idx + 2), od.Cells(2315, idx + 2)).Value = oa.[k3:k382].Value
oz.Range(oz.Cells(67, 3 + idx), oz.Cells(109, 3 + idx)).Value = ztipps
End If
weiter:
If abbruch Then
If teiln_o < teiln Then
Sheets("Tipps").Cells(teiln + 10, 77).ClearContents
Sheets("Tipps").Cells(teiln + 10, 78).ClearContents
Sheets("Tipps").Cells(teiln + 10, 109).ClearContents
Sheets("Tipps").Cells(teiln + 10, 110).ClearContents
namen(teiln, 1) = Null
namen(teiln, 2) = Null
namen(teiln, 3) = Null
teiln = teiln_o
ElseIf aw = 1 And zielname Then
Sheets("Tipps").Cells(aidx + 10, 77).Value = name_o
Sheets("Tipps").Cells(idx + 10, 78) = name_o
namen(aidx, 1) = name_o
namen(idx, 2) = name_o
End If
End If
On Error Resume Next
If (usedatlist Or (Not usedatlist And anzbatch > 1)) And (t.Name <> o.Name) Then t.Close (False)
If verzeichnis Then
oeffnen = Dir
If oeffnen <> "" Then oeffnen = dateipfad & "\" & oeffnen
Else
oeffnen = ""
End If
Loop
Next
geoeffnet = i
If CheckBox4.Enabled = True And CheckBox4.Value = True And Not teamanz And Not abbruch Then
tippdata = oa.[d3:f382]
For lfdnr = 1 To teiln
idx = namen(lfdnr, 3)
If namen(lfdnr, 4) <> 1 Then
tipps = od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value
nr = 0
For j = 1 To 1140 Step 3
nr = nr + 1
tippdata(nr, 1) = tipps(j, 1)
tippdata(nr, 2) = tipps(j + 1, 1)
tippdata(nr, 3) = tipps(j + 2, 1)
Next
oa.Range("d3:f382").Value = tippdata
oa.Calculate
For j = 1 To anzpaar * anzspt * 3 Step 3
nr = Int(j / 3) + 1
tipps(j, 1) = tippdata(nr, 1)
tipps(j + 1, 1) = tippdata(nr, 2)
tipps(j + 2, 1) = tippdata(nr, 3)
Next
For j = anzpaar * anzspt * 3 + 1 To 1140 Step 3
tipps(j, 1) = Null
tipps(j + 1, 1) = Null
tipps(j + 2, 1) = Null
Next
od.Range(od.Cells(2, idx + 2), od.Cells(1141, idx + 2)).Value = tipps
od.Range(od.Cells(1145, idx + 2), od.Cells(1175, idx + 2)).Value = oa.[j2:j32].Value
od.Range(od.Cells(1364, idx + 2), od.Cells(1933, idx + 2)).Value = oa.[n3:n572].Value
od.Range(od.Cells(1936, idx + 2), od.Cells(2315, idx + 2)).Value = oa.[k3:k382].Value
End If
Next
With ol
Set lt = iderg
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
Application.CutCopyMode = False
With op
Set p = idset
.[i12].Value = p.[i12].Value
.[i2].Value = p.[i2].Value
.[e2:e21].Value = p.[e2:e21].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
Application.CutCopyMode = False
End If
If CheckBox3.Enabled = True And CheckBox3.Value = True And Not teamanz And Not abbruch Then
Set p = idset
With op
.[h7:i10].Value = p.[h7:i10].Value
.[f42:f47].Value = p.[f42:f47].Value
If Len(p.[f32]) > 0 Then .[f32].Value = p.[f32].Value
If Len(p.[f33]) > 0 Then .[f33].Value = p.[f33].Value
If Len(p.[f34]) > 0 Then .[f34].Value = p.[f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
End With
Application.CutCopyMode = False
With oe
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
.Calculate
Set tk = idzt
.[am4] = tk.[am4]
If tk.[v20] = "Tagessieger" Then tk.[ad6] = "pro Halbserie"
.[z6:aj6].Value = tk.[z6:aj6].Value
If tk.[am4] = 2 Then
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z4:ab4].Locked = False
Else
.[ap4:ar4].Copy Destination:=.[z4]
.[z4:ab4].Locked = True
End If
.ComboBox2.ListIndex = tk.[am4] - 1
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then
.[z11:ab11].Value = tk.[z11:ab11].Value
.[z11:ab11].Locked = False
Else
.[at11:av11].Copy Destination:=.[z11]
.[z11:ab11].Locked = True
End If
.[v12:aj14] = tk.[v12:aj14].Value
.[v21:aj24] = tk.[v21:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then
.[z27:ab27] = tk.[z27:ab27]
.[z27:ab27].Locked = False
Else
.[ao27:aq27].Copy Destination:=.[z27]
.[z27:ab27].Locked = True
End If
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[du42:dv47].Value = tk.[du42:dv47].Value
If tk.[v20] = "Tagessieger" Then
.[du43] = tk.[z20]
.[dv43] = tk.[ab20]
.[du42] = 1
.[dv42] = 1
End If
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
Application.CutCopyMode = False
End If
If opendat Then
datei = olddatei
If Len(olddatei) > 0 Then
'Application.Workbooks.Open Filename:=oldfile
Application.ShowWindowsInTaskbar = False
'Mappe |fffd|ffnen
Application.Workbooks.Open Filename:=oldfile
'Fenstertitel in Varibale einlesen
strWindowName = ActiveWindow.Caption
'Fenster (Mappe) ausblenden
Windows(strWindowName).Visible = False
'Anzeige der Fenster in Taskleiste wieder einschalten
Application.ShowWindowsInTaskbar = True
o.Activate
End If
Else
datei = ""
End If
If alfasort Then
ot.Calculate
ot.[by11:by110].Sort key1:=ot.[by11], order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
If geoeffnet > 1 Then
oa.Range("p2:r" & geoeffnet + 1).Value = batchzus
UserForm23.ListBox1.RowSource = "auswertung!p2:r" & geoeffnet + 1
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm23.Show
Unload UserForm23
Else
On Error Resume Next
If t.Name <> o.Name Then t.Close (False)
If teamzahl Then
aw = MsgBox("Der Daten-Import konnte nicht ausgef|fffd|hrt werden, weil die Ligagr|fffd||fffd|en von Zieldatei und Importdatei unterschiedlich sind!" & Chr(13) & Chr(13) & "Zieldatei: " & tzo & " Mannschaften" & Chr(13) & "Tippdatei: " & tzt & " Mannschaften", vbOKOnly, "Vorgang beendet")
ElseIf abbruch Then
aw = MsgBox("Der Daten-Import wurde abgebrochen!", vbOKOnly, "Vorgang beendet")
Else
txt = "Der Daten-Import wurde erfolgreich abgeschlossen"
If CheckBox3 Then txt = txt & Chr(13) & Chr(13) & "Die Kassenverwaltung kann von den Angaben der Importdatei abweichen, wenn die Angaben der Zieldatei '" & ActiveWorkbook.Name & "' bez|fffd|glich Spielerzahl und eingezahlter Beitr|fffd|ge abweichen."
aw = MsgBox(txt, vbOKOnly, "Vorgang beendet")
End If
End If
CommandButton4.Caption = oldcaption
Application.CutCopyMode = False
End Sub
Private Sub CommandButton6_Click()
On Error GoTo ende
Set o = ActiveWorkbook
Application.CutCopyMode = False
ud = Application.GetOpenFilename("Updatedatei |fffd|ffnen (*.xls),*.xls", 1, "Importieren", , False)
If ud = False Then Exit Sub
If ud = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name Then
aw = MsgBox("Dies ist keine Updatedatei:" & Chr(13) & ud, vbOKOnly, "Fehler!")
Exit Sub
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
'Application.Workbooks.Open Filename:=ud
'Set t = ActiveWorkbook
Application.ShowWindowsInTaskbar = False
'Mappe |fffd|ffnen
Application.Workbooks.Open Filename:=ud
Set t = ActiveWorkbook
'Fenstertitel in Varibale einlesen
strWindowName = ActiveWindow.Caption
'Fenster (Mappe) ausblenden
Windows(strWindowName).Visible = False
'Anzeige der Fenster in Taskleiste wieder einschalten
Application.ShowWindowsInTaskbar = True

o.Activate
offen = True
anzsheet = t.Worksheets.Count
sheetcheck = 0
For j = 1 To anzsheet
If t.Sheets(j).Name = "Tipps" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "daten" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "erg" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "setup" Then sheetcheck = sheetcheck + 1
If t.Sheets(j).Name = "ztipps" Then sheetcheck = sheetcheck + 1
Next
If sheetcheck <> 5 Then
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Dies ist keine Updatedatei:" & Chr(13) & Chr(13) & ud, vbOKOnly, "Fehler!")
t.Close (False)
Exit Sub
End If
If t.Sheets("daten").[a2] <> "tippupdate" Then
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Dies ist keine Updatedatei:" & Chr(13) & Chr(13) & ud, vbOKOnly, "Fehler!")
t.Close (False)
Exit Sub
End If
If t.Sheets("setup").[e1] <> o.Sheets("plan").[e1] Then
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Die Teamzahl der Update-Datei (" & t.Sheets("setup").[e1] & ") stimmt nicht mit der Anzahl der Teams in der Zieldatei (" & o.Sheets("plan").[e1] & ") |fffd|berein!" & Chr(13) & "Diese Updatedatei kann nur genutzt werden, wenn der Zustand der Ausgangsdatei hergestellt werden soll.", vbOKCancel, "Ungleiche Ligagr|fffd||fffd|e")
If aw = 1 Then
op1.Value = True
Label9.Caption = t.Name
Label15.Caption = "Mitspieler: " & t.Sheets("Daten").[b1]
Label16.Caption = "Datum: " & t.Sheets("Daten").[a1]
datei = ud
udname = t.Name
op2.Enabled = False
op3.Enabled = False
op4.Enabled = False
Else
t.Close (False)
op2.Enabled = True
op3.Enabled = True
op4.Enabled = True
End If
Exit Sub
End If
Label9.Caption = t.Name
Label15.Caption = "Mitspieler: " & t.Sheets("Daten").[b1]
Label16.Caption = "Datum: " & t.Sheets("Daten").[a1]
On Error Resume Next
If Len(datei) > 0 Then Workbooks(udname).Close (False)
datei = ud
udname = t.Name
[d1].Value = udname
Application.ScreenUpdating = True
Application.EnableEvents = True
Set laufwerk = Nothing
Exit Sub
ende:
On Error Resume Next
Application.ScreenUpdating = True
Application.EnableEvents = True
If offen Then aw = MsgBox("Dies ist keine Updatedatei:" & Chr(13) & Chr(13) & ud, vbOKOnly, "Fehler!")
If offen Then t.Close (False)
Set laufwerk = Nothing
End Sub
Private Sub CommandButton7_Click()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set d = ActiveWorkbook.Sheets("data")
Set lt = ActiveWorkbook.Sheets("ligatabelle")
Set p = ActiveWorkbook.Sheets("plan")
Set zt = ActiveWorkbook.Sheets("zusatztipps")
Set tk = ActiveWorkbook.Sheets("einstellungen")
Set tt = ActiveWorkbook.Sheets("tipps")
lt.[cx1] = ComboBox1.ListIndex + 1
lt.Calculate
Set td = ActiveWorkbook
Application.Workbooks.Add
Set nwb = ActiveWorkbook
nwb.Colors = td.Colors
For i = Application.SheetsInNewWorkbook + 1 To 5
nwb.Sheets.Add
Next
nwb.Sheets(1).Name = "Tipps"
nwb.Sheets(2).Name = "daten"
nwb.Sheets(3).Name = "erg"
nwb.Sheets(4).Name = "setup"
nwb.Sheets(5).Name = "ztipps"
nwb.Sheets(2).Visible = xlVeryHidden
nwb.Sheets(3).Visible = xlVeryHidden
nwb.Sheets(4).Visible = xlVeryHidden
nwb.Sheets(5).Visible = xlVeryHidden
nwb.Sheets(1).[a1] = "Name: "
anzpaar = lt.[cm2]
With nwb.Sheets(4)
.[h7:i10].Value = p.[h7:i10].Value
.[i21] = p.[i21]
.[i2].Value = p.[i2].Value
.[f42:f47].Value = p.[f42:f47].Value
.[f32:f34].Value = p.[f32:f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[h63].Value = p.[h63].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
.[e1:e21].Value = p.[e1:e21].Value
.[i12].Value = p.[i12].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
With nwb.Sheets(1)
lt.Range("cn2:cv" & anzpaar + 2).Copy Destination:=nwb.Sheets(1).[a2]
For i = 1 To 9
.Cells(1, i).ColumnWidth = lt.Cells(1, i + 91).ColumnWidth
Next
.Range("a2:i" & anzpaar + 2).Value = lt.Range("cn2:cv" & anzpaar + 2).Value
.Range("g3:i" & anzpaar + 2).ClearContents
zt.Range("d7:e47").Copy Destination:=nwb.Sheets(1).[k2]
.[k2].ColumnWidth = zt.[d1].ColumnWidth
.[l2].ColumnWidth = zt.[e1].ColumnWidth
.[k2:k42].Value = zt.[d7:d47].Value
.[l2:l42].Value = zt.Range(zt.Cells(7, aidx * 2 + 3), zt.Cells(47, aidx * 2 + 3)).Value
.Range("K1:l100").FormatConditions.Delete
.Range("K1:l100").ClearComments
.Range("n3:n" & p.[e1] + 2).Value = p.Range(p.Cells(2, 5), p.Cells(p.[e1] + 1, 5)).Value
.[p2:p41].Value = zt.[c7:c46].Value
.[d1:f1].EntireColumn.Hidden = True
.[d3:f382].ClearContents
.Columns("J:J").ColumnWidth = 24.43
.[j2] = "F|fffd|r Joker j oder J eingeben"
.[c2].Copy
.[j2].PasteSpecial Paste:=xlPasteFormats
td.Sheets("html").[l32:l71].Copy Destination:=.[l2]
For i = 1 To 6
For j = 1 To 5
z = (i - 1) * 7 + j + 1
If zt.Cells(z + 5, 3) = 1 Then
With .Cells(z, 12).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$n$3:$n$" & p.[e1] + 2
.IgnoreBlank = True
.InCellDropdown = True
.ErrorTitle = "Fehler"
.ErrorMessage = "W|fffd|hlen Sie ein Team aus der Liste!"
.ShowInput = False
.ShowError = True
End With
.Cells(z, 12).Locked = False
Else
.Cells(z, 12).Locked = True
End If
Next
Next
td.Sheets("html").[g3:j3].Copy Destination:=.[g3:j3]
.Range("g3:j3").AutoFill Destination:=.Range("g3:j" & anzpaar + 2)
Sheets(aktuelleseite).Activate
With .[b1:i1]
.Locked = False
.HorizontalAlignment = xlLeft
.VerticalAlignment = xlCenter
.WrapText = False
.Orientation = 0
.AddIndent = False
.IndentLevel = 0
.ShrinkToFit = False
.ReadingOrder = xlContext
.MergeCells = True
.Interior.ColorIndex = 35
End With
.Range("g3:j" & p.[g2] * p.[h2] + 2).Locked = False
.Range("h3:h" & p.[g2] * p.[h2] + 2).Locked = True
.[m1:p1].EntireColumn.Hidden = True
.[k1:q1].Insert Shift:=xlDown
.[m3] = p.[h2]
End With
With nwb.Sheets(2)
.[a1].Formula = "=tipps!b1"
.[a2] = "perstipp"
.[a3] = "tippform"
End With
nwb.Names("Teams").Delete
nwb.Activate
nwb.Sheets(1).Select
nwb.Sheets(1).[b3].Select
ActiveWindow.FreezePanes = True
td.Activate
nwb.Sheets(1).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
nwb.Sheets.Add before:=nwb.Sheets("Tipps")
nwb.Sheets(1).Name = "Info"
nwb.Sheets("Info").[a1] = "Hier k|fffd|nnen Sie Informationen |fffd|ber die Tippabgabe eingeben"
nwb.Sheets("Tipps").Activate
nwb.Sheets("Tipps").[j3].Select
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
speichern:
On Error GoTo ende
Application.CutCopyMode = False
datname = Application.GetSaveAsFilename("tippformular", "Tippformular (*.xls),*.xls", , "Tippformularspeichern", "Speichern unter")
If datname <> False Then
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:=datname, FileFormat:=xlExcel8
Else
nwb.SaveAs datname
End If
aw = MsgBox("Die Datei wurde erfolgreich erstellt und gespeichert." & Chr(13) & Chr(13) & "|fffd|ber die Importfunktion k|fffd|nnen eingegebene Tipps in andere Dateien des Tippspiels |fffd|bertragen werden." & Chr(13) & Chr(13) & "Soll die Datei des Tippformulars nun geschlossen werden?", vbYesNo, "Vorgang abgeschlossen")
If aw = 6 Then nwb.Close (False)
td.Activate
Exit Sub
End If
ende:
ziel = datname
If Len(ziel) > 0 Then
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
For i = 1 To Application.Workbooks.Count
If dateiname = Application.Workbooks(i).Name Then
aw = MsgBox("Eine Datei mit dem Namen: " & dateiname & Chr(13) & "ist bereits ge|fffd|ffnet! Excel erlaubt nicht, dass 2 gleichnamige Dateien gleichzeitig ge|fffd|ffnet sind, selbst wenn diese in unterschiedlichen Ordnern gespeichert sind.", vbOKOnly, "Bitte einen anderen Namen w|fffd|hlen")
GoTo speichern
End If
Next
End If
On Error Resume Next
aw = MsgBox("Die Datei wurde nicht gespeichert!", vbOKOnly, "Warnung!")
nwb.Close (False)
td.Activate
End Sub
Private Sub CommandButton8_Click()
If anzdat > 0 Then
For i = 1 To anzdat
datlist.ListBox1.AddItem datliste(1, i)
Next
End If
datlist.Tag = anzdat
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
datlist.Show
If Val(datlist.Tag) > 0 Then
anzdat = Val(datlist.Tag)
n = 0
For i = 1 To anzdat
If datlist.ListBox1.Selected(i - 1) = True Then
n = n + 1
datliste(1, n) = datlist.ListBox1.List(i - 1, 0)
End If
Next
If n > 0 Then
anzdat = n
usedatlist = True
Label6.Caption = "Import |fffd|ber Dateiliste:"
Label7.Caption = anzdat & " Dateien/Verzeichnisse wurden f|fffd|r den Import angegeben"
CheckBox3.Enabled = False
CheckBox4.Enabled = False
CheckBox3.Value = False
CheckBox4.Value = False
End If
End If
Unload datlist
End Sub

Private Sub Frame1_Click()

End Sub

Private Sub Image1_Click()
txt = "Das Tippformular bietet die M|fffd|glichkeit Ergebnis- und Zusatztipps direkt in der Datei einzutragen. Ein Nutzer des Formulars kann so seine Tipps abgeben, ohne das eigentliche Tippprogramm zu nutzen." & " Beim Importieren kann ein Tippformular wie eine pers. Tippdatei verwendet werden. Allerdings k|fffd|nnen aus dem Formular keine Ergebnisse und Tippspiel-Einstellungen importiert werden." & Chr(13) & Chr(13) & "Bei pers. Tippdateien und Updatedateien werden Tipps, Ergebnisse und Tippspiel-Einstellungen aus dem Tippprogramm in neu erstellte Dateien |fffd|bertragen." & Chr(13) & Chr(13) & "Die pers. Tippdatei enth|fffd|lt dabei ausschlie|fffd|lich die Tipps EINES Mitspielers." & Chr(13) & "Es ist m|fffd|glich, die Daten mehrerer pers. Tippdateien und/oder Tippformulare gleichzeitig zu importieren (Batch-Import)." & Chr(13) & Chr(13) & "Die Update-Datei enth|fffd|lt die Daten ALLER Mitspieler der Ausgangsdatei." & " Beim Importieren k|fffd|nnen sp|fffd|ter alle Daten oder die ausgew|fffd|hlter Mitspieler |fffd|bertragen werden."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Sub konflikt(namen, teiln, spieler, aidx, idx, aw)
quelle = datei
If OptionButton12 Then quelle = udname
If OptionButton3 Then
aw = 3
ElseIf OptionButton2 And spieler <> "0" Then
If teiln = 100 Then
aw = 4
Else
aw = 2
aidx = teiln + 1
idx = teiln + 1
lfdnr = 0
nochmal:
lfdnr = lfdnr + 1
If lfdnr = 1 Then
neu = spieler
Else
neu = spieler & "_#" & lfdnr
End If
For j = 1 To teiln
If neu = namen(j, 1) Then GoTo nochmal
Next
If CheckBox7.Value = True Then alfasort = True
spieler = neu
teiln = teiln + 1
ThisWorkbook.Sheets("Tipps").Cells(aidx + 10, 77) = spieler
ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 78) = spieler
namen(teiln, 1) = neu
namen(teiln, 2) = neu
namen(teiln, 3) = idx
End If
Else
With Userform16
If teiln > 0 Then
.ComboBox1.RowSource = "tipps!by11:by" & 10 + teiln
.ComboBox1.ListIndex = 0
Else
.ComboBox1.Enabled = False
.OptionButton2.Enabled = False
End If
If teiln = 100 Then .OptionButton3.Enabled = False
.Label2.Caption = quelle
.Label4.Caption = spieler
If CheckBox12 Then
.OptionButton4.Value = True
.CheckBox3.Value = UserForm14.CheckBox10.Value
.CheckBox4.Value = UserForm14.CheckBox11.Value
Else
.OptionButton5.Value = True
.CheckBox3.Value = UserForm14.CheckBox8.Value
.CheckBox4.Value = UserForm14.CheckBox9.Value
End If
.CheckBox2.Value = UserForm14.CheckBox7.Value
If spieler = "0" Then
.CheckBox1.Value = False
.CheckBox1.Visible = False
.TextBox1.Visible = True
.TextBox1.Value = "Namen eingeben"
.Label4.Caption = "WARNUNG: die Datei enth|fffd|lt keinen Namen"
.OptionButton4.Enabled = False
.OptionButton5.Value = True
End If
End With
Application.ScreenUpdating = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Userform16.Show
Application.ScreenUpdating = False
With Userform16
If .OptionButton1 Then
aw = 3
ElseIf .OptionButton2 Then
aw = 1
aidx = .ComboBox1.ListIndex + 1
idx = namen(aidx, 3)
If .CheckBox1.Value = True Then
zielname = True
name_o = ThisWorkbook.Sheets("Tipps").Cells(aidx + 10, 77)
ThisWorkbook.Sheets("Tipps").Cells(aidx + 10, 77) = spieler
ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 78) = spieler
If .CheckBox2.Value = True Then alfasort = True
namen(aidx, 1) = spieler
namen(idx, 2) = spieler
Else
spieler = .ComboBox1.Value
End If
Else
aw = 2
aidx = teiln + 1
idx = teiln + 1
lfdnr = 0
nochmal2:
lfdnr = lfdnr + 1
If lfdnr = 1 Then
neu = spieler
If spieler = "0" Then neu = .TextBox1.Value
Else
neu = spieler & "_#" & lfdnr
End If
For j = 1 To teiln
If neu = namen(j, 1) Then GoTo nochmal2
Next
If .CheckBox2.Value = True Then alfasort = True
spieler = neu
teiln = teiln + 1
namen(teiln, 1) = neu
namen(teiln, 2) = neu
namen(teiln, 3) = idx
ThisWorkbook.Sheets("Tipps").Cells(aidx + 10, 77) = spieler
ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 78) = spieler
If .OptionButton4 And Not formular Then
If .CheckBox3 Then ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 109) = einsatz(1, 1)
If .CheckBox4 Then ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 110) = einsatz(1, 2)
Else
anz_spths = ThisWorkbook.Sheets("plan").[g2] / 2
If .CheckBox3 Then ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 109) = 1
If .CheckBox4 Then ThisWorkbook.Sheets("Tipps").Cells(idx + 10, 110) = 1
Set shein = ThisWorkbook.Sheets("einstellungen")
ber = Range(Cells(104 + idx, 82), Cells(104 + idx, 81 + anz_spths)).Address
If .CheckBox3 Then shein.Range(ber).Value = 1
ber = Range(Cells(104 + idx, 82 + anz_spths), Cells(104 + idx, 119)).Address
If .CheckBox4 Then shein.Range(ber).Value = 1
End If
End If
End With
Unload Userform16
End If
allesklar:
End Sub
Private Sub Image2_Click()
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm18.Show
Unload UserForm18
End Sub
Private Sub op1_Click()
Frame3.Enabled = False
Frame4.Enabled = False
CheckBox10.Enabled = False
CheckBox11.Enabled = False
CheckBox12.Enabled = False
settings(19, 1) = 1
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub op2_Click()
Frame3.Enabled = True
Frame4.Enabled = True
CheckBox10.Enabled = True
CheckBox11.Enabled = True
CheckBox12.Enabled = True
settings(19, 1) = 2
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub op3_Click()
Frame3.Enabled = False
OptionButton3.Value = True
Frame4.Enabled = True
CheckBox10.Enabled = True
CheckBox11.Enabled = True
CheckBox12.Enabled = True
settings(19, 1) = 3
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub op4_Click()
Frame3.Enabled = True
Frame4.Enabled = True
CheckBox10.Enabled = True
CheckBox11.Enabled = True
CheckBox12.Enabled = True
settings(19, 1) = 4
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub OptionButton1_Click()
settings(1, 1) = OptionButton1.Value
settings(2, 1) = OptionButton2.Value
settings(3, 1) = OptionButton3.Value
End Sub
Private Sub OptionButton11_Click()
Frame6.Visible = True
Frame5.Visible = False
settings = settingsp
If anzbatch > 1 Then
CheckBox3.Enabled = False
CheckBox4.Enabled = False
Else
CheckBox3.Enabled = True
CheckBox4.Enabled = True
End If
Call setsettings
End Sub
Private Sub OptionButton12_Click()
Frame5.Visible = True
Frame6.Visible = False
settings = settingsu
CheckBox3.Enabled = True
CheckBox4.Enabled = True
Call setsettings
End Sub
Private Sub OptionButton2_Click()
settings(1, 1) = OptionButton1.Value
settings(2, 1) = OptionButton2.Value
settings(3, 1) = OptionButton3.Value
End Sub
Private Sub OptionButton3_Click()
settings(1, 1) = OptionButton1.Value
settings(2, 1) = OptionButton2.Value
settings(3, 1) = OptionButton3.Value
End Sub
Private Sub OptionButton4_Click()
settings(4, 1) = OptionButton4.Value
settings(5, 1) = OptionButton5.Value
settings(6, 1) = OptionButton6.Value
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub OptionButton5_Click()
settings(4, 1) = OptionButton4.Value
settings(5, 1) = OptionButton5.Value
settings(6, 1) = OptionButton6.Value
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub OptionButton6_Click()
settings(4, 1) = OptionButton4.Value
settings(5, 1) = OptionButton5.Value
settings(6, 1) = OptionButton6.Value
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
atwork = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
settingsp = Sheets("plan").[k98:k118].Value
settingsu = Sheets("plan").[l98:l118].Value
settings = Sheets("plan").[m98:m118].Value
anzdat = 0
datliste = Sheets("dateiliste").[a1003:cz1003]
usedatlist = False
If Sheets("plan").[h101] = 0 Then
settings = settingsp
OptionButton11.Value = True
Else
settings = settingsu
OptionButton12.Value = True
End If
Set lt = Sheets("ligatabelle")
cb1anz = [b6]
If [b6] = 1 Then
ComboBox1.RowSource = "tipps!by11:by11"
ComboBox1.Enabled = True
ComboBox1.ListIndex = 0
CommandButton1.Enabled = True
CommandButton1.SetFocus
ElseIf [b6] > 1 Then
cb1anz = cb1anz + 1
cb1liste = Sheets("tipps").Range("by11:by" & 11 + [b6])
cb1liste([b6] + 1, 1) = "F|fffd|r alle Spieler"
ComboBox1.List = cb1liste
ComboBox1.Enabled = True
If lt.[db2] > 0 And lt.[db2] <= [b6] Then
ComboBox1.ListIndex = lt.[db2] - 1
Else
ComboBox1.ListIndex = 0
End If
CommandButton1.Enabled = True
CommandButton1.SetFocus
End If
atwork = 0
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Sub setsettings()
For i = 1 To 6
Controls("optionbutton" & i).Value = settings(i, 1)
Next
For i = 7 To 18
Controls("checkbox" & i - 6).Value = settings(i, 1)
Next
Controls("op" & settings(19, 1)).Value = True
If (OptionButton5 And Not (op1 And OptionButton12)) Or (OptionButton12 And op4) Then
CommandButton4.Caption = "Importauswahl"
Else
CommandButton4.Caption = "Import starten"
End If
If CheckBox12 Then
CheckBox8.Enabled = False
CheckBox9.Enabled = False
Else
CheckBox8.Enabled = True
CheckBox9.Enabled = True
End If
CheckBox13.Value = settings(20, 1)
CheckBox14.Value = settings(21, 1)
End Sub
Attribute VB_Name = "UserForm15"
Attribute VB_Base = "0{7B68B5FC-60A8-457D-A4F3-A7322E8EECD3}{49BEE86D-73F2-479A-84C4-068897828C31}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, aktspt As Integer, atwork As Integer, importdat, selspt, zustipp, dbl
Private Sub CommandButton1_Click()
With Sheets("ligatabelle")
.[dl19:dl24].Value = zustipp
Sheets("ligatabelle").[dd3:dd382].Value = importdat
End With
UserForm15.Tag = "OK"
UserForm15.Hide
End Sub
Private Sub CommandButton10_Click()
If UserForm15.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If aktspt < 1 Then Exit Sub
atwork = 1
Set d = Sheets("Ligatabelle")
anzpaar = Sheets("plan").[h2]
For idx = 0 To anzpaar - 1
z = (aktspt - 1) * anzpaar + 1 + idx
ListBox2.Selected(idx) = False
importdat(z, 1) = False
Next
selspt = 0
d.Cells(aktspt + 2, 111) = selspt
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
ListBox4.ListIndex = aktspt - 1
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
atwork = 0
End Sub
Private Sub CommandButton11_Click()
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("ligatabelle")
.[dd3:dd382].Value = .[de3:de382].Value
.[dg3:dg40].Value = .[db3:db40].Value
.[dl19:dl24].Value = .[dn19:dn24].Value
.Calculate
importdat = .[dd3:dd382].Value
zustipp = .[dl19:dl24].Value
End With
aktspt = -1
ListBox4.ListIndex = -1
Application.Calculation = xlCalculationAutomatic
atwork = 1
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.ListIndex = 0
Call setaktspt
End Sub
Private Sub CommandButton2_Click()
UserForm15.Tag = ""
UserForm15.Hide
End Sub
Private Sub CommandButton3_Click()
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("ligatabelle")
.Range("dd3:dd" & 2 + .[cm2]) = True
.Range("dg3:dg" & 2 + Sheets("plan").[g2]) = Sheets("plan").[h2]
.Calculate
importdat = .[dd3:dd382].Value
End With
aktspt = -1
ListBox4.ListIndex = -1
Application.Calculation = xlCalculationAutomatic
atwork = 1
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.ListIndex = 0
Call setaktspt
End Sub
Private Sub CommandButton4_Click()
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("ligatabelle")
.[dd3:dd382] = False
.[dg3:dg40] = 0
.Calculate
importdat = .[dd3:dd382].Value
End With
aktspt = -1
ListBox4.ListIndex = -1
Application.Calculation = xlCalculationAutomatic
atwork = 1
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.ListIndex = 0
Call setaktspt
End Sub
Private Sub CommandButton5_Click()
If Sheets("ligatabelle").[dj18] = 0 Then Exit Sub
atwork = 1
For i = 1 To Sheets("ligatabelle").[dj18]
zustipp(i, 1) = False
ListBox3.Selected(i - 1) = False
Next
atwork = 0
End Sub
Private Sub CommandButton6_Click()
If Sheets("ligatabelle").[dj18] = 0 Then Exit Sub
atwork = 1
For i = 1 To Sheets("ligatabelle").[dj18]
zustipp(i, 1) = True
ListBox3.Selected(i - 1) = True
Next
atwork = 0
End Sub
Private Sub CommandButton7_Click()
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("ligatabelle")
.[dd3:dd382] = False
.[dg3:dg40] = 0
.Range("dd3:dd" & 2 + Sheets("plan").[t1]) = True
.Range("dg3:dg" & 2 + Sheets("plan").[g2] / 2) = Sheets("plan").[h2]
.Calculate
importdat = .[dd3:dd382].Value
End With
aktspt = -1
ListBox4.ListIndex = -1
Application.Calculation = xlCalculationAutomatic
atwork = 1
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.ListIndex = 0
Call setaktspt
End Sub
Private Sub CommandButton8_Click()
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With Sheets("ligatabelle")
.[dd3:dd382] = False
.[dg3:dg40] = 0
.Range("dd" & Sheets("plan").[t1] + 3 & ":dd" & 2 + .[cm2]) = True
.Range("dg" & Sheets("plan").[g2] / 2 + 3 & ":dg" & 2 + Sheets("plan").[g2]) = Sheets("plan").[h2]
.Calculate
importdat = .[dd3:dd382].Value
End With
aktspt = -1
ListBox4.ListIndex = -1
Application.Calculation = xlCalculationAutomatic
atwork = 1
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox4.ListIndex = Sheets("plan").[g2] / 2
Call setaktspt
End Sub
Private Sub CommandButton9_Click()
If UserForm15.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If aktspt < 1 Then Exit Sub
atwork = 1
Set d = Sheets("Ligatabelle")
anzpaar = Sheets("plan").[h2]
For idx = 0 To anzpaar - 1
z = (aktspt - 1) * anzpaar + 1 + idx
ListBox2.Selected(idx) = True
importdat(z, 1) = True
Next
selspt = anzpaar
d.Cells(aktspt + 2, 111) = selspt
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
ListBox4.ListIndex = aktspt - 1
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
atwork = 0
End Sub
Private Sub Image1_Click()
txt = "Das linke Fenster zeigt eine Liste aller Spieltage. Von farblich hervorgehobenen Spieltagen wird mindestens eine Paarung importiert. Die genaue Anzahl ist in Klammern angegeben." & Chr(13) & "Durch einen Mausklick in die Spieltagliste wird ein einzelner Spieltag ausgew|fffd|hlt und detailliert in der Paarungsliste angezeigt. Hier k|fffd|nnen nun einzelne Paarungen ausgeschlossen bzw. angew|fffd|hlt werden." & " Wird der in der Paarungsliste angezeigte Spieltag in der Spieltagliste (erneut) angeklickt, wird der komplette Spieltag aus- bzw. abgew|fffd|hlt."
txt = txt & Chr(13) & Chr(13) & "Nicht markierte Eintr|fffd|ge werden grunds|fffd|tzlich nicht importiert, die entsprechenden Tipps bleiben so erhalten, wie sie in der Zieldatei vorliegen." & " Evtl. werden auch selektierte Tipps NICHT importiert, weil sie gleichzeitig angegeben haben, dass vorhandene Tipps nicht |fffd|berschrieben werden sollen." & Chr(13) & Chr(13) & "Sie k|fffd|nnen durch Aktivierung der entsprechenden Option festlegen, dass bei neuen Mitspielern die eingeschr|fffd|nkte Auswahl deaktiviert wird und hier alle Tipps importiert werden."
aw = MsgBox(txt, vbOKOnly, "Hinweis zur Auswahl")
End Sub
Private Sub ListBox2_Change()
If UserForm15.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Set d = Sheets("Ligatabelle")
idx = ListBox2.ListIndex
anzpaar = Sheets("plan").[h2]
z = (aktspt - 1) * anzpaar + 1 + idx
If ListBox2.Selected(idx) Then
importdat(z, 1) = True
selspt = selspt + 1
Else
importdat(z, 1) = False
selspt = selspt - 1
End If
d.Cells(aktspt + 2, 111) = selspt
anzsel = d.[dg3:dg40].Value
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
ListBox4.ListIndex = aktspt - 1
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
atwork = 0
End Sub
Private Sub ListBox3_Change()
If UserForm15.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
idx = ListBox3.ListIndex + 1
zustipp(idx, 1) = ListBox3.Selected(idx - 1)
End Sub
Private Sub ListBox4_Change()
If ListBox4.ListIndex = -1 Then Exit Sub
If UserForm15.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
Set d = Sheets("Ligatabelle")
atwork = 1
spt = ListBox4.ListIndex + 1
anzpaar = Sheets("plan").[h2]
an = ListBox4.Selected(spt - 1)
za = (spt - 1) * anzpaar + 1
ze = za + anzpaar - 1
If aktspt <> spt Then
d.[di3:dj12].Value = d.Range(d.Cells(za + 2, 93), d.Cells(za + 11, 94)).Value
aktspt = spt
selspt = 0
For i = 0 To anzpaar - 1
If importdat(za + i, 1) Then selspt = selspt + 1
ListBox2.Selected(i) = importdat(za + i, 1)
Next
Label2.Caption = "Paarungen von Spieltag " & spt
ElseIf Not an Then
For i = 0 To anzpaar - 1
importdat(i + za, 1) = False
ListBox2.Selected(i) = False
Next
d.Cells(spt + 2, 111) = 0
selspt = 0
Else
For i = 0 To anzpaar - 1
importdat(i + za, 1) = True
ListBox2.Selected(i) = True
Next
d.Cells(spt + 2, 111) = anzpaar
selspt = anzpaar
End If
anzsel = d.[dg3:dg40].Value
For i = 1 To Sheets("plan").[g2]
ListBox4.Selected(i - 1) = anzsel(i, 1)
Next
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
Label5.Caption = "Ergebnistipps importieren" & Chr(10) & d.[dh16]
atwork = 0
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Set d = Sheets("ligatabelle")
Application.ScreenUpdating = False
atwork = 1
If d.[dj18] > 0 Then
ListBox3.RowSource = "ligatabelle!dk19:dk" & 18 + d.[dj18]
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
End If
atwork = 0
working = False
startwert = True
Application.ScreenUpdating = True
ListBox4.ListIndex = [i6] - 1
ListBox4.Selected([i6] - 1) = True
ListBox4.SetFocus
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Initialize()
importdat = Sheets("ligatabelle").[dd3:dd382].Value
selspt = Sheets("plan").[h2]
zustipp = Sheets("ligatabelle").[dl19:dl24].Value
End Sub
Sub setaktspt()
Set d = Sheets("ligatabelle")
anzpaar = Sheets("plan").[h2]
spt = ListBox4.ListIndex + 1
an = ListBox4.Selected(spt - 1)
za = (spt - 1) * anzpaar + 1
ze = za + anzpaar - 1
d.[di3:dj12].Value = d.Range(d.Cells(za + 2, 93), d.Cells(za + 11, 94)).Value
aktspt = spt
selspt = 0
For i = 0 To anzpaar - 1
If importdat(za + i, 1) Then selspt = selspt + 1
ListBox2.Selected(i) = importdat(za + i, 1)
Next
Label2.Caption = "Paarungen von Spieltag " & spt
For i = 1 To d.[dj18]
ListBox3.Selected(i - 1) = zustipp(i, 1)
Next
atwork = 0
End Sub
Attribute VB_Name = "UserForm17"
Attribute VB_Base = "0{D727BFBE-4FE5-4A81-BD23-3D184FD97DA1}{868FAF6E-378A-4541-A211-F5622A9D56D6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, ergtipps, zustipps, anzerg, anzzus, atwork
Private Sub CommandButton1_Click()
UserForm17.Tag = "OK"
Set d = Sheets("auswertung")
For i = 1 To anzerg
ergtipps(i, 1) = ListBox1.Selected(i - 1)
Next
If anzerg > 0 Then d.Range("cb2:cb" & anzerg + 1) = ergtipps
For i = 1 To anzzus
zustipps(i, 1) = ListBox2.Selected(i - 1)
Next
If anzzus > 0 Then d.Range("cj2:cj" & anzzus + 1) = zustipps
UserForm17.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm17.Tag = ""
UserForm17.Hide
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox1.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
If ListBox1.Selected(ListBox1.ListIndex) Then
wert = False
Else
wert = True
End If
For i = ListBox1.ListIndex To Val(ListBox1.Tag) - 1
ListBox1.Selected(i) = wert
ergtipps(i + 1, 1) = wert
Next
atwork = 0
End Sub
Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox2.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
If ListBox2.Selected(ListBox2.ListIndex) Then
wert = False
Else
wert = True
End If
For i = ListBox2.ListIndex To Val(ListBox2.Tag) - 1
ListBox2.Selected(i) = wert
zustipps(i + 1, 1) = wert
Next
atwork = 0
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Set d = Sheets("auswertung")
anzerg = Val(ListBox1.Tag)
anzzus = Val(ListBox2.Tag)
atwork = 1
If anzerg > 0 Then
ergtipps = d.Range("cb2:cb" & anzerg + 2)
ListBox1.RowSource = "auswertung!bs2:bz" & 1 + anzerg
For i = 1 To anzerg
ListBox1.Selected(i - 1) = True
ergtipps(i, 1) = True
Next
Else
ListBox1.Enabled = False
End If
If anzzus > 0 Then
zustipps = d.Range("cj2:cj" & anzzus + 2)
ListBox2.RowSource = "auswertung!ce2:cg" & 1 + anzzus
For i = 1 To anzzus
ListBox2.Selected(i - 1) = True
zustipps(i, 1) = True
Next
Else
ListBox2.Enabled = False
End If
If anzerg > 0 Then
ListBox1.ListIndex = 0
ListBox1.SetFocus
Else
ListBox2.ListIndex = 0
ListBox2.SetFocus
End If
atwork = 0
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm18"
Attribute VB_Base = "0{B4C8675D-9BE1-4F70-BA2D-1FE6CC20672C}{CAB48F34-6D61-4789-A3E0-F9C00D42826A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm19"
Attribute VB_Base = "0{02BBA27F-EED7-4164-91C6-17F0659F6477}{BA6F1E18-B3C1-4C60-9E7B-7D05C4132102}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, playerlist, atwork
Private Sub CommandButton1_Click()
atwork = 1
For i = 1 To Val(ListBox1.Tag)
ListBox1.Selected(i - 1) = True
playerlist(i, 1) = True
Next
atwork = 0
End Sub
Private Sub CommandButton2_Click()
atwork = 1
For i = 1 To Val(ListBox1.Tag)
ListBox1.Selected(i - 1) = False
playerlist(i, 1) = False
Next
atwork = 0
End Sub
Private Sub CommandButton3_Click()
Workbooks(UserForm19.Tag).Sheets(2).[da2:da101].Value = playerlist
UserForm19.Tag = "OK"
UserForm19.Hide
End Sub
Private Sub CommandButton4_Click()
UserForm19.Tag = ""
UserForm19.Hide
End Sub
Private Sub ListBox1_Change()
If atwork = 1 Then Exit Sub
If ListBox1.ListIndex = -1 Then Exit Sub
playerlist(ListBox1.ListIndex + 1, 1) = ListBox1.Selected(ListBox1.ListIndex)
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
playerlist = Workbooks(UserForm19.Tag).Sheets(2).[da2:da101].Value
atwork = 1
For i = 1 To Val(ListBox1.Tag)
ListBox1.Selected(i - 1) = playerlist(i, 1)
Next
atwork = 0
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{85F70727-A002-4547-89DC-A3DECCF449DA}{C7526793-2366-4591-9118-F140364E95E7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
With Sheets("plan")
For i = 1 To 4
.Cells(6 + i, 8).Value = Controls("krit" & i).Caption
.Cells(6 + i, 9).Value = 1
If i <> 1 And Controls("checkbox" & i + 3).Value = False Then .Cells(6 + i, 9).Value = 0
Next
End With
UserForm2.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm2.Hide
End Sub
Private Sub krit2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call kritDrop(2, Data.GetText)
End Sub
Private Sub krit3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call kritDrop(3, Data.GetText)
End Sub
Private Sub krit4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call kritDrop(4, Data.GetText)
End Sub
Sub kritDrop(nr, txt)
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
oldtxt = Controls("krit" & Format(nr, "0")).Caption
Controls("krit" & Format(nr, "0")).Caption = txt
For i = 1 To 4
If Controls("krit" & Format(i, "0")).Caption = txt And i <> nr Then
Controls("krit" & Format(i, "0")).Caption = oldtxt
End If
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm20"
Attribute VB_Base = "0{C8FA10BA-7FE3-4A87-ADF8-CE4B5D97B432}{91D8C38B-AF63-4467-91AC-266EE867E480}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
UserForm20.Tag = "OK"
UserForm20.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm20.Tag = ""
UserForm20.Hide
End Sub
Private Sub OptionButton1_Click()
If OptionButton1 Then
ComboBox1.Enabled = False
Else
ComboBox1.Enabled = True
End If
End Sub
Private Sub OptionButton2_Click()
If OptionButton1 Then
ComboBox1.Enabled = False
Else
ComboBox1.Enabled = True
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm21"
Attribute VB_Base = "0{E988E2A7-77EE-4F5B-B25C-ECBC6DAE3FC8}{B13FA41C-3B57-4F9D-9F86-41803980F4C1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
End Sub
Attribute VB_Name = "UserForm22"
Attribute VB_Base = "0{B7604D07-4060-48BD-BB63-F0C5179AE8F7}{EDE17151-3245-4AFC-A2FC-DFFCE5FC2369}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first As Integer, quote As Integer, newquote As Integer, atwork As Integer, vr, rr, spt, halbserie, tauswform
Private Sub CheckBox1_Click()
If atwork = 1 Then Exit Sub
atwork = 1
If CheckBox1 And Sheets("plan").[f47] <> newquote Then
Sheets("plan").[f47] = newquote
ElseIf Not CheckBox1 And Sheets("plan").[f47] <> 0 Then
Sheets("plan").[f47] = 0
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
idx = [fs21]
rl = ComboBox2.ListIndex
z = 36 + ComboBox2.ListIndex * 4
ListBox2.RowSource = "tipps!fr" & z & ":gb" & z + 3
mitqp = Sheets("data").Cells(7066 + idx, rl * 3 + 2).Value
ohneqp = mitqp - Sheets("data").Cells(7066 + idx, rl + 134).Value
Label39.Caption = ohneqp
Sheets("zusatztipps").[b209] = ComboBox2.ListIndex + 1
Sheets("zusatztipps").[c209] = 0
ozp = Sheets("data").Cells(7066 + idx, 13)
Sheets("zusatztipps").[c209] = 1
mzau = Sheets("data").Cells(7066 + idx, 13)
mzaupkt = Sheets("zusatztipps").Cells(216, 3 + idx)
Sheets("zusatztipps").[c209] = 2
mza = Sheets("data").Cells(7066 + idx, 13)
mzapkt = Sheets("zusatztipps").Cells(216, 3 + idx)
wert2 = mitqp + mzaupkt
wert3 = mitqp + mzapkt
sum1.Caption = mitqp
sum2.Caption = wert2
sum3.Caption = wert3
Label49.Caption = ozp
Label55.Caption = mzau
Label56.Caption = mza
Label57.Caption = mzaupkt
Label58.Caption = mzapkt
Label66.Caption = Sheets("data").Cells(7066 + idx, 134 + ComboBox2.ListIndex).Value
ListBox2.SetFocus
Application.ScreenUpdating = True
Application.EnableEvents = True
atwork = 0
End Sub
Private Sub CheckBox11_Click()
If Not CheckBox11 And Not CheckBox12 Then
CheckBox12.Value = True
Exit Sub
End If
Application.EnableEvents = False
If CheckBox11 And CheckBox12 Then
CheckBox8.Enabled = True
CheckBox9.Enabled = True
CheckBox10.Enabled = True
Sheets("ligatabelle").[cm1] = 3
Else
CheckBox8.Enabled = False
CheckBox9.Enabled = False
CheckBox10.Enabled = False
If CheckBox11 Then
Sheets("ligatabelle").[cm1] = 1
Else
Sheets("ligatabelle").[cm1] = 2
End If
End If
Application.EnableEvents = True
End Sub
Private Sub CheckBox12_Click()
If Not CheckBox11 And Not CheckBox12 Then
CheckBox11.Value = True
Exit Sub
End If
Application.EnableEvents = False
If CheckBox11 And CheckBox12 Then
CheckBox8.Enabled = True
CheckBox9.Enabled = True
CheckBox10.Enabled = True
Sheets("ligatabelle").[cm1] = 3
Else
CheckBox8.Enabled = False
CheckBox9.Enabled = False
CheckBox10.Enabled = False
If CheckBox12 Then
Sheets("ligatabelle").[cm1] = 2
Else
Sheets("ligatabelle").[cm1] = 1
End If
End If
Application.EnableEvents = True
End Sub
Private Sub CheckBox2_Click()
If vr <> CheckBox2.Value Or rr <> CheckBox3.Value Then
CommandButton1.Enabled = True
Else
CommandButton1.Enabled = False
End If
End Sub
Private Sub CheckBox3_Click()
If vr <> CheckBox2.Value Or rr <> CheckBox3.Value Then
CommandButton1.Enabled = True
Else
CommandButton1.Enabled = False
End If
End Sub
Private Sub CheckBox4_Click()
If CheckBox4 Then
If halbserie = 1 Then
CheckBox5.Value = False
CheckBox5.Enabled = False
Else
CheckBox6.Value = False
CheckBox6.Enabled = False
End If
Else
CheckBox5.Enabled = True
CheckBox6.Enabled = True
End If
End Sub
Private Sub CheckBox5_Click()
If halbserie = 2 Then Exit Sub
If CheckBox5 Then
CheckBox4.Value = False
CheckBox4.Enabled = False
CheckBox7.Enabled = False
Else
CheckBox4.Enabled = True
CheckBox7.Enabled = True
End If
End Sub
Private Sub CheckBox6_Click()
If halbserie = 1 Then Exit Sub
If CheckBox6 Then
CheckBox4.Value = False
CheckBox4.Enabled = False
CheckBox7.Enabled = False
Else
CheckBox4.Enabled = True
CheckBox7.Enabled = True
End If
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
If ComboBox1.ListIndex = -1 Then Exit Sub
[ft21] = ComboBox1.ListIndex + 1
Label1.Caption = "Paarungen von " & ComboBox1.Value
perstipp.Caption = Format([gf32], "0.0000")
bezpkt.Caption = [gf33]
qpkt.Caption = [gf34]
tipperg.Caption = [gf36]
tagerg.Caption = [gf37]
ListBox1.SetFocus
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
If ComboBox2.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
Application.EnableEvents = False
idx = [fs21]
rl = ComboBox2.ListIndex
z = 36 + ComboBox2.ListIndex * 4
mitqp = Sheets("data").Cells(7066 + idx, rl * 3 + 2).Value
ohneqp = mitqp - Sheets("data").Cells(7066 + idx, rl + 134).Value
Label39.Caption = ohneqp
zztab = 7018 + rl * 4
Sheets("zusatztipps").[b209] = rl + 1
Sheets("zusatztipps").[c209] = 0
ozp = Sheets("data").Cells(7066 + idx, 13)
Sheets("zusatztipps").[c209] = 1
mzau = Sheets("data").Cells(7066 + idx, 13)
mzaupkt = Sheets("data").Cells(zztab + 1, 2 + idx)
Sheets("zusatztipps").[c209] = 2
mza = Sheets("data").Cells(7066 + idx, 13)
mzapkt = Sheets("data").Cells(zztab + 2, 2 + idx)
Application.Calculation = xlCalculationManual
wert2 = mitqp + mzaupkt
wert3 = mitqp + mzapkt
sum1.Caption = mitqp
sum2.Caption = wert2
sum3.Caption = wert3
Label49.Caption = ozp
Label55.Caption = mzau
Label56.Caption = mza
Label57.Caption = mzaupkt
Label58.Caption = mzapkt
Label66.Caption = Sheets("data").Cells(7066 + idx, 134 + ComboBox2.ListIndex).Value
Label93.Caption = Range("gk" & 42 + ComboBox2.ListIndex)
Label94.Caption = Sheets("plan").Cells(32 + ComboBox2.ListIndex, 9).Value
ListBox2.Visible = False
ListBox2.RowSource = ""
ListBox2.Height = 47.3
ListBox2.RowSource = "tipps!fq" & z & ":gb" & z + 3
ListBox2.Visible = True
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
atwork = 0
ListBox2.SetFocus
End Sub
Private Sub ComboBox3_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
If ComboBox2.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
Application.EnableEvents = False
[fs20] = ComboBox3.ListIndex + 1
Sheets("ligatabelle").[cx1] = ComboBox3.ListIndex + 1
idx = [fs21]
rl = ComboBox2.ListIndex
Label93.Caption = Range("gk" & 42 + ComboBox2.ListIndex)
CheckBox2.Value = Cells(idx + 10, 109) = 1
CheckBox3.Value = Cells(idx + 10, 110) = 1
vr = CheckBox2.Value
rr = CheckBox3.Value
CommandButton1.Enabled = False
z = 36 + ComboBox2.ListIndex * 4
ListBox2.RowSource = "tipps!fq" & z & ":gb" & z + 3
mitqp = Sheets("data").Cells(7066 + idx, rl * 3 + 2).Value
ohneqp = mitqp - Sheets("data").Cells(7066 + idx, rl + 134).Value
Label39.Caption = ohneqp
zztab = 7018 + rl * 4
Sheets("zusatztipps").[c209] = 0
ozp = Sheets("data").Cells(7066 + idx, 13)
Sheets("zusatztipps").[c209] = 1
mzau = Sheets("data").Cells(7066 + idx, 13)
mzaupkt = Sheets("data").Cells(zztab + 1, 2 + idx)
Sheets("zusatztipps").[c209] = 2
mza = Sheets("data").Cells(7066 + idx, 13)
mzapkt = Sheets("data").Cells(zztab + 2, 2 + idx)
Application.Calculation = xlCalculationManual
wert2 = mitqp + mzaupkt
wert3 = mitqp + mzapkt
sum1.Caption = mitqp
sum2.Caption = wert2
sum3.Caption = wert3
Label49.Caption = ozp
Label55.Caption = mzau
Label56.Caption = mza
Label57.Caption = mzaupkt
Label58.Caption = mzapkt
Label66.Caption = Sheets("data").Cells(7066 + idx, 134 + ComboBox2.ListIndex).Value
ListBox2.SetFocus
perstipp.Caption = Format([gf32], "0.0000")
bezpkt.Caption = [gf33]
qpkt.Caption = [gf34]
tipperg.Caption = [gf36]
tagerg.Caption = [gf37]
sollhr = Sheets("einstellungen").Cells(1 + idx, 120)
sollrr = Sheets("einstellungen").Cells(1 + idx, 121)
isthr = Sheets("einstellungen").Cells(104 + idx, 120)
istrr = Sheets("einstellungen").Cells(104 + idx, 121)
Label95.Caption = "Vorrunde: " & isthr & " von " & sollhr & " Tippabgaben bezahlt"
Label96.Caption = "R|fffd|ckrunde: " & istrr & " von " & sollrr & " Tippabgaben bezahlt"
atwork = 0
UserForm22.Caption = "Spielermen|fffd|:  " & ComboBox3.Value
MultiPage1.SetFocus
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton1_Click()
z = 10 + [fs21]
If CheckBox2.Value = True Then
Cells(z, 109) = 1
Else
Cells(z, 109) = 0
End If
If CheckBox3.Value = True Then
Cells(z, 110) = 1
Else
Cells(z, 110) = 0
End If
vr = CheckBox2.Value
rr = CheckBox3.Value
CommandButton1.Enabled = False
End Sub
Private Sub CommandButton2_Click()
If (CheckBox4 And Not CheckBox7) Or CheckBox5 Or CheckBox6 Then
aw = MsgBox("Die ausgew|fffd|hlten Daten werden unwiderruflich gel|fffd|scht!" & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "L|fffd|schen best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
End If
If Not CheckBox4 And Not CheckBox5 And Not CheckBox6 Then Exit Sub
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
atwork = 1
idx = [fs21].Value
Set d = Sheets("data")
ppspt = Sheets("plan").[h2]
spphs = Sheets("plan").[t1]
spps = 2 * spphs
anzspt = Sheets("plan").[g2]
anzspths = anzspt / 2
If CheckBox5 Then
d.Range(d.Cells(2, idx + 2), d.Cells(3 * spphs + 1, idx + 2)).ClearContents
d.Range(d.Cells(1146, idx + 2), d.Cells(1159, idx + 2)).ClearContents
d.Range(d.Cells(1364, idx + 2), d.Cells(15 * anzspths + 1363, idx + 2)).ClearContents
d.Range(d.Cells(1936, idx + 2), d.Cells(spphs + 1935, idx + 2)).ClearContents
UserForm22.Tag = "new"
End If
If CheckBox6 Then
d.Range(d.Cells(3 * spphs + 2, idx + 2), d.Cells(3 * spps + 1, idx + 2)).ClearContents
d.Range(d.Cells(1162, idx + 2), d.Cells(1175, idx + 2)).ClearContents
d.Range(d.Cells(15 * anzspths + 1364, idx + 2), d.Cells(15 * anzspt + 1363, idx + 2)).ClearContents
d.Range(d.Cells(spphs + 1936, idx + 2), d.Cells(spps + 1935, idx + 2)).ClearContents
UserForm22.Tag = "new"
End If
If CheckBox4 Then
If CheckBox7 Then
idx = ComboBox3.ListIndex + 1
For i = 1 To 10
Range(Cells(idx + 10, i * 3 + 7), Cells(idx + 10, i * 3 + 8)).ClearContents
Next
Else
UserForm22.Tag = "new"
za = (spt - 1) * 3 * ppspt + 2
ze = spt * 3 * ppspt + 1
d.Range(d.Cells(za, idx + 2), d.Cells(ze, idx + 2)).ClearContents
If halbserie = 1 Then
hsza = 1146
hsdat = d.Range(d.Cells(1146, idx + 2), d.Cells(1159, idx + 2)).Value
Else
hsza = 1162
hsdat = d.Range(d.Cells(1162, idx + 2), d.Cells(1175, idx + 2)).Value
End If
za = 1364 + (spt - 1) * 15
ze = za + 13
sptdat = d.Range(d.Cells(za, idx + 2), d.Cells(ze, idx + 2)).Value
For i = 1 To 14
hs = hsdat(i, 1)
If Len(hs) = 0 Then hs = 0
ts = sptdat(i, 1)
If Len(ts) = 0 Then ts = 0
hsdat(i, 1) = hs - ts
Next
d.Range(d.Cells(za, idx + 2), d.Cells(ze, idx + 2)).ClearContents
d.Range(d.Cells(hsza, idx + 2), d.Cells(hsza + 13, idx + 2)).Value = hsdat
za = 1936 + (spt - 1) * ppspt
ze = za - 1 + ppspt
d.Range(d.Cells(za, idx + 2), d.Cells(ze, idx + 2)).ClearContents
End If
End If
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
If UserForm22.Tag = "new" Then
aw = MsgBox("Die Daten wurden erfolgreich gel|fffd|scht", vbOKOnly, "Vorgang abgeschlossen")
UserForm22.Hide
Else
aw = MsgBox("Die Eingabezellen f|fffd|r die Tipps wurden geleert." & Chr(13) & "|fffd|ber die Schaltfl|fffd|che '|fffd|nderungen |fffd|bernehmen' auf dem Blatt 'Tipps' werden die ge|fffd|nderten Tipps eingetragen!", vbOKOnly, "Vorgang abgeschlossen")
UserForm22.Hide
End If
End Sub
Private Sub CommandButton3_Click()
If [b6] = 0 Then Exit Sub
If ComboBox3.ListIndex = -1 Then Exit Sub
If Len(ComboBox3.Value) = 0 Then Exit Sub
tippname = ComboBox3.Value
aidx = ComboBox3.ListIndex + 1
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set lt = Sheets("ligatabelle")
lt.[cn3:cz3].AutoFill Destination:=lt.Range("cn3:cz" & 2 + Sheets("plan").[t1] * 2)
lt.[df3:df3].AutoFill Destination:=lt.Range("df3:df40")
lt.[de3].AutoFill Destination:=lt.[de3:de382]
lt.[db3].AutoFill Destination:=lt.[db3:db40]
Sheets(aktuelleseite).Activate
Set d = ActiveWorkbook.Sheets("data")
Set lt = ActiveWorkbook.Sheets("ligatabelle")
Set p = ActiveWorkbook.Sheets("plan")
Set zt = ActiveWorkbook.Sheets("zusatztipps")
Set tk = ActiveWorkbook.Sheets("einstellungen")
Set tt = ActiveWorkbook.Sheets("tipps")
oldtab = lt.[cm1]
oldidx = lt.[cx1]
lt.[cm1] = 3
lt.[cz1] = 1
lt.[cx1] = ComboBox3.ListIndex + 1
lt.Calculate
Set td = ActiveWorkbook
Application.Workbooks.Add
Set nwb = ActiveWorkbook
nwb.Colors = td.Colors
For i = Application.SheetsInNewWorkbook + 1 To 5
nwb.Sheets.Add
Next
nwb.Sheets(1).Name = "Tipps"
nwb.Sheets(2).Name = "daten"
nwb.Sheets(3).Name = "erg"
nwb.Sheets(4).Name = "setup"
nwb.Sheets(5).Name = "ztipps"
nwb.Sheets(2).Visible = xlVeryHidden
nwb.Sheets(3).Visible = xlVeryHidden
nwb.Sheets(4).Visible = xlVeryHidden
nwb.Sheets(5).Visible = xlVeryHidden
nwb.Sheets(1).[a1] = "Pers|fffd|nliche Tippdatei von " & ComboBox3.Value
anzpaar = lt.[cm2]
With nwb.Sheets(1)
lt.Range("cn2:cv" & anzpaar + 2).Copy Destination:=nwb.Sheets(1).[a2]
zt.Range("d7:e47").Copy Destination:=nwb.Sheets(1).[k2]
idx = lt.[cy1]
.[m3] = p.[h2]
.Range("n3:n" & p.[e1] + 2).Value = p.Range(p.Cells(2, 5), p.Cells(p.[e1] + 1, 5)).Value
.[p2:p41].Value = zt.[c7:c46].Value
.[d3:f382].ClearContents
.Columns("J:J").ColumnWidth = 24.43
.[j2] = "F|fffd|r Joker j oder J eingeben"
.[c2].Copy
.[j2].PasteSpecial Paste:=xlPasteFormats
td.Sheets("html").[l32:l71].Copy Destination:=.[l2]
For i = 1 To 6
For j = 1 To 5
z = (i - 1) * 7 + j + 1
If zt.Cells(z + 5, 3) = 1 Then
With .Cells(z, 12).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$n$3:$n$" & p.[e1] + 2
.IgnoreBlank = True
.InCellDropdown = True
.ErrorTitle = "Fehler"
.ErrorMessage = "W|fffd|hlen Sie ein Team aus der Liste!"
.ShowInput = False
.ShowError = True
End With
.Cells(z, 12).Locked = False
Else
.Cells(z, 12).Locked = True
End If
Next
Next
td.Sheets("html").[g3:j3].Copy Destination:=.[g3:j3]
.Range("g3:j3").AutoFill Destination:=.Range("g3:j" & anzpaar + 2)
.Range("g3:j" & p.[g2] * p.[h2] + 2).Locked = False
.Range("h3:h" & p.[g2] * p.[h2] + 2).Locked = True
.[m1:p1].EntireColumn.Hidden = True
jsp = .[j3:j382].Value
ergdat = d.Range(d.Cells(2, idx + 2), d.Cells(1141, idx + 2)).Value
lfdnr = 0
Sheets(aktuelleseite).Activate
For i = 3 To 1140 Step 3
lfdnr = lfdnr + 1
If Len(ergdat(i, 1)) > 0 Then
If ergdat(i, 1) > 0 Then jsp(lfdnr, 1) = "J"
End If
Next
.[j3:j382].Value = jsp
For i = 1 To 9
nwb.Sheets(1).Cells(1, i).ColumnWidth = lt.Cells(1, i + 91).ColumnWidth
Next
.[k2].ColumnWidth = zt.[d1].ColumnWidth
.[l2].ColumnWidth = zt.[e1].ColumnWidth
If td.Sheets("Zusatztipps").[h168] = 0 Then .[k1:l1].EntireColumn.Hidden = True
.[d1:f1].EntireColumn.Hidden = True
nwb.Sheets(1).Range("a2:i" & anzpaar + 2).Value = lt.Range("cn2:cv" & anzpaar + 2).Value
.[k2:k42].Value = zt.[d7:d47].Value
.[l2:l42].Value = zt.Range(zt.Cells(7, aidx * 2 + 3), zt.Cells(47, aidx * 2 + 3)).Value
.Range("K1:l100").ClearComments
.[k1:q1].Insert Shift:=xlDown
End With
With nwb.Sheets(2)
.[a1] = ComboBox3.Value
.[a2] = "perstipp"
.[c2:c1141] = d.Range(d.Cells(2, idx + 2), d.Cells(1141, idx + 2)).Value
.[d2:e2].Value = tt.Range(tt.Cells(idx + 10, 109), tt.Cells(idx + 10, 110)).Value
End With
With nwb.Sheets(5)
.[d67:d109].Value = zt.Range(zt.Cells(67, 3 + idx), zt.Cells(109, 3 + idx)).Value
.[i169:n169].Value = zt.[i169:n169].Value
.[i179:n184].Value = zt.[i179:n184].Value
.[d240:n440].Value = zt.[d240:n440].Value
.[am4] = tk.[am4]
.[z4:ab4].Value = tk.[z4:ab4].Value
.[z6:aj6].Value = tk.[z6:aj6].Value
.[as11] = tk.[as11].Value
If tk.[as11] = 0 Then .[z11:ab11].Value = tk.[z11:ab11].Value
.[v12:aj14] = tk.[v12:aj14].Value
.[v20:aj24] = tk.[v20:aj24].Value
.[am27] = tk.[am27]
If tk.[am27] Then .[z27:ab27] = tk.[z27:ab27]
.[z31:ad32] = tk.[z31:ad32].Value
.[z37:ad38] = tk.[z37:ad38].Value
.[be8:bl40] = tk.[be8:bl40].Value
.[cd1105:do1105].Value = tk.Range(tk.Cells(104 + idx, 82), tk.Cells(104 + idx, 119)).Value
.[du42:dv47].Value = tk.[du42:dv47].Value
End With
With nwb.Sheets(3)
.[a2:l381].Value = lt.[a2:l381].Value
.[n2:ag21].Value = lt.[n2:ag21].Value
.[n47:ag66].Value = lt.[n47:ag66].Value
.[aq2:aq21].Value = lt.[aq2:aq21].Value
.[be2:be21].Value = lt.[be2:be21].Value
.[be24:be43].Value = lt.[be24:be43].Value
.[ax2:ax21].Value = lt.[ax2:ax21].Value
End With
With nwb.Sheets(4)
.[h7:i10].Value = p.[h7:i10].Value
.[i21] = p.[i21]
.[f42:f47].Value = p.[f42:f47].Value
.[f32:f34].Value = p.[f32:f34].Value
.[g49:g62].Value = p.[g49:g62].Value
.[g64].Value = p.[g64].Value
.[j49:j62].Value = p.[j49:j62].Value
.[k66:k70].Value = p.[k66:k70].Value
.[e1:e21].Value = p.[e1:e21].Value
.[i12].Value = p.[i12].Value
.[k1].Value = p.[k1].Value
.[n4:n29].Value = p.[n4:n29].Value
.[ad2] = p.[ad2]
.[ai2:aj383].Value = p.[ai2:aj383].Value
End With
lt.[cn4:cy385].ClearContents
lt.[df4:df40].ClearContents
lt.[de4:de382].ClearContents
lt.[db4:db40].ClearContents
lt.[cm1] = oldtab
lt.[cx1] = oldidx
nwb.Activate
nwb.Sheets(1).Select
nwb.Sheets(1).[b3].Select
ActiveWindow.FreezePanes = True
td.Activate
nwb.Sheets(1).Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
speichern:
On Error GoTo ende
Application.CutCopyMode = False
datname = Application.GetSaveAsFilename("tipps_" & tippname, "Tippdatei (*.xls),*.xls", , "Tippdatei speichern", "Speichern unter")
If datname <> False Then
If Val(Application.Version) > 11 Then
nwb.SaveAs Filename:=datname, FileFormat:=xlExcel8
Else
nwb.SaveAs datname
End If
aw = MsgBox("Die Datei wurde erfolgreich erstellt und gespeichert." & Chr(13) & Chr(13) & "|fffd|ber die Importfunktion k|fffd|nnen die gespeicherten Daten in andere Dateien |fffd|bertragen werden.", vbOKOnly, "Vorgang abgeschlossen")
nwb.Close (False)
lt.[db2] = aidx
Exit Sub
End If
ende:
ziel = datname
If Len(ziel) > 0 Then
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
For i = 1 To Application.Workbooks.Count
If dateiname = Application.Workbooks(i).Name Then
aw = MsgBox("Eine Datei mit dem Namen: " & dateiname & Chr(13) & "ist bereits ge|fffd|ffnet! Excel erlaubt nicht, dass 2 gleichnamige Dateien gleichzeitig ge|fffd|ffnet sind, selbst wenn diese in unterschiedlichen Ordnern gespeichert sind.", vbOKOnly, "Bitte einen anderen Namen w|fffd|hlen")
GoTo speichern
End If
Next
End If
On Error Resume Next
aw = MsgBox("Die Datei wurde nicht gespeichert!", vbOKOnly, "Fehler!")
nwb.Close (False)
End Sub
Private Sub CommandButton4_Click()
Application.ScreenUpdating = False
If Len(TextBox1.Value) > 0 Then
kopien = Int(Val(TextBox1.Value))
If kopien <= 0 Then kopien = 1
Else
kopien = 1
End If
Set lt = Sheets("ligatabelle")
lt.[cn3:cz3].AutoFill Destination:=lt.Range("cn3:cz" & 2 + Sheets("plan").[t1] * 2)
Sheets(aktuelleseite).Activate
If Not OptionButton2 Then
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set d = Sheets("plan")
With Sheets("spielplan")
.[b4:i15].AutoFill Destination:=.[b4:i63]
.[b4:j63].AutoFill Destination:=.[b4:ak63]
.Calculate
.[al4:as15].AutoFill Destination:=.[al4:as63]
.[al4:at63].AutoFill Destination:=.[al4:bu63]
Sheets(aktuelleseite).Activate
If d.[e1] <= 15 Then
.[ab1:aj1].EntireColumn.Hidden = True
.[bl3:bt3].EntireColumn.Hidden = True
End If
.Cells.EntireRow.Hidden = False
If d.[e1] < 20 Then
delta = 10 - d.[h2] - 1
For i = 1 To 5
.Range(.Cells(i * 12 + 2 - delta, 1), .Cells(i * 12 + 2, 1)).EntireRow.Hidden = True
Next
If d.[e1] > 15 Then
delta = 20 - d.[g2] / 2
.Range(.Cells(63 - delta * 12, 29), .Cells(63, 36)).Clear
.Range(.Cells(63 - delta * 12, 65), .Cells(63, 72)).Clear
End If
End If
.Calculate
End With
Set td = ActiveWorkbook
Sheets("spielplan").Visible = True
Sheets("spielplan").Copy
Set ns = ActiveWorkbook
Set hin = ActiveWorkbook.Sheets("spielplan")
hin.[a1:bu63].Value = td.Sheets("spielplan").[a1:bu63].Value
ns.Worksheets.Add before:=ns.Worksheets(1)
If CheckBox11 And CheckBox12 Then
ns.Worksheets.Add after:=ns.Worksheets("spielplan")
hin.[al:bu].Cut Destination:=ns.Sheets(3).[b1]
For i = 1 To 63
ns.Sheets(3).Cells(i, 1).RowHeight = hin.Cells(i, 1).RowHeight
Next
For i = 1 To 37
ns.Sheets(3).Cells(i, 1).ColumnWidth = hin.Cells(i, 1).ColumnWidth
Next
hin.[a1].EntireColumn.Delete
ns.Sheets(3).[a1].EntireColumn.Delete
ns.Sheets(3).Name = "R|fffd|ckrunde"
ns.Sheets(2).Name = "Hinrunde"
ns.Sheets(1).Name = "Info"
Else
hin.[al1:bu63].Clear
hin.[a1].EntireColumn.Delete
If CheckBox11 Then
ns.Sheets(2).Name = "Hinrunde"
Else
ns.Sheets(2).Name = "R|fffd|ckrunde"
End If
ns.Sheets(1).Name = "Info"
End If
With hin.PageSetup
.Zoom = False
.Orientation = xlLandscape
.FitToPagesWide = 1
.FitToPagesTall = 1
.LeftMargin = Application.InchesToPoints(0.47244094488189)
.RightMargin = Application.InchesToPoints(0.47244094488189)
.TopMargin = Application.InchesToPoints(0.47244094488189)
.BottomMargin = Application.InchesToPoints(0.47244094488189)
.HeaderMargin = Application.InchesToPoints(0.511811023622047)
.FooterMargin = Application.InchesToPoints(0.511811023622047)
.CenterHorizontally = True
.CenterVertically = True
End With
If CheckBox11 And CheckBox12 Then
With ns.Sheets("R|fffd|ckrunde").PageSetup
.Zoom = False
.Orientation = xlLandscape
.FitToPagesWide = 1
.FitToPagesTall = 1
.LeftMargin = Application.InchesToPoints(0.47244094488189)
.RightMargin = Application.InchesToPoints(0.47244094488189)
.TopMargin = Application.InchesToPoints(0.47244094488189)
.BottomMargin = Application.InchesToPoints(0.47244094488189)
.HeaderMargin = Application.InchesToPoints(0.511811023622047)
.FooterMargin = Application.InchesToPoints(0.511811023622047)
.CenterHorizontally = True
.CenterVertically = True
End With
End If
sptphs = td.Sheets("plan").[g2] / 2
lastcol = Int(sptphs / 5)
rest = sptphs Mod 5
If rest > 0 Then lastcol = lastcol + 1
lastcol = lastcol * 9
With hin
.Range(.Cells(1, lastcol), .Cells(1, 37)).EntireColumn.Delete
If rest > 0 Then .Range(.Cells(rest * 12 + 3, lastcol - 9), .Cells(63, 37)).Delete
For i = 63 To 1 Step -1
If .Cells(i, 1).EntireRow.Hidden = True Then .Cells(i, 1).EntireRow.Delete
Next
End With
If CheckBox11 And CheckBox12 Then
With ns.Sheets("R|fffd|ckrunde")
.Range(.Cells(1, lastcol), .Cells(1, 37)).EntireColumn.Delete
If rest > 0 Then .Range(.Cells(rest * 12 + 3, lastcol - 9), .Cells(63, 37)).Delete
For i = 63 To 1 Step -1
If .Cells(i, 1).EntireRow.Hidden = True Then .Cells(i, 1).EntireRow.Delete
Next
End With
End If
If OptionButton1 Then
If CheckBox8.Enabled = True And CheckBox8.Value = True Then
hin.PrintOut copies:=kopien
td.Activate
Application.ScreenUpdating = True
aw = MsgBox("Es werden nun " & kopien & " Exemplar(e) von Seite 1 gedruckt." & Chr(13) & "Wenn der Druckvorgang beendet ist, legen Sie die bedruckten Seiten so in den Drucker, dass die R|fffd|ckseiten bedruckt werden." & Chr(13) & Chr(13) & "Starten Sie anschlie|fffd|end das Drucken der R|fffd|ckseiten |fffd|ber die OK-Schaltfl|fffd|che.", vbOKCancel, "Beidseitiger Druck")
If aw <> 1 Then
ns.Close (False)
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Exit Sub
End If
Application.ScreenUpdating = False
ns.Activate
ns.Sheets("R|fffd|ckrunde").PrintOut copies:=kopien
td.Activate
Else
If CheckBox11 Then hin.PrintOut copies:=kopien
If CheckBox12 Then ns.Sheets("R|fffd|ckrunde").PrintOut copies:=kopien
End If
td.Sheets("spielplan").Visible = xlVeryHidden
ns.Close (False)
Else
td.Sheets("spielplan").Visible = xlVeryHidden
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
aw = MsgBox("Die Datei wurde erfolgreich unter dem Namen  '" & ns.Name & "'  erstellt und kann nach dem Schlie|fffd|en des Dialogfesters |fffd|ber FENSTER aktiviert werden." & Chr(13) & Chr(13) & "Individuelle Anpassungen k|fffd|nnen vorgenommen werden. Auf dem Blatt 'Info' k|fffd|nnen Sie zus|fffd|tzliche Hinweise unterbringen." & Chr(13) & Chr(13) & "Beachten Sie, dass die Datei noch nicht gespeichert wurde!", vbOKOnly, "Vorgang beendet")
td.Activate
End If
Else
inin = "Spielplan"
se = "cv"
If CheckBox11 And CheckBox12 And Not CheckBox9 Then
ber = Range("cn1:" & se & 2 + Sheets("plan").[t1] * 2).Address
Else
If CheckBox11 And Not CheckBox12 Then inin = inin & "_HR"
If CheckBox12 And Not CheckBox11 Then inin = inin & "_RR"
If CheckBox11 And CheckBox12 And CheckBox9.Value = True Then HTMLForm.Label7.Tag = "OK"
If CheckBox11 And CheckBox12 And CheckBox10.Value = True Then HTMLForm.Label4.Tag = "OK"
ber = Range("cn1:" & se & 2 + Sheets("plan").[t1]).Address
End If
Application.ScreenUpdating = True
UserForm22.Hide
Call showhtml("ligatabelle", ber, 5, inin)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm22.Show
working = working_shk
UserForm22.OptionButton2.SetFocus
End If
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.ScreenUpdating = False
lt.[cn4:cy385].ClearContents
With Sheets("spielplan")
.[b16:bu63].ClearContents
.[k4:aj14].ClearContents
.[au4:bu14].ClearContents
End With
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub CommandButton5_Click()
If ComboBox3.ListIndex = -1 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
z = ComboBox3.ListIndex + 11
For j = 1 To Sheets("plan").[h2]
Randomize
ht = Int(Rnd() * 5)
at = Int(Rnd() * 4)
Cells(z, j * 3 + 7) = ht
Cells(z, j * 3 + 8) = at
Next
If Sheets("plan").[f46] = 1 Then Cells(z, 43) = Int(Rnd() * Sheets("plan").[h2]) + 1
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton6_Click()
Set d = Sheets("druck")
If Sheets("plan").[f47] = 0 Then
d.[af1:ag1].EntireColumn.Hidden = True
ber = Range("r24:ae93").Address
Else
d.[af1:ag1].EntireColumn.Hidden = False
ber = Range("r24:ag93").Address
End If
If Sheets("plan").[h31] > 0 Then ber = Range("r24:ak93").Address
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
d.Range(d.Cells(51 + Sheets("plan").[g2], 1), d.Cells(89, 1)).EntireRow.Hidden = True
d.[s51:ap51].AutoFill Destination:=d.[s51:ap88]
Sheets(aktuelleseite).Activate
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
UserForm22.Hide
Call showhtml("druck", ber, 7, "Statistik_" & ComboBox3.Value)
d.Range("r24:r93").EntireRow.Hidden = False
d.[af1:ag1].EntireColumn.Hidden = False
d.[s52:ap88].Clear
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm22.Show
working = working_shk
End Sub
Private Sub CommandButton7_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
With teamstats
.ComboBox1.Tag = ComboBox3.ListIndex
If Sheets("plan").[f46] = 0 Then .Label1.Visible = False
End With
UserForm22.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
teamstats.Show
working = working_shk
Unload teamstats
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm22.Show
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton8_Click()
Set d = Sheets("druck")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
d.Range(d.Cells(51 + Sheets("plan").[g2], 1), d.Cells(89, 1)).EntireRow.Hidden = True
d.[s51:ap51].AutoFill Destination:=d.[s51:ap88]
Sheets(aktuelleseite).Activate
With tageserg
.Caption = "Tagesergebnisse von " & ComboBox3.Value
.ListBox1.RowSource = "druck!r51:ak" & 50 + Sheets("plan").[g2]
End With
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
UserForm22.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tageserg.Show
working = working_shk
d.Range("r24:r93").EntireRow.Hidden = False
d.[af1:ag1].EntireColumn.Hidden = False
d.[s52:ap88].Clear
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm22.Show
End Sub
Private Sub MultiPage1_Change()
If MultiPage1.Value = 2 And CheckBox1.Value = False Then
Sheets("plan").[f47] = newquote
perstipp.Caption = Format([gf32], "0.0000")
bezpkt.Caption = [gf33]
qpkt.Caption = [gf34]
tipperg.Caption = [gf36]
tagerg.Caption = [gf37]
ElseIf MultiPage1.Value = 1 And CheckBox1.Value = False Then
Sheets("plan").[f47] = 0
End If
If MultiPage1.Value = 1 Then
CommandButton6.Visible = True
CommandButton7.Visible = True
CommandButton8.Visible = True
Else
CommandButton6.Visible = False
CommandButton7.Visible = False
CommandButton8.Visible = False
End If
End Sub
Private Sub OptionButton1_Click()
Frame2.Visible = True
Frame3.Visible = False
Frame4.Visible = False
Label87.Visible = True
Label88.Visible = False
Label89.Visible = False
If CheckBox11 And CheckBox12 Then
CheckBox8.Enabled = True
Else
CheckBox8.Enabled = False
End If
CommandButton4.Caption = "Drucken"
End Sub
Private Sub OptionButton2_Click()
Frame2.Visible = False
Frame3.Visible = True
Frame4.Visible = False
Label87.Visible = False
Label88.Visible = True
Label89.Visible = False
If CheckBox11 And CheckBox12 Then
CheckBox9.Enabled = True
CheckBox10.Enabled = True
Else
CheckBox9.Enabled = False
CheckBox10.Enabled = False
End If
CommandButton4.Caption = "Ver|fffd|ffentlichen"
End Sub
Private Sub OptionButton3_Click()
Frame2.Visible = False
Frame4.Visible = True
Frame3.Visible = False
Label87.Visible = False
Label88.Visible = False
Label89.Visible = True
CommandButton4.Caption = "Datei erstellen"
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
atwork = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
quote = Sheets("plan").[f47]
If quote = 0 Then
newquote = 1
Label73.Visible = True
Else
newquote = quote
End If
If quote > 0 Then CheckBox1.Value = True
MultiPage1.Value = 0
ComboBox3.ListIndex = [fs20] - 1
idx = [fs21]
CheckBox8.Enabled = False
CheckBox9.Enabled = False
CheckBox10.Enabled = False
spt = [i5]
halbserie = [fu21]
Label90.Caption = "Zufallstipps f|fffd|r Spieltag " & [i5]
CheckBox2.Value = Cells(idx + 10, 109) = 1
CheckBox3.Value = Cells(idx + 10, 110) = 1
If Len(vr) = 0 Then vr = CheckBox2.Value
If Len(rr) = 0 Then rr = CheckBox3.Value
If vr <> CheckBox2.Value Or rr <> CheckBox3.Value Then
CommandButton1.Enabled = True
Else
CommandButton1.Enabled = False
End If
If [aq9] = 2 Then
CheckBox2.Visible = False
CheckBox3.Visible = False
CommandButton1.Visible = False
sollhr = Sheets("einstellungen").Cells(2 + idx, 120)
sollrr = Sheets("einstellungen").Cells(2 + idx, 121)
isthr = Sheets("einstellungen").Cells(104 + idx, 120)
istrr = Sheets("einstellungen").Cells(104 + idx, 121)
Label95.Caption = "Vorrunde: " & isthr & " von " & sollhr & " Tippabgaben bezahlt"
Label96.Caption = "R|fffd|ckrunde: " & istrr & " von " & sollrr & " Tippabgaben bezahlt"
Label95.Visible = True
Label96.Visible = True
End If
atwork = 0
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm23"
Attribute VB_Base = "0{C56BE814-B77C-4EE1-9F4D-E05EF95C5A70}{ABA7A3D0-4C61-498C-8F5E-B079B340CFBC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
End Sub
Attribute VB_Name = "UserForm24"
Attribute VB_Base = "0{A4B9D1D0-6C0F-4AB6-A361-C6D251BDF7B0}{21AFC221-CAAB-4C96-B5E1-45C589170D2F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, halbserie, spt
Private Sub CheckBox10_Click()
If halbserie = 2 Then Exit Sub
If CheckBox10 Then
CheckBox9.Value = False
CheckBox9.Enabled = False
Else
CheckBox9.Enabled = True
End If
End Sub
Private Sub CheckBox11_Click()
If halbserie = 1 Then Exit Sub
If CheckBox11 Then
CheckBox9.Value = False
CheckBox9.Enabled = False
Else
CheckBox9.Enabled = True
End If
End Sub
Private Sub CheckBox4_Click()
If CheckBox4 Then
If halbserie = 1 Then
CheckBox5.Value = False
CheckBox5.Enabled = False
Else
CheckBox6.Value = False
CheckBox6.Enabled = False
End If
CheckBox5.Enabled = True
CheckBox6.Enabled = True
End If
End Sub
Private Sub CheckBox9_Click()
If CheckBox9 Then
If halbserie = 1 Then
CheckBox10.Value = False
CheckBox10.Enabled = False
Else
CheckBox11.Value = False
CheckBox11.Enabled = False
End If
CheckBox10.Enabled = True
CheckBox11.Enabled = True
End If
End Sub
Private Sub CommandButton2_Click()
If CheckBox5 Or CheckBox6 Then
aw = MsgBox("Die ausgew|fffd|hlten Daten werden unwiderruflich gel|fffd|scht!" & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "L|fffd|schen best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
End If
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
atwork = 1
idx = [fs21].Value
Set d = Sheets("data")
anz = Sheets("tipps").[b6]
ppspt = Sheets("plan").[h2]
spphs = Sheets("plan").[t1]
spps = 2 * spphs
anzspt = Sheets("plan").[g2]
anzspths = anzspt / 2
If CheckBox5 Then
d.Range(d.Cells(2, 3), d.Cells(3 * spphs + 1, 102)).ClearContents
d.Range(d.Cells(1146, 3), d.Cells(1159, 102)).ClearContents
d.Range(d.Cells(1364, 3), d.Cells(15 * anzspths + 1363, 102)).ClearContents
d.Range(d.Cells(1936, 3), d.Cells(spphs + 1935, 102)).ClearContents
UserForm24.Tag = "new"
End If
If CheckBox6 Then
d.Range(d.Cells(3 * spphs + 2, 3), d.Cells(3 * spps + 1, 102)).ClearContents
d.Range(d.Cells(1162, 3), d.Cells(1175, 102)).ClearContents
d.Range(d.Cells(15 * anzspths + 1364, 3), d.Cells(15 * anzspt + 1363, 102)).ClearContents
d.Range(d.Cells(spphs + 1936, 3), d.Cells(spps + 1935, 102)).ClearContents
UserForm24.Tag = "new"
End If
If CheckBox4 Then
For i = 1 To 10
Range(Cells(11, i * 3 + 7), Cells(110, i * 3 + 8)).ClearContents
Next
Range(Cells(11, 43), Cells(110, 43)).ClearContents
End If
If CheckBox12 Then
With Sheets("zusatztipps")
.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If anz > 0 Then
.Range(.Cells(67, 4), .Cells(108, 3 + anz)).ClearContents
.Range(.Cells(7, 5), .Cells(47, 2 * anz + 4)).ClearContents
End If
.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End With
UserForm24.Tag = "new"
End If
Call katber
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
If UserForm24.Tag = "new" Then
aw = MsgBox("Die Daten wurden erfolgreich gel|fffd|scht", vbOKOnly, "Vorgang abgeschlossen")
UserForm24.Hide
Else
aw = MsgBox("Die Eingabezellen f|fffd|r die Tipps wurden geleert." & Chr(13) & "|fffd|ber die Schaltfl|fffd|che '|fffd|nderungen |fffd|bernehmen' auf dem Blatt 'Tipps' werden die ge|fffd|nderten Tipps eingetragen!", vbOKOnly, "Vorgang abgeschlossen")
UserForm24.Hide
End If
End Sub
Private Sub CheckBox5_Click()
If halbserie = 2 Then Exit Sub
If CheckBox5 Then
CheckBox4.Value = False
CheckBox4.Enabled = False
Else
CheckBox4.Enabled = True
End If
End Sub
Private Sub CheckBox6_Click()
If halbserie = 1 Then Exit Sub
If CheckBox6 Then
CheckBox4.Value = False
CheckBox4.Enabled = False
Else
CheckBox4.Enabled = True
End If
End Sub
Private Sub CommandButton3_Click()
If CheckBox10 Or CheckBox11 Then
aw = MsgBox("Die ausgew|fffd|hlten Daten werden unwiderruflich gel|fffd|scht!" & Chr(13) & "Vorgang fortsetzen?", vbYesNo, "L|fffd|schen best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
End If
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
atwork = 1
Set d = Sheets("data")
Set l = Sheets("ligatabelle")
ppspt = Sheets("plan").[h2]
spphs = Sheets("plan").[t1]
spps = 2 * spphs
anzspt = Sheets("plan").[g2]
anzspths = anzspt / 2
If CheckBox10 Then
UserForm24.Tag = "new"
l.Range(l.Cells(2, 3), l.Cells(1 + spphs, 12)).ClearContents
l.[n2:ag21].ClearContents
l.[be2:be21].ClearContents
l.[aq2:aq21].Value = l.[be24:be43].Value
If halbserie = 1 Then
For i = 1 To 10
Range(Cells(8, i * 3 + 7), Cells(8, i * 3 + 8)).ClearContents
Next
End If
anz = [b6]
If anz > 0 Then
d.Range(d.Cells(1936, 3), d.Cells(1935 + spphs, anz + 2)).Value = 0
d.Range(d.Cells(1364, 3), d.Cells(1363 + 15 * anzspths, anz + 2)).Value = 0
d.Range(d.Cells(1146, 3), d.Cells(1158, anz + 2)).Value = 0
End If
End If
If CheckBox11 Then
UserForm24.Tag = "new"
l.Range(l.Cells(2 + spphs, 3), l.Cells(1 + spps, 12)).ClearContents
l.[n47:ag66].ClearContents
l.[be24:be43].ClearContents
l.[aq2:aq21].Value = l.[be2:be21].Value
If halbserie = 2 Then
For i = 1 To 10
Range(Cells(8, i * 3 + 7), Cells(8, i * 3 + 8)).ClearContents
Next
End If
anz = [b6]
If anz > 0 Then
d.Range(d.Cells(1936 + spphs, 3), d.Cells(1935 + spps, anz + 2)).Value = 0
d.Range(d.Cells(1364 + 15 * anzspths, 3), d.Cells(1363 + 15 * anzspt, anz + 2)).Value = 0
d.Range(d.Cells(1162, 3), d.Cells(1175, anz + 2)).Value = 0
End If
End If
If CheckBox9 Then
For i = 1 To 10
Range(Cells(8, i * 3 + 7), Cells(8, i * 3 + 8)).ClearContents
Next
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
If UserForm24.Tag = "new" Then
aw = MsgBox("Die Daten wurden erfolgreich gel|fffd|scht", vbOKOnly, "Vorgang abgeschlossen")
UserForm24.Hide
Else
aw = MsgBox("Die Eingabezellen f|fffd|r die Ergebnisse wurden geleert." & Chr(13) & "|fffd|ber die Schaltfl|fffd|che '|fffd|nderungen |fffd|bernehmen' auf dem Blatt 'Tipps' werden die ge|fffd|nderten Ergebnisse eingetragen!", vbOKOnly, "Vorgang abgeschlossen")
UserForm24.Hide
End If
End Sub
Private Sub CommandButton4_Click()
UserForm24.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
halbserie = [fu21]
spt = [i5]
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm25"
Attribute VB_Base = "0{7A30CF4E-EC0F-48F2-8594-6300C1CC3708}{6614A1CD-1E67-4FF9-88B8-EDD1B9D47D1E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, atwork, lindex
Private Sub CommandButton1_Click()
aw = MsgBox("Diese Funktion ist in der Testversion deaktiviert...", vbInformation, "Tippspiel XXL - Testversion")
End Sub
Private Sub ListBox1_Click()
lindex = ListBox1.ListIndex
If lindex >= 0 Then
CommandButton1.Caption = "|fffd|ndern: " & ListBox1.Value
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm26"
Attribute VB_Base = "0{11AE684C-9AB6-4440-B76C-972CC5619A0A}{BA10FA7B-1C50-4A94-A967-EAFE9ACA6AE8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim formtab, formaus, formq, formrang, htmldata, druckdata, first, filesavename, dateiname, pfad, endung, datname, filetoopen, anzdat, vpfad
Private Sub CheckBox1_Click()
If CheckBox1.Enabled = True And CheckBox1 Then
CheckBox32.Enabled = False
CheckBox32.Value = False
CheckBox30.Enabled = False
CheckBox30.Value = False
If ComboBox7.ListIndex = 1 Then ComboBox7.ListIndex = 0
Else
CheckBox32.Enabled = True
If CheckBox32 Then
CheckBox30.Value = False
CheckBox30.Enabled = False
Else
CheckBox30.Enabled = True
End If
End If
oldindex = ComboBox7.ListIndex
ComboBox7.ListIndex = -1
ComboBox7.ListIndex = oldindex
druckdata(4, 1) = CheckBox1.Value
End Sub
Private Sub CheckBox10_Click()
If Not CheckBox10 Then
OptionButton3.Enabled = False
OptionButton4.Enabled = False
Else
OptionButton3.Enabled = True
OptionButton4.Enabled = True
End If
htmldata(3, 1) = CheckBox10.Value
End Sub
Private Sub CheckBox11_Click()
druckdata(5, 1) = CheckBox11.Value
End Sub
Private Sub CheckBox12_Click()
If CheckBox12 Then
CheckBox13.Enabled = True
CheckBox14.Enabled = True
ComboBox3.Enabled = True
If Not CheckBox14 Then
CheckBox15.Enabled = False
CheckBox27.Enabled = False
Else
CheckBox27.Enabled = True
If CheckBox27 Then
CheckBox15.Enabled = False
Else
CheckBox15.Enabled = True
End If
End If
Else
CheckBox13.Enabled = False
CheckBox14.Enabled = False
CheckBox15.Enabled = False
CheckBox27.Enabled = False
ComboBox3.Enabled = False
End If
htmldata(8, 1) = CheckBox12.Value
End Sub
Private Sub CheckBox13_Click()
htmldata(9, 1) = CheckBox13.Value
End Sub
Private Sub CheckBox14_Click()
If Not CheckBox12 Or Not CheckBox14 Then
CheckBox15.Enabled = False
CheckBox27.Enabled = False
ElseIf CheckBox14 And CheckBox27 Then
CheckBox27.Enabled = True
CheckBox15.Enabled = False
Else
CheckBox15.Enabled = True
CheckBox27.Enabled = True
End If
htmldata(11, 1) = CheckBox14.Value
End Sub
Private Sub CheckBox15_Click()
htmldata(12, 1) = CheckBox15.Value
End Sub
Private Sub CheckBox17_Click()
If CheckBox17 Then
CheckBox21.Enabled = True
CheckBox29.Enabled = True
CheckBox36.Enabled = True
If Not CheckBox1 Then
CheckBox32.Enabled = True
Else
CheckBox32.Enabled = False
CheckBox32.Value = False
End If
If Not CheckBox21 Then
CheckBox26.Enabled = False
CheckBox30.Enabled = False
Else
CheckBox26.Enabled = True
If CheckBox32 Or CheckBox1 Then
CheckBox30.Enabled = False
Else
CheckBox30.Enabled = True
End If
End If
Else
CheckBox32.Enabled = False
CheckBox29.Enabled = False
CheckBox21.Enabled = False
CheckBox26.Enabled = False
CheckBox30.Enabled = False
CheckBox36.Enabled = False
End If
druckdata(9, 1) = CheckBox17.Value
End Sub
Private Sub CheckBox18_Click()
If CheckBox18 Then
ComboBox7.Enabled = True
Else
ComboBox7.Enabled = False
End If
druckdata(16, 1) = CheckBox18.Value
End Sub
Private Sub CheckBox21_Click()
If CheckBox21 Then
CheckBox26.Enabled = True
If Not CheckBox32 Then
CheckBox30.Enabled = True
Else
CheckBox30.Enabled = False
End If
Else
CheckBox26.Enabled = False
CheckBox30.Enabled = False
End If
druckdata(12, 1) = CheckBox21.Value
End Sub
Private Sub CheckBox23_Click()
druckdata(8, 1) = CheckBox23.Value
End Sub
Private Sub CheckBox24_Click()
druckdata(6, 1) = CheckBox24.Value
End Sub
Private Sub CheckBox26_Click()
If CheckBox26 And CheckBox30 Then CheckBox30.Value = False
druckdata(13, 1) = CheckBox26.Value
End Sub
Private Sub CheckBox27_Click()
If CheckBox27 Then
CheckBox15.Enabled = False
Else
CheckBox15.Enabled = True
End If
htmldata(13, 1) = CheckBox27.Value
End Sub
Private Sub CheckBox29_Click()
druckdata(11, 1) = CheckBox29.Value
End Sub
Private Sub CheckBox3_Click()
htmldata(20, 1) = CheckBox3.Value
End Sub
Private Sub CheckBox30_Click()
If CheckBox30 And CheckBox32 Then CheckBox30.Value = False
If CheckBox30 And CheckBox26 Then CheckBox26.Value = False
druckdata(14, 1) = CheckBox30.Value
End Sub
Private Sub CheckBox32_Click()
If CheckBox32 Then
If CheckBox30 Then CheckBox26.Value = True
CheckBox30.Value = False
CheckBox30.Enabled = False
Else
CheckBox30.Enabled = True
End If
oldindex = ComboBox7.ListIndex
ComboBox7.ListIndex = -1
ComboBox7.ListIndex = oldindex
druckdata(10, 1) = CheckBox32.Value
End Sub
Private Sub CheckBox33_Click()
If CheckBox33 Then
OptionButton1.Enabled = True
OptionButton2.Enabled = True
If Not OptionButton1 And Not OptionButton2 Then OptionButton1.Value = True
Else
OptionButton1.Enabled = False
OptionButton2.Enabled = False
End If
End Sub
Private Sub CheckBox34_Click()
druckdata(17, 1) = CheckBox34.Value
End Sub
Private Sub CheckBox36_Click()
druckdata(18, 1) = CheckBox36.Value
End Sub
Private Sub CheckBox45_Click()
End Sub
Private Sub CheckBox4_Click()
htmldata(19, 1) = CheckBox4.Value
End Sub
Private Sub CheckBox5_Click()
If CheckBox5 Then
CheckBox6.Enabled = True
ComboBox5.Enabled = True
Else
CheckBox6.Enabled = False
ComboBox5.Enabled = False
End If
htmldata(14, 1) = CheckBox5.Value
End Sub
Private Sub CheckBox6_Click()
htmldata(15, 1) = CheckBox6.Value
End Sub
Private Sub CheckBox8_Click()
If CheckBox8 Then
CheckBox9.Enabled = True
Else
CheckBox9.Enabled = False
End If
htmldata(6, 1) = CheckBox8.Value
End Sub
Private Sub CheckBox9_Click()
htmldata(7, 1) = CheckBox9.Value
End Sub
Private Sub ComboBox1_Change()
'If working Or Not startwert Then Exit Sub
druckdata(3, 1) = ComboBox1.ListIndex
On Error Resume Next
CommandButton1.SetFocus
End Sub
Private Sub ComboBox2_Change()
'If working Or Not startwert Then Exit Sub
anz = Sheets("tipps").[b6].Value
anzdat = Int(anz / (ComboBox2.ListIndex + 1))
If anz Mod (ComboBox2.ListIndex + 1) <> 0 Then anzdat = anzdat + 1
If anzdat <= 1 Then
anzdat = 1
Label8.Caption = "Es entsteht 1 HTML-Seite"
CheckBox3.Enabled = False
Else
Label8.Caption = "Es entstehen " & anzdat & " HTML-Seiten"
CheckBox3.Enabled = True
If UserForm26.Visible = False Then CheckBox3.Value = Sheets("html").[b4]
oidx = ComboBox5.ListIndex
ComboBox5.ListIndex = -1
ComboBox5.ListIndex = oidx
oidx = ComboBox3.ListIndex
ComboBox3.ListIndex = -1
ComboBox3.ListIndex = oidx
End If
On Error Resume Next
CommandButton4.SetFocus
htmldata(2, 1) = ComboBox2.ListIndex
End Sub
Private Sub ComboBox5_Change()
'If working Or Not startwert Then Exit Sub
If ComboBox5.ListIndex = 0 Then
CheckBox6.Enabled = True
Else
If anzdat > 1 Then
ComboBox5.ListIndex = 0
Else
CheckBox6.Enabled = False
End If
End If
htmldata(16, 1) = ComboBox5.ListIndex
On Error Resume Next
CommandButton4.SetFocus
End Sub
Private Sub ComboBox3_Change()
'If working Or Not startwert Then Exit Sub
If ComboBox3.ListIndex = 0 Then
CheckBox13.Enabled = True
Else
If anzdat > 1 Then
ComboBox3.ListIndex = 0
Else
CheckBox13.Enabled = False
End If
End If
htmldata(10, 1) = ComboBox3.ListIndex
On Error Resume Next
CommandButton4.SetFocus
End Sub
Private Sub ComboBox6_Change()
'If working Or Not startwert Then Exit Sub
druckdata(7, 1) = ComboBox6.ListIndex
On Error Resume Next
CommandButton1.SetFocus
End Sub
Private Sub ComboBox7_Change()
'If working Or Not startwert Then Exit Sub
If ComboBox7.ListIndex = 1 And CheckBox1.Enabled = True And CheckBox1.Value = True Then ComboBox7.ListIndex = 0
If ComboBox7.ListIndex = 3 And CheckBox32.Value = True Then ComboBox7.ListIndex = 2
On Error Resume Next
CommandButton1.SetFocus
druckdata(15, 1) = ComboBox7.ListIndex
End Sub

Private Sub ComboBox8_Change()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub CommandButton1_Click()
vollbild = Application.DisplayFullScreen
If CheckBox34 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
Application.ScreenUpdating = False
rando = Sheets("druck").PageSetup.TopMargin
pre = CheckBox34.Value
anz = [b6]
z = 10 + anz
If anz = 0 Then z = 9
kopien = ComboBox1.ListIndex + 1
UserForm26.Hide
If OptionButton1 Then
With Sheets("tipps")
Application.EnableEvents = False
.Range(.Cells(z + 1, 1), .Cells(111, 1)).EntireRow.Hidden = True
If CheckBox11 Then
z = 116
.[a113:a116].EntireRow.Hidden = False
Else
.[a111].EntireRow.Hidden = False
z = 111
End If
sa = "e"
If CheckBox24 Then sa = "g"
dber = Range(sa & "7:am" & z).Address
Sheets("tipps").Range(dber).PrintOut copies:=kopien
.Range(.Cells(11, 1), .Cells(111, 1)).EntireRow.Hidden = False
.[a113:a116].EntireRow.Hidden = True
End With
Else
Set h = Sheets("html")
If ComboBox8.ListIndex = 0 Then
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[i1011], order1:=xlAscending, header:=xlNo
ElseIf ComboBox8.ListIndex = 1 Then
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[g1011], order1:=xlAscending, Key2:=h.[h1011], Order2:=xlDescending, header:=xlNo
Else
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[e1011], order1:=xlAscending, Key2:=h.[f1011], Order2:=xlDescending, header:=xlNo
End If
h.[b87] = ComboBox8.ListIndex
anzpaar = Sheets("plan").[h2]
maxs = anzpaar * 3 + 9
h.Range("a1:aq1").EntireColumn.Hidden = False
h.Range("a1006:a1111").EntireRow.Hidden = False
h.Range(h.Cells(1, maxs + 1), h.Cells(1, 40)).EntireColumn.Hidden = True
h.[b7] = CheckBox1.Value
h.[b8] = ComboBox1.ListIndex
If OptionButton1 Then
h.[b6] = 1
Else
h.[b6] = 2
End If
If CheckBox11 Then
h.Range("a1116:a1119").EntireRow.Hidden = False
h.Range("a1115").EntireRow.Hidden = True
Else
h.Range("a1115:a1119").EntireRow.Hidden = True
End If
Sheets("html").Visible = True
If anz > 50 And CheckBox1 Then
h.[a1061:a1113].EntireRow.Hidden = True
Sheets("html").PrintOut copies:=kopien, from:=1, To:=1
Application.ScreenUpdating = True
aw = MsgBox("Es werden nun die Vorderseiten gedruckt. Wenn der Druck-Vorgang beendet ist, legen sie die Bl|fffd|tter erneut in den Drucker, um die R|fffd|ckseiten zu bedrucken." & Chr(13) & Chr(13) & "Starten Sie anschlie|fffd|end den Druck der R|fffd|ckseiten |fffd|ber die JA-Schaltfl|fffd|che." & " Dr|fffd|cken Sie die JA-Schaltfl|fffd|che NICHT, bevor das Papier wieder in den Drucker gelegt wurde! Mit NEIN wird der Vorgang abgebrochen." & Chr(13) & Chr(13) & "Drucken der R|fffd|ckseiten starten?", vbYesNo, "Beidseitiger Druck")
If aw = 6 Then
Application.ScreenUpdating = False
With Sheets("html")
.[a1011:a1060].EntireRow.Hidden = True
.[a1061:a1110].EntireRow.Hidden = False
.Range(.Cells(anz + 1011, 1), .Cells(1113, 1)).EntireRow.Hidden = True
Sheets("html").PrintOut copies:=kopien, from:=1, To:=1
.Visible = xlVeryHidden
End With
End If
Else
With Sheets("html")
.Range(.Cells(anz + 1011, 1), .Cells(1111, 1)).EntireRow.Hidden = True
Sheets("html").PrintOut copies:=kopien, from:=1, To:=1
.Visible = xlVeryHidden
End With
End If
End If
anz = [b6]
kopien = ComboBox6.ListIndex + 1
anzt = Sheets("plan").[h2]
Set d = Sheets("druck")
Sheets("html").[b59:b76].Value = druckdata
Sheets("html").[b59] = 1
If CheckBox18 And Not formrang Then
formrang = True
Application.Calculation = xlCalculationManual
Sheets("data").[a7173] = 0
Sheets("data").[a7177] = 0
Sheets("zusatztipps").[c209] = 1
Sheets("zusatztipps").[c218] = 1
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Set zt = Sheets("zusatztipps")
Set da = Sheets("data")
da.[bc7068] = 1
da.[bc7070] = 1
da.[ak7067:ba7067].Copy
da.[ak7067:ba7166].PasteSpecial Paste:=xlPasteFormulas
da.Calculate
v = 35
da.Range("aj7067:bb" & 7166).Sort key1:=da.Cells(7067, v + 3), order1:=xlAscending, Key2:=da.Cells(7067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
d.[em454:fa556].Value = da.[am7064:ba7166].Value
da.[ak7068:ba7155].ClearContents
End If
If CheckBox18 And ComboBox7.ListIndex = 1 And (Not CheckBox17 Or (CheckBox17 And Not CheckBox32)) Then
rdruck = True
Application.ScreenUpdating = True
aw = MsgBox("Es wird anschlie|fffd|end die Rangliste auf die R|fffd|ckseiten der Bl|fffd|tter mit dem Tagesergebnis gedruckt." & Chr(13) & "Wenn der aktuelle Druck-Vorgang beendet ist, legen sie die Ausdrucke mit dem Tagesergebnis bitte erneut in den Drucker, um die R|fffd|ckseiten zu bedrucken." & Chr(13) & Chr(13) & "Starten Sie dann den Druck |fffd|ber die JA-Schaltfl|fffd|che." & " Dr|fffd|cken Sie die JA-Schaltfl|fffd|che NICHT, bevor das Papier wieder in den Drucker gelegt wurde! Mit NEIN wird der Vorgang abgebrochen." & Chr(13) & Chr(13) & "Ben|fffd|tigte Bl|fffd|tter: " & kopien & " - Drucken der R|fffd|ckseiten starten?", vbYesNo, "Beidseitiger Druck")
If aw = 6 Then
Application.ScreenUpdating = False
Sheets("druck").Range(d.Cells(457 + anz, 1), d.Cells(557, 1)).EntireRow.Hidden = True
Sheets("druck").Visible = True
Call ausdruck("druck", "em454:fa562", pre, kopien)
If CheckBox17 Or CheckBox23 Then
Application.ScreenUpdating = True
aw = MsgBox("Best|fffd|tigen Sie mit OK, wenn der Druckvorgang der R|fffd|ckseiten beendet ist." & Chr(13) & "Anschlie|fffd|end werden die weiteren Seiten gedruckt. Stellen sie sicher, dass ausreichend Papier zur verf|fffd|gug steht!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
Else
GoTo schluss
End If
Else
If Not CheckBox17 And Not CheckBox23 Then GoTo schluss
Application.ScreenUpdating = True
aw = MsgBox("Die R|fffd|ckseiten mit der Rangliste wurden nicht gedruckt!" & Chr(13) & "Best|fffd|tigen Sie mit OK den Druck der weiteren Seiten oder brechen Sie den Vorgang komplett ab. Stellen sie sicher, dass ausreichend Papier zur Verf|fffd|gug steht, wenn der Druckvorgang fortgesetzt wird!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
End If
End If
Application.ScreenUpdating = False
If CheckBox17 Then
If Not formaus Then
formaus = True
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[ft21] = [i5]
[dh117] = [i5]
[df119:ec119].AutoFill Destination:=[df119:ec219]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[dh120:dv219].Value = [dh120:dv219].Value
Range("df120:dv" & 119 + [b6]).Sort key1:=[dh120], order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).Calculate
[dj120:dj219].Value = [dg120:dg219].Value
[em121:ey220].Value = [dj120:dv219].Value
d.[en200:ep211].Value = [em100:eo111].Value
d.[et199:ey199].Value = [es99:ex99].Value
d.[em218:ey320].Value = [em118:ey220].Value
End If
If CheckBox21 And Not formq Then
formq = True
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
d.[em328:ez448].Value = [fc100:fp220].Value
d.[fa202:fa211].Value = [fa102:fa111].Value
[fb122:fq220].Clear
End If
[fq23:gs31].ClearContents
[df120:ec219].ClearContents
With Sheets("druck")
.Range(.Cells(202 + anzt, 1), .Cells(212, 1)).EntireRow.Hidden = True
.Range(.Cells(221 + anz, 1), .Cells(321, 1)).EntireRow.Hidden = True
.Range(.Cells(330 + anzt, 1), .Cells(340, 1)).EntireRow.Hidden = True
.Range(.Cells(349 + anz, 1), .Cells(449, 1)).EntireRow.Hidden = True
.Range(.Cells(457 + anz, 1), .Cells(557, 1)).EntireRow.Hidden = True
za = 218
ze = 322
se = 155
If CheckBox29 Then
ze = 326
Else
.[a323:a326].EntireRow.Hidden = True
End If
If CheckBox21 And CheckBox26 Then
ze = 452
za = 218
se = 156
qdruck = True
Else
.[a327:a452].EntireRow.Hidden = True
If CheckBox36 Then za = 200
End If
If CheckBox18 And ((ComboBox7.ListIndex = 1 And CheckBox32) Or ComboBox7.ListIndex = 2) Then
ze = 562
se = 157
rdruck = True
If CheckBox29 Then d.[a323:a326].EntireRow.Hidden = True
End If
If CheckBox32 Then
Application.ScreenUpdating = True
aw = MsgBox("Es werden anschlie|fffd|end weitere Daten auf die R|fffd|ckseiten der Bl|fffd|tter mit dem Tagesergebnis gedruckt." & Chr(13) & "Wenn der aktuelle Druck-Vorgang beendet ist, legen sie die Ausdrucke mit dem Tagesergebnis bitte erneut in den Drucker, um die R|fffd|ckseiten zu bedrucken." & Chr(13) & Chr(13) & "Starten Sie dann den Druck |fffd|ber die JA-Schaltfl|fffd|che." & " Dr|fffd|cken Sie die JA-Schaltfl|fffd|che NICHT, bevor das Papier wieder in den Drucker gelegt wurde! Mit NEIN wird der Vorgang abgebrochen." & Chr(13) & Chr(13) & "Ben|fffd|tigte Bl|fffd|tter: " & kopien & " - Drucken der R|fffd|ckseiten starten?", vbYesNo, "Beidseitiger Druck")
If aw = 6 Then
Application.ScreenUpdating = False
Sheets("druck").Visible = True
Call ausdruck("druck", Range(Cells(za, 143), Cells(ze, 157)).Address, pre, kopien)
If (CheckBox21 And Not qdruck) Or (CheckBox18 And Not rdruck) Or CheckBox23 Then
Application.ScreenUpdating = True
aw = MsgBox("Best|fffd|tigen Sie mit OK, wenn der Druckvorgang der R|fffd|ckseiten beendet ist." & Chr(13) & "Anschlie|fffd|end werden die weiteren Seiten gedruckt. Stellen sie sicher, dass ausreichend Papier zur Verf|fffd|gug steht!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
Else
GoTo schluss
End If
Else
If (CheckBox17 And Not qdruck) Or (CheckBox18 And Not rdruck) Or CheckBox23 Then
Application.ScreenUpdating = True
aw = MsgBox("Die R|fffd|ckseiten wurden nicht gedruckt!" & Chr(13) & "Best|fffd|tigen Sie mit OK den Druck der weiteren Seiten oder brechen Sie den Vorgang komplett ab. Stellen sie sicher, dass ausreichend Papier zur Verf|fffd|gug steht, wenn der Druckvorgang fortgesetzt wird!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
Else
GoTo schluss
End If
End If
Else
Application.ScreenUpdating = False
Sheets("druck").Visible = True
Call ausdruck("druck", Range(Cells(za, 143), Cells(ze, 157)).Address, pre, kopien)
If (CheckBox21 And CheckBox30) Or (CheckBox18 And ComboBox7.ListIndex = 3) Then
za = 328
ze = 452
If CheckBox18 Then ze = 562
If Not CheckBox21 Then za = 454
If CheckBox18 Then rdruck = True
If CheckBox21 Then qdruck = True
d.[a327:a452].EntireRow.Hidden = False
d.[a341:a344].EntireRow.Hidden = True
d.Range(d.Cells(349 + anz, 1), d.Cells(449, 1)).EntireRow.Hidden = True
Application.ScreenUpdating = True
aw = MsgBox("Es werden anschlie|fffd|end weitere Daten auf die R|fffd|ckseiten der Bl|fffd|tter mit der Tagesauswertung gedruckt." & Chr(13) & "Wenn der aktuelle Druck-Vorgang beendet ist, legen sie die Ausdrucke mit dem Tagesauswertung bitte erneut in den Drucker, um die R|fffd|ckseiten zu bedrucken." & Chr(13) & Chr(13) & "Starten Sie dann den Druck |fffd|ber die JA-Schaltfl|fffd|che." & " Dr|fffd|cken Sie die JA-Schaltfl|fffd|che NICHT, bevor das Papier wieder in den Drucker gelegt wurde! Mit NEIN wird der Vorgang abgebrochen." & Chr(13) & Chr(13) & "Ben|fffd|tigte Bl|fffd|tter: " & kopien & " - Drucken der R|fffd|ckseiten starten?", vbYesNo, "Beidseitiger Druck")
If aw = 6 Then
Application.ScreenUpdating = False
Sheets("druck").Visible = True
Call ausdruck("druck", Range(Cells(za, 143), Cells(ze, 157)).Address, pre, kopien)
If (CheckBox21 And Not qdruck) Or (CheckBox18 And Not rdruck) Or CheckBox23 Then
Application.ScreenUpdating = True
aw = MsgBox("Best|fffd|tigen Sie mit OK, wenn der Druckvorgang der R|fffd|ckseiten beendet ist." & Chr(13) & "Anschlie|fffd|end werden die weiteren Seiten gedruckt. Stellen sie sicher, dass ausreichend Papier zur Verf|fffd|gug steht!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
Else
GoTo schluss
End If
Else
If (CheckBox21 And Not qdruck) Or (CheckBox18 And Not rdruck) Or CheckBox23 Then
Application.ScreenUpdating = True
aw = MsgBox("Die R|fffd|ckseiten wurden nicht gedruckt!" & Chr(13) & "Best|fffd|tigen Sie mit OK den Druck der weiteren Seiten oder brechen Sie den Vorgang komplett ab. Stellen sie sicher, dass ausreichend Papier zur Verf|fffd|gug steht, wenn der Druckvorgang fortgesetzt wird!", vbOKCancel, "Druckvorgang fortsetzen")
If aw <> 1 Then GoTo schluss
Else
GoTo schluss
End If
End If
End If
End If
End With
End If
Application.ScreenUpdating = False
If CheckBox21 And Not qdruck Then
d.[a327:a452].EntireRow.Hidden = False
d.[a341:a344].EntireRow.Hidden = True
d.Range(d.Cells(349 + anz, 1), d.Cells(449, 1)).EntireRow.Hidden = True
Call ausdruck("druck", "em328:ez452", pre, kopien)
End If
If CheckBox18 And Not rdruck Then Call ausdruck("druck", "em454:fa562", pre, kopien)
If CheckBox23 Then
anzt = Sheets("plan").[e1]
If Not formtab Then
formtab = True
Application.EnableEvents = False
Set lt = Sheets("ligatabelle")
lt.[bx2] = 1
lt.[bx21] = 1
lt.[ay1] = 1
lt.Calculate
lt.[by3:cl22].Sort key1:=lt.Cells(3, 77), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
d.[a3:l22].Value = lt.[ca3:cl22].Value
se = "k"
If lt.[ax22] > 0 Then se = "l"
Call ausdruck("druck", Range("a1:" & se & anzt + 2).Address, pre, kopien)
End If
schluss:
If CheckBox34 And Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
Application.ScreenUpdating = False
Sheets("druck").PageSetup.TopMargin = rando
With Sheets("druck")
.Visible = xlVeryHidden
.[em200:em562].EntireRow.Hidden = False
.[em213:em216].EntireRow.Hidden = True
.[em341:em344].EntireRow.Hidden = True
.[a323:a326].EntireRow.Hidden = False
End With
Sheets("html").[a1010:a1119].EntireRow.Hidden = False
Sheets("html").Visible = xlVeryHidden
Application.CutCopyMode = False
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
aw = MsgBox("Alle anstehenden Druckauftr|fffd|ge wurden an den Drucker gesendet", vbOKOnly, "Vorgang beendet")
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm26.Show
End Sub
Private Sub CommandButton2_Click()
If Len(filesavename) = 0 Then
initdat = "tipps_spt" & Sheets("tipps").[i5] & ".htm"
Else
initdat = dateiname
End If
Application.CutCopyMode = False
If Len(initdat) > 4 Then
If Right(initdat, 4) = ".htm" Then
ziel = Application.GetSaveAsFilename(initialfilename:=initdat, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
Else
ziel = Application.GetSaveAsFilename(initialfilename:=initdat, fileFilter:="HTML-Datei (*.htm;*.html), *.htm;*.html", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
Else
ziel = Application.GetSaveAsFilename(initialfilename:=initdat, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
If ziel = False Or Len(ziel) = 0 Then Exit Sub
filesavename = ziel
Label4.Caption = filesavename
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
pfad = Left(filesavename, i)
htmldata(1, 1) = pfad
For i = Len(dateiname) To 1 Step -1
If Mid(dateiname, i, 1) = "." Then
endung = Right(dateiname, Len(dateiname) - i + 1)
datname = Left(dateiname, i - 1)
Exit Sub
End If
Next
End Sub
Private Sub CommandButton3_Click()
Application.CutCopyMode = False
vorlage = Application.GetOpenFilename("Webseiten (*.htm; *.html), *.htm;*.html", , "Zu kopierende HTML-Vorlage angeben")
If vorlage = False Or Len(vorlage) = 0 Then Exit Sub
filetoopen = vorlage
Label5.Caption = filetoopen
For i = Len(filetoopen) To 1 Step -1
If StrComp(Mid(filetoopen, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
vpfad = Left(filetoopen, i)
htmldata(17, 1) = vpfad
htmldata(18, 1) = filetoopen
End Sub
Private Sub CommandButton4_Click()
If Len(filesavename) = 0 Then
aw = MsgBox("Der Name der Zieldatei muss angegeben werden", vbOKOnly, "Fehler")
Exit Sub
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
ActiveWorkbook.DisplayDrawingObjects = xlHide
ThisWorkbook.Sheets(aktuelleseite).Activate
anz = [b6].Value
dat_rang = pfad & "tipprangliste.htm"
If ComboBox5.ListIndex = 1 Then dat_rang = filesavename
dat_ausw = pfad & "auswertung_spt" & [i5] & ".htm"
If ComboBox3.ListIndex = 1 Then dat_ausw = filesavename
dat_q = pfad & "quoten_spt" & [i5] & ".htm"
If CheckBox27.Enabled = True And CheckBox27 Then dat_q = dat_ausw
anzpaar = Sheets("plan").[h2]
Set fs = CreateObject("Scripting.FileSystemObject")
sn = "HTML"
spps = ComboBox2.ListIndex + 1
If ComboBox2.Enabled = False Then spps = 1
maxs = anzpaar * 3 + 9
Set h = Sheets("html")
If ComboBox9.ListIndex = 0 Then
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[i1011], order1:=xlAscending, header:=xlNo
ElseIf ComboBox9.ListIndex = 1 Then
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[g1011], order1:=xlAscending, Key2:=h.[h1011], Order2:=xlDescending, header:=xlNo
Else
h.Range("b1011:aq" & 1010 + anz).Sort key1:=h.[e1011], order1:=xlAscending, Key2:=h.[f1011], Order2:=xlDescending, header:=xlNo
End If
h.[b86] = ComboBox9.ListIndex
h.Range("a1:aq1").EntireColumn.Hidden = False
h.Range("a1006:a1111").EntireRow.Hidden = False
h.Range(h.Cells(1, maxs + 1), h.Cells(1, 40)).EntireColumn.Hidden = True
Sheets("html").[b59] = 2
h.[b39:b58].Value = htmldata
Sheets("html").Visible = True
For i = 1 To anzdat
neu = False
If anzdat = 1 Then
fsn = filesavename
Else
fsn = pfad & datname & "_" & i & endung
End If
If Len(filetoopen) > 0 Then
neu = False
fs.CopyFile filetoopen, fsn, True
Else
neu = True
If Dir(fsn) <> "" And Not CheckBox4 Then
Application.ScreenUpdating = True
aw2 = MsgBox("Die Datei" & Chr(13) & fsn & Chr(13) & "besteht bereits!" & Chr(13) & Chr(13) & "Antworten Sie mit JA, um die bestehende Datei zu |fffd|berschreiben." & Chr(13) & "Mit NEIN werden die neuen Daten an die bestehende Datei angeh|fffd|ngt." & Chr(13) & Chr(13) & "Datei |fffd|berschreiben?", 291, "Sicherheitsabfrage")
Application.ScreenUpdating = False
If aw2 = 6 Then
neu = True
ElseIf aw2 = 7 Then
neu = False
Else
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.CutCopyMode = False
Set fs = Nothing
Exit Sub
End If
End If
End If
Application.ScreenUpdating = False
lza = 0
lze = 0
sp = 5
tagerg = h.[e1011:al1110].Value
If CheckBox13.Enabled = True And CheckBox13.Value = True And anz > 0 And CheckBox12.Value = True Then
h.Cells(1001, sp) = "Tagesauswertung"
link1 = pfad & "auswertung_spt" & [i5] & ".htm"
Sheets("HTML").Hyperlinks.Add Anchor:=h.Cells(1001, sp), Address:=link1
lza = 1001
lze = 1001
sp = 9
End If
If CheckBox6.Enabled = True And CheckBox6.Value = True And CheckBox5.Value = True And anz > 0 Then
h.Cells(1001, sp) = "Rangliste"
link1 = pfad & "tipprangliste.htm"
Sheets("HTML").Hyperlinks.Add Anchor:=h.Cells(1001, sp), Address:=link1
If sp = 5 Then
sp = 9
ElseIf sp = 9 Then
sp = 10
End If
lza = 1001
lze = 1001
End If
If CheckBox9.Enabled = True And CheckBox9.Value = True And CheckBox8.Value = True Then
h.Cells(1001, sp) = "Ligatabelle"
link1 = pfad & "ligatabelle.htm"
Sheets("HTML").Hyperlinks.Add Anchor:=h.Cells(1001, sp), Address:=link1
lza = 1001
lze = 1001
End If
If CheckBox3.Enabled = True And CheckBox3.Value = True Then
If lza = 0 Then lza = 1002
lze = 1002
h.[e1002] = "Vorherige"
h.[i1002] = "N|fffd|chste"
If i = 1 Then
link1 = pfad & datname & "_" & anzdat & endung
link2 = pfad & datname & "_2" & endung
ElseIf i = anzdat Then
link1 = pfad & datname & "_" & i - 1 & endung
link2 = pfad & datname & "_1" & endung
Else
link1 = pfad & datname & "_" & i - 1 & endung
link2 = pfad & datname & "_" & i + 1 & endung
End If
Sheets("HTML").Hyperlinks.Add Anchor:=h.Cells(1002, 5), Address:=link1
Sheets("HTML").Hyperlinks.Add Anchor:=h.Cells(1002, 9), Address:=link2
End If
If lza > 0 Then
ber = Range(Cells(lza, 5), Cells(lze, maxs)).Address
Sheets("html").Calculate
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
End If
h.[e1001:n1002].ClearContents
If CheckBox10 And OptionButton3.Value = True Then
ber = Range(Cells(1116, 5), Cells(1119, maxs)).Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
End If
za = (i - 1) * spps + 1011
ze = za + spps - 1
If ze > anz + 1010 Then ze = anz + 1010
ze2 = 1010 + spps
If i = anzdat And anzdat > 1 And anz Mod spps <> 0 Then ze2 = 1010 + anz Mod spps
h.Range(h.Cells(1011, 5), h.Cells(ze2, maxs)).Value = h.Range(h.Cells(za, 5), h.Cells(ze, maxs)).Value
ber = Range(Cells(1006, 5), Cells(ze2, maxs)).Address
Sheets("html").Calculate
Call htmlexport(sn, ber, fsn, neu, True)
If CheckBox10 And OptionButton4.Value = True Then
ber = Range(Cells(1116, 5), Cells(1119, maxs)).Address
Call htmlexport(sn, ber, fsn, False, True)
neu = False
End If
If anz > 0 And (Not CheckBox12 Or (CheckBox12 And ComboBox3.ListIndex = 0)) And (Not CheckBox5 Or (CheckBox5 And ComboBox5.ListIndex = 0)) Then
ber = Range(Cells(1112, 5), Cells(1112, maxs)).Address
Call htmlexport(sn, ber, fsn, False, True)
End If
Next
h.[e1011:al1110].Value = tagerg
If CheckBox8 Then
Set lt = Sheets("ligatabelle")
lt.[bx2] = 1
lt.[bx21] = 1
lt.[ay1] = 1
lt.Calculate
lt.[by3:cl22].Sort key1:=lt.Cells(3, 77), order1:=xlAscending, header:=xlNo, MatchCase:=False
lt.Calculate
sn = "Ligatabelle"
anzt = Sheets("plan").[e1]
fsn = pfad & "ligatabelle.htm"
If Len(filetoopen) > 0 Then
neu = False
fs.CopyFile filetoopen, fsn, True
Else
neu = True
End If
ber = Range("Ca1:cl" & 2 + anzt).Address
If Sheets("ligatabelle").[ax22] = 0 Then ber = Range("Ca1:ck" & 2 + anzt).Address
Sheets("ligatabelle").Visible = True
Call htmlexport(sn, ber, fsn, neu, True)
Sheets("ligatabelle").Visible = xlVeryHidden
End If
If CheckBox12 And anz > 0 Then
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[ft21] = [i5]
[dh117] = [i5]
[df119:ec119].AutoFill Destination:=[df119:ec219]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[dh120:dv219].Value = [dh120:dv219].Value
Range("df120:dv" & 119 + [b6]).Sort key1:=[dh120], order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).Calculate
[dj120:dj219].Value = [dg120:dg219].Value
[em121:ey220].Value = [dj120:dv219].Value
[em121:em220].Value = [dg120:dg219].Value
[em1:ey1].EntireColumn.Hidden = False
Sheets(aktuelleseite).Calculate
sn = "Tipps"
fsn = dat_ausw
If Len(filetoopen) > 0 And fsn <> filesavename Then
neu = False
fs.CopyFile filetoopen, fsn, True
ElseIf fsn <> filesavename Then
neu = True
Else
neu = False
End If
If CheckBox10 And OptionButton3.Value = True And ComboBox3.ListIndex = 0 Then
ber = Range("em223:ey226").Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
End If
If CheckBox14 And CheckBox15 And CheckBox15.Enabled = True Then
link2 = pfad & "quoten_spt" & [i5] & ".htm"
Sheets("tipps").Hyperlinks.Add Anchor:=[en228], Address:=link2
ber = Range("em228:ey228").Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
End If
anz = [b6]
ber = Range("em118:ey" & 120 + anz).Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
If CheckBox10 And OptionButton4.Value = True And ComboBox3.ListIndex = 0 Then
ber = Range("em223:ey227").Address
Call htmlexport(sn, ber, fsn, False, True)
End If
[em1:ey1].EntireColumn.Hidden = True
If CheckBox14 Then
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
[ft21] = [i5]
[dh117] = [i5]
ppspt = [fr21]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[fc1:fp1].EntireColumn.Hidden = False
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = True
sn = "Tipps"
fsn = dat_q
If Len(filetoopen) > 0 And dat_q <> filetoopen And dat_q <> dat_ausw Then
neu = False
fs.CopyFile filetoopen, fsn, True
ElseIf dat_q <> filetoopen And dat_q <> dat_ausw Then
neu = True
Else
neu = False
End If
ber = Range("fc100:fp" & 101 + ppspt).Address
Call htmlexport(sn, ber, fsn, neu, True)
ber = Range("fc118:fp" & 120 + [b6]).Address
Call htmlexport(sn, ber, fsn, False, True)
ber = Range("fc223:fp225").Address
Call htmlexport(sn, ber, fsn, False, True)
[fq23:gs31].Clear
[fb122:fq220].Clear
[fc1:fp1].EntireColumn.Hidden = True
Range(Cells(102 + ppspt, 1), Cells(112, 1)).EntireRow.Hidden = False
End If
[dg120:ec219].Clear
End If
If CheckBox5 And anz > 0 Then
sn = "data"
Set d = Sheets("data")
d.[bc7068] = 1
d.[ak7067:ba7067].Copy
d.[ak7067:ba7166].PasteSpecial Paste:=xlPasteFormulas
d.Calculate
v = 35
d.Range("aj7067:bb" & 7166).Sort key1:=d.Cells(7067, v + 3), order1:=xlAscending, Key2:=d.Cells(7067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
d.Calculate
fsn = dat_rang
If Len(filetoopen) > 0 And fsn <> filesavename Then
neu = False
fs.CopyFile filetoopen, fsn, True
ElseIf fsn <> filesavename Then
neu = True
Else
neu = False
End If
Sheets("data").Visible = True
If CheckBox10 And OptionButton3.Value = True And ComboBox5.ListIndex = 0 Then
ber = Range("am7168:ba7171").Address
Call htmlexport(sn, ber, fsn, neu, True)
neu = False
End If
anz = [b6]
ber = Range("am7064:ba" & 7066 + anz).Address
Call htmlexport(sn, ber, fsn, neu, True)
If CheckBox10 And OptionButton4.Value = True And ComboBox5.ListIndex = 0 Then
ber = Range("am7168:ba7171").Address
Call htmlexport(sn, ber, fsn, False, True)
neu = False
End If
ber = Range("am7172:ba7172").Address
Call htmlexport(sn, ber, fsn, False, True)
Sheets("data").Visible = xlVeryHidden
d.[ak7068:ba7166].ClearContents
End If
Sheets("html").Visible = xlVeryHidden
ActiveWorkbook.DisplayDrawingObjects = xlAll
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("HTML-Datei erfolgreich erstellt", vbOKOnly, "Vorgang beendet")
Set fs = Nothing
End Sub
Private Sub CommandButton5_Click()
For i = 1 To 8
If Controls("cbw" & i).Value = True Then j = j + 1
Next
If j = 0 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
Sheets("html").[b59] = 3
For i = 1 To 8
Sheets("html").Cells(58 + i, 4) = Controls("cbw" & i).Value
Next
Set td = ActiveWorkbook
Application.Workbooks.Add
Set nwb = ActiveWorkbook
For i = 2 To Application.SheetsInNewWorkbook
nwb.Sheets(2).Delete
Next
Set nwbs = ActiveWorkbook.Sheets(1)
anzws = Application.SheetsInNewWorkbook
td.Activate
anzs = [b6]
anzt = Sheets("plan").[e1]
anzp = Sheets("plan").[h2]
ergv = Range("fd9:fe" & 8 + anzp).Value
ergh = Range(Cells(8, 10), Cells(9, anzp * 3 + 9)).Value
If cbw1 Then
sa = 5
If Not cbw3 Then sa = 7
se = anzp * 3 + 9
ber = Range(Cells(10, sa), Cells(10 + anzs, se)).Address
dat = Sheets("tipps").Range(ber).Value
nwbs.Range(ber).Value = dat
For i = 1 To se
nwbs.Cells(1, i).ColumnWidth = Sheets("tipps").Cells(1, i).ColumnWidth
Next
End If
If cbw2 Then
ber = Range(Cells(1006, 9), Cells(1009, se)).Address
dat = Sheets("html").Range(ber).Value
With nwbs
.Range(.Cells(6, 9), .Cells(9, se)).Value = dat
.Range(.Cells(8, 10), .Cells(9, se)).Clear
.Range(.Cells(9, 10), .Cells(9, se)).NumberFormat = "@"
.Range(.Cells(8, 10), .Cells(9, se)).Value = ergh
End With
End If
If cwb1 Or cbw3 Then
nwbs.Name = "Tipps"
nwb.Worksheets.Add after:=Sheets(1)
Set nwbs = nwb.Sheets(nwb.Sheets.Count)
End If
Application.Calculation = xlCalculationManual
Set d = Sheets("druck")
If (cbw4 Or cbw5) And Not formaus Then
formaus = True
[fq22:gs22].AutoFill Destination:=[fq22:gs31]
[ft21] = [i5]
[dh117] = [i5]
[df119:ec119].AutoFill Destination:=[df119:ec219]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[dh120:dv219].Value = [dh120:dv219].Value
Range("df120:dv" & 119 + [b6]).Sort key1:=[dh120], order1:=xlAscending, header:=xlNo, MatchCase:=False
Sheets(aktuelleseite).Calculate
[dj120:dj219].Value = [dg120:dg219].Value
[em121:ey220].Value = [dj120:dv219].Value
d.[en200:ep211].Value = [em100:eo111].Value
d.[em218:ey320].Value = [em118:ey220].Value
End If
If cbw6 And Not formq Then
formq = True
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
d.[em328:ez448].Value = [fc100:fp220].Value
[fb122:fq220].Clear
End If
[fq23:gs31].ClearContents
[df120:ec219].ClearContents
If cbw7 And Not formrang Then
formrang = True
Sheets("data").[a7173] = 0
Sheets("data").[a7177] = 0
Sheets("zusatztipps").[c209] = 1
Sheets("zusatztipps").[c218] = 1
Application.Calculation = xlCalculationAutomatic
Application.Calculation = xlCalculationManual
Set zt = Sheets("zusatztipps")
Set da = Sheets("data")
Set d = Sheets("druck")
da.[bc7068] = 1
da.[bc7070] = 1
da.[ak7067:ba7067].Copy
da.[ak7067:ba7166].PasteSpecial Paste:=xlPasteFormulas
da.Calculate
v = 35
da.Range("aj7067:bb" & 7166).Sort key1:=da.Cells(7067, v + 3), order1:=xlAscending, Key2:=da.Cells(7067, v + 19), Order2:=xlAscending, header:=xlNo, MatchCase:=False
d.[em454:fa556].Value = da.[am7064:ba7166].Value
da.[ak7068:ba7155].ClearContents
End If
If cbw8 And Not formtab Then
formtab = True
Set lt = Sheets("ligatabelle")
lt.[bx2] = 1
lt.[bx21] = 1
lt.[ay1] = 1
lt.Calculate
lt.[by3:cl22].Sort key1:=lt.Cells(3, 77), order1:=xlAscending, header:=xlNo, MatchCase:=False
lt.Calculate
d.[a3:l22].Value = lt.[ca3:cl22].Value
End If
Application.Calculation = xlCalculationAutomatic
If cbw5 Or cbw5 Or cbw7 Then
za = 1
For i = 1 To 15
nwbs.Cells(1, i).ColumnWidth = d.Cells(1, 142 + i).ColumnWidth
Next
If cbw5 Then
dat = d.Range("em200:ep" & 201 + anzp).Value
With nwbs
.Range(.Cells(za, 1), .Cells(za + anzp + 1, 4)).Value = dat
.Range(.Cells(za + 2, 3), .Cells(za + anzp + 1, 4)).Clear
.Range(.Cells(za + 2, 3), .Cells(za + anzp + 1, 4)).Value = ergv
End With
za = anzp + 4
End If
If cbw4 Then
dat = d.Range("em218:ey" & 220 + anzs).Value
With nwbs
.Range(.Cells(za, 1), .Cells(za + anzs + 2, 13)).Value = dat
End With
za = za + anzs + 4
nwbs.Range("a" & za & ":h" & za + 3).Value = d.[em559:et562].Value
za = za + 5
End If
If cbw6 Then
With nwbs
dat = d.Range("em328:ey" & 329 + anzp).Value
.Range(.Cells(za, 1), .Cells(za + anzp + 1, 13)).Value = dat
.Range(.Cells(za + 2, 3), .Cells(za + anzp + 1, 4)).Clear
.Range(.Cells(za + 2, 3), .Cells(za + anzp + 1, 4)).Value = ergv
za = za + anzp + 3
dat = d.Range("em346:ez" & 348 + anzs).Value
.Range(.Cells(za, 1), .Cells(za + anzs + 2, 14)).Value = dat
End With
za = za + anzs + 4
nwbs.Range("a" & za & ":a" & za + 1).Value = d.[em451:em452].Value
End If
nwbs.Name = "Tagesauswertung"
nwb.Worksheets.Add after:=Sheets(nwb.Sheets.Count)
Set nwbs = nwb.Sheets(nwb.Sheets.Count)
End If
If cbw7 Then
For i = 1 To 15
nwbs.Cells(1, i).ColumnWidth = d.Cells(1, 142 + i).ColumnWidth
Next
dat = d.Range("em454:fa" & 456 + anzs).Value
nwbs.Range("a1:o" & anzs + 3).Value = dat
za = anzs + 5
nwbs.Range("a" & za & ":h" & za + 3).Value = d.[em559:et562].Value
nwbs.Name = "Rangliste"
nwb.Worksheets.Add after:=Sheets(nwb.Sheets.Count)
Set nwbs = nwb.Sheets(nwb.Sheets.Count)
End If
If cbw8 Then
nwbs.Name = "Ligatabelle"
dat = d.Range("a1:l" & 2 + anzt).Value
nwbs.Range("a1:l" & 2 + anzt).Value = dat
For i = 1 To 12
nwbs.Cells(1, i).ColumnWidth = d.Cells(1, i).ColumnWidth
Next
End If
nwb.Sheets(1).Activate
td.Activate
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("Die Daten wurden in die Arbeitsmappe " & nwb.Name & " kopiert.", vbOKOnly, "Vorgang beendet")
End Sub
Private Sub Image1_Click()
Label5.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
htmldata(17, 1) = Null
htmldata(18, 1) = Null
End Sub
Private Sub Image2_Click()
txt = "Beim Erstellen einer neuen HTML-Seite oder beim |fffd|berschreiben einer bestehenden Seite wird der zu ver|fffd|ffentlichende Inhalt lediglich auf einen wei|fffd|en Hintergrund gesetzt." & Chr(13) & Chr(13) & "Beim Verwenden einer Vorlage wird zun|fffd|chst eine Kopie der Vorlage unter dem Namen der Zieldatei gespeichert. Eine bereits bestehende Zieldatei wird dabei |fffd|berschrieben. Die neuen Daten werden dann an die nun mit der Vorlage identischen Zieldatei angeh|fffd|ngt." & " Inhalte und Formate (z.B. Hintergrundfarbe, |fffd|berschriften, Links ...) der Datei bleiben dabei erhalten" & Chr(13) & Chr(13) & "Falls beim Arbeiten OHNE Vorlage die Zieldatei bereits besteht, kann entschieden werden, ob die neuen Inhalte an die bestehende Datei angeh|fffd|ngt werden sollen (Inhalte und Formate bleiben erhalten) oder ob die Datei |fffd|berschrieben werden soll (es entsteht eine neue HTML-Seite mit wei|fffd|em Hintergrund, die nur die aktuellen Daten enth|fffd|lt)."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub Image3_Click()
txt = "Mit dieser Option wird vor dem Druck eine Vorschau des n|fffd|chsten Ausdruckes gezeigt."
txt = txt & " Der endg|fffd|ltige Druck wird erst |fffd|ber die Schaltfl|fffd|che 'Drucken' in der Vorschau gestartet. "
txt = txt & Chr(13) & "Diese Verz|fffd|gerung erm|fffd|glicht es zum einen, bereits bedruckte Seiten erneut einzulegen, um somit Papier zu sparen."
txt = txt & " Zudem k|fffd|nnen Sie vor dem Ausdruck die Seitenr|fffd|nder |fffd|ndern (|fffd|ber LAYOUT - Registerblatt SEITENR|fffd|NDER)"
txt = txt & " und hierdurch - z.B. durch Angabe eines entsprechend gro|fffd|en OBEREN RANDES - die neu zu druckenden Daten unterhalb von bereits bedruckten Bereichen ausgeben lassen."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub OptionButton1_Click()
If OptionButton1 Then
Label1.Visible = False
Label10.Visible = True
CheckBox1.Enabled = False
CheckBox24.Enabled = True
CheckBox24.Value = druckdata(6, 1)
ComboBox8.Visible = False
Else
Label10.Visible = False
Label1.Visible = True
CheckBox1.Enabled = True
CheckBox24.Enabled = False
CheckBox24.Value = False
ComboBox8.Visible = True
If [b6] < 51 Then CheckBox1.Enabled = False
End If
druckdata(2, 1) = OptionButton1.Value
End Sub
Private Sub OptionButton2_Click()
If OptionButton1 Then
Label1.Visible = False
Label10.Visible = True
CheckBox24.Enabled = True
CheckBox24.Value = druckdata(6, 1)
ComboBox8.Visible = False
Else
Label10.Visible = False
Label1.Visible = True
CheckBox1.Enabled = True
CheckBox24.Enabled = False
CheckBox24.Value = False
ComboBox8.Visible = True
If [b6] < 51 Then CheckBox1.Enabled = False
End If
druckdata(2, 1) = OptionButton1.Value
End Sub
Private Sub OptionButton3_Click()
htmldata(4, 1) = OptionButton3.Value
End Sub
Private Sub OptionButton4_Click()
htmldata(4, 1) = OptionButton3.Value
End Sub
Private Sub OptionButton5_Click()
If OptionButton5 Then
Frame1.Visible = True
Frame2.Visible = False
Frame5.Visible = False
ElseIf OptionButton6 Then
Frame2.Visible = True
Frame1.Visible = False
Frame5.Visible = False
Else
Frame2.Visible = False
Frame1.Visible = False
Frame5.Visible = True
End If
End Sub
Private Sub OptionButton6_Click()
If OptionButton5 Then
Frame1.Visible = True
Frame2.Visible = False
Frame5.Visible = False
ElseIf OptionButton6 Then
Frame2.Visible = True
Frame1.Visible = False
Frame5.Visible = False
Else
Frame2.Visible = False
Frame1.Visible = False
Frame5.Visible = True
End If
End Sub
Private Sub OptionButton7_Click()
If OptionButton5 Then
Frame1.Visible = True
Frame2.Visible = False
Frame5.Visible = False
ElseIf OptionButton6 Then
Frame2.Visible = True
Frame1.Visible = False
Frame5.Visible = False
Else
Frame2.Visible = False
Frame1.Visible = False
Frame5.Visible = True
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
Application.ScreenUpdating = False
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
If Sheets("html").[b59] = 1 Then
OptionButton5.Value = True
ElseIf Sheets("html").[b59] = 2 Then
OptionButton6.Value = True
Else
OptionButton7.Value = True
End If
If Left(Application.Version, 1) = "8" Then
OptionButton6.Enabled = False
If OptionButton6 Then OptionButton5.Value = True
End If
Set h = Sheets("html")
htmldata = h.[b39:b58].Value
druckdata = h.[b59:b76].Value
If Len(UserForm26.Tag) > 0 Then
filetoopen = UserForm26.Tag
vpfad = Sheets("html").[b55]
Label5.Caption = filetoopen
Else
Label5.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End If
ComboBox3.RowSource = "html!a24:a25"
ComboBox5.RowSource = "html!a24:a25"
ComboBox7.RowSource = "html!a80:a83"
ComboBox8.RowSource = "html!as1011:as1013"
ComboBox8.ListIndex = h.[b87]
ComboBox9.RowSource = "html!as1011:as1013"
ComboBox9.ListIndex = h.[b86]
If Len(htmldata(2, 1)) = 0 Then
ComboBox2.ListIndex = 0
ElseIf htmldata(2, 1) < [b6] Then
ComboBox2.ListIndex = htmldata(2, 1)
ElseIf [b6] = 0 Then
ComboBox2.ListIndex = 0
Else
ComboBox2.ListIndex = [b6] - 1
End If
CheckBox10.Value = htmldata(3, 1)
OptionButton3.Value = htmldata(4, 1)
CheckBox8.Value = htmldata(6, 1)
CheckBox9.Value = htmldata(7, 1)
CheckBox12.Value = htmldata(8, 1)
CheckBox13.Value = htmldata(9, 1)
ComboBox3.ListIndex = htmldata(10, 1)
CheckBox14.Value = htmldata(11, 1)
CheckBox15.Value = htmldata(12, 1)
CheckBox27.Value = htmldata(13, 1)
CheckBox5.Value = htmldata(14, 1)
CheckBox6.Value = htmldata(15, 1)
ComboBox5.ListIndex = htmldata(16, 1)
CheckBox4.Value = htmldata(19, 1)
CheckBox3.Value = htmldata(20, 1)
If druckdata(2, 1) Then
OptionButton1.Value = True
Else
OptionButton2.Value = True
End If
ComboBox1.ListIndex = druckdata(3, 1)
CheckBox1.Value = druckdata(4, 1)
CheckBox11.Value = druckdata(5, 1)
CheckBox24.Value = druckdata(6, 1)
ComboBox6.ListIndex = druckdata(7, 1)
CheckBox23.Value = druckdata(8, 1)
CheckBox17.Value = druckdata(9, 1)
CheckBox32.Value = druckdata(10, 1)
CheckBox29.Value = druckdata(11, 1)
CheckBox21.Value = druckdata(12, 1)
CheckBox26.Value = druckdata(13, 1)
CheckBox30.Value = druckdata(14, 1)
ComboBox7.ListIndex = druckdata(15, 1)
CheckBox18.Value = druckdata(16, 1)
CheckBox34.Value = druckdata(17, 1)
CheckBox36.Value = druckdata(18, 1)
For i = 1 To 8
Controls("cbw" & i).Value = Sheets("html").Cells(58 + i, 4).Value
Next
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm27"
Attribute VB_Base = "0{DED76423-148D-4CBC-8879-38156C48FF64}{AE4A647B-2D81-4CB4-9A17-C85DA256CC45}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim seiten, first, einst, overwrite, oldpath, filetoopen, filesavename, fileinit, datname, dateiname, pfad, endung, anzdat
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
anz = Sheets("tipps").[b6]
anzdat = Int(anz / (ComboBox2.ListIndex + 1))
If anz Mod (ComboBox2.ListIndex + 1) <> 0 Then anzdat = anzdat + 1
If anzdat = 1 Then
Label10.Caption = "Es entsteht 1 HTML-Seite"
CheckBox2.Enabled = False
Label7.Visible = False
Else
Label10.Caption = "Es entstehen " & anzdat & " HTML-Seiten"
CheckBox2.Enabled = True
Label7.Visible = True
End If
On Error Resume Next
CommandButton5.SetFocus
End Sub
Private Sub CommandButton1_Click()
anz = Sheets("tipps").[b6]
Set z = Sheets("zusatztipps")
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
z.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
anzzt = z.[o169]
If anzzt = 0 Then anzzt = 6
ze = anzzt * 7 + 5
z.[hh7] = CheckBox1.Value
z.[hi7] = ComboBox1.ListIndex
If CheckBox1.Value = True And seiten > 1 Then
For i = 1 To seiten Step 2
sa = (i - 1) * 12 + 5
se = sa + 11
If i > 1 Then z.Range(z.Cells(1, 5), z.Cells(1, sa - 1)).EntireColumn.Hidden = True
z.[d5] = Format(Now(), "dd.mm.yyyy") & " - Seite " & i & " von " & seiten
z.Range(z.Cells(1, 1), z.Cells(ze, se)).PrintOut copies:=ComboBox1.ListIndex + 1
Next
Application.ScreenUpdating = True
aw = MsgBox("Es werden nun die Vorderseiten gedruckt. Wenn der Druck-Vorgang beendet ist, legen sie die Bl|fffd|tter erneut in den Drucker, um die R|fffd|ckseiten zu bedrucken." & Chr(13) & Chr(13) & "Starten Sie anschlie|fffd|end den Druck der R|fffd|ckseiten |fffd|ber die JA-Schaltfl|fffd|che." & " Dr|fffd|cken Sie die JA-Schaltfl|fffd|che NICHT, bevor das Papier wieder in den Drucker gelegt wurde! Mit NEIN wird der Vorgang abgebrochen." & Chr(13) & Chr(13) & "Drucken der R|fffd|ckseiten (beginnend mit Seite 2) starten?", vbYesNo, "Beidseitiger Druck")
If aw = 6 Then
Application.ScreenUpdating = False
z.Range(z.Cells(1, 4), z.Cells(1, anz * 2 + 4)).EntireColumn.Hidden = False
For i = 2 To seiten Step 2
sa = (i - 1) * 12 + 5
se = sa + 11
If i > 1 Then z.Range(z.Cells(1, 5), z.Cells(1, sa - 1)).EntireColumn.Hidden = True
z.[d5] = Format(Now(), "dd.mm.yyyy") & " - Seite " & i & " von " & seiten
z.Range(z.Cells(1, 1), z.Cells(ze, se)).PrintOut copies:=ComboBox1.ListIndex + 1
Next
End If
Else
For i = 1 To seiten
sa = (i - 1) * 8 + 5
se = sa + 11
If i > 1 Then z.Range(z.Cells(1, 5), z.Cells(1, sa - 1)).EntireColumn.Hidden = True
z.[d5] = Format(Now(), "dd.mm.yyyy") & " - Seite " & i & " von " & seiten
z.Range(z.Cells(1, 1), z.Cells(ze, se)).PrintOut copies:=ComboBox1.ListIndex + 1
Next
End If
z.[d5].ClearContents
z.Range(z.Cells(1, 4), z.Cells(1, anz * 2 + 4)).EntireColumn.Hidden = False
z.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton2_Click()
asn = fileinit
If Len(filesavename) <> 0 Then asn = dateiname
Application.CutCopyMode = False
If Len(asn) > 4 Then
If Right(asn, 4) = ".htm" Then
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
Else
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.htm;*.html), *.htm;*.html", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
Else
ziel = Application.GetSaveAsFilename(initialfilename:=asn, fileFilter:="HTML-Datei (*.html;*.htm), *.html;*.htm", Title:="Namen der zu erstellenden HTML-Datei angeben")
End If
If ziel = False Or Len(ziel) = 0 Then Exit Sub
filesavename = ziel
Label3.Caption = filesavename
For i = Len(ziel) To 1 Step -1
If StrComp(Mid(ziel, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
dateiname = Mid(ziel, i + 1, Len(ziel) - i)
pfad = Left(filesavename, i)
For i = Len(dateiname) To 1 Step -1
If Mid(dateiname, i, 1) = "." Then
endung = Right(dateiname, Len(dateiname) - i + 1)
datname = Left(dateiname, i - 1)
einst(1, 2) = dateiname
einst(1, 3) = pfad
Exit Sub
End If
Next
End Sub
Private Sub CommandButton4_Click()
Application.CutCopyMode = False
vorlage = Application.GetOpenFilename("Webseiten (*.htm; *.html), *.htm;*.html", , "Zu kopierende HTML-Vorlage angeben")
If vorlage = False Then Exit Sub
If Len(vorlage) = 0 Then Exit Sub
overwite = True
filetoopen = vorlage
Label4.Caption = filetoopen
End Sub
Private Sub CommandButton5_Click()
If Len(filesavename) = 0 Then
aw = MsgBox("Der Name der Zieldatei muss angegeben werden", vbOKOnly, "Fehler")
Exit Sub
End If
On Error GoTo 0
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
anz = Sheets("tipps").[b6]
Set h = Sheets("html2")
Set z = Sheets("zusatztipps")
z.Unprotect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
If Len(filetoopen) > 0 Then
z.[hd7] = filetoopen
Else
z.[hd7].ClearContents
End If
z.[he7] = dateiname
z.[hf7] = pfad
If ComboBox2.Enabled = True Then z.[hg7] = ComboBox2.ListIndex
z.[hj7] = CheckBox2.Value
z.[hk7] = CheckBox3.Value
h.[d5:d47].Value = z.[d5:d47].Value
Set fs = CreateObject("Scripting.FileSystemObject")
sn = "html2"
If anz > 0 Then
spps = ComboBox2.ListIndex + 1
Else
spps = 1
End If
ActiveWorkbook.DisplayDrawingObjects = xlHide
For i = 1 To anzdat
neu = False
If anzdat = 1 Then
fsn = filesavename
Else
fsn = pfad & datname & "_" & i & endung
End If
If Len(filetoopen) > 0 Then
neu = False
fs.CopyFile filetoopen, fsn, True
Else
neu = True
If Dir(fsn) <> "" And Not CheckBox4 Then
Application.ScreenUpdating = True
aw2 = MsgBox("Die Datei" & Chr(13) & fsn & Chr(13) & "besteht bereits!" & Chr(13) & Chr(13) & "Antworten Sie mit JA, um die bestehende Datei zu |fffd|berschreiben." & Chr(13) & "Mit NEIN werden die neuen Daten an die bestehende Datei angeh|fffd|ngt." & Chr(13) & Chr(13) & "Datei |fffd|berschreiben?", 291, "Sicherheitsabfrage")
Application.ScreenUpdating = False
If aw2 = 6 Then
neu = True
ElseIf aw2 = 7 Then
neu = False
Else
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
z.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
Exit Sub
End If
End If
End If
Application.ScreenUpdating = False
h.Visible = True
If CheckBox2.Enabled = True And CheckBox2.Value = True Then
z.[hd1:he1].EntireColumn.Hidden = False
z.[hd9] = "Vorherige"
z.[he9] = "N|fffd|chste"
If i = 1 Then
link1 = pfad & datname & "_" & anzdat & endung
link2 = pfad & datname & "_2" & endung
ElseIf i = anzdat Then
link1 = pfad & datname & "_" & i - 1 & endung
link2 = pfad & datname & "_1" & endung
Else
link1 = pfad & datname & "_" & i - 1 & endung
link2 = pfad & datname & "_" & i + 1 & endung
End If
Sheets("zusatztipps").Hyperlinks.Add Anchor:=z.[hd9], Address:=link1
Sheets("zusatztipps").Hyperlinks.Add Anchor:=z.[he9], Address:=link2
ber = [hd9:he9].Address
Sheets("zusatztipps").Calculate
Call htmlexport("zusatztipps", ber, fsn, neu, True)
neu = False
End If
sa = (i - 1) * spps * 2 + 5
se1 = sa + spps * 2 - 1
If se1 > anz * 2 + 4 Then se1 = anz * 2 + 4
se2 = spps * 2 + 4
If i = anzdat And anzdat > 1 And anz Mod spps <> 0 Then se2 = (anz Mod spps) * 2 + 4
h.Range(h.Cells(5, 5), h.Cells(47, se2)).Value = z.Range(z.Cells(5, sa), z.Cells(47, se1)).Value
anzzt = z.[o169]
If anzzt = 0 Then anzzt = 6
ze = anzzt * 7 + 5
ber = Range(Cells(1, 4), Cells(ze, se2)).Address
Call htmlexport(sn, ber, fsn, neu, True)
Next
z.[hd9:he9].ClearContents
z.[hd1:he1].EntireColumn.Hidden = True
z.Range(z.Cells(1, 4), z.Cells(1, anz * 2 + 4)).EntireColumn.Hidden = False
h.Visible = xlVeryHidden
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
aw = MsgBox("HTML-Datei erfolgreich erstellt", vbOKOnly, "Vorgang beendet")
Set fs = Nothing
ActiveWorkbook.DisplayDrawingObjects = xlAll
z.Protect ("dTigusenew-anmiwTadW-W-W_TG2000-2001")
End Sub
Private Sub Image1_Click()
Label4.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End Sub
Private Sub Image2_Click()
txt = "Beim Erstellen einer neuen HTML-Seite oder beim |fffd|berschreiben einer bestehenden Seite wird der zu ver|fffd|ffentlichende Inhalt lediglich auf einen wei|fffd|en Hintergrund gesetzt." & Chr(13) & Chr(13) & "Beim Verwenden einer Vorlage wird zun|fffd|chst eine Kopie der Vorlage unter dem Namen der Zieldatei gespeichert. Eine bereits bestehende Zieldatei wird dabei |fffd|berschrieben. Die neuen Daten werden dann an die nun mit der Vorlage identischen Zieldatei angeh|fffd|ngt." & " Inhalte und Formate (z.B. Hintergrundfarbe, |fffd|berschriften, Links ...) der Datei bleiben dabei erhalten" & Chr(13) & Chr(13) & "Falls beim Arbeiten OHNE Vorlage die Zieldatei bereits besteht, kann entschieden werden, ob die neuen Inhalte an die bestehene Datei angeh|fffd|ngt werden sollen (Inhalte und Formate bleiben erhalten) oder ob die Datei |fffd|berschrieben werden soll (es entsteht eine neue HTML-Seite mit wei|fffd|em Hintergrund, die nur die aktuellen Daten enth|fffd|lt)."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Application.ScreenUpdating = False
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Set z = Sheets("zusatztipps")
einst = z.[hd7:hj7].Value
anz = Sheets("tipps").[b6]
seiten = Int(anz / 6)
If anz Mod 6 <> 0 Then seiten = seiten + 1
If seiten = 0 Then seiten = 1
If seiten <= 1 Then CheckBox1.Enabled = False
ComboBox1.RowSource = "data!a7067:a7166"
If Left(Application.Version, 1) = "8" Then
Frame2.Enabled = False
Frame2.Caption = "HTML-Erstellung erfordert Excel-Versionen h|fffd|her als Excel 97"
CheckBox1.Value = einst(1, 5)
Else
CheckBox1.Value = einst(1, 5)
newpath = einst(1, 3)
If Len(newpath) > 0 Then
If Dir(newpath & "*.*") <> "" Then
ChDir newpath
If Len(einst(1, 2)) > 0 Then
fileinit = einst(1, 2)
Else
fileinit = "zusatztipps.htm"
End If
Label3.Caption = ""
filesavename = ""
End If
Else
fileinit = "zusatztipps.htm"
End If
If Len(einst(1, 1)) <> 0 Then
If Dir(einst(1, 1)) <> "" Then
Label4.Caption = einst(1, 1)
filetoopen = einst(1, 1)
Else
Label4.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End If
Else
Label4.Caption = "Es wird keine Vorlage verwendet"
filetoopen = ""
End If
End If
ComboBox1.ListIndex = einst(1, 6)
anz = Sheets("tipps").[b6]
working = False
startwert = True
If anz > 0 Then
ComboBox2.RowSource = "data!a7067:a" & 7066 + anz
If Len(einst(1, 4)) = 0 Then
ComboBox2.ListIndex = anz - 1
ElseIf einst(1, 4) < anz Then
ComboBox2.ListIndex = einst(1, 4)
Else
ComboBox2.ListIndex = anz - 1
End If
Else
ComboBox2.Enabled = False
anzdat = 1
Label10.Caption = "Es entsteht 1 HTML-Seite"
End If
CheckBox3.Value = z.[hk7]
CheckBox2.Value = z.[hj7]
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm28"
Attribute VB_Base = "0{51E2EB04-6C0B-4639-8B0B-60D4178D1F83}{A7D8ADCF-7344-4D2A-A1BC-0FB29CE610E9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
UserForm28.Tag = "OK"
UserForm28.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm28.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm29"
Attribute VB_Base = "0{05547179-06B0-45BC-83BD-CFA830E4F869}{F44FC235-6159-402F-8507-63B86B72A89B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim zustipp, first
Private Sub CommandButton1_Click()
UserForm29.Tag = "Cancel"
UserForm29.Hide
End Sub
Private Sub CommandButton2_Click()
Workbooks(UserForm29.Tag).Sheets("ztipps").[a1:a6].Value = zustipp
For i = 1 To 6
Workbooks(UserForm29.Tag).Sheets("ztipps").Cells(i, 2) = Controls("cb" & i).Value
Next
UserForm29.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
zustipp = Workbooks(UserForm29.Tag).Sheets("ztipps").[a1:a6].Value
For i = 1 To 6
zustipp(i, 1) = i
Next
Label40.Caption = UserForm29.Tag
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Private Sub zt2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(2, Data.GetText)
End Sub
Private Sub zt2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(1, Data.GetText)
End Sub
Private Sub zt3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(3, Data.GetText)
End Sub
Private Sub zt4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(4, Data.GetText)
End Sub
Private Sub zt5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(5, Data.GetText)
End Sub
Private Sub zt6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(zt6.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText zt6.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub zt6_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub zt6_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call ztdrop(6, Data.GetText)
End Sub
Sub ztdrop(nr, txt)
For i = 1 To 6
If UserForm29.Controls("zt" & Format(i, "0")).Caption = txt And i <> nr Then
dummy = zustipp(i, 1)
zustipp(i, 1) = zustipp(nr, 1)
zustipp(nr, 1) = dummy
dummyanz = Controls("anz" & Format(i, "0")).Caption
dummytab = Controls("tab" & Format(i, "0")).Caption
dummynam = Controls("nam" & Format(i, "0")).Caption
Controls("anz" & Format(i, "0")).Caption = Controls("anz" & Format(nr, "0")).Caption
Controls("tab" & Format(i, "0")).Caption = Controls("tab" & Format(nr, "0")).Caption
Controls("nam" & Format(i, "0")).Caption = Controls("nam" & Format(nr, "0")).Caption
Controls("anz" & Format(nr, "0")).Caption = dummyanz
Controls("tab" & Format(nr, "0")).Caption = dummytab
Controls("nam" & Format(nr, "0")).Caption = dummynam
dummycb = Controls("cb" & Format(nr, "0")).Value
Controls("cb" & Format(nr, "0")).Value = Controls("cb" & Format(i, "0")).Value
Controls("cb" & Format(i, "0")).Value = dummycb
End If
Next
End Sub
Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{73380DFA-8761-4D4C-8A81-8F059373E719}{672C8D34-521D-4A36-ACB8-045E8A20B751}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Sub droptipp(nr, txt)
UserForm3.Controls("tipp" & Format(nr, "0")).Caption = txt
For i = 1 To 5
If UserForm3.Controls("tipp" & Format(i, "0")).Caption = txt And i <> nr Then
UserForm3.Controls("tipp" & Format(i, "0")).Caption = ""
End If
Next
End Sub
Private Sub CommandButton1_Click()
UserForm3.Tag = "ok"
UserForm3.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm3.Hide
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Then Exit Sub
If Len(ListBox1.Value) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox1.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub tipp1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub tipp1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call droptipp(1, Data.GetText)
End Sub
Private Sub tipp1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
tipp1.Caption = ""
End Sub
Private Sub tipp1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(tipp1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText tipp1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub tipp2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub tipp2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call droptipp(2, Data.GetText)
End Sub
Private Sub tipp2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
tipp2.Caption = ""
End Sub
Private Sub tipp2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(tipp2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText tipp2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub tipp3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub tipp3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call droptipp(3, Data.GetText)
End Sub
Private Sub tipp3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
tipp3.Caption = ""
End Sub
Private Sub tipp3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(tipp3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText tipp3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub tipp4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub tipp4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call droptipp(4, Data.GetText)
End Sub
Private Sub tipp4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
tipp4.Caption = ""
End Sub
Private Sub tipp4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(tipp4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText tipp4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub tipp5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub tipp5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call droptipp(5, Data.GetText)
End Sub
Private Sub tipp5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
tipp5.Caption = ""
End Sub
Private Sub tipp5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(tipp5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText tipp5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm30"
Attribute VB_Base = "0{D35317FB-EADD-44CF-884A-E19BB8CB8617}{4D9E464A-AEA4-41EE-852C-1B0FBC4320FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
Application.CutCopyMode = False
UserForm30.Hide
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm31"
Attribute VB_Base = "0{CEFF542D-5C5F-4027-9CDA-EB910701482D}{F4D47976-0149-4DED-9C4A-308A60BB91B9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, oldzoom, oldvoll
Private Sub CheckBox3_Click()
If CheckBox3 Then
CheckBox1.Enabled = True
Else
CheckBox1.Enabled = False
CheckBox1.Value = False
End If
End Sub
Private Sub CommandButton1_Click()
[g1] = CheckBox2.Value
[n1] = CheckBox1.Value
[n2] = CheckBox3.Value
If CheckBox3 Then
Application.DisplayFullScreen = True
Application.DisplayFormulaBar = False
Application.DisplayStatusBar = False
If CheckBox1 Then
dn = 1
Call calczoom(dn)
ActiveWindow.Zoom = Int(dn * 100)
End If
ElseIf oldvoll <> CheckBox3.Value Then
Application.DisplayFullScreen = False
Application.DisplayFormulaBar = True
Application.DisplayStatusBar = True
End If
UserForm31.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm31.Hide
End Sub
Private Sub Image2_Click()
txt = "Dieses Programm wurde optimiert f|fffd|r eine Aufl|fffd|sung von 1024x768."
txt = txt & Chr(13) & "Falls eine h|fffd|here Aufl|fffd|sung verwendet wird, kann es sein, "
txt = txt & "dass die einzelnen Dialogfenster (Ranglisten, Tabellen usw.) relativ klein dargestelt werden."
txt = txt & Chr(13) & Chr(13) & "Wenn diese Option aktiviert wird, werden die Dialogfenster vergr|fffd||fffd|ert angezeigt."
txt = txt & Chr(13) & "Allerdings kann dies zur Folge haben, dass einzelne Texte und Beschriftungen nicht mehr korrekt"
txt = txt & " dargestellt werden." & Chr(13) & "Das Ergebnis ist abh|fffd|ngig von der eingestellten Aufl|fffd|sung"
txt = txt & " und dem verwendeten Monitor."
txt = txt & Chr(13) & "Sie m|fffd|ssen selbst testen, ob die Funktion f|fffd|r ihre Systemeinstellung sinnvoll ist."
txt = txt & Chr(13) & "Falls Probleme entstehen, m|fffd|ssen Sie die Funktion deaktivieren."
aw = MsgBox(txt, vbOKOnly, "Hinweis zur vergr|fffd||fffd|erten Darstellung von Fenstern")
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
CheckBox1.Value = [n1]
CheckBox2.Value = [g1]
If Len([g1]) = 0 Then CheckBox2.Value = False
CheckBox3.Value = [n2]
oldzoom = CheckBox1.Value
oldvoll = CheckBox3.Value
CheckBox1.Enabled = CheckBox3.Value
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "UserForm4"
Attribute VB_Base = "0{D88C1866-8F93-49E2-851C-1EC74A0304F6}{FA218AED-359E-441C-BBDD-ED32A5D0B6DE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
UserForm4.Tag = "OK"
UserForm4.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm4.Tag = ""
UserForm4.Hide
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Then Exit Sub
If Len(ListBox1.Value) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox1.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropkrit(1, Data.GetText)
End Sub
Private Sub krit1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
krit1.Caption = ""
End Sub
Private Sub krit1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(krit1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropkrit(2, Data.GetText)
End Sub
Private Sub krit2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
krit2.Caption = ""
End Sub
Private Sub krit2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(krit2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropkrit(3, Data.GetText)
End Sub
Private Sub krit3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
krit3.Caption = ""
End Sub
Private Sub krit3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(krit3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropkrit(4, Data.GetText)
End Sub
Private Sub krit4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
krit4.Caption = ""
End Sub
Private Sub krit4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(krit4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub krit5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub krit5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropkrit(5, Data.GetText)
End Sub
Private Sub krit5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
krit5.Caption = ""
End Sub
Private Sub krit5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(krit5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText krit5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Sub dropkrit(nr, txt)
oldtxt = UserForm4.Controls("krit" & Format(nr, "0")).Caption
UserForm4.Controls("krit" & Format(nr, "0")).Caption = txt
For i = 1 To 5
If UserForm4.Controls("krit" & Format(i, "0")).Caption = txt And i <> nr Then
UserForm4.Controls("krit" & Format(i, "0")).Caption = oldtxt
End If
Next
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm5"
Attribute VB_Base = "0{499B3F6E-5868-4BA2-B9E4-78687C320BA4}{11295686-DCEE-4931-ACA3-E9919C3135D3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, atwork As Integer, zuordnung, zusidx, ztliste
Private Sub cb1_1_Click()
Call setkk(1, 1, cb1_1.Value)
End Sub
Private Sub cb1_2_Click()
Call setkk(1, 2, cb1_2.Value)
End Sub
Private Sub cb1_3_Click()
Call setkk(1, 3, cb1_3.Value)
End Sub
Private Sub cb1_4_Click()
Call setkk(1, 4, cb1_4.Value)
End Sub
Private Sub cb1_5_Click()
Call setkk(1, 5, cb1_5.Value)
End Sub
Private Sub cb1_6_Click()
Call setkk(1, 6, cb1_6.Value)
End Sub
Private Sub cb2_1_Click()
Call setkk(2, 1, cb2_1.Value)
End Sub
Private Sub cb2_2_Click()
Call setkk(2, 2, cb2_2.Value)
End Sub
Private Sub cb2_3_Click()
Call setkk(2, 3, cb2_3.Value)
End Sub
Private Sub cb2_4_Click()
Call setkk(2, 4, cb2_4.Value)
End Sub
Private Sub cb2_5_Click()
Call setkk(2, 5, cb2_5.Value)
End Sub
Private Sub cb2_6_Click()
Call setkk(2, 6, cb2_6.Value)
End Sub
Private Sub cb3_1_Click()
Call setkk(3, 1, cb3_1.Value)
End Sub
Private Sub cb3_2_Click()
Call setkk(3, 2, cb3_2.Value)
End Sub
Private Sub cb3_3_Click()
Call setkk(3, 3, cb3_3.Value)
End Sub
Private Sub cb3_4_Click()
Call setkk(3, 4, cb3_4.Value)
End Sub
Private Sub cb3_5_Click()
Call setkk(3, 5, cb3_5.Value)
End Sub
Private Sub cb3_6_Click()
Call setkk(3, 6, cb3_6.Value)
End Sub
Private Sub cb4_1_Click()
Call setkk(4, 1, cb4_1.Value)
End Sub
Private Sub cb4_2_Click()
Call setkk(4, 2, cb4_2.Value)
End Sub
Private Sub cb4_3_Click()
Call setkk(4, 3, cb4_3.Value)
End Sub
Private Sub cb4_4_Click()
Call setkk(4, 4, cb4_4.Value)
End Sub
Private Sub cb4_5_Click()
Call setkk(4, 5, cb4_5.Value)
End Sub
Private Sub cb4_6_Click()
Call setkk(4, 6, cb4_6.Value)
End Sub
Private Sub cb5_1_Click()
Call setkk(5, 1, cb5_1.Value)
End Sub
Private Sub cb5_2_Click()
Call setkk(5, 2, cb5_2.Value)
End Sub
Private Sub cb5_3_Click()
Call setkk(5, 3, cb5_3.Value)
End Sub
Private Sub cb5_4_Click()
Call setkk(5, 4, cb5_4.Value)
End Sub
Private Sub cb5_5_Click()
Call setkk(5, 5, cb5_5.Value)
End Sub
Private Sub cb5_6_Click()
Call setkk(5, 6, cb5_6.Value)
End Sub
Private Sub cb6_1_Click()
Call setkk(6, 1, cb6_1.Value)
End Sub
Private Sub cb6_2_Click()
Call setkk(6, 2, cb6_2.Value)
End Sub
Private Sub cb6_3_Click()
Call setkk(6, 3, cb6_3.Value)
End Sub
Private Sub cb6_4_Click()
Call setkk(6, 4, cb6_4.Value)
End Sub
Private Sub cb6_5_Click()
Call setkk(6, 5, cb6_5.Value)
End Sub
Private Sub cb6_6_Click()
Call setkk(6, 6, cb6_6.Value)
End Sub
Private Sub CommandButton1_Click()
Set zt = Sheets("zusatztipps")
With UserForm6
.pkt1.RowSource = "zusatztipps!b249:b278"
.pkt2.RowSource = "zusatztipps!b249:b278"
.tab1.RowSource = "zusatztipps!c241:c245"
.tab2.RowSource = "zusatztipps!c241:c245"
.bed1.RowSource = "zusatztipps!a241:a242"
.bed2.RowSource = "zusatztipps!b241:b245"
.rang.RowSource = "zusatztipps!a249:a" & Sheets("plan").[e1] + 248
.anzteams.RowSource = "zusatztipps!c249:c253"
.TextBox1.Value = "Zusatztipp #" & zt.[e238] + 1
Application.EnableEvents = False
.tab1.ListIndex = 2
.tab2.ListIndex = 2
.bed1.ListIndex = 0
.bed2.ListIndex = 0
.pkt1.ListIndex = 4
.pkt2.ListIndex = zt.[j251] - 1
.teamtipp.Caption = "die meisten Siege (Ges.)"
.anzteams.ListIndex = 0
.rang.ListIndex = 0
.bistext.Caption = ""
End With
UserForm5.Hide
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm6.Show
working = working_shk
Unload UserForm6
UserForm5.ListBox1.RowSource = "zusatztipps!e240:k" & 239 + Sheets("zusatztipps").[e238]
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm5.Show
End Sub
Private Sub CommandButton2_Click()
Application.CutCopyMode = False
UserForm5.Tag = "OK"
UserForm5.Hide
End Sub
Private Sub CommandButton3_Click()
Sheets("zusatztipps").[i169:n169].Value = zusidx
Sheets("zusatztipps").[i179:n184].Value = zuordnung
Sheets("zusatztipps").[d240:o440].Value = ztliste
Application.CutCopyMode = False
UserForm5.Tag = ""
UserForm5.Hide
End Sub
Private Sub Image1_Click()
txt = "Die Punkte aus den Zusatztipps k|fffd|nnen zu den Resultaten aus den Ergebnistipps der Halbserien und/oder des Gesamtstands addiert werden." & " Dies wird |fffd|ber die Kontrollk|fffd|stchen im blauen Bereich festgelegt. Wenn die Ergebnisse der Zusatztipps die Rangfolge aus den  Ergebnistipps nicht beeinflussen sollen (separate Wertung der Ergbnistipps)" & " deaktivieren Sie hier alle Kontrollk|fffd|stchen." & Chr(13) & Chr(13) & "Die Aufaddierung der Zusatzpunkte erfolgt automatisch, wenn die jeweilige Bezugstabelle abgeschlossen und damit eine korrekte Auswertung der Tipps m|fffd|glich ist." & Chr(13) & Chr(13) & "Zus|fffd|tzlich werden 3 separate, von den Ergebnistipps unabh|fffd|ngige, Ranglisten aus den Zusatztipps erstellt." & Chr(13) & "Zu welcher der 3 Ranglisten (HR, RR, Ges.) die einzelnen Zusatztipps z|fffd|hlen sollen, wird |fffd|ber die Kontrollk|fffd|stchen im gr|fffd|nen Bereich bestimmt."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub Image2_Click()
Call clearztipp(1)
End Sub
Private Sub Image3_Click()
Call clearztipp(2)
End Sub
Private Sub Image4_Click()
Call clearztipp(3)
End Sub
Private Sub Image5_Click()
Call clearztipp(4)
End Sub
Private Sub Image6_Click()
Call clearztipp(5)
End Sub
Private Sub Image7_Click()
Call clearztipp(6)
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox1.ListIndex = -1 Then Exit Sub
If Len(ListBox1.Value) = 0 Then Exit Sub
Application.EnableEvents = False
idx = ListBox1.ListIndex + 1
z = idx + 239
Set zt = Sheets("zusatztipps")
With UserForm6
.pkt1.RowSource = "zusatztipps!b249:b278"
.pkt2.RowSource = "zusatztipps!b249:b278"
.tab1.RowSource = "zusatztipps!c241:c245"
.tab2.RowSource = "zusatztipps!c241:c245"
.bed1.RowSource = "zusatztipps!a241:a242"
.bed2.RowSource = "zusatztipps!b241:b245"
.rang.RowSource = "zusatztipps!a249:a" & Sheets("plan").[e1] + 248
.anzteams.RowSource = "zusatztipps!c249:c253"
.CommandButton1.Caption = "|fffd|ndern"
.Caption = "Zusatztipp |fffd|ndern"
If zt.Cells(z, 4) = 1 Then
.Frame1.Visible = True
.Frame2.Visible = False
.OptionButton1.Value = True
.OptionButton2.Enabled = False
.TextBox1.Enabled = False
.TextBox1.Value = zt.Cells(z, 5)
.tab1.Value = zt.Cells(z, 9)
.pkt1.ListIndex = zt.Cells(z, 10) - 1
.rang.ListIndex = zt.Cells(z, 7) - 1
.bistext.Caption = "bis Platz " & zt.Cells(z, 8)
.anzteams.ListIndex = zt.Cells(z, 6) - 1
Else
.Frame2.Visible = True
.Frame1.Visible = False
.OptionButton2.Value = True
.OptionButton1.Enabled = False
.teamtipp.Caption = zt.Cells(z, 5)
.bed1.Enabled = False
.bed2.Enabled = False
.bed1.ListIndex = zt.Cells(z, 13) - 1
.bed2.ListIndex = zt.Cells(z, 14) - 1
.tab2.Enabled = False
.tab2.Value = zt.Cells(z, 9)
.pkt2.ListIndex = zt.Cells(z, 10) - 1
End If
.Tag = "Change"
End With
UserForm5.Hide
Application.EnableEvents = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm6.Show
working = working_shk
Unload UserForm6
UserForm5.ListBox1.RowSource = "zusatztipps!e240:k" & 239 + Sheets("zusatztipps").[e238]
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm5.Show
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Then Exit Sub
If Len(ListBox1.Value) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox1.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
zusidx = Sheets("zusatztipps").[i169:n169].Value
zuordnung = Sheets("zusatztipps").[i179:n184].Value
ztliste = Sheets("zusatztipps").[d240:o440].Value
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Private Sub ztipp1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(1, Data.GetText)
End Sub
Private Sub ztipp1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ztipp2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(2, Data.GetText)
End Sub
Private Sub ztipp2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ztipp3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(3, Data.GetText)
End Sub
Private Sub ztipp3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ztipp4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(4, Data.GetText)
End Sub
Private Sub ztipp4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ztipp5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(5, Data.GetText)
End Sub
Private Sub ztipp5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ztipp6_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ztipp6_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call dropztipp(6, Data.GetText)
End Sub
Private Sub ztipp6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(ztipp6.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ztipp6.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Sub dropztipp(nr, txt)
If UserForm5.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
Application.EnableEvents = False
Application.ScreenUpdating = False
Set zt = Sheets("zusatztipps")
atwork = 1
zt.[g238] = txt
idx = zt.[h238]
Application.Calculation = xlCalculationManual
oldtxt = UserForm5.Controls("ztipp" & Format(nr, "0")).Caption
oldidx = zt.Cells(169, 8 + nr)
tippold = zt.Range(zt.Cells(179, nr + 8), zt.Cells(184, nr + 8))
UserForm5.Controls("ztipp" & Format(nr, "0")).Caption = txt
zt.Cells(169, 8 + nr) = idx
For i = 1 To 6
If zt.Cells(169, 8 + i) = idx And i <> nr Then
UserForm5.Controls("ztipp" & Format(i, "0")).Caption = oldtxt
tippnew = zt.Range(zt.Cells(179, i + 8), zt.Cells(184, i + 8)).Value
zt.Range(zt.Cells(179, nr + 8), zt.Cells(184, nr + 8)) = tippnew
zt.Range(zt.Cells(179, i + 8), zt.Cells(184, i + 8)) = tippold
zt.Cells(169, 8 + nr) = zt.Cells(169, 8 + i)
zt.Cells(169, 8 + i) = oldidx
For j = 1 To 6
Controls("cb" & nr & "_" & j).Value = tippnew(j, 1)
Controls("cb" & i & "_" & j).Value = tippold(j, 1)
Next
End If
Next
atwork = 0
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Sub setkk(tipp, idx, wert)
If UserForm5.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Set zt = Sheets("zusatztipps")
If wert And Len(zt.Cells(169, 8 + tipp)) = 0 Then
Controls("cb" & tipp & "_" & idx).Value = False
zt.Cells(178 + idx, 8 + tipp).Value = 0
ElseIf wert Then
zt.Cells(178 + idx, 8 + tipp).Value = 1
Else
zt.Cells(178 + idx, 8 + tipp).Value = 0
End If
atwork = 0
End Sub
Sub clearztipp(nr)
aw = MsgBox("Soll Zusatztipp #" & nr & " gel|fffd|scht werden?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
Controls("ztipp" & nr).Caption = ""
For i = 1 To 6
Controls("cb" & nr & "_" & i).Value = False
Next
Sheets("zusatztipps").Cells(169, nr + 8).ClearContents
CommandButton2.SetFocus
End Sub
Attribute VB_Name = "UserForm6"
Attribute VB_Base = "0{FC41A4D5-7BC7-49FD-B01E-BF8A8EA98EE4}{ADE9E9C2-BCCE-4586-8DFA-F0958E6809E9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub anzteams_Change()
anzt = Sheets("plan").[e1]
If rang.ListIndex > anzt - anzteams.ListIndex - 1 Then
rang.ListIndex = anzt - anzteams.ListIndex - 1
Else
bistext = "bis Platz " & anzteams.ListIndex + rang.ListIndex + 1
End If
If anzteams.ListIndex = 0 Then
bistext.Visible = False
Else
bistext.Visible = True
End If
CommandButton1.SetFocus
End Sub
Private Sub bed1_Change()
CommandButton1.SetFocus
teamtipp.Caption = bed1.Value & " " & bed2.Value & " (" & Sheets("zusatztipps").Cells(255 + tab2.ListIndex, 3).Value & ")"
End Sub
Private Sub bed2_Change()
CommandButton1.SetFocus
teamtipp.Caption = bed1.Value & " " & bed2.Value & " (" & Sheets("zusatztipps").Cells(255 + tab2.ListIndex, 3).Value & ")"
End Sub
Private Sub CommandButton1_Click()
With Sheets("zusatztipps")
If OptionButton1 Then
.[g238] = TextBox1.Value
Else
.[g238] = teamtipp.Caption
End If
If Len(.[g238]) = 0 Then
aw = MsgBox("Bitte geben Sie eine Bezeichnung ein.", vbOKOnly, "Warnung!")
Exit Sub
End If
If Not UserForm6.Tag = "Change" Then
If IsError(.[h238]) Then
z = .[e238] + 240
Else
aw = MsgBox("Der Eintrag " & Chr(13) & Chr(13) & .[g238] & Chr(13) & Chr(13) & "existiert bereits!" & Chr(13) & "Mit OK wird der existierende Eintrag ge|fffd|ndert, mit Abbrechen haben Sie Gelegenheit, eine andere Bezeichnung zu w|fffd|hlen." & Chr(13) & Chr(13) & "Vorgang fortsetzen?", vbOKCancel, "Warnung!")
If aw <> 1 Then Exit Sub
z = .[h238] + 239
End If
Else
z = .[h238] + 239
End If
ztipp = .Range(.Cells(z, 4), .Cells(z, 14)).Value
If OptionButton1 Then
ztipp(1, 1) = 1
ztipp(1, 2) = TextBox1.Value
ztipp(1, 3) = anzteams.ListIndex + 1
ztipp(1, 4) = rang.ListIndex + 1
ztipp(1, 5) = rang.ListIndex + ztipp(1, 3)
ztipp(1, 6) = tab1.Value
ztipp(1, 7) = pkt1.ListIndex + 1
ztipp(1, 9) = tab1.ListIndex + 1
ztipp(1, 10) = Null
ztipp(1, 11) = Null
Else
ztipp(1, 1) = 2
ztipp(1, 2) = teamtipp.Caption
ztipp(1, 3) = 1
ztipp(1, 4) = "-"
ztipp(1, 5) = "-"
ztipp(1, 6) = tab2.Value
ztipp(1, 7) = pkt2.ListIndex + 1
ztipp(1, 9) = tab2.ListIndex + 1
ztipp(1, 10) = bed1.ListIndex + 1
ztipp(1, 11) = bed2.ListIndex + 1
End If
.Range(.Cells(z, 4), .Cells(z, 14)).Value = ztipp
If Not UserForm6.Tag = "Change" Then aw = MsgBox("Der Zusatztipp" & Chr(13) & Chr(13) & .[g238] & Chr(13) & Chr(13) & " wurde eingetragen.", vbOKOnly, "Vorgang beendet")
End With
Application.CutCopyMode = False
If Not UserForm6.Tag = "Change" Then aw = MsgBox("M|fffd|chten Sie weitere Tipps hinzuf|fffd|gen?", vbYesNo, "")
If aw <> 6 Or UserForm6.Tag = "Change" Then UserForm6.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm6.Hide
End Sub
Private Sub OptionButton1_Click()
If OptionButton1.Value = True Then
Frame2.Visible = False
Frame1.Visible = True
Else
Frame1.Visible = False
Frame2.Visible = True
End If
End Sub
Private Sub OptionButton2_Click()
If OptionButton2.Value = True Then
Frame1.Visible = False
Frame2.Visible = True
Else
Frame2.Visible = False
Frame1.Visible = True
End If
End Sub
Private Sub pkt1_Change()
CommandButton1.SetFocus
End Sub
Private Sub pkt2_Change()
CommandButton1.SetFocus
End Sub
Private Sub rang_Change()
anzt = Sheets("plan").[e1]
If rang.ListIndex > anzt - anzteams.ListIndex - 1 Then rang.ListIndex = anzt - anzteams.ListIndex - 1
bistext = "bis Platz " & anzteams.ListIndex + rang.ListIndex + 1
CommandButton1.SetFocus
End Sub
Private Sub tab1_Change()
CommandButton1.SetFocus
End Sub
Private Sub tab2_Change()
CommandButton1.SetFocus
teamtipp.Caption = bed1.Value & " " & bed2.Value & " (" & Sheets("zusatztipps").Cells(255 + tab2.ListIndex, 3).Value & ")"
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm7"
Attribute VB_Base = "0{08FE4E64-FEF4-4457-9BCB-84E3360DB1CB}{54666C9D-CB38-4777-92FC-556343BF0C01}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CheckBox1_Click()
Set lt = Sheets("ligatabelle")
If CheckBox1.Value = True Then
lt.[ay1] = 1
Else
lt.[ay1] = 0
End If
Call tabsort(lt.[bx21] + 76)
ListBox1.SetFocus
End Sub
Private Sub CheckBox2_Click()
If CheckBox2.Value = True Then
Label13.Visible = True
ComboBox1.ListIndex = -1
ComboBox1.RowSource = "tipps!by11:by" & 10 + Sheets("tipps").[b6]
ComboBox1.ListIndex = 0
Else
Label13.Visible = False
ComboBox1.ListIndex = -1
ListBox1.RowSource = "ligatabelle!ca3:cl" & Sheets("plan").[e1] + 2
ComboBox1.RowSource = "ligatabelle!bn23:bn27"
ComboBox1.ListIndex = 0
End If
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
If CheckBox2.Value = True Then
Set a = Sheets("auswertung")
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If Len(a.[t2]) = 0 Then
a.[x2:ak2].AutoFill Destination:=a.[x2:ak381]
a.[an2:ay2].AutoFill Destination:=a.[an2:ay21]
a.[az3:bm3].AutoFill Destination:=a.[az3:bm22]
a.[an47:bh47].AutoFill Destination:=a.[an47:bh66]
a.[t2] = 1
End If
Sheets(aktuelleseite).Activate
a.[u1] = ComboBox1.ListIndex + 1
a.[an25:bg44].ClearContents
a.Calculate
dvpkt = a.[an25:bg44].Value
paar = a.[x2:y381].Value
dvausw = a.[aj2:ak381].Value
For i = 1 To Sheets("plan").[t1] * 2
ht = paar(i, 1)
at = paar(i, 2)
If ht > 0 And at > 0 Then
dvpkt(ht, at) = dvpkt(ht, at) + dvausw(i, 1)
dvpkt(at, ht) = dvpkt(at, ht) + dvausw(i, 2)
End If
Next
a.[an25:bg44].Value = dvpkt
a.Calculate
pktg = a.[an2:an21].Value
dvsumg = a.[bh47:bh66].Value
dvrangg = a.[bi47:bi66].Value
anzt = Sheets("plan").[e1]
For i = 1 To anzt
rangg = 0
For j = 1 To anzt
If i <> j Then
If pktg(i, 1) = pktg(j, 1) And dvsumg(i, 1) < dvsumg(j, 1) Then rangg = rangg + 1
End If
Next
dvrangg(i, 1) = rangg
Next
a.[ar2:ar21].Value = dvrangg
a.Calculate
Call tabsort(Sheets("ligatabelle").[bx21] + 76)
ListBox1.RowSource = "auswertung!bb3:bm" & Sheets("plan").[e1] + 2
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
Else
Set lt = Sheets("ligatabelle")
lt.[bx2] = ComboBox1.ListIndex + 1
s = lt.[bx21] + 76
anz = Sheets("plan").[e1]
If s > 80 Then
lt.Range("by3:cl" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlDescending, header:=xlNo, MatchCase:=False
Else
lt.Range("by3:cl" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
End If
ListBox1.SetFocus
End Sub
Private Sub CommandButton1_Click()
anz = Sheets("plan").[e1]
If Not CheckBox2 Then
ber = Range("ca1:cl" & anz + 2).Address
If Sheets("ligatabelle").[ax22] = 0 Then ber = Range("ca1:ck" & anz + 2).Address
k = Sheets("ligatabelle").Cells(26 + ComboBox1.ListIndex, 76).Value
UserForm7.Hide
Call showhtml("ligatabelle", ber, 3, "Ligatabelle" & k)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm7.Show
working = working_shk
Else
ber = Range("bb1:bm" & anz + 2).Address
If Sheets("ligatabelle").[ax22] = 0 Then ber = Range("bb1:bl" & anz + 2).Address
UserForm7.Hide
Call showhtml("auswertung", ber, 3, "Tipptabelle_" & ComboBox1.Value)
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm7.Show
End If
Application.CutCopyMode = False
End Sub
Private Sub Label3_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label3").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 4
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label4_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label4").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 1
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label5_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label5").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 6
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label6_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label6").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 8
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label7_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label7").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 9
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label8_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label8").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 10
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label9_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label9").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 11
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label10_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label10").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 12
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label11_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label11").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 13
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label12_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label12").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 14
Call tabsort(lt.[bx21] + 76)
End Sub
Private Sub Label2_Click()
For i = 2 To 12
Controls("label" & i).BackColor = &H8000000F
Next
Controls("label2").BackColor = &HFFFF80
Set lt = Sheets("ligatabelle")
lt.[bx21] = 1
Call tabsort(lt.[bx21] + 76)
End Sub
Sub tabsort(s)
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.ScreenUpdating = False
If Not CheckBox2.Value = True Then
Set lt = Sheets("ligatabelle")
anz = Sheets("plan").[e1]
If s > 80 Then
lt.Range("by3:cl" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlDescending, header:=xlNo, MatchCase:=False
Else
lt.Range("by3:cl" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
Else
Set lt = Sheets("auswertung")
anz = Sheets("plan").[e1]
s = s - 25
If s = 52 Then s = 66
If s > 55 And s < 65 Then
lt.Range("az3:bn" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlDescending, header:=xlNo, MatchCase:=False
Else
lt.Range("az3:bn" & anz + 2).Sort key1:=lt.Cells(3, s), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
End If
Application.CutCopyMode = False
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Activate()
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
If [b6] = 0 Then CheckBox2.Enabled = False
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm8"
Attribute VB_Base = "0{C8A176C3-602F-453B-9FB2-9CA3131A607D}{77544E12-5E18-457F-BC98-A87217591B06}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
UserForm8.Tag = "OK"
UserForm8.Hide
End Sub
Private Sub CommandButton2_Click()
UserForm8.Hide
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox1.ListIndex = -1 Then Exit Sub
idx = ListBox1.ListIndex + 1
pkt = Sheets("ligatabelle").Cells(idx + 1, 50)
If Len(ListBox1.Value) = 0 Then Exit Sub
pktab = InputBox("Wieviele Punkte werden " & ListBox1.Value & " abgezogen", "Punktabzug best|fffd|tigen", pkt)
If pktab = False Then Exit Sub
If Len(pktab) = 0 Then
pkt = 0
Else
pkt = Val(pktab)
End If
If pkt < 0 Then Exit Sub
Sheets("ligatabelle").Cells(idx + 1, 50) = pkt
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "UserForm9"
Attribute VB_Base = "0{A0D7D0C2-3897-4FA0-ADE9-985F9FE34415}{5F458761-F6DA-46A1-912F-3E63E3DB40BC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, anz, sortieren, idx, atwork, anztg, ausfuellen
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If Not ComboBox2.ListIndex = 0 Then Exit Sub
If atwork = 1 Then Exit Sub
atwork = 1
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
[dh117] = ComboBox1.ListIndex + 1
[ft21] = ComboBox1.ListIndex + 1
Sheets("einstellungen").Calculate
[dg119:ec119].AutoFill Destination:=[dg119:ec219]
Sheets(aktuelleseite).Activate
Sheets(aktuelleseite).Calculate
[dh120:dv219].Value = [dh120:dv219].Value
s = sortieren
If s <> 4 And s <> 1 Then
Range("df120:dv" & 119 + anz).Sort key1:=Cells(120, 111 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
Else
Range("df120:dv" & 119 + anz).Sort key1:=Cells(120, 111 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
Application.Calculation = xlCalculationAutomatic
[dj120:dj219].Value = [dg120:dg219].Value
Application.ScreenUpdating = True
Application.EnableEvents = True
atwork = 0
CommandButton2.SetFocus
ListBox6.Visible = False
ListBox6.Height = 305.5
ListBox6.Visible = True
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If ComboBox2.ListIndex = -1 Then Exit Sub
ListBox6.SetFocus
If atwork = 1 Then Exit Sub
atwork = 1
If ComboBox2.ListIndex = 1 Then
Frame1.Visible = True
Frame2.Visible = False
ListBox6.Height = 198.05
ListBox6.RowSource = "data!a7185:m" & 7184 + anztg
For i = 1 To 13
Controls("l" & i).ForeColor = &H0&
Controls("l1").Caption = "Spt"
Next
ElseIf ComboBox2.ListIndex = 0 Then
Frame2.Visible = True
Frame1.Visible = False
ListBox6.Height = 305.3
ListBox6.RowSource = "tipps!dj120:dv" & 119 + anz
For i = 1 To 13
Controls("l" & i).ForeColor = &H0&
Next
Controls("l" & idx).ForeColor = &HFF&
Controls("l1").Caption = "Pl."
End If
atwork = 0
End Sub
Private Sub CommandButton1_Click()
ber = Range("a7182:m8017").Address
Set d = Sheets("data")
d.Range(d.Cells(7186 + anztg, 1), d.Cells(7999, 1)).EntireRow.Hidden = True
UserForm9.Hide
Call showhtml("data", ber, 4, "Tagessieger")
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm9.Show
working = working_shk
d.Range(d.Cells(7186 + anztg, 1), d.Cells(7999, 1)).EntireRow.Hidden = False
End Sub
Private Sub CommandButton2_Click()
anz = [b6]
ber = Range("em118:ey220").Address
Range(Cells(121 + anz, 1), Cells(221, 1)).EntireRow.Hidden = True
[em121:ey220].Value = [dj120:dv219].Value
UserForm9.Hide
Call showhtml("tipps", ber, 6, "Auswertung_Spt" & ComboBox1.ListIndex + 1)
Range(Cells(121 + anz, 1), Cells(221, 1)).EntireRow.Hidden = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm9.Show
working = working_shk
Application.CutCopyMode = False
End Sub
Private Sub CommandButton3_Click()
If [b6] = 0 Then Exit Sub
UserForm30.Label1.Caption = "Paarungen von " & ComboBox1.Value
If ausfuellen <> 1 Then
ausfuellen = 1
[fb121:fq121].AutoFill Destination:=[fb121:fq220]
End If
Sheets(aktuelleseite).Activate
UserForm30.ListBox2.RowSource = "tipps!fd121:fp" & 120 + [b6]
ppspt = [fr21]
UserForm30.ListBox1.RowSource = "tipps!fr22:gb" & ppspt + 21
Sheets(aktuelleseite).Calculate
If Sheets("plan").[f47] = 2 Then
UserForm30.Label49.Caption = "Bezugspunktzahl: " & Sheets("plan").[g63] & " Punkte"
ElseIf Sheets("plan").[f47] = 1 Then
UserForm30.Label49.Caption = "Bezugspunktzahl: erspielte Tipppunkte aus den Ergebnistipps"
Else
UserForm30.Label49.Caption = "Bezugspunktzahl: es werden keine Quotenpunkte vergeben"
End If
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm30.Show
working = working_shk
Unload UserForm30
Application.CutCopyMode = False
End Sub
Private Sub CommandButton4_Click()
Application.Calculation = xlCalculationManual
Sheets("tagerg").[b3:ao3].AutoFill Destination:=Sheets("tagerg").[b3:ao102]
Sheets("tagerg").Calculate
Sheets("tagerg").[b4:ao102].Value = Sheets("tagerg").[b4:ao102].Value
Sheets(aktuelleseite).Activate
UserForm9.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tagerg_sp.Show
working = working_shk
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm9.Show
Unload tagerg_sp
End Sub
Private Sub l1_Click()
Call sorttager(1, 1)
End Sub
Private Sub l2_Click()
Call sorttager(4, 2)
End Sub
Private Sub l3_Click()
Call sorttager(1, 3)
End Sub
Private Sub l4_Click()
Call sorttager(6, 4)
End Sub
Private Sub l5_Click()
Call sorttager(7, 5)
End Sub
Private Sub l6_Click()
Call sorttager(8, 6)
End Sub
Private Sub l7_Click()
Call sorttager(9, 7)
End Sub
Private Sub l8_Click()
Call sorttager(10, 8)
End Sub
Private Sub l9_Click()
Call sorttager(11, 9)
End Sub
Private Sub l10_Click()
Call sorttager(12, 10)
End Sub
Private Sub l11_Click()
Call sorttager(13, 11)
End Sub
Private Sub l12_Click()
Call sorttager(14, 12)
End Sub
Private Sub l13_Click()
Call sorttager(15, 13)
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
anz = Sheets("tipps").[b6].Value
sortieren = 1
idx = 1
anztg = Sheets("data").[cz1362]
ComboBox2.RowSource = "data!p7181:p7182"
ComboBox2.ListIndex = 0
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
ComboBox2.ListIndex = 0
atwork = 0
working = False
startwert = True
ComboBox1.ListIndex = [i5] - 1
ComboBox2.ListIndex = -1
ComboBox2.ListIndex = 0
working = False
startwert = True
atwork = 0
Application.ScreenUpdating = True
End Sub
Sub sorttager(s, j)
If Not ComboBox2.ListIndex = 0 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
sortieren = s
idx = j
If s <> 4 And s <> 1 Then
Range("df120:dv" & 119 + anz).Sort key1:=Cells(120, 111 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
Else
Range("df120:dv" & 119 + anz).Sort key1:=Cells(120, 111 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
End If
For i = 1 To 13
Controls("l" & i).ForeColor = &H0&
Next
Controls("l" & idx).ForeColor = &HFF&
Application.Calculation = xlCalculationAutomatic
[dj120:dj219].Value = [dg120:dg219].Value
Application.ScreenUpdating = True
Application.EnableEvents = True
CommandButton2.SetFocus
ListBox6.Visible = False
ListBox6.Height = 305.5
ListBox6.Visible = True
End Sub
Attribute VB_Name = "Userform16"
Attribute VB_Base = "0{579C3DCB-DC38-453F-8146-7A142E870BF9}{D9AB96AA-C407-4FC0-A876-9B423FE58D94}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If Userform16.Visible = False Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
OptionButton2.Value = True
End Sub
Private Sub CommandButton1_Click()
If TextBox1.Visible = True And OptionButton3 And (Len(TextBox1.Value) = 0 Or TextBox1.Value = "") Then
aw = MsgBox("Wenn die Daten als Tipps eines neuen Mitspielers eingef|fffd|gt werden sollen, muss ein Name eingegeben werden", vbCritical, "FEHLER!")
Exit Sub
End If
Userform16.Hide
End Sub
Private Sub OptionButton1_Click()
If OptionButton1 Then
CheckBox1.Enabled = False
CheckBox2.Enabled = False
Else
CheckBox1.Enabled = True
CheckBox2.Enabled = True
CheckBox2.Value = UserForm14.CheckBox7.Value
End If
End Sub
Private Sub OptionButton2_Click()
If OptionButton1 Then
CheckBox1.Enabled = False
CheckBox2.Enabled = False
Else
CheckBox1.Enabled = True
CheckBox2.Enabled = True
CheckBox2.Value = UserForm14.CheckBox7.Value
End If
End Sub
Private Sub OptionButton3_Click()
If OptionButton1 Then
CheckBox1.Enabled = False
CheckBox2.Enabled = False
Else
CheckBox1.Enabled = True
CheckBox2.Enabled = True
CheckBox2.Value = UserForm14.CheckBox7.Value
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "auszts"
Attribute VB_Base = "0{9C8935CB-B58E-4BE9-8ACE-BC3F23C3CE87}{B3B57F34-D83C-4C49-BD90-0C0271B2EF4F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim atwork, first
Sub addieren()
If atwork = 1 Then Exit Sub
If auszts.Visible = False Then Exit Sub
sumw = 0
For i = 1 To 5
If Controls("checkbox" & i).Value = True Then
sumw = sumw + Controls("vk" & i).ListIndex + Controls("nk" & i).ListIndex / 100
End If
Next
sum1.Caption = sumw
If sumw > 100 And einheitvr.ListIndex = 1 Then
warn1.Visible = True
Else
warn1.Visible = False
End If
sumw = 0
For i = 6 To 10
If Controls("checkbox" & i).Value = True Then
sumw = sumw + Controls("vk" & i).ListIndex + Controls("nk" & i).ListIndex / 100
End If
Next
sum2.Caption = sumw
If sumw > 100 And einheitrr.ListIndex = 1 Then
warn2.Visible = True
Else
warn2.Visible = False
End If
End Sub
Private Sub CheckBox1_Click()
Call addieren
End Sub
Private Sub CheckBox2_Click()
Call addieren
End Sub
Private Sub CheckBox3_Click()
Call addieren
End Sub
Private Sub CheckBox4_Click()
Call addieren
End Sub
Private Sub CheckBox5_Click()
Call addieren
End Sub
Private Sub CheckBox6_Click()
Call addieren
End Sub
Private Sub CheckBox7_Click()
Call addieren
End Sub
Private Sub CheckBox8_Click()
Call addieren
End Sub
Private Sub CheckBox9_Click()
Call addieren
End Sub
Private Sub CheckBox10_Click()
Call addieren
End Sub
Private Sub CommandButton1_Click()
atwork = 1
For i = 1 To 5
Controls("vk" & i).ListIndex = Controls("vk" & i + 5).ListIndex
Controls("nk" & i).ListIndex = Controls("nk" & i + 5).ListIndex
Controls("checkbox" & i).Value = Controls("checkbox" & i + 5).Value
Next
einheitvr.ListIndex = einheitrr.ListIndex
atwork = 0
Call addieren
End Sub
Private Sub CommandButton2_Click()
atwork = 1
For i = 1 To 5
Controls("vk" & i + 5).ListIndex = Controls("vk" & i).ListIndex
Controls("nk" & i + 5).ListIndex = Controls("nk" & i).ListIndex
Controls("checkbox" & i + 5).Value = Controls("checkbox" & i).Value
Next
einheitrr.ListIndex = einheitvr.ListIndex
atwork = 0
Call addieren
End Sub
Private Sub CommandButton3_Click()
ts = [du43:dv47].Value
For i = 1 To 5
If Controls("checkbox" & i).Value = True Then
ts(i, 1) = Controls("vk" & i).ListIndex + Controls("nk" & i).ListIndex / 100
Else
ts(i, 1) = 0
End If
Next
For i = 1 To 5
If Controls("checkbox" & i + 5).Value = True Then
ts(i, 2) = Controls("vk" & i + 5).ListIndex + Controls("nk" & i + 5).ListIndex / 100
Else
ts(i, 2) = 0
End If
Next
[du43:dv47].Value = ts
[du42] = einheitvr.ListIndex + 1
[dv42] = einheitrr.ListIndex + 1
auszts.Hide
End Sub
Private Sub CommandButton4_Click()
auszts.Hide
End Sub

Private Sub einheitrr_Change()

End Sub

Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Call addieren
Application.ScreenUpdating = True
working = False
startwert = True
End Sub
Private Sub vk1_Change()
Call addieren
End Sub
Private Sub vk2_Change()
Call addieren
End Sub
Private Sub vk3_Change()
Call addieren
End Sub
Private Sub vk4_Change()
Call addieren
End Sub
Private Sub vk5_Change()
Call addieren
End Sub
Private Sub vk6_Change()
Call addieren
End Sub
Private Sub vk7_Change()
Call addieren
End Sub
Private Sub vk8_Change()
Call addieren
End Sub
Private Sub vk9_Change()
Call addieren
End Sub
Private Sub vk10_Change()
Call addieren
End Sub
Private Sub nk1_Change()
Call addieren
End Sub
Private Sub nk2_Change()
Call addieren
End Sub
Private Sub nk3_Change()
Call addieren
End Sub
Private Sub nk4_Change()
Call addieren
End Sub
Private Sub nk5_Change()
Call addieren
End Sub
Private Sub nk6_Change()
Call addieren
End Sub
Private Sub nk7_Change()
Call addieren
End Sub
Private Sub nk8_Change()
Call addieren
End Sub
Private Sub nk9_Change()
Call addieren
End Sub
Private Sub nk10_Change()
Call addieren
End Sub
Attribute VB_Name = "datlist"
Attribute VB_Base = "0{31ECA38F-49B5-4BFA-9E8D-10B77439FC15}{D4DD516C-6BD8-4ADE-8807-FD0FB11EE054}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim aktbez, aktidx, aktliste, gesliste, anz, anzges, aktdir, pfad1
Sub Drop(txt)
If Right(txt, 4) <> ".xls" And Right(txt, 5) <> "<DIR>" Then Exit Sub
For i = 1 To anz
If aktliste(1, i + 3) = pfad1 & txt Then
ListBox1.Selected(i - 1) = True
Exit Sub
End If
Next
anz = anz + 1
ListBox1.AddItem pfad1 & txt
ListBox1.Selected(anz - 1) = True
aktliste(1, anz + 3) = pfad1 & txt
aktliste(1, 3) = anz
CommandButton3.Enabled = anz > 0
CommandButton2.Enabled = anz > 0
End Sub
Sub loeschen(txt)
If Left(txt, 4) <> "idx#" Then Exit Sub
idx = Val(Right(txt, Len(txt) - 4))
listeneu = Sheets("dateiliste").[a1003:cz1003]
listeneu(1, 1) = aktliste(1, 1)
listeneu(1, 2) = aktliste(1, 2)
n = 0
For i = 1 To anz
If i <> idx Then
n = n + 1
listeneu(1, n + 3) = aktliste(1, i + 3)
End If
Next
anz = anz - 1
aktliste = listeneu
aktliste(1, 3) = anz
ListBox1.RemoveItem idx - 1
CommandButton3.Enabled = anz > 0
CommandButton2.Enabled = anz > 0
End Sub
Private Sub CommandButton1_Click()
If anzges = 0 Then
aw = MsgBox("Es wurden noch keine Listen gespeichert!", vbOKOnly, "Schade ...")
Exit Sub
End If
liste = Sheets("dateiliste").Range("b3:c" & 2 + anzges).Value
datlist_show.ListBox1.List = liste
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
datlist_show.Show
working = working_shk
gesliste = Sheets("dateiliste").[a3:cz1002]
anzges = Sheets("dateiliste").[b1]
aktidx = 0
If Len(aktbez) > 0 Then
For i = 1 To anzges
If gesliste(i, 2) = aktbez Then aktidx = i
Next
End If
If Val(datlist_show.Tag) > 0 Then
last = Val(datlist_show.Tag)
aktbez = gesliste(last, 2)
anz = gesliste(last, 3)
aktidx = last
aktliste = Sheets("dateiliste").[a1003:cz1003]
ListBox1.Clear
aktliste(1, 1) = gesliste(last, 1)
aktliste(1, 2) = gesliste(last, 2)
aktliste(1, 3) = gesliste(last, 3)
For i = 1 To anz
ListBox1.AddItem gesliste(last, 3 + i)
ListBox1.Selected(i - 1) = True
aktliste(1, 3 + i) = gesliste(last, 3 + i)
Next
End If
Unload datlist_show
CommandButton3.Enabled = anz > 0
CommandButton2.Enabled = anz > 0
End Sub
Private Sub CommandButton2_Click()
If aktidx > 0 Then
vorgabe = aktbez
Else
vorhabe = "Liste " & anz + 1
End If
nochmal:
newname = InputBox("Bitte eine Bezeichnung f|fffd|r die Liste eingeben", "Dateiliste speichern", vorgabe)
On Error GoTo ende
If Len(newname) = 0 Then Exit Sub
idx = 0
For i = 1 To anzges
If gesliste(i, 2) = newname Then idx = i
Next
If idx > 0 And idx <> aktidx Then
aw = MsgBox("Die Bezeichnung: " & Chr(13) & newname & Chr(13) & " wird bereits verwendet." & Chr(13) & "Soll die Liste |fffd|berschrieben werden?", vbYesNo, "Warnung!")
If aw <> 6 Then GoTo nochmal
Else
If idx = 0 Then
If anzges + 1 > 1000 Then
aw = MsgBox("Mehr als 1000 Listen k|fffd|nnen nicht verwaltet werden!", vbOKOnly, "Fehler!")
Exit Sub
End If
idx = anzges + 1
anzges = anzges + 1
End If
End If
gesliste(idx, 2) = newname
gesliste(idx, 3) = anz
For i = 1 To anz
gesliste(idx, 3 + i) = ListBox1.List(i - 1, 0)
Next
For i = anz + 1 To 100
gesliste(idx, 3 + i) = ""
Next
Sheets("dateiliste").[a3:cz1002] = gesliste
aktidx = idx
aktbez = gesliste(aktidx, 2)
ende:
End Sub
Private Sub CommandButton3_Click()
Sheets("dateiliste").[d1] = aktidx
datlist.Tag = anz
datlist.Hide
End Sub
Private Sub CommandButton4_Click()
If anz = 0 Then Exit Sub
aw = MsgBox("Eine leere Liste wird erstellt." & " Alle nicht gespeicherten Eintr|fffd|ge der aktuellen Liste gehen verloren", vbYesNo, "Bitte best|fffd|tigen")
If aw <> 6 Then Exit Sub
aktidx = 0
anz = 0
aktliste = Sheets("dateiliste").[a1003:cz1003]
CommandButton3.Enabled = anz > 0
CommandButton2.Enabled = anz > 0
ListBox1.Clear
End Sub
Private Sub Label3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
If Left(Data.GetText, 4) <> "idx#" Then Exit Sub
Call loeschen(Data.GetText)
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText "idx#" & Str(ListBox1.ListIndex + 1)
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Listbox1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub ListBox1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(Data.GetText)
End Sub
Private Sub ListBox2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox2.ListIndex = -1 Then Exit Sub
If Right(ListBox2.Value, 4) <> ".xls" And Right(ListBox2.Value, 5) <> "<DIR>" Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox2.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox2.ListIndex = -1 Then Exit Sub
If Len(ListBox2.Value) = "" Then Exit Sub
If ListBox2.Value = ".." Then
For i = Len(pfad1) - 1 To 3 Step -1
If StrComp(Mid(pfad1, i, 1), "\", vbTextCompare) = 0 Then GoTo weiter
Next
weiter:
If i > 3 Then
pfad1 = Left(pfad1, i)
Else
pfad1 = Left(pfad1, 3)
End If
Call getdir(pfad1)
ElseIf Right(ListBox2.Value, 1) = "]" Then
l = Mid(ListBox2.Value, Len(ListBox2.Value) - 2, 1)
pfad1 = CurDir(l & ":\")
If Right(pfad1, 1) <> "\" Then pfad1 = pfad1 & "\"
Call getdir(pfad1)
ElseIf Right(ListBox2.Value, 1) = ">" Then
pfad1 = pfad1 & Left(ListBox2.Value, Len(ListBox2.Value) - 6) & "\"
Call getdir(pfad1)
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
Application.ScreenUpdating = False
gesliste = Sheets("dateiliste").[a3:cz1002]
anzges = Sheets("dateiliste").[b1]
anz = Val(datlist.Tag)
aktliste = Sheets("dateiliste").[a1003:cz1003]
last = Sheets("dateiliste").[d1]
anz2 = 0
If last > 0 And last <= anzges Then anz2 = gesliste(last, 3)
If anz2 > 0 And (anz2 = anz Or anz = 0) Then
aktbez = gesliste(last, 2)
aktliste(1, 1) = gesliste(last, 1)
aktliste(1, 2) = gesliste(last, 2)
aktliste(1, 3) = gesliste(last, 3)
For i = 1 To anz2
ListBox1.AddItem gesliste(last, 3 + i)
ListBox1.Selected(i - 1) = True
aktliste(1, 3 + i) = gesliste(last, 3 + i)
Next
anz = anz2
ElseIf anz > 0 Then
aktbez = ""
aktidx = 0
aktliste(1, 1) = Null
aktliste(1, 2) = ""
aktliste(1, 3) = anz
For i = 1 To anz
ListBox1.Selected(i - 1) = True
aktliste(1, 3 + i) = ListBox1.List(i - 1, 0)
Next
End If
pfad1 = ThisWorkbook.Path & "\"
aktidx = last
Call getdir(pfad1)
CommandButton3.Enabled = anz > 0
CommandButton2.Enabled = anz > 0
datlist.Tag = 0
ListBox2.ListIndex = -1
CommandButton1.SetFocus
Application.ScreenUpdating = True
working = False
startwert = True
End Sub
Sub getdir(p)
Dim fs, d, dc, s, n
Label2.Caption = "Dateien filtern ..."
Application.ScreenUpdating = False
Application.EnableEvents = False
ListBox2.Clear
If Len(p) > 3 Then ListBox2.AddItem ".."
name1 = Dir(p, vbDirectory)
Do While name1 <> ""
If name1 <> "." And name1 <> ".." Then
If (GetAttr(p & name1) And vbDirectory) = vbDirectory Then
ListBox2.AddItem UCase(name1) & " <DIR>"
End If
End If
name1 = Dir
Loop
name1 = Dir(p & "*.xls")
Do While name1 <> ""
ListBox2.AddItem LCase(name1)
name1 = Dir
Loop
Set fs = CreateObject("Scripting.FileSystemObject")
Set dc = fs.Drives
For Each d In dc
If d.IsReady Then
s = UCase(d.VolumeName) & " [ " & d.DriveLetter & " ]"
ListBox2.AddItem s
End If
Next
Label2.Caption = p
ChDir (p)
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Attribute VB_Name = "datlist_show"
Attribute VB_Base = "0{32382A16-E0BC-4E45-85E3-44FB5B8572BE}{8F3D79B5-4E94-4C78-AC40-C30B8D323F14}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim anz
Private Sub CommandButton1_Click()
n = 0
For i = 1 To anz
If ListBox1.Selected(i - 1) = True Then n = i
Next
datlist_show.Tag = n
datlist_show.Hide
End Sub
Private Sub CommandButton2_Click()
n = 0
For i = 1 To anz
If ListBox1.Selected(i - 1) = True Then n = i
Next
If n = 0 Then Exit Sub
aw = MsgBox("Die gew|fffd|hlte Liste wird unwiderruflich gel|fffd|scht!", vbYesNo, "Bitte best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
With Sheets("dateiliste")
.Range("a" & n + 2 & ":cz1002").Value = .Range("a" & n + 3 & ":cz1003").Value
End With
ListBox1.RemoveItem (n - 1)
anz = anz - 1
If anz = 0 Then
datlist_show.Tag = "0"
datlist_show.Hide
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
Application.ScreenUpdating = False
datlist_show.Tag = "0"
anz = Sheets("dateiliste").[b1]
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "dopa"
Attribute VB_Base = "0{4BB696CF-E9D6-47BE-BED6-D707B3DE35FD}{0884AC87-5522-42BC-8167-16A9F89ADDF7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "infowin"
Attribute VB_Base = "0{69CCD7BC-B613-4E3F-B806-5FD2B6D8A3DB}{CC4E1212-A61D-40E0-A15C-5A762D241AC1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False








Private Sub CommandButton1_Click()
infowin.Hide
End Sub

Attribute VB_Name = "kasse"
Attribute VB_Base = "0{ED610880-8E3E-4666-928C-99784AAF5E71}{DF69851A-5839-439F-A54D-3D8F93AB8F77}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim einz, tippab, atwork, first, spt, resort, sptdat, mspdat, msp
Private Sub ComboBox5_Change()
If working Or Not startwert Then Exit Sub
wshk = working
sshk = startwert
On Error Resume Next
CommandButton7.SetFocus
If atwork = 1 Then Exit Sub
atwork = 1
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
[ee2] = ComboBox5.ListIndex + 1
[eg3:eg102].ClearContents
Sheets(aktuelleseite).Calculate
sptidx = [eg3:eg102]
anz = 0
spt = ComboBox5.ListIndex + 1
For i = 1 To 100
If tippab(i, spt) > 0 Then
anz = anz + 1
sptidx(anz, 1) = i
End If
Next
[eg3:eg102] = sptidx
Application.Calculation = xlCalculationAutomatic
[eg3:ei102].Sort key1:=[eh3], order1:=xlAscending, header:=xlNo, MatchCase:=False
sptdat = [eg3:ei102].Value
If anz > 0 Then
ListBox1.RowSource = "einstellungen!eh3:eh" & 2 + anz
For i = 1 To anz
ListBox1.Selected(i - 1) = sptdat(i, 3)
Next
Else
ListBox1.RowSource = ""
End If
anztipper.Caption = [eg1]
sollspt.Caption = [ei1]
fehlspt.Caption = [ej1]
Application.EnableEvents = True
Application.ScreenUpdating = True
atwork = 0
End Sub
Private Sub ComboBox6_Change()
If working Or Not startwert Then Exit Sub
wshk = working
sshk = startwert
On Error Resume Next
CommandButton9.SetFocus
If atwork = 1 Then Exit Sub
atwork = 1
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
[en1] = ComboBox6.ListIndex + 1
[el3:el40].ClearContents
Sheets(aktuelleseite).Calculate
msp = [ep1]
mspdat = [el3:el40]
anz = 0
For i = 1 To 38
If tippab(msp, i) > 0 Then
anz = anz + 1
mspdat(anz, 1) = i
End If
Next
[el3:el40] = mspdat
Sheets(aktuelleseite).Calculate
mspdat = [el3:em40].Value
anz_hr = [ep4].Value
anz_rr = [eq4].Value
If anz_hr > 0 Then
ListBox2.RowSource = "einstellungen!er3:er" & 2 + anz_hr
Else
ListBox2.RowSource = ""
End If
If anz_rr > 0 Then
ListBox3.RowSource = "einstellungen!er" & anz_hr + 3 & ":er" & anz_hr + anz_rr + 2
Else
ListBox3.RowSource = ""
End If
Application.Calculation = xlCalculationAutomatic
Call aktualisieren_name
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Application.EnableEvents = True
Application.ScreenUpdating = True
atwork = 0
End Sub
Private Sub CommandButton10_Click()
With Sheets("druck")
rando = Sheets("druck").PageSetup.TopMargin
anzspt = Sheets("plan").[g2]
.Range("CA2022:ce" & 2028 + anzspt).Value = Range("dt50:dx" & 56 + anzspt).Value
kasse.Hide
vollbild = Application.DisplayFullScreen
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
.Visible = True
.Range("CA2021:ce" & 2028 + anzspt).PrintOut preview:=True
.Visible = xlVeryHidden
Sheets("druck").PageSetup.TopMargin = rando
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
End With
End Sub
Private Sub CommandButton3_Click()
kasse.Tag = "OK"
kasse.Hide
End Sub
Private Sub CommandButton4_Click()
kasse.Hide
End Sub
Private Sub CommandButton5_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
For idx = 0 To [ef1] - 1
nr = sptdat(idx + 1, 1)
ListBox1.Selected(idx) = True
einz(nr, spt) = 1
Next
[cd105:do204].Value = einz
fehlspt.Caption = [ej1]
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub CommandButton6_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
For idx = 0 To [ef1] - 1
nr = sptdat(idx + 1, 1)
ListBox1.Selected(idx) = False
einz(nr, spt) = 0
Next
[cd105:do204].Value = einz
fehlspt.Caption = [ej1]
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub CommandButton7_Click()
rando = Sheets("druck").PageSetup.TopMargin
anz = [ef1]
With Sheets("druck")
kasse.Hide
vollbild = Application.DisplayFullScreen
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
.Visible = True
.Range("cg2022:cj" & 2028 + anz).PrintOut preview:=True
.Visible = xlVeryHidden
Sheets("druck").PageSetup.TopMargin = rando
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
End With
End Sub
Private Sub CommandButton9_Click()
rando = Sheets("druck").PageSetup.TopMargin
anz = [eo6]
If anz = 0 Then Exit Sub
With Sheets("druck")
kasse.Hide
vollbild = Application.DisplayFullScreen
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
.Visible = True
.Range("cl2021:cq" & 2028 + anz).PrintOut preview:=True
.Visible = xlVeryHidden
Sheets("druck").PageSetup.TopMargin = rando
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
End With
End Sub
Private Sub Label55_Click()
With Sheets("druck")
If .[cs2020] = 0 Then Exit Sub
rando = Sheets("druck").PageSetup.TopMargin
dat = .[cv2028:eg2127]
svektor = Sheets("tipps").[ca11:ca110]
For i = 1 To Sheets("tipps").[b6]
For j = 1 To 38
dat(i, j) = einz(svektor(i, 1), j)
Next
Next
.[cv2028:eg2127].Value = dat
.[ct2020] = 2
anzhs = Sheets("plan").[g2] / 2
.Range(.Cells(1, 100), .Cells(1, 99 + anzhs)).EntireColumn.Hidden = True
kasse.Hide
vollbild = Application.DisplayFullScreen
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
.Visible = True
.Range(.Cells(2022, 97), .Cells(2027 + .[cs2020], 99 + 2 * anzhs)).PrintOut preview:=True
.Visible = xlVeryHidden
.Range(.Cells(1, 99), .Cells(1, 136)).EntireColumn.Hidden = False
.[cv2028:eg2127].ClearContents
Sheets("druck").PageSetup.TopMargin = rando
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
End With
End Sub
Private Sub Label56_Click()
With Sheets("druck")
If .[cs2020] = 0 Then Exit Sub
rando = Sheets("druck").PageSetup.TopMargin
dat = .[cv2028:eg2127]
svektor = Sheets("tipps").[ca11:ca110]
For i = 1 To Sheets("tipps").[b6]
For j = 1 To 38
dat(i, j) = einz(svektor(i, 1), j)
Next
Next
.[cv2028:eg2127].Value = dat
.[ct2020] = 1
anzhs = Sheets("plan").[g2] / 2
kasse.Hide
vollbild = Application.DisplayFullScreen
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = False
.Visible = True
.Range(.Cells(2022, 97), .Cells(2027 + .[cs2020], 99 + anzhs)).PrintOut preview:=True
.Visible = xlVeryHidden
.[cv2028:eg2127].ClearContents
Sheets("druck").PageSetup.TopMargin = rando
If Int(Val(Application.Version)) > 11 And vollbild Then Application.DisplayFullScreen = True
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
kasse.Show
working = working_shk
End With
End Sub
Private Sub Label57_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
anz = [ep4]
For i = 0 To anz - 1
nr = mspdat(i + 1, 1)
einz(msp, nr) = 1
Next
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub Label59_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
anz = [ep4]
For i = 0 To anz - 1
nr = mspdat(i + 1, 1)
einz(msp, nr) = 0
Next
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub Label60_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
anz = [eq4]
For i = 0 To anz - 1
nr = mspdat(i + 1 + [ep4], 1)
einz(msp, nr) = 0
Next
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub Label61_Click()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
anz = [eq4]
For i = 0 To anz - 1
nr = mspdat(i + 1 + [ep4], 1)
einz(msp, nr) = 1
Next
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub ListBox1_Change()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
idx = ListBox1.ListIndex
nr = sptdat(idx + 1, 1)
If ListBox1.Selected(idx) = True Then
einz(nr, spt) = 1
Else
einz(nr, spt) = 0
End If
[cd105:do204].Value = einz
fehlspt.Caption = [ej1]
Call aktualisieren_name
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub ListBox2_Change()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
idx = ListBox2.ListIndex
nr = mspdat(idx + 1, 1)
If ListBox2.Selected(idx) = True Then
einz(msp, nr) = 1
Else
einz(msp, nr) = 0
End If
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub ListBox3_Change()
If atwork = 1 Then Exit Sub
atwork = 1
Application.ScreenUpdating = False
idx = ListBox3.ListIndex
nr = mspdat(idx + 1 + [ep4], 1)
If ListBox3.Selected(idx) = True Then
einz(msp, nr) = 1
Else
einz(msp, nr) = 0
End If
[cd105:do204].Value = einz
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
Call aktualisieren_spt
atwork = 0
Application.ScreenUpdating = True
End Sub
Private Sub MultiPage2_Change()
On Error Resume Next
If MultiPage2.Value = 1 Then
CommandButton7.SetFocus
ElseIf MultiPage2.Value = 2 Then
CommandButton9.SetFocus
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
einz = [cd105:do204].Value
tippab = [cd3:do102].Value
spt = 1
ComboBox5.ListIndex = 0
For i = 1 To 100
For j = 1 To 38
If tippab(i, j) > 0 And Len(einz(i, j)) = 0 Then einz(i, j) = 0
Next
Next
working = False
startwert = True
If Sheets("tipps").[b6] > 0 Then ComboBox6.ListIndex = 0
Application.ScreenUpdating = True
End Sub
Sub aktualisieren_name()
mspdat = [el3:em40].Value
anz_hr = [ep4].Value
anz_rr = [eq4].Value
For i = 1 To anz_hr
If mspdat(i, 2) = 1 Then
ListBox2.Selected(i - 1) = True
Else
ListBox2.Selected(i - 1) = False
End If
Next
For i = anz_hr + 1 To anz_hr + anz_rr
If mspdat(i, 2) = 1 Then
ListBox3.Selected(i - 1 - anz_hr) = True
Else
ListBox3.Selected(i - 1 - anz_hr) = False
End If
Next
anzhr.Caption = [ep4]
gezhr.Caption = [ep5]
anzrr.Caption = [eq4]
gezrr.Caption = [eq5]
End Sub
Sub aktualisieren_spt()
sptdat = [eg3:ei102].Value
anz = [ef1]
For i = 1 To anz
ListBox1.Selected(i - 1) = sptdat(i, 3)
Next
anztipper.Caption = [eg1]
sollspt.Caption = [ei1]
fehlspt.Caption = [ej1]
End Sub
Attribute VB_Name = "plan_k"
Attribute VB_Base = "0{7947B29B-1709-4F6B-9B30-936F3D2922B2}{E0898393-D2E4-4E8F-91BD-DA481D498142}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim rrr, rrrst, rrstart, first, ofsr4
Private Sub CommandButton1_Click()
plan_k.Hide
End Sub
Private Sub CheckBox1_Click()
Set p = Sheets("plan")
If CheckBox1 Then
p.[ad2] = 1
CheckBox2.Enabled = True
CommandButton4.ControlTipText = "|fffd|bernimmt die angezeigten Paarungen f|fffd|r den gew|fffd|hlten Spieltag und die R|fffd|ckrunde"
Else
p.[ad2] = 0
CheckBox2.Enabled = False
CommandButton4.ControlTipText = "|fffd|bernimmt die angezeigten Paarungen f|fffd|r den gew|fffd|hlten Spieltag"
End If
Application.EnableEvents = False
If ComboBox1.ListIndex + 1 > p.[ad3] Then ComboBox1.ListIndex = p.[ad3] - 1
plan_k.ComboBox1.RowSource = "plan!w44:w" & p.[ad3] + 43
Application.EnableEvents = True
ComboBox1.ListIndex = ComboBox1.ListIndex
plan_k.CommandButton3.Enabled = p.Range("kontr_plan_hand")
End Sub
Private Sub CheckBox2_Click()
spt = ComboBox1.ListIndex + 1
If Not CheckBox1 Then
ComboBox2.Enabled = False
ComboBox2.ListIndex = -1
ElseIf CheckBox2 Then
ComboBox2.Enabled = True
Sheets("plan").[ad4] = 1
If Len(rrr(spt, 1)) = 0 Then
If Len(rrrst(spt, 1)) = 0 Then
ComboBox2.ListIndex = ComboBox1.ListIndex
Else
ComboBox2.ListIndex = rrrst(spt, 1) - rrstart - ofsr4
End If
Else
ComboBox2.ListIndex = rrr(spt, 1) - rrstart - ofsr4
End If
Else
Sheets("plan").[ad4] = 0
ComboBox2.Enabled = False
ComboBox2.ListIndex = ComboBox1.ListIndex
End If
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If plan_k.ComboBox1.ListIndex = -1 Then Exit Sub
Set p = Sheets("plan")
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
anzahl = p.Range("anz_paar")
spt = plan_k.ComboBox1.ListIndex
For i = 1 To 10
If i <= anzahl Then
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption = p.Cells(spt * p.Range("anz_paar") + i + 2, 35)
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Enabled = True
plan_k.Controls("label" & Format(i * 2, "0")).Caption = p.Cells(spt * p.Range("anz_paar") + i + 2, 36)
plan_k.Controls("label" & Format(i * 2, "0")).Enabled = True
Else
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption = ""
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Enabled = False
plan_k.Controls("label" & Format(i * 2, "0")).Caption = ""
plan_k.Controls("label" & Format(i * 2, "0")).Enabled = False
End If
Next
spt = spt + 1
If Not CheckBox1 Then
ComboBox2.Enabled = False
ComboBox2.ListIndex = -1
ElseIf CheckBox2 Then
If Len(rrr(spt, 1)) = 0 Then
If Len(rrrst(spt, 1)) = 0 Then
ComboBox2.ListIndex = ComboBox1.ListIndex
Else
ComboBox2.ListIndex = rrrst(spt, 1) - rrstart - ofsr4
End If
Else
ComboBox2.ListIndex = rrr(spt, 1) - rrstart - ofsr4
End If
Else
ComboBox2.ListIndex = ComboBox1.ListIndex
End If
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
anzahl = Range("anz_paar")
For i = 1 To 20
If i / 2 <= anzahl Then
plan_k.Controls("label" & Format(i, "0")).Caption = ""
plan_k.Controls("label" & Format(i, "0")).Enabled = True
Else
plan_k.Controls("label" & Format(i, "0")).Caption = ""
plan_k.Controls("label" & Format(i, "0")).Enabled = False
End If
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
plan_k.CommandButton3.Enabled = False
End Sub
Private Sub CommandButton3_Click()
aw = MsgBox("In der Testversion kann der Spielplan nicht ge|fffd|ndert werden...", vbInformation, "Tippspiel XXL - TESTVERSION")
plan_k.Tag = "xxx"
plan_k.Hide
End Sub
Private Sub CommandButton4_Click()
anzpaar = Sheets("plan").Range("anz_paar")
Set p = Sheets("plan")
spt = ComboBox1.ListIndex + 1
With plan_k
z = .ComboBox1.ListIndex * anzpaar + 2
z2 = z + p.[t1]
If p.[ad4] = 1 Then z2 = p.[t1] + (ComboBox2.ListIndex * anzpaar) + 2
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
For i = 1 To anzpaar
p.Cells(z + i, 35) = plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption
p.Cells(z + i, 36) = plan_k.Controls("label" & Format(i * 2, "0")).Caption
If p.[ad2] = 1 Then
p.Cells(z2 + i, 36) = plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption
p.Cells(z2 + i, 35) = plan_k.Controls("label" & Format(i * 2, "0")).Caption
End If
Next
ad4ru = 0
If p.[e1] = 10 Then ad4ru = 9
If CheckBox1 Then
rrr(ComboBox1.ListIndex + 1, 1) = rrstart + ComboBox2.ListIndex + ad4ru
Sheets("plan").Cells(spt + 28, 57) = rrstart + ComboBox2.ListIndex + ad4ru
Else
rrr(ComboBox1.ListIndex + 1, 1) = rrstart + ComboBox1.ListIndex + ad4ru
Sheets("plan").Cells(spt + 28, 57) = rrstart + ComboBox1.ListIndex + ad4ru
End If
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End With
Label80.Caption = p.[ap25]
Label81.Caption = p.[ap26]
Label84.Caption = p.[ap27]
Label85.Caption = p.[au27]
Label90.Caption = p.[az27]
If p.Range("kontr_plan_hand") <> 1 Then
plan_k.CommandButton3.Enabled = False
Else
plan_k.CommandButton3.Enabled = True
End If
End Sub
Private Sub CommandButton5_Click()
Set p = Sheets("plan")
rr = p.[g2] / 2 + 1
With plankontrolle
.ListBox1.RowSource = "plan!ap29:aq" & p.[g2] / 2 + 28
.ListBox2.RowSource = "plan!ap" & 28 + rr & ":aq" & p.[g2] + 28
If p.[ap26] > 0 Then
.CommandButton1.Enabled = True
Else
.CommandButton1.Enabled = False
End If
End With
plan_k.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
plankontrolle.Show
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
plan_k.Show
working = working_shk
Unload plankontrolle
End Sub
Private Sub CommandButton6_Click()
aw = MsgBox("Sollen wirklich alle bisher eingegebenen Spieltage gel|fffd|scht werden?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
Sheets("plan").[ai3:aj382].ClearContents
For i = 1 To 20
Controls("laBEL" & i).Caption = ""
Next
Set p = Sheets("plan")
Label80.Caption = p.[ap25]
Label81.Caption = p.[ap26]
Label84.Caption = p.[ap27]
Label85.Caption = p.[au27]
Label90.Caption = p.[az27]
If Range("kontr_plan_hand") <> 1 Then
plan_k.CommandButton3.Enabled = False
Else
plan_k.CommandButton3.Enabled = True
End If
End Sub
Private Sub CommandButton7_Click()
Set p = Sheets("plan")
aw = MsgBox("Die bisher f|fffd|r diesen Spielplan editierten Paarungen werden unwiderruflich durch die zuletzt als Sicherungskopie gespeicherten Daten ersetzt." & " M|fffd|chten Sie den Vorgang fortsetzen?", vbYesNo, "Bitte best|fffd|tigen ...")
If aw <> 6 Then Exit Sub
Set ss = Sheets("spielplaene")
ss.[an1] = Sheets("plan").[i21].Value
Sheets("plan").[ai3:aj382].Value = ss.[an2:ao381].Value
Label80.Caption = p.[ap25]
Label81.Caption = p.[ap26]
Label84.Caption = p.[ap27]
Label85.Caption = p.[au27]
Label90.Caption = p.[az27]
If Range("kontr_plan_hand") <> 1 Then
plan_k.CommandButton3.Enabled = False
Else
plan_k.CommandButton3.Enabled = True
End If
spt = ComboBox1.ListIndex
ComboBox1.ListIndex = -1
ComboBox1.ListIndex = spt
End Sub
Private Sub CommandButton8_Click()
UserForm25.ListBox1.RowSource = "plan!e2:e" & 1 + Sheets("plan").[e1]
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
serForm25.Show
working = working_shk
Unload UserForm25
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Set p = Sheets("plan")
anzahl = p.Range("anz_paar")
spt = plan_k.ComboBox1.ListIndex
For i = 1 To 10
If i <= anzahl Then
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption = p.Cells(spt * p.Range("anz_paar") + i + 2, 35)
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Enabled = True
plan_k.Controls("label" & Format(i * 2, "0")).Caption = p.Cells(spt * p.Range("anz_paar") + i + 2, 36)
plan_k.Controls("label" & Format(i * 2, "0")).Enabled = True
Else
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Caption = ""
plan_k.Controls("label" & Format((i - 1) * 2 + 1, "0")).Enabled = False
plan_k.Controls("label" & Format(i * 2, "0")).Caption = ""
plan_k.Controls("label" & Format(i * 2, "0")).Enabled = False
End If
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub Image1_Click()
txt = "Wenn die Option 'R|fffd|ckrunde automatisch generieren' gew|fffd|hlt wird, m|fffd|ssen nur die Paarungen der Hinrunde editiert werden."
txt = txt & Chr(13) & "Dies ist m|fffd|glich, wenn die R|fffd|ckrunden-Spieltage denen der Hinrunde mit getauschtem Heimrecht entsprechen."
txt = txt & Chr(13) & "Falls die Paarungen identisch sind. die REIHENFOLGE der R|fffd|ckrunden-Spieltage jedoch von der der Hinrunde abweicht"
txt = txt & ", aktivieren Sie zus|fffd|tzlich die Option 'R|fffd|ckrundenspieltage in anderer Reihenfolge'. "
txt = txt & "Sie k|fffd|nnen dann beim Editieren der Hinrunde angeben, wann der aktuell bearbeitete Spieltag in der R|fffd|ckrunde stattfinden wird."
txt = txt & Chr(13) & "Die R|fffd|ckrunde muss nur komplett eingegeben werden, wenn deren Paarungszusammenstellung von der der Hinrunde abweicht."
txt = txt & Chr(13) & "Deaktivieren Sie in diesem Fall die Option 'R|fffd|ckrunde automatisch generieren'."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub Label2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(2, Data.GetText)
End Sub
Private Sub Label2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(1, Data.GetText)
End Sub
Private Sub Label3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(3, Data.GetText)
End Sub
Private Sub Label4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(4, Data.GetText)
End Sub
Private Sub Label5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(5, Data.GetText)
End Sub
Private Sub Label6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label6.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label6.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label6_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label6_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(6, Data.GetText)
End Sub
Private Sub Label7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label7.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label7.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label7_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label7_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(7, Data.GetText)
End Sub
Private Sub Label8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label8.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label8.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label8_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label8_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(8, Data.GetText)
End Sub
Private Sub Label9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label9.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label9.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label9_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label9_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(9, Data.GetText)
End Sub
Private Sub Label10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label10.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label10.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label10_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label10_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(10, Data.GetText)
End Sub
Private Sub Label11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label11.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label11.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label11_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label11_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(11, Data.GetText)
End Sub
Private Sub Label12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label12.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label12.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label12_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label12_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(12, Data.GetText)
End Sub
Private Sub Label13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label13.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label13.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label13_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label13_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(13, Data.GetText)
End Sub
Private Sub Label14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label14.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label14.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label14_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label14_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(14, Data.GetText)
End Sub
Private Sub Label15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label15.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label15.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label15_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label15_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(15, Data.GetText)
End Sub
Private Sub Label16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label16.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label16.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label16_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label16_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(16, Data.GetText)
End Sub
Private Sub Label17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label17.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label17.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label17_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label17_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(17, Data.GetText)
End Sub
Private Sub Label18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label18.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label18.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label18_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label18_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(18, Data.GetText)
End Sub
Private Sub Label19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label19.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label19.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label19_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label19_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(19, Data.GetText)
End Sub
Private Sub Label20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label20.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label20.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label20_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label20_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(20, Data.GetText)
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox1.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Sub Drop(nr, txt)
plan_k.Controls("Label" & Format(nr, "0")).Caption = txt
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
For i = 1 To 20
If plan_k.Controls("label" & Format(i, "0")).Caption = txt And i <> nr Then
plan_k.Controls("label" & Format(i, "0")).Caption = ""
End If
Next
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Set p = Sheets("plan")
anzrr = Sheets("plan").[g2] / 2
ofsr4 = Sheets("plan").[bp27]
rrstart = Sheets("plan").[ad5]
rrr = Sheets("plan").Range("be29:be" & 28 + anzrr).Value
rrrst = Sheets("plan").Range("bf29:bf" & 28 + anzrr).Value
With plan_k
.ListBox1.RowSource = "plan!e2:e" & 1 + p.[e1]
.ComboBox1.RowSource = "plan!w44:w" & 43 + p.[ad3]
.ComboBox2.RowSource = "plan!w" & p.[ad5] + 43 & ":w" & 42 + p.[ad5] + p.[ad3]
.CheckBox1.Value = p.[ad2]
.Label84.Caption = p.[ap27]
.Label85.Caption = p.[au27]
.Label90.Caption = p.[az27]
.Label80.Caption = p.[ap25]
.Label81.Caption = p.[ap26]
ComboBox1.ListIndex = 0
If p.[ad2] = 1 Then .CheckBox2.Enabled = True
If p.[ad4] = 1 And p.[ad2] = 1 Then
.CheckBox2.Value = True
.ComboBox2.Enabled = True
Else
.CheckBox2.Value = False
.ComboBox2.Enabled = False
End If
End With
ComboBox1.ListIndex = 0
If p.Range("kontr_plan_hand") <> 1 Then
plan_k.CommandButton3.Enabled = False
Else
plan_k.CommandButton3.Enabled = True
End If
Application.ScreenUpdating = True
working = False
startwert = True
ComboBox1.ListIndex = -1
ComboBox1.ListIndex = 0
End Sub
Attribute VB_Name = "plan_s"
Attribute VB_Base = "0{CC1EDB41-C1B0-4C28-B930-7673404F6AA2}{A025A4CA-EF82-4445-8932-13BCA727A951}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
plan_s.Hide
End Sub
Private Sub CommandButton2_Click()
Set p = Sheets("plan")
zellen = Array("n4", "n18", "n5", "n19", "n6", "n20", "n7", "n21", "n8", "n22", "n9", "n23", "n10", "n24", "n11", "n25", "n12", "n26", "n13", "n27", "n14", "n28", "n15", "n29")
zellen2 = Array("y3", "z3", "y4", "z4", "y5", "z5", "y6", "z6", "y7", "z7", "y8", "z8", "y9", "z9", "y10", "z10", "y11", "z11", "y12", "z12", "y13", "z13", "y14", "z14")
zellen3 = Array("aa44", "ab44", "aa45", "ab45", "aa46", "ab46", "aa47", "ab47", "aa48", "ab48", "aa49", "ab49", "aa50", "ab50", "aa51", "ab51", "aa52", "ab52", "aa53", "ab53", "aa54", "ab54", "aa55", "ab55")
anzahl = p.Range("anz_paar")
p.Range("n4:n15") = ""
p.Range("n18:n29") = ""
For i = 1 To 18
If i / 2 <= anzahl Then
plan_s.Controls("label" & Format(i, "0")).Caption = p.Range(zellen(i - 1))
plan_s.Controls("label" & Format(i, "0")).Enabled = True
plan_s.Controls("label" & Format(i + 24, "0")).Caption = p.Range(zellen2(i - 1))
plan_s.Controls("label" & Format(i + 24, "0")).Enabled = True
plan_s.Controls("label" & Format(i + 89, "0")).Caption = p.Range(zellen3(i - 1))
plan_s.Controls("label" & Format(i + 89, "0")).Enabled = True
Else
plan_s.Controls("label" & Format(i, "0")).Caption = ""
plan_s.Controls("label" & Format(i, "0")).Enabled = False
plan_s.Controls("label" & Format(i + 24, "0")).Caption = ""
plan_s.Controls("label" & Format(i + 24, "0")).Enabled = False
plan_s.Controls("label" & Format(i + 89, "0")).Caption = ""
plan_s.Controls("label" & Format(i + 89, "0")).Enabled = False
End If
Next
plan_s.CommandButton3.Enabled = False
End Sub
Private Sub CommandButton3_Click()
aw = MsgBox("In der Testversion kann der Spielplan nicht ge|fffd|ndert werden...", vbInformation, "Tippspiel XXL - TESTVERSION")
plan_s.Tag = "xxx"
plan_s.Hide
End Sub
Private Sub CommandButton8_Click()
UserForm25.ListBox1.RowSource = "plan!e2:e" & 1 + Sheets("plan").[e1]
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm25.Show
working = working_shk
Unload UserForm25
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set p = Sheets("plan")
With plan_s
For i = 1 To 9
.Controls("label" & (i - 1) * 2 + 1).Caption = p.Cells(i + 3, 14)
.Controls("label" & i * 2).Caption = p.Cells(i + 17, 14)
.Controls("label" & Format((i - 1) * 2 + 25, "0")).Caption = p.Cells(i + 2, 25)
.Controls("label" & Format(i * 2 + 24, "0")).Caption = p.Cells(i + 2, 26)
.Controls("label" & Format((i - 1) * 2 + 90, "0")).Caption = p.Cells(i + 43, 27)
.Controls("label" & Format(i * 2 + 89, "0")).Caption = p.Cells(i + 43, 28)
If i > p.[h2] Then
.Controls("label" & (i - 1) * 2 + 1).Enabled = False
.Controls("label" & i * 2).Enabled = False
Else
.Controls("label" & (i - 1) * 2 + 1).Enabled = True
.Controls("label" & i * 2).Enabled = True
End If
Next
End With
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Image1_Click()
txt = "Sie ben|fffd|tigen zur Erstellung des Spielplans die Paarungen der ersten 3 Spieltage. "
txt = txt & Chr(13) & Chr(13) & "Das Heimteam der 1. Paarung (H1) ist das Team, das am 2. UND 3. Spieltag ein Ausw|fffd|rtsspiel hat."
txt = txt & Chr(13) & "Ziehen sie diese Mannschaft aus der Teamliste in das blau markierte Feld. Anschlie|fffd|end ordnen Sie H1 auf die gleiche Weise den Gegner des 1. Spieltages zu (A1)."
txt = txt & Chr(13) & "Ermitteln Sie nun anhand des Spielplans den Gegner von A1 am ZWEITEN Spieltag. Dieses Team ist das Heimteam der 2.Paarung (H2). Ordnen Sie dann H2 den Gegner des 1. Spieltages zu (A2)."
txt = txt & Chr(13) & Chr(13) & "Dieses Vorgang setzt sich fort:" & Chr(13) & "Das jeweils n|fffd|chste Heimteam ist stets der Gegner des vorherigen Ausw|fffd|rtsteams am ZWEITEN Spieltag!"
txt = txt & Chr(13) & Chr(13) & "Kontrollieren Sie die Richtigkeit ihrer Angaben anhand der Paarungen die f|fffd|r Spieltag 3 angezeigt werden."
aw = MsgBox(txt, vbOKOnly, "Hinweis")
End Sub
Private Sub Label2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(2, Data.GetText)
End Sub
Private Sub Label2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label2.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label2.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label1.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label1.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(1, Data.GetText)
End Sub
Private Sub Label3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label3.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label3.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(3, Data.GetText)
End Sub
Private Sub Label4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label4.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label4.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(4, Data.GetText)
End Sub
Private Sub Label5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label5.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label5.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(5, Data.GetText)
End Sub
Private Sub Label52_Click()
End Sub
Private Sub Label6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label6.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label6.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label6_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label6_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(6, Data.GetText)
End Sub
Private Sub Label63_Click()
End Sub
Private Sub Label7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label7.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label7.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label7_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label7_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(7, Data.GetText)
End Sub
Private Sub Label8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label8.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label8.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label8_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label8_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(8, Data.GetText)
End Sub
Private Sub Label9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label9.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label9.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label9_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label9_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(9, Data.GetText)
End Sub
Private Sub Label10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label10.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label10.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label10_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label10_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(10, Data.GetText)
End Sub
Private Sub Label11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label11.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label11.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label11_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label11_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(11, Data.GetText)
End Sub
Private Sub Label12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label12.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label12.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label12_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label12_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(12, Data.GetText)
End Sub
Private Sub Label13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label13.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label13.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label13_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label13_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(13, Data.GetText)
End Sub
Private Sub Label14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label14.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label14.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label14_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label14_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(14, Data.GetText)
End Sub
Private Sub Label15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label15.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label15.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label15_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label15_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(15, Data.GetText)
End Sub
Private Sub Label16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label16.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label16.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label16_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label16_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(16, Data.GetText)
End Sub
Private Sub Label17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label17.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label17.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label17_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label17_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(17, Data.GetText)
End Sub
Private Sub Label18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label18.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label18.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label18_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label18_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(18, Data.GetText)
End Sub
Private Sub Label19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label19.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label19.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label19_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label19_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(19, Data.GetText)
End Sub
Private Sub Label20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label20.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label20.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label20_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label20_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(20, Data.GetText)
End Sub
Private Sub Label21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label21.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label21.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label21_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label21_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(21, Data.GetText)
End Sub
Private Sub Label22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label22.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label22.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label22_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label22_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(22, Data.GetText)
End Sub
Private Sub Label23_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label23.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label23.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label23_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label23_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(23, Data.GetText)
End Sub
Private Sub Label24_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Len(Label24.Caption) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText Label24.Caption
Effect = MyDataObject.StartDrag
End If
End Sub
Private Sub Label24_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
End Sub
Private Sub Label24_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
Cancel = True
Effect = 1
Call Drop(24, Data.GetText)
End Sub
Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListBox1.ListIndex = -1 Or Len(ListBox1.Value) = 0 Then Exit Sub
Dim MyDataObject As DataObject
If Button = 1 Then
Set MyDataObject = New DataObject
Dim Effect As Integer
MyDataObject.SetText ListBox1.Value
Effect = MyDataObject.StartDrag
End If
End Sub
Sub Drop(nr, txt)
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Set p = Sheets("plan")
zellen = Array("n4", "n18", "n5", "n19", "n6", "n20", "n7", "n21", "n8", "n22", "n9", "n23", "n10", "n24", "n11", "n25", "n12", "n26", "n13", "n27", "n14", "n28", "n15", "n29")
zellen2 = Array("y3", "z3", "y4", "z4", "y5", "z5", "y6", "z6", "y7", "z7", "y8", "z8", "y9", "z9", "y10", "z10", "y11", "z11", "y12", "z12", "y13", "z13", "y14", "z14")
zellen3 = Array("aa44", "ab44", "aa45", "ab45", "aa46", "ab46", "aa47", "ab47", "aa48", "ab48", "aa49", "ab49", "aa50", "ab50", "aa51", "ab51", "aa52", "ab52", "aa53", "ab53", "aa54", "ab54", "aa55", "ab55")
p.Range(zellen(nr - 1)) = txt
plan_s.Controls("Label" & Format(nr, "0")).Caption = txt
For i = 1 To 18
If plan_s.Controls("label" & Format(i, "0")).Caption = txt And i <> nr Then
plan_s.Controls("label" & Format(i, "0")).Caption = ""
p.Range(zellen(i - 1)).ClearContents
End If
Next
p.Calculate
For i = 1 To 18
plan_s.Controls("label" & Format(i + 24, "0")).Caption = p.Range(zellen2(i - 1))
plan_s.Controls("label" & Format(i + 89, "0")).Caption = p.Range(zellen3(i - 1))
Next
If Range("plan_kontrolle") <> 0 Then
plan_s.CommandButton3.Enabled = False
Else
plan_s.CommandButton3.Enabled = True
End If
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "plankontrolle"
Attribute VB_Base = "0{4C6BF992-EC94-43F0-B662-1592532FDC7E}{E0157798-8425-4295-92E2-8BA2B38C919E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub CommandButton1_Click()
Set p = Sheets("plan")
p.[au29:aw410].ClearContents
dat = p.[an3:bg22].Value
dop = p.[au29:aw410].Value
anzt = p.[e1]
anz = 0
For i = 1 To anzt
For j = 1 To anzt
If dat(i, j) > 1 Then
anz = anz + 1
dop(anz, 3) = anz
dop(anz, 1) = i
dop(anz, 2) = j
End If
Next
Next
p.[au29:aw410].Value = dop
p.[ax29:bc29].AutoFill Destination:=p.Range("ax29:bc" & 28 + anz)
dopa.ListBox1.RowSource = "plan!aw29:ba" & anz + 28
Sheets(aktuelleseite).Activate
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
plankontrolle.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
dopa.Show
working = working_shk
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
plankontrolle.Show
working = working_shk
Unload dopa
p.[au30:bw410].ClearContents
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
working = False
startwert = True
End Sub
Attribute VB_Name = "streicherg"
Attribute VB_Base = "0{348C2F8F-5EBF-4B2C-8559-1230E308BED2}{FA331169-F3B0-44FA-8DAA-98C9BFBA3499}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
anzhs = Sheets("plan").[g2] / 2
sumrang = anzhs - ComboBox1.ListIndex
Label11.Caption = "(Rangliste wird aus den " & sumrang & " besten Tagesergebnissen ermittelt)"
CommandButton2.SetFocus
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
anzhs = Sheets("plan").[g2] / 2
sumrang = anzhs - ComboBox2.ListIndex
Label12.Caption = "(Rangliste wird aus den " & sumrang & " besten Tagesergebnissen ermittelt)"
CommandButton2.SetFocus
End Sub
Private Sub ComboBox3_Change()
If working Or Not startwert Then Exit Sub
On Error Resume Next
anz = Sheets("plan").[g2]
sumrang = anz - ComboBox3.ListIndex
Label15.Caption = "(Rangliste wird aus den " & sumrang & " besten Tagesergebnissen ermittelt)"
CommandButton2.SetFocus
End Sub
Private Sub CommandButton1_Click()
streicherg.Hide
End Sub
Private Sub CommandButton2_Click()
Set p = Sheets("plan")
anzhs = Sheets("plan").[g2] / 2
anz = Sheets("plan").[g2]
w = anzhs - ComboBox1.ListIndex
p.[f32] = w
w = anzhs - ComboBox2.ListIndex
p.[f33] = w
w = anz - ComboBox3.ListIndex
p.[f34] = w
streicherg.Hide
End Sub

Private Sub UserForm_Activate()
working = False
startwert = True

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "tagerg_sp"
Attribute VB_Base = "0{9E851F2E-36F9-4330-9DED-86C8D4C16EDD}{FDC5AEDD-213D-4EEA-9737-9D6016EDD8AD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, anzmsp
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
anzmsp = Sheets("tipps").[b6]
tagerg = Sheets("tagerg").[b3:ao102]
ausz = Sheets("tagerg").[bd3:bh42]
dat = Sheets("tagerg").[b1106:i1205]
namen = Sheets("tipps").[bz11:bz110]
za = 1
If ComboBox1.ListIndex = 2 Then za = Sheets("plan").[g2] / 2 + 1
ze = Sheets("plan").[g2]
If ComboBox1.ListIndex = 1 Then ze = Sheets("plan").[g2] / 2
For i = 1 To anzmsp
dat(i, 1) = namen(i, 1)
For j = 2 To 8
dat(i, j) = 0
Next
For j = za To ze
If tagerg(i, j) > 0 And tagerg(i, j) < 6 Then
dat(i, 1 + tagerg(i, j)) = dat(i, 1 + tagerg(i, j)) + 1
dat(i, 8) = dat(i, 8) + ausz(j, tagerg(i, j))
End If
Next
Next
Sheets("tagerg").[b106:i205] = dat
ListBox1.RowSource = "tagerg!b106:i" & 105 + anzmsp
Call sortlist(9)
On Error Resume Next
CommandButton1.SetFocus
End Sub
Private Sub CommandButton1_Click()
anz = [b6]
ber = Range("b103:i" & anz + 105).Address
tagerg_sp.Hide
Sheets("tagerg").[b104] = ComboBox1.Value
Call showhtml("tagerg", ber, 16, "Gewinne_" & ComboBox1.Value)
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tagerg_sp.Show
working = working_shk
Application.Calculation = xlCalculationManual
End Sub
Private Sub Label1_Click()
Call sortlist(2)
End Sub
Private Sub Label2_Click()
Call sortlist(3)
End Sub
Private Sub Label3_Click()
Call sortlist(4)
End Sub
Private Sub Label4_Click()
Call sortlist(5)
End Sub
Private Sub Label5_Click()
Call sortlist(6)
End Sub
Private Sub Label6_Click()
Call sortlist(7)
End Sub
Private Sub Label7_Click()
Call sortlist(9)
End Sub
Sub sortlist(s)
If s = 2 Then
Sheets("tagerg").Range("b106:i" & 105 + anzmsp).Sort key1:=Sheets("tagerg").Cells(106, s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
Sheets("tagerg").Range("b106:i" & 105 + anzmsp).Sort key1:=Sheets("tagerg").Cells(106, s), order1:=xlDescending, Key2:=Sheets("tagerg").[b106], Order2:=xlAscending, header:=xlNo, MatchCase:=False
End If
n = s - 1
If s = 9 Then n = n - 1
For i = 1 To 7
Controls("label" & i).BackColor = &H8000000F
If n = i Then Controls("label" & i).BackColor = &H80C0FF
Next
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
ComboBox1.RowSource = "tagerg!k105:k107"
ComboBox1.ListIndex = 0
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "tageserg"
Attribute VB_Base = "0{C12A8D45-56A3-490C-B66D-977EB3385343}{26FB7B66-D21A-4975-9338-EEBB8B14EF4B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
working = False
startwert = True
End Sub
Attribute VB_Name = "teamstats"
Attribute VB_Base = "0{59693821-2AB0-4DF7-B53A-EE097341B8A0}{8A54673F-26B0-4B1B-8988-09D77B14181D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim atwork, first
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If teamstats.Visible = False Then Exit Sub
If atwork = 1 Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
atwork = 1
Application.EnableEvents = False
Application.ScreenUpdating = False
Set d = Sheets("data")
With Sheets("teamausw")
.[n26] = ComboBox1.Value
idx = Sheets("tipps").Range("ca" & 11 + ComboBox1.ListIndex).Value
tippdata = .[f2:h381].Value
tipps = d.Range(d.Cells(2, idx + 2), d.Cells(1141, idx + 2)).Value
nr = 0
For j = 1 To 1140 Step 3
nr = nr + 1
tippdata(nr, 1) = tipps(j, 1)
tippdata(nr, 2) = tipps(j + 1, 1)
tippdata(nr, 3) = tipps(j + 2, 1)
Next
tanz = Sheets("plan").[e1]
.Range("f2:h381").Value = tippdata
.Calculate
s = .[m24]
End With
Call sortieren(s)
Application.EnableEvents = True
Application.ScreenUpdating = True
atwork = 0
ListBox1.SetFocus
End Sub
Sub sortieren(s)
tanz = Sheets("plan").[e1]
With Sheets("teamausw")
.[m24] = s
.Calculate
For i = 1 To 7
Controls("s" & i).ForeColor = &H0&
If i = s Then Controls("s" & i).ForeColor = &HFF&
Next
If s = 1 Then
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlAscending, header:=xlNo, MatchCase:=False
Else
If s > 2 Then s = s + 5
.Range("l29:x" & 28 + tanz).Sort key1:=.Cells(29, 12 + s), order1:=xlDescending, header:=xlNo, MatchCase:=False
End If
.Calculate
End With
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If teamstats.Visible = False Then Exit Sub
If ComboBox2.ListIndex = -1 Then Exit Sub
If atwork = 1 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
atwork = 1
s = Sheets("teamausw").[m24]
Sheets("teamausw").[m23] = ComboBox2.ListIndex
Call sortieren(s)
atwork = 0
ListBox1.SetFocus
If ComboBox2.ListIndex = 0 Then
Label13.Caption = "Die Liste beinhaltet nur die Heimspiele der einzelnen Mannschaften."
ElseIf ComboBox2.ListIndex = 1 Then
Label13.Caption = "Die Liste beinhaltet nur die Ausw|fffd|rtsspiele der einzelnen Mannschaften."
Else
Label13.Caption = "Die Liste beinhaltet alle Spiele der einzelnen Mannschaften."
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub CommandButton1_Click()
ber = Range("m28:s46").Address
Sheets("teamausw").[m26:m100].EntireRow.Hidden = False
teamstats.Hide
Call showhtml("teamausw", ber, 13, "Teamauswertung_" & ComboBox1.Value)
Application.Calculation = xlCalculationManual
Sheets("teamausw").[m26:m100].EntireRow.Hidden = False
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
teamstats.Show
working = working_shk
Application.CutCopyMode = False
End Sub
Private Sub s1_Click()
Call sortieren(1)
End Sub
Private Sub s2_Click()
Call sortieren(2)
End Sub
Private Sub s3_Click()
Call sortieren(3)
End Sub
Private Sub s4_Click()
Call sortieren(4)
End Sub
Private Sub s5_Click()
Call sortieren(5)
End Sub
Private Sub s6_Click()
Call sortieren(6)
End Sub
Private Sub s7_Click()
Call sortieren(7)
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
atwork = 1
Set d = Sheets("data")
tanz = Sheets("plan").[e1]
With Sheets("teamausw")
.[m23] = 2
.[m24] = 2
.[n26] = teamstats.Tag
.[b2:e381].Value = Sheets("ligatabelle").[a2:d381].Value
End With
ComboBox2.RowSource = "teamausw!l49:l51"
ComboBox2.ListIndex = 2
ListBox1.RowSource = "teamausw!m29:s" & 28 + tanz
anz = [b6]
ComboBox1.RowSource = "tipps!by11:by" & 10 + anz
atwork = 0
working = False
startwert = True
ComboBox1.ListIndex = Val(ComboBox1.Tag)
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "tipp"
Attribute VB_Base = "0{99A4ACC8-EE5A-4D84-9255-39F9CA0838D1}{49BB2BC8-BD91-4733-A259-878A8AC67E12}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first, regeln, bewertung, kriterien, zusidx, zuordnung, quotenpkt, nurquote, qp_bezug
Private Sub CheckBox1_Click()
If CheckBox1.Value = True Then
ComboBox3.Enabled = False
ComboBox3.ListIndex = ComboBox4.ListIndex
ComboBox7.Enabled = False
ComboBox7.ListIndex = ComboBox8.ListIndex
If OptionButton1.Value = True Then OptionButton2.Value = True
OptionButton1.Enabled = False
Else
OptionButton1.Enabled = True
ComboBox3.Enabled = True
If CheckBox4.Value = True Then ComboBox7.Enabled = True
End If
End Sub
Private Sub CheckBox3_Click()
End Sub
Private Sub CheckBox4_Click()
For i = 5 To 8
If CheckBox4.Value = True Then
Controls("combobox" & i).Enabled = Controls("combobox" & i - 4).Enabled
Else
Controls("combobox" & i).Enabled = False
Controls("combobox" & i).ListIndex = Controls("combobox" & i - 4).ListIndex
End If
Next
ComboBox12.Enabled = CheckBox4.Value
If Not CheckBox4 Then ComboBox12.ListIndex = ComboBox10.ListIndex
End Sub
Private Sub CheckBox6_Click()
If CheckBox6.Value = True Then
CheckBox1.Value = True
ComboBox4.Value = ComboBox1.Value
CheckBox1.Enabled = False
ComboBox4.Enabled = False
Frame4.Enabled = False
ComboBox8.Value = ComboBox5.Value
ComboBox8.Enabled = False
Else
CheckBox1.Enabled = True
ComboBox4.Enabled = True
Frame4.Enabled = True
If CheckBox4.Value = True Then ComboBox8.Enabled = True
End If
End Sub
Private Sub CheckBox7_Click()
If CheckBox7 And Sheets("plan").[f47] = 0 Then
UserForm20.OptionButton2.Value = True
UserForm20.ComboBox1.RowSource = "plan!e101:e146"
UserForm20.ComboBox1.ListIndex = qp_bezug - 5
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm20.Show
working = working_shk
With UserForm20
If .Tag <> "OK" Then
CheckBox7.Value = False
Else
qp_bezug = .ComboBox1.ListIndex + 5
If .OptionButton1 Then
quotenpkt = 1
nurquote = 0
nurqp.Visible = False
Else
quotenpkt = 2
If .CheckBox1 Then
nurquote = 1
nurqp.Visible = True
Else
nurquote = 0
nurqp.Visible = False
End If
End If
End If
End With
Unload UserForm20
ElseIf Not CheckBox7 Then
quotenpkt = 0
nurquote = 0
nurqp.Visible = False
End If
End Sub
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If Not CheckBox4 Then ComboBox5.ListIndex = ComboBox1.ListIndex
If CheckBox6 Then
ComboBox4.ListIndex = ComboBox1.ListIndex
If Not CheckBox4 Then ComboBox8.ListIndex = ComboBox1.ListIndex
End If
CommandButton1.SetFocus
End Sub
Private Sub ComboBox10_Change()
If working Or Not startwert Then Exit Sub
If Not CheckBox4 Then ComboBox12.ListIndex = ComboBox10.ListIndex
CommandButton1.SetFocus
End Sub
Private Sub ComboBox2_Change()
If working Or Not startwert Then Exit Sub
If Not CheckBox4 Then ComboBox6.ListIndex = ComboBox2.ListIndex
CommandButton1.SetFocus
End Sub
Private Sub ComboBox3_Change()
If working Or Not startwert Then Exit Sub
If OptionButton1.Value = True Then ComboBox2.ListIndex = ComboBox3.ListIndex
If Not CheckBox4 Then ComboBox7.ListIndex = ComboBox3.ListIndex
CommandButton1.SetFocus
End Sub
Private Sub ComboBox4_Change()
If working Or Not startwert Then Exit Sub
If OptionButton2.Value = True Then ComboBox2.ListIndex = ComboBox4.ListIndex
If CheckBox1.Value = True Then ComboBox3.ListIndex = ComboBox4.ListIndex
If Not CheckBox4 Then
For i = 6 To 8
Controls("combobox" & i).ListIndex = Controls("combobox" & i - 4).ListIndex
Next
End If
CommandButton1.SetFocus
End Sub
Private Sub ComboBox5_Change()
If working Or Not startwert Then Exit Sub
If CheckBox6 Then ComboBox8.ListIndex = ComboBox5.ListIndex
CommandButton1.SetFocus
End Sub
Private Sub ComboBox7_Change()
If working Or Not startwert Then Exit Sub
If OptionButton1.Value = True Then ComboBox6.Value = ComboBox7.Value
CommandButton1.SetFocus
End Sub
Private Sub ComboBox8_Change()
If working Or Not startwert Then Exit Sub
If OptionButton2.Value = True Then ComboBox6.Value = ComboBox8.Value
If CheckBox1.Value = True Then ComboBox7.Value = ComboBox8.Value
CommandButton1.SetFocus
End Sub
Private Sub CommandButton1_Click()
Application.EnableEvents = False
Application.ScreenUpdating = False
bewertung(1, 1) = ComboBox1.ListIndex + 1
bewertung(2, 1) = ComboBox2.ListIndex + 1
bewertung(3, 1) = ComboBox3.ListIndex + 1
bewertung(4, 1) = ComboBox4.ListIndex + 1
bewertung(5, 1) = -ComboBox10.ListIndex
bewertung(6, 1) = -ComboBox11.ListIndex
bewertung(8, 1) = ComboBox5.ListIndex + 1
bewertung(9, 1) = ComboBox6.ListIndex + 1
bewertung(10, 1) = ComboBox7.ListIndex + 1
bewertung(11, 1) = ComboBox8.ListIndex + 1
bewertung(12, 1) = -ComboBox12.ListIndex
bewertung(13, 1) = -ComboBox11.ListIndex
If CheckBox6 Then
regeln(1, 1) = 1
Else
regeln(1, 1) = 0
End If
If CheckBox5 Then
regeln(2, 1) = 0
Else
regeln(2, 1) = 1
End If
If CheckBox1 Then
regeln(4, 1) = 0
Else
regeln(4, 1) = 1
End If
If CheckBox4 Then
regeln(5, 1) = 1
Else
regeln(5, 1) = 0
End If
If OptionButton1 Then regeln(3, 1) = 1
If OptionButton2 Then regeln(3, 1) = 2
If OptionButton3 Then regeln(3, 1) = 3
Set p = Sheets("plan")
p.[k66:k70].Value = kriterien
p.[f42:f46].Value = regeln
p.[j49:j62].Value = bewertung
If quotenpkt = 2 And nurquote = 1 Then
p.[g49:g62].Value = 0
p.[g64] = 1
Else
p.[g49:g62].Value = bewertung
p.[g64] = 0
End If
p.[f47] = quotenpkt
p.[h63] = qp_bezug
tipp.Tag = "OK"
tipp.Hide
End Sub
Private Sub CommandButton12_Click()
For i = 1 To 5
If Len(kriterien(i, 1)) > 0 Then
UserForm4.Controls("krit" & i).Caption = kriterien(i, 1)
Else
UserForm4.Controls("krit" & i).Caption = ""
End If
Next
UserForm4.ListBox1.RowSource = "plan!i66:i72"
tipp.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm4.Show
working = working_shk
If UserForm4.Tag = "OK" Then
With Sheets("plan")
z = 0
For i = 1 To 5
tipp.Controls("krit" & i).Caption = ""
kriterien(i, 1) = Null
If Len(UserForm4.Controls("krit" & i).Caption) > 0 Then
z = z + 1
kriterien(z, 1) = UserForm4.Controls("krit" & i).Caption
tipp.Controls("krit" & z).Caption = UserForm4.Controls("krit" & i).Caption
End If
Next
End With
End If
Unload UserForm4
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tipp.Show
working = working_shk
tipp.Repaint
End Sub
Private Sub CommandButton13_Click()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Set zt = Sheets("zusatztipps")
With UserForm5
.ListBox1.RowSource = "zusatztipps!e240:k" & 239 + Sheets("zusatztipps").[e238]
For i = 1 To 6
.Controls("ztipp" & i).Caption = zt.Cells(171, 8 + i).Value
For j = 1 To 6
.Controls("cb" & i & "_" & j).Value = zt.Cells(178 + j, 8 + i).Value
Next
Next
End With
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
tipp.Hide
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm5.Show
working = working_shk
If UserForm5.Tag = "OK" Then
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
With tipp
For i = 1 To 6
z = (i - 1) * 7 + 7
nr = z + 1
For j = 1 To 5
idx = (i - 1) * 5 + j
z = z + 1
If Len(zt.Cells(nr, 4)) = 0 Then
If j <> 4 Then .Controls("zt" & idx).Caption = ""
If j = 1 Then .Controls("zt" & idx).Caption = "kein Zusatztipp festgelegt"
Else
If j <> 4 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4)
If j = 2 Then
If zt.Cells(z, 4) = 1 Then .Controls("zt" & idx).Caption = "zu tippen: " & zt.Cells(z, 4) & " Team"
If zt.Cells(z, 4) > 1 Then .Controls("zt" & idx).Caption = "zu tippen: " & zt.Cells(z, 4) & " Teams"
End If
If j = 3 Then
txt = zt.Cells(z, 4) & " " & zt.Cells(z + 1, 4)
.Controls("zt" & idx).Caption = txt
End If
If j = 5 Then
If zt.Cells(z, 4) = 1 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4) & " Punkt pro korr. Tipp"
If zt.Cells(z, 4) > 1 Then .Controls("zt" & idx).Caption = zt.Cells(z, 4) & " Punkte pro korr. Tipp"
End If
End If
Next
Next
End With
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.ScreenUpdating = True
End If
Unload UserForm5
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
tipp.Show
working = working_shk
Application.CutCopyMode = False
End Sub
Private Sub CommandButton14_Click()
With UserForm20
If nurquote = 1 Then .CheckBox1.Value = True
If quotenpkt = 1 Then
.OptionButton1.Value = True
Else
.OptionButton2.Value = True
End If
.ComboBox1.RowSource = "plan!e101:e146"
.ComboBox1.ListIndex = qp_bezug - 5
End With
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm20.Show
working = working_shk
With UserForm20
If .Tag = "OK" Then
qp_bezug = .ComboBox1.ListIndex + 5
If .OptionButton1 Then
quotenpkt = 1
nurquote = 0
nurqp.Visible = False
Else
quotenpkt = 2
If .CheckBox1 Then
nurquote = 1
nurqp.Visible = True
Else
nurquote = 0
nurqp.Visible = False
End If
End If
End If
End With
Unload UserForm20
End Sub
Private Sub CommandButton15_Click()
Set p = Sheets("plan")
With streicherg
anzhs = Sheets("plan").[g2] / 2
anz = Sheets("plan").[g2]
.ComboBox1.RowSource = "plan!d96:d" & 96 + anzhs - 2
.ComboBox2.RowSource = "plan!d96:d" & 96 + anzhs - 2
.ComboBox3.RowSource = "plan!d96:d" & 96 + anz - 2
s = anzhs - p.[f32]
If s < 0 Then s = 0
If s > anzhs - 2 Then s = anzhs - 2
.ComboBox1.ListIndex = s
s = anzhs - p.[f33]
If s < 0 Then s = 0
If s > anzhs - 2 Then s = anzhs - 2
.ComboBox2.ListIndex = s
s = anz - p.[f34]
If s < 0 Then s = 0
If s > anz - 2 Then s = anz - 2
.ComboBox3.ListIndex = s
End With
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
streicherg.Show
working = working_shk
Unload streicherg
If p.[f32] = p.[g2] / 2 And p.[f33] = p.[g2] / 2 And p.[f34] = p.[g2] Then
CommandButton15.ForeColor = &H404040
Else
CommandButton15.ForeColor = &H80&
End If
End Sub
Private Sub CommandButton2_Click()
tipp.Tag = ""
tipp.Hide
End Sub
Private Sub Image1_Click()
txt = "Beim Tippen m|fffd|ssen zwar Ergebnisse eingegeben werden, diese werden jedoch nur als"
txt = txt & " Heimsieg, Remis oder Ausw|fffd|rtssieg interpretiert und entsprechend ausgewertet."
txt = txt & " Grunds|fffd|tzlich ist es egal, welche Ergebnisse als Tipp eingegeben werden, man sollte sich jedoch inerhalb der Tippgemeinschaft auf einheitliche Ergebnisse f|fffd|r Heimsieg, Remis und Ausw|fffd|rtssieg festlegen"
txt = txt & " (z.B. 1:0, 0:0 und 0:1)."
txt = txt & Chr(13) & Chr(13) & "Tipps, deren Tendenz mit dem erspielten Ergebnis |fffd|bereinstimmen, werden als KORREKTER TIPP gewertet."
txt = txt & " Tordifferent, Remis und Trend werden nicht separat ausgewertet."
aw = MsgBox(txt, vbOKOnly, "Hinweis zu TOTO-Tipps")
End Sub
Private Sub Image2_Click()
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
UserForm21.Show
working = working_shk
Unload UserForm21
End Sub
Private Sub OptionButton1_Click()
If OptionButton3.Value = True Then
ComboBox2.Enabled = True
If CheckBox4.Value = True Then
ComboBox6.Enabled = True
Else
ComboBox6.Enabled = False
End If
Else
ComboBox2.Enabled = False
ComboBox6.Enabled = False
If OptionButton1.Value = True Then
ComboBox2.ListIndex = ComboBox3.ListIndex
ComboBox6.ListIndex = ComboBox7.ListIndex
Else
ComboBox2.ListIndex = ComboBox4.ListIndex
ComboBox6.ListIndex = ComboBox8.ListIndex
End If
End If
End Sub
Private Sub OptionButton2_Click()
If OptionButton3.Value = True Then
ComboBox2.Enabled = True
If CheckBox4.Value = True Then
ComboBox6.Enabled = True
Else
ComboBox6.Enabled = False
End If
Else
ComboBox2.Enabled = False
ComboBox6.Enabled = False
If OptionButton1.Value = True Then
ComboBox2.ListIndex = ComboBox3.ListIndex
ComboBox6.ListIndex = ComboBox7.ListIndex
Else
ComboBox2.ListIndex = ComboBox4.ListIndex
ComboBox6.ListIndex = ComboBox8.ListIndex
End If
End If
End Sub
Private Sub OptionButton3_Click()
If OptionButton3.Value = True Then
ComboBox2.Enabled = True
If CheckBox4.Value = True Then
ComboBox6.Enabled = True
Else
ComboBox6.Enabled = False
End If
Else
ComboBox2.Enabled = False
ComboBox6.Enabled = False
If OptionButton1.Value = True Then
ComboBox2.ListIndex = ComboBox3.ListIndex
ComboBox6.ListIndex = ComboBox7.ListIndex
Else
ComboBox2.ListIndex = ComboBox4.ListIndex
ComboBox6.ListIndex = ComboBox8.ListIndex
End If
End If
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
If tipp.Tag <> "first" Then Exit Sub
tipp.Tag = ""
Set p = Sheets("plan")
regeln = p.[f42:f46].Value
bewertung = p.[j49:j62].Value
kriterien = p.[k66:k70].Value
qp_bezug = p.[h63]
quotenpkt = p.[f47]
nurquote = p.[g64]
If nurquote = 1 Then nurqp.Visible = True
If quotenpkt <> 0 Then CheckBox7.Value = True
For i = 5 To 8
If CheckBox4.Value = True Then
Controls("combobox" & i).Enabled = Controls("combobox" & i - 4).Enabled
Else
Controls("combobox" & i).Enabled = False
Controls("combobox" & i).ListIndex = Controls("combobox" & i - 4).ListIndex
End If
Next
If CheckBox4.Value = True Then
ComboBox12.Enabled = True
Else
ComboBox12.Enabled = False
ComboBox12.ListIndex = ComboBox10.ListIndex
End If
If p.[f32] = p.[g2] / 2 And p.[f33] = p.[g2] / 2 And p.[f34] = p.[g2] Then
CommandButton15.ForeColor = &H404040
Else
CommandButton15.ForeColor = &H80&
End If
Set p = Nothing
Set z = Nothing
Application.ScreenUpdating = True
working = False
startwert = True
End Sub
Attribute VB_Name = "zuserg"
Attribute VB_Base = "0{DEF589CC-8C5D-4D23-8B47-D4F1E6ED0A15}{75C5640A-78EA-4547-AFB5-666C37E7D22D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim first
Private Sub ComboBox1_Change()
If working Or Not startwert Then Exit Sub
If zuserg.Visible = False Then Exit Sub
If ComboBox1.ListIndex = -1 Then Exit Sub
Application.ScreenUpdating = False
Application.EnableEvents = False
With Sheets("zusatztipps")
.[hg188] = ComboBox1.ListIndex + 1
.[hd233] = ComboBox1.Value
.Calculate
nr = 0
For i = 1 To 6
If Len(.Cells(169, i + 8)) > 0 Then
nr = nr + 1
z = (nr - 1) * 10 + 237
anzt = .Cells(172, 8 + i).Value
.Range(.Cells(z, 210), .Cells(z + 4, 213)).ClearContents
.Range(.Cells(z, 210), .Cells(z - 1 + anzt, 211)).Value = .Range(.Cells((i - 1) * 7 + 192, 210), .Cells((i - 1) * 7 + 191 + anzt, 211)).Value
.Range(.Cells(z, 212), .Cells(z - 1 + anzt, 213)).Value = .Range(.Cells((i - 1) * 7 + 192, 215), .Cells((i - 1) * 7 + 191 + anzt, 216)).Value
End If
Next
.Calculate
End With
Application.ScreenUpdating = True
Application.EnableEvents = True
ListBox1.SetFocus
End Sub
Private Sub Label20_Click()
ber = Range("ba1233:bd" & 1233 + Sheets("zusatztipps").[h168] * 10).Address
Sheets("druck").[ba1233:bd1292].Value = Sheets("zusatztipps").[hb233:he292].Value
zuserg.Hide
Call showhtml("druck", ber, 8, "ZusTipps_" & ComboBox1.Value)
Application.Calculation = xlCalculationManual
working_shk = working
working = True
If Len(aktuelleseite) = 0 Then aktuelleseite = Sheets(aktuelleseite).Name
zuserg.Show
working = working_shk
Application.CutCopyMode = False
End Sub
Private Sub UserForm_Activate()
Sheets(aktuelleseite).Activate
If first = 1 Then Exit Sub
first = 1
Application.ScreenUpdating = False
If Sheets("data").[b7168] > 1 And Sheets("einstellungen").[g1] = True Then
Zoom = 100 * Sheets("data").[b7168]
Width = Width * Sheets("data").[b7168]
Height = Height * Sheets("data").[b7168]
End If
Sheets("zusatztipps").[hd233] = ComboBox1.Value
ListBox1.SetFocus
working = False
startwert = True
Application.ScreenUpdating = True
End Sub


INQUEST-PP=macro
