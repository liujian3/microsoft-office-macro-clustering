Attribute VB_Name = "Module2"
Option Explicit
Sub ISTmPivotChartIndex(excelFile As String, name As String)
  
    Windows(excelFile).Activate
   
    Call zCheckSheet(name)
    Dim sheet2Name As String
    sheet2Name = ChrW(1043) & ChrW(1056) & ChrW(1040) & ChrW(1060) & ChrW(1048) & ChrW(1050) & ChrW(1054) & ChrW(1053)       '"Grafikon"
    Dim objSheet As Worksheet
    Set objSheet = Sheets(1)
    objSheet.Select
    
    Call sameHeaderRename
    
    Range("A1").Select
    Selection.End(xlUp).Select
    Selection.End(xlToLeft).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Range(Selection, Selection.End(xlDown)).Select
    
    Dim SrcData As String
    SrcData = ActiveSheet.name & "!" & Selection.Address(ReferenceStyle:=xlR1C1)
    
    Dim bk As Long
    bk = Selection.Columns.Count - 1
    Dim br As Long
    br = Selection.Rows.Count
      
    Sheets("Grafikon").Select
    Dim StartPvt As String
    StartPvt = ActiveSheet.name & "!" & ActiveSheet.Range("A1").Address(ReferenceStyle:=xlR1C1)
    
    ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:= _
            SrcData, Version:=xlPivotTableVersion12).CreatePivotTable TableDestination:= _
            StartPvt, DefaultVersion:=xlPivotTableVersion12

    Call RenameSinglePivot

    Sheets("Grafikon").Select
    Cells(1, 1).Select
    Dim rng As String
    Dim kolonaSlovo As String
    kolonaSlovo = Col_Letter(bk)
    Dim redbroj As String
    redbroj = Trim(CStr(br))
    rng = "Grafikon!$A$1:$" & kolonaSlovo & "$" & redbroj
    ActiveSheet.Shapes.AddChart(201, xlColumnClustered).Select
    Dim odakle As String
    odakle = Col_Letter(bk + 3) & Trim(CStr(2))
    With ActiveChart.Parent
          .Top = Range(odakle).Top
          .Left = Range(odakle).Left
    End With
    ActiveChart.SetSourceData Source:=Range(rng)
    ActiveChart.ChartType = xlLine
    
    Set objSheet = Sheets(1)
    Dim intLastCellIndexInRow As Long
    intLastCellIndexInRow = bk
    Dim i As Long
    Dim strRowValue As String
    
    'A1
     strRowValue = objSheet.Cells(ActiveCell.Row, 1)
     
     With ActiveChart.PivotLayout.PivotTable.PivotFields(strRowValue)
        .Orientation = xlRowField
        .Position = 1
     End With

    'ostali
    For i = 2 To intLastCellIndexInRow + 1
        strRowValue = objSheet.Cells(ActiveCell.Row, i)
        ActiveChart.PivotLayout.PivotTable.AddDataField ActiveChart.PivotLayout.PivotTable.PivotFields(strRowValue), " " + strRowValue, xlSum
    Next
        

    'OVO NE RADI   ActiveChart.SeriesCollection(1).name = name
    ActiveChart.Legend.Select
    Selection.Delete

    With ActiveSheet.PivotTables("GrafikonTable1")
        .ColumnGrand = False
        .RowGrand = False
    End With
    ActiveChart.ChartTitle.Text = name
    
       Dim objSheet0 As Worksheet
    Set objSheet0 = Sheets(name)
    objSheet0.Select
    Dim fff As String
    fff = objSheet.Cells(ActiveCell.Row, 1)
    
    
      Sheets("Grafikon").Select
    ActiveSheet.PivotTables("GrafikonTable1").CompactLayoutRowHeader = fff
    'A1
    strRowValue = objSheet.Cells(ActiveCell.Row, 1)
    odakle = Col_Letter(3) & Trim(CStr(11))
    
    If GetVersion > 12 Then Call create_slicer(strRowValue, odakle)
    
    Sheets(name).Select
    Rows("1:1").Select
    Selection.AutoFilter
    
    Rows("1:1").Select
    Selection.Font.Bold = True
    
    Columns("A:A").Select
    Selection.Font.Bold = True
    Range("A1").Select
    Sheets("Grafikon").Select
    ActiveSheet.name = sheet2Name
    
 End Sub
Function GetVersion() As Long
    GetVersion = Application.Version
End Function
 Sub sameHeaderRename()
       
    Dim start As Long
    Dim endc As Long
    start = 1
    endc = 2
    
    Application.DisplayAlerts = False
    Do While Worksheets(1).Cells(1, start).Value <> ""
      Do While Worksheets(1).Cells(1, start + 1).Value <> "" And Worksheets(1).Cells(1, endc).Value <> ""
          If Worksheets(1).Cells(1, start).Value = Worksheets(1).Cells(1, endc).Value Then
          'rename
              Worksheets(1).Cells(1, endc).Value = Worksheets(1).Cells(1, endc).Value & Col_Letter(endc)
          End If
          endc = endc + 1
      Loop
      start = start + 1
      endc = start + 1
    Loop
    
    Application.DisplayAlerts = True

End Sub
 Sub create_slicer(ByVal nazivKolone As String, ByVal odakle As String)
    Dim i As SlicerCaches
    Dim j As Slicers
    Dim k As Slicer
    
    Set i = ActiveWorkbook.SlicerCaches
    Set j = i.Add(ActiveSheet.PivotTables(1), nazivKolone, nazivKolone).Slicers
    Set k = j.Add(ActiveSheet, , nazivKolone, nazivKolone, 0, 0, 200, 200)
    k.Top = Range(odakle).Top
    k.Left = Range(odakle).Left
    k.name = "Slicer" & "_" & nazivKolone
    k.Caption = nazivKolone

End Sub
 Function Col_Letter(ByVal lngCol As Long) As String
    Dim vArr
    vArr = Split(Cells(1, lngCol).Address(True, False), "$")
    Col_Letter = vArr(0)
End Function
Sub RenameSinglePivot()
    With Sheets("Grafikon")
        .PivotTables(1).name = "GrafikonTable1"
    End With
End Sub

 Sub zCheckSheet(name As String)
  
   Dim ws As Worksheet
   On Error Resume Next
   Set ws = Worksheets("Pivot")
   If Err.Number = 9 Then
   Else
       Application.DisplayAlerts = False
       ws.Delete
       Application.DisplayAlerts = True
   End If
   Set ws = Worksheets.Add(After:=Sheets(Worksheets.Count))
   ws.name = "Grafikon"
   
   Dim objSheet As Worksheet
   Set objSheet = Sheets(1)
   objSheet.name = name
      
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' Kk*.

INQUEST-PP=macro
