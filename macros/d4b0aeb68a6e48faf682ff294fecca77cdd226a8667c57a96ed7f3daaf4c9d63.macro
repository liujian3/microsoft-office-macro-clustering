Attribute VB_Name = "Module1"
Option Explicit

Sub CustomFields()
    frmCustomFields.Show
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "frmCustomFields"
Attribute VB_Base = "0{8BF925C1-4C68-4D5C-9E99-BFAC790F1DDF}{5FB3BF2A-F890-406D-9D6D-AD14B48CF9BF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Const NameCol = 0
Const TypeCol = 1
Const ValueCol = 2

Dim blnModifed As Boolean
Dim doc As Document


Private Sub cboStatus_Change()
    blnModifed = True
End Sub

Private Sub cmdModify_Click()
    Dim str As String
    
    str = Trim(txtEditField.Text)
    If lstDocFields.ListIndex <> -1 Then
        Select Case lstDocFields.List(lstDocFields.ListIndex, TypeCol)
            Case "Date"
                If Not IsDate(str) Then
                    MsgBox "Invalid Date", vbCritical
                    Exit Sub
                End If
                
            Case "Number"
                If IsNumeric(str) Then
                    str = Val(str)
                Else
                    MsgBox "Invalid Number", vbCritical
                    Exit Sub
                End If
                
        End Select
            
        lstDocFields.List(lstDocFields.ListIndex, ValueCol) = str
        doc.CustomDocumentProperties(lstDocFields.List(lstDocFields.ListIndex, 0)).Value = str
        blnModifed = True
    End If
    
End Sub

Private Sub cmdOk_Click()
    Dim I As Integer
    On Error Resume Next
    
    cmdOk.Enabled = False
    If blnModifed Then
        Call SaveAndRefresh
    End If
    
    Unload Me
End Sub

Private Sub SaveAndRefresh()
    Dim I As Integer
    
    For I = 0 To lstDocFields.ListCount - 1
        doc.CustomDocumentProperties(lstDocFields.List(I, NameCol)).Value = lstDocFields.List(I, ValueCol)
        DoEvents
    Next I
    
    doc.CustomDocumentProperties("Status").Value = cboStatus.Value
    UpdateAllField
End Sub

Sub UpdateAllField()
    Dim ActDoc As Document
    Set ActDoc = ActiveDocument
    
    Dim I As Integer
    Dim Sec As Section
    Dim HeadFoot As HeaderFooter
    
    'Update Field in the Body of the document
    'StatusBar1.SimpleText = "Updating Document Field"
    ActDoc.Fields.Update

    'Update Field in the Headers and Footers
    For Each Sec In ActDoc.Sections
        'StatusBar1.SimpleText = "Updating Section Header & Footer Fields"
        For Each HeadFoot In Sec.Headers
            HeadFoot.Range.Fields.Update
            
        Next HeadFoot

        For Each HeadFoot In Sec.Footers
            HeadFoot.Range.Fields.Update
        Next HeadFoot
    Next Sec
    
    'Update Table of Contents
    'StatusBar1.SimpleText = "Updating Table of Contents"
    For I = 1 To ActDoc.TablesOfContents.Count
        ActDoc.TablesOfContents(I).Update
    Next I
    
    'Update Table of Figures
    'StatusBar1.SimpleText = "Updating Table of Figures"
    For I = 1 To ActDoc.TablesOfFigures.Count
        ActDoc.TablesOfFigures(I).Update
    Next I
    'StatusBar1.SimpleText = "Ready"
End Sub

Private Function PropType(ByVal intType As Integer) As String
    
    Select Case intType
        Case msoPropertyTypeBoolean
            PropType = "Boolean"
        Case msoPropertyTypeDate
            PropType = "Date"
        Case msoPropertyTypeFloat
            PropType = "Number"
        Case msoPropertyTypeNumber
            PropType = "Number"
        Case msoPropertyTypeString
            PropType = "Text"
    End Select
End Function

Private Sub lstDocFields_Click()
    Dim strTemp
   
    strTemp = lstDocFields.List(lstDocFields.ListIndex, ValueCol)
    If IsNull(strTemp) Then
        txtEditField.Text = ""
    Else
        txtEditField.Text = strTemp
    End If
End Sub

Private Sub UserForm_Initialize()
    Dim I As Integer
    Dim prop As Office.DocumentProperty
    Dim strStatus As String
    
    Set doc = ActiveDocument
    
    blnModifed = False
    
    On Error Resume Next
    For Each prop In doc.CustomDocumentProperties
        Select Case prop.Name
        
            Case "DocType", "Status"
                'Do not show these values to the end user
            Case Else
                lstDocFields.AddItem prop.Name
                lstDocFields.List(lstDocFields.ListCount - 1, TypeCol) = PropType(doc.CustomDocumentProperties(prop.Name).Type)
                lstDocFields.List(lstDocFields.ListCount - 1, ValueCol) = doc.CustomDocumentProperties(prop.Name).Value
            
                If prop.Name = "Author" And prop.Value = "Author" Then
                    lstDocFields.List(lstDocFields.ListCount - 1, ValueCol) = Application.UserName
                    blnModifed = True
                End If
                
        End Select
    Next
    
    cboStatus.AddItem "Draft"
    cboStatus.AddItem "Approved"
    cboStatus.AddItem "Revised"
    cboStatus.ListIndex = 0
    
    strStatus = ActiveDocument.CustomDocumentProperties("Status").Value
    cboStatus.Text = strStatus
    
    Exit Sub
    
errHandle:
    Debug.Print Err.Number, Err.Description
End Sub


Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    'This procedure is invoked just befor the form closes
    Dim Response As Integer
    
    If CloseMode = vbFormControlMenu Then       'The user has chosen the Close command from the Control menu on the UserForm.
        If blnModifed Then
            Response = MsgBox("Save Changes?", vbYesNo)
            If Response = vbYes Then
                Me.Hide
                Call SaveAndRefresh
            End If
        End If
    End If
End Sub

Private Sub UserForm_Terminate()
    Unload Me
End Sub


INQUEST-PP=macro
