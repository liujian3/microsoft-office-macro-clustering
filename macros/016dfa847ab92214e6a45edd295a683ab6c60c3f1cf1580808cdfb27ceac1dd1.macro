Attribute VB_Name = "ModReg"
Public Declare Function RegOpenKey Lib "advapi32.dll" Alias "RegOpenKeyA" (ByVal hKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long
Public Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, lpType As Long, lpData As Any, lpcbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value.

Public Function GetRegistrValue() As String
Dim lReturn As Long
Dim shKey As String, sSubKey As String, hKey As Long
Dim hSubKeyHandle As Long
Dim sValue As String
Dim sPar As String
Dim strSetting As String
Dim lngDataLen As Long

hKey = &H80000002   'Case "HKEY_LOCAL_MACHINE"
sSubKey = "SOFTWARE\Rassvet\Aksiok\Vfp9\VSvod"
sPar = "ProgramXls"
    
lReturn = RegOpenKey(hKey, sSubKey, hSubKeyHandle)
If lReturn <> 0 Then Exit Function
strSetting = Space(255)
lngDataLen = Len(strSetting)
lReturn = RegQueryValueEx(hSubKeyHandle, sPar, ByVal 0, REG_EXPAND_SZ, ByVal strSetting, lngDataLen)
If strSetting = Space(255) Then GetRegistrValue = "": Exit Function     '"C:\Aksiok\Prg\VSvod\Xlt\"
If lngDataLen > 1 Then sValue = Left(strSetting, lngDataLen - 1)
GetRegistrValue = sValue
End Function


Attribute VB_Name = "Module1"
Sub |fffd||fffd||fffd||fffd||fffd||fffd|1()
Attribute |fffd||fffd||fffd||fffd||fffd||fffd|1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' |fffd||fffd||fffd||fffd||fffd||fffd|1 |fffd||fffd||fffd||fffd||fffd||fffd|
'

'
    Rows("36:39").Select
    Selection.EntireRow.Hidden = False
End Sub
Attribute VB_Name = "frmAddRow"
Attribute VB_Base = "0{3FA4E6C7-6561-4507-A091-CEE270D96728}{F148AF05-CB78-4A4D-8767-F8FC64DB582A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit
''''''''''''''''''''''''''''''''''''''''''''
'**** Version 28.07.2005 *******************
''''''''''''''''''''''''''''''''''''''''''''


Public ObjectName As String
Public IsUnload As Boolean


Public Property Set ObjectDataSprav(NewObject As Object)
        
    Dim objData As Object
    Dim i As Long
    Dim ctl As Control
    Dim obj As Object
    Dim objCol As Object
    Dim iLblLeft As Long
    Dim iLblWidth As Integer
    Dim cKodR, cNameR, cDataR As String
    Dim lEmpty As Boolean
    Dim iVal As Long
    
    On Error GoTo errHandler
    
    Me.IsUnload = False
    
    iLblLeft = 5
    iLblWidth = 65
'    cKod = "Kod_"
'    cName = "Name_"
'    cData = "Data_"
    
    Set objData = NewObject
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    For Each ctl In Me.Controls
        If TypeName(ctl) <> "CommandButton" Then
            ctl.Visible = False
        End If
    Next ctl
    
    With objData
        Me.Caption = .cName
        Me.Height = .iHeight
        Me.Width = .iWidth
        
        With .SpravCollection
            If .Count > 0 Then
                For i = 1 To .Count
                    With .Item(Val(i))
                        cDataR = cData & .cSprav
                        cKodR = cKod & .cSprav
                        cNameR = cName & .cSprav
                        
                        Select Case .cControl
                            Case "cmbBSR"
                                lblBSR.Visible = True
                                lblBSR.Caption = Trim(.cName)
                                lblBSR.Height = .iLblHeight
                                lblBSR.Width = .iLblWidth
                                lblBSR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblBSR.Top = .iTop
                                cmbBSR.Visible = True
                                cmbBSR.Tag = Trim(.cSprav)
                                cmbBSR.Height = .iHeight
                                cmbBSR.Width = .iWidth
                                cmbBSR.Left = Me.Width - .iWidth - iLblLeft
                                cmbBSR.Top = .iTop
                                cmbBSR.RowSource = cDataR
                                cmbBSR.ColumnCount = .iColCount
                                cmbBSR.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    cmbBSR.Enabled = False
                                Else
                                    cmbBSR.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        cmbBSR.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        cmbBSR.ListIndex = iVal
                                    End If
                                End If
                            Case "cmbEI"
                                lblEI.Visible = True
                                lblEI.Caption = Trim(.cName)
                                lblEI.Height = .iLblHeight
                                lblEI.Width = .iLblWidth
                                lblEI.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblEI.Top = .iTop
                                cmbEI.Visible = True
                                cmbEI.Tag = Trim(.cSprav)
                                cmbEI.Height = .iHeight
                                cmbEI.Width = .iWidth
                                cmbEI.Left = Me.Width - .iWidth - iLblLeft
                                cmbEI.Top = .iTop
                                cmbEI.RowSource = cDataR
                                cmbEI.ColumnCount = .iColCount
                                cmbEI.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    cmbEI.Enabled = False
                                Else
                                    cmbEI.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        cmbEI.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        cmbEI.ListIndex = iVal
                                    End If
                                End If
                            Case "listORG"
                                lblORG.Visible = True
                                lblORG.Caption = Trim(.cName)
                                lblORG.Height = .iLblHeight
                                lblORG.Width = .iLblWidth
                                lblORG.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblORG.Top = .iTop
                                listORG.Visible = True
                                listORG.Tag = Trim(.cSprav)
                                listORG.Height = .iHeight
                                listORG.Width = .iWidth
                                listORG.Left = Me.Width - .iWidth - iLblLeft
                                listORG.Top = .iTop
                                listORG.RowSource = cDataR
                                listORG.ColumnCount = .iColCount
                                listORG.ColumnWidths = .cColWidths
                                
                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                lEmpty = EmptySpr(cDataR)
                                If lEmpty = True Then
                                    listORG.Enabled = False
                                Else
                                    listORG.Enabled = True
                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listORG.ListIndex = 0
                                    Else
                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
                                        listORG.ListIndex = iVal
                                    End If
                                End If
                            Case "listFKR"
                                lblFKR.Visible = True
                                lblFKR.Caption = Trim(.cName)
                                lblFKR.Height = .iLblHeight
                                lblFKR.Width = .iLblWidth
                                lblFKR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblFKR.Top = .iTop
                                listFKR.Visible = True
                                listFKR.Tag = Trim(.cSprav)
                                listFKR.Height = .iHeight
                                listFKR.Width = .iWidth
                                listFKR.Left = Me.Width - .iWidth - iLblLeft
                                listFKR.Top = .iTop
                                listFKR.RowSource = cDataR
                                listFKR.ColumnCount = .iColCount
                                listFKR.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listFKR.Enabled = False
'                                Else
'                                    listFKR.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listFKR.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listFKR.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listPLS"
                                lblPLS.Visible = True
                                lblPLS.Caption = Trim(.cName)
                                lblPLS.Height = .iLblHeight
                                lblPLS.Width = .iLblWidth
                                lblPLS.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblPLS.Top = .iTop
                                listPLS.Visible = True
                                listPLS.Tag = Trim(.cSprav)
                                listPLS.Height = .iHeight
                                listPLS.Width = .iWidth
                                listPLS.Left = Me.Width - .iWidth - iLblLeft
                                listPLS.Top = .iTop
                                listPLS.RowSource = cDataR
                                listPLS.ColumnCount = .iColCount
                                listPLS.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listPLS.Enabled = False
'                                Else
'                                    listPLS.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listPLS.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listPLS.ListIndex = iVal
'                                    End If
'                                End If
                            Case "listSGU"
                                lblSGU.Visible = True
                                lblSGU.Caption = Trim(.cName)
                                lblSGU.Height = .iLblHeight
                                lblSGU.Width = .iLblWidth
                                lblSGU.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblSGU.Top = .iTop
                                listSGU.Visible = True
                                listSGU.Tag = Trim(.cSprav)
                                listSGU.Height = .iHeight
                                listSGU.Width = .iWidth
                                listSGU.Left = Me.Width - .iWidth - iLblLeft
                                listSGU.Top = .iTop
                                listSGU.RowSource = cDataR
                                listSGU.ColumnCount = .iColCount
                                listSGU.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listSGU.Enabled = False
'                                Else
'                                    listSGU.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listSGU.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listSGU.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listKLD"
                                lblKLD.Visible = True
                                lblKLD.Caption = Trim(.cName)
                                lblKLD.Height = .iLblHeight
                                lblKLD.Width = .iLblWidth
                                lblKLD.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblKLD.Top = .iTop
                                listKLD.Visible = True
                                listKLD.Tag = Trim(.cSprav)
                                listKLD.Height = .iHeight
                                listKLD.Width = .iWidth
                                listKLD.Left = Me.Width - .iWidth - iLblLeft
                                listKLD.Top = .iTop
                                listKLD.RowSource = cDataR
                                listKLD.ColumnCount = .iColCount
                                listKLD.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listKLD.Enabled = False
'                                Else
'                                    listKLD.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listKLD.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listKLD.ListIndex = iVal
'                                    End If
'                                End If
                             Case "listIFR"
                                lblIFR.Visible = True
                                lblIFR.Caption = Trim(.cName)
                                lblIFR.Height = .iLblHeight
                                lblIFR.Width = .iLblWidth
                                lblIFR.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblIFR.Top = .iTop
                                listIFR.Visible = True
                                listIFR.Tag = Trim(.cSprav)
                                listIFR.Height = .iHeight
                                listIFR.Width = .iWidth
                                listIFR.Left = Me.Width - .iWidth - iLblLeft
                                listIFR.Top = .iTop
                                listIFR.RowSource = cDataR
                                listIFR.ColumnCount = .iColCount
                                listIFR.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listIFR.Enabled = False
'                                Else
'                                    listIFR.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listIFR.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listIFR.ListIndex = iVal
'                                    End If
'                                End If
                            Case "listIFV"
                                lblIFV.Visible = True
                                lblIFV.Caption = Trim(.cName)
                                lblIFV.Height = .iLblHeight
                                lblIFV.Width = .iLblWidth
                                lblIFV.Left = Me.Width - .iWidth - .iLblWidth - iLblLeft
                                lblIFV.Top = .iTop
                                listIFV.Visible = True
                                listIFV.Tag = Trim(.cSprav)
                                listIFV.Height = .iHeight
                                listIFV.Width = .iWidth
                                listIFV.Left = Me.Width - .iWidth - iLblLeft
                                listIFV.Top = .iTop
                                listIFV.RowSource = cDataR
                                listIFV.ColumnCount = .iColCount
                                listIFV.ColumnWidths = .cColWidths
                                
'                                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                                lEmpty = EmptySpr(cDataR)
'                                If lEmpty = True Then
'                                    listIFV.Enabled = False
'                                Else
'                                    listIFV.Enabled = True
'                                    If Len(Trim(Application.Range(cKodR).Value)) = 0 Then
                                        listIFV.ListIndex = 0
'                                    Else
'                                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Range(cKodR).Value |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cDataR
'                                        iVal = FoundIndex(cDataR, Trim(Range(cKodR).Value))
'                                        listIFV.ListIndex = iVal
'                                    End If
'                                End If
                             Case "optD"
                                optD.Visible = True
                                optD.Height = .iHeight
                                optD.Width = .iWidth
                                optD.Left = .iLeft
                                optD.Top = .iTop
                                optD.Tag = .cControl
                              Case "optR"
                                optR.Visible = True
                                optR.Height = .iHeight
                                optR.Width = .iWidth
                                optR.Left = .iLeft
                                optR.Top = .iTop
                                optR.Tag = .cControl
                              Case "optFR"
                                optFR.Visible = True
                                optFR.Height = .iHeight
                                optFR.Width = .iWidth
                                optFR.Left = .iLeft
                                optFR.Top = .iTop
                                optFR.Tag = .cControl
                              Case "optFV"
                                optFV.Visible = True
                                optFV.Height = .iHeight
                                optFV.Width = .iWidth
                                optFV.Left = .iLeft
                                optFV.Top = .iTop
                                optFV.Tag = .cControl
                            Case "butOK"
                                butOK.Visible = True
'                                butOK.Height = .iHeight
'                                butOK.Width = .iWidth
                                butOK.Left = Me.Width - butOK.Width - butCancel.Width - iLblLeft * 2
                                butOK.Top = Me.Height - butOK.Height * 1.5 - iLblLeft * 2
                            Case "butCancel"
                                butCancel.Visible = True
'                                butCancel.Height = .iHeight
'                                butCancel.Width = .iWidth
                                butCancel.Left = Me.Width - butCancel.Width - iLblLeft
                                butCancel.Top = Me.Height - butCancel.Height * 1.5 - iLblLeft * 2
                       End Select
                    End With
                Next i
            End If
        End With
    End With
    
    Exit Property
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (ObjectDataSprav)"
    Resume Next

End Property
Private Sub butCancel_Click()
    Set colValues = New Collection
'   Unload Me
    Me.Hide
End Sub

Private Sub butOK_Click()
    Dim ctl As Control
    Dim i As Long
    Dim cVal As String
    Dim iMax As Integer
    
    On Error GoTo errHandler
    
'    If Not (colValues Is Nothing) Then
'        For i = 1 To colValues.Count
'            colValues.Remove (Val(i))
'        Next i
'    End If
    Set colValues = New Collection
    
    For Each ctl In Me.Controls
        If TypeName(ctl) = "ComboBox" Or TypeName(ctl) = "ListBox" Then
            If ctl.Visible = True Then   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                iMax = Me.Controls(ctl.Name).ColumnCount
                For i = 1 To iMax
                    If Me.Controls(ctl.Name).Enabled = True Then
                        Me.Controls(ctl.Name).BoundColumn = i
                        cVal = Me.Controls(ctl.Name).Value
                    Else
                        cVal = ""
                    End If
                    Select Case i
                        Case 1
                            colValues.Add Item:=cVal, key:="Kod_" & ctl.Tag
                        Case 2
                            colValues.Add Item:=cVal, key:="Name_" & ctl.Tag
                        Case 3
                            colValues.Add Item:=cVal, key:="Col3_" & ctl.Tag
                    End Select
                Next i
            End If
        End If
        
        If TypeName(ctl) = "OptionButton" Then
            If ctl.Visible = True Then   ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                colValues.Add Item:=Me.Controls(ctl.Name).Value, key:=ctl.Tag
            End If
        End If
    Next ctl
    
    Me.Hide
    
    Exit Sub
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (cmdOK_Click)"
    Resume Next
End Sub

Private Sub optFR_Click()

    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = True
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = 0
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub optFV_Click()

    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = True
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = 0
    Me.Repaint

End Sub

Private Sub UserForm_Activate()

    If Me.ObjectName = "KBK129" Then
        Me.optD.Value = True
        Me.listKLD.Enabled = True
        Me.listFKR.Enabled = False
        Me.listSGU.Enabled = False
        Me.listIFR.Enabled = False
        Me.listIFV.Enabled = False
        Me.listKLD.ListIndex = 0
        Me.listFKR.ListIndex = -1
        Me.listSGU.ListIndex = -1
        Me.listIFR.ListIndex = -1
        Me.listIFV.ListIndex = -1
    End If

End Sub

Private Sub optD_Click()
    Me.listKLD.Enabled = True
    Me.listFKR.Enabled = False
    Me.listSGU.Enabled = False
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = 0
    Me.listFKR.ListIndex = -1
    Me.listSGU.ListIndex = -1
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub optR_Click()
    Me.listKLD.Enabled = False
    Me.listFKR.Enabled = True
    Me.listSGU.Enabled = True
    Me.listIFR.Enabled = False
    Me.listIFV.Enabled = False
    Me.listKLD.ListIndex = -1
    Me.listFKR.ListIndex = 0
    Me.listSGU.ListIndex = 0
    Me.listIFR.ListIndex = -1
    Me.listIFV.ListIndex = -1
    Me.Repaint
    
End Sub

Private Sub UserForm_Initialize()
    Me.IsUnload = False
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If Me.IsUnload = True Then
        Cancel = 0
    Else
        Cancel = 1
        Set colValues = New Collection
        Me.Hide
    End If
End Sub
Attribute VB_Name = "frmModule"
Public Sub fGoSubXLT()
    ChangeRangeProtect "Data_s41"
End Sub


'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd|.4 |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd|"
Public Sub ChangeRangeProtect(strRangeName As String)
    Dim strTemp, strTemp1 As String
    Dim nrows, nrows1, nrows2 As Long

    If Range("Kod_Type").Text = "SIN" Or Range("Kod_Type").Text = "" Then
 '       If Range("Kod_Type").Text = "SIN" Or Range("Kod_Type").Text = "" Then

        Range(strRangeName).Select
        Selection.Locked = False
    End If
    
 '
 ' 01-07-2019 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| Kod_OTD=Z0321 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|.9 =|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|(Kod_KPL)=501;0;|fffd||fffd||fffd||fffd|(D34<0;D34;|fffd||fffd||fffd||fffd|(D34=0;0;|fffd||fffd||fffd||fffd|(D34<=H34;0;D34-H34))))
 '
 ' 01-10-2019 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| Kod_OTD=Z0321 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|.9 =|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|(Kod_KPL)=501;0;|fffd||fffd||fffd||fffd|(D31=0;0;|fffd||fffd||fffd||fffd|(ABS(D31)<=ABS(H31);0;D31-H31)))

    If Not (Range("Kod_OTD").Text = "Z0321") Then

'    fUnProtect True, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Index
    Range("Data_s91").Select
    nrows = Range("Data_s91").Rows.Count
    For i = 1 To nrows
        Range("Data_s91").Cells(i, 1).FormulaR1C1 = "=IF(VALUE(Kod_KPL)=501,0,IF(RC[-5]=0,0,IF(ABS(RC[-5])<=ABS(RC[-1]),0,RC[-5]-RC[-1])))"

        With Selection.Interior
            .Pattern = xlNone
'            .TintAndShade = 0
'            .PatternTintAndShade = 0
        End With
        Selection.Locked = True
        Selection.FormulaHidden = False
    Next
   
    
'    fUnProtect False, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Index

    
    End If
    

   
    
 ' |fffd||fffd||fffd| 01-10-2018
 '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "SINU" |fffd| "SINUF" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
 
    If Range("Kod_Type").Text = "" Or Range("Kod_Type").Text = "SINU" Or Range("Kod_Type").Text = "SINUF" Then

    fUnProtect True, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Index

    Range("Data_PPRCH").Select
    Selection.EntireRow.Hidden = False
    
    fUnProtect False, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Index

    
    End If

    
 '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "SINU" |fffd| "SINUF" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "1","2" |fffd| "3"  |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
 
    If Range("Kod_Type").Text = "" Or Not (Range("Kod_Type").Text = "SINU" Or Range("Kod_Type").Text = "SINUF") Then
    
        fUnProtect True, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Index

    ActiveWorkbook.Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    Set r = Range("Data_UKONF")
    For i = r.Rows.Count To 1 Step -1
        If r.Cells(i, 1) = "1" Or r.Cells(i, 1) = "2" Or r.Cells(i, 1) = "3" Then r.Rows(i).Delete Shift:=xlUp
    Next i

    fUnProtect False, Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Index

    End If
    
         ActiveWorkbook.Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    
 ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| Kod_OTD=Z0321 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|.10 =|fffd||fffd||fffd||fffd|(G8=0;0;G8-L8)
 
    If Not (Range("Kod_OTD").Text = "Z0321") Then
 
        Range("Data_s102").Select
        nrows1 = Range("Data_s102").Rows.Count
        For i = 1 To nrows1
            Range("Data_s102").Cells(i, 1).FormulaR1C1 = "=IF(RC[-6]=0,0,RC[-6]-RC[-1])"
    
            With Selection.Interior
                .Pattern = xlNone
'                .TintAndShade = 0
'                .PatternTintAndShade = 0
            End With
            Selection.Locked = True
            Selection.FormulaHidden = False
        Next
    End If
 
    If Not (Range("Kod_OTD").Text = "Z0321") Then
    
  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| Kod_OTD=Z0321 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|.11 =|fffd||fffd||fffd||fffd|(H8=0;0;H8-L8)
        Range("Data_s112").Select
        nrows2 = Range("Data_s112").Rows.Count
        For i = 1 To nrows2
            Range("Data_s112").Cells(i, 1).FormulaR1C1 = "=IF(RC[-6]=0,0,RC[-6]-RC[-2])"
    
            With Selection.Interior
                .Pattern = xlNone
'                .TintAndShade = 0
'                .PatternTintAndShade = 0
            End With
            Selection.Locked = True
            Selection.FormulaHidden = False
        Next
    
    End If
    
     ActiveWorkbook.Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Activate
'     Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("Name_OTD").Select
    
End Sub

Attribute VB_Name = "mdActualForma"
Public Function InsertRangeToSheet() As Long
Dim nRowsSpr1 As Long
Dim nRowsSpr2 As Long
Dim i As Long
Dim n As Long
Dim k As Long
Dim m As Long
Dim j As Long
Dim y As Long
Dim nNoNullSpr1 As Long
Dim nNoNullSpr2 As Long
Dim iVar As Integer

' nColR |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameRange ("Data_Sheet1")
Dim nColR As Long
For iVar = 1 To 3
        Select Case iVar
            Case 1
                sNameRange = "Data_Sheet1"
                sNameSpr = "KLD"
                sNameSpr1 = "Data_KLD"
                Application.Sheets(1).Activate
'            Case 2
'                sNameRange = "Data_Sheet2"
'                sNameSpr = "FKR"
'                sNameSpr1 = "Data_FKR"
             Case 2
                sNameRange = "Data_Sheet3"
                sNameSpr = "IFR"
                sNameSpr1 = "Data_IFR"
                Application.Sheets(3).Activate
            Case 3
                sNameRange = "Data_Sheet4"
                sNameSpr = "IFV"
                sNameSpr1 = "Data_IFV"
                Application.Sheets(3).Activate
       End Select
        
    Dim lngCount As Long
        lngCount = 0
    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "KLD" |fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If Not IsEmpty(Range(sNameSpr1).Cells(1, 1)) Then ' And IsEmpty(Range(sNameSpr1).Cells(2, 1))
    '            InsertRangeToSheet = -5
    '            Exit Function
            
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr1
            nRowsSpr1 = Range(sNameSpr1).Rows.Count
            nNoNullSpr1 = 0
            For j = 1 To nRowsSpr1
                    If Len(Trim(Range(sNameSpr1).Cells(j, 1))) <> 0 Then
                        nNoNullSpr1 = nNoNullSpr1 + 1
                    End If
            Next j
            
        '    nRowsSpr3 = Range(sNameSpr3).Rows.Count
            m = nNoNullSpr1 ' * nNoNullSpr2 '* nRowsSpr3
            
        '   |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "KLD" |fffd||fffd||fffd||fffd||fffd||fffd| 60000, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            If m >= 60000 Then
                InsertRangeToSheet = -4
                Exit Function
            End If
            
            Debug.Print "1=", Time
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| sNameRange |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            For i = 1 To m - 2
                Range(sNameRange).Cells(i + 1, 1).EntireRow.Insert Shift:=xlShiftDown
                
            Next
            
            Debug.Print "1=", Timer
            
            Debug.Print "1=", Timer
 '           Range(sNameRange).Cells(lngCount + 1, 1).EntireRow.Delete
        ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|. |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_BSR"
        ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1"
        
        ' "1,0,0" - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"BSR" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'          l = objSvod.InsertSprToSheet(ActiveWorkbook, sNameRange, sNameSpr, "3,0,0")
           l = objSvod.InsertSprToSheet(ActiveWorkbook, sNameRange, sNameSpr, "3,1,0")
            Debug.Print "1=", Timer
            
            
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameRange ("Data_Sheet1") |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr ("RPS")
        ' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| nColR(=2) |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "RPS"|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "a"
            nColR = Range(sNameRange).Columns.Count
            For i = 4 To nColR
                objSvod.AddNewNames ActiveWorkbook, sNameSpr, 1, sNameRange, i, Chr(93 + i)
            Next
            Debug.Print "1=", Timer
            
            
          '  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Sheet1" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8
           objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
        Select Case iVar
            Case 1
                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
            Case 2
                 objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
           Case 3
                 objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 8
                objSvod.AutoFillColumn ActiveWorkbook, sNameRange, 9
      End Select
           
            
        End If
 
    Next iVar

    InsertRangeToSheet = -1

End Function

Public Function SheetVarForm()

    Dim sprNameRange As String
    Dim MyRange As String
    Dim ColBegin As Long
    Dim vR As Range
    
    
    sprNameRange = "Data_Spr1"
    MyRange = "Data_Sheet2"
    ColBegin = 3

'    Application.ScreenUpdating = False

'    SheetVarForm = InsertRangeToSheet()
'    If SheetVarForm = -1 Then
      'vR = 5 / 0
        On Error Resume Next
        Set vR = ActiveWorkbook.Application.Range(sprNameRange)
    '
        If Not (vR Is Nothing) Then
            ''SheetVarForm = AddRowsFromRange(sprNameRange, MyRange, ColBegin)
            SheetVarForm = fRasstMain

            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'            SheetVarForm = HiddenRows()
            Application.Sheets(1).Activate
        Else
            SheetVarForm = 0    ' |fffd||fffd||fffd||fffd||fffd||fffd|
        End If
'    End If
    
'    Application.ScreenUpdating = True

End Function

Public Function HiddenRows() As Long
    Dim iVar As Integer
    Dim bHidden As Boolean

    On Error GoTo errHandler
    
    bHidden = False
    For iVar = 1 To 3
        Select Case iVar
            Case 1
                sNameRange = "Data_Sheet1"
                Application.Sheets(1).Activate
             Case 2
                sNameRange = "Data_Sheet3"
                Application.Sheets(3).Activate
            Case 3
                sNameRange = "Data_Sheet4"
                Application.Sheets(3).Activate
       End Select
       
   'MsgBox Range(sNameRange).Count
       If Range(sNameRange).Rows.Count = 2 Then
   'MsgBox Range(sNameRange).Cells(1, 3).Value
            If Len(Trim(Range(sNameRange).Cells(1, 3).Value)) = 0 Then
                Range(sNameRange).Select
                Selection.EntireRow.Hidden = True
                Select Case iVar
                    Case 1
                        Application.ActiveSheet.cmdVisibleNullStr1.Enabled = False
   'MsgBox "Application.ActiveSheet.cmdVisibleNullStr1.Enabled = False"
                    Case 2
                        bHidden = True
                    Case 3
                        If bHidden Then
'                            Application.ActiveSheet.cmdVisibleNullStr3.Enabled = False
                        End If
                End Select
            End If
       End If
       
    Next iVar
    
    HiddenRows = -1
    
    Exit Function
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (HiddenRows)"
    HiddenRows = -9
    
End Function


Public Function AddRowsFromRange(ByVal sprNameRange As String, ByVal MyRange As String, ByVal ColBegin As Long) As Long
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| Range("Data_Sheet1") |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sprNameRange
    Dim nrows As Integer
    Dim i As Integer
    Dim j As Integer
    Dim n As Integer
    Dim kod As String
    Dim nRowsSpr As Integer
    Dim lNameCell As Integer
    Dim nColRange As Integer
    Dim sTemp As String
    Dim sSheet As String
    Dim nCountRange As Integer
    Dim sOldKod  As String
    Dim nRowRange As Integer
    Dim cNameCells, cValue As String
    Dim bYes As Boolean
    Dim bYesData As Boolean
'SprVavue = "345"
'
On Error GoTo errHandler

''   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Application.Sheets(2).Activate
    sSheet = Application.ActiveSheet.Name
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sNameSpr2
    nRowsSpr = Range(sprNameRange).Rows.Count
    
        lNameCell = Len(Trim(Range(sprNameRange).Cells(1, 1)))
        nColRange = Range(MyRange).Columns.Count

    If Len(Trim(Range(sprNameRange).Cells(1, 1))) <> 0 Then
        sOldKod = ""
        For i = 1 To nRowsSpr
        
            bYesData = False
            ''lNameCell = Len(Trim(Range(sprNameRange).Cells(i, 1)))
            kod = Mid(Range(sprNameRange).Cells(i, 1), 3, lNameCell - 3)
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            Dim KodSpr As String, k As Integer
            KodSpr = Right(kod, 3)
            For k = 1 To Range("Data_SGU").Rows.Count
                If Range("Data_SGU").Cells(k, 1).Value = KodSpr Then
 '                    Range(MyRange).Cells(nCountRange, 1).Value = Range("Data_SGU").Cells(k, 2).Value
                     bYesData = True
                     Exit For
                End If
            Next
            
            If bYesData Then
            
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "Data_Cells"
                cNameCells = "ss" & kod
                nRowRange = Range("Data_Cells").Rows.Count
                bYes = False
                For j = 1 To nRowRange - 1
                    cValue = Trim(Range("Data_Cells").Cells(j, 1).Value)
                    If Left(cValue, Len(cValue) - 1) = cNameCells Then
                        bYes = True
                        Exit For
                    End If
                Next j
                
                If kod <> sOldKod And bYes = False Then
                    If Not (Trim(kod) = "") Then
                        sOldKod = kod
                        nCountRange = Range(MyRange).Rows.Count
                    
                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                        Range(MyRange).Cells(nCountRange, 1).EntireRow.Insert Shift:=xlShiftDown
                        Range(MyRange).Cells(nCountRange, ColBegin).Value = kod
                        n = 0
                        For j = ColBegin + 1 To nColRange
                            Range(MyRange).Cells(nCountRange, j).Select
                            
                            ' ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                            Set tRange = Application.Selection
                            
                             ActiveWorkbook.Names.Add Name:="ss" & kod & Chr(97 + n), RefersToR1C1:="=" & sSheet & "!R" & Selection.Row & "C" & Selection.Column
                             
            '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
            '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
    '                        nRowRange = Range("Data_Cells").Rows.Count
                            Range("Data_Cells").Cells(nRowRange, 1).EntireRow.Insert Shift:=xlShiftDown
                            Range("Data_Cells").Cells(nRowRange, 1).Value = "ss" & kod & Chr(97 + n)
                            Range("Data_Cells").Cells(nRowRange, 2).Value = "F"
                            Range("Data_Cells").Cells(nRowRange, 3).Value = "2"
                            n = n + 1
                            
                        Next j
                        
                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        Range(MyRange).Cells(nCountRange, 9).FormulaR1C1 = "=SUM(RC[-3]:RC[-1])"
                        Range(MyRange).Cells(nCountRange, 10).FormulaR1C1 = "=SUM(RC[-6]-RC[-1])"
                        Range(MyRange).Cells(nCountRange, 11).FormulaR1C1 = "=SUM(RC[-6]-RC[-2])"
                        
    '                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    '                    Dim KodSpr As String, k As Integer
    '                    KodSpr = Left(kod, 17)
    '                    For k = 1 To Range("Data_FKR").Rows.Count
    '                        If Range("Data_FKR").Cells(k, 1).Value = KodSpr Then
                                 Range(MyRange).Cells(nCountRange, 1).Value = Range("Data_SGU").Cells(k, 2).Value
    '                             Exit For
    '                        End If
    '                    Next
                    End If
                  End If
              End If
          Next i
              
    End If
          
    AddRowsFromRange = -1
          
    Exit Function
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRowsFromRange)"
    AddRowsFromRange = -8
End Function




Public Sub CreateCells(Row As Integer, sKod As String)
' |fffd||fffd||fffd||fffd||fffd||fffd|3 |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 12.09.2006 (Mi)
'
    
        If Application.Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|").ProtectContents = True Then
            Application.Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Unprotect Password:=objSvod.PasswordName
        End If
    
'|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|
    Range("Data_Sheet200").Cells(Row - 7, 4).Value = Mid(sKod, 4, 4)
'|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|
    Range("Data_Sheet200").Cells(Row - 7, 5).Value = Mid(sKod, 8, 7)
'|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|
    Range("Data_Sheet200").Cells(Row - 7, 6).Value = Mid(sKod, 15, 3)
    
    End Sub

Attribute VB_Name = "mdLib"
''''''''''''''''''''''''''''''''''''''''''''
'**** Version 28.07.2005 *******************
''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

Public objSvod As Object
Public objSprForms As Object
Public Const RangeRek As String = "Data_Cells"
Public strNameCell As String
Public colValues As Collection
Public FormSpr As Object
Public Const cKod = "Kod_"
Public Const cName = "Name_"
Public Const cData = "Data_"


Public Function IsSvod() As Boolean
    IsSvod = True
End Function

Public Sub ConstForm()
Attribute ConstForm.VB_Description = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 17.05.2004 (nekrasova)"
Attribute ConstForm.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim tRange As Range
    Dim strTemp As String
    Dim strSheet As String
    Dim i As Long
    Dim j, n As Long
    
'
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 02.06.2004 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (BALANS)
'
'   |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Excel |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|:
'               1. |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'               2. |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "ss"+|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|+"|fffd|"..."|fffd|"
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'

' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Set tRange = Application.Selection
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    strSheet = Application.ActiveSheet.Name
'
'   tRange.Rows.Count- |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   tRange.Columns.Count |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
    For i = 1 To tRange.Rows.Count
        For j = 2 To tRange.Columns.Count
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "ss"+|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|+"a"
            strTemp = Mid$(tRange.Cells(i, j).Address, 2, 1)
            Range(strTemp & (i + tRange.Row - 1) & ":" & strTemp & (i + tRange.Row - 1)).Select
            ActiveWorkbook.Names.Add Name:="ss" & tRange.Cells(i, 1) & Chr(95 + j), RefersToR1C1:="=" & strSheet & "!R" & Selection.Row & "C" & Selection.Column
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
                   n = Range("Data_Cells").Rows.Count
                   Range("Data_Cells").Cells(n, 1).EntireRow.Insert Shift:=xlShiftDown
                   Range("Data_Cells").Cells(n, 1).Value = "ss" & tRange.Cells(i, 1) & Chr(95 + j)
                   Range("Data_Cells").Cells(n, 2).Value = "F"
         Next
    Next
    
    
'    Range("G3:G4").Select
'    ActiveWorkbook.Names.Add Name:="ss0630a", RefersToR1C1:="=|fffd||fffd||fffd||fffd|2!R3C7"
End Sub
Public Function VarForm() As Long
'' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 15.07.2005

'    Dim sNameRange As String, sNameSpr As String
'    Dim vR As Range
 ' vR = 5 / 0
'    sNameRange = "Data_Sheet1"
'    On Error Resume Next
'    Set vR = ActiveWorkbook.Application.Range(sNameRange)
'
'     If vR Is Nothing Then
'        VarForm = -1
'     Else
'        VarForm = InsertRangeToSheet(sNameRange)
'     End If
     VarForm = SheetVarForm()

     SetFormula
'    Application.Calculate
End Function
     
Private Sub SetFormula()
    Range("Naim_STOPdata").FormulaLocal = "=SetStrData(A1;Kod_STOPdata)"
    Range("Naim_STOPdata").Calculate
    
    Range("Naim_MODdata").FormulaLocal = "=SetStrData(A2;Kod_MODdata)"
    Range("Naim_MODdata").Calculate
'    ActiveCell.FormulaLocal = "=SetStrData(B5;Kod_STOPdata)"
End Sub

Public Sub ChangeFormatCells(ByVal NameRange As String, ByVal SpravEI As Integer, ByVal Col As Integer)
 '
    Dim nrows, i As Integer
    Dim strFormat As String
    Dim strNameCell As String
    Dim strNameList As String
    
    Application.ScreenUpdating = False
  
      Select Case Col
          Case 0
            strFormat = "0"
          Case 1
            strFormat = "0.0"
          Case 2
            strFormat = "0.00"
          Case 3
           strFormat = "0.000"
          Case 4
           strFormat = "0.0000"
     End Select
'   nrows - |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
    nrows = Range(NameRange).Rows.Count
'
    For i = 1 To nrows
        strNameCell = Range(NameRange).Cells(i, 1)
        If Range(NameRange).Cells(i, 5) = SpravEI And _
           Left(Range(NameRange).Cells(i, 1).Value, 2) = "ss" Then
           If Range(NameRange).Cells(i, 3) <> Col Then
             Range(NameRange).Cells(i, 3) = Col
              strNameList = ActiveSheet.Name
              Sheets(Range(strNameCell).Worksheet.Name).Select
              Range(strNameCell).Select
              Selection.NumberFormat = strFormat
'              Range(strNameCell) = Round(Range(strNameCell))
'                Call RoundCells(strNameCell)
              Sheets(strNameList).Activate
           End If
           
       End If
    Next i
        Range("Name_OTD").Activate
        Application.ScreenUpdating = True
End Sub



Public Function SetStrData(ByVal sVoise As Range, ByVal sNameRange As Range) As String

'    Dim objSvod As Object
'    Set objSvod = CreateObject("rasExRng.clsWork")
    If Application.ScreenUpdating Then
        SetStrData = objSvod.setdataname(CStr(sVoise), CDate(sNameRange))
    End If
'    Set objSvod = Nothing

End Function
 Public Sub ProtectXlt()
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim Sheet As Object
    
'    On Error Resume Next
    Application.ScreenUpdating = False
    
    For Each Sheet In Worksheets
        If Sheet.ProtectContents = False Then
            If Val(Application.Version) > 9 Then
                Sheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
                , AllowFormattingColumns:=True, AllowFormattingRows:=True, Password:=objSvod.PasswordName
            Else
                Sheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=objSvod.PasswordName
            End If
        End If
    Next Sheet
    
   If ActiveWorkbook.ProtectStructure = False Then
        ActiveWorkbook.Protect Structure:=True, Windows:=False, Password:=objSvod.PasswordName
    End If
    
    Application.ScreenUpdating = True

End Sub
 Public Sub UnProtectXlt()
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim Sheet As Worksheet
    
    On Error Resume Next
    Application.ScreenUpdating = False
    
    ActiveWorkbook.Unprotect Password:=objSvod.PasswordName
    
    For Each Sheet In Worksheets
        If Sheet.ProtectContents = True Then
            Sheet.Unprotect Password:=objSvod.PasswordName
        End If
    Next Sheet
    
    Application.ScreenUpdating = True
    
End Sub
                               
Public Function OpenWorkbook() As Long

    On Error GoTo errHandler
    
    Set objSvod = CreateObject("rasExRng.clsWork")
    Set objSprForms = CreateObject("rasDS.DataSpravs")
    If objSprForms.iCodeError <> 0 Then
       MsgBox (objSprForms.cErrorTextMessage)
    End If
     
     Set FormSpr = New frmAddRow
     Load FormSpr
    
    If objSvod Is Nothing Or objSprForms.iCodeError <> 0 Then
        OpenWorkbook = 0    ' |fffd||fffd||fffd||fffd||fffd||fffd| OpenWorkbook
    Else
        OpenWorkbook = -1   ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End If
    
    Exit Function
    
errHandler:
    OpenWorkbook = Err.Number
'    Application.Calculate
End Function
Public Sub CloseWorkbook()

    FormSpr.IsUnload = True
    Unload FormSpr
    Set objSvod = Nothing
    Set objSprForms = Nothing
    
End Sub
Public Function EmptySpr(ByVal NameSpr As String) As Boolean
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| True, |fffd||fffd||fffd||fffd| NameSpr |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False

    If Range(NameSpr).Rows.Count <= 2 Then
        If IsEmpty(Range(NameSpr).Cells(1, 1)) Then
            EmptySpr = True
        Else
            EmptySpr = False
        End If
    Else
        EmptySpr = False
    End If
    
End Function
Public Function FoundIndex(ByVal NameSpr As String, ByVal cVal As String) As Long
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| cVal |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NameSpr,
'   |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0

    Dim i As Long
    
    FoundIndex = 0
    For i = 1 To Range(NameSpr).Rows.Count
        If Trim(Range(NameSpr).Cells(i, 1).Value) = cVal Then
            FoundIndex = i - 1
            Exit For
        End If
    Next i
    
End Function

Public Sub IzmenEI(ByVal Old_izm As String, ByVal New_izm As String, ByVal sCol As String)

'
'  382 - |fffd||fffd||fffd||fffd||fffd|
'  383 - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  384 - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  385 - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

            Select Case Old_izm
                Case 383  '  - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Select Case New_izm
                        Case 382  '  - |fffd||fffd||fffd||fffd||fffd|
                            Call RoundCells("1", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 384, 385
                            Call RoundCells("1000", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                Case 382
                    Select Case New_izm
                        Case 383
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 384, 385
                            Call RoundCells("1000", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                Case 384
                    Select Case New_izm
                        Case 382, 383, 385
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
                 Case 385
                    Select Case New_izm
                        Case 384
                            Call RoundCells("1", sCol)
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                        Case 383, 382
                            Call ChangeFormatCells(RangeRek, "0", sCol)
                    Case Else
                    End Select
               Case Else
            End Select
   

End Sub
Public Sub RoundCells(ByVal sDel As String, ByVal sCol As String)
Dim Msg, Response, MyString, Style

    Dim nrows, i As Integer
    Dim strFormat As String
    Dim sNameCell As String
    Dim strNameList As String
    
'   nrows - |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
    nrows = Range(RangeRek).Rows.Count

    Application.ScreenUpdating = False
  
    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ?"
    Style = vbYesNo + vbCritical + vbDefaultButton2

     Response = MsgBox(Msg, Style)
        If Response = vbYes Then
            MyString = "Yes"
    For i = 1 To nrows
            sNameCell = Range(RangeRek).Cells(i, 1)
        If Left(Range(RangeRek).Cells(i, 1).Value, 2) = "ss" Then
              strNameList = ActiveSheet.Name
              Sheets(Range(sNameCell).Worksheet.Name).Select
              Range(sNameCell).Select
'
            If Left((Range(sNameCell).FormulaR1C1), 1) <> "=" Then
                  Range(sNameCell) = Round(Range(sNameCell) / sDel, sCol)
            End If
'
        End If
    Next i

        Else
            MyString = "No"
        End If
'
        Application.ScreenUpdating = True

End Sub


Public Sub VisibleNullStr(ByVal IsVisible As Boolean, _
                            ByRef objRange As Range, _
                            Optional ByVal lngColBeg As Long, _
                            Optional ByVal lngColEnd As Long)
                            
' |fffd| |fffd||fffd|.|fffd||fffd||fffd|. objRange |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| lngColBeg |fffd||fffd| lngColEnd

    Dim i As Long
    Dim j As Long
    
    Application.ScreenUpdating = False
   
    On Error GoTo errHandler
    
    With objRange
        If IsVisible Then
            For i = 1 To .Rows.Count
                Rows(i + .Row - 1).EntireRow.Hidden = False
'                Selection.
            Next
        Else
            For i = 1 To .Rows.Count
                For j = lngColBeg To lngColEnd
                    If .Cells(i, j) <> 0 Then
                        Exit For
                    End If
                Next
                If j > lngColEnd Then
                    Rows(i + .Row - 1).EntireRow.Hidden = True
              End If
            Next
        End If
    End With
    
    Exit Sub
    
errHandler:
    MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
            "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Number, vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
            
        Application.ScreenUpdating = True
End Sub

Public Sub AddRekv(ByVal ObjRekvs As Object)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Long
    Dim sSprav As String
    Dim cKodR, cNameR, cCol3R As String
    Dim Old_EI, New_EI As String
    
    On Error GoTo errHandler
    
    Old_EI = Application.Range("Kod_EI").Cells(1, 1)
    
'    Set FormSpr = New frmAddRow
'    Load FormSpr
    Set FormSpr.ObjectDataSprav = ObjRekvs
    FormSpr.Repaint

    FormSpr.Show
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If colValues.Count <> 0 Then
       With ObjRekvs.SpravCollection
           If .Count > 0 Then
               For i = 1 To .Count
                   With .Item(Val(i))
                       If Not (.cControl Like "but*") Then
                           cKodR = cKod & .cSprav
                           cNameR = cName & .cSprav
                           Range(cKodR).Value = colValues.Item(cKodR)
                           Range(cNameR).Value = colValues.Item(cNameR)
                        End If
                        If .cSprav = "EI" Then
                            New_EI = Application.Range("Kod_EI").Cells(1, 1)
                            Call IzmenEI(Old_EI, New_EI, colValues.Item("Col3_EI"))
                        End If
                  End With
               Next i
           End If
       End With
     
    End If
 
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRekv)"
    Resume Next

End Sub

Public Sub AddRow(ByVal ObjRekvs As Object)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i As Long
    Dim sSprav As String
    Dim cKodR, cNameR, cCol3R As String
    Dim Old_EI, New_EI As String
    
    On Error GoTo errHandler
    
    
'    Set FormSpr = New frmAddRow
'    Load FormSpr
    Set FormSpr.ObjectDataSprav = ObjRekvs
    
    FormSpr.Show
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If colValues.Count <> 0 Then
       With ObjRekvs.SpravCollection
           If .Count > 0 Then
               For i = 1 To .Count
                   With .Item(Val(i))
                       If Not (.cControl Like "but*") Then
                           cKodR = cKod & .cSprav
                           cNameR = cName & .cSprav
                           Range(cKodR).Value = colValues.Item(cKodR)
                           Range(cNameR).Value = colValues.Item(cNameR)
                        End If
                  End With
               Next i
           End If
       End With
     
    End If
 
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRekv)"
    Resume Next

End Sub

Public Sub AddRowToRange(ByVal KodRow As String, ByVal MyRange As String, ByVal ColBegin As Long)
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
' |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ColBegin |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| KodRow
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Data_Cells"

    Dim nrows As Integer
    Dim kod As String
    Dim sSheet As String
    Dim nColRange, nCountRange As Long
    Dim i As Long
    Dim j As Long
    Dim nRowRange As Integer
   
    On Error GoTo errHandler
    
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    sSheet = Application.ActiveSheet.Name
    
'   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
    nColRange = Range(MyRange).Columns.Count
    nCountRange = Range(MyRange).Rows.Count
    
 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange
    For i = 1 To nCountRange
        If KodRow = Trim(Range(MyRange).Cells(i, ColBegin).Value) Then
            MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| " & KodRow & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            Exit Sub
        End If
    Next i
     
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Range(MyRange).Cells(nCountRange, 1).EntireRow.Insert Shift:=xlShiftDown
    Range(MyRange).Cells(nCountRange, ColBegin).Value = KodRow
    i = 0
    For j = ColBegin + 1 To nColRange
       Range(MyRange).Cells(nCountRange, j).Select
       ActiveWorkbook.Names.Add Name:="ss" & KodRow & Chr(97 + i), RefersToR1C1:="=" & sSheet & "!R" & Selection.Row & "C" & Selection.Column
         
'    '  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| MyRange |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| j
'       objSvod.AutoFillColumn ActiveWorkbook, MyRange, j
                     
    '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    '   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Data_Cells
        nRowRange = Range("Data_Cells").Rows.Count
        Range("Data_Cells").Cells(nRowRange, 1).EntireRow.Insert Shift:=xlShiftDown
        Range("Data_Cells").Cells(nRowRange, 1).Value = "ss" & KodRow & Chr(97 + i)
        Range("Data_Cells").Cells(nRowRange, 2).Value = "F"
        Range("Data_Cells").Cells(nRowRange, 3).Value = "2"
        i = i + 1
    Next j
    
    Range(MyRange).Cells(nCountRange, ColBegin + 1).Select
    
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (AddRowToRange)"
    Resume Next

End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub cmbSelectRekvizit_Click()

    On Error GoTo errHandler
    
    Call UnProtectXlt
    
    Call AddRekv(objSprForms.Item("REKV1"))
    
    Call ProtectXlt
    
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (cmbSelectRekvizit_Click)"
    Resume Next
    
End Sub

Private Sub cmdVisibleNullStr1_Click()
' |fffd| |fffd||fffd|.|fffd||fffd||fffd|. "Data_Sheet1" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 4 |fffd||fffd| 9

Call UnProtectXlt
    If cmdVisibleNullStr1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" Then
        VisibleNullStr False, Range("Data_Sheet1"), 4, 9
        cmdVisibleNullStr1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Else
        VisibleNullStr True, Range("Data_Sheet1")
        cmdVisibleNullStr1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
Call ProtectXlt
End Sub


Private Sub cmbSaveAs_Click()
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    Dim NameFile As Variant
   
    NameFile = Application.GetSaveAsFilename(Application.ActiveWorkbook.Name, _
            "|fffd||fffd||fffd||fffd||fffd| Microsoft Ecxel (*.xls), *.xls", , _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|")
    If NameFile <> False Then
        Application.ActiveWorkbook.SaveCopyAs Filename:=NameFile
    End If

End Sub
Private Sub Worksheet_Activate()
On Error Resume Next
cmdBarsShow
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub cmbAddRow_Click()
 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (FKRSGU)
   
    Dim i As Long
    Dim cDataR As String
    Dim lEmpty As Boolean
    Dim cMSG As String
    Dim Address As Variant
    Dim nRow As Long
    
    On Error GoTo errHandler
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With objSprForms.Item("FKRSGU").SpravCollection
        If .Count > 0 Then
            For i = 1 To .Count
                If Len(Trim(.Item(Val(i)).cName)) <> 0 Then
                    cDataR = cData & .Item(Val(i)).cSprav
                    lEmpty = EmptySpr(cDataR)
                    If lEmpty = True Then
                        cMSG = cMSG & .Item(Val(i)).cName & ", "
                    End If
                End If
            Next i
        End If
    End With
    If Len(cMSG) > 0 Then
       MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & vbCrLf & cMSG & vbCrLf & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", , "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Else
        Call UnProtectXlt
        
 '       Call AddRow(objSprForms.Item("FKRPLS"))
        Set FormSpr.ObjectDataSprav = objSprForms.Item("FKRSGU")
        
        FormSpr.Show
        
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If colValues.Count <> 0 Then
           cKodStr = colValues.Item("Kod_FKR") & colValues.Item("Kod_SGU")
           Call AddRowToRange(cKodStr, "Data_Sheet2", 3)
           
           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
           nRow = Application.Selection.Row
           ActiveSheet.Cells(nRow, 9).FormulaR1C1 = "=SUM(RC[-3]:RC[-1])"
           ActiveSheet.Cells(nRow, 10).FormulaR1C1 = "=SUM(RC[-6]-RC[-1])"
           ActiveSheet.Cells(nRow, 11).FormulaR1C1 = "=SUM(RC[-6]-RC[-2])"
           
           ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
           Cells(ActiveCell.Row, 1).Value = colValues.Item("Name_FKR")
        End If
       
        Call ProtectXlt
    End If
    
    Exit Sub
    
errHandler:
    MsgBox Err.Number & " - " & Err.Description & ". (cmbAddRow_Click)"
    Resume Next
    
End Sub




Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Private Sub Worksheet_Activate()
On Error Resume Next
cmdBarsShow
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub cmdVisibleNullStr3_Click()
' |fffd| |fffd||fffd|.|fffd||fffd||fffd|. "Data_Sheet1" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 4 |fffd||fffd| 9

Call UnProtectXlt
    If cmdVisibleNullStr3.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" Then
        VisibleNullStr False, Range("Data_Sheet3"), 4, 9
        VisibleNullStr False, Range("Data_Sheet4"), 4, 9
        cmdVisibleNullStr3.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Else
        VisibleNullStr True, Range("Data_Sheet3")
        VisibleNullStr True, Range("Data_Sheet4")
        cmdVisibleNullStr3.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
Call ProtectXlt
End Sub
Private Sub Worksheet_Activate()
On Error Resume Next
cmdBarsShow
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
    Sheets.Add
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
'MsgBox "!!"
End Sub

Private Sub Workbook_Open()
On Error Resume Next
s = GetRegistrValue & "lnc2.xla"
Application.VBE.ActiveVBProject.References.AddFromFile s
Application.Run "lnc2.xla!fOpen"
Application.Run "lnc2.xla!cmdBarsShow"
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Dim i As Long
    
    With Application.VBE.ActiveVBProject.References
        For i = .Count To 1 Step -1
            If Right$(.Item(i).Name, 4) = "lnc2" Then
                Application.DisplayAlerts = True
                .Remove .Item(i)
                Exit For
            End If
        Next
    End With
End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    On Error Resume Next
    
    Dim strName As String
    Dim strNameRange As String
    Dim i As Long
    Dim kodRekv As String
    Dim kodFKR As String
    
    Static blnChange As Boolean

    If blnChange Then
        blnChange = False
        Exit Sub
    End If
    If Application.ScreenUpdating = False Or Application.Visible = False Then Exit Sub
    If Len(CStr(Target.Value)) = 0 Then Exit Sub
    strName = Target.Name
    If Len(strName) > 0 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strNameRange = Application.Names(, , CStr(strName)).Name
        If Len(strNameRange) > 0 Then
            With Range("Data_Cells")
                For i = 1 To .Rows.Count
                    If .Cells(i, 1) = strNameRange Then
                        If .Cells(i, 2) = "F" Then
                            If (Len(CStr(CCur(CStr(Target)) - Int(CCur(CStr(Target))))) - 2) > .Cells(i, 3) Then
                                MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & .Cells(i, 3) & " |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ", vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                            End If
                            blnChange = True
                            Target = Round(Target, .Cells(i, 3))
                        End If
                        Exit For
                    End If
                Next
            End With
        End If
    End If
End Sub


Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
    Dim lcNameCell As String
    
    On Error Resume Next
    
'    lcNameCell = Target.Name
'    If Len(lcNameCell) > 0 Then
    If IsObject(goSvod) Then
         fStartFox
    End If
'     Else
'         fInitGrid
'     End If
End Sub




INQUEST-PP=macro
