Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Hauptmodul"
Option Explicit

Sub FormularStarten()

Worksheets("Nutzeroberflaeche").Unprotect Password:="1234"
UserForm1.Show
Worksheets("Nutzeroberflaeche").Protect Password:="1234"

End Sub

Sub BerechnungStarten()

Worksheets("Nutzeroberflaeche").Unprotect Password:="1234"
Application.ScreenUpdating = False  'Bildschirmdarstellung einfrieren

Dim Maschine As String

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate
    Maschine = Range("E4").Value
    
    If Maschine = "SF21_manuWinkel" Then
        Berechnung_SF21_manuWinkel
    ElseIf Maschine = "SF22_manuWinkel" Then
        Berechnung_SF22_manuWinkel
    ElseIf Maschine = "SF22_autoWinkel" Then
        Berechnung_SF22_autoWinkel
    ElseIf Maschine = "SF33_autoWinkel" Then
        Berechnung_SF33_autoWinkel
    ElseIf Maschine = "SF44_autoWinkel" Then
        Berechnung_SF44_autoWinkel
    End If
End With

Application.ScreenUpdating = True   'Bildschirmdarstellung updaten
Worksheets("Nutzeroberflaeche").Protect Password:="1234"

End Sub

Public Function ShapeExists(ByRef wksWorksheet As Worksheet, ByVal strShapeName As String) As Boolean
    On Error Resume Next
    ShapeExists = Not wksWorksheet.Shapes(strShapeName) Is Nothing
    On Error GoTo 0
End Function

Attribute VB_Name = "SF21_manuWinkel"
Option Explicit

Sub Berechnung_SF21_manuWinkel()

Dim Pi As Double    'Pi definieren
Pi = 4 * Atn(1)

'Lesen der festen Maschinenparameter

With ThisWorkbook.Worksheets("SF21_manuWinkel").Activate  'Blatt "SF21_manuWinkel" ausw|fffd|hlen
    Dim L1 As Double        'Variablentyp: Gleitkommazahl
    Dim L2 As Double
    Dim L3 As Double
    Dim L4 As Double
    Dim L5 As Double
    Dim L6 As Double
    Dim L7 As Double
    Dim L1v_pos As Double
    Dim L1v_neg As Double
    Dim Lws_neg As Double
    Dim L3v_pos As Double
    Dim L3v_neg As Double
    Dim L5v_pos As Double
    Dim L5v_neg As Double
    Dim alpha_pos As Double
    Dim alpha_neg As Double
    Dim beta_pos As Double
    Dim beta_neg As Double
    Dim R As Double
    
    
    L1 = Range("C7").Value          'Variablenwert lesen
    L2 = Range("C8").Value
    L3 = Range("C9").Value
    L4 = Range("C10").Value
    L5 = Range("C11").Value
    L6 = Range("C12").Value
    L7 = Range("C15").Value
    L1v_pos = Range("C19").Value
    L1v_neg = Range("D19").Value
    L3v_pos = Range("C20").Value
    L3v_neg = Range("D20").Value
    L5v_pos = Range("C22").Value
    L5v_neg = Range("D22").Value
    Lws_neg = Range("D21").Value
    alpha_pos = Range("C26").Value
    alpha_neg = Range("D26").Value
    beta_pos = Range("C27").Value
    beta_neg = Range("D27").Value
    R = Range("C13").Value
End With

'Lesen der Eingabedaten des Nutzers und Kontrolle ob in richtigem Wertebereich
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen
    Dim L1v As Double       'Variablentyp: Gleitkommazahl
    Dim L3v As Double
    Dim L5v As Double
    Dim Lws As Double
    Dim alpha As Double
    Dim beta As Double
    Dim WSR As Double

    L1v = Range("C5").Value    'Variablenwert lesen
    L3v = Range("C6").Value
    L5v = Range("C7").Value
    Lws = Range("C8").Value
    alpha = Range("C9").Value
    beta = Range("C10").Value
    WSR = Range("C11").Value
    
    Range("C5:C6, C8:C11").Interior.ColorIndex = 0 'Zellen C5 bis C10 ohne farbliche F|fffd|llung formatieren
    
    If L1v < L1v_neg Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L1v gr|fffd||fffd|er als unteren Grenze
        Range("C5").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf L1v > L1v_pos Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L1v kleiner der oberen Grenze
        Range("C5").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf L3v < L3v_neg Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L3v gr|fffd||fffd|er als unteren Grenze
        Range("C6").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf L3v > L3v_pos Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L3v kleiner der oberen Grenze
        Range("C6").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf L5v < L5v_neg Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L5v gr|fffd||fffd|er als unteren Grenze
        Range("C7").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf L5v > L5v_pos Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L5v kleiner der oberen Grenze
        Range("C7").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf Lws < Lws_neg Then
        MsgBox "Ung|fffd|ltige Eingabe! Werkst|fffd|ckl|fffd|nge ist kleiner als 0!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob Lws gr|fffd||fffd|er als unteren Grenze
        Range("C8").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf alpha < alpha_neg Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob alpha gr|fffd||fffd|er als unteren Grenze
        Range("C9").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf alpha > alpha_pos Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob alpha kleiner der oberen Grenze
        Range("C9").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf beta < beta_neg Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob beta gr|fffd||fffd|er als unteren Grenze
        Range("C10").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf beta > beta_pos Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob beta kleiner der oberen Grenze
        Range("C10").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    ElseIf WSR < 0 Then
        MsgBox "Eingabe f|fffd|r Werkst|fffd|ckh|fffd|llradius au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob WSR kleiner als untere Grenze
        Range("C11").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    End If
End With

'Berechnung der Position von WP
Dim WPx As Double
Dim WPy As Double
Dim WPz As Double
Dim WPxy As Double
Dim WSxy As Double


alpha = alpha * Pi / 180        'Umrechnung der Winkel in Radiant
beta = beta * Pi / 180

alpha = alpha + 20  'Umrechnung damit L3 und L5 in 0-Position in einer Achse liegen

WPx = L2 + (L5 * Sin(alpha)) - ((L6 + Lws) * Sin(beta) * Cos(alpha))            'Berechnung von WPx
WPy = -(L3 + L3v) - (L5 * Cos(alpha)) - ((L6 + Lws) * Sin(beta) * Sin(alpha))   'Berechnung von WPy
WPz = (L1 + L1v) - L4 - ((L6 + Lws) * Cos(beta))                                'Berechnung von WPz

WPxy = Sqr((WPx ^ 2) + (WPy ^ 2))   'Resultierender Abstand von WP zur Rotationsachse des Beh|fffd|lters
WSxy = WPxy + WSR                   'Gr|fffd||fffd|ter Abstand des Werkst|fffd|cks zur Rotationsachse des Beh|fffd|lters



'Berechnungsergebnisse in Datenblatt schreiben
With ThisWorkbook.Worksheets("SF21_manuWinkel").Activate  'Blatt "SF21_manuWinkel" ausw|fffd|hlen
    Range("L7").Value = WPx    'WPx in Blatt "SF21_manuWinkel" schreiben
    Range("L8").Value = WPy    'WPy in Blatt "SF21_manuWinkel" schreiben
    Range("L9").Value = WPz    'WPz in Blatt "SF21_manuWinkel" schreiben
    Range("L11").Value = WPxy   'WPxy in Blatt "SF21_manuWinkel" schreiben
End With

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen

    'Vergleich ob Kollision mit Wandung vorliegt
    Dim WA As Double
    Dim WA_neg As Double
    
    If WSxy > R Then    'Vergleich ob gr|fffd||fffd|ter Abstand des Werkst|fffd|cks von der Rotationsachse gr|fffd||fffd|er als der Beh|fffd|lterradius ist
        WA_neg = Round(WSxy - R, 2)
        MsgBox "Kollision mit Beh|fffd|lterwandung! Wandabstand betr|fffd|gt -" & WA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M26").Value = WA_neg * (-1) & " mm"  'Plotten des negativen Wandabstands (|fffd|berschneidung)
    ElseIf WSxy < R Then
        WA = Round(R - WSxy, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterwandung
        MsgBox "Es liegt keine Kollision vor! Der Wandabstand betr|fffd|gt " & WA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M26").Value = WA & " mm"   'Plotten des verbleibenden Wandabstands
    End If
    
    
    
     'Vergleich ob Kollision mit Boden vorliegt
    Dim BA As Double
    Dim BA_neg As Double
    
    If WPz < 0 Then    'Vergleich ob minimale z-Koordinate des Werkst|fffd|cks kleiner als 0 ist
        BA_neg = Round(WPz, 2)
        MsgBox "Kollision mit Beh|fffd|lterboden! Bodenabstand betr|fffd|gt " & BA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M30").Value = BA_neg & " mm"    'Plotten des negativen Bodenabstands
    ElseIf WPz > 0 Then
        BA = Round(WPz, 2) 'Berechnung des verbleibenden Abstands zwischen Werkst|fffd|ck und Beh|fffd|lterboden
        MsgBox "Es liegt keine Kollision vor! Der Bodenabstand betr|fffd|gt " & BA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M30").Value = BA & " mm"    'Plotten des verbleibenden Bodenabstands
    End If
    
    
    'Alte Diagramme aus Datenblatt l|fffd|schen
    If ActiveSheet.ChartObjects.Count > 0 Then
        ActiveSheet.ChartObjects.Delete
    End If
    
        
    'Plot der Position im Beh|fffd|lter (Draufsicht)
    Dim FrameOben As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Ansicht von oben" definieren
    Dim PlotOben As Chart           'Variable f|fffd|r das Diagramm "Ansicht von oben" definieren
    
    Set FrameOben = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(18, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotOben = FrameOben.Chart
            
    With PlotOben
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von oben" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = -600
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!T9:T99")
            .Values = Range("=SF21_manuWinkel!S9:S99")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(2)       'Angaben zu zweitem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!T101:T190")
            .Values = Range("=SF21_manuWinkel!S101:S190")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(3)       'Angaben zu drittem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!T192:T281")
            .Values = Range("=SF21_manuWinkel!S192:S281")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(4)       'Angaben zu viertem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!T283:T372")
            .Values = Range("=SF21_manuWinkel!S283:S372")
        End With
        With .Axes(xlCategory)
            .HasTitle = True    'Abszissentitel aktivieren
            .AxisTitle.Text = "x"    'Abszissenname angeben
        End With
        With .Axes(xlValue)
            .HasTitle = True    'Ordinatentitel aktivieren
            .AxisTitle.Text = "y"    'Ordinatenname angeben
        End With
    End With
    
    'Werkst|fffd|ckposition in "Beh|fffd|lteransicht von oben" einzeichnen
    With PlotOben
        .SeriesCollection.NewSeries
        With .SeriesCollection(5)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF21_manuWinkel!Z9:Z99")
            .Values = ("=SF21_manuWinkel!Y9:Y99")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(6)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF21_manuWinkel!Z101:Z190")
            .Values = ("=SF21_manuWinkel!Y101:Y190")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(7)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF21_manuWinkel!Z192:Z281")
            .Values = ("=SF21_manuWinkel!Y192:Y281")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(8)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF21_manuWinkel!Z283:Z372")
            .Values = ("=SF21_manuWinkel!Y283:Y372")
        End With
    
    End With
    
    'Plot der Position im Beh|fffd|lter (Seitenansicht)
    Dim FrameSeite As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Seitenansicht" definieren
    Dim PlotSeite As Chart           'Variable f|fffd|r das Diagramm "Seitenansicht" definieren
    
    Set FrameSeite = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(380, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotSeite = FrameSeite.Chart
    
    With PlotSeite
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von der Seite" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!AC9:AC10")
            .Values = Range("=SF21_manuWinkel!AB9:AB10")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(2)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!AC12:AC13")
            .Values = Range("=SF21_manuWinkel!AB12:AB13")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(3)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF21_manuWinkel!AC15:AC16")
            .Values = Range("=SF21_manuWinkel!AB15:AB16")
        End With
    End With
    
    'Werkst|fffd|ckposition "Beh|fffd|lteransicht von der Seite" einzeichnen
    With PlotSeite
        .SeriesCollection.NewSeries
        With .SeriesCollection(4)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF21_manuWinkel!AF9:AF10")
            .Values = ("=SF21_manuWinkel!AE9:AE10")
        End With
    End With
        
End With
End Sub



Attribute VB_Name = "SF22_autoWinkel"
Option Explicit

Sub Berechnung_SF22_autoWinkel()

Dim Pi As Double    'Pi definieren
Pi = 4 * Atn(1)

'Lesen der festen Maschinenparameter

With ThisWorkbook.Worksheets("SF22_autoWinkel").Activate  'Blatt "SF22_autoWinkel" ausw|fffd|hlen
    Dim L1 As Double        'Variablentyp: Gleitkommazahl
    Dim L2 As Double
    Dim L3 As Double
    Dim L4 As Double
    Dim L5 As Double
    Dim L6 As Double
    Dim L7 As Double
    Dim L1v_pos As Double
    Dim L1v_neg As Double
    Dim Lws_neg As Double
    Dim L3v_pos As Double
    Dim L3v_neg As Double
    Dim L5v_pos As Double
    Dim L5v_neg As Double
    Dim alpha_pos As Double
    Dim alpha_neg As Double
    Dim beta_pos As Double
    Dim beta_neg As Double
    Dim R As Double

    
    L1 = Range("C7").Value          'Variablenwert lesen
    L2 = Range("C8").Value
    L3 = Range("C9").Value
    L4 = Range("C10").Value
    L5 = Range("C11").Value
    L6 = Range("C12").Value
    L7 = Range("C15").Value
    L1v_pos = Range("C19").Value
    L1v_neg = Range("D19").Value
    L3v_pos = Range("C20").Value
    L3v_neg = Range("D20").Value
    L5v_pos = Range("C22").Value
    L5v_neg = Range("D22").Value
    Lws_neg = Range("D21").Value
    alpha_pos = Range("C26").Value
    alpha_neg = Range("D26").Value
    beta_pos = Range("C27").Value
    beta_neg = Range("D27").Value
    R = Range("C13").Value
End With

'Lesen der Eingabedaten des Nutzers und Kontrolle ob in richtigem Wertebereich
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen
    Dim L1v As Double       'Variablentyp: Gleitkommazahl
    Dim L3v As Double
    Dim L5v As Double
    Dim Lws As Double
    Dim alpha As Double
    Dim beta As Double
    Dim WSR As Double
    
    L1v = Range("C5").Value    'Variablenwert lesen
    L3v = Range("C6").Value
    L5v = Range("C7").Value
    Lws = Range("C8").Value
    alpha = Range("C9").Value
    beta = Range("C10").Value
    WSR = Range("C11").Value
    
    Range("C5, C8:C11").Interior.ColorIndex = 0 'Zellen C5, C8, C10, C11 ohne farbliche F|fffd|llung formatieren
    
    If L1v < L1v_neg Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L1v gr|fffd||fffd|er als unteren Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L1v > L1v_pos Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L1v kleiner der oberen Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v < L3v_neg Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L3v gr|fffd||fffd|er als unteren Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v > L3v_pos Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L3v kleiner der oberen Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v < L5v_neg Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L5v gr|fffd||fffd|er als unteren Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v > L5v_pos Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L5v kleiner der oberen Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf Lws < Lws_neg Then
        MsgBox "Ung|fffd|ltige Eingabe! Werkst|fffd|ckl|fffd|nge ist kleiner als 0!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob Lws gr|fffd||fffd|er als unteren Grenze
        Range("C8").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha < alpha_neg Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob alpha gr|fffd||fffd|er als unteren Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha > alpha_pos Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob alpha kleiner der oberen Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta < beta_neg Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob beta gr|fffd||fffd|er als unteren Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta > beta_pos Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob beta kleiner der oberen Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf WSR < 0 Then
        MsgBox "Eingabe f|fffd|r Werkst|fffd|ckh|fffd|llradius au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob WSR kleiner als untere Grenze
        Range("C11").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    End If
End With

'Berechnung der Position von WP
Dim WPx As Double
Dim WPy As Double
Dim WPz As Double
Dim WPxy As Double
Dim WSxy As Double


alpha = alpha * Pi / 180        'Umrechnung der Winkel in Radian
beta = beta * Pi / 180

WPx = L2 - ((L6 + Lws) * Sin(beta) * Cos(alpha))    'Berechnung von WPx
WPy = (-L3) + ((L6 + Lws) * Sin(beta) * Sin(alpha)) 'Berechnung von WPy
WPz = (L1 + L1v) - L4 - ((L6 + Lws) * Cos(beta))    'Berechnung von WPz

WPxy = Sqr((WPx ^ 2) + (WPy ^ 2))   'Resultierender Abstand von WP zur Rotationsachse des Beh|fffd|lters
WSxy = WPxy + WSR                   'Gr|fffd||fffd|ter Abstand des Werkst|fffd|cks zur Rotationsachse des Beh|fffd|lters



'Berechnungsergebnisse in Datenblatt schreiben
With ThisWorkbook.Worksheets("SF22_autoWinkel").Activate  'Blatt "SF22_autoWinkel" ausw|fffd|hlen
    Range("L7").Value = WPx    'WPx in Blatt "SF22_autoWinkel" schreiben
    Range("L8").Value = WPy    'WPy in Blatt "SF22_autoWinkel" schreiben
    Range("L9").Value = WPz    'WPz in Blatt "SF22_autoWinkel" schreiben
    Range("L11").Value = WPxy   'WPxy in Blatt "SF22_autoWinkel" schreiben
End With

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen

    'Vergleich ob Kollision mit Wandung vorliegt
    Dim WA As Double
    Dim WA_neg As Double
    
    If WSxy > R Then    'Vergleich ob gr|fffd||fffd|ter Abstand des Werkst|fffd|cks von der Rotationsachse gr|fffd||fffd|er als der Beh|fffd|lterradius ist
        WA_neg = Round(WSxy - R, 2)
        MsgBox "Kollision mit Beh|fffd|lterwandung! Wandabstand betr|fffd|gt -" & WA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M26").Value = WA_neg * (-1) & " mm"  'Plotten des negativen Wandabstands (|fffd|berschneidung)
    ElseIf WSxy < R Then
        WA = Round(R - WSxy, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterwandung
        MsgBox "Es liegt keine Kollision vor! Der Wandabstand betr|fffd|gt " & WA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M26").Value = WA & " mm"   'Plotten des verbleibenden Wandabstands
    End If
    
     'Vergleich ob Kollision mit Boden vorliegt
    Dim BA As Double
    Dim BA_neg As Double
    
    If WPz < 0 Then    'Vergleich ob minimale z-Koordinate des Werkst|fffd|cks kleiner als 0 ist
        BA_neg = Round(WPz, 2)
        MsgBox "Kollision mit Beh|fffd|lterboden! Bodenabstand betr|fffd|gt " & BA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M30").Value = BA_neg & " mm"    'Plotten des negativen Bodenabstands
    ElseIf WPz > 0 Then
        BA = Round(WPz, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterboden
        MsgBox "Es liegt keine Kollision vor! Der Bodenabstand betr|fffd|gt " & BA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M30").Value = BA & " mm"    'Plotten des verbleibenden Bodenabstands
    End If
    
    
    'Alte Diagramme aus Datenblatt l|fffd|schen
    If ActiveSheet.ChartObjects.Count > 0 Then
        ActiveSheet.ChartObjects.Delete
    End If
    
        
    'Plot der Position im Beh|fffd|lter (Draufsicht)
    Dim FrameOben As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Ansicht von oben" definieren
    Dim PlotOben As Chart           'Variable f|fffd|r das Diagramm "Ansicht von oben" definieren
    
    Set FrameOben = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(18, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotOben = FrameOben.Chart
            
    With PlotOben
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von oben" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        .Axes(xlCategory).MinimumScale = -450
        .Axes(xlCategory).MaximumScale = 450
        .Axes(xlValue).MinimumScale = -450
        .Axes(xlValue).MaximumScale = 450
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!T9:T99")
            .Values = Range("=SF22_autoWinkel!S9:S99")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(2)       'Angaben zu zweitem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!T101:T190")
            .Values = Range("=SF22_autoWinkel!S101:S190")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(3)       'Angaben zu drittem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!T192:T281")
            .Values = Range("=SF22_autoWinkel!S192:S281")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(4)       'Angaben zu viertem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!T283:T372")
            .Values = Range("=SF22_autoWinkel!S283:S372")
        End With
    End With
    
    'Werkst|fffd|ckposition in "Beh|fffd|lteransicht von oben" einzeichnen
    With PlotOben
        .SeriesCollection.NewSeries
        With .SeriesCollection(5)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_autoWinkel!Z9:Z99")
            .Values = ("=SF22_autoWinkel!Y9:Y99")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(6)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_autoWinkel!Z101:Z190")
            .Values = ("=SF22_autoWinkel!Y101:Y190")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(7)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_autoWinkel!Z192:Z281")
            .Values = ("=SF22_autoWinkel!Y192:Y281")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(8)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_autoWinkel!Z283:Z372")
            .Values = ("=SF22_autoWinkel!Y283:Y372")
        End With
    
    End With
    
    'Plot der Position im Beh|fffd|lter (Seitenansicht)
    Dim FrameSeite As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Seitenansicht" definieren
    Dim PlotSeite As Chart           'Variable f|fffd|r das Diagramm "Seitenansicht" definieren
    
    Set FrameSeite = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(380, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotSeite = FrameSeite.Chart
    
    With PlotSeite
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von der Seite" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -500
        .Axes(xlCategory).MaximumScale = 500
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 400
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!AC9:AC10")
            .Values = Range("=SF22_autoWinkel!AB9:AB10")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(2)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!AC12:AC13")
            .Values = Range("=SF22_autoWinkel!AB12:AB13")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(3)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF22_autoWinkel!AC15:AC16")
            .Values = Range("=SF22_autoWinkel!AB15:AB16")
        End With
    End With
    
    'Werkst|fffd|ckposition "Beh|fffd|lteransicht von der Seite" einzeichnen
    With PlotSeite
        .SeriesCollection.NewSeries
        With .SeriesCollection(4)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_autoWinkel!AF9:AF10")
            .Values = ("=SF22_autoWinkel!AE9:AE10")
        End With
    End With
        
End With


End Sub


Attribute VB_Name = "SF22_manuWinkel"
Option Explicit

Sub Berechnung_SF22_manuWinkel()

Dim Pi As Double    'Pi definieren
Pi = 4 * Atn(1)

'Lesen der festen Maschinenparameter

With ThisWorkbook.Worksheets("SF22_manuWinkel").Activate  'Blatt "SF22_manuWinkel" ausw|fffd|hlen
    Dim L1 As Double        'Variablentyp: Gleitkommazahl
    Dim L2 As Double
    Dim L3 As Double
    Dim L4 As Double
    Dim L5 As Double
    Dim L6 As Double
    Dim L7 As Double
    Dim L1v_pos As Double
    Dim L1v_neg As Double
    Dim Lws_neg As Double
    Dim L3v_pos As Double
    Dim L3v_neg As Double
    Dim L5v_pos As Double
    Dim L5v_neg As Double
    Dim alpha_pos As Double
    Dim alpha_neg As Double
    Dim beta_pos As Double
    Dim beta_neg As Double
    Dim R As Double
    
    
    L1 = Range("C7").Value          'Variablenwert lesen
    L2 = Range("C8").Value
    L3 = Range("C9").Value
    L4 = Range("C10").Value
    L5 = Range("C11").Value
    L6 = Range("C12").Value
    L7 = Range("C15").Value
    L1v_pos = Range("C19").Value
    L1v_neg = Range("D19").Value
    L3v_pos = Range("C20").Value
    L3v_neg = Range("D20").Value
    L5v_pos = Range("C22").Value
    L5v_neg = Range("D22").Value
    Lws_neg = Range("D21").Value
    alpha_pos = Range("C26").Value
    alpha_neg = Range("D26").Value
    beta_pos = Range("C27").Value
    beta_neg = Range("D27").Value
    R = Range("C13").Value
End With

'Lesen der Eingabedaten des Nutzers und Kontrolle ob in richtigem Wertebereich
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen
    Dim L1v As Double       'Variablentyp: Gleitkommazahl
    Dim L3v As Double
    Dim L5v As Double
    Dim Lws As Double
    Dim alpha As Double
    Dim beta As Double
    Dim WSR As Double
    
    L1v = Range("C5").Value    'Variablenwert lesen
    L3v = Range("C6").Value
    L5v = Range("C7").Value
    Lws = Range("C8").Value
    alpha = Range("C9").Value
    beta = Range("C10").Value
    WSR = Range("C11").Value
    
    Range("C5:C11").Interior.ColorIndex = 0 'Zellen C5 bis C10 ohne farbliche F|fffd|llung formatieren
    
    If L1v < L1v_neg Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L1v gr|fffd||fffd|er als unteren Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L1v > L1v_pos Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L1v kleiner der oberen Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v < L3v_neg Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L3v gr|fffd||fffd|er als unteren Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v > L3v_pos Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L3v kleiner der oberen Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v < L5v_neg Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L5v gr|fffd||fffd|er als unteren Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v > L5v_pos Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L5v kleiner der oberen Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf Lws < Lws_neg Then
        MsgBox "Ung|fffd|ltige Eingabe! Werkst|fffd|ckl|fffd|nge ist kleiner als 0!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob Lws gr|fffd||fffd|er als unteren Grenze
        Range("C8").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha < alpha_neg Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob alpha gr|fffd||fffd|er als unteren Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha > alpha_pos Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob alpha kleiner der oberen Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta < beta_neg Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob beta gr|fffd||fffd|er als unteren Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta > beta_pos Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob beta kleiner der oberen Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf WSR < 0 Then
        MsgBox "Eingabe f|fffd|r Werkst|fffd|ckh|fffd|llradius au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob WSR kleiner als untere Grenze
        Range("C11").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    End If
End With

'Berechnung der Position von WP
Dim WPx As Double
Dim WPy As Double
Dim WPz As Double
Dim WPxy As Double
Dim WSxy As Double


alpha = alpha * Pi / 180        'Umrechnung der Winkel in Radian
beta = beta * Pi / 180

WPx = L2 + ((L5 + L5v) * Cos(alpha)) - (Sin(alpha) * ((L7 * Cos(alpha)) + ((L6 + Lws) * Sin(beta)))) 'Berechnung von WPx
WPy = (L3 + L3v) + ((L5 + L5v) * Sin(alpha)) + (Cos(alpha) * ((L7 * Cos(alpha)) + ((L6 + Lws) * Sin(beta)))) 'Berechnung von WPy
WPz = (L1 + L1v) - L4 + (L7 * Sin(beta)) - ((L6 + Lws) * Cos(beta))

'LR: WPx = L2 + ((L5 + L5v) * Cos(alpha)) + ((((L7 ^ 2) + ((L6 + Lws) ^ 2)) ^ (1 / 2)) * Sin(beta + Atn((L6 + Lws) / L7) - (Pi / 2)) * Sin(alpha))  'Berechnung von WPx
'LR: WPy = (L3 + L3v) + ((L5 + L5v) * Sin(alpha)) - ((L6 + Lws)) * ((((L7 ^ 2) + ((L6 + Lws) ^ 2)) ^ (1 / 2)) * Sin(beta + Atn((L6 + Lws) / L7) - (Pi / 2)) * Cos(alpha)) 'Berechnung von WPy
'LR: WPz = (L1 + L1v) - L4 - (((L7 ^ 2) + ((L6 + Lws) ^ 2)) ^ (1 / 2)) * Cos(beta + Atn((L6 + Lws) / L7) - (Pi / 2))    'Berechnung von WPz

WPxy = Sqr((WPx ^ 2) + (WPy ^ 2))   'Resultierender Abstand von WP zur Rotationsachse des Beh|fffd|lters
WSxy = WPxy + WSR                   'Gr|fffd||fffd|ter Abstand des Werkst|fffd|cks zur Rotationsachse des Beh|fffd|lters



'Berechnungsergebnisse in Datenblatt schreiben
With ThisWorkbook.Worksheets("SF22_manuWinkel").Activate  'Blatt "SF22_manuWinkel" ausw|fffd|hlen
    Range("L7").Value = WPx    'WPx in Blatt "SF22_manuWinkel" schreiben
    Range("L8").Value = WPy    'WPy in Blatt "SF22_manuWinkel" schreiben
    Range("L9").Value = WPz    'WPz in Blatt "SF22_manuWinkel" schreiben
    Range("L11").Value = WPxy   'WPxy in Blatt "SF22_manuWinkel" schreiben
End With

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen

    'Vergleich ob Kollision mit Wandung vorliegt
    Dim WA As Double
    Dim WA_neg As Double
    
    If WSxy > R Then    'Vergleich ob gr|fffd||fffd|ter Abstand des Werkst|fffd|cks von der Rotationsachse gr|fffd||fffd|er als der Beh|fffd|lterradius ist
        WA_neg = Round(WSxy - R, 2)
        MsgBox "Kollision mit Beh|fffd|lterwandung! Wandabstand betr|fffd|gt -" & WA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M26").Value = WA_neg * (-1) & " mm"  'Plotten des negativen Wandabstands (|fffd|berschneidung)
    ElseIf WSxy < R Then
        WA = Round(R - WSxy, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterwandung
        MsgBox "Es liegt keine Kollision vor! Der Wandabstand betr|fffd|gt " & WA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M26").Value = WA & " mm"   'Plotten des verbleibenden Wandabstands
    End If
    
     'Vergleich ob Kollision mit Boden vorliegt
    Dim BA As Double
    Dim BA_neg As Double
    
    If WPz < 0 Then    'Vergleich ob minimale z-Koordinate des Werkst|fffd|cks kleiner als 0 ist
        BA_neg = Round(WPz, 2)
        MsgBox "Kollision mit Beh|fffd|lterboden! Bodenabstand betr|fffd|gt " & BA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M30").Value = BA_neg & " mm"    'Plotten des negativen Bodenabstands
    ElseIf WPz > 0 Then
        BA = Round(WPz, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterboden
        MsgBox "Es liegt keine Kollision vor! Der Bodenabstand betr|fffd|gt " & BA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M30").Value = BA & " mm"    'Plotten des verbleibenden Bodenabstands
    End If
    
    
    'Alte Diagramme aus Datenblatt l|fffd|schen
    If ActiveSheet.ChartObjects.Count > 0 Then
        ActiveSheet.ChartObjects.Delete
    End If
    
        
    'Plot der Position im Beh|fffd|lter (Draufsicht)
    Dim FrameOben As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Ansicht von oben" definieren
    Dim PlotOben As Chart           'Variable f|fffd|r das Diagramm "Ansicht von oben" definieren
    
    Set FrameOben = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(18, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotOben = FrameOben.Chart
            
    With PlotOben
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von oben" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = -600
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!T9:T99")
            .Values = Range("=SF22_manuWinkel!S9:S99")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(2)       'Angaben zu zweitem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!T101:T190")
            .Values = Range("=SF22_manuWinkel!S101:S190")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(3)       'Angaben zu drittem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!T192:T281")
            .Values = Range("=SF22_manuWinkel!S192:S281")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(4)       'Angaben zu viertem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!T283:T372")
            .Values = Range("=SF22_manuWinkel!S283:S372")
        End With
        With .Axes(xlCategory)
            .HasTitle = True    'Abszissentitel aktivieren
            .AxisTitle.Text = "x"    'Abszissenname angeben
        End With
        With .Axes(xlValue)
            .HasTitle = True    'Ordinatentitel aktivieren
            .AxisTitle.Text = "y"    'Ordinatenname angeben
        End With
    End With
    
    'Werkst|fffd|ckposition in "Beh|fffd|lteransicht von oben" einzeichnen
    With PlotOben
        .SeriesCollection.NewSeries
        With .SeriesCollection(5)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_manuWinkel!Z9:Z99")
            .Values = ("=SF22_manuWinkel!Y9:Y99")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(6)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_manuWinkel!Z101:Z190")
            .Values = ("=SF22_manuWinkel!Y101:Y190")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(7)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_manuWinkel!Z192:Z281")
            .Values = ("=SF22_manuWinkel!Y192:Y281")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(8)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_manuWinkel!Z283:Z372")
            .Values = ("=SF22_manuWinkel!Y283:Y372")
        End With
    
    End With
    
    'Plot der Position im Beh|fffd|lter (Seitenansicht)
    Dim FrameSeite As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Seitenansicht" definieren
    Dim PlotSeite As Chart           'Variable f|fffd|r das Diagramm "Seitenansicht" definieren
    
    Set FrameSeite = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(380, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotSeite = FrameSeite.Chart
    
    With PlotSeite
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von der Seite" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!AC9:AC10")
            .Values = Range("=SF22_manuWinkel!AB9:AB10")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(2)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!AC12:AC13")
            .Values = Range("=SF22_manuWinkel!AB12:AB13")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(3)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF22_manuWinkel!AC15:AC16")
            .Values = Range("=SF22_manuWinkel!AB15:AB16")
        End With
    End With
    
    'Werkst|fffd|ckposition "Beh|fffd|lteransicht von der Seite" einzeichnen
    With PlotSeite
        .SeriesCollection.NewSeries
        With .SeriesCollection(4)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF22_manuWinkel!AF9:AF10")
            .Values = ("=SF22_manuWinkel!AE9:AE10")
        End With
    End With
        
End With


End Sub

Attribute VB_Name = "SF33_autoWinkel"
Option Explicit

Sub Berechnung_SF33_autoWinkel()

Dim Pi As Double    'Pi definieren
Pi = 4 * Atn(1)

'Lesen der festen Maschinenparameter

With ThisWorkbook.Worksheets("SF33_autoWinkel").Activate  'Blatt "SF33_autoWinkel" ausw|fffd|hlen
    Dim L1 As Double        'Variablentyp: Gleitkommazahl
    Dim L2 As Double
    Dim L3 As Double
    Dim L4 As Double
    Dim L5 As Double
    Dim L6 As Double
    Dim L7 As Double
    Dim L1v_pos As Double
    Dim L1v_neg As Double
    Dim Lws_neg As Double
    Dim L3v_pos As Double
    Dim L3v_neg As Double
    Dim L5v_pos As Double
    Dim L5v_neg As Double
    Dim alpha_pos As Double
    Dim alpha_neg As Double
    Dim beta_pos As Double
    Dim beta_neg As Double
    Dim R As Double
    
    
    L1 = Range("C7").Value          'Variablenwert lesen
    L2 = Range("C8").Value
    L3 = Range("C9").Value
    L4 = Range("C10").Value
    L5 = Range("C11").Value
    L6 = Range("C12").Value
    L7 = Range("C15").Value
    L1v_pos = Range("C19").Value
    L1v_neg = Range("D19").Value
    L3v_pos = Range("C20").Value
    L3v_neg = Range("D20").Value
    L5v_pos = Range("C22").Value
    L5v_neg = Range("D22").Value
    Lws_neg = Range("D21").Value
    alpha_pos = Range("C26").Value
    alpha_neg = Range("D26").Value
    beta_pos = Range("C27").Value
    beta_neg = Range("D27").Value
    R = Range("C13").Value
End With

'Lesen der Eingabedaten des Nutzers und Kontrolle ob in richtigem Wertebereich
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen
    Dim L1v As Double       'Variablentyp: Gleitkommazahl
    Dim L3v As Double
    Dim L5v As Double
    Dim Lws As Double
    Dim alpha As Double
    Dim beta As Double
    Dim WSR As Double
    
    L1v = Range("C5").Value    'Variablenwert lesen
    L3v = Range("C6").Value
    L5v = Range("C7").Value
    Lws = Range("C8").Value
    alpha = Range("C9").Value
    beta = Range("C10").Value
    WSR = Range("C11").Value
    
    Range("C5, C7:C8, C10, C11").Interior.ColorIndex = 0 'Zellen C5, C8, C10, C11 ohne farbliche F|fffd|llung formatieren
    
    If L1v < L1v_neg Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L1v gr|fffd||fffd|er als unteren Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L1v > L1v_pos Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L1v kleiner der oberen Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v < L3v_neg Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L3v gr|fffd||fffd|er als unteren Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v > L3v_pos Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L3v kleiner der oberen Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v < L5v_neg Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L5v gr|fffd||fffd|er als unteren Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v > L5v_pos Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L5v kleiner der oberen Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf Lws < Lws_neg Then
        MsgBox "Ung|fffd|ltige Eingabe! Werkst|fffd|ckl|fffd|nge ist kleiner als 0!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob Lws gr|fffd||fffd|er als unteren Grenze
        Range("C8").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha < alpha_neg Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob alpha gr|fffd||fffd|er als unteren Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha > alpha_pos Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob alpha kleiner der oberen Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta < beta_neg Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob beta gr|fffd||fffd|er als unteren Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta > beta_pos Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob beta kleiner der oberen Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf WSR < 0 Then
        MsgBox "Eingabe f|fffd|r Werkst|fffd|ckh|fffd|llradius au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob WSR kleiner als untere Grenze
        Range("C11").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    End If
End With

'Berechnung der Position von WP
Dim WPx As Double
Dim WPy As Double
Dim WPz As Double
Dim WPxy As Double
Dim WSxy As Double

alpha = alpha * Pi / 180        'Umrechnung der Winkel in Radian
beta = beta * Pi / 180

WPx = L3 + (L5 + L5v)   'Berechnung von WPx
WPy = -L2 + (L7 * Cos(beta)) + ((L6 + Lws) * Sin(beta)) 'Berechnung von WPy
WPz = (L1 + L1v) - L4 + (Sin(beta) * L7) - ((L6 + Lws) * Cos(beta)) 'Berechnung von WPz
WPxy = Sqr((WPx ^ 2) + (WPy ^ 2))   'Resultierender Abstand von WP zur Rotationsachse des Beh|fffd|lters
WSxy = WPxy + WSR                   'Gr|fffd||fffd|ter Abstand des Werkst|fffd|cks zur Rotationsachse des Beh|fffd|lters

'Berechnungsergebnisse in Datenblatt schreiben
With ThisWorkbook.Worksheets("SF33_autoWinkel").Activate  'Blatt "SF33_autoWinkel" ausw|fffd|hlen
    Range("L7").Value = WPx    'WPx in Blatt "SF33_autoWinkel" schreiben
    Range("L8").Value = WPy    'WPy in Blatt "SF33_autoWinkel" schreiben
    Range("L9").Value = WPz    'WPz in Blatt "SF33_autoWinkel" schreiben
    Range("L11").Value = WPxy   'WPxy in Blatt "SF33_autoWinkel" schreiben
End With

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen

    'Vergleich ob Kollision mit Wandung vorliegt
    Dim WA As Double
    Dim WA_neg As Double
    
    If WSxy > R Then    'Vergleich ob gr|fffd||fffd|ter Abstand des Werkst|fffd|cks von der Rotationsachse gr|fffd||fffd|er als der Beh|fffd|lterradius ist
        WA_neg = Round(WSxy - R, 2)
        MsgBox "Kollision mit Beh|fffd|lterwandung! Wandabstand betr|fffd|gt -" & WA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M26").Value = WA_neg * (-1) & " mm"  'Plotten des negativen Wandabstands (|fffd|berschneidung)
    ElseIf WSxy < R Then
        WA = Round(R - WSxy, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterwandung
        MsgBox "Es liegt keine Kollision vor! Der Wandabstand betr|fffd|gt " & WA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M26").Value = WA & " mm"   'Plotten des verbleibenden Wandabstands
    End If
    
     'Vergleich ob Kollision mit Boden vorliegt
    Dim BA As Double
    Dim BA_neg As Double
    
    If WPz < 0 Then    'Vergleich ob minimale z-Koordinate des Werkst|fffd|cks kleiner als 0 ist
        BA_neg = Round(WPz, 2)
        MsgBox "Kollision mit Beh|fffd|lterboden! Bodenabstand betr|fffd|gt " & BA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M30").Value = BA_neg & " mm"    'Plotten des negativen Bodenabstands
    ElseIf WPz > 0 Then
        BA = Round(WPz, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterboden
        MsgBox "Es liegt keine Kollision vor! Der Bodenabstand betr|fffd|gt " & BA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M30").Value = BA & " mm"    'Plotten des verbleibenden Bodenabstands
    End If
    
    
    'Alte Diagramme aus Datenblatt l|fffd|schen
    If ActiveSheet.ChartObjects.Count > 0 Then
        ActiveSheet.ChartObjects.Delete
    End If
    
        
    'Plot der Position im Beh|fffd|lter (Draufsicht)
    Dim FrameOben As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Ansicht von oben" definieren
    Dim PlotOben As Chart           'Variable f|fffd|r das Diagramm "Ansicht von oben" definieren
    
    Set FrameOben = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(18, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotOben = FrameOben.Chart
            
    With PlotOben
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von oben" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = -600
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!T9:T99")
            .Values = Range("=SF33_autoWinkel!S9:S99")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(2)       'Angaben zu zweitem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!T101:T190")
            .Values = Range("=SF33_autoWinkel!S101:S190")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(3)       'Angaben zu drittem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!T192:T281")
            .Values = Range("=SF33_autoWinkel!S192:S281")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(4)       'Angaben zu viertem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!T283:T372")
            .Values = Range("=SF33_autoWinkel!S283:S372")
        End With
        With .Axes(xlCategory)
            .HasTitle = True    'Abszissentitel aktivieren
            .AxisTitle.Text = "x"    'Abszissenname angeben
        End With
        With .Axes(xlValue)
            .HasTitle = True    'Ordinatentitel aktivieren
            .AxisTitle.Text = "y"    'Ordinatenname angeben
        End With
    End With
    
    'Werkst|fffd|ckposition in "Beh|fffd|lteransicht von oben" einzeichnen
    With PlotOben
        .SeriesCollection.NewSeries
        With .SeriesCollection(5)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF33_autoWinkel!Z9:Z99")
            .Values = ("=SF33_autoWinkel!Y9:Y99")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(6)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF33_autoWinkel!Z101:Z190")
            .Values = ("=SF33_autoWinkel!Y101:Y190")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(7)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF33_autoWinkel!Z192:Z281")
            .Values = ("=SF33_autoWinkel!Y192:Y281")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(8)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF33_autoWinkel!Z283:Z372")
            .Values = ("=SF33_autoWinkel!Y283:Y372")
        End With
    
    End With
    
    'Plot der Position im Beh|fffd|lter (Seitenansicht)
    Dim FrameSeite As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Seitenansicht" definieren
    Dim PlotSeite As Chart           'Variable f|fffd|r das Diagramm "Seitenansicht" definieren
    
    Set FrameSeite = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(380, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotSeite = FrameSeite.Chart
    
    With PlotSeite
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von der Seite" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -600
        .Axes(xlCategory).MaximumScale = 600
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!AC9:AC10")
            .Values = Range("=SF33_autoWinkel!AB9:AB10")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(2)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!AC12:AC13")
            .Values = Range("=SF33_autoWinkel!AB12:AB13")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(3)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF33_autoWinkel!AC15:AC16")
            .Values = Range("=SF33_autoWinkel!AB15:AB16")
        End With
    End With
    
    'Werkst|fffd|ckposition "Beh|fffd|lteransicht von der Seite" einzeichnen
    With PlotSeite
        .SeriesCollection.NewSeries
        With .SeriesCollection(4)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF33_autoWinkel!AF9:AF10")
            .Values = ("=SF33_autoWinkel!AE9:AE10")
        End With
    End With
        
End With


End Sub





Attribute VB_Name = "SF44_autoWinkel"
Option Explicit

Sub Berechnung_SF44_autoWinkel()

Dim Pi As Double    'Pi definieren
Pi = 4 * Atn(1)

'Lesen der festen Maschinenparameter

With ThisWorkbook.Worksheets("SF44_autoWinkel").Activate  'Blatt "SF44_autoWinkel" ausw|fffd|hlen
    Dim L1 As Double        'Variablentyp: Gleitkommazahl
    Dim L2 As Double
    Dim L3 As Double
    Dim L4 As Double
    Dim L5 As Double
    Dim L6 As Double
    Dim L7 As Double
    Dim L1v_pos As Double
    Dim L1v_neg As Double
    Dim Lws_neg As Double
    Dim L3v_pos As Double
    Dim L3v_neg As Double
    Dim L5v_pos As Double
    Dim L5v_neg As Double
    Dim alpha_pos As Double
    Dim alpha_neg As Double
    Dim beta_pos As Double
    Dim beta_neg As Double
    Dim R As Double
    
    L1 = Range("C7").Value          'Variablenwert lesen
    L2 = Range("C8").Value
    L3 = Range("C9").Value
    L4 = Range("C10").Value
    L5 = Range("C11").Value
    L6 = Range("C12").Value
    L7 = Range("C15").Value
    L1v_pos = Range("C19").Value
    L1v_neg = Range("D19").Value
    L3v_pos = Range("C20").Value
    L3v_neg = Range("D20").Value
    L5v_pos = Range("C22").Value
    L5v_neg = Range("D22").Value
    Lws_neg = Range("D21").Value
    alpha_pos = Range("C26").Value
    alpha_neg = Range("D26").Value
    beta_pos = Range("C27").Value
    beta_neg = Range("D27").Value
    R = Range("C13").Value
End With

'Lesen der Eingabedaten des Nutzers und Kontrolle ob in richtigem Wertebereich
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen
    Dim L1v As Double       'Variablentyp: Gleitkommazahl
    Dim L3v As Double
    Dim L5v As Double
    Dim Lws As Double
    Dim alpha As Double
    Dim beta As Double
    Dim WSR As Double
    
    L1v = Range("C5").Value    'Variablenwert lesen
    L3v = Range("C6").Value
    L5v = Range("C7").Value
    Lws = Range("C8").Value
    alpha = Range("C9").Value
    beta = Range("C10").Value
    WSR = Range("C11").Value
    
    Range("C5, C8, C10, C11").Interior.ColorIndex = 0 'Zellen C5, C8, C10, C11 ohne farbliche F|fffd|llung formatieren
    
    If L1v < L1v_neg Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L1v gr|fffd||fffd|er als unteren Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L1v > L1v_pos Then
        MsgBox "Eingabe f|fffd|r L1v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L1v kleiner der oberen Grenze
        Range("C5").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v < L3v_neg Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L3v gr|fffd||fffd|er als unteren Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L3v > L3v_pos Then
        MsgBox "Eingabe f|fffd|r L3v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L3v kleiner der oberen Grenze
        Range("C6").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v < L5v_neg Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob L5v gr|fffd||fffd|er als unteren Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf L5v > L5v_pos Then
        MsgBox "Eingabe f|fffd|r L5v au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob L5v kleiner der oberen Grenze
        Range("C7").Interior.ColorIndex = 3
        Exit Sub
    ElseIf Lws < Lws_neg Then
        MsgBox "Ung|fffd|ltige Eingabe! Werkst|fffd|ckl|fffd|nge ist kleiner als 0!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob Lws gr|fffd||fffd|er als unteren Grenze
        Range("C8").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha < alpha_neg Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob alpha gr|fffd||fffd|er als unteren Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf alpha > alpha_pos Then
        MsgBox "Eingabe f|fffd|r alpha au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob alpha kleiner der oberen Grenze
        Range("C9").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta < beta_neg Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"    'Abfrage ob beta gr|fffd||fffd|er als unteren Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf beta > beta_pos Then
        MsgBox "Eingabe f|fffd|r beta au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu gro|fffd|)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob beta kleiner der oberen Grenze
        Range("C10").Interior.ColorIndex = 3
        Exit Sub
    ElseIf WSR < 0 Then
        MsgBox "Eingabe f|fffd|r Werkst|fffd|ckh|fffd|llradius au|fffd|erhalb des m|fffd|glichen Bereichs (Wert zu klein)!", vbOKOnly + vbCritical, "Warnung"     'Abfrage ob WSR kleiner als untere Grenze
        Range("C11").Interior.ColorIndex = 3 'Rot einf|fffd|rben
        Exit Sub
    End If
End With

'Berechnung der Position von WP
Dim WPx As Double
Dim WPy As Double
Dim WPz As Double
Dim WPxy As Double
Dim WSxy As Double

alpha = alpha * Pi / 180        'Umrechnung der Winkel in Radian
beta = beta * Pi / 180

WPx = L3    'Berechnung von WPx
WPy = (L6 + Lws) * Sin(beta)    'Berechnung von WPy
WPz = (L1 + L1v) - L4 - ((L6 + Lws) * Cos(beta))    'Berechnung von WPz

WPxy = Sqr((WPx ^ 2) + (WPy ^ 2))   'Resultierender Abstand von WP zur Rotationsachse des Beh|fffd|lters
WSxy = WPxy + WSR                   'Gr|fffd||fffd|ter Abstand des Werkst|fffd|cks zur Rotationsachse des Beh|fffd|lters

'Berechnungsergebnisse in Datenblatt schreiben
With ThisWorkbook.Worksheets("SF44_autoWinkel").Activate  'Blatt "SF44_autoWinkel" ausw|fffd|hlen
    Range("L7").Value = WPx    'WPx in Blatt "SF44_autoWinkel" schreiben
    Range("L8").Value = WPy    'WPy in Blatt "SF44_autoWinkel" schreiben
    Range("L9").Value = WPz    'WPz in Blatt "SF44_autoWinkel" schreiben
    Range("L11").Value = WPxy   'WPxy in Blatt "SF44_autoWinkel" schreiben
End With

With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate  'Blatt "Nutzeroberflaeche" ausw|fffd|hlen

    'Vergleich ob Kollision mit Wandung vorliegt
    Dim WA As Double
    Dim WA_neg As Double
    
    If WSxy > R Then    'Vergleich ob gr|fffd||fffd|ter Abstand des Werkst|fffd|cks von der Rotationsachse gr|fffd||fffd|er als der Beh|fffd|lterradius ist
        WA_neg = Round(WSxy - R, 2)
        MsgBox "Kollision mit Beh|fffd|lterwandung! Wandabstand betr|fffd|gt -" & WA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M26").Value = WA_neg * (-1) & " mm"  'Plotten des negativen Wandabstands (|fffd|berschneidung)
    ElseIf WSxy < R Then
        WA = Round(R - WSxy, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterwandung
        MsgBox "Es liegt keine Kollision vor! Der Wandabstand betr|fffd|gt " & WA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M26").Value = WA & " mm"   'Plotten des verbleibenden Wandabstands
    End If
    
     'Vergleich ob Kollision mit Boden vorliegt
    Dim BA As Double
    Dim BA_neg As Double
    
    If WPz < 0 Then    'Vergleich ob minimale z-Koordinate des Werkst|fffd|cks kleiner als 0 ist
        BA_neg = Round(WPz, 2)
        MsgBox "Kollision mit Beh|fffd|lterboden! Bodenabstand betr|fffd|gt " & BA_neg & " mm", vbOKOnly + vbCritical, "Warnung"
        Range("M30").Value = BA_neg & " mm"    'Plotten des negativen Bodenabstands
    ElseIf WPz > 0 Then
        BA = Round(WPz, 2) 'Berechnung des verbleibenden Wandabstands zwischen Werkst|fffd|ck und Beh|fffd|lterboden
        MsgBox "Es liegt keine Kollision vor! Der Bodenabstand betr|fffd|gt " & BA & " mm", vbOKOnly + vbInformation, "Wandabstand"
        Range("M30").Value = BA & " mm"    'Plotten des verbleibenden Bodenabstands
    End If
    
    
    'Alte Diagramme aus Datenblatt l|fffd|schen
    If ActiveSheet.ChartObjects.Count > 0 Then
        ActiveSheet.ChartObjects.Delete
    End If
    
        
    'Plot der Position im Beh|fffd|lter (Draufsicht)
    Dim FrameOben As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Ansicht von oben" definieren
    Dim PlotOben As Chart           'Variable f|fffd|r das Diagramm "Ansicht von oben" definieren
    
    Set FrameOben = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(18, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotOben = FrameOben.Chart
            
    With PlotOben
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von oben" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -800
        .Axes(xlCategory).MaximumScale = 800
        .Axes(xlValue).MinimumScale = -800
        .Axes(xlValue).MaximumScale = 800
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!T9:T99")
            .Values = Range("=SF44_autoWinkel!S9:S99")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(2)       'Angaben zu zweitem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!T101:T190")
            .Values = Range("=SF44_autoWinkel!S101:S190")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(3)       'Angaben zu drittem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!T192:T281")
            .Values = Range("=SF44_autoWinkel!S192:S281")
        End With
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(4)       'Angaben zu viertem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!T283:T372")
            .Values = Range("=SF44_autoWinkel!S283:S372")
        End With
        With .Axes(xlCategory)
            .HasTitle = True    'Abszissentitel aktivieren
            .AxisTitle.Text = "x"    'Abszissenname angeben
        End With
        With .Axes(xlValue)
            .HasTitle = True    'Ordinatentitel aktivieren
            .AxisTitle.Text = "y"    'Ordinatenname angeben
        End With
    End With
    
    'Werkst|fffd|ckposition in "Beh|fffd|lteransicht von oben" einzeichnen
    With PlotOben
        .SeriesCollection.NewSeries
        With .SeriesCollection(5)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF44_autoWinkel!Z9:Z99")
            .Values = ("=SF44_autoWinkel!Y9:Y99")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(6)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF44_autoWinkel!Z101:Z190")
            .Values = ("=SF44_autoWinkel!Y101:Y190")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(7)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF44_autoWinkel!Z192:Z281")
            .Values = ("=SF44_autoWinkel!Y192:Y281")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(8)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF44_autoWinkel!Z283:Z372")
            .Values = ("=SF44_autoWinkel!Y283:Y372")
        End With
    
    End With
    
    'Plot der Position im Beh|fffd|lter (Seitenansicht)
    Dim FrameSeite As ChartObject    'Variable f|fffd|r Rahmen des Diagramms "Seitenansicht" definieren
    Dim PlotSeite As Chart           'Variable f|fffd|r das Diagramm "Seitenansicht" definieren
    
    Set FrameSeite = ThisWorkbook.Worksheets("Nutzeroberflaeche").ChartObjects.Add(380, 365, 350, 350) 'Erzeugung des Diagrammrahmens
    Set PlotSeite = FrameSeite.Chart
    
    With PlotSeite
        .ChartType = xlXYScatterLinesNoMarkers 'Diagrammtyp auf Liniendiagramm ohne Punkte gesetzt
        .HasTitle = True 'Diagrammtitel aktivieren
        .ChartTitle.Text = "Beh|fffd|lteransicht von der Seite" 'Diagrammtitel angegeben
        .HasLegend = False 'Legende ausgeschalten
        .Axes(xlCategory).HasMajorGridlines = False 'Gitternetzlinien in x-Richtung deaktiviert
        .Axes(xlValue).HasMajorGridlines = False    'Gitternetzlinien in y-Richtung deaktiviert
        .Axes(xlCategory).MinimumScale = -700
        .Axes(xlCategory).MaximumScale = 700
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 600
        .SeriesCollection.NewSeries     'Neue Datenreihe im Diagramm anlegen
        With .SeriesCollection(1)       'Angaben zu erstem Quadraten
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!AC9:AC10")
            .Values = Range("=SF44_autoWinkel!AB9:AB10")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(2)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!AC12:AC13")
            .Values = Range("=SF44_autoWinkel!AB12:AB13")
        End With
        .SeriesCollection.NewSeries
        With .SeriesCollection(3)       'Angaben zur Kontur
            .Border.Color = vbBlack
            .XValues = Range("=SF44_autoWinkel!AC15:AC16")
            .Values = Range("=SF44_autoWinkel!AB15:AB16")
        End With
    End With
    
    'Werkst|fffd|ckposition "Beh|fffd|lteransicht von der Seite" einzeichnen
    With PlotSeite
        .SeriesCollection.NewSeries
        With .SeriesCollection(4)       'Angaben zu erstem Quadraten des Werkst|fffd|ckkreises
            .Border.Color = vbRed
            .XValues = ("=SF44_autoWinkel!AF9:AF10")
            .Values = ("=SF44_autoWinkel!AE9:AE10")
        End With
    End With
        
End With


End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{37BBFFF1-53A1-4559-A1FF-90673E837999}{DA1085E4-96DF-4F04-9BA9-6E0E11AABEF3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()

'Formatierung der Zellen unterhalb der |fffd|berschrift entfernen.
With Worksheets("Nutzeroberflaeche")
    .Range("A5:E11").Interior.ColorIndex = 2
    .Range("A5:B11").Interior.Color = RGB(199, 205, 233)
End With

'Darstellung der Maschinenfreiheitsgrade l|fffd|schen
With ThisWorkbook.Worksheets("Nutzeroberflaeche").Activate
    Dim grafik(4) As String
    grafik(0) = "Grafik_SF21_manuWinkel"
    grafik(1) = "Grafik_SF22_manuWinkel"
    grafik(2) = "Grafik_SF22_autoWinkel"
    grafik(3) = "Grafik_SF33_autoWinkel"
    grafik(4) = "Grafik_SF44_autoWinkel"
    
    Dim n As Integer
    For n = 0 To 4
        If ShapeExists(ActiveSheet, grafik(n)) Then
             ActiveSheet.Shapes(grafik(n)).Delete
        End If
    Next n
End With

'M|fffd|gliche Maschinenparameter kopieren entsprechend der Auswahl in "Public Sub Userform_Initialize()"
Dim grey As String
grey = RGB(173, 173, 173)

If UserForm1.Box1.ListIndex = 0 Then
    Worksheets("SF21_manuWinkel").Range("H14:H21").Copy Destination:=Worksheets("Nutzeroberflaeche").Range("E4:E11")
    Worksheets("Nutzeroberflaeche").Range("C7").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    'Darstellung der Maschinenfreiheitsgrade ausw|fffd|hlen
    Sheets("SF21_manuWinkel").Select
    ActiveSheet.Shapes.Range(Array("Grafik_SF21_manuWinkel")).Select
ElseIf UserForm1.Box1.ListIndex = 1 Then
    Worksheets("SF22_manuWinkel").Range("H14:H21").Copy Destination:=Worksheets("Nutzeroberflaeche").Range("E4:E11")
    'Darstellung der Maschinenfreiheitsgrade ausw|fffd|hlen
    Sheets("SF22_manuWinkel").Select
    ActiveSheet.Shapes.Range(Array("Grafik_SF22_manuWinkel")).Select
ElseIf UserForm1.Box1.ListIndex = 2 Then
    Worksheets("SF22_autoWinkel").Range("H14:H21").Copy Destination:=Worksheets("Nutzeroberflaeche").Range("E4:E11")
    Worksheets("Nutzeroberflaeche").Range("C6:C7").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    'Darstellung der Maschinenfreiheitsgrade ausw|fffd|hlen
    Sheets("SF22_autoWinkel").Select
    ActiveSheet.Shapes.Range(Array("Grafik_SF22_autoWinkel")).Select
ElseIf UserForm1.Box1.ListIndex = 3 Then
    Worksheets("SF33_autoWinkel").Range("H14:H21").Copy Destination:=Worksheets("Nutzeroberflaeche").Range("E4:E11")
    Worksheets("Nutzeroberflaeche").Range("C6").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    Worksheets("Nutzeroberflaeche").Range("C9").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    'Darstellung der Maschinenfreiheitsgrade ausw|fffd|hlen
    Sheets("SF33_autoWinkel").Select
    ActiveSheet.Shapes.Range(Array("Grafik_SF33_autoWinkel")).Select
ElseIf UserForm1.Box1.ListIndex = 4 Then
    Worksheets("SF44_autoWinkel").Range("H14:H21").Copy Destination:=Worksheets("Nutzeroberflaeche").Range("E4:E11")
    Worksheets("Nutzeroberflaeche").Range("C6:C7").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    Worksheets("Nutzeroberflaeche").Range("C9").Interior.Color = grey 'Nicht vorhandene Maschinenparameter grau einf|fffd|rben
    'Darstellung der Maschinenfreiheitsgrade ausw|fffd|hlen
    Sheets("SF44_autoWinkel").Select
    ActiveSheet.Shapes.Range(Array("Grafik_SF44_autoWinkel")).Select
End If
'Grafik einf|fffd|gen
    Selection.Copy
    Sheets("Nutzeroberflaeche").Select
    Range("G5").Select
    ActiveSheet.Paste


'Datenblatt Nutzeroberfl|fffd|che formatieren
Range("A4:E4").Font.Bold = True '|fffd|berschriften in Zeile 4 in Fett
Range("A4:E4").Font.size = 13
Range("A5:B11").BorderAround xlContinuous, , , RGB(54, 82, 164)
Range("D5:E11").BorderAround xlContinuous, , , RGB(54, 82, 164)
Range("A4:B4").BorderAround xlContinuous, , , RGB(54, 82, 164)
Range("D4:E4").BorderAround xlContinuous, , , RGB(54, 82, 164)

Worksheets("Nutzeroberflaeche").Range("D5:E11").Interior.Color = RGB(199, 205, 233)

Unload UserForm1

End Sub


Public Sub UserForm_Initialize()

'Begriffe f|fffd|r Auswahlfenster (Maschinenauswahl)
With UserForm1.Box1
    .Text = "Bitte Maschine ausw|fffd|hlen"
    .AddItem "SF21 manueller Winkel"    'Index 0 Begriff
    .AddItem "SF22 manueller Winkel"    'Index 1 Begriff
    .AddItem "SF22 automatischer Winkel"    'Index 2 Begriff
    .AddItem "SF33 automatischer Winkel"    'Index 3 Begriff
    .AddItem "SF44 automatischer Winkel"    'Index 4 Begriff
End With

End Sub


INQUEST-PP=macro
