Attribute VB_Name = "JsonObject"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) JsonObject.cls                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' JSON|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|X
'
'-----------------------------------------------------------------------------

'



'********************
'JsonObject
'
'JsonParser|fffd||242||fffd||fffd||fffd||10d||c42c||fffd||fffd||fffd||a0bd|Dictionary|fffd||fffd||fffd|g|fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|p
'********************
 
Private m_keys As New Collection    '|fffd||fffd||fffd|L|fffd||fffd||fffd||102||fffd||fffd||fffd|L|fffd|[
Private m_data As Dictionary        '|fffd||fffd||fffd|b|fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd|f|fffd|[|fffd|^ Microsoft Scripting Runtime|fffd||fffd||fffd|Q|fffd||190||752||fffd|
Private m_inited As Boolean         '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3c2||754||fffd||fffd||fffd|
 
Public Property Get value(ByVal key As String) As Variant
    value = m_data(key)
End Property
 
Public Property Get Element(ByVal key As String) As Object
    Set Element = m_data(key)
End Property
 
Public Property Get JsonKeys() As Collection
    Set JsonKeys = m_keys
End Property
 
'********************
'|fffd|f|fffd|X|fffd|g|fffd||fffd||fffd|N|fffd|^
'********************
Private Sub Class_Terminate()
  Set m_keys = Nothing
  Set m_data = Nothing
End Sub
 
'********************
'|fffd||fffd||fffd||fffd||fffd||fffd|
'Argument|fffd|FJsonParser|fffd||143|p|fffd|[|fffd|X|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|Dictionary
'********************
Public Sub Init(ByVal jsonData As Dictionary)
    Dim key As Variant
     
    '|fffd||fffd|x|fffd||142||fffd|Init|fffd||fffd||fffd||102||382||fffd||102||fffd||fffd||fffd||fffd||727d||fffd||fffd||fffd||fffd||fffd||202||fffd|
    If m_inited Then Exit Sub
     
    For Each key In jsonData.keys
        m_keys.Add (key)
    Next
     
    Set m_data = jsonData
    m_inited = True
     
End Sub
 
'********************
'|fffd|L|fffd|[|fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
'Argument|fffd|F|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd|[
'Return|fffd|@|fffd|F|fffd||fffd||fffd||fffd||fffd||303|L|fffd|[|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||fffd|True|fffd|A|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|False
'********************
Public Function HasKey(ByVal key As String) As Boolean
 
    Dim keyCache As Variant
     
    For Each keyCache In m_keys
        If key = keyCache Then
            HasKey = True
            Exit Function
        End If
    Next
     
    HasKey = False
End Function
 
'********************
'|fffd|z|fffd||fffd|`|fffd|F|fffd|b|fffd|N
'Argument|fffd|F|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd|[
'Return|fffd|@|fffd|F|fffd||fffd||fffd||fffd||fffd||303|L|fffd|[|fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||fffd|Item|fffd||fffd|Collection|fffd||202||fffd|True|fffd|A|fffd||fffd||fffd||fffd||20a|O|fffd||202||fffd|False
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||702||fffd||fffd|A|fffd|L|fffd|[|fffd||fffd||fffd||302||fffd||fffd||302||fffd||fffd||202||fffd||fffd||a347||fffd||fffd|False|fffd||fffd||502||fffd|
'********************
Public Function IsArray(ByVal key As String) As Boolean
    Dim obj As Object
     
    IsArray = False
     
    If Not HasKey(key) Then Exit Function
     
    If TypeName(m_data.Item(key)) = "Collection" Then
        IsArray = True
    End If
     
End Function
Attribute VB_Name = "JsonParser"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) JsonObject.cls                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' JSON|fffd|f|fffd|[|fffd|^|fffd|N|fffd||fffd||fffd|X
'
'-----------------------------------------------------------------------------

'********************
'JsonParser
'
'Json|fffd|p|fffd|[|fffd|X|fffd||fffd||fffd||fffd|
'|fffd|p|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd|JsonObject|fffd||143||fffd||fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|
'
'|fffd||fffd||fffd||4c1|FJsonObject|fffd||fffd||fffd||fffd||fffd||c0b5||fffd||fffd|JsonObject|fffd||18c||fffd||fffd||fffd|Dictionary|fffd||303||fffd||fffd|b|fffd|p|fffd|[|fffd|N|fffd||fffd||fffd|X
'|fffd|@|fffd|@|fffd|@Json(JScriptTypeInfo)|fffd||fffd|Javascript|fffd||fffd|eval|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd|Object
'********************


Private m_js As Object  'javascript|fffd||fffd||fffd|s|fffd|p|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g

'********************
'|fffd|R|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|N|fffd|^
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|Javascript|fffd||312||fffd|`|fffd||fffd||fffd|s|fffd||fffd|
'********************
Public Sub Class_Initialize()
    Set m_js = CreateObject("ScriptControl")
    m_js.Language = "JScript"

    'Json|fffd||fffd|eval|fffd||fffd||fffd||fffd|Javactipt
    m_js.AddCode "function jsonParse(str) { return eval('(' + str + ')'); };"

    'Json|fffd||fffd||fffd||fffd|L|fffd|[|fffd||314|z|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|Javascript
    m_js.AddCode "function getKeys(h) { var keys=[]; for(var k in h){keys.push(k);} return keys; };"

    'Json|fffd||fffd||fffd|z|fffd||42a42||1c2||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|Javascript
    m_js.AddCode "function isArray(o) { return o instanceof Array; };"
End Sub

'********************
'|fffd|f|fffd|X|fffd|g|fffd||fffd||fffd|N|fffd|^
'********************
Private Sub Class_Terminate()
    Set m_js = Nothing
End Sub

'********************
'|fffd|p|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd|
'
'Argument|fffd|FJson|fffd||30c|`|fffd||fffd||fffd||242||202||fffd||fffd||102||fffd||fffd||9576||fffd||fffd||fffd||fffd|(String)
'Return|fffd|@|fffd|FCollection(JsonObject)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|JsonObject
'|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|Json|fffd|`|fffd||fffd||fffd||142||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|Nothing
'********************
Public Function parse(ByVal strJson As String) As Object

    Dim json As Object

    On Error GoTo ParseError
    Set json = m_js.codeobject.jsonParse(strJson)
    On Error GoTo 0

    'value|fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd|JScriptTypeInfo|fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||14ed2||80b7||fffd||fffd|
    'JScriptTypeInfo|fffd||20a|O|fffd||30f||a347||fffd||fffd|Nothing|fffd||fffd||502||fffd|
    If IsJson(json) Then
        If IsJsonArray(json) Then
            Set parse = JsonArrayToCollection(json)
        Else
            Set parse = JsonToDictionary(json)
        End If
    Else
        Set parse = Nothing
    End If

    Exit Function

ParseError:

    Debug.Print Err.Description
    Set parse = Nothing

End Function

'********************
'Json|fffd||314|z|fffd||fffd||fffd|Collection|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
'
'Argument|fffd|FJson|fffd||314|z|fffd||fffd|(JScriptTypeInfo)
'Return|fffd|@|fffd|FKey:Json|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|L|fffd|[ Value:JsonObject|fffd||fffd|Collection
'********************
Private Function JsonArrayToCollection(ByVal json As Object) As Collection

    Dim col As New Collection
    Dim key As Variant
    Dim objJson As Object
    Dim varJson As Variant
    Dim jsonObj As JsonObject
    Dim jsonData As Dictionary

    For Each key In GetKeys(json)

        On Error GoTo VariantPattern
        Set objJson = GetObject(json, key)


        If IsJsonArray(objJson) Then
            '|fffd|z|fffd||42f82||fffd||fffd||fffd||fffd||a347||fffd||34d||10b|A|fffd||fffd||fffd||fffd||fffd||fffd|
            Call col.Add(JsonArrayToCollection(objJson), key)
        Else
            '|fffd||fffd|v|fffd|f|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|JsonObject|fffd||fffd|Collection|fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
            Call col.Add(JsonToDictionary(objJson), key)
        End If

        GoTo Continue

VariantPattern:
        On Error GoTo 0
        varJson = GetValue(json, key)
        Set jsonObj = New JsonObject
        Set jsonData = New Dictionary

        Call jsonData.Add(key, varJson)
        Call jsonObj.Init(jsonData)
        Call col.Add(jsonObj, key)

        Resume Continue

Continue:
    Next

    On Error GoTo 0

    Set JsonArrayToCollection = col

End Function

'********************
'Json|fffd||314|z|fffd||fffd||fffd|Dictionary|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
'
'Argument|fffd|FJson(JScriptTypeInfo)
'Return|fffd|@|fffd|FKey:Json|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|L|fffd|[ Value:Json.key|fffd||fffd|JsonObject
'********************
Private Function JsonToDictionary(ByVal json As Object) As JsonObject

    Dim jsonDictionary As New Dictionary
    Dim col As New Collection
    Dim collectionValue As Variant
    Dim jsonObj As New JsonObject
    Dim key As Variant
    Dim objJson As Object
    Dim varJson As Variant
    Dim obj As Object
    Dim var As Variant

    For Each key In GetKeys(json)

        On Error GoTo VariantPattern
        Set objJson = GetObject(json, key)
        On Error GoTo 0

        If IsJsonArray(objJson) Then
            '|fffd|z|fffd||42f82||fffd||fffd||fffd||fffd||a347||fffd||fffd|Key|fffd|FJson|fffd||303|L|fffd|[ Value|fffd|FCollection(JsonObject|fffd|j|fffd||182||202||fffd|Dictionary|fffd||fffd||fffd||c42c|
            'Collection(JsonObject)|fffd||30d||c42c|

            For Each collectionValue In objJson
                'Collection|fffd||c42c||fffd||fffd||fffd||fffd|Json|fffd||314|z|fffd||42a8c||fffd||fffd||a0bd||fffd||a347||fffd||34d||10b|A|fffd||fffd||fffd||fffd||fffd||fffd|
                If IsJson(collectionValue) Then
                    Call col.Add(JsonToDictionary(collectionValue))
                Else
                    Call col.Add(collectionValue)
                End If
            Next

            Call jsonDictionary.Add(key, col)
        Else
            On Error GoTo ObjectPattern
            var = GetValue(objJson, key)
            On Error GoTo 0
            Call jsonDictionary.Add(key, var)
            GoTo Continue
        End If

        GoTo Continue

ObjectPattern:
        Call jsonDictionary.Add(key, JsonToDictionary(objJson))
        Resume Continue

VariantPattern:
        On Error GoTo 0
        Call jsonDictionary.Add(key, GetValue(json, key))
        Resume Continue
Continue:
    Next

    '|fffd||c42c||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|Dictionary|fffd||fffd|JsonObject|fffd||fffd||fffd||fffd||fffd|
    Call jsonObj.Init(jsonDictionary)

    Set JsonToDictionary = jsonObj

End Function

'********************
'|fffd|z|fffd||fffd|`|fffd|F|fffd|b|fffd|N
'
'Argument|fffd|FJson(JScriptTypeInfo)
'Return|fffd|@|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||202||fffd||fffd|True|fffd|A|fffd|z|fffd||fffd||142||202||fffd||fffd||fffd||fffd|False
'********************
Private Function IsJsonArray(ByVal json As Object) As Boolean
    IsJsonArray = CallByName(m_js.codeobject, "isArray", VbMethod, json)
End Function

'********************
'|fffd|L|fffd|[|fffd||64fe|
'
'Argument|fffd|FJson(JScriptTypeInfo)
'Return|fffd|@|fffd|F|fffd||fffd||fffd||fffd||fffd||303|L|fffd|[|fffd||314|z|fffd||fffd|
'********************
Private Function GetKeys(ByVal json As Object) As Object
    Set GetKeys = CallByName(m_js.codeobject, "getKeys", VbMethod, json)
End Function

Private Function IsJson(ByVal obj) As Boolean
    IsJson = TypeName(obj) = "JScriptTypeInfo"
End Function

Private Function GetObject(ByVal json As Object, ByVal key As Variant) As Object
    Set GetObject = CallByName(json, key, VbGet)
End Function

Private Function GetValue(ByVal json As Object, ByVal key As Variant) As Variant
    GetValue = CallByName(json, key, VbGet)
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'-----------------------------------------------------------------------------
' @(h) JsonObject.cls                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|{|fffd||fffd|
'
'-----------------------------------------------------------------------------
Private WithEvents myExcel As Excel.Application
Attribute myExcel.VB_VarHelpID = -1
Private Const MODULE_NAME As String = "ThisWorkBook"

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|A|fffd|h|fffd|C|fffd||fffd|_Open
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub Workbook_Open()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo Workbook_Open_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "Workbook_Open", True)
    '------------------------------------------
    gblLoadFlg = False
    '|fffd||691||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
    glConnInfoCnt = 0
    Erase gtConnInfo
    'Excel|fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g
    Set myExcel = Application
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "Workbook_Open", True)
    '------------------------------------------
    Exit Sub
Workbook_Open_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|A|fffd|h|fffd|C|fffd||fffd|_Close
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo Workbook_BeforeClose_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "Workbook_BeforeClose", True)
    '------------------------------------------
    Set myExcel = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "Workbook_BeforeClose", True)
    '------------------------------------------
    Exit Sub
Workbook_BeforeClose_OnErr:
    Call gblFuncStack.DispError
End Sub
'

''|fffd||fffd||fffd|u|fffd|b|fffd|N|fffd|C|fffd|x|fffd||fffd||fffd|g
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd|Excel|fffd|u|fffd|b|fffd|N_BeforeClose
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub myExcel_WorkbookBeforeClose(ByVal Wb As Workbook, Cancel As Boolean)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo myExcel_WorkbookBeforeClose_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "myExcel_WorkbookBeforeClose", True)
    '------------------------------------------
    Call gblDelConnInfo(Wb)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "myExcel_WorkbookBeforeClose", True)
    '------------------------------------------
    Exit Sub
myExcel_WorkbookBeforeClose_OnErr:
    Call gblFuncStack.DispError
End Sub

'|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd|O|fffd||303|u|fffd|b|fffd|N|fffd||30f||a347||fffd|A|fffd||fffd||fffd||30a||590||fffd||fffd||fffd||fffd||fffd||fffd||c0b5||fffd||202||fffd|
'|fffd||fffd||fffd||302||fffd||fffd||fffd|gSetConnInfo|fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd|Excel|fffd|u|fffd|b|fffd|N_Open
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub myExcel_WorkbookOpen(ByVal Wb As Workbook)
    Dim lblRet As Boolean
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo myExcel_WorkbookOpen_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "myExcel_WorkbookOpen", True)
    '------------------------------------------
    If Not (Wb Is ThisWorkbook) Then
        ReDim Preserve gtConnInfo(glConnInfoCnt)
        With gtConnInfo(glConnInfoCnt)
            .cFullName = Wb.FullName
            .cID = ""
            .cPassword = ""
            .cURL = gcGetConnURL(Wb)
            .blConn = False
        End With
        glConnInfoCnt = glConnInfoCnt + 1
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "myExcel_WorkbookOpen", True)
    '------------------------------------------
    Exit Sub
myExcel_WorkbookOpen_OnErr:
    Call gblFuncStack.DispError
End Sub

'Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo Workbook_BeforeSave_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "Workbook_BeforeSave", True)
'    '------------------------------------------
'    If SaveAsUI Then    '|fffd||fffd||fffd|O|fffd||fffd|t|fffd||fffd||fffd||115||6d1||fffd||fffd||30f||a347|
'    End If
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "Workbook_BeforeSave", True)
'    '------------------------------------------
'    Exit Sub
'Workbook_BeforeSave_OnErr:
'    Call gblFuncStack.DispError
'End Sub


Attribute VB_Name = "basCommon"
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basCommon.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||fffd||fffd||28a||590||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "basCommon"

'2014/04/15 QA|fffd|\No.117|fffd||389||fffd|
#If Win64 Then
Public Declare PtrSafe Function MessageBoxW Lib "User32" _
   (ByVal hWnd As LongPtr, _
    ByRef lpText As Byte, _
    ByRef lpCaption As Byte, _
    ByVal uType As Long) As Long
#Else
Public Declare Function MessageBoxW Lib "User32" _
   (ByVal hWnd As Long, _
    ByRef lpText As Byte, _
    ByRef lpCaption As Byte, _
    ByVal uType As Long) As Long
#End If

'2014/04/24 QA|fffd|\No.141|fffd||389||fffd|
#If Win64 Then
Public Declare PtrSafe Function GetFocus Lib "User32" () As LongPtr
#Else
Public Declare Function GetFocus Lib "User32" () As Long
#End If



'2014/04/15 QA|fffd|\No.117|fffd||389||fffd|
Public Function mlMsgBoxW(ByVal pcMsg As String, ByVal plType As Long, ByVal pcTitle As String) As Long
    Dim abytPrompt() As Byte
    Dim abytTitle() As Byte
    abytPrompt = pcMsg & vbNullChar
    If StrPtr(pcTitle) = 0 Then
        abytTitle = Application.Name & vbNullChar
    Else
        abytTitle = pcTitle & vbNullChar
    End If
    '2014/04/24 QA|fffd|\No.141|fffd||389||fffd|
'    mlMsgBoxW = MessageBoxW(Application.hWnd, abytPrompt(0), abytTitle(0), plType)
    mlMsgBoxW = MessageBoxW(GetFocus, abytPrompt(0), abytTitle(0), plType)
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : 1|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30c||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pvArr  (o) - |fffd|z|fffd||fffd|
'
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function glInArray(ByRef pvArr As Variant, ByVal pvVal As Variant) As Long
    Dim llcnt As Long
    Dim llRet As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "glInArray")
    '------------------------------------------
    llRet = -1
    If IsArray(pvArr) Then
        For llcnt = LBound(pvArr, 1) To UBound(pvArr, 1)
            If pvArr(llcnt) = pvVal Then
                llRet = llcnt
                Exit For
            End If
        Next
    End If
    glInArray = llRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "glInArray")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : Variant|fffd|^2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pvArr  (o) - |fffd|z|fffd||fffd|
'
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gInit2DArray(ByRef pvArr As Variant)
    Dim llcnt As Long
    Dim llcnt2 As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mInit2DArray")
    '------------------------------------------
    For llcnt = LBound(pvArr, 1) To UBound(pvArr, 1)
        For llcnt2 = LBound(pvArr, 2) To UBound(pvArr, 2)
            pvArr(llcnt, llcnt2) = ""
        Next
    Next
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mInit2DArray")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|w|fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook       (i) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName  (i) - |fffd|V|fffd|[|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||fffd|True
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblExistSheet2(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As Boolean
    Dim liCnt As Integer
    Dim lblRet As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblExistSheet2")
    '------------------------------------------
    lblRet = False
    For liCnt = 1 To poBook.Worksheets.Count
'        If pcSheetName = poBook.Worksheets(liCnt).Name Then
        If UCase(pcSheetName) = UCase(poBook.Worksheets(liCnt).Name) Then
            lblRet = True
            Exit For
        End If
    Next
    gblExistSheet2 = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblExistSheet2")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|w|fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook       (i) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName  (i) - |fffd|V|fffd|[|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||fffd|True
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblExistSheetByName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As Boolean
    Dim liCnt As Integer
    Dim lblRet As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblExistSheetByName")
    '------------------------------------------
    lblRet = False
    For liCnt = 1 To poBook.Worksheets.Count
        '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'        If pcSheetName = poBook.Worksheets(liCnt).Name Then
        If UCase(pcSheetName) = UCase(poBook.Worksheets(liCnt).Name) Then
            lblRet = True
            Exit For
        End If
    Next
    gblExistSheetByName = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblExistSheetByName")
    '------------------------------------------
End Function

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|w|fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||303|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      : poBook       (i) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
''             pcSheetName  (i) - |fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
''
'' |fffd||7c2||fffd|l    : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||fffd|True
''
'' |fffd||fffd||fffd|l      :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Public Function gcGetSheetNameByObjName(ByRef poBook As Excel.Workbook, ByVal pcObjSheetName As String) As String
'    Dim liCnt As Integer
'    Dim lcRet As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "gcGetSheetNameByObjName")
'    '------------------------------------------
'    lcRet = ""
'    For liCnt = 1 To poBook.Worksheets.Count
'        If pcObjSheetName = poBook.Worksheets(liCnt).Name Then
'            lcRet = poBook.Worksheets(liCnt).Name
'            Exit For
'        End If
'    Next
'    gcGetSheetNameByObjName = lcRet
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "gcGetSheetNameByObjName")
'    '------------------------------------------
'End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||14f|I|fffd|s|fffd||30e||64fe|
'
' |fffd||fffd||fffd||fffd|      : poSheet - (i) : |fffd||38f||6c3|V|fffd|[|fffd|g
'
' |fffd||7c2||fffd|l    : |fffd||14f|I|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||fffd||fffd|l      : UsedRange.Rows.Count|fffd||fffd||fffd||181|A|fffd||64ea||fffd|s|fffd||24b||d448d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||202||fffd|
'             |fffd||702||fffd|.UsedRange.End(xlDown).Row|fffd||fffd||fffd||181|A|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|1048576|fffd||fffd||502||fffd||fffd||102||fffd||fffd||702||fffd|
'             |fffd||fffd||fffd||fffd||fffd||82||70aa||fffd|g|fffd||fffd||fffd||202||fffd||fffd||302||141|A|fffd||fffd||fffd||30a||590||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'
' @(h)
'
'------------------------------------------------------------------------------
Public Function glGetLastRow(ByVal poSheet As Excel.Worksheet) As Long
    Dim llRow As Long
    Dim lvVal As Variant
    Dim llcnt As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "glGetLastRow")
    '------------------------------------------
    '|fffd|V|fffd|[|fffd|g|fffd||30d|s|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    llRow = poSheet.UsedRange.Row + poSheet.UsedRange.Rows.Count - 1
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||30f||a347||fffd|AllRow|fffd||312|l|fffd||fffd|1|fffd||182||202||fffd|
    '|fffd||fffd||fffd||302||fffd||fffd||7d6||7c2||fffd|l|fffd||fffd|1|fffd||202||fffd|A1|fffd|s|fffd||682||252|l|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If llRow = 1 Then
'        lvVal = poSheet.Range(poSheet.Cells(1, 1), poSheet.Cells(1, ci_DATA_COL_NUM)).Value
        lvVal = poSheet.Range(poSheet.Cells(1, cc_SHEET_ENV_COL_SHEET), poSheet.Cells(1, cc_SHEET_ENV_COL_SHEET)).value
        llRow = 0
        If Trim(lvVal) <> "" Then
            llRow = 1
        End If
'        For llCnt = 1 To UBound(lvVal, 2)
'            If lvVal(1, llCnt) <> "" Then
'                llRow = 1
'                Exit For
'            End If
'        Next
    End If
    glGetLastRow = llRow
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "glGetLastRow")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||389||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poCol  (o) - |fffd||fffd||310||fffd||fffd|l|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||7c2||fffd|l    : |fffd|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||317||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||fffd||fffd|l      : http://www.relief.jp/itnote/archives/003478.php |fffd||fffd||fffd|Q|fffd|l|fffd||242||fffd||fffd||10d||c42c|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gcColNum2Txt(ByRef poSheet As Excel.Worksheet, ByVal poCol As Long) As String
    Dim strAddr As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gcColNum2Txt")
    '------------------------------------------
'    strAddr = ThisWorkbook.Worksheets(1).Cells(1, poCol).Address(False, False)
    strAddr = poSheet.Cells(1, poCol).Address(False, False)
    gcColNum2Txt = Left(strAddr, Len(strAddr) - 1)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gcColNum2Txt")
    '------------------------------------------
End Function

Public Sub gtInitDataInfo(ByRef ptDataInfo As tDataSetInfo)
    '2014/05/07 QA|fffd|\No.147|fffd||389||fffd|
    '|fffd|V|fffd|[|fffd|g|fffd|`|fffd||fffd||fffd|X|fffd|g|fffd|R|fffd|[|fffd|h|fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd|-99999|fffd||255||3cd|X|fffd||fffd||fffd||fffd|
    With ptDataInfo
        .cBusho = gcDefCode
        .cDataName = ""
        Erase .cItem
        .cKiten = "A1"
        .cList = gcDefCode
        .cSheet = gcDefCode
        .cShain = gcDefCode
        .cSheetCName = ""
        .cSheetName = ""
        .iType = -1
        .lItemNum = 0
        Erase .cItemD
        .lItemNumD = 0
        .cSheetRireki = ""  '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
        .cDataRange = ""     '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
        '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
        .cSheetN = ""
        .cBushoN = ""
        .cShainN = ""
        .cListN = ""
        Erase .cItemN
        .cDataNameN = ""
        Erase .cItemDN
        '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
        .blRirekiSave = False
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        .blAfterSettings = True
        .blDispDLProduct = False
        .blDLProduct = False
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        .blCanUDList = False
        .blUDList = False
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        .blUDData = False
        '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        .blRirekiSaveName = True
    End With
End Sub

Private Sub gblIsCellAddressTest()
    Dim lblRet As Boolean
    Dim goBook As Excel.Workbook
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Set goBook = goGetActiveBook
    lblRet = gblIsCellAddress(goBook, "A1")
    lblRet = gblIsCellAddress(goBook, "ABC12345")
    lblRet = gblIsCellAddress(goBook, "XFD1048576")
    lblRet = gblIsCellAddress(goBook, "XFD1048577")
    lblRet = gblIsCellAddress(goBook, "XFE1048576")
    Set goBook = Nothing
End Sub

Private Sub gblIsSheetNameTest()
    Dim lblRet As Boolean
    Dim goBook As Excel.Workbook
    Dim lcCName As String
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Set goBook = goGetActiveBook
'    lblRet = gblIsSheetName(goBook, "Sheet1", lcCName)
'    lblRet = gblIsSheetName(goBook, "kakaka", lcCName)
'    lblRet = gblIsSheetName(goBook, "Sheet1:", lcCName)
    lblRet = gblIsSheetName(goBook, "Sheet1")
    lblRet = gblIsSheetName(goBook, "kakaka")
    lblRet = gblIsSheetName(goBook, "Sheet1:")
    
    Set goBook = Nothing
End Sub

'|fffd|Z|fffd||fffd||fffd||348||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||502||fffd|
Public Function gblIsCellAddress(ByRef poBook As Excel.Workbook, ByVal pcCell As String) As Boolean
    Dim lblRet As Boolean
    Dim loDummy As Excel.Range
    On Error Resume Next
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblIsCellAddress")
    '------------------------------------------
    '|fffd|Z|fffd||fffd||fffd||348||342||fffd|A1|fffd|`XFD1048576|fffd||242||fffd||fffd||90a9|
    lblRet = False
    Set loDummy = poBook.ActiveSheet.Range(pcCell)
'    Debug.Print Err.Number
    If Err.Number = 0 Then
        lblRet = True
    End If
    Set loDummy = Nothing
    gblIsCellAddress = lblRet
    On Error GoTo 0
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblIsCellAddress")
    '------------------------------------------
End Function

''|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||390|V|fffd|K|fffd||1c9||fffd||fffd||fffd||fffd|A|fffd|R|fffd|[|fffd|h|fffd|l|fffd|[|fffd||fffd||fffd||fffd||502||fffd|
''|fffd|G|fffd||fffd||fffd|[|fffd||202||727d||fffd||fffd||fffd||fffd||fffd||202||fffd|
''Public Function gblIsSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String, ByRef pcCodeName As String) As Boolean
'Public Function gblIsSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As Boolean
'    Dim loSheet As Excel.Worksheet
'    On Error GoTo Err1
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "gblIsSheetName")
'    '------------------------------------------
'    gblIsSheetName = False
'    Set loSheet = New Excel.Worksheet 'poBook.Worksheets.Add
'    loSheet.Name = pcSheetName
''    pcCodeName = loSheet.Name
'    On Error GoTo 0
'    gblIsSheetName = True
'    Exit Function
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblIsSheetName")
'    '------------------------------------------
'Err1:
'    Application.DisplayAlerts = False
'    If Not loSheet Is Nothing Then Set loSheet = Nothing 'loSheet.Delete
'    Application.DisplayAlerts = True
'    On Error GoTo 0
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblIsSheetName")
'    '------------------------------------------
'End Function

'|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
Public Function gblIsSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As Boolean
    Dim lblRet As Boolean
    Dim buf As String, c, ws
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblIsSheetName")
    '------------------------------------------
    lblRet = False
    gblIsSheetName = False
    
    buf = Trim(pcSheetName)
    ''(1)|fffd||d74c2||fffd||fffd||1c2||fffd||fffd||fffd|
    If buf = "" Then GoTo EXIT_LABEL
    ''(2)|fffd|s|fffd||fffd||fffd||215||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90a9|
    For Each c In Array(":", "\", "/", "?", "*", "[", "]")
        If InStr(buf, c) > 0 Then GoTo EXIT_LABEL
    Next c
    For Each c In Array("|fffd|F", "|fffd||fffd|", "|fffd|^", "|fffd|H", "|fffd||fffd|", "|fffd|u", "|fffd|v")
        If InStr(buf, c) > 0 Then GoTo EXIT_LABEL
    Next c
    ''(3)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|31|fffd||fffd||fffd||fffd||fffd||213||fffd||fffd||fffd|
    If Len(buf) > 31 Then GoTo EXIT_LABEL
    ''(4)|fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||90a9|
'    For Each ws In Worksheets
'        If ws.Name = buf Then Exit Sub
'    Next ws
    ''|fffd||fffd||fffd||5c2||103|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'    Worksheets.Add.Name = buf
    gblIsSheetName = True
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblIsSheetName")
    '------------------------------------------
End Function

Public Function goGetActiveBook() As Excel.Workbook
    Dim loBook As Excel.Workbook
    If gblDebug Then
        '|fffd|e|fffd|X|fffd|g|fffd|p|fffd|R|fffd|[|fffd|h
        Set loBook = Workbooks("eSM|fffd|A|fffd|g|fffd|A|fffd|h|fffd|C|fffd||fffd|.xlsx")
'        ReDim Preserve gtConnInfo(glConnInfoCnt)
'        With gtConnInfo(glConnInfoCnt)
'            .cFullName = loBook.FullName
'            .cID = ""
'            .cPassword = ""
'            .cURL = gcGetConnURL(loBook)
'        End With
'        glConnInfoCnt = glConnInfoCnt + 1
        Set goGetActiveBook = loBook
    Else
        Set goGetActiveBook = Application.ActiveWorkbook
    End If
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
'
' |fffd||fffd||fffd||fffd|      : pcSheetName - (i) :|fffd|V|fffd|[|fffd|g|fffd||fffd|
'             pcPostFix   - (i) :|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|V|fffd|[|fffd|g|fffd||310||694||fffd||fffd||fffd||fffd|i|fffd||28f||fffd||fffd|_BK|fffd|j
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|{|fffd|u_BK|fffd|v|fffd||182||fffd||fffd||fffd|
'
' @(h)
'
'------------------------------------------------------------------------------
Public Sub gBackupSheet(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String)
    Dim lcSheetNameBK As String
    Dim loSheet As Excel.Worksheet
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gBackupSheet")
    '------------------------------------------
'    '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'    lcSheetNameBK = pcSheetName & pcPostFix
'    Call gDeleteSheet(lcSheetNameBK)
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|i|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||355|s|fffd||8e||fffd||fffd||242||fffd||fffd||fffd|j
'    Call gCopyAndRenameSheet(pcSheetName, lcSheetNameBK)
    Set loSheet = gCopyAndRenameSheet(poBook, pcSheetName)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gBackupSheet")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||30d||d3dc|
'
' |fffd||fffd||fffd||fffd|      : pcSheetName - (i) :|fffd|V|fffd|[|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|{|fffd|u_BK|fffd|v|fffd||182||fffd||fffd||fffd|
'
' @(h)
'
'------------------------------------------------------------------------------
Public Sub gDeleteSheet(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String)
    Dim lcSheetNameBK As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gDeleteSheet")
    '------------------------------------------
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If gblExistSheet2(poBook, pcSheetName) Then
        Application.DisplayAlerts = False
        poBook.Worksheets(pcSheetName).Delete
        Application.DisplayAlerts = True
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gDeleteSheet")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcName1  (i) - |fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
'             pcName2  (i) - |fffd|R|fffd|s|fffd|[|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
'             piVisible1  (i) - |fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||309||8e||fffd||fffd||752||fffd|
'             piVisible2  (i) - |fffd|R|fffd|s|fffd|[|fffd||fffd|V|fffd|[|fffd|g|fffd||309||8e||fffd||fffd||752||fffd|
'
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gCopyAndRenameSheet(ByRef poBook As Excel.Workbook, ByVal pcName1 As String, Optional ByVal pcName2 As String = "", _
                                    Optional ByVal piVisible1 As Excel.XlSheetVisibility = xlSheetVisible, _
                                    Optional ByVal piVisible2 As Excel.XlSheetVisibility = xlSheetVisible) As Excel.Worksheet
    Dim loSheet1 As Excel.Worksheet
    Dim loSheet2 As Excel.Worksheet
    Dim lcCopySheetName As String   '2013/06/19 QA|fffd|\No.182|fffd||389||fffd|
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gCopyAndRenameSheet")
    '------------------------------------------
    Set gCopyAndRenameSheet = Nothing
    Application.DisplayAlerts = False   '2010|fffd||141|A|fffd||fffd||fffd||a0aa||fffd||fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd|O|fffd||30f|d|fffd||fffd||fffd||303||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||fffd|H
    Set loSheet1 = poBook.Worksheets(pcName1)
    loSheet1.Visible = xlSheetVisible
'2013/06/19 QA|fffd|\No.182|fffd||389||fffd| Start
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|AloSheet1.Copy|fffd||141|A2010,2013|fffd||30f||a347||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|AOnError|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||182||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||282||243|V|fffd|[|fffd|g|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||102||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|BExcel|fffd||303|o|fffd|O|fffd||fffd||fffd||fffd||202||fffd||fffd||301|H|fffd||209||fffd||fffd|Q|fffd||fffd|
    'http://answers.microsoft.com/ja-jp/office/forum/office_2010-excel/%E9%95%B7%E3%81%84%E3%82%B7%E3%83%BC%E3%83%88/968db683-1889-440d-8097-774f26fec42b
    '|fffd||fffd||fffd||302||fffd||fffd||7c1|A|fffd||293|||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||602||856a||fffd||fffd||fffd||fffd|
'    loSheet1.Copy after:=poBook.Worksheets(poBook.Worksheets.Count)
'    Set loSheet2 = poBook.ActiveSheet 'loSheet1.Copy after:=poBook.Worksheets(poBook.Worksheets.Count)|fffd||fffd||fffd||181|A|fffd|u|fffd||8e||fffd||fffd|V|fffd|[|fffd|g|fffd||30d||14c||fffd|v|fffd||251|}|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|
'    If pcName2 <> "" Then
'        loSheet2.Name = pcName2
'    End If
    lcCopySheetName = gCheckAndGetSheetName(poBook, pcName1)    '|fffd|A|fffd||503|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||70a9||fffd||fffd||fffd||7ce||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
    On Error Resume Next
    loSheet1.Copy after:=poBook.Worksheets(poBook.Worksheets.Count)
    If Err.Number = 0 Then  '|fffd||fffd||fffd||d3c8||fffd||fffd|
        Set loSheet2 = poBook.ActiveSheet 'loSheet1.Copy after:=poBook.Worksheets(poBook.Worksheets.Count)|fffd||fffd||fffd||181|A|fffd|u|fffd||8e||fffd||fffd|V|fffd|[|fffd|g|fffd||30d||14c||fffd|v|fffd||251|}|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|
        If pcName2 <> "" Then
            loSheet2.Name = pcName2         '|fffd||794||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30e|w|fffd||80aa||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
        Else
            loSheet2.Name = lcCopySheetName '|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|A|fffd||502||82||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g |fffd||fffd|1
        End If
    Else
        '|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|G|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd||fffd||a347||fffd|A|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|U|fffd|utemp|fffd|v|fffd|i|fffd||fffd||fffd||242||fffd||fffd||fffd||a347||fffd||fffd|temp (2)|fffd||fffd||fffd|j|fffd||242||fffd||fffd||103|R|fffd|s|fffd|[|fffd||fffd|
        '|fffd||30a9||fffd||70ca||fffd|l|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||311||389||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||242||357||fffd||fffd||202||fffd||fffd||202||90aa||fffd|A|fffd|O|fffd||302||fffd||fffd||7c1|j
        Dim lcTmp As String
        Dim lcName As String
        lcName = loSheet1.Name
        lcTmp = "temp"
        If gblExistSheet2(poBook, lcTmp) Then
            lcTmp = gCheckAndGetSheetName(poBook, "temp")
        End If
        loSheet1.Name = lcTmp
        loSheet1.Copy after:=poBook.Worksheets(poBook.Worksheets.Count)
        Set loSheet2 = poBook.ActiveSheet
        loSheet2.Name = gCheckAndGetSheetName(poBook, lcName)   '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd|
        loSheet1.Name = lcName  '|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    End If
    On Error GoTo 0
'2013/06/19 QA|fffd|\No.182|fffd||389||fffd| End
    Application.DisplayAlerts = True
    '|fffd|R|fffd|s|fffd|[|fffd||fffd||303|V|fffd|[|fffd|g|fffd||309||8e||fffd||fffd||752||fffd|
    loSheet1.Visible = piVisible1
    loSheet2.Visible = piVisible2
    Set gCopyAndRenameSheet = loSheet2
    Set loSheet1 = Nothing
    Set loSheet2 = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gCopyAndRenameSheet")
    '------------------------------------------
End Function

'2013/06/19 QA|fffd|\No.182|fffd||389||fffd| Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||301|A|fffd|A|fffd||515|t|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook       (i) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName  (i) - |fffd|V|fffd|[|fffd|g|fffd||fffd|
'
'
' |fffd||7c2||fffd|l    : 31|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd||7c2||fffd||fffd|A|fffd||515|t|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gCheckAndGetSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As String
    Dim llcnt As Long
    Dim lcRenban As String
    Dim lcSheetR As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gCheckAndGetSheetName")
    '------------------------------------------
    llcnt = 2
    lcSheetR = ""
    gCheckAndGetSheetName = ""
    '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd|+|fffd|A|fffd||502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Do
        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|31|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd||702||fffd||60a4||fffd||249||fffd||fffd|H|fffd||fffd||fffd||fffd|
        lcRenban = " (" & CStr(llcnt) & ")"
        lcSheetR = Left(pcSheetName, 31 - Len(lcRenban)) & lcRenban
        If gblExistSheet2(poBook, lcSheetR) = False Then
            Exit Do
        End If
        llcnt = llcnt + 1
    Loop
    gCheckAndGetSheetName = lcSheetR
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gCheckAndGetSheetName")
    '------------------------------------------
End Function
'2013/06/19 QA|fffd|\No.182|fffd||389||fffd| End

'2014/05/01 QA|fffd|\No.136,142|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||311|S|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook       (o) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName  (o) - |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||182||30e||64fe||fffd||752||fffd||fffd||fffd||314|z|fffd||fffd|
'             plListCnt    (o) - |fffd||64fe||fffd||752||80aa||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gGetAllSheetInfo(ByRef poBook As Excel.Workbook, ByRef ptDataInfo() As tDataSetInfo, ByRef plListCnt As Long)
    Dim llcnt As Long
    Dim lcSheet As String
    Dim ltTmp As tDataSetInfo
    Dim lblRet As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gGetAllSheetInfo")
    '------------------------------------------
    For llcnt = 1 To poBook.Worksheets.Count
        lcSheet = poBook.Worksheets(llcnt).Name
        If lcSheet <> cc_SHEET_ENV And lcSheet <> cc_SHEET_LOG Then
            lblRet = gblGetDataInfo(poBook, ltTmp, lcSheet)
            If lblRet Then
                ReDim Preserve ptDataInfo(plListCnt)
                ptDataInfo(plListCnt) = ltTmp
                plListCnt = plListCnt + 1
            End If
        End If
    Next
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gGetAllSheetInfo")
    '------------------------------------------
End Sub

Attribute VB_Name = "basConnInfo"
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basConnInfo.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||691||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||30a||598|A|fffd||590||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "basConnInfo"

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : Wb - (o) : Excel|fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gblDelConnInfo(ByVal Wb As Workbook)
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llIdx As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblDelConnInfo")
    '------------------------------------------
    llIdx = -1
    '|fffd|N|fffd||fffd||fffd|[|fffd|Y|fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||242||82||fffd||fffd||101|A|fffd||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    llIdx = glGetConnInfoIndex(Wb.FullName)
    '|fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|i|fffd|O|fffd||24b|l|fffd||7c2||101|A|fffd||14c||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|j
    If llIdx > -1 Then
        For llcnt2 = llIdx To glConnInfoCnt - 2
'            Call gCopyConnInfo(gtConnInfo(llCnt2), gtConnInfo(llCnt2 + 1))
            gtConnInfo(llcnt2) = gtConnInfo(llcnt2 + 1)
        Next
        glConnInfoCnt = glConnInfoCnt - 1
        If glConnInfoCnt > 0 Then
            ReDim Preserve gtConnInfo(glConnInfoCnt - 1)
        Else
            Erase gtConnInfo
        End If
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblDelConnInfo")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd||3d0||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptTo   - (o) : |fffd|R|fffd|s|fffd|[|fffd||fffd|tConInfo|fffd||3d0||fffd|
'             ptFrom - (o) : |fffd|R|fffd|s|fffd|[|fffd||fffd|tConInfo|fffd||3d0||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gCopyConnInfo(ByRef ptTo As tConnInfo, ByRef ptFrom As tConnInfo)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gCopyConnInfo")
    '------------------------------------------
    ptTo.cFullName = ptFrom.cFullName
    ptTo.cID = ptFrom.cID
    ptTo.cPassword = ptFrom.cPassword
    ptTo.cURL = ptFrom.cURL
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    ptTo.cProxyID = ptFrom.cProxyID
    ptTo.cProxyPW = ptFrom.cProxyPW
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gCopyConnInfo")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcFullName   - (o) : |fffd|u|fffd|b|fffd|N|fffd||303|t|fffd||fffd||fffd|p|fffd|X
'
' |fffd||7c2||fffd|l    : |fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|Excel|fffd|u|fffd|b|fffd|N|fffd||fffd|gtConnInfo|fffd||314|z|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function glGetConnInfoIndex(ByVal pcFullName As String) As Long
    Dim llcnt As Long
    Dim llIdx As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "glGetConnInfoIndex")
    '------------------------------------------
    llIdx = -1
    glGetConnInfoIndex = llIdx
    For llcnt = 0 To glConnInfoCnt - 1
        If gtConnInfo(llcnt).cFullName = pcFullName Then
            llIdx = llcnt
            Exit For
        End If
    Next
    glGetConnInfoIndex = llIdx
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "glGetConnInfoIndex")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcFullName   - (o) : |fffd|u|fffd|b|fffd|N|fffd||303|t|fffd||fffd||fffd|p|fffd|X
'
' |fffd||7c2||fffd|l    : |fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|Excel|fffd|u|fffd|b|fffd|N|fffd||fffd|gtConnInfo|fffd||30d|\|fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gtGetConnInfo(ByRef poBook As Excel.Workbook) As tConnInfo
    Dim ltRet As tConnInfo
    Dim llindex As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gtGetConnInfo")
    '------------------------------------------
    With ltRet
        .cFullName = poBook.FullName
        .cID = ""
        .cPassword = ""
        .cURL = ""
        .blConn = False
        llindex = glGetConnInfoIndex(.cFullName)
        If llindex > -1 Then
            .cID = gtConnInfo(llindex).cID
            .cPassword = gtConnInfo(llindex).cPassword
            .cURL = gtConnInfo(llindex).cURL
            .blConn = gtConnInfo(llindex).blConn
            '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            .cProxyID = gtConnInfo(llindex).cProxyID
            .cProxyPW = gtConnInfo(llindex).cProxyPW
            '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
        End If
    End With
    gtGetConnInfo = ltRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gtGetConnInfo")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||691||fffd||fffd||fffd||fffd||303|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||582||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcFullName   - (o) : |fffd|u|fffd|b|fffd|N|fffd||303|t|fffd||fffd||fffd|p|fffd|X
'             ptConnInfo   - (o) : |fffd||691||fffd||fffd|F|fffd||60f||fffd||fffd|\|fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gtSetConnInfo(ByRef poBook As Excel.Workbook, ByRef ptConnInfo As tConnInfo)
    Dim llindex As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gtSetConnInfo")
    '------------------------------------------
    llindex = glGetConnInfoIndex(poBook.FullName)
    If llindex < 0 Then '|fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
        ReDim Preserve gtConnInfo(glConnInfoCnt)
        With gtConnInfo(glConnInfoCnt)
            .cFullName = poBook.FullName
            .cID = ""
            .cPassword = ""
            .cURL = gcGetConnURL(poBook)
            .blConn = False
            '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            .cProxyID = ""
            .cProxyPW = ""
            '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        End With
        glConnInfoCnt = glConnInfoCnt + 1
        llindex = glGetConnInfoIndex(poBook.FullName)
    End If
    If llindex > -1 Then
        gtConnInfo(llindex) = ptConnInfo
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gtSetConnInfo")
    '------------------------------------------
End Function
Attribute VB_Name = "basDLData"
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basCommon.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||590||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "basDLData"

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|f|fffd|[|fffd|^|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcDateTime - (i) :
'             pcStatusCode - (o) : |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd|i|fffd|g|fffd|p|fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|j
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblDLData(ByVal pcAction As String, ByVal pcDateTime As String, ByRef ptData As Object, ByRef pcStatusCode As String, ByRef pcErrMsg As String, Optional ByVal piIndex As Long = 1) As Boolean
'    Dim ltData As Object
    Dim ltDLCls As clsDLData
    Dim lcMsg As String
    Dim lblRet As Boolean
    Dim lcURL As String
    Dim ltExecTime As New clsExecTime
    Dim lcNow As String
    Dim lcNowTmp As String
    Dim liRetryCnt As Integer
    '2014/04/21 QA|fffd|\No.135|fffd||389||fffd|
'    Const ciRetryMax As Integer = 5
    Const ciRetryMax As Integer = 0
    Dim lblRetry As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblDLData")
    '------------------------------------------
    pcStatusCode = ""
    pcErrMsg = ""
    gblDLData = False

    Call GP_Stop_SCUPD
    liRetryCnt = 0
    lcNow = pcDateTime
    lcNowTmp = pcDateTime
    lblRetry = False
    Do
        Set ltDLCls = New clsDLData
'        lcNow = Format(Now, "yyyyMMddhhmmss")
        '|fffd||fffd||fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd|A|fffd|O|fffd||fffd||18e||fffd||fffd||fffd||fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|A|fffd||3c2||fffd||fffd||702||151||482||fffd|
        If lblRetry Then
            Do
                lcNow = Format(Now, "yyyyMMddhhmmss")
                If lcNow <> lcNowTmp Then Exit Do
            Loop
        End If
        lblRetry = False
        lcNowTmp = lcNow
        '|fffd|J|fffd|n|fffd||fffd||fffd|O|fffd|o|fffd||fffd|
        ltExecTime.setStartTime
        Call gSetLog(Nothing, 1, lcNow, pcAction, 0, gtActConnInfo.cID)
'        lblRet = ltDLCls.gblGetData(ptData, pcAction, lcURL, pcDateTime, pcErrMsg)
        lblRet = ltDLCls.gblGetData(ptData, pcAction, lcURL, lcNow, pcErrMsg, piIndex)
        '|fffd|I|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd||fffd|
        ltExecTime.setEndTime
        Call gSetLog(ptData, 2, Format(Now, "yyyyMMddhhmmss"), pcAction, ltExecTime.getExecTime, gtActConnInfo.cID)
        If lblRet Then
            '|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||142||fffd||fffd||fffd||fffd||a347|
            If ptData Is Nothing Then
                pcErrMsg = "|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||30c|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd||fffd|URL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
                lblRet = False
                GoTo EXIT_LABEL
            End If
            '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
            If ptData.HasKey("statusCode") Then
                pcStatusCode = ptData.value("statusCode")
                '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
                If Val(pcStatusCode) <> 1 Then  '|fffd||fffd|
                    '1  : |fffd||fffd||fffd||fffd|
                    '401: |fffd|F|fffd||603|G|fffd||fffd||fffd|[
                    '420: |fffd|A|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||102||fffd||fffd||fffd||a347|
                    '421: |fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||702||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||a347|
                    '500: |fffd|\|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|G|fffd||fffd||fffd|[
                    lcMsg = ""
                    '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
                    'errorMessage|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|B|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|]|fffd||fffd||fffd||303||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||fffd||fffd|B
                    lcMsg = ptData.value("errorMessage")
                    If Trim(lcMsg) = "" Then
                        Select Case pcStatusCode
                            Case "401":
                                lcMsg = "|fffd||fffd||fffd|[|fffd|UID|fffd|E|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
                                lblRetry = True '|fffd|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd||242||fffd||fffd|F|fffd||603|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7c1|A5|fffd||43283|g|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd|
                                liRetryCnt = liRetryCnt + 1
                            Case "420": lcMsg = "|fffd|A|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
                            Case "421": lcMsg = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||702||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
                            Case "500": lcMsg = "|fffd|\|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
                        End Select
                        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'                        pcErrMsg = lcMsg & "(" & pcStatusCode & ")"
                        pcErrMsg = cc_ERRMSG_COMMON & vbCrLf & lcMsg & "(" & pcStatusCode & ")"
                    Else
                        pcErrMsg = lcMsg
                    End If
                    lblRet = False
                End If
            Else
                pcErrMsg = "|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B"
                lblRet = False
                GoTo EXIT_LABEL
            End If
        End If
        Set ltDLCls = Nothing
        If lblRetry = False Or liRetryCnt > ciRetryMax Then
            Exit Do
        End If
    Loop
EXIT_LABEL:
    Call GP_Start_SCUPD
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblDLData")
    '------------------------------------------
    gblDLData = lblRet
End Function

'*******************************************************************************
'   |fffd||fffd||295|`|fffd||fffd|X|fffd|V|fffd||fffd|~
'*******************************************************************************
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||295|`|fffd||fffd|X|fffd|V|fffd||fffd|~
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub GP_Stop_SCUPD()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "GP_Stop_SCUPD")
    '------------------------------------------
    With Application
        .ScreenUpdating = False
'        .EnableCancelKey = xlDisabled
        .Calculation = xlCalculationManual
        .Cursor = xlWait
        .EnableEvents = False
    End With
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "GP_Stop_SCUPD")
    '------------------------------------------
End Sub

'*******************************************************************************
'   |fffd||fffd||295|`|fffd||fffd|X|fffd|V|fffd||fffd||fffd|A
'*******************************************************************************
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||295|`|fffd||fffd|X|fffd|V|fffd||fffd||fffd|A
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub GP_Start_SCUPD()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "GP_Start_SCUPD")
    '------------------------------------------
    With Application
        .Calculation = xlCalculationAutomatic
        .Cursor = xlDefault
        .EnableCancelKey = xlInterrupt
        .EnableEvents = True
        .StatusBar = False
        .ScreenUpdating = True
    End With
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "GP_Start_SCUPD")
    '------------------------------------------
End Sub




'20140327
Public Sub DumpJSONObj(ByRef json As Variant)
    
    If TypeName(json) = "Dictionary" Then
        Call DumpDictionaly(json)
    ElseIf TypeName(json) = "Collection" Then
        Call DumpCollection(json)
    Else
        Debug.Print "value:" & json
    End If
    
    
End Sub

Public Sub DumpCollection(ByRef dic As Variant)
    Dim keys
    Dim i
    For i = 0 To dic.Count - 1
        Debug.Print "ArrayNo:" & i
        Call DumpJSONObj(dic.Item(i + 1))
    Next i
End Sub

Public Sub DumpDictionaly(ByRef dic As Variant)
    Dim keys
    Dim i
    keys = dic.keys
    For i = 0 To dic.Count - 1
        Dim key
        key = keys(i)
        Debug.Print "key:" & key
        Call DumpJSONObj(dic.Item(key))
    Next i
End Sub

Attribute VB_Name = "basEnvSheet"
Option Explicit

'-----------------------------------------------------------------------------
' @(h) basEnvSheet.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||598|A|fffd||590||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "basEnvSheet"

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|/|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd|}|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poExcelApp - (o) : Excel|fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblInsertSheet(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String) As Boolean
    Dim loSheet As Excel.Worksheet
    Dim lcActSheet As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblInsertSheet")
    '------------------------------------------
    '|fffd||8b||fffd||fffd||752||fffd|/|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    If gblExistSheet2(poBook, pcSheetName) = False Then
        lcActSheet = poBook.ActiveSheet.Name
        '|fffd||fffd||fffd||fffd||fffd||a347||fffd||341|A|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        Set loSheet = poBook.Worksheets.Add
        loSheet.Name = pcSheetName
        '|fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd|A|fffd|S|fffd|Z|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||242||fffd||fffd||fffd|
        '2014/04/12 QA|fffd|\No.108|fffd||389||fffd|
'        loSheet.Visible = xlSheetHidden
        If pcSheetName = cc_SHEET_ENV Then
            loSheet.Visible = xlSheetHidden
        Else
            '|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||8e||fffd||fffd||fffd||502||151|}|fffd||fffd||fffd||fffd||fffd||90aa||fffd|A|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||342||fffd||fffd||182||fffd||fffd||183|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||242||fffd||fffd||fffd|
            loSheet.Visible = xlSheetVisible
            poBook.Activate
            poBook.Worksheets(lcActSheet).Select
        End If
        loSheet.Cells.NumberFormatLocal = "@"
        If pcSheetName = cc_SHEET_ENV Then
            loSheet.Columns(cc_SHEET_ENV_COL_TYPE).NumberFormatLocal = "G/|fffd|W|fffd||fffd|" '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||30f||a347||fffd|A2|fffd||fffd||682||302||755|W|fffd||fffd||fffd||242||fffd||fffd||fffd|
        End If
    End If
    
    Set loSheet = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblInsertSheet")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||30d||d3dc||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook - (o) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||301|A1|fffd|s|fffd||fffd||fffd||182||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|e|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd||34f||cbd42||242||82||fffd||fffd||fffd|
'             |fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||256||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblDelSheetInfo(ByRef poBook As Excel.Workbook) As Boolean
    Dim loSheet As Excel.Worksheet
    Dim llcnt As Long
    Dim llDelRowCnt As Long
    Dim lhlDelRow() As Long
    Dim lhcVal As Variant
    Dim lcSheet As String
    Dim llLastRow As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblDelSheetInfo")
    '------------------------------------------
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    llDelRowCnt = 0
    If gblExistSheet2(poBook, cc_SHEET_ENV) Then
        '|fffd||fffd||fffd||fffd||a347||fffd||341|A|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||70bb||fffd||30f||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|B
        Set loSheet = poBook.Worksheets(cc_SHEET_ENV)
        llLastRow = glGetLastRow(loSheet)   '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||30d||14c||fffd||30d|s|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B|fffd||64ea||fffd||fffd||fffd||fffd|s|fffd||30e||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
        '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||142||202||fffd||fffd||fffd||fffd|
        If llLastRow > cc_SHEET_ENV_ROW_SETTING - 1 Then
            lhcVal = loSheet.Range(loSheet.Cells(cc_SHEET_ENV_ROW_SETTING, 1), loSheet.Cells(llLastRow, cc_SHEET_ENV_COL_MAX)).value
            If IsArray(lhcVal) Then
                For llcnt = 1 To UBound(lhcVal)
                    lcSheet = Trim(CStr(lhcVal(llcnt, cc_SHEET_ENV_COL_SHEET))) '|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
                    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'                    If lcSheet <> loSheet.Name Then
                    If UCase(lcSheet) <> UCase(loSheet.Name) Then
                        If gblExistSheetByName(poBook, lcSheet) = False Then
                            ReDim Preserve lhlDelRow(llDelRowCnt)
                            lhlDelRow(llDelRowCnt) = llcnt + cc_SHEET_ENV_ROW_SETTING - 1
                            llDelRowCnt = llDelRowCnt + 1
                        End If
                    End If
                Next
                '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd|j
                If llDelRowCnt > 0 Then
                    For llcnt = llDelRowCnt - 1 To 0 Step -1
                        loSheet.Rows(lhlDelRow(llcnt)).Delete
                    Next
                End If
            End If
        End If
    End If
    Set loSheet = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblDelSheetInfo")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||30d||d3dc||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook - (o) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||301|A1|fffd|s|fffd||fffd||fffd||182||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|e|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd||34f||cbd42||242||82||fffd||fffd||fffd|
'             |fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||256||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblDelSheetInfoPara(ByRef poBook As Excel.Workbook, ByVal pcObjSheetName As String) As Boolean
    Dim loSheet As Excel.Worksheet
    Dim llcnt As Long
    Dim lhcVal As Variant
    Dim llLastRow As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblDelSheetInfoPara")
    '------------------------------------------
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'    llDelRowCnt = 0
    If gblExistSheet2(poBook, cc_SHEET_ENV) Then
        '|fffd||fffd||fffd||fffd||a347||fffd||341|A|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||70bb||fffd||30f||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|B
        '|fffd|V|fffd|[|fffd|g|fffd||fffd|.Name|fffd||142||342||202||fffd|.CodeName|fffd||152|T|fffd||fffd||fffd|i|fffd||fffd||fffd|[|fffd|U|fffd||143|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||3c2||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||101|j
        Set loSheet = poBook.Worksheets(cc_SHEET_ENV)
        llLastRow = glGetLastRow(loSheet)   '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||30d||14c||fffd||30d|s|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B|fffd||64ea||fffd||fffd||fffd||fffd|s|fffd||30e||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
        '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||142||202||fffd||fffd||fffd||fffd|
        If llLastRow > cc_SHEET_ENV_ROW_SETTING - 1 Then
            lhcVal = loSheet.Range(loSheet.Cells(cc_SHEET_ENV_ROW_SETTING, 1), loSheet.Cells(llLastRow, cc_SHEET_ENV_COL_MAX)).value
            If IsArray(lhcVal) Then
                For llcnt = 1 To UBound(lhcVal)
                    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'                    If lhcVal(llCnt, cc_SHEET_ENV_COL_SHEET) = pcObjSheetName Then
                    If UCase(lhcVal(llcnt, cc_SHEET_ENV_COL_SHEET)) = UCase(pcObjSheetName) Then
                        loSheet.Rows(llcnt + cc_SHEET_ENV_ROW_SETTING - 1).Delete
                        Exit For
                    End If
                Next
            End If
        End If
    End If
    Set loSheet = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblDelSheetInfoPara")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||30d|s|fffd||292|u|fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook - (o) : |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'           : pcSheetObjName - (o) : |fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||30d|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||301|A1|fffd|s|fffd||fffd||fffd||182||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|e|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd||34f||cbd42||242||82||fffd||fffd||fffd|
'             |fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||42a82||fffd||fffd||fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function glGetEnvInfoIndex(ByRef poBook As Excel.Workbook, ByVal pcSheetObjName As String) As Long
    Dim loSheet As Excel.Worksheet
    Dim llRet As Long
    Dim lhcVal As Variant
    Dim llcnt As Long
    Dim llLastRow As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "glGetEnvInfoIndex")
    '------------------------------------------
    llRet = 0
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||302||74f||fffd||fffd||fffd|
    If gblExistSheet2(poBook, cc_SHEET_ENV) Then
        Set loSheet = poBook.Worksheets(cc_SHEET_ENV)
        llLastRow = glGetLastRow(poBook.Worksheets(cc_SHEET_ENV))
        '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||142||202||fffd||fffd||fffd||381|A|fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||30f||fffd||42a82||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If llLastRow > cc_SHEET_ENV_ROW_SETTING - 1 Then
            lhcVal = loSheet.Range(loSheet.Cells(cc_SHEET_ENV_ROW_SETTING, 1), loSheet.Cells(llLastRow, cc_SHEET_ENV_COL_MAX)).value
            If IsArray(lhcVal) Then
                For llcnt = 1 To UBound(lhcVal)
                    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'                    If lhcVal(llCnt, cc_SHEET_ENV_COL_SHEET) = pcSheetObjName Then
                    If UCase(lhcVal(llcnt, cc_SHEET_ENV_COL_SHEET)) = UCase(pcSheetObjName) Then
                        llRet = llcnt + cc_SHEET_ENV_ROW_SETTING - 1
                        Exit For
                    End If
                Next
            End If
        End If
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "glGetEnvInfoIndex")
    '------------------------------------------
    glGetEnvInfoIndex = llRet
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pvRet - (o)  : pcSheetObjName|fffd||14e|w|fffd||80b5||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||242||82||fffd||fffd||102||310||691||fffd||fffd||fffd||fffd|i2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|j
'           : poBook - (o) : |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'           : pcSheetObjName - (o) : |fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|True
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||301|A1|fffd|s|fffd||fffd||fffd||182||255||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|e|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd||34f||cbd42||242||82||fffd||fffd||fffd|
'             |fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function gvGetEnvInfo(ByRef pvRet As Variant, ByRef poBook As Excel.Workbook, ByVal pcSheetObjName As String) As Boolean
    Dim lblRet As Boolean
    Dim llindex As Long
    Dim loSheet As Excel.Worksheet
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gvGetEnvInfo")
    '------------------------------------------
    lblRet = False
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||313||fffd||fffd|Y|fffd|V|fffd|[|fffd|g|fffd||30f||fffd||42a82||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe|
    llindex = glGetEnvInfoIndex(poBook, pcSheetObjName)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||30d|s|fffd||303|f|fffd|[|fffd|^|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||155||502||fffd|
    If llindex > 0 Then
        Set loSheet = poBook.Worksheets(cc_SHEET_ENV)
        pvRet = loSheet.Range(loSheet.Cells(llindex, cc_SHEET_ENV_COL_SHEET), loSheet.Cells(llindex, cc_SHEET_ENV_COL_MAX)).value
        lblRet = True
        Set loSheet = Nothing
    End If
    gvGetEnvInfo = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gvGetEnvInfo")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||582||314|z|fffd||fffd|f|fffd|[|fffd|^|fffd||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pvData - (o) : |fffd||691||fffd||fffd||fffd||fffd|i2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|j
'           : poBook - (o) : |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'           : pcSheetObjName - (o) : |fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||581|A|fffd|z|fffd||fffd||30c|`|fffd||301|A|fffd|V|fffd|[|fffd|g|fffd||310||691||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||242||fffd||fffd||fffd||38f||33d1||fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd||fffd||38d||14c||fffd||fffd||fffd||252||1c9||fffd||fffd|j
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub gSetEnvInfo(ByRef pvData As Variant, ByRef poBook As Excel.Workbook, ByVal pcSheetObjName As String)
    Dim lblRet As Boolean
    Dim llindex As Long
    Dim loSheet As Excel.Worksheet
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gSetEnvInfo")
    '------------------------------------------
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||313||fffd||fffd|Y|fffd|V|fffd|[|fffd|g|fffd||30f||fffd||42a82||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||64fe|
    llindex = glGetEnvInfoIndex(poBook, pcSheetObjName)
    Set loSheet = poBook.Worksheets(cc_SHEET_ENV)
    If llindex > 0 Then
    Else
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||149||fffd||fffd|s+1|fffd||30d|s
        llindex = glGetLastRow(poBook.Worksheets(cc_SHEET_ENV))
        If llindex < cc_SHEET_ENV_ROW_SETTING Then
            llindex = cc_SHEET_ENV_ROW_SETTING
        Else
            llindex = llindex + 1
        End If
    End If
    loSheet.Range(loSheet.Cells(llindex, 1), loSheet.Cells(llindex, cc_SHEET_ENV_LIST_COL_MAX)).ClearContents
    loSheet.Range(loSheet.Cells(llindex, 1), loSheet.Cells(llindex, UBound(pvData, 2) + 1)).value = pvData
    Set loSheet = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gSetEnvInfo")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd||582||30f||fffd||fffd||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|i|fffd||a5d7||fffd|\|fffd||702||fffd||fffd||343|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|j
'
' |fffd||fffd||fffd||fffd|      : poBook - (o) : |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'           : ptInfo - (o) : |fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||581|AtDataSetInfo|fffd|^|fffd||30c|`|fffd||301|A|fffd|V|fffd|[|fffd|g|fffd||310||691||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gSetDataInfo(ByRef poBook As Excel.Workbook, ByRef ptInfo As tDataSetInfo)
    Dim lvData As Variant
    Dim llcnt As Long
    Dim lcTmp As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gSetDataInfo")
    '------------------------------------------
    'tDataSetInfo|fffd|^|fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    ReDim lvData(0, cc_SHEET_ENV_LIST_COL_MAX - 1)
    lvData(0, cc_SHEET_ENV_COL_SHEET - 1) = ptInfo.cSheetCName
    lvData(0, cc_SHEET_ENV_COL_TYPE - 1) = ptInfo.iType
    lvData(0, cc_SHEET_ENV_COL_KITEN - 1) = ptInfo.cKiten
    If ptInfo.iType = 1 Then    '|fffd||fffd||fffd|X|fffd|g
        lvData(0, cc_SHEET_ENV_COL_SHEET - 1) = ptInfo.cSheetCName
        lvData(0, cc_SHEET_ENV_COL_TYPE - 1) = ptInfo.iType
        lvData(0, cc_SHEET_ENV_LIST_COL_SHEET - 1) = ptInfo.cSheet
        lvData(0, cc_SHEET_ENV_LIST_COL_BUSHO - 1) = ptInfo.cBusho
        lvData(0, cc_SHEET_ENV_LIST_COL_SHAIN - 1) = ptInfo.cShain
        lvData(0, cc_SHEET_ENV_LIST_COL_LIST - 1) = ptInfo.cList
        lcTmp = ""
        '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
        For llcnt = 0 To ptInfo.lItemNum - 1
            lcTmp = lcTmp & """" & ptInfo.cItem(llcnt) & """" & ","
        Next
        If lcTmp <> "" Then
            lcTmp = Left(lcTmp, Len(lcTmp) - 1)
        End If
        lvData(0, cc_SHEET_ENV_LIST_COL_ITEMS - 1) = lcTmp
        '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_LIST_COL_RIREKI - 1) = ptInfo.cSheetRireki
        '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_LIST_COL_DATARANGE - 1) = ptInfo.cDataRange
        '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_LIST_COL_SHEET_N - 1) = ptInfo.cSheetN
        lvData(0, cc_SHEET_ENV_LIST_COL_BUSHO_N - 1) = ptInfo.cBushoN
        lvData(0, cc_SHEET_ENV_LIST_COL_SHAIN_N - 1) = ptInfo.cShainN
        lvData(0, cc_SHEET_ENV_LIST_COL_LIST_N - 1) = ptInfo.cListN
        lcTmp = ""
        For llcnt = 0 To ptInfo.lItemNum - 1
            lcTmp = lcTmp & """" & ptInfo.cItemN(llcnt) & """" & ","
        Next
        If lcTmp <> "" Then
            lcTmp = Left(lcTmp, Len(lcTmp) - 1)
        End If
        lvData(0, cc_SHEET_ENV_LIST_COL_ITEMS_N - 1) = lcTmp
        '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_LIST_COL_RIREKISAVE - 1) = IIf(ptInfo.blRirekiSave, 1, 0)
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_LIST_COL_AFTERSETTINGS - 1) = IIf(ptInfo.blAfterSettings, 1, 0)
        lvData(0, cc_SHEET_ENV_LIST_COL_DISPDLPRODUCT - 1) = IIf(ptInfo.blDispDLProduct, 1, 0)
        lvData(0, cc_SHEET_ENV_LIST_COL_DLPRODUCT - 1) = IIf(ptInfo.blDLProduct, 1, 0)
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        lvData(0, cc_SHEET_ENV_LIST_COL_CANUDLIST - 1) = IIf(ptInfo.blCanUDList, 1, 0)
        lvData(0, cc_SHEET_ENV_LIST_COL_UDLIST - 1) = IIf(ptInfo.blUDList, 1, 0)
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        lvData(0, cc_SHEET_ENV_LIST_COL_UPDDATA - 1) = IIf(ptInfo.blUDData, 1, 0)
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        lvData(0, cc_SHEET_ENV_LIST_COL_RIREKISAVENAME - 1) = IIf(ptInfo.blRirekiSaveName, 1, 0)
    Else    '|fffd||a5d7||fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
        lvData(0, cc_SHEET_ENV_DS_COL_NAME - 1) = ptInfo.cDataName
        '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
        For llcnt = 0 To ptInfo.lItemNumD - 1
            lcTmp = lcTmp & """" & ptInfo.cItemD(llcnt) & """" & ","
        Next
        If lcTmp <> "" Then
            lcTmp = Left(lcTmp, Len(lcTmp) - 1)
        End If
        lvData(0, cc_SHEET_ENV_LIST_COL_ITEMSD - 1) = lcTmp
        '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_DS_COL_RIREKI - 1) = ptInfo.cSheetRireki
        '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_DS_COL_DATARANGE - 1) = ptInfo.cDataRange
        '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_DS_COL_NAME_N - 1) = ptInfo.cDataNameN
        lcTmp = ""
        For llcnt = 0 To ptInfo.lItemNumD - 1
            lcTmp = lcTmp & """" & ptInfo.cItemDN(llcnt) & """" & ","
        Next
        If lcTmp <> "" Then
            lcTmp = Left(lcTmp, Len(lcTmp) - 1)
        End If
        lvData(0, cc_SHEET_ENV_DS_COL_ITEMSD_N - 1) = lcTmp
        '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_DS_COL_RIREKISAVE - 1) = IIf(ptInfo.blRirekiSave, 1, 0)
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        lvData(0, cc_SHEET_ENV_DS_COL_AFTERSETTINGS - 1) = IIf(ptInfo.blAfterSettings, 1, 0)
        lvData(0, cc_SHEET_ENV_DS_COL_DISPDLPRODUCT - 1) = IIf(ptInfo.blDispDLProduct, 1, 0)
        lvData(0, cc_SHEET_ENV_DS_COL_DLPRODUCT - 1) = IIf(ptInfo.blDLProduct, 1, 0)
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        lvData(0, cc_SHEET_ENV_DS_COL_CANUDLIST - 1) = IIf(ptInfo.blCanUDList, 1, 0)
        lvData(0, cc_SHEET_ENV_DS_COL_UDLIST - 1) = IIf(ptInfo.blUDList, 1, 0)
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        lvData(0, cc_SHEET_ENV_DS_COL_UPDDATA - 1) = IIf(ptInfo.blUDData, 1, 0)
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        lvData(0, cc_SHEET_ENV_DS_COL_RIREKISAVENAME - 1) = IIf(ptInfo.blRirekiSaveName, 1, 0)
    End If
    '|fffd|z|fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    Call gSetEnvInfo(lvData, poBook, ptInfo.cSheetCName)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gSetDataInfo")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||80a9||fffd||fffd||691||fffd||fffd||fffd||fffd||30e||64fe||fffd||fffd||fffd||fffd||fffd|i|fffd||a5d7||fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|j
'
' |fffd||fffd||fffd||fffd|      : poBook - (o) : |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'           : ptInfo - (o) : |fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'           : pcSheetObjName - (i) : |fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|A|fffd|V|fffd|[|fffd|g|fffd||310||691||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|AtDataSetInfo|fffd|^|fffd||315||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||115||502||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblGetDataInfo(ByRef poBook As Excel.Workbook, ByRef ptInfo As tDataSetInfo, ByVal pcSheetObjName As String) As Boolean
    Dim lvData As Variant
    Dim lblRet As Boolean
    Dim llcnt As Long
    Dim lcTmp As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblGetDataInfo")
    '------------------------------------------
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||74d6||fffd|Y|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||14e||64fe|
    lblRet = gvGetEnvInfo(lvData, poBook, pcSheetObjName)
    '|fffd|\|fffd||fffd||fffd||302||253||fffd||fffd||fffd||582||fffd||fffd||fffd|
    If lblRet Then
        ptInfo.cSheetCName = lvData(1, cc_SHEET_ENV_COL_SHEET)
        ptInfo.iType = lvData(1, cc_SHEET_ENV_COL_TYPE)
        ptInfo.cKiten = lvData(1, cc_SHEET_ENV_COL_KITEN)
        If ptInfo.iType = 1 Then    '|fffd||fffd||fffd|X|fffd|g|fffd||30e||fffd|
            ptInfo.cSheet = lvData(1, cc_SHEET_ENV_LIST_COL_SHEET)
            ptInfo.cBusho = lvData(1, cc_SHEET_ENV_LIST_COL_BUSHO)
            ptInfo.cShain = lvData(1, cc_SHEET_ENV_LIST_COL_SHAIN)
            ptInfo.cList = lvData(1, cc_SHEET_ENV_LIST_COL_LIST)
            Call mblSplitData(lvData(1, cc_SHEET_ENV_LIST_COL_ITEMS), ptInfo.cItem, ptInfo.lItemNum)
            ptInfo.cSheetRireki = lvData(1, cc_SHEET_ENV_LIST_COL_RIREKI)    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
            ptInfo.cDataRange = lvData(1, cc_SHEET_ENV_LIST_COL_DATARANGE)   '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
            '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
            ptInfo.cSheetN = lvData(1, cc_SHEET_ENV_LIST_COL_SHEET_N)
            ptInfo.cBushoN = lvData(1, cc_SHEET_ENV_LIST_COL_BUSHO_N)
            ptInfo.cShainN = lvData(1, cc_SHEET_ENV_LIST_COL_SHAIN_N)
            ptInfo.cListN = lvData(1, cc_SHEET_ENV_LIST_COL_LIST_N)
            Call mblSplitData(lvData(1, cc_SHEET_ENV_LIST_COL_ITEMS_N), ptInfo.cItemN, ptInfo.lItemNum)
            '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
            ptInfo.blRirekiSave = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_RIREKISAVE)) <> 0)
            '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
            ptInfo.blAfterSettings = (lvData(1, cc_SHEET_ENV_LIST_COL_AFTERSETTINGS) <> "0")
            ptInfo.blDispDLProduct = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_DISPDLPRODUCT)) <> 0)
            ptInfo.blDLProduct = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_DLPRODUCT)) <> 0)
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            ptInfo.blCanUDList = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_CANUDLIST)) <> 0)
            ptInfo.blUDList = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_UDLIST)) <> 0)
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
            '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            ptInfo.blUDData = (Val(lvData(1, cc_SHEET_ENV_LIST_COL_UPDDATA)) <> 0)
            '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
            ptInfo.blRirekiSaveName = (lvData(1, cc_SHEET_ENV_LIST_COL_RIREKISAVENAME) <> "0")
        Else                        '|fffd||a5d7||fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||30e||fffd|
            ptInfo.cDataName = lvData(1, cc_SHEET_ENV_DS_COL_NAME)
            Call mblSplitData(lvData(1, cc_SHEET_ENV_LIST_COL_ITEMSD), ptInfo.cItemD, ptInfo.lItemNumD)
            ptInfo.cSheetRireki = lvData(1, cc_SHEET_ENV_DS_COL_RIREKI)    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
            ptInfo.cDataRange = lvData(1, cc_SHEET_ENV_DS_COL_DATARANGE)   '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
            '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
            ptInfo.cDataNameN = lvData(1, cc_SHEET_ENV_DS_COL_NAME_N)
            Call mblSplitData(lvData(1, cc_SHEET_ENV_DS_COL_ITEMSD_N), ptInfo.cItemDN, ptInfo.lItemNumD)
            '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
            ptInfo.blRirekiSave = (Val(lvData(1, cc_SHEET_ENV_DS_COL_RIREKISAVE)) <> 0)
            '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
            ptInfo.blAfterSettings = (lvData(1, cc_SHEET_ENV_DS_COL_AFTERSETTINGS) <> "0")
            ptInfo.blDispDLProduct = (Val(lvData(1, cc_SHEET_ENV_DS_COL_DISPDLPRODUCT)) <> 0)
            ptInfo.blDLProduct = (Val(lvData(1, cc_SHEET_ENV_DS_COL_DLPRODUCT)) <> 0)
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            ptInfo.blCanUDList = (Val(lvData(1, cc_SHEET_ENV_DS_COL_CANUDLIST)) <> 0)
            ptInfo.blUDList = (Val(lvData(1, cc_SHEET_ENV_DS_COL_UDLIST)) <> 0)
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
            '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            ptInfo.blUDData = (Val(lvData(1, cc_SHEET_ENV_DS_COL_UPDDATA)) <> 0)
            '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
            ptInfo.blRirekiSaveName = (lvData(1, cc_SHEET_ENV_DS_COL_RIREKISAVENAME) <> "0")
        End If
    End If
    gblGetDataInfo = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblGetDataInfo")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : Split|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcStr     (i) - |fffd||fffd||fffd||fffd||fffd||fffd|
'             phcRet    (i) - split|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||314|z|fffd||fffd|
'             piColCnt  (i) - phcRet|fffd||317|v|fffd|f|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : http://excel-ubara.com/EXCEL/EXCEL111.html|fffd||fffd||fffd|Q|fffd|l|fffd||242||fffd||fffd||10d||c42c|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mblSplitData(ByVal pcStr As String, ByRef phcRet() As String, ByRef piColCnt As Long)
    Dim lblRet As Boolean
    Dim lcTmp As String
    Dim liChrCnt As Long
    Dim llQuate As Long
    Dim lcNowChr As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblSplitData")
    '------------------------------------------
    piColCnt = 0
    For liChrCnt = 1 To Len(pcStr)
        lcNowChr = Mid(pcStr, liChrCnt, 1)
        Select Case lcNowChr
            Case "," '|fffd|u"|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||602||fffd|A|fffd||f414||fffd||202||70bd||fffd||fffd||fffd||315||fffd||fffd||fffd|
                If llQuate Mod 2 = 0 Then
                    ReDim Preserve phcRet(piColCnt)
                    phcRet(piColCnt) = Replace(lcTmp, """", "")
                    piColCnt = piColCnt + 1
                    lcTmp = ""
                Else
                    lcTmp = lcTmp & lcNowChr
                End If
            Case """"  '|fffd|u"|fffd|v|fffd||303|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||182||fffd|
                llQuate = llQuate + 1
                lcTmp = lcTmp & lcNowChr
            Case Else
                lcTmp = lcTmp & lcNowChr
        End Select
    Next
    '|fffd||14f|I|fffd||fffd||30f||fffd||fffd||fffd|
    If lcTmp <> "" Then
        ReDim Preserve phcRet(piColCnt)
        phcRet(piColCnt) = Replace(lcTmp, """", "")
        piColCnt = piColCnt + 1
    End If
    lcTmp = ""
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblSplitData")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||310||691||fffd||fffd||fffd|URL|fffd||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook    (o) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gcGetConnURL(ByRef poBook As Excel.Workbook) As String
    Dim lcURL As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gcGetConnURL")
    '------------------------------------------
    lcURL = ""
    If gblExistSheet2(poBook, cc_SHEET_ENV) Then
        lcURL = poBook.Worksheets(cc_SHEET_ENV).Range(cc_SHEET_ENV_CELL_URL).value
    End If
    gcGetConnURL = lcURL
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gcGetConnURL")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||582||310||691||fffd||fffd||fffd|URL|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook    (o) - |fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             poBook    (i) - |fffd||691||fffd||fffd||fffd|URL
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gSetConnURL(ByRef poBook As Excel.Workbook, ByVal pcURL As String)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gSetConnURL")
    '------------------------------------------
    poBook.Worksheets(cc_SHEET_ENV).Range(cc_SHEET_ENV_CELL_URL).value = pcURL
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gSetConnURL")
    '------------------------------------------
End Function

Attribute VB_Name = "basGlobalConst"
Option Explicit

'-----------------------------------------------------------------------------
' @(h) basConst.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd|E|fffd||8414||fffd||fffd|`
'
'-----------------------------------------------------------------------------
Public gblFuncStack As clsFuncStack
Public Const SYSTEM_MSG_TITLE As String = "e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g"

'|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd|
Public Const cc_SHEET_ENV As String = "eSM|fffd|A|fffd|g|fffd||8b||fffd||fffd||752||fffd|"
Public Const cc_SHEET_LOG As String = "eSM|fffd|A|fffd|g|fffd||fffd||fffd|O"

'|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| 01.00.01|fffd||24f|C|fffd||fffd|
'2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SYSTEM_VERSION As String = "01.00.01"
'2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SYSTEM_VERSION As String = "01.00.02"
'2014/10/01 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SYSTEM_VERSION As String = "01.00.03"
'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SYSTEM_VERSION As String = "01.00.04"
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SYSTEM_VERSION As String = "01.00.05"
'Public Const cc_SYSTEM_VERSION As String = "01.00.06"
'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2014/10/01 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2017/03/24 office2016|fffd||389||fffd|
'Public Const cc_SYSTEM_VERSION As String = "01.00.07"
'2017/03/24 office2016|fffd||389||fffd|(|fffd||142||7c2||202||fffd||fffd||fffd|)
'Public Const cc_SYSTEM_VERSION As String = "01.00.08"
'2017/07/10 |fffd||542||fffd|94743|fffd||389||fffd||fffd||242||182||fffd||fffd||202||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
'Public Const cc_SYSTEM_VERSION As String = "01.00.09"
'2017/08/23 |fffd||542||fffd|95633|fffd||389||fffd||fffd||242||182||fffd||fffd||202||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
Public Const cc_SYSTEM_VERSION As String = "01.00.10"

'|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||24a||582||fffd||fffd||fffd|l
'|fffd||691||fffd||fffd||fffd|URL|fffd||303|Z|fffd||fffd|
Public Const cc_SHEET_ENV_CELL_URL As String = "A1"
'|fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Public Const cc_SHEET_ENV_ROW_URL As Long = 1
Public Const cc_SHEET_ENV_ROW_SETTING As Long = 2
'|fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd|E|fffd|W|fffd|v|fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||295||fffd||fffd||fffd||fffd|j
Public Const cc_SHEET_ENV_COL_SHEET As Integer = 1
Public Const cc_SHEET_ENV_COL_TYPE As Integer = 2
Public Const cc_SHEET_ENV_COL_KITEN As Integer = 3
'|fffd||fffd||fffd|X|fffd|g|fffd||30f||a347||fffd||317||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Public Const cc_SHEET_ENV_LIST_COL_SHEET As Integer = 4
Public Const cc_SHEET_ENV_LIST_COL_BUSHO As Integer = 5
Public Const cc_SHEET_ENV_LIST_COL_SHAIN As Integer = 6
Public Const cc_SHEET_ENV_LIST_COL_LIST As Integer = 7
Public Const cc_SHEET_ENV_LIST_COL_ITEMS As Integer = 8
'2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
Public Const cc_SHEET_ENV_LIST_COL_SHEET_N As Integer = 9
Public Const cc_SHEET_ENV_LIST_COL_BUSHO_N As Integer = 10
Public Const cc_SHEET_ENV_LIST_COL_SHAIN_N As Integer = 11
Public Const cc_SHEET_ENV_LIST_COL_LIST_N As Integer = 12
Public Const cc_SHEET_ENV_LIST_COL_ITEMS_N As Integer = 13
Public Const cc_SHEET_ENV_LIST_COL_RIREKI As Integer = 14   '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
Public Const cc_SHEET_ENV_LIST_COL_DATARANGE As Integer = 15   '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
'2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
Public Const cc_SHEET_ENV_LIST_COL_RIREKISAVE As Integer = 16
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
Public Const cc_SHEET_ENV_LIST_COL_AFTERSETTINGS As Integer = 17
Public Const cc_SHEET_ENV_LIST_COL_DISPDLPRODUCT As Integer = 18
Public Const cc_SHEET_ENV_LIST_COL_DLPRODUCT As Integer = 19
'2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SHEET_ENV_LIST_COL_RIREKISAVENAME As Integer = 20
Public Const cc_SHEET_ENV_LIST_COL_CANUDLIST As Integer = 20
Public Const cc_SHEET_ENV_LIST_COL_UDLIST As Integer = 21
Public Const cc_SHEET_ENV_LIST_COL_RIREKISAVENAME As Integer = 22
'2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
Public Const cc_SHEET_ENV_LIST_COL_UPDDATA As Integer = 23
'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
Public Const cc_SHEET_ENV_LIST_COL_MAX As Integer = cc_SHEET_ENV_LIST_COL_UPDDATA

'|fffd|W|fffd|v|fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||30f||a347||fffd||317||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Public Const cc_SHEET_ENV_DS_COL_NAME As Integer = 4
Public Const cc_SHEET_ENV_LIST_COL_ITEMSD As Integer = 5
'2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
Public Const cc_SHEET_ENV_DS_COL_NAME_N As Integer = 6
Public Const cc_SHEET_ENV_DS_COL_ITEMSD_N As Integer = 7
Public Const cc_SHEET_ENV_DS_COL_RIREKI As Integer = 8  '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
Public Const cc_SHEET_ENV_DS_COL_DATARANGE As Integer = 9   '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
'2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
Public Const cc_SHEET_ENV_DS_COL_RIREKISAVE As Integer = 10
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
Public Const cc_SHEET_ENV_DS_COL_AFTERSETTINGS As Integer = 11
Public Const cc_SHEET_ENV_DS_COL_DISPDLPRODUCT As Integer = 12
Public Const cc_SHEET_ENV_DS_COL_DLPRODUCT As Integer = 13
'2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Public Const cc_SHEET_ENV_DS_COL_RIREKISAVENAME As Integer = 14
Public Const cc_SHEET_ENV_DS_COL_CANUDLIST As Integer = 14
Public Const cc_SHEET_ENV_DS_COL_UDLIST As Integer = 15
Public Const cc_SHEET_ENV_DS_COL_RIREKISAVENAME As Integer = 16
'2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
Public Const cc_SHEET_ENV_DS_COL_UPDDATA As Integer = 17
'2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

Public Const cc_SHEET_ENV_DS_COL_MAX As Integer = cc_SHEET_ENV_DS_COL_RIREKISAVENAME

Public Const cc_SHEET_ENV_COL_MAX As Integer = cc_SHEET_ENV_LIST_COL_MAX    '|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|W|fffd|v|fffd|\|fffd|E|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||1c2||fffd||fffd||70a9||fffd||317||50502||311||50ab||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g

'|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||182||310||691||fffd||fffd|F|fffd||60f||fffd||fffd|
Public gtConnInfo() As tConnInfo
Public glConnInfoCnt As Long

'|fffd|f|fffd|[|fffd|^|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O
Public gblLoadFlg As Boolean

'|fffd||10f|o|fffd||fffd|
Public giBigParent As Integer       '|fffd||10f|o|fffd||fffd||fffd||311||5333|
Public Const ci_BP_eSMButton As Integer = 1
Public Const ci_BP_REFRESH As Integer = 2
Public Const ci_BP_REFRESHALL As Integer = 3
Public Const ci_BP_SETTINGS As Integer = 4
Public Const ci_BP_CONNINFO As Integer = 5

Public giSmallParent As Integer     '|fffd||fffd||fffd|O|fffd||30c||10f|o|fffd||fffd||fffd||fffd||fffd|
Public giDest As Integer            '|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const ci_Dest_Login As Integer = 0
Public Const ci_Dest_DataTypeSelect As Integer = 1
Public Const ci_Dest_DataListSel As Integer = 2
Public Const ci_Dest_DataListSelItem As Integer = 3
Public Const ci_Dest_DataSel As Integer = 4
Public Const ci_Dest_CSVOutput As Integer = 5
'2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
Public Const ci_Dest_DataSheetSelect As Integer = 6
Public Const ci_Dest_DataSettings As Integer = 7
'Public Const ci_Dest_MAXINDEX As Integer = ci_Dest_DataSheetSelect
Public Const ci_Dest_MAXINDEX As Integer = ci_Dest_DataSettings
Public Const ci_Dest_Cancel As Integer = 99

'|fffd||fffd||28a||502||14e||c2bd3|n|fffd||fffd|JSON|fffd|f|fffd|[|fffd|^|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
Public gtJSONData(0 To ci_Dest_MAXINDEX) As Object

'|fffd|e|fffd||fffd||28a||502||14e||c2bd3|n|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd|
Public goBook As Excel.Workbook         '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|u|fffd|b|fffd|N
Public goSheet As Excel.Worksheet       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|V|fffd|[|fffd|g

Public gtActConnInfo As tConnInfo      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|u|fffd|b|fffd|N|fffd||310||691||fffd||fffd||fffd||fffd|
Public gtActDataInfo As tDataSetInfo   '|fffd||fffd||fffd||74f||fffd||fffd||fffd||fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||691|I|fffd||fffd||fffd||fffd||fffd|
Public gtActUserInfo As tUserInfo       '|fffd||fffd||fffd||74f||fffd||fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|[|fffd|U|fffd||30f||fffd||fffd|

Public ghblActSelData(1) As Boolean    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311|I|fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v

'API|fffd||598|A|fffd||312||8414|
'Action
Public Const cc_API_ACTION_LOGIN As String = "login"
Public Const cc_API_ACTION_GETDATATYPES As String = "getDataTypes"
Public Const cc_API_ACTION_GETORGANIZATION As String = "getOrganization"    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
Public Const cc_API_ACTION_GETLISTS As String = "getLists"
Public Const cc_API_ACTION_GETDATASOURCES As String = "getDatasources"
Public Const cc_API_ACTION_GETLISTCOLUMNS As String = "getListColumns"
Public Const cc_API_ACTION_GETDATASOURCECOLUMNS As String = "getDatasourceColumns"
Public Const cc_API_ACTION_DOWNLOAD As String = "download"
Public Const cc_API_ACTION_CSVOUTPUT As String = "csvOutput"  '|fffd|f|fffd|[|fffd|^|fffd||303|V|fffd|[|fffd|g|fffd|o|fffd||34e||fffd|
'|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||a39e||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'2014/04/15 QA|fffd|\No.122|fffd||389||fffd|
'Public Const cc_TMP_FILE As String = "eSM|fffd|A|fffd|gTmp.dat"
Public Const cc_TMP_FILE As String = "eSM|fffd|A|fffd|gTmp"

Public Const cc_ERRMSG_COMMON As String = "|fffd||fffd||fffd|[|fffd|U|fffd||314|F|fffd||602||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"

'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
Public gblFrmDataListSelItemLoad As Boolean     '|fffd||fffd||fffd||691|I|fffd||fffd||fffd||fffd||282||30f||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
'|fffd||fffd||fffd||691|I|fffd||fffd||fffd||fffd||282||313||fffd||fffd||352|l|fffd||6d1||fffd|
Public Type tFrmDataListSelItem
    cboSheet As MSForms.ComboBox
    cboSheetRireki As MSForms.ComboBox
    lstFrom As MSForms.ListBox
    lstTo As MSForms.ListBox
    txtKiten As MSForms.TextBox
    CboGroup As MSForms.ComboBox    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd|
    chkRireki As MSForms.CheckBox   '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
End Type
Public gtFrmDataListSelItem As tFrmDataListSelItem

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
Public Type tFrmDataSettings
    cboSheet As MSForms.ComboBox
    cboSheetRireki As MSForms.ComboBox
    txtKiten As MSForms.TextBox
    chkRireki As MSForms.CheckBox
    chkAfterSettings As MSForms.CheckBox
    chkDLProduct As MSForms.CheckBox
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    chkUDList As MSForms.CheckBox
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    chkUDData As MSForms.CheckBox
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    optDataSel1 As MSForms.OptionButton
    optDataSel2 As MSForms.OptionButton
End Type
Public gtFrmDataSettings As tFrmDataSettings

'2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
Public gblRefreshAllRireki As Boolean   '|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||257||fffd||fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||90a9||fffd||303|t|fffd||fffd||fffd|O

'2014/05/07 QA|fffd|\No.146|fffd||389||fffd|
Public Const gcDefCode As String = "-99999"

'2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
'|fffd|f|fffd|[|fffd|^|fffd||752||fffd||193||fffd||fffd||fffd||fffd||250|V|fffd|K|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd|o|fffd||342||fffd||fffd|s|fffd||fffd||fffd||a347|
'|fffd||fffd||fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||fffd||fffd||202||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|t|fffd||fffd||fffd|O
Public gblOutputNewSheet As Boolean

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
'|fffd||fffd||fffd||682||311|I|fffd||fffd||fffd||fffd||282||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||1570c||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O
'|fffd|f|fffd|[|fffd|^|fffd||310|V|fffd|K|fffd||1c9||fffd||fffd||fffd||fffd||24e|g|fffd|p|fffd||fffd||fffd||fffd|
'|fffd||fffd|x|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||282||702||14d|s|fffd||fffd||fffd||101|A|fffd||fffd||fffd|X|fffd|g/|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||311|I|fffd||fffd||fffd||fffd||282||702||156||7c2||fffd|A
'|fffd||113|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g/|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10d||fffd||fffd||682||311|I|fffd||fffd||fffd||fffd||282||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|ATrue|fffd||182||fffd||fffd||fffd|
Public gblDataComp As Boolean

'-----------------------------------------------------------------------------
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p|fffd||fffd||fffd||1c2||fffd||fffd||fffd|
Public Const gblDebug As Boolean = False

Attribute VB_Name = "basGlobalType"
Option Explicit

'-----------------------------------------------------------------------------
' @(h) basConst.cls                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|\|fffd||fffd||fffd||312||fffd|`
'
'-----------------------------------------------------------------------------
Public Type tConnInfo    '|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||14e|g|fffd|p|fffd||fffd||fffd||fffd||691||fffd||fffd||fffd||fffd|
    cFullName As String     '|fffd|u|fffd|b|fffd|N|fffd||303|t|fffd||fffd||fffd|p|fffd|X
    cURL As String          '|fffd||691||fffd||fffd||fffd|URL
    cID As String           '|fffd||fffd||fffd|[|fffd|UID
    cPassword As String     '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h
    cProxyID As String      '|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd|p|fffd||fffd||fffd|[|fffd|UID
    cProxyPW As String      '|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd|p|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h
    blConn As Boolean       '|fffd||fffd|x|fffd||691||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd|
End Type

Public Type tDataSetInfo    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||fffd|
    cSheetCName As String   '|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
    cSheetName As String   '|fffd|V|fffd|[|fffd|g|fffd||fffd|
    iType As Integer        '|fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v 1:|fffd||fffd||fffd|X|fffd|g 2:|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
    cKiten As String        '|fffd||fffd|_
    cSheet As String    '|fffd|V|fffd|[|fffd|g|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cBusho As String    '|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cShain As String    '|fffd||408||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cList As String     '|fffd||fffd||fffd|X|fffd|g|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    lItemNum As Long    '|fffd|I|fffd||fffd||fffd||fffd||fffd||690||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cItem() As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||683|R|fffd|[|fffd|h|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cDataName As String    '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||303|R|fffd|[|fffd|h|fffd|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||302||741|j
    lItemNumD As Long    '|fffd|I|fffd||fffd||fffd||fffd||fffd||690||fffd||fffd|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||302||741|j
    cItemD() As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||683|R|fffd|[|fffd|h|fffd|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||302||741|j
    blNew As Boolean
    cSheetRireki As String  '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd| |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
    cDataRange As String    '2014/04/12 QA|fffd|\No.115|fffd||389||fffd| |fffd|O|fffd||fffd|f|fffd|[|fffd|^|fffd|o|fffd||354||348||fffd|
    '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
    cSheetN As String    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cBushoN As String    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cShainN As String    '|fffd||408||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cListN As String     '|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cItemN() As String     '|fffd|I|fffd||fffd||fffd||fffd||fffd||681|i|fffd||fffd||fffd|X|fffd|g|fffd||302||741|j
    cDataNameN As String '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||302||741|j
    cItemDN() As String    '|fffd|I|fffd||fffd||fffd||fffd||fffd||681|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||302||741|j
    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
    blRirekiSave As Boolean   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd|
    '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
    blAfterSettings As Boolean  '|fffd||752||82ae||fffd||fffd||fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||342||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd|
    blDispDLProduct As Boolean  '|fffd|u|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||fffd|v|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
    blDLProduct As Boolean      '|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    blCanUDList As Boolean
    blUDList As Boolean
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    blUDData As Boolean         '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    blRirekiSaveName As Boolean     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||6c2||303|V|fffd|[|fffd|g|fffd||fffd||fffd||30e|w|fffd||80aa||fffd||fffd||fffd||90a9|
End Type

Public Type tDLData
    lDataCnt As Long
    '2014/04/01 QA|fffd|\ No.101|fffd||389||fffd|
'    cData() As String
    cData() As Variant
End Type

Public Type tUserInfo
    cEmployeeCode As String
    cDepartCode As String
End Type
Attribute VB_Name = "basLog"
Option Explicit

'-----------------------------------------------------------------------------
' @(h) basLog.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||fffd||fffd|O|fffd|o|fffd||34a||598|A|fffd||590||fffd|
'
'-----------------------------------------------------------------------------
Public Const ci_LOG_START_ROW As Long = 1   '|fffd||fffd||fffd|O|fffd||30a|J|fffd|n|fffd|s|fffd||fffd|
Private ci_LOG_ROWS_MAX As Long   '|fffd||fffd||fffd|O|fffd||30d||151||fffd|s|fffd||fffd|
Private Const MODULE_NAME As String = "basLog"

'Public Sub gSetLogTest()    '|fffd|e|fffd|X|fffd|g|fffd|p|fffd||590||fffd|
'    Dim parser As New JsonParser
'    Dim objJson As Object
'    Dim tmpstr1 As String
'    Dim tmpstr2 As String
'
'    Set gblFuncStack = New clsFuncStack
'
'    tmpstr1 = "{""employeeCode"":100,""departCode"":10001, ""errorMessage"":""|fffd|G|fffd||fffd||fffd|[|fffd|P"", ""statusCode"":401}"
'    Set objJson = parser.Parse(tmpstr1)
'
'    Call gSetLog(ThisWorkbook.Worksheets("Sheet1"), Nothing, 1, Format(Now, "yyyyMMddhhmmss"), "ActionDummy", 0, "eigyo1")
'    Call gSetLog(ThisWorkbook.Worksheets("Sheet1"), objJson, 2, Format(Now, "yyyyMMddhhmmss"), "ActionDummy", 0.25, "eigyo1")
'
'    tmpstr2 = "{""column"":[{""columnCode"":10000,""columnName"":""|fffd||fffd||fffd||682|P""},{""columnCode"":10001,""columnName"":""|fffd||fffd||fffd||682|Q""}], ""errorMessage"":"""",""statusCode"":""""}"
'    Set objJson = parser.Parse(tmpstr2)
'    Call gSetLog(ThisWorkbook.Worksheets("Sheet1"), Nothing, 1, Format(Now, "yyyyMMddhhmmss"), "ActionDummy2", 0, "eigyo1")
'    Call gSetLog(ThisWorkbook.Worksheets("Sheet1"), objJson, 2, Format(Now, "yyyyMMddhhmmss"), "ActionDummy2", 0.25, "eigyo1")
'
'End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|O|fffd|o|fffd||351|O|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptJSONData - (i) : JSON|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             piStart    - (i) : 1:|fffd|u|fffd|J|fffd|n|fffd|v2:|fffd|u|fffd|I|fffd||fffd||fffd|v
'             pcDate     - (i) : |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|
'             pcAction   - (i) : API|fffd||fffd|Action
'             pcTime     - (i) : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||501|i|fffd|~|fffd||fffd||fffd|b|fffd|P|fffd||281|j
'             pcID       - (i) : |fffd||fffd||fffd|[|fffd|UID
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'------------------------------------------------------------------------------
Public Sub gSetLog(ByVal ptJSONData As Object, _
                   ByVal piStart As Integer, ByVal pcDate As String, ByVal pcAction As String, ByVal pcTime As Double, ByVal pcID As String)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gSetLog")
    '------------------------------------------
    '|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||391|}|fffd||fffd||fffd||fffd||fffd||fffd|
    Call gblInsertSheet(goBook, cc_SHEET_LOG)
    '|fffd||fffd||fffd|O|fffd|o|fffd||fffd|
    Call gSetLogData(goBook.Worksheets(cc_SHEET_LOG), ptJSONData, piStart, pcDate, pcAction, pcTime, pcID)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gSetLog")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|O|fffd|o|fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poLogSheet - (o) : |fffd||fffd||fffd|O|fffd|p|fffd|V|fffd|[|fffd|g
'             ptJSONData - (i) : JSON|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             piStart    - (i) : 1:|fffd|u|fffd|J|fffd|n|fffd|v2:|fffd|u|fffd|I|fffd||fffd||fffd|v
'             pcDate     - (i) : |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|
'             pcAction   - (i) : API|fffd||fffd|Action
'             pcTime     - (i) : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||501|i|fffd|~|fffd||fffd||fffd|b|fffd|P|fffd||281|j
'             pcID       - (i) : |fffd||fffd||fffd|[|fffd|UID
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      :
'
' @(h)
'
'------------------------------------------------------------------------------
Private Sub gSetLogData(ByRef poLogSheet As Excel.Worksheet, ByVal ptJSONData As Object, _
                        ByVal piStart As Integer, ByVal pcDate As String, ByVal pcAction As String, ByVal pcTime As Double, ByVal pcID As String)
                   
'|fffd||fffd||fffd||fffd|No.50 |fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g(poLogSheet)|fffd||241|A|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||143||fffd||fffd|O|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|B
'ci_LOG_START_ROW|fffd||30d|s|fffd||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|B
'|fffd||151||530f||fffd||fffd||fffd||fffd|ci_LOG_ROWS_MAX|fffd||182||fffd||fffd|A|fffd||fffd||fffd||fffd||12d02||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||50c||c2||fffd||fffd||fffd||fffd||301|i|fffd||fffd||fffd||202||d0bf|ci_LOG_START_ROW|fffd||30d|s|fffd|j|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||102||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|B
'|fffd|V|fffd|[|fffd|g|fffd||308||fffd||509||fffd||fffd||30d|s|fffd||fffd|glGetLastRow|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|B

'|fffd||fffd||fffd|O|fffd|o|fffd||34d||fffd||fffd||682||fffd|
'1.|fffd|A|fffd||501|i|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30d||151||fffd|A|fffd||fffd|+1|fffd|j
'2.|fffd|u|fffd|J|fffd|n|fffd|v|fffd|ipiStart=1|fffd||30f||a347||fffd|jor|fffd|u|fffd|I|fffd||fffd||fffd|v|fffd|ipiStart=2|fffd||30f||a347||fffd|j
'3.|fffd||fffd||fffd||fffd||fffd|ipcDate|fffd||fffd||fffd||fffd||fffd||302||702||70f|o|fffd||341|j
'4.|fffd||fffd||fffd||fffd||fffd||fffd||fffd|ipcAction|fffd||fffd||fffd||fffd||fffd||302||702||70f|o|fffd||341|j
'5.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd|~|fffd||fffd||fffd|b|fffd|P|fffd||fffd|)|fffd|ipcTime|fffd||fffd||fffd||fffd||fffd||302||702||70f|o|fffd||341|j
'6.ID(|fffd|F|fffd||60d||3c2||742||142||fffd||fffd||fffd||fffd|)|fffd|ipcID|fffd||fffd||fffd||fffd||fffd||302||702||70f|o|fffd||341|j
'7.eSM|fffd||fffd||fffd||fffd||c2bce||fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^
'|fffd|@|fffd||fffd|piStart=2|fffd||30f||a347||fffd||302||74f|o|fffd||361|
'|fffd|@|fffd|@ptJSONData|fffd||241|AJSON|fffd|`|fffd||fffd||fffd||143|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||302||141|AerrorMessage|fffd||fffd|statusCode|fffd||242||82||fffd||fffd||101|A
'|fffd|@|fffd|@|fffd|uerrorMessage:|fffd|G|fffd||fffd||fffd|[|fffd|P,statusCode:1|fffd|v|fffd||301|A|fffd|u|fffd|v|fffd|f|fffd||fffd||fffd|F|fffd|l|fffd|v|fffd||303|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||14f|o|fffd||342||fffd||fffd||fffd|B
'    ptJSONData|fffd||253||1c2||74d||fffd||fffd||702||fffd||102||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||30c||fffd||fffd||341|AAPI|fffd|d|fffd|l|fffd||fffd||fffd||30a|eaction|fffd||303||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||182||202||fffd|B
'|fffd|@|fffd|@|fffd|i/|fffd||fffd||fffd||fffd||fffd||fffd||7457||fffd|t|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd|/2014.03.16/|fffd||24d||150|V|fffd||30e|d|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j
'|fffd|@|fffd|@|fffd|v|fffd|f|fffd||30e|Q|fffd||182||30e|d|fffd||fffd||fffd||341|Ahttp://outofmem.tumblr.com/post/63455354957/vba-json |fffd||301|u3.|fffd|g|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|Q|fffd||fffd|

'|fffd||fffd||fffd|O|fffd||fffd|7.|fffd||317||fffd|
'tmpstr1 : errorMessage:|fffd|G|fffd||fffd||fffd|[|fffd|P,statusCode:1

    Dim llRow As Long
    Dim llSeq As Double
    Dim strErr As String
    Dim strSta As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gSetLog")
    '------------------------------------------
    ci_LOG_ROWS_MAX = poLogSheet.Rows.Count     '|fffd||fffd||fffd|O|fffd||34f|o|fffd||fffd||fffd||90be||fffd||fffd||fffd|o|fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    
    '|fffd||14f|I|fffd|s|fffd||fffd||fffd||fffd|
    llRow = glGetLastRow(poLogSheet)                            '|fffd||14f|I|fffd|s|fffd||30e||64fe|
    If llRow < ci_LOG_START_ROW Then                            '|fffd||fffd||fffd|O|fffd|f|fffd|[|fffd|^|fffd||202||fffd|?
        llSeq = 1                                               '|fffd|A|fffd||503|Z|fffd|b|fffd|g
        
        '2014/07/15ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd|w|fffd|b|fffd|_|fffd|[
        poLogSheet.Cells(ci_LOG_START_ROW, 1).value = "No"
        poLogSheet.Cells(ci_LOG_START_ROW, 2).value = "|fffd|J|fffd|n/|fffd|I|fffd||fffd|"
        poLogSheet.Cells(ci_LOG_START_ROW, 3).value = "|fffd||fffd||fffd||fffd|"
        poLogSheet.Cells(ci_LOG_START_ROW, 4).value = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        poLogSheet.Cells(ci_LOG_START_ROW, 5).value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        poLogSheet.Cells(ci_LOG_START_ROW, 6).value = "|fffd||fffd||fffd|[|fffd|UID"
        poLogSheet.Cells(ci_LOG_START_ROW, 7).value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        poLogSheet.Cells(ci_LOG_START_ROW, 8).value = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W"
        
        'llRow = ci_LOG_START_ROW                               '|fffd||fffd||fffd|O|fffd|Z|fffd|b|fffd|g|fffd|s|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        llRow = ci_LOG_START_ROW + 1
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        
    Else                                                        '|fffd||fffd||fffd|O|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|!
        llSeq = glSetSeqNo(poLogSheet.Cells(llRow, 1).value)    '|fffd|A|fffd||503|Z|fffd|b|fffd|g
        If llRow >= ci_LOG_ROWS_MAX Then                        '|fffd||fffd||fffd|O|fffd|f|fffd|[|fffd|^|fffd|t|fffd||fffd|?
        
        
            '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            '|fffd|w|fffd|b|fffd|_|fffd||30e||fffd||fffd||30d|s|fffd||fffd||fffd||d3dc|
            poLogSheet.Rows(ci_LOG_START_ROW + 1).Delete           '|fffd||14c||c3|f|fffd|[|fffd|^|fffd||d3dc|
            '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
        Else                                                    '|fffd||fffd||fffd|O|fffd|f|fffd|[|fffd|^|fffd|t|fffd||fffd||fffd||20a|O!
            llRow = llRow + 1                                   '|fffd||fffd||fffd|O|fffd|Z|fffd|b|fffd|g|fffd|s|fffd||50d||fffd||fffd|X|fffd|V
        End If
    End If
    '|fffd||fffd||fffd|O|fffd|f|fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g
    poLogSheet.Cells(llRow, 1).value = llSeq                    '|fffd|A|fffd||503|Z|fffd|b|fffd|g
    If piStart = 1 Then                                         '|fffd||fffd||fffd||fffd||fffd|J|fffd|n?
        poLogSheet.Cells(llRow, 2).value = "|fffd|J|fffd|n"               '|fffd|u|fffd|J|fffd|n|fffd|v|fffd|Z|fffd|b|fffd|g
    ElseIf piStart = 2 Then                                     '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|!
        poLogSheet.Cells(llRow, 2).value = "|fffd|I|fffd||fffd|"               '|fffd|u|fffd|I|fffd||fffd||fffd|v|fffd|Z|fffd|b|fffd|g
    End If
    
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    'poLogSheet.Cells(llRow, 3).value = "'" + pcDate             '|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    poLogSheet.Cells(llRow, 3).value = Left(pcDate, 4) & "/" & Mid(pcDate, 5, 2) & "/" & Mid(pcDate, 7, 2) & " " & _
                                        Mid(pcDate, 9, 2) & ":" & Mid(pcDate, 11, 2) & ":" & Right(pcDate, 2)
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    poLogSheet.Cells(llRow, 4).value = pcAction                 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    poLogSheet.Cells(llRow, 5).value = pcTime                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||503|Z|fffd|b|fffd|g
    poLogSheet.Cells(llRow, 6).value = pcID                     'ID|fffd|Z|fffd|b|fffd|g
    If piStart = 2 And Not ptJSONData Is Nothing Then           '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||143||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||fffd|?
        If ptJSONData.HasKey("errorMessage") Then
            strErr = ptJSONData.value("errorMessage")           '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||64fe|
        Else
            strErr = "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"   '|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|m|fffd|f|fffd|Z|fffd|b|fffd|g
        End If
'        strErr = ptJSONData.value("errorMessage")               '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||64fe|
'        If strErr = "" Then                                     '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||64fe||fffd|m|fffd|f?
'            strErr = "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"   '|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|m|fffd|f|fffd|Z|fffd|b|fffd|g
'        End If
        If ptJSONData.HasKey("errorMessage") Then
            strSta = ptJSONData.value("statusCode")              '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe|
        Else
            strSta = "()"   '|fffd|R|fffd|[|fffd|h|fffd|m|fffd|f|fffd|Z|fffd|b|fffd|g
        End If
'        strSta = ptJSONData.value("statusCode")                 '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe|
'        If strSta = "" Then                                     '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd||64fe||fffd|m|fffd|f?
'            strSta = "|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"   '|fffd|R|fffd|[|fffd|h|fffd|m|fffd|f|fffd|Z|fffd|b|fffd|g
'        End If

        
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        poLogSheet.Cells(llRow, 7).value = _
'            "errorMessage:" + strErr + "," + _
'            "statusCode:" + strSta                              '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g
        If Val(strSta) = 1 Then
            poLogSheet.Cells(llRow, 7).value = "|fffd||fffd||fffd||fffd|I|fffd||fffd|"
        ElseIf Val(strSta) = 401 Or strSta = 420 Or strSta = 421 Or strSta = 500 Then
            poLogSheet.Cells(llRow, 7).value = "|fffd||64f||fffd|I|fffd||fffd|(" & strSta & ")"
        Else
            poLogSheet.Cells(llRow, 7).value = "|fffd||64f||fffd|I|fffd||fffd|()"
        End If
        
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        poLogSheet.Cells(llRow, 8).value = _
'            "errorMessage:" + strErr + "," + _
'            "statusCode:" + strSta                              ''|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g

        poLogSheet.Cells(llRow, 8).value = strErr
        
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
                
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gSetLog")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|A|fffd||502||30d|X|fffd|V
'
' |fffd||fffd||fffd||fffd|      : |fffd|X|fffd|V|fffd|O|fffd|A|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd|X|fffd|V|fffd||fffd|A|fffd||fffd|
'
' |fffd||fffd||fffd|l      : |fffd|A|fffd||502||fffd|+1|fffd||fffd||fffd||fffd|
'             |fffd|I|fffd|[|fffd|o|fffd|[|fffd|t|fffd||fffd||fffd|[|fffd||30f||a347||fffd||fffd|1|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' @(h)
'
'------------------------------------------------------------------------------
Private Function glSetSeqNo(ByVal pSeqNo As Double) As Double
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "glSetSeqNo")
    '------------------------------------------
    On Error GoTo ErrEnd
    glSetSeqNo = pSeqNo + 1
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "glSetSeqNo")
    '------------------------------------------
    Exit Function
ErrEnd:
    glSetSeqNo = 1
End Function
Attribute VB_Name = "basMD5"
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basLog.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' MD5|fffd||fffd||fffd||598|A|fffd||590||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.excel.studio-kazu.jp/kw/20110609153419.html
'
'-----------------------------------------------------------------------------
Private Const BITS_TO_A_BYTE = 8
 Private Const BYTES_TO_A_WORD = 4
 Private Const BITS_TO_A_WORD = 32
 Private m_lOnBits(30)
 Private m_l2Power(30)

 Sub MD5Init()
    m_lOnBits(0) = CLng(1)
    m_lOnBits(1) = CLng(3)
    m_lOnBits(2) = CLng(7)
    m_lOnBits(3) = CLng(15)
    m_lOnBits(4) = CLng(31)
    m_lOnBits(5) = CLng(63)
    m_lOnBits(6) = CLng(127)
    m_lOnBits(7) = CLng(255)
    m_lOnBits(8) = CLng(511)
    m_lOnBits(9) = CLng(1023)
    m_lOnBits(10) = CLng(2047)
    m_lOnBits(11) = CLng(4095)
    m_lOnBits(12) = CLng(8191)
    m_lOnBits(13) = CLng(16383)
    m_lOnBits(14) = CLng(32767)
    m_lOnBits(15) = CLng(65535)
    m_lOnBits(16) = CLng(131071)
    m_lOnBits(17) = CLng(262143)
    m_lOnBits(18) = CLng(524287)
    m_lOnBits(19) = CLng(1048575)
    m_lOnBits(20) = CLng(2097151)
    m_lOnBits(21) = CLng(4194303)
    m_lOnBits(22) = CLng(8388607)
    m_lOnBits(23) = CLng(16777215)
    m_lOnBits(24) = CLng(33554431)
    m_lOnBits(25) = CLng(67108863)
    m_lOnBits(26) = CLng(134217727)
    m_lOnBits(27) = CLng(268435455)
    m_lOnBits(28) = CLng(536870911)
    m_lOnBits(29) = CLng(1073741823)
    m_lOnBits(30) = CLng(2147483647)
    m_l2Power(0) = CLng(1)
    m_l2Power(1) = CLng(2)
    m_l2Power(2) = CLng(4)
    m_l2Power(3) = CLng(8)
    m_l2Power(4) = CLng(16)
    m_l2Power(5) = CLng(32)
    m_l2Power(6) = CLng(64)
    m_l2Power(7) = CLng(128)
    m_l2Power(8) = CLng(256)
    m_l2Power(9) = CLng(512)
    m_l2Power(10) = CLng(1024)
    m_l2Power(11) = CLng(2048)
    m_l2Power(12) = CLng(4096)
    m_l2Power(13) = CLng(8192)
    m_l2Power(14) = CLng(16384)
    m_l2Power(15) = CLng(32768)
    m_l2Power(16) = CLng(65536)
    m_l2Power(17) = CLng(131072)
    m_l2Power(18) = CLng(262144)
    m_l2Power(19) = CLng(524288)
    m_l2Power(20) = CLng(1048576)
    m_l2Power(21) = CLng(2097152)
    m_l2Power(22) = CLng(4194304)
    m_l2Power(23) = CLng(8388608)
    m_l2Power(24) = CLng(16777216)
    m_l2Power(25) = CLng(33554432)
    m_l2Power(26) = CLng(67108864)
    m_l2Power(27) = CLng(134217728)
    m_l2Power(28) = CLng(268435456)
    m_l2Power(29) = CLng(536870912)
    m_l2Power(30) = CLng(1073741824)
 End Sub
 Private Function LShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        LShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And 1 Then
            LShift = &H80000000
        Else
            LShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If
    If (lValue And m_l2Power(31 - iShiftBits)) Then
        LShift = ((lValue And m_lOnBits(31 - (iShiftBits + 1))) * m_l2Power(iShiftBits)) Or &H80000000
    Else
        LShift = ((lValue And m_lOnBits(31 - iShiftBits)) * m_l2Power(iShiftBits))
    End If
 End Function
 Private Function RShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        RShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And &H80000000 Then
            RShift = 1
        Else
            RShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If
    RShift = (lValue And &H7FFFFFFE) \ m_l2Power(iShiftBits)
    If (lValue And &H80000000) Then
        RShift = (RShift Or (&H40000000 \ m_l2Power(iShiftBits - 1)))
    End If
 End Function
 Private Function RotateLeft(lValue, iShiftBits)
    RotateLeft = LShift(lValue, iShiftBits) Or RShift(lValue, (32 - iShiftBits))
 End Function
 Private Function AddUnsigned(lX, lY)
    Dim lX4
    Dim lY4
    Dim lX8
    Dim lY8
    Dim lResult
    lX8 = lX And &H80000000
    lY8 = lY And &H80000000
    lX4 = lX And &H40000000
    lY4 = lY And &H40000000
    lResult = (lX And &H3FFFFFFF) + (lY And &H3FFFFFFF)
    If lX4 And lY4 Then
        lResult = lResult Xor &H80000000 Xor lX8 Xor lY8
    ElseIf lX4 Or lY4 Then
        If lResult And &H40000000 Then
            lResult = lResult Xor &HC0000000 Xor lX8 Xor lY8
        Else
            lResult = lResult Xor &H40000000 Xor lX8 Xor lY8
        End If
    Else
        lResult = lResult Xor lX8 Xor lY8
    End If
    AddUnsigned = lResult
 End Function
 Private Function F(X, Y, z)
    F = (X And Y) Or ((Not X) And z)
 End Function
 Private Function G(X, Y, z)
    G = (X And z) Or (Y And (Not z))
 End Function
 Private Function H(X, Y, z)
    H = (X Xor Y Xor z)
 End Function
 Private Function i(X, Y, z)
    i = (Y Xor (X Or (Not z)))
 End Function
 Private Sub FF(a, b, c, d, X, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), X), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub GG(a, b, c, d, X, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), X), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub HH(a, b, c, d, X, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), X), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub II(a, b, c, d, X, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(i(b, c, d), X), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Function ConvertToWordArray(sMessage)
    Dim lMessageLength
    Dim lNumberOfWords
    Dim lWordArray()
    Dim lBytePosition
    Dim lByteCount
    Dim lWordCount
    Const MODULUS_BITS = 512
    Const CONGRUENT_BITS = 448
    lMessageLength = Len(sMessage)
    lNumberOfWords = (((lMessageLength + ((MODULUS_BITS - CONGRUENT_BITS) \ BITS_TO_A_BYTE)) \ (MODULUS_BITS \ BITS_TO_A_BYTE)) + 1) * (MODULUS_BITS \ BITS_TO_A_WORD)
    ReDim lWordArray(lNumberOfWords - 1)
    lBytePosition = 0
    lByteCount = 0
    Do Until lByteCount >= lMessageLength
        lWordCount = lByteCount \ BYTES_TO_A_WORD
        lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
        lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(Asc(Mid(sMessage, lByteCount + 1, 1)), lBytePosition)
        lByteCount = lByteCount + 1
    Loop
    lWordCount = lByteCount \ BYTES_TO_A_WORD
    lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
    lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(&H80, lBytePosition)
    lWordArray(lNumberOfWords - 2) = LShift(lMessageLength, 3)
    lWordArray(lNumberOfWords - 1) = RShift(lMessageLength, 29)
    ConvertToWordArray = lWordArray
 End Function
 Private Function WordToHex(lValue)
    Dim lByte
    Dim lCount
    For lCount = 0 To 3
        lByte = RShift(lValue, lCount * BITS_TO_A_BYTE) And m_lOnBits(BITS_TO_A_BYTE - 1)
        WordToHex = WordToHex & Right("0" & Hex(lByte), 2)
    Next
 End Function
 Public Function MD5(sMessage)
    MD5Init
    Dim X
    Dim K
    Dim AA
    Dim BB
    Dim CC
    Dim DD
    Dim a
    Dim b
    Dim c
    Dim d
    Const S11 = 7
    Const S12 = 12
    Const S13 = 17
    Const S14 = 22
    Const S21 = 5
    Const S22 = 9
    Const S23 = 14
    Const S24 = 20
    Const S31 = 4
    Const S32 = 11
    Const S33 = 16
    Const S34 = 23
    Const S41 = 6
    Const S42 = 10
    Const S43 = 15
    Const S44 = 21
    X = ConvertToWordArray(sMessage)
    a = &H67452301
    b = &HEFCDAB89
    c = &H98BADCFE
    d = &H10325476
    For K = 0 To UBound(X) Step 16
        AA = a
        BB = b
        CC = c
        DD = d
        FF a, b, c, d, X(K + 0), S11, &HD76AA478
        FF d, a, b, c, X(K + 1), S12, &HE8C7B756
        FF c, d, a, b, X(K + 2), S13, &H242070DB
        FF b, c, d, a, X(K + 3), S14, &HC1BDCEEE
        FF a, b, c, d, X(K + 4), S11, &HF57C0FAF
        FF d, a, b, c, X(K + 5), S12, &H4787C62A
        FF c, d, a, b, X(K + 6), S13, &HA8304613
        FF b, c, d, a, X(K + 7), S14, &HFD469501
        FF a, b, c, d, X(K + 8), S11, &H698098D8
        FF d, a, b, c, X(K + 9), S12, &H8B44F7AF
        FF c, d, a, b, X(K + 10), S13, &HFFFF5BB1
        FF b, c, d, a, X(K + 11), S14, &H895CD7BE
        FF a, b, c, d, X(K + 12), S11, &H6B901122
        FF d, a, b, c, X(K + 13), S12, &HFD987193
        FF c, d, a, b, X(K + 14), S13, &HA679438E
        FF b, c, d, a, X(K + 15), S14, &H49B40821
        GG a, b, c, d, X(K + 1), S21, &HF61E2562
        GG d, a, b, c, X(K + 6), S22, &HC040B340
        GG c, d, a, b, X(K + 11), S23, &H265E5A51
        GG b, c, d, a, X(K + 0), S24, &HE9B6C7AA
        GG a, b, c, d, X(K + 5), S21, &HD62F105D
        GG d, a, b, c, X(K + 10), S22, &H2441453
        GG c, d, a, b, X(K + 15), S23, &HD8A1E681
        GG b, c, d, a, X(K + 4), S24, &HE7D3FBC8
        GG a, b, c, d, X(K + 9), S21, &H21E1CDE6
        GG d, a, b, c, X(K + 14), S22, &HC33707D6
        GG c, d, a, b, X(K + 3), S23, &HF4D50D87
        GG b, c, d, a, X(K + 8), S24, &H455A14ED
        GG a, b, c, d, X(K + 13), S21, &HA9E3E905
        GG d, a, b, c, X(K + 2), S22, &HFCEFA3F8
        GG c, d, a, b, X(K + 7), S23, &H676F02D9
        GG b, c, d, a, X(K + 12), S24, &H8D2A4C8A
        HH a, b, c, d, X(K + 5), S31, &HFFFA3942
        HH d, a, b, c, X(K + 8), S32, &H8771F681
        HH c, d, a, b, X(K + 11), S33, &H6D9D6122
        HH b, c, d, a, X(K + 14), S34, &HFDE5380C
        HH a, b, c, d, X(K + 1), S31, &HA4BEEA44
        HH d, a, b, c, X(K + 4), S32, &H4BDECFA9
        HH c, d, a, b, X(K + 7), S33, &HF6BB4B60
        HH b, c, d, a, X(K + 10), S34, &HBEBFBC70
        HH a, b, c, d, X(K + 13), S31, &H289B7EC6
        HH d, a, b, c, X(K + 0), S32, &HEAA127FA
        HH c, d, a, b, X(K + 3), S33, &HD4EF3085
        HH b, c, d, a, X(K + 6), S34, &H4881D05
        HH a, b, c, d, X(K + 9), S31, &HD9D4D039
        HH d, a, b, c, X(K + 12), S32, &HE6DB99E5
        HH c, d, a, b, X(K + 15), S33, &H1FA27CF8
        HH b, c, d, a, X(K + 2), S34, &HC4AC5665
        II a, b, c, d, X(K + 0), S41, &HF4292244
        II d, a, b, c, X(K + 7), S42, &H432AFF97
        II c, d, a, b, X(K + 14), S43, &HAB9423A7
        II b, c, d, a, X(K + 5), S44, &HFC93A039
        II a, b, c, d, X(K + 12), S41, &H655B59C3
        II d, a, b, c, X(K + 3), S42, &H8F0CCC92
        II c, d, a, b, X(K + 10), S43, &HFFEFF47D
        II b, c, d, a, X(K + 1), S44, &H85845DD1
        II a, b, c, d, X(K + 8), S41, &H6FA87E4F
        II d, a, b, c, X(K + 15), S42, &HFE2CE6E0
        II c, d, a, b, X(K + 6), S43, &HA3014314
        II b, c, d, a, X(K + 13), S44, &H4E0811A1
        II a, b, c, d, X(K + 4), S41, &HF7537E82
        II d, a, b, c, X(K + 11), S42, &HBD3AF235
        II c, d, a, b, X(K + 2), S43, &H2AD7D2BB
        II b, c, d, a, X(K + 9), S44, &HEB86D391
        a = AddUnsigned(a, AA)
        b = AddUnsigned(b, BB)
        c = AddUnsigned(c, CC)
        d = AddUnsigned(d, DD)
    Next
    MD5 = LCase(WordToHex(a) & WordToHex(b) & WordToHex(c) & WordToHex(d))
 End Function

Attribute VB_Name = "basMenuSelect"
Option Explicit
Private Const MODULE_NAME As String = "basMenuSelect"

'-----------------------------------------------------------------------------
' @(h) basMenuSelect.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|^|fffd|u|fffd||fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||c39e||fffd||590||fffd|
'
'-----------------------------------------------------------------------------

'2014/05/01 QA|fffd|\No.136,142|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|ueSM|fffd|f|fffd|[|fffd|^|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gEsmButton(control As IRibbonControl)
    Dim llListCnt As Long
    Dim ltDataInfo() As tDataSetInfo
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gEsmButton_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gEsmButton", True)
    '------------------------------------------
    '|fffd|e|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    Set goSheet = goBook.ActiveSheet
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|1|fffd||82||142||fffd||fffd|o|fffd||350||752||80b5||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||90a9|
    llListCnt = 0
    Call gGetAllSheetInfo(goBook, ltDataInfo, llListCnt)
    Set goBook = Nothing
    Set goSheet = Nothing
    If llListCnt > 0 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|u|fffd|S|fffd||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd|v|fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
        Call gRefreshAllData(control)
    Else
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||1c9||fffd||fffd|v|fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
        Call gGetESMDataEvent(control, ci_BP_eSMButton)
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gEsmButton", True)
    '------------------------------------------
    Exit Sub
gEsmButton_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'Callback for eSMData onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||1c9||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gGetNewData(control As IRibbonControl)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gMenuExec_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gGetNewData", True)
    '------------------------------------------
    Call gGetESMDataEvent(control, ci_BP_eSMButton)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gGetNewData", True)
    '------------------------------------------
    Exit Sub
gMenuExec_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd|E|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||3cd|X|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : control     - (o) : |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|i|fffd|g|fffd||fffd||202||fffd||fffd|j
'           : piBigParent - (i) : |fffd||10f|o|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : |fffd||10a2||fffd||341|A|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||68f|o|fffd||342||303|V|fffd|[|fffd|g|fffd|I|fffd||fffd||fffd||141|A|fffd||fffd||fffd|o|fffd||342||303|V|fffd|[|fffd|g|fffd||311|I|fffd||fffd||fffd||702||fffd||fffd||34c||fffd||fffd||742||303|V|fffd|[|fffd|g|fffd||152||fffd|A|fffd||302||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub gGetESMDataEvent(control As IRibbonControl, ByVal piBigParent As Integer)
    Dim lblRet As Boolean
    Dim lblFlg As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gGetESMDataEvent")
    '------------------------------------------
    If Application.Workbooks.Count < 1 Then GoTo EXIT_LABEL '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    '|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    If gblLoadFlg Then
        GoTo EXIT_LABEL
    End If
    '|fffd|e|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    Set goSheet = goBook.ActiveSheet
    
    giDest = ci_Dest_Login  '|fffd||fffd||fffd||309||fffd||282||30d|s|fffd||fffd||fffd||fffd|w|fffd||fffd|
    giBigParent = piBigParent   '|fffd||5333||fffd||30c||10f|o|fffd||fffd||fffd|w|fffd||fffd|
    giSmallParent = piBigParent
    
    '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    If piBigParent = ci_BP_SETTINGS Then    '|fffd||752||fffd||3cd|X|fffd||302||182||fffd||fffd||343|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'        Call gtInitDataInfo(gtActDataInfo)
'        If gblGetDataInfo(goBook, gtActDataInfo, goSheet.Name) = False Then
'            Call MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||242||343|f|fffd|[|fffd|^|fffd||64fe||fffd||310||752||80aa||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
'                        "eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||242||fffd||fffd||752||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'            GoTo EXIT_LABEL
'        End If
'    End If
    
    lblFlg = False
    Do
        Select Case giDest
            Case ci_Dest_Login
                frmLogin.Show
            Case ci_Dest_DataTypeSelect
                frmDataTypeSelect.Show
            Case ci_Dest_DataListSel
                frmDataList.Show
            Case ci_Dest_DataListSelItem
                frmDataListSelItem.Show
            Case ci_Dest_DataSel
                frmDataSel.Show
            Case ci_Dest_CSVOutput
                frmDataOutput.Show
            '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
            Case ci_Dest_DataSheetSelect
                frmDataSheetSelect.Show
            '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
            Case ci_Dest_DataSettings
                frmDataSettings.Show
            Case Else
                lblFlg = True
        End Select
        If lblFlg Then Exit Do
    Loop
EXIT_LABEL:
    gblOutputNewSheet = False   '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    Set goSheet = Nothing
    Set goBook = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gGetESMDataEvent")
    '------------------------------------------
End Sub

'Callback for RefreshData onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gRefreshData(control As IRibbonControl)
    Dim lblRet As Boolean
    Dim lblFlg As Boolean
    Dim ltDummy As tDataSetInfo
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gRefreshData_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gRefreshData", True)
    '------------------------------------------
    If Application.Workbooks.Count < 1 Then GoTo EXIT_LABEL '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    '|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    If gblLoadFlg Then
        GoTo EXIT_LABEL
    End If
    '|fffd|e|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    Set goSheet = goBook.ActiveSheet
    '2014/04/15 QA|fffd|\No.117|fffd||389||fffd|
'    If MsgBox("|fffd|u" & goSheet.Name & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'              "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbOKCancel + vbQuestion, SYSTEM_MSG_TITLE) = vbCancel Then
    If mlMsgBoxW("|fffd|u" & goSheet.Name & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
              "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbOKCancel + vbQuestion, SYSTEM_MSG_TITLE) = vbCancel Then
        GoTo EXIT_LABEL
    End If
    '|fffd|f|fffd|[|fffd|^|fffd||752||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||202||fffd|A|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||fffd|
    If gblGetDataInfo(goBook, ltDummy, goSheet.Name) = False Then
        Call MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||242||343|f|fffd|[|fffd|^|fffd||64fe||fffd||310||752||80aa||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                    "eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||242||fffd||fffd||752||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    
    giDest = ci_Dest_Login  '|fffd||fffd||fffd||309||fffd||282||30d|s|fffd||fffd||fffd||fffd|w|fffd||fffd|
    giBigParent = ci_BP_REFRESH   '|fffd||5333||fffd||30c||10f|o|fffd||fffd||fffd|w|fffd||fffd|
    giSmallParent = ci_BP_REFRESH
    
    gtActDataInfo = ltDummy '|fffd||211|O|fffd||310||691||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
    
    lblFlg = False
    Do
        Select Case giDest
            Case ci_Dest_Login
                frmLogin.Show
            Case ci_Dest_CSVOutput
                frmDataOutput.Show
            Case Else
                lblFlg = True
        End Select
        If lblFlg Then Exit Do
    Loop
EXIT_LABEL:
    Set goSheet = Nothing
    Set goBook = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gRefreshData", True)
    '------------------------------------------
    Exit Sub
gRefreshData_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'Callback for RefreshAllData onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gRefreshAllData(control As IRibbonControl)
    Dim lblUpdate As Boolean
    Dim lcMsg As String
    Dim lblRet As Boolean
    Dim lblFlg As Boolean
    Dim ltDummy As tDataSetInfo
    Dim ltData() As tDataSetInfo
    Dim llDataCnt As Long
    Dim llcnt As Long
    Dim lblUpdExec As Boolean
    Dim loActSheet As Excel.Worksheet    '2014/04/03 QA|fffd|\ No.106|fffd||389||fffd|
    Dim lcActSheetName As String
    Dim lblRirekiFlg As Boolean         '2014/06/02 QA|fffd|\No.171|fffd||389||fffd|
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gRefreshAllData_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gRefreshAllData", True)
    '------------------------------------------
    If Application.Workbooks.Count < 1 Then GoTo EXIT_LABEL '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    '|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    If gblLoadFlg Then
        GoTo EXIT_LABEL
    End If
    '|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    If MsgBox("|fffd||fffd||fffd||5c2||102||303|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
              "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbOKCancel + vbQuestion, SYSTEM_MSG_TITLE) = vbCancel Then
        GoTo EXIT_LABEL
    End If
    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'    '2014/06/02 QA|fffd|\No.171|fffd||389||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd||14ed2||80b7||fffd||fffd||60a4||fffd||242||fffd||fffd||90bd||fffd||7c8||693||fffd|
'    Dim lblMsgRetR As VbMsgBoxResult
'    lblMsgRetR = MsgBox("|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||17697||fffd||fffd||182||fffd||fffd||10e|c|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)
'    gblRefreshAllRireki = (lblMsgRetR = vbYes)
    
    giDest = ci_Dest_Login  '|fffd||fffd||fffd||309||fffd||282||30d|s|fffd||fffd||fffd||fffd|w|fffd||fffd|
    giBigParent = ci_BP_REFRESHALL   '|fffd||5333||fffd||30c||10f|o|fffd||fffd||fffd|w|fffd||fffd|
    giSmallParent = ci_BP_REFRESHALL
    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
    '|fffd||fffd||fffd||fffd||fffd||311||389||fffd||fffd||141|A|fffd|u|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||303|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|v|fffd||182||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd|o|fffd||102||fffd||fffd||90bd||fffd||7c1|A
    '|fffd||fffd||fffd||a0aa|loActSheet|fffd||fffd||fffd||197||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||302||fffd||fffd||7d6||fffd||fffd|O|fffd||155||6ce||fffd||fffd||fffd||fffd||fffd||60a4||fffd||24f|C|fffd||fffd||fffd||fffd||fffd||fffd|
'    Set loActSheet = goBook.ActiveSheet    '2014/04/03 QA|fffd|\ No.106|fffd||389||fffd|
    lcActSheetName = goBook.ActiveSheet.Name
    
    '|fffd|f|fffd|[|fffd|^|fffd||752||fffd||fffd||42a83|Z|fffd|b|fffd|g|fffd||3c2||303|V|fffd|[|fffd|g|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    lblRirekiFlg = False    '2014/06/02 QA|fffd|\No.171|fffd||389||fffd|
    llDataCnt = 0
    lblUpdate = False
    For llcnt = 1 To goBook.Worksheets.Count
        If gblGetDataInfo(goBook, ltDummy, goBook.Worksheets(llcnt).Name) Then
            ReDim Preserve ltData(llDataCnt)
            ltData(llDataCnt) = ltDummy
            llDataCnt = llDataCnt + 1
            lblUpdate = True
            '2014/06/02 QA|fffd|\No.171|fffd||389||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||752||fffd||303|V|fffd|[|fffd|g|fffd||fffd|1|fffd||82||142||fffd||fffd||fffd||fffd||90a9||fffd||fffd||fffd||64fe|
            If ltDummy.blRirekiSave Then
                lblRirekiFlg = True
            End If
        End If
    Next
    
    '2014/06/02 QA|fffd|\No.171|fffd||389||fffd|
    '2014/06/13 QA|fffd|\No.176|fffd||389||fffd| |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||34f|o|fffd||fffd||fffd||fffd||fffd|A|fffd|e|fffd|V|fffd|[|fffd|g|fffd||317||fffd||fffd||fffd||6ce||fffd||fffd||752||fffd||24f|]|fffd||fffd||fffd|igblRefreshAllRireki = True|fffd||152||fffd|j
'    Dim lblMsgRetR As VbMsgBoxResult
'    If lblRirekiFlg Then
'        lblMsgRetR = MsgBox("|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||17697||fffd||fffd||182||fffd||fffd||10e|c|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)
'        gblRefreshAllRireki = (lblMsgRetR = vbYes)
'    Else
'        gblRefreshAllRireki = False
'    End If
    gblRefreshAllRireki = True
    
    '|fffd|S|fffd||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V
    lblUpdExec = False
    If llDataCnt > 0 Then
        Do
            Select Case giDest
                Case ci_Dest_Login
                    frmLogin.Show
                Case ci_Dest_CSVOutput
                    lblUpdExec = True   'frmOutput|fffd||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||a347|
                    For llcnt = 0 To UBound(ltData)
                        gtActDataInfo = ltData(llcnt)
                        frmDataOutput.Show
                    Next
                    lblFlg = True
                Case Else
                    lblFlg = True
            End Select
            If lblFlg Then Exit Do
        Loop
    End If
    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd|
    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'    loActSheet.Select    '2014/04/03 QA|fffd|\ No.106|fffd||389||fffd|
    If gblExistSheet2(goBook, lcActSheetName) Then
        goBook.Worksheets(lcActSheetName).Select
    End If
    If lblUpdate Then
        If lblUpdExec Then
            '2014/04/01 QA|fffd|\ No.93|fffd||389||fffd|
            goBook.RefreshAll
            Call MsgBox("|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & IIf(lblUpdate, "", vbCrLf & lcMsg), vbInformation + vbOKOnly, SYSTEM_MSG_TITLE)
        End If
    Else
        Call MsgBox("|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||310||752||80aa||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & IIf(lblUpdate, "", vbCrLf & lcMsg), vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
    End If
EXIT_LABEL:
    Set loActSheet = Nothing    '2014/04/03 QA|fffd|\ No.106|fffd||389||fffd|
    Set goSheet = Nothing
    Set goBook = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gRefreshAllData", True)
    '------------------------------------------
    Exit Sub
gRefreshAllData_OnErr:
    Set loActSheet = Nothing    '2014/04/03 QA|fffd|\ No.106|fffd||389||fffd|
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'Callback for RefreshCancelData onAction
Sub gRefreshCancelData(control As IRibbonControl)
'|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||7c9||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
End Sub

'Callback for ChangeSettings onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||3cd|X|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gChangeDataSettings(control As IRibbonControl)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gChangeDataSettings_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gChangeDataSettings", True)
    '------------------------------------------
    Call gGetESMDataEvent(control, ci_BP_SETTINGS)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gChangeDataSettings", True)
    '------------------------------------------
    Exit Sub
gChangeDataSettings_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'Callback for DeleteData onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gDeleteData(control As IRibbonControl)
    Dim lblMsgRet As VbMsgBoxResult
    Dim ltDummy As tDataSetInfo
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gDeleteData_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gDeleteData", True)
    '------------------------------------------
    If Application.Workbooks.Count < 1 Then GoTo EXIT_LABEL '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    '|fffd|e|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    Set goSheet = goBook.ActiveSheet
'    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd|
'    If gblExistSheet2(goBook, cc_SHEET_ENV) = False Then GoTo EXIT_LABEL
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd|
    If goSheet.Name = cc_SHEET_ENV Then GoTo EXIT_LABEL
    If goSheet.Name = cc_SHEET_LOG Then GoTo EXIT_LABEL
    '|fffd|f|fffd|[|fffd|^|fffd||752||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||202||fffd|A|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||fffd|
    If gblGetDataInfo(goBook, ltDummy, goSheet.Name) = False Then
        Call MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||242||343|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||80aa||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    '|fffd|m|fffd|F
    '2014/04/15 QA|fffd|\No.117|fffd||389||fffd|
'    lblMsgRet = MsgBox("|fffd|u" & goSheet.Name & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd||183|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                       "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel, SYSTEM_MSG_TITLE)
    lblMsgRet = mlMsgBoxW("|fffd|u" & goSheet.Name & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||fffd||303|f|fffd|[|fffd|^|fffd||183|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel, SYSTEM_MSG_TITLE)
    If lblMsgRet = vbOK Then
        goSheet.Cells.ClearContents
        Call gblDelSheetInfoPara(goBook, goSheet.Name)
        MsgBox "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbOKOnly + vbInformation, SYSTEM_MSG_TITLE
    End If
EXIT_LABEL:
    Set goSheet = Nothing
    Set goBook = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gDeleteData", True)
    '------------------------------------------
    Exit Sub
gDeleteData_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

'Callback for ConnectionProperty onAction
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||691||fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Sub gChangeConnProperty(control As IRibbonControl)
    Dim lblRet As Boolean
    Dim lblFlg As Boolean
    Dim ltDummy As tDataSetInfo
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo gChangeConnProperty_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "gChangeConnProperty", True)
    '------------------------------------------
    If Application.Workbooks.Count < 1 Then GoTo EXIT_LABEL '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    '|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    If gblLoadFlg Then
        GoTo EXIT_LABEL
    End If
    '|fffd|e|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||30f||fffd||fffd||fffd||fffd|J|fffd|n
    Set goBook = goGetActiveBook
    
    giDest = ci_Dest_Login          '|fffd||fffd||fffd||309||fffd||282||30d|s|fffd||fffd||fffd||fffd|w|fffd||fffd|
    giBigParent = ci_BP_CONNINFO    '|fffd||5333||fffd||30c||10f|o|fffd||fffd||fffd|w|fffd||fffd|
    
    lblFlg = False
    Do
        Select Case giDest
            Case ci_Dest_Login
                frmLogin.Show
            Case Else
                lblFlg = True
        End Select
        If lblFlg Then Exit Do
    Loop
EXIT_LABEL:
    Set goSheet = Nothing
    Set goBook = Nothing
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gChangeConnProperty", True)
    '------------------------------------------
    Exit Sub
gChangeConnProperty_OnErr:
    Set goSheet = Nothing
    Set goBook = Nothing
    Call gblFuncStack.DispError
End Sub

Attribute VB_Name = "basZBlfArrays"
'Attribute VB_Name = "basBlfArrays"
Option Explicit
Option Base 0

'-----------------------------------------------------------------------------
' @(h) basBlfArrays.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basBlfArrays: Initialises P-array and S-boxes for Blowfish algorithm

' First published October 2000.
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-2 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact and acknowledge
' its authorship with the words:

'   "Contains cryptography software by David Ireland of
'   DI Management Services Pty Ltd <www.di-mgt.com.au>."

' If you use it as part of a web site, please include a link
' to our site in the form
' <A HREF="http://www.di-mgt.com.au/crypto.html">Cryptography
' Software Code</a>

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.
'****************** END OF COPYRIGHT NOTICE*************************

Public blf_P(17) As Long
Public blf_S(3, 255) As Long

Public Function blf_LoadArrays()
' Use Array fn and a temp variant array to load data into arrays
    Dim vntA As Variant
    Dim i As Integer

    ' P-array
    vntA = Array( _
        &H243F6A88, &H85A308D3, &H13198A2E, &H3707344, _
        &HA4093822, &H299F31D0, &H82EFA98, &HEC4E6C89, _
        &H452821E6, &H38D01377, &HBE5466CF, &H34E90C6C, _
        &HC0AC29B7, &HC97C50DD, &H3F84D5B5, &HB5470917, _
        &H9216D5D9, &H8979FB1B)
    
    For i = 0 To 17
        blf_P(i) = vntA(i)
    Next
    
    ' Load S-boxes - 16 x 4 at a time
    
    ' S-box[0]
    vntA = Array( _
        &HD1310BA6, &H98DFB5AC, &H2FFD72DB, &HD01ADFB7, _
        &HB8E1AFED, &H6A267E96, &HBA7C9045, &HF12C7F99, _
        &H24A19947, &HB3916CF7, &H801F2E2, &H858EFC16, _
        &H636920D8, &H71574E69, &HA458FEA3, &HF4933D7E, _
        &HD95748F, &H728EB658, &H718BCD58, &H82154AEE, _
        &H7B54A41D, &HC25A59B5, &H9C30D539, &H2AF26013, _
        &HC5D1B023, &H286085F0, &HCA417918, &HB8DB38EF, _
        &H8E79DCB0, &H603A180E, &H6C9E0E8B, &HB01E8A3E, _
        &HD71577C1, &HBD314B27, &H78AF2FDA, &H55605C60, _
        &HE65525F3, &HAA55AB94, &H57489862, &H63E81440, _
        &H55CA396A, &H2AAB10B6, &HB4CC5C34, &H1141E8CE, _
        &HA15486AF, &H7C72E993, &HB3EE1411, &H636FBC2A, _
        &H2BA9C55D, &H741831F6, &HCE5C3E16, &H9B87931E, _
        &HAFD6BA33, &H6C24CF5C, &H7A325381, &H28958677, _
        &H3B8F4898, &H6B4BB9AF, &HC4BFE81B, &H66282193, _
        &H61D809CC, &HFB21A991, &H487CAC60, &H5DEC8032)
        
    For i = 0 To 63
        blf_S(0, i) = vntA(i)
    Next
    
    vntA = Array( _
        &HEF845D5D, &HE98575B1, &HDC262302, &HEB651B88, _
        &H23893E81, &HD396ACC5, &HF6D6FF3, &H83F44239, _
        &H2E0B4482, &HA4842004, &H69C8F04A, &H9E1F9B5E, _
        &H21C66842, &HF6E96C9A, &H670C9C61, &HABD388F0, _
        &H6A51A0D2, &HD8542F68, &H960FA728, &HAB5133A3, _
        &H6EEF0B6C, &H137A3BE4, &HBA3BF050, &H7EFB2A98, _
        &HA1F1651D, &H39AF0176, &H66CA593E, &H82430E88, _
        &H8CEE8619, &H456F9FB4, &H7D84A5C3, &H3B8B5EBE, _
        &HE06F75D8, &H85C12073, &H401A449F, &H56C16AA6, _
        &H4ED3AA62, &H363F7706, &H1BFEDF72, &H429B023D, _
        &H37D0D724, &HD00A1248, &HDB0FEAD3, &H49F1C09B, _
        &H75372C9, &H80991B7B, &H25D479D8, &HF6E8DEF7, _
        &HE3FE501A, &HB6794C3B, &H976CE0BD, &H4C006BA, _
        &HC1A94FB6, &H409F60C4, &H5E5C9EC2, &H196A2463, _
        &H68FB6FAF, &H3E6C53B5, &H1339B2EB, &H3B52EC6F, _
        &H6DFC511F, &H9B30952C, &HCC814544, &HAF5EBD09)
        
    For i = 0 To 63     '64 To 127
        blf_S(0, i + 64) = vntA(i)
    Next
        
    vntA = Array( _
        &HBEE3D004, &HDE334AFD, &H660F2807, &H192E4BB3, _
        &HC0CBA857, &H45C8740F, &HD20B5F39, &HB9D3FBDB, _
        &H5579C0BD, &H1A60320A, &HD6A100C6, &H402C7279, _
        &H679F25FE, &HFB1FA3CC, &H8EA5E9F8, &HDB3222F8, _
        &H3C7516DF, &HFD616B15, &H2F501EC8, &HAD0552AB, _
        &H323DB5FA, &HFD238760, &H53317B48, &H3E00DF82, _
        &H9E5C57BB, &HCA6F8CA0, &H1A87562E, &HDF1769DB, _
        &HD542A8F6, &H287EFFC3, &HAC6732C6, &H8C4F5573, _
        &H695B27B0, &HBBCA58C8, &HE1FFA35D, &HB8F011A0, _
        &H10FA3D98, &HFD2183B8, &H4AFCB56C, &H2DD1D35B, _
        &H9A53E479, &HB6F84565, &HD28E49BC, &H4BFB9790, _
        &HE1DDF2DA, &HA4CB7E33, &H62FB1341, &HCEE4C6E8, _
        &HEF20CADA, &H36774C01, &HD07E9EFE, &H2BF11FB4, _
        &H95DBDA4D, &HAE909198, &HEAAD8E71, &H6B93D5A0, _
        &HD08ED1D0, &HAFC725E0, &H8E3C5B2F, &H8E7594B7, _
        &H8FF6E2FB, &HF2122B64, &H8888B812, &H900DF01C)
        
    For i = 0 To 63     ' 128 To 191
        blf_S(0, i + 128) = vntA(i)
    Next
        
    vntA = Array( _
        &H4FAD5EA0, &H688FC31C, &HD1CFF191, &HB3A8C1AD, _
        &H2F2F2218, &HBE0E1777, &HEA752DFE, &H8B021FA1, _
        &HE5A0CC0F, &HB56F74E8, &H18ACF3D6, &HCE89E299, _
        &HB4A84FE0, &HFD13E0B7, &H7CC43B81, &HD2ADA8D9, _
        &H165FA266, &H80957705, &H93CC7314, &H211A1477, _
        &HE6AD2065, &H77B5FA86, &HC75442F5, &HFB9D35CF, _
        &HEBCDAF0C, &H7B3E89A0, &HD6411BD3, &HAE1E7E49, _
        &H250E2D, &H2071B35E, &H226800BB, &H57B8E0AF, _
        &H2464369B, &HF009B91E, &H5563911D, &H59DFA6AA, _
        &H78C14389, &HD95A537F, &H207D5BA2, &H2E5B9C5, _
        &H83260376, &H6295CFA9, &H11C81968, &H4E734A41, _
        &HB3472DCA, &H7B14A94A, &H1B510052, &H9A532915, _
        &HD60F573F, &HBC9BC6E4, &H2B60A476, &H81E67400, _
        &H8BA6FB5, &H571BE91F, &HF296EC6B, &H2A0DD915, _
        &HB6636521, &HE7B9F9B6, &HFF34052E, &HC5855664, _
        &H53B02D5D, &HA99F8FA1, &H8BA4799, &H6E85076A)

    For i = 0 To 63     ' 192 To 255
        blf_S(0, i + 192) = vntA(i)
    Next
   
    ' S-box[1]
    vntA = Array( _
        &H4B7A70E9, &HB5B32944, &HDB75092E, &HC4192623, _
        &HAD6EA6B0, &H49A7DF7D, &H9CEE60B8, &H8FEDB266, _
        &HECAA8C71, &H699A17FF, &H5664526C, &HC2B19EE1, _
        &H193602A5, &H75094C29, &HA0591340, &HE4183A3E, _
        &H3F54989A, &H5B429D65, &H6B8FE4D6, &H99F73FD6, _
        &HA1D29C07, &HEFE830F5, &H4D2D38E6, &HF0255DC1, _
        &H4CDD2086, &H8470EB26, &H6382E9C6, &H21ECC5E, _
        &H9686B3F, &H3EBAEFC9, &H3C971814, &H6B6A70A1, _
        &H687F3584, &H52A0E286, &HB79C5305, &HAA500737, _
        &H3E07841C, &H7FDEAE5C, &H8E7D44EC, &H5716F2B8, _
        &HB03ADA37, &HF0500C0D, &HF01C1F04, &H200B3FF, _
        &HAE0CF51A, &H3CB574B2, &H25837A58, &HDC0921BD, _
        &HD19113F9, &H7CA92FF6, &H94324773, &H22F54701, _
        &H3AE5E581, &H37C2DADC, &HC8B57634, &H9AF3DDA7, _
        &HA9446146, &HFD0030E, &HECC8C73E, &HA4751E41, _
        &HE238CD99, &H3BEA0E2F, &H3280BBA1, &H183EB331)
        
    For i = 0 To 63
        blf_S(1, i) = vntA(i)
    Next
        
    vntA = Array( _
        &H4E548B38, &H4F6DB908, &H6F420D03, &HF60A04BF, _
        &H2CB81290, &H24977C79, &H5679B072, &HBCAF89AF, _
        &HDE9A771F, &HD9930810, &HB38BAE12, &HDCCF3F2E, _
        &H5512721F, &H2E6B7124, &H501ADDE6, &H9F84CD87, _
        &H7A584718, &H7408DA17, &HBC9F9ABC, &HE94B7D8C, _
        &HEC7AEC3A, &HDB851DFA, &H63094366, &HC464C3D2, _
        &HEF1C1847, &H3215D908, &HDD433B37, &H24C2BA16, _
        &H12A14D43, &H2A65C451, &H50940002, &H133AE4DD, _
        &H71DFF89E, &H10314E55, &H81AC77D6, &H5F11199B, _
        &H43556F1, &HD7A3C76B, &H3C11183B, &H5924A509, _
        &HF28FE6ED, &H97F1FBFA, &H9EBABF2C, &H1E153C6E, _
        &H86E34570, &HEAE96FB1, &H860E5E0A, &H5A3E2AB3, _
        &H771FE71C, &H4E3D06FA, &H2965DCB9, &H99E71D0F, _
        &H803E89D6, &H5266C825, &H2E4CC978, &H9C10B36A, _
        &HC6150EBA, &H94E2EA78, &HA5FC3C53, &H1E0A2DF4, _
        &HF2F74EA7, &H361D2B3D, &H1939260F, &H19C27960)
        
    For i = 0 To 63     '64 To 127
        blf_S(1, i + 64) = vntA(i)
    Next
        
    vntA = Array( _
        &H5223A708, &HF71312B6, &HEBADFE6E, &HEAC31F66, _
        &HE3BC4595, &HA67BC883, &HB17F37D1, &H18CFF28, _
        &HC332DDEF, &HBE6C5AA5, &H65582185, &H68AB9802, _
        &HEECEA50F, &HDB2F953B, &H2AEF7DAD, &H5B6E2F84, _
        &H1521B628, &H29076170, &HECDD4775, &H619F1510, _
        &H13CCA830, &HEB61BD96, &H334FE1E, &HAA0363CF, _
        &HB5735C90, &H4C70A239, &HD59E9E0B, &HCBAADE14, _
        &HEECC86BC, &H60622CA7, &H9CAB5CAB, &HB2F3846E, _
        &H648B1EAF, &H19BDF0CA, &HA02369B9, &H655ABB50, _
        &H40685A32, &H3C2AB4B3, &H319EE9D5, &HC021B8F7, _
        &H9B540B19, &H875FA099, &H95F7997E, &H623D7DA8, _
        &HF837889A, &H97E32D77, &H11ED935F, &H16681281, _
        &HE358829, &HC7E61FD6, &H96DEDFA1, &H7858BA99, _
        &H57F584A5, &H1B227263, &H9B83C3FF, &H1AC24696, _
        &HCDB30AEB, &H532E3054, &H8FD948E4, &H6DBC3128, _
        &H58EBF2EF, &H34C6FFEA, &HFE28ED61, &HEE7C3C73)
        
    For i = 0 To 63     ' 128 To 191
        blf_S(1, i + 128) = vntA(i)
    Next
        
    vntA = Array( _
        &H5D4A14D9, &HE864B7E3, &H42105D14, &H203E13E0, _
        &H45EEE2B6, &HA3AAABEA, &HDB6C4F15, &HFACB4FD0, _
        &HC742F442, &HEF6ABBB5, &H654F3B1D, &H41CD2105, _
        &HD81E799E, &H86854DC7, &HE44B476A, &H3D816250, _
        &HCF62A1F2, &H5B8D2646, &HFC8883A0, &HC1C7B6A3, _
        &H7F1524C3, &H69CB7492, &H47848A0B, &H5692B285, _
        &H95BBF00, &HAD19489D, &H1462B174, &H23820E00, _
        &H58428D2A, &HC55F5EA, &H1DADF43E, &H233F7061, _
        &H3372F092, &H8D937E41, &HD65FECF1, &H6C223BDB, _
        &H7CDE3759, &HCBEE7460, &H4085F2A7, &HCE77326E, _
        &HA6078084, &H19F8509E, &HE8EFD855, &H61D99735, _
        &HA969A7AA, &HC50C06C2, &H5A04ABFC, &H800BCADC, _
        &H9E447A2E, &HC3453484, &HFDD56705, &HE1E9EC9, _
        &HDB73DBD3, &H105588CD, &H675FDA79, &HE3674340, _
        &HC5C43465, &H713E38D8, &H3D28F89E, &HF16DFF20, _
        &H153E21E7, &H8FB03D4A, &HE6E39F2B, &HDB83ADF7)
        
    For i = 0 To 63     ' 192 To 255
        blf_S(1, i + 192) = vntA(i)
    Next
    
    ' S-box[2]
    vntA = Array( _
        &HE93D5A68, &H948140F7, &HF64C261C, &H94692934, _
        &H411520F7, &H7602D4F7, &HBCF46B2E, &HD4A20068, _
        &HD4082471, &H3320F46A, &H43B7D4B7, &H500061AF, _
        &H1E39F62E, &H97244546, &H14214F74, &HBF8B8840, _
        &H4D95FC1D, &H96B591AF, &H70F4DDD3, &H66A02F45, _
        &HBFBC09EC, &H3BD9785, &H7FAC6DD0, &H31CB8504, _
        &H96EB27B3, &H55FD3941, &HDA2547E6, &HABCA0A9A, _
        &H28507825, &H530429F4, &HA2C86DA, &HE9B66DFB, _
        &H68DC1462, &HD7486900, &H680EC0A4, &H27A18DEE, _
        &H4F3FFEA2, &HE887AD8C, &HB58CE006, &H7AF4D6B6, _
        &HAACE1E7C, &HD3375FEC, &HCE78A399, &H406B2A42, _
        &H20FE9E35, &HD9F385B9, &HEE39D7AB, &H3B124E8B, _
        &H1DC9FAF7, &H4B6D1856, &H26A36631, &HEAE397B2, _
        &H3A6EFA74, &HDD5B4332, &H6841E7F7, &HCA7820FB, _
        &HFB0AF54E, &HD8FEB397, &H454056AC, &HBA489527, _
        &H55533A3A, &H20838D87, &HFE6BA9B7, &HD096954B)
        
    For i = 0 To 63
        blf_S(2, i) = vntA(i)
    Next
        
    vntA = Array( _
        &H55A867BC, &HA1159A58, &HCCA92963, &H99E1DB33, _
        &HA62A4A56, &H3F3125F9, &H5EF47E1C, &H9029317C, _
        &HFDF8E802, &H4272F70, &H80BB155C, &H5282CE3, _
        &H95C11548, &HE4C66D22, &H48C1133F, &HC70F86DC, _
        &H7F9C9EE, &H41041F0F, &H404779A4, &H5D886E17, _
        &H325F51EB, &HD59BC0D1, &HF2BCC18F, &H41113564, _
        &H257B7834, &H602A9C60, &HDFF8E8A3, &H1F636C1B, _
        &HE12B4C2, &H2E1329E, &HAF664FD1, &HCAD18115, _
        &H6B2395E0, &H333E92E1, &H3B240B62, &HEEBEB922, _
        &H85B2A20E, &HE6BA0D99, &HDE720C8C, &H2DA2F728, _
        &HD0127845, &H95B794FD, &H647D0862, &HE7CCF5F0, _
        &H5449A36F, &H877D48FA, &HC39DFD27, &HF33E8D1E, _
        &HA476341, &H992EFF74, &H3A6F6EAB, &HF4F8FD37, _
        &HA812DC60, &HA1EBDDF8, &H991BE14C, &HDB6E6B0D, _
        &HC67B5510, &H6D672C37, &H2765D43B, &HDCD0E804, _
        &HF1290DC7, &HCC00FFA3, &HB5390F92, &H690FED0B)
        
    For i = 0 To 63     '64 To 127
        blf_S(2, i + 64) = vntA(i)
    Next
        
    vntA = Array( _
        &H667B9FFB, &HCEDB7D9C, &HA091CF0B, &HD9155EA3, _
        &HBB132F88, &H515BAD24, &H7B9479BF, &H763BD6EB, _
        &H37392EB3, &HCC115979, &H8026E297, &HF42E312D, _
        &H6842ADA7, &HC66A2B3B, &H12754CCC, &H782EF11C, _
        &H6A124237, &HB79251E7, &H6A1BBE6, &H4BFB6350, _
        &H1A6B1018, &H11CAEDFA, &H3D25BDD8, &HE2E1C3C9, _
        &H44421659, &HA121386, &HD90CEC6E, &HD5ABEA2A, _
        &H64AF674E, &HDA86A85F, &HBEBFE988, &H64E4C3FE, _
        &H9DBC8057, &HF0F7C086, &H60787BF8, &H6003604D, _
        &HD1FD8346, &HF6381FB0, &H7745AE04, &HD736FCCC, _
        &H83426B33, &HF01EAB71, &HB0804187, &H3C005E5F, _
        &H77A057BE, &HBDE8AE24, &H55464299, &HBF582E61, _
        &H4E58F48F, &HF2DDFDA2, &HF474EF38, &H8789BDC2, _
        &H5366F9C3, &HC8B38E74, &HB475F255, &H46FCD9B9, _
        &H7AEB2661, &H8B1DDF84, &H846A0E79, &H915F95E2, _
        &H466E598E, &H20B45770, &H8CD55591, &HC902DE4C)
        
    For i = 0 To 63     ' 128 To 191
        blf_S(2, i + 128) = vntA(i)
    Next
        
    vntA = Array( _
        &HB90BACE1, &HBB8205D0, &H11A86248, &H7574A99E, _
        &HB77F19B6, &HE0A9DC09, &H662D09A1, &HC4324633, _
        &HE85A1F02, &H9F0BE8C, &H4A99A025, &H1D6EFE10, _
        &H1AB93D1D, &HBA5A4DF, &HA186F20F, &H2868F169, _
        &HDCB7DA83, &H573906FE, &HA1E2CE9B, &H4FCD7F52, _
        &H50115E01, &HA70683FA, &HA002B5C4, &HDE6D027, _
        &H9AF88C27, &H773F8641, &HC3604C06, &H61A806B5, _
        &HF0177A28, &HC0F586E0, &H6058AA, &H30DC7D62, _
        &H11E69ED7, &H2338EA63, &H53C2DD94, &HC2C21634, _
        &HBBCBEE56, &H90BCB6DE, &HEBFC7DA1, &HCE591D76, _
        &H6F05E409, &H4B7C0188, &H39720A3D, &H7C927C24, _
        &H86E3725F, &H724D9DB9, &H1AC15BB4, &HD39EB8FC, _
        &HED545578, &H8FCA5B5, &HD83D7CD3, &H4DAD0FC4, _
        &H1E50EF5E, &HB161E6F8, &HA28514D9, &H6C51133C, _
        &H6FD5C7E7, &H56E14EC4, &H362ABFCE, &HDDC6C837, _
        &HD79A3234, &H92638212, &H670EFA8E, &H406000E0)
        
    For i = 0 To 63     ' 192 To 255
        blf_S(2, i + 192) = vntA(i)
    Next
    
    ' S-box[3]
    vntA = Array( _
        &H3A39CE37, &HD3FAF5CF, &HABC27737, &H5AC52D1B, _
        &H5CB0679E, &H4FA33742, &HD3822740, &H99BC9BBE, _
        &HD5118E9D, &HBF0F7315, &HD62D1C7E, &HC700C47B, _
        &HB78C1B6B, &H21A19045, &HB26EB1BE, &H6A366EB4, _
        &H5748AB2F, &HBC946E79, &HC6A376D2, &H6549C2C8, _
        &H530FF8EE, &H468DDE7D, &HD5730A1D, &H4CD04DC6, _
        &H2939BBDB, &HA9BA4650, &HAC9526E8, &HBE5EE304, _
        &HA1FAD5F0, &H6A2D519A, &H63EF8CE2, &H9A86EE22, _
        &HC089C2B8, &H43242EF6, &HA51E03AA, &H9CF2D0A4, _
        &H83C061BA, &H9BE96A4D, &H8FE51550, &HBA645BD6, _
        &H2826A2F9, &HA73A3AE1, &H4BA99586, &HEF5562E9, _
        &HC72FEFD3, &HF752F7DA, &H3F046F69, &H77FA0A59, _
        &H80E4A915, &H87B08601, &H9B09E6AD, &H3B3EE593, _
        &HE990FD5A, &H9E34D797, &H2CF0B7D9, &H22B8B51, _
        &H96D5AC3A, &H17DA67D, &HD1CF3ED6, &H7C7D2D28, _
        &H1F9F25CF, &HADF2B89B, &H5AD6B472, &H5A88F54C)
        
    For i = 0 To 63
        blf_S(3, i) = vntA(i)
    Next
        
    vntA = Array( _
        &HE029AC71, &HE019A5E6, &H47B0ACFD, &HED93FA9B, _
        &HE8D3C48D, &H283B57CC, &HF8D56629, &H79132E28, _
        &H785F0191, &HED756055, &HF7960E44, &HE3D35E8C, _
        &H15056DD4, &H88F46DBA, &H3A16125, &H564F0BD, _
        &HC3EB9E15, &H3C9057A2, &H97271AEC, &HA93A072A, _
        &H1B3F6D9B, &H1E6321F5, &HF59C66FB, &H26DCF319, _
        &H7533D928, &HB155FDF5, &H3563482, &H8ABA3CBB, _
        &H28517711, &HC20AD9F8, &HABCC5167, &HCCAD925F, _
        &H4DE81751, &H3830DC8E, &H379D5862, &H9320F991, _
        &HEA7A90C2, &HFB3E7BCE, &H5121CE64, &H774FBE32, _
        &HA8B6E37E, &HC3293D46, &H48DE5369, &H6413E680, _
        &HA2AE0810, &HDD6DB224, &H69852DFD, &H9072166, _
        &HB39A460A, &H6445C0DD, &H586CDECF, &H1C20C8AE, _
        &H5BBEF7DD, &H1B588D40, &HCCD2017F, &H6BB4E3BB, _
        &HDDA26A7E, &H3A59FF45, &H3E350A44, &HBCB4CDD5, _
        &H72EACEA8, &HFA6484BB, &H8D6612AE, &HBF3C6F47)
        
    For i = 0 To 63     '64 To 127
        blf_S(3, i + 64) = vntA(i)
    Next
        
    vntA = Array( _
        &HD29BE463, &H542F5D9E, &HAEC2771B, &HF64E6370, _
        &H740E0D8D, &HE75B1357, &HF8721671, &HAF537D5D, _
        &H4040CB08, &H4EB4E2CC, &H34D2466A, &H115AF84, _
        &HE1B00428, &H95983A1D, &H6B89FB4, &HCE6EA048, _
        &H6F3F3B82, &H3520AB82, &H11A1D4B, &H277227F8, _
        &H611560B1, &HE7933FDC, &HBB3A792B, &H344525BD, _
        &HA08839E1, &H51CE794B, &H2F32C9B7, &HA01FBAC9, _
        &HE01CC87E, &HBCC7D1F6, &HCF0111C3, &HA1E8AAC7, _
        &H1A908749, &HD44FBD9A, &HD0DADECB, &HD50ADA38, _
        &H339C32A, &HC6913667, &H8DF9317C, &HE0B12B4F, _
        &HF79E59B7, &H43F5BB3A, &HF2D519FF, &H27D9459C, _
        &HBF97222C, &H15E6FC2A, &HF91FC71, &H9B941525, _
        &HFAE59361, &HCEB69CEB, &HC2A86459, &H12BAA8D1, _
        &HB6C1075E, &HE3056A0C, &H10D25065, &HCB03A442, _
        &HE0EC6E0E, &H1698DB3B, &H4C98A0BE, &H3278E964, _
        &H9F1F9532, &HE0D392DF, &HD3A0342B, &H8971F21E)
        
    For i = 0 To 63     ' 128 To 191
        blf_S(3, i + 128) = vntA(i)
    Next
        
    vntA = Array( _
        &H1B0A7441, &H4BA3348C, &HC5BE7120, &HC37632D8, _
        &HDF359F8D, &H9B992F2E, &HE60B6F47, &HFE3F11D, _
        &HE54CDA54, &H1EDAD891, &HCE6279CF, &HCD3E7E6F, _
        &H1618B166, &HFD2C1D05, &H848FD2C5, &HF6FB2299, _
        &HF523F357, &HA6327623, &H93A83531, &H56CCCD02, _
        &HACF08162, &H5A75EBB5, &H6E163697, &H88D273CC, _
        &HDE966292, &H81B949D0, &H4C50901B, &H71C65614, _
        &HE6C6C7BD, &H327A140A, &H45E1D006, &HC3F27B9A, _
        &HC9AA53FD, &H62A80F00, &HBB25BFE2, &H35BDD2F6, _
        &H71126905, &HB2040222, &HB6CBCF7C, &HCD769C2B, _
        &H53113EC0, &H1640E3D3, &H38ABBD60, &H2547ADF0, _
        &HBA38209C, &HF746CE76, &H77AFA1C5, &H20756060, _
        &H85CBFE4E, &H8AE88DD8, &H7AAAF9B0, &H4CF9AA7E, _
        &H1948C25C, &H2FB8A8C, &H1C36AE4, &HD6EBE1F9, _
        &H90D4F869, &HA65CDEA0, &H3F09252D, &HC208E69F, _
        &HB74E6132, &HCE77E25B, &H578FDFE3, &H3AC372E6)

    For i = 0 To 63     ' 192 To 255
        blf_S(3, i + 192) = vntA(i)
    Next
    
    ' DEBUG: Check for zeroes
    Dim j As Integer
    For i = 0 To 3
        For j = 0 To 255
            If blf_S(i, j) = 0 Then
                MsgBox "Zero value in S" & i & "," & j & ")"
            End If
        Next
    Next
    
End Function


Attribute VB_Name = "basZBlfConvert"
'Attribute VB_Name = "basConvert"
Option Explicit
Option Base 0

'-----------------------------------------------------------------------------
' @(h) basConvert.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basConvert: Utilities to convert between byte arrays, hex strings,
' strings containing binary values, and 32-bit word arrays.

' NB: On 32-bit Unicode/CJK systems you may need to do a global
' replace of Asc() and Chr() with AscW() and ChrW() respectively.

' Version 2. November 2003: removed cv_BytesFromString which can be
' done with abBytes = StrConv(strInput, vbFromUnicode).
' - Added error handling to catch empty arrays.
' - Made HexFromByte public.
' Version 1. First published January 2002
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-2 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact.

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.
'****************** END OF COPYRIGHT NOTICE*************************

' The Public Functions in this module are:
' cv_BytesFromHex(sInputHex): Returns array of bytes
' cv_WordsFromHex(sHex): Returns array of words (Longs)
' cv_HexFromWords(aWords): Returns hex string
' cv_HexFromBytes(aBytes()): Returns hex string
' cv_HexFromString(str): Returns hex string
' cv_StringFromHex(strHex): Returns string of ascii characters
' cv_GetHexByte(sInputHex, iIndex): Extracts iIndex'th byte from hex string
' RandHexByte(): Returns random byte as a 2-digit hex string
' HexFromByte(x): Returns 2-digit hex string representing byte x

Public Function cv_BytesFromHex(ByVal sInputHex As String) As Variant
' Returns array of bytes from hex string in big-endian order
' E.g. sHex="FEDC80" will return array {&HFE, &HDC, &H80}
    Dim i As Long
    Dim M As Long
    Dim aBytes() As Byte
    If Len(sInputHex) Mod 2 <> 0 Then
        sInputHex = "0" & sInputHex
    End If
    
    M = Len(sInputHex) \ 2
    If M <= 0 Then
        ' Version 2: Returns empty array
        cv_BytesFromHex = aBytes
        Exit Function
    End If
    
    ReDim aBytes(M - 1)
    
    For i = 0 To M - 1
        aBytes(i) = Val("&H" & Mid$(sInputHex, i * 2 + 1, 2))
    Next
    
    cv_BytesFromHex = aBytes

End Function

Public Function cv_WordsFromHex(ByVal sHex As String) As Variant
' Converts string <sHex> with hex values into array of words (long ints)
' E.g. "fedcba9876543210" will be converted into {&HFEDCBA98, &H76543210}
    Const ncLEN As Integer = 8
    Dim i As Long
    Dim nWords As Long
    Dim aWords() As Long
    
    nWords = Len(sHex) \ ncLEN
    If nWords <= 0 Then
        ' Version 2: Returns empty array
        cv_WordsFromHex = aWords
        Exit Function
    End If
    
    ReDim aWords(nWords - 1)
    For i = 0 To nWords - 1
        aWords(i) = Val("&H" & Mid(sHex, i * ncLEN + 1, ncLEN))
    Next
    
    cv_WordsFromHex = aWords
    
End Function

Public Function cv_HexFromWords(aWords) As String
' Converts array of words (Longs) into a hex string
' E.g. {&HFEDCBA98, &H76543210} will be converted to "FEDCBA9876543210"
    Const ncLEN As Integer = 8
    Dim i As Long
    Dim nWords As Long
    Dim sHex As String * ncLEN
    Dim iIndex As Long
    
    'Set up error handler to catch empty array
    On Error GoTo ArrayIsEmpty
    If Not IsArray(aWords) Then
        Exit Function
    End If
    
    nWords = UBound(aWords) - LBound(aWords) + 1
    cv_HexFromWords = String(nWords * ncLEN, " ")
    iIndex = 0
    For i = 0 To nWords - 1
        sHex = Hex(aWords(i))
        sHex = String(ncLEN - Len(sHex), "0") & sHex
        Mid$(cv_HexFromWords, iIndex + 1, ncLEN) = sHex
        iIndex = iIndex + ncLEN
    Next
    
ArrayIsEmpty:

End Function

Public Function cv_HexFromBytes(aBytes() As Byte) As String
' Returns hex string from array of bytes
' E.g. aBytes() = {&HFE, &HDC, &H80} will return "FEDC80"
    Dim i As Long
    Dim iIndex As Long
    Dim nLen As Long
    
    'Set up error handler to catch empty array
    On Error GoTo ArrayIsEmpty

    nLen = UBound(aBytes) - LBound(aBytes) + 1

    cv_HexFromBytes = String(nLen * 2, " ")
    iIndex = 0
    For i = LBound(aBytes) To UBound(aBytes)
        Mid$(cv_HexFromBytes, iIndex + 1, 2) = HexFromByte(aBytes(i))
        iIndex = iIndex + 2
    Next
    
ArrayIsEmpty:
    
End Function

Public Function cv_HexFromString(str As String) As String
' Converts string <str> of ascii chars to string in hex format
' str may contain chars of any value between 0 and 255.
' E.g. "abc." will be converted to "6162632E"
    Dim byt As Byte
    Dim i As Long
    Dim n As Long
    Dim iIndex As Long
    Dim sHex As String
    
    n = Len(str)
    sHex = String(n * 2, " ")
    iIndex = 0
    For i = 1 To n
        byt = CByte(Asc(Mid$(str, i, 1)) And &HFF)
        Mid$(sHex, iIndex + 1, 2) = HexFromByte(byt)
        iIndex = iIndex + 2
    Next
    cv_HexFromString = sHex
    
End Function

Public Function cv_StringFromHex(strHex As String) As String
' Converts string <strHex> in hex format to string of ascii chars
' with value between 0 and 255.
' E.g. "6162632E" will be converted to "abc."
    Dim i As Integer
    Dim nBytes As Integer
    
    nBytes = Len(strHex) \ 2
    cv_StringFromHex = String(nBytes, " ")
    For i = 0 To nBytes - 1
        Mid$(cv_StringFromHex, i + 1, 1) = Chr$(Val("&H" & Mid$(strHex, i * 2 + 1, 2)))
    Next
    
End Function

Public Function cv_GetHexByte(ByVal sInputHex As String, iIndex As Long) As Byte
' Extracts iIndex'th byte from hex string (starting at 1)
' E.g. cv_GetHexByte("fecdba98", 3) will return &HBA
    Dim i As Long
    i = 2 * iIndex
    If i > Len(sInputHex) Or i <= 0 Then
        cv_GetHexByte = 0
    Else
        cv_GetHexByte = Val("&H" & Mid$(sInputHex, i - 1, 2))
    End If
    
End Function

Public Function RandHexByte() As String
'   Returns a random byte as a 2-digit hex string
    Static stbInit As Boolean
    If Not stbInit Then
        Randomize
        stbInit = True
    End If
    
    RandHexByte = HexFromByte(CByte((Rnd * 256) And &HFF))
End Function

Public Function HexFromByte(ByVal X) As String
' Returns a 2-digit hex string for byte x
    X = X And &HFF
    If X < 16 Then
        HexFromByte = "0" & Hex(X)
    Else
        HexFromByte = Hex(X)
    End If
End Function


Public Function testWordsHex()
    Dim aWords
    
    aWords = cv_WordsFromHex("FEDCBA9876543210")
    Debug.Print cv_HexFromWords(aWords)
    
End Function




Attribute VB_Name = "basZBlfRadix64"
'Attribute VB_Name = "basRadix64"
Option Explicit
Option Base 0

'-----------------------------------------------------------------------------
' @(h) basRadix64.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basRadix64: Radix 64 en/decoding functions
' Version 6. 20 November 2003. Added error handling for empty arrays.
' Version 5. 10 August 2003. Added EncodeBytes64() and DecodeBytes64()
'            functions that "do it properly" using a Byte array for
'            binary data and a String for textual data.
' Version 4. 17 August 2002 re-write even faster using Byte arrays
'            and StrConv function. Thanks to Chris Thompson for this
'            and for other much appreciated advice incorporated here.
' Version 3.1: 13 August 2002 mod to DecodeStr64 function
'              to cope with invalid characters.
'              Thanks to Seth Perelman for this.
' Version 3. Published January 2002 with even faster SHR/SHL functions
'            and using Mid$ function instead of appending to strings.
' Version 2. Published 12 May 2001
' Version 1. Published 28 December 2000
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-3 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact and acknowledge
' its authorship with the words:

'   "Contains cryptography software by David Ireland of
'   DI Management Services Pty Ltd <www.di-mgt.com.au>."

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.

' Credit where credit is due:
' Some parts of this VB code are based on original C code
' by Carl M. Ellison. See "cod64.c" published 1995.
'****************** END OF COPYRIGHT NOTICE*************************

Private aDecTab(255) As Integer
Private aEncTab(63) As Byte

Public Function EncodeBytes64(abBytes() As Byte) As String
' Return base64 encoding of Byte array.
' Does not insert CRLFs. Just returns one long string,
' so it's up to the user to add line breaks or other formatting.
    Dim sOutput As String
    Dim abOutput() As Byte
    Dim sLast As String
    Dim b(3) As Byte
    Dim j As Integer
    Dim i As Long, nLen As Long, nQuants As Long
    Dim iIndex As Long
    
    'Set up error handler to catch empty array
    On Error GoTo ArrayIsEmpty
    nLen = UBound(abBytes) - LBound(abBytes) + 1
    nQuants = nLen \ 3
    iIndex = 0
    Call MakeEncTab
    If (nQuants > 0) Then
        ReDim abOutput(nQuants * 4 - 1)
        ' Now start reading in 3 bytes at a time
        For i = 0 To nQuants - 1
            For j = 0 To 2
               b(j) = abBytes((i * 3) + j)
            Next
            Call EncodeQuantumB(b)
            abOutput(iIndex) = b(0)
            abOutput(iIndex + 1) = b(1)
            abOutput(iIndex + 2) = b(2)
            abOutput(iIndex + 3) = b(3)
            iIndex = iIndex + 4
        Next
        sOutput = StrConv(abOutput, vbUnicode)
    End If
    
    ' Cope with odd bytes
    ' (no real performance hit by using strings here)
    Select Case nLen Mod 3
    Case 0
        sLast = ""
    Case 1
        b(0) = abBytes(nLen - 1)
        b(1) = 0
        b(2) = 0
        Call EncodeQuantumB(b)
        sLast = StrConv(b(), vbUnicode)
        ' Replace last 2 with =
        sLast = Left(sLast, 2) & "=="
    Case 2
        b(0) = abBytes(nLen - 2)
        b(1) = abBytes(nLen - 1)
        b(2) = 0
        Call EncodeQuantumB(b)
        sLast = StrConv(b(), vbUnicode)
        ' Replace last with =
        sLast = Left(sLast, 3) & "="
    End Select
    
    EncodeBytes64 = sOutput & sLast
    
ArrayIsEmpty:

End Function

Public Function DecodeBytes64(sEncoded As String) As Variant
' Return Byte array of decoded binary values given base64 string
' Ignores any chars not in the 64-char subset
    Dim abDecoded() As Byte
    Dim d(3) As Byte
    Dim c As Integer        ' NB Integer to catch -1 value
    Dim di As Integer
    Dim i As Long
    Dim nLen As Long
    Dim iIndex As Long
    
    nLen = Len(sEncoded)
    If nLen < 4 Then
        ' Return an empty array
        DecodeBytes64 = abDecoded
        Exit Function
    End If
    ReDim abDecoded(((nLen \ 4) * 3) - 1)
    
    iIndex = 0
    di = 0
    Call MakeDecTab
    ' Read in each char in turn
    For i = 1 To Len(sEncoded)
        c = CByte(Asc(Mid(sEncoded, i, 1)))
        c = aDecTab(c)
        If c >= 0 Then
            d(di) = CByte(c)
            di = di + 1
            If di = 4 Then
                abDecoded(iIndex) = SHL2(d(0)) Or (SHR4(d(1)) And &H3)
                iIndex = iIndex + 1
                abDecoded(iIndex) = SHL4(d(1) And &HF) Or (SHR2(d(2)) And &HF)
                iIndex = iIndex + 1
                abDecoded(iIndex) = SHL6(d(2) And &H3) Or d(3)
                iIndex = iIndex + 1
                If d(3) = 64 Then
                    iIndex = iIndex - 1
                    abDecoded(iIndex) = 0
                End If
                If d(2) = 64 Then
                    iIndex = iIndex - 1
                    abDecoded(iIndex) = 0
                End If
                di = 0
            End If
        End If
    Next i
    ' Trim to correct length
    ReDim Preserve abDecoded(iIndex - 1)
    DecodeBytes64 = abDecoded
End Function

Public Function EncodeStr64(sInput As String) As String
' Return radix64 encoding of string of binary values
' Does not insert CRLFs. Just returns one long string,
' so it's up to the user to add line breaks or other formatting.
' Version 4: Use Byte array and StrConv - much faster
    Dim abOutput() As Byte  ' Version 4: now a Byte array
    Dim sLast As String
    Dim b(3) As Byte    ' Version 4: Now 3 not 2
    Dim j As Integer
    Dim i As Long, nLen As Long, nQuants As Long
    Dim iIndex As Long
    
    EncodeStr64 = ""
    nLen = Len(sInput)
    nQuants = nLen \ 3
    iIndex = 0
    Call MakeEncTab
    If (nQuants > 0) Then
        ReDim abOutput(nQuants * 4 - 1)
        ' Now start reading in 3 bytes at a time
        For i = 0 To nQuants - 1
            For j = 0 To 2
               b(j) = Asc(Mid(sInput, (i * 3) + j + 1, 1))
            Next
            Call EncodeQuantumB(b)
            abOutput(iIndex) = b(0)
            abOutput(iIndex + 1) = b(1)
            abOutput(iIndex + 2) = b(2)
            abOutput(iIndex + 3) = b(3)
            iIndex = iIndex + 4
        Next
        EncodeStr64 = StrConv(abOutput, vbUnicode)
    End If
    
    ' Cope with odd bytes
    ' (no real performance hit by using strings here)
    Select Case nLen Mod 3
    Case 0
        sLast = ""
    Case 1
        b(0) = Asc(Mid(sInput, nLen, 1))
        b(1) = 0
        b(2) = 0
        Call EncodeQuantumB(b)
        sLast = StrConv(b(), vbUnicode)
        ' Replace last 2 with =
        sLast = Left(sLast, 2) & "=="
    Case 2
        b(0) = Asc(Mid(sInput, nLen - 1, 1))
        b(1) = Asc(Mid(sInput, nLen, 1))
        b(2) = 0
        Call EncodeQuantumB(b)
        sLast = StrConv(b(), vbUnicode)
        ' Replace last with =
        sLast = Left(sLast, 3) & "="
    End Select
    
    EncodeStr64 = EncodeStr64 & sLast
End Function

Public Function DecodeStr64(sEncoded As String) As String
' Return string of decoded binary values given radix64 string
' Ignores any chars not in the 64-char subset
' Version 4: Use Byte array and StrConv - much faster
    Dim abDecoded() As Byte 'Version 4: Now a Byte array
    Dim d(3) As Byte
    Dim c As Integer        ' NB Integer to catch -1 value
    Dim di As Integer
    Dim i As Long
    Dim nLen As Long
    Dim iIndex As Long
    
    nLen = Len(sEncoded)
    If nLen < 4 Then
        Exit Function
    End If
    ReDim abDecoded(((nLen \ 4) * 3) - 1) 'Version 4: Now base zero
    
    iIndex = 0  ' Version 4: Changed to base 0
    di = 0
    Call MakeDecTab
    ' Read in each char in turn
    For i = 1 To Len(sEncoded)
        c = CByte(Asc(Mid(sEncoded, i, 1)))
        c = aDecTab(c)
        If c >= 0 Then
            d(di) = CByte(c)    ' Version 3.1: add CByte()
            di = di + 1
            If di = 4 Then
                abDecoded(iIndex) = SHL2(d(0)) Or (SHR4(d(1)) And &H3)
                iIndex = iIndex + 1
                abDecoded(iIndex) = SHL4(d(1) And &HF) Or (SHR2(d(2)) And &HF)
                iIndex = iIndex + 1
                abDecoded(iIndex) = SHL6(d(2) And &H3) Or d(3)
                iIndex = iIndex + 1
                If d(3) = 64 Then
                    iIndex = iIndex - 1
                    abDecoded(iIndex) = 0
                End If
                If d(2) = 64 Then
                    iIndex = iIndex - 1
                    abDecoded(iIndex) = 0
                End If
                di = 0
            End If
        End If
    Next i
    ' Convert to a string
    DecodeStr64 = StrConv(abDecoded(), vbUnicode)
    ' Remove any unwanted trailing chars
    DecodeStr64 = Left(DecodeStr64, iIndex)
End Function

Private Sub EncodeQuantumB(b() As Byte)
' Expects at least 4 bytes in b, i.e. Dim b(3) As Byte
    
    Dim b0 As Byte, b1 As Byte, b2 As Byte, b3 As Byte
     
    b0 = SHR2(b(0)) And &H3F
    b1 = SHL4(b(0) And &H3) Or (SHR4(b(1)) And &HF)
    b2 = SHL2(b(1) And &HF) Or (SHR6(b(2)) And &H3)
    b3 = b(2) And &H3F
    
    b(0) = aEncTab(b0)
    b(1) = aEncTab(b1)
    b(2) = aEncTab(b2)
    b(3) = aEncTab(b3)
    
End Sub


Private Function MakeDecTab()
' Set up Radix 64 decoding table
    Dim t As Integer
    Dim c As Integer

    For c = 0 To 255
        aDecTab(c) = -1
    Next
  
    t = 0
    For c = Asc("A") To Asc("Z")
        aDecTab(c) = t
        t = t + 1
    Next
  
    For c = Asc("a") To Asc("z")
        aDecTab(c) = t
        t = t + 1
    Next
    
    For c = Asc("0") To Asc("9")
        aDecTab(c) = t
        t = t + 1
    Next
    
    c = Asc("+")
    aDecTab(c) = t
    t = t + 1
    
    c = Asc("/")
    aDecTab(c) = t
    t = t + 1
    
    c = Asc("=")    ' flag for the byte-deleting char
    aDecTab(c) = t  ' should be 64

End Function

Private Function MakeEncTab()
' Set up Radix 64 encoding table in bytes
    Dim i As Integer
    Dim c As Integer

    i = 0
    For c = Asc("A") To Asc("Z")
        aEncTab(i) = c
        i = i + 1
    Next
  
    For c = Asc("a") To Asc("z")
        aEncTab(i) = c
        i = i + 1
    Next
    
    For c = Asc("0") To Asc("9")
        aEncTab(i) = c
        i = i + 1
    Next
    
    c = Asc("+")
    aEncTab(i) = c
    i = i + 1
    
    c = Asc("/")
    aEncTab(i) = c
    i = i + 1
    
End Function

' Version 3: ShiftLeft and ShiftRight functions improved.
Private Function SHL2(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to left by 2 bits
' i.e. VB equivalent of "bytValue << 2" in C
    SHL2 = (bytValue * &H4) And &HFF
End Function

Private Function SHL4(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to left by 4 bits
' i.e. VB equivalent of "bytValue << 4" in C
    SHL4 = (bytValue * &H10) And &HFF
End Function

Private Function SHL6(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to left by 6 bits
' i.e. VB equivalent of "bytValue << 6" in C
    SHL6 = (bytValue * &H40) And &HFF
End Function

Private Function SHR2(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to right by 2 bits
' i.e. VB equivalent of "bytValue >> 2" in C
    SHR2 = bytValue \ &H4
End Function

Private Function SHR4(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to right by 4 bits
' i.e. VB equivalent of "bytValue >> 4" in C
    SHR4 = bytValue \ &H10
End Function

Private Function SHR6(ByVal bytValue As Byte) As Byte
' Shift 8-bit value to right by 6 bits
' i.e. VB equivalent of "bytValue >> 6" in C
    SHR6 = bytValue \ &H40
End Function



Attribute VB_Name = "basZBlfUnsignedWord"
'Attribute VB_Name = "basUnsignedWord"
Option Explicit

'-----------------------------------------------------------------------------
' @(h) basZBlfUnsignedWord.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basUnsignedWord: Utilities for unsigned word arithmetic

' Version 6.1. June 2008. Fixed overflow problem in uw_WordAdd
' Version 6. November 2003. Unchanged from Version 5.
' Version 5. January 2002. Replaced uw_WordSplit and uw_WordJoin
' with more efficient uwSplit and uwJoin.
' Version 4. 12 May 2001. Mods to speed up.
' Thanks to Doug J Ward and Ernie Gibbs for advice and suggestions.
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-8 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact and acknowledge
' its authorship with the words:

'   "Contains cryptography software by David Ireland of
'   DI Management Services Pty Ltd <www.di-mgt.com.au>."

' If you use it as part of a web site, please include a link
' to our site in the form
' <A HREF="http://www.di-mgt.com.au/crypto.html">Cryptography
' Software Code</a>

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.
'****************** END OF COPYRIGHT NOTICE*************************

Private Const OFFSET_4 = 4294967296#
Private Const MAXINT_4 = 2147483647

Public Function uwJoin(a As Byte, b As Byte, c As Byte, d As Byte) As Long
' Added Version 5: replacement for uw_WordJoin
' Join 4 x 8-bit bytes into one 32-bit word a.b.c.d
    uwJoin = ((a And &H7F) * &H1000000) Or (b * &H10000) Or (CLng(c) * &H100) Or d
    If a And &H80 Then
        uwJoin = uwJoin Or &H80000000
    End If
End Function

Public Sub uwSplit(ByVal w As Long, a As Byte, b As Byte, c As Byte, d As Byte)
' Added Version 5: replacement for uw_WordSplit
' Split 32-bit word w into 4 x 8-bit bytes
    a = CByte(((w And &HFF000000) \ &H1000000) And &HFF)
    b = CByte(((w And &HFF0000) \ &H10000) And &HFF)
    c = CByte(((w And &HFF00) \ &H100) And &HFF)
    d = CByte((w And &HFF) And &HFF)
End Sub

' Function re-written 11 May 2001.
Public Function uw_ShiftLeftBy8(wordX As Long) As Long
    ' Shift 32-bit long value to left by 8 bits
    ' i.e. VB equivalent of "wordX << 8" in C
    ' Avoiding problem with sign bit
    uw_ShiftLeftBy8 = (wordX And &H7FFFFF) * &H100
    If (wordX And &H800000) <> 0 Then
        uw_ShiftLeftBy8 = uw_ShiftLeftBy8 Or &H80000000
    End If
End Function

Public Function uw_WordAdd(wordA As Long, wordB As Long) As Long
' Adds words A and B avoiding overflow
    Dim myUnsigned As Double
    
    myUnsigned = LongToUnsigned(wordA) + LongToUnsigned(wordB)
    ' Cope with overflow
    ' [2008-06-25] Changed "> OFFSET_4" to ">= OFFSET_4'
    ' -- thanks to Ernie Gibbs for this.
    If myUnsigned >= OFFSET_4 Then
        myUnsigned = myUnsigned - OFFSET_4
    End If
    uw_WordAdd = UnsignedToLong(myUnsigned)
    
End Function

Public Function uw_WordSub(wordA As Long, wordB As Long) As Long
' Subtract words A and B avoiding underflow
    Dim myUnsigned As Double
    
    myUnsigned = LongToUnsigned(wordA) - LongToUnsigned(wordB)
    ' Cope with underflow
    If myUnsigned < 0 Then
        myUnsigned = myUnsigned + OFFSET_4
    End If
    uw_WordSub = UnsignedToLong(myUnsigned)
End Function

'****************************************************
' These two functions from Microsoft Article Q189323
' "HOWTO: convert between Signed and Unsigned Numbers"

Function UnsignedToLong(value As Double) As Long
    If value < 0 Or value >= OFFSET_4 Then Error 6 ' Overflow
    If value <= MAXINT_4 Then
        UnsignedToLong = value
    Else
        UnsignedToLong = value - OFFSET_4
    End If
End Function

Public Function LongToUnsigned(value As Long) As Double
    If value < 0 Then
        LongToUnsigned = value + OFFSET_4
    Else
        LongToUnsigned = value
    End If
End Function

' End of Microsoft-article functions
'****************************************************


Attribute VB_Name = "basZBlowfish"
'Attribute VB_Name = "basBlowfish"
Option Explicit
Option Base 0

'-----------------------------------------------------------------------------
' @(h) basZBlowfish.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basBlowfish: Bruce Schneier's Blowfish algorithm in VB
' Core routines.

' Version 6. November 2003. Removed redundant functions blf_Enc()
' and blf_Dec().
' Version 5: January 2002. Speed improvements.
' Version 4: 12 May 2001. Fixed maxkeylen size from bits to bytes.
' First published October 2000.
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-2 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact and acknowledge
' its authorship with the words:

'   "Contains cryptography software by David Ireland of
'   DI Management Services Pty Ltd <www.di-mgt.com.au>."

' If you use it as part of a web site, please include a link
' to our site in the form
' <A HREF="http://www.di-mgt.com.au/crypto.html">Cryptography
' Software Code</a>

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.
'****************** END OF COPYRIGHT NOTICE*************************

' Public Functions in this module:
' blf_EncipherBlock: Encrypts two words
' blf_DecipherBlock: Decrypts two words
' blf_Initialise: Initialise P & S arrays using key
' blf_KeyInit: Initialise using byte-array key
' blf_EncryptBytes: Encrypts an block of 8 bytes
' blf_DecryptBytes: Decrypts an block of 8 bytes
'
' Superseded functions:
' blf_Key: Initialise using byte-array and its length
' blf_Enc: Encrypts an array of words
' blf_Dec: Decrypts an array of words

Private Const ncROUNDS  As Integer = 16
Private Const ncMAXKEYLEN As Integer = 56
' Version 4: ncMAXKEYLEN was previously incorrectly set as 448
' (bits vs bytes)
' Thanks to Robert Garofalo for pointing this out.

Private Function blf_F(X As Long) As Long
    Dim a As Byte, b As Byte, c As Byte, d As Byte
    Dim Y As Long
    
    Call uwSplit(X, a, b, c, d)
    
    Y = uw_WordAdd(blf_S(0, a), blf_S(1, b))
    Y = Y Xor blf_S(2, c)
    Y = uw_WordAdd(Y, blf_S(3, d))
    blf_F = Y
    
End Function

Public Function blf_EncipherBlock(xL As Long, xR As Long)
    Dim i As Integer
    Dim temp As Long
    
    For i = 0 To ncROUNDS - 1
        xL = xL Xor blf_P(i)
        xR = blf_F(xL) Xor xR
        temp = xL
        xL = xR
        xR = temp
    Next
    
    temp = xL
    xL = xR
    xR = temp
    
    xR = xR Xor blf_P(ncROUNDS)
    xL = xL Xor blf_P(ncROUNDS + 1)
        
End Function

Public Function blf_DecipherBlock(xL As Long, xR As Long)
    Dim i As Integer
    Dim temp As Long
    
    For i = ncROUNDS + 1 To 2 Step -1
        xL = xL Xor blf_P(i)
        xR = blf_F(xL) Xor xR
        temp = xL
        xL = xR
        xR = temp
    Next
    
    temp = xL
    xL = xR
    xR = temp
    
    xR = xR Xor blf_P(1)
    xL = xL Xor blf_P(0)
        
End Function

Public Function blf_Initialise(aKey() As Byte, nKeyBytes As Integer)
    Dim i As Integer, j As Integer, K As Integer
    Dim wData As Long, wDataL As Long, wDataR As Long
    
    Call blf_LoadArrays     ' Initialise P and S arrays

    j = 0
    For i = 0 To (ncROUNDS + 2 - 1)
        wData = &H0
        For K = 0 To 3
            wData = uw_ShiftLeftBy8(wData) Or aKey(j)
            j = j + 1
            If j >= nKeyBytes Then j = 0
        Next K
        blf_P(i) = blf_P(i) Xor wData
    Next i
    
    wDataL = &H0
    wDataR = &H0
    
    For i = 0 To (ncROUNDS + 2 - 1) Step 2
        Call blf_EncipherBlock(wDataL, wDataR)
        
        blf_P(i) = wDataL
        blf_P(i + 1) = wDataR
    Next i
    
    For i = 0 To 3
        For j = 0 To 255 Step 2
            Call blf_EncipherBlock(wDataL, wDataR)
    
            blf_S(i, j) = wDataL
            blf_S(i, j + 1) = wDataR
        Next j
    Next i

End Function

Public Function blf_Key(aKey() As Byte, nKeyLen As Integer) As Boolean
    blf_Key = False
    If nKeyLen < 0 Or nKeyLen > ncMAXKEYLEN Then
        Exit Function
    End If
    
    Call blf_Initialise(aKey, nKeyLen)
    
    blf_Key = True
End Function

Public Function blf_KeyInit(aKey() As Byte) As Boolean
' Added Version 5: Replacement for blf_Key to avoid specifying keylen
' Version 6: Added error checking for input
    Dim nKeyLen As Integer
    
    blf_KeyInit = False
    
    'Set up error handler to catch empty array
    On Error GoTo ArrayIsEmpty

    nKeyLen = UBound(aKey) - LBound(aKey) + 1
    If nKeyLen < 0 Or nKeyLen > ncMAXKEYLEN Then
        Exit Function
    End If
    
    Call blf_Initialise(aKey, nKeyLen)
    
    blf_KeyInit = True
    
ArrayIsEmpty:

End Function

Public Function blf_EncryptBytes(aBytes() As Byte)
' aBytes() must be 8 bytes long
' Revised Version 5: January 2002. To use faster uwJoin and uwSplit fns.
    Dim wordL As Long, wordR As Long
    
    ' Convert to 2 x words
    wordL = uwJoin(aBytes(0), aBytes(1), aBytes(2), aBytes(3))
    wordR = uwJoin(aBytes(4), aBytes(5), aBytes(6), aBytes(7))
    ' Encrypt it
    Call blf_EncipherBlock(wordL, wordR)
    ' Put back into bytes
    Call uwSplit(wordL, aBytes(0), aBytes(1), aBytes(2), aBytes(3))
    Call uwSplit(wordR, aBytes(4), aBytes(5), aBytes(6), aBytes(7))

End Function

Public Function blf_DecryptBytes(aBytes() As Byte)
' aBytes() must be 8 bytes long
' Revised Version 5:: January 2002. To use faster uwJoin and uwSplit fns.
    Dim wordL As Long, wordR As Long
    
    ' Convert to 2 x words
    wordL = uwJoin(aBytes(0), aBytes(1), aBytes(2), aBytes(3))
    wordR = uwJoin(aBytes(4), aBytes(5), aBytes(6), aBytes(7))
    ' Decrypt it
    Call blf_DecipherBlock(wordL, wordR)
    ' Put back into bytes
    Call uwSplit(wordL, aBytes(0), aBytes(1), aBytes(2), aBytes(3))
    Call uwSplit(wordR, aBytes(4), aBytes(5), aBytes(6), aBytes(7))

End Function


Attribute VB_Name = "basZBlowfishByteFns"
'Attribute VB_Name = "basBlowfishByteFns"
Option Explicit
Option Base 0

'-----------------------------------------------------------------------------
' @(h) basZBlowfishByteFns.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' Blowfish|fffd|p|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
' |fffd|Q|fffd|l|fffd|Fhttp://www.di-mgt.com.au/crypto.html#BlowfishVB
' |fffd|@|fffd|@|fffd|@http://www.di-mgt.com.au/src/BlowfishVB_6a.zip
'-----------------------------------------------------------------------------

' basBlowfishByteFns: Wrapper functions to call Blowfish algorithms

' Version 6. November 2003. Added this module with new Byte functions
' Blowfish in Visual Basic first published October 2000.
'************************* COPYRIGHT NOTICE*************************
' This code was originally written in Visual Basic by David Ireland
' and is copyright (c) 2000-3 D.I. Management Services Pty Limited,
' all rights reserved.

' You are free to use this code as part of your own applications
' provided you keep this copyright notice intact and acknowledge
' its authorship with the words:

'   "Contains cryptography software by David Ireland of
'   DI Management Services Pty Ltd <www.di-mgt.com.au>."

' If you use it as part of a web site, please include a link
' to our site in the form
' <A HREF="http://www.di-mgt.com.au/crypto.html">Cryptography
' Software Code</a>

' This code may only be used as part of an application. It may
' not be reproduced or distributed separately by any means without
' the express written permission of the author.

' David Ireland and DI Management Services Pty Limited make no
' representations concerning either the merchantability of this
' software or the suitability of this software for any particular
' purpose. It is provided "as is" without express or implied
' warranty of any kind.

' Please forward comments or bug reports to <code@di-mgt.com.au>.
' The latest version of this source code can be downloaded from
' www.di-mgt.com.au/crypto.html.
'****************** END OF COPYRIGHT NOTICE*************************

' The functions in this module are:
' blf_BytesRaw(abData, bEncrypt): En/Deciphers bytes abData without padding
' blf_BytesEnc(abData): Pads and enciphers byte array abData with current key
' blf_BytesDec(abData): Deciphers byte array abData with current key and unpads
' PadBytes(abData): Pads byte array to next multiple of 8 bytes
' UnpadBytes(abData): Removes padding after decryption
' blf_BytesEncRawCBC(abData, abInitV): Encrypts abData in CBC mode
' blf_BytesEncCBC(abData, abInitV): Pads and encrypts abData in CBC mode
' blf_BytesDecRawCBC(abData, abInitV): Decrypts abData in CBC mode
' blf_BytesDecCBC(abData, abInitV): Decrypts abData in CBC mode and unpads

' To set current key, call blf_KeyInit(aKey())
'   where aKey() is the key as an array of Bytes

' NB The functions in this module deal with data of any length, but
' if you only want to deal with an 8-byte block, use
' blf_EncryptBytes() and blf_DecryptBytes() in module basBlowfish

' Use faster API call to copy bytes
'32/64bit|fffd||242||fffd||fffd||a347||fffd||fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
    (ByVal lpDestination As Any, ByVal lpSource As Any, ByVal Length As Long)
#Else
Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
    (ByVal lpDestination As Any, ByVal lpSource As Any, ByVal Length As Long)
#End If

Public Function blf_BytesRaw(abData() As Byte, bEncrypt As Boolean) As Variant
' New function added version 6.
' Encrypts or decrypts byte array abData without padding using to current key.
' Similar to blf_BytesEnc and blf_BytesDec, but does not add padding
' and ignores trailing odd bytes.
' ECB mode - each block is en/decrypted independently
    Dim nLen As Long
    Dim nBlocks As Long
    Dim iBlock As Long
    Dim j As Long
    Dim abOutput() As Byte
    Dim abBlock(7) As Byte
    Dim iIndex As Long
    
    ' Calc number of 8-byte blocks (ignore odd trailing bytes)
    nLen = UBound(abData) - LBound(abData) + 1
    nBlocks = nLen \ 8
    
    ReDim abOutput(nBlocks * 8 - 1)
    
    ' Work through in blocks of 8 bytes
    iIndex = 0
    For iBlock = 1 To nBlocks
        ' Get the next block of 8 bytes
        CopyMemory VarPtr(abBlock(0)), VarPtr(abData(iIndex)), 8&

        ' En/Decrypt the block according to flag
        If bEncrypt Then
            Call blf_EncryptBytes(abBlock())
        Else
            Call blf_DecryptBytes(abBlock())
        End If
        
        ' Copy to output string
        CopyMemory VarPtr(abOutput(iIndex)), VarPtr(abBlock(0)), 8&
        
        iIndex = iIndex + 8
    Next
    
    blf_BytesRaw = abOutput
    
End Function

Public Function blf_BytesEnc(abData() As Byte) As Variant
' Encrypts byte array abData after adding PKCS#5/RFC2630/RFC3370 padding
' NB always adds padding - use blf_BytesRaw() if you don't want padding
' ECB mode
' Returns encrypted byte array as a variant.
' Requires key and boxes to be already set up.
' New in Version 6.

    Dim abOutput() As Byte
    
    abOutput = PadBytes(abData)
    abOutput = blf_BytesRaw(abOutput, True)
    
    blf_BytesEnc = abOutput
End Function

Public Function blf_BytesDec(abData() As Byte) As Variant
' Decrypts byte array abData assuming PKCS#5/RFC2630/RFC3370 padding and ECB mode
' NB always removes valid padding - use blf_BytesRaw() if you don't want padding
' Returns encrypted byte array as a variant.
' Requires key and boxes to be already set up.
' New in Version 6.

    Dim abOutput() As Byte
    
    abOutput = blf_BytesRaw(abData, False)
    abOutput = UnpadBytes(abOutput)
    
    blf_BytesDec = abOutput
End Function

Public Function PadBytes(abData() As Byte) As Variant
' Pad data bytes to next multiple of 8 bytes as per PKCS#5/RFC2630/RFC3370
    Dim nLen As Long
    Dim nPad As Integer
    Dim abPadded() As Byte
    Dim i As Long
    
    'Set up error handler for empty array
    On Error GoTo ArrayIsEmpty

    nLen = UBound(abData) - LBound(abData) + 1
    nPad = ((nLen \ 8) + 1) * 8 - nLen
    
    ReDim abPadded(nLen + nPad - 1)  ' Pad with # of pads (1-8)
    If nLen > 0 Then
        CopyMemory VarPtr(abPadded(0)), VarPtr(abData(0)), nLen
    End If
    For i = nLen To nLen + nPad - 1
        abPadded(i) = CByte(nPad)
    Next
    
ArrayIsEmpty:
    PadBytes = abPadded

End Function

Public Function UnpadBytes(abData() As Byte) As Variant
' Strip PKCS#5/RFC2630/RFC3370-style padding
    Dim nLen As Long
    Dim nPad As Long
    Dim abUnpadded() As Byte
    Dim i As Long
    
    'Set up error handler for empty array
    On Error GoTo ArrayIsEmpty
    
    nLen = UBound(abData) - LBound(abData) + 1
    If nLen = 0 Then GoTo ArrayIsEmpty
    ' Get # of padding bytes from last char
    nPad = abData(nLen - 1)
    If nPad > 8 Then nPad = 0   ' In case invalid
    If nLen - nPad > 0 Then
        ReDim abUnpadded(nLen - nPad - 1)
        CopyMemory VarPtr(abUnpadded(0)), VarPtr(abData(0)), nLen - nPad
    End If

ArrayIsEmpty:
    UnpadBytes = abUnpadded
    
End Function

Public Function TestPadBytes()
    Dim abData() As Byte
    
    abData = StrConv("abc", vbFromUnicode)
    abData = PadBytes(abData)
    Stop
    abData = UnpadBytes(abData)
    Stop
    
End Function

Private Sub bXorBytes(aByt1() As Byte, aByt2() As Byte, nBytes As Long)
' XOR's bytes in array aByt1 with array aByt2
' Returns results in aByt1
' i.e. aByt1() = aByt1() XOR aByt2()
    Dim i As Long
    For i = 0 To nBytes - 1
        aByt1(i) = aByt1(i) Xor aByt2(i)
    Next
End Sub

Public Function blf_BytesEncRawCBC(abData() As Byte, abInitV() As Byte) As Variant
' Encrypts byte array <abData> in CBC mode
' using byte array <abInitV> as initialisation vector.
' Returns ciphertext as variant array of bytes.
' Requires key and boxes to be already set up.
' New in Version 6.
    Dim nLen As Long
    Dim nBlocks As Long
    Dim iBlock As Long
    Dim abBlock(7) As Byte
    Dim iIndex As Long
    Dim abReg(7) As Byte    ' Feedback register
    Dim abOutput() As Byte
    
    ' Initialisation vector should be a 8-byte array
    ' so ReDim just to make sure
    ' This will add zero bytes if too short or chop off any extra
    ReDim Preserve abInitV(7)
    
    ' Calc number of 8-byte blocks
    nLen = UBound(abData) - LBound(abData) + 1
    nBlocks = nLen \ 8
    
    ' Dimension output
    ReDim abOutput(nBlocks * 8 - 1)
    
    ' C_0 = IV
    CopyMemory VarPtr(abReg(0)), VarPtr(abInitV(0)), 8&
    
    ' Work through string in blocks of 8 bytes
    iIndex = 0
    For iBlock = 1 To nBlocks
        ' Fetch next block from input
        CopyMemory VarPtr(abBlock(0)), VarPtr(abData(iIndex)), 8&
        
        ' XOR with feedback register = Pi XOR C_i-1
        Call bXorBytes(abBlock, abReg, 8)
        
        ' Encrypt the block Ci = Ek(Pi XOR C_i-1)
        Call blf_EncryptBytes(abBlock())
        
        ' Store in feedback register Reg = Ci
        CopyMemory VarPtr(abReg(0)), VarPtr(abBlock(0)), 8&
        
        ' Copy to output string
        CopyMemory VarPtr(abOutput(iIndex)), VarPtr(abBlock(0)), 8&

        iIndex = iIndex + 8
    Next
    
    blf_BytesEncRawCBC = abOutput
    
End Function

Public Function blf_BytesDecRawCBC(abData() As Byte, abInitV() As Byte) As Variant
' Decrypts byte array <abData> in CBC mode
' using byte array <abInitV> as initialisation vector.
' Returns plaintext as variant array of bytes.
' Requires key and boxes to be already set up.
' New in Version 6.
    Dim strIn As String
    Dim strOut As String
    Dim nLen As Long
    Dim nBlocks As Long
    Dim iBlock As Long
    Dim abBlock(7) As Byte
    Dim iIndex As Long
    Dim abReg(7) As Byte    ' Feedback register
    Dim abStore(7) As Byte
    Dim abOutput() As Byte
    
    ' Initialisation vector should be a 8-byte array
    ' so ReDim just to make sure
    ' This will add zero bytes if too short or chop off any extra
    ReDim Preserve abInitV(7)
    
    ' Calc number of 8-byte blocks
    nLen = UBound(abData) - LBound(abData) + 1
    nBlocks = nLen \ 8
    
    ' Dimension output
    ReDim abOutput(nBlocks * 8 - 1)
    
    ' C_0 = IV
    CopyMemory VarPtr(abReg(0)), VarPtr(abInitV(0)), 8&
    
    ' Work through string in blocks of 8 bytes
    iIndex = 0
    For iBlock = 1 To nBlocks
        ' Fetch next block from input
        CopyMemory VarPtr(abBlock(0)), VarPtr(abData(iIndex)), 8&
        
        ' Save C_i-1
        CopyMemory VarPtr(abStore(0)), VarPtr(abBlock(0)), 8&
        
        ' Decrypt the block Dk(Ci)
        Call blf_DecryptBytes(abBlock())
        
        ' XOR with feedback register = C_i-1 XOR Dk(Ci)
        Call bXorBytes(abBlock, abReg, 8)
        
        ' Store in feedback register Reg = C_i-1
        CopyMemory VarPtr(abReg(0)), VarPtr(abStore(0)), 8&
        
        ' Copy to output string
        CopyMemory VarPtr(abOutput(iIndex)), VarPtr(abBlock(0)), 8&

        iIndex = iIndex + 8
    Next
    
    blf_BytesDecRawCBC = abOutput
    
End Function

Public Function blf_BytesEncCBC(abData() As Byte, abInitV() As Byte) As Variant
' Encrypts byte array abData after adding PKCS#5/RFC2630/RFC3370 padding
' NB always adds padding - use blf_BytesEncRawCBC() if you don't want padding
' CBC mode
' Returns encrypted byte array as a variant.
' Requires key and boxes to be already set up.
' New in Version 6.

    Dim abOutput() As Byte
    
    abOutput = PadBytes(abData)
    abOutput = blf_BytesEncRawCBC(abOutput, abInitV)
    
    blf_BytesEncCBC = abOutput
End Function

Public Function blf_BytesDecCBC(abData() As Byte, abInitV() As Byte) As Variant
' Decrypts byte array abData assuming PKCS#5/RFC2630/RFC3370 padding and CBC mode
' NB always removes valid padding - use blf_BytesDecRawCBC() if you don't want padding
' Returns encrypted byte array as a variant.
' Requires key and boxes to be already set up.
' New in Version 6.

    Dim abOutput() As Byte
    
    abOutput = blf_BytesDecRawCBC(abData, abInitV)
    abOutput = UnpadBytes(abOutput)
    
    blf_BytesDecCBC = abOutput
End Function





Attribute VB_Name = "clsDLData"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basURL.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||112|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "clsDLData"
Private PVT_DATETIME As String
Private PVT_CONNINFO As tConnInfo
Private PVT_DATASETINFO As tDataSetInfo

Private abPlain() As Byte
Private abCipher() As Byte
Private abDecrypt() As Byte
' The key and IV stored as an array of bytes
Private aKey() As Byte
Private abInitV() As Byte

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|N|fffd||fffd||fffd|X|fffd||30f||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub Class_Initialize()
    '|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    gDataSet gtActConnInfo, gtActDataInfo
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|K|fffd|v|fffd||203|f|fffd|[|fffd|^|fffd||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptConnInfo - (i) : |fffd||691||fffd||fffd||fffd||fffd|
'             ptDataInfo - (i) : |fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub gDataSet(ByRef ptConnInfo As tConnInfo, ByRef ptDataInfo As tDataSetInfo)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gDataSet")
    '------------------------------------------
    PVT_CONNINFO = ptConnInfo
    PVT_DATASETINFO = ptDataInfo
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gDataSet")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : URL|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcAction   - (i) : |fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd|
'             pcDateTime - (i) : yyyyMMddhhmmss|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||313||fffd||fffd|t|fffd||fffd||fffd||fffd|
'             piIndex    - (i) : |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|iAction|fffd||fffd|"download"|fffd||30e||fffd||fffd||302||74e|w|fffd||fffd|j
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gcGetURL(ByVal pcAction As String, ByVal pcDateTime As String, Optional ByVal piIndex As Long = 1) As String
    Dim lcURL As String
    Dim lcPassword As String
    Dim liType As Integer
    Dim lhcArr() As String
    Dim lcTmp As String
    Dim lcDate As String
    Dim llcnt As Long
    '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim lcUpdateList As Integer
    '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jend
    Const cc_API_URL_BASE As String = "/excel?"
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gcGetURL")
    '------------------------------------------
    gcGetURL = ""
    '|fffd||fffd||fffd||295||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    lcURL = PVT_CONNINFO.cURL
    '|fffd||14c||fffd||303|X|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Right(lcURL, 1) = "/" Then lcURL = Left(lcURL, Len(lcURL) - 1)
    '"/excel?"|fffd||fffd||fffd||82||202||fffd||fffd||fffd|
    lcURL = lcURL & cc_API_URL_BASE
    lcURL = lcURL & "action=" & pcAction & "&"
    lcURL = lcURL & "id=" & PVT_CONNINFO.cID & "&"
    lcPassword = mcGetEncPassword(PVT_CONNINFO.cID, PVT_CONNINFO.cPassword, pcDateTime)
    lcURL = lcURL & "password=" & lcPassword & "&"
    lcURL = lcURL & "version=" & cc_SYSTEM_VERSION & "&"
    lcURL = lcURL & "date=" & pcDateTime & "&"
    
    Select Case pcAction    '|fffd||20d|~|fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||10f||a347||fffd||fffd||fffd||fffd|
        '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
        Case cc_API_ACTION_GETLISTS   '|fffd||fffd||fffd|X|fffd|g|fffd||30e||64fe|
            lcURL = lcURL & "sheetCode=" & PVT_DATASETINFO.cSheet & "&"
            lcURL = lcURL & "departCode=" & PVT_DATASETINFO.cBusho & "&"
            lcURL = lcURL & "employeeCode=" & PVT_DATASETINFO.cShain & "&"
        Case cc_API_ACTION_GETLISTCOLUMNS   '|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||682||30e||64fe|
            lcURL = lcURL & "sheetCode=" & PVT_DATASETINFO.cSheet & "&"
            lcURL = lcURL & "listCode=" & PVT_DATASETINFO.cList & "&"
        Case cc_API_ACTION_GETDATASOURCECOLUMNS   '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||682||30e||64fe|
            lcURL = lcURL & "datasourceCode=" & PVT_DATASETINFO.cDataName & "&"
        Case cc_API_ACTION_DOWNLOAD   'csv|fffd|f|fffd|[|fffd|^|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
'            lcURL = lcURL & "type=" & CStr(PVT_DATASETINFO.iType) & "&"
            liType = PVT_DATASETINFO.iType
            lcURL = lcURL & "type=" & CStr(liType) & "&"
            If liType = 1 Then
                lcURL = lcURL & "sheetCode=" & PVT_DATASETINFO.cSheet & "&"
                lcURL = lcURL & "dataCode=" & PVT_DATASETINFO.cList & "&"
                lhcArr = PVT_DATASETINFO.cItem
            Else
                lcURL = lcURL & "sheetCode=" & PVT_DATASETINFO.cDataName & "&"
                lcURL = lcURL & "dataCode=" & PVT_DATASETINFO.cDataName & "&"
                lhcArr = PVT_DATASETINFO.cItemD
            End If
            lcTmp = ""
            For llcnt = 0 To UBound(lhcArr)
                lcTmp = lcTmp & lhcArr(llcnt) & ","
            Next
            lcTmp = Left(lcTmp, Len(lcTmp) - 1)
            lcURL = lcURL & "columns=" & lcTmp & "&"
            lcURL = lcURL & "fromIndex=" & CStr(piIndex) & "&"
            '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
            lcURL = lcURL & "downloadProduct=" & IIf(PVT_DATASETINFO.blDLProduct, "1", "0") & "&"
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            lcUpdateList = 0
            If PVT_DATASETINFO.blUDList Or PVT_DATASETINFO.blUDData Then
                lcUpdateList = 1
            End If
            lcURL = lcURL & "updateList=" & lcUpdateList & "&"
'            lcURL = lcURL & "updateList=" & IIf(PVT_DATASETINFO.blUDList, "1", "0") & "&"
            '2015/04/13 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jend
            '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jend
            
    End Select
    
    lcURL = Left(lcURL, Len(lcURL) - 1) '|fffd||14c||fffd||fffd|&|fffd||fffd||fffd||fffd||fffd|
    
    gcGetURL = lcURL
'    Debug.Print lcURL
'    MsgBox lcURL
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gcGetURL")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|f|fffd|[|fffd|^|fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||18e||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poData   - (o) : JSON|fffd|f|fffd|[|fffd|^|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcAction   - (i) : |fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd|
'             pcAction   - (o) : |fffd||c42c||fffd||fffd||fffd||fffd|URL
'             pcDateTime - (i) : yyyyMMddhhmmss|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||313||fffd||fffd|t|fffd||fffd||fffd||fffd|
'             pcErrMsg   - (o) : |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|i|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||302||743|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|j
'             piIndex    - (i) : |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|iAction|fffd||fffd|"download"|fffd||30e||fffd||fffd||302||74e|w|fffd||fffd|j
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||d39e||fffd||fffd|True|fffd|A|fffd|G|fffd||fffd||fffd|[|fffd||202||fffd|False
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblGetData(ByRef poData As Object, ByVal pcAction As String, ByRef pcURL As String, ByVal pcDateTime As String, ByRef pcErrMsg As String, Optional ByVal piIndex As Long = 1) As Boolean
    Dim loJSON As Object
    Dim lcURL As String
    Dim lcFilePath As String
    Dim lcData As String
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblGetData")
    '------------------------------------------
    gblGetData = False
    
    'URL|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    lcURL = gcGetURL(pcAction, pcDateTime, piIndex)
    'Debug.Print lcURL
    pcURL = lcURL
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    lblRet = gblDL_DAT_FILE(lcURL, lcFilePath, pcErrMsg)
    If lblRet = False Then
        GoTo EXIT_LABEL
    End If
    '2014/05/07 QA|fffd|\No.147|fffd||389||fffd|
    '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||7c2||fffd|
'    'utf-8|fffd||fffd|shift-jis|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
'    lblRet = mblShiftJisFromUTF8(lcFilePath)
'    If lblRet = False Then
'        GoTo EXIT_LABEL
'    End If
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||115||502||fffd|
    lblRet = gblGET_DAT_FILE(lcFilePath, lcData, pcErrMsg)
    If lblRet = False Then
        GoTo EXIT_LABEL
    End If
    '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|Z|fffd|b|fffd|g
    
'#If Win64 Then
    Dim ltObj As New clsJsonlib     '64bit|fffd|p|fffd|p|fffd|[|fffd|T|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|32bit|fffd||fffd||fffd||1c2||7c2||90aa||fffd|j
    Set poData = ltObj.parse(lcData)     '64bit|fffd|p
'#Else
'    Dim ltJSON As New JsonParser    '32bit|fffd|p|fffd|p|fffd|[|fffd|T
'    Set poData = ltJSON.parse(lcData)    '32bit|fffd|p
'#End If

    gblGetData = True
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblGetData")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||cd||fffd||fffd||fffd||fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcUserID   - (i) : |fffd||fffd||fffd|[|fffd|UID
'             pcPassword - (i) : |fffd||fffd||fffd||343|p|fffd|X|fffd||fffd||fffd|[|fffd|h
'             pcDateTime - (i) : yyyyMMddhhmmss|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||313||fffd||fffd|t|fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd|u"excel" + |fffd||fffd||fffd|[|fffd|UID + yyyyMMddhhmmss|fffd|v|fffd||fffd|MD5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||cd||fffd||fffd||fffd||fffd||182||fffd||fffd|A
'             |fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|uBlowfish|fffd|v|fffd|`|fffd||fffd||fffd|iBlowfish /ECB/PKCS5Padding|fffd|j|fffd||148||cd||fffd||fffd||fffd||fffd||fffd||fffd|A
'             |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Base64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mcGetEncPassword(ByVal pcUserID As String, ByVal pcPassword As String, ByVal pcDateTime As String) As String
    Dim lcKey As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "getURL")
    '------------------------------------------
    lcKey = "excel" & pcUserID & pcDateTime '|fffd||cd||fffd||fffd||fffd||fffd||30c||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c42c||fffd|i"excel" + |fffd||fffd||fffd|[|fffd|UID + yyyyMMddhhmmss|fffd|j
    mcGetEncPassword = mcCreateEncPassword(pcPassword, lcKey)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "getURL")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||cd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||30e||64fe||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcPassword - (i) : |fffd||fffd||fffd||343|p|fffd|X|fffd||fffd||fffd|[|fffd|h
'             pcKey      - (i) : MD5|fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||308||cd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    : pcKey|fffd||fffd|MD5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||cd||fffd||fffd||fffd||fffd||182||fffd||fffd|A
'             |fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|uBlowfish|fffd|v|fffd|`|fffd||fffd||fffd|iBlowfish /ECB/PKCS5Padding|fffd|j|fffd||148||cd||fffd||fffd||fffd||fffd||fffd||fffd|A
'             |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Base64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function mcCreateEncPassword(ByVal pcPassword As String, ByVal pcKey As String) As String
    'http://www.di-mgt.com.au/crypto.html#BlowfishVB|fffd||fffd||fffd|Q|fffd|l|fffd||24d||c42c|
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "getURL")
    '------------------------------------------
    ' Encrypt the plain text as required using hex strings
    Dim nBlkLen As Long
    Dim lngRet As Long
    Dim sMode As String
    Dim lcMD5Str As String
    
    mcCreateEncPassword = ""
    ' Make sure key and IV are set
    Call SetKey(pcKey)
    
    ' Store plain text in byte array
    abPlain = StrConv(pcPassword, vbFromUnicode)
    
    ' Then pad input if required
    abPlain = PadBytes(abPlain)
    
    ' Show input data as hex
    Dim txtPlainAsHex As String
    txtPlainAsHex = cv_HexFromBytes(abPlain)
    
    ' Now encrypt as per mode
    abCipher = blf_BytesRaw(abPlain, bEncrypt:=True)
    
    ' Display results
    Dim txtCipher As String
    Dim txtCipherHex As String
    txtCipher = StrConv(abCipher, vbUnicode)
    txtCipherHex = cv_HexFromBytes(abCipher)
    Dim lcPassword As String
    lcPassword = EncodeBytes64(abCipher)
'    Debug.Print EncodeBytes64(abCipher)
    mcCreateEncPassword = lcPassword
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "getURL")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||cd||fffd||fffd||fffd||fffd||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcKey      - (i) : MD5|fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||308||cd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub SetKey(ByVal pcKey As String)
    Dim lcMD5 As String
    Dim txtKeyAsString As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "getURL")
    '------------------------------------------
    lcMD5 = MD5(pcKey)               '|fffd||cd||fffd||fffd||fffd||fffd||fffd|MD5|fffd||fffd|
'    Debug.Print "MD5" & lcMD5
    aKey = cv_BytesFromHex(lcMD5)    'MD5|fffd||fffd|Key
    txtKeyAsString = cv_HexFromBytes(aKey())
    'Initialise key
    Call blf_KeyInit(aKey)
Done:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "getURL")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|f|fffd|[|fffd|^|fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : vntURL      - (i) : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|URL
'             pcDatPath   - (i) : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||308||a39e||fffd||6d1||fffd||fffd||fffd|p|fffd|X
'             pcErrMsg   - (o) : |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|i|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||302||743|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|j
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||d39e||fffd||fffd|True|fffd|A|fffd|G|fffd||fffd||fffd|[|fffd||202||fffd|False
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblDL_DAT_FILE(ByVal vntURL As Variant, ByRef pcDatPath As String, ByRef pcErrMsg As String) As Boolean
    Dim strTEMPNAME As String
    Dim strFILENAME As String
    Dim strMSG As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblDL_DAT_FILE")
    '------------------------------------------
    pcDatPath = ""
    pcErrMsg = ""
    gblDL_DAT_FILE = False
    ' |fffd||1c2||74d||fffd||fffd||743|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|windows|fffd||fffd|TEMP|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    strTEMPNAME = modWinInetDownLoad.FP_GET_TEMP_PATH
    ' URL|fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd|[TEMPDIR]\RCVDATA.dat
    Dim lcTmpFile As String
    '2014/04/15 QA|fffd|\No.122|fffd||389||fffd|
    '|fffd||6d1||fffd||fffd||3c2||742||301|uBook1.xlsx|fffd|v|fffd||181|A|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|uBook1|fffd|v|fffd||fffd||fffd||fffd||282||fffd||fffd||90bd||fffd||7c1|A|fffd|u.xlsx|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||24a||702||782||60a4||fffd||242||fffd||fffd||fffd|
    strFILENAME = cc_TMP_FILE & "_" & goBook.Name & ".dat"
'    lcTmpFile = strTEMPNAME & cc_TMP_FILE
    lcTmpFile = strTEMPNAME & strFILENAME
    If Dir(lcTmpFile) <> "" Then Kill lcTmpFile
    '2014/04/15 QA|fffd|\No.122|fffd||389||fffd|
'    strMSG = modWinInetDownLoad.DownLoadFile(CStr(vntURL), strTEMPNAME, cc_TMP_FILE)
    strMSG = modWinInetDownLoad.DownLoadFile(CStr(vntURL), strTEMPNAME, strFILENAME)
    If strMSG <> "OK" Then
        pcErrMsg = "|fffd||691||fffd||fffd||fffd|URL|fffd||250||691||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|BURL|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        GoTo EXIT_LABEL
    Else
        '2014/04/15 QA|fffd|\No.122|fffd||389||fffd|
'        pcDatPath = strTEMPNAME & cc_TMP_FILE
        pcDatPath = lcTmpFile
    End If
    gblDL_DAT_FILE = True
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblDL_DAT_FILE")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||313||1c2||74d||fffd||fffd||74f||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcPath   - (i) : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||308||a39e||fffd||6d1||fffd||fffd||fffd|p|fffd|X
'             pcData   - (o) : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||42f95||fffd||fffd||fffd||fffd||fffd|
'             pcErrMsg - (o) : |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|i|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||302||743|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|j
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||d39e||fffd||fffd|True|fffd|A|fffd|G|fffd||fffd||fffd|[|fffd||202||fffd|False
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function gblGET_DAT_FILE(ByVal pcPath As String, ByRef pcData As String, ByRef pcErrMsg As String) As Boolean
    Dim intFF As Integer
    Dim GYO As Long
    Dim col As Long
    Dim IX As Long
    Dim strREC As String
    Dim vntREC As Variant
    Dim strMSG As String
    Dim lcData As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "gblGET_DAT_FILE")
    '------------------------------------------
    gblGET_DAT_FILE = False
    
    '2014/05/07 QA|fffd|\No.147|fffd||389||fffd|
    '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|UTF-8|fffd||14a|J|fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|iShift-JIS|fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||7c2||fffd|j
'    GYO = 0
'    intFF = FreeFile
'    Open pcPath For Input As #intFF
'    ' |fffd||14f|I|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||702||14c|J|fffd||fffd||502||fffd|
'    pcData = ""
'    Do Until EOF(intFF)
'        ' |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||1c2||74d||fffd||fffd||fffd|
'        Line Input #intFF, strREC
'        pcData = pcData & strREC
'    Loop
'    Close #intFF
    pcData = ReadUTF8Text(pcPath)
    Kill pcPath
    gblGET_DAT_FILE = True
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "gblGET_DAT_FILE")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|utf-8|fffd||fffd|shift-jis|fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcPath   - (i) : |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||308||a39e||fffd||6d1||fffd||fffd||fffd|p|fffd|X
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||d39e||fffd||fffd|True|fffd|A|fffd|G|fffd||fffd||fffd|[|fffd||202||fffd|False
'
' @(h)
'
'--------------------------------------------------------------------------------
'2014/04/15 QA|fffd|\No.114|fffd||389||fffd|
'Private Function mblShiftJisFromUTF8(ByVal pcPath As String) As Boolean
'    Dim iFile As String
'    Dim oFile As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mblShiftJisFromUTF8")
'    '------------------------------------------
'    iFile = pcPath 'UTF-8|fffd||313||1c2||74d||fffd||fffd||783|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'    oFile = pcPath 'Shift-JIS|fffd||14f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
'    '
'    mblShiftJisFromUTF8 = False
'    Dim csv As String 'CSV|fffd||fffd||1c2||74f||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||3d0||fffd|
'    'UTF-8|fffd||fffd||1c2||74d||fffd||fffd||fffd|
'    With CreateObject("ADODB.Stream")
'        .Charset = "UTF-8"
'        .Open
'        .LoadFromFile iFile
'        csv = .ReadText
'        .Close
'    End With
'    '|fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd|o|fffd||fffd|(|fffd||fffd||fffd||282||fffd|Shift-JIS|fffd||242||202||fffd|)
'    'Shift-jis|fffd||14a||fffd||fffd||fffd||fffd||fffd||fffd||702||783|t|fffd|@|fffd|C|fffd||fffd||fffd||251||382||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||197||fffd||fffd||fffd||fffd||fffd|
'    '|fffd||fffd||fffd||302||fffd||fffd||fffd|Resume Next|fffd||149||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||34b||fffd||242||202||fffd|j
'    On Error Resume Next
'    With CreateObject("Scripting.FileSystemObject").CreateTextFile(oFile, True)
'        .Write csv
'        .Close
'    End With
'    On Error GoTo 0
'    mblShiftJisFromUTF8 = True
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblShiftJisFromUTF8")
'    '------------------------------------------
'End Function

'2014/05/07 QA|fffd|\No.147|fffd||389||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd|E|fffd||60d||fffd||fffd||fffd||251||389||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||7c1|AShift-JIS|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd||fffd|AUTF-8|fffd||302||702||713||1c2||74d||fffd||fffd||781|B
'mblShiftJisFromUTF8|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|AReadUTF8Text|fffd||fffd||1c9||fffd||fffd|iUTF-8|fffd||182||fffd||fffd||103|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|j
'Private Function mblShiftJisFromUTF8(ByVal pcPath As String) As Boolean
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mblShiftJisFromUTF8")
'    '------------------------------------------
'    Const adTypeText = 2
'    Const adSaveCreateOverWrite = 2
'    Dim myST1 As Object, myST2 As Object
'    Set myST1 = CreateObject("ADODB.Stream")
'    Set myST2 = CreateObject("ADODB.Stream")
'    myST1.Type = adTypeText
'    myST1.Charset = "UTF-8"
'    myST1.Open
'    myST1.LoadFromFile pcPath
'    myST1.Position = 0
'    myST2.Type = adTypeText
'    myST2.Charset = "Shift_JIS"
'    myST2.Open
'    myST1.CopyTo myST2
'    myST2.SaveToFile pcPath & "2", adSaveCreateOverWrite
'    myST2.Close
'    myST1.Close
'    Set myST1 = Nothing
'    Set myST2 = Nothing
'    Kill pcPath
'    Name pcPath & "2" As pcPath
'    mblShiftJisFromUTF8 = True
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblShiftJisFromUTF8")
'    '------------------------------------------
'End Function

'http://d.hatena.ne.jp/so_blue/20090326/1238084885
Function ReadUTF8Text(argPath As String) As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "ReadUTF8Text")
    '------------------------------------------
    Dim buf  As String
    With CreateObject("ADODB.Stream")
        .Charset = "UTF-8"
        .Type = 2           'adTypeText
        .LineSeparator = -1 'adCrLf
        .Open
        .LoadFromFile argPath
        buf = .ReadText(-1) 'adReadAll
        .Close
    End With
    ReadUTF8Text = buf
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "ReadUTF8Text")
    '------------------------------------------
End Function


Attribute VB_Name = "clsExecTime"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'-----------------------------------------------------------------------------
' @(h) basURL.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||50e|Z|fffd|o|fffd|p|fffd|N|fffd||fffd||fffd|X
'
'-----------------------------------------------------------------------------
Private PVT_START As Double
Private PVT_END As Double

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|J|fffd|n|fffd||fffd||fffd||502||303|Z|fffd|b|fffd|g
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub setStartTime()
    PVT_START = CDbl(Timer)
End Sub
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|I|fffd||fffd||fffd||fffd||fffd||502||303|Z|fffd|b|fffd|g
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Sub setEndTime()
    PVT_END = CDbl(Timer)
End Sub
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|J|fffd|n|fffd||fffd||fffd||502||18f|I|fffd||fffd||fffd||fffd||fffd||502||30d||fffd||fffd||fffd||fffd||30e||64fe|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function getExecTime() As Double
    '|fffd||fffd||fffd|s|fffd||fffd||fffd||502||fffd||fffd|~|fffd||fffd||fffd|b|fffd|P|fffd||282||702||155||502||fffd|
    getExecTime = CDbl(Round(PVT_END - PVT_START, 3))
End Function
Attribute VB_Name = "clsFuncStack"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) clsFuncStack.cls                   Ver 1.00 ( 2013.6.1 M-SYSTEM )
'
' @(s)
'
' LINKS|fffd|A|fffd|h|fffd|I|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||590||fffd||fffd||fffd||fffd|X|fffd|^|fffd|b|fffd|N|fffd|N|fffd||fffd||fffd|X
'
'-----------------------------------------------------------------------------
Private Const STACK_SIZE As Integer = 10
Private PVTFuncName(STACK_SIZE) As String '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|+|fffd||590||fffd||fffd||fffd|
Private PVTStackPos As Integer            '|fffd||fffd||fffd||742||303|X|fffd|^|fffd|b|fffd|N|fffd||292|u
Private PVTCircleFlag As Boolean          '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O    =True:|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd|A=False:|fffd|P|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd|

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|J|fffd|n|fffd||590||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|b|fffd|N|fffd||582||313|o|fffd|^
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : pcModName - (i) |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd|@|fffd|@|fffd|@    : procName - (i) |fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd|@|fffd|@|fffd|@    : pblIsEvent - (i) |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||590||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O
'
'-----------------------------------------------------------------------------
Public Sub ExitFunc(ByVal pcModName As String, ByRef pcFuncName As String, Optional ByVal pblIsEvent As Boolean = False)
    Dim strSpace As String
    strSpace = IIf(pblIsEvent, "", "  ")
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P|fffd||92||1c9||fffd|
    PVTFuncName(PVTStackPos) = strSpace & Trim(pcModName) & "." & Trim(pcFuncName) & " Exit "
    Call AddFuncToStack
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|I|fffd||fffd||fffd||590||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|b|fffd|N|fffd||582||313|o|fffd|^
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : pcModName - (i) |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd|@|fffd|@|fffd|@    : procName - (i) |fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd|@|fffd|@|fffd|@    : pblIsEvent - (i) |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||590||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|O
'
'-----------------------------------------------------------------------------
Public Sub StartFunc(ByVal pcModName As String, ByRef pcFuncName As String, Optional ByVal pblIsEvent As Boolean = False)
    Dim strSpace As String
    strSpace = IIf(pblIsEvent, "", "  ")
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|P|fffd||92||1c9||fffd|
    PVTFuncName(PVTStackPos) = strSpace & Trim(pcModName) & "." & Trim(pcFuncName) & " Start "
    Call AddFuncToStack
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|g|fffd||fffd||fffd|[|fffd|X|fffd|o|fffd|b|fffd|N|fffd||30f|o|fffd||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : strMes - (i) |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||4cf||fffd||fffd||313||18e||fffd||fffd||303||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'             pblDispErrCont - (i) |fffd|G|fffd||fffd||fffd|[|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||303|G|fffd||fffd||fffd|[No|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Public Sub DispError(Optional strMes As String = "", Optional pblDispErrCont As Boolean = True)
    Dim message As String
    If strMes = "" Then
        message = SYSTEM_MSG_TITLE & "|fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf
    Else
        message = strMes & vbCrLf
    End If
    If pblDispErrCont Then
        message = message & "|fffd|G|fffd||fffd||fffd|[|fffd||50d||fffd||fffd|F" & Err.Number & vbCrLf & "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|e|fffd|F" & Err.Description & vbCr
    End If
    Call PopupDialog(message)
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|N|fffd||fffd||fffd|X|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Sub Class_Initialize()
    PVTStackPos = 0
    PVTCircleFlag = False
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|g|fffd||fffd||fffd|[|fffd|X|fffd|o|fffd|b|fffd|N|fffd||30f|o|fffd||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : errorMes  - (i) |fffd|G|fffd||fffd||fffd|[No.|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'
'-----------------------------------------------------------------------------
Private Sub PopupDialog(ByRef errorMes As String)
    Dim message As String
    Dim i As Integer
    Dim point As Integer
    
    message = "|fffd||590||fffd||fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F" & vbCrLf
    If PVTCircleFlag Then
        ' |fffd||fffd||fffd||257||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd||308||fffd||251|S|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||a0bd||fffd||a347|
        point = PVTStackPos - 1
        For i = STACK_SIZE To 0 Step -1
            If point < 0 Then
                point = STACK_SIZE
            End If
            message = message & PVTFuncName(point) & vbCrLf
            point = point - 1
        Next
    Else
        ' |fffd||702||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd||308||fffd||251|S|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347|
        For i = PVTStackPos - 1 To 0 Step -1
            message = message & PVTFuncName(i) & vbCrLf
        Next
    End If
    
    '|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|{|fffd|b|fffd|N|fffd|X|fffd|\|fffd||fffd|
    Call MsgBox(errorMes & vbCrLf & message, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)

    For i = 0 To STACK_SIZE
        PVTFuncName(i) = " "
    Next
    PVTStackPos = 0
    PVTCircleFlag = False

End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|X|fffd|^|fffd|b|fffd|N|fffd||292|u|fffd||30d|X|fffd|V
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
'-----------------------------------------------------------------------------
Private Sub AddFuncToStack()
    PVTStackPos = PVTStackPos + 1
    If PVTStackPos > STACK_SIZE Then
        PVTStackPos = 0
        PVTCircleFlag = True
    End If
End Sub


Attribute VB_Name = "clsJsonlib"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'http://mataro777.hateblo.jp/entry/2013/11/22/153705
'https://code.google.com/p/vba-json/issues/attachmentText?id=15&aid=150001000&name=jsonlib.cls&token=5OWlmJQUrDRpilvRsiL0Ggkq96Y%3A1351421534157
'VERSION 1.0 CLASS
'BEGIN
'MultiUse = -1 'True
'End
'Attribute VB_Name = "jsonlib"
'Attribute VB_GlobalNameSpace = False
'Attribute VB_Creatable = False
'Attribute VB_PredeclaredId = False
'Attribute VB_Exposed = False
'Option Explicit

Const INVALID_JSON As Long = 1
Const INVALID_OBJECT As Long = 2
Const INVALID_ARRAY As Long = 3
Const INVALID_BOOLEAN As Long = 4
Const INVALID_NULL As Long = 5
Const INVALID_KEY As Long = 6

'
' parse string and create JSON object (Dictionary or Collection in VB)
'
'Public Function parse(ByRef str As String) As Object
'
'Dim index As Long
'index = 1
'
'On Error Resume Next
'
'Call skipChar(str, index)
'Select Case Mid(str, index, 1)
'Case "{"
'Set parse = parseObject(str, index)
'Case "["
'Set parse = parseArray(str, index)
'End Select
'
'End Function

Public Function parse(ByRef str As String) As Object

Dim index As Long
index = 1

On Error Resume Next

Call skipChar(str, index)
Select Case Mid(str, index, 1)
Case "{"
Set parse = parseObject(str, index)
Case "["
Set parse = parseArray(str, index)
End Select

End Function


'|fffd||fffd||fffd||303|N|fffd||fffd||fffd|X|fffd||fffd||fffd|AJsonObject|fffd|N|fffd||fffd||fffd|X|fffd||143||fffd||fffd|b|fffd|v|fffd||fffd||fffd||10e|g|fffd|p|fffd||fffd||fffd||90bd||fffd||7c1|A|fffd||fffd||fffd||30a||590||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|B
'JsonObject|fffd||342||fffd||fffd||182||fffd||fffd||fffd|JsonParser|fffd||303||fffd||fffd|b|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|AJsonParser|fffd||fffd|Scriptcontrol|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||102||fffd||fffd||90bd||fffd||7c1|A
'Office 64bit|fffd||8b||fffd||fffd||fffd||fffd||14e|g|fffd||fffd||fffd||202||fffd||fffd|I|fffd|I|fffd|I|fffd|I
'JsonObject|fffd||fffd|JSONParser|fffd||348||209||fffd||fffd||fffd||fffd||739d||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'http://outofmem.tumblr.com/post/63455354957/vba-json

'
' parse collection of key/value (Dictionary in VB)
'
'koiwa |fffd|C|fffd||fffd|
'Private Function parseObject(ByRef str As String, ByRef index As Long) As Object
Private Function parseObject(ByRef str As String, ByRef index As Long) As JsonObject

Dim parseObject2 As Object
Dim jsonObj As New JsonObject

'koiwa |fffd|C|fffd||fffd|
'Set parseObject = CreateObject("Scripting.Dictionary")
Set parseObject2 = CreateObject("Scripting.Dictionary")

' "{"
Call skipChar(str, index)
If Mid(str, index, 1) <> "{" Then Err.Raise vbObjectError + INVALID_OBJECT, Description:="char " & index & " : " & Mid(str, index)
index = index + 1

Do

Call skipChar(str, index)
If "}" = Mid(str, index, 1) Then
index = index + 1
Exit Do
ElseIf "," = Mid(str, index, 1) Then
index = index + 1
Call skipChar(str, index)
End If

Dim key As String

' add key/value pair
'koiwa |fffd|C|fffd||fffd|
'parseObject.Add key:=parseKey(str, index), Item:=parseValue(str, index)
parseObject2.Add key:=parseKey(str, index), Item:=parseValue(str, index)

Loop

'koiwa |fffd||1c9||fffd|
Call jsonObj.Init(parseObject2)
Set parseObject = jsonObj

End Function

'
' parse list (Collection in VB)
'
Private Function parseArray(ByRef str As String, ByRef index As Long) As Collection

Set parseArray = New Collection

' "["
Call skipChar(str, index)
If Mid(str, index, 1) <> "[" Then Err.Raise vbObjectError + INVALID_ARRAY, Description:="char " & index & " : " + Mid(str, index)
index = index + 1

Do

Call skipChar(str, index)
If "]" = Mid(str, index, 1) Then
index = index + 1
Exit Do
ElseIf "," = Mid(str, index, 1) Then
index = index + 1
Call skipChar(str, index)
End If

' add value
parseArray.Add parseValue(str, index)

Loop

End Function

'
' parse string / number / object / array / true / false / null
'
Private Function parseValue(ByRef str As String, ByRef index As Long)

Call skipChar(str, index)

Select Case Mid(str, index, 1)
Case "{"
Set parseValue = parseObject(str, index)
Case "["
Set parseValue = parseArray(str, index)
Case """", "'"
parseValue = parseString(str, index)
Case "t", "f"
parseValue = parseBoolean(str, index)
Case "n"
parseValue = parseNull(str, index)
Case Else
parseValue = parseNumber(str, index)
End Select

End Function

'
' parse string
'
Private Function parseString(ByRef str As String, ByRef index As Long) As String

Dim quote As String
Dim char As String
Dim code As String

Call skipChar(str, index)
quote = Mid(str, index, 1)
index = index + 1
Do While index > 0 And index <= Len(str)
char = Mid(str, index, 1)
Select Case (char)
Case "\"
index = index + 1
char = Mid(str, index, 1)
Select Case (char)
'2014/04/24 QA|fffd|\No.138|fffd||389||fffd| |fffd|p|fffd|[|fffd|T|fffd||fffd||fffd|o|fffd|O|fffd||fffd||fffd||102||fffd|A|fffd|G|fffd|X|fffd|P|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||314||fffd||fffd||80aa||fffd||142||fffd||fffd||102||202||fffd|
'Case """", "\\", "/"
Case """", "\", "/"
parseString = parseString & char
index = index + 1
Case "b"
parseString = parseString & vbBack
index = index + 1
Case "f"
parseString = parseString & vbFormFeed
index = index + 1
Case "n"
parseString = parseString & vbNewLine
index = index + 1
Case "r"
parseString = parseString & vbCr
index = index + 1
Case "t"
parseString = parseString & vbTab
index = index + 1
Case "u"
index = index + 1
code = Mid(str, index, 4)
parseString = parseString & ChrW(Val("&h" + code))
index = index + 4
End Select
Case quote
index = index + 1
Exit Function
Case Else
parseString = parseString & char
index = index + 1
End Select
Loop

End Function

'
' parse number
'
Private Function parseNumber(ByRef str As String, ByRef index As Long)

Dim value As String
Dim char As String

Call skipChar(str, index)
Do While index > 0 And index <= Len(str)
char = Mid(str, index, 1)
If InStr("+-0123456789.eE", char) Then
value = value & char
index = index + 1
Else
'some parts commented out here. It incorrectly converted to Int, which caused errors for high numbers
'If InStr(value, ".") Or InStr(value, "e") Or InStr(value, "E") Then
parseNumber = CDbl(value)
'Else
' parseNumber = CInt(value)
'End If
Exit Function
End If
Loop


End Function

'
' parse true / false
'
Private Function parseBoolean(ByRef str As String, ByRef index As Long) As Boolean

Call skipChar(str, index)
If Mid(str, index, 4) = "true" Then
parseBoolean = True
index = index + 4
ElseIf Mid(str, index, 5) = "false" Then
parseBoolean = False
index = index + 5
Else
Err.Raise vbObjectError + INVALID_BOOLEAN, Description:="char " & index & " : " & Mid(str, index)
End If

End Function

'
' parse null
'
Private Function parseNull(ByRef str As String, ByRef index As Long)

Call skipChar(str, index)
If Mid(str, index, 4) = "null" Then
parseNull = Null
index = index + 4
Else
Err.Raise vbObjectError + INVALID_NULL, Description:="char " & index & " : " & Mid(str, index)
End If

End Function

Private Function parseKey(ByRef str As String, ByRef index As Long) As String

Dim dquote As Boolean
Dim squote As Boolean
Dim char As String

Call skipChar(str, index)
Do While index > 0 And index <= Len(str)
char = Mid(str, index, 1)
Select Case (char)
Case """"
dquote = Not dquote
index = index + 1
If Not dquote Then
Call skipChar(str, index)
If Mid(str, index, 1) <> ":" Then
Err.Raise vbObjectError + INVALID_KEY, Description:="char " & index & " : " & parseKey
End If
End If
Case "'"
squote = Not squote
index = index + 1
If Not squote Then
Call skipChar(str, index)
If Mid(str, index, 1) <> ":" Then
Err.Raise vbObjectError + INVALID_KEY, Description:="char " & index & " : " & parseKey
End If
End If
Case ":"
If Not dquote And Not squote Then
index = index + 1
Exit Do
End If
Case Else
If InStr(vbCrLf & vbCr & vbLf & vbTab & " ", char) Then
Else
parseKey = parseKey & char
End If
index = index + 1
End Select
Loop

End Function

'
' skip special character
'
Private Sub skipChar(ByRef str As String, ByRef index As Long)

While index > 0 And index <= Len(str) And InStr(vbCrLf & vbCr & vbLf & vbTab & " ", Mid(str, index, 1))
index = index + 1
Wend

End Sub

Public Function toString(ByRef obj As Variant) As String

Select Case VarType(obj)
Case vbNull
toString = "null"
Case vbDate
toString = """" & CStr(obj) & """"
Case vbString
toString = """" & encode(obj) & """"
Case vbObject
Dim bFI, i
bFI = True
If TypeName(obj) = "Dictionary" Then
toString = toString & "{"
Dim keys
keys = obj.keys
For i = 0 To obj.Count - 1
If bFI Then bFI = False Else toString = toString & ","
Dim key
key = keys(i)
toString = toString & """" & key & """:" & toString(obj(key))
Next i
toString = toString & "}"
ElseIf TypeName(obj) = "Collection" Then
toString = toString & "["
Dim value
For Each value In obj
If bFI Then bFI = False Else toString = toString & ","
toString = toString & toString(value)
Next value
toString = toString & "]"
End If
Case vbBoolean
If obj Then toString = "true" Else toString = "false"
Case vbVariant, vbArray, vbArray + vbVariant
Dim sEB
Dim NoDims As Long
toString = multiArray(obj)
Case Else
toString = Replace(obj, ",", ".")
End Select

End Function

Private Function encode(str) As String

Dim i, j, aL1, aL2, c, p

aL1 = Array(&H22, &H5C, &H2F, &H8, &HC, &HA, &HD, &H9)
aL2 = Array(&H22, &H5C, &H2F, &H62, &H66, &H6E, &H72, &H74)
For i = 1 To Len(str)
p = True
c = Mid(str, i, 1)
For j = 0 To 7
If c = Chr(aL1(j)) Then
encode = encode & "\" & Chr(aL2(j))
p = False
Exit For
End If
Next

If p Then
Dim a
a = AscW(c)
If a > 31 And a < 127 Then
encode = encode & c
ElseIf a > -1 Or a < 65535 Then
encode = encode & "\u" & String(4 - Len(Hex(a)), "0") & Hex(a)
End If
End If
Next
End Function

Private Function multiArray(aBD) ' Array BoDy, Integer BaseCount, String PoSition
Dim NoDimensions
Dim i1 As Long, i2 As Long
Dim DimList(1 To 10) As Long

NoDimensions = HowManyDimensions(aBD)
Select Case NoDimensions
Case 1
multiArray = multiArray & "["
For i1 = LBound(aBD, 1) To UBound(aBD, 1)
multiArray = multiArray & toString(aBD(i1))
If i1 < UBound(aBD, 1) Then multiArray = multiArray & ","
Next i1
multiArray = multiArray & "]"
Case 2
multiArray = multiArray & "["
For i1 = LBound(aBD, 1) To UBound(aBD, 1)
multiArray = multiArray & "["
For i2 = LBound(aBD, 2) To UBound(aBD, 2)
multiArray = multiArray & toString(aBD(i1, i2))
If i2 < UBound(aBD, 2) Then multiArray = multiArray & ","
Next i2
multiArray = multiArray & "]"
If i1 < UBound(aBD, 1) Then multiArray = multiArray & ","
Next i1
multiArray = multiArray & "]"
Case Else
'Not much point in doing anything here. The error would just leave it blank.
End Select
End Function

Private Function HowManyDimensions(AnArray) As Long
'find number of dimensions
On Error GoTo DimensionOverflow
Dim ErrorCheck As Long, DimensionNumber As Long
For DimensionNumber = 1 To 60001
ErrorCheck = LBound(AnArray, DimensionNumber)
Next DimensionNumber

DimensionOverflow:
HowManyDimensions = DimensionNumber - 1
End Function
Attribute VB_Name = "frmDataList"
Attribute VB_Base = "0{7423E767-A1BD-4687-A8C7-D2C7128BB8EF}{BA7B6688-50F2-4A45-A26A-BF3152EB875D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) frmDataList.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataList"

Private mhcList() As String
Private mlListCnt As Long
Private mhcShain() As String
Private mlShainCnt As Long
Private PVT_LOAD As Boolean  '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    PVT_LOAD = False  '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||243|f|fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g
    cboSheet.Clear
    cboBusho.Clear
    cboShain.Clear
    cboList.Clear
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||282||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    Call mGetListArray(gtJSONData(ci_Dest_DataListSel))
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Call GP_Start_SCUPD
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : JSON|fffd|f|fffd|[|fffd|^|fffd||30e|w|fffd||fffd|v|fffd|f|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||582||30a|i|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
'             phcArr - (o) : ptData|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plDataCnt   - (o) : |fffd|i|fffd|[|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
'             pcItemName  - (i) : ptData|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|v|fffd|f|fffd|ilist or depart or employee|fffd|j
'             pcItemArr() - (i) : phcArr|fffd||24e||64fe||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|v|fffd|f|fffd|ipcItem|fffd||30e|q|fffd|v|fffd|f|fffd|j
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mGetListArrayPara(ByRef ptData As Object, ByRef phcArr() As String, ByRef plDataCnt As Long, ByVal pcItemName As String, ByRef pcItemArr() As String)
    Dim loJSON As Collection
    Dim jsObj As JsonObject
    Dim llNum As Long
    Dim llcnt As Long
    Dim llcnt2 As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArrayPara")
    '------------------------------------------
    'JSON|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||317|v|fffd|f|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Set loJSON = ptData.Element(pcItemName & "Parent").Element(pcItemName)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    llNum = loJSON.Count
    If llNum > 0 Then
        ReDim phcArr(llNum - 1, UBound(pcItemArr, 1))
        '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
        For llcnt = 0 To llNum - 1
            Set jsObj = loJSON(llcnt + 1)
            For llcnt2 = 0 To UBound(pcItemArr, 1)
                phcArr(llcnt, llcnt2) = jsObj.value(pcItemArr(llcnt2))
            Next
        Next
    End If
    plDataCnt = llNum
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArrayPara")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : Private|fffd||314|z|fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||203|f|fffd|[|fffd|^|fffd||1228f|o|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : piMode - (i) : 0:|fffd|V|fffd|[|fffd|g|fffd|i|fffd||fffd||fffd|j|fffd|[|fffd|N|fffd||203|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||64fe||fffd|j
'                            1:|fffd||408||fffd||fffd|i|fffd|w|fffd||8554||fffd||fffd||fffd||30e||408||fffd||fffd||303|f|fffd|[|fffd|^|fffd||64fe||fffd|j
'                            2:|fffd||fffd||fffd|X|fffd|g|fffd|i|fffd|w|fffd||fffd|V|fffd|[|fffd|g|fffd|E|fffd||408||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||64fe||fffd|j
'             phcArr     - (o) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plRetCnt   - (o) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
'             piUKey     - (i) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||317|v|fffd|f|fffd||fffd|1
'             pcUKeyVal  - (i) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||317|v|fffd|f|fffd||fffd||fffd||312|l1
'             piUKey2    - (i) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||317|v|fffd|f|fffd||fffd|2
'             pcUKeyVal2 - (i) : |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||317|v|fffd|f|fffd||fffd||fffd||312|l2
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd|o|fffd|f|fffd|[|fffd|^2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mhcGetUniqueData(ByVal piMode As Integer, ByRef phcArr() As String, ByRef plRetCnt As Long, _
                                  ByVal piUKey As Integer, Optional ByVal pcUKeyVal As String = "", _
                                  Optional ByVal piUKey2 As Integer = 0, Optional ByVal pcUKeyVal2 As String = "") As String()
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llKeyNum As Long
    Dim lhcRet() As String
    Dim lhcKey() As String
    Dim lhlIndex() As Long
    Dim lcTmp As String
    Dim lblTmp As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mhcGetUniqueData")
    '------------------------------------------
    '|fffd|z|fffd||42a42||fffd|w|fffd||fffd||303|L|fffd|[|fffd||303|f|fffd|[|fffd|^|fffd||302||742||1228f|o|fffd||fffd||fffd||fffd|
    llKeyNum = 0
    For llcnt = 0 To UBound(phcArr, 1)
        lcTmp = phcArr(llcnt, piUKey)
        lblTmp = False
        Select Case piMode
        Case 0: '|fffd|L|fffd|[|fffd||242||82||fffd||fffd||103||fffd||fffd|j|fffd|[|fffd|N|fffd||203|f|fffd|[|fffd|^|fffd||1228f|o|fffd|i|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd||30d||c42c||fffd|j
            For llcnt2 = 0 To llKeyNum - 1
                If lcTmp = lhcKey(llcnt2) Then
                    lblTmp = True
                    Exit For
                End If
            Next
        Case 1: '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|A|fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd||408||fffd||fffd|R|fffd||fffd||fffd|{|fffd|p|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd|o
            lblTmp = Not (lcTmp = pcUKeyVal)
        Case 2: '|fffd|V|fffd|[|fffd|g|fffd|E|fffd||408||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|p|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd|o
            lblTmp = Not (lcTmp = pcUKeyVal And phcArr(llcnt, piUKey2) = pcUKeyVal2)
        End Select
        If lblTmp = False Then
            ReDim Preserve lhcKey(llKeyNum)
            lhcKey(llKeyNum) = lcTmp
            ReDim Preserve lhlIndex(llKeyNum)
            lhlIndex(llKeyNum) = llcnt
            llKeyNum = llKeyNum + 1
        End If
    Next
    If llKeyNum > 0 Then
        ReDim lhcRet(llKeyNum - 1, UBound(phcArr, 2))
        For llcnt = 0 To llKeyNum - 1
            For llcnt2 = 0 To UBound(phcArr, 2)
                lhcRet(llcnt, llcnt2) = phcArr(lhlIndex(llcnt), llcnt2)
            Next
        Next
    End If
    plRetCnt = llKeyNum
    mhcGetUniqueData = lhcRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mhcGetUniqueData")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|V|fffd|[|fffd|g|fffd|v|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboSheet_Change()
    Dim lhcArr() As String
    Dim llRetCnt As Long
    Dim lhcData() As String
    Dim llcnt As Long
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboSheet_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboSheet_Change", True)
    '------------------------------------------
    Call cboShain_Change
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboSheet_Change", True)
    '------------------------------------------
    Exit Sub
cboSheet_Change_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|v|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboBusho_Change()
    Dim lhcArr() As String
    Dim llRetCnt As Long
    Dim lhcData() As String
    Dim llcnt As Long
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboBusho_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboBusho_Change", True)
    '------------------------------------------
    '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd|w|fffd||8554||fffd||fffd||fffd||30e||408||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
    cboShain.Clear
    If cboBusho.ListIndex > -1 Then
        If mlShainCnt > 0 Then
            'Private|fffd||30e||408||fffd||fffd|z|fffd||42a42||fffd|A|fffd||fffd||fffd|Y|fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||302||1228f|o|fffd||fffd||fffd||408||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c|
            lhcArr = mhcGetUniqueData(1, mhcShain, llRetCnt, 2, cboBusho.List(cboBusho.ListIndex, 1))
            '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|p|fffd||248||682||fffd||fffd||582||fffd||fffd||103|Z|fffd|b|fffd|g
            If llRetCnt > 0 Then
                ReDim lhcData(llRetCnt - 1, 1)
                For llcnt = 0 To llRetCnt - 1
                    lhcData(llcnt, 0) = lhcArr(llcnt, 1)
                    lhcData(llcnt, 1) = lhcArr(llcnt, 0)
                Next
                cboShain.List = lhcData
                cboShain.ListIndex = 0
            End If
        End If
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboBusho_Change", True)
    '------------------------------------------
    Exit Sub
cboBusho_Change_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||408||fffd||fffd|v|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboShain_Change()
    Dim lhcArr() As String
    Dim llRetCnt As Long
    Dim lhcData() As String
    Dim llcnt As Long
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    Dim loData As Object
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim ltDataInfo As tDataSetInfo
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboShain_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboShain_Change", True)
    '------------------------------------------
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    '|fffd||a39e||fffd|I|fffd||241|AgtActDataInfo|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd|j
    ltDataInfo = gtActDataInfo
    '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd|w|fffd||8554||fffd||fffd||fffd||30e||408||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
    cboList.Clear
    
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'    If cboSheet.ListIndex > -1 And cboShain.ListIndex > -1 Then
    If cboSheet.ListIndex > -1 And cboShain.ListIndex > -1 And PVT_LOAD Then
        '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'        If mlListCnt > 0 Then
'            'Private|fffd||303||fffd||fffd|X|fffd|g|fffd|z|fffd||42a42||fffd|A|fffd||fffd||fffd|Y|fffd|V|fffd|[|fffd|g|fffd|E|fffd||408||fffd||fffd||302||fffd||fffd||302||1228f|o|fffd||fffd||fffd||fffd|
'            lhcArr = mhcGetUniqueData(2, mhcList, llRetCnt, 4, cboShain.List(cboShain.ListIndex, 1), 0, cboSheet.List(cboSheet.ListIndex, 1))
'            '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|p|fffd||248||682||fffd||fffd||582||fffd||fffd||103|Z|fffd|b|fffd|g
'            If llRetCnt > 0 Then
'                ReDim lhcData(llRetCnt - 1, 1)
'                For llCnt = 0 To llRetCnt - 1
'                    lhcData(llCnt, 0) = lhcArr(llCnt, 3)
'                    lhcData(llCnt, 1) = lhcArr(llCnt, 2)
'                Next
'                cboList.List = lhcData
'                cboList.ListIndex = 0
'            End If
'        End If
        '|fffd||a39e||fffd|I|fffd||fffd|gtActDataInfo|fffd||251|I|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|E|fffd||fffd||fffd||fffd||fffd|E|fffd||408||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd|A|fffd|Y|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        Me.Enabled = False
        With gtActDataInfo
            .cSheet = cboSheet.List(cboSheet.ListIndex, 1)
            .cBusho = cboBusho.List(cboBusho.ListIndex, 1)
            .cShain = cboShain.List(cboShain.ListIndex, 1)
        End With
        lblRet = gblDLData(cc_API_ACTION_GETLISTS, Format(Now, "yyyyMMddhhmmss"), loData, lcStatusCode, lcErrMsg)
        Me.Enabled = True
        Me.Enabled = True
        '2014/04/15 QA|fffd|\No.114|fffd||389||fffd|
        If lblRet Then
            lhcArr = Split("listName,listCode", ",")
            Call mGetListArrayPara(loData, lhcData, llRetCnt, "list", lhcArr)
            '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|p|fffd||248||682||fffd||fffd||582||fffd||fffd||103|Z|fffd|b|fffd|g
            cboList.Clear
            If llRetCnt > 0 Then
                cboList.List = lhcData
                cboList.ListIndex = 0
            End If
        Else
            '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'            Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
            Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            cboList.Clear
        End If
'        lhcArr = Split("listName,listCode", ",")
'        Call mGetListArrayPara(loData, lhcData, llRetCnt, "list", lhcArr)
'        '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|p|fffd||248||682||fffd||fffd||582||fffd||fffd||103|Z|fffd|b|fffd|g
'        cboList.Clear
'        If llRetCnt > 0 Then
'            cboList.List = lhcData
'            cboList.ListIndex = 0
'        End If
    End If
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    gtActDataInfo = ltDataInfo  '|fffd|f|fffd|[|fffd|^|fffd||fffd||7c2||fffd|
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboShain_Change", True)
    '------------------------------------------
    Exit Sub
cboShain_Change_OnErr:
    Me.Enabled = True: Me.Enabled = True   '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    gtActDataInfo = ltDataInfo  '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mGetListArray(ByRef ptData As Object)
    Dim llcnt As Long
    Dim llDataCnt As Long
    Dim lhcBusho() As String
    Dim lhcSheet() As String
    Dim lhcArr() As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
    'MEMO VBA|fffd||303|p|fffd|[|fffd|T|fffd||243|o|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|
    'JSON|fffd||153||fffd||fffd||fffd||fffd|K|fffd|w|fffd||254|z|fffd||42a95||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|A1|fffd||82||314|z|fffd||fffd||14e||fffd||835e||fffd||fffd||142||fffd||fffd||702||fffd|
    '|fffd||fffd||fffd||302||fffd||fffd||7c1|AAPI|fffd||141|u|fffd||fffd||fffd||fffd|Parent|fffd|v|fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||70a4||fffd||fffd||fffd||182||141|A|fffd||fffd||fffd||a0bc||fffd||fffd|1|fffd|K|fffd|w|fffd|[|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd|
    
    '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|Z|fffd|b|fffd|g
    '|fffd|V|fffd|[|fffd|g
'    lhcArr = Split("sheetName,sheetCode,listCode,listName,employeeCode", ",")
'    Call mGetListArrayPara(ptData, cboSheet, "list", lhcArr)
'    '|fffd||fffd||fffd||fffd|
'    lhcArr = Split("departName,departCode,belongCode,level", ",")
'    Call mGetListArrayPara(ptData, cboBusho, "depart", lhcArr)
'    '|fffd||408||fffd|
'    lhcArr = Split("employeeName,employeeCode,departCode", ",")
'    Call mGetListArrayPara(ptData, cboShain, "employee", lhcArr)
'    '|fffd||fffd||fffd|X|fffd|g
'    lhcArr = Split("listName,sheetCode,sheetName,listCode,employeeCode", ",")
'    Call mGetListArrayPara(ptData, cboList, "list", lhcArr)
    
    '|fffd||fffd||fffd|X|fffd|g|fffd||18e||408||fffd||fffd||343|f|fffd|[|fffd|^|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||43083|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||fffd|
    '|fffd||fffd||fffd|X|fffd|g
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    lhcArr = Split("sheetCode,sheetName,listCode,listName,employeeCode", ",")
'    Call mGetListArrayPara(ptData, mhcList, mlListCnt, "list", lhcArr)
    '|fffd||408||fffd|
    lhcArr = Split("employeeCode,employeeName,departCode", ",")
    Call mGetListArrayPara(ptData, mhcShain, mlShainCnt, "employee", lhcArr)
    
    '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||c42c|
    '2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|cboBusho.List|fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||90b1||fffd||182||14e||fffd||fffd||fffd||fffd||fffd||fffd||90aa|
    '|fffd|e|fffd|R|fffd||fffd||fffd|{|fffd|A|fffd||fffd||fffd||302||fffd|1|fffd||fffd||681|A|fffd|R|fffd|[|fffd|h|fffd||fffd|2|fffd||fffd||682||242||fffd||fffd||fffd|
    cboBusho.Clear
    lhcArr = Split("departName,departCode,belongCode,level", ",")
    Call mGetListArrayPara(ptData, lhcBusho, llDataCnt, "depart", lhcArr)
    If llDataCnt > 0 Then
        cboBusho.List = lhcBusho
        cboBusho.ListIndex = 0
    End If
    
    '|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||c42c|
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'    '|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|V|fffd|[|fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
'    lhcArr = mhcGetUniqueData(0, mhcList, llDataCnt, 0, "")
    lhcArr = Split("sheetName,sheetCode", ",")
    Call mGetListArrayPara(ptData, lhcSheet, llDataCnt, "sheet", lhcArr)
    '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|p|fffd||248||682||fffd||fffd||582||fffd||fffd||103|Z|fffd|b|fffd|g
    cboSheet.Clear
    If llDataCnt > 0 Then
        '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'        ReDim lhcSheet(llDataCnt - 1, 1)
'        For llCnt = 0 To llDataCnt - 1
'            lhcSheet(llCnt, 0) = lhcArr(llCnt, 1)
'            lhcSheet(llCnt, 1) = lhcArr(llCnt, 0)
'        Next
        cboSheet.List = lhcSheet
        cboSheet.ListIndex = 0
    End If
    
    '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd|i|fffd||fffd||fffd|Y|fffd||408||fffd||fffd||302||fffd||fffd||302||fffd|I|fffd||fffd||fffd|j
    Call mInitComboDisp(cboBusho, gtActUserInfo.cDepartCode, 1)
    '|fffd||408||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd|i|fffd||fffd||fffd|Y|fffd||408||fffd||fffd||302||fffd||fffd||302||fffd|I|fffd||fffd||fffd|j
    Call mInitComboDisp(cboShain, gtActUserInfo.cEmployeeCode, 1)
    '|fffd||211|O|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd||202||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
    Call mInitComboDisp(cboSheet, gtActDataInfo.cSheet, 1)
    Call mInitComboDisp(cboBusho, gtActDataInfo.cBusho, 1)
    Call mInitComboDisp(cboShain, gtActDataInfo.cShain, 1)
    '2014/04/24 QA|fffd|\No.139|fffd||389||fffd|
'    Call mInitComboDisp(cboList, gtActDataInfo.cList, 1)

    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    PVT_LOAD = True
    Call cboShain_Change

    '2014/04/24 QA|fffd|\No.139|fffd||389||fffd|
    '|fffd|O|fffd||fffd|I|fffd||fffd|l|fffd||14f49|f|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||fffd|cboShain_Change|fffd||30c||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j
    Call mInitComboDisp(cboList, gtActDataInfo.cList, 1)
    
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poCombo - (i) : |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'             pcCode  - (i) : |fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||303|R|fffd|[|fffd|h
'             piIndex - (i) : poCombo.List|fffd||301|A|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mInitComboDisp(ByRef poCombo As ComboBox, ByRef pcCode As String, ByRef piIndex As Integer)
    Dim llcnt As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mInitComboDisp")
    '------------------------------------------
    If Trim(pcCode) <> "" Then
        With poCombo
            For llcnt = 0 To .ListCount - 1
                If .List(llcnt, piIndex) = pcCode Then
                    .ListIndex = llcnt
                    Exit For
                End If
            Next
        End With
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mInitComboDisp")
    '------------------------------------------
End Sub


'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    '|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||256||7c2||fffd|i|fffd||fffd||fffd||691||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|j
    giDest = ci_Dest_DataTypeSelect
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||581|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    If Trim(cboSheet.value) = "" Or Trim(cboBusho.value) = "" Or Trim(cboShain.value) = "" Or Trim(cboList.value) = "" Then
        Call MsgBox("|fffd|V|fffd|[|fffd|g|fffd|A|fffd||fffd||fffd||fffd||fffd|A|fffd||408||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||302||fffd||fffd||fffd||fffd||a0a9||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Exit Sub
    End If
    
    '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
    Dim ltTmp As tDataSetInfo
    ltTmp = gtActDataInfo
    
    '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
    With gtActDataInfo
        .cSheet = cboSheet.List(cboSheet.ListIndex, 1)
        .cBusho = cboBusho.List(cboBusho.ListIndex, 1)
        .cShain = cboShain.List(cboShain.ListIndex, 1)
        .cList = cboList.List(cboList.ListIndex, 1)
        '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
        .cSheetN = cboSheet.List(cboSheet.ListIndex, 0)
        .cBushoN = cboBusho.List(cboBusho.ListIndex, 0)
        .cShainN = cboShain.List(cboShain.ListIndex, 0)
        .cListN = cboList.List(cboList.ListIndex, 0)
    End With
    Me.Enabled = False   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    lblRet = gblDLData(cc_API_ACTION_GETLISTCOLUMNS, Format(Now, "yyyyMMddhhmmss"), gtJSONData(ci_Dest_DataListSelItem), lcStatusCode, lcErrMsg)
    Me.Enabled = True    '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    If lblRet Then
        giDest = ci_Dest_DataListSelItem
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'        gblFrmDataListSelItemLoad = False    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
        giSmallParent = ci_Dest_DataListSel  '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd||fffd||fffd||fffd|A|fffd||fffd|x|fffd|o|fffd||343|f|fffd|[|fffd|^|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||80b5||fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||282||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||309||fffd||282||256||7c2||fffd||fffd||102||fffd||fffd||102||fffd||fffd||fffd|A|fffd||fffd||fffd||93||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||1570c||fffd||fffd||fffd||fffd||fffd|
        gblDataComp = (gtActDataInfo.iType = ltTmp.iType And _
                       gtActDataInfo.cSheet = ltTmp.cSheet And _
                       gtActDataInfo.cBusho = ltTmp.cBusho And _
                       gtActDataInfo.cShain = ltTmp.cShain And _
                       gtActDataInfo.cList = ltTmp.cList And _
                       gtActDataInfo.lItemNum > 0)
        Unload Me
    Else
'        Call MsgBox("|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||251||382||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||682||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'        Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
        Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    Me.Enabled = True    '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub
Attribute VB_Name = "frmDataListSelItem"
Attribute VB_Base = "0{2004D325-3862-4DC0-BFB0-47678BB99B89}{E79087DE-42B2-4B45-8DE9-2728C715AA2A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'-----------------------------------------------------------------------------
' @(h) frmDataListSelItem.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||691|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataListSelItem"
Private mhcListCode() As Long
Private mhcListName() As String

'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S Start
Private MouseDownFlag As Integer
Private lstToSelectIndex As Integer
Private lstToDeleteIndex As Integer
'2014/06/13 QA|fffd|\No.177|fffd||389||fffd| |fffd|u|fffd||fffd||fffd||681|v|fffd||fffd||fffd|x|fffd||fffd||fffd||30d||d3dc||fffd||242||fffd||fffd||292|u|fffd||fffd||fffd||fffd|
'Private Const cstlstToLineCount As Integer = 23
Private Const cstlstToLineCount As Integer = 25
Private MyDataObject As DataObject  '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S End

'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
'|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd|/|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||fffd|.list|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||253||fffd||fffd||fffd||fffd|z|fffd||fffd||317||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
Private Const ci_LIST_ITEM_DATA As Integer = 0  '|fffd|\|fffd||fffd||fffd||94|\/|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||301|A|fffd|V|fffd|[|fffd|g|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd|j/|fffd|f|fffd|[|fffd|^|fffd|i|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|j|fffd|R|fffd|[|fffd|h
Private Const ci_LIST_ITEM_CODE As Integer = 1  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||683|R|fffd|[|fffd|h
Private Const ci_LIST_ITEM_NAME As Integer = 2  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||696||fffd|
Private Const ci_LIST_ITEM_MAX  As Integer = ci_LIST_ITEM_NAME
Private Const ci_GROUP_ITEM_CODE As Integer = 1     '|fffd||fffd||fffd|X|fffd|g|fffd||30e||fffd||fffd||303|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|R|fffd|[|fffd|h
Private Const ci_GROUP_ITEM_NAME As Integer = 0     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O
'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| End
'2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
Private startIndex As Long
'2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|v|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub CboGroup_Change()
    Dim ptData As Object
    Dim loJSON As Collection
    Dim llNum As Long
    Dim lhcArr() As String
    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd| |fffd||182||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|g|fffd|p|fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||7c3|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    Dim lhcParent() As String
    Dim llDataCnt As Long
    Dim loCnt1 As Long
    Dim loCnt2 As Long
    Dim llcnt As Long
    Dim jsObj As JsonObject
    Dim lcSheetCode As String  'koiwa add
    Dim lhcData() As Variant    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| |fffd||fffd||fffd||fffd||fffd|I|fffd||252||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim llcnt2 As Long
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo CboGroup_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "CboGroup_Change", True)
    '------------------------------------------
    'koiwa add|fffd|i|fffd|O|fffd||302||fffd||fffd||7c1|j
    If gtActDataInfo.iType <> 1 Then GoTo EXIT_LABEL
    If CboGroup.ListIndex < 0 Then GoTo EXIT_LABEL
    
    lcSheetCode = CboGroup.List(CboGroup.ListIndex, 1)
    
    Set ptData = gtJSONData(ci_Dest_DataListSelItem)
    lstFrom.Clear
    Set loJSON = ptData.Element("columnParent").Element("column")
    
    llNum = loJSON.Count
    If llNum < 1 Then
        GoTo EXIT_LABEL
    End If
    
    'koiwa modified
    lhcArr = Split("sheetCode,columnName,columnCode", ",")
'    lhcArr = Split("columnName,columnCode", ",")
    'koiwa modified
    '|fffd||fffd||fffd||683|f|fffd|[|fffd|^|fffd||fffd|S|fffd||10e||64fe||fffd||fffd||fffd||fffd|
'    Call mGetListArrayPara(ptData, lhcParent, llDataCnt, "sheet", lhcArr)
    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    Call mGetListArrayPara(ptData, lhcParent, llDataCnt, "column", lhcArr)
    
    loCnt1 = 0
    For llcnt = 0 To llNum - 1
        Set jsObj = loJSON(llcnt + 1)
        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'        If lhcParent(llCnt, 0) = lcSheetCode Then
        If jsObj.value("sheetCode") = lcSheetCode Then
            loCnt1 = loCnt1 + 1
        End If
        Set jsObj = Nothing '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| |fffd|O|fffd||302||fffd||fffd||7c8||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Next
    If loCnt1 > 0 Then
        ReDim lhcData(loCnt1 - 1, 2)
    Else
        GoTo EXIT_LABEL
    End If
    '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
    loCnt2 = 0
    For llcnt = 0 To llNum - 1
        Set jsObj = loJSON(llcnt + 1)
        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'        If lhcParent(llCnt, 0) = lcSheetCode Then
        If jsObj.value("sheetCode") = lcSheetCode Then
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            lhcData(loCnt2, 0) = jsObj.value("sheetCode")
'            lhcData(loCnt2, 1) = jsObj.value("columnCode")
'            lhcData(loCnt2, 2) = IIf(IsNull(jsObj.value("columnName")), "", jsObj.value("columnName"))
            Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
            loCnt2 = loCnt2 + 1
            If loCnt2 >= loCnt1 Then Exit For
        End If
        Set jsObj = Nothing '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| |fffd|O|fffd||302||fffd||fffd||7c8||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Next
    Set jsObj = Nothing '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
    
    lstFrom.List = lhcData
    
    
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    For llcnt = 0 To lstTo.ListCount - 1
        For llcnt2 = 0 To lstFrom.ListCount - 1
            If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
               Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                lstFrom.RemoveItem (llcnt2)
                Exit For
            End If
        Next
    Next
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    
    '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If lstFrom.ListCount > 0 Then
        lstFrom.Selected(0) = True
    End If
    If lstTo.ListIndex > -1 Then
        lstTo.Selected(lstTo.ListIndex) = True
    ElseIf lstTo.ListCount > 0 Then
        lstTo.Selected(0) = True
    End If
    
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "CboGroup_Change", True)
    '------------------------------------------
    Exit Sub
CboGroup_Change_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| End

'2014/08/01 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'-----------------------------------------------------------------------------
' @(f)      : cmdItemUp_Click
'
' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X -|fffd|@|fffd||fffd||fffd||682||fffd||fffd||fffd||248||693||fffd|
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdItemUp_Click()
    Dim lhcto() As Variant
    Dim lhctomove() As Variant '|fffd||693||fffd||fffd||fffd||fffd||fffd||fffd||9340||fffd||682||fffd||fffd||a39e||fffd||794||fffd|
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llindex As Long
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo CboGroup_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdItemUp_Click", True)
    '------------------------------------------
    If lstTo.ListIndex > 0 Then
        ReDim lhcto(lstTo.ListCount, ci_LIST_ITEM_MAX)
        ReDim lhctomove(0, ci_LIST_ITEM_MAX)
        llindex = lstTo.ListIndex
        lhcto = lstTo.List
        For llcnt2 = 0 To ci_LIST_ITEM_MAX
            lhctomove(0, llcnt2) = lhcto(lstTo.ListIndex, llcnt2)
            lhcto(lstTo.ListIndex, llcnt2) = lhcto(lstTo.ListIndex - 1, llcnt2)
            lhcto(lstTo.ListIndex - 1, llcnt2) = lhctomove(0, llcnt2)
        Next
        lstTo.List = lhcto
        lstTo.ListIndex = llindex - 1
        lstTo.Selected(lstTo.ListIndex) = True
    End If
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdItemUp_Click", True)
    '------------------------------------------
    Exit Sub
CboGroup_Change_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)      : cmdItemDown_Click
'
' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X -|fffd|@|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||248||693||fffd|
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdItemDown_Click()
    Dim lhcto() As Variant
    Dim lhctomove() As Variant '|fffd||693||fffd||fffd||fffd||fffd||fffd||fffd||9340||fffd||682||fffd||fffd||a39e||fffd||794||fffd|
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llindex As Long
        '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo CboGroup_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdItemDown_Click", True)
    '------------------------------------------
    If lstTo.ListIndex < lstTo.ListCount - 1 Then
        ReDim lhcto(lstTo.ListCount, ci_LIST_ITEM_MAX)
        ReDim lhctomove(0, ci_LIST_ITEM_MAX)
        llindex = lstTo.ListIndex
        lhcto = lstTo.List
        For llcnt2 = 0 To ci_LIST_ITEM_MAX
            lhctomove(0, llcnt2) = lhcto(lstTo.ListIndex, llcnt2)
            lhcto(lstTo.ListIndex, llcnt2) = lhcto(lstTo.ListIndex + 1, llcnt2)
            lhcto(lstTo.ListIndex + 1, llcnt2) = lhctomove(0, llcnt2)
        Next
        lstTo.List = lhcto
        lstTo.ListIndex = llindex + 1
        lstTo.Selected(lstTo.ListIndex) = True
    End If
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdItemDown_Click", True)
    '------------------------------------------
    Exit Sub
CboGroup_Change_OnErr:
    Call gblFuncStack.DispError
End Sub


'|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
''2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
''-----------------------------------------------------------------------------
'' @(f)      : lstFrom_KeyDown
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X -|fffd|@|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd||fffd||fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstFrom_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    Dim beforeIndex As Long
'    Dim beforeSelect As Long
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstFrom_KeyDown", True)
'    '------------------------------------------
'    'Shift|fffd|L|fffd|[(16)|fffd||fffd|Ctrl|fffd|L|fffd|[(17)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    If (KeyCode = 16 Or KeyCode = 17) And lstFrom.ListCount > 0 And lstFrom.ListIndex > -1 Then
'        beforeIndex = lstFrom.ListIndex
'        beforeSelect = lstFrom.MultiSelect
'        lstFrom.MultiSelect = fmMultiSelectExtended
'
'        If beforeSelect <> lstFrom.MultiSelect Then
'            lstFrom.ListIndex = beforeIndex
'            lstFrom.Selected(lstFrom.ListIndex) = True
'        End If
'    End If
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstFrom_KeyDown", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub
''2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd


''2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S Start
''-----------------------------------------------------------------------------
'' @(f)      : lstFrom_MouseDown
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|}|fffd|E|fffd|X|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstFrom_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    Dim beforeIndex As Long
'    Dim beforeSelect As Long
'    Dim nloop As Long
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstFrom_MouseDown", True)
'    '------------------------------------------
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    If lstFrom.ListIndex > -1 Then
'        If Shift = 1 Then
'            If startIndex = -1 Then
'                startIndex = lstFrom.ListIndex
'            End If
'            If startIndex < lstFrom.ListIndex Then
'                For nloop = startIndex To lstFrom.ListIndex Step -1
'                    lstFrom.Selected(nloop) = True
'                Next
'            Else
'                For nloop = lstFrom.ListIndex To startIndex
'                    lstFrom.Selected(nloop) = True
'                Next
'            End If
'        ElseIf Shift = 0 Then
'            startIndex = -1
'
'            beforeIndex = lstFrom.ListIndex
'            beforeSelect = lstFrom.MultiSelect
'            lstFrom.MultiSelect = fmMultiSelectSingle
'
'            If beforeSelect <> lstFrom.MultiSelect Then
'                lstFrom.ListIndex = beforeIndex
'                lstFrom.Selected(lstFrom.ListIndex) = True
'            End If
'        End If
'    End If
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    MouseDownFlag = 1
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstFrom_MouseDown", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub


''-----------------------------------------------------------------------------
'' @(f)      : lstFrom_MouseMove
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|}|fffd|E|fffd|X|fffd|{|fffd|^|fffd||fffd||fffd||693||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstFrom_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''2014/05/23 koiwa |fffd|m|fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c2||243||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||248||693||fffd||fffd||fffd||fffd||fffd|
''|fffd||10c||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|I|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|
''    Dim MyDataObject As DataObject
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstFrom_MouseMove", True)
'    '------------------------------------------
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|1|fffd||fffd|A|fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'    '--------------------|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|----------------------
''    Set MyDataObject = Nothing  '2014/05/23 koiwa |fffd||1c9||fffd|
''    '2014/05/23 koiwa
''    '|fffd||fffd|I|fffd||fffd||fffd||fffd||502||30f||a347|lstFrom.value|fffd||242||fffd|Null|fffd||fffd||fffd||fffd||fffd||fffd||302||142||fffd||fffd||311||389||fffd|
''    '|fffd||28f||fffd||354|z|fffd||fffd||fffd|1|fffd||fffd||681|i|fffd|V|fffd|[|fffd|g/|fffd|f|fffd|[|fffd|^|fffd|R|fffd|[|fffd|h|fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
'''    If Button = 1 And lstFrom.value > 0 Then
''    If Button = 1 And (Not IsNull(lstFrom.value)) And lstFrom.ListCount > 0 Then
''        lstToSelectIndex = -1
''        Set MyDataObject = New DataObject
''        '2014/05/23 koiwa
''        '|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd||303|e|fffd|L|fffd|X|fffd|g|fffd|E|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||243|h|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd||182||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||7c1|A
''        'SetText|fffd||34e|g|fffd|p|fffd||fffd||fffd||202||fffd|
'''        MyDataObject.SetText lstFrom.ListIndex
''        MyDataObject.StartDrag
''    End If
'    '--------------------|fffd||fffd||fffd||fffd||fffd||702||fffd|----------------------
'    If Button = 1 Then
'        If MouseDownFlag = 1 Then
'            lstToDeleteIndex = lstTo.ListIndex
'            MouseDownFlag = 2
'        End If
'    End If
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstFrom_MouseMove", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub


''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||348||209||fffd||fffd||fffd||fffd||fffd||fffd||5c2||114||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd|1|fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
''-----------------------------------------------------------------------------
'' @(f)      : lstTo_BeforeDragOver
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd|h|fffd||fffd||fffd|b|fffd|v|fffd||fffd||fffd||fffd||30e||fffd||fffd|s
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
'    Dim SelIdx As Integer
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_BeforeDragOver", True)
'    '------------------------------------------
'    Cancel = True
'    Effect = 1
'    If Y > 0 Then
'        SelIdx = (Y \ (lstTo.Height / cstlstToLineCount)) + lstTo.TopIndex
'        '2014/05/23 koiwa |fffd||1c9||fffd| Start
'        '|fffd|\|fffd||fffd||fffd||94|\|fffd||217||42a42||fffd||303|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|h|fffd||fffd||fffd|b|fffd|O|fffd||242||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||94|\|fffd||182||fffd||fffd||fffd|
'        If Y < 5 And SelIdx > 0 Then
'            SelIdx = SelIdx - 1
'        End If
'        If Abs(lstTo.Height - Y) < 7 And SelIdx = lstToSelectIndex Then
'            SelIdx = SelIdx + 1
'        End If
'        '2014/05/23 koiwa |fffd||1c9||fffd| End
'        If SelIdx >= 0 And SelIdx <> lstToSelectIndex Then
'            If SelIdx < 0 Or SelIdx >= lstTo.ListCount Then
'                If SelIdx >= lstTo.ListCount Then SelIdx = lstTo.ListCount - 1
'            End If
'            lstTo.ListIndex = SelIdx
'            lstToSelectIndex = SelIdx
'        End If
'    End If
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstTo_BeforeDragOver", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub


''-----------------------------------------------------------------------------
'' @(f)      : lstTo_BeforeDropOrPaste
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|f|fffd|[|fffd|^|fffd|h|fffd||fffd||fffd|b|fffd|vor|fffd|\|fffd|t|fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
'    Dim nSelIdx As Integer
'    Dim nLoop As Integer
'    Dim lhcTo() As Variant
'    Dim nInsIdx As Integer
'    Dim llTopIndex As Long    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa |fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||fffd|24|fffd||88||20f||fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||257|]|fffd|v|fffd||203|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||60a4||fffd||fffd|
'    Dim lhcToOld() As Variant   '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'    Dim lhcFrom() As Variant    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_BeforeDropOrPaste", True)
'    '------------------------------------------
'    Cancel = True
'    Effect = 1
'    nSelIdx = lstTo.ListIndex
'    For nLoop = 0 To lstTo.ListCount - 1
'        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''        If Val(lstTo.List(nLoop, 0)) = Val(lstFrom.List(lstFrom.ListIndex, 0)) _
''        And Val(lstTo.List(nLoop, 1)) = Val(lstFrom.List(lstFrom.ListIndex, 1)) Then
'        If Val(lstTo.List(nLoop, ci_LIST_ITEM_DATA)) = Val(lstFrom.List(lstFrom.ListIndex, ci_LIST_ITEM_DATA)) _
'        And Val(lstTo.List(nLoop, ci_LIST_ITEM_CODE)) = Val(lstFrom.List(lstFrom.ListIndex, ci_LIST_ITEM_CODE)) Then
'            lstTo.RemoveItem nLoop
'            Exit For
'        End If
'    Next
'    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''    ReDim lhcTo(lstTo.ListCount, 2)
'    ReDim lhcTo(lstTo.ListCount, ci_LIST_ITEM_MAX)
'    lhcToOld = lstTo.List      '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'    lhcFrom = lstFrom.List
'    For nLoop = 0 To lstTo.ListIndex
'        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''        lhcTo(nLoop, 0) = lstTo.List(nLoop, 0)
''        lhcTo(nLoop, 1) = lstTo.List(nLoop, 1)
''        lhcTo(nLoop, 2) = lstTo.List(nLoop, 2)
'        Call mListDataRowCopy(gtActDataInfo.iType, lhcTo, nLoop, lhcToOld, nLoop)
'    Next
'    nInsIdx = nLoop
'    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''    lhcTo(nLoop, 0) = lstFrom.List(lstFrom.ListIndex, 0)
''    lhcTo(nLoop, 1) = lstFrom.List(lstFrom.ListIndex, 1)
''    lhcTo(nLoop, 2) = lstFrom.List(lstFrom.ListIndex, 2)
'    Call mListDataRowCopy(gtActDataInfo.iType, lhcTo, nLoop, lhcFrom, lstFrom.ListIndex)
'    '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||696||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|
'    With lstFrom
'        lhcTo(nLoop, ci_LIST_ITEM_NAME) = mcAddSheetName(gtActDataInfo.iType, .List(.ListIndex, ci_LIST_ITEM_DATA), .List(.ListIndex, ci_LIST_ITEM_NAME))
'    End With
'
'    For nLoop = nLoop To lstTo.ListCount - 1
'        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''        lhcTo(nLoop + 1, 0) = lstTo.List(nLoop, 0)
''        lhcTo(nLoop + 1, 1) = lstTo.List(nLoop, 1)
''        lhcTo(nLoop + 1, 2) = lstTo.List(nLoop, 2)
'        Call mListDataRowCopy(gtActDataInfo.iType, lhcTo, nLoop + 1, lhcToOld, nLoop)
'    Next
'    llTopIndex = lstTo.TopIndex    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'    lstTo.List = lhcTo
'    lstTo.TopIndex = llTopIndex    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'    If nInsIdx > nSelIdx Then
'        lstTo.ListIndex = nSelIdx + 1
'    Else
'        lstTo.ListIndex = nSelIdx
'    End If
'    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    lstFrom.RemoveItem lstFrom.ListIndex
'    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    '2014/05/23 koiwa
'    '|fffd||10c||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|I|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|
'    Set MyDataObject = Nothing
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstTo_BeforeDropOrPaste", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub
''2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd


''2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
''-----------------------------------------------------------------------------
'' @(f)      : lstTo_KeyDown
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X -|fffd|@|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd||fffd||fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    Dim beforeIndex As Long
'    Dim beforeSelect As Long
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_KeyDown", True)
'    '------------------------------------------
'    'Shift|fffd|L|fffd|[|fffd||fffd|Ctrl|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    If (KeyCode = 16 Or KeyCode = 17) And lstTo.ListCount > 0 And lstTo.ListIndex > -1 Then
'        beforeIndex = lstTo.ListIndex
'        beforeSelect = lstTo.MultiSelect
'        lstTo.MultiSelect = fmMultiSelectExtended
'
'        If beforeSelect <> lstTo.MultiSelect Then
'            lstTo.ListIndex = beforeIndex
'            lstTo.Selected(lstTo.ListIndex) = True
'        End If
'    End If
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstFrom_KeyDown", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub
''2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd


'
''-----------------------------------------------------------------------------
'' @(f)      : lstTo_MouseDown
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|}|fffd|E|fffd|X|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    Dim beforeIndex As Long
'    Dim beforeSelect As Long
'    Dim nloop As Long
'    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_MouseDown", True)
'    '------------------------------------------
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    If lstTo.ListIndex > -1 Then
'        If Shift = 1 Then
'            If startIndex = -1 Then
'                startIndex = lstTo.ListIndex
'            End If
'            If startIndex < lstTo.ListIndex Then
'                For nloop = startIndex To lstTo.ListIndex Step -1
'                    lstTo.Selected(nloop) = True
'                Next
'            Else
'                For nloop = lstTo.ListIndex To startIndex
'                    lstTo.Selected(nloop) = True
'                Next
'            End If
'        ElseIf Shift = 0 Then
'            startIndex = -1
'            beforeIndex = lstTo.ListIndex
'            beforeSelect = lstTo.MultiSelect
'            lstTo.MultiSelect = fmMultiSelectSingle
'
'            If beforeSelect <> lstTo.MultiSelect Then
'                lstTo.ListIndex = beforeIndex
'                lstTo.Selected(lstTo.ListIndex) = True
'            End If
'        End If
'    End If
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    MouseDownFlag = 1
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstTo_MouseDown", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub


''-----------------------------------------------------------------------------
'' @(f)      : lstTo_MouseMove
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|}|fffd|E|fffd|X|fffd|{|fffd|^|fffd||fffd||fffd||693||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_MouseMove", True)
'    '------------------------------------------
'    If Button = 1 Then
'        If MouseDownFlag = 1 Then
'            lstToDeleteIndex = lstTo.ListIndex
'            MouseDownFlag = 2
'        End If
'    End If
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstTo_MouseMove", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub


''-----------------------------------------------------------------------------
'' @(f)      : lstTo_MouseUp
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X - |fffd|}|fffd|E|fffd|X|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd|
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub lstTo_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''    Dim lhcTo As Variant
'    Dim lhcTo() As Variant
''    Dim lcColumnCode As String
''    Dim lcSheetDataCode As String
''    Dim lcSheetDataName As String
'    Dim nloop As Integer
'    Dim nSelIdx As Integer
'    Dim llTopIndex As Long    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa |fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||fffd|24|fffd||88||20f||fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||257|]|fffd|v|fffd||203|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||60a4||fffd||fffd|
'    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'    Dim liType As Integer
'    Dim lhcRowTmp(0, ci_LIST_ITEM_MAX) As Variant
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo CboGroup_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "lstTo_MouseUp", True)
'    '------------------------------------------
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    If lstTo.MultiSelect = fmMultiSelectSingle Then
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'        liType = gtActDataInfo.iType    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
'        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| End
'        If MouseDownFlag = 2 Then
'            If X >= 0 And X < (lstTo.Width - 18) And Y >= 0 And Y < lstTo.Height Then
'                If Button = 1 And lstToDeleteIndex >= 0 Then
'                    If lstTo.ListIndex <> lstToDeleteIndex Then
'                        lhcTo = lstTo.List
'                        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
''                       lcColumnCode = lhcTo(lstToDeleteIndex, 0)
''                       lcSheetDataCode = lhcTo(lstToDeleteIndex, 1)
''                       lcSheetDataName = lhcTo(lstToDeleteIndex, 2)
'                        Call mListDataRowCopy(liType, lhcRowTmp, 0, lhcTo, lstToDeleteIndex)
'                        nSelIdx = 0
'                        If lstTo.ListIndex < lstToDeleteIndex Then
'                            For nloop = lstToDeleteIndex To lstTo.ListIndex + 1 Step -1
'                                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''                               lhcTo(nLoop, 0) = lhcTo(nLoop - 1, 0)
''                               lhcTo(nLoop, 1) = lhcTo(nLoop - 1, 1)
''                               lhcTo(nLoop, 2) = lhcTo(nLoop - 1, 2)
'                                Call mListDataRowCopy(liType, lhcTo, nloop, lhcTo, nloop - 1)
'                            Next
'                            nSelIdx = lstTo.ListIndex
'                        ElseIf lstTo.ListIndex > lstToDeleteIndex - 1 Then
'                            '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'                            '|fffd||3068||fffd||fffd||fffd||248||693||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|s|fffd||308||292|u|fffd||251|}|fffd||fffd||fffd||fffd||fffd||fffd|
''                           For nLoop = lstToDeleteIndex To lstTo.ListIndex - 2
'                            For nloop = lstToDeleteIndex To lstTo.ListIndex - 1
'                                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
''                               lhcTo(nLoop, 0) = lhcTo(nLoop + 1, 0)
''                               lhcTo(nLoop, 1) = lhcTo(nLoop + 1, 1)
''                               lhcTo(nLoop, 2) = lhcTo(nLoop + 1, 2)
'                                Call mListDataRowCopy(liType, lhcTo, nloop, lhcTo, nloop + 1)
'                            Next
'                            '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'                            '|fffd||3068||fffd||fffd||fffd||248||693||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|s|fffd||308||292|u|fffd||251|}|fffd||fffd||fffd||fffd||fffd||fffd|
''                           nSelIdx = lstTo.ListIndex - 1
'                            nSelIdx = lstTo.ListIndex
'                        End If
'                        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
''                       lhcTo(nLoop, 0) = lcColumnCode
''                       lhcTo(nLoop, 1) = lcSheetDataCode
''                       lhcTo(nLoop, 2) = lcSheetDataName
'                        Call mListDataRowCopy(liType, lhcTo, nloop, lhcRowTmp, 0)
'                        llTopIndex = lstTo.TopIndex    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'                        lstTo.List = lhcTo
'                        lstTo.TopIndex = llTopIndex    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa
'                        lstTo.ListIndex = nSelIdx
'                    End If
'                End If
'            End If
'        End If
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    End If
'    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'    MouseDownFlag = 0
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "lstTo_MouseUp", True)
'    '------------------------------------------
'    Exit Sub
'CboGroup_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub
''2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S End
'2014/08/01 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd


'2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'-----------------------------------------------------------------------------
' @(f)      : searchField_MouseDown
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd|v - |fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd|
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub searchField_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo searchField_MouseDown_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "searchField_MouseDown", True)
    '------------------------------------------
    searchField.Text = ""
    Me.searchField.ForeColor = RGB(0, 0, 0)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "searchField_MouseDown", True)
    '------------------------------------------
    Exit Sub
searchField_MouseDown_OnErr:
    Call gblFuncStack.DispError
End Sub

'2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'-----------------------------------------------------------------------------
' @(f)      : searchField_KeyDown
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd|v - |fffd|G|fffd||fffd||fffd|^|fffd|[|fffd|L|fffd|[|fffd||fffd||fffd||fffd|
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub searchField_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    Dim search As String
    Dim searchLen As Long
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llcnt3 As Long
    Dim checkcnt As Long
    Dim lstfromChr As String
    Dim lstfromLen As Long
    Dim jsObj As JsonObject
    Dim loCnt1 As Long
    Dim loCnt2 As Long
    Dim lhcArr() As String
    Dim llNum As Long
    Dim loJSON As Collection
    Dim ptData As Object
    Dim lcSheetCode As String
'-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo searchField_KeyDown_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "searchField_KeyDown", True)
'------------------------------------------
'|fffd|G|fffd||fffd||fffd|^|fffd|[|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If KeyCode <> 13 Then Exit Sub
    'searchField|fffd||fffd||fffd||d4482||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||256||7c2||fffd|
    If searchField.Text = "" Then
        If gtActDataInfo.iType = 1 Then
            If CboGroup.ListIndex < 0 Then GoTo EXIT_LABEL
                lcSheetCode = CboGroup.List(CboGroup.ListIndex, 1)
                Set ptData = gtJSONData(ci_Dest_DataListSelItem)
                lstFrom.Clear
                Set loJSON = ptData.Element("columnParent").Element("column")
                llNum = loJSON.Count
                If llNum < 1 Then
                    GoTo EXIT_LABEL
                End If
                lhcArr = Split("sheetCode,columnName,columnCode", ",")
                loCnt1 = 0
                For llcnt = 0 To llNum - 1
                    Set jsObj = loJSON(llcnt + 1)
                    If jsObj.value("sheetCode") = lcSheetCode Then
                        loCnt1 = loCnt1 + 1
                    End If
                    Set jsObj = Nothing
                Next
                If loCnt1 > 0 Then
                    ReDim lhcData(loCnt1 - 1, 2)
                Else
                    GoTo EXIT_LABEL
                End If
                '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
                loCnt2 = 0
                For llcnt = 0 To llNum - 1
                    Set jsObj = loJSON(llcnt + 1)
                    If jsObj.value("sheetCode") = lcSheetCode Then
                        Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                        loCnt2 = loCnt2 + 1
                    If loCnt2 >= loCnt1 Then Exit For
                    End If
                    Set jsObj = Nothing
                Next
                Set jsObj = Nothing
        ElseIf gtActDataInfo.iType = 2 Then
            Set ptData = gtJSONData(ci_Dest_DataListSelItem)
            lstFrom.Clear
            Set loJSON = ptData.Element("column")
            llNum = loJSON.Count
            If llNum < 1 Then
                GoTo EXIT_LABEL
            End If
            lhcArr = Split("datasourceCode,columnName,columnCode", ",")
            loCnt1 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                loCnt1 = loCnt1 + 1
                Set jsObj = Nothing
            Next
            If loCnt1 > 0 Then
                ReDim lhcData(loCnt1 - 1, 2)
            Else
                GoTo EXIT_LABEL
            End If
            '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
            loCnt2 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                loCnt2 = loCnt2 + 1
                If loCnt2 >= loCnt1 Then Exit For
                    Set jsObj = Nothing
            Next
            Set jsObj = Nothing
        End If
        lstFrom.List = lhcData
        '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        For llcnt = 0 To lstTo.ListCount - 1
            For llcnt2 = 0 To lstFrom.ListCount - 1
                If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                    Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                    lstFrom.RemoveItem (llcnt2)
                    Exit For
                End If
            Next
        Next
    '|fffd|i|fffd||835e||fffd||742||fffd||fffd|s|fffd||202||fffd|
    Else
        search = searchField.Text
        searchLen = Len(search)
        
        '2014/07/30 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l) Start
        If gtActDataInfo.iType = 1 Then
            lcSheetCode = CboGroup.List(CboGroup.ListIndex, 1)
            Set ptData = gtJSONData(ci_Dest_DataListSelItem)
            lstFrom.Clear
            Set loJSON = ptData.Element("columnParent").Element("column")
            llNum = loJSON.Count
            If llNum < 1 Then
                GoTo EXIT_LABEL
            End If
            lhcArr = Split("sheetCode,columnName,columnCode", ",")
            loCnt1 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                If jsObj.value("sheetCode") = lcSheetCode Then
                    loCnt1 = loCnt1 + 1
                End If
                Set jsObj = Nothing
            Next
            If loCnt1 > 0 Then
                ReDim lhcData(loCnt1 - 1, 2)
            Else
                GoTo EXIT_LABEL
            End If
            '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
            loCnt2 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                If jsObj.value("sheetCode") = lcSheetCode Then
                    Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                    loCnt2 = loCnt2 + 1
                If loCnt2 >= loCnt1 Then Exit For
                End If
                Set jsObj = Nothing
            Next
            Set jsObj = Nothing
        ElseIf gtActDataInfo.iType = 2 Then
            Set ptData = gtJSONData(ci_Dest_DataListSelItem)
            lstFrom.Clear
            Set loJSON = ptData.Element("column")
            llNum = loJSON.Count
            If llNum < 1 Then
                GoTo EXIT_LABEL
            End If
            lhcArr = Split("datasourceCode,columnName,columnCode", ",")
            loCnt1 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                loCnt1 = loCnt1 + 1
                Set jsObj = Nothing
            Next
            If loCnt1 > 0 Then
                ReDim lhcData(loCnt1 - 1, 2)
            Else
                GoTo EXIT_LABEL
            End If
            '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
            loCnt2 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                loCnt2 = loCnt2 + 1
                If loCnt2 >= loCnt1 Then Exit For
                    Set jsObj = Nothing
            Next
            Set jsObj = Nothing
        End If
        lstFrom.List = lhcData
        '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        For llcnt = 0 To lstTo.ListCount - 1
            For llcnt2 = 0 To lstFrom.ListCount - 1
                If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                   Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                    lstFrom.RemoveItem (llcnt2)
                    Exit For
                End If
            Next
        Next
        '2014/07/30 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l) End
         
        For llcnt = lstFrom.ListCount - 1 To 0 Step -1
            lstfromChr = lstFrom.List(llcnt, ci_LIST_ITEM_NAME)
            lstfromLen = Len(lstfromChr)
            checkcnt = 0
            llcnt2 = 1
            For llcnt2 = 1 To lstfromLen - searchLen + 1
                For llcnt3 = 1 To searchLen
                    If Mid(search, llcnt3, 1) = Mid(lstfromChr, llcnt2 + llcnt3 - 1, 1) Then
                        checkcnt = checkcnt + 1
                    Else
                        checkcnt = 0
                        Exit For
                    End If
                Next
                If checkcnt = searchLen Then
                    Exit For
                End If
            Next
            If checkcnt <> searchLen Then
                lstFrom.RemoveItem llcnt
            End If
        Next
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||702||70e|c|fffd||fffd||fffd||fffd||fffd||7c2||24d||d3dc|
    '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd||315|\|fffd||fffd||fffd||fffd||7c2||fffd|
'    Me.searchField.ForeColor = RGB(192, 192, 192)
'    searchField.Text = "|fffd||fffd||fffd||682||fffd||fffd|i|fffd||835e||fffd||fffd|"
    '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        
    End If
EXIT_LABEL:
'-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "searchField_KeyDown", True)
'------------------------------------------
    Exit Sub
searchField_KeyDown_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l) End

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    Dim llcnt As Long
    Dim loSheet As Excel.Worksheet
    Dim ltDummy As tDataSetInfo
    Dim llSheetCnt As Long
    Dim llSheet() As String
    Dim llSelIndex As Long
    Dim lcCell As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    startIndex = -1
    '2014/07/16 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S Start
    lstToSelectIndex = 0
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S End

    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| Start
    If gtActDataInfo.iType = 1 Then
        Me.CboGroup.Visible = True '|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd|\|fffd||fffd|
        '2014/07/10 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        '2014/06/13 QA|fffd|\No.177|fffd||389||fffd| |fffd|u|fffd||fffd||fffd||681|v|fffd||fffd||fffd|x|fffd||fffd||fffd||30d||d3dc||fffd||242||fffd||fffd||292|u|fffd||fffd||fffd||fffd|
'        Me.lstFrom.Top = 77 '87.5
'        Me.lstFrom.Height = 209.55 '191
        '2014/07/10 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    Else
        Me.CboGroup.Visible = False '|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd|\|fffd||fffd|
        '2014/07/10 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        Me.searchField.Top = Me.lstTo.Top
'        Me.lstFrom.Top = Me.lstTo.Top
        Me.lstFrom.Top = Me.searchField.Top + Me.searchField.Height + 5
'        Me.lstFrom.Height = Me.lstTo.Height
        Me.lstFrom.Height = Me.lstTo.Height - Me.searchField.Height - 5
        '2014/07/10 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| End
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
    'InputBox|fffd||242||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||315||fffd||fffd|A|fffd||30e||fffd||fffd||341|A|fffd|I|fffd||fffd|O|fffd||30f||fffd||502||1570c||fffd||fffd||fffd||fffd||93c8||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'    If gblFrmDataListSelItemLoad Then
'        Call mRestoreControlValue
'        GoTo EXIT_LABEL
'    End If
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
    lstFrom.Clear
    lstTo.Clear
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'    cboList.Visible = (gtActDataInfo.iType = 1)
    '|fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||282||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Call mGetListArray(gtJSONData(ci_Dest_DataListSelItem), gtActDataInfo.iType) '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd|Z|fffd|b|fffd|g
    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'    '|fffd||fffd||fffd|X|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||c42c|
'    cboList.Clear
'    If gtActDataInfo.iType = 1 Then
'        Me.Height = 426
'        '|fffd|i|fffd||fffd||fffd||fffd||fffd||243||fffd||fffd|X|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||314|z|fffd|u|fffd|j
'        Call mGetListComboArray(gtJSONData(ci_Dest_DataListSelItem)) '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd|Z|fffd|b|fffd|g
'        Call cboList_Change '|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd|E|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||c42c|
'    Else
'        Call mGetListArray(gtJSONData(ci_Dest_DataListSelItem), gtActDataInfo.iType) '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd|Z|fffd|b|fffd|g
'    End If


'    '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If lstFrom.ListCount > 0 Then
        lstFrom.Selected(0) = True
    End If
    '2014/07/17 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    If lstTo.ListCount > 0 Then
'        lstTo.Selected(0) = True
'    End If
    '2014/07/17 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||752||fffd||303|V|fffd|[|fffd|g|fffd||303|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'    llSelIndex = 0
'    lcCell = "A1"
'    cboSheet.Clear
'    cboSheet.Enabled = True
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
    
'2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd| Start
'    If giBigParent = ci_BP_eSMButton Then   'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||102||382||a0bd||fffd||a347|
'        For llCnt = 1 To goBook.Worksheets.Count
'            Set loSheet = goBook.Worksheets(llCnt)
'            If loSheet.Name <> cc_SHEET_ENV And loSheet.Name <> cc_SHEET_LOG Then    '|fffd||8b||fffd||fffd||752||fffd|E|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||20a|O
'                If gblGetDataInfo(goBook, ltDummy, loSheet.Name) = False Then
'                    ReDim Preserve llSheet(llSheetCnt)
'                    llSheet(llSheetCnt) = loSheet.Name
'                    '|fffd|I|fffd||12182||303|V|fffd|[|fffd|g|fffd||183|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'                    If llSheet(llSheetCnt) = goBook.ActiveSheet.Name Then
'                        llSelIndex = llSheetCnt
'                        goBook.Activate
'                        lcCell = Replace(ActiveCell.Address, "$", "")
'                    End If
'                    llSheetCnt = llSheetCnt + 1
'                End If
'            End If
'            Set loSheet = Nothing
'        Next
'    ElseIf giBigParent = ci_BP_SETTINGS Then '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||382||a0bd||fffd||a347|
'        cboSheet.Enabled = False
'        cboSheet.Text = gtActDataInfo.cSheetCName
'        txtKiten.Text = gtActDataInfo.cKiten
'    End If
'    '|fffd|I|fffd||12182||303|V|fffd|[|fffd|g|fffd||183|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'    If llSheetCnt > 0 Then
'        cboSheet.List = llSheet
'        cboSheet.ListIndex = llSelIndex
'    End If
'    txtKiten.Text = lcCell

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'    '|fffd|f|fffd|[|fffd|^|fffd||752||fffd||302||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||317|v|fffd|f|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
'    For llCnt = 1 To goBook.Worksheets.Count
'        Set loSheet = goBook.Worksheets(llCnt)
'        If loSheet.Name <> cc_SHEET_ENV And loSheet.Name <> cc_SHEET_LOG Then    '|fffd||8b||fffd||fffd||752||fffd|E|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||20a|O
'            If gblGetDataInfo(goBook, ltDummy, loSheet.Name) = False Then
'                ReDim Preserve llSheet(llSheetCnt)
'                llSheet(llSheetCnt) = loSheet.Name
'                '|fffd|I|fffd||12182||303|V|fffd|[|fffd|g|fffd||183|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'                If llSheet(llSheetCnt) = goBook.ActiveSheet.Name Then
'                    llSelIndex = llSheetCnt
'                    goBook.Activate
'                    lcCell = Replace(ActiveCell.Address, "$", "")
'                End If
'                llSheetCnt = llSheetCnt + 1
'            End If
'        End If
'        Set loSheet = Nothing
'    Next
'    'eSM|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||102||382||fffd||102||fffd||fffd||fffd||fffd||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||242||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'    If giBigParent = ci_BP_eSMButton Then
'        If llSheetCnt > 0 Then
'            cboSheet.List = llSheet
'            cboSheet.ListIndex = llSelIndex
'        End If
'        txtKiten.Text = lcCell
'    ElseIf giBigParent = ci_BP_SETTINGS Then '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||382||a0bd||fffd||a347|
'        cboSheet.Enabled = False
'        cboSheet.Text = gtActDataInfo.cSheetCName
'        txtKiten.Text = gtActDataInfo.cKiten
'    End If
'    '|fffd||fffd||fffd||fffd||fffd||fffd||357||fffd||fffd||303|Z|fffd|b|fffd|g
'    cboSheetRireki.Clear
'    If llSheetCnt > 0 Then
'        cboSheetRireki.List = llSheet
'    End If
'    cboSheetRireki.Text = gtActDataInfo.cSheetRireki
'2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd| End
'    '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
'    chkRireki.value = gtActDataInfo.blRirekiSave
'    Call chkRireki_Click
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

EXIT_LABEL: '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'    gblFrmDataListSelItemLoad = True    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
    
    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa Start
    '|fffd|}|fffd|C|fffd|N|fffd||fffd||fffd|\|fffd|t|fffd|g|fffd||303|o|fffd|O|fffd||202||302||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a88||fffd|x|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||fffd||fffd||682||fffd||fffd||202||fffd||fffd||fffd|
    '|fffd||fffd||295|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|lstTo_BeforeDragOver|fffd||fffd|Y|fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||117||fffd||fffd||202||fffd|
    '|fffd||fffd||295|\|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||fffd|
    lstTo.SetFocus
    lstFrom.SetFocus
    '2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa End
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd||30f||fffd||fffd||fffd||fffd|\|fffd||fffd|
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Me.searchField.ForeColor = RGB(192, 192, 192)
    searchField.Text = "|fffd||fffd||fffd||682||fffd||fffd|i|fffd||835e||fffd||fffd|"
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Me.Enabled = True   '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call GP_Start_SCUPD
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
'             piType - (i) : |fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mGetListArray(ByRef ptData As Object, ByVal piType As Integer)
    Dim llcnt As Long
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim llcnt2 As Long
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    Dim llNum As Long
    Dim loJSON As Collection
    Dim jsObj As JsonObject
    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd|
'    Dim lhcData() As String
'    Dim lhcDataListTo() As String
    Dim lhcData() As Variant
    Dim lhcDataListTo() As Variant
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| Start
    Dim lhcArr() As String
    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd|
'    Dim lhcParent() As String
    Dim lhcParent() As Variant  '|fffd||fffd||fffd|X|fffd|g|fffd||303|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||14e|g|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|R|fffd|[|fffd|h|fffd||314|z|fffd||fffd|
    Dim lhcSelArr() As Variant
    Dim llSelCnt As Long
    Dim llDataCnt As Long
    Dim loCnt1 As Long
    Dim loCnt2 As Long
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| End
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
    lstFrom.Clear
    lstTo.Clear
    If piType = 1 Then  '|fffd||fffd||fffd|X|fffd|g
        Set loJSON = ptData.Element("columnParent").Element("column")
    ElseIf piType = 2 Then  '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
        Set loJSON = ptData.Element("column")
    End If
    llNum = loJSON.Count
    If llNum < 1 Then
        GoTo EXIT_LABEL
    End If
    ReDim lhcData(llNum - 1, 2)
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd|
    Call mSetListColumnWidth
    '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
    If piType = 1 Then  '|fffd||fffd||fffd|X|fffd|g
        '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| Start
        '2014/04/21 QA|fffd|\No.118|fffd||389||fffd| To|fffd||fffd||fffd|X|fffd|g|fffd||c42c||fffd||fffd||fffd||14e|g|fffd|p|fffd||fffd||fffd||90bd||fffd||7c1|A|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|O|fffd||fffd|
        For llcnt = 0 To llNum - 1
            Set jsObj = loJSON(llcnt + 1)
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            lhcData(llCnt, 0) = jsObj.value("sheetCode")
'            lhcData(llCnt, 1) = jsObj.value("columnCode")
'            lhcData(llCnt, 2) = IIf(IsNull(jsObj.value("columnName")), "", jsObj.value("columnName"))
            Call mListDataRowSet(piType, jsObj, lhcData, llcnt)
            Set jsObj = Nothing     '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
        Next
        CboGroup.Clear  'koiwa add
'        lhcArr = Split("columnName,columnCode", ",")   'koiwa modified
        lhcArr = Split("sheetName,sheetCode", ",")
        Call mGetListArrayPara(ptData, lhcParent, llDataCnt, "sheet", lhcArr)
        If llDataCnt > 0 Then
            CboGroup.List = lhcParent
            CboGroup.ListIndex = 0
        End If
        Call CboGroup_Change  'koiwa add
        '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| End
    ElseIf piType = 2 Then  '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
        For llcnt = 0 To llNum - 1
            Set jsObj = loJSON(llcnt + 1)
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            lhcData(llCnt, 0) = gtActDataInfo.cDataName
'            lhcData(llCnt, 1) = jsObj.value("columnCode")
'            lhcData(llCnt, 2) = IIf(IsNull(jsObj.value("columnName")), "", jsObj.value("columnName"))
            Call mListDataRowSet(piType, jsObj, lhcData, llcnt)
            Set jsObj = Nothing     '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
        Next
        lstFrom.List = lhcData  '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd|
    End If
    lstFrom.ColumnCount = UBound(lhcData, 2) + 1
    lstTo.ColumnCount = UBound(lhcData, 2) + 1
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
'    lstFrom.ColumnWidths = "0;0;" & CStr(lstFrom.Width - 5)
'    lstTo.ColumnWidths = "0;0;" & CStr(lstTo.Width - 5)
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd|
'    Call mSetListColumnWidth 'If|fffd||fffd||fffd||311|O|fffd||248||693||fffd|
'    lstFrom.List = lhcData   'piType=2|fffd||312||fffd||fffd||248||693||fffd|
    
    '|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||30d||c42c|
    '2013/03/31 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.2|fffd||389||fffd|
'    lstTo.List = lhcData
    Set jsObj = Nothing
    '2014/04/21 QA|fffd|\No.118|fffd||389||fffd|
    '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd|A|fffd||590||fffd||fffd||fffd||fffd||248||693||fffd|
'    Dim lhcSelArr() As String

'    If piType = 1 Then  '|fffd||fffd||fffd|X|fffd|g
'        Set loJSON = ptData.Element("dispColumnParent").Element("dispColumn")
'        llNum = loJSON.Count
'        ReDim lhcDataListTo(llNum - 1, 2)
'        For llCnt = 0 To llNum - 1
'            Set jsObj = loJSON(llCnt + 1)
'            lhcDataListTo(llCnt, 0) = jsObj.value("sheetCode")
'            lhcDataListTo(llCnt, 1) = jsObj.value("columnCode")
'            lhcDataListTo(llCnt, 2) = IIf(IsNull(jsObj.value("columnName")), "", jsObj.value("columnName"))
'        Next
'        lstTo.List = lhcDataListTo
'    ElseIf piType = 2 Then  '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|i|fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||193||fffd||fffd||fffd||fffd|j
'        lstTo.List = lhcData
'    End If
    If piType = 1 Then  '|fffd||fffd||fffd|X|fffd|g
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||282||fffd||fffd||fffd||7c2||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
'        If giBigParent = ci_BP_eSMButton Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then
'        If (giBigParent = ci_BP_eSMButton And giSmallParent <> ci_Dest_DataSettings) Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then    '|fffd|O|fffd||fffd||188||10a4||fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
        If (giBigParent = ci_BP_eSMButton And (giSmallParent <> ci_Dest_DataSettings And gblDataComp = False)) Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then     '|fffd|O|fffd||fffd||188||10a4||fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
            Set loJSON = ptData.Element("dispColumnParent").Element("dispColumn")
            llNum = loJSON.Count
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            ReDim lhcDataListTo(llNum - 1, 2)
            ReDim lhcDataListTo(llNum - 1, ci_LIST_ITEM_MAX)
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'                lhcDataListTo(llCnt, 0) = jsObj.value("sheetCode")
'                lhcDataListTo(llCnt, 1) = jsObj.value("columnCode")
'                lhcDataListTo(llCnt, 2) = IIf(IsNull(jsObj.value("columnName")), "", jsObj.value("columnName"))
                Call mListDataRowSet(piType, jsObj, lhcDataListTo, llcnt)
                Set jsObj = Nothing     '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
            Next
            lstTo.List = lhcDataListTo
            
            '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            For llcnt = 0 To lstTo.ListCount - 1
                For llcnt2 = 0 To lstFrom.ListCount - 1
                    If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                       Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                        lstFrom.RemoveItem (llcnt2)
                        Exit For
                    End If
                Next
            Next
            '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
'        ElseIf giBigParent = ci_BP_SETTINGS Then
        Else    '|fffd|O|fffd||fffd||309||fffd||295|\|fffd||fffd||fffd||fffd||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||311|I|fffd||fffd||fffd||fffd||fffd||682||1570c||fffd||fffd||fffd||fffd||fffd|
            Call mhcRestoreItem(lhcSelArr, lhcData, llSelCnt, gtActDataInfo.cItem)
            If llSelCnt > 0 Then
                lstTo.List = lhcSelArr
                '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                For llcnt = 0 To lstTo.ListCount - 1
                    For llcnt2 = 0 To lstFrom.ListCount - 1
                        If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                           Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                            lstFrom.RemoveItem (llcnt2)
                            Exit For
                        End If
                    Next
                Next
                '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            End If
        End If
        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
        For llcnt = 0 To lstTo.ListCount - 1
            With lstTo
                .List(llcnt, ci_LIST_ITEM_NAME) = mcAddSheetName(piType, .List(llcnt, ci_LIST_ITEM_DATA), .List(llcnt, ci_LIST_ITEM_NAME))
            End With
        Next
    ElseIf piType = 2 Then  '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|i|fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||193||fffd||fffd||fffd||fffd|j
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||282||fffd||fffd||fffd||7c2||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd|
'        If giBigParent = ci_BP_eSMButton Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then
'        If (giBigParent = ci_BP_eSMButton And giSmallParent <> ci_Dest_DataSettings) Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then    '|fffd|O|fffd||fffd||188||10a4||fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
        If (giBigParent = ci_BP_eSMButton And (giSmallParent <> ci_Dest_DataSettings And gblDataComp = False)) Or (giBigParent = ci_BP_SETTINGS And mblDataComp = False) Then    '|fffd|O|fffd||fffd||188||10a4||fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
            '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            lstTo.List = lhcData
            '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
'        ElseIf giBigParent = ci_BP_SETTINGS Then
        Else    '|fffd|O|fffd||fffd||309||fffd||295|\|fffd||fffd||fffd||fffd||fffd||193||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||311|I|fffd||fffd||fffd||fffd||fffd||682||1570c||fffd||fffd||fffd||fffd||fffd|
            Call mhcRestoreItem(lhcSelArr, lhcData, llSelCnt, gtActDataInfo.cItemD)
            If llSelCnt > 0 Then
                lstTo.List = lhcSelArr
                '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'                For llCnt = 0 To lstTo.ListCount - 1
'                    For llcnt2 = 0 To lstFrom.ListCount - 1
'                        If Trim(lstTo.List(llCnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
'                           Trim(lstTo.List(llCnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
'                            lstFrom.RemoveItem (llcnt2)
'                            Exit For
'                        End If
'                    Next
'                Next
                '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
                '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
             End If
        End If
                '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                For llcnt = 0 To lstTo.ListCount - 1
                    For llcnt2 = 0 To lstFrom.ListCount - 1
                        If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                           Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                            lstFrom.RemoveItem (llcnt2)
                            Exit For
                        End If
                    Next
                Next
                '2014/07/08 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
End Sub

'2014/04/21 QA|fffd|\No.118|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|O|fffd||fffd|I|fffd||fffd|l|fffd||fffd||fffd|f|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : phcList - (o) : |fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||90ca||fffd|X|fffd|g
'             phcData - (i) : API|fffd||303|f|fffd|[|fffd|^|fffd|z|fffd||fffd|
'             plCnt   - (o) : |fffd|O|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||690||fffd|
'             phcSel  - (i) : |fffd|O|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||682||303|R|fffd|[|fffd|h|fffd||314|z|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd|
'Private Sub mhcRestoreItem(ByRef phcList() As String, ByRef phcData() As String, ByRef plCnt As Long, ByRef phcSel() As String)
Private Sub mhcRestoreItem(ByRef phcList() As Variant, ByRef phcData() As Variant, ByRef plCnt As Long, ByRef phcSel() As String)
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llNum As Long
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mhcRestoreItem")
    '------------------------------------------
    plCnt = 0
    For llcnt = 0 To UBound(phcSel)
        For llcnt2 = 0 To UBound(phcData)
            '|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||9340||fffd||682||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            If phcSel(llCnt) = phcData(llCnt2, 1) Then
            If phcSel(llcnt) = phcData(llcnt2, ci_LIST_ITEM_CODE) Then
                plCnt = plCnt + 1
                Exit For
            End If
        Next
    Next
    If plCnt = 0 Then Exit Sub
    ReDim phcList(plCnt - 1, 2)
    plCnt = 0
    For llcnt = 0 To UBound(phcSel)
        For llcnt2 = 0 To UBound(phcData)
            '|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||9340||fffd||682||1228f|o|fffd||fffd||fffd||fffd|
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'            If phcSel(llCnt) = phcData(llCnt2, 1) Then
            If phcSel(llcnt) = phcData(llcnt2, ci_LIST_ITEM_CODE) Then
                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'                phcList(plCnt, 0) = phcData(llCnt2, 0)
'                phcList(plCnt, 1) = phcData(llCnt2, 1)
'                phcList(plCnt, 2) = phcData(llCnt2, 2)
                Call mListDataRowCopy(gtActDataInfo.iType, phcList, plCnt, phcData, llcnt2)
                plCnt = plCnt + 1
                Exit For
            End If
        Next
    Next
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    For llcnt = 0 To lstTo.ListCount - 1
        For llcnt2 = 0 To lstFrom.ListCount - 1
            If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
               Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                    lstFrom.RemoveItem (llcnt2)
                    Exit For
            End If
        Next
    Next
    '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mhcRestoreItem")
    '------------------------------------------
End Sub

'2014/04/21 QA|fffd|\No.118|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||751|I|fffd||12182||303|f|fffd|[|fffd|^|fffd||18d||fffd||fffd||fffd|I|fffd||12182||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|r|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblDataComp() As Boolean
    Dim lblRet As Boolean
    Dim lblTmp As Boolean
    Dim ltTmp As tDataSetInfo
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblDataComp")
    '------------------------------------------
    'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||202||fffd||10a4|
    If giBigParent = ci_BP_eSMButton Then
        lblRet = False
        GoTo EXIT_LABEL
    End If
    lblTmp = gblGetDataInfo(goBook, ltTmp, gtActDataInfo.cSheetCName)
    '|fffd||fffd||fffd||7c2||102||202||fffd||10a4|
    If lblTmp = False Then
        lblRet = False
        GoTo EXIT_LABEL
    End If
    '|fffd||fffd||fffd||7c2||102||142||202||fffd||fffd||fffd||fffd|
    lblRet = True
    If gtActDataInfo.iType <> ltTmp.iType Then  '|fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||314||fffd|r
        lblRet = False
        GoTo EXIT_LABEL
    End If
    If gtActDataInfo.iType = 1 Then '|fffd||fffd||fffd|X|fffd|g|fffd||30f||a347||fffd||fffd||fffd||314||fffd|r
        If gtActDataInfo.cSheet <> ltTmp.cSheet Then lblRet = False
        If gtActDataInfo.cBusho <> ltTmp.cBusho Then lblRet = False
        If gtActDataInfo.cShain <> ltTmp.cShain Then lblRet = False
        If gtActDataInfo.cList <> ltTmp.cList Then lblRet = False
    Else    '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||30f||a347||fffd||fffd||fffd||314||fffd|r
        If gtActDataInfo.cDataName <> ltTmp.cDataName Then lblRet = False
    End If
EXIT_LABEL:
    mblDataComp = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblDataComp")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    If gtActDataInfo.iType = 1 Then
        giDest = ci_Dest_DataListSel
    ElseIf gtActDataInfo.iType = 2 Then
        giDest = ci_Dest_DataSel
    End If
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lcSheetName As String
    Dim lcSheetCName As String
    Dim ltDummy As tDataSetInfo
    Dim lblRet As Boolean
    Dim loSheet As Excel.Worksheet
    Dim lcMsgTmp As String
    Dim lblExistSheet As Boolean
    Dim llcnt As Long
    Dim lcSheetRireki As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    '|fffd||fffd||fffd|X|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||90a9|
    If lstTo.ListCount < 1 Then
        Call MsgBox("|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||9340||fffd||682||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'
'    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|CodeName|fffd||64fe|
'    lcSheetName = Trim(cboSheet.Text)
'    lblExistSheet = gblExistSheet2(goBook, lcSheetName)
'    lcSheetRireki = Trim(cboSheetRireki.Text)   '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'    '|fffd||fffd||fffd||fffd||6d1||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd|OFF|fffd||202||75da||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||34b||fffd||18c||fffd||fffd||202||fffd|
'    If chkRireki.value = False Then
'        lcSheetRireki = ""
'    End If
'    If lblExistSheet Then
'        Set loSheet = goBook.Worksheets(lcSheetName)
'        '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
''        If gblGetDataInfo(goBook, ltDummy, loSheet.Name) And giBigParent = ci_BP_eSMButton Then '|fffd|o|fffd||34d||3c2||742||fffd||fffd||fffd|eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||102||382||a0bd||fffd||fffd|e|fffd||fffd|
''            Call MsgBox("|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||34a||fffd||fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||350||752||80aa||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd||282||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
''            GoTo EXIT_LABEL
''        End If
'        'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd||fffd||fffd||24f|o|fffd||350||752||80b5||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'        If giBigParent = ci_BP_eSMButton Then
'            If mblCheckIsDataSet(goBook, loSheet.Name, False) Then
'                GoTo EXIT_LABEL
'            End If
'        End If
'        lcSheetCName = loSheet.Name
'    Else
'        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||350|V|fffd|K|fffd||151|}|fffd||fffd||fffd||fffd||fffd||fffd|
'        '|fffd||fffd||fffd||311|O|fffd||256||fffd||fffd|O|fffd||14e|g|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'        '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
''        lblRet = gblIsSheetName(goBook, lcSheetName)
''        If lblRet = False Then
''            lcMsgTmp = "|fffd||fffd||fffd||342||fffd||fffd||a0bd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B|fffd||fffd||fffd||313|_|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||10f|C|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd|E|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd| 31 |fffd||fffd||fffd||fffd||fffd||213||fffd||fffd||142||fffd||fffd||90b1||fffd||fffd|" & vbCrLf & _
''                       "|fffd|E|fffd||fffd||fffd||30e|g|fffd|p|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|: |fffd|R|fffd||fffd||fffd||fffd| (:)|fffd|A|fffd|~|fffd|L|fffd||fffd| (\)|fffd|A|fffd|X|fffd||fffd||fffd|b|fffd|V|fffd||fffd| (/)|fffd|A|fffd|^|fffd||2544| (?)|fffd|A|fffd|A|fffd|X|fffd|^|fffd||fffd||fffd|X|fffd|N (*)|fffd|A|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| ([)|fffd|A|fffd|E|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| (])" & vbCrLf & "|fffd|E|fffd||fffd||fffd|O|fffd||fffd||fffd||d4482||142||202||fffd||fffd||fffd||fffd||fffd|"
''            Call MsgBox(lcMsgTmp, vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
''            GoTo EXIT_LABEL
''        End If
'        If mblCheckSheetName(goBook, lcSheetName, False) = False Then
'            GoTo EXIT_LABEL
'        End If
'    End If
'    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'    If lcSheetRireki <> "" Then
'        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'        If mblCheckSheetName(goBook, lcSheetRireki, True) = False Then
'            GoTo EXIT_LABEL
'        End If
'        '|fffd|o|fffd||343|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|QA|fffd|\|fffd||252||1c9||fffd||fffd|j
'        If UCase(Trim(lcSheetName)) = UCase(Trim(lcSheetRireki)) Then
'            Call MsgBox("|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||197||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B" & vbCrLf & _
'                        "|fffd||fffd||fffd||a0bc||fffd||fffd||642||202||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'            GoTo EXIT_LABEL
'        End If
'        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||342||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|QA|fffd|\|fffd||252||1c9||fffd||fffd|j
'        If mblCheckIsDataSet(goBook, lcSheetRireki, True) Then
'            GoTo EXIT_LABEL
'        End If
'    End If
'    '2014/04/15 QA|fffd|\No.131|fffd||389||fffd|
'    '|fffd||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd|
'    If UCase(lcSheetName) = UCase(cc_SHEET_ENV) Or UCase(lcSheetName) = UCase(cc_SHEET_LOG) Then
'        Call MsgBox("|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||24a||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                    "|fffd||10a4||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'        GoTo EXIT_LABEL
'    End If
'    If UCase(lcSheetRireki) = UCase(cc_SHEET_ENV) Or UCase(lcSheetRireki) = UCase(cc_SHEET_LOG) Then
'        Call MsgBox("|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||24a||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                    "|fffd||10a4||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'        GoTo EXIT_LABEL
'    End If
'    '|fffd|Z|fffd||fffd||fffd|w|fffd||80aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    If gblIsCellAddress(goBook, txtKiten.Text) = False Then
'        Call MsgBox("|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd|_|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & "A1|fffd|`|fffd||fffd||fffd||153||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'        GoTo EXIT_LABEL
'    End If
'    Dim lblMsgRet As VbMsgBoxResult
'    lblMsgRet = MsgBox("|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||241|A|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||752||80aa||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                       "|fffd||fffd||fffd||fffd||fffd||103|f|fffd|[|fffd|^|fffd||30f|o|fffd||342||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf & _
'                       "|fffd|f|fffd|[|fffd|^|fffd||30f|o|fffd||342||341|A|fffd||fffd||141|u|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd|v|fffd|u|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd|v|fffd||142||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbYesNoCancel, SYSTEM_MSG_TITLE)
'    If lblMsgRet = vbCancel Then
'        GoTo EXIT_LABEL
'    End If
'    '|fffd||fffd||fffd||fffd||fffd||702||142||303|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'    '|fffd|w|fffd||80b5||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
'    If lblExistSheet = False Then
'        Set loSheet = goBook.Worksheets.Add
'        loSheet.Name = lcSheetName
'        lcSheetCName = loSheet.Name
'        Set loSheet = Nothing
'    End If
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
    '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    With gtActDataInfo
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'        .cKiten = txtKiten.Text
'        .cSheetCName = lcSheetCName
'        .cSheetName = lcSheetName
'        .cSheetRireki = lcSheetRireki    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
'        .blRirekiSave = chkRireki.value  '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
        '|fffd||fffd||fffd||695||fffd||fffd||fffd|
        If .iType = 1 Then  '|fffd||fffd||fffd|X|fffd|g
            Erase .cItem
            ReDim .cItem(lstTo.ListCount - 1)
            '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
            Erase .cItemN
            ReDim .cItemN(lstTo.ListCount - 1)
            For llcnt = 0 To lstTo.ListCount - 1
                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'                .cItem(llCnt) = lstTo.List(llCnt, 1)
'                .cItemN(llCnt) = lstTo.List(llCnt, 2)   '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
                .cItem(llcnt) = lstTo.List(llcnt, ci_LIST_ITEM_CODE)
                .cItemN(llcnt) = lstTo.List(llcnt, ci_LIST_ITEM_NAME)
            Next
            .lItemNum = lstTo.ListCount
            Erase .cItemD
            .lItemNumD = 0
        ElseIf .iType = 2 Then  '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
            Erase .cItemD
            ReDim .cItemD(lstTo.ListCount - 1)
            '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
            Erase .cItemDN
            ReDim .cItemDN(lstTo.ListCount - 1)
            For llcnt = 0 To lstTo.ListCount - 1
                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd|
'                .cItemD(llCnt) = lstTo.List(llCnt, 1)
'                .cItemDN(llCnt) = lstTo.List(llCnt, 2)   '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
                .cItemD(llcnt) = lstTo.List(llcnt, ci_LIST_ITEM_CODE)
                .cItemDN(llcnt) = lstTo.List(llcnt, ci_LIST_ITEM_NAME)
            Next
            .lItemNumD = lstTo.ListCount
            Erase .cItem
            .lItemNum = 0
        End If
    End With
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'    Call gSetDataInfo(goBook, gtActDataInfo)
'    '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
'    gblOutputNewSheet = False
'    If lblMsgRet = vbYes Then  '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||fffd||fffd||fffd|
'        '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
'        '|fffd||fffd||fffd||fffd||fffd||150|V|fffd|K|fffd||c42c||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||242||fffd||fffd||30c||3471||fffd||fffd||fffd||10f|o|fffd||342||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||90a9||fffd|m|fffd|F|fffd||fffd||fffd||202||fffd||fffd||752||fffd||242||fffd||fffd||fffd|
'        If lblExistSheet = False Then
'            gblOutputNewSheet = True
'        End If
'        giDest = ci_Dest_CSVOutput
'    ElseIf lblMsgRet = vbNo Then   '|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd||14f|I|fffd||fffd|
'        giDest = ci_Dest_Cancel
'    Else
'        GoTo EXIT_LABEL
'    End If
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End
    '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| |fffd|t|fffd||fffd||fffd|O|fffd||1c9||fffd|
    gblFrmDataListSelItemLoad = False
    giDest = ci_Dest_DataSettings
    '|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||10f|I|fffd||fffd|
    Unload Me
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    gblOutputNewSheet = False   '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    Set loSheet = Nothing
    Call gblFuncStack.DispError
End Sub

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
''2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      : poBook      - (i) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
''             pcSheetName - (i) : |fffd|V|fffd|[|fffd|g|fffd||fffd|
''             pblIsRireki - (i) : |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||202||fffd|True
''
'' |fffd||7c2||fffd|l    : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|True
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Function mblCheckSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String, ByVal pblIsRireki As Boolean) As Boolean
'    Dim lblRet As Boolean
'    Dim lcSheetCName As String
'    Dim lcMsgTmp As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mblCheckSheetName")
'    '------------------------------------------
'    lblRet = gblIsSheetName(goBook, pcSheetName)
'    If lblRet = False Then
'        lcMsgTmp = "|fffd||fffd||fffd||342||fffd||fffd||a0bd|" & IIf(pblIsRireki, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|[|fffd|N") & "|fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B|fffd||fffd||fffd||313|_|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||10f|C|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd|E|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd| 31 |fffd||fffd||fffd||fffd||fffd||213||fffd||fffd||142||fffd||fffd||90b1||fffd||fffd|" & vbCrLf & _
'                   "|fffd|E|fffd||fffd||fffd||30e|g|fffd|p|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|: |fffd|R|fffd||fffd||fffd||fffd| (:)|fffd|A|fffd|~|fffd|L|fffd||fffd| (\)|fffd|A|fffd|X|fffd||fffd||fffd|b|fffd|V|fffd||fffd| (/)|fffd|A|fffd|^|fffd||2544| (?)|fffd|A|fffd|A|fffd|X|fffd|^|fffd||fffd||fffd|X|fffd|N (*)|fffd|A|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| ([)|fffd|A|fffd|E|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| (])" & vbCrLf & IIf(pblIsRireki, "", "|fffd|E|fffd||fffd||fffd|O|fffd||fffd||fffd||d4482||142||202||fffd||fffd||fffd||fffd||fffd|")
'        Call MsgBox(lcMsgTmp, vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'        GoTo EXIT_LABEL
'    End If
'    lblRet = True
'EXIT_LABEL:
'    mblCheckSheetName = lblRet
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblCheckSheetName")
'    '------------------------------------------
'End Function
''2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd||752||80aa||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      : poBook      - (i) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
''             pcSheetName - (i) : |fffd|V|fffd|[|fffd|g|fffd||fffd|
''             pblIsRireki - (i) : |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||202||fffd|True
''
'' |fffd||7c2||fffd|l    : |fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|True
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Function mblCheckIsDataSet(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String, ByVal pblIsRireki As Boolean) As Boolean
'    Dim lblRet As Boolean
'    Dim lcSheetCName As String
'    Dim lcMsgTmp As String
'    Dim ltDummy As tDataSetInfo
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mblCheckIsDataSet")
'    '------------------------------------------
'    lblRet = gblGetDataInfo(goBook, ltDummy, pcSheetName)
'    If lblRet Then
'        Call MsgBox(IIf(pblIsRireki, "|fffd||fffd||fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|", "|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|") & "|fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||350||752||80aa||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                    "|fffd||282||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
'        GoTo EXIT_LABEL
'    End If
'    lblRet = False
'EXIT_LABEL:
'    mblCheckIsDataSet = lblRet
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblCheckIsDataSet")
'    '------------------------------------------
'End Function
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||d3dc||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdDel_Click()
    '2014/07/02 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim ptData As Object
    Dim loJSON As Collection
    Dim llNum As Long
    Dim lhcArr() As String
    Dim llDataCnt As Long
    Dim loCnt1 As Long
    Dim loCnt2 As Long
    Dim llcnt As Long
    Dim jsObj As JsonObject
    Dim lcSheetCode As String
    Dim lhcData() As Variant
    Dim llcnt2 As Long
    Dim lcSheetDataCode As String
    Dim lcColumnCode As String
    Dim llindex As Long
    '2014/07/02 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim lltop As Long
    Dim llcnt3 As Long
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim focusData() As Long
    Dim focusCode() As Long
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdDel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdDel_Click", True)
    '------------------------------------------
    llcnt3 = 0
    lltop = -1
    If lstTo.ListCount > 0 Then
    
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        lstFrom.MultiSelect = fmMultiSelectExtended
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
        '2014/07/02 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        'lstTo.RemoveItem lstTo.ListIndex
        'End If
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        ReDim focusData(lstTo.ListCount - 1)
        ReDim focusCode(lstTo.ListCount - 1)
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        For llcnt2 = lstTo.ListCount - 1 To 0 Step -1
            If lstTo.Selected(llcnt2) = True Then
                If lltop < 0 Then
                    lltop = llcnt2
                End If
            'To|fffd||fffd||fffd|X|fffd|g|fffd||311|I|fffd||12182||303|L|fffd|[|fffd||fffd||fffd||64fe|
                lcSheetDataCode = lstTo.List(llcnt2, ci_LIST_ITEM_DATA)    '|fffd|V|fffd|[|fffd|g or |fffd|f|fffd|[|fffd|^|fffd|R|fffd|[|fffd|h
                lcColumnCode = lstTo.List(llcnt2, ci_LIST_ITEM_CODE)        '|fffd||fffd|R|fffd|[|fffd|h
                '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                focusData(llcnt3) = lcSheetDataCode
                focusCode(llcnt3) = lcColumnCode
                '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
                llcnt3 = llcnt3 + 1
            'From|fffd||fffd||fffd|X|fffd|g|fffd||253||fffd||fffd||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                For llcnt = lstFrom.ListCount - 1 To 0 Step -1
                    If lstFrom.List(llcnt, ci_LIST_ITEM_DATA) = lcSheetDataCode And lstFrom.List(llcnt, ci_LIST_ITEM_CODE) = lcColumnCode Then
                        lstFrom.RemoveItem llcnt
                    End If
                Next
             End If
        Next
        For llcnt = 0 To llcnt3 - 1
            For llcnt2 = lstTo.ListCount - 1 To 0 Step -1
                If lstTo.List(llcnt2, ci_LIST_ITEM_DATA) = focusData(llcnt) And lstTo.List(llcnt2, ci_LIST_ITEM_CODE) = focusCode(llcnt) Then
                    lstTo.RemoveItem llcnt2
                End If
            Next
        Next
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        If gtActDataInfo.iType = 1 Then
            If CboGroup.ListIndex < 0 Then GoTo EXIT_LABEL
                lcSheetCode = CboGroup.List(CboGroup.ListIndex, 1)
                Set ptData = gtJSONData(ci_Dest_DataListSelItem)
                lstFrom.Clear
                Set loJSON = ptData.Element("columnParent").Element("column")
                llNum = loJSON.Count
                If llNum < 1 Then
                    GoTo EXIT_LABEL
                End If
                lhcArr = Split("sheetCode,columnName,columnCode", ",")
                loCnt1 = 0
                For llcnt = 0 To llNum - 1
                    Set jsObj = loJSON(llcnt + 1)
                    If jsObj.value("sheetCode") = lcSheetCode Then
                        loCnt1 = loCnt1 + 1
                    End If
                    Set jsObj = Nothing
                Next
                If loCnt1 > 0 Then
                    ReDim lhcData(loCnt1 - 1, 2)
                Else
                    GoTo EXIT_LABEL
                End If
                '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
                loCnt2 = 0
                For llcnt = 0 To llNum - 1
                    Set jsObj = loJSON(llcnt + 1)
                    If jsObj.value("sheetCode") = lcSheetCode Then
                        Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                        loCnt2 = loCnt2 + 1
                    If loCnt2 >= loCnt1 Then Exit For
                    End If
                    Set jsObj = Nothing
                Next
                Set jsObj = Nothing
        ElseIf gtActDataInfo.iType = 2 Then
            Set ptData = gtJSONData(ci_Dest_DataListSelItem)
            lstFrom.Clear
            Set loJSON = ptData.Element("column")
            llNum = loJSON.Count
            If llNum < 1 Then
                GoTo EXIT_LABEL
            End If
            lhcArr = Split("datasourceCode,columnName,columnCode", ",")
            loCnt1 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                loCnt1 = loCnt1 + 1
                Set jsObj = Nothing
            Next
            If loCnt1 > 0 Then
                ReDim lhcData(loCnt1 - 1, 2)
            Else
                GoTo EXIT_LABEL
            End If
            '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
            loCnt2 = 0
            For llcnt = 0 To llNum - 1
                Set jsObj = loJSON(llcnt + 1)
                Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
                loCnt2 = loCnt2 + 1
                If loCnt2 >= loCnt1 Then Exit For
                    Set jsObj = Nothing
            Next
            Set jsObj = Nothing
        End If
        lstFrom.List = lhcData
        '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        For llcnt = 0 To lstTo.ListCount - 1
            For llcnt2 = 0 To lstFrom.ListCount - 1
                If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                   Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                    lstFrom.RemoveItem (llcnt2)
                    Exit For
                End If
            Next
        Next
        
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd||30d||fffd||fffd||682||243|t|fffd|H|fffd|[|fffd|J|fffd|X
        For llcnt = 0 To lstFrom.ListCount - 1
            For llcnt2 = 0 To llcnt3 - 1
                If lstFrom.List(llcnt, ci_LIST_ITEM_DATA) = focusData(llcnt2) And lstFrom.List(llcnt, ci_LIST_ITEM_CODE) = focusCode(llcnt2) Then
                    lstFrom.Selected(llcnt) = True
                    lstFrom.ListIndex = llcnt
                End If
            Next
        Next
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
'        If llIndex < 0 Then
'            lstFrom.Selected(0) = True
'        Else
'            lstFrom.Selected(llIndex) = True
'        End If
        
        '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd||30d||fffd||fffd||682||243|t|fffd|H|fffd|[|fffd|J|fffd|X
        If lstTo.ListCount > 0 Then
            If lltop < 0 Then
                lstTo.Selected(lltop + 1) = True
                lstTo.ListIndex = lltop + 1
            ElseIf lltop > lstTo.ListCount - 1 Then
                lstTo.Selected(lstTo.ListCount - 1) = True
                lstTo.ListIndex = lstTo.ListCount - 1
            Else
                lstTo.Selected(lltop) = True
                lstTo.ListIndex = lltop
            End If
        Else
            lstTo.ListIndex = -1
        End If
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
    
    '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd||315|\|fffd||fffd||fffd||fffd||7c2||fffd|
    Me.searchField.ForeColor = RGB(192, 192, 192)
    searchField.Text = "|fffd||fffd||fffd||682||fffd||fffd|i|fffd||835e||fffd||fffd|"
    '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
EXIT_LABEL:
'2014/07/02 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdDel_Click", True)
    '------------------------------------------
    Exit Sub
cmdDel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||1c9||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdAdd_Click()
    Dim llindex As Long
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llPos As Long
    Dim lhcFrom As Variant
    Dim lhcto As Variant
    Dim lcColumnCode As String
    Dim lcSheetDataCode As String
    '2014/07/15ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim llcnt3 As Long
    Dim llcnt4 As Long
    Dim jsObj As JsonObject
    Dim loCnt1 As Long
    Dim loCnt2 As Long
    Dim lhcArr() As String
    Dim llNum As Long
    Dim loJSON As Collection
    Dim ptData As Object
    Dim lcSheetCode As String
'    Dim focus() As Variant
    '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd||592||1c9||fffd||fffd|I|fffd||fffd||fffd||fffd||301|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd|X|fffd|g|fffd||311|I|fffd||fffd||fffd||292|u
    Dim lltop As Long
    
    Dim focusData() As Long
    Dim focusCode() As Long
    
    '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdAdd_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdAdd_Click", True)
    '------------------------------------------
    If lstFrom.ListCount > 0 Then
        '2014/04/10 QA|fffd|\No.116 |fffd||389||fffd|
'        llIndex = 0
        llindex = -1
        llcnt3 = 0
        llcnt4 = 0
        
        ReDim focusData(lstFrom.ListCount - 1)
        ReDim focusCode(lstFrom.ListCount - 1)

        '|fffd||fffd| kodera
        lstTo.MultiSelect = fmMultiSelectExtended
        
        If lstTo.ListCount > 0 Then
            '|fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||311|I|fffd||12182||303|L|fffd|[|fffd||fffd||fffd||64fe|
            '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
'            lcSheetDataCode = lstFrom.List(lstFrom.ListIndex, 0)    '|fffd|V|fffd|[|fffd|g or |fffd|f|fffd|[|fffd|^|fffd|R|fffd|[|fffd|h
'            lcColumnCode = lstFrom.List(lstFrom.ListIndex, 1)        '|fffd||fffd|R|fffd|[|fffd|h
            '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
            For llcnt2 = 0 To lstFrom.ListCount - 1
                If lstFrom.Selected(llcnt2) = True Then
                    lcSheetDataCode = lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)
                    lcColumnCode = lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)
                    
                    focusData(llcnt4) = lcSheetDataCode
                    focusCode(llcnt4) = lcColumnCode
                    llcnt4 = llcnt4 + 1
                    
'            lcSheetDataCode = lstFrom.List(lstFrom.ListIndex, ci_LIST_ITEM_DATA)    '|fffd|V|fffd|[|fffd|g or |fffd|f|fffd|[|fffd|^|fffd|R|fffd|[|fffd|h
'            lcColumnCode = lstFrom.List(lstFrom.ListIndex, ci_LIST_ITEM_CODE)        '|fffd||fffd|R|fffd|[|fffd|h
            '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
                '|fffd|E|fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||253||fffd||fffd||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                    For llcnt = lstTo.ListCount - 1 To 0 Step -1
                        '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
'                       If lstTo.List(llCnt, 0) = lcSheetDataCode And lstTo.List(llCnt, 1) = lcColumnCode Then
                        If lstTo.List(llcnt, ci_LIST_ITEM_DATA) = lcSheetDataCode And lstTo.List(llcnt, ci_LIST_ITEM_CODE) = lcColumnCode Then
                            lstTo.RemoveItem llcnt
                        End If
                    Next
                '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                End If
            Next
            '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S Start
'            llIndex = lstTo.ListIndex
            llindex = lstTo.ListCount - 1
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S End
        End If
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd|z|fffd||fffd||c42c||fffd|p|fffd||251|I|fffd||fffd||fffd||90||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g
        For llcnt = 0 To lstFrom.ListCount - 1
            If lstFrom.Selected(llcnt) = True Then
                llcnt3 = llcnt3 + 1
            End If
        Next
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l End
        lhcFrom = lstFrom.List
        llPos = 0
        'To|fffd||fffd||fffd||314|z|fffd||fffd||fffd||fffd||fffd||84bc||fffd||fffd|
        ReDim lhcto(lstTo.ListCount + llcnt3 - 1, UBound(lhcFrom, 2))
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd||1c9||fffd||fffd||fffd||303|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd|p|fffd|z|fffd||fffd||fffd||fffd||fffd||84bc||fffd||fffd|
        ReDim focus(lstTo.ListCount + llcnt - 1)
        llcnt = 0
        llcnt3 = 1
        Do Until llcnt > lstFrom.ListCount - 1
            If lstFrom.Selected(llcnt) = True Then
                If llcnt3 = 1 Then
                    lltop = llcnt
                End If
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

                '2014/04/10 QA|fffd|\No.116 |fffd||389||fffd|
                '|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||311|I|fffd||fffd||fffd||4cf||fffd||fffd||241|A|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd||151|I|fffd||12182||302||fffd||fffd||302||fffd||fffd||fffd||fffd||9066|1
                For llcnt2 = 0 To UBound(lhcto, 2)
                    '2014/07/09 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'                   lhcTo(llIndex + 1, llcnt2) = lstFrom.List(lstFrom.ListIndex, llcnt2)
                    lhcto(llindex + llcnt3, llcnt2) = lstFrom.List(llcnt, llcnt2)
                    '2014/07/09 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                Next
                '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
                '2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
                '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||696||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|
'               lhcTo(llIndex + 1, ci_LIST_ITEM_NAME) = mcAddSheetName(gtActDataInfo.iType, lhcTo(llIndex + 1, ci_LIST_ITEM_DATA), lhcTo(llIndex + 1, ci_LIST_ITEM_NAME))
                lhcto(llindex + llcnt3, ci_LIST_ITEM_NAME) = mcAddSheetName(gtActDataInfo.iType, lhcto(llindex + llcnt3, ci_LIST_ITEM_DATA), lhcto(llindex + llcnt3, ci_LIST_ITEM_NAME))
                llcnt3 = llcnt3 + 1
            End If
            llcnt = llcnt + 1
        Loop
        llcnt3 = llcnt3 - 1
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd||fffd||fffd||182||34a||fffd||fffd||242||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd|
'        For llCnt = 0 To UBound(lhcTo) - 1
        For llcnt = 0 To UBound(lhcto) - llcnt3
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
            '2014/04/10 QA|fffd|\No.116 |fffd||389||fffd|
            '|fffd|I|fffd||fffd||fffd||fffd||502||309||fffd||fffd||253||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
            For llcnt2 = 0 To UBound(lhcto, 2)
                lhcto(llcnt + llPos, llcnt2) = lstTo.List(llcnt, llcnt2)
            Next
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S Start
'            If llCnt = lstTo.ListIndex Then '|fffd||fffd|1|fffd||30d||fffd||fffd||682||fffd||fffd||5c2||fffd|
'                llPos = 1
'            End If
'2014/05/20 QA|fffd|\No.153|fffd||389||fffd| S.S End
'            If llCnt = lstTo.ListIndex Then
'                For llCnt2 = 0 To UBound(lhcTo, 2)
'                    lhcTo(llCnt, llCnt2) = lstFrom.List(lstFrom.ListIndex, llCnt2)
'                Next
'                llPos = 1
'            End If
'            For llCnt2 = 0 To UBound(lhcTo, 2)
'                lhcTo(llCnt + llPos, llCnt2) = lstTo.List(llCnt, llCnt2)
'            Next
        Next
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd|K|fffd|v|fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||7c3|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
        '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        'lstFrom.RemoveItem lstFrom.ListIndex
        '2014/06/27 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        lstTo.List = lhcto
        
'2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'|fffd|s|fffd|v|fffd||242||202||fffd||fffd||fffd||fffd||fffd||fffd||7cd||d3dc|
'        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        If gtActDataInfo.iType = 1 Then
'            If CboGroup.ListIndex < 0 Then GoTo EXIT_LABEL
'                lcSheetCode = CboGroup.List(CboGroup.ListIndex, 1)
'                Set ptData = gtJSONData(ci_Dest_DataListSelItem)
'                lstFrom.Clear
'                Set loJSON = ptData.Element("columnParent").Element("column")
'                llNum = loJSON.Count
'                If llNum < 1 Then
'                    GoTo EXIT_LABEL
'                End If
'                lhcArr = Split("sheetCode,columnName,columnCode", ",")
'                loCnt1 = 0
'                For llcnt = 0 To llNum - 1
'                    Set jsObj = loJSON(llcnt + 1)
'                    If jsObj.value("sheetCode") = lcSheetCode Then
'                        loCnt1 = loCnt1 + 1
'                    End If
'                    Set jsObj = Nothing
'                Next
'                If loCnt1 > 0 Then
'                    ReDim lhcData(loCnt1 - 1, 2)
'                Else
'                    GoTo EXIT_LABEL
'                End If
'                '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
'                loCnt2 = 0
'                For llcnt = 0 To llNum - 1
'                    Set jsObj = loJSON(llcnt + 1)
'                    If jsObj.value("sheetCode") = lcSheetCode Then
'                        Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
'                        loCnt2 = loCnt2 + 1
'                    If loCnt2 >= loCnt1 Then Exit For
'                    End If
'                    Set jsObj = Nothing
'                Next
'                Set jsObj = Nothing
'        ElseIf gtActDataInfo.iType = 2 Then
'            Set ptData = gtJSONData(ci_Dest_DataListSelItem)
'            lstFrom.Clear
'            Set loJSON = ptData.Element("column")
'            llNum = loJSON.Count
'            If llNum < 1 Then
'                GoTo EXIT_LABEL
'            End If
'            lhcArr = Split("datasourceCode,columnName,columnCode", ",")
'            loCnt1 = 0
'            For llcnt = 0 To llNum - 1
'                Set jsObj = loJSON(llcnt + 1)
'                loCnt1 = loCnt1 + 1
'                Set jsObj = Nothing
'            Next
'            If loCnt1 > 0 Then
'                ReDim lhcData(loCnt1 - 1, 2)
'            Else
'                GoTo EXIT_LABEL
'            End If
'            '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
'            loCnt2 = 0
'            For llcnt = 0 To llNum - 1
'                Set jsObj = loJSON(llcnt + 1)
'                Call mListDataRowSet(gtActDataInfo.iType, jsObj, lhcData, loCnt2)
'                loCnt2 = loCnt2 + 1
'                If loCnt2 >= loCnt1 Then Exit For
'                    Set jsObj = Nothing
'            Next
'            Set jsObj = Nothing
'        End If
'        lstFrom.List = lhcData
'
'        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
'2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l) End
        
        
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '|fffd|u|fffd|\|fffd||fffd||fffd||fffd||fffd||9340||fffd||681|v|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd|u|fffd|\|fffd||fffd||fffd||94|\|fffd||20d||fffd||fffd||681|v|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        For llcnt = 0 To lstTo.ListCount - 1
            For llcnt2 = 0 To lstFrom.ListCount - 1
                If Trim(lstTo.List(llcnt, ci_LIST_ITEM_DATA)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_DATA)) And _
                    Trim(lstTo.List(llcnt, ci_LIST_ITEM_CODE)) = Trim(lstFrom.List(llcnt2, ci_LIST_ITEM_CODE)) Then
                    lstFrom.RemoveItem (llcnt2)
                    Exit For
                End If
            Next
        Next
        
        
        '2014/04/10 QA|fffd|\No.116 |fffd||389||fffd|
'        lstTo.Selected(llIndex) = True
'        lstTo.Selected(llIndex + 1) = True
        
        '|fffd||fffd|
        'To|fffd||fffd||fffd||303|t|fffd|H|fffd|[|fffd|J|fffd|X
        For llcnt = 0 To lstTo.ListCount - 1
            For llcnt2 = 0 To llcnt4 - 1
                If lstTo.List(llcnt, ci_LIST_ITEM_DATA) = focusData(llcnt2) And lstTo.List(llcnt, ci_LIST_ITEM_CODE) = focusCode(llcnt2) Then
                    lstTo.Selected(llcnt) = True
                    lstTo.ListIndex = llcnt
                End If
            Next
        Next
                       
        'From|fffd||fffd||fffd||303|t|fffd|H|fffd|[|fffd|J|fffd|X
        If lstFrom.ListCount > 0 Then
            If lltop < 0 Then
                lstFrom.Selected(lltop + 1) = True
                lstFrom.ListIndex = lltop + 1
            ElseIf lltop > lstFrom.ListCount - 1 Then
                lstFrom.Selected(lstFrom.ListCount - 1) = True
                lstFrom.ListIndex = lstFrom.ListCount - 1
            Else
                lstFrom.Selected(lltop) = True
                lstFrom.ListIndex = lltop
            End If
        End If
        '2014/07/15 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdAdd_Click", True)
    '------------------------------------------
    Exit Sub
cmdAdd_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
''2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd| Start
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|I|fffd||fffd||fffd|v_Click|fffd|i|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|j
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub cmdRange1_Click()
'    Dim lblRet As Boolean
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo cmdRange1_Click_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdRange1_Click", True)
'    '------------------------------------------
'    lblRet = mblSelectRange(1)
'    If lblRet Then
'    End If
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdRange1_Click", True)
'    '------------------------------------------
'    Exit Sub
'cmdRange1_Click_OnErr:
'    Call gblFuncStack.DispError
'End Sub

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|u|fffd|I|fffd||fffd||fffd|v_Click|fffd|i|fffd||fffd||fffd||fffd||fffd|j
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub cmdRange2_Click()
'    Dim lblRet As Boolean
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo cmdRange2_Click_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdRange2_Click", True)
'    '------------------------------------------
'    '|fffd||fffd|\|fffd||fffd||fffd||182||fffd||fffd||102||fffd||fffd||90aa||fffd|A|fffd|O|fffd||302||fffd||fffd||7c3|R|fffd|[|fffd|h|fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
'    lblRet = mblSelectRange(2)
'    If lblRet Then
'    End If
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdRange2_Click", True)
'    '------------------------------------------
'    Exit Sub
'cmdRange2_Click_OnErr:
'    Call gblFuncStack.DispError
'End Sub

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : InputBox|fffd||242||fffd||fffd||348||351|I|fffd||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      : piKind      - (i) : 1:|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g 2:|fffd||fffd||fffd||fffd|
''             pcSheet     - (o) : |fffd|I|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
''             pcCell      - (o) : |fffd|I|fffd||fffd||fffd|Z|fffd||fffd|
''
'' |fffd||7c2||fffd|l    : |fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|True
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Function mblSelectRange(ByVal piKind As Integer) As Boolean
'    Dim lcMsg As String
'    Dim lcTitle As String
'    Dim lcDefVal As String
'    Dim loRange As Excel.Range
'    Dim lblRet As Boolean
'    Dim llRow As Long
'    Dim llCol As Long
'    Dim lcCol As String
'    Dim lcSheet As String
'    Dim lcCell As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mblSelectRange")
'    '------------------------------------------
'    lblRet = False
'    On Error Resume Next
'    'InputBox|fffd|\|fffd||fffd||fffd||fffd||341|A|fffd||202||fffd||fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||30c||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|G|fffd||fffd||102||fffd||fffd||702||fffd||fffd|iExcel VBA|fffd||303|o|fffd|O|fffd||fffd||fffd||fffd||202||fffd||fffd||301|H|fffd|H|fffd|j
'    '|fffd||fffd||fffd||302||fffd||fffd||7c1|A
'    'InputBox|fffd|\|fffd||fffd||fffd|O|fffd|A|fffd||fffd||293||fffd||fffd||30a|e|fffd|I|fffd||fffd|l|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||255||6d1||fffd||fffd||fffd||fffd||fffd|
'    '|fffd||fffd||282||fffd||fffd||fffd|xUnload|fffd||fffd||fffd||102||fffd||fffd||fffd|vbModal|fffd||14d||115|\|fffd||fffd||fffd|AUserform_Activate|fffd||155||6d1||fffd||fffd|l|fffd||1570c||fffd||fffd||fffd||fffd||fffd|
'    '|fffd|igblFrmDataListSelItemLoad|fffd||141|A|fffd||fffd||fffd|X|fffd|g/|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|I|fffd||fffd||fffd||fffd||282||fffd||fffd||75c8||fffd||fffd||fffd||fffd||fffd||195|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||602||856a||fffd||fffd||fffd||fffd|j|fffd||182||fffd||fffd||fffd|B
'    'InputBox|fffd|\|fffd||fffd|
'    'Hide|fffd||fffd||fffd||183|_|fffd||fffd||fffd|BInputBox|fffd|\|fffd||fffd||fffd||fffd||fffd||241|A|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||30e||fffd||fffd||349||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|A
'    'InputBox|fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||303|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||7c1|B|fffd|i|fffd||fffd||fffd||fffd||fffd|Excel VBA|fffd||303|o|fffd|O|fffd||fffd||fffd||fffd||202||fffd||fffd||301|H|fffd|H|fffd|j
'    '|fffd||1c2||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||282||fffd||fffd||14f||fffd||fffd||242||fffd||fffd||10d||fffd||fffd||fffd||251||794||fffd||fffd||fffd||fffd||fffd|
''    Me.Hide
'    Me.Height = 0
'    Me.Width = 0
'    Me.Top = 0
'    Me.Left = 0
'    'InputBox|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||195|\|fffd|L
'    lcTitle = IIf(piKind = 1, "", "|fffd||fffd||fffd||fffd|") & "|fffd|V|fffd|[|fffd|g" & IIf(piKind = 1, "|fffd||18a||fffd|_|fffd|Z|fffd||fffd|", "") & "|fffd||fffd|I|fffd||fffd|"
'    lcMsg = lcTitle & "|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
'    If piKind = 2 Then
'        lcMsg = lcMsg & vbCrLf & "|fffd|i|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||314|C|fffd||4c2||303|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd|uOK|fffd|v|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j"
'    End If
'    '|fffd||fffd||fffd||fffd||fffd|l|fffd||310||752||fffd|
'    If piKind = 1 Then
'        lcMsg = lcMsg & vbCrLf & "|fffd||fffd|_|fffd|Z|fffd||fffd||fffd||351|I|fffd||fffd||348||342||308||fffd||50d||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd|K|fffd|p|fffd||fffd||fffd||fffd||702||fffd||fffd|B"
'        '4/16 |fffd|C|fffd||fffd|
''        lcDefVal = cboSheet.Text & "!" & txtKiten.Text & ":" & txtKiten.Text
'        lcDefVal = cboSheet.Text
'        If Trim(lcDefVal) <> "" Then
'            '2014/04/21 QA|fffd|\No.133|fffd||389||fffd|
''            lcDefVal = lcDefVal & "!"
'            lcDefVal = "'" & lcDefVal & "'!"
'        End If
'        If gblIsCellAddress(goBook, txtKiten.Text) Then
'            lcDefVal = lcDefVal & Application.ConvertFormula(FromReferenceStyle:=xlA1, ToReferenceStyle:=xlA1, Formula:=txtKiten.Text, ToAbsolute:=xlAbsolute)
'        Else
'            lcDefVal = lcDefVal & "$A$1"
'        End If
'    Else
'        lcDefVal = cboSheetRireki.Text & "!$A$1"
'    End If
'    Set loRange = Application.InputBox(lcMsg, lcTitle, lcDefVal, , , , , 8)
'    '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'    If Err.Number > 0 Then
'        GoTo EXIT_LABEL
'    End If
'    On Error GoTo 0
'    '|fffd|V|fffd|[|fffd|g|fffd||fffd|
'    lcSheet = loRange.Parent.Name
'    '|fffd|I|fffd||fffd||348||342||30d||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'    '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||302||350||602||fffd||302||102||fffd|
'    llRow = loRange.Row
'    llCol = loRange.Column
'    lcCol = gcColNum2Txt(goBook.ActiveSheet, llCol)
'    lcCell = lcCol & CStr(llRow)
'    '|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||254||fffd||fffd|f
'    '|fffd|I|fffd||fffd||348||342||242||82||fffd||fffd||101|A|fffd||fffd||fffd||fffd||312|P|fffd||fffd|Z|fffd||fffd||fffd||302||74e|g|fffd|p|fffd||fffd||fffd||fffd|
'    '|fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||343|Z|fffd||fffd||fffd||348||342||fffd||fffd|w|fffd||80b5||fffd||202||fffd|
'    'Ctrl|fffd|L|fffd|[|fffd||182||fffd||fffd||154||fffd||454||fffd||442||154||348||351|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||302||34d||14f||fffd||fffd||314||348||342||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'    If piKind = 1 Then  '|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'        If giBigParent <> ci_BP_SETTINGS Then   '4/16|fffd|C|fffd||fffd| |fffd|o|fffd||355||3cd|X|fffd||30e||fffd||fffd||354||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||202||fffd|
'            cboSheet.Text = lcSheet
'        End If
'        txtKiten.Text = lcCell
'    Else                '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'        cboSheetRireki.Text = lcSheet
'    End If
'    lblRet = True
'EXIT_LABEL:
'    Set loRange = Nothing
'    Call mSaveControlValue
'    mblSelectRange = lblRet
'    giDest = ci_Dest_DataListSelItem
'    Unload Me
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblSelectRange")
'    '------------------------------------------
'End Function

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd||fffd||28f||fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||315||6d1||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      :
''
'' |fffd||7c2||fffd|l    :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Sub mSaveControlValue()
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mSaveControlValue")
'    '------------------------------------------
'    'InputBox|fffd|\|fffd||fffd||fffd||fffd|A|fffd||fffd||282||fffd|Unload|fffd||fffd||fffd||fffd|O|fffd||249||fffd||28f||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'    '|fffd||fffd||282||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|
'    With gtFrmDataListSelItem
'        Set .cboSheet = Me.cboSheet
'        Set .cboSheetRireki = Me.cboSheetRireki
'        Set .lstFrom = Me.lstFrom
'        Set .lstTo = Me.lstTo
'        Set .txtKiten = Me.txtKiten
'        '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd|
'        If gtActDataInfo.iType = 1 Then
'            Set .CboGroup = Me.CboGroup
'        End If
'        '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'        Set .chkRireki = Me.chkRireki
'    End With
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mSaveControlValue")
'    '------------------------------------------
'End Sub

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd||fffd||28f||fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      :
''
'' |fffd||7c2||fffd|l    :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Sub mRestoreControlValue()
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mRestoreControlValue")
'    '------------------------------------------
'    'InputBox|fffd|\|fffd||fffd||fffd||fffd||309||fffd||fffd|Unload|fffd||fffd||fffd||115|\|fffd||fffd||fffd||fffd|
'    '|fffd|e|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd||351|O|fffd||302||fffd||fffd||302||155||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'    With gtFrmDataListSelItem.cboSheet
'        cboSheet.Enabled = .Enabled
'        cboSheet.List = .List
'        cboSheet.Text = .Text
'    End With
'    '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'    With gtFrmDataListSelItem.cboSheetRireki
'        cboSheetRireki.List = .List
'        cboSheetRireki.Text = .Text
'    End With
'    '|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
'    If gtActDataInfo.iType = 1 Then
'        With gtFrmDataListSelItem.CboGroup
'            CboGroup.List = .List
'            CboGroup.Text = .Text
'        End With
'    End If
'    '|fffd||fffd||fffd|X|fffd|g|fffd||55741|i|fffd|f|fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g|fffd|O|fffd||242||fffd||fffd||202||fffd||fffd||183|_|fffd||fffd||fffd|j
'    Call mSetListColumnWidth
'    '|fffd|\|fffd||fffd||fffd||94|\|fffd||217||43283|X|fffd|g
'    With gtFrmDataListSelItem.lstFrom
'        lstFrom.List = .List
'        If lstFrom.ListCount > 0 Then
'            lstFrom.TopIndex = .TopIndex
'            If .ListIndex > -1 Then
'                lstFrom.Selected(.ListIndex) = True
'            Else
'                lstFrom.Selected(0) = True
'            End If
'        End If
'    End With
'    '|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g
'    With gtFrmDataListSelItem.lstTo
'        lstTo.List = .List
'        If lstTo.ListCount > 0 Then
'            lstTo.TopIndex = .TopIndex
'            If .ListIndex > -1 Then
'                lstTo.Selected(.ListIndex) = True
'            Else
'                lstTo.Selected(0) = True
'            End If
'        End If
'    End With
'    '|fffd||fffd|_|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X
'    With gtFrmDataListSelItem.txtKiten
'        txtKiten.Text = .Text
'    End With
'    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'    '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
'    With gtFrmDataListSelItem.chkRireki
'        chkRireki.value = .value
'        Call chkRireki_Click
'    End With
'    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'    '|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
'    Call mReleaseControlValue
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mRestoreControlValue")
'    '------------------------------------------
'End Sub
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|X|fffd|g|fffd||317||55750||752||83c8||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mSetListColumnWidth()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mSetListColumnWidth")
    '------------------------------------------
    lstFrom.ColumnWidths = "0;0;" & CStr(lstFrom.Width - 5)
    lstTo.ColumnWidths = "0;0;" & CStr(lstTo.Width - 5)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mSetListColumnWidth")
    '------------------------------------------
End Sub

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|v_Change
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub cboSheet_Change()
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo cboSheet_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "cboSheet_Change", True)
'    '------------------------------------------
'    Call mDispRenban
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboSheet_Change", True)
'    '------------------------------------------
'    Exit Sub
'cboSheet_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|v_Change
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub cboSheetRireki_Change()
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo cboSheetRireki_Change_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "cboSheetRireki_Change", True)
'    '------------------------------------------
'    Call mDispRenban
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboSheetRireki_Change", True)
'    '------------------------------------------
'    Exit Sub
'cboSheetRireki_Change_OnErr:
'    Call gblFuncStack.DispError
'End Sub

''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|E|fffd|A|fffd||515|\|fffd||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      :
''
'' |fffd||7c2||fffd|l    :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Sub mDispRenban()
'    Dim llCnt As Long
'    Dim llNum As Long
'    Dim lcSheet As String
'    Dim lcSheetR As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mDispRenban")
'    '------------------------------------------
'    If cboSheetRireki.Text <> "" Then
'        lblRenban.Caption = ""
'    Else
'        llCnt = 2
'        lcSheet = cboSheet.Text
'        '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd|+|fffd|A|fffd||502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'        Do
'            lcSheetR = lcSheet & " (" & CStr(llCnt) & ")"
'            If gblExistSheet2(goBook, lcSheetR) = False Then
'                Exit Do
'            End If
'            llCnt = llCnt + 1
'        Loop
'        lblRenban.Caption = lcSheetR
'    End If
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mDispRenban")
'    '------------------------------------------
'End Sub
'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd| End
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : JSON|fffd|f|fffd|[|fffd|^|fffd||30e|w|fffd||fffd|v|fffd|f|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||582||30a|i|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
'             phcArr - (o) : ptData|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plDataCnt   - (o) : |fffd|i|fffd|[|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|
'             pcItemName  - (i) : ptData|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|v|fffd|f|fffd|ilist or depart or employee|fffd|j
'             pcItemArr() - (i) : phcArr|fffd||24e||64fe||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|v|fffd|f|fffd|ipcItem|fffd||30e|q|fffd|v|fffd|f|fffd|j
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| String|fffd||fffd|Variant|fffd||253||fffd||fffd||fffd|
'Private Sub mGetListArrayPara(ByRef ptData As Object, ByRef phcArr() As String, ByRef plDataCnt As Long, ByVal pcItemName As String, ByRef pcItemArr() As String)
Private Sub mGetListArrayPara(ByRef ptData As Object, ByRef phcArr() As Variant, ByRef plDataCnt As Long, ByVal pcItemName As String, ByRef pcItemArr() As String)
    
    Dim loJSON As Collection
    Dim jsObj As JsonObject
    Dim llNum As Long
    Dim llcnt As Long
    Dim llcnt2 As Long

    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArrayPara")
    '------------------------------------------
    'JSON|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||317|v|fffd|f|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Set loJSON = ptData.Element(pcItemName & "Parent").Element(pcItemName)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    llNum = loJSON.Count
    If llNum > 0 Then
        ReDim phcArr(llNum - 1, UBound(pcItemArr, 1))
        '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
        For llcnt = 0 To llNum - 1
            Set jsObj = loJSON(llcnt + 1)
            For llcnt2 = 0 To UBound(pcItemArr, 1)
                phcArr(llcnt, llcnt2) = jsObj.value(pcItemArr(llcnt2))
            Next
        Next
    End If
    plDataCnt = llNum
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArrayPara")
    '------------------------------------------
End Sub
'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.12|fffd||389||fffd| End

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X_Click
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub chkRireki_Click()
'    Dim lblChecked As Boolean
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo chkRireki_Click_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "chkRireki_Click", True)
'    '------------------------------------------
'    lblChecked = chkRireki.value
'    '|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||312||fffd||fffd||fffd|
'    fraRireki.Visible = lblChecked
'    If lblChecked Then
'        Me.Height = 439.5
'        fraSettings.Height = 102
'        cmdNext.Top = 393
'    Else
'        Me.Height = 395.25
'        fraSettings.Height = 57
'        cmdNext.Top = 348
'    End If
'    cmdCancel.Top = cmdNext.Top
'    cmdBack.Top = cmdNext.Top
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "chkRireki_Click", True)
'    '------------------------------------------
'    Exit Sub
'chkRireki_Click_OnErr:
'    Call gblFuncStack.DispError
'End Sub
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| Start
'|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||28d||c42c||fffd||302||fffd||fffd||7c1|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|o|fffd||350||752||fffd||598|A|fffd||315||fffd||fffd||fffd||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|B
'2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||309||fffd||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      :
''
'' |fffd||7c2||fffd|l    :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Sub mReleaseControlValue()
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mReleaseControlValue")
'    '------------------------------------------
'    With gtFrmDataListSelItem
'        Set .cboSheet = Nothing
'        Set .cboSheetRireki = Nothing
'        Set .lstFrom = Nothing
'        Set .lstTo = Nothing
'        Set .txtKiten = Nothing
'        Set .CboGroup = Nothing
'        Set .chkRireki = Nothing
'    End With
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mReleaseControlValue")
'    '------------------------------------------
'End Sub
'2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| End

'2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_QueryClose
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_QueryClose_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_QueryClose", True)
    '------------------------------------------
    Set MyDataObject = Nothing  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_QueryClose", True)
    '------------------------------------------
    Exit Sub
UserForm_QueryClose_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/05/23 QA|fffd|\No.153|fffd||389||fffd| koiwa ENd

'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|z|fffd||fffd|f|fffd|[|fffd|^|fffd||303|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : piType       - (i) : 1:|fffd||fffd||fffd|X|fffd|g 2:|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
'             phcTo        - (o) : |fffd|f|fffd|[|fffd|^|fffd|R|fffd|s|fffd|[|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plToIndex    - (i) : |fffd|f|fffd|[|fffd|^|fffd|R|fffd|s|fffd|[|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30e|w|fffd||fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'             phcFrom      - (o) : |fffd|f|fffd|[|fffd|^|fffd|R|fffd|s|fffd|[|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plFromIndex  - (i) : |fffd|f|fffd|[|fffd|^|fffd|R|fffd|s|fffd|[|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30e|w|fffd||fffd|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mListDataRowCopy(ByVal piType As Integer, ByRef phcTo() As Variant, ByVal plToIndex As Long, ByRef phcFrom() As Variant, ByVal plFromIndex As Long)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mListDataRowCopy")
    '------------------------------------------
    '|fffd|\|fffd||fffd||fffd||94|\|fffd||217||fffd||fffd|1|fffd|s|fffd||303|f|fffd|[|fffd|^|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||693||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||30ca||fffd|X|fffd|g|fffd||257||42a92||1c9||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||202||1c2||342||fffd||fffd||30a||590||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    phcTo(plToIndex, ci_LIST_ITEM_DATA) = phcFrom(plFromIndex, ci_LIST_ITEM_DATA)
    phcTo(plToIndex, ci_LIST_ITEM_CODE) = phcFrom(plFromIndex, ci_LIST_ITEM_CODE)
    phcTo(plToIndex, ci_LIST_ITEM_NAME) = phcFrom(plFromIndex, ci_LIST_ITEM_NAME)
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mListDataRowCopy")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : JSON|fffd|f|fffd|[|fffd|^|fffd||314|z|fffd||fffd||582||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : piType       - (i) : 1:|fffd||fffd||fffd|X|fffd|g 2:|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
'             poJSObj      - (i) : API|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|XgetListColumns|fffd||702||fffd||fffd||fffd|getDataSourceColumns|fffd||301|Acolumns|fffd||209||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|JSON|fffd|f|fffd|[|fffd|^
'             phcData      - (o) : |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
'             plFromIndex  - (i) : |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||30d|s|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mListDataRowSet(ByVal piType As Integer, ByRef poJSObj As Object, ByRef phcData() As Variant, ByVal plIndex As Long)
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mListDataRowSet")
    '------------------------------------------
    If piType = 1 Then  '|fffd||fffd||fffd|X|fffd|g|fffd||30f||a347||fffd|A1|fffd||fffd||682||343|V|fffd|[|fffd|g|fffd|R|fffd|[|fffd|h
        phcData(plIndex, ci_LIST_ITEM_DATA) = poJSObj.value("sheetCode")
    Else                '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||30f||a347||fffd|A|fffd|f|fffd|[|fffd|^|fffd|R|fffd|[|fffd|h
        phcData(plIndex, ci_LIST_ITEM_DATA) = gtActDataInfo.cDataName
    End If
    '2|fffd||fffd||682||34d||fffd||fffd||682||303|R|fffd|[|fffd|h
    phcData(plIndex, ci_LIST_ITEM_CODE) = poJSObj.value("columnCode")
    '3|fffd||fffd||682||34d||fffd||fffd||696||fffd|
    phcData(plIndex, ci_LIST_ITEM_NAME) = IIf(IsNull(poJSObj.value("columnName")), "", poJSObj.value("columnName"))
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mListDataRowSet")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30d||fffd||fffd||682||303|V|fffd|[|fffd|g|fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : piType       - (i) : 1:|fffd||fffd||fffd|X|fffd|g 2:|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X
'             pcSheetCode  - (i) : |fffd|V|fffd|[|fffd|g|fffd|R|fffd|[|fffd|h
'             pcColumnName - (i) : |fffd||fffd||fffd||696||fffd|
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd|X|fffd|g|fffd||30f||a347||fffd|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||696||fffd|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mcAddSheetName(ByVal piType As Integer, ByVal pcSheetCode As Variant, ByVal pcColumnName As Variant) As Variant
    Dim lcRet As Variant
    Dim llcnt As Long
    Dim lvSheet As Variant
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mListDataRowSet")
    '------------------------------------------
    lcRet = pcColumnName
    '|fffd||fffd||fffd|X|fffd|g|fffd||30f||a347|
    If piType = 1 Then
        '|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd|
        lvSheet = CboGroup.List
        For llcnt = 0 To UBound(lvSheet, 1)
            '|fffd||fffd|v|fffd||fffd||fffd||fffd||a347||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||115||502||fffd|
            If lvSheet(llcnt, ci_GROUP_ITEM_CODE) = pcSheetCode Then
                '2014/06/25 QA|fffd|\No.183|fffd||389||fffd|
'                lcRet = pcColumnName & "|fffd|i" & lvSheet(llCnt, ci_GROUP_ITEM_NAME) & "|fffd|j"
                lcRet = pcColumnName & "|fffd|@|fffd|y" & lvSheet(llcnt, ci_GROUP_ITEM_NAME) & "|fffd|z"
            End If
        Next
    End If
    mcAddSheetName = lcRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mListDataRowSet")
    '------------------------------------------
End Function
'2014/06/13 QA|fffd|\No.157|fffd||389||fffd| End

'KeyDown|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||302||fffd||fffd||fffd|S|fffd||102||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||242||82||fffd||fffd||101|AAlt+V|fffd||702||fffd||fffd||fffd|Alt+O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'Excel|fffd||303||fffd||fffd|[|fffd|U|fffd|[|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||142||342||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||193||fffd||fffd||c0b5||fffd||202||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd||fffd||302||143|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|e|fffd||fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd|_KeyDown
''
'' @(h)
''
''-----------------------------------------------------------------------------
'Private Sub UserForm_KeyDownEvent(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
'    On Error GoTo UserForm_KeyDownEvent_OnErr
'    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
'    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_KeyDownEvent", True)
'    '------------------------------------------
'    If Shift = 4 Then
'        Select Case KeyCode
'            Case 86
'                lstFrom.SetFocus
'            Case 79
'                lstTo.SetFocus
'        End Select
'    End If
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_KeyDownEvent", True)
'    '------------------------------------------
'    Exit Sub
'UserForm_KeyDownEvent_OnErr:
'    Call gblFuncStack.DispError
'End Sub
'Private Sub cmdCancel_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub cmdAdd_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub cmdBack_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub cmdDel_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub cmdNext_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub lstFrom_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub lstTo_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub
'Private Sub txtKiten_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'    UserForm_KeyDownEvent KeyCode, Shift
'End Sub



Attribute VB_Name = "frmDataOutput"
Attribute VB_Base = "0{6DD34671-A2A3-4D3E-BDF3-C53AC331364A}{D4C920DA-14BB-4F7D-9E79-41890A1CF7E7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'-----------------------------------------------------------------------------
' @(h) frmDataOutput.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|f|fffd|[|fffd|^|fffd|o|fffd||352||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataOutput"
Private PVT_LOAD As Boolean
Private PVT_Cancel As Boolean

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    Dim lhtDLData() As tDLData
    Dim ltDataInfo As tDataSetInfo
    Dim llColNum As Long    '|fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim llMaxDataCnt As Long
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim ltData As Object
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim ltExecTime As New clsExecTime
    Dim lblOverFlow As Boolean
    Dim lcRirekiSheet As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    PVT_LOAD = True
    PVT_Cancel = False
    giDest = ci_Dest_Cancel
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    lblRet = mblDownLoadData(ltData, lhtDLData, llMaxDataCnt, llColNum, lcStatusCode, lcErrMsg)
    If lblRet = False Then
        If PVT_Cancel <> True Then
'            Call MsgBox("|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'            Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
            Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        End If
        GoTo EXIT_LABEL
    End If
    If llMaxDataCnt < 1 Then
        Call MsgBox("|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||fffd|0|fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B|fffd||fffd||fffd||fffd||fffd||1218e|~|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbExclamation, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
    Dim loSheet As Excel.Worksheet
    Dim lcSheetName As String
    Dim loBKSheet As Excel.Worksheet
    lcSheetName = gtActDataInfo.cSheetCName
    Set loSheet = goBook.Worksheets(lcSheetName)
    Set loBKSheet = gCopyAndRenameSheet(goBook, lcSheetName)
    If loBKSheet Is Nothing Then    '|fffd||fffd||fffd|s|fffd||fffd|
        Call MsgBox("|fffd|o|fffd||343|V|fffd|[|fffd|g|fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd|B", vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    loSheet.Select
       
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||fffd|
    lblMsg.Caption = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd||352||fffd||fffd||142||fffd||fffd|B"
    If mblDoEventsCancel Then
        Call mRestoreBackup(loSheet, loBKSheet)
        GoTo EXIT_LABEL
    End If
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
    ltExecTime.setStartTime
    Call gSetLog(Nothing, 1, Format(Now, "yyyyMMddhhmmss"), cc_API_ACTION_CSVOUTPUT, 0, gtActConnInfo.cID)
    '2014/10/01 |fffd||fffd||fffd|x|fffd||fffd||fffd|P|fffd||302||fffd||fffd||7d2||1c9||fffd||fffd|@|fffd|\
    Call GP_Stop_SCUPD
    lblRet = mOutputData(loSheet, lhtDLData, llMaxDataCnt, llColNum, lblOverFlow)
    Call GP_Start_SCUPD
    '2014/10/01 |fffd||fffd||fffd|x|fffd||fffd||fffd|P|fffd||302||fffd||fffd||7d2||1c9||fffd||fffd|@|fffd|\
    ltExecTime.setEndTime
    Call gSetLog(Nothing, 2, Format(Now, "yyyyMMddhhmmss"), cc_API_ACTION_CSVOUTPUT, ltExecTime.getExecTime, gtActConnInfo.cID)
    If lblRet = False Then  '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
        Call mRestoreBackup(loSheet, loBKSheet)
        GoTo EXIT_LABEL
    End If
    
    '|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||248||693||fffd||fffd||fffd||fffd||fffd|
    Application.GoTo loSheet.Range(gtActDataInfo.cKiten), False
        
    '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd|
    Dim lblMsgRet As VbMsgBoxResult
    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
    Dim lcMsgRireki As String
    
    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
'    If Trim(gtActDataInfo.cSheetRireki) <> "" Then
'        lcMsgRireki = "|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|u" & gtActDataInfo.cSheetRireki & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||24f||33d1||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
'    Else
'        lcMsgRireki = "|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||17697||fffd||fffd||182||fffd||fffd||10e|c|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H"
'    End If
''    lblMsgRet = MsgBox("|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||17697||fffd||fffd||182||fffd||fffd||10e|c|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)
'    '2014/04/15 QA|fffd|\No.117|fffd||389||fffd|
''    lblMsgRet = MsgBox(lcMsgRireki, vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)
'    lblMsgRet = mlMsgBoxW(lcMsgRireki, vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)

    '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    If gblOutputNewSheet Then   '|fffd|V|fffd|K|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||342||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||355||6ce||fffd||fffd||fffd||fffd||202||fffd|
        lblMsgRet = vbNo
        gblOutputNewSheet = False
    Else
        '|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||30f||a347||fffd||341|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||752||fffd||303|V|fffd|[|fffd|g|fffd||242||82||fffd||fffd||102||302||741|A|fffd||fffd||fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||317||fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||24f|]|fffd||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||30f||a347||fffd||341|A|fffd||64fe||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||752||80be||fffd||fffd||fffd||fffd||fffd||a347||fffd||302||741|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||30a|m|fffd|F|fffd||fffd||fffd|s|fffd||fffd|
        '|fffd|V|fffd|K|fffd||30f||a347||fffd||341|A|fffd||fffd||fffd|O|fffd||250||752||80b5||fffd||fffd||fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||24f|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|c|fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||24f|]|fffd||fffd|
        If giBigParent = ci_BP_REFRESHALL Then  '|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
            lblMsgRet = IIf(gtActDataInfo.blRirekiSave And gblRefreshAllRireki, vbYes, vbNo)    'QA|fffd|\No.176|fffd||389||fffd||fffd||fffd|gblRefreshAllRireki = True|fffd||152||fffd||182||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
        ElseIf giBigParent = ci_BP_REFRESH Then '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe|
            If gtActDataInfo.blRirekiSave Then
                '2014/06/13 QA|fffd|\No.176|fffd||389||fffd|
                '|fffd||fffd||fffd||fffd||fffd||142||343||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||255|K|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
'                If Trim(gtActDataInfo.cSheetRireki) <> "" Then
'                    lcMsgRireki = "|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|u" & gtActDataInfo.cSheetRireki & "|fffd|v|fffd|V|fffd|[|fffd|g|fffd||24f||33d1||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
'                Else
'                    lcMsgRireki = "|fffd|f|fffd|[|fffd|^|fffd|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||17697||fffd||fffd||182||fffd||fffd||10e|c|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H"
'                End If
'                lblMsgRet = mlMsgBoxW(lcMsgRireki, vbQuestion + vbYesNo, SYSTEM_MSG_TITLE)
                lblMsgRet = vbYes
            Else
                lblMsgRet = vbNo
            End If
        Else                                    '|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd|
            lblMsgRet = IIf(gtActDataInfo.blRirekiSave, vbYes, vbNo)
        End If
    End If
    
    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
    If lblMsgRet = vbYes Then
        '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30e|w|fffd||80aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        lcRirekiSheet = gtActDataInfo.cSheetRireki
        If Trim(lcRirekiSheet) <> "" Then
            '|fffd||fffd||fffd||142||257||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||14e|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If gblExistSheet2(goBook, lcRirekiSheet) Then
                loBKSheet.Move Before:=goBook.Worksheets(lcRirekiSheet)
                Call gDeleteSheet(goBook, lcRirekiSheet)   '|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||d3dc|
            End If
            '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|V|fffd|[|fffd|g|fffd||257||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
            loBKSheet.Name = gtActDataInfo.cSheetRireki
        End If
    End If
    If lblMsgRet = vbNo Then    '|fffd|c|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||34d||d3dc||fffd||fffd||fffd||fffd|
        Call gDeleteSheet(goBook, loBKSheet.Name)
    End If
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    goBook.Worksheets(gtActDataInfo.cSheetCName).Select
    
    '|fffd||fffd||fffd||fffd|
    If giBigParent <> ci_BP_REFRESHALL Then '|fffd||fffd||fffd||5c2||10d|X|fffd|V|fffd||30e||fffd||fffd||342||fffd||fffd||fffd||fffd||143||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd||fffd||202||fffd|
        '2014/04/01 QA|fffd|\ No.93|fffd||389||fffd|
        goBook.RefreshAll
        Call MsgBox("|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & _
                    IIf(lblOverFlow, vbCrLf & "Excel|fffd||30d||151||fffd|s|fffd||702||fffd||fffd||357||fffd||24e||fffd||fffd||702||80ab||fffd||fffd||202||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", ""), vbOKOnly + vbInformation, SYSTEM_MSG_TITLE)
    End If
    
EXIT_LABEL:
    gblOutputNewSheet = False   '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    Set loSheet = Nothing
    Set loBKSheet = Nothing
    PVT_LOAD = False
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    gblOutputNewSheet = False   '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    Call GP_Start_SCUPD
    PVT_LOAD = False
    If Not loBKSheet Is Nothing Then
        Call mRestoreBackup(loSheet, loBKSheet)
    End If
    Application.ScreenUpdating = True
    Set loSheet = Nothing
    Set loBKSheet = Nothing
    Call gblFuncStack.DispError
    '2014/04/28 QA|fffd|\No.144|fffd||389||fffd| |fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd||fffd||fffd||fffd||73a9||fffd||fffd||fffd||143|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Unload Me
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd|t|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblDoEventsCancel() As Boolean
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblDoEventsCancel")
    '------------------------------------------
    DoEvents
    mblDoEventsCancel = PVT_Cancel
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblDoEventsCancel")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : JSON|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^|fffd||fffd|2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||582||30a|i|fffd|[|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData       - (i) : JSON|fffd|f|fffd|[|fffd|^
'             phtDLData    - (o) : ptData|fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^("records")|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||314|z|fffd||fffd|
'             plMaxDataCnt - (o) : |fffd|f|fffd|[|fffd|^|fffd||311|S|fffd||fffd||fffd||fffd|
'             plColNum     - (o) : |fffd|f|fffd|[|fffd|^|fffd||317||fffd|
'             pcStatusCode - (o) : |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h
'             pcErrMsg     - (o) : |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblDownLoadData(ByRef ptData As Object, ByRef phtDLData() As tDLData, ByRef plMaxDataCnt As Long, ByRef plColNum As Long, ByRef pcStatusCode As String, ByRef pcErrMsg As String) As Boolean
    Dim lblRet As Boolean
    Dim llPNum As Long '|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||3cc||fffd||fffd||fffd|
    Dim llWNum As Long '|fffd|S|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Dim llindex As Long
    Dim lcHasMoreObj As String
    Dim lcRecords As String
    Dim lvRows As Variant
    '2014/04/18 QA|fffd|\ No.132|fffd||389||fffd|
'    Dim lvColumns As Variant
    Dim lvColumns() As Variant
'    Dim llColNum As Long
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim lcDelim As String   '2014/04/09 |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||389||fffd|
    Dim llDlNum As Long '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
    Dim pcData As String    '2017/08/23|fffd||542||fffd|95633|fffd||fffd||fffd|p|fffd|C|fffd|R|fffd|[|fffd||fffd||fffd|A|fffd|S|fffd|p|fffd|C|fffd|R|fffd|[|fffd||fffd||fffd||303|G|fffd|X|fffd|P|fffd|[|fffd|v
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mDownLoadData")
    '------------------------------------------
    lblRet = False
    lblMsg.Caption = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||142||fffd||fffd|B"
    '1|fffd||fffd||fffd||682||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    llindex = 1
    llWNum = 0
    llDlNum = 1 '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
    Do
        lblRet = gblDLData(cc_API_ACTION_DOWNLOAD, Format(Now, "yyyyMMddhhmmss"), ptData, pcStatusCode, pcErrMsg, llindex)
        If lblRet Then
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            llWNum = ptData.value("wholeNumber")        '|fffd|f|fffd|[|fffd|^|fffd|S|fffd||fffd||fffd||fffd|
            lblMaxNum.Caption = CStr(llWNum)
'            DoEvents
            If mblDoEventsCancel Then
                lblRet = False  '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
                GoTo EXIT_LABEL
            End If
            '|fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
'            ReDim Preserve phtDLData(llIndex - 1)
'            phtDLData(llIndex - 1).lDataCnt = 0
            ReDim Preserve phtDLData(llDlNum - 1)
            phtDLData(llDlNum - 1).lDataCnt = 0
            lcRecords = ptData.value("records") 'JSON|fffd||fffd|CSV|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
            lcDelim = ptData.value("linkDelimiter") '2014/04/09 |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||389||fffd|
            '2014/04/01 QA|fffd|\ No.101|fffd||389||fffd|
'            lvRows = Split(lcRecords, vbLf)
            lvRows = Split(lcRecords, vbCr & vbCrLf)
            If UBound(lvRows) > -1 Then
                '|fffd||14c||fffd||249||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||112||fffd|`
                If lvRows(UBound(lvRows)) = "" Then
                    ReDim Preserve lvRows(UBound(lvRows) - 1)
                End If
                '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
'                ReDim Preserve phtDLData(llIndex - 1)
'                With phtDLData(llIndex - 1)
                ReDim Preserve phtDLData(llDlNum - 1)
                With phtDLData(llDlNum - 1)
                    .lDataCnt = UBound(lvRows) + 1
                    For llcnt = 0 To UBound(lvRows)
                        '2014/04/18 QA|fffd|\ No.132|fffd||389||fffd|
'                        lvColumns = Split(lvRows(llCnt), ",")
                        Dim llDummy As Long
                        Call mblSplitData(lvRows(llcnt), lvColumns, llDummy)
                        If llindex = 1 And llcnt = 0 Then   '|fffd||14f||fffd||fffd||30d|s|fffd||317||fffd|=|fffd|f|fffd|[|fffd|^|fffd||50502||182||fffd||fffd||fffd|
                            plColNum = UBound(lvColumns, 1) + 1
                        End If
                        If llcnt = 0 Then
                            ReDim .cData(UBound(lvRows, 1), plColNum - 1)
                        End If
                        For llcnt2 = 0 To UBound(lvColumns)
                            '2014/04/01 QA|fffd|\ No.101|fffd||389||fffd|
'                            .cData(llCnt, llCnt2) = lvColumns(llCnt2)
                            '2014/04/09 |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||389||fffd|
'                            .cData(llCnt, llCnt2) = mvConvVal(lvColumns(llCnt2))

                            '20170823 add start |fffd||542||fffd|95633
                            '|fffd||64ea||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd|S|fffd|p|fffd|C|fffd|R|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd|p|fffd|C|fffd|R|fffd|[|fffd||fffd||fffd||fffd|"'"|fffd||143|G|fffd|X|fffd|P|fffd|[|fffd|v|fffd||fffd||fffd||fffd|
                            pcData = Left(lvColumns(llcnt2), 1)
                            If pcData = "=" Or pcData = "|fffd||fffd|" Then
                                lvColumns(llcnt2) = "'" & lvColumns(llcnt2)
                            End If
                            '20170823 add end |fffd||542||fffd|95633
                            
                            .cData(llcnt, llcnt2) = mvConvVal(lvColumns(llcnt2), lcDelim)
                        Next
                    Next
                End With
            End If
            '|fffd||fffd||fffd||fffd||fffd||3c2||74c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
            llPNum = ptData.value("processedNumber")    '|fffd||fffd||fffd||fffd||fffd||3cc||fffd||fffd||fffd|
            lblNum.Caption = CStr(llPNum)
            '|fffd|\|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|
            If mblDoEventsCancel Then
                lblRet = False  '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
                GoTo EXIT_LABEL
            End If
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
            lcHasMoreObj = ptData.value("hasMoreObjects")
            If lcHasMoreObj <> "1" Then '|fffd|S|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|
                Exit Do
            End If
            llindex = llPNum + 1
            llDlNum = llDlNum + 1   '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
        Else
            GoTo EXIT_LABEL
        End If
    Loop
    lblRet = True
EXIT_LABEL:
    plMaxDataCnt = llWNum
    mblDownLoadData = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mDownLoadData")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : CSV|fffd|f|fffd|[|fffd|^|fffd||303|R|fffd||fffd||fffd|o|fffd|[|fffd|g
'
' |fffd||fffd||fffd||fffd|      : pcData       - (o) : API|fffd||14e||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'             pcDelim      - (i) : |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd|p|fffd||30b||fffd||602||8576||fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
'
' @(h)
'
'--------------------------------------------------------------------------------
Public Function mvConvVal(ByVal pcData As Variant, ByVal pcDelim As String) As Variant
    Dim lcData As Variant
    Dim lvTmp As Variant
    Dim lcURL As String
    '2014/05/23 QA|fffd|\No.164|fffd||389||fffd|
    Const LEN_MAX As Long = 8203
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mvConvVal")
    '------------------------------------------
    '|fffd|O|fffd||fffd||303|_|fffd|u|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    lcData = pcData
    If Left(lcData, 1) = """" Then
        lcData = Mid(lcData, 2)
    End If
    If Right(lcData, 1) = """" Then
        lcData = Left(lcData, Len(lcData) - 1)
    End If

    '2014/04/09 |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||389||fffd|
    If pcDelim <> "" Then
        If InStr(1, lcData, pcDelim) > 1 Then    '2|fffd||fffd||fffd||fffd||fffd||688||20d|~|fffd||24b||fffd||602||8576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            '2014/04/24 QA|fffd|\No.138|fffd||389||fffd|
            '|fffd|S|fffd|p/|fffd||fffd||fffd|p|fffd||303|_|fffd|u|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|G|fffd|X|fffd|P|fffd|[|fffd|v|fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd||fffd||fffd||142||202||fffd||fffd||183|G|fffd||fffd||fffd|[No.1004|fffd||303|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|
            Dim llcnt As Long
            Dim lcDataTmp As String
            Dim lcMid As String
            lcDataTmp = ""
            For llcnt = 1 To Len(lcData)
                lcMid = Mid(lcData, llcnt, 1)
                If lcMid = """" Or lcMid = Chr(&H8168) Then
                    lcMid = """" & lcMid
                End If
                lcDataTmp = lcDataTmp & lcMid
            Next
            lcData = lcDataTmp
            
            lvTmp = Split(lcData, pcDelim)
            lcURL = gtActConnInfo.cURL
            If Right(lcURL, 1) = "/" Then lcURL = Left(lcURL, Len(lcURL) - 1)
            '2014/05/23 QA|fffd|\No.164|fffd||389||fffd|
            '|fffd||fffd||fffd||fffd||fffd||fffd|255|fffd||fffd||fffd||fffd||fffd||150||602||fffd|
'            lcData = "=HYPERLINK(""" & lcURL & lvTmp(1) & """,""" & lvTmp(0) & """)"
            lcData = "=HYPERLINK(""" & Left(lcURL & lvTmp(1), 255) & """,""" & Left(lvTmp(0), 255) & """)"
        End If
    End If

    '2014/05/23 QA|fffd|\No.164|fffd||389||fffd|
    '8203|fffd||fffd||fffd||fffd||fffd||12d02||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||20d|~|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If Len(lcData) > LEN_MAX Then
        lcData = Left(lcData, LEN_MAX)
    End If

    mvConvVal = lcData
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mvConvVal")
    '------------------------------------------
End Function


'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : 2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||303|V|fffd|[|fffd|g|fffd||582||30f|o|fffd||34f||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poSheet      - (o) : |fffd|o|fffd||350||fffd|V|fffd|[|fffd|g
'             phtDLData    - (o) : ptData|fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|f|fffd|[|fffd|^("records")|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||314|z|fffd||fffd|
'             plMaxDataCnt - (o) : |fffd|f|fffd|[|fffd|^|fffd||311|S|fffd||fffd||fffd||fffd|
'             plColNum     - (o) : |fffd|f|fffd|[|fffd|^|fffd||317||fffd|
'             pblOverFlow  - (o) : Excel|fffd||30d||151||fffd|s|fffd|E|fffd||42a42||fffd||342||742||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mOutputData(ByRef poSheet As Excel.Worksheet, ByRef phtDLData() As tDLData, ByVal plMaxDataCnt As Long, ByRef plColNum As Long, ByRef pblOverFlow As Boolean) As Boolean
    Dim llcnt As Long
    Dim lblRet As Boolean
    Dim llKitenCol As Long
    Dim llKitenRow As Long
    Dim llKitenCol2 As Long
    Dim llKitenRow2 As Long
    Dim llMaxRows As Long
    Dim llMaxCols As Long
    Dim llPNum As Long
    Dim llColAlpha1 As String
    Dim llColAlpha2 As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mOutputData")
    '------------------------------------------
    lblMsg.Caption = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd||352||fffd||fffd||142||fffd||fffd|B"
    '2014/05/19 QA|fffd|\No.162|fffd||389||fffd|
    '|fffd|t|fffd|B|fffd||fffd||fffd|^|fffd||310||752||80aa||fffd||fffd||fffd||fffd||192|l|fffd||fffd||fffd||752||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||7c3|t|fffd|B|fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'http://xls.seesaa.net/article/24565455.html
    On Error Resume Next    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|0|fffd||142||fffd||fffd||10c||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||302||fffd||fffd||fffd|
    If poSheet.FilterMode Then
        poSheet.ShowAllData
    End If
    On Error GoTo 0
    '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||354||348||342||302||742||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'    poSheet.Cells.ClearContents
    Dim lcClearRange As String
    Dim lblClearRange As Boolean
    lcClearRange = gtActDataInfo.cDataRange
    If Trim(lcClearRange) <> "" Then
        '|fffd||3c2||212|l|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||75b3||fffd||fffd||fffd||fffd||fffd||fffd|
        lblClearRange = gblIsCellAddress(goBook, lcClearRange)
        If lblClearRange Then
            poSheet.Range(lcClearRange).ClearContents
        End If
    End If
    
    llPNum = 0
    lblRet = False
    pblOverFlow = False
    '|fffd||151||fffd|s|fffd||50502||34c||152||fffd||312||8414||fffd||142||202||fffd||fffd|V|fffd|[|fffd|g|fffd||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd|
    llMaxRows = poSheet.Rows.Count
    llMaxCols = poSheet.Columns.Count
    '|fffd||fffd|_|fffd||fffd||fffd||fffd|s|fffd||30a|J|fffd|n|fffd||292|u|fffd||310||752||fffd|
    llKitenRow = poSheet.Range(gtActDataInfo.cKiten).Row
    llKitenRow2 = llKitenRow
    '|fffd||fffd|_|fffd||fffd||fffd||fffd||317||fffd||303|f|fffd|[|fffd|^|fffd|o|fffd||354||348||342||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    llKitenCol = poSheet.Range(gtActDataInfo.cKiten).Column
    llKitenCol2 = llKitenCol + plColNum - 1
    If llKitenCol2 > llMaxCols Then
        llKitenCol2 = llMaxCols
        pblOverFlow = True
    End If
'    lblMaxNum.Caption = CStr((UBound(phtDLData) + 1) * llDlNum)    '|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||302||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||3c2||202||fffd||fffd||242||fffd||fffd||fffd|
    lblNum.Caption = 0
    For llcnt = 0 To UBound(phtDLData)
        If llKitenRow <= llMaxRows Then
            '|fffd||151||fffd|s|fffd||12d02||fffd||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||34f|o|fffd||342||fffd||fffd||202||fffd|
            If phtDLData(llcnt).lDataCnt > 0 Then
                llKitenRow2 = llKitenRow + UBound(phtDLData(llcnt).cData, 1)
                If llKitenRow2 > llMaxRows Then
                    llKitenRow2 = llMaxRows
                    pblOverFlow = True
                End If
                llColAlpha1 = gcColNum2Txt(poSheet, llKitenCol)
                llColAlpha2 = gcColNum2Txt(poSheet, llKitenCol2)
                poSheet.Range(llColAlpha1 & llKitenRow & ":" & llColAlpha2 & llKitenRow2).value = phtDLData(llcnt).cData
                llKitenRow = llKitenRow2 + 1
            End If
        End If
        llPNum = llPNum + phtDLData(llcnt).lDataCnt
        lblNum.Caption = llPNum '(llCnt + 1) * llDataNum
        If mblDoEventsCancel Then
            GoTo EXIT_LABEL
        End If
    Next
    '2014/04/12 QA|fffd|\No.115|fffd||389||fffd|
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||354||348||342||fffd||fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With gtActDataInfo
        .cDataRange = .cKiten & ":" & llColAlpha2 & llKitenRow2
        Call gSetDataInfo(goBook, gtActDataInfo)
    End With
    lblRet = True
EXIT_LABEL:
    mOutputData = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mOutputData")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : 2|fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||303|V|fffd|[|fffd|g|fffd||582||30f|o|fffd||34f||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poSheet      - (o) : |fffd|o|fffd||350||fffd|V|fffd|[|fffd|g
'             poBKSheet    - (o) : |fffd|o|fffd||351|O|fffd||243|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|i|fffd|R|fffd|s|fffd|[|fffd|j|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mRestoreBackup(ByRef poSheet As Excel.Worksheet, ByRef poBKSheet As Excel.Worksheet) As Boolean
    Dim lcName As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mOutputData")
    '------------------------------------------
    '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd|A|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd||302||fffd||fffd||302||242||fffd||fffd||fffd|
    '2014/05/07 QA|fffd|\No.147|fffd||389||fffd|
    '|fffd||fffd||fffd||256||7c2||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||50c||fffd||fffd||24d|s|fffd||fffd||fffd||302||311||389||fffd|
    poBKSheet.Move after:=poSheet
    
    lcName = poSheet.Name
    Call gDeleteSheet(goBook, poSheet.Name)
    poBKSheet.Name = lcName
    poBKSheet.Select
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mOutputData")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    Dim lblRet As VbMsgBoxResult
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    lblRet = MsgBox("|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd||352||fffd||fffd||142||fffd||fffd|B" & vbCrLf & "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbYesNo + vbExclamation, SYSTEM_MSG_TITLE)
    If lblRet = vbYes Then
        '|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        PVT_Cancel = True
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_QueryClose
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_QueryClose_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_QueryClose", True)
    '------------------------------------------
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||341|~|fffd|{|fffd|^|fffd||fffd||fffd||155||82||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
    If PVT_LOAD And CloseMode = vbFormControlMenu Then
        Cancel = True
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_QueryClose", True)
    '------------------------------------------
    Exit Sub
UserForm_QueryClose_OnErr:
    Call gblFuncStack.DispError
End Sub

'2014/04/18 QA|fffd|\ No.132|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : Split|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcStr     (i) - |fffd||fffd||fffd||fffd||fffd||fffd|
'             phcRet    (i) - split|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||314|z|fffd||fffd|
'             piColCnt  (i) - phcRet|fffd||317|v|fffd|f|fffd||fffd|
'
' |fffd||7c2||fffd|l    :
'
' |fffd||fffd||fffd|l      : http://excel-ubara.com/EXCEL/EXCEL111.html|fffd||fffd||fffd|Q|fffd|l|fffd||242||fffd||fffd||10d||c42c|
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mblSplitData(ByVal pcStr As String, ByRef phcRet() As Variant, ByRef piColCnt As Long)
    Dim lblRet As Boolean
    Dim lcTmp As String
    Dim liChrCnt As Long
    Dim llQuate As Long
    Dim lcNowChr As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblSplitData")
    '------------------------------------------
    piColCnt = 0
    For liChrCnt = 1 To Len(pcStr)
        lcNowChr = Mid(pcStr, liChrCnt, 1)
        Select Case lcNowChr
            Case "," '|fffd|u"|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||602||fffd|A|fffd||f414||fffd||202||70bd||fffd||fffd||fffd||315||fffd||fffd||fffd|
                If llQuate Mod 2 = 0 Then
                    ReDim Preserve phcRet(piColCnt)
                    phcRet(piColCnt) = Replace(lcTmp, """", "")
                    piColCnt = piColCnt + 1
                    lcTmp = ""
                Else
                    lcTmp = lcTmp & lcNowChr
                End If
            Case """"  '|fffd|u"|fffd|v|fffd||303|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||182||fffd|
                llQuate = llQuate + 1
                lcTmp = lcTmp & lcNowChr
            Case Else
                lcTmp = lcTmp & lcNowChr
        End Select
    Next
    '|fffd||14f|I|fffd||fffd||30f||fffd||fffd||fffd|
    If lcTmp <> "" Then
        ReDim Preserve phcRet(piColCnt)
        phcRet(piColCnt) = Replace(lcTmp, """", "")
        piColCnt = piColCnt + 1
    End If
    lcTmp = ""
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblSplitData")
    '------------------------------------------
End Sub
Attribute VB_Name = "frmDataSel"
Attribute VB_Base = "0{3B0E810B-F690-4948-81F5-0498EBA416BA}{45564857-D637-462F-91BA-63F23C175324}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) frmDataSel.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataSel"
Private mhcData() As String    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.11|fffd||389||fffd|

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    Dim llcnt As Long
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    
    Dim llShuruiWidth As Long '|fffd|u|fffd||fffd||781|v|fffd||fffd||315||fffd|
    Dim llAlpha As Long
    Dim llListWidth As Long
    '|fffd||fffd||fffd||fffd||fffd|F0pt
    '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|R|fffd|[|fffd|h|fffd|F0pt
    '|fffd|^|fffd|C|fffd|v|fffd|F0pt
    '|fffd||fffd||fffd|O|fffd||55741|F(|fffd||fffd||fffd|X|fffd|g|fffd||fffd| - llShuruiWidth) - |fffd||fffd|
    '|fffd||fffd||797||55741|FllShuruiWidth
    '|fffd||fffd||fffd||fffd||fffd||55741|F(|fffd||fffd||fffd|X|fffd|g|fffd||fffd| + llShuruiWidth) + |fffd||fffd|
    llShuruiWidth = 80
    '2014/04/10 QA|fffd|\No.119 |fffd||389||fffd|
'    llAlpha = 25
    llAlpha = 0
    llListWidth = lstData.Width - 8
    lstData.ColumnWidths = "0;0;0;" & ((lstData.Width - llShuruiWidth) / 2 - llAlpha) & ";" & llShuruiWidth & ";" & ((llListWidth - llShuruiWidth) / 2 + llAlpha)
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd|x|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd|
    lblKeishiki.Left = lstData.Left + ((llListWidth - llShuruiWidth) / 2 - llAlpha) + lstData.Font.Size
    lblSetsumei.Left = lblKeishiki.Left + llShuruiWidth
    
    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||282||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Call mGetListArray(gtJSONData(ci_Dest_DataSel))
    
    '|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    If lstData.ListCount > 0 Then
        lstData.Selected(0) = True
        '|fffd|O|fffd||251|I|fffd||fffd||142||fffd||fffd||fffd||fffd||302||fffd||fffd||111|I|fffd||fffd|
        With gtActDataInfo
            If Val(.cDataName) > 0 Then
                For llcnt = 0 To lstData.ListCount - 1
                    If lstData.List(llcnt, 1) = Val(.cDataName) Then
                        lstData.ListIndex = llcnt
                        Exit For
                    End If
                Next
            End If
        End With
    End If
    
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Call GP_Start_SCUPD
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    giDest = ci_Dest_DataTypeSelect
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||581|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.11|fffd||389||fffd| Start
    If lstData.ListCount < 1 Or lstData.ListIndex < 0 Then
        Call MsgBox("|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Exit Sub
    End If
    
    '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
    Dim ltTmp As tDataSetInfo
    ltTmp = gtActDataInfo
    
    With gtActDataInfo
        .cDataName = lstData.List(lstData.ListIndex, 1)
        '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
        .cDataNameN = lstData.List(lstData.ListIndex, 3)
    End With
    '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||242||82||fffd||fffd||102||30d||fffd||fffd||682||fffd|API|fffd||14e||64fe|
    Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    lblRet = gblDLData(cc_API_ACTION_GETDATASOURCECOLUMNS, Format(Now, "yyyyMMddhhmmss"), gtJSONData(ci_Dest_DataListSelItem), lcStatusCode, lcErrMsg)
    Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    If lblRet Then
        giDest = ci_Dest_DataListSelItem
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd| |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'        gblFrmDataListSelItemLoad = False    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
        giSmallParent = ci_Dest_DataSel  '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '2014/06/05 QA|fffd|\No.152-2|fffd|`4|fffd||389||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd||1c9||fffd||fffd||fffd||fffd|A|fffd||fffd|x|fffd|o|fffd||343|f|fffd|[|fffd|^|fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||80b5||fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||310||752||fffd||fffd||282||fffd|\|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||309||fffd||282||256||7c2||fffd||fffd||102||fffd||fffd||102||fffd||fffd||fffd|A|fffd||fffd||fffd||93||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||43283|X|fffd|g|fffd||1570c||fffd||fffd||fffd||fffd||fffd|
        gblDataComp = (gtActDataInfo.iType = ltTmp.iType And _
                       gtActDataInfo.cDataName = ltTmp.cDataName And _
                       gtActDataInfo.lItemNumD > 0)
        Unload Me
    Else
'        Call MsgBox("|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||251||382||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||682||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'        Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.11|fffd||389||fffd| Start
''-----------------------------------------------------------------------------
'' @(f)
''
'' |fffd|@|fffd|\      : |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
''
'' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
''
'' |fffd||7c2||fffd|l    :
''
'' @(h)
''
''--------------------------------------------------------------------------------
'Private Sub mGetListArray(ByRef ptData As Object)
'    Dim llCnt As Long
'    Dim llNum As Long
'    Dim loJSON As Collection
'    Dim jsObj As Object 'JsonObject
'    Dim lhcData() As String
'    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArray")
'    '------------------------------------------
'    Set loJSON = ptData.Element("datasourceParent").Element("datasource")
'    lstData.Clear
'    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
'    llNum = loJSON.Count
'    If llNum < 1 Then
'        GoTo EXIT_LABEL
'    End If
'    ReDim lhcData(llNum - 1, 5)
'    '|fffd|e|fffd|v|fffd|f|fffd||314|z|fffd||50502||30e||64fe|
'    For llCnt = 0 To llNum - 1
'        Set jsObj = loJSON(llCnt + 1)
'        lhcData(llCnt, 0) = jsObj.value("belongCode")       '|fffd||fffd||fffd||fffd|
'        lhcData(llCnt, 1) = jsObj.value("datasourceCode")   '|fffd|R|fffd|[|fffd|h
'        lhcData(llCnt, 2) = jsObj.value("type")             '|fffd|^|fffd|C|fffd|v
'        lhcData(llCnt, 3) = jsObj.value("datasourceName")   '|fffd||fffd||fffd|O
'        lhcData(llCnt, 4) = "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X"                  '|fffd||fffd||fffd||fffd|
'        lhcData(llCnt, 5) = jsObj.value("explanation")      '|fffd||fffd||fffd||fffd|
'    Next
'    lstData.ColumnCount = UBound(lhcData, 2) + 1
'    lstData.List = lhcData
'EXIT_LABEL:
'    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
'    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArray")
'    '------------------------------------------
'End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : ptData - (i) : JSON|fffd|f|fffd|[|fffd|^
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mGetListArray(ByRef ptData As Object)
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llNum As Long
    Dim loJSON As Collection
    Dim jsObj As Object 'JsonObject
    Dim lhcData() As String
    Dim lcActCategory As String
'    Dim lcActCode As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
    'Private|fffd|z|fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
    Set loJSON = ptData.Element("datasourceParent").Element("datasource")
    lstData.Clear
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    llNum = loJSON.Count
    If llNum < 1 Then
        GoTo EXIT_LABEL
    End If
    ReDim mhcData(llNum - 1, 5)
    
    lcActCategory = ""
'    lcActCode = ""
    For llcnt = 0 To llNum - 1
        Set jsObj = loJSON(llcnt + 1)
        mhcData(llcnt, 0) = jsObj.value("belongCode")       '|fffd||fffd||fffd||fffd||fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|R|fffd|[|fffd|h
        mhcData(llcnt, 1) = jsObj.value("datasourceCode")   '|fffd|R|fffd|[|fffd|h
        mhcData(llcnt, 2) = jsObj.value("type")             '|fffd|^|fffd|C|fffd|v
        mhcData(llcnt, 3) = jsObj.value("datasourceName")   '|fffd||fffd||fffd|O
        mhcData(llcnt, 4) = "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X"                  '|fffd||fffd||fffd||fffd|
        mhcData(llcnt, 5) = jsObj.value("explanation")      '|fffd||fffd||fffd||fffd|
        '|fffd|O|fffd||fffd|I|fffd||fffd|l|fffd||202||70bb||fffd||303|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        If Trim(gtActDataInfo.cDataName) <> "" And gtActDataInfo.cDataName = jsObj.value("datasourceCode") Then
            lcActCategory = jsObj.value("belongCode")
'            lcActCode = jsObj.value("datasourceCode")
        End If
    Next
    lstData.ColumnCount = UBound(mhcData, 2) + 1
    
    '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    Set loJSON = ptData.Element("categoryParent").Element("category")
    cboCategory.Clear
    llNum = loJSON.Count
    If llNum > 0 Then
        ReDim lhcData(llNum - 1, 1)
        For llcnt = 0 To llNum - 1
            Set jsObj = loJSON(llcnt + 1)
            lhcData(llcnt, 1) = jsObj.value("categoryCode")
            lhcData(llcnt, 0) = jsObj.value("categoryName")
        Next
        cboCategory.ColumnCount = 2
        cboCategory.List = lhcData
    End If
    Set loJSON = Nothing
    
    '|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    If lcActCategory <> "" Then '|fffd|O|fffd||fffd|\|fffd||fffd|
        For llcnt = 0 To cboCategory.ListCount - 1
            If cboCategory.List(llcnt, 1) = lcActCategory Then
                cboCategory.ListIndex = llcnt   '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd|I|fffd||fffd|
'                For llCnt2 = 0 To lstData.ListCount - 1
'                    If lstData.List(llCnt2, 1) = lcActCode Then '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd|I|fffd||fffd|
'                        lstData.ListIndex = llCnt2
'                    End If
'                Next
            End If
        Next
    Else
        If cboCategory.ListCount > 0 Then
            cboCategory.ListIndex = 0
        End If
    End If
    
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mGetListArray")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|v_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboCategory_Change()
    Dim llcnt As Long
    Dim llNum As Long
    Dim lhcData() As String
    Dim lcCode As String
    Dim llSel As Long
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboCategory_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboCategory_Change_OnErr", True)
    '------------------------------------------
    lstData.Clear
    If cboCategory.ListCount < 1 Or cboCategory.ListIndex < 0 Then Exit Sub
    llNum = 0
    lcCode = cboCategory.List(cboCategory.ListIndex, 1)
    For llcnt = 0 To UBound(mhcData, 1) '|fffd|I|fffd||fffd||fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        If lcCode = mhcData(llcnt, 0) Then
            llNum = llNum + 1
        End If
    Next
    llSel = -1
    If llNum > 0 Then
        ReDim lhcData(llNum - 1, 5)
        llNum = 0
        For llcnt = 0 To UBound(mhcData, 1)
            If lcCode = mhcData(llcnt, 0) Then
                lhcData(llNum, 0) = mhcData(llcnt, 0)   '|fffd||fffd||fffd||fffd|
                lhcData(llNum, 1) = mhcData(llcnt, 1)   '|fffd|R|fffd|[|fffd|h
                lhcData(llNum, 2) = mhcData(llcnt, 2)   '|fffd|^|fffd|C|fffd|v
                lhcData(llNum, 3) = mhcData(llcnt, 3)   '|fffd||fffd||fffd|O
                lhcData(llNum, 4) = mhcData(llcnt, 4)   '|fffd||fffd||fffd||fffd|
                lhcData(llNum, 5) = mhcData(llcnt, 5)   '|fffd||fffd||fffd||fffd|
                If Trim(gtActDataInfo.cDataName) <> "" And gtActDataInfo.cDataName = mhcData(llcnt, 1) Then
                    llSel = llNum
                End If
                llNum = llNum + 1
            End If
        Next
        lstData.List = lhcData
        If llSel > -1 Then
            lstData.ListIndex = llSel
        Else
            lstData.ListIndex = 0
        End If
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboCategory_Change", True)
    '------------------------------------------
    Exit Sub
cboCategory_Change_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.11|fffd||389||fffd| End

Attribute VB_Name = "frmDataSettings"
Attribute VB_Base = "0{8E11E5F6-A141-44A6-9D24-9BC0ED15E4DD}{A8863E90-1947-475C-A485-4B57B28A8EE8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) frmDataSettings.frm                   Ver 1.00 ( 2014.6.5 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||691|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataSettings"
Private PVT_FORM_HEIGHT As Long

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    Dim llcnt As Long
    Dim loSheet As Excel.Worksheet
    Dim ltDummy As tDataSetInfo
    Dim llSheetCnt As Long
    Dim llSheet() As String
    Dim llSelIndex As Long
    Dim lcCell As String
    Dim loDataObj As Object
    Dim lblDLDisp As Boolean
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim lblUDCan As Boolean
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim lblUDDate   As Boolean
    '|fffd||fffd||294||fffd|\|fffd||fffd||fffd||fffd||fffd||683|J|fffd|E|fffd||fffd||fffd|^
    Dim dispCnt As Integer
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|J|fffd|E|fffd||fffd||fffd|^|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    dispCnt = 0
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
   
    '|fffd|u|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd|
    lblDLDisp = False
    Set loDataObj = gtJSONData(ci_Dest_DataListSelItem)
    If loDataObj.HasKey("dispDownloadProduct") Then
        lblDLDisp = (Val(loDataObj.value("dispDownloadProduct")) <> 0)
    End If
    Set loDataObj = Nothing
    chkDLProduct.Visible = lblDLDisp
    '|fffd|\|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||311||50ab||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If lblDLDisp Then
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        PVT_FORM_HEIGHT = 256.75
        PVT_FORM_HEIGHT = 281.25
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    Else
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        PVT_FORM_HEIGHT = 239
'        fraMain.Top = 47
        PVT_FORM_HEIGHT = 261.75
        
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        fraMain.Top = 66
        dispCnt = dispCnt + 1
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        chkUDList.Top = 49
        '2014/07/28 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If

    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd|
    lblUDCan = False
    Set loDataObj = gtJSONData(ci_Dest_DataListSelItem)
    If loDataObj.HasKey("canUpdateList") Then
        lblUDCan = (Val(loDataObj.value("canUpdateList")) <> 0)
    End If
    Set loDataObj = Nothing
    chkUDList.Visible = lblUDCan
    '|fffd|\|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd||143|t|fffd|H|fffd|[|fffd||fffd||fffd||311||50ab||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If lblUDCan Then
        
    Else
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        PVT_FORM_HEIGHT = PVT_FORM_HEIGHT - 12.75
'        fraMain.Top = fraMain.Top - 17.75
        dispCnt = dispCnt + 1
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd|
    lblUDDate = False
    Set loDataObj = gtJSONData(ci_Dest_DataListSelItem)
    If loDataObj.HasKey("canUpdate") Then
        lblUDDate = (Val(loDataObj.value("canUpdate")) <> 0)
    End If
    
    Set loDataObj = Nothing
    chkUDData.Visible = lblUDDate
    
    '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30d||fffd||fffd|W|fffd||292|u
    If lblUDDate Then
        PVT_FORM_HEIGHT = PVT_FORM_HEIGHT + 5
    Else
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        dispCnt = dispCnt + 1
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
    
    '|fffd||fffd||295|\|fffd||fffd||fffd||fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd|
    If lblUDCan = False And lblUDDate = False Then
        PVT_FORM_HEIGHT = PVT_FORM_HEIGHT - 12.75
    End If
    
    '|fffd||fffd||28d||fffd||fffd|W|fffd||752||fffd|
    '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    chkUDData.Top = chkUDData.Top - dispCnt * 17.75
    '|fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||24f|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|c|fffd||fffd||fffd|v|fffd|O|fffd||fffd||fffd|[|fffd|v
    fraMain.Top = fraMain.Top - dispCnt * 17.75
    
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2014/04/14 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.3|fffd||389||fffd|
    'InputBox|fffd||242||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||315||fffd||fffd|A|fffd||30e||fffd||fffd||341|A|fffd|I|fffd||fffd|O|fffd||30f||fffd||502||1570c||fffd||fffd||fffd||fffd||93c8||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    If gblFrmDataListSelItemLoad Then
        Call mRestoreControlValue
        GoTo EXIT_LABEL
    End If

    '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||752||fffd||303|V|fffd|[|fffd|g|fffd||303|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    llSelIndex = 0
    lcCell = "A1"
    cboSheet.Clear
    cboSheet.Enabled = True
    
    '|fffd|f|fffd|[|fffd|^|fffd||752||fffd||302||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||317|v|fffd|f|fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    For llcnt = 1 To goBook.Worksheets.Count
        Set loSheet = goBook.Worksheets(llcnt)
        If loSheet.Name <> cc_SHEET_ENV And loSheet.Name <> cc_SHEET_LOG Then    '|fffd||8b||fffd||fffd||752||fffd|E|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||20a|O
            If gblGetDataInfo(goBook, ltDummy, loSheet.Name) = False Then
                ReDim Preserve llSheet(llSheetCnt)
                llSheet(llSheetCnt) = loSheet.Name
                '|fffd|I|fffd||12182||303|V|fffd|[|fffd|g|fffd||183|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                If llSheet(llSheetCnt) = goBook.ActiveSheet.Name Then
                    llSelIndex = llSheetCnt
                    goBook.Activate
                    lcCell = Replace(ActiveCell.Address, "$", "")
                End If
                llSheetCnt = llSheetCnt + 1
            End If
        End If
        Set loSheet = Nothing
    Next
    'eSM|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||102||382||fffd||102||fffd||fffd||fffd||fffd||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||242||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    If giBigParent = ci_BP_eSMButton Then
        If llSheetCnt > 0 Then
            cboSheet.List = llSheet
            cboSheet.ListIndex = llSelIndex
        End If
        txtKiten.Text = lcCell
    ElseIf giBigParent = ci_BP_SETTINGS Then '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||310||752||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||382||a0bd||fffd||a347|
        cboSheet.Enabled = False
        cboSheet.Text = gtActDataInfo.cSheetCName
        txtKiten.Text = gtActDataInfo.cKiten
    End If
    '|fffd||fffd||fffd||fffd||fffd||fffd||357||fffd||fffd||303|Z|fffd|b|fffd|g
    cboSheetRireki.Clear
    If llSheetCnt > 0 Then
        cboSheetRireki.List = llSheet
    End If
    cboSheetRireki.Text = gtActDataInfo.cSheetRireki
'2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd| End

    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
    '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    chkRireki.value = gtActDataInfo.blRirekiSave
    Call chkRireki_Click
    '|fffd||752||82ae||fffd||fffd||fffd||fffd||fffd||241|c|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    chkAfterSettings.value = gtActDataInfo.blAfterSettings
    '|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|i|fffd||fffd|\|fffd||fffd||fffd||30f||a347||fffd||fffd||fffd||fffd||fffd|I|fffd||252|l|fffd||fffd|False|fffd|j
    If lblDLDisp = False Then
        chkDLProduct.value = False
    Else
        chkDLProduct.value = gtActDataInfo.blDLProduct
    End If
    
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|i|fffd||fffd|\|fffd||fffd||fffd||30f||a347||fffd||fffd||fffd||fffd||fffd|I|fffd||252|l|fffd||fffd|False|fffd|j
    If lblUDCan = False Then
        chkUDList.value = False
    Else
        chkUDList.value = gtActDataInfo.blUDList
    End If
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|i|fffd||fffd|\|fffd||fffd||fffd||30f||a347||fffd||fffd||fffd||fffd||fffd|I|fffd||252|l|fffd||fffd|False|fffd|j
    If lblUDDate = False Then
        chkUDData.value = False
    Else
        chkUDData.value = gtActDataInfo.blUDData
    End If
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd|I|fffd|{|fffd|^|fffd||fffd|
    If gtActDataInfo.blRirekiSaveName Then
        optDataSel1.value = True
        optDataSel2.value = False
    Else
        optDataSel1.value = False
        optDataSel2.value = True
    End If
    
    Call mDispRenban    '6/5 |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Sheet1 (4)|fffd||fffd||fffd|o|fffd||fffd||302||152||1c9||fffd|
    
EXIT_LABEL:
    gblFrmDataListSelItemLoad = True
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Me.Enabled = True   '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call GP_Start_SCUPD
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub chkRireki_Click()
    Dim lblChecked As Boolean
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo chkRireki_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "chkRireki_Click", True)
    '------------------------------------------
    lblChecked = chkRireki.value
    '|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||312||fffd||fffd||fffd|
    fraRireki.Visible = lblChecked
    If lblChecked Then
        fraUnderRireki.Top = 84
        Me.Height = PVT_FORM_HEIGHT
    Else
        fraUnderRireki.Top = 15
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        Me.Height = PVT_FORM_HEIGHT - fraRireki.Height - 3
        Me.Height = PVT_FORM_HEIGHT - fraRireki.Height - 2
    '2015/04/20 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "chkRireki_Click", True)
    '------------------------------------------
    Exit Sub
chkRireki_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||28f||fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mRestoreControlValue()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mRestoreControlValue")
    '------------------------------------------
    'InputBox|fffd|\|fffd||fffd||fffd||fffd||309||fffd||fffd|Unload|fffd||fffd||fffd||115|\|fffd||fffd||fffd||fffd|
    '|fffd|e|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd||351|O|fffd||302||fffd||fffd||302||155||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.cboSheet
        cboSheet.Enabled = .Enabled
        cboSheet.List = .List
        cboSheet.Text = .Text
    End With
    '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.cboSheetRireki
        cboSheetRireki.List = .List
        cboSheetRireki.Text = .Text
    End With
    '|fffd||fffd|_|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.txtKiten
        txtKiten.Text = .Text
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.chkRireki
        chkRireki.value = .value
        Call chkRireki_Click
    End With
    '|fffd||752||82ae||fffd||fffd||fffd||fffd||fffd||241|c|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.chkAfterSettings
        chkAfterSettings.value = .value
    End With
    '|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.chkDLProduct
        chkDLProduct.value = .value
    End With
    With gtFrmDataSettings.optDataSel1
        optDataSel1.value = .value
    End With
    With gtFrmDataSettings.optDataSel2
        optDataSel2.value = .value
    End With
    
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.chkUDList
        chkUDList.value = .value
    End With
    '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||243|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||13bca||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X
    With gtFrmDataSettings.chkUDData
        chkUDData.value = .value
    End With
    '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
    '|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    Call mReleaseControlValue
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mRestoreControlValue")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||309||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mReleaseControlValue()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mReleaseControlValue")
    '------------------------------------------
    With gtFrmDataSettings
        Set .cboSheet = Nothing
        Set .cboSheetRireki = Nothing
        Set .txtKiten = Nothing
        Set .chkRireki = Nothing
        Set .chkAfterSettings = Nothing
        Set .chkDLProduct = Nothing
        Set .optDataSel1 = Nothing
        Set .optDataSel2 = Nothing
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        Set .chkUDList = Nothing
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        Set .chkUDData = Nothing
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    End With
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mReleaseControlValue")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    giDest = ci_Dest_DataListSelItem        '|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||24d||fffd||fffd||691|I|fffd||fffd||fffd||fffd||282||fffd||fffd|Z|fffd|b|fffd|g
    giSmallParent = ci_Dest_DataSettings    '|fffd||fffd||fffd|O|fffd||309||fffd||282||242||fffd||fffd||309||fffd||282||fffd||fffd|Z|fffd|b|fffd|g
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lcSheetName As String
    Dim lcSheetCName As String
    Dim ltDummy As tDataSetInfo
    Dim lblRet As Boolean
    Dim loSheet As Excel.Worksheet
    Dim lcMsgTmp As String
    Dim lblExistSheet As Boolean
    Dim llcnt As Long
    Dim lcSheetRireki As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|CodeName|fffd||64fe|
    lcSheetName = Trim(cboSheet.Text)
    lblExistSheet = gblExistSheet2(goBook, lcSheetName)
    lcSheetRireki = Trim(cboSheetRireki.Text)
    '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|w|fffd||839e||fffd||253||fffd||fffd||342||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
    If chkRireki.value And optDataSel1.value Then
        If Trim(lcSheetRireki) = "" Then
            '2014/06/17 QA|fffd|\No.181|fffd||389||fffd|
'            Call MsgBox("|fffd||794||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
'                        "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
            Call MsgBox("|fffd||794||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                        "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
            GoTo EXIT_LABEL
        End If
    End If
    
    '|fffd||fffd||fffd||fffd||6d1||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd|OFF|fffd||202||75da||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||34b||fffd||18c||fffd||fffd||202||fffd|
    If chkRireki.value = False Or optDataSel1.value = False Then
        lcSheetRireki = ""
    End If
    
    If lblExistSheet Then
        Set loSheet = goBook.Worksheets(lcSheetName)
        'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd|A|fffd||fffd||fffd||24f|o|fffd||350||752||80b5||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
        If giBigParent = ci_BP_eSMButton Then
            If mblCheckIsDataSet(goBook, loSheet.Name, False) Then
                GoTo EXIT_LABEL
            End If
        End If
        lcSheetCName = loSheet.Name
    Else
        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||350|V|fffd|K|fffd||151|}|fffd||fffd||fffd||fffd||fffd||fffd|
        '|fffd||fffd||fffd||311|O|fffd||256||fffd||fffd|O|fffd||14e|g|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
        If mblCheckSheetName(goBook, lcSheetName, False) = False Then
            GoTo EXIT_LABEL
        End If
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    If lcSheetRireki <> "" Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If mblCheckSheetName(goBook, lcSheetRireki, True) = False Then
            GoTo EXIT_LABEL
        End If
        '|fffd|o|fffd||343|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|QA|fffd|\|fffd||252||1c9||fffd||fffd|j
        If UCase(Trim(lcSheetName)) = UCase(Trim(lcSheetRireki)) Then
            '2014/06/17 QA|fffd|\No.181|fffd||389||fffd|
'            Call MsgBox("|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||197||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B" & vbCrLf & _
'                        "|fffd||fffd||fffd||a0bc||fffd||fffd||642||202||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
            Call MsgBox("|fffd|o|fffd||350||fffd||303||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||191||794||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B" & vbCrLf & _
                        "|fffd||fffd||fffd||a0bc||fffd||fffd||642||202||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
            GoTo EXIT_LABEL
        End If
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||342||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|QA|fffd|\|fffd||252||1c9||fffd||fffd|j
        If mblCheckIsDataSet(goBook, lcSheetRireki, True) Then
            GoTo EXIT_LABEL
        End If
    End If
    
    '|fffd||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd|
    If UCase(lcSheetName) = UCase(cc_SHEET_ENV) Or UCase(lcSheetName) = UCase(cc_SHEET_LOG) Then
        Call MsgBox("|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||24a||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||10a4||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    If UCase(lcSheetRireki) = UCase(cc_SHEET_ENV) Or UCase(lcSheetRireki) = UCase(cc_SHEET_LOG) Then
        '2014/06/17 QA|fffd|\No.181|fffd||389||fffd|
'        Call MsgBox("|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||24a||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                    "|fffd||10a4||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Call MsgBox("|fffd||794||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||24a||8b||fffd||fffd||752||fffd||702||fffd||fffd||343||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||10a4||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    
    '|fffd|Z|fffd||fffd||fffd|w|fffd||80aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If gblIsCellAddress(goBook, txtKiten.Text) = False Then
        Call MsgBox("|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd|_|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & "A1|fffd|`|fffd||fffd||fffd||153||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    
'    Dim lblMsgRet As VbMsgBoxResult
'    lblMsgRet = MsgBox("|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||241|A|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||752||80aa||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                       "|fffd||fffd||fffd||fffd||fffd||103|f|fffd|[|fffd|^|fffd||30f|o|fffd||342||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf & _
'                       "|fffd|f|fffd|[|fffd|^|fffd||30f|o|fffd||342||341|A|fffd||fffd||141|u|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd|v|fffd|u|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd|v|fffd||142||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbYesNoCancel, SYSTEM_MSG_TITLE)
'    If lblMsgRet = vbCancel Then
'        GoTo EXIT_LABEL
'    End If
    
    '|fffd||fffd||fffd||fffd||fffd||702||142||303|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    '|fffd|w|fffd||80b5||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
    If lblExistSheet = False Then
        Set loSheet = goBook.Worksheets.Add
        loSheet.Name = lcSheetName
        lcSheetCName = loSheet.Name
        Set loSheet = Nothing
    End If
    
    '|fffd|I|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    With gtActDataInfo
        .cKiten = txtKiten.Text
        .cSheetCName = lcSheetCName
        .cSheetName = lcSheetName
        .cSheetRireki = lcSheetRireki    '2014/04/03 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.9|fffd||389||fffd|
        .blRirekiSave = chkRireki.value  '2014/05/20 QA|fffd|\No.152-1|fffd||389||fffd|
        .blAfterSettings = chkAfterSettings.value
        .blDispDLProduct = chkDLProduct.Visible
        .blDLProduct = chkDLProduct.value
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'        .blCanUDList = chkUDList
        .blCanUDList = False
        If chkUDList Or chkUDData Then
            .blCanUDList = True
        End If
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        .blUDList = chkUDList
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        .blUDData = chkUDData
        '2014/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        
        .blRirekiSaveName = optDataSel1.value
    End With
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call gSetDataInfo(goBook, gtActDataInfo)
    
    '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
    gblOutputNewSheet = False
    
'    If lblMsgRet = vbYes Then  '|fffd|f|fffd|[|fffd|^|fffd|o|fffd||342||fffd||fffd||fffd|
    If chkAfterSettings.value Then
        '2014/05/26 QA|fffd|\No.166|fffd||389||fffd|
        '|fffd||fffd||fffd||fffd||fffd||150|V|fffd|K|fffd||c42c||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||242||fffd||fffd||30c||3471||fffd||fffd||fffd||10f|o|fffd||342||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||90a9||fffd|m|fffd|F|fffd||fffd||fffd||202||fffd||fffd||752||fffd||242||fffd||fffd||fffd|
        If lblExistSheet = False Then
            gblOutputNewSheet = True
        End If
        giDest = ci_Dest_CSVOutput
'    ElseIf lblMsgRet = vbNo Then   '|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd||14f|I|fffd||fffd|
    Else   '|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd||fffd||fffd||fffd||fffd||14f|I|fffd||fffd|
        giDest = ci_Dest_Cancel
'    Else
'        GoTo EXIT_LABEL
    End If
    
    '|fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||10f|I|fffd||fffd|
    Unload Me
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    gblOutputNewSheet = False
    Set loSheet = Nothing
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook      - (i) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName - (i) : |fffd|V|fffd|[|fffd|g|fffd||fffd|
'             pblIsRireki - (i) : |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||202||fffd|True
'
' |fffd||7c2||fffd|l    : |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblCheckSheetName(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String, ByVal pblIsRireki As Boolean) As Boolean
    Dim lblRet As Boolean
    Dim lcSheetCName As String
    Dim lcMsgTmp As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblCheckSheetName")
    '------------------------------------------
    lblRet = gblIsSheetName(goBook, pcSheetName)
    If lblRet = False Then
        '2014/06/17 QA|fffd|\No.181|fffd||389||fffd|
'        lcMsgTmp = "|fffd||fffd||fffd||342||fffd||fffd||a0bd|" & IIf(pblIsRireki, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|[|fffd|N") & "|fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B|fffd||fffd||fffd||313|_|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||10f|C|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd|E|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd| 31 |fffd||fffd||fffd||fffd||fffd||213||fffd||fffd||142||fffd||fffd||90b1||fffd||fffd|" & vbCrLf & _
'                   "|fffd|E|fffd||fffd||fffd||30e|g|fffd|p|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|: |fffd|R|fffd||fffd||fffd||fffd| (:)|fffd|A|fffd|~|fffd|L|fffd||fffd| (\)|fffd|A|fffd|X|fffd||fffd||fffd|b|fffd|V|fffd||fffd| (/)|fffd|A|fffd|^|fffd||2544| (?)|fffd|A|fffd|A|fffd|X|fffd|^|fffd||fffd||fffd|X|fffd|N (*)|fffd|A|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| ([)|fffd|A|fffd|E|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| (])" & vbCrLf & IIf(pblIsRireki, "", "|fffd|E|fffd||fffd||fffd|O|fffd||fffd||fffd||d4482||142||202||fffd||fffd||fffd||fffd||fffd|")
        lcMsgTmp = "|fffd||fffd||fffd||342||fffd||fffd||a0bd|" & IIf(pblIsRireki, "|fffd||794||fffd||fffd|", "|fffd||fffd||fffd|[|fffd|N") & "|fffd|V|fffd|[|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B|fffd||fffd||fffd||313|_|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||10f|C|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd|E|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd| 31 |fffd||fffd||fffd||fffd||fffd||213||fffd||fffd||142||fffd||fffd||90b1||fffd||fffd|" & vbCrLf & _
                   "|fffd|E|fffd||fffd||fffd||30e|g|fffd|p|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|: |fffd|R|fffd||fffd||fffd||fffd| (:)|fffd|A|fffd|~|fffd|L|fffd||fffd| (\)|fffd|A|fffd|X|fffd||fffd||fffd|b|fffd|V|fffd||fffd| (/)|fffd|A|fffd|^|fffd||2544| (?)|fffd|A|fffd|A|fffd|X|fffd|^|fffd||fffd||fffd|X|fffd|N (*)|fffd|A|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| ([)|fffd|A|fffd|E|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd| (])" & vbCrLf & IIf(pblIsRireki, "", "|fffd|E|fffd||fffd||fffd|O|fffd||fffd||fffd||d4482||142||202||fffd||fffd||fffd||fffd||fffd|")
        Call MsgBox(lcMsgTmp, vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    lblRet = True
EXIT_LABEL:
    mblCheckSheetName = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblCheckSheetName")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|V|fffd|[|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd||752||80aa||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : poBook      - (i) : Excel|fffd|u|fffd|b|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'             pcSheetName - (i) : |fffd|V|fffd|[|fffd|g|fffd||fffd|
'             pblIsRireki - (i) : |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||202||fffd|True
'
' |fffd||7c2||fffd|l    : |fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblCheckIsDataSet(ByRef poBook As Excel.Workbook, ByVal pcSheetName As String, ByVal pblIsRireki As Boolean) As Boolean
    Dim lblRet As Boolean
    Dim lcSheetCName As String
    Dim lcMsgTmp As String
    Dim ltDummy As tDataSetInfo
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblCheckIsDataSet")
    '------------------------------------------
    lblRet = gblGetDataInfo(goBook, ltDummy, pcSheetName)
    If lblRet Then
        '2014/06/17 QA|fffd|\No.181|fffd||389||fffd|
'        Call MsgBox(IIf(pblIsRireki, "|fffd||fffd||fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|", "|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|") & "|fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||350||752||80aa||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
'                    "|fffd||282||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Call MsgBox(IIf(pblIsRireki, "|fffd||794||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|", "|fffd|w|fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd|") & "|fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd|o|fffd||350||752||80aa||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||282||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        GoTo EXIT_LABEL
    End If
    lblRet = False
EXIT_LABEL:
    mblCheckIsDataSet = lblRet
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblCheckIsDataSet")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|I|fffd||fffd||fffd|v_Click|fffd|i|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|j
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdRange1_Click()
    Dim lblRet As Boolean
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdRange1_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdRange1_Click", True)
    '------------------------------------------
    lblRet = mblSelectRange(1)
    If lblRet Then
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdRange1_Click", True)
    '------------------------------------------
    Exit Sub
cmdRange1_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : InputBox|fffd||242||fffd||fffd||348||351|I|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : piKind      - (i) : 1:|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g 2:|fffd||fffd||fffd||fffd| 2|fffd||34c||fffd||fffd||74e|g|fffd|p|fffd||fffd||fffd||102||fffd||fffd||202||fffd|
'             pcSheet     - (o) : |fffd|I|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|
'             pcCell      - (o) : |fffd|I|fffd||fffd||fffd|Z|fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblSelectRange(ByVal piKind As Integer) As Boolean
    Dim lcMsg As String
    Dim lcTitle As String
    Dim lcDefVal As String
    Dim loRange As Excel.Range
    Dim lblRet As Boolean
    Dim llRow As Long
    Dim llCol As Long
    Dim lcCol As String
    Dim lcSheet As String
    Dim lcCell As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblSelectRange")
    '------------------------------------------
    lblRet = False
    On Error Resume Next
    
    'InputBox|fffd|\|fffd||fffd||fffd||fffd||341|A|fffd||202||fffd||fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||30c||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|G|fffd||fffd||102||fffd||fffd||702||fffd||fffd|iExcel VBA|fffd||303|o|fffd|O|fffd||fffd||fffd||fffd||202||fffd||fffd||301|H|fffd|H|fffd|j
    '|fffd||fffd||fffd||302||fffd||fffd||7c1|A
    'InputBox|fffd|\|fffd||fffd||fffd|O|fffd|A|fffd||fffd||293||fffd||fffd||30a|e|fffd|I|fffd||fffd|l|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||255||6d1||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||282||fffd||fffd||fffd|xUnload|fffd||fffd||fffd||102||fffd||fffd||fffd|vbModal|fffd||14d||115|\|fffd||fffd||fffd|AUserform_Activate|fffd||155||6d1||fffd||fffd|l|fffd||1570c||fffd||fffd||fffd||fffd||fffd|
    '|fffd|igblFrmDataListSelItemLoad|fffd||141|A|fffd||fffd||fffd|X|fffd|g/|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd|I|fffd||fffd||fffd||fffd||282||fffd||fffd||75c8||fffd||fffd||fffd||fffd||fffd||195|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||602||856a||fffd||fffd||fffd||fffd|j|fffd||182||fffd||fffd||fffd|B
    
    'InputBox|fffd|\|fffd||fffd|
    'Hide|fffd||fffd||fffd||183|_|fffd||fffd||fffd|BInputBox|fffd|\|fffd||fffd||fffd||fffd||fffd||241|A|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||30e||fffd||fffd||349||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|A
    'InputBox|fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||303|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||7c1|B|fffd|i|fffd||fffd||fffd||fffd||fffd|Excel VBA|fffd||303|o|fffd|O|fffd||fffd||fffd||fffd||202||fffd||fffd||301|H|fffd|H|fffd|j
    '|fffd||1c2||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||282||fffd||fffd||14f||fffd||fffd||242||fffd||fffd||10d||fffd||fffd||fffd||251||794||fffd||fffd||fffd||fffd||fffd|
'    Me.Hide
    Me.Height = 0
    Me.Width = 0
    Me.Top = 0
    Me.Left = 0

    'InputBox|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||195|\|fffd|L
    lcTitle = IIf(piKind = 1, "", "|fffd||fffd||fffd||fffd|") & "|fffd|V|fffd|[|fffd|g" & IIf(piKind = 1, "|fffd||18a||fffd|_|fffd|Z|fffd||fffd|", "") & "|fffd||fffd|I|fffd||fffd|"
    lcMsg = lcTitle & "|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    If piKind = 2 Then
        lcMsg = lcMsg & vbCrLf & "|fffd|i|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||314|C|fffd||4c2||303|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|A|fffd|uOK|fffd|v|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|j"
    End If
    '|fffd||fffd||fffd||fffd||fffd|l|fffd||310||752||fffd|
    If piKind = 1 Then
        lcMsg = lcMsg & vbCrLf & "|fffd||fffd|_|fffd|Z|fffd||fffd||fffd||351|I|fffd||fffd||348||342||308||fffd||50d||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd|K|fffd|p|fffd||fffd||fffd||fffd||702||fffd||fffd|B"
        lcDefVal = cboSheet.Text
        If Trim(lcDefVal) <> "" Then
            '2014/04/21 QA|fffd|\No.133|fffd||389||fffd|
'            lcDefVal = lcDefVal & "!"
            lcDefVal = "'" & lcDefVal & "'!"
        End If
        If gblIsCellAddress(goBook, txtKiten.Text) Then
            lcDefVal = lcDefVal & Application.ConvertFormula(FromReferenceStyle:=xlA1, ToReferenceStyle:=xlA1, Formula:=txtKiten.Text, ToAbsolute:=xlAbsolute)
        Else
            lcDefVal = lcDefVal & "$A$1"
        End If
    Else
        lcDefVal = cboSheetRireki.Text & "!$A$1"
    End If
    
    Set loRange = Application.InputBox(lcMsg, lcTitle, lcDefVal, , , , , 8)
    '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
    If Err.Number > 0 Then
        GoTo EXIT_LABEL
    End If
    On Error GoTo 0
    
    '|fffd|V|fffd|[|fffd|g|fffd||fffd|
    lcSheet = loRange.Parent.Name
    '|fffd|I|fffd||fffd||348||342||30d||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||302||350||602||fffd||302||102||fffd|
    llRow = loRange.Row
    llCol = loRange.Column
    lcCol = gcColNum2Txt(goBook.ActiveSheet, llCol)
    lcCell = lcCol & CStr(llRow)
    '|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||254||fffd||fffd|f
    '|fffd|I|fffd||fffd||348||342||242||82||fffd||fffd||101|A|fffd||fffd||fffd||fffd||312|P|fffd||fffd|Z|fffd||fffd||fffd||302||74e|g|fffd|p|fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||343|Z|fffd||fffd||fffd||348||342||fffd||fffd|w|fffd||80b5||fffd||202||fffd|
    'Ctrl|fffd|L|fffd|[|fffd||182||fffd||fffd||154||fffd||454||fffd||442||154||348||351|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||302||34d||14f||fffd||fffd||314||348||342||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
    If piKind = 1 Then  '|fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
        If giBigParent <> ci_BP_SETTINGS Then   '4/16|fffd|C|fffd||fffd| |fffd|o|fffd||355||3cd|X|fffd||30e||fffd||fffd||354||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||202||fffd|
            cboSheet.Text = lcSheet
        End If
        txtKiten.Text = lcCell
    Else                '|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X
        cboSheetRireki.Text = lcSheet
    End If
        
    lblRet = True
EXIT_LABEL:
    Set loRange = Nothing
    Call mSaveControlValue
    mblSelectRange = lblRet
    giDest = ci_Dest_DataSettings
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblSelectRange")
    '------------------------------------------
End Function

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||28f||fffd||303|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||312|l|fffd||315||6d1||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mSaveControlValue()
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mSaveControlValue")
    '------------------------------------------
    'InputBox|fffd|\|fffd||fffd||fffd||fffd|A|fffd||fffd||282||fffd|Unload|fffd||fffd||fffd||fffd|O|fffd||249||fffd||28f||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    '|fffd||fffd||282||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|
    With gtFrmDataSettings
        Set .cboSheet = Me.cboSheet
        Set .cboSheetRireki = Me.cboSheetRireki
        Set .txtKiten = Me.txtKiten
        Set .chkRireki = Me.chkRireki
        Set .chkAfterSettings = Me.chkAfterSettings
        Set .chkDLProduct = Me.chkDLProduct
        Set .optDataSel1 = Me.optDataSel1
        Set .optDataSel2 = Me.optDataSel2
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        Set .chkUDList = Me.chkUDList
        '2014/07/18 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        Set .chkUDData = Me.chkUDData
        '2015/04/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End With
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mSaveControlValue")
    '------------------------------------------
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|v_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboSheet_Change()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboSheet_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboSheet_Change", True)
    '------------------------------------------
    Call mDispRenban
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboSheet_Change", True)
    '------------------------------------------
    Exit Sub
cboSheet_Change_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd|v_Change
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cboSheetRireki_Change()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cboSheetRireki_Change_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cboSheetRireki_Change", True)
    '------------------------------------------
    Call mDispRenban
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cboSheetRireki_Change", True)
    '------------------------------------------
    Exit Sub
cboSheetRireki_Change_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|E|fffd|A|fffd||515|\|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      :
'
' |fffd||7c2||fffd|l    :
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Sub mDispRenban()
    Dim llcnt As Long
    Dim llNum As Long
    Dim lcSheet As String
    Dim lcSheetR As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mDispRenban")
    '------------------------------------------
'    If cboSheetRireki.Text <> "" Then
'        lblRenban.Caption = ""
'    Else

'2013/06/19 QA|fffd|\No.182|fffd||389||fffd| Start
'        llCnt = 2
'        lcSheet = cboSheet.Text
'        '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd|+|fffd|A|fffd||502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
'        Do
'            lcSheetR = lcSheet & " (" & CStr(llCnt) & ")"
'            If gblExistSheet2(goBook, lcSheetR) = False Then
'                Exit Do
'            End If
'            llCnt = llCnt + 1
'        Loop
'        lblRenban.Caption = lcSheetR
    lblRenban.Caption = gCheckAndGetSheetName(goBook, cboSheet.Text)

'    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mDispRenban")
    '------------------------------------------
End Sub

'Excel|fffd||303|o|fffd|O|fffd||302||fffd||fffd||fffd||fffd||141|A|fffd|u|fffd||fffd||fffd|i|fffd||fffd||fffd||182||24f|o|fffd||342||fffd||fffd||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||30f||a347||fffd|ATab|fffd|L|fffd|[|fffd||242||fffd||fffd|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||30f|z|fffd||82||fffd||fffd|~|fffd||702||fffd|
'|fffd||fffd||fffd||302||fffd||fffd||7d6||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||24f|o|fffd||351|O|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd|c|fffd||fffd||fffd|v_KeyDown
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub chkRireki_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    'Alt+Tab|fffd||14a||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    If KeyCode = 9 And Shift = 1 Then
        If chkDLProduct.Visible = False Then
            cmdNext.SetFocus
        End If
    End If
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||fffd||fffd|v_KeyDown
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    'Tab|fffd||141|u|fffd|f|fffd|[|fffd|^|fffd|o|fffd||34e||fffd||fffd||241|c|fffd|v|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    If KeyCode = 9 And Shift = 0 Then
        If chkDLProduct.Visible = False Then
            chkRireki.SetFocus
        End If
    End If
End Sub


Attribute VB_Name = "frmDataSheetSelect"
Attribute VB_Base = "0{55F639EB-EF89-4C79-880C-000DF1A22547}{14DC40B9-170E-4AF9-AFD3-1A572E17DEAD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

'2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
'-----------------------------------------------------------------------------
' @(h) frmDataSheetSelect.frm                   Ver 1.00 ( 2014.4.14 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd|o|fffd||343|V|fffd|[|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataSheetSelect"
Private Const ci_COL_WIDTH_SHEET As Integer = 90
Private Const ci_COL_WIDTH_KIND As Integer = 60
Private Const ci_COL_WIDTH_SELDATA As Integer = 150

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    Dim llcnt As Long
    Dim llcnt2 As Long
    Dim llListCnt As Long
    Dim llListWidth As Long
    Dim lcSheet As String
'    Dim lhcDummy(1, 3) As String
    Dim lhcData() As String
    Dim lblRet As Boolean
    Dim ltTmp As tDataSetInfo
    Dim ltDataInfo() As tDataSetInfo
    Dim lcTmp As String
    Dim llSelIndex As Long  '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    '|fffd||55752||fffd||fffd||fffd|
    llListWidth = lstData.Width - 8
    lstData.ColumnWidths = ci_COL_WIDTH_SHEET & ";" & ci_COL_WIDTH_KIND & ";" & ci_COL_WIDTH_SELDATA & ";" & _
                           CStr(llListWidth - ci_COL_WIDTH_SHEET - ci_COL_WIDTH_KIND - ci_COL_WIDTH_SELDATA)
    lblKeishiki.Left = lblSheet.Left + ci_COL_WIDTH_SHEET + lstData.Font.Size - 3
    lblDataSel.Left = lblKeishiki.Left + ci_COL_WIDTH_KIND
    lblSelItem.Left = lblDataSel.Left + ci_COL_WIDTH_SELDATA
        
    llListCnt = 0
    llSelIndex = 0  '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
    '|fffd||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||301|A|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||752||fffd||3c2||742||302||fffd||fffd||5c2||102||30f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    '2014/05/16 QA|fffd|\No.159|fffd||389||fffd|
    '|fffd||fffd||fffd||fffd|goBook|fffd||250||752||80b3||fffd||fffd||102||fffd||fffd||90bd||fffd||7c3|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g
'    Set goBook = goGetActiveBook

    '2014/05/01 QA|fffd|\No.136,142|fffd||389||fffd|
'    For llCnt = 1 To goBook.Worksheets.Count
'        lcSheet = goBook.Worksheets(llCnt).Name
'        If lcSheet <> cc_SHEET_ENV And lcSheet <> cc_SHEET_LOG Then
'            lblRet = gblGetDataInfo(goBook, ltTmp, lcSheet)
'            If lblRet Then
'                ReDim Preserve ltDataInfo(llListCnt)
'                ltDataInfo(llListCnt) = ltTmp
'                llListCnt = llListCnt + 1
'            End If
'        End If
'    Next
    Call gGetAllSheetInfo(goBook, ltDataInfo, llListCnt)
    '|fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd|
    lstData.Clear
    If llListCnt > 0 Then
        ReDim lhcData(llListCnt - 1, 3)
        For llcnt = 0 To llListCnt - 1
            With ltDataInfo(llcnt)
                lhcData(llcnt, 0) = .cSheetCName
                lcTmp = ""
                '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
                If gtActDataInfo.cSheetCName = .cSheetCName Then    '|fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|O|fffd||315||fffd||fffd||fffd||fffd||111|I|fffd||fffd||fffd||fffd||fffd||fffd|
                    llSelIndex = llcnt
                End If
                '2014/05/09 QA|fffd|\No.150|fffd||389||fffd|
                '|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||102||fffd||141|A|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||243|f|fffd|[|fffd|^|fffd||752||fffd||3c2||742||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
                If Trim(gtActDataInfo.cSheetCName) = "" Then
                    If goBook.ActiveSheet.Name = .cSheetCName Then
                        llSelIndex = llcnt
                    End If
                End If
                If .iType = 1 Then
                    lhcData(llcnt, 1) = "|fffd||fffd||fffd|X|fffd|g"
                    lhcData(llcnt, 2) = .cSheetN & "," & .cBushoN & "," & .cShainN & "," & .cListN
                    For llcnt2 = 0 To .lItemNum - 1
                        lcTmp = lcTmp & .cItemN(llcnt2) & ","
                    Next
                    If lcTmp <> "" Then lcTmp = Left(lcTmp, Len(lcTmp) - 1)
                    lhcData(llcnt, 3) = Replace(lcTmp, """", "")
                Else
                    lhcData(llcnt, 1) = "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X"
                    lhcData(llcnt, 2) = .cDataNameN
                    For llcnt2 = 0 To .lItemNumD - 1
                        lcTmp = lcTmp & .cItemDN(llcnt2) & ","
                    Next
                    If lcTmp <> "" Then lcTmp = Left(lcTmp, Len(lcTmp) - 1)
                    lhcData(llcnt, 3) = Replace(lcTmp, """", "")
                End If
            End With
        Next
        lstData.List = lhcData
        '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
'        lstData.Selected(0) = True
        lstData.Selected(llSelIndex) = True
    End If

'    lhcDummy(0, 0) = "Sheet1"
'    lhcDummy(0, 1) = "|fffd||fffd||fffd|X|fffd|g"
'    lhcDummy(0, 2) = "|fffd|V|fffd|[|fffd|g1,|fffd||fffd||fffd||fffd|1,|fffd||408||fffd|1,|fffd||fffd||fffd|X|fffd|g1"
'    lhcDummy(0, 3) = "|fffd||fffd||fffd||fffd|1,|fffd||fffd||fffd||fffd|2,|fffd||fffd||fffd||fffd|3"
'
'    lhcDummy(1, 0) = "Sheet2"
'    lhcDummy(1, 1) = "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X"
'    lhcDummy(1, 2) = "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X1"
'    lhcDummy(1, 3) = "|fffd||fffd||fffd||fffd|4,|fffd||fffd||fffd||fffd|5,|fffd||fffd||fffd||fffd|6,|fffd||fffd||fffd||fffd|7"
    
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Call GP_Start_SCUPD
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    '|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||256||7c2||fffd|i|fffd||fffd||fffd||691||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|j
    gtActConnInfo.blConn = False
    Call gtSetConnInfo(goBook, gtActConnInfo)
    giDest = ci_Dest_Login
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||581|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim ltListTypeData As Object
    Dim lblRet2 As Boolean
    Dim lvType As Variant
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    lblRet = False
    If lstData.ListCount < 1 Then
        Call MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Exit Sub
    End If
    If lstData.ListIndex < 0 Then
        Call MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Exit Sub
    End If
    
    '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||30e||64fe|
    Me.Enabled = False
    lblRet2 = gblDLData(cc_API_ACTION_GETDATATYPES, Format(Now, "yyyyMMddhhmmss"), ltListTypeData, lcStatusCode, lcErrMsg)
    Me.Enabled = True
    Me.Enabled = True   '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
    If lblRet2 Then
        lvType = Split(ltListTypeData.value("enableTypes"), ",")
        ghblActSelData(0) = (glInArray(lvType, "1") > -1)
        ghblActSelData(1) = (glInArray(lvType, "2") > -1)
        '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        If Not (ghblActSelData(0) Or ghblActSelData(1)) Then
            Call MsgBox("|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||10a4||fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||113||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            gtActConnInfo.blConn = False
            Call gtSetConnInfo(goBook, gtActConnInfo)
        Else
            giDest = ci_Dest_DataTypeSelect
            '|fffd|I|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|  4/16 |fffd||1c9||fffd|
            Call gtInitDataInfo(gtActDataInfo)  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Call gblGetDataInfo(goBook, gtActDataInfo, lstData.List(lstData.ListIndex, 0))  '4/16 |fffd||1c9||fffd|
'            gtActDataInfo.cSheetCName = lstData.List(lstData.ListIndex, 0)
            Unload Me
        End If
    Else
        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'        Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
        Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
    End If
    
EXIT_LABEL:
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    Me.Enabled = True
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

Attribute VB_Name = "frmDataTypeSelect"
Attribute VB_Base = "0{36CF994A-203E-452B-B5ED-C07E3A915A8B}{AA3AAB59-B11F-4C0C-9843-E89EAB9D2C9C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'-----------------------------------------------------------------------------
' @(h) frmLogin.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||64fe||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd|I|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmDataSelect"

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    '|fffd||fffd||fffd|W|fffd|I|fffd|{|fffd|^|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    optDataSel1.Enabled = ghblActSelData(0)
    optDataSel2.Enabled = ghblActSelData(1)
    optDataSel1.value = False
    optDataSel2.value = False
    If ghblActSelData(0) Then
        optDataSel1.value = True
    ElseIf ghblActSelData(1) Then
        optDataSel2.value = True
    End If
    '|fffd||7c2||fffd||fffd||102||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|O|fffd||fffd||312|l|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    '2014/05/23 QA|fffd|\No.165|fffd||389||fffd|
'    If gtActDataInfo.iType = 1 Then
    If gtActDataInfo.iType = 1 And optDataSel1.Enabled Then
        optDataSel1.value = True
        optDataSel1.SetFocus
    '2014/05/23 QA|fffd|\No.165|fffd||389||fffd|
'    ElseIf gtActDataInfo.iType = 2 Then
    ElseIf gtActDataInfo.iType = 2 And optDataSel2.Enabled Then
        optDataSel2.value = True
        optDataSel2.SetFocus
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||7c2||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdBack_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdBack_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
    If giBigParent = ci_BP_SETTINGS Then    '|fffd|o|fffd||342||315||3cd|X|fffd||30e||fffd||fffd||341|A|fffd|V|fffd|[|fffd|g|fffd|I|fffd||fffd||fffd||fffd||282||256||7c2||fffd|
        giDest = ci_Dest_DataSheetSelect
    Else
        '|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||256||7c2||fffd|i|fffd||fffd||fffd||691||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|j
        gtActConnInfo.blConn = False
        Call gtSetConnInfo(goBook, gtActConnInfo)
        giDest = ci_Dest_Login
    End If
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdBack_Click", True)
    '------------------------------------------
    Exit Sub
cmdBack_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd||581|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdNext_Click()
    Dim lblRet As Boolean
    Dim lcErrMsg As String
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdNext_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    lblRet = False
    '|fffd|I|fffd||fffd||fffd||fffd||fffd||682||242||fffd||fffd||fffd||115||fffd||fffd||82dc2||fffd|
    gtActDataInfo.iType = IIf(optDataSel1.value, 1, 2)
    If gtActDataInfo.iType = 1 Then '|fffd||fffd||fffd|X|fffd|g|fffd||30f||a347|
        Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
        '2014/04/12 QA|fffd|\No.114|fffd||389||fffd|
'        lblRet = gblDLData(cc_API_ACTION_GETLISTS, Format(Now, "yyyyMMddhhmmss"), gtJSONData(ci_Dest_DataListSel), lcStatusCode, lcErrMsg)
        lblRet = gblDLData(cc_API_ACTION_GETORGANIZATION, Format(Now, "yyyyMMddhhmmss"), gtJSONData(ci_Dest_DataListSel), lcStatusCode, lcErrMsg)
        Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
        Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
        If lblRet Then
            giDest = ci_Dest_DataListSel
        End If
    Else    '|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X|fffd||30f||a347|
        Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
        lblRet = gblDLData(cc_API_ACTION_GETDATASOURCES, Format(Now, "yyyyMMddhhmmss"), gtJSONData(ci_Dest_DataSel), lcStatusCode, lcErrMsg)
        Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
        Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
        If lblRet Then
            giDest = ci_Dest_DataSel
        End If
    End If
    If lblRet Then
        Unload Me
    Else
'        Call MsgBox("|fffd||fffd||fffd|[|fffd|U|fffd||251||382||fffd||fffd||fffd|" & IIf(gtActDataInfo.iType = 1, "|fffd||fffd||fffd|X|fffd|g|fffd|f|fffd|[|fffd|^", "|fffd|f|fffd|[|fffd|^|fffd|\|fffd|[|fffd|X") & "|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'        Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
        Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdNext_Click", True)
    '------------------------------------------
    Exit Sub
cmdNext_Click_OnErr:
    Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

Attribute VB_Name = "frmLogin"
Attribute VB_Base = "0{C8B83965-B658-4C69-846A-FA057416CADD}{24052A69-1727-4D42-A1E5-BCE3F13C1050}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'-----------------------------------------------------------------------------
' @(h) frmLogin.bas                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------
Private Const MODULE_NAME As String = "frmLogin"

Private PVT_CONNINFO As tConnInfo
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : UserForm_Activate
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub UserForm_Activate()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo UserForm_Activate_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Me.Height = 178.25
    fraLogin.Top = 126
    fraProxy.Visible = False
    lblProxy.Visible = True
    lblProxy2.Visible = False
'    Call lblProxy_Click '2014/04/07 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.1|fffd||389||fffd| Start
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    Me.lblVer = cc_SYSTEM_VERSION
    '|fffd||fffd||fffd|Y|fffd|u|fffd|b|fffd|N|fffd||310||691||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    gtActConnInfo = gtGetConnInfo(goBook)
    If giBigParent = ci_BP_CONNINFO Then    '|fffd||691||fffd||fffd||fffd||fffd||310||752||fffd||3cd|X|fffd||202||fffd|A|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
        gtActConnInfo.blConn = False
    End If
    '|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||250||691||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    With gtActConnInfo 'PVT_CONNINFO
        txtID.Text = .cID
        txtPassWord.Text = .cPassword
        txtURL.Text = .cURL
        '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        txtProxyAccountId.Text = .cProxyID
        txtProxyAccountPW.Text = .cProxyPW
        '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    End With
    '|fffd|F|fffd||60d||3c2||742||142||fffd||fffd||fffd||38e||fffd||fffd||fffd||fffd||143||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd|
    If gtActConnInfo.blConn Then
        Me.Hide
        Call cmdLogin_Click
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "UserForm_Activate", True)
    '------------------------------------------
    Exit Sub
UserForm_Activate_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdCancel_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdCancel_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    giDest = ci_Dest_Cancel
    Unload Me
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdCancel_Click", True)
    '------------------------------------------
    Exit Sub
cmdCancel_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd|u|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdLogin_Click()
    Dim lblRet As Boolean
    Dim lblRet2 As Boolean
    Dim liDataType As Integer
    Dim lcErrMsg As String
    Dim ltLoginData As Object
    Dim ltListTypeData As Object
    Dim lcStatusCode As String  '|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim lvType As Variant
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdLogin_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdLogin_Click", True)
    '------------------------------------------
    If Trim(txtID.Text) = "" Or Trim(txtPassWord.Text) = "" Or Trim(txtURL.Text) = "" Then
        Call MsgBox("|fffd||691||fffd||fffd||fffd|URL|fffd|A|fffd||fffd||fffd|[|fffd|UID|fffd|A|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||302||fffd||fffd||fffd||fffd||a0a9||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation + vbOKOnly, SYSTEM_MSG_TITLE)
        Exit Sub
    End If
    '|fffd||fffd||fffd||74e|g|fffd|p|fffd||fffd||fffd||310||691||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
    With gtActConnInfo
        .cID = txtID.Text
        .cPassword = txtPassWord.Text
        .cURL = txtURL.Text
        .cProxyID = txtProxyAccountId.Text
        .cProxyPW = txtProxyAccountPW.Text
    End With
    
    '|fffd|F|fffd||60f||fffd||fffd||fffd||fffd|i|fffd|F|fffd||601|A|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|A|fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||30e||64fe||fffd|j
    Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    lblRet = gblDLData(cc_API_ACTION_LOGIN, Format(Now, "yyyyMMddhhmmss"), ltLoginData, lcStatusCode, lcErrMsg)
    Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j

    If lblRet Then  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        gtActConnInfo.blConn = True
        With gtActUserInfo  '|fffd||fffd||fffd|[|fffd|U|fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
            .cDepartCode = ltLoginData.value("departCode")
            .cEmployeeCode = ltLoginData.value("employeeCode")
        End With
        '|fffd||8b||fffd||fffd||752||fffd|E|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||311|}|fffd||fffd||fffd||fffd||fffd||fffd|
        Call gblInsertSheet(goBook, cc_SHEET_ENV)
        Call gblInsertSheet(goBook, cc_SHEET_LOG)
        '|fffd||691||fffd||fffd||fffd||fffd||303|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||582||303|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        Call gtSetConnInfo(goBook, gtActConnInfo)
        '|fffd||691||fffd||fffd||fffd||fffd||30a||8b||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||582||311|}|fffd||fffd||fffd||fffd||fffd||fffd|
        Call gSetConnURL(goBook, gtActConnInfo.cURL)
        '|fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd|V|fffd|[|fffd|g|fffd||30d||d3dc||fffd||fffd||fffd||fffd|
        Call gblDelSheetInfo(goBook)
        
        '2014/04/15 QA|fffd|\No.122|fffd||389||fffd|
        '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||30f||a347||fffd||fffd||fffd|AgetDataTypes|fffd||fffd|@|fffd||fffd||fffd||102||fffd||fffd||fffd||302||14f|C|fffd||fffd|
        
'        '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||30e||64fe|
'        Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
'        lblRet2 = gblDLData(cc_API_ACTION_GETDATATYPES, Format(Now, "yyyyMMddhhmmss"), ltListTypeData, lcStatusCode, lcErrMsg)
'        Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
'        Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
'        If lblRet2 Then
'            lvType = Split(ltListTypeData.value("enableTypes"), ",")
'            ghblActSelData(0) = (glInArray(lvType, "1") > -1)
'            ghblActSelData(1) = (glInArray(lvType, "2") > -1)
'            '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
'            If Not (ghblActSelData(0) Or ghblActSelData(1)) Then
'                Call MsgBox("|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||10a4||fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||113||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
'                gtActConnInfo.blConn = False
'                Call gtSetConnInfo(goBook, gtActConnInfo)
'            Else
'                '|fffd||102||44c||fffd||fffd||242||fffd||856a||fffd||fffd|
'                If giBigParent = ci_BP_eSMButton Or giBigParent = ci_BP_SETTINGS Then   'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd|
'                    giDest = ci_Dest_DataTypeSelect
'                    If giBigParent = ci_BP_eSMButton Then
'                        Call gtInitDataInfo(gtActDataInfo)  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                    End If
'                ElseIf giBigParent = ci_BP_REFRESH Or giBigParent = ci_BP_REFRESHALL Then '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|j|fffd||fffd||fffd|[
'                    giDest = ci_Dest_CSVOutput
'                ElseIf giBigParent = ci_BP_CONNINFO Then    '|fffd||691||fffd||fffd||fffd||fffd||315||3cd|X|fffd||202||fffd|A|fffd||fffd||fffd||fffd||fffd||14f|I|fffd||fffd||fffd|
'                    giDest = ci_Dest_Cancel
'                End If
'                Unload Me
'            End If
'        Else
'            Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
'        End If
        '|fffd||102||44c||fffd||fffd||242||fffd||856a||fffd||fffd|
        If giBigParent = ci_BP_eSMButton Or giBigParent = ci_BP_SETTINGS Then   'eSM|fffd|f|fffd|[|fffd|^|fffd|{|fffd|^|fffd||fffd|
            '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||30e||64fe|
            Me.Enabled = False  '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
            lblRet2 = gblDLData(cc_API_ACTION_GETDATATYPES, Format(Now, "yyyyMMddhhmmss"), ltListTypeData, lcStatusCode, lcErrMsg)
            Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
            Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
            If lblRet2 Then
                lvType = Split(ltListTypeData.value("enableTypes"), ",")
                ghblActSelData(0) = (glInArray(lvType, "1") > -1)
                ghblActSelData(1) = (glInArray(lvType, "2") > -1)
                '|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
                If Not (ghblActSelData(0) Or ghblActSelData(1)) Then
                    Call MsgBox("|fffd||fffd||fffd|p|fffd||142||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|^|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||10a4||fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||113||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
                    gtActConnInfo.blConn = False
                    Call gtSetConnInfo(goBook, gtActConnInfo)
                Else
                    '2014/04/15 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.6|fffd||389||fffd|
'                    giDest = ci_Dest_DataTypeSelect
'                    If giBigParent = ci_BP_eSMButton Then
'                        Call gtInitDataInfo(gtActDataInfo)  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                    End If
                    If giBigParent = ci_BP_eSMButton Then
                        giDest = ci_Dest_DataTypeSelect
                        Call gtInitDataInfo(gtActDataInfo)  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    ElseIf giBigParent = ci_BP_SETTINGS Then
                        giDest = ci_Dest_DataSheetSelect
                        '2014/04/24 QA|fffd|\No.140|fffd||389||fffd|
                        Call gtInitDataInfo(gtActDataInfo)  '|fffd|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    End If
                    Unload Me
                End If
            Else
                '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'                Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
                '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
                Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
            End If
        ElseIf giBigParent = ci_BP_REFRESH Or giBigParent = ci_BP_REFRESHALL Then '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|j|fffd||fffd||fffd|[
            giDest = ci_Dest_CSVOutput
            Unload Me
        ElseIf giBigParent = ci_BP_CONNINFO Then    '|fffd||691||fffd||fffd||fffd||fffd||315||3cd|X|fffd||202||fffd|A|fffd||fffd||fffd||fffd||fffd||14f|I|fffd||fffd||fffd|
            giDest = ci_Dest_Cancel
            Unload Me
        End If
    
    Else    '|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||341|A|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||282||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd|
'        Call MsgBox("|fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/04/28 QA|fffd|\No.143|fffd||389||fffd|
'        Call MsgBox(cc_ERRMSG_COMMON & vbCrLf & lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        '2014/06/13 QA|fffd|\No.175|fffd||389||fffd| MsgBox|fffd||fffd|mlMsgBoxW|fffd||255||3cd|X
        Call mlMsgBoxW(lcErrMsg, vbOKOnly + vbCritical, SYSTEM_MSG_TITLE)
        gtActConnInfo.cPassword = ""
        '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
        gtActConnInfo.cProxyPW = ""
        '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
        gtActConnInfo.blConn = False
        Call gtSetConnInfo(goBook, gtActConnInfo)
        giDest = ci_Dest_Login
        Unload Me
    End If
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdLogin_Click", True)
    '------------------------------------------
    Exit Sub
cmdLogin_Click_OnErr:
    Me.Enabled = True   '2014/04/09 QA|fffd|\No.111 |fffd||389||fffd|
    Me.Enabled = True    '2014/04/12 QA|fffd|\No.114|fffd||389||fffd| Start|fffd|i2|fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||389||fffd||fffd|j
    Call GP_Start_SCUPD
    Close
    Me.MousePointer = fmMousePointerDefault
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|O|fffd|C|fffd||fffd||fffd|F|fffd||60f||fffd||fffd||fffd|
'
' |fffd||fffd||fffd||fffd|      : pcDateTime - (i) :
'             pcStatusCode - (o) : |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd|i|fffd|g|fffd|p|fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|j
'
' |fffd||7c2||fffd|l    : |fffd||fffd||fffd||fffd||fffd||202||fffd|True
'
' @(h)
'
'--------------------------------------------------------------------------------
Private Function mblLoginExec(ByVal pcDateTime As String, ByRef pcStatusCode As String, ByRef pcErrMsg As String) As Boolean
    Dim ltData As Object
    Dim ltDLCls As New clsDLData
    Dim lblRet As Boolean
    Dim lcNow As String
    Dim lcURL As String
    '-----|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.StartFunc(MODULE_NAME, "mblLoginExec")
    '------------------------------------------
    pcStatusCode = ""
    pcErrMsg = ""
    mblLoginExec = False
    lblRet = ltDLCls.gblGetData(ltData, cc_API_ACTION_LOGIN, lcURL, pcDateTime, pcErrMsg)
    If lblRet Then
        pcStatusCode = ltData.value("errorMsg")
        If ltData.value("errorMsg") <> "" Then  '|fffd||fffd|
            '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|
            pcErrMsg = "|fffd||fffd||fffd|[|fffd|UID|fffd|E|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            lblRet = False
        Else
            With gtActUserInfo  '|fffd||fffd||fffd|[|fffd|U|fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
                .cDepartCode = ltData.value("departCode")
                .cEmployeeCode = ltData.value("employeeCode")
            End With
        End If
    End If
    '|fffd||fffd||fffd||302||582||fffd||143||fffd||fffd|O|fffd||fffd|f|fffd||fffd||fffd|H
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "mblLoginExec")
    '------------------------------------------
EXIT_LABEL:
    mblLoginExec = lblRet
End Function

'2014/04/07 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.1|fffd||389||fffd| Start
'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      :|fffd|u|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||752||fffd||315||3cd|X|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub cmdProxy_Click()
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo cmdProxy_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "cmdProxy_Click", True)
    '------------------------------------------
    Shell ("rundll32.exe shell32.dll,Control_RunDLL inetcpl.cpl ,4")
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "cmdProxy_Click", True)
    '------------------------------------------
    Exit Sub
cmdProxy_Click_OnErr:
    Call gblFuncStack.DispError
End Sub

'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      :|fffd|u|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||752||fffd||315||3cd|X(|fffd||fffd|)|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub lblProxy_Click()
    Dim lcCap As String
    Dim lcOpened As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo lblProxy_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "lblProxy_Click", True)
    '------------------------------------------
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    lcCap = "|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||752||fffd|"
'    lcOpened = Right(lblProxy.Caption, 1)
'    If lcOpened = "|fffd||fffd|" Then
'        Me.Height = 173.25
'        fraProxy.Visible = False
'        fraLogin.Top = 126
'        lblProxy.Caption = lcCap & "|fffd||fffd|"
        lblProxy.Visible = False
        lblProxy2.Visible = True

        With gtActConnInfo
            txtProxyAccountId.Text = .cProxyID
            txtProxyAccountPW.Text = .cProxyPW
        End With
        
'    Else
        Me.Height = 302
        fraProxy.Visible = True
        fraLogin.Top = 250
'        lblProxy.Caption = lcCap & "|fffd||fffd|"
'    End If
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "lblProxy_Click", True)
    '------------------------------------------
    Exit Sub
lblProxy_Click_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/04/07 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.1|fffd||389||fffd| End


'-----------------------------------------------------------------------------
' @(f)
'
' |fffd|@|fffd|\      :|fffd|u|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||752||fffd||315||3cd|X(|fffd||fffd|)|fffd|v_Click
'
' @(h)
'
'-----------------------------------------------------------------------------
Private Sub lblProxy2_Click()
    Dim lcCap As String
    Dim lcOpened As String
    '-----|fffd|G|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||752||fffd|A|fffd||590||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|-----
    On Error GoTo lblProxy_Click_OnErr
    If gblFuncStack Is Nothing Then Set gblFuncStack = New clsFuncStack
    Call gblFuncStack.StartFunc(MODULE_NAME, "lblProxy2_Click", True)
    '------------------------------------------
        Me.Height = 178.25
        fraProxy.Visible = False
        fraLogin.Top = 126
        lblProxy.Visible = True
        lblProxy2.Visible = False
        With gtActConnInfo
            txtProxyAccountId.Text = .cProxyID
            txtProxyAccountPW.Text = .cProxyPW
        End With
    '-----|fffd||590||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------
    Call gblFuncStack.ExitFunc(MODULE_NAME, "lblProxy2_Click", True)
    '------------------------------------------
    Exit Sub
lblProxy_Click_OnErr:
    Call gblFuncStack.DispError
End Sub
'2014/04/07 |fffd|v|fffd|]|fffd||fffd||fffd||fffd|No.1|fffd||389||fffd| End


Attribute VB_Name = "modWinInetDownLoad"
'-----------------------------------------------------------------------------
' @(h) JsonObject.cls                   Ver 1.00 ( 2014.3.1 M-SYSTEM )
'
' @(s)
'
' e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|A|fffd|g|fffd|V|fffd|X|fffd|e|fffd||fffd|
' HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'
'-----------------------------------------------------------------------------

'*******************************************************************************
'  WinInet(API)|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'
' |fffd||c42c||fffd||fffd|:|fffd||fffd||33a1| URL:http://www.ne.jp/asahi/excel/inoue/ [Excel|fffd||142||fffd||fffd|d|fffd||fffd|!]
'*******************************************************************************
Option Explicit
' WININET.dll|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||598|A
'32/64bit|fffd||242||fffd||fffd||a347||fffd||fffd||fffd||fffd|
#If Win64 Then
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'Private Declare PtrSafe Function InternetOpen Lib "wininet.dll" _
'    Alias "InternetOpenA" _
'    (ByVal sAgent As String, _
'     ByVal lAccessType As Long, _
'     ByVal sProxyName As String, _
'     ByVal sProxyBypass As String, _
'     ByVal lFlags As Long) As LongPtr
Private Declare PtrSafe Function InternetOpen Lib "wininet.dll" _
    Alias "InternetOpenA" _
    (ByVal sAgent As String, _
     ByVal lAccessType As Long, _
     ByVal sProxyName As String, _
     ByVal sProxyBypass As String, _
     ByVal lFlags As Long) As Long
'Private Declare PtrSafe Function InternetOpenUrl Lib "wininet.dll" _
'    Alias "InternetOpenUrlA" _
'    (ByVal hInternetSession As LongPtr, _
'     ByVal sUrl As String, _
'     ByVal sHeaders As String, _
'     ByVal lHeadersLength As Long, _
'     ByVal lFlags As Long, _
'     ByVal lContext As Long) As LongPtr
Private Declare PtrSafe Function InternetOpenUrl Lib "wininet.dll" _
    Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, _
     ByVal sUrl As String, _
     ByVal sHeaders As String, _
     ByVal lHeadersLength As Long, _
     ByVal lFlags As Long, _
     ByVal lContext As Long) As Long
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
Private Declare PtrSafe Function InternetReadFile Lib "wininet.dll" _
    (ByVal hFile As LongPtr, _
     ByRef lpBuffer As Any, _
     ByVal lNumBytesToRead As Long, _
     ByRef lNumberOfBytesRead As Long) As Long
Private Declare PtrSafe Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInet As LongPtr) As Long
' Windows|fffd||fffd|TEMP|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||64fe|
Private Declare PtrSafe Function GetTempPath Lib "KERNEL32.dll" _
    Alias "GetTempPathA" _
    (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
'2014/04/22 QA|fffd|\No.137|fffd||389||fffd|
Public Declare PtrSafe Function InternetSetOption _
            Lib "wininet.dll" _
          Alias "InternetSetOptionA" _
         (ByVal hInternet As LongPtr _
        , ByVal lOption As Long _
        , ByRef sBuffer As Any _
        , ByVal lBufferLength As Long) As Integer
Public Declare PtrSafe Function InternetQueryOption _
        Lib "wininet.dll" _
          Alias "InternetQueryOptionA" _
         (ByVal hInternet As LongPtr _
        , ByVal lOption As Long _
        , ByRef sBuffer As Any _
        , ByRef lBufferLength As Long) As Integer
#Else
Private Declare Function InternetOpen Lib "wininet.dll" _
    Alias "InternetOpenA" _
    (ByVal sAgent As String, _
     ByVal lAccessType As Long, _
     ByVal sProxyName As String, _
     ByVal sProxyBypass As String, _
     ByVal lFlags As Long) As Long
Private Declare Function InternetOpenUrl Lib "wininet.dll" _
    Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, _
     ByVal sUrl As String, _
     ByVal sHeaders As String, _
     ByVal lHeadersLength As Long, _
     ByVal lFlags As Long, _
     ByVal lContext As Long) As Long
Private Declare Function InternetReadFile Lib "wininet.dll" _
    (ByVal hFile As Long, _
     ByRef lpBuffer As Any, _
     ByVal lNumBytesToRead As Long, _
     ByRef lNumberOfBytesRead As Long) As Long
Private Declare Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInet As Long) As Long
' Windows|fffd||fffd|TEMP|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||64fe|
Private Declare Function GetTempPath Lib "KERNEL32.dll" _
    Alias "GetTempPathA" _
    (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
'2014/04/22 QA|fffd|\No.137|fffd||389||fffd|
Public Declare Function InternetSetOption _
            Lib "wininet.dll" _
          Alias "InternetSetOptionA" _
         (ByVal hInternet As Long _
        , ByVal lOption As Long _
        , ByRef sBuffer As Any _
        , ByVal lBufferLength As Long) As Integer
Public Declare Function InternetQueryOption _
        Lib "wininet.dll" _
          Alias "InternetQueryOptionA" _
         (ByVal hInternet As Long _
        , ByVal lOption As Long _
        , ByRef sBuffer As Any _
        , ByRef lBufferLength As Long) As Integer
#End If

Private Const INTERNET_OPEN_TYPE_PRECONFIG = 0
'Private Const INTERNET_OPEN_TYPE_DIRECT = 1
'Private Const INTERNET_OPEN_TYPE_PROXY = 3
'Private Const INTERNET_INVALID_PORT_NUMBER = 0
'Private Const INTERNET_FLAG_ASYNC = &H10000000
'Private Const INTERNET_FLAG_FROM_CACHE = &H1000000
'Private Const INTERNET_FLAG_OFFLINE = &H1000000
'Private Const INTERNET_FLAG_RELOAD = &H80000000
'Private Const INTERNET_FLAG_NO_CACHE_WRITE = &H4000000
'Private Const INTERNET_FLAG_NO_AUTO_REDIRECT = &H200000
'Private Const INTERNET_FLAG_PRAGMA_NOCACHE = &H100
Private Const cnsYEN = "\"
Private Const MAX_PATH = 260
Private Const cnsSIZE_BUF = 1024    ' |fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y
'2014/04/22 QA|fffd|\No.137|fffd||389||fffd|
Public Const INTERNET_OPTION_CONNECT_TIMEOUT As Long = 2 '|fffd||691||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_RECEIVE_TIMEOUT As Long = 6 '|fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_SEND_TIMEOUT As Long = 5 '|fffd||fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_CONNECT_RETRIES As Long = 3 '|fffd||fffd||fffd|g|fffd||fffd||fffd|C|fffd||fffd|

Public Const INTERNET_OPTION_PROXY_USERNAME As Integer = 43
Public Const INTERNET_OPTION_PROXY_PASSWORD  As Integer = 44


'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
Private hWnd_URL As Long
Private hWnd_Internet As Long
Private lngReqHnd  As Long 'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||155||6ce||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
'32/64bit|fffd||242||fffd||fffd||a347||fffd||fffd||fffd||fffd|
#If VBA7 Then
'    Private hWnd_Internet As LongPtr
'    Private hWnd_URL As LongPtr
'okamoto
    Private lngWinINet As LongPtr '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
    Private lngHttpHnd As LongPtr 'HTTP|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
'    Private lngReqHnd  As LongPtr 'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
#Else
'    Private hWnd_Internet As Long
'    Private hWnd_URL As Long
'okamoto
    Private lngWinINet As Long '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
    Private lngHttpHnd As Long 'HTTP|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
'    Private lngReqHnd  As Long 'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||315||6d1||fffd||fffd|p
#End If
'okamoto
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'(General)(Declarations)|fffd||58b|L|fffd|q|fffd||fffd||fffd||702||fffd|
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
#If VBA7 Then
Private Declare PtrSafe Function InternetConnect _
            Lib "wininet.dll" _
          Alias "InternetConnectA" _
         (ByVal hInternet As Long _
        , ByVal lpszServerName As String _
        , ByVal nServerPort As Integer _
        , ByVal lpszUsername As String _
        , ByVal lpszPassword As String _
        , ByVal dwService As Long _
        , ByVal dwFlags As Long _
        , ByVal dwContext As Long) As Long

Private Declare PtrSafe Function HttpAddRequestHeaders Lib "wininet.dll" Alias "HttpAddRequestHeadersA" _
         (ByVal hHttpRequest As Long _
        , ByVal sHeaders As String _
        , ByVal lHeadersLength As Long _
        , ByVal lModifiers As Long) As Integer
#Else
Private Declare Function InternetConnect _
            Lib "wininet.dll" _
          Alias "InternetConnectA" _
         (ByVal hInternet As Long _
        , ByVal lpszServerName As String _
        , ByVal nServerPort As Integer _
        , ByVal lpszUsername As String _
        , ByVal lpszPassword As String _
        , ByVal dwService As Long _
        , ByVal dwFlags As Long _
        , ByVal dwContext As Long) As Long

Private Declare Function HttpAddRequestHeaders Lib "wininet.dll" Alias "HttpAddRequestHeadersA" _
         (ByVal hHttpRequest As Long _
        , ByVal sHeaders As String _
        , ByVal lHeadersLength As Long _
        , ByVal lModifiers As Long) As Integer
#End If
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'lModifiers(|fffd|w|fffd|b|fffd|_|fffd|[|fffd||315||48f|W|fffd||fffd||fffd|@)
Public Const HTTP_ADDREQ_FLAG_ADD     As Long = &H20000000 '|fffd||1c9||fffd||fffd||fffd||fffd||fffd|
Public Const HTTP_ADDREQ_FLAG_REPLACE As Long = &H80000000 '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'nServerPort(|fffd||691||fffd||fffd|||fffd|[|fffd|g|fffd|j
Private Const INTERNET_DEFAULT_FTP_PORT    As Integer = 21 'FTP
Private Const INTERNET_DEFAULT_GOPHER_PORT As Integer = 70 'GOPHER
Private Const INTERNET_DEFAULT_HTTP_PORT   As Integer = 80 'HTTP
Private Const INTERNET_DEFAULT_HTTPS_PORT  As Integer = 443 'HTTPS
Private Const INTERNET_DEFAULT_SOCKS_PORT  As Integer = 1080 'SOCK

'dwService(|fffd|T|fffd|[|fffd|r|fffd|X|fffd||30e||fffd||fffd|)
Private Const INTERNET_SERVICE_FTP    As Long = 1 'FTP
Private Const INTERNET_SERVICE_GOPHER As Long = 2 'GOPHER
Private Const INTERNET_SERVICE_HTTP   As Long = 3 'HTTP

'dwFlags(|fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd|)
Private Const INTERNET_FLAG_PASSIVE = &H8000000 'PASSIVE|fffd||fffd||fffd|[|fffd|h|fffd||150||691||fffd|(FTP|fffd||fffd|)

'(General)(Declarations)|fffd||58b|L|fffd|q|fffd||fffd||fffd||702||fffd|
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
#If VBA7 Then
Private Declare PtrSafe Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
         (ByVal hConnect As Long _
        , ByVal lpszVerb As String _
        , ByVal lpszObjectName As String _
        , ByVal lpszVersion As String _
        , ByVal lpszReferer As String _
        , ByVal lpszAcceptTypes As Long _
        , ByVal dwFlags As Long _
        , ByVal dwContext As Long) As Long

'(General)(Declarations)|fffd||58b|L|fffd|q|fffd||fffd||fffd||702||fffd|
Private Declare PtrSafe Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
         (ByVal hRequest As LongPtr _
        , ByVal lpszHeaders As String _
        , ByVal dwHeadersLength As Long _
        , ByVal lpOptional As String _
        , ByVal dwOptionalLength As Long) As Integer
#Else
Private Declare Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
         (ByVal hConnect As Long _
        , ByVal lpszVerb As String _
        , ByVal lpszObjectName As String _
        , ByVal lpszVersion As String _
        , ByVal lpszReferer As String _
        , ByVal lpszAcceptTypes As Long _
        , ByVal dwFlags As Long _
        , ByVal dwContext As Long) As Long

'(General)(Declarations)|fffd||58b|L|fffd|q|fffd||fffd||fffd||702||fffd|
Private Declare Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
         (ByVal hRequest As Long _
        , ByVal lpszHeaders As String _
        , ByVal dwHeadersLength As Long _
        , ByVal lpOptional As String _
        , ByVal dwOptionalLength As Long) As Integer
#End If
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'dwFlags(|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|@)
Private Const INTERNET_FLAG_RELOAD        As Long = &H80000000 '|fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||16cce||fffd||fffd||fffd||fffd|A|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||72ed||fffd||fffd||fffd|I|fffd||243|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Const INTERNET_FLAG_DONT_CACHE    As Long = &H4000000 '|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_RESYNCHRONIZE As Long = &H800 '|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||fffd||113||1c2||74d||fffd||fffd||742||fffd||fffd||702||fffd|
Private Const INTERNET_FLAG_NEED_FILE     As Long = &H10 '|fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||182||fffd||fffd||248||a39e||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||10d90||fffd|
Private Const INTERNET_FLAG_HYPERLINK     As Long = &H400 '|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||14f|I|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||fffd||502||fffd||fffd||fffd||202||fffd||fffd||a347||fffd||34b||fffd||fffd||fffd||fffd|I|fffd||24d||113||1c2||74d||fffd||fffd||fffd|
Private Const INTERNET_FLAG_NO_COOKIES    As Long = &H80000 '|fffd|N|fffd|b|fffd|L|fffd|[|fffd||fffd||6d1||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_NO_AUTO_REDIRECT          As Long = &H200000 '|fffd||fffd||fffd|_|fffd|C|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_SECURE                    As Long = &H800000 ' https/ftps
Private Const INTERNET_FLAG_IGNORE_CERT_CN_INVALID    As Long = &H1000
Private Const INTERNET_FLAG_IGNORE_CERT_DATE_INVALID  As Long = &H2000
Private Const INTERNET_FLAG_KEEP_CONNECTION           As Long = &H400000

        
'(General)(Declarations)|fffd||58b|L|fffd|q|fffd||fffd||fffd||702||fffd|
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
#If VBA7 Then
Private Declare PtrSafe Function HTTPQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
         (ByVal hRequest As Long _
        , ByVal dwInfoLevel As Long _
        , ByRef lpvBuffer As Any _
        , ByRef lpdwBufferLength As Long _
        , ByRef lpdwIndex As Long) As Integer
#Else
Private Declare Function HTTPQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
         (ByVal hRequest As Long _
        , ByVal dwInfoLevel As Long _
        , ByRef lpvBuffer As Any _
        , ByRef lpdwBufferLength As Long _
        , ByRef lpdwIndex As Long) As Integer
#End If
'2015/05/11 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd

'dwInfoLevel(|fffd||64fe||fffd||fffd||fffd|e)

Private Const HTTP_QUERY_CONTENT_TYPE     As Long = 1 '|fffd|R|fffd||fffd||fffd|e|fffd||fffd||fffd|c|fffd||30e||fffd||fffd|
Private Const HTTP_QUERY_CONTENT_LENGTH   As Long = 5 '|fffd|f|fffd|[|fffd|^|fffd||fffd|
Private Const HTTP_QUERY_DATE             As Long = 9 '|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd|t
Private Const HTTP_QUERY_LAST_MODIFIED    As Long = 11 '|fffd|X|fffd|V|fffd||fffd||fffd||fffd|
Private Const HTTP_QUERY_STATUS_CODE      As Long = 19 'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||30c||fffd||fffd||283|R|fffd|[|fffd|h
Private Const HTTP_QUERY_RAW_HEADERS_CRLF As Long = 22 '|fffd|w|fffd|b|fffd|_|fffd|[|fffd||fffd||fffd|
Private Const HTTP_QUERY_LOCATION         As Long = 33 '|fffd||fffd||fffd|_|fffd|C|fffd||fffd||fffd|N|fffd|g(Location)
Private Const HTTP_QUERY_SERVER           As Long = 37 '|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd|
Private Const HTTP_QUERY_SET_COOKIE       As Long = 43 '|fffd|Z|fffd|b|fffd|g|fffd|N|fffd|b|fffd|L|fffd|[
Private Const HTTP_QUERY_COOKIE           As Long = 44 '|fffd|N|fffd|b|fffd|L|fffd|[
Private Const HTTP_QUERY_REQUEST_METHOD   As Long = 45 '|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||30e||fffd||fffd|


Private strBuffer  As String * 1024 '|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd||6d1||fffd||fffd|p
Private lngLength  As Long '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||303|f|fffd|[|fffd|^|fffd||fffd|
Private boolDoneProxyAuth As Boolean


'*******************************************************************************
'   WinInet(API)|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'*******************************************************************************
'   |fffd||fffd||fffd|n|fffd|l = |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|URL
'   |fffd||7c2||fffd|l = "OK"(|fffd||fffd||fffd||d39e|), |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W(|fffd|G|fffd||fffd||fffd|[|fffd||fffd|)
'*******************************************************************************
Public Function DownLoadFile(strURL As String, _
                             strPath As String, _
                             strFILE As String) As String
    Dim bytREC() As Byte        ' |fffd|o|fffd|b|fffd|t|fffd|@|fffd||308||fffd|
    Dim lngRC As Long           ' |fffd||7c2||fffd|l|fffd|i|fffd|[(|fffd|T|fffd|C|fffd|Y|fffd|w|fffd||fffd|)
    Dim intFF As Integer
    Dim strMSG As String
    'koiwa |fffd||1c9||fffd|
    Dim lhbTmp() As Byte
    Dim llcnt As Long

    strMSG = "URL|fffd||fffd||fffd||fffd|`"
    If strURL = "" Then GoTo DownLoadFile_ERROR
    If Right$(strPath, 1) <> cnsYEN Then strPath = strPath & cnsYEN
    ' |fffd||211|O|fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||34d||d3dc|
    If Dir(strPath & strFILE, vbNormal) <> "" Then
        On Error Resume Next
        Application.DisplayAlerts = False
        Kill strPath & strFILE
        Application.DisplayAlerts = True
    End If
    ' |fffd|i|fffd|[|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd|
    On Error GoTo DownLoadFile_ERROR
    strMSG = "|fffd||6d1||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||355|s|fffd||fffd||fffd||fffd|"
    intFF = FreeFile
    Open strPath & strFILE For Binary As #intFF
    ' URL|fffd||fffd||fffd|J|fffd||fffd|
    If OpenHTTPFile(strURL) = True Then
        ' |fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|
        ReDim bytREC(cnsSIZE_BUF - 1)
        ' URL|fffd||1c2||74d||fffd||fffd||fffd|(|fffd||fffd||1c2||fffd|)
        lngRC = GetHTTPFile(bytREC())
        '|fffd||1c2||74d||fffd||fffd||742||fffd||fffd|I|fffd||fffd||fffd||702||14c|J|fffd||fffd||502||fffd||fffd|B
        Do Until lngRC = 0
            'koiwa |fffd|C|fffd||fffd|
            'bytREC|fffd||303|T|fffd|C|fffd|Y|fffd||12f10||695||3c2||fffd||fffd||fffd||fffd|Excel|fffd||313||fffd||fffd||c0aa||fffd|~|fffd||702||fffd||302||fffd|
            '|fffd||282||314|z|fffd||fffd||248||682||fffd||fffd||582||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||782||60a4||fffd||242||fffd||fffd||fffd|B
'            ' |fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||12c90||fffd|
'            ReDim Preserve bytREC(lngRC - 1)
'            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'            Put #intFF, , bytREC
            ReDim lhbTmp(lngRC - 1)
            For llcnt = 0 To lngRC - 1
                lhbTmp(llcnt) = bytREC(llcnt)
            Next
            Put #intFF, , lhbTmp

            DoEvents
            ' URL|fffd||1c2||74d||fffd||fffd||fffd|(2|fffd||fffd||688||20d|~)
            lngRC = GetHTTPFile(bytREC())
        Loop
        DownLoadFile = "OK" 'koiwa |fffd||1c9||fffd|
    Else
        strMSG = "URL|fffd|l|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd| URL=" & strURL
        DownLoadFile = strMSG   'koiwa |fffd||1c9||fffd|
    End If
    ' URL|fffd||fffd||82||fffd||fffd||fffd|
    CloseHTTPFile
    Close #intFF
'    DownLoadFile = "OK"'koiwa |fffd||d3dc|
    On Error GoTo 0
    Exit Function
    
'-------------------------------------------------------------------------------
DownLoadFile_ERROR:
    DownLoadFile = "|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|G|fffd||fffd||fffd|[[" & strMSG & "]"
    If Err.Number <> 0 Then
        DownLoadFile = DownLoadFile & " ( " & Err.Description & " )"
    End If
    On Error GoTo 0
End Function

'*******************************************************************************
'   WinInet(API)|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|(URL|fffd||fffd|OPEN)
'*******************************************************************************
'   |fffd||fffd||fffd|n|fffd|l = |fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|URL
'   |fffd||7c2||fffd|l = True:|fffd||fffd||fffd||fffd|, False:|fffd|s|fffd||fffd||fffd||fffd|
'*******************************************************************************
Private Function OpenHTTPFile(strURL As String) As Boolean
    OpenHTTPFile = False
    ' IE|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
    hWnd_Internet = InternetOpen("about:blank", INTERNET_OPEN_TYPE_PRECONFIG, _
        vbNullString, vbNullString, 0)
    If hWnd_Internet = 0 Then Exit Function
    
    boolDoneProxyAuth = False
    lngWinINet = hWnd_Internet
    
    '2014/04/22 QA|fffd|\No.137|fffd||389||fffd|
    '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd|3|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    Dim lngRC As Long
    Dim llTimeOut As Long
    Dim lngTime As Long
    Dim llOption As Long
    llOption = INTERNET_OPTION_RECEIVE_TIMEOUT
    llTimeOut = 180000
'    Call InternetQueryOption(hWnd_Internet, llOption, lngTime, LenB(lngTime))
'    Debug.Print lngTime
    lngRC = InternetSetOption(hWnd_Internet, llOption, llTimeOut, LenB(llTimeOut))
'    Call InternetQueryOption(hWnd_Internet, llOption, lngTime, LenB(lngTime))
'    Debug.Print lngTime

        
    ' URL|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
    hWnd_URL = InternetOpenUrl(hWnd_Internet, strURL, vbNullString, 0, INTERNET_FLAG_RELOAD, 0)
    
    Dim strProxyUserName As String, strProxyPassWord As String
    strProxyUserName = gtActConnInfo.cProxyID
    strProxyPassWord = gtActConnInfo.cProxyPW
        
        
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
    Dim id() As Byte, pw() As Byte
    Call ToBytes(strProxyUserName, id)
    Call ToBytes(strProxyPassWord, pw)
    Call InternetSetOption(hWnd_URL, INTERNET_OPTION_PROXY_USERNAME, id(0), UBound(id))
    Call InternetSetOption(hWnd_URL, INTERNET_OPTION_PROXY_PASSWORD, pw(0), UBound(pw))
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    '|fffd||111||fffd|
'    Call HttpSendRequest(hWnd_URL, vbNullString, 0, vbNullString, 0)
'
'    lngRC = fcHTTPQueryInfo(hWnd_URL, HTTP_QUERY_STATUS_CODE)
'
'
'    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'    Dim statusCode
'    statusCode = Left(strBuffer, lngLength)
'    If statusCode = "407" Then
'        MsgBox "|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||314|F|fffd||602||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||fffd|ID/PW|fffd||fffd||fffd|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'        InternetCloseHandle lngReqHnd
'        InternetCloseHandle hWnd_Internet
'    End If
    '2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    

'2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jStart
'|fffd||fffd||fffd||308||292|u|fffd||142||350||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||c0b5||fffd||202||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c1|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|A|fffd|K|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd|
'    '|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|w|fffd|b|fffd|_|fffd|[|fffd||303|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|R|fffd|[|fffd|h|fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|

    lngRC = fcHTTPQueryInfo(hWnd_URL, HTTP_QUERY_STATUS_CODE)
    Dim statusCode
    statusCode = Left(strBuffer, lngLength)
    If statusCode = "407" Then
        If Not strProxyUserName = "" Or Not strProxyPassWord = "" Then
            'Proxy|fffd|F|fffd||602||fffd||fffd||502||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd| id/pw|fffd||303|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||111||fffd||fffd||fffd||fffd||fffd|
'            Dim id() As Byte, pw() As Byte
            Call ToBytes(strProxyUserName, id)
            Call ToBytes(strProxyPassWord, pw)
            Call InternetSetOption(hWnd_URL, INTERNET_OPTION_PROXY_USERNAME, id(0), UBound(id))
            Call InternetSetOption(hWnd_URL, INTERNET_OPTION_PROXY_PASSWORD, pw(0), UBound(pw))

            '|fffd||111||fffd|
            Call HttpSendRequest(hWnd_URL, vbNullString, 0, vbNullString, 0)

            lngRC = fcHTTPQueryInfo(hWnd_URL, HTTP_QUERY_STATUS_CODE)
            
'            lngRC = fcHTTPQueryInfo(hWnd_URL, HTTP_QUERY_STATUS_CODE)
            statusCode = Left(strBuffer, lngLength)
            If statusCode = "407" Then
                '|fffd||111||fffd||fffd||fffd||fffd||102||fffd||fffd|A|fffd||fffd||fffd||1d1||296||682||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|L|fffd|V|fffd|p|fffd||fffd|ID/PW|fffd||30e|w|fffd||80aa||fffd||508||fffd||fffd||fffd||102||fffd||fffd||fffd|B|fffd||fffd||fffd||fffd|A|fffd||691||fffd||fffd||fffd||fffd||60a4||fffd||fffd||fffd||202||fffd||fffd||302||154||fffd||fffd||fffd||fffd||fffd|
                MsgBox "|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||314|F|fffd||602||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B|fffd|v|fffd||fffd||fffd|L|fffd|V|fffd||fffd|ID/PW|fffd||fffd||fffd|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                InternetCloseHandle lngReqHnd
                InternetCloseHandle hWnd_Internet
                Return
            End If
        End If
    End If
'2014/08/07 ASNO e|fffd|Z|fffd|[|fffd||fffd||fffd|X|fffd|}|fffd|l|fffd|[|fffd|W|fffd||fffd||fffd|[|fffd|i|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd|A|fffd|g|fffd|d|fffd|l|fffd|jEnd
    
    If hWnd_URL = 0 Then
        InternetCloseHandle hWnd_Internet
    Else
        OpenHTTPFile = True
    End If
End Function

'*******************************************************************************
'   WinInet(API)|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|(|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||301||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd|P|fffd||fffd|)
'*******************************************************************************
'   |fffd||fffd||fffd|n|fffd|l = |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@(Byte|fffd|z|fffd||fffd|)
'   |fffd||7c2||fffd|l = |fffd|l|fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
'*******************************************************************************
Private Function GetHTTPFile(ByRef bytBuff() As Byte) As Long
    Dim lngRC As Long
    Dim lngBytesRead As Long

    lngRC = InternetReadFile(hWnd_URL, bytBuff(0), cnsSIZE_BUF, lngBytesRead)
    If lngRC = 0 Or lngBytesRead = 0 Then
        GetHTTPFile = 0
    Else
        GetHTTPFile = lngBytesRead
    End If
End Function

'*******************************************************************************
'   WinInet(API)|fffd||242||fffd||fffd|HTTP|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|(URL|fffd||fffd|CLOSE)
'*******************************************************************************
'   |fffd||fffd||fffd|n|fffd|l = (|fffd||202||fffd|)
'   |fffd||7c2||fffd|l = (|fffd||202||fffd|)
'*******************************************************************************
Private Sub CloseHTTPFile()
    On Error Resume Next
    InternetCloseHandle hWnd_URL
    InternetCloseHandle hWnd_Internet
End Sub

'*******************************************************************************
'   Windows|fffd||fffd|TEMP|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||64fe|
'*******************************************************************************
'   [|fffd||7c2||fffd|l] TEMP|32b||fffd||fffd||fffd|(|fffd||5f0||fffd||fffd||fffd||fffd|)
'*******************************************************************************
Public Function FP_GET_TEMP_PATH() As String
    Dim strBuffer As String
    Dim strPathName As String
    
    ' Buffer|fffd||fffd||fffd|m|fffd||fffd|
    strBuffer = String(MAX_PATH, Chr(0))
    ' SYSTEM|fffd|f|fffd|B|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
    Call GetTempPath(MAX_PATH, strBuffer)
    ' Null|fffd||fffd||fffd||fffd||fffd||30e||fffd|O|fffd||702||142||fffd|L|fffd||fffd||fffd||182||fffd||fffd||fffd|
    strPathName = Left$(strBuffer, InStr(1, strBuffer, Chr(0)) - 1)
    If Right$(strPathName, 1) <> cnsYEN Then strPathName = strPathName & cnsYEN
    FP_GET_TEMP_PATH = strPathName
End Function

'*******************************************************************************
'   WinInet(API)|fffd||242||fffd||fffd|HTTP |fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|w|fffd|b|fffd|_|fffd|[|fffd||30f||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
'*******************************************************************************
'|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd|w|fffd|b|fffd|_|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function fcHTTPQueryInfo(lngReqHnd As Long, lngInfoLevel As Long) As Long

    Dim tmpIndex As Long

    lngLength = 1024 '|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd|strBuffer|fffd||312||fffd||fffd||fffd|
    strBuffer = vbNullString '|fffd||c2bce||fffd||fffd||308||fffd||355|K|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||fffd|
    tmpIndex = 0

    'API|fffd||30e||fffd||fffd|s/|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
    Call HTTPQueryInfo(lngReqHnd _
                     , lngInfoLevel _
                     , ByVal strBuffer _
                     , lngLength _
                     , tmpIndex)

    '|fffd||fffd||fffd||30a||590||fffd||fffd||316||7c2||fffd|l|fffd||242||341|AAPI|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||283|R|fffd|[|fffd|h|fffd||fffd||502||fffd||fffd||702||fffd|
    fcHTTPQueryInfo = Err.LastDllError

End Function

'|fffd||fffd||fffd||fffd||fffd||42a42||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||242||fffd||fffd||fffd|i|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||389||fffd||fffd||fffd||fffd||102||202||fffd||fffd|j
Sub ToBytes(ByRef src As String, ByRef dst() As Byte)

    ReDim dst(Len(src))

    Dim i As Integer
    For i = 1 To Len(src)
        dst(i - 1) = Asc(Mid(src, i, 1))
    Next

End Sub
'----------------------------<< End of Source >>--------------------------------




' InQuest injected base64 decoded content
' RzR-zb

INQUEST-PP=macro
