Attribute VB_Name = "Module1"

Sub Macro4()
'**********************************************************************************************
' Macro4 Macro
' Macro for loading TXT-file and Devide the sheet by combination of vendor_cd and buyer_cd.
'**********************************************************************************************

Dim fname0 As String 'xls-file0
Dim fname1 As String 'csv-file
Dim fname2 As String 'xls-file1
Dim fname3 As String 'txt-file
Dim fname4 As String 'xls-file2
Dim sname1 As String 'sheet-name1
Dim sname2 As String 'sheet-name2
Dim bname1 As String 'book-name
Dim pathName As String 'path-name
Dim vendorCd As String 'vendor_code
Dim buyerCd As String 'buyer_code
Dim groupCd As String 'purchasing_group
Dim lcsv As Integer
Dim iCnt_1 As Integer
Dim fil(1 To 35) As Variant
Dim fil2(1 To 32) As Variant
Dim ws As Worksheet
Dim myRow_1 As Long
Dim myRow_2 As Long
Dim codeRow As Long
Dim lCnt_1 As Long
Dim lCnt_2 As Long
Dim sItem_no As String
Dim sPO_no As String
Dim sMaterial_no As String
Dim iLenggth As Integer
Dim iType As Integer

' When error occur then genarate error message.
    On Error GoTo ErrorHandler

'Screen hold
Application.ScreenUpdating = False
    ChDrive "C"
    ChDir "D:\"
'Show the dialog_box
     fname1 = Application.GetOpenFilename(Title:="Select a file")
     If fname1 = "False" Then
        MsgBox "Select a File."
        Exit Sub
     End If
'Extension check
      lcsv = InStr(1, fname1, ".", 1)

'xls-name2
     fname2 = Mid(fname1, 1, lcsv - 1) & ".xls"

'path-name
     pathName = ThisWorkbook.Path

'xls-name0
     fname0 = pathName & "\DS_List.xls"

Set fs = CreateObject("Scripting.FileSystemObject")

'txt-name
    'fname3 = Mid(fname1, 1, lcsv - 1) & ".txt"
    fname3 = fname1
     
    fname2 = Mid(fname1, 1, lcsv - 1) & ".xls"

'Set attribute for loading
'For i = 1 To 35
'    If i > 24 Then
'       fil(i) = Array(i, 1)
'    ElseIf i = 12 Or i = 18 Or i = 20 Or i = 24 Then
'       fil(i) = Array(i, 5)
'    Else
'       fil(i) = Array(i, 2)
'    End If
'Next

'Set attribute for loading

Sheets("layout").Select

myRow_2 = ActiveSheet.Cells(65536, 1).End(xlUp).Row - 1

For i = 1 To myRow_2
    iLenggth = Int(ActiveSheet.Cells(i + 1, 3).Value)
    iType = Int(ActiveSheet.Cells(i + 1, 4).Value)

    fil2(i) = Array(iLenggth, iType)
Next

 Application.StatusBar = "( " & fname1 & " ) is loading..."

'Loading
         Workbooks.OpenText Filename:=fname3, StartRow:=1, _
         DataType:=xlFixedWidth, FieldInfo:=fil2
         
'book-name
    bname1 = ActiveWorkbook.Name

'sheet-name
    sname1 = ActiveSheet.Name
    
'book-name
    bname1 = ActiveWorkbook.Name
     
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    
    Range("A1").Value = "LIFNR"
    Range("B1").Value = "NAME1"
    Range("C1").Value = "NAME2"
    Range("D1").Value = "BUKRS"
    Range("E1").Value = "BUTXT"
    Range("F1").Value = "WERKS"
    Range("G1").Value = "WENAME"
    Range("H1").Value = "EKORG"
    Range("I1").Value = "EKOTX"
    Range("J1").Value = "EKGRP"
    Range("K1").Value = "EKNAM"
    Range("L1").Value = "ANSDATE"
    Range("M1").Value = "TELFX"
    Range("N1").Value = "MATNR"
    Range("O1").Value = "TXZ01"
    Range("P1").Value = "LGORT"
    Range("Q1").Value = "MARK"
    Range("R1").Value = "EINDT"
    Range("S1").Value = "FUNID"
    Range("T1").Value = "EINDT2"
    Range("U1").Value = "EBELN"
    Range("V1").Value = "EBELP"
    Range("W1").Value = "ETENR"
    Range("X1").Value = "BEDAT"
    Range("Y1").Value = "MENGE"
    Range("Z1").Value = "WEMNG"
    Range("AA1").Value = "REMAIN"
    Range("AB1").Value = "MENGE2"
    Range("AC1").Value = "SCDES"
    Range("AD1").Value = "MATGR"
    Range("AE1").Value = "SGRFLG"

'Get the number of loading rows
    myRow_1 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    
    For lCnt_1 = 2 To myRow_1
        If Len(Trim(ActiveSheet.Range("N" & lCnt_1).Value)) = 0 Then
            ActiveSheet.Range("N" & lCnt_1).Value = "*"
        End If
    Next
    
    sItem_no = ""
    sPO_no = ""
    sMaterial_no = ""
    vendorCd = ""         'vendor code
    buyerCd = ""          'buyer code
    groupCd = ""          'purchasing group
    For lCnt_2 = 2 To myRow_1
       If ActiveSheet.Cells(lCnt_2, 14).Value & ActiveSheet.Cells(lCnt_2, 15).Value = sMaterial_no And Trim(ActiveSheet.Cells(lCnt_2, 14).Value) <> "*" Then
           If ActiveSheet.Cells(lCnt_2, 1).Value = vendorCd And ActiveSheet.Cells(lCnt_2, 4).Value = buyerCd And ActiveSheet.Cells(lCnt_2, 10).Value = groupCd Then
                ActiveSheet.Range("N" & lCnt_2 & ":O" & lCnt_2).Select
                Selection.ClearContents
                'ActiveSheet.Range("N" & lCnt_2).Value = "*"
                'ActiveSheet.Range("O" & lCnt_2).Select
                Selection.ClearContents
           End If
       Else
           sMaterial_no = ActiveSheet.Cells(lCnt_2, 14).Value & ActiveSheet.Cells(lCnt_2, 15).Value
       End If
       If ActiveSheet.Cells(lCnt_2, 21).Value = sPO_no And ActiveSheet.Cells(lCnt_2, 22).Value = sItem_no Then
           If ActiveSheet.Cells(lCnt_2, 1).Value = vendorCd And ActiveSheet.Cells(lCnt_2, 4).Value = buyerCd And ActiveSheet.Cells(lCnt_2, 10).Value = groupCd Then
                ActiveSheet.Range("N" & lCnt_2 & ":S" & lCnt_2).Select
                Selection.ClearContents
                ActiveSheet.Range("X" & lCnt_2 & ":AA" & lCnt_2).Select
                Selection.ClearContents
                ActiveSheet.Range("AC" & lCnt_2).Select
                Selection.ClearContents
           End If
       End If
       ActiveSheet.Cells(lCnt_2, 20).Select
       If ActiveCell.Value = "0" Then
          Selection.ClearContents
       End If
       ActiveSheet.Cells(lCnt_2, 23).Select
       If Trim(ActiveCell.Value) = "0" Then
          ActiveCell.Value = "0000"
       End If
       sItem_no = ActiveSheet.Cells(lCnt_2, 22).Value
       sPO_no = ActiveSheet.Cells(lCnt_2, 21).Value
       vendorCd = ActiveSheet.Cells(lCnt_2, 1).Value
       buyerCd = ActiveSheet.Cells(lCnt_2, 4).Value
       groupCd = ActiveSheet.Cells(lCnt_2, 10).Value
       If Len(Trim(sPO_no)) < 6 Then
          ActiveCell.Value = Right("000000" & Trim(sPO_no), 6)
       End If
       If ActiveSheet.Cells(lCnt_2, 28).Value = 0 Then
          ActiveSheet.Cells(lCnt_2, 28).Value = ActiveSheet.Cells(lCnt_2, 27).Value
       End If
       If Len(Trim(ActiveSheet.Cells(lCnt_2, 28).Value)) = 0 Then
          ActiveSheet.Cells(lCnt_2, 28).Value = 0
       End If
    Next
    
'Set format of the numeric area
    ActiveSheet.Range("Y2", "AB" & (myRow_1)).Select
    Selection.NumberFormatLocal = "0.000_ "
    
'Set format of the date area
    Range("T2").Select
    Selection.AutoFilter            'Reset the auto-filter
    Selection.AutoFilter Field:=19, Criteria1:="0"
    Selection.AutoFilter            'Reset the auto-filter
    
    ActiveSheet.Range("L2", "L" & (myRow_1)).Select
    Selection.Copy
    
    ActiveSheet.Range("R2").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
     SkipBlanks:=False, Transpose:=False

    ActiveSheet.Range("T2").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
     SkipBlanks:=False, Transpose:=False

    ActiveSheet.Range("X2").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
     SkipBlanks:=False, Transpose:=False

'Copy vendor_cd and buyer_cd
    Range("A2:A" & myRow_1 & ",D2:D" & myRow_1 & ",J2:J" & myRow_1).Select
    Selection.Copy
    
    Set ws = ActiveWorkbook.Worksheets.Add(After:=ActiveSheet)
    ws.Name = "code_book"
       
    Range("A2").Select
    ActiveSheet.Paste
    Range("A1").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "vendor"
    Range("B1").Select
    ActiveCell.FormulaR1C1 = "buyer"
    Range("C1").Select
    ActiveCell.FormulaR1C1 = "group"
       
'Make a code-list from a combination of vendor_cd and buyer_cd
    ActiveSheet.Range("A1").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, CopyToRange:=ActiveSheet.Range("D1"), Unique:=True
       
    Columns("A:C").Select
    Selection.Delete Shift:=xlToLeft
       
    codeRow = ActiveSheet.Cells(65536, 2).End(xlUp).Row
       
       Sheets(sname1).Select                   '
       
    Set fs2 = CreateObject("Scripting.FileSystemObject")

    vendorCd = ""         'vendor code
    buyerCd = ""          'buyer code
    groupCd = ""          'purchasing group

'Devide the sheet by combination of vendor_cd and buyer_cd
    For iCnt_1 = 2 To codeRow
        vendorCd = Sheets("code_book").Cells(iCnt_1, 1)         'vendor code
        buyerCd = Sheets("code_book").Cells(iCnt_1, 2)          'buyer code
        groupCd = Sheets("code_book").Cells(iCnt_1, 3)          'purchasing group
       
        Range("A2").Select
        Selection.AutoFilter            'Reset the auto-filter
        Selection.AutoFilter Field:=1, Criteria1:=vendorCd

        Range("A2").Select
        Selection.AutoFilter Field:=10, Criteria1:=groupCd

        Range("A2").Select
        Selection.AutoFilter Field:=4, Criteria1:=buyerCd

        Selection.CurrentRegion.Copy    'Copy the active-region

        Windows("DS_List.xls").Activate
        
        Set ws = ActiveWorkbook.Worksheets.Add(After:=ActiveSheet)
        ws.Name = "vendor_1"
       
        Sheets(ws.Name).Select                   '
        ActiveSheet.Range("A1").PasteSpecial Paste:=xlAll 'Past all

        myRow_1 = Worksheets(ws.Name).Cells(65536, 2).End(xlUp).Row
     
        ActiveSheet.Cells.Select
        With Selection.Font
            .Name = "Tahoma"
            .Size = 11
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
      
        Windows("DS_List.xls").Activate
 
        'xls2-name
        fname4 = "D:\" & Trim(buyerCd) & "\" & Trim(groupCd) & "\" & Trim(vendorCd) & "\" & sname1 & ".xls"
     
        If Not fs2.FolderExists("D:\" & Trim(buyerCd)) Then
            fs2.CreateFolder ("D:\" & Trim(buyerCd))
        End If
     
        If Not fs2.FolderExists("D:\" & Trim(buyerCd) & "\" & Trim(groupCd)) Then
            fs2.CreateFolder ("D:\" & Trim(buyerCd) & "\" & Trim(groupCd))
        End If
     
        If Not fs2.FolderExists("D:\" & Trim(buyerCd) & "\" & Trim(groupCd) & "\" & Trim(vendorCd)) Then
            fs2.CreateFolder ("D:\" & Trim(buyerCd) & "\" & Trim(groupCd) & "\" & Trim(vendorCd))
        End If
     
        'If same name file exists, then change name of old file and save
        If fs2.FileExists(fname4) Then
            Name fname4 As "D:\" & Trim(buyerCd) & "\" & Trim(groupCd) & "\" & Trim(vendorCd) & "\" & sname1 & Format(Date, "yyyymmdd") & Format(Now, "hhmmss") & ".xls"
        End If

        Application.StatusBar = ""
         
        Sheets("menu").Select
     
        ActiveSheet.Shapes("CommandButton1").Select
        Selection.Enabled = False
     
        ActiveSheet.Shapes("CommandButton2").Select
        Selection.Enabled = True
     
        ActiveSheet.Shapes("CommandButton3").Select
        Selection.Enabled = True
     
        ActiveSheet.Shapes("CommandButton4").Select
        Selection.Enabled = True
     
        ActiveSheet.Range("A1").Select
     
        'Save the file
        ActiveWorkbook.SaveAs Filename:=fname4, FileFormat:= _
            xlNormal, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _
            , CreateBackup:=False

        Sheets("vendor_1").Select
     
        Application.DisplayAlerts = False
        ActiveWindow.SelectedSheets.Delete
        
        Sheets("menu").Select
     
        ActiveSheet.Shapes("CommandButton1").Select
        Selection.Enabled = True
     
        ActiveSheet.Shapes("CommandButton2").Select
        Selection.Enabled = False
     
        ActiveSheet.Shapes("CommandButton3").Select
        Selection.Enabled = False
     
        ActiveSheet.Shapes("CommandButton4").Select
        Selection.Enabled = False
     
        'Save the file
        ActiveWorkbook.SaveAs Filename:=fname0, FileFormat:= _
            xlNormal, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _
            , CreateBackup:=False
     
        Application.DisplayAlerts = True
        
        Windows(bname1).Activate
        Sheets(sname1).Select
     
    Next
     
     Windows("DS_List.xls").Activate
         
     'Close the files
     Windows(bname1).Activate

     ActiveWindow.Close SaveChanges:=False

     Workbooks.Close
 
     Application.ScreenUpdating = True

ErrorHandler:
    
    ' Display Error message after checking the error occurrence.

    If Err.Number <> 0 Then
       Msg = "Error No. " & Str(Err.Number) & "Error occured in " & Err.Source & Chr(13) & Err.Description
       MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
    End If

End Sub


Attribute VB_Name = "Module2"
Sub Macro2()

'************************************
' Macro2 Macro
' Macro for create TXT-file.
'************************************

    Dim iCnt_1 As Integer
    Dim myRow_1 As Long
    Dim sLine As String
    Dim sItem As String
    Dim leng As Long
    Dim Msg
    Dim Response As String
    Dim sItem_no As String
    Dim sPO_no As String
    Dim sMaterial_no As String
    Dim sPlant As String
    Dim sMatnr As String
    Dim sTxz01 As String
    Dim sLgort As String
    Dim sMark As String
    Dim sEindt As String
    Dim sFunid As String
    Dim sBedat As String
    Dim sMenge As String
    Dim sWemng As String
    Dim sRemain As String
    Dim fname1 As String
    
' When error occur then genarate error message.
    On Error GoTo ErrorHandler
    
'Screen hold
    Application.ScreenUpdating = False

    Sheets("vendor_1").Select

'Get the number of loading rows
    myRow_1 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    
    If myRow_1 <= 2 And Trim(ActiveSheet.Cells(2, 1).Value) = "" Then
        Response = MsgBox("There is no data in the Worksheet.", vbCritical + vbOKOnly, "OutPut")
        Sheets("menu").Select
        Exit Sub
    End If
    
    sLine = ""
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    
    'Response = MsgBox("IT_ITAB.txt will save into a:\..." & vbCrLf & "Set FD into a FDD!", vbOKCancel + vbExclamation + vbDefaultButton2, "Save TXT file into...")
    Response = MsgBox("IT_ITAB.txt will save into D:...", vbOKCancel + vbExclamation + vbDefaultButton2, "Save TXT file into...")
    If Response = vbOK Then
        ChDir "D:\"
        fname1 = Application.GetSaveAsFilename(InitialFileName:="IT_ITAB.txt", Title:="Specify target folder")
        If fname1 = "False" Then
            Response = MsgBox("Target folder has not specify.", vbCritical + vbOKOnly, "OutPut")
            Sheets("menu").Select
            Exit Sub
        End If
       'If fs.FileExists("D:\IT_ITAB.txt") Then
       '   Name "D:\IT_ITAB.txt" As "D:\IT_ITAB" & Format(Date, "yyyymmdd") & Format(Now, "hhmmss") & ".txt"
       'End If
       If fs.FileExists(fname1) Then
          Name fname1 As Mid(fname1, 1, InStrRev(fname1, ".") - 1) & Format(Date, "yyyymmdd") & Format(Now, "hhmmss") & ".txt"
       End If
    
       sItem_no = ""
       sPO_no = ""
       sMaterial_no = ""
       sMatnr = ""
       sTxz01 = ""
       sLgort = ""
       sMark = ""
       sEindt = ""
       sFunid = ""
       sBedat = ""
       sMenge = ""
       sWemng = ""
       sRemain = ""
       sPlant = ""
       iFlag_1 = 0
       iFlag_2 = 0
       
       'Set a = fs.CreateTextFile("D:\IT_ITAB.txt", True)
       Set a = fs.CreateTextFile(fname1, True)
    
       For iCnt_1 = 2 To myRow_1
           sItem = ActiveSheet.Cells(iCnt_1, 1).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 2).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 3).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 4).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 5).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 6).Value
           If Len(Trim(sItem)) = 0 Then
               sItem = sPlant
           Else
               sPlant = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 7).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 8).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 9).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 10).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 11).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           If IsDate(ActiveSheet.Cells(iCnt_1, 12).Value) Then
              sItem = Format(ActiveSheet.Cells(iCnt_1, 12).Value, "yyyymmdd")
           Else
              sItem = ""
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 13).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 14).Value
           'If Len(Trim(sItem)) = 0 Then
           If Trim(sItem) = "*" Then
               sItem = sMatnr
           Else
               sMatnr = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 15).Value
           If Len(Trim(sItem)) = 0 Then
               sItem = sTxz01
           Else
               sTxz01 = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 16).Value
           If Len(Trim(sItem)) = 0 Then
               sItem = sLgort
           Else
               sLgort = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 17).Value
           If Len(Trim(sItem)) = 0 Then
               sItem = sMark
           Else
               sMark = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           If IsDate(ActiveSheet.Cells(iCnt_1, 18).Value) Then
              sItem = Format(ActiveSheet.Cells(iCnt_1, 18).Value, "yyyymmdd")
           Else
              sItem = Trim(ActiveSheet.Cells(iCnt_1, 18).Value)
           End If
           If Len(Trim(sItem)) = 0 Then
               If sEindt = "Not Date" Then
                  sItem = ""
               Else
                  sItem = sEindt
               End If
           Else
               If IsDate(Left(sItem, 4) & "/" & Mid(sItem, 5, 2) & "/" & Right(sItem, 2)) Then
                  sEindt = Trim(sItem)
               Else
                  sItem = ""
                  sEindt = "Not Date"
               End If
               'sEindt = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 19).Value
           If Len(Trim(sItem)) = 0 Then
               sItem = sFunid
           Else
               sFunid = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           'sItem = Format(ActiveSheet.Cells(iCnt_1, 20).Value, "yyyymmdd")
           If IsDate(ActiveSheet.Cells(iCnt_1, 20).Value) Then
              sItem = Format(ActiveSheet.Cells(iCnt_1, 20).Value, "yyyymmdd")
           Else
              sItem = ""
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 21).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 22).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 23).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           If IsDate(ActiveSheet.Cells(iCnt_1, 24).Value) Then
              sItem = Format(ActiveSheet.Cells(iCnt_1, 24).Value, "yyyymmdd")
           Else
              sItem = Trim(ActiveSheet.Cells(iCnt_1, 24).Value)
           End If
           If Len(Trim(sItem)) = 0 Then
               If sBedat = "Not Date" Then
                  sItem = ""
               Else
                  sItem = sBedat
               End If
           Else
               If IsDate(Left(sItem, 4) & "/" & Mid(sItem, 5, 2) & "/" & Right(sItem, 2)) Then
                  sBedat = Trim(sItem)
               Else
                  sItem = ""
                  sBedat = "Not Date"
               End If
           End If
           
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 25).Value * 1000
           If Len(Trim(ActiveSheet.Cells(iCnt_1, 25).Value)) = 0 Then
               sItem = sMenge
           Else
               sMenge = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 26).Value * 1000
           If Len(Trim(ActiveSheet.Cells(iCnt_1, 26).Value)) = 0 Then
               sItem = sWemng
           Else
               sWemng = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 27).Value * 1000
           If Len(Trim(ActiveSheet.Cells(iCnt_1, 27).Value)) = 0 Then
               sItem = sRemain
           Else
               sRemain = Trim(sItem)
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           If IsNumeric(ActiveSheet.Cells(iCnt_1, 28).Value) Then
              sItem = ActiveSheet.Cells(iCnt_1, 28).Value * 1000
           Else
              sItem = ""
           End If
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 29).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 30).Value
           sItem = Trim(sItem) & vbTab
           sLine = sLine & sItem
           sItem = ActiveSheet.Cells(iCnt_1, 31).Value
           sItem = Trim(sItem)
           sLine = sLine & sItem
    
           a.WriteLine (sLine)
           sLine = ""
   
       Next
       
       a.Close
       
       Dim d, msg_1, msg_2, f
    
       'Set d = fs.GetDrive(fs.GetDriveName("a:"))
       Set d = fs.GetDrive(fs.GetDriveName("D:"))
       'Set f = fs.GetFile("D:\IT_ITAB.txt")
       Set f = fs.GetFile(fname1)
    
       msg_1 = "Drive " & d.DriveLetter & ": - "
    
       If Not d.IsReady Then
           msg_2 = msg_1 & vbCrLf & "Drive is not ready!"
           MsgBox msg_2
    
'Screen hold
           Application.ScreenUpdating = True
    
           Sheets("menu").Select
           Exit Sub
       End If
    
       If d.FreeSpace < f.Size Then
           msg_2 = msg_1 & vbCrLf & "Drive dose not have enough free space!"
           MsgBox msg_2
    
'Screen hold
           Application.ScreenUpdating = True
    
           Sheets("menu").Select
           Exit Sub
       End If
       
       'If fs.FileExists("a:\IT_ITAB.txt") Then
       '   Name "a:\IT_ITAB.txt" As "a:\IT_ITAB" & Format(Date, "yyyymmdd") & Format(Now, "hhmmss") & ".txt"
       'End If
       
       'fs.CopyFile "D:\IT_ITAB.txt", "a:\"
       'fs.CopyFile "D:\IT_ITAB.txt", "D:\"
       
       'MsgBox "IT_ITAB.txt had saved into a:\."
       Response = MsgBox("IT_ITAB.txt had saved into D:.", vbInformation + vbOKOnly, "OutPut")
       
       'fs.DeleteFile "D:\IT_ITAB.txt"
    Else
        'MsgBox "IT_ITAB.txt had not saved."
        Response = MsgBox("IT_ITAB.txt had not saved.", vbCritical + vbOKOnly, "OutPut")
        Sheets("menu").Select
    End If
    
'Screen hold
    Application.ScreenUpdating = True
    
    Sheets("menu").Select
    
    ThisWorkbook.Save

ErrorHandler:
    
    ' Display Error message after checking the error occurrence.

    If Err.Number <> 0 Then
       Msg = "Error No. " & Str(Err.Number) & "Error occured in " & Err.Source & Chr(13) & Err.Description
       MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
    End If

End Sub

Attribute VB_Name = "Module3"
Sub Macro3()
'***********************************************
' Macro3 Macro
' Macro for Print.
'***********************************************

Dim myRow_1 As Long
Dim myRow_2 As Long
Dim myRow_3 As Long
Dim myRow_4 As Long
Dim myRow_5 As Long
Dim Response As String
Dim vertxt As String
Dim fax_no As String
Dim Vendor_Cd As String
Dim Vendor_Nm As String
Dim Company As String
Dim Plant As String
Dim Purchs_Org As String
Dim Purchs_Grp As String
Dim ANSDATE As String
Dim sVendcd As String
    
    Application.ScreenUpdating = False
    
    Sheets("menu").Select
    vertxt = ActiveSheet.Cells(2, 9).Value
    
'Worksheet clear "Print"
    Sheets("Print").Select
    myRow_4 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    If myRow_4 > 0 Then
       ActiveSheet.Rows("1:" & myRow_4 + 2).Select
       Selection.Delete Shift:=xlUp
    End If
       
    Sheets("Entry Sheet").Select
    
    ThisWorkbook.Worksheets("Entry Sheet").Activate

'Unprotect the sheet
    ActiveSheet.Unprotect
    
    myRow_1 = ActiveSheet.Cells(65536, 12).End(xlUp).Row

'Data check
    If myRow_1 <= 10 And Trim(ActiveSheet.Cells(10, 12).Value) = "" Then
'---------------------------------------------------------- Data Set Part

'Initialize the Entry sheet
        If myRow_1 > 10 Then
            ActiveSheet.Rows("10:" & myRow_1).Select
            Selection.Delete Shift:=xlUp
        End If
        ActiveSheet.Rows("10:10").Select
        Selection.ClearContents
            
'MergeCells cancel
        Union(ActiveSheet.Range("S4:V4"), ActiveSheet.Range("V10:W10")).Select
        With Selection
            .HorizontalAlignment = xlGeneral
            .VerticalAlignment = xlBottom
            .WrapText = False
            .Orientation = 0
            .AddIndent = False
            .ShrinkToFit = False
            .MergeCells = False
        End With
        
        Sheets("vendor_1").Select
        
        myRow_5 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    
'Copy the hedder part
        Vendor_Cd = Range("A2").Value
        Vendor_Nm = Trim(Range("B2").Value) & Trim(Range("C2").Value)
        Company = Trim(Range("D2").Value) & Space(1) & Trim(Range("E2").Value)
        'Plant = Trim(Range("F2").Value) & Space(1) & Trim(Range("G2").Value)
        Purchs_Org = Trim(Range("H2").Value) & Space(1) & Trim(Range("I2").Value)
        Purchs_Grp = Trim(Range("J2").Value) & Space(1) & Trim(Range("K2").Value)
        ANSDATE = Trim(Range("L2").Value)
        fax_no = Trim(Range("M2").Value)
    
        Sheets("Entry Sheet").Select
        Range("D4").Value = Vendor_Cd
        Range("G4").Value = Vendor_Nm
        Range("B7").Value = Company
        'Range("F7").Value = Plant
        Range("E7").Value = Purchs_Org
        Range("I7").Value = Purchs_Grp
        Range("K2").Value = ANSDATE
        Range("S4").Value = fax_no
    
'Set the format of the hedder part
        Range("K2").Select                      'ANSDATE
        Application.CutCopyMode = False
        With Selection.Font
            .Name = "Tahoma"
            .Size = 12
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
        Range("B7:D7").Select                   'Company
        With Selection.Font
            .Name = "Tahoma"
            .Size = 12
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
        Range("D4").Select                      'Vendor Code
        With Selection.Font
            .Name = "Tahoma"
            .Size = 14
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
        Range("G4:Q4").Select                   'Vendor Name
        With Selection.Font
            .Name = "Tahoma"
            .Size = 14
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
        Range("S4").Select                      'Fax No.
        With Selection.Font
            .Name = "Tahoma"
            .Size = 14
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
'Copy the details part
        Sheets("vendor_1").Select
    
        ActiveSheet.Range("N2", "N" & (myRow_5)).Select             'MATNR
    
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("D10").Select                                         'Material Code
        ActiveSheet.Paste
        ActiveSheet.Range("D10", "D" & (myRow_5 + 8)).Select
        Application.CutCopyMode = False
        With Selection.Font
            .Name = "Tahoma"
            .Size = 11
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
        
        Sheets("vendor_1").Select
        ActiveSheet.Range("O2", "O" & (myRow_5)).Select             'TXZ01
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("E10").Select                                         'Description
        ActiveSheet.Paste
        ActiveSheet.Range("E10", "H" & (myRow_5 + 8)).Select
        Application.CutCopyMode = False
        With Selection.Font
            .Name = "Tahoma"
            .Size = 11
            .Strikethrough = False
            .Superscript = False
            .Subscript = False
            .OutlineFont = False
            .Shadow = False
            .Underline = xlUnderlineStyleNone
            .ColorIndex = xlAutomatic
        End With
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("P2", "P" & (myRow_5)).Select             'LGORT
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("I10").Select                                         'Stor Location
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("Q2", "Q" & (myRow_5)).Select             'MARK
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("O10").Select                                         'DD
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("R2", "R" & (myRow_5)).Select             'EINDT
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("P10").Select                                         'Delivery Date
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("S2", "S" & (myRow_5)).Select             'FUNID
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("S10").Select                                         'FUNID
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("T2", "T" & (myRow_5)).Select             'EINDT2
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("T10").Select                                         'Schedule Delivery Date
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("U2", "U" & (myRow_5)).Select             'EBELN
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("L10").Select                                         'PO No.
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("V2", "V" & (myRow_5)).Select             'EBELP
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("M10").Select                                         'Item
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("W2", "W" & (myRow_5)).Select             'ETENR
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("N10").Select                                         'Sch Line
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("X2", "X" & (myRow_5)).Select             'BEDAT
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("K10").Select                                         'PO Issue Date
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("Y2", "Y" & (myRow_5)).Select             'MENGE
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("Q10").Select                                         'Quantity
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("AA2", "AA" & (myRow_5)).Select           'REMAIN
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("S10").Select                                         'Remaining Order Qty
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("AB2", "AB" & (myRow_5)).Select           'MENGE2
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("U10").Select                                         'Schedule Qty
        ActiveSheet.Paste
        Application.CutCopyMode = False
        
        Sheets("vendor_1").Select
        ActiveSheet.Range("AC2", "AC" & (myRow_5)).Select           'SCDES
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("V10").Select                                         'Notes
        ActiveSheet.Paste
        'ActiveSheet.Range("V10", "W" & (myRow_5 + 8)).Select
        Application.CutCopyMode = False
        
        Sheets("vendor_1").Select
        ActiveSheet.Range("AD2", "AD" & (myRow_5)).Select           'MATGR
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("J10").Select                                         'SGR
        ActiveSheet.Paste
        Application.CutCopyMode = False
        
        Sheets("vendor_1").Select
        ActiveSheet.Range("AE2", "AE" & (myRow_5)).Select           'SGRFLG
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("C10").Select                                         'Material Group
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
        Sheets("vendor_1").Select
        ActiveSheet.Range("F2", "F" & (myRow_5)).Select             'WERKS
        Selection.Copy
        Sheets("Entry Sheet").Select
        Range("B10").Select                                         'Plant
        ActiveSheet.Paste
        Application.CutCopyMode = False
    
'Draw lines in details area
        ActiveSheet.Range("B10", "H" & (myRow_5 + 8)).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    
        ActiveSheet.Range("C10", "D" & (myRow_5 + 8)).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    
        ActiveSheet.Range("I10", "R" & (myRow_5 + 8)).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With

'Change fields frormat into a character string
        ActiveSheet.Range("L10", "N" & (myRow_5 + 8)).Select

        Selection.NumberFormatLocal = "@"
        
        myRow_1 = myRow_5 + 8
    
'---------------------------------------------------------- Data Set Part
    End If

    sVendcd = Sheets("vendor_1").Cells(2, 1).Value

'MergeCells cancel
    Union(ActiveSheet.Range("S4:V4"), ActiveSheet.Range("V10:W" & (myRow_1))).Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .ShrinkToFit = False
        .MergeCells = False
    End With
    
'Worksheet "Entry Sheet" contents copy
    ActiveSheet.Range("A1", "W" & (myRow_1)).Select
    Selection.Copy
    
    Sheets("Print").Select
    
    ActiveSheet.Range("A1").Select
    
'Paste data format
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False

'Paste data value
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
'Selected area colors off
    ActiveSheet.Range("S10", "W" & (myRow_1)).Select
    Selection.Interior.ColorIndex = xlNone
    
'Set row height in headder area
    ActiveSheet.Rows("9:9").Select
    Selection.RowHeight = 32
    
'Set row height in details area
    ActiveSheet.Rows("10:" & myRow_1 + 1).Select
    Selection.RowHeight = 21
    
    myRow_2 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
        
'Draw lines in details area
    ActiveSheet.Range("B10:W" & myRow_2).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    If myRow_2 - 1 > 20 Then
       With Selection.Borders(xlInsideHorizontal)
           .LineStyle = xlContinuous
           .Weight = xlHairline
           .ColorIndex = xlAutomatic
       End With
    End If
                   
'Select area by entry case
    ActiveSheet.Range("S9:S" & myRow_2 & ", T9:T" & myRow_2 & ", U9:U" & myRow_2 & ", V9:W" & myRow_2).Select
    
'Draw lines on selected area
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = xlAutomatic
    End With
    
'Copy Version No.
    ActiveSheet.Range("W8").Select
    ActiveCell.Value = vertxt
    Selection.HorizontalAlignment = xlRight
    With Selection.Font
        .Name = "Tahoma"
        .Size = 9
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    
'Clear title area
    ActiveSheet.Cells(1, 3).Select
    ActiveCell.ClearContents
        
'Print configuration
    
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$9:$9"
        .PrintTitleColumns = ""
    End With
    ActiveSheet.PageSetup.PrintArea = ""
    With ActiveSheet.PageSetup
        .LeftHeader = "&""Tahoma,Bold""&18Delivery Schedule List    Vendor:" & sVendcd
        .CenterHeader = ""
        .RightHeader = "Page: &P / &N"
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.590551181102362)
        .RightMargin = Application.InchesToPoints(0.590551181102362)
        .TopMargin = Application.InchesToPoints(0.984251968503937)
        .BottomMargin = Application.InchesToPoints(0.511811023622047)
        .HeaderMargin = Application.InchesToPoints(0.511811023622047)
        .FooterMargin = Application.InchesToPoints(0.511811023622047)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
    End With
        
    Response = MsgBox("Delivery Schedule List will print out", vbOKCancel + vbQuestion + vbDefaultButton1, "Print Out")
    
    If Response = vbOK Then
'Print execution
       Application.ScreenUpdating = True
       Sheets("Print").Select
       myRow_3 = ActiveSheet.Cells(65536, 12).End(xlUp).Row
       ActiveSheet.Range("A1", "W" & (myRow_3)).Select
       ActiveWindow.RangeSelection.PrintOut
    Else
       MsgBox "Delivery Schedule List was not printed."
    End If
    
    Sheets("menu").Select
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module4"
Sub Macro1()
'**************************************
' Macro1 Macro
' Macro for Making Entry-Sheet.
'**************************************

Dim myRow As Long
Dim myRow_2 As Long
Dim fax_no As String
Dim Vendor_Cd As String
Dim Vendor_Nm As String
Dim Company As String
Dim Plant As String
Dim Purchs_Org As String
Dim Purchs_Grp As String
Dim ANSDATE As String
Dim iCnt_1 As Integer
Dim sItem_no As String
Dim sPO_no As String
'Lim
Dim stRow As Long
Dim lastRow As Long
Dim i As Long
Dim partNo As String
Dim partDesc As String
    
'Lim - Fill in Material & Description _ Start
    
stRow = 2
Sheets("vendor_1").Select
    
Range("P5000").Select
Selection.End(xlUp).Select
lastRow = ActiveCell.Row
    
    i = stRow
    partNo = Cells(i, 14)
    partDesc = Cells(i, 15)
    i = i + 1
    Do While i <= lastRow
        If Cells(i, 14) = "" Then
            Cells(i, 14) = partNo
            Cells(i, 15) = partDesc
        Else
            partNo = Cells(i, 14)
            partDesc = Cells(i, 15)
        End If
        i = i + 1
    Loop
    
'Lim - Fill in Material & Description _ End

' When error occur then genarate error message.
'    On Error GoTo ErrorHandler
    
'Application.ScreenUpdating = False
    
    Sheets("Entry Sheet").Select

'Unprotect the sheet
    ActiveSheet.Unprotect
    myRow_2 = ActiveSheet.Cells(65536, 12).End(xlUp).Row
    
'Initialize the Entry sheet
    If myRow_2 > 10 Then
       ActiveSheet.Rows("10:" & myRow_2).Select
       Selection.Delete Shift:=xlUp
    End If
    ActiveSheet.Rows("10:10").Select
    Selection.ClearContents
    myRow_2 = ActiveSheet.Cells(65536, 12).End(xlUp).Row
    
    Sheets("vendor_1").Select
    
    myRow = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    
'Copy the hedder part
    Vendor_Cd = Range("A2").Value
    Vendor_Nm = Trim(Range("B2").Value) & Trim(Range("C2").Value)
    Company = Trim(Range("D2").Value) & Space(1) & Trim(Range("E2").Value)
    'Plant = Trim(Range("F2").Value) & Space(1) & Trim(Range("G2").Value)
    Purchs_Org = Trim(Range("H2").Value) & Space(1) & Trim(Range("I2").Value)
    Purchs_Grp = Trim(Range("J2").Value) & Space(1) & Trim(Range("K2").Value)
    ANSDATE = Trim(Range("L2").Value)
    fax_no = Trim(Range("M2").Value)
    
    Sheets("Entry Sheet").Select
    Range("D4").Value = Vendor_Cd
    Range("G4").Value = Vendor_Nm
    Range("B7").Value = Company
    'Range("F7").Value = Plant
    Range("E7").Value = Purchs_Org
    Range("I7").Value = Purchs_Grp
    Range("K2").Value = ANSDATE
    Range("S4").Value = fax_no
    
'Set the format of the hedder part
    Range("K2").Select
    'Answer Date
    Application.CutCopyMode = False
    With Selection.Font
        .Name = "Tahoma"
        .Size = 12
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    
    Range("B7:D7").Select
    'Company
    With Selection.Font
        .Name = "Tahoma"
        .Size = 12
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    
    Range("E7:H7").Select
    'Purchsing Org.
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    
    Range("I7:L7").Select
    'Purchsing Group
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    
    Range("D4").Select
    'Vendor Code
    With Selection.Font
        .Name = "Tahoma"
        .Size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    Range("G4:Q4").Select
    'Vendor Name
    With Selection.Font
        .Name = "Tahoma"
        .Size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    
    Range("R4:V4").Select
    'Fax No.
    With Selection.Font
        .Name = "Tahoma"
        .Size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    'Range("L2").Select
    
'Copy the details part
    Sheets("vendor_1").Select
    'Material code (MATNR)
    ActiveSheet.Range("N2", "N" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("D10").Select
    ActiveSheet.Paste
    
    Sheets("vendor_1").Select
    'Material Group (SGRFLG)
    ActiveSheet.Range("AE2", "AE" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("C10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Plant (WERKS)
    ActiveSheet.Range("F2", "F" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("B10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    ActiveSheet.Range("B10", "D" & (myRow + 8)).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    If myRow - 2 > 0 Then
       With Selection.Borders(xlInsideHorizontal)
           .LineStyle = xlContinuous
           .Weight = xlThin
           .ColorIndex = xlAutomatic
       End With
    End If
    
    Sheets("vendor_1").Select
    'Description (TXZ01)
    ActiveSheet.Range("O2", "O" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("E10").Select
    ActiveSheet.Paste
    ActiveSheet.Range("E10", "H" & (myRow + 8)).Select
    Application.CutCopyMode = False
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Font
        .Name = "Tahoma"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    If myRow - 2 > 0 Then
       With Selection.Borders(xlInsideHorizontal)
           .LineStyle = xlContinuous
           .Weight = xlThin
           .ColorIndex = xlAutomatic
       End With
    End If
    
    Sheets("vendor_1").Select
    'Stor Location (LGORT)
    ActiveSheet.Range("P2", "P" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("I10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'DD (MARK)
    ActiveSheet.Range("Q2", "Q" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("O10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Delivery Date (EINDT)
    ActiveSheet.Range("R2", "R" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("P10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    '(FUNID)
    ActiveSheet.Range("S2", "S" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("S10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Sheets("vendor_1").Select
    'Schedule Delivery Date (EINDT2)
    ActiveSheet.Range("T2", "T" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("T10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Sheets("vendor_1").Select
    'PO No. (EBELN)
    ActiveSheet.Range("U2", "U" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("L10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Item (EBELP)
    ActiveSheet.Range("V2", "V" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("M10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Sch Line (ETENR)
    ActiveSheet.Range("W2", "W" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("N10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'PO Issue Date (BEDAT)
    ActiveSheet.Range("X2", "X" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("K10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Quantity (MENGE)
    ActiveSheet.Range("Y2", "Y" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("Q10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Remaining Order Qty (REMAIN)
    ActiveSheet.Range("AA2", "AA" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("R10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    Sheets("vendor_1").Select
    'Schedule Qty (MENGE2)
    ActiveSheet.Range("AB2", "AB" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("U10").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Selection.Locked = False
    Selection.FormulaHidden = False
        
    Sheets("vendor_1").Select
    'SGR (MATGR)
    ActiveSheet.Range("AD2", "AD" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("J10").Select
    ActiveSheet.Paste
    ActiveSheet.Range("I10", "U" & (myRow + 8)).Select
    Application.CutCopyMode = False
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    If myRow - 2 > 0 Then
       With Selection.Borders(xlInsideHorizontal)
           .LineStyle = xlContinuous
           .Weight = xlThin
           .ColorIndex = xlAutomatic
       End With
    End If
    
    Sheets("vendor_1").Select
    'Notes (SCDES)
    ActiveSheet.Range("AC2", "AC" & (myRow)).Select
    Selection.Copy
    Sheets("Entry Sheet").Select
    Range("V10").Select
    ActiveSheet.Paste
    ActiveSheet.Range("V10", "W" & (myRow + 8)).Select
    Application.CutCopyMode = False
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    If myRow - 2 > 0 Then
       With Selection.Borders(xlInsideHorizontal)
           .LineStyle = xlContinuous
           .Weight = xlThin
           .ColorIndex = xlAutomatic
       End With
    End If
    Selection.Locked = False
    Selection.FormulaHidden = False
                    
    myRow_2 = ActiveSheet.Cells(65536, 14).End(xlUp).Row
    
'Merge "Notes" fields
    Application.DisplayAlerts = False
    sItem_no = ""
    sPO_no = ""
    For iCnt_1 = 10 To myRow_2
        ActiveSheet.Range("V" & iCnt_1, "W" & iCnt_1).Select
        With Selection
            .HorizontalAlignment = xlGeneral
            .VerticalAlignment = xlBottom
            .WrapText = False
            .Orientation = 0
            .AddIndent = False
            .ShrinkToFit = False
            .MergeCells = True
        End With
        If ActiveSheet.Cells(iCnt_1, 14).Value <> "0000" Then
            Selection.Locked = True
        End If
    Next
    Application.DisplayAlerts = True

'Change fields frormat into a character string
    ActiveSheet.Range("L10", "N" & (myRow_2)).Select

    Selection.NumberFormatLocal = "@"
    
'Color entry fields
    ActiveSheet.Range("I10", "V" & (myRow_2)).Select
    With Selection.Font
        .Name = "Tahoma"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    
    ActiveSheet.Range("S10", "W" & (myRow_2)).Select
    With Selection.Interior
        .ColorIndex = 6
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    
'Lock the frame of the window
    Range("A1").Select
    Range("D10").Select
    ActiveWindow.FreezePanes = True

'Protect the sheet
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Application.ScreenUpdating = True

ErrorHandler:
    
    ' Display Error message after checking the error occurrence.

    If Err.Number <> 0 Then
       Msg = "Error No. " & Str(Err.Number) & "Error occured in " & Err.Source & Chr(13) & Err.Description
       MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
    End If

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cb_update, 4, 0, MSForms, CommandButton"
Attribute VB_Control = "cb_delete, 5, 1, MSForms, CommandButton"

Private Sub cb_delete_Click()

'**************************************************
' Macro for Click event of command button(delete).
' Delete insertion row
'**************************************************

Dim myRow_1 As Long
Dim RowsCnt As Long
Dim rowsFr As Integer
Dim rowsTo As Integer
Dim Response As String
        
'Application.ScreenUpdating = False
  
'Get the number of rows
  myRow_1 = (ActiveSheet.Cells(65536, 14).End(xlUp).Row)

  ThisWorkbook.Worksheets("Entry Sheet").Activate

'Unprotect the sheet
  ActiveSheet.Unprotect

  rowsFr = ActiveWindow.RangeSelection.Row
  RowsCnt = ActiveWindow.RangeSelection.Rows.Count
  rowsTo = rowsFr + RowsCnt - 1
  
  If rowsFr < 10 Or rowsTo > myRow_1 Then
     Response = MsgBox("Select details area!", vbOKOnly + vbCritical, "Select error")
     ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
  If RowsCnt > 1 Then
     Response = MsgBox("You can not select several rows.", vbOKOnly + vbCritical, "Select error")
     ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
'Target rows select
  ActiveSheet.Rows(rowsFr & ":" & rowsTo).Select
  If Trim(Cells(rowsFr, 1).Value) <> "*" Then
     Response = MsgBox("Selected row is not a insertion row.", vbOKOnly + vbCritical, "Select error")
     ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
  Response = MsgBox("Selected rows will delete...", vbYesNo + vbQuestion + vbDefaultButton1, "Delete Rows")
  If Response = vbYes Then
'Cancel the Lock of the frame of the window
     Range("D10").Select
     ActiveWindow.FreezePanes = False
'Selected rows delete
     ActiveSheet.Rows(rowsFr & ":" & rowsTo).Select
     Selection.Delete Shift:=xlUp
  Else
'Lock the frame of the window
     Range("D10").Select
     ActiveWindow.FreezePanes = True
     ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
     Exit Sub
  End If
  
'Lock the frame of the window
  Range("D10").Select
  ActiveWindow.FreezePanes = True
  ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Excel.Range, Cancel As Boolean)
'***********************************************
' Macro for Double-Click event of Entry-sheet.
' Insertion of a new row
'***********************************************

Dim myRow As Long
Dim addRow As Long
Dim po_no As String
Dim item_no As String
Dim dtl_no As String
    
 'Get the number of loading rows
   myRow = ActiveSheet.Cells(65536, 14).End(xlUp).Row
   
   With Target
        If (.Row >= 10 And .Row <= myRow And .Column >= 2 And .Column <= 23) Then
   '     Unprotect the sheet
           ActiveSheet.Unprotect
        
   '     Selected rows copy
           ActiveSheet.Rows(ActiveWindow.RangeSelection.Row).Select
           po_no = Trim(Range("L" & ActiveWindow.RangeSelection.Row).Value)
           item_no = Trim(Range("M" & ActiveWindow.RangeSelection.Row).Value)
           dtl_no = "9999"
           
           'Selection.Copy
           ActiveSheet.Rows(ActiveWindow.RangeSelection.Row + 1).Select
           Selection.Insert Shift:=xlDown
           ActiveSheet.Range("L" & ActiveWindow.RangeSelection.Row).Value = po_no
           ActiveSheet.Range("M" & ActiveWindow.RangeSelection.Row).Value = item_no
           ActiveSheet.Range("N" & ActiveWindow.RangeSelection.Row).Value = dtl_no      'Sch Line
           ActiveSheet.Range("A" & ActiveWindow.RangeSelection.Row).Value = "*"         'Insertion Flag
           
           addRow = ActiveWindow.RangeSelection.Row
           
           If addRow > myRow Then
                
                ActiveSheet.Range(Cells(addRow, 2), Cells(addRow, 4)).Select
                Selection.Borders(xlDiagonalDown).LineStyle = xlNone
                Selection.Borders(xlDiagonalUp).LineStyle = xlNone
                With Selection.Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlInsideVertical)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
    
                ActiveSheet.Range(Cells(addRow, 5), Cells(addRow, 8)).Select
                Selection.Borders(xlDiagonalDown).LineStyle = xlNone
                Selection.Borders(xlDiagonalUp).LineStyle = xlNone
                With Selection.Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                Selection.Borders(xlInsideVertical).LineStyle = xlNone
    
                Range(Cells(addRow, 9), Cells(addRow, 23)).Select
                Selection.Borders(xlDiagonalDown).LineStyle = xlNone
                Selection.Borders(xlDiagonalUp).LineStyle = xlNone
                With Selection.Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlInsideVertical)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
    
                Selection.Borders(xlDiagonalDown).LineStyle = xlNone
                Selection.Borders(xlDiagonalUp).LineStyle = xlNone
                With Selection.Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
           End If
           
'Lock "Notes" filed
           Range(Cells(addRow, 22), Cells(addRow, 23)).Select
           Selection.Locked = True
'Cells mergr for "Notes" filed
           ActiveSheet.Range("V" & addRow, "W" & addRow).Select
           With Selection
               .HorizontalAlignment = xlGeneral
               .VerticalAlignment = xlBottom
               .WrapText = False
               .Orientation = 0
               .AddIndent = False
               .ShrinkToFit = False
               .MergeCells = True
           End With
           ActiveSheet.Range(Cells(addRow, 2), Cells(addRow, 23)).Select
           With Selection.Interior
                .ColorIndex = 33
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
           End With
           
           ActiveSheet.Cells(ActiveWindow.RangeSelection.Row, 19).Select
           
   '     Protect the sheet
           ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        End If
    End With
    
    Cancel = True
End Sub

Private Sub cb_update_Click()

'**************************************************
' Macro for Click event of command button(update).
' Update entry data into data-sheet
'**************************************************

Dim myRow_1 As Long
Dim myRow_2 As Long
Dim difRow As Long
Dim iCnt As Integer
Dim iCnt_1 As Integer
Dim sItem_no As String
Dim sPO_no As String
Dim sMaterial_no As String
Dim sMaterial_nm As String

Dim sLgort As String
Dim sMark As String
Dim sEindt As String
Dim sFunid As String

Dim sBedat As String
Dim sMenge As String
Dim sWemng As String
Dim sRemain As String

Dim sScdes As String
Dim dtl_no As String
Dim lNum As Long
        
' When error occur then genarate error message.
    On Error GoTo ErrorHandler
    
Application.ScreenUpdating = False
  
  Sheets("vendor_1").Select
'Get the number of loading rows
   myRow_2 = ActiveSheet.Cells(65536, 2).End(xlUp).Row
    
  Sheets("Entry Sheet").Select
  
'Unprotect the sheet
  ActiveSheet.Unprotect
  
'Cancel the Lock of the frame of the window
    Range("D10").Select
    ActiveWindow.FreezePanes = False

'Get the number of loading rows
   myRow_1 = ActiveSheet.Cells(65536, 13).End(xlUp).Row
   
   If myRow_1 <= 10 And Trim(ActiveSheet.Cells(10, 2).Value) = "" Then
      MsgBox "There is no data in the Worksheet."
      Exit Sub
   End If
  
'Insertion mark clear
    Columns("A:A").Select
    Selection.ClearContents
    
  ActiveSheet.Range("B10", "X" & myRow_1).Select
  Selection.Interior.ColorIndex = xlNone
  
  For iCnt_2 = 10 To myRow_1
      ActiveSheet.Cells(iCnt_2, 19).Value = Trim(Left(ActiveSheet.Cells(iCnt_2, 19).Value, 1))
      If Not IsDate(ActiveSheet.Cells(iCnt_2, 20).Value) Then
         ActiveSheet.Cells(iCnt_2, 20).Value = ""
      End If
      If Not IsNumeric(ActiveSheet.Cells(iCnt_2, 21).Value) Then
         ActiveSheet.Cells(iCnt_2, 21).Value = ""
      End If
  Next
  
    If (myRow_1 >= 10 And ActiveSheet.Range("B10").Value <> "") Then
       
   '     Selected area copy     "Material Code"
       ActiveSheet.Range("D10", "D" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "MATNR"
       Sheets("vendor_1").Select
       ActiveSheet.Range("N2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Description"
       ActiveSheet.Range("E10", "E" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "TXZ01"
       Sheets("vendor_1").Select
       ActiveSheet.Range("O2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Stor Location"
       ActiveSheet.Range("I10", "I" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "LGORT"
       Sheets("vendor_1").Select
       ActiveSheet.Range("P2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "DD"
       ActiveSheet.Range("O10", "O" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "MARK"
       Sheets("vendor_1").Select
       ActiveSheet.Range("Q2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Delivery Date"
       ActiveSheet.Range("P10", "P" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "EINDT"
       Sheets("vendor_1").Select
       ActiveSheet.Range("R2").Select
       Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
       ActiveSheet.Range("R2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "FUNID"
       ActiveSheet.Range("S10", "S" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "FUNID"
       Sheets("vendor_1").Select
       ActiveSheet.Range("S2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Schedule Delivery Date"
       ActiveSheet.Range("T10", "T" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "EINDT2"
       Sheets("vendor_1").Select
       ActiveSheet.Range("T2").Select
       Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
       ActiveSheet.Range("T2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "PO No."
       ActiveSheet.Range("L10", "L" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "EBELN"
       Sheets("vendor_1").Select
       ActiveSheet.Range("U2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Item"
       ActiveSheet.Range("M10", "M" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "EBELP"
       Sheets("vendor_1").Select
       ActiveSheet.Range("V2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Sch Line"
       ActiveSheet.Range("N10", "N" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "ETENR"
       Sheets("vendor_1").Select
       ActiveSheet.Range("W2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "PO Issue Date"
       ActiveSheet.Range("K10", "K" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "BEDAT"
       Sheets("vendor_1").Select
       ActiveSheet.Range("X2").Select
       Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
       ActiveSheet.Range("X2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Quantity"
       ActiveSheet.Range("Q10", "Q" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "MENGE"
       Sheets("vendor_1").Select
       ActiveSheet.Range("Y2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Remaining Order Qty"
       ActiveSheet.Range("R10", "R" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "REMAIN"
       Sheets("vendor_1").Select
       ActiveSheet.Range("AA2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Schedule Qty"
       ActiveSheet.Range("U10", "U" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "MENGE2"
       Sheets("vendor_1").Select
       ActiveSheet.Range("AB2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "SGR"
       ActiveSheet.Range("J10", "J" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "MATGR"
       Sheets("vendor_1").Select
       ActiveSheet.Range("AD2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Material Group"
       ActiveSheet.Range("C10", "C" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "SGRFLG"
       Sheets("vendor_1").Select
       ActiveSheet.Range("AE2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       Sheets("Entry Sheet").Select
   '     Selected area copy     "Notes"
       ActiveSheet.Range("V10", "V" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "SCDES"
       Sheets("vendor_1").Select
       ActiveSheet.Range("AC2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
      
       Sheets("Entry Sheet").Select
   '     Selected area copy     "Plant"
       ActiveSheet.Range("B10", "B" & myRow_1).Select
       Selection.Copy
           
   '     Paste at               "WERKS"
       Sheets("vendor_1").Select
       ActiveSheet.Range("F2").Select
       Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False

       ActiveSheet.Cells.Select
       Selection.Borders(xlDiagonalDown).LineStyle = xlNone
       Selection.Borders(xlDiagonalUp).LineStyle = xlNone
       Selection.Borders(xlEdgeLeft).LineStyle = xlNone
       Selection.Borders(xlEdgeTop).LineStyle = xlNone
       Selection.Borders(xlEdgeBottom).LineStyle = xlNone
       Selection.Borders(xlEdgeRight).LineStyle = xlNone
       Selection.Borders(xlInsideVertical).LineStyle = xlNone
       Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
   
   '|fffd|@|fffd|@Adjust the rows
       If myRow_1 - 9 < myRow_2 - 1 Then
          ActiveSheet.Rows(myRow_2 & ":" & (myRow_2 - (myRow_2 - (myRow_1 - 7)))).Select
          Selection.Delete Shift:=xlUp
       ElseIf myRow_1 - 9 > myRow_2 - 1 Then
          difRow = (myRow_1 - 9) - (myRow_2 - 1)
          If difRow > myRow_2 Then
             For iCnt = 1 To difRow
                 ActiveSheet.Range("A2:E2").Select
                 Selection.Copy
                 ActiveSheet.Cells(myRow_2 + iCnt, 1).Select
                 ActiveSheet.Paste
                 ActiveSheet.Range("G2:M2").Select
                 Selection.Copy
                 ActiveSheet.Cells(myRow_2 + iCnt, 7).Select
                 ActiveSheet.Paste
             Next
          Else
             ActiveSheet.Range(ActiveSheet.Cells(myRow_2, 1), ActiveSheet.Cells(myRow_2, 1).Offset((myRow_2 - (myRow_1 - 9)), 4)).Select
             Selection.Copy
             ActiveSheet.Cells(myRow_2 + 1, 1).Select
             ActiveSheet.Paste
             ActiveSheet.Range(ActiveSheet.Cells(myRow_2, 7), ActiveSheet.Cells(myRow_2, 1).Offset((myRow_2 - (myRow_1 - 9)), 11)).Select
             Selection.Copy
             ActiveSheet.Cells(myRow_2 + 1, 7).Select
             ActiveSheet.Paste
             ActiveSheet.Range("Y" & (myRow_2 + 1) & ":" & "AB" & (myRow_2 + difRow)).Select
             Selection.NumberFormatLocal = "0.000_ "
          End If
      End If
       
   '|fffd|@|fffd|@File overwrite
      Sheets("menu").Select
      ActiveWorkbook.Save
    End If
                                                            
Application.ScreenUpdating = True
Sheets("menu").Select

ErrorHandler:
    
    ' Display Error message after checking the error occurrence.

    If Err.Number <> 0 Then
       Msg = "Error No. " & Str(Err.Number) & "Error occured in " & Err.Source & Chr(13) & Err.Description
       MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
    End If

End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 5, 0, MSForms, Label"
Attribute VB_Control = "CommandButton1, 6, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 7, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 8, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 10, 4, MSForms, CommandButton"
Private Sub CommandButton1_Click()
'*********************************************
' Macro for Click event of command button.
' Start up Macro4 (Load TXT File).
'*********************************************
Macro4
End Sub

Private Sub CommandButton2_Click()
'*********************************************
' Macro for Click event of command button.
' Start up Macro2 (Output TXT File).
'*********************************************
Macro2
End Sub

Private Sub CommandButton3_Click()
'*********************************************
' Macro for Click event of command button.
' Start up Macro1 (Make Entry Sheet).
'*********************************************
Macro1
End Sub

Private Sub CommandButton4_Click()
'*********************************************
' Macro for Click event of command button.
' Start up Macro3 (Print Out).
'*********************************************
Macro3
End Sub

Private Sub Worksheet_Activate()
'*********************************************
' Macro for Activate event of work sheet.
' Configration of Command Button
'*********************************************
  If ThisWorkbook.Name = "DS_List.xls" Then
  
     ActiveSheet.Shapes("CommandButton1").Select
     Selection.Enabled = True
     
     ActiveSheet.Shapes("CommandButton2").Select
     Selection.Enabled = False
       
     ActiveSheet.Shapes("CommandButton3").Select
     Selection.Enabled = False

     ActiveSheet.Shapes("CommandButton4").Select
     Selection.Enabled = False

     ActiveSheet.Range("A1").Select

  End If
  
End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
