Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "clsDrawArea"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=======================================================
' class for drawing area
'
' 2007.02 WZH copied from SUBHSK.xls (SonyStat3P6)
'=======================================================
Option Explicit

Private Const HGAP = 0
Private Const VGAP = 10

Private m_obibox() As clsTextBox
Private m_type As Integer
Private m_left As Double
Private m_top As Double
Private m_width As Double
Private m_height As Double
Private m_rownum As Long
Private m_colnum As Long

Private Sub Class_Terminate()
    Dim i As Long
    For i = 1 To m_rownum * m_colnum
        Set m_obibox(i) = Nothing
    Next i
End Sub

Private Function GetObiWidth(ByVal val As Double, ByVal obiWidth) As Double
    GetObiWidth = val / 100# * 72# * obiWidth
End Function

Private Function GetObiHeight(ByVal obiHeight As Double) As Double
    GetObiHeight = 72# * obiHeight
End Function

Private Function GetObiColor(ByVal ind As Integer) As Integer
    ind = ind Mod 6
    If ind = 1 Then
        GetObiColor = 34
    ElseIf ind = 2 Then
        GetObiColor = 19
    ElseIf ind = 3 Then
        GetObiColor = 24
    ElseIf ind = 4 Then
        GetObiColor = 35
    ElseIf ind = 5 Then
        GetObiColor = 40
    ElseIf ind = 6 Then
        GetObiColor = 22
    Else
        GetObiColor = 0
    End If
End Function

'draw text box and division line
Private Sub DrawObi(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Double)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    For j = 1 To m_colnum
        colorindex = GetObiColor(j)
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft, dbltop, xlContinuous, colorindex, textDsp)
            If i > 1 Then
                Set shp = parent.AddLine(m_obibox(k).Left + m_obibox(k).width + dblleft, m_obibox(k).Top + dbltop, _
                                       m_obibox(k - m_colnum).Left + m_obibox(k - m_colnum).width + dblleft, m_obibox(k).Top + dbltop - VGAP)
                shp.DrawingObject.Border.LineStyle = xlDot
            End If
        Next i
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop + height - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

'draw a text box without border
Private Sub DrawText(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    colorindex = 0
    For j = 1 To m_colnum
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft, dbltop, xlNone, colorindex, 1)
        Next i
    Next j
End Sub

'draw a text box without border and division line
Private Sub DrawTitle(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    colorindex = 0
    For j = 1 To m_colnum
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft + 1, dbltop, xlNone, colorindex, 1)
            Set shp = parent.AddLine(m_obibox(k).Left + m_obibox(k).width + dblleft, m_obibox(k).Top + dbltop, _
                                     m_obibox(k).Left + m_obibox(k).width + dblleft, m_obibox(k).Top + dbltop + m_obibox(k).height)
            shp.DrawingObject.Border.LineStyle = xlDot
        Next i
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop + height - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

'draw division lines
Public Sub DrawBorder(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal allHeight As Double)
    Dim shp As Shape
    Set shp = parent.AddLine(dblleft, dbltop + allHeight, dblleft, dbltop + height - VGAP)
    Set shp = parent.AddLine(dblleft, dbltop + allHeight, dblleft + width - VGAP, dbltop + allHeight)
    Set shp = parent.AddLine(dblleft, dbltop + height - VGAP, dblleft + width - VGAP, dbltop + height - VGAP)
End Sub

Public Function GetTitleWidth() As Double
    Dim i As Long
    Dim dblWidth As Double
    For i = 1 To m_colnum
        dblWidth = dblWidth + m_obibox(i).width
    Next i
    GetTitleWidth = dblWidth
End Function

'draw division lines from obi graphs to title text boxes
Public Sub DrawToTitle(ByVal parent As Shapes, ByVal dblleft As Double, dbltop As Double)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim dblWidth As Double
    Dim shp As Shape
    colorindex = 0
    dblWidth = GetTitleWidth()
    dblWidth = dblWidth / m_colnum
        
    For j = 1 To m_colnum
        Set shp = parent.AddLine(m_obibox(j).Left + m_obibox(j).width + dblleft, m_obibox(j).Top + dbltop, _
                                 dblWidth * j + dblleft, m_obibox(j).Top + dbltop - VGAP)
        shp.DrawingObject.Border.LineStyle = xlDot
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

Public Sub DrawMe(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Select Case m_type
    Case 1:
        Call DrawTitle(parent, dblleft, dbltop, textDsp)
    Case 3, 4:
        Call DrawObi(parent, dblleft, dbltop, textDsp)
    Case 2, 5, 6:
        Call DrawText(parent, dblleft, dbltop, textDsp)
    Case 11, 12, 13:
        Call DrawText(parent, dblleft, dbltop, textDsp)
    End Select
End Sub

Public Property Get width() As Variant
    Dim i As Long, j As Long, k As Long
    Dim tmpMax As Double, dblMax As Double
    dblMax = 0
    For i = 1 To m_rownum
        tmpMax = 0
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            tmpMax = tmpMax + m_obibox(k).width + HGAP
        Next j
        If tmpMax > dblMax Then
            dblMax = tmpMax
        End If
    Next i
    width = dblMax
End Property

Public Property Get height() As Variant
    Dim i As Long, j As Long, k As Long
    Dim l As Double
    l = 0
    For i = 1 To m_rownum
        k = (i - 1) * m_colnum + 1
        l = l + m_obibox(k).height + VGAP
    Next i
    height = l
End Property

Private Function GetMaxLength(aryVal() As Variant)
    Dim i As Long, j As Long, k As Long
    Dim lngMax As Long, l As Long
    lngMax = 0
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            l = LenB(StrConv(aryVal(i, j), vbFromUnicode))
            If lngMax < l Then
                lngMax = l
            End If
        Next j
    Next i
    GetMaxLength = lngMax
End Function

'set data source for total data area
Private Sub AllSourceData(ByVal dataRge As Range, ByVal fontsize As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).Left + m_obibox(k - 1).width + HGAP
            End If
            dblWidth = GetObiWidth(CDbl(aryVal(i, j)), obiWidth)
            dblHeight = GetObiHeight(obiHeight)
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for average data area
Private Sub AvgSourceData(ByVal dataRge As Range, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, _
                         ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    Dim maxlen As Long
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    maxlen = GetMaxLength(aryVal)
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    If maxlen < Len("Average") Then maxlen = Len("Average")
    m_rownum = m_rownum + 1
    ReDim m_obibox(1 To m_rownum * m_colnum)
    dblHeight = GetObiHeight(obiHeight)
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < 50 Then dblWidth = 50
    Set m_obibox(1) = New clsTextBox
    Call m_obibox(1).InitObiBox("Average", fontsize, 0, -GetObiHeight(obiHeight) - VGAP, dblWidth, dblHeight)
    For i = 2 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = m_obibox(k - m_colnum).Top + m_obibox(k - m_colnum).height + VGAP
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i - 1, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for obi data area
Private Sub DataSourceData(ByVal dataRge As Range, ByVal fontsize As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).Top + m_obibox(k - m_colnum).height + VGAP
            End If
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).Left + m_obibox(k - 1).width + HGAP
            End If
            dblWidth = GetObiWidth(CDbl(aryVal(i, j)), obiWidth)
            dblHeight = GetObiHeight(obiHeight)
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for name area
Private Sub NameSourceData(ByVal dataRge As Range, _
                         ByVal setHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    dblHeight = setHeight / m_rownum - VGAP
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1)) + 10
    If dblWidth < OneCharWidth Then dblWidth = OneCharWidth
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).Top + m_obibox(k - m_colnum).height + VGAP
            End If
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for N data area
Private Sub NSourceData(ByVal dataRge As Range, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, _
                         ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    Dim maxlen As Long
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    m_rownum = m_rownum + 1
    ReDim m_obibox(1 To m_rownum * m_colnum)
    dblHeight = GetObiHeight(obiHeight)
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < 50 Then dblWidth = 50
    Set m_obibox(1) = New clsTextBox
    Call m_obibox(1).InitObiBox("n", fontsize, 0, -GetObiHeight(obiHeight) - VGAP, dblWidth, dblHeight)
    For i = 2 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = m_obibox(k - m_colnum).Top + m_obibox(k - m_colnum).height + VGAP
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i - 1, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for title area
Sub TitleSourceData(ByVal dataRge As Range, _
                         ByVal setWidth As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    
    dblWidth = setWidth / m_colnum
    dblHeight = maxlen * OneCharHeight \ (dblWidth \ OneCharWidth + 1)
    If dblHeight < OneCharHeight Then dblHeight = OneCharHeight
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).Left + m_obibox(k - 1).width + HGAP
            End If
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

Public Sub SetSourceData(ByVal nType As Integer, ByVal dataRge As Range, _
                         ByVal setWidth As Double, ByVal setHeight As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    m_type = nType
    Select Case m_type
    Case 1:
        Call TitleSourceData(dataRge, setWidth, fontsize, OneCharWidth, OneCharHeight)
    Case 2:
        Call NameSourceData(dataRge, setHeight, fontsize, OneCharWidth, OneCharHeight)
    Case 3:
        Call AllSourceData(dataRge, fontsize, obiWidth, obiHeight)
    Case 4:
        Call DataSourceData(dataRge, fontsize, obiWidth, obiHeight)
    Case 5:
        Call NSourceData(dataRge, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    Case 6:
        Call AvgSourceData(dataRge, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    End Select
End Sub

'set text for title name area or x-axis name area
Private Sub TNameText(ByVal strText As String, _
                         ByVal setWidth As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long

    m_rownum = 1
    m_colnum = 1
    maxlen = LenB(strText)
    
    dblWidth = setWidth / m_colnum
    dblHeight = maxlen * OneCharHeight \ (dblWidth \ OneCharWidth + 1)
    If dblHeight < OneCharHeight Then dblHeight = OneCharHeight
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).Left + m_obibox(k - 1).width + HGAP
            End If
            Call m_obibox(k).InitObiBox(strText, fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set text for Y-axis name area
Private Sub YNameText(ByVal strText As String, _
                         ByVal setHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long

    m_rownum = 1
    m_colnum = 1
    maxlen = LenB(strText)
    dblHeight = setHeight / m_rownum - VGAP
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < OneCharWidth Then dblWidth = OneCharWidth
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).Top + m_obibox(k - m_colnum).height + VGAP
            End If
            dblleft = 0
            Call m_obibox(k).InitObiBox(strText, fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

Public Sub SetTextData(ByVal nType As Integer, ByVal strText As String, _
                         ByVal setWidth As Double, ByVal setHeight As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    m_type = nType
    Select Case m_type
    Case 11, 12:
        Call TNameText(strText, setWidth, fontsize, OneCharWidth, OneCharHeight)
    Case 13:
        Call YNameText(strText, setHeight, fontsize, OneCharWidth, OneCharHeight)
    End Select
End Sub

'=== EOF ===




INQUEST-PP=macro
