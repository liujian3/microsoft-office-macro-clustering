Attribute VB_Name = "Module1"
Option Explicit
Dim w As Worksheet


Sub CreateMenu()
 Dim HelpMenu As CommandBarControl
 Dim NewMenu As CommandBarPopup
 Dim MenuItem As CommandBarControl
 Dim Submenuitem As CommandBarButton
 Call DeleteMenu
 
 Set HelpMenu = CommandBars(1).FindControl(ID:=30010)
 
 If HelpMenu Is Nothing Then
  Set NewMenu = CommandBars(1).Controls.Add(Type:=msoControlPopup, temporary:=True)
 Else
  ' Add the menu before Help
  Set NewMenu = CommandBars(1).Controls.Add(Type:=msoControlPopup, Before:=HelpMenu.Index, temporary:=True)
 End If
  ' Add a caption for the menu
 NewMenu.Caption = "&RFM"
  ' RFM MENU ITEM
 Set MenuItem = NewMenu.Controls.Add(Type:=msoControlButton)
 With MenuItem
  .Caption = "&Save As Last"
  .FaceId = 162
  .OnAction = "MacroLSave"
 End With
Set MenuItem = NewMenu.Controls.Add(Type:=msoControlButton)
 With MenuItem
  .Caption = "&Retrive From Last Saved"
  .FaceId = 161
  .OnAction = "Restore_Last_as_New"
 End With

 Set MenuItem = NewMenu.Controls.Add(Type:=msoControlButton)

  With MenuItem
   .Caption = "&Protect"
  .FaceId = 166
   .OnAction = "Prot2"
  End With
 Set MenuItem = NewMenu.Controls.Add(Type:=msoControlButton)
  With MenuItem
  .Caption = "&uProtect"
   .FaceId = 166
   .OnAction = "Prot3"
  End With

End Sub
Sub DeleteMenu()
 On Error Resume Next
 CommandBars(1).Controls("RFM").Delete
End Sub


Sub Lock_Cells_New()
Const LockedCells = "RFM0e"
If (ActiveSheet.Range("A1") = "This is a RFM") Then
  Worksheets("New").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=LockedCells
  ActiveWorkbook.Save
End If
End Sub
Sub UnLock_Cells_New()
Const LockedCells = "RFM0e"
If (ActiveSheet.Range("A1") = "This is a RFM") Then
  Worksheets("New").Unprotect (LockedCells)
  ActiveWorkbook.Save
End If
End Sub
Function RFMPathInRegistry() As String

  ' Get path to RFM files from Registry
  Rem RetVal = GetSetting(appname:="RFM", section:="Settings",
                                          Rem key:="RFM", Default:="C:\Program Files\RFM")

End Function
Sub Lock_Cells()
Const LockedCells = "RFM0e"

For Each w In Worksheets
  w.EnableSelection = xlUnlockedCells
  If (w.Name = "Last Saved") Then w.EnableSelection = xlNoSelection
Next w

End Sub
Sub ClearNew()
    For Each w In Worksheets
      If (w.Name = "New") Then w.Delete
    Next w
End Sub
Sub Restore_Last_as_New()
    
If (ActiveSheet.Range("A1") = "This is a RFM") Then

  Application.DisplayAlerts = False
  
  For Each w In Worksheets
    If Not (w.Name = "Last Saved") Then w.Delete
  Next w
  
  For Each w In Worksheets
    If (w.Name = "Last Saved") Then
      Sheets("Last Saved").Copy Before:=Sheets("Last Saved")
      Sheets("Last Saved (2)").Name = "New"
      Sheets("New").Select
    End If
  Next w
  
  Application.DisplayAlerts = True
  
  Lock_Cells
  
End If
  
End Sub

Sub MacroLSave()
Const LockedCells = "RFM0e"
Const LockedCells2 = "RFM0e"
Dim CurrentWS As String, CurrentC As String, CurrentCNew As String

 If (ActiveSheet.Range("A1") = "This is a RFM") Then

  Application.DisplayAlerts = False
  
  For Each w In Worksheets
    If Not ((w.Name = "New") Or (w.Name = "Last Saved")) Then w.Delete
  Next w
  
  CurrentWS = ActiveSheet.Name
  CurrentC = ActiveCell.Address
  
  Worksheets("New").Unprotect (LockedCells)
  Worksheets("Last Saved").Unprotect (LockedCells2)
  
  Sheets("New").Select
  CurrentCNew = ActiveCell.Address
  Cells.Select
  Selection.Copy
  Range(CurrentCNew).Select
    
  Sheets("Last Saved").Select
  Range("A1").Select
  ActiveSheet.Paste
  Range("A1").Select
  
  Sheets(CurrentWS).Select
  Range(CurrentC).Select
  
  Worksheets("New").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=LockedCells
  Worksheets("Last Saved").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=LockedCells
  
  
  ActiveWorkbook.Save
  
  Application.DisplayAlerts = True
  
  Lock_Cells
  
 End If
  
End Sub

Public Sub Prot2()
Const LockedCells = "RFM0e"
If (ActiveSheet.Range("A1") = "This is a RFM") Then
  Worksheets("New").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=LockedCells
  Worksheets("Last Saved").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:=LockedCells
  Lock_Cells
  ActiveWorkbook.Save
End If
End Sub

Public Sub Prot3()
    UnLock_Cells_New
End Sub

Function CurPth() As String

 CurPth = ActiveWorkbook.Path
 
End Function


Function GetSetting() As String
Dim mybook As Workbook
Set mybook = Workbooks.Open(ActiveWorkbook.Path & "\settings2.xls")

With Worksheets("Settings")
   GetSetting = .Range("G5").Value

End With

End Function

Function GetSetting1() As String
Dim mybook As Workbook
Set mybook = Workbooks.Open(ActiveWorkbook.Path & "\settings2.xls")

With Worksheets("Settings")
   GetSetting1 = .Range("A1").Value

End With

End Function

Public Sub upd()
Dim wb2 As String
wb2 = "settings.xls"
Dim mybook As Workbook
Set mybook = Workbooks.Open(ActiveWorkbook.Path & "\" & wb2)
ThisWorkbook.Worksheets("main").Cells(4, 7).Value = Workbooks(wb2).Worksheets("Settings").Cells(5, 7).Value
ThisWorkbook.Activate
Workbooks(wb2).Close
End Sub
Public Sub GetRel(xRow As Integer, xCol As Integer)
Dim wb2 As String
wb2 = "settings.xls"
Dim mybook As Workbook
Set mybook = Workbooks.Open(ActiveWorkbook.Path & "\" & wb2)
ThisWorkbook.Worksheets("main").Cells(xRow, xCol).Value = Workbooks(wb2).Worksheets("Settings").Cells(5, 7).Value
ThisWorkbook.Activate
Workbooks(wb2).Close

End Sub
Public Function GetSel2(xRow, xCol, xDat As Integer) As String
Dim wb2 As String
wb2 = "settings.xls"

Dim dr As String
dr = Workbooks("TOC.xls").Path & "\" & wb2

Dim Cval As String

Dim mybook As Workbook
On Error Resume Next
Set mybook = Workbooks.Open(dr)
        If mybook Is Nothing Then 'Not open
            Set mybook = Nothing
            On Error GoTo 0
        End If

Rem Dim mybook As Workbook
Rem Set mybook = Workbooks.Open(dr)

If xDat = 1 Then
Rem Release
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(5, 7).Value
ElseIf xDat = 2 Then
Rem Ships Name
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(13, 4).Value
ElseIf xDat = 3 Then
Rem Master Name
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(15, 4).Value
ElseIf xDat = 4 Then
Rem Chief Engineer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(17, 4).Value
ElseIf xDat = 5 Then
Rem Chief Officer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(19, 4).Value
ElseIf xDat = 6 Then
Rem 2nd Officer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(21, 4).Value
ElseIf xDat = 7 Then
Rem 3rd Officer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(23, 4).Value
ElseIf xDat = 8 Then
Rem 2nd Engineer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(25, 4).Value
ElseIf xDat = 9 Then
Rem 3rd Engineer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(27, 4).Value
ElseIf xDat = 10 Then
Rem Cook
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(29, 4).Value
ElseIf xDat = 11 Then
Rem Electro Engineer
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(31, 4).Value
ElseIf xDat = 12 Then
Rem Pumpman
 Cval = Workbooks(wb2).Worksheets("Settings").Cells(33, 4).Value
End If

UnLock_Cells_New

ThisWorkbook.Activate
ThisWorkbook.Worksheets(1).Cells(xRow, xCol) = Cval

Lock_Cells_New

Workbooks(wb2).Close
GetSel2 = Cval

End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
 Call CreateMenu
Rem  Call upd
End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)
 Call DeleteMenu
End Sub

Private Sub Workbook_SheetCalculate(ByVal Sh As Object)

End Sub


INQUEST-PP=macro
