Attribute VB_Name = "Module1"

Sub Addaim()
 
Dim s As Shape
 
Dim ws As Worksheet
Dim a As Range

Set ws = ActiveSheet
Set a = Range("B19")
 
Dim aName As String
Dim myDocument As Worksheet
Dim shp As Shape
Dim check As Integer
aName = ActiveSheet.Name
Set myDocument = Worksheets(aName)
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("B10:B100"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("B10:E100"), shp.BottomRightCell) Is Nothing Then
check = check + 1
End If
Next shp



Set s = ws.Shapes.AddShape(5, a.Left, a.Top + (check * 100), 190, 60)
 
'fill white, set text black
s.Fill.ForeColor.RGB = RGB(242, 220, 219)
s.Line.ForeColor.RGB = RGB(0, 0, 0)

'show text within it, set text colour black
s.TextFrame.Characters.Text = "Enter aim here"
s.TextFrame.Characters.Font.ColorIndex = 1
s.TextFrame.Characters.Font.Size = 14
s.TextFrame.Characters.Font.Bold = True
s.TextFrame.HorizontalAlignment = xlHAlignCenter
s.TextFrame.VerticalAlignment = xlVAlignCenter

s.Name = "Aim " & (check + 1)

 
End Sub

Sub Addprimarydriver()
Dim shp1 As Shape
Dim shp2 As Shape
Dim s As Shape
Dim Sr As ShapeRange
Dim ws As Worksheet
Dim c As Range
Dim arr As Variant

On Error GoTo Error_not_yet

Set ws = ActiveSheet
Set c = Range("G8")


Dim aName As String
Dim myDocument As Worksheet
Dim shp As Shape
Dim check As Integer
aName = ActiveSheet.Name
Set myDocument = Worksheets(aName)
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("G:G"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("G:J"), shp.BottomRightCell) Is Nothing Then
check = check + 1
End If
Next shp

Set s = ws.Shapes.AddShape(5, c.Left, c.Top + (check * 120), 190, 45)
 
'fill white, set text black
s.Fill.ForeColor.RGB = RGB(253, 234, 218)
s.Line.ForeColor.RGB = RGB(0, 0, 0)

'show text within it, set text colour black
s.TextFrame.Characters.Text = "Enter primary driver text here"
s.TextFrame.Characters.Font.ColorIndex = 1
s.TextFrame.Characters.Font.Size = 13
s.Name = "Primary " & (check + 1)
s.TextFrame.Characters.Font.Bold = True
s.TextFrame.HorizontalAlignment = xlHAlignCenter
s.TextFrame.VerticalAlignment = xlVAlignCenter

Set shp1 = ws.Shapes("Aim 1")
Set shp2 = ws.Shapes("Primary " & (check + 1))
Set conn = ws.Shapes.Addconnector(msoConnectorElbow, 1, 1, 1, 1)
conn.Line.ForeColor.RGB = RGB(0, 0, 0)
conn.ConnectorFormat.BeginConnect shp1, 1
conn.ConnectorFormat.EndConnect shp2, 1
conn.RerouteConnections

Exit Sub

Error_not_yet:
MsgBox ("You need to enter an aim first")

End Sub

Sub addsecondarydriver()
Dim shp1 As Shape
Dim shp2 As Shape
Dim s As Shape
Dim Sr As ShapeRange
Dim ws As Worksheet
Dim c As Range
Dim arr As Variant
Dim pri As Integer

On Error GoTo Error_not_yet


Set ws = ActiveSheet
Set c = Range("L6")


Dim aName As String
Dim myDocument As Worksheet
Dim shp As Shape
Dim check As Integer
aName = ActiveSheet.Name
Set myDocument = Worksheets(aName)
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("L:L"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("L:P"), shp.BottomRightCell) Is Nothing Then
check = check + 1
End If
Next shp

Set s = ws.Shapes.AddShape(5, c.Left, c.Top + (check * 40), 190, 30)
 
'fill white, set text black
s.Fill.ForeColor.RGB = RGB(253, 255, 163)
s.Line.ForeColor.RGB = RGB(0, 0, 0)

'show text within it, set text colour black
s.TextFrame.Characters.Text = "Enter secondary driver text here"
s.TextFrame.Characters.Font.ColorIndex = 1
s.Name = "Secondary " & (check + 1)
s.TextFrame.Characters.Font.Bold = True
s.TextFrame.HorizontalAlignment = xlHAlignCenter
s.TextFrame.VerticalAlignment = xlVAlignCenter

pri = Int((check / 3) + 1)

Set shp1 = ws.Shapes("Primary " & pri)
Set shp2 = ws.Shapes("Secondary " & (check + 1))
Set conn = ws.Shapes.Addconnector(msoConnectorElbow, 1, 1, 1, 1)
conn.Line.ForeColor.RGB = RGB(0, 0, 0)
conn.ConnectorFormat.BeginConnect shp1, 1
conn.ConnectorFormat.EndConnect shp2, 1
conn.RerouteConnections

Exit Sub

Error_not_yet:
MsgBox ("You need to enter a primary driver first")
End Sub

Sub addintervention()
Dim shp1 As Shape
Dim shp2 As Shape
Dim s As Shape
Dim Sr As ShapeRange
Dim ws As Worksheet
Dim c As Range
Dim arr As Variant
Dim pri As Integer

On Error GoTo Error_not_yet


Set ws = ActiveSheet
Set c = Range("Q6")


Dim aName As String
Dim myDocument As Worksheet
Dim shp As Shape
Dim check As Integer
aName = ActiveSheet.Name
Set myDocument = Worksheets(aName)
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("Q:Q"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("Q:T"), shp.BottomRightCell) Is Nothing Then
check = check + 1
End If
Next shp

Set s = ws.Shapes.AddShape(5, c.Left, c.Top + (check * 40), 190, 30)
 
'fill white, set text black
s.Fill.ForeColor.RGB = RGB(225, 228, 189)
s.Line.ForeColor.RGB = RGB(0, 0, 0)

'show text within it, set text colour black
s.TextFrame.Characters.Text = "Enter intervention text here"
s.TextFrame.Characters.Font.ColorIndex = 1
s.Name = "Intervention " & (check + 1)

s.TextFrame.HorizontalAlignment = xlHAlignCenter
s.TextFrame.VerticalAlignment = xlVAlignCenter

pri = Int((check / 3) + 1)

Set shp1 = ws.Shapes("Secondary " & (check + 1))
Set shp2 = ws.Shapes("Intervention " & (check + 1))
Set conn = ws.Shapes.Addconnector(msoConnectorStraight, 1, 1, 1, 1)
conn.Line.ForeColor.RGB = RGB(0, 0, 0)
conn.ConnectorFormat.BeginConnect shp1, 1
conn.ConnectorFormat.EndConnect shp2, 1
conn.RerouteConnections

Exit Sub

Error_not_yet:
MsgBox ("You need to enter a secondary driver first")

End Sub
Attribute VB_Name = "Module2"
Sub show_names()
    Dim sShapes As Shape, lLoop As Long

    Dim wsStart As Worksheet, WsNew As Worksheet

    

    ''''''''''''''''''''''''''''''''''''''''''''''''

    ''''''''''LIST PROPERTIES OF SHAPES'''''''''''''

    ''''''''''Dave Hawley www.ozgrid.com''''''''''''

    ''''''''''''''''''''''''''''''''''''''''''''''''

    

    Set wsStart = ActiveSheet

    Set WsNew = Sheets.Add

     

    'Add headings for our lists. Expand as needed

    WsNew.Range("A1:F1") = Array("Shape Name", "Shape Type", "Height", "Width", "Left", "Top")

     

     

    'Loop through all shapes on active sheet

    For Each sShapes In wsStart.Shapes

        'Increment Variable lLoop for row numbers

        lLoop = lLoop + 1

        With sShapes

            'Add shape properties

            WsNew.Cells(lLoop + 1, 1) = .Name

            WsNew.Cells(lLoop + 1, 2) = .OLEFormat.Object.Name

            WsNew.Cells(lLoop + 1, 3) = .Height

            WsNew.Cells(lLoop + 1, 4) = .Width

            WsNew.Cells(lLoop + 1, 5) = .Left

            WsNew.Cells(lLoop + 1, 6) = .Top

            'Follow the same pattern for more

        End With

    Next sShapes

     

    'AutoFit Columns.

    WsNew.Columns.AutoFit

End Sub
Attribute VB_Name = "Module3"
Sub DeleteShapesOnSheet()
 
Dim w As Worksheet
 
Dim aims As Shape
Dim prims As Shape
Dim secs As Shape
 
Set w = ActiveSheet
 
Dim i As Integer
Dim j As Integer
Dim k As Integer

Dim aName As String
Dim myDocument As Worksheet
Dim shp As Shape
Dim check As Integer
aName = ActiveSheet.Name
Set myDocument = Worksheets(aName)
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("B10:B100"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("B10:E100"), shp.BottomRightCell) Is Nothing Then
check = check + 1
End If
Next shp
For i = 1 To check
w.Shapes("Aim " & i).Delete
Next i
Dim prim As Integer
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("G:G"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("G:J"), shp.BottomRightCell) Is Nothing Then
prim = prim + 1
End If
Next shp
For j = 1 To prim
w.Shapes("Primary " & j).Delete
Next j
Dim sec As Integer
For Each shp In myDocument.Shapes
If Not Intersect(myDocument.Range("L:L"), shp.TopLeftCell) Is Nothing And _
Not Intersect(myDocument.Range("L:P"), shp.BottomRightCell) Is Nothing Then
sec = sec + 1
End If
Next shp
For k = 1 To sec
w.Shapes("Secondary " & k).Delete
Next k
End Sub

Sub quickdelete()

If MsgBox("This will erase everything! Are you sure?", vbYesNo) = vbNo Then Exit Sub

Dim s As Shape
For Each s In ActiveSheet.Shapes
    If s.Name Like "*Connector*" Then s.Delete
Next s

For Each s In ActiveSheet.Shapes
    If s.Name Like "Aim*" Then s.Delete
Next s

For Each s In ActiveSheet.Shapes
    If s.Name Like "Primary*" Then s.Delete
Next s

For Each s In ActiveSheet.Shapes
    If s.Name Like "Secondary*" Then s.Delete
Next s

For Each s In ActiveSheet.Shapes
    If s.Name Like "Intervention*" Then s.Delete
Next s
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
