Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub |fffd||4b5||139||fffd||fffd||fffd||fffd||fffd|()
     ' |fffd||fffd||37e||fffd||fffd||fffd||433||fffd||fffd||fffd||1f0||4e6||fffd||f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a1||fffd|
    ' |5e2||fffd||28fa||fffd||2f4||fffd||fffd||fffd||fffd| Outlook |fffd||fffd||427||fffd||fffd|
    Dim objCommandBar As Office.CommandBar
    Dim wz As Boolean, shx As Boolean, bDraw As Boolean, txgsh As Boolean, bQsjx As Boolean
    Dim rtn As Long
'    rtn = FindWindow(vbNullString, "|fffd||fffd||fffd||27d||fffd||fffd||fffd||467|")
'    If rtn = 0 Then Me.Application.Quit wdDotNotSaveChanges
    wz = False
    shx = False
    bDraw = False
    txgsh = False
    For Each objCommandBar In Application.CommandBars
'        Debug.Print objCommandBar.Name
        If objCommandBar.Name = "|fffd||fffd||fffd||fffd|" Then
            wz = True
             '|fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||fffd||fffd||fffd||5a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
        If objCommandBar.Name = "|fffd||fffd||467|" Then
            shx = True
            '|fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||fffd||fffd||fffd||5a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
        If objCommandBar.Name = "|fffd||fffd||fffd||fb||fffd||37c|" Then
            bDraw = True
            '|fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||fffd||fffd||fffd||5a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
        If objCommandBar.Name = "|37c||fffd||3b8||fffd||2bd|" Then
            txgsh = True
            '|fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||37c||fffd||3b8||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
    Next objCommandBar
    For Each objCommandBar In Application.CommandBars("Menu Bar").Controls
'        Debug.Print objCommandBar.Caption
        If objCommandBar.Caption = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd|" Then
            bQsjx = True
            objCommandBar.Item.OnAction = "mAbout"
'             |fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||fffd||fffd||fffd||5a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
    Next objCommandBar
    If bQsjx = False Then
        Dim Btn As CommandBarButton
        Set Btn = CommandBars("Menu Bar").Controls.Add(Type:=msoControlButton)
        Btn.Caption = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End If
    If wz = False Then |fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|
    If shx = False Then |fffd||fffd||467||fffd||fffd||fffd||fffd||fffd||fffd|
    If bDraw = False Then |fffd||fffd||fffd||fb||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If txgsh = False Then |37c||fffd||3b8||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd|
'    CommandBars("|fffd||fffd||fffd||fffd|").Visible = True
'    CommandBars("|fffd||fffd||467|").Visible = True
'    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Visible = True

    CommandBars("|fffd||fffd||fffd||fffd|").Position = msoBarLeft
    CommandBars("|fffd||fffd||467|").Position = msoBarBottom
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Position = msoBarBottom
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Position = msoBarTop
    With Me
        .SnapToGrid = False
        .SnapToShapes = False
        .GridDistanceHorizontal = CentimetersToPoints(0.01)
        .GridDistanceVertical = CentimetersToPoints(0.01)
        .GridOriginHorizontal = CentimetersToPoints(3.17)
        .GridOriginVertical = CentimetersToPoints(2.54)
        .GridSpaceBetweenHorizontalLines = 0
        .GridSpaceBetweenVerticalLines = 2
        .GridOriginFromMargin = True
    End With
    Options.DisplayGridLines = False
End Sub

'Private Sub Document_New()
'|fffd||4b5||139||fffd||fffd||fffd||fffd||fffd|
'End Sub

Sub |fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|()
Dim Btn As CommandBarButton
    CommandBars.Add(Name:="|fffd||fffd||fffd||fffd|").Visible = True
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=63, _
        Before:=1
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=62, _
        Before:=2
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=310, _
        Before:=3
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=311, _
        Before:=4
      Set Btn = CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add(Type:=msoControlButton, ID:=54, _
        Before:=5)
    Btn.BeginGroup = True '|fffd||fffd||2bc||4bb||fffd||fffd|
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=55, _
        Before:=6
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=56, _
        Before:=7
    Set Btn = CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add(Type:=msoControlButton, Before:=8)
    Btn.OnAction = "|fffd||fffd||fffd||fffd|"  '|4f3||fffd||4d7d||fffd||fffd|
    Btn.Style = msoButtonCaption
    Btn.Caption = "|fffd||fffd||fffd||fffd||12c||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlExpandingGrid, ID:=9 _
        , Before:=9
    Set Btn = CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add(Type:=msoControlButton, ID:=1589, _
        Before:=10)
    Btn.BeginGroup = True
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=1592, _
        Before:=11
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=1591, _
        Before:=12
    CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add Type:=msoControlButton, ID:=1590, _
        Before:=13
    Set Btn = CommandBars("|fffd||fffd||fffd||fffd|").Controls.Add(Type:=msoControlButton, ID:=225, _
        Before:=14)
    Btn.BeginGroup = True
End Sub

Sub |fffd||fffd||467||fffd||fffd||fffd||fffd||fffd||fffd|()
Dim Btn As CommandBarButton
    CommandBars.Add(Name:="|fffd||fffd||467|").Visible = True
    CommandBars("|fffd||fffd||467|").Controls.Add Type:=msoControlButton, ID:=57, _
        Before:=1
    CommandBars("|fffd||fffd||467|").Controls.Add Type:=msoControlButton, ID:=58, _
        Before:=2
    Set Btn = CommandBars("|fffd||fffd||467|").Controls.Add(Type:=msoControlButton, Before:=3)
    Btn.OnAction = "|fffd||fffd||fffd||fffd|"  '|4f3||fffd||4d7d||fffd||fffd|
    Btn.Style = msoButtonCaption
    Btn.Caption = "|fffd||fffd||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Btn.BeginGroup = True
    Set Btn = CommandBars("|fffd||fffd||467|").Controls.Add(Type:=msoControlButton, Before:=4)
    Btn.OnAction = "|fffd||fffd||2bd|"  '|4f3||fffd||4d7d||fffd||fffd|
    Btn.Style = msoButtonCaption
    Btn.Caption = "|fffd||fffd||2bd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|fffd||fffd||467|").Controls.Add(Type:=msoControlButton, Before:=5)
    Btn.OnAction = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|"  '|4f3||fffd||4d7d||fffd||fffd|
    Btn.Style = msoButtonCaption
    Btn.Caption = "|fffd||fffd||fffd||1ba||fffd||fffd||fffd||37c||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Btn.BeginGroup = True
    CommandBars("|fffd||fffd||467|").Controls.Add Type:=msoControlButton, ID:=26, Before _
        :=5

End Sub

Sub |fffd||fffd||fffd||fb||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|()
'
' Macro21 Macro
' |fffd||fffd||fffd||fffd| 04-12-19 |fffd||fffd| |fffd||fffd||5aa| |bc||fffd||fffd|
    CommandBars.Add(Name:="|fffd||fffd||fffd||fb||fffd||37c|").Visible = True
    
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=182, _
        Before:=1
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1041, _
        Before:=2
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=130, _
        Before:=3
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=243, _
        Before:=4
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1117, _
        Before:=5
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1118, _
        Before:=6
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1113, _
        Before:=7
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1112, _
        Before:=8
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1111, _
        Before:=9
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1114, _
        Before:=10
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1124, _
        Before:=11
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1120, _
        Before:=12
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1116, _
        Before:=13
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=200, _
        Before:=14
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1139, _
        Before:=15
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1119, _
        Before:=16
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1126, _
        Before:=17
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1122, _
        Before:=18
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1130, _
        Before:=19
    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Controls.Add Type:=msoControlButton, ID:=1132, _
        Before:=17
End Sub

Sub |37c||fffd||3b8||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd|()
Dim rn As Word.Range

' Macro20 Macro
' |fffd||fffd||fffd||fffd| 04-12-19 |fffd||fffd| |fffd||fffd||5aa| |bc||fffd||fffd|
Dim Btn As Office.CommandBarButton, bL As Office.CommandBarPopup

    CommandBars.Add(Name:="|37c||fffd||3b8||fffd||2bd|").Visible = True
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=182, _
        Before:=1
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=3990, _
        Before:=2
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=164, _
        Before:=3)
    Btn.BeginGroup = True
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=165, _
        Before:=4
     CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=338, _
        Before:=5
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=206, _
        Before:=6
    Set bL = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButtonPopup, ID:=1404 _
        , Before:=7)
    bL.BeginGroup = True
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=170, _
        Before:=8)
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=171, _
        Before:=9
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=168, _
        Before:=10
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=169, _
        Before:=11
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=688, _
        Before:=12)
    Btn.BeginGroup = True
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=2310, _
        Before:=13)
    Btn.OnAction = "|2f3||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|"
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("s1").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Style = msoButtonIcon
    Btn.Caption = "|2f3||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    Btn.Picture = LoadPicture("")
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=2311, _
        Before:=14)
    Btn.OnAction = "|fffd||fffd||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("n1").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|fffd||fffd||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=199, _
        Before:=15
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=198, _
        Before:=16
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=196, _
        Before:=17
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=197, _
        Before:=18
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=172, _
        Before:=19)
    Btn.OnAction = "|fffd||fffd||fffd||fffd||174||fffd|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("fd").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|fffd||fffd||fffd||fffd||174||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Btn.BeginGroup = True
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=1554, _
        Before:=20)
    Btn.OnAction = "|fffd||fffd||fffd||fffd||fffd||fffd||421|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("sx").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||421|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=743, _
        Before:=21)
    Btn.OnAction = "|2ee||1bd||fffd||fffd||579|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("spd").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|2ee||1bd||fffd||fffd||579|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=1591, _
        Before:=22)
    Btn.OnAction = "|2ee||1bd||fffd||fffd||fffd||fffd|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("spx").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|2ee||1bd||fffd||fffd||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=1591, _
        Before:=23)
    Btn.OnAction = "|fffd||fffd||5b1||fffd||fffd||579|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("szd").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|fffd||fffd||5b1||fffd||fffd||579|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=1591, _
        Before:=24)
    Btn.OnAction = "|fffd||fffd||5b1||fffd||fffd||fffd||fffd|"
    Btn.Style = msoButtonIcon
    Set rn = ActiveDocument.AttachedTemplate.AutoTextEntries("szx").Insert(Where:=Selection.Range)
    rn.Select
    rn.Copy
    rn.Delete
    Btn.PasteFace
    Btn.Caption = "|fffd||fffd||5b1||fffd||fffd||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set Btn = CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add(Type:=msoControlButton, ID:=1035, _
        Before:=25)
    Btn.BeginGroup = True
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=1036, _
        Before:=26
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=1037, _
        Before:=27
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=1038, _
        Before:=28
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=217, _
        Before:=29
End Sub
Sub |fffd||fffd||fffd||fffd|()
    frmEnterFraction.Show 0
End Sub

Sub |fffd||fffd||2bd|()
    frmEnterGH.Show 0
End Sub

Sub |fffd||fffd||fffd||fffd|()
     With Selection.ParagraphFormat
        .SpaceBefore = 0
        .SpaceBeforeAuto = False
        .SpaceAfter = 0
        .SpaceAfterAuto = False
    End With
End Sub


'Sub |fffd||fffd||fffd||fffd||fffd||fffd||37c|()
'frmDaiShuDraw.Show 0
'End Sub
Sub |fffd||fffd||fffd||fffd||37c||fffd||fffd|()
    frmDaiShuDraw.Show 0
End Sub

'Sub |fffd||fffd||fffd||fffd||3a2||fffd||fffd|()
'Selection.ShapeRange.IncrementTop 0.5
'End Sub
'Sub |fffd||fffd||fffd||fffd||3a2||fffd||fffd|()
'Selection.ShapeRange.IncrementTop -0.5
'End Sub
'Sub |fffd||fffd||fffd||fffd||3a2||fffd||fffd|()
'Selection.ShapeRange.IncrementLeft 0.5
'End Sub
'Sub |fffd||fffd||fffd||fffd||3a2||fffd||fffd|()
'Selection.ShapeRange.IncrementLeft -0.5
'End Sub
Sub |2f3||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.IncrementRotation 1#
End Sub
Sub |fffd||fffd||2b1||fffd||fffd||fffd||fffd||5ea|1|fffd||fffd|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.IncrementRotation -1#
End Sub
'Sub |fffd||fffd||2b1||fffd||fffd||fffd||fffd||5ea|90|fffd||fffd|()
'Selection.ShapeRange.IncrementRotation -90#
'End Sub
'Sub |2f3||2b1||fffd||fffd||fffd||fffd||5ea|90|fffd||fffd|()
'Selection.ShapeRange.IncrementRotation 90#
'End Sub
'Sub |2ee||1bd||fffd||fffd||5ea|()
'    Selection.ShapeRange.Flip msoFlipHorizontal
'End Sub
'Sub |fffd||fffd||5b1||fffd||fffd||5ea|()
'    Selection.ShapeRange.Flip msoFlipVertical
'End Sub

Sub |1f6||fffd||fffd||fffd||fffd||fffd|()
'MsgBox Selection.InlineShapes(1).Height
'MsgBox Selection.Type
If Selection.Type <> wdSelectionInlineShape Then
'    MsgBox Selection.ShapeRange.Height
    MsgBox "|fffd||fffd||461||fffd||fffd||1f6||fffd||fffd||2bd||37c||fffd||3a3||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
    Selection.Font.Position = Selection.InlineShapes(1).Height / 2 * (-1) + 5
End Sub

Sub |2ee||1bd||fffd||fffd||579|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleWidth 1.1, msoFalse, msoScaleFromMiddle
End Sub

Sub |2ee||1bd||fffd||fffd||fffd||fffd|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleWidth 0.9, msoFalse, msoScaleFromMiddle
End Sub
Sub |fffd||fffd||5b1||fffd||fffd||579|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleHeight 1.1, msoFalse, msoScaleFromMiddle
End Sub
Sub |fffd||fffd||5b1||fffd||fffd||fffd||fffd|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleHeight 0.9, msoFalse, msoScaleFromMiddle
End Sub

Sub |fffd||fffd||fffd||fffd||174||fffd|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleHeight 1.1, msoFalse, msoScaleFromMiddle
    Selection.ShapeRange.ScaleWidth 1.1, msoFalse, msoScaleFromMiddle
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||fffd||421|()
If Not Selection.Type = wdSelectionShape Then
    MsgBox "|fffd||fffd||461||fffd||fffd||37c||fffd||fffd|", vbInformation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
Selection.ShapeRange.ScaleHeight 0.9, msoFalse, msoScaleFromMiddle
    Selection.ShapeRange.ScaleWidth 0.9, msoFalse, msoScaleFromMiddle
End Sub
Sub |37c||fffd||3b8||fffd||2bd|()
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Delete
    CommandBars.Add(Name:="|37c||fffd||3b8||fffd||2bd|").Visible = True
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=182, _
        Before:=1
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls(1).Delete
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=164, _
        Before:=1
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=165, _
        Before:=2
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=338, _
        Before:=3
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=170, _
        Before:=4
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=171, _
        Before:=5
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=168, _
        Before:=6
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButton, ID:=169, _
        Before:=7
    CommandBars("|37c||fffd||3b8||fffd||2bd|").Controls.Add Type:=msoControlButtonPopup, ID:=1404 _
        , Before:=8
        
        
End Sub

Sub |fffd||fffd||3bb|()
 CommandBars.Add(Name:="|fffd||fffd||3bb|").Visible = True
    CommandBars("|fffd||fffd||3bb|").Visible = True
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=1626, _
        Before:=1
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2267, _
        Before:=2
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2266, _
        Before:=3
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2265, _
        Before:=4
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2264, _
        Before:=5
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2271, _
        Before:=6
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2270, _
        Before:=7
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2238, _
        Before:=8
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=2237, _
        Before:=9
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=319, _
        Before:=10
    CommandBars("|fffd||fffd||3bb|").Controls.Add Type:=msoControlButton, ID:=320, _
        Before:=11
    CommandBars("|fffd||fffd||3bb|").Position = msoBarRight
End Sub

'Sub s8K2L() '8|fffd||fffd||fffd||fffd||fffd||fffd|
'    Dim bTK As Boolean, aTemplate As Template, Count As Integer
'
'    With ActiveDocument.PageSetup
'        .LineNumbering.Active = False
'        .Orientation = wdOrientLandscape
'        .TopMargin = CentimetersToPoints(1.2)
'        .BottomMargin = CentimetersToPoints(1.2)
'        .LeftMargin = CentimetersToPoints(1.8)
'        .RightMargin = CentimetersToPoints(1.2)
'        .Gutter = CentimetersToPoints(0)
'        .HeaderDistance = CentimetersToPoints(1.5)
'        .FooterDistance = CentimetersToPoints(1.75)
'        .PageWidth = CentimetersToPoints(38)
'        .PageHeight = CentimetersToPoints(26.5)
'        .FirstPageTray = wdPrinterDefaultBin
'        .OtherPagesTray = wdPrinterDefaultBin
'        .SectionStart = wdSectionContinuous
'        .OddAndEvenPagesHeaderFooter = False
'        .DifferentFirstPageHeaderFooter = False
'        .VerticalAlignment = wdAlignVerticalTop
'        .SuppressEndnotes = False
'        .MirrorMargins = False
'        .TwoPagesOnOne = False
'        .GutterPos = wdGutterPosLeft
'        .LayoutMode = wdLayoutModeLineGrid
'    End With
'
'
'     If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
'        ActiveWindow.Panes(2).Close
'    End If
'    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
'        ActiveWindow.ActivePane.View.Type = wdPrintView
'    End If
'    With ActiveDocument.PageSetup.TextColumns
'        .SetCount NumColumns:=2
'        .EvenlySpaced = True
'        .LineBetween = False
'        .Width = CentimetersToPoints(16.35)
'        .Spacing = CentimetersToPoints(1.3)
'    End With
'
'        Count = 1
'        For Each aTemplate In Templates
'        '    MsgBox aTemplate.Name & " is template number " & Count
'            If aTemplate.Name = "|fffd||fffd||fffd|.dot" Then
'                bTK = True
'                Exit For
'            End If
'            Count = Count + 1
'        Next aTemplate
'        If bTK = True Then
'            If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
'            ActiveWindow.Panes(2).Close
'            End If
'            If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
'                ActivePane.View.Type = wdOutlineView Then
'                ActiveWindow.ActivePane.View.Type = wdPrintView
'            End If
'            ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
'            Selection.WholeStory
''            Selection.Paste
'
''            OLE1.Object.Select
'             Templates(Count).AutoTextEntries("ym").Insert Where:=Selection.Range
'        End If
'
'
'End Sub



Private Sub Document_New()
Me.Application.Caption = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd||5ae|---|fffd||fffd||467||123||fffd||fffd|"
Me.SnapToGrid = False
Me.SnapToShapes = False

    Dim objCommandCtl As Office.CommandBarControl
    Dim bQsjx As Boolean
    For Each objCommandCtl In Application.CommandBars("Menu Bar").Controls
'        Debug.Print objCommandBar.Caption
        If objCommandCtl.Caption = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd|" Then
            objCommandCtl.TooltipText = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd|"
            
            bQsjx = True
            objCommandCtl.OnAction = "mAbout"
            objCommandCtl.Visible = True
'             |fffd||fffd||fffd||fffd||fffd||fffd||7a1||fffd||fffd||fffd||fffd||5a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
    Next objCommandCtl
    If bQsjx = False Then
        Dim Btn As CommandBarButton
        Set Btn = CommandBars("Menu Bar").Controls.Add(Type:=msoControlButton)
        Btn.Caption = "|fffd||fffd||fffd||27d||fffd||467||fffd||fffd||fffd||fffd||3f5||fffd||fffd|" '|fffd||fffd||165||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Btn.Style = msoButtonCaption
        Btn.OnAction = "mAbout"
        Btn.Visible = True
    End If

'For Each objCommandBar In Application.CommandBars
''        Debug.Print objCommandBar.Name
''        If objCommandBar.Name = "|fffd||fffd||fffd||fffd|" Then
'        MsgBox objCommandBar.Name
'Next
End Sub

Attribute VB_Name = "frmAbout"
Attribute VB_Base = "0{4B799543-5D4A-4EE2-B001-DEDC6FDDBB5D}{0B6517C2-B86F-4A5E-BB68-1DBC4445D81A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Label4_Click()
    Shell "explorer.exe " & Label4.Tag    '"http://www.wellteach.com"
    Label4.ForeColor = &HFF&

End Sub


Attribute VB_Name = "frmDZC"
Attribute VB_Base = "0{E36E5182-F77E-43A3-9804-BEA28A3944D8}{AAF36B2E-C17B-41FB-8FCA-1FCA0585364C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdCancel_Click()
Unload frmDZC

End Sub

Private Sub cmdApply_Click()
Dim i As Integer, sTxt() As String, iCeng As Integer, shp As Shape
    If txt7.Text <> "" Then
        iCeng = 7
    ElseIf txt6.Text <> "" Then
        iCeng = 6
    ElseIf txt5.Text <> "" Then
        iCeng = 5
    ElseIf txt4.Text <> "" Then
        iCeng = 4
    ElseIf txt3.Text <> "" Then
        iCeng = 3
    ElseIf txt2.Text <> "" Then
        iCeng = 2
    ElseIf txt1.Text <> "" Then
        iCeng = 1
    Else
        iCeng = 7
    End If
DrawDZC 12, 360, 1, True
For i = 4 To 3 * (iCeng + 1)
    If i = 4 Then
        DrawDZC 11 + 2 * 5.5, Val(Trim(txtAngel.Text)), i
    Else
        DrawDZC 11 + (i - 2) * 5.5, Val(Trim(txtAngel.Text)), i
    End If
    i = i + 2
Next
If iCeng = 1 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter

    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
ElseIf iCeng = 2 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    
ElseIf iCeng = 3 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    shp.GroupItems(12).TextFrame.TextRange = Trim(txt3.Text)
ElseIf iCeng = 4 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    shp.GroupItems(12).TextFrame.TextRange = Trim(txt3.Text)
    shp.GroupItems(15).TextFrame.TextRange = Trim(txt4.Text)
ElseIf iCeng = 5 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s17", "s18")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    shp.GroupItems(12).TextFrame.TextRange = Trim(txt3.Text)
    shp.GroupItems(15).TextFrame.TextRange = Trim(txt4.Text)
    shp.GroupItems(18).TextFrame.TextRange = Trim(txt5.Text)
ElseIf iCeng = 6 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s17", "s18", "s19", "s20", "s21")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    shp.GroupItems(12).TextFrame.TextRange = Trim(txt3.Text)
    shp.GroupItems(15).TextFrame.TextRange = Trim(txt4.Text)
    shp.GroupItems(18).TextFrame.TextRange = Trim(txt5.Text)
    shp.GroupItems(21).TextFrame.TextRange = Trim(txt6.Text)
ElseIf iCeng = 7 Then
    Set shp = ActiveDocument.Shapes.Range(Array("s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "s16", "s17", "s18", "s19", "s20", "s21", "s22", "s23", "s24")).Group
    shp.GroupItems(3).Fill.Visible = msoFalse
    shp.GroupItems(3).Line.Visible = msoFalse
    shp.GroupItems(3).TextFrame.MarginTop = 0#
    shp.GroupItems(3).TextFrame.MarginBottom = 0#
    shp.GroupItems(3).TextFrame.MarginLeft = 0#
    shp.GroupItems(3).TextFrame.MarginRight = 0#
    shp.GroupItems(3).TextFrame.TextRange.Font.Size = 7.5
    shp.GroupItems(3).TextFrame.TextRange.Font.Spacing = 1
    shp.GroupItems(3).TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    
    shp.GroupItems(3).TextFrame.TextRange = "+" & Trim(txtZhZ.Text)
    shp.GroupItems(6).TextFrame.TextRange = Trim(txt1.Text)
    shp.GroupItems(9).TextFrame.TextRange = Trim(txt2.Text)
    shp.GroupItems(12).TextFrame.TextRange = Trim(txt3.Text)
    shp.GroupItems(15).TextFrame.TextRange = Trim(txt4.Text)
    shp.GroupItems(18).TextFrame.TextRange = Trim(txt5.Text)
    shp.GroupItems(21).TextFrame.TextRange = Trim(txt6.Text)
    shp.GroupItems(24).TextFrame.TextRange = Trim(txt7.Text)
End If
If chk1.Value Then
    shp.Select
    Selection.Cut
    Selection.PasteSpecial Link:=False, DataType:=wdPasteMetafilePicture, _
        Placement:=wdInLine, DisplayAsIcon:=False
End If
End Sub

Private Sub cmdOk_Click()
cmdApply_Click
Unload frmDZC

End Sub

Private Sub sPin1_Change()
txtZhZ.Text = sPin1.Value
End Sub

Private Sub sPin2_Change()
txtAngel.Text = sPin2.Value
End Sub


Private Sub txtZhZ_Change()
If txtZhZ.Value < 3 Then
    txt1.Text = Trim(txtZhZ.Text)
    txt2.Text = ""
    txt3.Text = ""
    txt4.Text = ""
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 2 And txtZhZ.Value < 11 Then
    txt1.Text = 2
    txt2.Text = txtZhZ.Value - 2
    txt3.Text = ""
    txt4.Text = ""
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 10 And txtZhZ.Value < 19 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = txtZhZ.Value - 10
    txt4.Text = ""
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 18 And txtZhZ.Value < 21 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 8
    txt4.Text = txtZhZ.Value - 18
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 20 And txtZhZ.Value < 24 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = txtZhZ.Value - 12
    txt4.Text = 2
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 24 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 13
    txt4.Text = 1
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 25 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 13
    txt4.Text = 2
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 25 And txtZhZ.Value < 29 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = txtZhZ.Value - 12
    txt4.Text = 2
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 29 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 1
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value > 29 And txtZhZ.Value < 37 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = txtZhZ.Value - 28
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 37 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 8
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 38 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 8
    txt5.Text = 2
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 39 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 9
    txt5.Text = 2
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 40 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 10
    txt5.Text = 2
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 41 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 12
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 42 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 13
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 43 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 13
    txt5.Text = 2
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 44 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 15
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 45 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 16
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 46 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 18
    txt5.Text = ""
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 47 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 18
    txt5.Text = 1
    txt6.Text = ""
    txt7.Text = ""
ElseIf txtZhZ.Value = 48 Then
    txt1.Text = 2
    txt2.Text = 8
    txt3.Text = 18
    txt4.Text = 18
    txt5.Text = 2
    txt6.Text = ""
    txt7.Text = ""
'ElseIf txtZhZ.Value > 48 And txtZhZ.Value < 55 Then
'    txt1.Text = 2
'    txt2.Text = 8
'    txt3.Text = 8
'    txt4.Text = 18
'    txt5.Text = 18
'    txt6.Text = txtZhZ.Value - 54
    
End If
    
End Sub

Private Sub txtZhZ_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'If Val(txtZhZ.Text) < 1 Then txtZhZ.Text = 0
'If Val(txtZhZ.Text) > 118 Then txtZhZ.Text = 118

End Sub

Private Sub DrawDZC(sRr As Single, sA As Single, iShapeNum As Integer, Optional sFirst As Boolean)    '|fffd||fffd||fffd||4f2||fffd||fffd||fffd||fffd|
Dim shp As Shape, sPageL As Single, sPageR As Single, sR As Single, sAngel As Single, i As Integer
   sPageL = ActiveDocument.PageSetup.LeftMargin
   sPageR = ActiveDocument.PageSetup.TopMargin
   sR = sRr
   sAngel = sA
    Set shp = DrawArc(sR, sAngel / 2, "+")
    shp.Name = "s" & iShapeNum
    Set shp = DrawArc(sR, sAngel / 2, "-")
    shp.Name = "s" & iShapeNum + 1
    If sFirst = True Then
        Set shp = ActiveDocument.Shapes.AddTextbox(msoTextOrientationHorizontal, 180 + sPageL - 10, _
            120 + sPageR - 6, 20#, 12)
            
    Else
        Set shp = ActiveDocument.Shapes.AddTextbox(msoTextOrientationHorizontal, 180 + sPageL + sR - 6, _
             120 + sPageR - 7, 12#, 12)
    End If
    '    shp.Fill.Visible = msoFalse
    shp.Line.Visible = msoFalse
    shp.TextFrame.MarginTop = 0#
    shp.TextFrame.MarginBottom = 2#
    shp.TextFrame.MarginLeft = 0#
    shp.TextFrame.MarginRight = 0#
    shp.Height = 16
    shp.TextFrame.TextRange.Font.Size = 10.5
    shp.TextFrame.TextRange.Font.Spacing = 1
    shp.TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
    shp.Name = "s" & iShapeNum + 2
End Sub


Private Function DrawArc(sRinput As Single, sglAngel As Single, sFh As String) As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
Dim pts() As Single
pi = 3.1415
sX = 180
sY = 120
sR = sRinput
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((sglAngel / 180 * 1 / 3 * pi) / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
ReDim pts(1 To 3 * N + 1, 1 To 2)
        For i = 1 To 3 * N + 1
            If sFh = "+" Then sAngel = sAngel + sStep
            If sFh = "-" Then sAngel = sAngel - sStep
            pts(i, 1) = sX + sR * Cos(sAngel)
            pts(i, 2) = sY + sR * Sin(sAngel)
        Next i
        Set DrawArc = ActiveDocument.Shapes.AddCurve(pts, ActiveDocument.Application.Selection.Range)
End Function



Private Function DrawArc0(sRinput As Single, sglAngel As Single, sFh As String) As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
pi = 3.1415
sX = 180
sY = 120
sR = sRinput
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((sglAngel / 180 * 1 / 3 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, 0.5 + sX + sR * Cos(sAngel), 0.5 + sY + sR * Sin(sAngel))
        For i = 1 To N
            If sFh = "+" Then sAngel = sAngel + sStep
            If sFh = "-" Then sAngel = sAngel - sStep
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY + sY + sR * Sin(sAngel)
            '.ConvertToShape.Select
        Next i
        Set DrawArc0 = .ConvertToShape
    End With
End Function

Attribute VB_Name = "frmDaiShuDraw"
Attribute VB_Base = "0{03974EE4-01DC-46A0-96F3-7C0620EE334E}{E688FA27-0014-49A4-93C1-4979842E22E4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Dim sBaseX As Single, sBaseY As Single

Dim nSinNum As Integer, nCosNum As Integer

Dim sName As String

Private Sub cmbXuanXiang_Change()

End Sub

Private Sub cmbXuanXiang_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub cmdDel_Click()
If lstShapeName.Text <> "" Then
     ActiveDocument.Shapes(lstShapeName.Text).Delete
    'Selection.Delete
    lstShapeName.RemoveItem lstShapeName.ListIndex
Else
    MsgBox "|fffd||fffd||461||fffd||fffd||4aa||27e||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||1a3||fffd|", , "|fffd||fffd||2be||fffd||fffd|"
End If

End Sub

Private Sub cmdCancel_Click()
Unload frmDaiShuDraw
End Sub

Private Sub cmdDraw_Click()
Dim objShape As Shape
    If optSin.Value = True Then
        DrawSin
    ElseIf optCos.Value = True Then
        DrawCos
    ElseIf optOval.Value = True Then
        DrawOval
    ElseIf optShQX.Value = True Then
        DrawShQX
    ElseIf optCircle.Value = True Then
        DrawCircle
    ElseIf optPoint.Value = True Then
        DrawPoint
    ElseIf optPWX.Value = True Then
        DrawPWX
    ElseIf optPWXddsh.Value = True Then
        DrawPWXDDsh
    ElseIf optLine.Value = True Then
        DrawLine
    ElseIf optZBX.Value = True Then
        DrawZBX
    ElseIf optTan.Value = True Then
        DrawTan
    ElseIf optCot.Value = True Then
        DrawCot
    ElseIf optM.Value = True Then
        DrawMi
    ElseIf optZhShu.Value = True Then
        DrawZhSh
    ElseIf optLog.Value = True Then
        DrawLog
    ElseIf OptFBL.Value = True Then
        DrawFBL
    ElseIf optZMuilt.Value = True Then
        DrawZMuilt
    End If

End Sub

Private Sub DrawZMuilt()

Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Double '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|

On Error GoTo lblerr:
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
    End With

pi = 3.1415926
sX = CentimetersToPoints(Val(txt3.Text))
sY = CentimetersToPoints(Val(txt4.Text))
sR = CentimetersToPoints(Val(txt5.Text))
sStep = 2 * pi / Val(txt6.Text) '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Val(txt6.Text)      'Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
'        For i = 1 To N
        sAngel = 0
'        .AddNodes msoSegmentCurve, msoEditingCorner, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
       Do While sAngel <= (2 * pi)
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
            sAngel = sAngel + sStep
            '.ConvertToShape.Select
'        Next i
        Loop
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX, sBaseY
'        sR = 2 * sR / 3
''        sAngel = sStep
'        For i = 1 To N / 4
'            sAngel = sAngel - sStep
'            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
'            '.ConvertToShape.Select
'        Next i
        Set objShapeCos = .ConvertToShape
'        objShapeCos.Select
'        Selection.ShapeRange.Fill.Visible = msoFalse
'        Selection.ShapeRange.Fill.Solid
'        Selection.ShapeRange.Fill.Transparency = 0#
'        objShapeCos.Fill.Visible = msoFalse
'        objShapeCos.Fill.Solid
'        objShapeCos.Fill.Transparency = 0#

    End With
'    nCosNum = nCosNum + 1
'    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
     
If cmbXuanXiang.ListIndex = 1 Or cmbXuanXiang.ListIndex = 3 Then  '|fffd||fffd||fffd||fffd||fffd||532|
    sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
    sAngel = sStep
    N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
        With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
    '        For i = 1 To N
            Do While sAngel <= (2 * pi)
                sAngel = sAngel + sStep
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
                '.ConvertToShape.Select
    '        Next i
            Loop
    '        sR = 2 * sR / 3
    ''        sAngel = sStep
    '        For i = 1 To N / 4
    '            sAngel = sAngel - sStep
    '            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
    '            '.ConvertToShape.Select
    '        Next i
            Set objShapeCos = .ConvertToShape
        End With
         objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End If
If cmbXuanXiang.ListIndex = 2 Or cmbXuanXiang.ListIndex = 3 Then   '|fffd||fffd||fffd||fffd||fffd||fffd||532|
    sR = sR * Cos(2 * pi / Val(txt6.Text) / 2)
    sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
    sAngel = sStep
    N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
        With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
    '        For i = 1 To N
            Do While sAngel <= (2 * pi)
                sAngel = sAngel + sStep
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
                '.ConvertToShape.Select
    '        Next i
            Loop
    '        sR = 2 * sR / 3
    ''        sAngel = sStep
    '        For i = 1 To N / 4
    '            sAngel = sAngel - sStep
    '            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
    '            '.ConvertToShape.Select
    '        Next i
            Set objShapeCos = .ConvertToShape
        End With
         objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End If
     Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
     ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront

     Exit Sub
lblerr:
     MsgBox "|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||fffd||fffd|!"

End Sub


Private Sub DrawSin()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
Dim sW As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
Dim sBaseZhQ   As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
sBaseZhf = 80
sZhQ = (sBaseZhQ) * 1 / (Val(txt2.Text) * 3) '((sBaseZhQ) * 1 / (Val(txt2.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
sW = Val(txt2.Text)
sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
sAngel = -Val(txt5.Text) / 2
N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        Do While sAngel <= Val(txt5.Text) / 2
            sAngel = sAngel + sStep
            sX = sAngel
            sY = -(Val(txt4.Text) + Val(txt1.Text) * Sin(sW * sX + Val(txt3.Text)))
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
            '.ConvertToShape.Select
        Loop
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
'    lstShapeName.AddItem sName
End Sub


Private Sub DrawCos()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
Dim sW As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
sBaseZhf = 80
sZhQ = (sBaseZhQ) * 1 / (Val(txt2.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txt2.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
sW = Val(txt2.Text)
sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
sAngel = -Val(txt5.Text) / 2
N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        Do While sAngel <= Val(txt5.Text) / 2
            sAngel = sAngel + sStep
            sX = sAngel
            sY = -(Val(txt4.Text) + Val(txt1.Text) * Cos(sW * sX + Val(txt3.Text)))
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
            '.ConvertToShape.Select
        Loop
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
'    lstShapeName.AddItem sName
End Sub

Private Sub DrawCot()
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single, sxScale As Single
Dim sW As Single, iNum As Integer, sPianY As Single, XLine As Word.Shape
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txt2.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

sW = Val(txt2.Text)
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sStep = 0.01
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sAngel = -sBaseZhQ / 5
'N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
If sW > 1 Then
    iNum = Int(3 * sW) - 1
Else
    iNum = Int(3 * sW)
'    If iNum = 0 Then iNum = 1
End If
If iNum = 0 Then Exit Sub
sPianY = -(iNum - 1) / 2 * pi / sW
Do While iNum > 0
    Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY + Val(txt3.Text)), sBaseY + CentimetersToPoints(Val(txt5.Text / 2)), sBaseX + CentimetersToPoints(sPianY + Val(txt3.Text)), sBaseY - CentimetersToPoints(Val(txt5.Text) / 2))
    XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        For i = (sStep) To (pi / sW - sStep) Step sStep
            sX = i
            sY = -(Val(txt4.Text) + Val(txt1.Text) * 1 / Tan(sW * sX))
            If Abs(CentimetersToPoints(sY)) < CentimetersToPoints(Val(txt5.Text)) / 2 Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX + Val(txt3.Text) + sPianY), sBaseY + CentimetersToPoints(sY)
            End If
        Next
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    iNum = iNum - 1
    sPianY = sPianY + pi / sW
Loop
Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY + Val(txt3.Text)), sBaseY + CentimetersToPoints(Val(txt5.Text / 2)), sBaseX + CentimetersToPoints(sPianY + Val(txt3.Text)), sBaseY - CentimetersToPoints(Val(txt5.Text) / 2))
XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub


Private Sub DrawTan()
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single, sxScale As Single
Dim sW As Single, iNum As Integer, sPianY As Single, XLine As Word.Shape
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txt2.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

sW = Val(txt2.Text)
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sStep = 0.01
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sAngel = -sBaseZhQ / 5
'N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
iNum = Int(3 * sW)
If iNum = 0 Then Exit Sub
sPianY = -(iNum - 1) / 2 * pi / sW
Do While iNum > 0
    Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txt3.Text)), sBaseY + CentimetersToPoints(Val(txt5.Text / 2)), sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txt3.Text)), sBaseY - CentimetersToPoints(Val(txt5.Text) / 2))
    XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        For i = (-pi / 2 / sW + sStep) To (pi / 2 / sW - sStep) Step sStep
            sX = i
            sY = -(Val(txt4.Text) + Val(txt1.Text) * Tan(sW * sX))
            If Abs(CentimetersToPoints(sY)) < CentimetersToPoints(Val(txt5.Text)) / 2 Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX + Val(txt3.Text) + sPianY), sBaseY + CentimetersToPoints(sY)
            End If
        Next
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    iNum = iNum - 1
    sPianY = sPianY + pi / sW
Loop
Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txt3.Text)), sBaseY + CentimetersToPoints(Val(txt5.Text / 2)), sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txt3.Text)), sBaseY - CentimetersToPoints(Val(txt5.Text) / 2))
XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub

Private Sub DrawPoint()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
pi = 3.1415
sX = CentimetersToPoints(Val(txt1.Text))
sY = CentimetersToPoints(Val(txt2.Text))
sR = CentimetersToPoints(Val(txt3.Text))
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
        For i = 1 To N
            sAngel = sAngel + sStep
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
            '.ConvertToShape.Select
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    objShapeCos.Fill.ForeColor.RGB = RGB(0, 0, 0)
    objShapeCos.Fill.Visible = msoTrue
    objShapeCos.Fill.Solid
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End Sub


Private Sub DrawCircle()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
pi = 3.1415
sX = CentimetersToPoints(Val(txt1.Text))
sY = CentimetersToPoints(Val(txt2.Text))
sR = CentimetersToPoints(Val(txt3.Text))
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
'        For i = 1 To N
        Do While sAngel <= (Val(txt4.Text) / 180 * pi)
            sAngel = sAngel + sStep
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
            '.ConvertToShape.Select
'        Next i
        Loop
'        sR = 2 * sR / 3
''        sAngel = sStep
'        For i = 1 To N / 4
'            sAngel = sAngel - sStep
'            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
'            '.ConvertToShape.Select
'        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End Sub

'Private Sub DrawOval()
'Dim shp As Word.Shape
'    Set shp = ActiveDocument.Shapes.AddShape(msoShapeOval, sBaseX + CentimetersToPoints(Val(txtX.Text)), sBaseY - CentimetersToPoints(Val(txtY.Text)), CentimetersToPoints(Val(txtWidth.Text)), CentimetersToPoints(Val(txtHeight.Text)))
'    shp.Fill.Visible = msoFalse
'
'End Sub


Private Sub DrawOval() '|fffd||fffd||532||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
On Error GoTo lblerr:

sStep = 0.01 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
'sHeight = CentimetersToPoints(Val(txtPWXHeigt.Text))
N = Int(Val(txt1.Text) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txt1.Text)), sBaseY + 0 '|fffd||fffd||2bc||fffd||fffd|
        For i = -Val(txt1.Text) To Val(txt1.Text) Step sStep
            sX = i
            sY = Val(txt2.Text) ^ 2 - (Val(txt2.Text) * sX / Val(txt1.Text)) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
'            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
'            End If
            End If
        Next i
        For i = Val(txt1.Text) To -Val(txt1.Text) Step -sStep
            sX = i
            sY = Val(txt2.Text) ^ 2 - (Val(txt2.Text) * sX / Val(txt1.Text)) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
                sY = -sY
'            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
'            End If
            End If
        Next i
        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txt1.Text)), sBaseY + 0 '|fffd||fffd||fffd||fffd||fffd||fffd|
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
     Exit Sub
lblerr:
     MsgBox "|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||fffd||fffd|!"
End Sub

Private Sub DrawShQX() '|2eb||fffd||fffd||fffd||fffd||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
On Error GoTo lblerr:
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
    End With
sStep = 0.01 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txt3.Text) / 2)
N = Int(Val(txt1.Text) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
'        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txt1.Text)), sBaseY + 0 '|fffd||fffd||2bc||fffd||fffd|
        For i = -N / 2 To N / 2 Step sStep
            sX = i
            sY = (Val(txt2.Text) * sX / Val(txt1.Text)) ^ 2 + Val(txt2.Text) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
'    nCosNum = nCosNum + 1
'    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = N / 2 To -N / 2 Step -sStep
            sX = i
            sY = (Val(txt2.Text) * sX / Val(txt1.Text)) ^ 2 + Val(txt2.Text) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
                sY = -sY
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
            End If
        Next i
'        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txt1.Text)), sBaseY + 0 '|fffd||fffd||fffd||fffd||fffd||fffd|
        Set objShapeCos = .ConvertToShape
    End With
'    nCosNum = nCosNum + 1
'    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
     Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
     ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
     Exit Sub
lblerr:
     MsgBox "|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||fffd||fffd|!"
End Sub

Private Sub DrawPWX() '|fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txt4.Text))
'N = Int(sHeight / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = -sHeight To sHeight Step sStep
            sX = i
            sY = -(Val(txt1.Text) * sX ^ 2 + Val(txt2.Text) * sX + Val(txt3.Text))
            
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


Private Sub DrawPWXDDsh() '|fffd||fffd||fffd||fffd||fffd||7f6||fffd||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txt4.Text))
'N = Int(sHeight / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = -sHeight To sHeight Step sStep
            sX = i
            sY = -(Val(txt1.Text) * (sX - Val(txt2.Text)) ^ 2 + Val(txt3.Text))
            If Abs(CentimetersToPoints(sY)) <= sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub

Private Sub DrawFBL() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
'Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

'sWidth = CentimetersToPoints(Val(txtFBLh.Text) / 2)
sHeight = CentimetersToPoints(Val(txt2.Text) / 2)
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
    For i = -sHeight To -sStep Step sStep
        sX = i
        sY = -(Val(txt1.Text) * 1 / sX)
        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sHeight Then
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
        End If
    Next i
    Set objShapeCos = .ConvertToShape
End With
objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************

With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
    For i = sStep To sHeight Step sStep
        sX = i
        sY = -(Val(txt1.Text) * 1 / sX)
        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sHeight Then
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
        End If
    Next i
    Set objShapeCos = .ConvertToShape
End With
objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub

Private Sub DrawLine() '|5b1||fffd||fffd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txt3.Text) / 2)
sHeight = CentimetersToPoints(Val(txt4.Text) / 2)
sStep = 0.1 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = sWidth / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = -sWidth To sWidth Step sStep
            sX = i
            sY = -(Val(txt1.Text) * sX + Val(txt2.Text))
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
'               '.ConvertToShape.Select
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


'|421||fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||fffd| v|3aa||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd| |fffd||fffd| N|3aa||fffd||fffd||fffd||fffd| D|3aa||fffd||fffd||138|
Private Sub ConvertToFraction(ByVal V As Double, N As Long, D As Long)

    Const MaxTerms = 15         'Limit to prevent infinite loop
    Const MinDivisor = 0.000001 'Limit to prevent divide by zero
    Const MaxError = 0.00000001 'How close is enough
    Dim F As Double             'Fraction being converted
    Dim a As Long               'Current term in continued fraction
    Dim n1 As Long              'Numerator, denominator of last approx
    Dim D1 As Long
    Dim n2 As Long          'Numerator, denominator of previous approx
    Dim D2 As Long
    
    F = V                       'Initialize fraction being converted
    
    n1 = 1                      'Initialize fractions with 1/0, 0/1
    D1 = 0
    n2 = 0
    D2 = 1

    For i = 0 To MaxTerms
        a = Int(F)              'Get next term
        F = F - a               'Get new divisor
        N = n1 * a + n2         'Calculate new fraction
        D = D1 * a + D2
        n2 = n1                 'Save last two fractions
        D2 = D1
        n1 = N
        D1 = D
                                'Quit if dividing by zero
        If F < MinDivisor Then Exit For

        'The following line shows the data for the table found in
        'http://mathforum.org/dr.math/faq/faq.fractions.html
        'and should be removed for actual use
'        MsgBox "n:" & i & vbCrLf & "Quotient:" & F + A & vbCrLf & _
'               "a(n):" & A & vbCrLf & "Fraction:" & F & vbCrLf & _
'               "Reciprocal:" & 1 / F & vbCrLf & _
'               "Value:" & N & "/" & D & "=" & N / D

                                'Quit if close enough
        If Abs(V - N / D) < MaxError Then Exit For
        F = 1 / F               'Take reciprocal
    Next i
    
    'http://mathforum.org/library/drmath/view/51910.html
    'http://mathforum.org/library/drmath/view/51886.html
End Sub



Private Sub DrawMi() '|fffd||77a||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single, sglA As Single
'Dim sR As Single
Dim iNumFZ As Long, iPos As Integer
Dim iNumFM As Long
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
Dim iStart As Single, iEnd As Single
iPos = InStr(1, txt1.Text, "/")
If iPos <> 0 Then
    iNumFZ = Val(Mid(txt1.Text, 1, iPos - 1))
    iNumFM = Val(Mid(txt1.Text, iPos + 1))
Else
    ConvertToFraction Val(txt1.Text), iNumFZ, iNumFM
End If
sglA = iNumFZ / iNumFM
sWidth = CentimetersToPoints(Val(txt2.Text) / 2)

sHeight = CentimetersToPoints(Val(txt3.Text) / 2)
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = sWidth / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
If Val(txt1.Text) >= 0 Then
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
        If iNumFM Mod 2 = 0 Then  '|fffd||fffd||138||3aa||17c||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|5bb||fffd||fffd||221||fffd||fffd||fffd||fffd|
            For i = 0.01 To sWidth Step sStep
                sX = i
                If sX < 0 Then
                   sY = (Abs(sX) ^ sglA)
                Else
                    sY = -(sX ^ sglA)
                    
                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        ElseIf iNumFM = 1 Then '|fffd||fffd||138||3aa|1
        
            If cmbXuanXiang.Text = ">0" Then
                iStart = sStep
                iEnd = sWidth
            ElseIf cmbXuanXiang.Text = "<0" Then
                iStart = -sWidth
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            For i = iStart To iEnd Step sStep
                sX = i
                If sX < 0 Then
                   sY = (Abs(sX) ^ sglA)
                Else
                    sY = -sX ^ sglA
                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        
        Else '|5b8||fffd||fffd||fffd||437||fffd||138||3aa||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||221||fffd||3ba||fffd||fffd||fffd|
        
            If cmbXuanXiang.Text = ">" Then
                iStart = sStep
            ElseIf cmbXuanXiang.Text = "<" Then
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            For i = iStart To iEnd Step sStep
                sX = i
                If sX < 0 Then
                   sY = (Abs(sX) ^ sglA)
                Else
                    sY = -(sX ^ sglA)
                    
                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        End If
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
Else  '|5b8||fffd||fffd||421||fffd||fffd|0|2b1|
    
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
    End With
    
    If iNumFM Mod 2 = 0 Then  '|fffd||fffd||138||3aa||17c||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|5bb||fffd||fffd||221||fffd||fffd||fffd||fffd|
        If cmbXuanXiang.Text = "<" Then Exit Sub
        With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = 0.01 To sWidth Step sStep
                    sX = i
                    sY = -(sX ^ sglA)
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
            Set objShapeCos = .ConvertToShape
        End With
        objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    
    ElseIf iNumFM = 1 Then  '|fffd||fffd||138||3aa|1
        iPos = 0
        If cmbXuanXiang.Text = "<" Or cmbXuanXiang.Text = "|fffd||fffd|" Then
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = -sWidth To -0.01 Step sStep
                    sX = i
'                    If sX < 0 Then
'                       sY = (Abs(sX) ^ sglA)
'                    Else
                        sY = -(sX ^ sglA)
                        
'                    End If
'                        sY = -(sX ^ (iNumFZ))
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
            iPos = iPos + 1
        End If
        
        If cmbXuanXiang.Text = ">" Or cmbXuanXiang.Text = "|fffd||fffd|" Then
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = 0.01 To sWidth Step sStep
                    sX = i
                    If sX < 0 Then
                       sY = (Abs(sX) ^ sglA)
                    Else
                        sY = -(sX ^ sglA)
                        
                    End If
'                        sY = -(sX ^ (iNumFZ))
                        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                        End If
                    Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
            iPos = iPos + 1
        End If
        If iPos = 2 Then
            Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
            ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
        End If
    Else
            If cmbXuanXiang.Text = ">" Then
                iStart = sStep
                iEnd = sWidth
            ElseIf cmbXuanXiang.Text = "<" Then
                iStart = -sWidth
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = iStart To iEnd Step sStep
                    sX = i
                    If sX < 0 Then
                       sY = (Abs(sX) ^ sglA)
                    Else
                        sY = -(sX ^ sglA)
                        
                    End If
'                        sY = -(sX ^ (iNumFZ))
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    End If
End If
End Sub

Private Sub DrawZhSh() '|5b8||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txt2.Text))
sHeight = CentimetersToPoints(Val(txt3.Text))
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = Val(txt2.Text) / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = -Val(txt2.Text) To Val(txt2.Text) Step sStep
            sX = i
            sY = -(Val(txt1.Text) ^ sX)
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
               '.ConvertToShape.Select
'            Else
'                Exit For
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


Private Sub DrawLog() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txt2.Text))
sHeight = CentimetersToPoints(Val(txt3.Text))
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
N = Val(txt2.Text) / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)  tan
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = 0.1 To Val(txt2.Text) Step sStep
            sX = i
            sY = -(Log(sX) / Log(Val(txt1.Text)))
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
               '.ConvertToShape.Select
'            Else
'                Exit For
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub
'
'Private Sub DrawTan1()
'Dim objShapeCos As Shape
'Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
'Dim sW As Single
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
'Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
'Dim sngArray() As Single
'
'pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txtTanT.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
''sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
''sAngel = -sBaseZhQ / 4
'sAngel = pi / 2
'N = Int(pi / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'ReDim sngArray(1 To 3 * N - 2, 1 To 2)
''Dim i As Integer  ', iNum As Integer
''    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
'        Do While sAngel < 3 * pi / 2
'            sAngel = sAngel + sStep
'            i = i + 1
'            sX = sAngel
'            sY = sBaseY + 6 * Tan(sX)
'            sngArray(3 * i - 2, 1) = sX * 5 + sBaseX
'            sngArray(3 * i - 2, 2) = sY
'            If i = N Then Exit Do
'            sngArray(3 * i - 1, 1) = sX * 5 + sBaseX
'            sngArray(3 * i - 1, 2) = sY
'            sngArray(3 * i, 1) = sX * 5 + sBaseX
'            sngArray(3 * i, 2) = sY
'        Loop
''        Set objShapeCos = .ConvertToShape
''    End With
'    ActiveDocument.Shapes.AddCurve _
'        SafeArrayOfPoints:=sngArray, _
'        Anchor:=ActiveDocument.Application.Selection.Range
'
'''''    nCosNum = nCosNum + 1
'''''    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
'''''    'objShapeCos.Name = sName
'''''    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
'''''   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
'''''    'ActiveDocument.Shapes(1).Nodes.Delete 1
''''''    txtTT.Text = ActiveDocument.Shapes(1).Name
''''''    txtT.Text = objShapeCos.Name
'''''    lstShapeName.AddItem sName
'End Sub

Private Sub CommandButton1_Click()
Selection.Delete
End Sub

Private Sub lstShapeName_Change()
'sName = lstShapeName.Text
End Sub

Private Sub cmdSave_Click()
SaveSetting "Mydot", "DrawSet", "YDx", txt1.Text
SaveSetting "Mydot", "DrawSet", "YDy", txt2.Text
sBaseX = 200 + CentimetersToPoints(Val(txt1.Text))
sBaseY = 200 - CentimetersToPoints(Val(txt2.Text))

End Sub

Private Sub lblXuanXiang_Click()

End Sub

Private Sub optCos_Change()
If optCos.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||fffd|: Y=Acos(|fffd||fffd|x+|fffd||fffd|)+K"
        lblTitle.Font.Size = 10
        lbl1.Caption = "A|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||6b1||223||fffd|"
        lbl3.Caption = "|fffd||575||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "K|fffd||fffd||5b5||fffd||fffd|"
        lbl5.Caption = "|fffd||fffd||fffd||223||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "2"
        txt3.Text = "0"
        txt4.Text = "0"
        txt5.Text = "8"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub


Private Sub optCot_Change()
If optCot.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||423||fffd|Y = Acot(|fffd||fffd|x + |fffd||fffd|) + K"
        lblTitle.Font.Size = 9
        lbl1.Caption = "A|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||6b1||223||fffd|"
        lbl3.Caption = "|fffd||575||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "K|fffd||fffd||5b5||fffd||fffd|"
        lbl5.Caption = "|fffd||7f6||223||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "2"
        txt3.Text = "0"
        txt4.Text = "0"
        txt5.Text = "8"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If

End Sub

Private Sub OptFBL_Change()
If OptFBL.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:Y=k/x"
        lblTitle.Font.Size = 14
        lbl1.Caption = "k|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||7f6||223||fffd|"
'        lbl3.Caption = "X|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "8"
'        txt3.Text = "-4"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = False
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = False
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optLine_Change()
If optLine.Value = True Then
        lblTitle.Caption = "|5b1||fffd||7e3||fffd|Y=ax+b"
        lblTitle.Font.Size = 14
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "b|fffd||fffd||5b5||fffd||fffd|"
        lbl3.Caption = "|2ee||1bd||fffd||fffd||fffd||223||fffd|"
        lbl4.Caption = "|fffd||fffd||5b1||fffd||7f6||223||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "0"
        txt3.Text = "8"
        txt4.Text = "8"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False

End If
End Sub

Private Sub optM_Change()
If optM.Value = True Then
        lblTitle.Caption = "|fffd||77a||fffd||fffd||fffd|:Y=x^a"
        lblTitle.Font.Size = 14
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||223||fffd|"
        lbl3.Caption = "|fffd||7f6||223||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "3"
        txt2.Text = "8"
        txt3.Text = "8"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
        cmbXuanXiang.Clear
        cmbXuanXiang.AddItem "|fffd||fffd|"
        cmbXuanXiang.AddItem ">0"
        cmbXuanXiang.AddItem "<0"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.ListIndex = 0
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Caption = "x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|"
        lblXuanXiang.Visible = True
        cmbXuanXiang.Visible = True
End If

End Sub

Private Sub optlog_Change()
If optLog.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:Y=logaX"
        lblTitle.Font.Size = 14
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||223||fffd|"
        lbl3.Caption = "|fffd||7f6||223||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "3"
        txt2.Text = "4"
        txt3.Text = "6"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
        cmbXuanXiang.Clear
        cmbXuanXiang.AddItem "|fffd||fffd|"
        cmbXuanXiang.AddItem ">0"
        cmbXuanXiang.AddItem "<0"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.ListIndex = 0
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Caption = "x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|"
        lblXuanXiang.Visible = True
        cmbXuanXiang.Visible = True
End If

End Sub

Private Sub OptShZh_Change()
If OptShZh.Value = True Then
        lblTitle.Caption = "|3f5||373||fffd||fffd||fffd||fffd|"
        lblTitle.Font.Size = 14
        lbl1.Caption = "|fffd||fffd||fffd||fffd||52d||fffd||fffd|x|1ab||fffd||1a3||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||fffd||52d||fffd||fffd|y|1ab||fffd||1a3||fffd|"
'        lbl3.Caption = "|fffd||7f6||223||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = GetSetting("Mydot", "DrawSet", "YDx", "0")
        txt2.Text = GetSetting("Mydot", "DrawSet", "YDy", "0")
'        txt3.Text = "4"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||fffd|"
'        cmbXuanXiang.AddItem ">0"
'        cmbXuanXiang.AddItem "<0"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 0
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = False
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = False
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Caption = "x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|"
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
        
        lblShuoM.Visible = True
        cmdSave.Visible = True
Else
        lblShuoM.Visible = False
        cmdSave.Visible = False
       
End If
End Sub

Private Sub optZhShu_Change()
If optZhShu.Value = True Then
        lblTitle.Caption = "|5b8||fffd||fffd||fffd||fffd||fffd||fffd|:Y=a^x"
        lblTitle.Font.Size = 14
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||223||fffd|"
        lbl3.Caption = "|fffd||7f6||223||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "3"
        txt2.Text = "4"
        txt3.Text = "4"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
        cmbXuanXiang.Clear
        cmbXuanXiang.AddItem "|fffd||fffd|"
        cmbXuanXiang.AddItem ">0"
        cmbXuanXiang.AddItem "<0"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.ListIndex = 0
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Caption = "x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|"
        lblXuanXiang.Visible = True
        cmbXuanXiang.Visible = True
End If

End Sub

Private Sub optOval_Change()
If optOval.Value = True Then
        lblTitle.Caption = "|fffd||fffd||532|: x^2/a^2+y^2/b^2=1"
        lblTitle.Font.Size = 10
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "b|fffd||fffd||5b5||fffd||fffd|"
'        lbl3.Caption = "X|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "2"
        txt2.Text = "1"
'        txt3.Text = "-4"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = False
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = False
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optShQX_Change()
If optShQX.Value = True Then
        lblTitle.Caption = "|2eb||fffd||fffd||fffd||7e3||fffd|x^2/a^2-y^2/b^2=1"
        lblTitle.Font.Size = 10
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "b|fffd||fffd||5b5||fffd||fffd|"
        lbl3.Caption = "|fffd||7f6||223||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "1"
        txt3.Text = "8"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
    End If

End Sub

Private Sub optPoint_Change()
If optPoint.Value = True Then
        lblTitle.Caption = "|fffd||fffd|"
        lblTitle.Font.Size = 14
        lbl1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|(x)|fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|(y)|fffd||fffd|"
        lbl3.Caption = "|fffd||fffd||130||bfb6|(R)|fffd||fffd|"
'        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "0"
        txt2.Text = "0"
        txt3.Text = "0.04"
'        txt4.Text = "4"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = False
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = False
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False

End If

End Sub

Private Sub optCircle_Change()
If optCircle.Value = True Then
        lblTitle.Caption = "|532|"
        lblTitle.Font.Size = 14
        lbl1.Caption = "|fffd||fffd||fffd||13a||fffd||fffd||fffd||fffd||fffd|(x)|fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(y)|fffd||fffd|"
        lbl3.Caption = "|532||fffd||130||bfb6|(R)|fffd||fffd|"
        lbl4.Caption = "|532||fffd||13d||1f6||fffd||fffd||fffd|(|fffd||fffd|)|fffd||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "0"
        txt2.Text = "0"
        txt3.Text = "2"
        txt4.Text = "360"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optPWX_Change()
If optPWX.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|:Y=ax^2+bx+c"
        lblTitle.Font.Size = 12
        lbl1.Caption = "a |fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "b |fffd||fffd||5b5||fffd||fffd|"
        lbl3.Caption = "c |fffd||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "|fffd||7f6||223||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "0"
        txt3.Text = "0"
        txt4.Text = "5"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optPWXddsh_Change()
If optPWXddsh.Value = True Then

        lblTitle.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|:Y=a(x-h)^2+k"
        lblTitle.Font.Size = 14
        lbl1.Caption = "a|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "h|fffd||fffd||5b5||fffd||fffd|"
        lbl3.Caption = "k|fffd||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "|fffd||7f6||223||fffd|"
'        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "0"
        txt3.Text = "0"
        txt4.Text = "5"
'        txt5.Text = "-4"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = False
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = False
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optSin_Change()
If optSin.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||fffd|: Y=Asin(|fffd||fffd|x+|fffd||fffd|)+K"
        lblTitle.Font.Size = 10
        lbl1.Caption = "A|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||6b1||223||fffd|"
        lbl3.Caption = "|fffd||575||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "K|fffd||fffd||5b5||fffd||fffd|"
        lbl5.Caption = "|fffd||fffd||fffd||223||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "2"
        txt3.Text = "0"
        txt4.Text = "0"
        txt5.Text = "8"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub

Private Sub optZBX_Change()
    If optZBX.Value = True Then
        lblTitle.Caption = "|1bd||fffd||fffd||5b1||fffd||fffd||fffd||fffd||fffd||fffd||3f5|"
        lblTitle.Font.Size = 14
        lbl1.Caption = "|52d||fffd||fffd||fffd||fffd||fffd||1ab||fffd||1a3||fffd|"
        lbl2.Caption = "|52d||fffd||3d39||5b1||1ab||fffd||1a3||fffd|"
        lbl3.Caption = "X|fffd||fffd||2bc||5b5||fffd||fffd|"
        lbl4.Caption = "X|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        lbl5.Caption = "Y|fffd||fffd||2bc||5b5||fffd||fffd|"
        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "0"
        txt2.Text = "0"
        txt3.Text = "-4"
        txt4.Text = "4"
        txt5.Text = "-4"
        txt6.Text = "4"
        cmbXuanXiang.Clear
        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = True
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = True
        lblXuanXiang.Visible = True
        cmbXuanXiang.Visible = True
    End If
End Sub

Private Sub optTan_Change()
If optTan.Value = True Then
        lblTitle.Caption = "|fffd||fffd||fffd||423||fffd|Y = Atan(|fffd||fffd|x + |fffd||fffd|) + K"
        lblTitle.Font.Size = 9
        lbl1.Caption = "A|fffd||fffd||5b5||fffd||fffd|"
        lbl2.Caption = "|fffd||fffd||fffd||6b1||223||fffd|"
        lbl3.Caption = "|fffd||575||fffd||5b5||fffd||fffd|"
        lbl4.Caption = "K|fffd||fffd||5b5||fffd||fffd|"
        lbl5.Caption = "|fffd||7f6||223||fffd|"
'        lbl6.Caption = "Y|fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
        txt1.Text = "1"
        txt2.Text = "2"
        txt3.Text = "0"
        txt4.Text = "0"
        txt5.Text = "8"
'        txt6.Text = "4"
'        cmbXuanXiang.Clear
'        cmbXuanXiang.AddItem "|fffd||7bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||237||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||5bf||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||2ee||1bd||fffd||336||fffd|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        cmbXuanXiang.ListIndex = 2
        lbl1.Visible = True
        lbl2.Visible = True
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = False
        txt1.Visible = True
        txt2.Visible = True
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = False
        lblXuanXiang.Visible = False
        cmbXuanXiang.Visible = False
End If
End Sub



Private Sub optZMuilt_Click()
        lblTitle.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        lblTitle.Font.Size = 14
'        lbl1.Caption = "|52d||fffd||fffd||fffd||fffd||fffd||1ab||fffd||1a3||fffd|"
'        lbl2.Caption = "|52d||fffd||3d39||5b1||1ab||fffd||1a3||fffd|"
        lbl3.Caption = "|fffd||fffd||fffd||13a||fffd||fffd||fffd||fffd||fffd|(x)|fffd||fffd|"
        lbl4.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(y)|fffd||fffd|"
        lbl5.Caption = "|fffd||bfb6||fffd||fffd|"
        lbl6.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|"
'        txt1.Text = "0"
'        txt2.Text = "0"
        txt3.Text = "0"
        txt4.Text = "0"
        txt5.Text = "2"
        txt6.Text = "6"
        cmbXuanXiang.Clear
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||532|"
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||532|"
        cmbXuanXiang.AddItem "|fffd||fffd||fffd||532||fffd||fffd||fffd||fffd||fffd||fffd||532|"
'        cmbXuanXiang.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
        cmbXuanXiang.ListIndex = 3
        lbl1.Visible = False
        lbl2.Visible = False
        lbl3.Visible = True
        lbl4.Visible = True
        lbl5.Visible = True
        lbl6.Visible = True
        txt1.Visible = False
        txt2.Visible = False
        txt3.Visible = True
        txt4.Visible = True
        txt5.Visible = True
        txt6.Visible = True
        lblXuanXiang.Caption = "|461||fffd||e8fa|"
        lblXuanXiang.Visible = True
        cmbXuanXiang.Visible = True

End Sub

Private Sub UserForm_Initialize()
lblShuoM.Visible = False
cmdSave.Visible = False
sBaseX = 200 + CentimetersToPoints(Val(GetSetting("Mydot", "DrawSet", "YDx", "0")))
sBaseY = 200 - CentimetersToPoints(Val(GetSetting("Mydot", "DrawSet", "YDy", "0")))

optZBX.Value = 1
End Sub

''''''Private Sub DrawZBX000()
''''''    Dim XLeft As Single, XTop As Single, YLeft As Single, YTop As Single, XLong As Single
''''''    Dim YTtop As Single, YHight As Single, XLine As Shape, YLine As Shape, i As Single
''''''    Dim M As Byte, MyTextbox As Shape, MyValue As Single, ModValue As Byte
''''''    On Error Resume Next    '|fffd||fffd||fffd||534||fffd||fffd||fffd|
''''''    '|fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||436||fffd|
''''''''''    If Me.TextBox1 = "" Or Int(Me.TextBox1) <> Me.TextBox1 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox2 = "" Or Int(Me.TextBox2) <> Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox3 = "" Or Int(Me.TextBox3) <> Me.TextBox3 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox3 * 1 > Me.TextBox1 * 1 Or Me.TextBox3 * 1 > Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|!", vbInformation: Exit Sub
''''''    '    TextBox1|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd| , TextBox2|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''''    Application.ScreenUpdating = False
''''''    XLeft = CentimetersToPoints(Me.TextBox1 - Me.TextBox3 / 2) + sBaseX '|fffd||fffd||fffd||fffd||fffd|
''''''    XLong = CentimetersToPoints(Me.TextBox3 + 0.5)   '|fffd||fffd|(|fffd||fffd|)
''''''    XTop = CentimetersToPoints(Me.TextBox2) + sBaseY
''''''    YLeft = CentimetersToPoints(Me.TextBox1) + sBaseX   '|fffd||fffd||7fe||fffd|
''''''    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|+|fffd||7f6||fffd|/2,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-TextBox3/2-0.5
''''''    YTop = CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2) + sBaseY
''''''    YTtop = CentimetersToPoints(Me.TextBox2 - Me.TextBox3 / 2 - 0.5) + sBaseY
''''''    YHight = CentimetersToPoints(Me.TextBox3)
''''''    With ActiveDocument
''''''        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
''''''        If BeforeShapes >= 1 Then
''''''            For i = 1 To BeforeShapes
''''''                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
''''''            Next
''''''        End If
''''''        '    If BeforeShapes >= 1 Then MsgBox "|fffd||fffd||fffd||fffd||22b||fffd||68ec||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5|! "" _
'''''': Exit Sub
''''''        Set XLine = .Shapes.AddLine(XLeft - 10, XTop, XLeft + XLong, XTop)
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, XLeft + XLong - 5, XTop - 5, 30, 30)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd|X|fffd||fffd||fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 14
''''''            .TextFrame.TextRange = "X"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''        End With
''''''        With XLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
''''''            .Line.EndArrowheadStyle = msoArrowheadTriangle
''''''            .Line.EndArrowheadLength = msoArrowheadLengthMedium
''''''            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
''''''        End With
''''''        Set YLine = .Shapes.AddLine(YLeft, YTop + 10, YLeft, YTtop)
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft - 15, YTtop - 10, 30, 30)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 14
''''''            .TextFrame.TextRange = "y"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''            .ZOrder msoSendToBack
''''''        End With
''''''        With YLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
''''''            .Line.EndArrowheadStyle = msoArrowheadTriangle
''''''            .Line.EndArrowheadLength = msoArrowheadLengthMedium
''''''            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
''''''        End With
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
''''''            CentimetersToPoints(Me.TextBox1) - 10 + sBaseX, CentimetersToPoints(Me.TextBox2) - 1 + sBaseY, 20, 20)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd||52d||fffd||fffd|O|fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 12
''''''            .TextFrame.TextRange = "O"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''            .ZOrder msoSendToBack
''''''        End With
''''''        If Me.OptionButton1.Value = True Then Call SelAllShapes: Exit Sub   '|3b4||461||fffd||336||fffd||5b5||fffd||2f3||fffd|
''''''        If Me.OptionButton2.Value = True Then MyValue = 0.5: ModValue = 2
''''''        If Me.OptionButton3.Value = True Then MyValue = 0.5: ModValue = 2
'''''''        If Me.OptionButton3.Value = True Then MyValue = 0.1: ModValue = 5
''''''        For i = 0 To Me.TextBox3 * 1 Step MyValue
''''''            If Me.OptionButton3.Value = True Then
''''''                M = 5
''''''            Else
''''''                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
''''''            End If
''''''            .Shapes.AddLine CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) + sBaseX, XTop - M, _
''''''                            CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) + sBaseX, XTop
''''''            .Shapes.AddLine YLeft, CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) + sBaseY, _
''''''                            YLeft + M, CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) + sBaseY
''''''            If M = 5 And i - Me.TextBox3 / 2 <> 0 Then    '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
''''''                '|fffd||fffd|X|fffd||fffd||336||fffd|
''''''                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
''''''                                                   CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) - 10 + sBaseX, XTop, 20, 20)
''''''                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
''''''                    .Line.Visible = msoFalse
''''''                    .Fill.Visible = msoFalse
''''''                    .TextFrame.MarginBottom = 0
''''''                    .TextFrame.MarginLeft = 0
''''''                    .TextFrame.MarginRight = 0
''''''                    .TextFrame.MarginTop = 0
''''''                    .TextFrame.TextRange.Font.Name = "Arial"
''''''                    .TextFrame.TextRange.Font.Size = 8
''''''                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
'''''''                    .TextFrame.TextRange = Round(i - Me.TextBox3 / 2, 1)
''''''                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i - Me.TextBox3 / 2
''''''                    .TextFrame.TextRange.Bold = msoTrue
''''''                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
''''''                    .ZOrder msoSendToBack
''''''                End With
''''''                '|fffd||fffd|Y|fffd||fffd||336||fffd|
''''''                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft + 8, _
''''''CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) - 8 + sBaseY, 20, 20)
'''''''                sTxt = IIf(i - Me.TextBox3 / 2 > 0, i - Me.TextBox3 / 2, "|fffd||fffd|" & Abs(i - Me.TextBox3 / 2))
''''''                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
''''''                    .Line.Visible = msoFalse
''''''                    .Fill.Visible = msoFalse
''''''                    .TextFrame.MarginBottom = 0
''''''                    .TextFrame.MarginLeft = 0
''''''                    .TextFrame.MarginRight = 0
''''''                    .TextFrame.MarginTop = 0
''''''                    .TextFrame.TextRange.Font.Name = "Arial"
''''''                    .TextFrame.TextRange.Font.Size = 8
''''''                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
''''''                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i - Me.TextBox3 / 2
''''''                    .TextFrame.TextRange.Bold = msoTrue
'''''''                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
''''''                    .ZOrder msoSendToBack
''''''                End With
''''''            End If
''''''        Next
''''''        Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
''''''    End With
''''''    Application.ScreenUpdating = True
''''''End Sub

Private Sub DrawZBX()
    Dim XLeft As Single, XTop As Single, YLeft As Single, YTop As Single, XLong As Single
    Dim YTtop As Single, YHight As Single, XLine As Shape, YLine As Shape, i As Single
    Dim M As Byte, MyTextbox As Shape, MyValue As Single, ModValue As Byte
    
    If Val(txt4.Text) < 0 Then txt4.Text = 0
    If Val(txt6.Text) < 0 Then txt6.Text = 0
    If Val(txt3.Text) > 0 Then txt3.Text = 0
    If Val(txt5.Text) > 0 Then txt5.Text = 0
    
    On Error Resume Next    '|fffd||fffd||fffd||534||fffd||fffd||fffd|
    '|fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||436||fffd|
''''    If Me.txt1 = "" Or Int(Me.txt1) <> Me.txt1 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.txt2 = "" Or Int(Me.txt2) <> Me.txt2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.TextBox3 = "" Or Int(Me.TextBox3) <> Me.TextBox3 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.TextBox3 * 1 > Me.txt1 * 1 Or Me.TextBox3 * 1 > Me.txt2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|!", vbInformation: Exit Sub
    '    txt1|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd| , txt2|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False
    XLeft = CentimetersToPoints(Val(txt1.Text) + Val(txt3.Text)) + sBaseX  '|fffd||fffd||fffd||fffd||fffd|
'    XLong = CentimetersToPoints(Me.TextBox3 + 0.5)   '|fffd||fffd|(|fffd||fffd|)
    XLong = CentimetersToPoints(Val(txt4.Text) - Val(txt3.Text) + 0.5) '|fffd||fffd||fffd||fffd||fffd|
    XTop = CentimetersToPoints(Val(txt2.Text)) + sBaseY  '|52d||fffd||fffd|Y
    YLeft = CentimetersToPoints(Val(txt1.Text)) + sBaseX   '|52d||fffd||fffd|x
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|+|fffd||7f6||fffd|/2,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-TextBox3/2-0.5
    YTop = CentimetersToPoints(Val(txt2.Text) - Val(txt5.Text)) + sBaseY   '|fffd||fffd||fffd||b7||fffd||fffd||fffd|
    YTtop = CentimetersToPoints(Val(txt2.Text) - Val(txt6.Text) - 0.5) + sBaseY   '|fffd||fffd||fffd||3f7||fffd||fffd||fffd|
    YHight = CentimetersToPoints(Val(txt6.Text) - Val(txt5.Text))  '|fffd||fffd||fffd||fffd||fffd|
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
        '    If BeforeShapes >= 1 Then MsgBox "|fffd||fffd||fffd||fffd||22b||fffd||68ec||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5|! "" _
: Exit Sub
        Set XLine = .Shapes.AddLine(XLeft - 10, XTop, XLeft + XLong, XTop)
        If Me.cmbXuanXiang.ListIndex = 3 Or Me.cmbXuanXiang.ListIndex = 4 Then
        
        Else
            Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, XLeft + XLong - 5, XTop - 5, 30, 30)
             With MyTextbox    '|fffd||fffd||fffd||fffd|X|fffd||fffd||fffd||131||fffd||fffd||fffd|
                 .Line.Visible = msoFalse
                 .Fill.Visible = msoFalse
                 .TextFrame.MarginBottom = 0
                 .TextFrame.MarginLeft = 0
                 .TextFrame.MarginRight = 0
                 .TextFrame.MarginTop = 0
                 .TextFrame.TextRange.Font.Name = "Arial"
                 .TextFrame.TextRange.Font.Size = 14
                 .TextFrame.TextRange = "X"
                 .TextFrame.TextRange.Bold = msoTrue
             End With
        End If
        If Me.cmbXuanXiang.ListIndex = 3 Then
        
        Else
            With XLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
                .Line.EndArrowheadStyle = msoArrowheadTriangle
                .Line.EndArrowheadLength = msoArrowheadLengthMedium
                .Line.EndArrowheadWidth = msoArrowheadWidthMedium
            End With
        End If
        
        
        If Me.cmbXuanXiang.ListIndex = 3 Or Me.cmbXuanXiang.ListIndex = 4 Then
        
        Else
            Set YLine = .Shapes.AddLine(YLeft, YTop + 10, YLeft, YTtop)
            Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft - 15, YTtop - 10, 30, 30)
            With MyTextbox    '|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||131||fffd||fffd||fffd|
                .Line.Visible = msoFalse
                .Fill.Visible = msoFalse
                .TextFrame.MarginBottom = 0
                .TextFrame.MarginLeft = 0
                .TextFrame.MarginRight = 0
                .TextFrame.MarginTop = 0
                .TextFrame.TextRange.Font.Name = "Arial"
                .TextFrame.TextRange.Font.Size = 14
                .TextFrame.TextRange = "y"
                .TextFrame.TextRange.Bold = msoTrue
                .ZOrder msoSendToBack
            End With
            With YLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
                .Line.EndArrowheadStyle = msoArrowheadTriangle
                .Line.EndArrowheadLength = msoArrowheadLengthMedium
                .Line.EndArrowheadWidth = msoArrowheadWidthMedium
            End With
        End If
        
        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
                CentimetersToPoints(Val(txt1.Text)) - 10 + sBaseX, CentimetersToPoints(Val(txt2.Text)) - 1 + sBaseY, 20, 20)
        With MyTextbox    '|fffd||fffd||fffd||fffd||52d||fffd||fffd|O|fffd||131||fffd||fffd||fffd|
            .Line.Visible = msoFalse
            .Fill.Visible = msoFalse
            .TextFrame.MarginBottom = 0
            .TextFrame.MarginLeft = 0
            .TextFrame.MarginRight = 0
            .TextFrame.MarginTop = 0
            .TextFrame.TextRange.Font.Name = "Arial"
            .TextFrame.TextRange.Font.Size = 12
            .TextFrame.TextRange = "O"
            .TextFrame.TextRange.Bold = msoTrue
            .ZOrder msoSendToBack
        End With
        If Me.cmbXuanXiang.ListIndex = 0 Then Call SelAllShapes: Exit Sub '|3b4||461||fffd||336||fffd||5b5||fffd||2f3||fffd|
        If Me.cmbXuanXiang.ListIndex = 1 Then MyValue = 0.5: ModValue = 2
        If Me.cmbXuanXiang.ListIndex = 2 Then MyValue = 0.5: ModValue = 2
        If Me.cmbXuanXiang.ListIndex = 3 Then MyValue = 0.5: ModValue = 2
        If Me.cmbXuanXiang.ListIndex = 4 Then MyValue = 0.5: ModValue = 2
'        If Me.OptionButton3.Value = True Then MyValue = 0.1: ModValue = 5
        For i = Val(txt3.Text) To Val(txt4.Text) Step MyValue
            If Me.cmbXuanXiang.ListIndex = 1 Then
                M = 5
            Else
                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
            End If
            .Shapes.AddLine CentimetersToPoints(i + Me.txt1) + sBaseX, XTop - M, _
                                CentimetersToPoints(i + Me.txt1) + sBaseX, XTop
'            .Shapes.AddLine YLeft, CentimetersToPoints(Me.txt2 - i) + sBaseY, _
'                            YLeft + M, CentimetersToPoints(Me.txt2 - i) + sBaseY
            If M = 5 And i <> 0 Then     '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
                '|fffd||fffd|X|fffd||fffd||336||fffd|
                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
                                                   CentimetersToPoints(i + Me.txt1) - 10 + sBaseX, XTop, 20, 20)
                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
                    .Line.Visible = msoFalse
                    .Fill.Visible = msoFalse
                    .TextFrame.MarginBottom = 0
                    .TextFrame.MarginLeft = 0
                    .TextFrame.MarginRight = 0
                    .TextFrame.MarginTop = 0
                    .TextFrame.TextRange.Font.Name = "Arial"
                    .TextFrame.TextRange.Font.Size = 9
                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
'                    .TextFrame.TextRange = Round(i - Me.TextBox3 / 2, 1)
                    If Me.cmbXuanXiang.ListIndex = 2 Then .TextFrame.TextRange = i
                    .TextFrame.TextRange.Bold = msoTrue
                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
                    .ZOrder msoSendToBack
                End With
                
            End If
            Next
            
        If Me.cmbXuanXiang.ListIndex = 3 Or Me.cmbXuanXiang.ListIndex = 4 Then GoTo lbl:
        For i = Val(txt5.Text) To Val(txt6.Text) Step MyValue
            If Me.cmbXuanXiang.ListIndex = 1 Then
                M = 5
            Else
                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
            End If
'            .Shapes.AddLine CentimetersToPoints(i + Me.txt1) + sBaseX, XTop - M, _
                            CentimetersToPoints(i + Me.txt1) + sBaseX, XTop
            .Shapes.AddLine YLeft, CentimetersToPoints(Me.txt2 - i) + sBaseY, _
                            YLeft + M, CentimetersToPoints(Me.txt2 - i) + sBaseY
            If M = 5 And i <> 0 Then   '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
                '|fffd||fffd|Y|fffd||fffd||336||fffd|
                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft + 8, _
CentimetersToPoints(Val(txt2.Text) - i) - 8 + sBaseY, 20, 20)
'                sTxt = IIf(i - Me.TextBox3 / 2 > 0, i - Me.TextBox3 / 2, "|fffd||fffd|" & Abs(i - Me.TextBox3 / 2))
                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
                    .Line.Visible = msoFalse
                    .Fill.Visible = msoFalse
                    .TextFrame.MarginBottom = 0
                    .TextFrame.MarginLeft = 0
                    .TextFrame.MarginRight = 0
                    .TextFrame.MarginTop = 0
                    .TextFrame.TextRange.Font.Name = "Arial"
                    .TextFrame.TextRange.Font.Size = 9
                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
                    If Me.cmbXuanXiang.ListIndex = 2 Then .TextFrame.TextRange = i
                    .TextFrame.TextRange.Bold = msoTrue
'                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
                    .ZOrder msoSendToBack
                End With
            End If
        Next
lbl:
        Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
    End With
    Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "frmDaiShuDraw01"
Attribute VB_Base = "0{EA21FC6A-5874-4B8D-B1DC-7F6E13241079}{1FF31213-0BF9-4EAC-A768-35B7408460D4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Const sBaseX As Single = 200, sBaseY As Single = 200

Dim nSinNum As Integer, nCosNum As Integer

Dim sName As String

Private Sub cmbMi_Change()

End Sub

Private Sub cmbMi_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub cmdDel_Click()
If lstShapeName.Text <> "" Then
     ActiveDocument.Shapes(lstShapeName.Text).Delete
    'Selection.Delete
    lstShapeName.RemoveItem lstShapeName.ListIndex
Else
    MsgBox "|fffd||fffd||461||fffd||fffd||4aa||27e||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||1a3||fffd|", , "|fffd||fffd||2be||fffd||fffd|"
End If

End Sub

Private Sub cmdDraw_Click()
Dim objShape As Shape
    If optSin.Value = True Then
        DrawSin
    ElseIf optCos.Value = True Then
        DrawCos
    ElseIf optOval.Value = True Then
        DrawOval
    ElseIf optShQX.Value = True Then
        DrawShQX
    ElseIf optCircle.Value = True Then
        DrawCircle
    ElseIf optPoint.Value = True Then
        DrawPoint
    ElseIf optPWX.Value = True Then
        DrawPWX
    ElseIf optPWXddsh.Value = True Then
        DrawPWXDDsh
    ElseIf optLine.Value = True Then
        DrawLine
    ElseIf optZBX.Value = True Then
        DrawZBX
    ElseIf optTan.Value = True Then
        DrawTan
    ElseIf optCot.Value = True Then
        DrawCot
    ElseIf optM.Value = True Then
        DrawMi
    ElseIf optZhShu.Value = True Then
        DrawZhSh
    ElseIf optLog.Value = True Then
        DrawLog
    ElseIf OptFBL.Value = True Then
        DrawFBL
    End If

End Sub

Private Sub DrawSin()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
Dim sW As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
Dim sBaseZhQ   As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
sBaseZhf = 80
sZhQ = (sBaseZhQ) * 1 / (Val(txtZhQ.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
sW = Val(txtZhQ.Text)
sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
sAngel = -Val(txtSinH.Text) / 2
N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        Do While sAngel <= Val(txtSinH.Text) / 2
            sAngel = sAngel + sStep
            sX = sAngel
            sY = -(Val(txtYpy.Text) + Val(txtZhF.Text) * Sin(sW * sX + Val(txtXpy.Text)))
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
            '.ConvertToShape.Select
        Loop
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    lstShapeName.AddItem sName
End Sub


Private Sub DrawCos()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
Dim sW As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
sBaseZhf = 80
sZhQ = (sBaseZhQ) * 1 / (Val(txtCosT.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
sW = Val(txtCosT.Text)
sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
sAngel = -Val(txtCosH.Text) / 2
N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        Do While sAngel <= Val(txtCosH.Text) / 2
            sAngel = sAngel + sStep
            sX = sAngel
            sY = -(Val(txtCosK.Text) + Val(txtCosA.Text) * Cos(sW * sX + Val(txtCos|fffd||fffd|.Text)))
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
            '.ConvertToShape.Select
        Loop
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    lstShapeName.AddItem sName
End Sub

Private Sub DrawCot()
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single, sxScale As Single
Dim sW As Single, iNum As Integer, sPianY As Single, XLine As Word.Shape
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txtTanT.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

sW = Val(txtTanT.Text)
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sStep = 0.01
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sAngel = -sBaseZhQ / 5
'N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
If sW > 1 Then
    iNum = Int(3 * sW) - 1
Else
    iNum = Int(3 * sW)
'    If iNum = 0 Then iNum = 1
End If
If iNum = 0 Then Exit Sub
sPianY = -(iNum - 1) / 2 * pi / sW
Do While iNum > 0
    Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY + Val(txtTan|fffd||fffd|.Text)), sBaseY + CentimetersToPoints(Val(txtGDu.Text / 2)), sBaseX + CentimetersToPoints(sPianY + Val(txtTan|fffd||fffd|.Text)), sBaseY - CentimetersToPoints(Val(txtGDu.Text) / 2))
    XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        For i = (sStep) To (pi / sW - sStep) Step sStep
            sX = i
            sY = -(Val(txtTanK.Text) + Val(txtTanA.Text) * 1 / Tan(sW * sX))
            If Abs(CentimetersToPoints(sY)) < CentimetersToPoints(Val(txtGDu.Text)) / 2 Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX + Val(txtTan|fffd||fffd|.Text) + sPianY), sBaseY + CentimetersToPoints(sY)
            End If
        Next
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    iNum = iNum - 1
    sPianY = sPianY + pi / sW
Loop
Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY + Val(txtTan|fffd||fffd|.Text)), sBaseY + CentimetersToPoints(Val(txtGDu.Text / 2)), sBaseX + CentimetersToPoints(sPianY + Val(txtTan|fffd||fffd|.Text)), sBaseY - CentimetersToPoints(Val(txtGDu.Text) / 2))
XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub


Private Sub DrawTan()
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single, sxScale As Single
Dim sW As Single, iNum As Integer, sPianY As Single, XLine As Word.Shape
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ As Single        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txtTanT.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

sW = Val(txtTanT.Text)
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sStep = 0.01
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
'sAngel = -sBaseZhQ / 5
'N = Int(sWidth / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
iNum = Int(3 * sW)
If iNum = 0 Then Exit Sub
sPianY = -(iNum - 1) / 2 * pi / sW
Do While iNum > 0
    Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txtTan|fffd||fffd|.Text)), sBaseY + CentimetersToPoints(Val(txtGDu.Text / 2)), sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txtTan|fffd||fffd|.Text)), sBaseY - CentimetersToPoints(Val(txtGDu.Text) / 2))
    XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
        For i = (-pi / 2 / sW + sStep) To (pi / 2 / sW - sStep) Step sStep
            sX = i
            sY = -(Val(txtTanK.Text) + Val(txtTanA.Text) * Tan(sW * sX))
            If Abs(CentimetersToPoints(sY)) < CentimetersToPoints(Val(txtGDu.Text)) / 2 Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX + Val(txtTan|fffd||fffd|.Text) + sPianY), sBaseY + CentimetersToPoints(sY)
            End If
        Next
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    iNum = iNum - 1
    sPianY = sPianY + pi / sW
Loop
Set XLine = ActiveDocument.Shapes.AddLine(sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txtTan|fffd||fffd|.Text)), sBaseY + CentimetersToPoints(Val(txtGDu.Text / 2)), sBaseX + CentimetersToPoints(sPianY - pi / sW / 2 + Val(txtTan|fffd||fffd|.Text)), sBaseY - CentimetersToPoints(Val(txtGDu.Text) / 2))
XLine.Line.DashStyle = msoLineDashDot    '|fffd||fffd||fffd||fffd||fffd||7f5||fffd||fffd||fffd||5f4|

Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub

Private Sub DrawPoint()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
pi = 3.1415
sX = CentimetersToPoints(Val(txtCircleX.Text))
sY = CentimetersToPoints(Val(txtCircleY.Text))
sR = CentimetersToPoints(Val(txtCircleR.Text))
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
        For i = 1 To N
            sAngel = sAngel + sStep
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
            '.ConvertToShape.Select
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    objShapeCos.Fill.ForeColor.RGB = RGB(0, 0, 0)
    objShapeCos.Fill.Visible = msoTrue
    objShapeCos.Fill.Solid
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End Sub


Private Sub DrawCircle()
Dim objShapeCos As Shape
Dim pi As Single, i As Long, sX As Single, sY As Single
Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sAngel As Single
Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
pi = 3.1415
sX = CentimetersToPoints(Val(txtCircleX.Text))
sY = CentimetersToPoints(Val(txtCircleY.Text))
sR = CentimetersToPoints(Val(txtCircleR.Text))
sStep = pi / 512 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
sAngel = sStep
N = Int((2 * pi + pi / 512) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY)
'        For i = 1 To N
        Do While sAngel <= (Val(circleHD.Text) / 180 * pi)
            sAngel = sAngel + sStep
            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
            '.ConvertToShape.Select
'        Next i
        Loop
'        sR = 2 * sR / 3
''        sAngel = sStep
'        For i = 1 To N / 4
'            sAngel = sAngel - sStep
'            .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + sX + sR * Cos(sAngel), sBaseY - sY + sR * Sin(sAngel)
'            '.ConvertToShape.Select
'        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
End Sub

'Private Sub DrawOval()
'Dim shp As Word.Shape
'    Set shp = ActiveDocument.Shapes.AddShape(msoShapeOval, sBaseX + CentimetersToPoints(Val(txtX.Text)), sBaseY - CentimetersToPoints(Val(txtY.Text)), CentimetersToPoints(Val(txtWidth.Text)), CentimetersToPoints(Val(txtHeight.Text)))
'    shp.Fill.Visible = msoFalse
'
'End Sub


Private Sub DrawOval() '|fffd||fffd||532||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
On Error GoTo lblerr:

sStep = 0.01 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
'sHeight = CentimetersToPoints(Val(txtPWXHeigt.Text))
N = Int(Val(txtA.Text) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txtA.Text)), sBaseY + 0 '|fffd||fffd||2bc||fffd||fffd|
        For i = -Val(txtA.Text) To Val(txtA.Text) Step sStep
            sX = i
            sY = Val(txtB.Text) ^ 2 - (Val(txtB.Text) * sX / Val(txtA.Text)) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
'            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
'            End If
            End If
        Next i
        For i = Val(txtA.Text) To -Val(txtA.Text) Step -sStep
            sX = i
            sY = Val(txtB.Text) ^ 2 - (Val(txtB.Text) * sX / Val(txtA.Text)) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
                sY = -sY
'            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
'            End If
            End If
        Next i
        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txtA.Text)), sBaseY + 0 '|fffd||fffd||fffd||fffd||fffd||fffd|
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
     Exit Sub
lblerr:
     MsgBox "|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||fffd||fffd|!"
End Sub

Private Sub DrawShQX() '|2eb||fffd||fffd||fffd||fffd||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
On Error GoTo lblerr:
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
    End With
sStep = 0.01 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txtHeight.Text) / 2)
N = Int(Val(txtA.Text) / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
'        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txtA.Text)), sBaseY + 0 '|fffd||fffd||2bc||fffd||fffd|
        For i = -N / 2 To N / 2 Step sStep
            sX = i
            sY = (Val(txtB.Text) * sX / Val(txtA.Text)) ^ 2 + Val(txtB.Text) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
'    nCosNum = nCosNum + 1
'    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = N / 2 To -N / 2 Step -sStep
            sX = i
            sY = (Val(txtB.Text) * sX / Val(txtA.Text)) ^ 2 + Val(txtB.Text) ^ 2
            If sY > 0 Then
                sY = Sqr(sY)
                sY = -sY
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
            End If
        Next i
'        .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(-Val(txtA.Text)), sBaseY + 0 '|fffd||fffd||fffd||fffd||fffd||fffd|
        Set objShapeCos = .ConvertToShape
    End With
'    nCosNum = nCosNum + 1
'    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
     Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
     ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
     Exit Sub
lblerr:
     MsgBox "|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||fffd||fffd|!"
End Sub

Private Sub DrawPWX() '|fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txtPWXHeigt.Text) / 2)
'N = Int(sHeight / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = -sHeight To sHeight Step sStep
            sX = i
            sY = -(Val(txtPWXa.Text) * sX ^ 2 + Val(txtPWXb.Text) * sX + Val(txtPWXc.Text))
            
            If Abs(CentimetersToPoints(sY)) < sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


Private Sub DrawPWXDDsh() '|fffd||fffd||fffd||fffd||fffd||7f6||fffd||fffd||fffd||2bd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sWidth = 200
sHeight = CentimetersToPoints(Val(txtPwxDDSHgao.Text) / 2)
'N = Int(sHeight / sStep) '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        For i = -sHeight To sHeight Step sStep
            sX = i
            sY = -(Val(txtPwxDDSHa.Text) * (sX - Val(txtPwxDDSHh.Text)) ^ 2 + Val(txtPwxDDSHk.Text))
            If Abs(CentimetersToPoints(sY)) <= sHeight Then
                .AddNodes msoSegmentCurve, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                '.ConvertToShape.Select
            End If
        Next i
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub

Private Sub DrawFBL() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
'Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
With ActiveDocument
    BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
    If BeforeShapes >= 1 Then
        For i = 1 To BeforeShapes
            .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        Next
    End If
End With

'sWidth = CentimetersToPoints(Val(txtFBLh.Text) / 2)
sHeight = CentimetersToPoints(Val(txtFBLh.Text) / 2)
sStep = 0.05 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
    For i = -sHeight To -sStep Step sStep
        sX = i
        sY = -(Val(txtFBLk.Text) * 1 / sX)
        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sHeight Then
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
        End If
    Next i
    Set objShapeCos = .ConvertToShape
End With
objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************

With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
    For i = sStep To sHeight Step sStep
        sX = i
        sY = -(Val(txtFBLk.Text) * 1 / sX)
        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sHeight Then
            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
        End If
    Next i
    Set objShapeCos = .ConvertToShape
End With
objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
End Sub

Private Sub DrawLine() '|5b1||fffd||fffd|
Dim objShapeCos As Shape
Dim pi As Single, i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txtLineWidth.Text) / 2)
sHeight = CentimetersToPoints(Val(txtLineHeight.Text) / 2)
sStep = 0.1 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = sWidth / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = -sWidth To sWidth Step sStep
            sX = i
            sY = -(Val(txtLineA.Text) * sX + Val(txtLineB.Text))
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
'               '.ConvertToShape.Select
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


'|421||fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||fffd| v|3aa||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd| |fffd||fffd| N|3aa||fffd||fffd||fffd||fffd| D|3aa||fffd||fffd||138|
Private Sub ConvertToFraction(ByVal V As Double, N As Long, D As Long)

    Const MaxTerms = 15         'Limit to prevent infinite loop
    Const MinDivisor = 0.000001 'Limit to prevent divide by zero
    Const MaxError = 0.00000001 'How close is enough
    Dim F As Double             'Fraction being converted
    Dim a As Long               'Current term in continued fraction
    Dim n1 As Long              'Numerator, denominator of last approx
    Dim D1 As Long
    Dim n2 As Long          'Numerator, denominator of previous approx
    Dim D2 As Long
    
    F = V                       'Initialize fraction being converted
    
    n1 = 1                      'Initialize fractions with 1/0, 0/1
    D1 = 0
    n2 = 0
    D2 = 1

    For i = 0 To MaxTerms
        a = Int(F)              'Get next term
        F = F - a               'Get new divisor
        N = n1 * a + n2         'Calculate new fraction
        D = D1 * a + D2
        n2 = n1                 'Save last two fractions
        D2 = D1
        n1 = N
        D1 = D
                                'Quit if dividing by zero
        If F < MinDivisor Then Exit For

        'The following line shows the data for the table found in
        'http://mathforum.org/dr.math/faq/faq.fractions.html
        'and should be removed for actual use
'        MsgBox "n:" & i & vbCrLf & "Quotient:" & F + A & vbCrLf & _
'               "a(n):" & A & vbCrLf & "Fraction:" & F & vbCrLf & _
'               "Reciprocal:" & 1 / F & vbCrLf & _
'               "Value:" & N & "/" & D & "=" & N / D

                                'Quit if close enough
        If Abs(V - N / D) < MaxError Then Exit For
        F = 1 / F               'Take reciprocal
    Next i
    
    'http://mathforum.org/library/drmath/view/51910.html
    'http://mathforum.org/library/drmath/view/51886.html
End Sub



Private Sub DrawMi() '|fffd||77a||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim iNumFZ As Long, iPos As Integer
Dim iNumFM As Long
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
Dim iStart As Single, iEnd As Single
iPos = InStr(1, txtMiA.Text, "/")
If iPos <> 0 Then
    iNumFZ = Val(Mid(txtMiA.Text, 1, iPos - 1))
    iNumFM = Val(Mid(txtMiA.Text, iPos + 1))
Else
    ConvertToFraction Val(txtMiA.Text), iNumFZ, iNumFM
End If
sWidth = CentimetersToPoints(Val(txtMiW.Text) / 2)

sHeight = CentimetersToPoints(Val(txtMiH.Text) / 2)
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = sWidth / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
If Val(txtMiA.Text) >= 0 Then
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        If iNumFM Mod 2 = 0 Then  '|fffd||fffd||138||3aa||17c||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|5bb||fffd||fffd||221||fffd||fffd||fffd||fffd|
            For i = 0.01 To sWidth Step sStep
                sX = i
                If sX < 0 Then
                   sY = (Abs(sX) ^ (iNumFZ / iNumFM))
                Else
                    sY = -(sX ^ (iNumFZ / iNumFM))
                    
                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        ElseIf iNumFM = 1 Then '|fffd||fffd||138||3aa|1
        
            If cmbMi.Text = ">" Then
                iStart = sStep
                iEnd = sWidth
            ElseIf cmbMi.Text = "<" Then
                iStart = -sWidth
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            For i = iStart To iEnd Step sStep
                sX = i
'                If sX < 0 Then
'                   sY = (Abs(sX) ^ (iNumFZ / iNumFM))
'                Else
                    sY = -(sX ^ (iNumFZ / iNumFM))
                    
'                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        
        Else '|5b8||fffd||fffd||fffd||437||fffd||138||3aa||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||221||fffd||3ba||fffd||fffd||fffd|
        
            If cmbMi.Text = ">" Then
                iStart = sStep
            ElseIf cmbMi.Text = "<" Then
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            For i = iStart To iEnd Step sStep
                sX = i
                If sX < 0 Then
                   sY = (Abs(sX) ^ (iNumFZ / iNumFM))
                Else
                    sY = -(sX ^ (iNumFZ / iNumFM))
                    
                End If
                If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                    .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                End If
            Next i
        End If
        Set objShapeCos = .ConvertToShape
    End With
    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
Else  '|5b8||fffd||fffd||421||fffd||fffd|0|2b1|
    
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
    End With
    
    If iNumFM Mod 2 = 0 Then  '|fffd||fffd||138||3aa||17c||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|x|5bb||fffd||fffd||221||fffd||fffd||fffd||fffd|
        If cmbMi.Text = "<" Then Exit Sub
        With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = 0.01 To sWidth Step sStep
                    sX = i
                    sY = -(sX ^ (iNumFZ / iNumFM))
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
            Set objShapeCos = .ConvertToShape
        End With
        objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    
    ElseIf iNumFM = 1 Then  '|fffd||fffd||138||3aa|1
        iPos = 0
        If cmbMi.Text = "<" Or cmbMi.Text = "|fffd||fffd|" Then
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = -sWidth To -0.01 Step sStep
                    sX = i
'                    If sX < 0 Then
'                       sY = (Abs(sX) ^ (iNumFZ / iNumFM))
'                    Else
                        sY = -(sX ^ (iNumFZ / iNumFM))
                        
'                    End If
'                        sY = -(sX ^ (iNumFZ))
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
            iPos = iPos + 1
        End If
        
        If cmbMi.Text = ">" Or cmbMi.Text = "|fffd||fffd|" Then
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = 0.01 To sWidth Step sStep
                    sX = i
                    If sX < 0 Then
                       sY = (Abs(sX) ^ (iNumFZ / iNumFM))
                    Else
                        sY = -(sX ^ (iNumFZ / iNumFM))
                        
                    End If
'                        sY = -(sX ^ (iNumFZ))
                        If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                            .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                        End If
                    Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
            iPos = iPos + 1
        End If
        If iPos = 2 Then
            Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
            ActiveDocument.Application.Selection.ShapeRange.ZOrder msoBringToFront
        End If
    Else
            If cmbMi.Text = ">" Then
                iStart = sStep
                iEnd = sWidth
            ElseIf cmbMi.Text = "<" Then
                iStart = -sWidth
                iEnd = -sStep
            Else
                iStart = -sWidth
                iEnd = sWidth
            End If
            With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
                For i = iStart To iEnd Step sStep
                    sX = i
                    If sX < 0 Then
                       sY = (Abs(sX) ^ (iNumFZ / iNumFM))
                    Else
                        sY = -(sX ^ (iNumFZ / iNumFM))
                        
                    End If
'                        sY = -(sX ^ (iNumFZ))
                    If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                        .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
                    End If
                Next i
                Set objShapeCos = .ConvertToShape
            End With
            objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
    End If
End If
End Sub

Private Sub DrawZhSh() '|5b8||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txtMiW.Text))
sHeight = CentimetersToPoints(Val(txtMiH.Text))
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'N = Val(txtMiW.Text) / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = -Val(txtMiW.Text) To Val(txtMiW.Text) Step sStep
            sX = i
            sY = -(Val(txtMiA.Text) ^ sX)
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
               '.ConvertToShape.Select
'            Else
'                Exit For
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub


Private Sub DrawLog() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim objShapeCos As Shape
Dim i As Single, sX As Single, sY As Single
'Dim sR As Single
Dim N As Single       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
Dim sWidth As Single
Dim sHeight As Single
Dim sStep As Single '
sWidth = CentimetersToPoints(Val(txtMiW.Text))
sHeight = CentimetersToPoints(Val(txtMiH.Text))
sStep = 0.02 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
N = Val(txtMiW.Text) / sStep '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'sX = -n / 2
'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)  tan
    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 50)
        'Do While sX <= n
        For i = 0.1 To Val(txtMiW.Text) Step sStep
            sX = i
            sY = -(Log(sX) / Log(Val(txtMiA.Text)))
            If Abs(CentimetersToPoints(sY)) < sHeight And Abs(CentimetersToPoints(sX)) < sWidth Then
                .AddNodes msoSegmentLine, msoEditingAuto, sBaseX + CentimetersToPoints(sX), sBaseY + CentimetersToPoints(sY)
               '.ConvertToShape.Select
'            Else
'                Exit For
            End If
        'Loop
        Next i
        'sX = n / 2
        'sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'        If sY > sHeight Then
'           Do While Abs(sY) > sHeight
'                sX = sX - 1
'                sY = -Val(txtLineA.Text) * sX + Val(txtLineB.Text)
'           Loop
'        End If
        Set objShapeCos = .ConvertToShape
    End With
    nCosNum = nCosNum + 1
    sName = "|5b1||fffd||fffd||fffd||fffd|" & Str(nCosNum)
    'objShapeCos.Name = sName
     objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
    'ActiveDocument.Shapes(1).Nodes.Delete 1
'    txtTT.Text = ActiveDocument.Shapes(1).Name
'    txtT.Text = objShapeCos.Name
    'lstShapeName.AddItem sName
End Sub
'
'Private Sub DrawTan1()
'Dim objShapeCos As Shape
'Dim pi As Single, i As Long, sX As Single, sY As Single, sxScale As Single
'Dim sW As Single
'Dim N As Long       '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'Dim sBaseZhf As Single  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sWidth As Single '|fffd||fffd||fffd||fffd|
'Dim sStep As Single '|fffd||2f7||fffd||5ae||4bb||fffd||fffd||fffd||fffd|
'Dim sBaseZhQ        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim sZhQ As Single   '|fffd||fffd||fffd||fffd|
'Dim sAngel As Single '|fffd||1f5||136||fffd||fffd||fffd|
'Dim sngArray() As Single
'
'pi = 3.1415
'sBaseZhQ = 2 * pi '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'sBaseZhf = 80
'sZhQ = (sBaseZhQ) * 1 / (Val(txtTanT.Text) * 3) '((sBaseZhQ) * 1 / (Val(txtZhQ.Text)))|3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
'sW = 2 * pi / sZhQ '(pi / 4)|3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd| 1 / (Val(txtcosT.Text))|fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||131||fffd||fffd||fffd|
'sStep = sZhQ / 128 '|fffd||fffd||fffd||1b5||fffd||2b1||fffd||fffd|X|fffd||fffd||fffd||3f5||13c||fffd||fffd|
'sxScale = 20 'X|fffd||fffd||fffd||3fb||fffd||fffd||1bc||fffd||fffd||fffd||137||174||fffd||fffd||fffd|
''sWidth = sBaseZhQ * sxScale '|fffd||fffd||fffd||1b5||fffd||13f||fffd||fffd||237||fffd||3a7|
''sAngel = -sBaseZhQ / 4
'sAngel = pi / 2
'N = Int(pi / sStep)  '|fffd||fffd||fffd||1b5||fffd||134||fffd||fffd||fffd|
'ReDim sngArray(1 To 3 * N - 2, 1 To 2)
''Dim i As Integer  ', iNum As Integer
''    With ActiveDocument.Shapes.BuildFreeform(msoEditingAuto, sBaseX, sBaseY + 200)
'        Do While sAngel < 3 * pi / 2
'            sAngel = sAngel + sStep
'            i = i + 1
'            sX = sAngel
'            sY = sBaseY + 6 * Tan(sX)
'            sngArray(3 * i - 2, 1) = sX * 5 + sBaseX
'            sngArray(3 * i - 2, 2) = sY
'            If i = N Then Exit Do
'            sngArray(3 * i - 1, 1) = sX * 5 + sBaseX
'            sngArray(3 * i - 1, 2) = sY
'            sngArray(3 * i, 1) = sX * 5 + sBaseX
'            sngArray(3 * i, 2) = sY
'        Loop
''        Set objShapeCos = .ConvertToShape
''    End With
'    ActiveDocument.Shapes.AddCurve _
'        SafeArrayOfPoints:=sngArray, _
'        Anchor:=ActiveDocument.Application.Selection.Range
'
'''''    nCosNum = nCosNum + 1
'''''    sName = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Str(nCosNum)
'''''    'objShapeCos.Name = sName
'''''    objShapeCos.Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|1  ************************
'''''   ' ActiveDocument.Shapes("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" + Str(nCosNum)).Nodes.Delete 1 '|461||fffd||fffd||37c||fffd||3b7||fffd||fffd||fffd|2**************************
'''''    'ActiveDocument.Shapes(1).Nodes.Delete 1
''''''    txtTT.Text = ActiveDocument.Shapes(1).Name
''''''    txtT.Text = objShapeCos.Name
'''''    lstShapeName.AddItem sName
'End Sub

Private Sub CommandButton1_Click()
Selection.Delete
End Sub


Private Sub lstShapeName_Change()
'sName = lstShapeName.Text
End Sub

Private Sub optCos_Change()
If optCos.Value = True Then
    FraCos.Visible = True
Else
    FraCos.Visible = False
End If
End Sub


Private Sub optCot_Change()
If optCot.Value = True Then
    Label45.Caption = "|fffd||fffd||fffd||423||fffd|Y = Acot(|fffd||fffd|x + |fffd||fffd|) + K"
    Label45.Font.Size = 10
    fraTan.Visible = True
Else
    fraTan.Visible = False
End If

End Sub

Private Sub OptFBL_Change()
If OptFBL.Value = True Then
    fraFBL.Visible = True
Else
    fraFBL.Visible = False
End If
End Sub

Private Sub optLine_Change()
If optLine.Value = True Then
    fraLine.Visible = True
Else
    fraLine.Visible = False
End If
End Sub

Private Sub optM_Change()
If optM.Value = True Then
    Label49.Caption = "|fffd||77a||fffd||fffd||fffd|:Y=x^a"
    txtMiA.Text = "3"
    txtMiW.Text = "8"
    txtMiH.Text = "8"
    fraMi.Visible = True
Else
    fraMi.Visible = False
End If

End Sub

Private Sub optlog_Change()
If optLog.Value = True Then
    Label49.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:Y=logaX"
    txtMiA.Text = "3"
    txtMiW.Text = "4"
    txtMiH.Text = "6"
    fraMi.Visible = True
Else
    fraMi.Visible = False
End If

End Sub

Private Sub optZhShu_Change()
If optZhShu.Value = True Then
    Label49.Caption = "|5b8||fffd||fffd||fffd||fffd||fffd||fffd|:Y=a^x"
    txtMiA.Text = "3"
    txtMiW.Text = "4"
    txtMiH.Text = "4"
    fraMi.Visible = True
Else
    fraMi.Visible = False
End If

End Sub

Private Sub optOval_Change()
If optOval.Value = True Then
    Label15.Caption = "|fffd||fffd||532||fffd||fffd|x^2/a^2+y^2/b^2=1"
    txtA.Text = "2"
    txtB.Text = "1"
    txtHeight.Text = "4"
    txtHeight.Visible = False
    fraOval.Visible = True
Else
    fraOval.Visible = False
End If
End Sub

Private Sub optShQX_Change()
If optShQX.Value = True Then
    Label15.Caption = "|2eb||fffd||fffd||fffd||7e3||fffd|x^2/a^2-y^2/b^2=1"
    txtA.Text = "1"
    txtB.Text = "1"
    txtHeight.Text = "8"
    txtHeight.Visible = True
    fraOval.Visible = True
Else
    fraOval.Visible = False
    txtHeight.Visible = False
End If

End Sub

Private Sub optPoint_Change()
If optPoint.Value = True Then
    fraCircle.Visible = True
    Label16.Caption = "|fffd||fffd||fffd||13a||fffd||fffd||fffd||fffd||fffd|(x)|fffd||fffd|"
    Label17.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(y)|fffd||fffd|"
    Label18.Caption = "|fffd||fffd||130||bfb6|(R)|fffd||fffd|"
    txtCircleR.Text = "0.04"
Else
    fraCircle.Visible = False
End If

End Sub

Private Sub optCircle_Change()
If optCircle.Value = True Then
    Label16.Caption = "|532||fffd||13a||fffd||fffd||fffd||fffd||fffd|(x)|fffd||fffd|"
    Label17.Caption = "|532||fffd||13a||fffd||fffd||fffd||fffd||fffd|(y)|fffd||fffd|"
    Label18.Caption = "|fffd||bfb6|(R)|fffd||fffd|"
    txtCircleR.Text = "2"
    fraCircle.Visible = True
Else
    fraCircle.Visible = False
End If
End Sub

Private Sub optPWX_Change()
If optPWX.Value = True Then

    fraPWX.Visible = True
Else
    fraPWX.Visible = False
End If
End Sub

Private Sub optPWXddsh_Change()
If optPWXddsh.Value = True Then

    fraPwxDDsh.Visible = True
Else
    fraPwxDDsh.Visible = False
End If
End Sub

Private Sub optSin_Change()
If optSin.Value = True Then

    fraSin.Visible = True
Else
    fraSin.Visible = False
End If
End Sub

Private Sub optZBX_Change()
If optZBX.Value = True Then

    fraZBX.Visible = True
Else
    fraZBX.Visible = False
End If

End Sub

Private Sub optTan_Change()
If optTan.Value = True Then
    Label45.Caption = "|fffd||fffd||fffd||423||fffd|Y = Atan(|fffd||fffd|x + |fffd||fffd|) + K"
    Label45.Font.Size = 10
    fraTan.Visible = True
Else
    fraTan.Visible = False
End If

End Sub



Private Sub UserForm_Initialize()
Dim sXjg As Single '|fffd||63c||fffd||fffd||fffd||fffd||2ee||1bd||fffd||fffd||fffd|
sXjg = 5
Me.Width = sXjg + fraFunName.Width + sXjg + fraSin.Width + sXjg
Me.Height = fraFunName.Height + cmdDraw.Width
fraFunName.Left = sXjg
cmbMi.AddItem "|fffd||fffd|"
cmbMi.AddItem ">"
cmbMi.AddItem "<"
cmbMi.ListIndex = 0
'sina
fraSin.Visible = False
fraSin.Left = fraFunName.Left + fraFunName.Width + sXjg / 2
fraSin.Top = fraFunName.Top
'cosa
FraCos.Visible = False
FraCos.Left = fraSin.Left
FraCos.Top = fraFunName.Top
'|1bd||fffd||fffd||5b1||fffd||fffd||fffd||fffd||fffd||fffd||3f5|
'fraZBX.Visible = False
fraZBX.Left = fraSin.Left
fraZBX.Top = fraFunName.Top
'|fffd||fffd||532|
fraOval.Visible = False
fraOval.Left = fraSin.Left
fraOval.Top = fraFunName.Top
'|532|
fraCircle.Visible = False
fraCircle.Left = fraSin.Left
fraCircle.Top = fraFunName.Top
'|fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||2bd|
fraPWX.Visible = False
fraPWX.Left = fraSin.Left
fraPWX.Top = fraFunName.Top
'|fffd||fffd||fffd||fffd||fffd||7f6||fffd||fffd||fffd||2bd|
fraPwxDDsh.Visible = False
fraPwxDDsh.Left = fraSin.Left
fraPwxDDsh.Top = fraFunName.Top
'|5b1||fffd||fffd|
fraLine.Visible = False
fraLine.Left = fraSin.Left
fraLine.Top = fraFunName.Top
'|fffd||fffd||fffd||fffd|
fraTan.Visible = False
fraTan.Left = fraSin.Left
fraTan.Top = fraFunName.Top
'|fffd||77a||fffd||fffd||fffd|
fraMi.Visible = False
fraMi.Left = fraSin.Left
fraMi.Top = fraFunName.Top
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
fraFBL.Visible = False
fraFBL.Left = fraSin.Left
fraFBL.Top = fraFunName.Top


'optSin.Value = True
End Sub

''''''Private Sub DrawZBX000()
''''''    Dim XLeft As Single, XTop As Single, YLeft As Single, YTop As Single, XLong As Single
''''''    Dim YTtop As Single, YHight As Single, XLine As Shape, YLine As Shape, i As Single
''''''    Dim M As Byte, MyTextbox As Shape, MyValue As Single, ModValue As Byte
''''''    On Error Resume Next    '|fffd||fffd||fffd||534||fffd||fffd||fffd|
''''''    '|fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||436||fffd|
''''''''''    If Me.TextBox1 = "" Or Int(Me.TextBox1) <> Me.TextBox1 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox2 = "" Or Int(Me.TextBox2) <> Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox3 = "" Or Int(Me.TextBox3) <> Me.TextBox3 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''''''''    If Me.TextBox3 * 1 > Me.TextBox1 * 1 Or Me.TextBox3 * 1 > Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|!", vbInformation: Exit Sub
''''''    '    TextBox1|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd| , TextBox2|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''''    Application.ScreenUpdating = False
''''''    XLeft = CentimetersToPoints(Me.TextBox1 - Me.TextBox3 / 2) + sBaseX '|fffd||fffd||fffd||fffd||fffd|
''''''    XLong = CentimetersToPoints(Me.TextBox3 + 0.5)   '|fffd||fffd|(|fffd||fffd|)
''''''    XTop = CentimetersToPoints(Me.TextBox2) + sBaseY
''''''    YLeft = CentimetersToPoints(Me.TextBox1) + sBaseX   '|fffd||fffd||7fe||fffd|
''''''    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|+|fffd||7f6||fffd|/2,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-TextBox3/2-0.5
''''''    YTop = CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2) + sBaseY
''''''    YTtop = CentimetersToPoints(Me.TextBox2 - Me.TextBox3 / 2 - 0.5) + sBaseY
''''''    YHight = CentimetersToPoints(Me.TextBox3)
''''''    With ActiveDocument
''''''        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
''''''        If BeforeShapes >= 1 Then
''''''            For i = 1 To BeforeShapes
''''''                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
''''''            Next
''''''        End If
''''''        '    If BeforeShapes >= 1 Then MsgBox "|fffd||fffd||fffd||fffd||22b||fffd||68ec||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5|! "" _
'''''': Exit Sub
''''''        Set XLine = .Shapes.AddLine(XLeft - 10, XTop, XLeft + XLong, XTop)
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, XLeft + XLong - 5, XTop - 5, 30, 30)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd|X|fffd||fffd||fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 14
''''''            .TextFrame.TextRange = "X"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''        End With
''''''        With XLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
''''''            .Line.EndArrowheadStyle = msoArrowheadTriangle
''''''            .Line.EndArrowheadLength = msoArrowheadLengthMedium
''''''            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
''''''        End With
''''''        Set YLine = .Shapes.AddLine(YLeft, YTop + 10, YLeft, YTtop)
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft - 15, YTtop - 10, 30, 30)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 14
''''''            .TextFrame.TextRange = "y"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''            .ZOrder msoSendToBack
''''''        End With
''''''        With YLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
''''''            .Line.EndArrowheadStyle = msoArrowheadTriangle
''''''            .Line.EndArrowheadLength = msoArrowheadLengthMedium
''''''            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
''''''        End With
''''''        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
''''''            CentimetersToPoints(Me.TextBox1) - 10 + sBaseX, CentimetersToPoints(Me.TextBox2) - 1 + sBaseY, 20, 20)
''''''        With MyTextbox    '|fffd||fffd||fffd||fffd||52d||fffd||fffd|O|fffd||131||fffd||fffd||fffd|
''''''            .Line.Visible = msoFalse
''''''            .Fill.Visible = msoFalse
''''''            .TextFrame.MarginBottom = 0
''''''            .TextFrame.MarginLeft = 0
''''''            .TextFrame.MarginRight = 0
''''''            .TextFrame.MarginTop = 0
''''''            .TextFrame.TextRange.Font.Name = "Arial"
''''''            .TextFrame.TextRange.Font.Size = 12
''''''            .TextFrame.TextRange = "O"
''''''            .TextFrame.TextRange.Bold = msoTrue
''''''            .ZOrder msoSendToBack
''''''        End With
''''''        If Me.OptionButton1.Value = True Then Call SelAllShapes: Exit Sub   '|3b4||461||fffd||336||fffd||5b5||fffd||2f3||fffd|
''''''        If Me.OptionButton2.Value = True Then MyValue = 0.5: ModValue = 2
''''''        If Me.OptionButton3.Value = True Then MyValue = 0.5: ModValue = 2
'''''''        If Me.OptionButton3.Value = True Then MyValue = 0.1: ModValue = 5
''''''        For i = 0 To Me.TextBox3 * 1 Step MyValue
''''''            If Me.OptionButton3.Value = True Then
''''''                M = 5
''''''            Else
''''''                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
''''''            End If
''''''            .Shapes.AddLine CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) + sBaseX, XTop - M, _
''''''                            CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) + sBaseX, XTop
''''''            .Shapes.AddLine YLeft, CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) + sBaseY, _
''''''                            YLeft + M, CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) + sBaseY
''''''            If M = 5 And i - Me.TextBox3 / 2 <> 0 Then    '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
''''''                '|fffd||fffd|X|fffd||fffd||336||fffd|
''''''                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
''''''                                                   CentimetersToPoints(i + Me.TextBox1 - Me.TextBox3 / 2) - 10 + sBaseX, XTop, 20, 20)
''''''                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
''''''                    .Line.Visible = msoFalse
''''''                    .Fill.Visible = msoFalse
''''''                    .TextFrame.MarginBottom = 0
''''''                    .TextFrame.MarginLeft = 0
''''''                    .TextFrame.MarginRight = 0
''''''                    .TextFrame.MarginTop = 0
''''''                    .TextFrame.TextRange.Font.Name = "Arial"
''''''                    .TextFrame.TextRange.Font.Size = 8
''''''                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
'''''''                    .TextFrame.TextRange = Round(i - Me.TextBox3 / 2, 1)
''''''                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i - Me.TextBox3 / 2
''''''                    .TextFrame.TextRange.Bold = msoTrue
''''''                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
''''''                    .ZOrder msoSendToBack
''''''                End With
''''''                '|fffd||fffd|Y|fffd||fffd||336||fffd|
''''''                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft + 8, _
''''''CentimetersToPoints(Me.TextBox2 + Me.TextBox3 / 2 - i) - 8 + sBaseY, 20, 20)
'''''''                sTxt = IIf(i - Me.TextBox3 / 2 > 0, i - Me.TextBox3 / 2, "|fffd||fffd|" & Abs(i - Me.TextBox3 / 2))
''''''                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
''''''                    .Line.Visible = msoFalse
''''''                    .Fill.Visible = msoFalse
''''''                    .TextFrame.MarginBottom = 0
''''''                    .TextFrame.MarginLeft = 0
''''''                    .TextFrame.MarginRight = 0
''''''                    .TextFrame.MarginTop = 0
''''''                    .TextFrame.TextRange.Font.Name = "Arial"
''''''                    .TextFrame.TextRange.Font.Size = 8
''''''                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
''''''                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i - Me.TextBox3 / 2
''''''                    .TextFrame.TextRange.Bold = msoTrue
'''''''                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
''''''                    .ZOrder msoSendToBack
''''''                End With
''''''            End If
''''''        Next
''''''        Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
''''''    End With
''''''    Application.ScreenUpdating = True
''''''End Sub

Private Sub DrawZBX()
    Dim XLeft As Single, XTop As Single, YLeft As Single, YTop As Single, XLong As Single
    Dim YTtop As Single, YHight As Single, XLine As Shape, YLine As Shape, i As Single
    Dim M As Byte, MyTextbox As Shape, MyValue As Single, ModValue As Byte
    
    If Val(txtZBXjsX.Text) < 0 Then txtZBXjsX.Text = 0
    If Val(txtZBXjsY.Text) < 0 Then txtZBXjsY.Text = 0
    If Val(txtZBXqsX.Text) > 0 Then txtZBXqsX.Text = 0
    If Val(txtZBXqsY.Text) > 0 Then txtZBXqsY.Text = 0
    
    On Error Resume Next    '|fffd||fffd||fffd||534||fffd||fffd||fffd|
    '|fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||436||fffd|
''''    If Me.TextBox1 = "" Or Int(Me.TextBox1) <> Me.TextBox1 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.TextBox2 = "" Or Int(Me.TextBox2) <> Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.TextBox3 = "" Or Int(Me.TextBox3) <> Me.TextBox3 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|! ", vbInformation: Exit Sub
''''    If Me.TextBox3 * 1 > Me.TextBox1 * 1 Or Me.TextBox3 * 1 > Me.TextBox2 * 1 Then MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd|!", vbInformation: Exit Sub
    '    TextBox1|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd| , TextBox2|3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False
    XLeft = CentimetersToPoints(Val(TextBox1.Text) + Val(txtZBXqsX.Text)) + sBaseX  '|fffd||fffd||fffd||fffd||fffd|
'    XLong = CentimetersToPoints(Me.TextBox3 + 0.5)   '|fffd||fffd|(|fffd||fffd|)
    XLong = CentimetersToPoints(Val(txtZBXjsX.Text) - Val(txtZBXqsX.Text) + 0.5) '|fffd||fffd||fffd||fffd||fffd|
    XTop = CentimetersToPoints(Val(TextBox2.Text)) + sBaseY  '|52d||fffd||fffd|Y
    YLeft = CentimetersToPoints(Val(TextBox1.Text)) + sBaseX   '|52d||fffd||fffd|x
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|+|fffd||7f6||fffd|/2,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||3aa||52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-TextBox3/2-0.5
    YTop = CentimetersToPoints(Me.TextBox2 - Val(txtZBXqsY.Text)) + sBaseY  '|fffd||fffd||fffd||b7||fffd||fffd||fffd|
    YTtop = CentimetersToPoints(Me.TextBox2 - Val(txtZBXjsY.Text) - 0.5) + sBaseY  '|fffd||fffd||fffd||3f7||fffd||fffd||fffd|
    YHight = CentimetersToPoints(Val(txtZBXjsY.Text) - Val(txtZBXqsY.Text))  '|fffd||fffd||fffd||fffd||fffd|
    With ActiveDocument
        BeforeShapes = .Shapes.Count    '|fffd||fffd||221||fffd||fffd||fffd||fffd||5ae||1f0||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd|
        If BeforeShapes >= 1 Then
            For i = 1 To BeforeShapes
                .Shapes(i).Name = "|fffd||fffd||fffd||fffd||37c||fffd||fffd|" & BeforeShapes & i    '|fffd||fffd||fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            Next
        End If
        '    If BeforeShapes >= 1 Then MsgBox "|fffd||fffd||fffd||fffd||22b||fffd||68ec||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5|! "" _
: Exit Sub
        Set XLine = .Shapes.AddLine(XLeft - 10, XTop, XLeft + XLong, XTop)
        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, XLeft + XLong - 5, XTop - 5, 30, 30)
        With MyTextbox    '|fffd||fffd||fffd||fffd|X|fffd||fffd||fffd||131||fffd||fffd||fffd|
            .Line.Visible = msoFalse
            .Fill.Visible = msoFalse
            .TextFrame.MarginBottom = 0
            .TextFrame.MarginLeft = 0
            .TextFrame.MarginRight = 0
            .TextFrame.MarginTop = 0
            .TextFrame.TextRange.Font.Name = "Arial"
            .TextFrame.TextRange.Font.Size = 14
            .TextFrame.TextRange = "X"
            .TextFrame.TextRange.Bold = msoTrue
        End With
        With XLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
            .Line.EndArrowheadStyle = msoArrowheadTriangle
            .Line.EndArrowheadLength = msoArrowheadLengthMedium
            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
        End With
        Set YLine = .Shapes.AddLine(YLeft, YTop + 10, YLeft, YTtop)
        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft - 15, YTtop - 10, 30, 30)
        With MyTextbox    '|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||131||fffd||fffd||fffd|
            .Line.Visible = msoFalse
            .Fill.Visible = msoFalse
            .TextFrame.MarginBottom = 0
            .TextFrame.MarginLeft = 0
            .TextFrame.MarginRight = 0
            .TextFrame.MarginTop = 0
            .TextFrame.TextRange.Font.Name = "Arial"
            .TextFrame.TextRange.Font.Size = 14
            .TextFrame.TextRange = "y"
            .TextFrame.TextRange.Bold = msoTrue
            .ZOrder msoSendToBack
        End With
        With YLine    '|fffd||fffd||fffd||fc||fffd||377||fffd||fffd||5f4|
            .Line.EndArrowheadStyle = msoArrowheadTriangle
            .Line.EndArrowheadLength = msoArrowheadLengthMedium
            .Line.EndArrowheadWidth = msoArrowheadWidthMedium
        End With
        Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
            CentimetersToPoints(Me.TextBox1) - 10 + sBaseX, CentimetersToPoints(Me.TextBox2) - 1 + sBaseY, 20, 20)
        With MyTextbox    '|fffd||fffd||fffd||fffd||52d||fffd||fffd|O|fffd||131||fffd||fffd||fffd|
            .Line.Visible = msoFalse
            .Fill.Visible = msoFalse
            .TextFrame.MarginBottom = 0
            .TextFrame.MarginLeft = 0
            .TextFrame.MarginRight = 0
            .TextFrame.MarginTop = 0
            .TextFrame.TextRange.Font.Name = "Arial"
            .TextFrame.TextRange.Font.Size = 12
            .TextFrame.TextRange = "O"
            .TextFrame.TextRange.Bold = msoTrue
            .ZOrder msoSendToBack
        End With
        If Me.OptionButton1.Value = True Then Call SelAllShapes: Exit Sub   '|3b4||461||fffd||336||fffd||5b5||fffd||2f3||fffd|
        If Me.OptionButton2.Value = True Then MyValue = 0.5: ModValue = 2
        If Me.OptionButton3.Value = True Then MyValue = 0.5: ModValue = 2
'        If Me.OptionButton3.Value = True Then MyValue = 0.1: ModValue = 5
        For i = Val(txtZBXqsX.Text) To Val(txtZBXjsX.Text) Step MyValue
            If Me.OptionButton3.Value = True Then
                M = 5
            Else
                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
            End If
            .Shapes.AddLine CentimetersToPoints(i + Me.TextBox1) + sBaseX, XTop - M, _
                                CentimetersToPoints(i + Me.TextBox1) + sBaseX, XTop
'            .Shapes.AddLine YLeft, CentimetersToPoints(Me.TextBox2 - i) + sBaseY, _
'                            YLeft + M, CentimetersToPoints(Me.TextBox2 - i) + sBaseY
            If M = 5 And i <> 0 Then     '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
                '|fffd||fffd|X|fffd||fffd||336||fffd|
                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, _
                                                   CentimetersToPoints(i + Me.TextBox1) - 10 + sBaseX, XTop, 20, 20)
                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
                    .Line.Visible = msoFalse
                    .Fill.Visible = msoFalse
                    .TextFrame.MarginBottom = 0
                    .TextFrame.MarginLeft = 0
                    .TextFrame.MarginRight = 0
                    .TextFrame.MarginTop = 0
                    .TextFrame.TextRange.Font.Name = "Arial"
                    .TextFrame.TextRange.Font.Size = 9
                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
'                    .TextFrame.TextRange = Round(i - Me.TextBox3 / 2, 1)
                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i
                    .TextFrame.TextRange.Bold = msoTrue
                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
                    .ZOrder msoSendToBack
                End With
                
            End If
            Next
            
            
        For i = Val(txtZBXqsY.Text) To Val(txtZBXjsY.Text) Step MyValue
            If Me.OptionButton3.Value = True Then
                M = 5
            Else
                M = VBA.IIf(VBA.IIf(MyValue = 0.5, i * 10 Mod 10 = 0, i * 10 Mod 5 = 0), 5, 3)
            End If
'            .Shapes.AddLine CentimetersToPoints(i + Me.TextBox1) + sBaseX, XTop - M, _
                            CentimetersToPoints(i + Me.TextBox1) + sBaseX, XTop
            .Shapes.AddLine YLeft, CentimetersToPoints(Me.TextBox2 - i) + sBaseY, _
                            YLeft + M, CentimetersToPoints(Me.TextBox2 - i) + sBaseY
            If M = 5 And i <> 0 Then   '|fffd||fffd| 0.5 |fffd||fffd| 1 |fffd||fffd||2b6||fffd||fffd||5b5|,|fffd||fffd||fffd||fffd| 0 |5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|)
                '|fffd||fffd|Y|fffd||fffd||336||fffd|
                Set MyTextbox = .Shapes.AddTextbox(msoTextOrientationHorizontal, YLeft + 8, _
CentimetersToPoints(Me.TextBox2 - i) - 8 + sBaseY, 20, 20)
'                sTxt = IIf(i - Me.TextBox3 / 2 > 0, i - Me.TextBox3 / 2, "|fffd||fffd|" & Abs(i - Me.TextBox3 / 2))
                With MyTextbox    '|fffd||fffd||fffd||ff||336||fffd||fffd||131||fffd||fffd||fffd||5b5|
                    .Line.Visible = msoFalse
                    .Fill.Visible = msoFalse
                    .TextFrame.MarginBottom = 0
                    .TextFrame.MarginLeft = 0
                    .TextFrame.MarginRight = 0
                    .TextFrame.MarginTop = 0
                    .TextFrame.TextRange.Font.Name = "Arial"
                    .TextFrame.TextRange.Font.Size = 9
                    .TextFrame.TextRange.Font.Name = "|fffd||fffd||fffd||fffd|"
                    If Me.OptionButton2.Value = True Then .TextFrame.TextRange = i
                    .TextFrame.TextRange.Bold = msoTrue
'                    .TextFrame.TextRange.ParagraphFormat.Alignment = wdAlignParagraphCenter
                    .ZOrder msoSendToBack
                End With
            End If
        Next
        Call SelAllShapes    '|22b||461||37c||fffd||3ba||fffd|(SelAllShapes)
    End With
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "frmEnterGH"
Attribute VB_Base = "0{41D654D4-B539-45E2-A6EC-26D13A907318}{F17C6EE8-2943-4503-B075-0015A9DB8C8A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdCancel_Click()
frmEnterGH.Hide
End Sub

Private Sub cmdOk_Click()

    If Trim(txtFenZi.Text) <> 2 And Trim(txtFenMu.Text) <> "" Then
'        If Val(Trim(txtFenZi.Text)) = 1   Then
'            MsgBox "|fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd||3aa|1"
'            Exit Sub
'        End If
        fractionText = "EQ \R(" + txtFenZi.Text + "," + txtFenMu.Text + ")"
        Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        fractionText, PreserveFormatting:=False
    ElseIf Val(Trim(txtFenZi.Text)) = 2 And Trim(txtFenMu.Text) <> "" Then
        fractionText = "EQ \R(" + txtFenMu.Text + ")"
        Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        fractionText, PreserveFormatting:=False
    End If
'        frmEnterGH.Hide
End Sub

Private Sub UserForm_Activate()
'Load frmEnterFraction
txtFenZi.SetFocus
End Sub

Attribute VB_Name = "frmEnterTWS"
Attribute VB_Base = "0{05B67D74-1454-4720-81A3-27C60344A0FA}{DE5643B4-2FA0-48F8-A286-A9E8A9A8E175}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub cmdCancel_Click()
frmEnterTWS.Hide
End Sub

Private Sub cmdOk_Click()
    Dim MyRange As Range, iSpaceNumFM As Integer, iSpaceNumFZ As Integer
    Set MyRange = Selection.Range
    If Len(Trim(txtFenZi.Text)) > Len(Trim(txtFenMu.Text)) Then
        iSpaceNumFM = Len(Trim(txtFenZi.Text)) - Len(Trim(txtFenMu.Text))
    ElseIf Len(Trim(txtFenZi.Text)) < Len(Trim(txtFenMu.Text)) Then
        iSpaceNumFZ = Len(Trim(txtFenMu.Text)) - Len(Trim(txtFenZi.Text))
    End If
    
        
    Selection.TypeText Trim(txtFenZi.Text) & " " & Trim(txtFenMu.Text)
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + Len(Trim(txtFenZi.Text) + Trim(txtFenMu.Text)) + 1
    MyRange.TwoLinesInOne = wdTwoLinesInOneNoBrackets
    If iSpaceNumFZ > 0 Then
        For i = 1 To iSpaceNumFZ
            Selection.TypeText " "
        Next
        Selection.MoveRight Unit:=wdCharacter, Count:=Len(Trim(txtFenMu.Text)) + Len(Trim(txtFenZi.Text)) + 1
        Exit Sub
    ElseIf iSpaceNumFM > 0 Then
        Selection.MoveRight Unit:=wdCharacter, Count:=Len(Trim(txtFenZi.Text))
        For i = 1 To iSpaceNumFM
            Selection.TypeText " "
        Next
        Selection.MoveRight Unit:=wdCharacter, Count:=Len(Trim(txtFenMu.Text)) + 1
        Exit Sub
    End If
    Selection.MoveRight Unit:=wdCharacter, Count:=Len(Trim(txtFenMu.Text)) + Len(Trim(txtFenZi.Text)) + 1
End Sub

Private Sub UserForm_Activate()
'Load frmEnterFraction
txtFenZi.SetFocus
End Sub

Attribute VB_Name = "frmHhj"
Attribute VB_Base = "0{6F55B09F-FE22-4100-BE5B-F06292C2E0EB}{AFA8A1E8-141E-4523-BC3C-09BA063A95C6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdCancel_Click()
Unload Me
End Sub

Private Sub cmdOk_Click()
    If txtFenZi.Text <> "" And txtFenMu.Text <> "" Then
        fractionText = "EQ \* jc2 \* ""Font:Times New Roman"" \* hps20 \o\ad(\s\up 9(" + txtFenZi.Text + ")," + txtFenMu.Text + ")"
        Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        fractionText, PreserveFormatting:=False
    End If

End Sub

'Private Sub txtFenZi_Change()
'Unload frmHhj
'End Sub
Attribute VB_Name = "|fffd||fffd||226||fffd||5b7||fffd|"
Attribute VB_Base = "0{6F24CB0C-0FDE-4D72-B1D9-0694998FA247}{6FA295A6-25E5-4C9A-9970-958C61369615}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdCancel_Click()
Me.Hide
End Sub

Private Sub cmdOk_Click()
    If txtPreviewZF.Text <> "" And txtPreviewQH.Text <> "" Then
        fractionText = "eq \o\ac({Symbol " + Str(Asc(txtPreviewQH.Text)) + "\s" + Str(sldQH.Value) + "},{Symbol" + Str(Asc(txtPreviewZF.Text)) + "\s" + Str(sldZF.Value) + "})"
        Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        fractionText, PreserveFormatting:=False
        
        
    End If
        Unload Me
End Sub

Private Sub CommandButton1_Click()
Dim txt As String
txt = Me.CommandButton1.Caption
Selection.TypeText Text:=txt
End Sub
Private Sub CommandButton2_Click()
Dim txt As String
txt = Me.CommandButton2.Caption
Selection.TypeText Text:=txt
End Sub
Private Sub CommandButton3_Click()
Dim txt As String
txt = Me.CommandButton3.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton4_Click()
Dim txt As String
txt = Me.CommandButton4.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton5_Click()
Dim txt As String
txt = Me.CommandButton5.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton6_Click()
Dim txt As String
txt = Me.CommandButton6.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton7_Click()
Dim txt As String
txt = Me.CommandButton7.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton8_Click()
Dim txt As String
txt = Me.CommandButton8.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton9_Click()
Dim txt As String
txt = Me.CommandButton9.Caption
Selection.TypeText Text:=txt
End Sub

Private Sub CommandButton10_Click()
Dim txt As String
txt = Me.CommandButton10.Caption
Selection.TypeText Text:=txt
End Sub


Private Sub lstQuanHao_Change()
txtQuanHao.Text = lstQuanHao.Text
txtPreviewQH.Text = lstQuanHao.Text
txtPreviewQH.Font.Size = 30
End Sub

Private Sub lstZiFu_Change()
txtZiFu.Text = lstZiFu.Text
txtPreviewZF.Text = lstZiFu.Text
txtPreviewZF.Font.Size = 48
End Sub

Private Sub sldQH_Change()
txtPreviewQH.Font.Size = sldQH.Value
End Sub

Private Sub sldZF_Change()
txtPreviewZF.Font.Size = sldZF.Value
End Sub

Private Sub UserForm_Activate()
txtZiFu.SetFocus

End Sub

Private Sub UserForm_Initialize()

'|fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
lstZiFu.AddItem "a"
lstZiFu.AddItem "A"
lstZiFu.AddItem "!"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|4bc|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|bd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|2b0|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|1ea|"
lstZiFu.AddItem "|4bb|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|2ae|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|1e7|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|32b|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|fffd||fffd|"
lstZiFu.AddItem "|3a2|"
lstZiFu.AddItem "|4e1|"

'|fffd||fffd||226||fffd||161||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
lstQuanHao.AddItem "|fffd||fffd|"
lstQuanHao.AddItem "|fffd||fffd|"
lstQuanHao.AddItem "|fffd||fffd|"
lstQuanHao.AddItem "|fffd||fffd|"


End Sub
Attribute VB_Name = "|fffd||fffd||fffd|"
Public BeforeShapes As Integer
Sub test()
UserForm1.Show
End Sub


Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd|()
    Selection.Font.Position = Selection.Font.Position + 1
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd|()
    Selection.Font.Position = Selection.Font.Position - 1
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd|()
    Selection.Font.Position = 0
End Sub

Sub |fffd||131||fffd||fffd||fffd||378||fffd||fffd|() '|fffd||131||fffd||fffd||fffd||378||fffd||fffd|
    If Selection.Type <> 8 Then Exit Sub
    Selection.ShapeRange.Fill.Visible = msoFalse
    Selection.ShapeRange.Fill.Transparency = 0#
'    Selection.ShapeRange.Line.Transparency = 0#
'    Selection.ShapeRange.Line.Visible = msoFalse
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.ShapeRange.LockAnchor = False
    Selection.ShapeRange.LayoutInCell = True
    Selection.ShapeRange.WrapFormat.AllowOverlap = True

End Sub

Sub |fffd||131||fffd||fffd||fffd||225||fffd||7ff||fffd|()
    If Selection.Type <> 8 Then Exit Sub
    Selection.ShapeRange.Line.Transparency = 0#
    Selection.ShapeRange.Line.Visible = msoFalse
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.ShapeRange.LockAnchor = False
    Selection.ShapeRange.LayoutInCell = True
    Selection.ShapeRange.WrapFormat.AllowOverlap = True

End Sub

Sub |fffd||fffd||fffd||fffd|() '|fffd||fffd||fffd||fffd|
Dim MyRange As Word.Range, iCount As Integer, iPos As Integer, sTxt1 As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start
If iCount = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
sTxt1 = Selection.Text
With Selection
''    .Font.Name = "|fffd||fffd||fffd||fffd|"
'    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="/", ReplaceWith:=",", _
'            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ")"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 1
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \B("
    .MoveLeft Unit:=wdCharacter, Count:=1
''    .Paste1/2
'     .Find.Execute FindText:=")", ReplaceWith:=",", _
'            Replace:=wdReplaceNone
'    .MoveRight Unit:=wdCharacter, Count:=1
'    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

 End Sub

Sub |fffd||fffd||2bd|() '|fffd||fffd||2bd||fffd||fffd||2b6||fffd||fffd|
Dim MyRange As Word.Range, iCount As Integer, iPos As Integer, sTxt1 As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start
If iCount = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||e1||fffd|/ |fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
sTxt1 = Selection.Text
iPos = InStr(1, sTxt1, "/")
If iPos = 0 Then
    MsgBox "|fffd||4b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5be||fffd||fffd|/|fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If


With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
    .Find.Execute FindText:="/", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ")"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 1
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \F("
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:=")", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub |fffd||fffd||2bd|() '|fffd||fffd||2bd||fffd||fffd||2b6||fffd||fffd|
'Dim sTxt1 As String, sTxt2 As String
'sTxt1 = Selection.Text
'If Len(sTxt1) = 0 Or sTxt1 = Null Then
'    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
'    Exit Sub
'End If
'Selection.Find.Execute FindText:="/", ReplaceWith:=",", _
    Replace:=wdReplaceAll
'sTxt2 = Mid(sTxt1, iPos + 1)
'sTxt1 = Mid(sTxt1, 1, iPos - 1)
'sTxt1 = "EQ \R(" + sTxt1 + "," + sTxt2 + ")"
Dim MyRange As Word.Range, iCount As Integer, iPos As Integer, sTxt1 As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start
If iCount = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||e1||fffd|\ |fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If
sTxt1 = Selection.Text
iPos = InStr(1, sTxt1, "\")
If iPos = 0 Then
    MsgBox "|fffd||4b2||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||5be||fffd||fffd|\|fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ")"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 1
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \R("
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:=")", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
    Set MyRange = Nothing
End With

End Sub

Sub shchXL() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|  {EQ \o\ac(\s\up2()|fffd||fffd|AB)|fffd||fffd|
Dim MyRange As Word.Range, iCount As Integer, sTxt As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start + 1
If iCount - 1 = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

sTxt = String(iCount, "_")
With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = "))"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 2
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \s\up6(\a\ac(" & sTxt & ","
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:="))", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub shchXL1() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||377||fffd||fffd|  {EQ \o\ac(\s\up2()|fffd||fffd|AB)|fffd||fffd|
Dim MyRange As Word.Range, iCount As Integer, sTxt As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start + 1
If iCount - 1 = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

iCount = MyRange.End - MyRange.Start - 1
sTxt = String(iCount, "|fffd||fffd|")
With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = "))"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 2
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \s\up6(\a\ac(" & sTxt & "|fffd||fffd|,"
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:="))", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub shchXL2() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||377||fffd||fffd|  {EQ \o\ac(\s\up2()|fffd||fffd|AB)|fffd||fffd|
Dim MyRange As Word.Range, iCount As Integer, sTxt As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start + 1
If iCount - 1 = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

iCount = MyRange.End - MyRange.Start - 1
sTxt = String(iCount, "|fffd||fffd|")
With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = "))"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 2
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \s\up6(\a\ac(|fffd||fffd|" & sTxt & ","
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:="))", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub


Sub shchXL3() '|fffd||fffd||1fb||fffd||fffd||fffd|  EQ \o\ac(\s\up10(|fffd||fffd|),AmB)
Dim MyRange As Word.Range, iCount As Integer   ', sTxt As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start + 1
If iCount - 1 = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ")"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 1
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \o\ac(\s\up10(|fffd||fffd|),"
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:=")", ReplaceWith:=",", _
            Replace:=wdReplaceNone
    .MoveRight Unit:=wdCharacter, Count:=1
'    .TypeBackspace
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd|() '|fffd||fffd||fffd||fffd||fffd||fffd|  EQ \B\lc\{(\a\al\co2(21x+3y+z=25, ,6x-12y+3z=-3 ,,x+y+2z=4, ))
Dim MyRange As Word.Range, MyRge As Word.Range, iCount As Integer, iPos As Integer   ', sTxt As String
Dim bFind As Boolean, bFindFst As Boolean, iXh As Integer, sXh As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start
If iCount = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||e1||fffd|/ |fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

sTxt1 = Selection.Text
iPos = InStr(1, sTxt1, "/")
If iPos = 0 Then
    MsgBox "|fffd||4b2||fffd||fffd||fffd||fffd||fffd||fffd||335||137||5b8||fffd||fffd||fffd||5be||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||230||477||fffd||fffd||fffd||fffd||e1||fffd|/|fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

iPos = MyRange.End
With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindContinue ' wdFindStop
    bFind = True
    Do While bFind = True
        iXh = iXh + 1
        If iXh = 1 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 2 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 3 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 4 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 5 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 6 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 7 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 8 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 9 Then
            sXh = "|fffd||fffd|"
         ElseIf iXh = 10 Then
            sXh = "|fffd||fffd|"
       End If
       
        bFindFst = .Find.Execute(FindText:="/", ReplaceWith:=" ", _
                 Replace:=wdReplaceNone)   'wdReplaceAll
        If bFindFst = True Then
            Set MyRge = Selection.Range
            Selection.Start = MyRge.Start - 1
            If MyRge.Start < MyRange.Start + iCount + (iXh - 1) * 5 Then
                bFind = .Find.Execute(FindText:="/", ReplaceWith:=",   " & sXh & ",", _
                         Replace:=wdReplaceOne)   'wdReplaceAll
            Else
                GoTo lblend:
            End If
        Else
            GoTo lblend:
        End If
        If bFind = False Then
lblend:
            Selection.Start = MyRange.Start + iCount + (iXh - 1) * 5
            Selection.End = MyRange.Start + iCount + (iXh - 1) * 5
            If iXh = 1 Then
                sXh = "|fffd||fffd|"
            ElseIf iXh = 2 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 3 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 4 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 5 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 6 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 7 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 8 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 9 Then
                sXh = "|fffd||fffd|"
             ElseIf iXh = 10 Then
                sXh = "|fffd||fffd|"
           End If
           
'           iXh = iXh - 1 '|fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||138||fffd||fffd||fffd|
           Exit Do
       End If
    Loop
'    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ",   " & sXh & "))"
    MyRange.SetRange Start:=MyRange.Start, End:=Selection.End   'MyRange.Start + iCount + iXh * 2
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \B\lc\{(\a\al\co2("
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:="))", ReplaceWith:=",", _
            Replace:=wdReplaceNone
            
'     .Find.Execute FindText:=" ", ReplaceWith:=",", _
            Replace:=wdReplaceOne
            
    .MoveRight Unit:=wdCharacter, Count:=1
'    .TypeBackspace
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd|1() '|fffd||fffd||fffd||fffd||fffd||fffd|1  EQ \B\lc\{(\a\al\co2(21x+3y+z=25, |fffd||fffd|,6x-12y+3z=-3 , |fffd||fffd|,x+y+2z=4, |fffd||fffd|))
Dim MyRange As Word.Range, iCount As Integer   ', sTxt As String
Set MyRange = Selection.Range
iCount = MyRange.End - MyRange.Start + 1
If iCount - 1 = 0 Then
    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||e1||fffd|/ |fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

sTxt1 = Selection.Text
iPos = InStr(1, sTxt1, "/")
If iPos = 0 Then
    MsgBox "|fffd||4b2||fffd||fffd||fffd||fffd||fffd||fffd||335||137||5b8||fffd||fffd||fffd||5be||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||230||477||fffd||fffd||fffd||fffd||e1||fffd|/|fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
    Exit Sub
End If

With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
    .Find.Wrap = wdFindStop
    .Find.Execute FindText:="/", ReplaceWith:=",,", _
            Replace:=wdReplaceAll
    .MoveRight Unit:=wdCharacter, Count:=1
    .Text = ",))"
    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 3
    MyRange.Select
'    .Copy
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \B\lc\{(\a\al\co2("
    .MoveLeft Unit:=wdCharacter, Count:=1
'    .Paste1/2
     .Find.Execute FindText:="))", ReplaceWith:=",", _
            Replace:=wdReplaceNone
            
'     .Find.Execute FindText:=" ", ReplaceWith:=",", _
            Replace:=wdReplaceOne
            
    .MoveRight Unit:=wdCharacter, Count:=1
'    .TypeBackspace
    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub shchAbs()                '|a|  EQ \B\bc\|fffd||fffd|(a) = \B\LC\{(\A\ar(a (a>0),0 (a=0),-a (a<0)))
'Dim MyRange As Word.Range, iCount As Integer   ', sTxt As String
'Set MyRange = Selection.Range
'iCount = MyRange.End - MyRange.Start + 1
'If iCount - 1 = 0 Then
'    MsgBox "|fffd||fffd||461||fffd||fffd||fffd||131||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||2be||fffd||fffd|"
'    Exit Sub
'End If

With Selection
'    .Font.Name = "|fffd||fffd||fffd||fffd|"
'    .Find.Wrap = wdFindStop
'    .Find.Execute FindText:="\", ReplaceWith:=",", _
            Replace:=wdReplaceAll
'    .MoveRight Unit:=wdCharacter, Count:=1
'    .Text = ")"
'    MyRange.SetRange Start:=MyRange.Start, End:=MyRange.End + 1
'    MyRange.Select
'    .Copy
    
    Application.Run "InsertFieldChars"
    .TypeBackspace
'    iCount = MyRange.End
''    .Delete Unit:=wdCharacter, Count:=1
'    .MoveRight Unit:=wdCharacter, Count:=1
    .TypeText Text:="EQ \B\bc\|fffd||fffd|(a) = \B\LC\{(\A\ar(a (a>0),0 (a=0),-a (a<0)))"
'    .MoveLeft Unit:=wdCharacter, Count:=1
''    .Paste1/2
'     .Find.Execute FindText:=")", ReplaceWith:=",", _
'            Replace:=wdReplaceNone
'    .MoveRight Unit:=wdCharacter, Count:=1
''    .TypeBackspace
'    .Delete Unit:=wdCharacter, Count:=1
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub shchSum()                '|fffd||fffd||fffd| EQ \i\su(i=1,n,xi)
With Selection
    Application.Run "InsertFieldChars"
    .TypeBackspace
    .TypeText Text:="EQ \i\su(i=1,n,xi)"
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub

Sub shchQj()                '|fffd||fffd||fffd| EQ \i\pr(i=1,n,xi)
With Selection
    Application.Run "InsertFieldChars"
    .TypeBackspace
    .TypeText Text:="EQ \i\pr(i=1,n,xi)"
   .Fields.ToggleShowCodes
    .MoveRight Unit:=wdCharacter, Count:=1
End With

End Sub



'Sub ToolsCustomize()
'    'sf
'    CommandBars("|37c||fffd||3b8||fffd||2bd|").Visible = False
'
'End Sub

Sub mAbout()
    frmAbout.Show
End Sub


'Sub delToolbar()
'    CommandBars("|fffd||fffd||fffd||fffd|").Delete
'    CommandBars("|fffd||fffd||467|").Delete
'    CommandBars("|fffd||fffd||fffd||fb||fffd||37c|").Delete
'    CommandBars("|37c||fffd||3b8||fffd||2bd|").Delete
'End Sub
Sub |52d||fffd||4fd||1e79|()
frmDZC.Show
End Sub

Sub |36c||3bb||fffd||fffd|()
frmEnterTWS.Show
End Sub

Sub |fffd||fffd||fffd||3fc||fffd|()
frmHhj.Show
End Sub

Sub s8K2L() '8|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim bTK As Boolean, aTemplate As Template, Count As Integer

    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientLandscape
        .TopMargin = CentimetersToPoints(1.2)
        .BottomMargin = CentimetersToPoints(1.2)
        .LeftMargin = CentimetersToPoints(1.8)
        .RightMargin = CentimetersToPoints(1.2)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(1.75)
        .PageWidth = CentimetersToPoints(38)
        .PageHeight = CentimetersToPoints(26.5)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionContinuous
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
        .LayoutMode = wdLayoutModeLineGrid
    End With
    
    
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    With ActiveDocument.PageSetup.TextColumns
        .SetCount NumColumns:=2
        .EvenlySpaced = True
        .LineBetween = False
        .Width = CentimetersToPoints(16.48)
        .Spacing = CentimetersToPoints(1.8)
    End With
    
        Count = 1
        For Each aTemplate In Templates
        '    MsgBox aTemplate.Name & " is template number " & Count
            If aTemplate.Name = "user.dot" Then
                bTK = True
                Exit For
            End If
            Count = Count + 1
        Next aTemplate
        If bTK = True Then
            If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
            ActiveWindow.Panes(2).Close
            End If
            If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
                ActivePane.View.Type = wdOutlineView Then
                ActiveWindow.ActivePane.View.Type = wdPrintView
            End If
            ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
            Selection.WholeStory

             Templates(Count).AutoTextEntries("ym").Insert Where:=Selection.Range
             Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
             ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
        End If


End Sub


Sub s8K3L() '8|fffd||fffd|3|fffd||fffd|
    Dim bTK As Boolean, aTemplate As Template, Count As Integer

    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientLandscape
        .TopMargin = CentimetersToPoints(1.2)
        .BottomMargin = CentimetersToPoints(1.2)
        .LeftMargin = CentimetersToPoints(1.8)
        .RightMargin = CentimetersToPoints(1.2)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(1.75)
        .PageWidth = CentimetersToPoints(38)
        .PageHeight = CentimetersToPoints(26.5)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionContinuous
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
        .LayoutMode = wdLayoutModeLineGrid
    End With
    
    
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    With ActiveDocument.PageSetup.TextColumns
        .SetCount NumColumns:=3
        .EvenlySpaced = True
        .LineBetween = False
        .Width = CentimetersToPoints(9)
        .Spacing = CentimetersToPoints(1.8)
    End With
    
        Count = 1
        For Each aTemplate In Templates
        '    MsgBox aTemplate.Name & " is template number " & Count
            If aTemplate.Name = "user.dot" Then
                bTK = True
                Exit For
            End If
            Count = Count + 1
        Next aTemplate
        If bTK = True Then
            If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
            ActiveWindow.Panes(2).Close
            End If
            If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
                ActivePane.View.Type = wdOutlineView Then
                ActiveWindow.ActivePane.View.Type = wdPrintView
            End If
            ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
            Selection.WholeStory

            Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
            Templates(Count).AutoTextEntries("ym3").Insert Where:=Selection.Range
             ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
        End If


End Sub


Sub sMfx() '|fffd||737||fffd||fffd||fffd|
    Dim bTK As Boolean, aTemplate As Template, Count As Integer

        Count = 1
        For Each aTemplate In Templates
        '    MsgBox aTemplate.Name & " is template number " & Count
            If aTemplate.Name = "user.dot" Then
                bTK = True
                Exit For
            End If
            Count = Count + 1
        Next aTemplate
        If bTK = True Then
            If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
            ActiveWindow.Panes(2).Close
            End If
            If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
                ActivePane.View.Type = wdOutlineView Then
                ActiveWindow.ActivePane.View.Type = wdPrintView
            End If
            ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
'            Selection.Paste

'            OLE1.Object.Select
             Templates(Count).AutoTextEntries("mfx").Insert Where:=Selection.Range
             Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
             ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
    
            With ActiveDocument.Styles("|4b3||fc|") '|4b3||fc||221||fffd||fffd||fffd||fffd||fffd||fffd|
                .AutomaticallyUpdate = False
                .BaseStyle = "|fffd||fffd||fffd||fffd|"
                .NextParagraphStyle = "|fffd||fffd||fffd||fffd|"
            End With
            With ActiveDocument.Styles("|4b3||fc|").ParagraphFormat
                With .Shading
                    .Texture = wdTextureNone
                    .ForegroundPatternColor = wdColorAutomatic
                    .BackgroundPatternColor = wdColorAutomatic
                End With
                .Borders(wdBorderLeft).LineStyle = wdLineStyleNone
                .Borders(wdBorderRight).LineStyle = wdLineStyleNone
                .Borders(wdBorderTop).LineStyle = wdLineStyleNone
                .Borders(wdBorderBottom).LineStyle = wdLineStyleNone
                With .Borders
                    .DistanceFromTop = 1
                    .DistanceFromLeft = 4
                    .DistanceFromBottom = 1
                    .DistanceFromRight = 4
                    .Shadow = False
                End With
            End With
            Selection.Style = ActiveDocument.Styles("|4b3||fc|")
            ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument

        End If
End Sub


Sub sA4()
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    With ActiveDocument.PageSetup.TextColumns
        .SetCount NumColumns:=1
        .EvenlySpaced = True
        .LineBetween = False
        '.Width = CentimetersToPoints(10)
        '.Spacing = CentimetersToPoints(1.8)
    End With

    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2.54)
        .BottomMargin = CentimetersToPoints(2.54)
        .LeftMargin = CentimetersToPoints(3.17)
        .RightMargin = CentimetersToPoints(3.17)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(1.75)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
        .LayoutMode = wdLayoutModeLineGrid
    End With
        ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
            Selection.WholeStory
            Selection.Delete
            ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument

    
End Sub


Sub sB4LL()

With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientLandscape
        .TopMargin = CentimetersToPoints(1.2)
        .BottomMargin = CentimetersToPoints(1.2)
        .LeftMargin = CentimetersToPoints(1.6)
        .RightMargin = CentimetersToPoints(1.6)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(1.75)
        .PageWidth = CentimetersToPoints(35.4)
        .PageHeight = CentimetersToPoints(25)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
        .LinesPage = 42
        .LayoutMode = wdLayoutModeLineGrid
    End With
    
        If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    With ActiveDocument.PageSetup.TextColumns
        .SetCount NumColumns:=2
        .EvenlySpaced = True
        .LineBetween = False
        .Width = CentimetersToPoints(15)
        .Spacing = CentimetersToPoints(1.8)
    End With
    
        Count = 1
        For Each aTemplate In Templates
        '    MsgBox aTemplate.Name & " is template number " & Count
            If aTemplate.Name = "user.dot" Then
                bTK = True
                Exit For
            End If
            Count = Count + 1
        Next aTemplate
        If bTK = True Then
            If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
            ActiveWindow.Panes(2).Close
            End If
            If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
                ActivePane.View.Type = wdOutlineView Then
                ActiveWindow.ActivePane.View.Type = wdPrintView
            End If
            ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
            Selection.WholeStory
'            Selection.Paste

'            OLE1.Object.Select
             Templates(Count).AutoTextEntries("ym").Insert Where:=Selection.Range
             Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
             ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
        End If


End Sub

Sub s16k()
    If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
        ActiveWindow.Panes(2).Close
    End If
    If ActiveWindow.ActivePane.View.Type <> wdPrintView Then
        ActiveWindow.ActivePane.View.Type = wdPrintView
    End If
    With ActiveDocument.PageSetup.TextColumns
        .SetCount NumColumns:=1
        .EvenlySpaced = True
        .LineBetween = False
        '.Width = CentimetersToPoints(10)
        '.Spacing = CentimetersToPoints(1.8)
    End With
With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.2)
        .RightMargin = CentimetersToPoints(2.2)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(1.75)
        .PageWidth = CentimetersToPoints(18.4)
        .PageHeight = CentimetersToPoints(26)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
        '.CharsLine = 22
        .LayoutMode = wdLayoutModeLineGrid
    End With
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
            Selection.WholeStory
            Selection.Delete
            ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub


Sub Yh()
'
' Macro1 Macro
' |fffd||fffd||fffd||fffd| 06-4-13 |fffd||fffd| |5a3||fffd||fffd||fffd||fffd| |bc||fffd||fffd|
'
    With ActiveDocument.WebOptions
        .RelyOnCSS = True
        .OptimizeForBrowser = True
        .BrowserLevel = wdBrowserLevelMicrosoftInternetExplorer5
        .OrganizeInFolder = True
        .UseLongFileNames = True
        .RelyOnVML = False
        .AllowPNG = False
        .ScreenSize = msoScreenSize800x600
        .PixelsPerInch = 96
        .Encoding = msoEncodingSimplifiedChineseGBK
    End With
    With Application.DefaultWebOptions
        .UpdateLinksOnSave = False
        .CheckIfOfficeIsHTMLEditor = False
        .CheckIfWordIsDefaultHTMLEditor = False
        .AlwaysSaveInDefaultEncoding = False
    End With
    Application.DisplayStatusBar = True
    With ActiveWindow
        .DisplayHorizontalScrollBar = True
        .DisplayVerticalScrollBar = True
        .DisplayLeftScrollBar = False
        .StyleAreaWidth = CentimetersToPoints(0)
        .DisplayVerticalRuler = True
        .DisplayRightRuler = False
        .DisplayScreenTips = False
        With .View
            .ShowAnimation = False
            .Draft = False
            .WrapToWindow = False
            .ShowPicturePlaceHolders = False
            .ShowFieldCodes = False
            .ShowBookmarks = False
            .FieldShading = wdFieldShadingWhenSelected
            .ShowTabs = False
            .ShowSpaces = False
            .ShowParagraphs = True
            .ShowHyphens = False
            .ShowHiddenText = False
            .ShowAll = False
            .ShowDrawings = True
            .ShowObjectAnchors = False
            .ShowTextBoundaries = False
            .ShowHighlight = True
            .ShowOptionalBreaks = False
        End With
    End With
    With Options
        .Pagination = True
        .WPHelp = False
        .WPDocNavKeys = False
        .ShortMenuNames = False
        .RTFInClipboard = True
        .BlueScreen = False
        .EnableSound = False
        .ConfirmConversions = False
        .UpdateLinksAtOpen = False
        .SendMailAttach = False
        .MeasurementUnit = wdCentimeters
        .AllowPixelUnits = False
        .UseCharacterUnit = True
        .AnimateScreenMovements = True
        .VirusProtection = False
        .ApplyFarEastFontsToAscii = False
        .InterpretHighAnsi = wdAutoDetectHighAnsiFarEast
    End With
    Application.DisplayRecentFiles = True
    RecentFiles.Maximum = 4
    With Options
        .ReplaceSelection = True
        .AllowDragAndDrop = True
        .AutoWordSelection = False
        .INSKeyForPaste = False
        .SmartCutPaste = True
        .AllowAccentedUppercase = False
        .PictureEditor = "Microsoft Word"
        .TabIndentKey = True
        .Overtype = False
        .AllowClickAndTypeMouse = True
        .AutoKeyboardSwitching = False
        .IMEAutomaticControl = True
    End With
    ActiveDocument.ClickAndTypeParagraphStyle = "|fffd||fffd||fffd||fffd|"
    With Options
        .UpdateFieldsAtPrint = False
        .UpdateLinksAtPrint = False
        .DefaultTray = "|2b9||fffd||f4||fffd||4e1||fffd||fffd||fffd||fffd||fffd||fffd|"
        .PrintBackground = True
        .PrintProperties = False
        .PrintFieldCodes = False
        .PrintComments = False
        .PrintHiddenText = False
        .PrintDrawingObjects = True
        .PrintDraft = False
        .PrintReverse = False
        .MapPaperSize = True
        .PrintOddPagesInAscendingOrder = False
        .PrintEvenPagesInAscendingOrder = False
    End With
    With ActiveDocument
        .PrintPostScriptOverText = False
        .PrintFormsData = False
    End With
    With Options
        .AllowFastSave = False
        .BackgroundSave = True
        .CreateBackup = False
        .SavePropertiesPrompt = False
        .SaveInterval = 10
        .SaveNormalPrompt = False
        .OptimizeForWord97byDefault = False
    End With
    With ActiveDocument
        .ReadOnlyRecommended = False
        .EmbedTrueTypeFonts = False
        .SaveFormsData = False
        .SaveSubsetFonts = False
        .Password = ""
        .WritePassword = ""
        .OptimizeForWord97 = False
    End With
    Application.DefaultSaveFormat = ""
    With Options
        .CheckSpellingAsYouType = False
        .CheckGrammarAsYouType = False
        .SuggestSpellingCorrections = False
        .SuggestFromMainDictionaryOnly = False
        .CheckGrammarWithSpelling = False
        .ShowReadabilityStatistics = False
        .IgnoreUppercase = True
        .IgnoreMixedDigits = True
        .IgnoreInternetAndFileAddresses = True
        .AllowCombinedAuxiliaryForms = True
        .EnableMisusedWordsDictionary = True
        .AllowCompoundNounProcessing = True
        .UseGermanSpellingReform = True
    End With
    ActiveDocument.ShowGrammaticalErrors = True
    ActiveDocument.ShowSpellingErrors = True
    Languages(wdEnglishUS).SpellingDictionaryType = wdSpelling
    Languages(wdSimplifiedChinese).DefaultWritingStyle = "|fffd||fffd||5fc|"
    ActiveDocument.ActiveWritingStyle(wdSimplifiedChinese) = "|fffd||fffd||5fc|"
    With CustomDictionaries
        .ClearAll
        .Add("C:\WINDOWS\Application Data\Microsoft\Proof\CUSTOM.DIC"). _
            LanguageSpecific = False
        .ActiveCustomDictionary = CustomDictionaries.Item( _
            "C:\WINDOWS\Application Data\Microsoft\Proof\CUSTOM.DIC")
    End With
    With Options
        .InsertedTextMark = wdInsertedTextMarkUnderline
        .InsertedTextColor = wdByAuthor
        .DeletedTextMark = wdDeletedTextMarkStrikeThrough
        .DeletedTextColor = wdByAuthor
        .RevisedPropertiesMark = wdRevisedPropertiesMarkNone
        .RevisedPropertiesColor = wdAuto
        .RevisedLinesMark = wdRevisedLinesMarkOutsideBorder
        .RevisedLinesColor = wdAuto
    End With
    Application.UserName = "|5a3||fffd||fffd||fffd||fffd|"
    Application.UserInitials = "|5a3||fffd||fffd||fffd||fffd|"
    Application.UserAddress = ""
    With ActiveDocument
        .Compatibility(wdNoTabHangIndent) = False
        .Compatibility(wdNoSpaceRaiseLower) = False
        .Compatibility(wdPrintColBlack) = False
        .Compatibility(wdWrapTrailSpaces) = False
        .Compatibility(wdNoColumnBalance) = False
        .Compatibility(wdConvMailMergeEsc) = False
        .Compatibility(wdSuppressSpBfAfterPgBrk) = False
        .Compatibility(wdSuppressTopSpacing) = False
        .Compatibility(wdOrigWordTableRules) = False
        .Compatibility(wdTransparentMetafiles) = False
        .Compatibility(wdShowBreaksInFrames) = False
        .Compatibility(wdSwapBordersFacingPages) = False
        .Compatibility(wdLeaveBackslashAlone) = False
        .Compatibility(wdExpandShiftReturn) = False
        .Compatibility(wdDontULTrailSpace) = False
        .Compatibility(wdDontBalanceSingleByteDoubleByteWidth) = False
        .Compatibility(wdSuppressTopSpacingMac5) = False
        .Compatibility(wdSpacingInWholePoints) = False
        .Compatibility(wdPrintBodyTextBeforeHeader) = False
        .Compatibility(wdNoLeading) = False
        .Compatibility(wdNoSpaceForUL) = False
        .Compatibility(wdMWSmallCaps) = False
        .Compatibility(wdNoExtraLineSpacing) = False
        .Compatibility(wdTruncateFontHeight) = False
        .Compatibility(wdUsePrinterMetrics) = False
        .Compatibility(wdSubFontBySize) = False
        .Compatibility(wdWW6BorderRules) = False
        .Compatibility(wdExactOnTop) = False
        .Compatibility(wdSuppressBottomSpacing) = False
        .Compatibility(wdWPSpaceWidth) = False
        .Compatibility(wdWPJustification) = False
        .Compatibility(wdLineWrapLikeWord6) = False
        .Compatibility(wdShapeLayoutLikeWW8) = False
        .Compatibility(wdFootnoteLayoutLikeWW8) = False
        .Compatibility(wdDontUseHTMLParagraphAutoSpacing) = False
        .Compatibility(wdDontAdjustLineHeightInTable) = False
        .Compatibility(wdForgetLastTabAlignment) = False
        .Compatibility(wdAutospaceLikeWW7) = False
        .Compatibility(wdAlignTablesRowByRow) = False
        .Compatibility(wdLayoutRawTableWidth) = False
        .Compatibility(wdLayoutTableRowsApart) = False
        '.Compatibility(wdUseWord97LineBreakingRules) = False
    End With
    ActiveDocument.KerningByAlgorithm = True
    ActiveDocument.JustificationMode = wdJustificationModeCompress
    ActiveDocument.FarEastLineBreakLanguage = wdLineBreakJapanese
    ActiveDocument.FarEastLineBreakLevel = wdFarEastLineBreakLevelNormal
    ActiveDocument.FarEastLineBreakLanguage = wdLineBreakKorean
    ActiveDocument.FarEastLineBreakLevel = wdFarEastLineBreakLevelNormal
    ActiveDocument.FarEastLineBreakLanguage = wdLineBreakTraditionalChinese
    ActiveDocument.FarEastLineBreakLevel = wdFarEastLineBreakLevelNormal
    ActiveDocument.FarEastLineBreakLanguage = wdLineBreakSimplifiedChinese
    ActiveDocument.FarEastLineBreakLevel = wdFarEastLineBreakLevelNormal
    With ActiveDocument
        .SnapToGrid = False
        .SnapToShapes = False
        .GridDistanceHorizontal = CentimetersToPoints(2.21)
        .GridDistanceVertical = CentimetersToPoints(0.54)
        .GridOriginHorizontal = CentimetersToPoints(2.2)
        .GridOriginVertical = CentimetersToPoints(2)
        .GridSpaceBetweenHorizontalLines = 0
        .GridSpaceBetweenVerticalLines = 1
        .GridOriginFromMargin = True
    End With
    Options.DisplayGridLines = False
End Sub


'* +++++++++++++++++++++++++++++++++++++++
'^The Code CopyIn [|fffd||fffd||5fc||123||fffd||fffd|-|123||fffd||fffd| 1]^'
'* --------------------------------------------------------------------------

Sub |fffd||fffd||fffd||fffd||fffd||fffd||3f5|()
    frmDaiShuDraw.Show
End Sub
'----------------------
Sub SelAllShapes()
    Dim AllShapes(), ShapeCount As Integer, N As Shape, Y As Integer
    ShapeCount = ActiveDocument.Shapes.Count
    Y = 0
    '|fffd||fffd||fffd||fffd||4bb||3ac||fffd||3f1||fffd||271||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd| 0 |fffd||fffd||2bc|
    ReDim AllShapes(ShapeCount - BeforeShapes - 1)
    With ActiveDocument
        For Each N In .Shapes
            If N.Name Like "|fffd||fffd||fffd||fffd||37c||fffd||fffd|*" = False Then
                AllShapes(Y) = N.Name
                Y = Y + 1
            End If
        Next N
        With .Shapes.Range(AllShapes).Group
'            .ZOrder msoSendToBack
             .ZOrder msoSendToBack
            .Select
            '            .Name = "|fffd||fffd||fffd||fffd||3f5|"
        End With
    End With
End Sub
'----------------------
'* +++++++++++++++++++++++++++++++++++++++
'^The Code CopyIn [|fffd||fb||fffd||fffd||fffd||fffd||fffd|-UserForm1]^'
'* --------------------------------------------------------------------------


' InQuest injected base64 decoded content
' +-jw
' zS"r
' 0>'-
' bzWR
' z{^uJiz
' )br@'u<
' O*^=
' Z+aJ
' *&n)
' uj+v
' j{)j
' *Zr)
' ,yj+w

INQUEST-PP=macro
