Attribute VB_Name = "Module1"
Public Function NewClsObiGrp() As clsObiGrp
    Set NewClsObiGrp = New clsObiGrp
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "clsDrawArea"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=======================================================
' class for drawing area
'
' 2007.02 WZH copied from SUBHSK.xls (SonyStat3P6)
'=======================================================
Option Explicit

Private Const HGAP = 0
Private Const VGAP = 10

Private m_obibox() As clsTextBox
Private m_type As Integer
Private m_left As Double
Private m_top As Double
Private m_width As Double
Private m_height As Double
Private m_rownum As Long
Private m_colnum As Long

Private Sub Class_Terminate()
    Dim i As Long
    For i = 1 To m_rownum * m_colnum
        Set m_obibox(i) = Nothing
    Next i
End Sub

Private Function GetObiWidth(ByVal val As Double, ByVal obiWidth) As Double
    GetObiWidth = val / 100# * 72# * obiWidth
End Function

Private Function GetObiHeight(ByVal obiHeight As Double) As Double
    GetObiHeight = 72# * obiHeight
End Function

Private Function GetObiColor(ByVal ind As Integer) As Integer
    ind = ind Mod 6
    If ind = 1 Then
        GetObiColor = 34
    ElseIf ind = 2 Then
        GetObiColor = 19
    ElseIf ind = 3 Then
        GetObiColor = 24
    ElseIf ind = 4 Then
        GetObiColor = 35
    ElseIf ind = 5 Then
        GetObiColor = 40
    ElseIf ind = 6 Then
        GetObiColor = 22
    Else
        GetObiColor = 0
    End If
End Function

'draw text box and division line
Private Sub DrawObi(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Double)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    For j = 1 To m_colnum
        colorindex = GetObiColor(j)
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft, dbltop, xlContinuous, colorindex, textDsp)
            If i > 1 Then
                Set shp = parent.AddLine(m_obibox(k).left + m_obibox(k).width + dblleft, m_obibox(k).top + dbltop, _
                                       m_obibox(k - m_colnum).left + m_obibox(k - m_colnum).width + dblleft, m_obibox(k).top + dbltop - VGAP)
                shp.DrawingObject.Border.LineStyle = xlDot
            End If
        Next i
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop + height - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

'draw a text box without border
Private Sub DrawText(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    colorindex = 0
    For j = 1 To m_colnum
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft, dbltop, xlNone, colorindex, 1)
        Next i
    Next j
End Sub

'draw a text box without border and division line
Private Sub DrawTitle(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim shp As Shape
    colorindex = 0
    For j = 1 To m_colnum
        For i = 1 To m_rownum
            k = (i - 1) * m_colnum + j
            Call m_obibox(k).DrawMe(parent, dblleft + 1, dbltop, xlNone, colorindex, 1)
            Set shp = parent.AddLine(m_obibox(k).left + m_obibox(k).width + dblleft, m_obibox(k).top + dbltop, _
                                     m_obibox(k).left + m_obibox(k).width + dblleft, m_obibox(k).top + dbltop + m_obibox(k).height)
            shp.DrawingObject.Border.LineStyle = xlDot
        Next i
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop + height - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

'draw division lines
Public Sub DrawBorder(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal allHeight As Double)
    Dim shp As Shape
    Set shp = parent.AddLine(dblleft, dbltop + allHeight, dblleft, dbltop + height - VGAP)
    Set shp = parent.AddLine(dblleft, dbltop + allHeight, dblleft + width - VGAP, dbltop + allHeight)
    Set shp = parent.AddLine(dblleft, dbltop + height - VGAP, dblleft + width - VGAP, dbltop + height - VGAP)
End Sub

Public Function GetTitleWidth() As Double
    Dim i As Long
    Dim dblWidth As Double
    For i = 1 To m_colnum
        dblWidth = dblWidth + m_obibox(i).width
    Next i
    GetTitleWidth = dblWidth
End Function

'draw division lines from obi graphs to title text boxes
Public Sub DrawToTitle(ByVal parent As Shapes, ByVal dblleft As Double, dbltop As Double)
    Dim i As Long, j As Long, k As Long
    Dim colorindex As Long
    Dim dblWidth As Double
    Dim shp As Shape
    colorindex = 0
    dblWidth = GetTitleWidth()
    dblWidth = dblWidth / m_colnum
        
    For j = 1 To m_colnum
        Set shp = parent.AddLine(m_obibox(j).left + m_obibox(j).width + dblleft, m_obibox(j).top + dbltop, _
                                 dblWidth * j + dblleft, m_obibox(j).top + dbltop - VGAP)
        shp.DrawingObject.Border.LineStyle = xlDot
    Next j
    Set shp = parent.AddLine(dblleft, dbltop, dblleft, dbltop - VGAP)
    shp.DrawingObject.Border.LineStyle = xlDot
End Sub

Public Sub DrawMe(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, ByVal textDsp As Integer)
    Select Case m_type
    Case 1:
        Call DrawTitle(parent, dblleft, dbltop, textDsp)
    Case 3, 4:
        Call DrawObi(parent, dblleft, dbltop, textDsp)
    Case 2, 5, 6:
        Call DrawText(parent, dblleft, dbltop, textDsp)
    Case 11, 12, 13:
        Call DrawText(parent, dblleft, dbltop, textDsp)
    End Select
End Sub

Public Property Get width() As Variant
    Dim i As Long, j As Long, k As Long
    Dim tmpMax As Double, dblMax As Double
    dblMax = 0
    For i = 1 To m_rownum
        tmpMax = 0
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            tmpMax = tmpMax + m_obibox(k).width + HGAP
        Next j
        If tmpMax > dblMax Then
            dblMax = tmpMax
        End If
    Next i
    width = dblMax
End Property

Public Property Get height() As Variant
    Dim i As Long, j As Long, k As Long
    Dim l As Double
    l = 0
    For i = 1 To m_rownum
        k = (i - 1) * m_colnum + 1
        l = l + m_obibox(k).height + VGAP
    Next i
    height = l
End Property

Private Function GetMaxLength(aryVal() As Variant)
    Dim i As Long, j As Long, k As Long
    Dim lngMax As Long, l As Long
    lngMax = 0
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            l = LenB(StrConv(aryVal(i, j), vbFromUnicode))
            If lngMax < l Then
                lngMax = l
            End If
        Next j
    Next i
    GetMaxLength = lngMax
End Function

'set data source for total data area
Private Sub AllSourceData(ByVal dataRge As Range, ByVal fontsize As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).left + m_obibox(k - 1).width + HGAP
            End If
            dblWidth = GetObiWidth(CDbl(aryVal(i, j)), obiWidth)
            dblHeight = GetObiHeight(obiHeight)
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for average data area
Private Sub AvgSourceData(ByVal dataRge As Range, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, _
                         ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    Dim maxlen As Long
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    maxlen = GetMaxLength(aryVal)
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    If maxlen < Len("Average") Then maxlen = Len("Average")
    m_rownum = m_rownum + 1
    ReDim m_obibox(1 To m_rownum * m_colnum)
    dblHeight = GetObiHeight(obiHeight)
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < 50 Then dblWidth = 50
    Set m_obibox(1) = New clsTextBox
    Call m_obibox(1).InitObiBox("Average", fontsize, 0, -GetObiHeight(obiHeight) - VGAP, dblWidth, dblHeight)
    For i = 2 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = m_obibox(k - m_colnum).top + m_obibox(k - m_colnum).height + VGAP
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i - 1, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for obi data area
Private Sub DataSourceData(ByVal dataRge As Range, ByVal fontsize As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).top + m_obibox(k - m_colnum).height + VGAP
            End If
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).left + m_obibox(k - 1).width + HGAP
            End If
            dblWidth = GetObiWidth(CDbl(aryVal(i, j)), obiWidth)
            dblHeight = GetObiHeight(obiHeight)
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for name area
Private Sub NameSourceData(ByVal dataRge As Range, _
                         ByVal setHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    dblHeight = setHeight / m_rownum - VGAP
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1)) + 10
    If dblWidth < OneCharWidth Then dblWidth = OneCharWidth
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).top + m_obibox(k - m_colnum).height + VGAP
            End If
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for N data area
Private Sub NSourceData(ByVal dataRge As Range, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, _
                         ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim aryVal() As Variant
    Dim maxlen As Long
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    m_rownum = m_rownum + 1
    ReDim m_obibox(1 To m_rownum * m_colnum)
    dblHeight = GetObiHeight(obiHeight)
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < 50 Then dblWidth = 50
    Set m_obibox(1) = New clsTextBox
    Call m_obibox(1).InitObiBox("n", fontsize, 0, -GetObiHeight(obiHeight) - VGAP, dblWidth, dblHeight)
    For i = 2 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = m_obibox(k - m_colnum).top + m_obibox(k - m_colnum).height + VGAP
            dblleft = 0
            Call m_obibox(k).InitObiBox(aryVal(i - 1, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set data source for title area
Sub TitleSourceData(ByVal dataRge As Range, _
                         ByVal setWidth As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long
    Dim aryVal() As Variant
    If dataRge Is Nothing Then
        m_rownum = 0
        m_colnum = 0
        Exit Sub
    End If
    aryVal = dataRge.Value
    m_rownum = dataRge.Rows.Count
    m_colnum = dataRge.Columns.Count
    maxlen = GetMaxLength(aryVal)
    
    dblWidth = setWidth / m_colnum
    dblHeight = maxlen * OneCharHeight \ (dblWidth \ OneCharWidth + 1)
    If dblHeight < OneCharHeight Then dblHeight = OneCharHeight
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).left + m_obibox(k - 1).width + HGAP
            End If
            Call m_obibox(k).InitObiBox(aryVal(i, j), fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

Public Sub SetSourceData(ByVal nType As Integer, ByVal dataRge As Range, _
                         ByVal setWidth As Double, ByVal setHeight As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    m_type = nType
    Select Case m_type
    Case 1:
        Call TitleSourceData(dataRge, setWidth, fontsize, OneCharWidth, OneCharHeight)
    Case 2:
        Call NameSourceData(dataRge, setHeight, fontsize, OneCharWidth, OneCharHeight)
    Case 3:
        Call AllSourceData(dataRge, fontsize, obiWidth, obiHeight)
    Case 4:
        Call DataSourceData(dataRge, fontsize, obiWidth, obiHeight)
    Case 5:
        Call NSourceData(dataRge, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    Case 6:
        Call AvgSourceData(dataRge, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    End Select
End Sub

'set text for title name area or x-axis name area
Private Sub TNameText(ByVal strText As String, _
                         ByVal setWidth As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long

    m_rownum = 1
    m_colnum = 1
    maxlen = LenB(strText)
    
    dblWidth = setWidth / m_colnum
    dblHeight = maxlen * OneCharHeight \ (dblWidth \ OneCharWidth + 1)
    If dblHeight < OneCharHeight Then dblHeight = OneCharHeight
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            dbltop = 0
            If j = 1 Then
                dblleft = 0
            Else
                dblleft = m_obibox(k - 1).left + m_obibox(k - 1).width + HGAP
            End If
            Call m_obibox(k).InitObiBox(strText, fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

'set text for Y-axis name area
Private Sub YNameText(ByVal strText As String, _
                         ByVal setHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    Dim i As Long, j As Long, k As Long
    Dim dblleft As Double, dbltop As Double, dblWidth As Double, dblHeight As Double
    Dim maxlen As Long

    m_rownum = 1
    m_colnum = 1
    maxlen = LenB(strText)
    dblHeight = setHeight / m_rownum - VGAP
    dblWidth = (maxlen * OneCharWidth \ (dblHeight \ OneCharHeight + 1))
    If dblWidth < OneCharWidth Then dblWidth = OneCharWidth
    ReDim m_obibox(1 To m_rownum * m_colnum)
    For i = 1 To m_rownum
        For j = 1 To m_colnum
            k = (i - 1) * m_colnum + j
            Set m_obibox(k) = New clsTextBox
            If i = 1 Then
                dbltop = 0
            Else
                dbltop = m_obibox(k - m_colnum).top + m_obibox(k - m_colnum).height + VGAP
            End If
            dblleft = 0
            Call m_obibox(k).InitObiBox(strText, fontsize, dblleft, dbltop, dblWidth, dblHeight)
        Next j
    Next i
End Sub

Public Sub SetTextData(ByVal nType As Integer, ByVal strText As String, _
                         ByVal setWidth As Double, ByVal setHeight As Double, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, ByVal fontsize As Double, _
                         ByVal OneCharWidth As Double, ByVal OneCharHeight As Double)
    m_type = nType
    Select Case m_type
    Case 11, 12:
        Call TNameText(strText, setWidth, fontsize, OneCharWidth, OneCharHeight)
    Case 13:
        Call YNameText(strText, setHeight, fontsize, OneCharWidth, OneCharHeight)
    End Select
End Sub

'=== EOF ===


Attribute VB_Name = "clsObiGrp"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=======================================================
' class for OBI graph
'
' 2007.02 WZH copied from SUBHSK.xls (SonyStat3P6)
'=======================================================
Option Explicit

Private m_titlearea As clsDrawArea  'clsTitleArea
Private m_namearea As clsDrawArea  'clsNameArea
Private m_dataarea As clsDrawArea  'clsDataArea
Private m_allarea As clsDrawArea  'clsAllArea
Private m_narea As clsDrawArea  'clsNArea
Private m_avgarea As clsDrawArea  'clsAvgArea
Private m_tname As clsDrawArea    'clsTitleArea
Private m_yname As clsDrawArea    'clsYaxisNameArea
Private m_xname As clsDrawArea    'clsXaxisNameArea

Private m_left As Double
Private m_top As Double
Private m_width As Double
Private m_height As Double
Private m_rownum As Long
Private m_colnum As Long
Private m_bN As Boolean
Private m_bAvg As Boolean
Private m_bAll As Boolean
Private m_parent As Shapes

Private Sub Class_Initialize()
    Set m_titlearea = New clsDrawArea  'clsTitleArea
    Set m_namearea = New clsDrawArea  'clsNameArea
    Set m_dataarea = New clsDrawArea  'clsDataArea
    Set m_allarea = New clsDrawArea  'clsAllArea
    Set m_narea = New clsDrawArea  'clsNArea
    Set m_avgarea = New clsDrawArea  'clsAvgArea
    Set m_tname = New clsDrawArea   'clsTitleArea
    Set m_yname = New clsDrawArea   'clsYaxisNameArea
    Set m_xname = New clsDrawArea   'clsXaxisNameArea
End Sub

Private Sub Class_Terminate()
    Set m_titlearea = Nothing
    Set m_namearea = Nothing
    Set m_dataarea = Nothing
    Set m_allarea = Nothing
    Set m_narea = Nothing
    Set m_avgarea = Nothing
    Set m_tname = Nothing
    Set m_yname = Nothing
    Set m_xname = Nothing
End Sub

Private Function Inch2Pnt(ByVal vInch As Double) As Double
    Inch2Pnt = vInch * 72#
End Function

'Get the height of text box drawing one char
Private Function GetOneCharHeight(ByVal fontsize As Double) As Double
    Dim shp As Shape
    Set shp = m_parent.AddTextbox(msoTextOrientationHorizontal, 1, 1, 2, 2)
    shp.DrawingObject.Font.Size = fontsize
    shp.DrawingObject.Caption = "W"
    shp.DrawingObject.AutoSize = True
    GetOneCharHeight = shp.height
    shp.Delete
End Function

'Get the width of text box drawing one char
Private Function GetOneCharWidth(ByVal fontsize As Double) As Double
    Dim shp As Shape
    Set shp = m_parent.AddTextbox(msoTextOrientationHorizontal, 1, 1, 2, 2)
    'If getExcelVerNo() >= 12 Then
        shp.TextFrame2.WordWrap = msoFalse
    'End If
    shp.DrawingObject.Font.Size = fontsize
    shp.TextFrame.MarginLeft = 2
    shp.TextFrame.MarginTop = 0
    shp.TextFrame.MarginRight = 0
    shp.TextFrame.MarginBottom = 0
    shp.DrawingObject.Caption = "W"
    shp.DrawingObject.AutoSize = True
    GetOneCharWidth = shp.width 'shp.Height * 0.78
    shp.Delete
End Function

'Draw graph
Public Sub DrawGraph(ByVal outrge As Range, ByVal refrge As Range, _
                         ByVal bAll As Boolean, ByVal bN As Boolean, ByVal bAvg As Boolean, ByVal bAllDsp As Boolean, _
                         ByVal obiWidth As Double, ByVal obiHeight As Double, _
                         ByVal textHeight As Double, ByVal textDsp As Integer, _
                         ByVal strTName As String, ByVal strYName As String, ByVal strXName As String)
    Dim titlerge As Range, allrge As Range, dataRge As Range, namerge As Range
    Dim nrge As Range, avgrge As Range, bgnrge As Range
    Dim i As Long, j As Long, k As Long
    Dim rownum As Long, colnum As Long
    Dim allwidth As Double, datawidth As Double
    Dim allHeight As Double, dataheight As Double
    Dim OneCharWidth As Double, OneCharHeight As Double
    Dim fontsize As Double
    Dim cht As Chart
    
    On Error Resume Next
    If textDsp = 0 Then
        textDsp = 3
    ElseIf textDsp = 1 Then
        textDsp = 2
    ElseIf textDsp = 2 Then
        textDsp = 0
    End If
    
    'add a chart
    Charts.Add
    ActiveChart.Location xlLocationAsObject, outrge.Worksheet.Name
    ActiveChart.ChartArea.AutoScaleFont = False
    For i = 1 To ActiveChart.SeriesCollection.Count
        ActiveChart.SeriesCollection(1).Delete
    Next i
    
    'set patent to shapes
    Set m_parent = ActiveChart.Shapes
    
    fontsize = Inch2Pnt(textHeight)
    'get basic information
    OneCharWidth = GetOneCharWidth(fontsize)
    OneCharHeight = GetOneCharHeight(fontsize)
    
    rownum = refrge.Rows.Count
    colnum = refrge.Columns.Count
    
    'get the start cell
    Set bgnrge = refrge.Range("A1")
    
    'the following code set data range for all areas
    
    'title area
    Set titlerge = Range(bgnrge(1, 2), bgnrge(1, colnum))
    If (bAll) And (Not bAllDsp) Then
        Set bgnrge = bgnrge(2, 1)
        bAll = False
        rownum = rownum - 1
    End If
    
    'name area
    Set namerge = Range(bgnrge(2, 1), bgnrge(rownum, 1))
    If bAll Then
        Set allrge = Range(bgnrge(2, 2), bgnrge(2, colnum))
        Set dataRge = Range(bgnrge(3, 2), bgnrge(rownum, colnum))
    Else
        Set allrge = Nothing
        Set dataRge = Range(bgnrge(2, 2), bgnrge(rownum, colnum))
    End If
    
    'n area
    If bN Then
        Set nrge = Range(bgnrge(2, colnum + 1), bgnrge(rownum, colnum + 1))
    Else
        Set nrge = Nothing
    End If
    
    'average area
    If bAvg Then
        Set avgrge = Range(bgnrge(2, colnum + 2), bgnrge(rownum, colnum + 2))
    Else
        Set avgrge = Nothing
    End If
    
    'the following code set data source for all areas
    
    Call m_dataarea.SetSourceData(4, dataRge, 0, 0, obiWidth, obiHeight, fontsize, 0, 0)
    datawidth = m_dataarea.width
    dataheight = m_dataarea.height
    If bAll And bAllDsp Then
        Call m_allarea.SetSourceData(3, allrge, 0, 0, obiWidth, obiHeight, fontsize, 0, 0)
    End If
    Call m_titlearea.SetSourceData(1, titlerge, IIf(bAll And bAllDsp, m_allarea.GetTitleWidth(), m_dataarea.GetTitleWidth()), 0, 0, 0, _
                                    fontsize, OneCharWidth, OneCharHeight)
    Call m_namearea.SetSourceData(2, namerge, 0, m_dataarea.height + m_allarea.height, 0, 0, fontsize, OneCharWidth, OneCharHeight)
    If bN Then
        Call m_narea.SetSourceData(5, nrge, 0, 0, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    End If
    If bAvg Then
        Call m_avgarea.SetSourceData(6, avgrge, 0, 0, obiWidth, obiHeight, fontsize, OneCharWidth, OneCharHeight)
    End If
    
    'title name area
    If strTName <> vbNullString Then
        Call m_tname.SetTextData(11, strTName, m_dataarea.width + m_narea.width + m_avgarea.width, 0, 0, 0, _
                                    fontsize, OneCharWidth, OneCharHeight)
    End If
    
    'X axis name area
    If strXName <> vbNullString Then
        Call m_xname.SetTextData(12, strXName, m_dataarea.width + m_narea.width + m_avgarea.width, 0, 0, 0, _
                                    fontsize, OneCharWidth, OneCharHeight)
    End If
    
    'Y axis name area
    If strYName <> vbNullString Then
        Call m_yname.SetTextData(13, strYName, 0, m_dataarea.height, 0, 0, _
                                    fontsize, OneCharWidth, OneCharHeight)
    End If
    
    'drawing
    Call DrawMe(outrge, textDsp)
    
    outrge.Select
    On Error GoTo 0
End Sub
                         
'draw obj graph
Private Sub DrawMe(ByVal outrge As Range, ByVal textDsp As Integer)
    Dim dblWidth As Double, dblHeight As Double
    Dim dblleft As Double, dbltop As Double
    Dim namewd As Double, nameht As Double
    Dim titlewd As Double, titleht As Double
    Dim allwd As Double, allht As Double
    Dim datawd As Double, dataht As Double
    Dim nwd As Double, nht As Double
    Dim avgwd As Double, avght As Double
    Dim tnamewd As Double, tnameht As Double
    Dim xnamewd As Double, xnameht As Double
    Dim ynamewd As Double, ynameht As Double
    Dim objshp As Shapes
    Dim aryShp() As Variant
    Dim firstshp As Long, lastshp As Long, shpcnt As Long
    Dim i As Long
    
    On Error Resume Next
    
    'get the width and height of all areas
    namewd = m_namearea.width
    nameht = m_namearea.height
    titlewd = m_titlearea.width
    titleht = m_titlearea.height
    allwd = m_allarea.width
    allht = m_allarea.height
    datawd = m_dataarea.width
    dataht = m_dataarea.height
    nwd = m_narea.width
    nht = m_narea.height
    avgwd = m_avgarea.width
    avght = m_avgarea.height
    tnamewd = m_tname.width
    tnameht = m_tname.height
    xnamewd = m_xname.width
    xnameht = m_xname.height
    ynamewd = m_yname.width
    ynameht = m_yname.height
    
    'total width and height
    dblWidth = ynamewd + namewd + datawd + nwd + avgwd
    dblHeight = tnameht + xnameht + titleht + allht + dataht
    
    'adjust chart size
    m_parent.parent.parent.width = dblWidth + 50
    m_parent.parent.parent.height = dblHeight + 50
    
    Set objshp = m_parent

    Set m_parent = ActiveSheet.Shapes
    firstshp = m_parent.Count + 1
    
    Call m_parent.AddTextbox(msoTextOrientationHorizontal, outrge.left, outrge.top, dblWidth + 50, dblHeight + 50)
    dblleft = outrge.left + 25
    dbltop = outrge.top + 25
    Call m_tname.DrawMe(m_parent, ynamewd + namewd + dblleft, dbltop, textDsp)
    Call m_xname.DrawMe(m_parent, ynamewd + namewd + dblleft, tnameht + dbltop, textDsp)
    Call m_yname.DrawMe(m_parent, dblleft, tnameht + xnameht + titleht + allht + dbltop, textDsp)
    Call m_titlearea.DrawMe(m_parent, ynamewd + namewd + dblleft, tnameht + xnameht + dbltop, textDsp)
    Call m_allarea.DrawMe(m_parent, ynamewd + namewd + dblleft, tnameht + xnameht + titleht + dbltop, textDsp)
    Call m_namearea.DrawMe(m_parent, ynamewd + dblleft, tnameht + xnameht + titleht + dbltop, textDsp)
    Call m_dataarea.DrawMe(m_parent, ynamewd + namewd + dblleft, tnameht + xnameht + titleht + allht + dbltop, textDsp)
    Call m_narea.DrawMe(m_parent, ynamewd + namewd + datawd + dblleft + 20, tnameht + xnameht + titleht + dbltop, textDsp)
    Call m_avgarea.DrawMe(m_parent, ynamewd + namewd + datawd + nwd + dblleft + 20, tnameht + xnameht + titleht + dbltop, textDsp)
    If (m_allarea.width > 0) Then
        Call m_allarea.DrawToTitle(m_parent, ynamewd + namewd + dblleft, tnameht + xnameht + titleht + dbltop)
    Else
        Call m_dataarea.DrawToTitle(m_parent, ynamewd + namewd + dblleft, tnameht + xnameht + titleht + allht + dbltop)
    End If
    Call m_namearea.DrawBorder(m_parent, ynamewd + dblleft, tnameht + xnameht + m_titlearea.height + dbltop, m_allarea.height)
#If 0 Then
    Call m_titlearea.DrawMe(m_parent, namewd + dblleft, dbltop, textDsp)
    Call m_allarea.DrawMe(m_parent, namewd + dblleft, titleht + dbltop, textDsp)
    Call m_namearea.DrawMe(m_parent, dblleft, titleht + dbltop, textDsp)
    Call m_dataarea.DrawMe(m_parent, namewd + dblleft, titleht + allht + dbltop, textDsp)
    Call m_narea.DrawMe(m_parent, namewd + datawd + dblleft + 20, titleht + dbltop, textDsp)
    Call m_avgarea.DrawMe(m_parent, namewd + datawd + nwd + dblleft + 20, titleht + dbltop, textDsp)
    If (m_allarea.width > 0) Then
        Call m_allarea.DrawToTitle(m_parent, namewd + dblleft, titleht + dbltop)
    Else
        Call m_dataarea.DrawToTitle(m_parent, namewd + dblleft, titleht + allht + dbltop)
    End If
    Call m_namearea.DrawBorder(m_parent, dblleft, m_titlearea.height + dbltop, m_allarea.height)
#End If

    lastshp = m_parent.Count
    shpcnt = lastshp - firstshp + 1
    ReDim aryShp(1 To shpcnt)
    For i = 1 To shpcnt
        aryShp(i) = firstshp + i - 1
    Next i
    m_parent.Range(aryShp).Group.Name = "ObiGrp"
    
    objshp.parent.parent.Delete

    On Error GoTo 0
End Sub

'=== EOF ===


Attribute VB_Name = "clsTextBox"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=======================================================
' class for text box
'
' 2007.02 WZH copied from SUBHSK.xls (SonyStat3P6)
'=======================================================
Option Explicit

Private m_left As Double
Private m_top As Double
Private m_width As Double
Private m_height As Double
Private m_text As String
Private m_fontsize As Double

Public Sub InitObiBox(ByVal text As String, ByVal fontsize As Double, _
                      ByVal dblleft As Double, ByVal dbltop As Double, _
                      ByVal dblWidth As Double, ByVal dblHeight As Double)
    m_text = text
    m_left = dblleft
    m_top = dbltop
    m_width = dblWidth
    m_height = dblHeight
    m_fontsize = fontsize
End Sub

Public Sub DrawMe(ByVal parent As Shapes, ByVal dblleft As Double, ByVal dbltop As Double, _
                  ByVal borderstyle As Long, ByVal fillcolor As Long, ByVal textDsp As Integer)
    Dim shp As Shape
    Set shp = parent.AddTextbox(msoTextOrientationHorizontal, m_left + dblleft, m_top + dbltop, m_width, m_height)
    shp.DrawingObject.AutoSize = False
    shp.DrawingObject.Border.LineStyle = borderstyle
    shp.DrawingObject.Interior.colorindex = fillcolor
    If textDsp = 1 Then
        shp.DrawingObject.Caption = m_text
    ElseIf textDsp = 2 Then
        shp.DrawingObject.Caption = Format(m_text, "0.0")
    ElseIf textDsp = 3 Then
        shp.DrawingObject.Caption = Format(m_text, "0")
    End If
    'shp.DrawingObject.AutoScaleFont = False
    'shp.DrawingObject.HorizontalAlignment = xlCenter
    shp.DrawingObject.VerticalAlignment = xlCenter
    'If getExcelVerNo() >= 12 Then
    '    shp.TextFrame2.WordWrap = msoFalse
    'End If
    shp.DrawingObject.Font.Size = m_fontsize
    shp.TextFrame.MarginLeft = 2
    shp.TextFrame.MarginTop = 0
    shp.TextFrame.MarginRight = 0
    shp.TextFrame.MarginBottom = 0
End Sub

Public Property Let left(newvalue As Variant)
    m_left = newvalue
End Property

Public Property Let top(newvalue As Variant)
    m_top = newvalue
End Property

Public Property Get width() As Variant
    width = m_width
End Property

Public Property Get height() As Variant
    height = m_height
End Property

Public Property Get top() As Variant
    top = m_top
End Property

Public Property Get left() As Variant
    left = m_left
End Property

'=== EOF ===




INQUEST-PP=macro
