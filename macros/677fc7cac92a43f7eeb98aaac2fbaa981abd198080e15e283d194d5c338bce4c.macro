Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Funktionen"
Option Explicit



Sub Dir_Test()
    Dim mDatei As String, mZiel As String
    mZiel = "C:\Windows\*.ini"
    ' Erste
    mDatei = Dir(mZiel)
    ' Schleife
    Do While mDatei <> ""
        Debug.Print mDatei
        ' weitere
        mDatei = Dir
    Loop
End Sub



Sub mit_Abstand()
    Dim mOK As Byte
    mOK = MsgBox("Wollen Sie l|fffd|schen?" & vbCrLf & "Nicht r|fffd|ckg|fffd|ngig", vbYesNo + vbQuestion + vbDefaultButton2, "L|fffd|schen")
    '
    If mOK = vbYes Then
        ' L|fffd|schen
        MsgBox ("gel|fffd|scht")
    End If
End Sub



Public Function GK(mText As String) As String
    ' Ergebmis
    GK = UCase(Left(mText, 1)) & LCase(Mid(mText, 2))
End Function



Public Function Encrypt(mText As String) As String
    Dim mZiel As String, mKontroll As String
    mKontroll = "!%$&%/%&/()=()==?+*#'-_,.?)=(/&%%$&/()=(/&!$%&/(=()&%/(&%/()==(#*#+-+#+*#)(/%&$%&"
    ' Schleife
    For i = 1 To Len(mText)
        mZiel = mZiel & Chr(Asc(Mid(mText, i, 1)) Xor Asc(Mid(mKontroll, i, 1)))
    Next i
    
    Encrypt = mZiel
    
End Function










Attribute VB_Name = "Objekte"
Option Explicit

Sub Hierarchie()
    Application.Workbooks("Mappe1.xlsm").Worksheets("Tabelle1").Range("I1").Value = 15
    ' tempor|fffd|re
'    ActiveWorkbook
'    ActiveSheet
'    ActiveCell
'
'    Range
'    ActiveWindow
    
End Sub



Sub Summen1()
    Dim mSumme As Single
    mZeile = 2
    ' Schleife
    Worksheets("Liste").Activate
    Do While Not Cells(mZeile, 1) = ""
        mSumme = mSumme + Cells(mZeile, 5)
        mZeile = mZeile + 1
    Loop
    Range("L1") = "Summe"
    Range("M1") = mSumme
    Range("M1").NumberFormat = "#,##0.00 |fffd|"
End Sub


Sub ende_ermitteln1()
    Dim mZl As Long, mSp As Integer
    '
    mZl = Cells.SpecialCells(xlCellTypeLastCell).Row
    mSp = Cells.SpecialCells(xlCellTypeLastCell).Column
    '
    Debug.Print mZl, mSp
End Sub


Sub Ende_ermitteln2()
    Range("A300000").End(xlUp).Select
    '
    Dim mAdr As String
    mAdr = ActiveCell.Address
    ' Zeile
    Dim mZl As Long
    
    mZl = CLng(Mid(mAdr, 4))
End Sub



Sub Bedingte_Formatierung()
    mZeile = 2
    Worksheets("Liste").Activate
    Range("A:E").ClearFormats
    ' Schleife
    Do While Not Cells(mZeile, 1) = ""
        If Trim(LCase(Cells(mZeile, 3))) = "rot" Then
            Range(Cells(mZeile, 1), Cells(mZeile, 5)).Interior.Color = RGB(220, 200, 200)
        End If
        If Trim(LCase(Cells(mZeile, 3))) = "blau" Then
            Range(Cells(mZeile, 1), Cells(mZeile, 5)).Interior.Color = RGB(200, 200, 220)
        End If
        mZeile = mZeile + 1
    Loop
    With Range(Cells(1, 1), Cells(mZeile - 1, 5))
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
End Sub


Sub Export()
    Dim mMappe As String, mBlatt As String
    ' Quelle
    mMappe = ActiveWorkbook.Name
    mBlatt = "Liste"
    mZeile = 2
    ' Ziel
    Workbooks.Add
    Dim mZl As Long: mZl = 2
    ' Schleife
    With Workbooks(mMappe).Worksheets(mBlatt)
        ' |fffd|berschrift
        For i = 1 To 5
            Cells(1, i) = .Cells(1, i)
        Next i
        Do While Not .Cells(mZeile, 1) = ""
            ' Test auf schreiben
            If Trim(LCase(.Cells(mZeile, 2))) = "ulm" Then          ' Test auf Ort in Sp 2
                For i = 1 To 5
                    Cells(mZl, i) = .Cells(mZeile, i)
                Next i
                mZl = mZl + 1
            End If
            
            mZeile = mZeile + 1
        Loop
    End With
End Sub












Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Variablen"
Option Explicit

Option Compare Text
' Textvergleich

Option Base 1
' Arrays


' |fffd|ffentlich, f|fffd|r alle Module
Public mZeile As Long, mSpalte As Integer
Public i As Long, j As Long, k As Long




' |fffd|ffentlich aber nur in diesem Modul
Dim mUser As String

Dim mDatei As Workbook


Public mMonat(12) As String


Public Const MwSt As Single = 0.19



Sub Monat_f|fffd|llen()
    ' Schleife
    For i = 1 To 12
        mMonat(i) = MonthName(i)
    Next i
End Sub



' Lokale

Sub VarTest1()
    ' deklarieren
    Dim mText As String, mWert As Single
    ' f|fffd|llen
    mText = "Schulung"
    mWert = 1234.5
    ' Arbeiten, |fffd|berladen
    mText = mText & " ,VBA"
    ' |fffd|bergeben
'    Call VarTest2(mText, mWert, True)
'    VarTest2 mText, mWert, True
    ' benannte Argumente
    Call VarTest2(xWert:=mWert, xLogisch:=True, xText:=mText)
End Sub


Sub VarTest2(xText As String, xWert As Single, Optional xLogisch As Boolean)
    Debug.Print xText, xWert, xLogisch
End Sub



Sub ArrayTest()
    ' eindimensional
    Dim mArr1(12) As Byte
    ' Zwei
    Dim mArr2(12, 4) As Byte
    ' Drei
    Dim mArr3(12, 4, 3) As Byte
    
    ' Variable Arrays
    Dim mArr_Var() As Byte
    ' ermitteln
    Dim mAnz As Integer
    mAnz = 12
    ReDim mArr_Var(mAnz) As Byte
    
End Sub





INQUEST-PP=macro
