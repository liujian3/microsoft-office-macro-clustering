Attribute VB_Name = "Module1"

Option Explicit

' |fffd|o|fffd|C|fffd|v|fffd||fffd||fffd|b|fffd|g|fffd|i|fffd||fffd||fffd||652|l|fffd||fffd||fffd||fffd||fffd|j

Sub biplot()
    Dim a As Range, out As Range
    Dim r() As Double, diag() As Double, v() As Double
    Dim n As Integer, m As Integer
    Dim i As Integer, j As Integer
    Dim sum As Double, cum As Double, x As Double, k As Integer
    Dim result As Integer

    Dim row As Integer, col As Integer
    
    On Error GoTo 10
    Set a = Application.InputBox(prompt:="|fffd|s|fffd||fffd||33e||654||348||342||fffd||fffd||fffd||fffd|:", Title:="|fffd|s|fffd||fffd|", Type:=8)
    n = a.Rows.Count
    m = a.Columns.Count
    If n <= 0 Or m <= 0 Then
        MsgBox "|fffd||348||342||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If

    ReDim r(n, m), diag(m), v(m, m)

    For i = 0 To n - 1
        For j = 0 To m - 1
            r(i, j) = a(i + 1, j + 1)
        Next j
    Next i

'    Do
'        Set out = Application.InputBox(prompt:="|fffd||fffd||fffd||282||30f|o|fffd||350||fffd||30d||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|:", Title:="|fffd|o|fffd||350||fffd|", Type:=8)
'        row = out.row
'        col = out.Column
'        If areacheck(row, col, n + 2 * m + 7, 4) = 0 Then
'            Exit Do
'        End If
'        MsgBox "|fffd|o|fffd||357||308||fffd||24b||fffd||142||202||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||33d1||fffd||fffd||fffd||fffd||fffd||fffd||90a8||fffd||fffd||fffd||a0aa||fffd||fffd||fffd||fffd||302||141|C|fffd||282||317||308||fffd||fffd||fffd|w|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
'    Loop
    
    Sheets("|fffd||7b0||fffd||fffd|o|fffd||fffd|").Select: Cells.Select
    Range("B4:CZ300").Select
    Selection.ClearContents
    row = 4: col = 2
    
    result = svdcmp(r, n, m, diag, v, row, col)
    If result = 1 Then
        Cells(row, col) = "|fffd||fffd||fffd||652|l|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"
        row = row + 1
        Exit Sub
    Else
        sort r, diag, v, n, m
        sum = 0
        For j = 0 To m - 1
            sum = sum + diag(j)
        Next j
        
        Cells(row, col) = "|fffd||50d||fffd|"
        Cells(row, col + 1) = "|fffd||157|L|fffd|l"
        Cells(row, col + 2) = "|fffd||fffd|^|fffd||fffd|"
        Cells(row, col + 3) = "|fffd||750||3ca||fffd|^|fffd||fffd|"
        row = row + 1
        cum = 0
        For j = 0 To m - 1
            x = diag(j) / sum * 100
            cum = cum + x
            Cells(row, col) = j + 1
            Cells(row, col + 1) = diag(j)
            Cells(row, col + 2) = x
            Cells(row, col + 3) = cum
            row = row + 1
        Next j

        For i = 0 To n - 1
            For j = 0 To m - 1
                 r(i, j) = r(i, j) * diag(j)
            Next j
        Next i

        row = row + 1
        Cells(row, col) = "|fffd||38f||6c2||251||382||fffd||fffd||9414||fffd|l|fffd|i|fffd|t|fffd||fffd||fffd|j"
        row = row + 1
        Cells(row, col) = "|fffd||fffd||a3b2|"
        Cells(row, col + 1) = "|fffd||fffd||fffd|"
        row = row + 1
        For i = 0 To n - 1
            Cells(row, col + 0) = r(i, 0)
            Cells(row, col + 1) = r(i, 1)
            row = row + 1
        Next i
        row = row + 1
        Cells(row, col) = "|fffd||3d0||fffd||fffd||251||382||fffd||fffd||9414||fffd|l|fffd|i|fffd|u'|fffd|j"
        row = row + 1
        Cells(row, col) = "|fffd||fffd||a3b2|"
        Cells(row, col + 1) = "|fffd||fffd||fffd|"
        row = row + 1
        For i = 0 To m - 1
            Cells(row, col + 0) = v(i, 0)
            Cells(row, col + 1) = v(i, 1)
            row = row + 1
        Next i
    End If
    
10 End Sub

Function areacheck(i0 As Integer, j0 As Integer, n As Integer, m As Integer) As Integer
    Dim i As Integer, j As Integer
    areacheck = 0
    For i = i0 To i0 + n - 1
        For j = j0 To j0 + m - 1
            If Not IsEmpty(Cells(i, j)) Then
                areacheck = 1
                Exit Function
            End If
        Next j
    Next i
End Function

Sub sort(a() As Double, diag() As Double, v() As Double, n As Integer, m As Integer)
    Dim i As Integer, j As Integer, maxi As Integer, maxv As Double, temp As Double
    For i = 0 To m - 2
        maxi = i
        maxv = diag(i)
        For j = i + 1 To m - 1
            If diag(j) > maxv Then
                maxi = j
                maxv = diag(j)
            End If
        Next j
        If maxi <> i Then
            temp = diag(i)
            diag(i) = maxv
            diag(maxi) = temp
            For j = 0 To n - 1
                temp = a(j, i)
                a(j, i) = a(j, maxi)
                a(j, maxi) = temp
            Next j
            For j = 0 To m - 1
                temp = v(j, i)
                v(j, i) = v(j, maxi)
                v(j, maxi) = temp
            Next j
        End If
    Next i
End Sub

Function max(a, b)
    If a > b Then
        max = a
    Else
        max = b
    End If
End Function

Function min(a, b)
    If a < b Then
        min = a
    Else
        min = b
    End If
End Function

Function square(a As Double)
    If a = 0 Then
        square = 0
    Else
        square = a * a
    End If
End Function

Function pythag(a As Double, b As Double)
    Dim absa As Double, absb As Double
    absa = Abs(a)
    absb = Abs(b)
    If absa > absb Then
        pythag = absa * Sqr(1 + square(absb / absa))
    ElseIf absb = 0 Then
        pythag = 0
    Else
        pythag = absb * Sqr(1 + square(absa / absb))
    End If
End Function

Function sign(a As Double, b As Double)
    If b >= 0 Then
        sign = Abs(a)
    Else
        sign = -Abs(a)
    End If
End Function

' |fffd||209||fffd||fffd||303|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||341|C
' William H. Press, Saul A. Teukolski, William T. Vetterling and Bryan P. Flannery
' Numerical Recipes in C
' Cambridge University Press 1992
' |fffd||fffd| 67-70 |fffd|y|fffd|[|fffd|W|fffd||242||fffd||fffd||fffd| svdcmp |fffd||fffd| VBA |fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||142||fffd||fffd||fffd|@S. Aoki 2001/09/15

Function svdcmp(a() As Double, m As Integer, n As Integer, w() As Double, v() As Double, row As Integer, col As Integer)
    Dim flag As Integer, i As Integer, its As Integer, j As Integer, jj As Integer, k As Integer, l As Integer, nm As Integer
    Dim anorm As Double, c As Double, f As Double, g As Double, h As Double, s As Double, scale0 As Double, x As Double, y As Double, z As Double, rv1()   As Double
    ReDim rv1(n)
    svdcmp = 0
    g = 0
    scale0 = 0
    anorm = 0
    For i = 0 To n - 1
        l = i + 1
        rv1(i) = scale0 * g
        g = 0
        s = 0
        scale0 = 0
        If i < m Then
            For k = i To m - 1
                scale0 = scale0 + Abs(a(k, i))
            Next k
            If scale0 Then
                For k = i To m - 1
                    a(k, i) = a(k, i) / scale0
                    s = s + a(k, i) * a(k, i)
                Next k
                f = a(i, i)
                g = -sign(Sqr(s), f)
                h = f * g - s
                a(i, i) = f - g
                For j = l To n - 1
                    s = 0
                    For k = i To m - 1
                        s = s + a(k, i) * a(k, j)
                    Next k
                    f = s / h
                    For k = i To m - 1
                        a(k, j) = a(k, j) + f * a(k, i)
                    Next k
                Next j
                For k = i To m - 1
                    a(k, i) = a(k, i) * scale0
                Next k
            End If
        End If
        w(i) = scale0 * g
        g = 0
        s = 0
        scale0 = 0
        If i < m And i <> n - 1 Then
            For k = l To n - 1
                scale0 = scale0 + Abs(a(i, k))
            Next k
            If scale0 Then
                For k = l To n - 1
                    a(i, k) = a(i, k) / scale0
                    s = s + a(i, k) * a(i, k)
                Next k
                f = a(i, l)
                g = -sign(Sqr(s), f)
                h = f * g - s
                a(i, l) = f - g
                For k = l To n - 1
                    rv1(k) = a(i, k) / h
                Next k
                For j = l To m - 1
                    s = 0
                    For k = l To n - 1
                        s = s + a(j, k) * a(i, k)
                    Next k
                    For k = l To n - 1
                        a(j, k) = a(j, k) + s * rv1(k)
                    Next k
                Next j
                For k = l To n - 1
                    a(i, k) = a(i, k) * scale0
                Next k
            End If
        End If
        anorm = max(anorm, (Abs(w(i)) + Abs(rv1(i))))
    Next i
    For i = n - 1 To 0 Step -1
        If i < n - 1 Then
            If g Then
                For j = l To n - 1
                    v(j, i) = (a(i, j) / a(i, l)) / g
                Next j
                For j = l To n - 1
                    s = 0
                    For k = l To n - 1
                        s = s + a(i, k) * v(k, j)
                    Next
                    For k = l To n - 1
                        v(k, j) = v(k, j) + s * v(k, i)
                    Next k
                Next j
            End If
            For j = l To n - 1
                v(i, j) = 0
                v(j, i) = 0
            Next j
        End If
        v(i, i) = 1
        g = rv1(i)
        l = i
    Next i
    For i = min(m, n) - 1 To 0 Step -1
        l = i + 1
        g = w(i)
        For j = l To n - 1
            a(i, j) = 0
        Next j
        If g Then
            g = 1 / g
            For j = l To n - 1
                s = 0
                For k = l To m - 1
                    s = s + a(k, i) * a(k, j)
                Next k
                f = (s / a(i, i)) * g
                For k = i To m - 1
                    a(k, j) = a(k, j) + f * a(k, i)
                Next k
            Next j
            For j = i To m - 1
                a(j, i) = a(j, i) * (g)
            Next j
        Else
            For j = i To m - 1
                a(j, i) = 0
            Next j
        End If
        a(i, i) = a(i, i) + 1
    Next i
    For k = n - 1 To 0 Step -1
        For its = 1 To 30
            flag = 1
            For l = k To 0 Step -1
                nm = l - 1
                If Abs(rv1(l)) + anorm = anorm Then
                    flag = 0
                    Exit For
                End If
                If Abs(w(nm)) + anorm = anorm Then
                    Exit For
                End If
            Next l
            If flag Then
                c = 0
                s = 1
                For i = l To k - 1
                    f = s * rv1(i)
                    rv1(i) = c * rv1(i)
                    If Abs(f) + anorm = anorm Then
                        Exit For
                    End If
                    g = w(i)
                    h = pythag(f, g)
                    w(i) = h
                    h = 1 / h
                    c = g * h
                    s = -f * h
                    For j = 0 To m - 1
                        y = a(j, nm)
                        z = a(j, i)
                        a(j, nm) = y * c + z * s
                        a(j, i) = z * c - y * s
                    Next j
                Next i
            End If
            z = w(k)
            If l = k Then
                If z < 0 Then
                    w(k) = -z
                    For j = 0 To n - 1
                        v(j, k) = -v(j, k)
                    Next j
                End If
                Exit For
            End If
            If its = 30 Then
                svdcmp = 1 ' no convergence in 30 svdcmp iterations
                Exit Function
            End If
            x = w(l)
            nm = k - 1
            y = w(nm)
            g = rv1(nm)
            h = rv1(k)
            f = ((y - z) * (y + z) + (g - h) * (g + h)) / (2 * h * y)
            g = pythag(f, 1)
            f = ((x - z) * (x + z) + h * ((y / (f + sign(g, f))) - h)) / x
            c = 1
            s = 1
            For j = l To nm
                i = j + 1
                g = rv1(i)
                y = w(i)
                h = s * g
                g = c * g
                z = pythag(f, h)
                rv1(j) = z
                c = f / z
                s = h / z
                f = x * c + g * s
                g = g * c - x * s
                h = y * s
                y = y * c
                For jj = 0 To n - 1
                    x = v(jj, j)
                    z = v(jj, i)
                    v(jj, j) = x * c + z * s
                    v(jj, i) = z * c - x * s
                Next jj
                z = pythag(f, h)
                w(j) = z
                If z Then
                    z = 1 / z
                    c = f * z
                    s = h * z
                End If
                f = c * g + s * y
                x = c * y - s * g
                For jj = 0 To m - 1
                    y = a(jj, j)
                    z = a(jj, i)
                    a(jj, j) = y * c + z * s
                    a(jj, i) = z * c - y * s
                Next jj
            Next j
            rv1(l) = 0
            rv1(k) = f
            w(k) = x
        Next its
    Next k
End Function

Sub FileOpen()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||256||7c2||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim LootDir As String
    Dim OpenFile As String
    Dim FileFullName As String
    Dim FileExist As Integer

    On Error Resume Next
    If Left(Application.OperatingSystem, 7) = "Windows" Then
        LootDir = "\"
    Else
        LootDir = ":"
    End If

    OpenFile = "00_TAHN.xls"
    FileFullName = ThisWorkbook.Path & LootDir & OpenFile

    If Workbooks(OpenFile).Name <> OpenFile Then
        Err = 0
        FileExist = GetAttr(FileFullName)
        If Err = 0 Then
            Workbooks.Open Filename:=FileFullName
        Else
            MsgBox "[|fffd||1ad||fffd|]|fffd||fffd||327||fffd||642||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||302||156||7c2||fffd||702||fffd||fffd||fffd|I"
        End If
    Else
        Windows(OpenFile).Activate
    End If
    
    Windows("27_TAHN.xls").Close SaveChanges:=False
    
End Sub

Sub FileOpen2()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||256||7c2||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Sub Excel|fffd|I|fffd||fffd|()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||256||7c2||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.Quit

End Sub

Sub Flopsl()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||256||7c2||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim myFName As String, myWK As Workbook, BKCNT As Integer
    
    BKCNT = 0
    myFName = "00_TAHN.xls"
    
    For Each myWK In Workbooks
       If myWK.Name = myFName Then
         BKCNT = BKCNT + 1
       End If
    Next
            
    If BKCNT = 0 Then GoTo 20 Else GoTo 10
    
10  Windows("00_TAHN.xls").Activate
    Windows("27_TAHN.xls").Close SaveChanges:=False
    GoTo 30
    
20  Windows("27_TAHN.xls").Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
30 End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
