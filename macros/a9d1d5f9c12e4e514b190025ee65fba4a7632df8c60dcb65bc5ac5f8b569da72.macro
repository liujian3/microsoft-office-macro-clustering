Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'   ----------------------------------------------------------------------------------------
'   IDENTIFICATION DIVISION
'   Author                    : Lukas Pitka - Exact Software CEE s.r.o.
'   Date                      : 02.02.2012
'   Description               : export data into XML format for Romanian VAT report
'   ----------------------------------------------------------------------------------------
'   VARIABLES DECLARATION
    Public Year                          As String
    Public Month                         As String
    Public ReportingPeriod               As String
    Public VATRegistrationNo             As String
    Public DeclarantName                 As String
    Public DeclarantFirstName            As String
    Public DeclarantFunction             As String
    Public CompanyName                   As String
    Public Address                       As String
    Public Phone                         As String
    Public Fax                           As String
    Public Mail                          As String
    Public TotalAmount                   As String
    Public RepresentantCode              As String
    Public RepresentantName              As String
    Public RepresentantAddress           As String
    Public RepresentantPhone             As String
    Public RepresentantFax               As String
    Public RepresentantMail              As String
    Public RegisteredCompanies           As Long
    Public TotalSalesOfGoodsBasis        As Long
    Public TotalSalesOfGoodsVAT          As Long
    Public TotalPurchaseOfGoodsBasis     As Long
    Public TotalPurchaseOfGoodsVAT       As Long
    Public TotalSalesOfGoodsBasisRev     As Long
    Public TotalSalesOfGoodsVATRev       As Long
    Public TotalCerTechPlantsBasisV      As Long
    Public TotalCerTechPlantsVATV        As Long
    Public TotalPurchaseOfGoodsBasisRev  As Long
    Public TotalPurchaseOfGoodsVATRev    As Long
    Public TotalCerTechPlantsBasisC      As Long
    Public TotalCerTechPlantsVATC        As Long
    
    Public OperationRow                  As Integer   ' Counter for actual row
    Public InnerOperationRow             As Integer
    
    Public TypeOfOperation               As String
    Public OperationCompanyFiscalCode    As String
    Public OperationCompanyName          As String
    Public OperationBasis                As Long
    Public OperationVAT                  As Long
    
    Public ProductCode                   As String
    Public ProductBasis                  As Long
    Public ProductVAT                    As Long
        
Sub ConvertToXML()
'   ----------------------------------------------------------------------------------------
'   Create output file as an object in the system with the file name
'   If this file exists, it will be overwritten without questions asked
    Year = Worksheets("Comp").Cells(1, 2)
    If Len(Worksheets("Comp").Cells(2, 2)) > 1 Then
        Month = Worksheets("Comp").Cells(2, 2)
    Else
        Month = "0" & Worksheets("Comp").Cells(2, 2)
    End If
    
    
    Dim sFilename
    sFilename = Application.GetSaveAsFilename(InitialFileName:="ROD394-" & Year & "-" & Month & ".xml", FileFilter:="XML files (*.xml), *.xml", Title:="Choose name and location of the file", ButtonText:="Export")
      If sFilename = False Then
      ' They pressed Cancel
      ' MsgBox "Nebyl vybran|fffd| soubor"
      Exit Sub
    End If
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile(sFilename, True)
'   ----------------------------------------------------------------------------------------
'   Write xml header
    a.writeline ("<?xml version=""1.0""?>")
    
    Select Case Worksheets("Comp").Cells(3, 2)
        Case "Lunar"
            ReportingPeriod = "L"
        Case "Trimestrial"
             ReportingPeriod = "T"
        Case "Semestrial"
             ReportingPeriod = "S"
        Case "Anual"
             ReportingPeriod = "A"
    End Select
    
    DeclarantName = ConvertStringsToXML(Worksheets("Comp").Cells(1, 5))
    DeclarantFirstName = ConvertStringsToXML(Worksheets("Comp").Cells(2, 5))
    DeclarantFunction = ConvertStringsToXML(Worksheets("Comp").Cells(3, 5))

'   Company identification
    VATRegistrationNo = Worksheets("Comp").Cells(6, 2)
    CompanyName = ConvertStringsToXML(Worksheets("Comp").Cells(7, 2))
    Address = ConvertStringsToXML(Worksheets("Comp").Cells(8, 2))
    Phone = Worksheets("Comp").Cells(9, 2)
    Fax = Worksheets("Comp").Cells(10, 2)
    Mail = ConvertStringsToXML(Worksheets("Comp").Cells(11, 2))
    
'   Representant
    RepresentantCode = Worksheets("Comp").Cells(6, 5)
    RepresentantName = ConvertStringsToXML(Worksheets("Comp").Cells(7, 5))
    RepresentantAddress = ConvertStringsToXML(Worksheets("Comp").Cells(8, 5))
    RepresentantPhone = Worksheets("Comp").Cells(9, 5)
    RepresentantFax = Worksheets("Comp").Cells(10, 5)
    RepresentantMail = ConvertStringsToXML(Worksheets("Comp").Cells(11, 5))
    
'   Total amounts
    
    'Cereals and technical plants
    TotalCerTechPlantsBasisV = 0
    TotalCerTechPlantsVATV = 0
    TotalCerTechPlantsBasisC = 0
    TotalCerTechPlantsVATC = 0
    
    'Calculate other total amounts
    TotalSalesOfGoodsBasis = 0
    TotalSalesOfGoodsVAT = 0
    TotalPurchaseOfGoodsBasis = 0
    TotalPurchaseOfGoodsVAT = 0
    TotalSalesOfGoodsBasisRev = 0
    TotalSalesOfGoodsVATRev = 0
    TotalPurchaseOfGoodsBasisRev = 0
    TotalPurchaseOfGoodsVATRev = 0
    
    Dim FiscalCodes As Collection
    Dim FiscalCode As String
    Set FiscalCodes = New Collection
    
    OperationRow = 2
    While Worksheets("Livrari").Cells(OperationRow, 1) <> Empty
        Select Case Worksheets("Livrari").Cells(OperationRow, 5)
            Case "L"
                TotalSalesOfGoodsBasis = TotalSalesOfGoodsBasis + Round(Worksheets("Livrari").Cells(OperationRow, 3), 0)
                TotalSalesOfGoodsVAT = TotalSalesOfGoodsVAT + Round(Worksheets("Livrari").Cells(OperationRow, 4), 0)
            Case "V"
                TotalSalesOfGoodsBasisRev = TotalSalesOfGoodsBasisRev + Round(Worksheets("Livrari").Cells(OperationRow, 3), 0)
                TotalSalesOfGoodsVATRev = TotalSalesOfGoodsVATRev + Round(Worksheets("Livrari").Cells(OperationRow, 4), 0)
            Case Empty
                TotalCerTechPlantsBasisV = TotalCerTechPlantsBasisV + Round(Worksheets("Livrari").Cells(OperationRow, 8), 0)
                TotalCerTechPlantsVATV = TotalCerTechPlantsVATV + Round(Worksheets("Livrari").Cells(OperationRow, 9), 0)
        End Select
        
        FiscalCode = Worksheets("Livrari").Cells(OperationRow, 1)
        If Not keyExists(FiscalCodes, FiscalCode) Then
            FiscalCodes.Add FiscalCode, FiscalCode
        End If
        
        OperationRow = OperationRow + 1
    Wend
    
    
    OperationRow = 2
    While Worksheets("Achiz").Cells(OperationRow, 1) <> Empty
        Select Case Worksheets("Achiz").Cells(OperationRow, 5)
            Case "A"
                TotalPurchaseOfGoodsBasis = TotalPurchaseOfGoodsBasis + Round(Worksheets("Achiz").Cells(OperationRow, 3), 0)
                TotalPurchaseOfGoodsVAT = TotalPurchaseOfGoodsVAT + Round(Worksheets("Achiz").Cells(OperationRow, 4), 0)
            Case "C"
                TotalPurchaseOfGoodsBasisRev = TotalPurchaseOfGoodsBasisRev + Round(Worksheets("Achiz").Cells(OperationRow, 3), 0)
                TotalPurchaseOfGoodsVATRev = TotalPurchaseOfGoodsVATRev + Round(Worksheets("Achiz").Cells(OperationRow, 4), 0)
            Case Empty
                TotalCerTechPlantsBasisC = TotalCerTechPlantsBasisC + Round(Worksheets("Achiz").Cells(OperationRow, 8), 0)
                TotalCerTechPlantsVATC = TotalCerTechPlantsVATC + Round(Worksheets("Achiz").Cells(OperationRow, 9), 0)
        End Select
        
        FiscalCode = Worksheets("Achiz").Cells(OperationRow, 1)
        If Not keyExists(FiscalCodes, FiscalCode) Then
            FiscalCodes.Add FiscalCode, FiscalCode
        End If
        
        OperationRow = OperationRow + 1
    Wend
    
    RegisteredCompanies = FiscalCodes.Count
    
    TotalAmount = TotalSalesOfGoodsBasis + TotalSalesOfGoodsVAT + TotalSalesOfGoodsBasisRev + TotalSalesOfGoodsVATRev + TotalPurchaseOfGoodsBasis + TotalPurchaseOfGoodsVAT + TotalPurchaseOfGoodsBasisRev + TotalPurchaseOfGoodsVATRev + TotalCerTechPlantsBasisC + TotalCerTechPlantsBasisV + TotalCerTechPlantsVATC + TotalCerTechPlantsVATV
    
    a.writeline ("<declaratie394 luna=""" & Month & """ an=""" & Year & """ tip_D394=""" & ReportingPeriod & """ nume_declar=""" & DeclarantName & """ prenume_declar=""" & DeclarantFirstName & """ functie_declar=""" & DeclarantFunction & """ xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""mfp:anaf:dgti:d394:declaratie:v1 D394.xsd"" xmlns=""mfp:anaf:dgti:d394:declaratie:v1"">")
    
    a.write ("<identificare cui=""" & VATRegistrationNo & """ den=""" & CompanyName & """ adresa=""" & Address & """")
    If Phone <> Empty Then
        a.write (" telefon=""" & Phone & """")
    End If
    If Fax <> Empty Then
        a.write (" fax=""" & Fax & """")
    End If
    If Mail <> Empty Then
        a.write (" mail=""" & Mail & """")
    End If
    
    a.writeline (" totalPlata_A=""" & TotalAmount + RegisteredCompanies & """ />")
    
    If RepresentantName <> Empty Then
        a.write ("<idReprezentant ")
        If RepresentantCode <> Empty Then
            a.write ("cifR=""" & RepresentantCode & """")
        End If
        a.write (" denR=""" & RepresentantName & """ adresaR=""" & RepresentantAddress & """")
        If RepresentantPhone <> Empty Then
            a.write (" telefonR=""" & RepresentantPhone & """")
        End If
        If RepresentantFax <> Empty Then
            a.write (" faxR=""" & RepresentantFax & """")
        End If
        If RepresentantMail <> Empty Then
            a.write (" mailR=""" & RepresentantMail & """")
        End If
        a.writeline (" />")
    End If
    
    a.writeline ("<rezumat nrCui=""" & RegisteredCompanies & """ bazaL=""" & TotalSalesOfGoodsBasis & """ tvaL=""" & TotalSalesOfGoodsVAT & """ bazaA=""" & TotalPurchaseOfGoodsBasis & """ tvaA=""" & TotalPurchaseOfGoodsVAT & """ bazaV=""" & TotalSalesOfGoodsBasisRev & """ tvaV=""" & TotalSalesOfGoodsVATRev & """ bazaVc=""" & TotalCerTechPlantsBasisV & """ tvaVc=""" & TotalCerTechPlantsVATV & """ bazaC=""" & TotalPurchaseOfGoodsBasisRev & """ tvaC=""" & TotalPurchaseOfGoodsVATRev & """ bazaCc=""" & TotalCerTechPlantsBasisC & """ tvaCc=""" & TotalCerTechPlantsVATC & """ />")

'   Write Operations
    
    'Achiz sheet
    OperationRow = 2
    While Worksheets("Achiz").Cells(OperationRow, 1) <> Empty
        TypeOfOperation = Worksheets("Achiz").Cells(OperationRow, 5)
        OperationCompanyFiscalCode = Worksheets("Achiz").Cells(OperationRow, 1)
        OperationCompanyName = ConvertStringsToXML(Worksheets("Achiz").Cells(OperationRow, 6))
        OperationBasis = Round(Worksheets("Achiz").Cells(OperationRow, 3), 0)
        OperationVAT = Round(Worksheets("Achiz").Cells(OperationRow, 4), 0)
        
        a.writeline ("<op1 tip=""" & TypeOfOperation & """ cuiP=""" & OperationCompanyFiscalCode & """ denP=""" & OperationCompanyName & """ baza=""" & OperationBasis & """ tva=""" & OperationVAT & """ >")
        
        InnerOperationRow = OperationRow + 1
        While Worksheets("Achiz").Cells(InnerOperationRow, 7) <> Empty
            ProductCode = Worksheets("Achiz").Cells(InnerOperationRow, 7)
            ProductBasis = Round(Worksheets("Achiz").Cells(InnerOperationRow, 8), 0)
            ProductVAT = Round(Worksheets("Achiz").Cells(InnerOperationRow, 9), 0)
            
            a.writeline ("<op11 codPR=""" & ProductCode & """ bazaPR=""" & ProductBasis & """ tvaPR=""" & ProductVAT & """ />")
            
            InnerOperationRow = InnerOperationRow + 1
        Wend
        
        a.writeline ("</op1>")
        
        If InnerOperationRow <> (OperationRow + 1) Then
            OperationRow = OperationRow + (InnerOperationRow - OperationRow)
        Else
            OperationRow = OperationRow + 1
        End If
    Wend
    
    'Livrari sheet
    OperationRow = 2
    While Worksheets("Livrari").Cells(OperationRow, 1) <> Empty
        TypeOfOperation = Worksheets("Livrari").Cells(OperationRow, 5)
        OperationCompanyFiscalCode = Worksheets("Livrari").Cells(OperationRow, 1)
        OperationCompanyName = ConvertStringsToXML(Worksheets("Livrari").Cells(OperationRow, 6))
        OperationBasis = Round(Worksheets("Livrari").Cells(OperationRow, 3), 0)
        OperationVAT = Round(Worksheets("Livrari").Cells(OperationRow, 4), 0)
        
        a.writeline ("<op1 tip=""" & TypeOfOperation & """ cuiP=""" & OperationCompanyFiscalCode & """ denP=""" & OperationCompanyName & """ baza=""" & OperationBasis & """ tva=""" & OperationVAT & """ >")
        
        InnerOperationRow = OperationRow + 1
        While Worksheets("Livrari").Cells(InnerOperationRow, 7) <> Empty
            ProductCode = Worksheets("Livrari").Cells(InnerOperationRow, 7)
            ProductBasis = Round(Worksheets("Livrari").Cells(InnerOperationRow, 8), 0)
            ProductVAT = Round(Worksheets("Livrari").Cells(InnerOperationRow, 9), 0)
            
            a.writeline ("<op11 codPR=""" & ProductCode & """ bazaPR=""" & ProductBasis & """ tvaPR=""" & ProductVAT & """ />")
            
            InnerOperationRow = InnerOperationRow + 1
        Wend
        
        a.writeline ("</op1>")
        
        If InnerOperationRow <> (OperationRow + 1) Then
            OperationRow = OperationRow + (InnerOperationRow - OperationRow)
        Else
            OperationRow = OperationRow + 1
        End If
    Wend

'   End file
    a.writeline ("</declaratie394>")
    a.Close
End Sub

' Function used to convert text to XML supported format
Public Function ConvertStringsToXML(Text As String) As String
    Text = Replace(Text, "&", "&amp;")
    Text = Replace(Text, "<", "&lt;")
    Text = Replace(Text, ">", "&gt;")
    Text = Replace(Text, """", "&quot;")
    Text = Replace(Text, "'", "&apos;")
    ConvertStringsToXML = Text
End Function

' Function used to find out if an item already exists in a collection
Public Function keyExists(myCollection As Collection, sKey As String) As Boolean
  On Error GoTo handleerror:

  Dim val As Variant

  val = myCollection(sKey)
  keyExists = True
  Exit Function
handleerror:
  keyExists = False
End Function






INQUEST-PP=macro
