Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UfrmDisplay"
Attribute VB_Base = "0{2293CFA9-2CEB-4911-91D9-E0E1DF3F49FD}{9D21D34D-DF74-4B5C-A4B9-7D646B26AF16}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
cbPR.Value = wsSetup.Range("AJ2").Value
cbSR.Value = wsSetup.Range("AJ3").Value
cbEC.Value = wsSetup.Range("AJ4").Value
cbSC.Value = wsSetup.Range("AJ5").Value
cbW.Value = wsSetup.Range("AJ6").Value
cbGM.Value = wsSetup.Range("AJ7").Value
cbWR.Value = wsSetup.Range("AJ8").Value
cbAAA.Value = wsSetup.Range("AJ9").Value
cbP.Value = wsSetup.Range("AJ10").Value
cbAP.Value = wsSetup.Range("AJ11").Value
cbSD.Value = wsSetup.Range("AJ12").Value
cbAL.Value = wsSetup.Range("AJ13").Value
cbRR.Value = wsSetup.Range("AJ14").Value
cbOD.Value = wsSetup.Range("AJ15").Value
cbNQ.Value = wsSetup.Range("AJ16").Value
cbTT.Value = wsSetup.Range("AJ17").Value
cbTG.Value = wsSetup.Range("AJ18").Value
cbTC.Value = wsSetup.Range("AJ19").Value
End Sub

Private Sub cbApply_Click()
Dim lRow As Integer

With Application: .StatusBar = "Updating Display.": .EnableEvents = False: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
UnProtectAll

wsSetup.Range("AJ2").Value = cbPR.Value
wsSetup.Range("AJ3").Value = cbSR.Value
wsSetup.Range("AJ4").Value = cbEC.Value
wsSetup.Range("AJ5").Value = cbSC.Value
wsSetup.Range("AJ6").Value = cbW.Value
wsSetup.Range("AJ7").Value = cbGM.Value
wsSetup.Range("AJ8").Value = cbWR.Value
wsSetup.Range("AJ9").Value = cbAAA.Value
wsSetup.Range("AJ10").Value = cbP.Value
wsSetup.Range("AJ11").Value = cbAP.Value
wsSetup.Range("AJ12").Value = cbSD.Value
wsSetup.Range("AJ13").Value = cbAL.Value
wsSetup.Range("AJ14").Value = cbRR.Value
wsSetup.Range("AJ15").Value = cbOD.Value
wsSetup.Range("AJ16").Value = cbNQ.Value
wsSetup.Range("AJ17").Value = cbTT.Value
wsSetup.Range("AJ18").Value = cbTG.Value
wsSetup.Range("AJ19").Value = cbTC.Value

ws00.Calculate
For lRow = 13 To 248
    If ws00.Cells(lRow, 6).Value = False Then
        ws00.Cells(lRow, 6).EntireRow.Hidden = True
    Else
        ws00.Cells(lRow, 6).EntireRow.Hidden = False
    End If
    Select Case lRow
        Case 66
            lRow = 73
        Case 127
            lRow = 133
        Case 187
            lRow = 194
    End Select
Next lRow

ws00.Range("A1:T251").SpecialCells(xlCellTypeVisible).Rows.AutoFit
ws00.Range("A1:T251").SpecialCells(xlCellTypeVisible).Columns.AutoFit

Unload Me
ProtectAll
With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: End With
End Sub

Private Sub cbCancel_Click()
Unload Me
End Sub




Attribute VB_Name = "modButtons"
Option Explicit
Option Private Module
Public Sub bt_ImportSEG() '10-13-2013 SHV
    'Confirm VAT setup prior to running
    If wsWelcome.Range("OTB_TY").Value = "" Then
        MsgBox "Please enter Enter Current OTB Capture Date before importing.", vbCritical, "Import Error"
        Exit Sub
    End If
    With Application: .EnableEvents = False: .ScreenUpdating = False: End With
    If wsWelcome.Shapes("VAT_Y").ControlFormat.Value = 1 And wsSetup.Range("B24").Value = True Then
        MsgBox "Please enter VAT values before importing.", vbCritical, "Import Error"
        Call bt_VAT_Y
    Else
        UnProtectAll
        ufrmSEG10.Show
        If wsSetup.Range("B45").Value = "Cancel" Then Exit Sub
        If wsSetup.Range("SEG_FORMAT").Value = ".csv" Then
            Call ImportSEG
        Else
            Call ImportSEGxls
        End If
        ProtectAll
    End If
With Application: .ScreenUpdating = True: .EnableEvents = True: End With
End Sub
Public Sub bt_ImportRPT() '10-11-2013 SHV
With Application: .EnableEvents = False: .ScreenUpdating = False: End With
    If wsWelcome.Range("N15").Value <= Now - 1 Then
        MsgBox "Import SEG 10 files first", vbExclamation, "Import Error"
    Else
        UnProtectAll
        Call ImportRPT
        ProtectAll
    End If
With Application: .ScreenUpdating = True: .EnableEvents = True: End With
End Sub
Public Sub bt_ImportACT() '10-11-2013 SHV
With Application: .EnableEvents = False: .ScreenUpdating = False: End With
    If wsWelcome.Range("N20").Value = "" Then
        MsgBox "Import RPT files first", vbExclamation, "Import Error"
    Else
        UnProtectAll
        Call ImportPS
        ProtectAll
    End If
With Application: .ScreenUpdating = True: .EnableEvents = True: End With
End Sub
Public Sub bt_Reset() '10-23-2013 SHV
If MsgBox("Are you sure you want to reset the tool?", _
    vbYesNo, "Reset Tool") = vbYes Then
        With Application: .StatusBar = "Resetting Tool.": .EnableEvents = False: .ScreenUpdating = False: End With
            UnProtectAll
            Call Reset
            ResetUsedRange
            ProtectAll
        With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: End With
        MsgBox ("Reset Complete!"), vbExclamation, "Reset Tool"
End If
End Sub
Public Sub bt_Display() '10-23-2013 SHV
UfrmDisplay.Show
End Sub

Public Sub bt_FormatADR() '10-23-2013 SHV
With Application: .StatusBar = "Updating ADR.": .EnableEvents = False: .ScreenUpdating = False: End With
    UnProtectAll
    Call Show_Decimals
    ProtectAll
With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: End With
End Sub
Public Sub bt_FormatADR_D() '10-23-2013 SHV
With Application: .StatusBar = "Updating ADR.": .EnableEvents = False: .ScreenUpdating = False: End With
    UnProtectAll
    Call Show_Decimals_D
    ProtectAll
With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: End With
End Sub
Public Sub bt_VAT_N() '10-23-2013 SHV
wsVAT.Visible = xlSheetVeryHidden
End Sub
Public Sub bt_VAT_Y() '10-23-2013 SHV
wsVAT.Visible = xlSheetVisible
Application.GoTo wsVAT.Range("A1"), Scroll:=True
End Sub
Attribute VB_Name = "modHelp_eMail"
Option Explicit
Option Private Module
Public Sub Help_eMail()
    'Working in Office 2000-2010

    Dim OutApp As Object, OutMail As Object, strbody As String
    ActiveWorkbook.Save
    If ActiveWorkbook.Path <> "" Then
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)

        strbody = "Please provide a description of the error you received and attach any file(s) you were importing. Thank you"

        On Error Resume Next

        With OutMail
            .To = "RMFS.Tools@marriott.com"
            .CC = ""
            .BCC = ""
            .Subject = "OTB Analysis Tool - Assistance needed for " & wsWelcome.Range("i19").Value
            .HTMLBody = strbody
            .Attachments.Add ActiveWorkbook.FullName
            .Display   'or use .Send
        End With

        On Error GoTo 0

        Set OutMail = Nothing
        Set OutApp = Nothing
    Else
        MsgBox "The ActiveWorkbook does not have a path, Save the file first."
    End If


End Sub
Attribute VB_Name = "modImportActuals"
Option Explicit
Option Private Module
Public Sub ImportPS()
    Dim strTitle As String, strTitle2 As String, strWorkbookPS As String, _
    strWorkbookA As String, strMessage As String, strFullName As String, strFilter As String, strCur As String, _
    intMessageReturn As Integer, intFilterIndex As Integer, intLastRow As Integer, intLastRowA As Integer, _
    varFilename As Variant, sOR As String, iSelectedFile As Integer, _
    lRow As Long, strName As String, _
    wsSource As Worksheet, wbSource As Workbook, _
    rngToCheck As Range

    
    strWorkbookA = ActiveWorkbook.Name
    
    strFilter = "Excel (*.xlsx; *.xlsm; *.xls), *.xlsx; *.xlsm; *.xls"
    intFilterIndex = 1
    strTitle = "Import EPM/SUN Actual Files"
    strTitle2 = " - Browse and select both files - Hold down CTRL to select more than one file."
    'open dialog box to select PeopleSoft Actual File
    varFilename = Application.GetOpenFilename _
        (filefilter:=strFilter, FilterIndex:=intFilterIndex, Title:=strTitle & strTitle2, MultiSelect:=True)
    
    ' this added due to a bug with GetOpenFileName with MultiSelect sometimes returning a string
    If VarType(varFilename) = vbString Then
        sOR = varFilename
        ReDim varFilename(1 To 1)
        varFilename(1) = sOR
    End If
    
    If IsArray(varFilename) Then
        With Application: .StatusBar = "Importing.": .EnableEvents = False: _
        .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
                
   
        'Clear Actual data
        If wsACT.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
            wsACT.Range("A2:K" & wsACT.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
        End If
        
        'Clear Actual Curr data
        If wsACT1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
            wsACT1.Range("A2:CQ" & wsACT1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
        End If
        
        ResetUsedRange

        ' import each file.
        For iSelectedFile = 1 To UBound(varFilename)
        
            'Open the selected Revenue Planning Template files
            Set wbSource = Application.Workbooks.Open(varFilename(iSelectedFile))
            strWorkbookPS = GetFileName((varFilename(iSelectedFile)))
            
            If Worksheets.Count = 1 Then 'EPM FILE ************************************************************************
                'Look for Header
                For Each wsSource In ActiveWorkbook.Sheets
                    If wsSource.Range("A1").Value = "MW Room Revenue by Day" Then Exit For
                Next wsSource
                
                'Error if not found
                If wsSource Is Nothing Then
                    MsgBox "Problem importing " & strWorkbookPS & "." & vbCrLf _
                        & "Could not find ""MW Room Revenue by Day"" data." & vbCrLf _
                        & "Please select the PeopleSoft Actual File.", vbCritical, strTitle & " Error"
                    Workbooks(strWorkbookPS).Close SaveChanges:=False, Filename:=varFilename
                    Exit Sub
                Else
                    'Identify Last Rows
                    intLastRowA = wsACT.Cells(Rows.Count, 1).End(xlUp).Row
                    intLastRow = Workbooks(strWorkbookPS).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row
                    
                    'Insert Data
                    wsACT.Range("A" & intLastRowA + 1 & ":G" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets(1).Range("A3:G" & intLastRow).Value
                    
                    'Switch Revenue values
                    For lRow = (intLastRowA + 1) To (intLastRowA + intLastRow - 2)
                        wsACT.Range("F" & lRow & ":F" & lRow) = wsACT.Range("F" & lRow & ":F" & lRow).Value * -1
                    Next lRow
                            
                    'Close PS
                    Workbooks(strWorkbookPS).Close SaveChanges:=False, Filename:=varFilename
                End If
            Else 'SUN or LRP FILE ************************************************************************
                'Look for Data tab
                For Each wsSource In ActiveWorkbook.Sheets
                    Select Case wsSource.Name
                    Case "data"
                        strName = "Sun"
                        Exit For
                    Case "Actuals"
                        strName = "LRP2"
                        Exit For
                    End Select
                Next wsSource
        
                If wsSource Is Nothing Then
                    MsgBox "Problem importing " & strWorkbookPS & "." & vbCrLf _
                        & "Could not find ""Data"" tab." & vbCrLf _
                        & "Please select the correct Actual file.", vbCritical, strTitle & " Error"
                    Workbooks(strWorkbookPS).Close SaveChanges:=False, Filename:=varFilename
                    Exit Sub
                Else
                    Select Case strName
                        Case "Sun"
                            'Identify Last Rows
                            intLastRowA = wsACT.Cells(Rows.Count, 1).End(xlUp).Row
                            intLastRow = Workbooks(strWorkbookPS).Worksheets("Data").Cells(Rows.Count, 1).End(xlUp).Row
                            
                            'Insert Data
                            wsACT.Range("A" & intLastRowA + 1 & ":A" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets("Data").Range("A2:A" & intLastRow).Value
                            wsACT.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets("Data").Range("C2:C" & intLastRow).Value
                            wsACT.Range("E" & intLastRowA + 1 & ":E" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets("Data").Range("D2:D" & intLastRow).Value
                            wsACT.Range("F" & intLastRowA + 1 & ":F" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets("Data").Range("F2:F" & intLastRow).Value
                            wsACT.Range("G" & intLastRowA + 1 & ":G" & intLastRowA + intLastRow - 2) = Workbooks(strWorkbookPS).Worksheets("Data").Range("F2:F" & intLastRow).Value
                            
                            'Close PS
                            Workbooks(strWorkbookPS).Close SaveChanges:=False, Filename:=varFilename
                            
                            'Split Rev and Rooms
                            For iLoop = 1 To intLastRow
                                If wsACT.Cells(iLoop, 5).Value > 899999 Then
                                    wsACT.Cells(iLoop, 6).Value = 0
                                End If
                                If wsACT.Cells(iLoop, 5).Value < 899999 Then
                                    wsACT.Cells(iLoop, 7).Value = 0
                                End If
                            Next iLoop
                            
                            'Switch Revenue values
                            For lRow = (intLastRowA + 1) To (intLastRowA + intLastRow - 2)
                                wsACT.Range("F" & lRow & ":F" & lRow) = wsACT.Range("F" & lRow & ":F" & lRow).Value * -1
                            Next lRow
    
                        Case "LRP2"
                            'Identify Last Rows
                            intLastRowA = wsACT.Cells(Rows.Count, 1).End(xlUp).Row
                            intLastRow = Workbooks(strWorkbookPS).Worksheets("Actuals").Cells(Rows.Count, 1).End(xlUp).Row
                            
                            'Insert Data
                            wsACT.Range("A" & intLastRowA + 1 & ":A" & intLastRowA + intLastRow - 7) = Workbooks(strWorkbookPS).Worksheets("Actuals").Range("B8:B" & intLastRow).Value
                            wsACT.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + intLastRow - 7) = Workbooks(strWorkbookPS).Worksheets("Actuals").Range("D8:D" & intLastRow).Value
                            wsACT.Range("E" & intLastRowA + 1 & ":E" & intLastRowA + intLastRow - 7) = Workbooks(strWorkbookPS).Worksheets("Actuals").Range("E8:E" & intLastRow).Value
                            wsACT.Range("F" & intLastRowA + 1 & ":F" & intLastRowA + intLastRow - 7) = Workbooks(strWorkbookPS).Worksheets("Actuals").Range("G8:G" & intLastRow).Value
                            wsACT.Range("G" & intLastRowA + 1 & ":G" & intLastRowA + intLastRow - 7) = Workbooks(strWorkbookPS).Worksheets("Actuals").Range("G8:G" & intLastRow).Value
                            
                            'Close PS
                            Workbooks(strWorkbookPS).Close SaveChanges:=False, Filename:=varFilename
                            
                            'Split Rev and Rooms
                            For iLoop = 1 To intLastRow - 7
                                If wsACT.Cells(iLoop, 5).Value > 899999 Then
                                    wsACT.Cells(iLoop, 6).Value = 0
                                End If
                                If wsACT.Cells(iLoop, 5).Value < 899999 Then
                                    wsACT.Cells(iLoop, 7).Value = 0
                                End If
                            Next iLoop
                    End Select
                End If

            End If
            
         Next iSelectedFile
    Else
        'error handler for no file selection
        If varFilename = False Then
            MsgBox "No file selected", , strTitle
            Exit Sub
        End If
    End If
       
        
    'Find the last row
    intLastRow = wsACT.Cells(Rows.Count, 1).End(xlUp).Row
    With wsACT
        'Account Definitions
        .Range("H2:H" & intLastRow).FormulaR1C1 = "=IFERROR(VLOOKUP(RC5,ACT_DESC,2,FALSE),"""")"
        .Range("I2:I" & intLastRow).FormulaR1C1 = "=VLOOKUP(WEEKDAY(RC2),WD_WE,3,FALSE)"
        .Range("J2:J" & intLastRow).FormulaR1C1 = "=IFERROR(VLOOKUP(RC5,ACT_DESC,3,FALSE),"""")"
        .Range("K2:K" & intLastRow).FormulaR1C1 = "=IF(RC8="""","""",IF(RC10=""Reb"",RC8&""Rev"",RC8&RC9&RC10))"

        'Name Ranges
        .Range("A1").CurrentRegion.Name = "ACT"
        .Range("B2:B" & intLastRow).Name = "ACT_DATE"
        .Range("F2:F" & intLastRow).Name = "ACT_REV"
        .Range("G2:G" & intLastRow).Name = "ACT_RMS"
        .Range("K2:K" & intLastRow).Name = "ACT_SEG"
        
        'Actuals Curr
        .Columns("B:B").AdvancedFilter Action:=xlFilterCopy, CopyToRange:=wsACT.Range("O1"), Unique:=True
    End With

    
        'Create Actuals Segment Totals
        intLastRow = wsACT.Cells(Rows.Count, 15).End(xlUp).Row
         wsACT.Sort.SortFields.Clear
        With wsACT.Sort
            .SetRange Range("O1:O" & intLastRow)
            .Header = xlYes
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
        
        wsACT.Range("P2:BI" & intLastRow).FormulaR1C1 = "=SUMIFS(ACT_REV,ACT_DATE,""=""&RC15,ACT_SEG,""=""&R1C)"
        wsACT.Range("BJ2:CY" & intLastRow).FormulaR1C1 = "=SUMIFS(ACT_RMS,ACT_DATE,""=""&RC15,ACT_SEG,""=""&R1C)"
        wsACT.Range("O2:CY" & intLastRow) = wsACT.Range("O2:CY" & intLastRow).Value
        wsACT.Cells.EntireColumn.AutoFit

    'Update Actuals_Curr
    With wsACT1
        .Range("A2:CK" & intLastRow) = wsACT.Range("O2:CY" & intLastRow).Value
        .Range("CL2:CL" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,183,TRUE)"
        .Range("CM2:CM" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,184,TRUE)"
        .Range("CN2:CN" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,185,TRUE)"
        .Range("CO2:CO" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,186,TRUE)"
        .Range("CP2:CP" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,187,TRUE)"
        .Range("CQ2:CQ" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,188,TRUE)"
        .Range("CR2:CR" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,189,TRUE)"
        .Range("CS2:CS" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC1,RP_Data,190,TRUE)"
        .Range("CT2:CT" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",IFERROR(IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7])/IF(RC[-3]=0,IF(RC[-2]=0,RC[-1],RC[-2]),RC[-3]),RC[1]),IF(CUR=""Actual USD"",IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7]),0)))))"
        .Range("CU2:CU" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",RC[-6]/RC[-2],IF(CUR=""Actual USD"",RC[-6],0)))))"
        .Range("B2:AU" & intLastRow).FormulaR1C1 = "=IF(RC98=0,0,Actuals!RC[14]/RC98)"
        .Range("CV2:CV" & intLastRow).FormulaR1C1 = "=SUM(RC[-46]:RC[-19])" 'transient rooms
        .Range("CW2:CW" & intLastRow).FormulaR1C1 = "=SUM(RC[-53]:RC[-48])+SUM(RC[-19]:RC[-16])" 'Group Rooms
        .Range("CX2:CX" & intLastRow).FormulaR1C1 = "=SUM(RC[-16]:RC[-15])" 'contract rooms
        .Range("A1").CurrentRegion.Name = "_ACT_Data"
        .Cells.EntireColumn.AutoFit
        .Sort.SortFields.Clear
        .Sort.SortFields.Add Key:=Range("A1"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        With .Sort
            .SetRange Range("A1:CX" & intLastRow)
            .Header = xlYes
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
    End With

    CombineSegAct
    
    ResetUsedRange
    
    'TimeStamp
    wsWelcome.Range("N24") = Now
    wsWelcome.Activate
    
    FormatSheets
    
    With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
    .EnableEvents = True: .StatusBar = False: End With
         
    MsgBox "Import Complete!", vbExclamation, strTitle

End Sub

Public Sub CombineSegAct()
Dim dtDesiredStart As Date, dtDesiredEnd As Date, dtMax As Date, intFirstRow As Integer, intLastRow As Integer, intFRow As Integer, intLastRowA As Integer

On Error Resume Next
wsSEG1.Range("_SEG_Data_Act").EntireRow.Delete
On Error GoTo 0

ResetUsedRange

'Add This Week Actuals******************************************************
dtDesiredStart = wsSetup.Range("L3").Value
dtDesiredEnd = wsWelcome.Range("OTB_TY").Value
dtMax = wsACT1.Cells(Rows.Count, 1).End(xlUp).Value

If dtMax > dtDesiredEnd Then
    wsSEG1.Range("_SEG_Data").AutoFilter Field:=1, Criteria1:=dtDesiredEnd, Operator:=xlAnd
    wsSEG1.Range("_SEG_Data").AutoFilter Field:=2, Criteria1:="<=" & dtMax, Operator:=xlAnd
    wsSEG1.AutoFilter.Range.Offset(1).Delete xlShiftUp
    wsSEG1.Range("_SEG_Data").AutoFilter
    
    'Identify Last Rows
    intLastRowA = wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row
    intFRow = intLastRowA + 1
    'Insert Data
    wsSEG1.Range("A" & intLastRowA + 1 & ":A" & (intLastRowA + 1 + (dtMax - dtDesiredStart))) = dtDesiredEnd
    wsSEG1.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + 1) = dtDesiredStart
    If dtDesiredEnd - dtDesiredStart > 0 Then
        wsSEG1.Range("B" & intLastRowA + 2 & ":B" & (intLastRowA + 1 + (dtMax - dtDesiredStart))).FormulaR1C1 = "=R[-1]C+1"
    End If
    wsSEG1.Range("C" & intLastRowA + 1 & ":CV" & (intLastRowA + 1 + (dtMax - dtDesiredStart))).FormulaR1C1 = "=IFERROR(VLOOKUP(RC2,_ACT_Data,CELL(""col"",R1C)-1,FALSE),0)"

Else
    
    'Identify Last Rows
    intLastRowA = wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row
    intFRow = intLastRowA + 1
    'Insert Data
    wsSEG1.Range("A" & intLastRowA + 1 & ":A" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))) = dtDesiredEnd
    wsSEG1.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + 1) = dtDesiredStart
    If dtDesiredEnd - dtDesiredStart > 0 Then
        wsSEG1.Range("B" & intLastRowA + 2 & ":B" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=R[-1]C+1"
    End If
    wsSEG1.Range("C" & intLastRowA + 1 & ":CV" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=IFERROR(VLOOKUP(RC2,_ACT_Data,CELL(""col"",R1C)-1,FALSE),0)"
End If

On Error Resume Next
'Delete RPT2 Tent/ToBe for dates that actauls are available
intLastRow = wsRPT2.Range("A1:A" & (wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row)). _
Find(What:=dtMax, LookIn:=xlFormulas, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False).Row
                        
If intLastRow > 2 Then
    wsRPT2.Range("A2:U" & intLastRow).EntireRow.Delete
End If
On Error GoTo 0

'Add Last Year Actuals******************************************************
dtDesiredStart = wsSetup.Range("L5").Value
dtDesiredEnd = wsSetup.Range("OTB_LY").Value - 1

'Identify Last Rows
intLastRowA = wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row

'Insert Data
wsSEG1.Range("A" & intLastRowA + 1 & ":A" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))) = dtDesiredEnd + 1
wsSEG1.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + 1) = dtDesiredStart
If dtDesiredEnd - dtDesiredStart > 0 Then
    wsSEG1.Range("B" & intLastRowA + 2 & ":B" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=R[-1]C+1"
End If
wsSEG1.Range("C" & intLastRowA + 1 & ":CV" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=IFERROR(VLOOKUP(RC2,_ACT_Data,CELL(""col"",R1C)-1,FALSE),0)"

'Add Last Week Actuals******************************************************
dtDesiredStart = wsSetup.Range("L4").Value
dtDesiredEnd = wsSetup.Range("OTB_Lw").Value

'Identify Last Rows
intLastRowA = wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row

'Insert Data
wsSEG1.Range("A" & intLastRowA + 1 & ":A" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))) = dtDesiredEnd
wsSEG1.Range("B" & intLastRowA + 1 & ":B" & intLastRowA + 1) = dtDesiredStart
If dtDesiredEnd - dtDesiredStart > 0 Then
    wsSEG1.Range("B" & intLastRowA + 2 & ":B" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=R[-1]C+1"
End If
wsSEG1.Range("C" & intLastRowA + 1 & ":CV" & (intLastRowA + 1 + (dtDesiredEnd - dtDesiredStart))).FormulaR1C1 = "=IFERROR(VLOOKUP(RC2,_ACT_Data,CELL(""col"",R1C)-1,FALSE),0)"

'Update Range******************************************************
With wsSEG1
    .Range("A1").CurrentRegion.Name = "_SEG_Data"
    .Range("A" & intFRow & ":CV" & wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row).Name = "_SEG_Data_Act"
    .Cells.EntireColumn.AutoFit
End With

End Sub




Attribute VB_Name = "modImportRPT"
Option Explicit
Option Private Module


Sub ImportRPT()
    
    Dim strTitle As String, strTitle2 As String, strWorkbookRPT As String, _
    strWorkbookA As String, strMessage As String, strFullName As String, strFilter As String, strCur As String, _
    intMessageReturn As Integer, intFilterIndex As Integer, intLastRow As Integer, _
    varFilename As Variant, _
    lRow As Long, _
    wsSource As Worksheet, wbSource As Workbook, _
    rngToCheck As Range, _
    strYear As String, strYear1 As String, strYear2 As String, strYear3 As String

    
    strWorkbookA = ActiveWorkbook.Name
    
    strFilter = "Excel (*.xlsx; *.xlsm; *.xls), *.xlsx; *.xlsm; *.xls"
    intFilterIndex = 1
    strTitle = "Import Revenue Planning Template"
    strTitle2 = " - Browse and select your file."
    'open dialog box to select Revenue Planning Template
    varFilename = Application.GetOpenFilename _
        (filefilter:=strFilter, FilterIndex:=intFilterIndex, Title:=strTitle & strTitle2, MultiSelect:=False)
    
    'error handler for no file selection
    If varFilename = False Then
        MsgBox "No file selected", , strTitle
        Exit Sub
    End If
    
    MsgBox "You selected: " & varFilename, , strTitle
       
    'Open the selected Revenue Planning Template file
    Workbooks.Open Filename:=varFilename, UpdateLinks:=0
    strFullName = varFilename
    strWorkbookRPT = GetFileName(strFullName)
    
    For Each wsSource In ActiveWorkbook.Sheets
        If wsSource.Name = "Archive" Then Exit For
    Next wsSource

    If wsSource Is Nothing Then
        MsgBox "Problem importing " & strWorkbookRPT & "." & vbCrLf _
            & "Could not find ""Archive"" tab." & vbCrLf _
            & "Please select the Revenue Planning Template.", vbCritical, strTitle & " Error"
        Workbooks(strWorkbookRPT).Close SaveChanges:=False, Filename:=varFilename
        Exit Sub
    Else
        If Workbooks(strWorkbookRPT).Worksheets("Settings").Range("PdOrMo").Value = "Pd" Then
            MsgBox "Problem importing " & strWorkbookRPT & "." & vbCrLf _
            & "Segmentation Analysis only works for Month hotels.", vbCritical, strTitle & " Error"
            Workbooks(strWorkbookRPT).Close SaveChanges:=False, Filename:=varFilename
            Exit Sub
        Else
                With Application: .StatusBar = "Importing.": .EnableEvents = False: _
                .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
                        
                'Prepare the ProjData sheet
                intLastRow = wsRPT.Cells(Rows.Count, 1).End(xlUp).Row
            
                'Clear RPT
                If wsRPT.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                    wsRPT.Range("A2:GJ" & wsRPT.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
                End If
                If wsRPT1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                    wsRPT1.Range("A2:GJ" & wsRPT1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
                End If
                If wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                    wsRPT2.Range("A2:AE" & wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
                End If
                
                ResetUsedRange
                
                'Identify Last Row
                intLastRow = Workbooks(strWorkbookRPT).Worksheets("Archive").Cells(Rows.Count, 1).End(xlUp).Row
                
                
                
                'Insert Data
                ' Column  - 1 A - Date = RPT - INV_DATE
                wsRPT.Range("A2:A" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("A2:A" & intLastRow).Value
                ' Column  - 2 B - DAY
                wsRPT.Range("B2:B" & intLastRow).FormulaR1C1 = "=DAY(RC1)"
                ' Column  - 3 C - MonthYear
                wsRPT.Range("C2:C" & intLastRow).FormulaR1C1 = "=MONTH(RC1)&YEAR(RC1)"
                ' Column  - 4 D - Year
                wsRPT.Range("D2:D" & intLastRow).FormulaR1C1 = "=YEAR(RC1)"
                
                'Segmentation Details Transient and Group
                For lRow = 2 To intLastRow
                    If wsRPT.Cells(lRow, 2).Value = 1 Then
                        wsRPT.Range("E" & lRow & ":E" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 1 & ":CI" & lRow + 1).Value
                        wsRPT.Range("F" & lRow & ":F" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 1 & ":CM" & lRow + 1).Value
                        wsRPT.Range("G" & lRow & ":G" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 2 & ":CI" & lRow + 2).Value
                        wsRPT.Range("H" & lRow & ":H" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 2 & ":CM" & lRow + 2).Value
                        wsRPT.Range("I" & lRow & ":I" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 3 & ":CI" & lRow + 3).Value
                        wsRPT.Range("J" & lRow & ":J" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 3 & ":CM" & lRow + 3).Value
                        wsRPT.Range("K" & lRow & ":K" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 4 & ":CI" & lRow + 4).Value
                        wsRPT.Range("L" & lRow & ":L" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 4 & ":CM" & lRow + 4).Value
                        wsRPT.Range("M" & lRow & ":M" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 5 & ":CI" & lRow + 5).Value
                        wsRPT.Range("N" & lRow & ":N" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 5 & ":CM" & lRow + 5).Value
                        wsRPT.Range("O" & lRow & ":O" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 6 & ":CI" & lRow + 6).Value
                        wsRPT.Range("P" & lRow & ":P" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 6 & ":CM" & lRow + 6).Value
                        wsRPT.Range("Q" & lRow & ":Q" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 7 & ":CI" & lRow + 7).Value
                        wsRPT.Range("R" & lRow & ":R" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 7 & ":CM" & lRow + 7).Value
                        wsRPT.Range("S" & lRow & ":S" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 8 & ":CI" & lRow + 8).Value
                        wsRPT.Range("T" & lRow & ":T" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 8 & ":CM" & lRow + 8).Value
                        wsRPT.Range("U" & lRow & ":U" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 9 & ":CI" & lRow + 9).Value
                        wsRPT.Range("V" & lRow & ":V" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 9 & ":CM" & lRow + 9).Value
                        wsRPT.Range("W" & lRow & ":W" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 10 & ":CI" & lRow + 10).Value
                        wsRPT.Range("X" & lRow & ":X" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 10 & ":CM" & lRow + 10).Value
                        wsRPT.Range("Y" & lRow & ":Y" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 11 & ":CI" & lRow + 11).Value
                        wsRPT.Range("Z" & lRow & ":Z" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 11 & ":CM" & lRow + 11).Value
                        wsRPT.Range("AA" & lRow & ":AA" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 12 & ":CI" & lRow + 12).Value
                        wsRPT.Range("AB" & lRow & ":AB" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 12 & ":CM" & lRow + 12).Value
                        wsRPT.Range("AC" & lRow & ":AC" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 13 & ":CI" & lRow + 13).Value
                        wsRPT.Range("AD" & lRow & ":AD" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 13 & ":CM" & lRow + 13).Value
                        wsRPT.Range("AE" & lRow & ":AE" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 14 & ":CI" & lRow + 14).Value
                        wsRPT.Range("AF" & lRow & ":AF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 14 & ":CM" & lRow + 14).Value
                        wsRPT.Range("AG" & lRow & ":AG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 15 & ":CI" & lRow + 15).Value
                        wsRPT.Range("AH" & lRow & ":AH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 15 & ":CM" & lRow + 15).Value
                        wsRPT.Range("AI" & lRow & ":AI" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 16 & ":CI" & lRow + 16).Value
                        wsRPT.Range("AJ" & lRow & ":AJ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 16 & ":CM" & lRow + 16).Value
                        wsRPT.Range("AK" & lRow & ":AK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 17 & ":CI" & lRow + 17).Value
                        wsRPT.Range("AL" & lRow & ":AL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 17 & ":CM" & lRow + 17).Value
                        wsRPT.Range("AM" & lRow & ":AM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 18 & ":CI" & lRow + 18).Value
                        wsRPT.Range("AN" & lRow & ":AN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 18 & ":CM" & lRow + 18).Value
                        wsRPT.Range("AO" & lRow & ":AO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CI" & lRow + 19 & ":CI" & lRow + 19).Value
                        wsRPT.Range("AP" & lRow & ":AP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CM" & lRow + 19 & ":CM" & lRow + 19).Value

                        wsRPT.Range("AW" & lRow & ":AW" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 1 & ":CH" & lRow + 1).Value
                        wsRPT.Range("AX" & lRow & ":AX" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 1 & ":CL" & lRow + 1).Value
                        wsRPT.Range("AY" & lRow & ":AY" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 2 & ":CH" & lRow + 2).Value
                        wsRPT.Range("AZ" & lRow & ":AZ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 2 & ":CL" & lRow + 2).Value
                        wsRPT.Range("BA" & lRow & ":BA" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 3 & ":CH" & lRow + 3).Value
                        wsRPT.Range("BB" & lRow & ":BB" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 3 & ":CL" & lRow + 3).Value
                        wsRPT.Range("BC" & lRow & ":BC" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 4 & ":CH" & lRow + 4).Value
                        wsRPT.Range("BD" & lRow & ":BD" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 4 & ":CL" & lRow + 4).Value
                        wsRPT.Range("BE" & lRow & ":BE" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 5 & ":CH" & lRow + 5).Value
                        wsRPT.Range("BF" & lRow & ":BF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 5 & ":CL" & lRow + 5).Value
                        wsRPT.Range("BG" & lRow & ":BG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 6 & ":CH" & lRow + 6).Value
                        wsRPT.Range("BH" & lRow & ":BH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 6 & ":CL" & lRow + 6).Value
                        wsRPT.Range("BI" & lRow & ":BI" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 7 & ":CH" & lRow + 7).Value
                        wsRPT.Range("BJ" & lRow & ":BJ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 7 & ":CL" & lRow + 7).Value
                        wsRPT.Range("BK" & lRow & ":BK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 8 & ":CH" & lRow + 8).Value
                        wsRPT.Range("BL" & lRow & ":BL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 8 & ":CL" & lRow + 8).Value
                        wsRPT.Range("BM" & lRow & ":BM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 9 & ":CH" & lRow + 9).Value
                        wsRPT.Range("BN" & lRow & ":BN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 9 & ":CL" & lRow + 9).Value
                        wsRPT.Range("BO" & lRow & ":BO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 10 & ":CH" & lRow + 10).Value
                        wsRPT.Range("BP" & lRow & ":BP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 10 & ":CL" & lRow + 10).Value
                        wsRPT.Range("BQ" & lRow & ":BQ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 11 & ":CH" & lRow + 11).Value
                        wsRPT.Range("BR" & lRow & ":BR" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 11 & ":CL" & lRow + 11).Value
                        wsRPT.Range("BS" & lRow & ":BS" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 12 & ":CH" & lRow + 12).Value
                        wsRPT.Range("BT" & lRow & ":BT" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 12 & ":CL" & lRow + 12).Value
                        wsRPT.Range("BU" & lRow & ":BU" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 13 & ":CH" & lRow + 13).Value
                        wsRPT.Range("BV" & lRow & ":BV" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 13 & ":CL" & lRow + 13).Value
                        wsRPT.Range("BW" & lRow & ":BW" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 14 & ":CH" & lRow + 14).Value
                        wsRPT.Range("BX" & lRow & ":BX" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 14 & ":CL" & lRow + 14).Value
                        wsRPT.Range("BY" & lRow & ":BY" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 15 & ":CH" & lRow + 15).Value
                        wsRPT.Range("BZ" & lRow & ":BZ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 15 & ":CL" & lRow + 15).Value
                        wsRPT.Range("CA" & lRow & ":CA" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 16 & ":CH" & lRow + 16).Value
                        wsRPT.Range("CB" & lRow & ":CB" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 16 & ":CL" & lRow + 16).Value
                        wsRPT.Range("CC" & lRow & ":CC" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 17 & ":CH" & lRow + 17).Value
                        wsRPT.Range("CD" & lRow & ":CD" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 17 & ":CL" & lRow + 17).Value
                        wsRPT.Range("CE" & lRow & ":CE" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 18 & ":CH" & lRow + 18).Value
                        wsRPT.Range("CF" & lRow & ":CF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 18 & ":CL" & lRow + 18).Value
                        wsRPT.Range("CG" & lRow & ":CG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CH" & lRow + 19 & ":CH" & lRow + 19).Value
                        wsRPT.Range("CH" & lRow & ":CH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CL" & lRow + 19 & ":CL" & lRow + 19).Value

                        wsRPT.Range("CK" & lRow & ":CK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 1 & ":CG" & lRow + 1).Value
                        wsRPT.Range("CL" & lRow & ":CL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 1 & ":CK" & lRow + 1).Value
                        wsRPT.Range("CM" & lRow & ":CM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 2 & ":CG" & lRow + 2).Value
                        wsRPT.Range("CN" & lRow & ":CN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 2 & ":CK" & lRow + 2).Value
                        wsRPT.Range("CO" & lRow & ":CO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 3 & ":CG" & lRow + 3).Value
                        wsRPT.Range("CP" & lRow & ":CP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 3 & ":CK" & lRow + 3).Value
                        wsRPT.Range("CQ" & lRow & ":CQ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 4 & ":CG" & lRow + 4).Value
                        wsRPT.Range("CR" & lRow & ":CR" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 4 & ":CK" & lRow + 4).Value
                        wsRPT.Range("CS" & lRow & ":CS" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 5 & ":CG" & lRow + 5).Value
                        wsRPT.Range("CT" & lRow & ":CT" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 5 & ":CK" & lRow + 5).Value
                        wsRPT.Range("CU" & lRow & ":CU" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 6 & ":CG" & lRow + 6).Value
                        wsRPT.Range("CV" & lRow & ":CV" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 6 & ":CK" & lRow + 6).Value
                        wsRPT.Range("CW" & lRow & ":CW" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 7 & ":CG" & lRow + 7).Value
                        wsRPT.Range("CX" & lRow & ":CX" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 7 & ":CK" & lRow + 7).Value
                        wsRPT.Range("CY" & lRow & ":CY" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 8 & ":CG" & lRow + 8).Value
                        wsRPT.Range("CZ" & lRow & ":CZ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 8 & ":CK" & lRow + 8).Value
                        wsRPT.Range("DA" & lRow & ":DA" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 9 & ":CG" & lRow + 9).Value
                        wsRPT.Range("DB" & lRow & ":DB" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 9 & ":CK" & lRow + 9).Value
                        wsRPT.Range("DC" & lRow & ":DC" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 10 & ":CG" & lRow + 10).Value
                        wsRPT.Range("DD" & lRow & ":DD" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 10 & ":CK" & lRow + 10).Value
                        wsRPT.Range("DE" & lRow & ":DE" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 11 & ":CG" & lRow + 11).Value
                        wsRPT.Range("DF" & lRow & ":DF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 11 & ":CK" & lRow + 11).Value
                        wsRPT.Range("DG" & lRow & ":DG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 12 & ":CG" & lRow + 12).Value
                        wsRPT.Range("DH" & lRow & ":DH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 12 & ":CK" & lRow + 12).Value
                        wsRPT.Range("DI" & lRow & ":DI" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 13 & ":CG" & lRow + 13).Value
                        wsRPT.Range("DJ" & lRow & ":DJ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 13 & ":CK" & lRow + 13).Value
                        wsRPT.Range("DK" & lRow & ":DK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 14 & ":CG" & lRow + 14).Value
                        wsRPT.Range("DL" & lRow & ":DL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 14 & ":CK" & lRow + 14).Value
                        wsRPT.Range("DM" & lRow & ":DM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 15 & ":CG" & lRow + 15).Value
                        wsRPT.Range("DN" & lRow & ":DN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 15 & ":CK" & lRow + 15).Value
                        wsRPT.Range("DO" & lRow & ":DO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 16 & ":CG" & lRow + 16).Value
                        wsRPT.Range("DP" & lRow & ":DP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 16 & ":CK" & lRow + 16).Value
                        wsRPT.Range("DQ" & lRow & ":DQ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 17 & ":CG" & lRow + 17).Value
                        wsRPT.Range("DR" & lRow & ":DR" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 17 & ":CK" & lRow + 17).Value
                        wsRPT.Range("DS" & lRow & ":DS" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 18 & ":CG" & lRow + 18).Value
                        wsRPT.Range("DT" & lRow & ":DT" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 18 & ":CK" & lRow + 18).Value
                        wsRPT.Range("DU" & lRow & ":DU" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CG" & lRow + 19 & ":CG" & lRow + 19).Value
                        wsRPT.Range("DV" & lRow & ":DV" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CK" & lRow + 19 & ":CK" & lRow + 19).Value

                        wsRPT.Range("EF" & lRow & ":EF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 1 & ":CF" & lRow + 1).Value
                        wsRPT.Range("EG" & lRow & ":EG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 1 & ":CJ" & lRow + 1).Value
                        wsRPT.Range("EH" & lRow & ":EH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 2 & ":CF" & lRow + 2).Value
                        wsRPT.Range("EI" & lRow & ":EI" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 2 & ":CJ" & lRow + 2).Value
                        wsRPT.Range("EJ" & lRow & ":EJ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 3 & ":CF" & lRow + 3).Value
                        wsRPT.Range("EK" & lRow & ":EK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 3 & ":CJ" & lRow + 3).Value
                        wsRPT.Range("EL" & lRow & ":EL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 4 & ":CF" & lRow + 4).Value
                        wsRPT.Range("EM" & lRow & ":EM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 4 & ":CJ" & lRow + 4).Value
                        wsRPT.Range("EN" & lRow & ":EN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 5 & ":CF" & lRow + 5).Value
                        wsRPT.Range("EO" & lRow & ":EO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 5 & ":CJ" & lRow + 5).Value
                        wsRPT.Range("EP" & lRow & ":EP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 6 & ":CF" & lRow + 6).Value
                        wsRPT.Range("EQ" & lRow & ":EQ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 6 & ":CJ" & lRow + 6).Value
                        wsRPT.Range("ER" & lRow & ":ER" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 7 & ":CF" & lRow + 7).Value
                        wsRPT.Range("ES" & lRow & ":ES" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 7 & ":CJ" & lRow + 7).Value
                        wsRPT.Range("ET" & lRow & ":ET" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 8 & ":CF" & lRow + 8).Value
                        wsRPT.Range("EU" & lRow & ":EU" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 8 & ":CJ" & lRow + 8).Value
                        wsRPT.Range("EV" & lRow & ":EV" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 9 & ":CF" & lRow + 9).Value
                        wsRPT.Range("EW" & lRow & ":EW" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 9 & ":CJ" & lRow + 9).Value
                        wsRPT.Range("EX" & lRow & ":EX" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 10 & ":CF" & lRow + 10).Value
                        wsRPT.Range("EY" & lRow & ":EY" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 10 & ":CJ" & lRow + 10).Value
                        wsRPT.Range("EZ" & lRow & ":EZ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 11 & ":CF" & lRow + 11).Value
                        wsRPT.Range("FA" & lRow & ":FA" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 11 & ":CJ" & lRow + 11).Value
                        wsRPT.Range("FB" & lRow & ":FB" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 12 & ":CF" & lRow + 12).Value
                        wsRPT.Range("FC" & lRow & ":FC" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 12 & ":CJ" & lRow + 12).Value
                        wsRPT.Range("FD" & lRow & ":FD" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 13 & ":CF" & lRow + 13).Value
                        wsRPT.Range("FE" & lRow & ":FE" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 13 & ":CJ" & lRow + 13).Value
                        wsRPT.Range("FF" & lRow & ":FF" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 14 & ":CF" & lRow + 14).Value
                        wsRPT.Range("FG" & lRow & ":FG" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 14 & ":CJ" & lRow + 14).Value
                        wsRPT.Range("FH" & lRow & ":FH" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 15 & ":CF" & lRow + 15).Value
                        wsRPT.Range("FI" & lRow & ":FI" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 15 & ":CJ" & lRow + 15).Value
                        wsRPT.Range("FJ" & lRow & ":FJ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 16 & ":CF" & lRow + 16).Value
                        wsRPT.Range("FK" & lRow & ":FK" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 16 & ":CJ" & lRow + 16).Value
                        wsRPT.Range("FL" & lRow & ":FL" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 17 & ":CF" & lRow + 17).Value
                        wsRPT.Range("FM" & lRow & ":FM" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 17 & ":CJ" & lRow + 17).Value
                        wsRPT.Range("FN" & lRow & ":FN" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 18 & ":CF" & lRow + 18).Value
                        wsRPT.Range("FO" & lRow & ":FO" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 18 & ":CJ" & lRow + 18).Value
                        wsRPT.Range("FP" & lRow & ":FP" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CF" & lRow + 19 & ":CF" & lRow + 19).Value
                        wsRPT.Range("FQ" & lRow & ":FQ" & lRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CJ" & lRow + 19 & ":CJ" & lRow + 19).Value

                    End If
                Next lRow
                
                'Contract
                wsRPT.Range("AQ2:AQ" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BI2:BI" & intLastRow).Value
                wsRPT.Range("AR2:AR" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BJ2:BJ" & intLastRow).Value
                wsRPT.Range("CI2:CI" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BG2:BG" & intLastRow).Value
                wsRPT.Range("CJ2:CJ" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BH2:BH" & intLastRow).Value
                wsRPT.Range("EC2:EC" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("AA2:AA" & intLastRow).Value
                wsRPT.Range("ED2:ED" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("AU2:AU" & intLastRow).Value
                wsRPT.Range("EE2:EE" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("AV2:AV" & intLastRow).Value
                wsRPT.Range("FT2:FT" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("R2:R" & intLastRow).Value
                
                'Rebates and Other Revenue
                wsRPT.Range("AS2:AS" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BL2:BL" & intLastRow).Value
                wsRPT.Range("AT2:AT" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BM2:BM" & intLastRow).Value
                wsRPT.Range("AU2:AU" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BN2:BN" & intLastRow).Value
                wsRPT.Range("AV2:AV" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("BK2:BK" & intLastRow).Value
                wsRPT.Range("DY2:DY" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("N2:N" & intLastRow).Value
                wsRPT.Range("DZ2:DZ" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("O2:O" & intLastRow).Value
                wsRPT.Range("EA2:EA" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("T2:T" & intLastRow).Value
                wsRPT.Range("EB2:EB" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("Y2:Y" & intLastRow).Value
                
                'Capacity
                wsRPT.Range("FY2:FY" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("AO2:AO" & intLastRow).Value
        
                'Weekday
                wsRPT.Range("FZ2:FZ" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("DH2:DH" & intLastRow).Value
        
                'Currency
                wsRPT.Range("GA2:GA" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CN2:CN" & intLastRow).Value
                wsRPT.Range("GB2:GB" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CO2:CO" & intLastRow).Value
                wsRPT.Range("GC2:GC" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CP2:CP" & intLastRow).Value
                wsRPT.Range("GD2:GD" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CR2:CR" & intLastRow).Value
                wsRPT.Range("GE2:GE" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CS2:CS" & intLastRow).Value
                wsRPT.Range("GF2:GF" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CT2:CT" & intLastRow).Value
                wsRPT.Range("GG2:GG" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CU2:CU" & intLastRow).Value
                wsRPT.Range("GH2:GH" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CW2:CW" & intLastRow).Value
 
                
                'Currency Codes
                wsSetup.Range("B2") = Workbooks(strWorkbookRPT).Worksheets("Settings").Range("I45").Value
                wsSetup.Range("B3") = Workbooks(strWorkbookRPT).Worksheets("Settings").Range("I46").Value
                
                'Weekend/Weekday
                wsSetup.Range("A9:B15") = Workbooks(strWorkbookRPT).Worksheets("Settings").Range("H20:I26").Value
                
                ' Hotel Name
                wsWelcome.Range("I18") = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CZ2").Value
                wsWelcome.Range("I19") = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("CY2").Value


                'Group Tent/Tobe
                'Insert Data
                ' Column  - 1 A - Date = RPT - INV_DATE
                wsRPT2.Range("A2:A" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("A2:A" & intLastRow).Value
                'Group Rooms Tent and ToBe
                wsRPT2.Range("B2:B" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("E2:E" & intLastRow).Value
                wsRPT2.Range("C2:C" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("F2:F" & intLastRow).Value
                'Group Revenue Tent and ToBe
                wsRPT2.Range("D2:D" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("V2:V" & intLastRow).Value
                wsRPT2.Range("E2:E" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("W2:W" & intLastRow).Value
                wsRPT2.Range("F2:F" & intLastRow).FormulaR1C1 = "=VLOOKUP(WEEKDAY(RC1),WD_WE,3,FALSE)"
                wsRPT2.Range("G2:G" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("A2:A" & intLastRow).Value
                'Group Rooms Def
                wsRPT2.Range("Z2:Z" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("D2:D" & intLastRow).Value
                'Group Revenue Def
                wsRPT2.Range("AA2:AA" & intLastRow) = Workbooks(strWorkbookRPT).Worksheets("Archive").Range("U2:U" & intLastRow).Value

                'Name Ranges
                With wsRPT2
                    .Range("A1").CurrentRegion.Name = "RPT2_"
                    .Range("A2:A" & intLastRow).Name = "RPT2_DATE"
                    .Range("B2:B" & intLastRow).Name = "RPT2_TENT_RMS"
                    .Range("C2:C" & intLastRow).Name = "RPT2_TOBE_RMS"
                    .Range("D2:D" & intLastRow).Name = "RPT2_TENT_REV"
                    .Range("E2:E" & intLastRow).Name = "RPT2_TOBE_REV"
                    .Range("F2:F" & intLastRow).Name = "RPT2_WDWE"
                    .Range("Z2:Z" & intLastRow).Name = "RPT2_DEF_RMS"
                    .Range("AA2:AA" & intLastRow).Name = "RPT2_DEF_REV"
                End With
                
                'Close RPT
                Workbooks(strWorkbookRPT).Close SaveChanges:=False, Filename:=varFilename
                
                'Name Ranges
                wsRPT.Range("A1").CurrentRegion.Name = "RP_Data"
                wsRPT.Range("C1:C" & intLastRow).Name = "RP_MonthYear"
                wsRPT.Range("FY1:FY" & intLastRow).Name = "RP_Cap"
                wsRPT.Range("FZ1:FZ" & intLastRow).Name = "RP_WE"
                wsRPT.Range("EC1:EC" & intLastRow).Name = "RP_CntRev"
                wsRPT.Range("FT1:FT" & intLastRow).Name = "RP_CntRms"
        
                'Contract Details
                For lRow = 2 To intLastRow
                    If wsRPT.Cells(lRow, 2).Value = 1 Then
                        wsRPT.Range("DW" & lRow & ":DW" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=FALSE),RP_CntRev)"
                        wsRPT.Range("DX" & lRow & ":DX" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=TRUE),RP_CntRev)"
                        wsRPT.Range("FR" & lRow & ":FR" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=FALSE),RP_CntRms)"
                        wsRPT.Range("FS" & lRow & ":FS" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=TRUE),RP_CntRms)"
                        wsRPT.Range("FU" & lRow & ":FU" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=FALSE),RP_Cap)"
                        wsRPT.Range("FV" & lRow & ":FV" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=TRUE),RP_Cap)"
                        wsRPT.Range("FW" & lRow & ":FW" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=FALSE))"
                        wsRPT.Range("FX" & lRow & ":FX" & lRow).FormulaR1C1 = "=SUMPRODUCT(--(RP_MonthYear=RC3),--(RP_WE=TRUE))"
                    End If
                    
                Next lRow
                
                Application.Calculate
                wsRPT.Range("RP_Data") = wsRPT.Range("RP_Data").Value
                
                'Delete Blank Rows
                Set rngToCheck = wsRPT.Range("GA1:GA" & intLastRow)
        
                    If rngToCheck.Count > 1 Then
                        'if there are no blank cells then there will be an error
                        On Error Resume Next
                        rngToCheck.SpecialCells(xlCellTypeBlanks).EntireRow.Delete
                        On Error GoTo 0
                    Else
                        If VBA.IsEmpty(rngToCheck) Then rngToCheck.EntireRow.Delete
                    End If
                
                'Set Null to 0
                intLastRow = wsRPT.Cells(Rows.Count, 1).End(xlUp).Row
                wsRPT.Range("B2:GH" & intLastRow).Replace What:="", Replacement:="0", SearchOrder:=xlByColumns, MatchCase:=True
                wsRPT.Range("FZ2:FZ" & intLastRow).ClearContents
                wsRPT.Range("EC2:EC" & intLastRow).ClearContents
                wsRPT.Range("FT2:FT" & intLastRow).ClearContents
                
                For lRow = 2 To intLastRow
                    If wsRPT.Cells(lRow, 134).Value <> 0 Then
                        wsRPT.Range("DW" & lRow & ":DW" & lRow) = wsRPT.Range("ED" & lRow & ":ED" & lRow).Value
                    End If
                    If wsRPT.Cells(lRow, 135).Value <> 0 Then
                        wsRPT.Range("DX" & lRow & ":DX" & lRow) = wsRPT.Range("EE" & lRow & ":EE" & lRow).Value
                    End If
                Next lRow
                
                wsRPT.Cells.EntireColumn.AutoFit
                Range("A1").Select
        End If
    End If
    
    'Set FX rate to 1 for USD currency
    For lRow = 2 To intLastRow
        If wsRPT.Cells(lRow, 183).Value = "USD" Then
            wsRPT.Range("GB" & lRow & ":GD" & lRow).Value = 1
        End If
        If wsRPT.Cells(lRow, 187).Value = "USD" Then
            wsRPT.Range("GF" & lRow & ":GH" & lRow).Value = 1
        End If
    Next lRow
                

    'Update RPT_Curr
    With wsRPT1
        .Range("A2:GJ" & intLastRow) = wsRPT.Range("A2:GJ" & intLastRow).Value
        .Range("GI2:GI" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",IFERROR(IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7])/IF(RC[-3]=0,IF(RC[-2]=0,RC[-1],RC[-2]),RC[-3]),RC[1]),IF(CUR=""Actual USD"",IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7]),0)))))"
        .Range("GJ2:GJ" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",RC[-6]/RC[-2],IF(CUR=""Actual USD"",RC[-6],0)))))"
        .Range("E2:AV" & intLastRow).FormulaR1C1 = "=IF(RC192=0,0,RPT!RC/RC192)"
        .Range("CK2:EE" & intLastRow).FormulaR1C1 = "=IF(RC191=0,IF(RC192=0,0,RPT!RC/RC192),RPT!RC/RC191)"
        .Cells.EntireColumn.AutoFit
        .Range("A1").CurrentRegion.Name = "_RP_Data"
    End With
    
    'Update Group Tent/ToBe
    intLastRow = wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row
    With wsRPT2
        .Range("P2:P" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,183,TRUE)"
        .Range("Q2:Q" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,184,TRUE)"
        .Range("R2:R" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,185,TRUE)"
        .Range("S2:S" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,186,TRUE)"
        .Range("T2:T" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,187,TRUE)"
        .Range("U2:U" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,188,TRUE)"
        .Range("V2:V" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,189,TRUE)"
        .Range("W2:W" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC7,RP_Data,190,TRUE)"
        .Range("X2:X" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",IFERROR(IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7])/IF(RC[-3]=0,IF(RC[-2]=0,RC[-1],RC[-2]),RC[-3]),RC[1]),IF(CUR=""Actual USD"",IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7]),0)))))"
        .Range("Y2:Y" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Local"",CUR=""Actual Local""),1,IF(CUR=""Constant Selling"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC1),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC1),CST_RATES,2,FALSE),IF(CUR=""Actual Selling"",RC[-6]/RC[-2],IF(CUR=""Actual USD"",RC[-6],0)))))"
        .Range("H2:H" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_TENT_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")"
        .Range("I2:I" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_TOBE_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")"
        .Range("J2:J" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_TENT_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")"
        .Range("K2:K" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_TOBE_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")"
        .Range("L2:L" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_TENT_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")/RC24)"
        .Range("M2:M" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_TOBE_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")/RC24)"
        .Range("N2:N" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_TENT_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")/RC24)"
        .Range("O2:O" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_TOBE_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")/RC24)"
        'DEF
        .Range("AB2:AB" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_DEF_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")"
        .Range("AC2:AC" & intLastRow).FormulaR1C1 = "=SUMIFS(RPT2_DEF_RMS,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")"
        .Range("AD2:AD" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_DEF_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WD"")/RC24)"
        .Range("AE2:AE" & intLastRow).FormulaR1C1 = "=IF(RC24=0,0,SUMIFS(RPT2_DEF_REV,RPT2_DATE,RC7,RPT2_WDWE,""=WE"")/RC24)"
        .Range("G1:AE" & (wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row)).Name = "_RPT2_Data"
        .Cells.EntireColumn.AutoFit
    End With

    FormatSheets
    ResetUsedRange
   
    wsWelcome.Activate
    
    Call PROC_SEG
    
    'TimeStamp
    wsWelcome.Range("N20") = Now
    
    strYear = ""
    With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
    .EnableEvents = True: .StatusBar = False: End With
    
    If IsError(wsSetup.Range("B19").Value) Then
        strYear1 = " " & wsSetup.Range("A19").Value
        strYear = "Please update your RPT with the extract for the following year:"
    End If
    
    If IsError(wsSetup.Range("B20").Value) Then
        strYear2 = " " & wsSetup.Range("A20").Value
        strYear = "Please update your RPT with the extract for the following year:"
        If strYear1 <> "" Then
            strYear = "Please update your RPT with the extracts for the following years:"
        End If
    End If
    
    If IsError(wsSetup.Range("B21").Value) Then
        strYear3 = " " & wsSetup.Range("A21").Value
        strYear = "Please update your RPT with the extract for the following year:"
        If strYear1 <> "" Then
            strYear = "Please update your RPT with the extracts for the following years:"
        End If
        If strYear2 <> "" Then
            strYear = "Please update your RPT with the extracts for the following years:"
        End If
    End If
    
    MsgBox "Import Complete!", vbExclamation, strTitle
    
    If strYear <> "" Then
    MsgBox strYear & vbCrLf _
    & strYear1 & strYear2 & strYear3, vbCritical, strTitle
    End If
End Sub
Attribute VB_Name = "modImportSEG10"
Option Explicit
Option Private Module
Public strTitle As String, strTitle2 As String, strWorkbookSEG As String, _
    strWorkbookA As String, strMessage As String, strFullName As String, strFilter As String, strCur As String, _
    intMessageReturn As Integer, intFilterIndex As Integer, intLastRow As Integer, intLastRowA As Integer, _
    varFilename As Variant, sOR As String, iSelectedFile As Integer, intFirstRow As Integer, _
    lRow As Long, iLoop As Integer, dtDesired As Date, strFiles As String, _
    wsSource As Worksheet, wbSource As Workbook, _
    rngToCheck As Range, FSO  As Object, oApp As Object, Fname As Variant, FileNameFolder As Variant, DefPath As String, _
    strDate As String, item As Long, i As Long, C As Long, num As Long, objFiles As Object

Public Sub ImportSEG() '.csv format
    
    strWorkbookA = ActiveWorkbook.Name
    strFiles = ""
    strTitle = "Import SEG 10 Files"
    intFilterIndex = 1
    strTitle2 = " - Browse and select files - Hold down CTRL to select more than one file."
    
    
    
        If MsgBox("Are you importing from Zip files?", _
            vbYesNo, strTitle) = vbYes Then
            'unzip files and import them all
                strFilter = "Zip Files (*.zip), *.zip"
                varFilename = Application.GetOpenFilename _
                (filefilter:=strFilter, FilterIndex:=intFilterIndex, Title:=strTitle & strTitle2, MultiSelect:=True)
                
                If IsArray(varFilename) = False Then
                    'error handler for no file selection
                    MsgBox "No file selected", , strTitle
                    Exit Sub
                Else
        
                    'Root folder for the new folder.
                    DefPath = Application.DefaultFilePath
                    If Right(DefPath, 1) <> "\" Then
                        DefPath = DefPath & "\"
                    End If
            
                    'Create the folder name
                    strDate = wsSetup.Range("A26").Value
                    FileNameFolder = DefPath & "MyUnzipFolder " & strDate & "\"
            
                    'Make the normal folder in DefPath
                    MkDir FileNameFolder
            
                    'Extract the files into the newly created folder
                    Set oApp = CreateObject("Shell.Application")
            
                    For i = LBound(varFilename) To UBound(varFilename)
                        num = oApp.Namespace(FileNameFolder).items.Count
                        C = C + 1
                        oApp.Namespace(FileNameFolder).CopyHere oApp.Namespace(varFilename(i)).items
                        
                        For Each FSO In oApp.Namespace(FileNameFolder).items
                            If FSO.Name Like "SEG10.csv" Then
                                Name FileNameFolder & "\" & FSO.Name As FileNameFolder & "\" & "SEG10_" & C & ".csv"
                            End If
                        Next FSO
                    Next i
            
                   ' MsgBox "You find the files here: " & FileNameFolder
            
                    On Error Resume Next
                    Set FSO = CreateObject("scripting.filesystemobject")
                    FSO.DELETEFOLDER Environ("Temp") & "\Temporary Directory*", True
                    Set objFiles = FSO.GETFOLDER(FileNameFolder).Files
                    strFiles = "zip"
                End If
        Else
            'import the selected .csv files
            strFilter = "CSV Files (*.csv;), *.csv"
            
            'open dialog box to select SEG 10 File
            varFilename = Application.GetOpenFilename _
                (filefilter:=strFilter, FilterIndex:=intFilterIndex, Title:=strTitle & strTitle2, MultiSelect:=True)
            
            ' this added due to a bug with GetOpenFileName with MultiSelect sometimes returning a string
            If VarType(varFilename) = vbString Then
                sOR = varFilename
                ReDim varFilename(1 To 1)
                varFilename(1) = sOR
            End If
        End If
               
    If strFiles = "zip" Then
        If objFiles.Count = 0 Then
            'error handler for no file selection
            MsgBox "No file selected", , strTitle
            With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
            .EnableEvents = True: .StatusBar = False: End With
            Exit Sub
        Else
            
            With Application: .StatusBar = "Importing.": .EnableEvents = False: _
            .ScreenUpdating = False: .Calculation = xlCalculationManual: End With

            'Clear SEG 10 Data
            If wsSEG.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                wsSEG.Range("A2:A" & wsSEG.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
            End If

            If wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                wsSEG1.Range("A2:A" & wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
            End If
            
            ResetUsedRange
            
            For Each objFiles In objFiles 'loop through each files in the file list object
                Workbooks.Open objFiles: strWorkbookSEG = ActiveWorkbook.Name
                
                PROC_IMPORT
                
                If intFirstRow = 0 Then
                    Exit Sub
                End If
                
            Next objFiles
            
            FSO.DELETEFOLDER DefPath & "MyUnzipFolder " & strDate, True
        End If
        
    Else
        If IsArray(varFilename) = False Then
            'error handler for no file selection
            MsgBox "No file selected", , strTitle
            With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
            .EnableEvents = True: .StatusBar = False: End With
            Exit Sub
        Else
            
            With Application: .StatusBar = "Importing.": .EnableEvents = False: _
            .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
            
            'Clear SEG 10 Data
            If wsSEG.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                wsSEG.Range("A2:A" & wsSEG.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
            End If
           
            If wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
                wsSEG1.Range("A2:A" & wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
            End If
            
            ' import each file.
            For iSelectedFile = 1 To UBound(varFilename)
                'Open the selected SEG 10 files
                Set wbSource = Application.Workbooks.Open(varFilename(iSelectedFile))
                strWorkbookSEG = GetFileName((varFilename(iSelectedFile)))
                
                PROC_IMPORT
                
                If intFirstRow = 0 Then
                    Exit Sub
                End If
                
            Next iSelectedFile
        End If
    End If
       
    'Find the last row
    intLastRow = wsSEG.Cells(Rows.Count, 1).End(xlUp).Row
    With wsSEG
        'Account Definitions
        .Range("I2:I" & intLastRow).FormulaR1C1 = "=IFERROR(VLOOKUP(RC6,SEG_DESC,2,FALSE),"""")"
        .Range("J2:J" & intLastRow).FormulaR1C1 = "=VLOOKUP(WEEKDAY(RC3),WD_WE,3,FALSE)"
        .Range("K2:K" & intLastRow).FormulaR1C1 = "=RC9&RC10"
        
        'Name Ranges
        .Range("A1").CurrentRegion.Name = "SEG"
        .Range("A2:A" & intLastRow).Name = "SEG_DATE_CAP"
        .Range("C2:C" & intLastRow).Name = "SEG_DATE_STY"
        .Range("G2:G" & intLastRow).Name = "SEG_RMS"
        .Range("H2:H" & intLastRow).Name = "SEG_REV"
        .Range("K2:K" & intLastRow).Name = "SEG_SEG"
        
        'Actuals Curr
        .Columns("A:K").AdvancedFilter Action:=xlFilterCopy, CopyToRange:=wsSEG.Range("N1:O1"), Unique:=True
    End With

    ResetUsedRange
    
    'Rename Tabs with months based on extract
    ws01.Name = 1
    ws02.Name = 2
    ws03.Name = 3
    ws04.Name = 4
    ws05.Name = 5
    ws06.Name = 6
    ws07.Name = 7
    ws08.Name = 8
    ws09.Name = 9
    ws10.Name = 10
    ws11.Name = 11
    ws12.Name = 12
    
    ws01.Name = wsSetup.Range("AG2").Value
    ws02.Name = wsSetup.Range("AG3").Value
    ws03.Name = wsSetup.Range("AG4").Value
    ws04.Name = wsSetup.Range("AG5").Value
    ws05.Name = wsSetup.Range("AG6").Value
    ws06.Name = wsSetup.Range("AG7").Value
    ws07.Name = wsSetup.Range("AG8").Value
    ws08.Name = wsSetup.Range("AG9").Value
    ws09.Name = wsSetup.Range("AG10").Value
    ws10.Name = wsSetup.Range("AG11").Value
    ws11.Name = wsSetup.Range("AG12").Value
    ws12.Name = wsSetup.Range("AG13").Value

    ws00.Visible = xlSheetVisible
    ws01.Visible = xlSheetVisible
    ws02.Visible = xlSheetVisible
    ws03.Visible = xlSheetVisible
    ws04.Visible = xlSheetVisible
    ws05.Visible = xlSheetVisible
    ws06.Visible = xlSheetVisible
    ws07.Visible = xlSheetVisible
    ws08.Visible = xlSheetVisible
    ws09.Visible = xlSheetVisible
    ws10.Visible = xlSheetVisible
    ws11.Visible = xlSheetVisible
    ws12.Visible = xlSheetVisible

    FormatSheets

    wsWelcome.Range("N15") = Now
    wsWelcome.Activate
    
    With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
    .EnableEvents = True: .StatusBar = False: End With
         
    MsgBox "Import Complete!", vbExclamation, strTitle

End Sub
Public Sub ImportSEGxls() '.xlsx format
    
    strWorkbookA = ActiveWorkbook.Name
    strFiles = ""
    strTitle = "Import SEG 10 Files"
    intFilterIndex = 1
    strTitle2 = " - Browse and select files - Hold down CTRL to select more than one file."
    
    'import the selected .csv files
    strFilter = "xlsx Files (*.xls*;), *.xls*"
    
    'open dialog box to select SEG 10 File
    varFilename = Application.GetOpenFilename _
        (filefilter:=strFilter, FilterIndex:=intFilterIndex, Title:=strTitle & strTitle2, MultiSelect:=True)
    
    ' this added due to a bug with GetOpenFileName with MultiSelect sometimes returning a string
    If VarType(varFilename) = vbString Then
        sOR = varFilename
        ReDim varFilename(1 To 1)
        varFilename(1) = sOR
    End If
           
    If IsArray(varFilename) = False Then
        'error handler for no file selection
        MsgBox "No file selected", , strTitle
        With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
        .EnableEvents = True: .StatusBar = False: End With
        Exit Sub
    Else
        
        With Application: .StatusBar = "Importing.": .EnableEvents = False: _
        .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
        
        'Clear SEG 10 Data
        If wsSEG.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
            wsSEG.Range("A2:A" & wsSEG.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
        End If
       
        If wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
            wsSEG1.Range("A2:A" & wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
        End If
        
        ' import each file.
        For iSelectedFile = 1 To UBound(varFilename)
            'Open the selected SEG 10 files
            Set wbSource = Application.Workbooks.Open(varFilename(iSelectedFile))
            strWorkbookSEG = GetFileName((varFilename(iSelectedFile)))
            
            PROC_IMPORTxls
            
            If intFirstRow = 0 Then
                Exit Sub
            End If
            
        Next iSelectedFile
    End If

       
    'Find the last row
    intLastRow = wsSEG.Cells(Rows.Count, 1).End(xlUp).Row
    With wsSEG
        'Account Definitions
        .Range("I2:I" & intLastRow).FormulaR1C1 = "=IFERROR(VLOOKUP(RC6,SEG_DESC,2,FALSE),"""")"
        .Range("J2:J" & intLastRow).FormulaR1C1 = "=VLOOKUP(WEEKDAY(RC3),WD_WE,3,FALSE)"
        .Range("K2:K" & intLastRow).FormulaR1C1 = "=RC9&RC10"
        
        'Name Ranges
        .Range("A1").CurrentRegion.Name = "SEG"
        .Range("A2:A" & intLastRow).Name = "SEG_DATE_CAP"
        .Range("C2:C" & intLastRow).Name = "SEG_DATE_STY"
        .Range("G2:G" & intLastRow).Name = "SEG_RMS"
        .Range("H2:H" & intLastRow).Name = "SEG_REV"
        .Range("K2:K" & intLastRow).Name = "SEG_SEG"
        
        'Actuals Curr
        .Columns("A:K").AdvancedFilter Action:=xlFilterCopy, CopyToRange:=wsSEG.Range("N1:O1"), Unique:=True
    End With

    ResetUsedRange
    
    'Rename Tabs with months based on extract
    ws01.Name = 1
    ws02.Name = 2
    ws03.Name = 3
    ws04.Name = 4
    ws05.Name = 5
    ws06.Name = 6
    ws07.Name = 7
    ws08.Name = 8
    ws09.Name = 9
    ws10.Name = 10
    ws11.Name = 11
    ws12.Name = 12
    
    ws01.Name = wsSetup.Range("AG2").Value
    ws02.Name = wsSetup.Range("AG3").Value
    ws03.Name = wsSetup.Range("AG4").Value
    ws04.Name = wsSetup.Range("AG5").Value
    ws05.Name = wsSetup.Range("AG6").Value
    ws06.Name = wsSetup.Range("AG7").Value
    ws07.Name = wsSetup.Range("AG8").Value
    ws08.Name = wsSetup.Range("AG9").Value
    ws09.Name = wsSetup.Range("AG10").Value
    ws10.Name = wsSetup.Range("AG11").Value
    ws11.Name = wsSetup.Range("AG12").Value
    ws12.Name = wsSetup.Range("AG13").Value

    ws00.Visible = xlSheetVisible
    ws01.Visible = xlSheetVisible
    ws02.Visible = xlSheetVisible
    ws03.Visible = xlSheetVisible
    ws04.Visible = xlSheetVisible
    ws05.Visible = xlSheetVisible
    ws06.Visible = xlSheetVisible
    ws07.Visible = xlSheetVisible
    ws08.Visible = xlSheetVisible
    ws09.Visible = xlSheetVisible
    ws10.Visible = xlSheetVisible
    ws11.Visible = xlSheetVisible
    ws12.Visible = xlSheetVisible

    FormatSheets

    wsWelcome.Range("N15") = Now
    wsWelcome.Activate
    
    With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
    .EnableEvents = True: .StatusBar = False: End With
         
    MsgBox "Import Complete!", vbExclamation, strTitle

End Sub
Public Sub PROC_IMPORT()
         
            'Look for Header
            For Each wsSource In ActiveWorkbook.Sheets
                If Left(wsSource.Name, 3) = "SEG" Then Exit For
            Next wsSource
            
            'Error if not found
            If wsSource Is Nothing Then
                MsgBox "Problem importing " & strWorkbookSEG & "." & vbCrLf _
                    & "Could not find ""SEG 10"" data." & vbCrLf _
                    & "Please select the SEG 10 File.", vbCritical, strTitle & " Error"
                Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
                Exit Sub
            Else
                On Error Resume Next
                For iLoop = 1 To 3
                    intFirstRow = 0
                    Select Case iLoop
                        Case 1
                            dtDesired = wsWelcome.Range("OTB_TY")
                        Case 2
                            dtDesired = wsSetup.Range("OTB_LW")
                        Case 3
                            dtDesired = wsSetup.Range("OTB_LY")
                    End Select
                    intFirstRow = Workbooks(strWorkbookSEG).Worksheets(1).Range("A1:A" & Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row). _
                        Find(What:=dtDesired, After:=ActiveCell, LookIn:=xlFormulas, _
                        LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
                        MatchCase:=False, SearchFormat:=False).Row
                    If intFirstRow = 2 And Workbooks(strWorkbookSEG).Worksheets(1).Range("A1").Value = Workbooks(strWorkbookSEG).Worksheets(1).Range("A2").Value Then
                        intFirstRow = 1
                    End If
                    If intFirstRow <> 0 Then
                        If dtDesired = Workbooks(strWorkbookSEG).Worksheets(1).Range("A" & (Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row)).Value Then
                            intLastRow = Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row
                            Exit For
                        Else
                        intLastRow = Workbooks(strWorkbookSEG).Worksheets(1).Range("A1:A" & Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row). _
                            Find(What:=dtDesired + 1, After:=ActiveCell, LookIn:=xlFormulas, _
                            LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
                            MatchCase:=False, SearchFormat:=False).Row - 1
                            Exit For
                        End If
                    End If
                 Next
                On Error GoTo 0
                If intFirstRow = 0 Then
                    MsgBox "The wrong date files were selected", , strTitle
                    Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
                    Exit Sub
                End If
                
                'Identify Last Rows
                intLastRowA = wsSEG.Cells(Rows.Count, 1).End(xlUp).Row
                
                'Insert Data
                wsSEG.Range("A" & intLastRowA + 1 & ":H" & (intLastRowA + (intLastRow - intFirstRow))) = Workbooks(strWorkbookSEG).Worksheets(1).Range("A" & intFirstRow & ":H" & intLastRow).Value
                
                'Close SEG10
                Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
            End If

End Sub
Public Sub PROC_IMPORTxls()
Dim str As String

            'Look for Header
            For Each wsSource In ActiveWorkbook.Sheets
                If Workbooks(strWorkbookSEG).Worksheets(1).Range("A1").Value = "Snap Date" Then Exit For
            Next wsSource
            
            'Error if not found
            If wsSource Is Nothing Then
                MsgBox "Problem importing " & strWorkbookSEG & "." & vbCrLf _
                    & "Could not find ""SEG 10"" data." & vbCrLf _
                    & "Please select the SEG 10 File.", vbCritical, strTitle & " Error"
                Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
                Exit Sub
            Else
                'Identify all MARSHA Codes in file
                Workbooks(strWorkbookSEG).Worksheets(1).Range("B1:B" & Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row).AdvancedFilter Action:=xlFilterCopy, CopyToRange:=Range("J1"), Unique:=True
            
                'Ask user to select MARSHA Code from list
                If wsWelcome.Range("I19").Value = "" Then
                    ufrmMARSHA.Show
                End If
                
                
                On Error Resume Next
                For iLoop = 1 To 3
                    intFirstRow = 0
                    Select Case iLoop
                        Case 1
                            dtDesired = wsWelcome.Range("OTB_TY")
                        Case 2
                            dtDesired = wsSetup.Range("OTB_LW")
                        Case 3
                            dtDesired = wsSetup.Range("OTB_LY")
                    End Select
                    
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("K1").Value = Workbooks(strWorkbookSEG).Worksheets(1).Range("B1").Value
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("K2").Value = wsWelcome.Range("I19").Value
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("L1").Value = Workbooks(strWorkbookSEG).Worksheets(1).Range("A1").Value
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("L2").Value = dtDesired
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("M1:T1").Value = Workbooks(strWorkbookSEG).Worksheets(1).Range("A1:H1").Value
                    
                    Workbooks(strWorkbookSEG).Worksheets(1).Range("A1:H" & Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row).AdvancedFilter Action:=xlFilterCopy, CriteriaRange:= _
                    Range("K1:L2"), CopyToRange:=Range("M1:T1"), Unique:=True
        
                    If Workbooks(strWorkbookSEG).Worksheets(1).Cells(Workbooks(strWorkbookSEG).Worksheets(1).Rows.Count, 13).End(xlUp).Row > 1 Then
                        intFirstRow = 2
                        intLastRow = Workbooks(strWorkbookSEG).Worksheets(1).Cells(Workbooks(strWorkbookSEG).Worksheets(1).Rows.Count, 13).End(xlUp).Row
                        Exit For
                    End If
                 Next
                On Error GoTo 0
                If intFirstRow = 0 Then
                    MsgBox "The wrong date files were selected", , strTitle
                    Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
                    Exit Sub
                End If
                
                'Identify Last Rows
                intLastRowA = wsSEG.Cells(Rows.Count, 1).End(xlUp).Row
                
                'Insert Data
                wsSEG.Range("A" & intLastRowA + 1 & ":H" & (intLastRowA + (intLastRow - intFirstRow))) = Workbooks(strWorkbookSEG).Worksheets(1).Range("M" & intFirstRow & ":T" & intLastRow).Value
                
                'Close SEG10
                Workbooks(strWorkbookSEG).Close SaveChanges:=False, Filename:=varFilename
            End If

End Sub

Public Sub PROC_SEG()
Application.Calculation = xlCalculationManual
    'Create SEG10 Segment Totals
    intLastRow = wsSEG.Cells(Rows.Count, 15).End(xlUp).Row
    wsSEG.Sort.SortFields.Clear
    wsSEG.Sort.SortFields.Add Key:=Range("N2:N" & intLastRow) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    wsSEG.Sort.SortFields.Add Key:=Range("O2:O" & intLastRow) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With wsSEG.Sort
        .SetRange Range("N2:O" & intLastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
        
    wsSEG.Range("CZ2:CZ" & intLastRow).FormulaR1C1 = "=1+VLOOKUP(RC15,VAT!C1:C2,2,TRUE)"
    wsSEG.Range("P2:BI" & intLastRow).FormulaR1C1 = "=SUMIFS(SEG_REV,SEG_DATE_CAP,""=""&RC14,SEG_DATE_STY,""=""&RC15,SEG_SEG,""=""&MID(R1C,1,LEN(R1C)-3))/RC104"
    wsSEG.Range("O2:BI" & intLastRow).Value = wsSEG.Range("O2:BI" & intLastRow).Value
    wsSEG.Range("BJ2:CY" & intLastRow).FormulaR1C1 = "=SUMIFS(SEG_RMS,SEG_DATE_CAP,""=""&RC14,SEG_DATE_STY,""=""&RC15,SEG_SEG,""=""&MID(R1C,1,LEN(R1C)-3))"
    wsSEG.Range("BJ2:CZ" & intLastRow).Value = wsSEG.Range("BJ2:CY" & intLastRow).Value
    wsSEG.Cells.EntireColumn.AutoFit

    For i = 2 To wsSEG.Cells(Rows.Count, 15).End(xlUp).Row
        If wsSEG.Cells(i, 14).Value = wsSetup.Range("OTB_LY") Then
            wsSEG.Cells(i, 15) = wsSEG.Cells(i, 15).Value - 1
        End If
    Next i
    
    'Update SEG10_Curr
    With wsSEG1
        .Range("A2:CL" & intLastRow) = wsSEG.Range("N2:CY" & intLastRow).Value
        .Range("CM2:CM" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,183,TRUE)"
        .Range("CN2:CN" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,184,TRUE)"
        .Range("CO2:CO" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,185,TRUE)"
        .Range("CP2:CP" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,186,TRUE)"
        .Range("CQ2:CQ" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,187,TRUE)"
        .Range("CR2:CR" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,188,TRUE)"
        .Range("CS2:CS" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,189,TRUE)"
        .Range("CT2:CT" & intLastRow).FormulaR1C1 = "=VLOOKUP(RC2,RP_Data,190,TRUE)"
        .Range("CU2:CU" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Selling"",CUR=""Actual Selling""),1,IF(CUR=""Constant Local"",VLOOKUP(MONTH(RC2),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC2),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC2),CST_RATES,3,FALSE),IF(CUR=""Actual Local"",IFERROR(IF(RC[-7]=0,IF(RC[-6]=0,RC[-5],RC[-6]),RC[-7])/IF(RC[-3]=0,IF(RC[-2]=0,RC[-1],RC[-2]),RC[-3]),RC[1]),IF(CUR=""Actual USD"",IF(RC[-3]=0,IF(RC[-2]=0,RC[-1],RC[-2]),RC[-3]),0)))))"
        .Range("CV2:CV" & intLastRow).FormulaR1C1 = "=IF(OR(CUR=""Constant Selling"",CUR=""Actual Selling""),1,IF(CUR=""Constant Local"",VLOOKUP(MONTH(RC2),CST_RATES,2,FALSE)/VLOOKUP(MONTH(RC2),CST_RATES,3,FALSE),IF(CUR=""Constant USD"",VLOOKUP(MONTH(RC2),CST_RATES,3,FALSE),IF(CUR=""Actual Local"",RC[-6]/RC[-2],IF(CUR=""Actual USD"",RC[-2],0)))))"
        .Range("C2:AV" & intLastRow).FormulaR1C1 = "=IF(RC99=0,0,SEG10!RC[13]*RC99)"
        .Range("A1").CurrentRegion.Name = "_SEG_Data"
        .Cells.EntireColumn.AutoFit
    End With


End Sub
Attribute VB_Name = "modUtilities"
Option Explicit
Option Private Module

'unhide all tabs
Sub hiddenAlltab()
Dim ws As Worksheet
    For Each ws In Worksheets
        ws.Visible = xlSheetVisible
        ActiveSheet.DisplayPageBreaks = False
        ActiveWindow.View = xlNormalView
    Next
End Sub

'Unprotect All Sheets
Public Sub UnProtectAll()
Dim strTab As String, wsSheetObject As Object
strTab = ActiveSheet.Name
    For Each wsSheetObject In ActiveWorkbook.Sheets
        Select Case VBA.Left(wsSheetObject.CodeName, 2)
        Case "ws"
            wsSheetObject.UnProtect Password:="unlockme"
        End Select
    Next wsSheetObject
Worksheets(strTab).Activate
End Sub

'Protect All Sheets
Public Sub ProtectAll()
    Dim wsSheetObject As Object
    For Each wsSheetObject In ActiveWorkbook.Sheets
        Select Case VBA.Left(wsSheetObject.CodeName, 2)
        Case "ws"
            wsSheetObject.EnableOutlining = True
            wsSheetObject.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowFiltering:=True, AllowUsingPivotTables:=True, Password:="unlockme", userInterfaceOnly:=True
            wsSheetObject.UsedRange
        End Select
    Next wsSheetObject
End Sub
'Reset all sheets
Sub ResetUsedRange()
    Dim wsSheetObject As Object
    For Each wsSheetObject In ActiveWorkbook.Sheets
        wsSheetObject.UsedRange
    Next wsSheetObject
End Sub
Public Sub Reset()
UnProtectAll
Dim wsSheetObject As Object, lRow As Integer

'Clear SEG 10 Data
If wsSEG.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsSEG.Range("A2:A" & wsSEG.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If

If wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsSEG1.Range("A2:A" & wsSEG1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If
            
'Clear RPT
If wsRPT.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsRPT.Range("A2:GJ" & wsRPT.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If
If wsRPT1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsRPT1.Range("A2:GJ" & wsRPT1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If
If wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsRPT2.Range("A2:AE" & wsRPT2.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If
                
'Clear Actual data
If wsACT.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsACT.Range("A2:K" & wsACT.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If

If wsACT1.Cells(Rows.Count, 1).End(xlUp).Row > 1 Then
    wsACT1.Range("A2:CQ" & wsACT1.Cells(Rows.Count, 1).End(xlUp).Row).EntireRow.Delete
End If

With wsSetup
.Range("AJ2:AJ16").Value = False
.Range("AJ17:AJ19").Value = True
.Range("B2:B3").Value = ""
End With

ws00.Calculate
For lRow = 13 To 248
    If ws00.Cells(lRow, 6).Value = False Then
        ws00.Cells(lRow, 6).EntireRow.Hidden = True
    Else
        ws00.Cells(lRow, 6).EntireRow.Hidden = False
    End If
    Select Case lRow
        Case 66
            lRow = 73
        Case 127
            lRow = 133
        Case 187
            lRow = 194
    End Select
Next lRow

ws00.Range("A1:T251").SpecialCells(xlCellTypeVisible).Rows.AutoFit
ws00.Range("A1:T251").SpecialCells(xlCellTypeVisible).Columns.AutoFit

With wsWelcome
.Range("G9:K9") = Date - 1
.Range("N15:P15").ClearContents
.Range("I18:K18").ClearContents
.Range("I19:K19").ClearContents
.Range("N20:P20").ClearContents
.Range("N24:P24").ClearContents
.Range("G27") = "Actual Local"
.Shapes("VAT_N").ControlFormat.Value = 1
.Shapes("VAT_Y").ControlFormat.Value = 0
End With

With wsVAT
    .Range("B2").ClearContents
    .Range("B3:B265").FormulaR1C1 = "=R[-1]C"
    .Range("B2,B14,B26,B38,B50,B62,B74,B86,B98,B110,B122,B134,B146,B158,B170,B182,B194,B206,B218,B230,B242,B254").Interior.Color = 10092543
End With

ws00.Visible = xlSheetVeryHidden
ws01.Visible = xlSheetVeryHidden
ws02.Visible = xlSheetVeryHidden
ws03.Visible = xlSheetVeryHidden
ws04.Visible = xlSheetVeryHidden
ws05.Visible = xlSheetVeryHidden
ws06.Visible = xlSheetVeryHidden
ws07.Visible = xlSheetVeryHidden
ws08.Visible = xlSheetVeryHidden
ws09.Visible = xlSheetVeryHidden
ws10.Visible = xlSheetVeryHidden
ws11.Visible = xlSheetVeryHidden
ws12.Visible = xlSheetVeryHidden

wsACT.Visible = xlSheetVeryHidden
wsACT1.Visible = xlSheetVeryHidden

wsRPT.Visible = xlSheetVeryHidden
wsRPT1.Visible = xlSheetVeryHidden
wsRPT2.Visible = xlSheetVeryHidden

wsSEG.Visible = xlSheetVeryHidden
wsSEG1.Visible = xlSheetVeryHidden

wsSetup.Visible = xlSheetVeryHidden
wsVAT.Visible = xlSheetVeryHidden

ResetUsedRange
wsWelcome.Activate
ProtectAll

End Sub

Public Function GetFileName(stFullName As String) As String

    Dim stPathSep As String
    Dim iFNLength As Integer
    Dim i As Integer
    
    stPathSep = Application.PathSeparator
    iFNLength = Len(stFullName)
    For i = iFNLength To 1 Step -1
    If Mid(stFullName, i, 1) = stPathSep Then Exit For
    Next i
    GetFileName = Right(stFullName, iFNLength - i)
    
End Function

Public Sub test()



    With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: _
    .EnableEvents = True: .StatusBar = False: End With

End Sub
Public Sub DeleteSheetEventCode(wkb)
'Needs Reference Set To "Microsoft Visual Basic For Applications Extensibility" Tools>References.
Dim sSheet As Object, strName As String

For Each sSheet In Workbooks(wkb).Sheets
    strName = sSheet.CodeName
    With Workbooks(wkb).VBProject.VBComponents(strName).CodeModule
        .DeleteLines 1, .CountOfLines
    End With
Next sSheet
End Sub
Sub AllValues(wkb)
Dim wSh As Worksheet
On Error Resume Next
For Each wSh In Workbooks(wkb).Worksheets
    wSh.UnProtect Password:="letmein"
    With wSh.UsedRange
        .Copy
        .PasteSpecial xlPasteValues
    End With
    wSh.DrawingObjects.Delete
    wSh.Range("A1").Select
    Application.GoTo Range("A1"), True
Next wSh
Application.CutCopyMode = False
End Sub

Public Sub Show_Decimals() ' hide/show
ActiveSheet.Shapes("Decimals").Select
    If Selection.Characters.Text = "Format ADR Hide Decimals" Then
        Selection.Characters.Text = "Format ADR Show Decimals"
            Range("I41:T68, W78:AG78, I152:T178, I217:T243").NumberFormat = "#,##0"
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
    Else
        Selection.Characters.Text = "Format ADR Hide Decimals"
            Range("I41:T68, W78:AG78, I152:T178, I217:T243").NumberFormat = "#,##0.00"
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
    End If
End Sub
Public Sub Show_Decimals_D() ' hide/show
ActiveSheet.Shapes("Decimals").Select
    If Selection.Characters.Text = "Format ADR Hide Decimals" Then
        Selection.Characters.Text = "Format ADR Show Decimals"
            Range("I195:T251").NumberFormat = "#,##0"
            Range("A1:T246").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:T246").SpecialCells(xlCellTypeVisible).Columns.AutoFit
    Else
        Selection.Characters.Text = "Format ADR Hide Decimals"
            Range("I195:T251").NumberFormat = "#,##0.00"
            Range("A1:T246").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:T246").SpecialCells(xlCellTypeVisible).Columns.AutoFit
    End If
End Sub

Public Sub FormatSheets()
    ws00.Range("B4").Value = "Y"
    ws01.Range("B4").Value = "Y"
    ws02.Range("B4").Value = "Y"
    ws03.Range("B4").Value = "Y"
    ws04.Range("B4").Value = "Y"
    ws05.Range("B4").Value = "Y"
    ws06.Range("B4").Value = "Y"
    ws07.Range("B4").Value = "Y"
    ws08.Range("B4").Value = "Y"
    ws09.Range("B4").Value = "Y"
    ws10.Range("B4").Value = "Y"
    ws11.Range("B4").Value = "Y"
    ws12.Range("B4").Value = "Y"
End Sub

Public Sub FormatSheets2()
    ws00.Range("B4").Value = "N"
    ws01.Range("B4").Value = "N"
    ws02.Range("B4").Value = "N"
    ws03.Range("B4").Value = "N"
    ws04.Range("B4").Value = "N"
    ws05.Range("B4").Value = "N"
    ws06.Range("B4").Value = "N"
    ws07.Range("B4").Value = "N"
    ws08.Range("B4").Value = "N"
    ws09.Range("B4").Value = "N"
    ws10.Range("B4").Value = "N"
    ws11.Range("B4").Value = "N"
    ws12.Range("B4").Value = "N"
End Sub
Attribute VB_Name = "ufrmMARSHA"
Attribute VB_Base = "0{10513B03-6128-4CE7-A3E8-A0F6D82764EF}{9773E9B0-EE10-42C6-B61B-0145742D192E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
Dim cMARSHA As Range
For Each cMARSHA In Workbooks(strWorkbookSEG).Worksheets(1).Range("J2:J" & Workbooks(strWorkbookSEG).Worksheets(1).Cells(Rows.Count, 10).End(xlUp).Row)
  With Me.cbMARSHA
    .AddItem cMARSHA.Value
  End With
Next cMARSHA
End Sub

Private Sub cbApply_Click()
wsWelcome.Range("I19").Value = cbMARSHA.Value
Unload Me
End Sub

Private Sub cbCancel_Click()
Unload Me
End Sub



Attribute VB_Name = "ufrmSEG10"
Attribute VB_Base = "0{99972C7E-AE70-49D7-AF55-917ACCF78CB7}{8AB258F2-4E95-42DC-9CA6-8D4E35512F5C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cbApply_Click()
wsSetup.Range("B43").Value = obXLS.Value
wsSetup.Range("B44").Value = obCSV.Value
wsSetup.Range("B45").Value = "Run"
Unload Me
End Sub

Private Sub cbCancel_Click()
wsSetup.Range("B45").Value = "Cancel"
Unload Me
End Sub
Attribute VB_Name = "ws00"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        'Autofit Data
            Range("B:F").Columns.Hidden = True
            Range("A1:T251").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:T251").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A").ColumnWidth = 4
            Range("B4").Value = "N"
        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub
Attribute VB_Name = "ws01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
''       'Format for Printing
''        ResetAllPageBreaks
''
''        With ActiveSheet.PageSetup
''            .PrintTitleRows = "$1:$3"
''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
''            .CenterFooter = "&D"
''            .RightFooter = "Page &P of &N"
''            .LeftMargin = Application.InchesToPoints(0.25)
''            .RightMargin = Application.InchesToPoints(0.25)
''            .TopMargin = Application.InchesToPoints(0.25)
''            .BottomMargin = Application.InchesToPoints(0.25)
''            .HeaderMargin = Application.InchesToPoints(0.3)
''            .FooterMargin = Application.InchesToPoints(0.3)
''            .Orientation = xlLandscape
''            .FirstPageNumber = xlAutomatic
''            .Zoom = False
''            .FitToPagesWide = 1
''            .FitToPagesTall = False
''        End With
''
''        HPageBreaks.Add Before:=Rows(79)
''        HPageBreaks.Add Before:=Rows(115)
''        HPageBreaks.Add Before:=Rows(180)
''        VPageBreaks.Add Before:=Columns(34)
''
''        With ActiveSheet.PageSetup
''            .Zoom = 40
''        End With
''
        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws02"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws05"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws06"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws07"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws08"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws09"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "ws12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
If Range("B4").Value = "Y" Then
    With Application: .StatusBar = "Updating Formatting.": .EnableEvents = False: .ScreenUpdating = False: End With
        UnProtectAll
        ActiveSheet.Outline.ShowLevels RowLevels:=3
        'Autofit Data
            Range("B:G").Columns.Hidden = True
            Range("80:114").Rows.Hidden = True
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Rows.AutoFit
            Range("A1:AG243").SpecialCells(xlCellTypeVisible).Columns.AutoFit
            Range("A:A,U:U").ColumnWidth = 4
            Range("B4").Value = "N"
    
'''       'Format for Printing
'''        ResetAllPageBreaks
'''
'''        With ActiveSheet.PageSetup
'''            .PrintTitleRows = "$1:$3"
'''            .LeftFooter = "&""-,Bold""Marriott International Confidential"
'''            .CenterFooter = "&D"
'''            .RightFooter = "Page &P of &N"
'''            .LeftMargin = Application.InchesToPoints(0.25)
'''            .RightMargin = Application.InchesToPoints(0.25)
'''            .TopMargin = Application.InchesToPoints(0.25)
'''            .BottomMargin = Application.InchesToPoints(0.25)
'''            .HeaderMargin = Application.InchesToPoints(0.3)
'''            .FooterMargin = Application.InchesToPoints(0.3)
'''            .Orientation = xlLandscape
'''            .FirstPageNumber = xlAutomatic
'''            .Zoom = False
'''            .FitToPagesWide = 1
'''            .FitToPagesTall = False
'''        End With
'''
'''        HPageBreaks.Add Before:=Rows(115)
'''        HPageBreaks.Add Before:=Rows(180)
'''        VPageBreaks.Add Before:=Columns(34)
'''
'''        With ActiveSheet.PageSetup
'''            .Zoom = 40
'''        End With

        ProtectAll
        
    With Application: .ScreenUpdating = True: .EnableEvents = True: .StatusBar = False: .StatusBar = False: End With
End If
End Sub




Attribute VB_Name = "wsACT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsACT1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsRPT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsRPT1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsRPT2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsSEG"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsSEG1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsSetup"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsVAT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsWelcome"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Column = 7 And Target.Row = 9 Then
    If wsWelcome.Range("OTB_TY").Value = "" Then
    MsgBox "OTB Capture date is invalid.  Please enter a date prior to today.", vbCritical, "Invalid Date"
    Exit Sub
    End If
    If Target.Value >= Now - 1 Then
        Application.EnableEvents = False
        MsgBox "OTB Capture date is invalid.  Please enter a date prior to today.", vbCritical, "Invalid Date"
        Target.Select
        Target.Value = ""
        Application.EnableEvents = True
    End If
End If
End Sub


Attribute VB_Name = "ws_Ins"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Ver"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
