Attribute VB_Name = "ModuleFonctions"
Attribute VB_Name = "Thisdocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Public strDropBoxFolder As String
Sub Publipostage()

' D|fffd|claration des variables
Dim iR As Integer
Dim i As Integer
Dim oDoc As Document
Dim DocName As String
Dim Client As String
Dim Repertoire As String
Dim oDS As MailMergeDataSource
Dim nfichier As String, nfichier2 As String, intpos As Byte
Dim strDropBoxFolder As String

' Affectation des objets
Set oDoc = ActiveDocument
Set oDS = oDoc.MailMerge.DataSource

iR = oDoc.MailMerge.DataSource.RecordCount
Debug.Print iR
For i = 1 To iR
    With oDoc.MailMerge
    
        'D|fffd|finition du premier et dernier enregistrement
        .DataSource.FirstRecord = i
        .DataSource.LastRecord = i
        
        ' Envoi des donn|fffd|es dans un nouveau document
        .Destination = wdSendToNewDocument
        
        ' Ex|fffd|cution du publipostage
        .Execute
        
        ' Actualisation de l'enregistrement pour la sauvegarde
        .DataSource.ActiveRecord = i
        
        'Utilisation de deux champs pour obtenir le nom du document
        DocName = .DataSource.DataFields(18).Value
        Client = .DataSource.DataFields(9).Value
        Repertoire = .DataSource.DataFields(4).Value
        
    End With
    
    Cr|fffd|erR|fffd|pertoire (DropBoxFolder & "\100 - eZ-Corporate new\00 - Corporate\02 - Factures\00 - Factures |fffd|mises\01 - Autres\07 - REMIT\" & Repertoire)
    
    ' Sauvegarde du document publipost|fffd|
    With ActiveDocument
        .SaveAs DropBoxFolder & "\100 - eZ-Corporate new\00 - Corporate\02 - Factures\00 - Factures |fffd|mises\01 - Autres\07 - REMIT\" & Repertoire & "\" & DocName & ".docx"
    End With
    
    With ActiveDocument
        nfichier = ActiveDocument.Name
        'trouve la position de l'extension
        intpos = InStrRev(nfichier, ".")
        'remplace l'extension doc par pdf
        nfichier = Left(nfichier, intpos - 1)
        nfichier2 = nfichier & ".pdf"
        'enregistre dans le dossier en cours
        ActiveDocument.ExportAsFixedFormat outputFileName:=DropBoxFolder & "\100 - eZ-Corporate new\00 - Corporate\02 - Factures\00 - Factures |fffd|mises\01 - Autres\07 - REMIT\" & Repertoire & "\" & nfichier2, exportFormat:=wdExportFormatPDF
    End With
    
    ActiveDocument.Close
    
Next i
End Sub


'This locates and returns the full path of the DropBox folder
Public Function DropBoxFolder() As String

    Dim DBhost As String
    Dim strInput As String
    Dim DBPath As String
    Dim strDropBoxFolder As String
    On Error GoTo Error_Handler

    'If the folder has already been found, don't recheck it, just use the stored variable
    If strDropBoxFolder <> "" Then
        DropBoxFolder = strDropBoxFolder
        Exit Function
    End If
    'otherwise, go find it.
    ' find the host.db file
    DBhost = CStr(Environ("USERPROFILE") & "\AppData\Roaming\Dropbox\host.db")
    If Dir(DBhost) = "" Then
        DBhost = CStr(Environ("USERPROFILE") & "\AppData\Local\Dropbox\host.db")
    End If
    
    If Dir(DBhost) <> "" Then
        Open DBhost For Input Access Read As #1
        'read the host.db file
        Line Input #1, strInput
        Close #1
        'decode from Base64
        strInput = StrConv(DecodeBase64(strInput), vbUnicode)
        'ignore the first line and extract the file path by looking drive name such as C:\
        DBPath = Mid(strInput, InStr(strInput, ":\") - 1)
        'return the result
        DropBoxFolder = DBPath
        'store the result for future use
        strDropBoxFolder = DBPath
        Else
        'file not found and error are handled the same way
Error_Handler:
        On Error Resume Next
    
        strDropBoxFolder = ""
    End If

    End Function

Function DecodeBase64(ByVal strData As String) As Byte()


    Dim objXML As MSXML2.DOMDocument60
    Dim objNode As MSXML2.IXMLDOMElement

    ' help from MSXML
    Set objXML = New MSXML2.DOMDocument60
    Set objNode = objXML.createElement("b64")
    objNode.DataType = "bin.base64"
    objNode.Text = strData
    DecodeBase64 = objNode.nodeTypedValue

    ' thanks, bye
    Set objNode = Nothing
    Set objXML = Nothing

End Function
Function Cr|fffd|erR|fffd|pertoire(Chemin As String) As Boolean
On Error Resume Next
R|fffd|pertoireExiste = GetAttr(Chemin) And vbDirectory
    If R|fffd|pertoireExiste = True Then
        Exit Function
    Else
        MkDir (Chemin)
    End If
End Function






INQUEST-PP=macro
