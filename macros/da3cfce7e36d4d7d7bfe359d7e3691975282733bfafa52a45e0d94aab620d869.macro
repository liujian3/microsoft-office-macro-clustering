Attribute VB_Name = "Module1"
'~~> This the number of Tries the code will attempt to wait for the file conversion.
Const noOfTries = 20

#If VBA7 Then
    Public Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As LongPtr) 'For 64 Bit Systems
#Else
    Public Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds as Long) 'For 32 Bit Systems
#End If


Sub Convert_and_load_STDF()
    Dim Ret As Variant, RetVal As Variant
    Dim inputFile As String, outputFile As String
    Dim ExePath As String, dllPath As String
    Dim cmdString As String
    Dim n As Long
    
    '---------------------------------------- Check if dll is in the same folder -------------------------------------------------------------------------------------------------
    
    '~~> This is the dll Path
    dllPath = ThisWorkbook.Path & "\libquickchangec.dll"
    '~~> Check if the dll file exists
    If Dir(dllPath) = "" Then
        MsgBox "The `libquickchangec.dll` couldn't be found. Please ensure that you place the dll file in the folder where this workbook resides."
        Exit Sub
    End If
    
    '---------------------------------------- Check if exe is in the same folder ------------------------------------------------------------------------------------------------
    
    '~~> This is the Exe Path
    ExePath = ThisWorkbook.Path & "\testsimple.exe"
    '~~> Check if the Exe file exists
    If Dir(ExePath) = "" Then
        MsgBox "The Exe File could not be found. Please manually select the exe file " & _
        " in the file browser which will pop up after this window closes"
        
        Ret = ""
        
        '~~> Let user browse for the exe file
        Ret = Application.GetOpenFilename("Exe Files (*.exe;*.exe),*.exe; *.exe", , "Select the testsimple.exe file")
        
        If Ret = False Then
            MsgBox "User Aborted"
            Exit Sub
        Else
            ExePath = Ret
        End If
    End If
    
    '------------------------------------------ User select Stdf File -----------------------------------------------------------------------------------------------
    
    Ret = Application.GetOpenFilename("STD Files (*.std;*.stdf),*.std; *.stdf", , "Select the file to convert")
    If Ret = False Then Exit Sub
    inputFile = Ret
    
    '------------------------------------------ Output File  -----------------------------------------------------------------------------------------------
    
    outputFile = Environ("APPDATA") & "\spry\" & GetFilenameFromPath(Ret) & ".csv"
    On Error Resume Next
    If Not Dir(outputFile, vbNormal Or vbReadOnly Or vbHidden Or vbSystem Or vbArchive) = "" Then Kill outputFile
    On Error GoTo 0
    
    '------------------------------------------ Command String -----------------------------------------------------------------------------------------------
    
    '~~> Command string to execute the conversion of Ret using TestSimple.exe
    cmdString = Chr(34) & ExePath & Chr(34) & " " & Chr(34) & inputFile & Chr(34) & " " & Chr(34) & outputFile & Chr(34)
    'MsgBox cmdString
    
    RetVal = Shell(cmdString, 0) 'execute the conversion
    
    '~~> Wait while the file is being converted.
    Do
        If Not Dir(outputFile, vbNormal Or vbReadOnly Or _
                               vbHidden Or vbSystem Or _
                               vbArchive) = "" Then Exit Do
        
        'Wait 5
        Sleep 4000
        
        n = n + 1
        
        If n > noOfTries Then
            MsgBox "The file took too long to process."
            Exit Sub
        End If
    Loop
    
    Workbooks.Open outputFile
End Sub

Sub AddMenuItem_to_FileMenu()
    With Application.MenuBars(xlWorksheet)
        '.Reset  ' alternative - however resets other customizations to menus as well
        
        RemoveSTDFmenuitems ' clear old menu items and refresh with new
        
        With .Menus("File")

            .MenuItems.AddMenu Caption:="Open STDF"
            
            With .MenuItems("Open STDF").MenuItems
                .Add Caption:="Convert and Load STDF", OnAction:="Convert_and_load_STDF"
            End With
            
            With .MenuItems("Open STDF").MenuItems
                .Add Caption:="Remove STDF menu items", OnAction:="RemoveSTDFmenuitems"
            End With

        End With
    End With
End Sub
Sub RemoveSTDFmenuitems()
'    Application.MenuBars(xlWorksheet).Reset ' alternative - however resets other customizations to menus as well
    On Error Resume Next
    With Application.MenuBars(xlWorksheet).Menus("&File") 'Application.CommandBars("Worksheet Menu Bar") '
        For i = 1 To .MenuItems.Count '.Controls.Count
            mycaption = .MenuItems(i).Caption
            If mycaption = "Open STDF" Then
                .MenuItems(i).Delete
                End
            End If
        Next i
    End With
 End Sub

Private Sub Wait(ByVal nSec As Long)
    nSec = nSec + Timer
    While nSec > Timer
        DoEvents
    Wend
End Sub

Private Function GetFilenameFromPath(ByVal strPath As String) As String
    If Right$(strPath, 1) <> "\" And Len(strPath) > 0 Then
        GetFilenameFromPath = GetFilenameFromPath(Left$(strPath, Len(strPath) - 1)) + Right$(strPath, 1)
    End If
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim bClosing As Boolean

Private Sub Workbook_Open()
    AddMenuItem_to_FileMenu
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    bClosing = Not Cancel
End Sub

Private Sub Workbook_Deactivate()
    On Error Resume Next
    If bClosing <> True Then
        'grey out command if shifting to another workbook
        Application.MenuBars(xlWorksheet).Menus("File").MenuItems("Open STDF").Enabled = False
    Else
        'delete command if closing this workbook
        Application.MenuBars(xlWorksheet).Menus("File").MenuItems("Open STDF").Delete
    End If
    On Error GoTo 0
End Sub

Private Sub Workbook_Activate()
    On Error Resume Next
    Application.MenuBars(xlWorksheet).Menus("File").MenuItems("Open STDF").Enabled = True
    On Error GoTo 0
End Sub

Sub Auto_Open()
    AddIns("Microsoft Scripting Runtime").Installed = True
End Sub


INQUEST-PP=macro
