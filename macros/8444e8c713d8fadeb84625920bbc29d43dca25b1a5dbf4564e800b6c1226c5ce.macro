Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim Dateiformat As String

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    
    If Right(ActiveWorkbook.Name, 5) = ".XLTM" Or Right(ActiveWorkbook.Name, 5) = ".xltm" Or _
        Right(ActiveWorkbook.Name, 5) = ".XLSM" Or Right(ActiveWorkbook.Name, 5) = ".xlsm" Then
        Exit Sub
    End If
   
    If Application.DefaultSaveFormat = xlOpenXMLWorkbook Then
        Dateiformat = "xlsx"
        Application.DefaultSaveFormat = xlOpenXMLWorkbookMacroEnabled
    End If
    
    'Fallordner ausw|fffd|hlen
    If Dir("H:\AP\APLSt\BPEFADaten.dat") = "" Then
        'Wenn diese Datei nicht vorhanden ist, dann ist vermutlich nicht die
        'APLSt installiert, z.B. auf den Rechnern der SGL.
        'Die weitere Routine wird abgebrochen, damit es beim |fffd|ffnen von Excel
        'nicht zu Fehlerhinweisen kommt.
        'In diesem Fall nichts veranlassen, ansonsten Fallpfad auslesen
        Else
        
        getFallpfadByVar "APLSt", FallPath
        getDatenpfadByVar "APLSt", DatenPath
        
    End If

    If Mid(FallPath, 12, 1) > "a" Or Mid(FallPath, 12, 1) > "A" Then
        ChDrive (FallPath)
        ChDir (FallPath)
    End If  '*** If Len(FallPath) > 3 Then
    
End Sub

Private Sub Workbook_AfterSave(ByVal Success As Boolean)
    
    If Right(ActiveWorkbook.Name, 5) = ".XLSX" Or Right(ActiveWorkbook.Name, 5) = ".xlsx" Or _
        Right(ActiveWorkbook.Name, 5) = ".XLSM" Or Right(ActiveWorkbook.Name, 5) = ".xlsm" Then
    
        If Dateiformat = "xlsx" Then
            Application.DefaultSaveFormat = xlOpenXMLWorkbook
        End If
    End If
    
End Sub

Private Sub Workbook_Open()
'Zell-Kommentare anzeigen
    Application.DisplayCommentIndicator = xlCommentIndicatorOnly
    
    If Dir("H:\AP\APLSt\BPEFADaten.dat") = "" Then
        'Wenn diese Datei nicht vorhanden ist, dann ist vermutlich nicht die
        'APLSt installiert, z.B. auf den Rechnern der SGL.
        'Die weitere Routine wird abgebrochen, damit es beim |fffd|ffnen von Excel
        'nicht zu Fehlerhinweisen kommt.
        'In diesem Fall nichts veranlassen, ansonsten Fallpfad auslesen
        Stil = vbOKOnly + vbInformation
        Titel = "Fehlerhinweis LStAp"
        Mld = "Die Falldaten k|fffd|nnen nicht beigestellt werden, weil die APLSt" & Chr(13) & Chr(10) & _
            "vermutlich nicht auf Ihrem Rechner installiert ist."
        Erg = MsgBox(Mld, Stil, Titel)
        
        Else
            ArbGEinf|fffd|gen
    End If
End Sub


Attribute VB_Name = "Modul1"
'HTMLHelp
Public Declare Function HTMLHelp Lib "hhctrl.ocx" Alias "HtmlHelpA" _
(ByVal hwndCaller As Long, _
 ByVal pszFile As String, _
 ByVal uCommand As Long, _
 ByVal dwData As Long) As Long
Public Const HH_DISPLAY_TOPIC = &H0
Public Const HH_HELP_CONTEXT = &HF

'---  Pfad f|fffd|r den aktuellen Fall, kann ohne OpenAPLStDaten gelesen werden
Declare Function getFallpfad Lib "APLStDat.dll" (ByVal programm As String) As String
Declare Function getDatenpfad Lib "APLStDat.dll" (ByVal programm As String) As String

'neu wso 15.09.2006, ersetzen alte Funktionen wg. Problemen bei Speicher unter Delphi
Declare Sub getFallpfadByVar Lib "APLStDat.dll" (ByVal Prgrname As String, ByRef aPfad As Variant)
Declare Sub getDatenpfadByVar Lib "APLStDat.dll" (ByVal Prgrname As String, ByRef aPfad As Variant)

'--- |fffd|ffnet die APLSt Dateien zum auslesen ------------------------------------
Declare Function OpenAPLStDaten Lib "APLStDat.dll" (ByVal programm As String, _
                                            ByVal pfad As String) As Boolean

'--- Gibt den Speicher mit den Dateien wieder frei ----------------------------
Declare Sub CloseAPLStDaten Lib "APLStDat.dll" ()
Declare Sub getAPLStDaten Lib "APLStDat.dll" (ByVal idx As Integer, ByVal asT As Integer, ByVal bez As String, ByRef ret As Variant)

Sub ArbGEinf|fffd|gen()

If Right(ActiveWorkbook.Name, 5) = ".xltm" Or _
    Right(ActiveWorkbook.Name, 5) = ".xlsm" Then Exit Sub

'--- FA-Daten auslesen -----------------------------------------------------
If OpenAPLStDaten("APLSt", "") Then     'Stammdaten |fffd|ffnen
   
    'Arbeitgeber
    getAPLStDaten 1, AsString, "S_Titel", S_Titel
    getAPLStDaten 1, AsString, "S_Name2", S_Name2
    getAPLStDaten 1, AsString, "S_Name", S_Name
    If S_Name2 > "" Then
        ArbG = S_Name2 & " " & S_Name                   'Name und Vorname
        Else
        ArbG = S_Name
    End If
    If S_Titel > "" Then ArbG = S_Titel & " " & ArbG    'Titel abfragen
    
    getAPLStDaten 1, AsString, "edONr", SteuerNr

CloseAPLStDaten                                 'Stammdaten wieder schliessen
End If

'ArbG einf|fffd|gen
    Range("Firma").Value = ArbG
    Range("StNr").Value = SteuerNr

End Sub

Sub Hilfe()
Dim Verz As String
    Verz = Workbooks("LStAp.xlsm").Path
    Verz = Left(Verz, Len(Verz) - 14) & "AP\HilfenLST"
    Dateiname = Verz & "\prueferinfo.chm"
    
'2008-06-20 Vallinga , Sonja
    'ben|fffd|tigt wird die Public Function HTMLHelp Lib "hhctrl.ocx" Alias "HtmlHelpA"
    'Gro|fffd|- und Kleinschreibung muss hier genau beachtet werden, sonst funktioniert der Aufruf nicht!!
    HelpContextID = 1389  'help context numbers lt. Pr|fffd|ferinfo.chm
    HelpFile = Dateiname
    'Aufruf
    HTMLHelp 0, HelpFile, HH_HELP_CONTEXT, HelpContextID
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
