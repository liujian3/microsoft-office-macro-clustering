Attribute VB_Name = "Class1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "MD5"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'@name      MD5|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
'
'@version   1.00 - Sun May 13, 2012
'           1.01 - Fri Jul  5, 2013
'           1.02 - Wed Feb  5, 2014
'
'@author    Syunzi Shimohata    <webmaster@taru-net.jp>   http://www.taru-net.jp/
'           Online Reference [http://www.taru-net.jp/excel/excelVBA/MD5/readme.html]
'
'@copyright (C) 2012, Syunzi Shimohata. Japan. All Rights Reserved.
'
'@memo      http://www.ipa.go.jp/security/rfc/RFC1321JA.html
'           md5c.c
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

'Constants for MD5Transform routine.
Private Const S11 = 7
Private Const S12 = 12
Private Const S13 = 17
Private Const S14 = 22
Private Const S21 = 5
Private Const S22 = 9
Private Const S23 = 14
Private Const S24 = 20
Private Const S31 = 4
Private Const S32 = 11
Private Const S33 = 16
Private Const S34 = 23
Private Const S41 = 6
Private Const S42 = 10
Private Const S43 = 15
Private Const S44 = 21

'MD5 context.
Private Type Context
    state(3) As Long
    count(1) As Long
    buffer(63) As Long
End Type


Private mvarCharset As String
Private mvarText As String
Private mvarFilePath As String
Private mvarStrLen As Long
Private mvarStrByte() As Byte


Private Sub Class_Initialize()
    Me.Charset = "SHIFT-JIS"
End Sub
Private Sub Class_Terminate()
End Sub


'F, G, H and I are basic MD5 functions.
Private Function F(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    F = (x And y) Or ((Not x) And z)
End Function

Private Function G(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    G = (x And z) Or (y And (Not z))
End Function

Private Function h(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    h = x Xor y Xor z
End Function

Private Function i(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    i = y Xor (x Or (Not z))
End Function


'ROTATE_LEFT rotates x left n bits.
Private Function ROTATE_LEFT(ByVal x As Long, ByVal n As Byte) As Long
    ROTATE_LEFT = fncLeftShift(x, n) Or fncRightShift(x, 32 - n)
End Function


'FF, GG, HH, and II transformations for rounds 1, 2, 3, and 4.
'Rotation is separate from addition to prevent recomputation.
Private Sub FF(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, F(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub GG(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, G(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub HH(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, h(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub II(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, i(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub


'MD5 initialization. Begins an MD5 operation, writing a new context.
Private Sub MD5Init(ByRef Context As Context)
    Context.count(0) = 0
    Context.count(1) = 0
    
    'Load magic initialization constants.
    Context.state(0) = &H67452301
    Context.state(1) = &HEFCDAB89
    Context.state(2) = &H98BADCFE
    Context.state(3) = &H10325476
End Sub


'MD5 block update operation. Continues an MD5 message-digest
'operation, processing another message block, and updating the
'context.
Private Sub MD5Update(ByRef Context As Context, ByRef valInput As Variant, ByVal inputLen As Long)
    Dim i As Long
    Dim index As Byte
    Dim partLen As Byte


    'Compute number of bytes mod 64
    index = fncRightShift(Context.count(0), 3) And &H3F
    
    'Update number of bits
    Context.count(0) = fucAddBit(Context.count(0), fncLeftShift(inputLen, 3))
    If Context.count(0) < fncLeftShift(inputLen, 3) Then
        Context.count(1) = fucAddBit(Context.count(1), 1)
    End If

    Context.count(1) = fucAddBit(Context.count(1), fncRightShift(inputLen, 29))
    partLen = 64 - index
    
    'Transform as many times as possible.
    If inputLen >= partLen Then
        Call MD5_memcpy(Context.buffer, index, valInput, 0, partLen)
        Call MD5Transform(Context.state, Context.buffer, 0)

        For i = partLen To inputLen - 63 - 1 Step 64
            Call MD5Transform(Context.state, valInput, i)
        Next
        index = 0
    Else
        i = 0
    End If

    'Buffer remaining input
    'Context.buffer = valBuf()
    Call MD5_memcpy(Context.buffer, index, valInput, i, inputLen - i)
End Sub


'MD5 finalization. Ends an MD5 message-digest operation, writing the
'the message digest and zeroizing the context.
Private Sub MD5Final(ByRef digest As Variant, ByRef Context As Context)
    Dim bits(7) As Byte
    Dim index As Byte
    Dim padLen As Byte
    Dim i As Byte

    Call Encode(bits, Context.count, 8)
    index = fncRightShift(Context.count(0), 3) And &H3F
    If index < 56 Then
        padLen = 56 - index
    Else
        padLen = 120 - index
    End If
    

    Call MD5Update(Context, Me.PADDING, padLen)
    Call MD5Update(Context, bits, 8)
    Call Encode(digest, Context.state, 16)
End Sub


'MD5 basic transformation. Transforms state based on block.
Private Sub MD5Transform(ByRef state As Variant, ByRef block As Variant, ByVal offset As Long)
    Dim a As Long
    Dim b As Long
    Dim c As Long
    Dim d As Long

    
    a = state(0)
    b = state(1)
    c = state(2)
    d = state(3)
    
    
    Dim x(15)
    Call Decode(x, block, offset, 64)


    ' Round 1
    Call FF(a, b, c, d, x(0), S11, &HD76AA478)  '  1
    Call FF(d, a, b, c, x(1), S12, &HE8C7B756)  '  2
    Call FF(c, d, a, b, x(2), S13, &H242070DB)  '  3
    Call FF(b, c, d, a, x(3), S14, &HC1BDCEEE)  '  4
    Call FF(a, b, c, d, x(4), S11, &HF57C0FAF)  '  5
    Call FF(d, a, b, c, x(5), S12, &H4787C62A)  '  6
    Call FF(c, d, a, b, x(6), S13, &HA8304613)  '  7
    Call FF(b, c, d, a, x(7), S14, &HFD469501)  '  8
    Call FF(a, b, c, d, x(8), S11, &H698098D8)  '  9
    Call FF(d, a, b, c, x(9), S12, &H8B44F7AF)  ' 10
    Call FF(c, d, a, b, x(10), S13, &HFFFF5BB1) ' 11
    Call FF(b, c, d, a, x(11), S14, &H895CD7BE) ' 12
    Call FF(a, b, c, d, x(12), S11, &H6B901122) ' 13
    Call FF(d, a, b, c, x(13), S12, &HFD987193) ' 14
    Call FF(c, d, a, b, x(14), S13, &HA679438E) ' 15
    Call FF(b, c, d, a, x(15), S14, &H49B40821) ' 16

    ' Round 2
    Call GG(a, b, c, d, x(1), S21, &HF61E2562)  ' 17
    Call GG(d, a, b, c, x(6), S22, &HC040B340)  ' 18
    Call GG(c, d, a, b, x(11), S23, &H265E5A51) ' 19
    Call GG(b, c, d, a, x(0), S24, &HE9B6C7AA)  ' 20
    Call GG(a, b, c, d, x(5), S21, &HD62F105D)  ' 21
    Call GG(d, a, b, c, x(10), S22, &H2441453)  ' 22
    Call GG(c, d, a, b, x(15), S23, &HD8A1E681) ' 23
    Call GG(b, c, d, a, x(4), S24, &HE7D3FBC8)  ' 24
    Call GG(a, b, c, d, x(9), S21, &H21E1CDE6)  ' 25
    Call GG(d, a, b, c, x(14), S22, &HC33707D6) ' 26
    Call GG(c, d, a, b, x(3), S23, &HF4D50D87)  ' 27
    Call GG(b, c, d, a, x(8), S24, &H455A14ED)  ' 28
    Call GG(a, b, c, d, x(13), S21, &HA9E3E905) ' 29
    Call GG(d, a, b, c, x(2), S22, &HFCEFA3F8)  ' 30
    Call GG(c, d, a, b, x(7), S23, &H676F02D9)  ' 31
    Call GG(b, c, d, a, x(12), S24, &H8D2A4C8A) ' 32

    ' Round 3
    Call HH(a, b, c, d, x(5), S31, &HFFFA3942)  ' 33
    Call HH(d, a, b, c, x(8), S32, &H8771F681)  ' 34
    Call HH(c, d, a, b, x(11), S33, &H6D9D6122) ' 35
    Call HH(b, c, d, a, x(14), S34, &HFDE5380C) ' 36
    Call HH(a, b, c, d, x(1), S31, &HA4BEEA44)  ' 37
    Call HH(d, a, b, c, x(4), S32, &H4BDECFA9)  ' 38
    Call HH(c, d, a, b, x(7), S33, &HF6BB4B60)  ' 39
    Call HH(b, c, d, a, x(10), S34, &HBEBFBC70) ' 40
    Call HH(a, b, c, d, x(13), S31, &H289B7EC6) ' 41
    Call HH(d, a, b, c, x(0), S32, &HEAA127FA)  ' 42
    Call HH(c, d, a, b, x(3), S33, &HD4EF3085)  ' 43
    Call HH(b, c, d, a, x(6), S34, &H4881D05)   ' 44
    Call HH(a, b, c, d, x(9), S31, &HD9D4D039)  ' 45
    Call HH(d, a, b, c, x(12), S32, &HE6DB99E5) ' 46
    Call HH(c, d, a, b, x(15), S33, &H1FA27CF8) ' 47
    Call HH(b, c, d, a, x(2), S34, &HC4AC5665)  ' 48

    ' Round 4
    Call II(a, b, c, d, x(0), S41, &HF4292244)  ' 49
    Call II(d, a, b, c, x(7), S42, &H432AFF97)  ' 50
    Call II(c, d, a, b, x(14), S43, &HAB9423A7) ' 51
    Call II(b, c, d, a, x(5), S44, &HFC93A039)  ' 52
    Call II(a, b, c, d, x(12), S41, &H655B59C3) ' 53
    Call II(d, a, b, c, x(3), S42, &H8F0CCC92)  ' 54
    Call II(c, d, a, b, x(10), S43, &HFFEFF47D) ' 55
    Call II(b, c, d, a, x(1), S44, &H85845DD1)  ' 56
    Call II(a, b, c, d, x(8), S41, &H6FA87E4F)  ' 57
    Call II(d, a, b, c, x(15), S42, &HFE2CE6E0) ' 58
    Call II(c, d, a, b, x(6), S43, &HA3014314)  ' 59
    Call II(b, c, d, a, x(13), S44, &H4E0811A1) ' 60
    Call II(a, b, c, d, x(4), S41, &HF7537E82)  ' 61
    Call II(d, a, b, c, x(11), S42, &HBD3AF235) ' 62
    Call II(c, d, a, b, x(2), S43, &H2AD7D2BB)  ' 63
    Call II(b, c, d, a, x(9), S44, &HEB86D391)  ' 64

    state(0) = fucAddBit(state(0), a)
    state(1) = fucAddBit(state(1), b)
    state(2) = fucAddBit(state(2), c)
    state(3) = fucAddBit(state(3), d)
    
End Sub


'Encodes input (UINT4) into output (unsigned char). Assumes len is
'a multiple of 4.
Private Sub Encode(ByRef output As Variant, ByRef valInput As Variant, ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    
    i = 0
    j = 0
    
    Do While j < valLen
        output(j) = valInput(i) And &HFF
        output(j + 1) = fncRightShift(valInput(i), 8) And &HFF
        output(j + 2) = fncRightShift(valInput(i), 16) And &HFF
        output(j + 3) = fncRightShift(valInput(i), 24) And &HFF
        i = i + 1
        j = j + 4
    Loop
End Sub


'Decodes input (unsigned char) into output (UINT4). Assumes len is
'a multiple of 4.
Private Sub Decode(ByRef output As Variant, ByRef valInput As Variant, ByVal inputPoint As Long, _
                   ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    Dim Buf As Long
          
    i = 0
    j = 0
    Buf = 0
    
    Do While j < valLen
        Buf = j + inputPoint
        output(i) = valInput(Buf) Or fncLeftShift(valInput(Buf + 1), 8) Or _
                    fncLeftShift(valInput(Buf + 2), 16) Or fncLeftShift(valInput(Buf + 3), 24)
        i = i + 1
        j = j + 4
    Loop
End Sub


'Note: Replace "for loop" with standard memcpy if possible.
Private Sub MD5_memcpy(ByRef output As Variant, ByVal outputPoint As Long, ByRef valInput As Variant, _
                       ByVal inputPoint As Long, ByVal valLen As Long)
    Dim i As Long
    For i = 0 To valLen - 1
        output(i + outputPoint) = valInput(i + inputPoint)
    Next
End Sub


Private Function MDPrint(ByRef digest As Variant) As String
    Dim Str As String
    Dim i As Integer
    
    For i = 0 To 16 - 1
        Str = Str & Right("00" & LCase(Hex(digest(i))), 2)
    Next
    
    MDPrint = Str
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|PADDING();
'@title     : [PADDING]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     :
'
'@return    : [PADDING]|fffd||8414||fffd|z|fffd||fffd|/Variant
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Get PADDING() As Variant()
    Dim valArray() As Variant
    valArray = Array( _
        &H80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 _
    )

    PADDING = valArray
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncLeftShift();
'@title     : |fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[<<]|fffd||255||3c2||fffd||fffd|A|fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncLeftShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long
    Dim tmp As Long
    
    If nBit = 0 Then
        msb = val
    Else
        lsb = 2 ^ (31 - nBit)
        tmp = val And (lsb - 1)
        msb = tmp * (2 ^ nBit)
        
        If val And lsb Then
            msb = msb Or &H80000000
        End If
    End If
    
    fncLeftShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncRightShift();
'@title     : |fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[>>]|fffd||255||3c2||fffd||fffd|A|fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncRightShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long

    If nBit = 0 Then
        msb = val
    Else
        lsb = val And &H7FFFFFFF

        If nBit = 31 Then
            msb = 0
        Else
            msb = lsb \ (2 ^ nBit)
        End If
        
        If lsb <> val Then
            msb = msb Or (2 ^ (31 - nBit))
        End If
    End If
        
    fncRightShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fucAddBit();
'@title     : |fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[+=]|fffd||255||3c2||fffd||fffd|A|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Currency
'             |fffd|l/Currency
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fucAddBit(ByVal a As Currency, ByVal b As Currency) As Long
    Dim tmp As Currency
    
    tmp = a + b
    If tmp > &H7FFFFFFF Then
        tmp = tmp - (2 ^ 32)
    ElseIf tmp < &H80000000 Then
        tmp = tmp + (2 ^ 32)
    End If
    
    fucAddBit = CLng(tmp)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritStr();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||3c9||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritStr()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim num As Variant
    Dim count As Long
    Dim ADODB As Object
    Set ADODB = CreateObject("ADODB.Stream")

    If Me.Text = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        ADODB.Open
        ADODB.Type = 2
        ADODB.Charset = Me.Charset
        ADODB.WriteText Me.Text
        ADODB.Position = 0
        ADODB.Type = 1
        
        If Me.Charset = "UNICODE" Then
            ADODB.Position = 2
            valByte = ADODB.Read
            
            count = 0
            For Each num In valByte
                If Not num = 0 Then
                    ReDim Preserve valArray(count)
                    valArray(count) = num
                    count = count + 1
                End If
            Next num

        ElseIf Me.Charset = "SHIFT-JIS" Then
            ADODB.Position = 0
            valArray = ADODB.Read
        
        ElseIf Me.Charset = "UTF-8" Then
            ADODB.Position = 3
            valArray = ADODB.Read
            
        End If

        ADODB.Close
        Me.StrByte = valArray
        Me.StrLen = UBound(valArray) + 1
    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritFile();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'             |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34b||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritFile()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim inputFn As Long
    Dim num As Variant
    Dim count As Long


    If Dir(Me.FilePath) = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        inputFn = FreeFile
        Open Me.FilePath For Binary As #inputFn
            ReDim valArray(LOF(inputFn))
            Get #inputFn, , valArray
        Close #inputFn

        If UBound(valArray) = 0 Then
            Me.StrLen = 0
        Else
            ReDim Preserve valArray(UBound(valArray) - 1)
            Me.StrLen = UBound(valArray) + 1
        End If
        Me.StrByte = valArray

    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|TextHash();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||8576||fffd||fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function TextHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritStr

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    TextHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FileHash();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||741|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'             |fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||341|A|fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||502||fffd||fffd||702||fffd||fffd|B
'             [d41d8cd98f00b204e9800998ecf8427e]
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function FileHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritFile

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    FileHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Charset();
'@title     : [Charset]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Charset(ByVal value As String)
    mvarCharset = UCase(value)
End Property
Public Property Get Charset() As String
    Charset = mvarCharset
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Text();
'@title     : [Text]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Text(ByVal value As String)
    mvarText = value
End Property
Public Property Get Text() As String
    Text = mvarText
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FilePath();
'@title     : [FilePath]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'
'@return    : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let FilePath(ByVal value As String)
    mvarFilePath = value
End Property
Public Property Get FilePath() As String
    FilePath = mvarFilePath
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrByte();
'@title     : [StrByte]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'
'@return    : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrByte(ByRef value() As Byte)
    mvarStrByte = value
End Property
Public Property Get StrByte() As Byte()
    StrByte = mvarStrByte
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrLen();
'@title     : [StrLen]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'
'@return    : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrLen(ByVal value As Long)
    mvarStrLen = value
End Property
Public Property Get StrLen() As Long
    StrLen = mvarStrLen
End Property

Attribute VB_Name = "Module1"
    
Public Declare Sub UrlSign Lib "Sign.dll" (ByVal Url As String, ByVal SignedUrl As String, ByVal Secretkey As String)



Sub |fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o()
Dim SKU As String
Dim Price As Long

Dim ProductID As String
Dim IDtype As String
Dim LowLimit As Long
Dim HighLimit As Long
Dim Condition As String
Dim Number As Long
Dim Comment As String
Dim NoUsePayment As String
Dim Shipping As String
Dim Fullfillment As String
Dim LeadTime As String
    LeadTime = Sheets("Scan").Cells(3, 12)
Dim SendPattern As String
    SendPattern = Sheets("Scan").Cells(4, 9)
    
    If SendPattern = "|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g" Then
        SendPattern = ""
    End If
    
Dim SypnFileX As Long
    SypnFileX = Sheets("SypnFile").Cells(Rows.count, 1).End(xlUp).Row
Dim LastIndex As Long
    LastIndex = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
       
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|-------------------------------
    If SypnFileX > 3 Then
        Sheets("SypnFile").Rows("4:" & SypnFileX).ClearContents
    End If
    '-------------------------------------------
    
        
        For i = 7 To LastIndex
            SypnFileX = Sheets("SypnFile").Cells(Rows.count, 1).End(xlUp).Row + 1
            Application.StatusBar = "|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd|@" & i & "/" & LastIndex & "|fffd|s"
                    
            If Sheets("Scan").Cells(i, 1) <> "" Then
                ProductID = Sheets("Scan").Cells(i, 1)
                Condition = Sheets("Scan").Cells(i, 3)
                Select Case Condition
                    Case "|fffd||fffd||fffd||fffd|-|fffd||fffd|"
                        Condition = "4"
                    Case "|fffd||fffd||fffd||fffd|-|fffd||1c2||fffd|"
                        Condition = "3"
                    Case "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||257||1c2||fffd|"
                        Condition = "2"
                    Case "|fffd||fffd||fffd||fffd|-|fffd||642||690|V|fffd|i"
                        Condition = "1"
                    Case "|fffd|V|fffd|i"
                        Condition = "11"
                End Select
                If Sheets("Scan").Cells(3, 9) <> "0" Then
                    Comment = Sheets("Scan").Cells(i, 4) & Sheets("Scan").Cells(3, 9)
                Else
                    Comment = Sheets("Scan").Cells(i, 4)
                End If
                SKU = Sheets("Scan").Cells(i, 9)
                
                'ASIN|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||102||fffd||fffd||fffd||383|^|fffd|C|fffd|v|fffd|FASIN|fffd|A|fffd|R|fffd|[|fffd|h|fffd|F|fffd|Y|fffd||fffd|ASIN|fffd|A|fffd||24f||33d1||fffd||fffd||fffd||fffd||fffd||fffd|ASIN|fffd||14f|o|fffd|i
                If Sheets("Scan").Cells(i, 14) <> "" Then
                    ProductID = Sheets("Scan").Cells(i, 14)
                    IDtype = "1"
                Else
                    IDtype = Sheets("Scan").Cells(i, 10)
                    Select Case IDtype
                        Case "ISBN"
                            IDtype = "2"
                        Case "EAN"
                            IDtype = "4"
                        Case "ASIN"
                            IDtype = "1"
                    End Select
                End If
                
                Price = Sheets("Scan").Cells(i, 13)
                
                If Price = Empty Then
                    Price = Sheets("Scan").Cells(3, 15)
                End If
                
                NoUsePayment = Sheets("Scan").Cells(3, 10)
                    Select Case NoUsePayment
                        Case "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                            NoUsePayment = "exclude cod"
                        Case "|fffd|R|fffd||fffd||fffd|r|fffd|j|fffd||fffd||fffd||fffd|"
                            NoUsePayment = "exclude cvs"
                        Case "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||183|R|fffd||fffd||fffd|r|fffd|j|fffd||fffd||fffd||fffd|"
                            NoUsePayment = "exclude cod, cvs"
                        Case Else
                            NoUsePayment = "exclude_none"
                    End Select
                
                If Sheets("Scan").Cells(3, 13) <> "" Then
                    LowLimit = Sheets("Scan").Cells(3, 13)
                Else
                    LowLimit = ""
                End If
                
                If Sheets("Scan").Cells(3, 14) <> "" Then
                    HighLimit = Application.WorksheetFunction.Max(Sheets("Scan").Cells(3, 14), Price * Sheets("Scan").Cells(4, 14) / 100)
                Else
                    HighLimit = ""
                End If
                
                Shipping = Sheets("Scan").Cells(3, 11)
                    Select Case Shipping
                        Case "|fffd|A|fffd|W|fffd|A|fffd|S|fffd||fffd|"
                            Shipping = "12"
                        Case "|fffd|A|fffd|W|fffd|A|fffd|A|fffd|k|fffd||101|A|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|p|fffd|S|fffd||fffd|"
                            Shipping = "13"
                        Case "|fffd|C|fffd|O|fffd|S|fffd||fffd|"
                            Shipping = "14"
                        Case Else
                            Shipping = "11"
                    End Select
                
                If Sheets("Scan").Cells(3, 2) = "FBA" Then
                    Fullfillment = "AMAZON_JP"
                    Sheets("SypnFile").Cells(SypnFileX, 15) = Fullfillment
                Else
                    Fullfillment = ""
                    Number = Sheets("Scan").Cells(i, 5)
                    Sheets("SypnFile").Cells(SypnFileX, 11) = Number
                End If
                
                Sheets("SypnFile").Cells(SypnFileX, 1) = SKU
                Sheets("SypnFile").Cells(SypnFileX, 2) = ProductID
                Sheets("SypnFile").Cells(SypnFileX, 3) = IDtype
                Sheets("SypnFile").Cells(SypnFileX, 4) = NoUsePayment
                Sheets("SypnFile").Cells(SypnFileX, 5) = SendPattern
                
                Sheets("SypnFile").Cells(SypnFileX, 6) = Price
                Sheets("SypnFile").Cells(SypnFileX, 8) = LowLimit
                Sheets("SypnFile").Cells(SypnFileX, 9) = HighLimit
                Sheets("SypnFile").Cells(SypnFileX, 10) = Condition
                
                Sheets("SypnFile").Cells(SypnFileX, 12) = "a"
                Sheets("SypnFile").Cells(SypnFileX, 13) = Shipping
                Sheets("SypnFile").Cells(SypnFileX, 14) = Comment
                
                Sheets("SypnFile").Cells(SypnFileX, 16) = LeadTime
                
                Sheets("SypnFile").Cells(SypnFileX, 17) = "false"
                Sheets("SypnFile").Cells(SypnFileX, 28) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
                Sheets("SypnFile").Cells(SypnFileX, 29) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
                Sheets("SypnFile").Cells(SypnFileX, 30) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
                Sheets("SypnFile").Cells(SypnFileX, 31) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
                Sheets("SypnFile").Cells(SypnFileX, 32) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
            End If
        DoEvents
        Next
End Sub

Sub |fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||fffd|()
'ActiveWorkbook.Unprotect Password:="nosuke7254"
    'Worksheets("PriceCheckList").Visible = True
    'Worksheets("SypnFile").Visible = True
    
Dim FileName As String
    FileName = Sheets("Config").Range("D38")
Dim FilePass As String
    FilePass = Sheets("Config").Range("D39") & "\|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||350||fffd|"
    
Dim SaveSheet As Worksheet
    Set SaveSheet = Sheets("SypnFile")
    
Dim SypnFileName As String
    
Dim TotalPrice As Long
Dim Memo As String
Dim TotalNumber

Dim LastIndex As Long
    LastIndex = Sheets("SypnFile").Cells(Rows.count, 1).End(xlUp).Row

Dim ScanX As Long
    ScanX = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row


    For p = 7 To ScanX
        If Sheets("Scan").Cells(p, 8) <> Empty Then
            TotalPrice = TotalPrice + Sheets("Scan").Cells(p, 8) * Sheets("Scan").Cells(p, 5)
        End If
    Next


    For p = 7 To ScanX
        If Sheets("Scan").Cells(p, 5) <> Empty Then
            TotalNumber = TotalNumber + Sheets("Scan").Cells(p, 5)
        End If
    Next

Dim MyFile As String

    SypnFileName = Sheets("Scan").Cells(3, 3)
    SypnFileName = SypnFileName & Format(Now(), "YYMMDD")
    If Sheets("Scan").Cells(3, 2) = "FBA" Then
        SypnFileName = SypnFileName & "-" & Format(Sheets("Scan").Cells(4, 2), "00")
    End If

    SypnFileName = SypnFileName & "-" & TotalNumber

    SypnFileName = SypnFileName & "-" & TotalPrice
'==============================================
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("SypnFile")
    Dim OutPutPass As String
        OutPutPass = FilePass
    Dim datFile As String
        datFile = OutPutPass & "\" & SypnFileName & ".txt"
    
    '45|fffd||fffd|o|fffd||fffd|
    Dim ColText As String
    Open datFile For Output As #1
     
    Dim i As Long
    i = 1
    Do While ws.Cells(i, 1).value <> ""
        ColText = ws.Cells(i, 1).value
        For n = 2 To 45
            ColText = ColText & vbTab & ws.Cells(i, n).value
        DoEvents
        Next
        Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|@" & i & "/" & LastIndex
        Print #1, ColText
        i = i + 1
    Loop
     
    Close #1
     
    Application.StatusBar = ""
    
    Dim SubmitId As String
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|t|fffd|B|fffd|[|fffd|h|fffd||fffd||fffd|M|fffd|L|fffd||fffd|
    If Sheets("Config").Cells(2, 2) = "|fffd||84ee|" Then
        MsgBox OutPutPass & "|fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|u" & SypnFileName & ".txt|fffd|v|fffd||141|A|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        '|fffd||6d1||fffd||fffd||fffd|t|fffd||fffd||fffd|p|fffd|X|fffd|w|fffd||fffd||143|t|fffd|B|fffd|[|fffd|h|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s(Mod18)==========
        SubmitId = TsvSend(datFile)
        '===================================================================
        
        If IsNumeric(SubmitId) = True Then
            Name datFile As OutPutPass & "\|fffd|A|fffd|b|fffd|v|fffd||3c2||fffd|\" & SypnFileName & "_|fffd|A|fffd|b|fffd|v|fffd||3c2||fffd|_" & SubmitId & ".txt"
            MsgBox "|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B(|fffd|o|fffd|b|fffd|`ID|fffd|F" & SubmitId & ")" & vbLf _
                    & "|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||343|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||182||fffd||fffd||101|A|fffd|u" & OutPutPass & "\|fffd|A|fffd|b|fffd|v|fffd||3c2||741|v|fffd||fffd|" & vbLf & _
                    "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|u" & SypnFileName & "_|fffd|A|fffd|b|fffd|v|fffd||3c2||fffd|_" & SubmitId & ".txt|fffd|v|fffd||141|A|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        Else
            Name datFile As Left(datFile, Len(datFile) - 4) & "_|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|s_" & SubmitId & ".txt"
            MsgBox "|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & _
                    "|fffd|u" & OutPutPass & "|fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|u" & SypnFileName & "_|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|s_" & SubmitId & ".txt|fffd|v|fffd||141|A|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||102||fffd||fffd||fffd||302||14e||84ee||fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||742||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        End If
    End If



End Sub
Attribute VB_Name = "Module10"
Function EanToBoCode(EAN As String) As String
Dim BoResalt(1) As Variant
'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

Dim BoCode As String

Dim Url As String
    Url = "https://search.rakuten.co.jp/search/mall/" & EAN & "/?sid=275488"

httpReq.Open "GET", Url
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop


Dim htmlDoc As Object
Dim oXmlHttp As Object

Dim htmlText As String


                    
    Set htmlDoc = New HTMLDocument
                    
    Debug.Print StrConv(httpReq.responseBody, 64)
    htmlDoc.write httpReq.responseBody
                     
    htmlText = StrConv(httpReq.responseBody, 64)
    'Sheets("test").Cells(1, 1) = htmlText
    If InStr(htmlText, "|fffd||fffd||fffd|w|fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||93e4||fffd|i|fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B") > 0 Then
        EanToBoCode = Empty
        Set httpReq = Nothing
        Exit Function
    End If
    BoCode = Mid(htmlText, InStr(htmlText, "<h2>") + Len("<h2>"), InStr(htmlText, "data-track-trigger=""title""") - InStr(htmlText, "<h2>"))
    BoCode = Format(Mid(BoCode, InStr(BoCode, "bookoffonline/") + Len("bookoffonline/"), 10), "0000000000")

    
    EanToBoCode = BoCode
    
Set httpReq = Nothing
'-----------------------------
End Function

Attribute VB_Name = "Module11"
Sub |fffd|}|fffd|N|fffd||fffd||fffd||30d||157|L|fffd||fffd||fffd||fffd|()

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub
Attribute VB_Name = "Module12"

Attribute VB_Name = "Module13"
Sub Button1_Click()
Dim a As String
With Application.FileDialog(msoFileDialogFolderPicker)
.Show
a = .SelectedItems(1)

End With
    
    Range("B3") = a
End Sub
Attribute VB_Name = "Module14"
Sub SKU|fffd||318|A|fffd||502||fffd|U|fffd||84bc||fffd||fffd|()
Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
Dim SKU As String
Dim MyNumber As Long
Dim Number As Long
    Number = 0
Dim SendMethod As String
    SendMethod = Sheets("Scan").Cells(3, 2)

Dim LastIndex As Long
    LastIndex = Cells(Rows.count, 1).End(xlUp).Row

Dim Initial As String
    Initial = Sheets("Scan").Cells(3, 3)
    
Dim FBABoxNumber As String
    FBABoxNumber = Sheets("Scan").Cells(4, 2)

Dim StartNumber As String
    StartNumber = Sheets("Scan").Cells(3, 4)
    Number = StartNumber
    
Dim BuyPrice As Long
Dim SealPrice As Long
Dim SaleRatio As Long
Dim SaleJudge As String
Dim Memo As String

Dim SendPricePlus As Long
    SendPricePlus = Sheets("Scan").Cells(3, 5)

For i = 7 To LastIndex
    If Sheets("Scan").Cells(i, 1) <> "" Then
       
        '-----------------------------------------------------------------
        SealPrice = Sheets("Scan").Cells(i, 6)
        SaleRatio = Sheets("Scan").Cells(i, 7)
        Memo = Sheets("Scan").Cells(i, 2)
        If SaleRatio > 0 Then
            SaleJudge = "ON"
        Else
            SaleJudge = "OFF"
        End If
        
        BuyPrice = Int(SealPrice * (1 - SaleRatio / 100))
        Sheets("Scan").Cells(i, 8) = BuyPrice
                
                SKU = Initial & Format(Now, "YYMMDD")
                    If SendMethod = "FBA" Then 'SKU|fffd|`|fffd||fffd|
                        SKU = SKU & "-" & Format(FBABoxNumber, "00") & "-" & Format(Number, "000")
                    Else
                        SKU = SKU & "-" & Format(Number, "000")
                    End If
                    
                    If Memo <> "" Then
                        SKU = SKU & "-" & Memo
                    End If
                    
                    If SaleJudge = "ON" Then
                        SKU = SKU & "-S" & SaleRatio
                    End If
                    
                    If SealPrice <> Empty Then
                        If SaleJudge = "ON" Then
                            SKU = SKU & "-" & SealPrice + Int(SendPricePlus / ((100 - SaleRatio) / 100))
                        Else
                            SKU = SKU & "-" & SealPrice + SendPricePlus
                        End If
                    Else
                        SKU = SKU & "-" & Int(SendPricePlus / ((100 - SaleRatio) / 100))
                    End If
            '-------------------------------------------------
    Sheets("Scan").Cells(i, 9) = SKU
    Number = Number + 1
    Else
        Sheets("Scan").Cells(i, 9).ClearContents
    End If
Next

Application.Run "|fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N"
MsgBox "SKU|fffd|U|fffd||84bc||fffd||fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd|l|fffd||10e||64fe||fffd||fffd||fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|"
End Sub
Sub |fffd||752||fffd||fffd||282||fffd|()
Sheets("Config").Select
End Sub
Sub |fffd|o|fffd|i|fffd||fffd||282||fffd|()
Sheets("Scan").Select
End Sub
Attribute VB_Name = "Module15"
Sub |fffd|o|fffd|i|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|()
Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
Dim Res
Res = MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||110|V|fffd|K|fffd|o|fffd|i|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||c42c||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd||fffd||fffd||702||142||30d||fffd||193||fffd||fffd|e|fffd||34e||fffd||fffd||fffd||fffd||702||fffd||fffd||302||141|A|fffd||508||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||242||341|u|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKCancel)
If Res = vbCancel Then Exit Sub
If Res = vbOK Then
    Res = MsgBox("|fffd|}|fffd|W|fffd||14f||fffd||fffd||fffd||fffd||fffd|OK|fffd|H", vbOKCancel)
    If Res = vbCancel Then Exit Sub
End If

Sheets("Scan").Range("A7:AI1006").ClearContents
End Sub
Sub |fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||10f|o|fffd||342||fffd||fffd||fffd|()
Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
If Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row < 7 Then
    MsgBox "|fffd|o|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||41101||fffd|"
    Exit Sub
End If

Dim Res
If Sheets("Config").Cells(2, 2) = "|fffd||84ee|" Then
    Res = MsgBox("|fffd||fffd||fffd||313||fffd||fffd|e|fffd||14f|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|OK|fffd||142||fffd||fffd||fffd||fffd|H", vbOKCancel)
Else
    Res = MsgBox("|fffd||fffd||fffd||313||fffd||fffd|e|fffd||14f|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|OK|fffd||142||fffd||fffd||fffd||fffd|H" & vbLf & vbLf & "|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||202||302||141|A|fffd||fffd||fffd|e|fffd||24a||508||10a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd|C|fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKCancel)
End If
If Res = vbCancel Then Exit Sub
If Res = vbOK Then
    Res = MsgBox("|fffd|}|fffd|W|fffd||fffd|OK|fffd|H", vbOKCancel)
    If Res = vbCancel Then Exit Sub
End If

Application.Run "|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o"
Application.Run "|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||fffd|"

Res = MsgBox("|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I" & vbLf & vbLf & "|fffd||fffd||fffd||313||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\|fffd||253|]|fffd|L|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbOKCancel)
If Res = vbCancel Then Exit Sub
If Res = vbOK Then
    Application.Run "|fffd|o|fffd|i|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\|fffd||253|]|fffd|L|fffd||fffd||fffd||fffd|"
End If


End Sub

Sub |fffd|o|fffd|i|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\|fffd||253|]|fffd|L|fffd||fffd||fffd||fffd|()


Dim MyBook As Workbook
    Set MyBook = ThisWorkbook
    
Dim TargetName As String
    TargetName = Format(Now(), "YYYY") & "|fffd|N|fffd|x|fffd||fffd||fffd||1c2||fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\.xlsm"
    
Dim MyFilePath As String
    MyFilePath = ThisWorkbook.Path

Dim TargetPath As String
    TargetPath = MyFilePath
    For i = 2 To 100
        If Left(Right(MyFilePath, i), 1) = "\" Then
            TargetPath = Left(MyFilePath, Len(MyFilePath) - i) & "\|fffd||fffd||fffd||1c2||fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\\" & TargetName
            Exit For
        End If
    DoEvents
    Next

Dim TargetSheetName As String
    TargetSheetName = Format(Now(), "M") & "|fffd||fffd|"

Dim LastIndex As Long
    LastIndex = Sheets("Scan").Cells(Rows.count, 2).End(xlUp).Row
'|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||fffd||78e||64fe||fffd||fffd||fffd||fffd|--------------------------------------------------
Dim Memo As Variant
    ReDim Memo(0)
    For a = 7 To LastIndex
        If Sheets("Scan").Cells(a, 2) <> "" Then
            For b = 0 To UBound(Memo)
                If Sheets("Scan").Cells(a, 2) = Memo(b) Then
                    GoTo SameMemoSkip
                End If
            DoEvents
            Next
            Memo(UBound(Memo)) = Sheets("Scan").Cells(a, 2)
            ReDim Preserve Memo(UBound(Memo) + 1)
        End If
SameMemoSkip:
    DoEvents
    Next
    If UBound(Memo) <> 0 Then
        If Memo(UBound(Memo)) = Empty Then
            ReDim Preserve Memo(UBound(Memo) - 1)
        End If
    End If
    
Dim MemoStr As String
If UBound(Memo) <> 0 And Memo(0) <> Empty Then
    For d = 0 To UBound(Memo)
        If d = 0 Then
            MemoStr = Memo(d)
        Else
            MemoStr = MemoStr & "," & Memo(d)
        End If
    DoEvents
    Next
Else
    MemoStr = Empty
End If

'|fffd||fffd||fffd||254|C|fffd||4c2||303||fffd||fffd||fffd||fffd||15dc2||fffd|
    Dim Buf As String, msg As String
    msg = "|fffd||202||242||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd|c|fffd||fffd||fffd||a347||fffd||353||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
          "|fffd||d4482||fffd||fffd||fffd||fffd||fffd||fffd||343|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||154||fffd||fffd|l|fffd||16cce||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
    Buf = InputBox(msg)
    If Buf <> "" Then
        MemoStr = MemoStr & "|fffd|A" & Buf
    End If
'SKU|fffd|e|fffd||502||194|z|fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||64fe|-------------------------------------------------------
Dim SKU As String
Dim SendMethod As String
    SendMethod = Sheets("Scan").Cells(3, 2)
    If SendMethod = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
        SKU = Sheets("Scan").Cells(3, 3) & Format(Now(), "YYMMDD")
    Else
        SKU = Sheets("Scan").Cells(3, 3) & Format(Now(), "YYMMDD") & "-" & Format(Sheets("Scan").Cells(4, 2), "00")
    End If

'|fffd|d|fffd||fffd||fffd||fffd|l|fffd||190||fffd||fffd||282||fffd||fffd|W|fffd|v|fffd||fffd||fffd||fffd|iSKU|fffd|e|fffd||502||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10f|W|fffd|v|fffd||fffd||fffd||fffd||302||fffd||fffd||702||fffd||fffd|j
Dim TotalCount As Long
Dim TotalPrice As Long
Dim count As Long
Dim Price As Long

    LastIndex = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
    
    For c = 7 To LastIndex
        count = Sheets("Scan").Cells(c, 5)
        Price = Sheets("Scan").Cells(c, 8)
        TotalCount = TotalCount + count
        TotalPrice = TotalPrice + count * Price
    DoEvents
    Next
    
    
'|fffd||fffd||fffd|v|fffd||1d7||fffd||fffd|\|fffd||24b|L|fffd||fffd|------------------------------------------------------------------
    Application.ScreenUpdating = False
    Workbooks.Open TargetPath

Dim TargetRow As Long
    TargetRow = Sheets(TargetSheetName).Cells(Rows.count, 25).End(xlUp).Row + 1

    Workbooks(TargetName).Sheets(TargetSheetName).Cells(TargetRow, 24) = MemoStr
    Workbooks(TargetName).Sheets(TargetSheetName).Cells(TargetRow, 25) = SKU
    Workbooks(TargetName).Sheets(TargetSheetName).Cells(TargetRow, 26) = TotalCount
    Workbooks(TargetName).Sheets(TargetSheetName).Cells(TargetRow, 27) = TotalPrice
    Workbooks(TargetName).Sheets(TargetSheetName).Cells(TargetRow, 29) = SendMethod
    
    Application.DisplayAlerts = False
    Workbooks(TargetName).Save
    Application.DisplayAlerts = False
    Workbooks(TargetName).Close
    Application.ScreenUpdating = True

MsgBox "|fffd||fffd||fffd|v|fffd|m|fffd|F|fffd|\|fffd||582||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"

End Sub
Attribute VB_Name = "Module16"
Public Declare Sub UrlSign Lib "Sign.dll" (ByVal Url As String, ByVal SignedUrl As String, ByVal Secretkey As String)
'advapi32.dll
'http://su-u.jp/juju/%B5%A4%A4%DE%A4%B0%A4%EC%C6%FC%B5%AD/2007-03-08.html
Private Declare Function CryptAcquireContext Lib "advapi32.dll" Alias "CryptAcquireContextA" _
                            (ByRef phProv As Long, ByVal pszContainer As String, ByVal pszProvider As String, _
                             ByVal dwProvType As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptReleaseContext Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptCreateHash Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, _
                             ByRef phHash As Long) As Long
Private Declare Function CryptDestroyHash Lib "advapi32.dll" _
                            (ByVal hHash As Long) As Long
Private Declare Function CryptHashData Lib "advapi32.dll" _
                            (ByVal hHash As Long, pbData As Any, ByVal cbData As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptGetHashParam Lib "advapi32.dll" _
                            (ByVal hHash As Long, ByVal dwParam As Long, pbData As Any, ByRef pcbData As Long, _
                             ByVal dwFlags As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)

Private Const PROV_RSA_FULL   As Long = 1
Private Const PROV_RSA_AES    As Long = 24
Private Const CRYPT_VERIFYCONTEXT As Long = &HF0000000

Private Const HP_HASHVAL      As Long = 2
Private Const HP_HASHSIZE     As Long = 4

Private Const ALG_TYPE_ANY    As Long = 0
Private Const ALG_CLASS_HASH  As Long = 32768

Private Const ALG_SID_MD2     As Long = 1
Private Const ALG_SID_MD4     As Long = 2
Private Const ALG_SID_MD5     As Long = 3
Private Const ALG_SID_SHA     As Long = 4
Private Const ALG_SID_SHA_256 As Long = 12
Private Const ALG_SID_SHA_384 As Long = 13
Private Const ALG_SID_SHA_512 As Long = 14

Private Const CALG_MD2        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD2)
Private Const CALG_MD4        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD4)
Private Const CALG_MD5        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD5)
Private Const CALG_SHA        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA)
Private Const CALG_SHA_256    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_256)
Private Const CALG_SHA_384    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_384)
Private Const CALG_SHA_512    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_512)

' Create Hash
Private Function CreateHash(abytData() As Byte, ByVal lngAlgID As Long) As String
    Dim hProv As Long, hHash As Long
    Dim abytHash(0 To 63) As Byte
    Dim lngLength As Long
    Dim lngResult As Long
    Dim strHash As String
    Dim i As Long
    strHash = ""
    If CryptAcquireContext(hProv, vbNullString, vbNullString, _
                           IIf(lngAlgID >= CALG_SHA_256, PROV_RSA_AES, PROV_RSA_FULL), _
                           CRYPT_VERIFYCONTEXT) <> 0& Then
        If CryptCreateHash(hProv, lngAlgID, 0&, 0&, hHash) <> 0& Then
            lngLength = UBound(abytData()) - LBound(abytData()) + 1
            If lngLength > 0 Then lngResult = CryptHashData(hHash, abytData(LBound(abytData())), lngLength, 0&) _
                             Else lngResult = CryptHashData(hHash, ByVal 0&, 0&, 0&)
            If lngResult <> 0& Then
                lngLength = UBound(abytHash()) - LBound(abytHash()) + 1
                If CryptGetHashParam(hHash, HP_HASHVAL, abytHash(LBound(abytHash())), lngLength, 0&) <> 0& Then
                    For i = 0 To lngLength - 1
                        strHash = strHash & Right$("0" & Hex$(abytHash(LBound(abytHash()) + i)), 2)
                    Next
                End If
            End If
            CryptDestroyHash hHash
        End If
        CryptReleaseContext hProv, 0&
    End If
    CreateHash = LCase$(strHash)
End Function

' Create Hash From String(Shift_JIS)
Private Function CreateHashString(ByVal strData As String, ByVal lngAlgID As Long) As String
    CreateHashString = CreateHash(StrConv(strData, vbFromUnicode), lngAlgID)
End Function

' Create Hash From File
Private Function CreateHashFile(ByVal strFileName As String, ByVal lngAlgID As Long) As String
    Dim abytData() As Byte
    Dim intFile As Integer
    Dim lngError As Long
    On Error Resume Next
        If Len(Dir(strFileName)) > 0 Then
            intFile = FreeFile
            Open strFileName For Binary Access Read Shared As #intFile
            abytData() = InputB(LOF(intFile), #intFile)
            Close #intFile
        End If
        lngError = Err.Number
    On Error GoTo 0
    If lngError = 0 Then CreateHashFile = CreateHash(abytData(), lngAlgID) _
                    Else CreateHashFile = ""
End Function

' MD5
Public Function CreateMD5Hash(abytData() As Byte) As String
    CreateMD5Hash = CreateHash(abytData(), CALG_MD5)
End Function
Public Function CreateMD5HashString(ByVal strData As String) As String
    CreateMD5HashString = CreateHashString(strData, CALG_MD5)
End Function
Public Function CreateMD5HashFile(ByVal strFileName As String) As String
    CreateMD5HashFile = CreateHashFile(strFileName, CALG_MD5)
End Function

' SHA-1
Public Function CreateSHA1Hash(abytData() As Byte) As String
    CreateSHA1Hash = CreateHash(abytData(), CALG_SHA)
End Function
Public Function CreateSHA1HashString(ByVal strData As String) As String
    CreateSHA1HashString = CreateHashString(strData, CALG_SHA)
End Function
Public Function CreateSHA1HashFile(ByVal strFileName As String) As String
    CreateSHA1HashFile = CreateHashFile(strFileName, CALG_SHA)
End Function

' SHA-256
Public Function CreateSHA256Hash(abytData() As Byte) As String
    CreateSHA256Hash = CreateHash(abytData(), CALG_SHA_256)
End Function
Public Function CreateSHA256HashString(ByVal strData As String) As String
    CreateSHA256HashString = CreateHashString(strData, CALG_SHA_256)
End Function
Public Function CreateSHA256HashFile(ByVal strFileName As String) As String
    CreateSHA256HashFile = CreateHashFile(strFileName, CALG_SHA_256)
End Function

' SHA-384
Public Function CreateSHA384Hash(abytData() As Byte) As String
    CreateSHA384Hash = CreateHash(abytData(), CALG_SHA_384)
End Function
Public Function CreateSHA384HashString(ByVal strData As String) As String
    CreateSHA384HashString = CreateHashString(strData, CALG_SHA_384)
End Function
Public Function CreateSHA384HashFile(ByVal strFileName As String) As String
    CreateSHA384HashFile = CreateHashFile(strFileName, CALG_SHA_384)
End Function

' SHA-512
Public Function CreateSHA512Hash(abytData() As Byte) As String
    CreateSHA512Hash = CreateHash(abytData(), CALG_SHA_512)
End Function
Public Function CreateSHA512HashString(ByVal strData As String) As String
    CreateSHA512HashString = CreateHashString(strData, CALG_SHA_512)
End Function
Public Function CreateSHA512HashFile(ByVal strFileName As String) As String
    CreateSHA512HashFile = CreateHashFile(strFileName, CALG_SHA_512)
End Function
Function URLhenkan(Str As String) As String
Set sc = CreateObject("ScriptControl")
sc.Language = "Jscript"
Set js = sc.CodeObject
URLhenkan = js.encodeURIComponent(Str)
End Function
'Hmac-SHA256
'http://plus-sys.jugem.jp/?eid=215
Public Function Hmac(sKey, rawTextToSign As String) As String

Dim arKey() As Byte
Dim ipad As String
Dim opad As String
Dim buff() As Byte, offset As Integer

'|fffd||fffd||fffd||fffd||fffd||fffd|
    ipad = ""
    opad = ""
    hash = ""
    ReDim arKey(0 To 63)

'|fffd||95a7||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||c2||93||1cd||fffd||fffd||741|A|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||595||3ca||fffd||fffd||fffd|z|fffd||fffd||58a|i|fffd|[
    For i = 0 To Len(sKey) - 1
        arKey(i) = Asc(Mid(sKey, i + 1, 1))
    Next

'64|fffd||fffd||fffd||fffd||fffd||256||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd|[|fffd||fffd||fffd|Z|fffd|b|fffd|g
    For i = Len(sKey) To 63
        arKey(i) = 0
    Next

'innerpad|fffd|y|fffd||fffd|outerpad|fffd||c42c|
    For i = 0 To 63
        ipad = ipad & Chr(arKey(i) Xor &H36)
        opad = opad & Chr(arKey(i) Xor &H5C)
    Next

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd|
'(innerpad+|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|)|fffd||fffd||fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|E|fffd|E|fffd|E|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1
    hash = CreateSHA256HashString(ipad & rawTextToSign)

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|
    buff = StrConv(opad, vbFromUnicode)
    offset = UBound(buff)
    ReDim Preserve buff(offset + Len(hash) \ 2)

    For i = 1 To (Len(hash) \ 2)
        buff(offset + i) = CByte("&H" & Mid(hash, (i - 1) * 2 + 1, 2))
    Next
    hash = CreateSHA256Hash(buff)
    Hmac = hash

End Function
Public Function HEX2BIN(ByVal hx As String) As String
    Dim num As Long
    Dim bin As String
    Dim i As Integer
    num = CLng("&H" & hx)
        For i = Len(hx) * 4 - 1 To 0 Step -1
            bin = bin & -CInt((num And (2 ^ i)) <> 0)
        Next
    HEX2BIN = bin
End Function
'n|fffd|i|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|strNumber|fffd||fffd|10|fffd|i|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||115||502||fffd|
'http://www5d.biglobe.ne.jp/~tomoya03/shtml/algorithm/Convert.htm
Public Function ncdec(ByVal n As Long, ByVal strNumber As String) As Long

    Dim lngt As Long
    Dim c As Long
    Dim i As Long
    lngt = 0&
    c = 1&
    For i = 1& To Len(strNumber)
        lngt = lngt + subncdec(Left$(Right$(strNumber, i), 1)) * c
        c = c * n
    Next i
    ncdec = lngt

End Function
'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
'http://www.geocities.co.jp/SilkRoad/4511/vb/urlenc.htm
Public Function URLencode(ByRef strSource As String) As String

 Dim lngLength As Long                                          '|fffd||fffd||fffd||fffd||fffd||fffd||303|T|fffd|C|fffd|Y(S-JIS |fffd||3ca||fffd||fffd||fffd|)|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim bytSource() As Byte                                        'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd|
 Dim strBuffer As String                                        'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@
 Dim bytSingle As Byte                                          '|fffd|z|fffd||42a42||7532||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim strSingleHex As String                                     '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim lngReadCount As Long                                       'bytSource |fffd||1c2||74d||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 Dim lngWriteCount As Long                                      'strBuffer |fffd||fffd||fffd||fffd||fffd||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 
    lngLength = LenB(StrConv(strSource, vbFromUnicode))         'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If Not CBool(lngLength) Then Exit Function                  '0 |fffd|o|fffd|C|fffd|g|fffd||30f||a347||fffd||590||fffd||fffd||14c82||fffd||fffd||fffd|
    ReDim bytSource(lngLength - 1)                              'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||308||fffd||fffd||fffd|m|fffd||fffd|
    bytSource = StrConv(strSource, vbFromUnicode)               'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd| bytSource |fffd||24a|i|fffd|[
    
    strBuffer = String$(lngLength * 3, vbNullChar)              'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    strSingleHex = "%00"                                        '16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    lngWriteCount = 1                                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||fffd|J|fffd|n
    
    Do                                                          '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||702||143||fffd||fffd|[|fffd|v
        bytSingle = bytSource(lngReadCount)                     '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|Q|fffd||182||fffd||fffd||fffd||fffd||846c||fffd||fffd||fffd|H)
        If ((bytSingle >= &H81) And (bytSingle <= &H9F)) Or _
           ((bytSingle >= &HE0) And (bytSingle <= &HEF)) Then   'Shift-JIS 2 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||18a|m|fffd|F|fffd||fffd||fffd||a0bd||fffd||a347|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
            If lngReadCount = lngLength Then Exit Do            '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||252|B|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||fffd|
            bytSingle = bytSource(lngReadCount)                 '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        ElseIf bytSingle = &H20 Then                            '|fffd||fffd||fffd|p|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|(" ")|fffd||30f||a347|
            Mid(strBuffer, lngWriteCount, 1) = "+"              '"+" |fffd||fffd||fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        ElseIf ((bytSingle >= &H40) And (bytSingle <= &H5A)) Or _
               ((bytSingle >= &H61) And (bytSingle <= &H7A)) Or _
               ((bytSingle >= &H30) And (bytSingle <= &H39)) Or _
               (bytSingle = &H2A) Or _
               (bytSingle = &H2D) Or _
               (bytSingle = &H2E) Or _
               (bytSingle = &H5F) Then                          '|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||a347|
            Mid(strBuffer, lngWriteCount, 1) = Chr$(bytSingle)  '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||15d8e||fffd||fffd||fffd||256||7c2||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(^^;
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        Else                                                    '|fffd||fffd||fffd||311||fffd||fffd||315||fffd||fffd||fffd||fffd||30f||a347|
            If bytSingle <= &HF Then                            'Hex$() |fffd||30c||fffd||fffd||282||fffd| 1 |fffd||fffd||fffd||fffd||fffd||242||202||fffd||a347|
                Mid(strSingleHex, 2, 1) = "0"                   '0 |fffd||fffd||64ea||fffd||255|t|fffd||fffd|
                Mid(strSingleHex, 3, 1) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            Else                                                '0 |fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||202||fffd||fffd||a347|
                Mid(strSingleHex, 2, 2) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            End If
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        End If
    Loop Until lngReadCount = lngLength

    Erase bytSource                                             '|fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    If lngWriteCount > 1 Then                                   '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||255||fffd||fffd||fffd||fffd||42a8f||fffd||fffd||fffd||fffd||fffd||fffd||702||a0bd||fffd||a347|
        URLencode = Left$(strBuffer, lngWriteCount - 1)         '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||317|]|fffd||fffd||fffd||215||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||7c2||fffd|l|fffd||182||fffd||fffd||fffd|
    End If

End Function
Public Function subncdec(ByVal b As String) As Long
    
    Dim R As Long
    R = Asc(UCase(b))
    If R > 64& Then
        subncdec = R - 55&
    Else
        subncdec = CLng(b)
    End If
    
End Function




Sub ASIN|fffd||64fe|()

'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = "tvJkDXrww9CFbTYtGPW+pjt3AW/r8TEL+2ppoK3q"
Dim AWSkey As String
    AWSkey = "AKIAJUUFA4DPS2RE7N6Q"
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Config").Range("B8")

Dim ItemCondition As String
    ItemCondition = "All"
Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'Do'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|********************************************************************************************************
'|fffd||fffd||fffd|i|fffd|P|fffd||282||30f||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^(|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j-----------------------------------------------------
'|fffd||38f||6cd|s|fffd||30e||64fe|--------------
Dim ScanLast As Long
    ScanLast = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
Dim x As Integer
    For z = 7 To ScanLast
        If Sheets("Scan").Cells(z, 1) <> "" And Sheets("Scan").Cells(z, 14) = "" Then
            x = z
            GoTo labelxSkip:
        End If
        If z = ScanLast Then
            Exit Sub
        End If
    Next
labelxSkip:
'-------------------------
Dim ProductID As String
    ProductID = Sheets("Scan").Cells(x, 1)
Dim IDtype As String
    IDtype = Sheets("Scan").Cells(x, 10)
Dim ASIN() As String
    ReDim ASIN(0)
Dim Tittle() As String
    ReDim Tittle(0)
'|fffd||fffd||28d|X|fffd|V----------------------------
'Application.ScreenUpdating = False
'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If

'If Sheets("PriceCheckList").Cells(x, 3) = "" And Sheets("PriceCheckList").Cells(x, 4) = "" Then
    Dim xmldata3 As Object
    Dim Result3 As Object
    
    Dim MyCondition As String
    Dim MySubCondition As String

                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "AWSAccessKeyId=" & AWSkey _
                & "&Action=GetMatchingProductForId" _
                & "&IdList.Id.1=" & ProductID _
                & "&IdType=" & IDtype _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        'Hash = Hmac(sKey, rawTextToSign)
        hash = Hmac(sKey, rawTextToSign)
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
Sheets("Scan").Cells(1, 16) = Url
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result3 = xmldata3.SelectNodes("GetMatchingProductForIdResponse/GetMatchingProductForIdResult/Products/Product")

Dim Binding() As String
    ReDim Binding(0)
Dim IgnoreCount As Long
    IgnoreCount = 0
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            i = 0
Dim ASINcount As Long
Dim ans As String
'Dim SelectMessege As String
Dim m As Long
            Do While Not Result3(i) Is Nothing
                If Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Binding").Text = "|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|" Or Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Binding").Text = "Kindle|fffd||fffd|" Then
                    IgnoreCount = IgnoreCount + 1
                    GoTo NextASIN
                End If
                
                If i = 0 Then
                    ASIN(ASINcount) = Result3(i).SelectSingleNode("Identifiers/MarketplaceASIN/ASIN").Text
                    Tittle(ASINcount) = Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Title").Text
                    Binding(ASINcount) = Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Binding").Text
                Else
                    ReDim Preserve ASIN(ASINcount)
                    ReDim Preserve Tittle(ASINcount)
                    ReDim Preserve Binding(ASINcount)
                    ASIN(ASINcount) = Result3(i).SelectSingleNode("Identifiers/MarketplaceASIN/ASIN").Text
                    Tittle(ASINcount) = Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Title").Text
                    Binding(ASINcount) = Result3(i).SelectSingleNode("AttributeSets/ns2:ItemAttributes/ns2:Binding").Text
                End If
                ASINcount = ASINcount + 1
NextASIN:
                i = i + 1
            Loop
            
        If ASINcount <= 1 Then
            Application.EnableEvents = False
            Sheets("Scan").Cells(x, 14) = ASIN(0)
            Sheets("Scan").Cells(x, 15) = Tittle(0)
            Application.EnableEvents = True
        Else
ReQuestion:
            SelectMessege = x & "|fffd|s|fffd||682||fffd|" & ProductID & vbLf & vbLf
            For m = 0 To ASINcount - 1
                SelectMessege = SelectMessege & m & ". Tittle:" & Tittle(m) & "(" & Binding(m) & ") |fffd||fffd|ASIN:" & ASIN(m) & vbLf & vbLf
            Next
            ans = InputBox(SelectMessege, "|fffd|Y|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd|", "")
            If ans <> "" Then
                If ans > ASINcount - 1 Then
                    MsgBox "|fffd||50d||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||202||302||142||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
                    SelectMessege = x & "|fffd|s|fffd||682||fffd|" & ProductID & vbLf & vbLf
                    GoTo ReQuestion
                End If
                Application.EnableEvents = False
                Sheets("Scan").Cells(x, 14) = ASIN(ans)
                Sheets("Scan").Cells(x, 15) = Tittle(ans)
                Application.EnableEvents = True
            Else
                End
            End If
        End If
    Else
labelEsc:
        Application.EnableEvents = False
        Sheets("Scan").Cells(x, 14) = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|"
        Sheets("Scan").Cells(x, 15) = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|"
        Application.EnableEvents = True
    End If
End Sub


Sub |fffd||fffd||fffd||c2||14e||fffd||fffd||214|z|fffd||fffd|() '###################################################################################################################


'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = "tvJkDXrww9CFbTYtGPW+pjt3AW/r8TEL+2ppoK3q"
Dim AWSkey As String
    AWSkey = "AKIAJUUFA4DPS2RE7N6Q"
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim sellerID As String
    sellerID = Worksheets("config").Range("B8")
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    Action = "GetLowestOfferListingsForASIN"
    'Action = "GetLowestOfferListingsForSKU"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'Do'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|********************************************************************************************************
'|fffd||fffd||fffd|i|fffd|P|fffd||282||30f||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^(|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j-----------------------------------------------------
'|fffd||38f||6cd|s|fffd||30e||64fe|--------------
Dim ScanLast As Long
    ScanLast = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
Dim x As Integer
    For z = 7 To ScanLast
        If Sheets("Scan").Cells(z, 1) <> "" And Sheets("Scan").Cells(z, 13) = "" And Sheets("Scan").Cells(z, 14) <> "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|" Then
            x = z
            GoTo labelxSkip:
        End If
        If z = ScanLast Then
            Exit Sub
        End If
    Next
labelxSkip:
'-------------------------

Dim ASIN As String
    ASIN = Format(Sheets("Scan").Cells(x, 14), "0000000000")
Dim SelfCondition As String
    SelfCondition = Left(Sheets("Scan").Cells(x, 3), 2)
    
Dim SelfSubCondition As String
    SelfSubCondition = Sheets("Scan").Cells(x, 3)
    If SelfCondition = "|fffd||fffd||fffd||fffd|" Then
        SelfSubCondition = Mid(SelfSubCondition, InStr(SelfSubCondition, "-") + 1, Len(SelfSubCondition) - InStr(SelfSubCondition, "-"))
    Else
        SelfSubCondition = "|fffd|V|fffd|i"
    End If

    
Dim Fullfillment As String
    Fullfillment = "Merchant"

    
'|fffd||752||fffd||1c2||74d||fffd||fffd||741|i|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j---------------------------------------------------------------------
Dim AmaNoStockJudge As Long
    AmaNoStockJudge = Sheets("Config").Cells(114, 2)

'|fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd|
Dim PointEffect As String 'ON|fffd||fffd|OFF
    PointEffect = Sheets("Config").Cells(106, 2)


'2|fffd||50e||fffd|Q|fffd||190||752||fffd|
Dim SecondPriceBorder As Long
    SecondPriceBorder = Sheets("Config").Cells(100, 2)
Dim SecondPricePlus As Long
    SecondPricePlus = Sheets("Config").Cells(101, 2)
Dim SecondPriceMulti As Long
    SecondPriceMulti = Sheets("Config").Cells(103, 2)

'|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||148||642||202||9340||fffd||fffd|-------------------------------------------------------------------------------

Dim AbsoluteLowLimit As Long
    AbsoluteLowLimit = 1

Dim BuyPrice As Long
    BuyPrice = Sheets("Scan").Cells(x, 6)
Dim BuyPriceMulti As Long
Dim BuyPricePlus As Long

        BuyPriceMulti = Sheets("Config").Cells(109, 2)
        BuyPricePlus = Sheets("Config").Cells(110, 2)

Dim LowLimitByBuyPrice As Long
    If BuyPrice <> Empty Then
        LowLimitByBuyPrice = Int(BuyPrice * BuyPriceMulti / 100) + BuyPricePlus
    Else
        LowLimitByBuyPrice = Sheets("Config").Cells(111, 2)
    End If
'|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||c2||30d||6c2||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd|[|fffd||fffd|--------------------------------------------------------------------------------------------------
Dim BasicPlus As Long
Dim ConditionRule As String '"|fffd||96||fffd||fffd||fffd||fffd||148||fffd|"|fffd||fffd|"|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd|"
Dim ForFBABorder As Long
Dim ForFBAMinus As Long
Dim ForFBAMulti As Long
Dim ForNewMulti As Long
Dim Only1NewMulti As Long
Dim Only1Price As Long


    BasicPlus = Sheets("Config").Cells(70, 2)
    ConditionRule = Sheets("Config").Cells(71, 2)
    Only1Price = Sheets("Config").Cells(121, 2)
    Only1Price = Application.WorksheetFunction.Max(Only1Price, Int(BuyPrice * Sheets("Config").Cells(118, 2)) + Sheets("Config").Cells(119, 2))
'|fffd||fffd||28d|X|fffd|V----------------------------
'Application.ScreenUpdating = False
'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If
'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************
'If Sheets("PriceCheckList").Cells(x, 3) <> "Used" And Sheets("PriceCheckList").Cells(x, 3) <> "New" Then

'*******************************************************************************************************************
'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------------------------------------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
        'Sheets("Scan").Cells(1, 17) = Url
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url


'**********************************************************************************************************************************************


'MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||109||fffd||fffd|i|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd||fffd|====================================================================================================================================
    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")


'|fffd||64fe||fffd||fffd||fffd||295|\|fffd||fffd||fffd||302||fffd||fffd||7c2||315||3d0||fffd||fffd||933e|---------------

Dim CondiRecord As String
Dim FBARecord As String
Dim ShippingDay As String
Dim ShippingTime As Long
    ShippingTime = 0
Dim Reason As String

'|fffd||fffd||fffd|i|fffd|v|fffd|Z|fffd||302||fffd||fffd||7c2||315||3d0||fffd|-------------------------------------------
Dim SendPrice As Long
Dim NewPrice As Long
Dim NewFullFill As String
Dim PrePrice As Long
Dim PreCondition As String
Dim PreFullFill As String
Dim BasicPrice As Long
Dim BasicCondition As String
Dim BasicFullFill As String
Dim RivalPower As Long
Dim RivalFullFill As String
Dim SelfPower As Long
Dim AbsoluteLowestPrice As Long
Dim PersonsCount As Long
    PersonsCount = 0
    Select Case SelfSubCondition '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Case "|fffd||fffd|"
                        SelfPower = 1
                    Case "|fffd||1c2||fffd|"
                        SelfPower = 2
                    Case "|fffd||fffd||fffd||257||1c2||fffd|"
                        SelfPower = 3
                    Case "|fffd||642||690|V|fffd|i"
                        SelfPower = 4
                    Case Else '|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||190|V|fffd|i|fffd||343|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||d4481|AMWS|fffd||fffd||fffd||fffd|New
                        SelfPower = 5
    End Select
        
'-----------------------------------------------------

Dim Consider As Long

'----------------------------------------------------------------------
If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For i = 0 To 19
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                PersonsCount = PersonsCount + Consider
                
                If i = 0 Then
                    AbsoluteLowestPrice = tmpPrice
                End If
                
                '|fffd|\|fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Select Case SubCondition '|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|\|fffd|L
                    Case "Acceptable"
                        CondiRecord = "|fffd||fffd|"
                    Case "Good"
                        CondiRecord = "|fffd||fffd|"
                    Case "VeryGood"
                        CondiRecord = "|fffd||fffd||fffd|"
                    Case "Mint"
                        CondiRecord = "|fffd||642||690|V"
                    Case "New"
                    
                        CondiRecord = "|fffd|V"
                        If NewPrice = Empty Then
                            NewPrice = tmpPrice
                            NewFullFill = RivalFullFill
                        End If
                    Case Else
                        CondiRecord = "|fffd|s|fffd||fffd|"
                End Select
                

                '-----------------------------------
                If RivalFullFill = "Amazon" Then '|fffd|z|fffd||fffd|
                    FBARecord = "F"
                Else
                    FBARecord = ""
                End If
                '------------------------------------
                Sheets("Scan").Cells(x, 16 + i) = FBARecord & CondiRecord & tmpPrice & "x" & Consider
                
                
                '============================================================
            Else
                GoTo label000
            End If
        Next '|fffd||fffd||fffd||fffd||fffd||702||142||34f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|-----------------------------------------------------------------------------------------------------------
label000:

If PersonsCount = 1 Then '|fffd|P|fffd||18f|o|fffd|i|fffd||202||fffd|------------
    BasicPrice = Only1Price
    GoTo labelOnly1Skip
End If


    Dim IdentifyJudge As Long
        IdentifyJudge = 0
    Dim Price1 As Long '|fffd||302||fffd||fffd||254||fffd||5c2||fffd||60a4||fffd||255||2433||fffd|O|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
    Dim Price2 As Long
    Dim Condition1 As Long
    Dim Condition2 As Long
    Dim PreConsider As Long
    Dim BasicConsider As Long
    Dim ConsiderNumber As Long
        ConsiderNumber = Sheets("Config").Cells(99, 2)
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z------------------------------------------------------------------------------------------------------------------
        PrePrice = 0
        PreCondition = 0
        For i = 0 To 20
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                RivalPoint = ""
                If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                    RivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                End If
                
                Select Case SubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                    Case "Acceptable"
                        RivalPower = 1
                    Case "Good"
                        RivalPower = 2
                    Case "VeryGood"
                        RivalPower = 3
                    Case "Mint"
                        RivalPower = 4
                    Case "New"
                        RivalPower = 5
                        ShippingDay = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                        If Left(ShippingDay, 2) = "14" Then
                            ShippingTime = 14
                        Else
                            ShippingTime = Mid(ShippingDay, 1, InStr(ShippingDay, "-") - 1)
                        End If
                    Case Else
                        RivalPower = 0
                End Select '------------------------------------------------
               

            '------------------------------------------------
            If RivalPower = 5 And ShippingTime >= AmaNoStockJudge Then '|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd||202||75b3||fffd||fffd|
                ShippingTime = 0
                Reason = "Amazon|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd|"
                GoTo labeltobi
            End If
            
                BasicPrice = tmpPrice
                BasicCondition = RivalPower
                BasicFullFill = RivalFullFill
                BasicConsider = Consider
                If PointEffect = "ON" And RivalPoint <> Empty Then
                    BasicPrice = BasicPrice - RivalPoint
                End If
                    
                If ConditionRule = "|fffd||96||fffd||fffd||fffd||fffd||148||fffd|" Then  '|fffd|Q|fffd|l|fffd||242||fffd||fffd||fffd|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|=========================================
                    If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347|------------------
                        If i = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||202||727a||fffd||fffd|2|fffd||82||fffd||fffd||fffd||fffd||194||fffd||5c2||fffd|
                            If BasicCondition > 1 Then
                                Price2 = BasicPrice
                                Condition2 = BasicCondition
                                Price1 = PrePrice
                                Condition1 = PreCondition
                                
                                BasicPrice = PrePrice
                                BasicCondition = PreCondition
                                BasicFullFill = PreFullFill
                                BasicConsider = PreConsider
                            End If
                            GoTo label001
                        Else
                            If BasicCondition > SelfPower Or Consider > ConsiderNumber Then  '|fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||fffd||fffd|
                                PrePrice = BasicPrice
                                PreCondition = BasicCondition
                                PreFullFill = BasicFullFill
                                PreConsider = BasicConsider
                                GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                            End If
                        End If
                    Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30e||fffd|-------------------------------
                            If BasicCondition > 1 And PreCondition > 1 Then
                                GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                            End If
                            If BasicCondition = 1 Then
                                GoTo labeltobi
                            End If
                    End If
                Else '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd||30f||a347||fffd||30e|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe|==============================================================
                    If BasicCondition >= SelfPower And Consider > ConsiderNumber Then
                        PrePrice = BasicPrice
                        PreCondition = BasicCondition
                        PreFullFill = BasicFullFill
                        PreConsider = BasicConsider
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If
                    
                    If BasicCondition < SelfPower Then
                        GoTo labeltobi
                    End If
                    If SelfPower <= BasicCondition And SelfPower <= PreCondition Then '|fffd||fffd||fffd||fffd||fffd||20f||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||51c42||fffd||fffd||fffd||fffd||fffd|i=1|fffd|j
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If
                        
                    If BasicCondition > SelfPower And PrePrice <> Empty Then '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If

                  End If
           Else
             '20|fffd||516||682||fffd||fffd||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|--------------------------------------------------------------
             GoTo label001
           End If
        PrePrice = BasicPrice
        PreCondition = BasicCondition
        PreFullFill = BasicFullFill
        PreConsider = BasicConsider
labeltobi:
        Next
            
'|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||56cc2||fffd||fffd||182||fffd||fffd||fffd|For|fffd||14c82||fffd||fffd||112|P|fffd||18f|o|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Else
    BasicPrice = Only1Price
End If

    
label001:

'2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10f|o|fffd|i|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|===================================================================================================

'========================================================
Dim SypnPrice As Long '|fffd||14f|I|fffd|I|fffd||243|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|


If PreConsider <= ConsiderNumber And PrePrice <> Empty Then
    If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347||fffd||342||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|------------------------------
        If BasicCondition > 1 Then '|fffd|Q|fffd||50e||80aa||fffd||1c2||fffd||fffd||20f||fffd||202||fffd|P|fffd||91|O|fffd||fffd||fffd||fffd||fffd||14f|I|fffd|Q|fffd|l|fffd||fffd|
            BasicPrice = PrePrice
            BasicCondition = PreCondition
            BasicFullFill = PreFullFill
            BasicConsider = PreConsider
        Else '|fffd||fffd||fffd||282|Q|fffd||82||fffd||fffd||182||fffd||fffd||249||82||30f||a347|
            If PreFullFill <> "Amazon" And BasicFullFill <> "Amazon" Then '|fffd||182||fffd||fffd||24e||fffd||fffd||214|z|fffd||fffd||fffd||309||82||142||fffd||fffd||fffd||fffd|
                If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347|
                    If BasicPrice - PrePrice < SecondPricePlus Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                    If BasicPrice - PrePrice < PrePrice * SecondMulti / 100 Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                End If
            Else '|fffd||182||fffd||fffd||249||82||fffd||fffd||fffd||fffd||1d4|z|fffd||fffd||fffd||fffd||fffd||642||202||fffd||a347||fffd|P|fffd||50e||fffd|Q|fffd||fffd|
                If PreConsider < ConsiderNumber Then
                    BasicPrice = PrePrice
                    BasicCondition = PreCondition
                    BasicFullFill = PreFullFill
                    BasicConsider = PreConsider
                Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                End If
            End If
        End If
    Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30f||a347||fffd||315||fffd||fffd||fffd|--------------------------------------------------------

                    If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347||fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||14c||fffd||255||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Pre|fffd||182||fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||317|p
                        If BasicPrice - PrePrice < SecondPricePlus And PrePrice <> SelfPrice Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If BasicPrice - PrePrice < PrePrice * SecondPriceMulti / 100 And (PreConsider <> 1 And PrePrice <> SelfPrice) Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                     End If
    End If
Else
    If PrePrice <> Empty Then
    BasicPrice = PrePrice
    BasicCondition = PreCondition
    BasicFullFill = PreFullFill
    BasicConsider = PreConsider
    Reason = Reason & "|fffd|@|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||202||fffd|"
    End If
End If




Dim TrueBasicPrice As Long
    TrueBasicPrice = BasicPrice

'|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'--------------------------------------------------------------------------------------------------------

labelLastLimit:


    SendPrice = Sheets("Scan").Cells(3, 8)

'-----------------------------------------------------------------------

BasicPrice = BasicPrice - SendPrice + BasicPlus
BasicPrice = Application.WorksheetFunction.Max(AbsoluteLowLimit, BasicPrice)


    
If BasicPrice < LowLimitByBuyPrice Then
    BasicPrice = LowLimitByBuyPrice
    Reason = Reason & " |fffd|d|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|K|fffd|p"
End If
'----------------------

labelOnly1Skip:
'--------------------------------------------------------------
'|fffd||14f|I|fffd||fffd||fffd||282||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|======================================
Sheets("Scan").Cells(x, 12) = TrueBasicPrice
Sheets("Scan").Cells(x, 13) = BasicPrice
'========================================================
labelSkip:

End Sub


Sub |fffd||fffd||fffd||c2||fffd|FBA() '###################################################################################################################


'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = "tvJkDXrww9CFbTYtGPW+pjt3AW/r8TEL+2ppoK3q"
Dim AWSkey As String
    AWSkey = "AKIAJUUFA4DPS2RE7N6Q"
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim sellerID As String
    sellerID = Worksheets("config").Range("B8")
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    Action = "GetLowestOfferListingsForASIN"
    'Action = "GetLowestOfferListingsForSKU"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'Do'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|********************************************************************************************************
'|fffd||fffd||fffd|i|fffd|P|fffd||282||30f||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^(|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j-----------------------------------------------------

'|fffd||38f||6cd|s|fffd||30e||64fe|--------------
Dim ScanLast As Long
    ScanLast = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
Dim x As Integer
    For z = 7 To ScanLast
        If Sheets("Scan").Cells(z, 1) <> "" And Sheets("Scan").Cells(z, 13) = "" And Sheets("Scan").Cells(z, 14) <> "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|" Then
            x = z
            GoTo labelxSkip:
        End If
        If z = ScanLast Then
            Exit Sub
        End If
    Next
labelxSkip:
'-------------------------

Dim ASIN As String
    ASIN = Format(Sheets("Scan").Cells(x, 14), "0000000000")
Dim SelfCondition As String
    SelfCondition = Left(Sheets("Scan").Cells(x, 3), 2)
    
Dim SelfSubCondition As String
    If SelfCondition <> "|fffd|V|fffd|i" Then
        SelfSubCondition = Mid(Sheets("Scan").Cells(x, 3), 4, Len(Sheets("Scan").Cells(x, 3)) - 3)
    End If
    
Dim Fullfillment As String
    Fullfillment = "Amazon"

    
'|fffd||752||fffd||1c2||74d||fffd||fffd||741|i|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j---------------------------------------------------------------------
Dim AmaNoStockJudge As Long
    AmaNoStockJudge = Sheets("Config").Cells(114, 2)

'|fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd|
Dim PointEffect As String 'ON|fffd||fffd|OFF
    PointEffect = Sheets("Config").Cells(106, 2)


'2|fffd||50e||fffd|Q|fffd||190||752||fffd|
Dim SecondPriceBorder As Long
    SecondPriceBorder = Sheets("Config").Cells(100, 2)
Dim SecondPricePlus As Long
    SecondPricePlus = Sheets("Config").Cells(101, 2)
Dim SecondPriceMulti As Long
    SecondPriceMulti = Sheets("Config").Cells(103, 2)

'|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||148||642||202||9340||fffd||fffd|-------------------------------------------------------------------------------

Dim AbsoluteLowLimit As Long
    AbsoluteLowLimit = 1

Dim BuyPrice As Long
    BuyPrice = Sheets("Scan").Cells(x, 6)
Dim BuyPriceMulti As Long
Dim BuyPricePlus As Long

        BuyPriceMulti = Sheets("Config").Cells(109, 2)
        BuyPricePlus = Sheets("Config").Cells(110, 2)

Dim LowLimitByBuyPrice As Long
    If BuyPrice <> Empty Then
        LowLimitByBuyPrice = Int(BuyPrice * BuyPriceMulti / 100) + BuyPricePlus
    Else
        LowLimitByBuyPrice = Sheets("Config").Cells(111, 2)
    End If
'|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||c2||30d||6c2||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd|[|fffd||fffd|--------------------------------------------------------------------------------------------------
Dim BasicPlus As Long
Dim ConditionRule As String '"|fffd||96||fffd||fffd||fffd||fffd||148||fffd|"|fffd||fffd|"|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd|"

Dim ForFBAMinus As Long
Dim ForFBAMulti As Long
Dim Only1Price As Long

    ForFBAMinus = Sheets("Config").Cells(79, 2)
    ForFBAMulti = Sheets("Config").Cells(78, 2) / 100
    
    BasicPlus = Sheets("Config").Cells(76, 2)
    ConditionRule = Sheets("Config").Cells(77, 2)
    Only1Price = Sheets("Config").Cells(121, 2)
    Only1Price = Application.WorksheetFunction.Max(Only1Price, Int(BuyPrice * Sheets("Config").Cells(118, 2)) + Sheets("Config").Cells(119, 2))


'-------------------------------------------------------------

'|fffd||fffd||28d|X|fffd|V----------------------------
'Application.ScreenUpdating = False
'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If

'*******************************************************************************************************************
'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------------------------------------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
        'Sheets("PriceCheckList").Cells(1, 15) = Url
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url

'**********************************************************************************************************************************************


'MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||109||fffd||fffd|i|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd||fffd|====================================================================================================================================
    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")


'|fffd||64fe||fffd||fffd||fffd||295|\|fffd||fffd||fffd||302||fffd||fffd||7c2||315||3d0||fffd||fffd||933e|---------------

Dim CondiRecord As String
Dim FBARecord As String
Dim ShippingDay As String
Dim ShippingTime As Long
    ShippingTime = 0
Dim Reason As String

'|fffd||fffd||fffd|i|fffd|v|fffd|Z|fffd||302||fffd||fffd||7c2||315||3d0||fffd|-------------------------------------------
Dim SendPrice As Long
Dim NewPrice As Long
Dim NewFullFill As String
Dim PrePrice As Long
Dim PreCondition As String
Dim PreFullFill As String
Dim BasicPrice As Long
Dim BasicCondition As String
Dim BasicFullFill As String
Dim RivalPower As Long
Dim RivalFullFill As String
Dim SelfPower As Long
Dim AbsoluteLowestPrice As Long
Dim PersonsCount As Long
    PersonsCount = 0
    Select Case SelfSubCondition '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Case "|fffd||fffd|"
                        SelfPower = 1
                    Case "|fffd||1c2||fffd|"
                        SelfPower = 2
                    Case "|fffd||fffd||fffd||257||1c2||fffd|"
                        SelfPower = 3
                    Case "|fffd||642||690|V|fffd|i"
                        SelfPower = 4
                    Case Else '|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||190|V|fffd|i|fffd||343|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||d4481|AMWS|fffd||fffd||fffd||fffd|New
                        SelfPower = 5
    End Select


'----------------------------------------------------------------------
If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For i = 0 To 19
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                PersonsCount = PersonsCount + Consider
                
                If i = 0 Then
                    AbsoluteLowestPrice = tmpPrice
                End If
                
                '|fffd|\|fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Select Case SubCondition '|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|\|fffd|L
                    Case "Acceptable"
                        CondiRecord = "|fffd||fffd|"
                    Case "Good"
                        CondiRecord = "|fffd||fffd|"
                    Case "VeryGood"
                        CondiRecord = "|fffd||fffd||fffd|"
                    Case "Mint"
                        CondiRecord = "|fffd||642||690|V"
                    Case "New"
                    
                        CondiRecord = "|fffd|V"
                        If NewPrice = Empty Then
                            NewPrice = tmpPrice
                            NewFullFill = RivalFullFill
                        End If
                    Case Else
                        CondiRecord = "|fffd|s|fffd||fffd|"
                End Select
                

                '-----------------------------------
                If RivalFullFill = "Amazon" Then '|fffd|z|fffd||fffd|
                    FBARecord = "F"
                Else
                    FBARecord = ""
                End If
                '------------------------------------
                Sheets("Scan").Cells(x, 16 + i) = FBARecord & CondiRecord & tmpPrice & "x" & Consider
                
                
                '============================================================
            Else
                GoTo label000
            End If
        Next '|fffd||fffd||fffd||fffd||fffd||702||142||34f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|-----------------------------------------------------------------------------------------------------------
label000:

If PersonsCount = 1 Then
    FBABasicPrice = Only1Price
    GoTo labelOnly1Skip
End If



    Dim IdentifyJudge As Long
        IdentifyJudge = 0
    Dim Price1 As Long '|fffd||302||fffd||fffd||254||fffd||5c2||fffd||60a4||fffd||255||2433||fffd|O|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
    Dim Price2 As Long
    Dim Condition1 As Long
    Dim Condition2 As Long
    Dim PreConsider As Long
    Dim BasicConsider As Long
    Dim ConsiderNumber As Long
        ConsiderNumber = Sheets("Config").Cells(99, 2)
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z------------------------------------------------------------------------------------------------------------------
        PrePrice = 0
        PreCondition = 0
        For i = 0 To 20
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                RivalPoint = ""
              
                If RivalFullFill = "Merchant" Or FBABasicEffect = "OFF" Then '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||111|S|fffd|`|fffd|F|fffd|b|fffd|N----------------------------------------------
              
                    If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                        RivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                    End If
                
                    Select Case SubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                        Case "Acceptable"
                            RivalPower = 1
                        Case "Good"
                            RivalPower = 2
                        Case "VeryGood"
                            RivalPower = 3
                        Case "Mint"
                            RivalPower = 4
                        Case "New"
                            RivalPower = 5
                            ShippingDay = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                            If Left(ShippingDay, 2) = "14" Then
                                ShippingTime = 14
                            Else
                                ShippingTime = Mid(ShippingDay, 1, InStr(ShippingDay, "-") - 1)
                            End If
                        Case Else
                            RivalPower = 0
                    End Select '------------------------------------------------
                
                    If RivalPower = 5 And ShippingTime >= AmaNoStockJudge Then '|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd||202||75b3||fffd||fffd|
                        ShippingTime = 0
                        Reason = "Amazon|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd|"
                        GoTo labeltobi
                    End If
            
                    BasicPrice = tmpPrice
                    BasicCondition = RivalPower
                    BasicFullFill = RivalFullFill
                    BasicConsider = Consider
                    If PointEffect = "ON" And RivalPoint <> Empty Then
                        BasicPrice = BasicPrice - RivalPoint
                    End If
                    
                    If ConditionRule = "|fffd||96||fffd||fffd||fffd||fffd||148||fffd|" Then  '|fffd|Q|fffd|l|fffd||242||fffd||fffd||fffd|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|=========================================
                        If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347|------------------
                            If i = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||202||727a||fffd||fffd|2|fffd||82||fffd||fffd||fffd||fffd||194||fffd||5c2||fffd|
                                If BasicCondition > 1 Then
                                    Price2 = BasicPrice
                                    Condition2 = BasicCondition
                                
                                    PrePrice = BasicPrice
                                    PreCondition = BasicCondition
                                    PreFullFill = BasicFullFill
                                    PreConsider = BasicConsider
                                    Price1 = PrePrice
                                    Condition1 = PreCondition
                                End If
                                GoTo label001
                            Else
                                If BasicCondition > SelfPower Or Consider > ConsiderNumber Then  '|fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||fffd||fffd|
                                    PrePrice = BasicPrice
                                    PreCondition = BasicCondition
                                    PreFullFill = BasicFullFill
                                    PreConsider = BasicConsider
                                    GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                                End If
                            End If
                        Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30e||fffd|-------------------------------
                            If BasicCondition > 1 And PreCondition <> "0" And PreCondition > 1 Then
                                GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                            End If
                            If BasicCondition = 1 Then
                                GoTo labeltobi
                            End If
                        End If
                    Else '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd||30f||a347||fffd||30e|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe|==============================================================
                        If BasicCondition >= SelfPower And Consider > ConsiderNumber Then
                            PrePrice = BasicPrice
                            PreCondition = BasicCondition
                            PreFullFill = BasicFullFill
                            PreConsider = BasicConsider
                            GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If
                    
                        If BasicCondition < SelfPower Then
                            GoTo labeltobi
                        End If
                        If SelfPower <= BasicCondition And SelfPower <= PreCondition Then '|fffd||fffd||fffd||fffd||fffd||20f||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||51c42||fffd||fffd||fffd||fffd||fffd|i=1|fffd|j
                            GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If
                        
                        If BasicCondition > SelfPower And PrePrice <> Empty Then '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
                            GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If

                    End If
                Else
                GoTo labeltobi
                End If
            Else
                '20|fffd||516||682||fffd||fffd||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|--------------------------------------------------------------
                GoTo label001
            End If
        
            PrePrice = BasicPrice
            PreCondition = BasicCondition
            PreFullFill = BasicFullFill
            PreConsider = BasicConsider
labeltobi:
        Next
            


    
label001:


'/////FBA|fffd||302||742||fffd|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|/////////////////////////////////////////////////////////////////////////////////////////////////
Dim FBAConsider As Long
'Dim FBABasicPrice As Long
Dim FBAPrePrice As Long
Dim FBABasicConsider As Long
Dim FBAPreConsider As Long
Dim FBAAbsolutedLowestPrice As Long


Dim FBAPreCondition As Long
Dim FBAPreFullFill As String

Dim FBABasicCondition As String
Dim FBABasicFullFill As String
Dim FBARivalPower As Long
Dim FBARivalFullFill As String
Dim FBARivalPoint As Long

Dim FBAPrice1 As Long '|fffd||302||fffd||fffd||254||fffd||5c2||fffd||60a4||fffd||255||2433||fffd|O|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
Dim FBAPrice2 As Long
Dim FBACondition1 As Long
Dim FBACondition2 As Long
Dim FBANumber As Long
    FBANumber = 0
Dim FBAi As Long
    FBAi = 0
        
        IdentifyJudge = 0
        FBAPrePrice = 0
        FBAPreCondition = 0
        For i = 0 To 20
            If Not tmpObj(i) Is Nothing Then
                FBACondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                FBASubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                FBARivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                FBAtmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                FBAConsider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                FBARivalPoint = 0
                
                If FBARivalFullFill = "Amazon" Or FBABasicEffect = "OFF" Then 'FBA|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||111|S|fffd|`|fffd|F|fffd|b|fffd|N----------------------------------------------
                    FBANumber = FBANumber + FBAConsider
                    FBAi = FBAi + 1
                    If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                        FBARivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                    End If
                
                    Select Case FBASubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                        Case "Acceptable"
                            FBARivalPower = 1
                        Case "Good"
                            FBARivalPower = 2
                        Case "VeryGood"
                            FBARivalPower = 3
                        Case "Mint"
                            FBARivalPower = 4
                        Case "New"
                            FBARivalPower = 5
                            ShippingDay = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                            If Left(ShippingDay, 2) = "14" Then
                                ShippingTime = 14
                            Else
                                ShippingTime = Mid(ShippingDay, 1, InStr(ShippingDay, "-") - 1)
                            End If
                        Case Else
                            FBARivalPower = 0
                    End Select '------------------------------------------------
                
                    If FBARivalPower = 5 And ShippingTime >= AmaNoStockJudge Then '|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd||202||75b3||fffd||fffd|
                        ShippingTime = 0
                        FBAReason = "Amazon|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd|"
                        GoTo labeltobi2
                    End If
            
                    FBABasicPrice = FBAtmpPrice
                    FBABasicCondition = FBARivalPower
                    FBABasicFullFill = FBARivalFullFill
                    FBABasicConsider = FBAConsider
                    If PointEffect = "ON" And FBARivalPoint <> Empty Then
                        FBABasicPrice = FBABasicPrice - FBARivalPoint
                    End If
                    
                    If ConditionRule = "|fffd||96||fffd||fffd||fffd||fffd||148||fffd|" Then  '|fffd|Q|fffd|l|fffd||242||fffd||fffd||fffd|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|=========================================
                        If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347|------------------
                            If FBAi = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||202||727a||fffd||fffd|2|fffd||82||fffd||fffd||fffd||fffd||194||fffd||5c2||fffd|
                                If FBABasicCondition > 1 Then
                                    FBAPrice2 = FBABasicPrice
                                    FBACondition2 = FBABasicCondition
                                    FBAPrice1 = FBAPrePrice
                                    FBACondition1 = FBAPreCondition
                                
                                    FBABasicPrice = FBAPrePrice
                                    FBABasicCondition = FBAPreCondition
                                    FBABasicFullFill = FBAPreFullFill
                                    FBABasicConsider = FBAPreConsider
                                End If
                                GoTo label002
                            Else
                                If FBABasicCondition > SelfPower Or FBAConsider > ConsiderNumber Then  '|fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||fffd||fffd|
                                    FBAPrePrice = FBABasicPrice
                                    FBAPreCondition = FBABasicCondition
                                    FBAPreFullFill = FBABasicFullFill
                                    FBAPreConsider = FBABasicConsider
                                    GoTo label002 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                                End If
                            End If
                        Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30e||fffd|-------------------------------
                            If FBABasicCondition > 1 And FBAPreCondition > 1 Or FBAConsider > ConsiderNumber Then
                                GoTo label002 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                            End If
                            If FBABasicCondition = 1 Then
                                GoTo labeltobi2
                            End If
                        End If
                    Else '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd||30f||a347||fffd||30e|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe|==============================================================
                        If FBABasicCondition >= SelfPower And FBAConsider > ConsiderNumber Then
                            GoTo label002 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If
                    
                        If FBABasicCondition < SelfPower Then
                            GoTo labeltobi2
                        End If
                        If SelfPower <= FBABasicCondition And SelfPower <= FBAPreCondition Then '|fffd||fffd||fffd||fffd||fffd||20f||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||51c42||fffd||fffd||fffd||fffd||fffd|i=1|fffd|j
                            GoTo label002 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If
                        
                        If FBABasicCondition > SelfPower And FBAPrePrice <> Empty Then '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
                            GoTo label002 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        End If

                    End If
                Else
                    GoTo labeltobi2
                End If
            Else
                    '20|fffd||516||682||fffd||fffd||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|--------------------------------------------------------------
                    GoTo label002
            End If
            
            FBAPrePrice = FBABasicPrice
            FBAPreCondition = FBABasicCondition
            FBAPreFullFill = FBABasicFullFill
            FBAPreConsider = FBABasicConsider
          
labeltobi2:
        Next
            
'|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||56cc2||fffd||fffd||182||fffd||fffd||fffd|For|fffd||14c82||fffd||fffd||112|P|fffd||18f|o|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Else
    FBABasicPrice = Only1Price
End If

label002:
'FBA|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||30f||fffd||fffd||fffd|---------------------
If BasicPrice = Empty Then
            BasicPrice = FBABasicPrice
            BasicCondition = FBABasicCondition
            BasicFullFill = FBABasicFullFill
            BasicConsider = FBABasicConsider

            PrePrice = BasicPrice
            PreCondition = BasicCondition
            PreFullFill = BasicFullFill
            PreConsider = BasicConsider
End If
'--------------------------------------------------




'///////////////////////////////////////////////////////////////////////////////////////////////////////



'2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10f|o|fffd|i|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|===================================================================================================

'========================================================
Dim SypnPrice As Long '|fffd||14f|I|fffd|I|fffd||243|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|


If PreConsider < ConsiderNumber And PrePrice <> Empty Then
    If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347||fffd||342||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|------------------------------
        If BasicCondition > 1 Then '|fffd|Q|fffd||50e||80aa||fffd||1c2||fffd||fffd||20f||fffd||202||fffd|P|fffd||91|O|fffd||fffd||fffd||fffd||fffd||14f|I|fffd|Q|fffd|l|fffd||fffd|
            BasicPrice = PrePrice
            BasicCondition = PreCondition
            BasicFullFill = PreFullFill
            BasicConsider = PreConsider
        Else '|fffd||fffd||fffd||282|Q|fffd||82||fffd||fffd||182||fffd||fffd||249||82||30f||a347|
            If PreFullFill <> "Amazon" And BasicFullFill <> "Amazon" Then '|fffd||182||fffd||fffd||24e||fffd||fffd||214|z|fffd||fffd||fffd||309||82||142||fffd||fffd||fffd||fffd|
                If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347|
                    If BasicPrice - PrePrice < SecondPricePlus Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                    If BasicPrice - PrePrice < PrePrice * SecondMulti / 100 Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                End If
            Else '|fffd||182||fffd||fffd||249||82||fffd||fffd||fffd||fffd||1d4|z|fffd||fffd||fffd||fffd||fffd||642||202||fffd||a347||fffd|P|fffd||50e||fffd|Q|fffd||fffd|
                If PreConsider < ConsiderNumber Then
                    BasicPrice = PrePrice
                    BasicCondition = PreCondition
                    BasicFullFill = PreFullFill
                    BasicConsider = PreConsider
                Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                End If
            End If
        End If
    Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30f||a347||fffd||315||fffd||fffd||fffd|--------------------------------------------------------

                    If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347||fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||14c||fffd||255||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Pre|fffd||182||fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||317|p
                        If BasicPrice - PrePrice < SecondPricePlus Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If BasicPrice - PrePrice < PrePrice * SecondPriceMulti / 100 Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                     End If
    End If
Else
    If PrePrice <> Empty Then
        BasicPrice = PrePrice
        BasicCondition = PreCondition
        BasicFullFill = PreFullFill
        BasicConsider = PreConsider
        Reason = Reason & "|fffd|@|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||202||fffd|"
    End If
End If



'|fffd||2433||fffd||fffd||309||fffd||fffd|i|fffd||fffd|PrePrice|fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||317|p|fffd||fffd||fffd||fffd|---------------------------------------------------


'-------------------------------------------------------
Dim SelfProtect As Long
    SelfProtect = 0
'|fffd|e|fffd||fffd||3d0||fffd||fffd||933e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim FalseOnlyBorder As Long
Dim Smaller As Long
Dim FalseOnly1 As Long

'-------------------------------------------------------------------------------------------------

'---[20171026|fffd||1c9||fffd| ]|fffd|V|fffd|iFBA|fffd||302||742||30d||6c2||24e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|FBA|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|SKIP|fffd||fffd||fffd||fffd| -----------------------------------------------------------------------------------------------------
If FBABasicPrice = Empty And BasicPrice = Empty Then '|fffd||38f||6c3||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|I|fffd||fffd||fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i
    FBABasicPrice = Only1Price
    FBABasicCondition = SelfPower
    GoTo labelFBAOnly1Fin:
End If

'-------------------------------------------------------------------------------------


labelLastLimit:



'FBA|fffd|p|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||2433|////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Dim FBASypnPrice As Long '|fffd||14f|I|fffd|I|fffd||243|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|

If FBANumber < 2 Or FBABasicEffect = "OFF" Then
        FBABasicPrice = BasicPrice
        FBABasicCondition = BasicCondition
        FBABasicFullFill = BasicFullFill
        FBABasicConsider = BasicConsider

        FBAPrePrice = PrePrice
        FBAPreCondition = PreCondition
        FBAPreFullFill = PreFullFill
        FBAPreConsider = PreConsider
End If

'-------------------------------------------------------------
If FBABasicFullFill = "Amazon" Then '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||142||243|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||2433||fffd||3c2||fffd|----------------
   If FBAPreConsider <> "0" And FBAPreConsider < ConsiderNumber Then
        If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347||fffd||342||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|------------------------------
            If FBABasicCondition > 1 Then '|fffd|Q|fffd||50e||80aa||fffd||1c2||fffd||fffd||20f||fffd||202||fffd|P|fffd||91|O|fffd||fffd||fffd||fffd||fffd||14f|I|fffd|Q|fffd|l|fffd||fffd|
                FBABasicPrice = FBAPrePrice
                FBABasicCondition = FBAPreCondition
                FBABasicFullFill = FBAPreFullFill
                FBABasicConsider = FBAPreConsider
            Else '|fffd||fffd||fffd||282|Q|fffd||82||fffd||fffd||182||fffd||fffd||249||82||30f||a347|
                If FBAPreFullFill <> "Amazon" And FBABasicFullFill <> "Amazon" Then '|fffd||182||fffd||fffd||24e||fffd||fffd||214|z|fffd||fffd||fffd||309||82||142||fffd||fffd||fffd||fffd|
                    If FBAPrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347|
                        If FBABasicPrice - FBAPrePrice < SecondPricePlus Then
                            FBABasicPrice = FBAPrePrice
                            FBABasicCondition = FBAPreCondition
                            FBABasicFullFill = FBAPreFullFill
                            FBABasicConsider = FBAPreConsider
                        Else
                            FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If FBABasicPrice - FBAPrePrice < FBAPrePrice * SecondMulti / 100 Then
                            FBABasicPrice = FBAPrePrice
                            FBABasicCondition = FBAPreCondition
                            FBABasicFullFill = FBAPreFullFill
                            FBABasicConsider = FBAPreConsider
                        Else
                            FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                Else '|fffd||182||fffd||fffd||249||82||fffd||fffd||fffd||fffd||1d4|z|fffd||fffd||fffd||fffd||fffd||642||202||fffd||a347||fffd|P|fffd||50e||fffd|Q|fffd||fffd|
                    If FBAPreConsider < FBAConsiderNumber Then
                        FBABasicPrice = FBAPrePrice
                        FBABasicCondition = FBAPreCondition
                        FBABasicFullFill = FBAPreFullFill
                        FBABasicConsider = FBAPreConsider
                    Else
                        FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                    End If
                End If
            End If
        Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30f||a347||fffd||315||fffd||fffd||fffd|--------------------------------------------------------

                    If FBAPrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347||fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||14c||fffd||255||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Pre|fffd||182||fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||317|p
                        If FBABasicPrice - FBAPrePrice < SecondPricePlus Then
                            FBABasicPrice = FBAPrePrice
                            FBABasicCondition = FBAPreCondition
                            FBABasicFullFill = FBAPreFullFill
                            FBABasicConsider = FBAPreConsider
                        Else
                            FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If FBABasicPrice - FBAPrePrice < FBAPrePrice * SecondPriceMulti / 100 Then
                            FBABasicPrice = FBAPrePrice
                            FBABasicCondition = FBAPreCondition
                            FBABasicFullFill = FBAPreFullFill
                            FBABasicConsider = FBAPreConsider
                        Else
                            FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                     End If
        End If
    Else
        If FBAPreConsider <> "0" And FBAPreConsider > ConsiderNumber Then
            FBABasicPrice = FBAPrePrice
            FBABasicCondition = FBAPreCondition
            FBABasicFullFill = FBAPreFullFill
            FBABasicConsider = FBAPreConsider
            FBAReason = FBAReason & "|fffd|@|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||202||fffd|"
        Else
            FBAReason = FBAReason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
        End If
    End If
End If

    '-------------------------------------------------------
    Dim FBASelfProtect As Long
        FBASelfProtect = 0
    '|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '----------------------------------------------------------------------------------------------------

If FBABasicPrice = 0 Then '----------------------------------------------------------------------------
    If FBAPrePrice <> 0 Then
        FBABasicPrice = FBAPrePrice
        FBABasicFullFill = FBAPreFullFill
        FBABasicCondition = FBAPreCondition
        FBABasicConsider = FBAPreConsider
    Else
        FBABasicPrice = BasicPrice
        FBABasicFullFill = BasicFullFill
        FBABasicCondition = BasicCondition
        FBABasicConsider = BasicConsider
    End If
End If


Dim TrueBasicPrice As Long
    TrueBasicPrice = FBABasicPrice
    
'-------------------------------------------------------------------------------------------------


'|fffd||fffd||fffd||214|z|fffd||fffd||fffd||251||382||fffd||fffd||102||30d||fffd||fffd|z---------------------------------------------------------------
If FBABasicFullFill = "Merchant" Then

        FBABasicPrice = Int(FBABasicPrice * ForFBAMulti) + ForFBAMinus

    FBAReason = FBAReason & " |fffd||fffd||fffd||214|z|fffd||fffd||fffd||251||382||fffd||fffd||102||317|D|fffd||290||fffd||fffd|K|fffd|p"
End If

'------------------------------------------------------------------------------------------------

'-------------------------------------
labelFBAOnly1Fin:
'-------------------------------------


'|fffd|d|fffd||fffd||fffd||a27f||fffd|i|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd||752||fffd|--------------------------------------------------------------------------------


labelLastLimit2:

    SendPrice = Sheets("Scan").Cells(3, 8)

'-----------------------------------------------------------------------
    
If FBABasicPrice < LowLimitByBuyPrice Then
    FBABasicPrice = LowLimitByBuyPrice
    Reason = Reason & " |fffd|d|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|K|fffd|p"
End If
'----------------------


'|fffd|e|fffd||d27a||fffd||fffd||fffd||194||fffd||5c2||fffd|------|fffd||fffd||fffd||fffd||fffd||fffd||fffd||151||fffd||fffd||fffd||fffd||18a||fffd|b|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd|
FBABasicPrice = FBABasicPrice + BasicPlus

FBABasicPrice = Application.WorksheetFunction.Max(AbsoluteLowLimit, FBABasicPrice, BasicPrice)


'----------------------

labelOnly1Skip:

'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

'|fffd||14f|I|fffd||fffd||fffd||282||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|======================================
Sheets("Scan").Cells(x, 12) = TrueBasicPrice
Sheets("Scan").Cells(x, 13) = FBABasicPrice - SelfPrice
'========================================================
labelSkip:

End Sub
Sub |fffd|V|fffd|i|fffd||14e||fffd||fffd||214|z|fffd||fffd|()

'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = "tvJkDXrww9CFbTYtGPW+pjt3AW/r8TEL+2ppoK3q"
Dim AWSkey As String
    AWSkey = "AKIAJUUFA4DPS2RE7N6Q"
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim sellerID As String
    sellerID = Worksheets("config").Range("B8")
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    'Action = "GetCompetitivePricingForASIN"
    Action = "GetLowestOfferListingsForASIN"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'Do'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|********************************************************************************************************
'|fffd||fffd||fffd|i|fffd|P|fffd||282||30f||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^(|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j-----------------------------------------------------
'|fffd||38f||6cd|s|fffd||30e||64fe|--------------
Dim ScanLast As Long
    ScanLast = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
Dim x As Integer
    For z = 7 To ScanLast
        If Sheets("Scan").Cells(z, 1) <> "" And Sheets("Scan").Cells(z, 13) = "" And Sheets("Scan").Cells(z, 14) <> "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|" Then
            x = z
            GoTo labelxSkip:
        End If
        If z = ScanLast Then
            Exit Sub
        End If
    Next
labelxSkip:
'-------------------------

Dim ASIN As String
    ASIN = Format(Sheets("Scan").Cells(x, 14), "0000000000")
Dim SelfCondition As String
    SelfCondition = Left(Sheets("Scan").Cells(x, 3), 2)
    
Dim SelfSubCondition As String
    If SelfCondition <> "|fffd|V|fffd|i" Then
        SelfSubCondition = Mid(Sheets("Scan").Cells(x, 3), 4, Len(Sheets("Scan").Cells(x, 3)) - 3)
    End If
    
Dim Fullfillment As String
    Fullfillment = "Merchant"
    
'|fffd||752||fffd||1c2||74d||fffd||fffd||741|i|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j---------------------------------------------------------------------
Dim AmaNoStockJudge As Long
    AmaNoStockJudge = Sheets("Config").Cells(67, 8)

'|fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd|
Dim PointEffect As String 'ON|fffd||fffd|OFF
    PointEffect = Sheets("Config").Cells(106, 2)

'2|fffd||50e||fffd|Q|fffd||190||752||fffd|
Dim SecondPriceBorder As Long
    SecondPriceBorder = Sheets("Config").Cells(100, 2)
Dim SecondPricePlus As Long
    SecondPricePlus = Sheets("Config").Cells(101, 2)
Dim SecondPriceMulti As Long
    SecondPriceMulti = Sheets("Config").Cells(103, 2)

'|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||148||642||202||9340||fffd||fffd|-------------------------------------------------------------------------------

Dim AbsoluteLowLimit As Long
    AbsoluteLowLimit = 1

Dim BuyPrice As Long
    BuyPrice = Sheets("Scan").Cells(x, 6)
Dim BuyPriceMulti As Long
Dim BuyPricePlus As Long

        BuyPriceMulti = Sheets("Config").Cells(109, 2)
        BuyPricePlus = Sheets("Config").Cells(110, 2)

Dim LowLimitByBuyPrice As Long
    If BuyPrice <> Empty Then
        LowLimitByBuyPrice = Int(BuyPrice * BuyPriceMulti / 100) + BuyPricePlus
    Else
        LowLimitByBuyPrice = Sheets("Config").Cells(111, 2)
    End If
'|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||c2||30d||6c2||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd|[|fffd||fffd|--------------------------------------------------------------------------------------------------
Dim BasicPlus As Long
Dim ConditionRule As String '"|fffd||96||fffd||fffd||fffd||fffd||148||fffd|"|fffd||fffd|"|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd|"

Dim ForOldPlus As Long
    ForOldPlus = Sheets("Config").Cells(85, 2)
Dim ForOldMulti As Long
    ForOldMulti = Sheets("Config").Cells(84, 2) / 100

Dim Only1NewMulti As Long
Dim Only1Price As Long


    BasicPlus = Sheets("Config").Cells(82, 2)
    ConditionRule = Sheets("Config").Cells(83, 2)
    Only1Price = Sheets("Config").Cells(121, 2)
    Only1Price = Application.WorksheetFunction.Max(Only1Price, Int(BuyPrice * Sheets("Config").Cells(118, 2)) + Sheets("Config").Cells(119, 2))



'|fffd||fffd||28d|X|fffd|V----------------------------
'Application.ScreenUpdating = False
'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'*******************************************************************************************************************
'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------------------------------------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
        
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url
'|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|(GetCompetitivePricingForASIN, 10/sec)*********************************************************************
Dim xmldata2 As Object
Dim Result2 As Object
Dim Rank As Object
Dim Cart As Object
Dim Cart2 As String
Dim CartJudge As String

Dim CartPrice As Long

Dim Category As String
Dim Ranking As Long

rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=GetCompetitivePricingForASIN" _
                & "&Itemcondition=New" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
'Sheets("Scan").Cells(1, 17) = Url
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata2 = CreateObject("Microsoft.XMLDOM")
    xmldata2.async = False
    xmldata2.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
'Set Result2 = xmldata2.SelectNodes("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/SalesRankings/SalesRank")
Set Cart = xmldata2.SelectNodes("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/CompetitivePricing/CompetitivePrices")

'Cart2 = xmldata2.SelectSingleNode("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/CompetitivePricing/CompetitivePrices").Text


If Not Cart Is Nothing Then
    If Not Cart(0).SelectSingleNode("CompetitivePrice/CompetitivePriceId") Is Nothing Then
        CartJudge = Cart(0).SelectSingleNode("CompetitivePrice/CompetitivePriceId").Text
    End If
    
    If CartJudge = "1" Then
        CartPrice = Cart(0).SelectSingleNode("CompetitivePrice/Price/LandedPrice/Amount").Text
    End If
End If

If ConditionRule = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i" And CartJudge = "1" Then
    BasicPrice = CartPrice
    TrueBasicPrice = BasicPrice
    Sheets("Scan").Cells(x, 16) = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i" & BasicPrice
    Reason = Reason & " |fffd|V|fffd|i|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd||d0b9|"
    GoTo labelFin
End If


'**********************************************************************************************************************************************


'MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||109||fffd||fffd|i|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd||fffd|====================================================================================================================================
    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")


'|fffd||64fe||fffd||fffd||fffd||295|\|fffd||fffd||fffd||302||fffd||fffd||7c2||315||3d0||fffd||fffd||933e|---------------

Dim CondiRecord As String
Dim FBARecord As String
Dim ShippingDay As String
Dim ShippingTime As Long
    ShippingTime = 0
'Dim Reason As String

'|fffd||fffd||fffd|i|fffd|v|fffd|Z|fffd||302||fffd||fffd||7c2||315||3d0||fffd|-------------------------------------------
Dim SendPrice As Long
Dim UsedPrice As Long
Dim UsedFullFill As String

Dim CartFullFill As String
Dim PrePrice As Long
Dim PreCondition As String
Dim PreFullFill As String
'Dim BasicPrice As Long
Dim BasicCondition As String
Dim BasicFullFill As String
Dim RivalPower As Long
Dim RivalFullFill As String
Dim SelfPower As Long
Dim AbsoluteLowestPrice As Long
Dim PersonsCount As Long
    PersonsCount = 0

    SelfPower = 5

'-----------------------------------------------------

Dim Consider As Long

'----------------------------------------------------------------------
If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For i = 0 To 19
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                PersonsCount = PersonsCount + Consider
                
                If i = 0 Then
                    AbsoluteLowestPrice = tmpPrice
                End If
                
                '|fffd|\|fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Select Case SubCondition '|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|\|fffd|L
                    Case "Acceptable"
                        CondiRecord = "|fffd||fffd|"
                    Case "Good"
                        CondiRecord = "|fffd||fffd|"
                    Case "VeryGood"
                        CondiRecord = "|fffd||fffd||fffd|"
                    Case "Mint"
                        CondiRecord = "|fffd||642||690|V"
                    Case "New"
                    
                        CondiRecord = "|fffd|V"
                        If NewPrice = Empty Then
                            NewPrice = tmpPrice
                            NewFullFill = RivalFullFill
                        End If
                    Case Else
                        CondiRecord = "|fffd|s|fffd||fffd|"
                End Select
                

                '-----------------------------------
                If RivalFullFill = "Amazon" Then '|fffd|z|fffd||fffd|
                    FBARecord = "F"
                Else
                    FBARecord = ""
                End If
                '------------------------------------
                Sheets("Scan").Cells(x, 16 + i) = FBARecord & CondiRecord & tmpPrice & "x" & Consider
                
                
                '============================================================
            Else
                GoTo label000
            End If
        Next '|fffd||fffd||fffd||fffd||fffd||702||142||34f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|-----------------------------------------------------------------------------------------------------------
label000:


If PersonsCount = 1 Then
    BasicPrice = Only1Price
    GoTo labelOnly1Skip
End If

    Dim Price1 As Long '|fffd||302||fffd||fffd||254||fffd||5c2||fffd||60a4||fffd||255||2433||fffd|O|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
    Dim Price2 As Long
    Dim Condition1 As Long
    Dim Condition2 As Long
    Dim PreConsider As Long
    Dim BasicConsider As Long
    Dim ConsiderNumber As Long
        ConsiderNumber = Sheets("Config").Cells(99, 2)
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z------------------------------------------------------------------------------------------------------------------
        PrePrice = 0
        PreCondition = 0
        For i = 0 To 20
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                RivalPoint = ""
                If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                    RivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                End If
                
                Select Case SubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                    Case "Acceptable"
                        RivalPower = 1
                    Case "Good"
                        RivalPower = 2
                    Case "VeryGood"
                        RivalPower = 3
                    Case "Mint"
                        RivalPower = 4
                    Case "New"
                        RivalPower = 5
                        ShippingDay = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                        If Left(ShippingDay, 2) = "14" Then
                            ShippingTime = 14
                        Else
                            ShippingTime = Mid(ShippingDay, 1, InStr(ShippingDay, "-") - 1)
                        End If
                    Case Else
                        RivalPower = 0
                End Select '------------------------------------------------
            
               
            If RivalPower = 5 And ShippingTime >= AmaNoStockJudge Then '|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd||202||75b3||fffd||fffd|
                ShippingTime = 0
                Reason = "Amazon|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd|"
                GoTo labeltobi
            End If
            
                BasicPrice = tmpPrice
                BasicCondition = RivalPower
                BasicFullFill = RivalFullFill
                BasicConsider = Consider
                If PointEffect = "ON" And RivalPoint <> Empty Then
                    BasicPrice = BasicPrice - RivalPoint
                End If
                    
                
                 '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd||30f||a347||fffd||30e|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe|==============================================================
                    If BasicCondition >= SelfPower Then
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If
                    
                    If BasicCondition < SelfPower Then
                        GoTo labeltobi
                    End If
                        
                    If BasicCondition > SelfPower And PrePrice <> Empty Then '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If

                  
           Else
             '20|fffd||516||682||fffd||fffd||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|--------------------------------------------------------------
             GoTo label001
           End If
labeltobi:
        PrePrice = BasicPrice
        PreCondition = BasicCondition
        PreFullFill = BasicFullFill
        PreConsider = BasicConsider

        Next
            
'|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||56cc2||fffd||fffd||182||fffd||fffd||fffd|For|fffd||14c82||fffd||fffd||112|P|fffd||18f|o|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Else
    BasicPrice = Only1Price
End If

    
label001:

'2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10f|o|fffd|i|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|===================================================================================================

'========================================================
Dim SypnPrice As Long '|fffd||14f|I|fffd|I|fffd||243|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|


If PreConsider < ConsiderNumber Then
    If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347||fffd||342||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|------------------------------
        If BasicCondition > 1 Then '|fffd|Q|fffd||50e||80aa||fffd||1c2||fffd||fffd||20f||fffd||202||fffd|P|fffd||91|O|fffd||fffd||fffd||fffd||fffd||14f|I|fffd|Q|fffd|l|fffd||fffd|
            BasicPrice = PrePrice
            BasicCondition = PreCondition
            BasicFullFill = PreFullFill
            BasicConsider = PreConsider
        Else '|fffd||fffd||fffd||282|Q|fffd||82||fffd||fffd||182||fffd||fffd||249||82||30f||a347|
            If PreFullFill <> "Amazon" And BasicFullFill <> "Amazon" Then '|fffd||182||fffd||fffd||24e||fffd||fffd||214|z|fffd||fffd||fffd||309||82||142||fffd||fffd||fffd||fffd|
                If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347|
                    If BasicPrice - PrePrice < SecondPricePlus Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                    If BasicPrice - PrePrice < PrePrice * SecondMulti / 100 Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                End If
            Else '|fffd||182||fffd||fffd||249||82||fffd||fffd||fffd||fffd||1d4|z|fffd||fffd||fffd||fffd||fffd||642||202||fffd||a347||fffd|P|fffd||50e||fffd|Q|fffd||fffd|
                If PreConsider < ConsiderNumber Then
                    BasicPrice = PrePrice
                    BasicCondition = PreCondition
                    BasicFullFill = PreFullFill
                    BasicConsider = PreConsider
                Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                End If
            End If
        End If
    Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30f||a347||fffd||315||fffd||fffd||fffd|--------------------------------------------------------
                If BasicCondition < 5 Then
                    If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347||fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||14c||fffd||255||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Pre|fffd||182||fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||317|p
                        If BasicPrice - PrePrice < SecondPricePlus And PrePrice <> Empty Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If BasicPrice - PrePrice < PrePrice * SecondPriceMulti / 100 And PrePrice <> Empty Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                     End If
                End If
    End If
Else
    BasicPrice = PrePrice
    BasicCondition = PreCondition
    BasicFullFill = PreFullFill
    BasicConsider = PreConsider
    Reason = Reason & "|fffd|@|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||202||fffd|"
End If

'|fffd||2433||fffd||fffd||309||fffd||fffd|i|fffd||fffd|PrePrice|fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||317|p|fffd||fffd||fffd||fffd|---------------------------------------------------


'-------------------------------------------------------
Dim SelfProtect As Long
    SelfProtect = 0
'|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Dim TrueBasicPrice As Long
    TrueBasicPrice = BasicPrice
    
Dim Smaller As Long

'----------------------------------------------------------------------------------------------------

If BasicCondition <> 5 Then '|fffd|Q|fffd||182||fffd||fffd||fffd||fffd||c2||30e||fffd|-----------------------------------------------------------
    BasicPrice = Int(BasicPrice * ForOldMulti) + ForOldPlus
    BasicPrice = Application.WorksheetFunction.Max(BasicPrice, PrePrice)
    Reason = Reason & "|fffd|@|fffd||e3c0||fffd||fffd||fffd||fffd||fffd||c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7d5||2433|"
    'GoTo labelLastLimit
End If '-----------------------------------------------------------------------------------------------


'|fffd|V|fffd|i|fffd||30d||fffd||fffd||fffd||fffd||202||80b7||fffd||fffd||fffd|h|fffd|~|fffd||752||fffd|-------------------
Dim StopAhoHigh As String
    StopAhoHigh = Sheets("Config").Cells(124, 2)
Dim StopAhoMulti As Long
    StopAhoMulti = Sheets("Config").Cells(125, 2)
Dim StopAhoPlus As Long
    StopAhoPlus = Sheets("Config").Cells(126, 2)
Dim StopAhoPrice As Long
    StopAhoPrice = Int(BuyPrice * StopAhoMulti) + StopAhoPlus
    
    If StopAhoHigh = "ON" Then
        BasicPrice = Application.WorksheetFunction.Min(BasicPrice, StopAhoPrice)
    End If
'---------------------------------------------


'|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|-------------------------------------------------------
labelFin:

'--------------------------------------------------------------------------------------------------------

'|fffd|d|fffd||fffd||fffd||a27f||fffd|i|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd||752||fffd|--------------------------------------------------------------------------------


'--------------------------------------------------------------------------------------------------------

labelLastLimit:



    SendPrice = Sheets("Scan").Cells(3, 8)

'-----------------------------------------------------------------------

BasicPrice = BasicPrice - SendPrice + BasicPlus
BasicPrice = Application.WorksheetFunction.Max(AbsoluteLowLimit, BasicPrice)


    
If BasicPrice < LowLimitByBuyPrice Then
    BasicPrice = LowLimitByBuyPrice
    Reason = Reason & " |fffd|d|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|K|fffd|p"
End If
'----------------------

labelOnly1Skip:
'--------------------------------------------------------------
'|fffd||14f|I|fffd||fffd||fffd||282||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|======================================
Sheets("Scan").Cells(x, 12) = TrueBasicPrice
Sheets("Scan").Cells(x, 13) = BasicPrice
'========================================================
labelSkip:

End Sub

Sub |fffd|V|fffd|i|fffd||fffd|FBA()



'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = "tvJkDXrww9CFbTYtGPW+pjt3AW/r8TEL+2ppoK3q"
Dim AWSkey As String
    AWSkey = "AKIAJUUFA4DPS2RE7N6Q"
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim sellerID As String
    sellerID = Worksheets("config").Range("B8")
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    'Action = "GetCompetitivePricingForASIN"
    Action = "GetLowestOfferListingsForASIN"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'Do'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|********************************************************************************************************
'|fffd||fffd||fffd|i|fffd|P|fffd||282||30f||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^(|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j-----------------------------------------------------
'|fffd||38f||6cd|s|fffd||30e||64fe|--------------
Dim ScanLast As Long
    ScanLast = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row
Dim x As Integer
    For z = 7 To ScanLast
        If Sheets("Scan").Cells(z, 1) <> "" And Sheets("Scan").Cells(z, 13) = "" And Sheets("Scan").Cells(z, 14) <> "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|" Then
            x = z
            GoTo labelxSkip:
        End If
        If z = ScanLast Then
            Exit Sub
        End If
    Next
labelxSkip:
'-------------------------

Dim ASIN As String
    ASIN = Format(Sheets("Scan").Cells(x, 14), "0000000000")
    
Dim Fullfillment As String
    Fullfillment = "Amazon"
    
'|fffd||752||fffd||1c2||74d||fffd||fffd||741|i|fffd|S|fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||281|j---------------------------------------------------------------------
Dim AmaNoStockJudge As Long
    AmaNoStockJudge = Sheets("Config").Cells(114, 2)

'|fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd|
Dim PointEffect As String 'ON|fffd||fffd|OFF
    PointEffect = Sheets("Config").Cells(106, 2)

'2|fffd||50e||fffd|Q|fffd||190||752||fffd|
Dim SecondPriceBorder As Long
    SecondPriceBorder = Sheets("Config").Cells(100, 2)
Dim SecondPricePlus As Long
    SecondPricePlus = Sheets("Config").Cells(101, 2)
Dim SecondPriceMulti As Long
    SecondPriceMulti = Sheets("Config").Cells(103, 2)

'|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||148||642||202||9340||fffd||fffd|-------------------------------------------------------------------------------

Dim AbsoluteLowLimit As Long
    AbsoluteLowLimit = 1

Dim BuyPrice As Long
    BuyPrice = Sheets("Scan").Cells(x, 6)
Dim BuyPriceMulti As Long
Dim BuyPricePlus As Long

        BuyPriceMulti = Sheets("Config").Cells(109, 2)
        BuyPricePlus = Sheets("Config").Cells(110, 2)

Dim LowLimitByBuyPrice As Long
    If BuyPrice <> Empty Then
        LowLimitByBuyPrice = Int(BuyPrice * BuyPriceMulti / 100) + BuyPricePlus
    Else
        LowLimitByBuyPrice = Sheets("Config").Cells(111, 2)
    End If
'|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||c2||30d||6c2||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd|[|fffd||fffd|--------------------------------------------------------------------------------------------------
Dim BasicPlus As Long
Dim ConditionRule As String '"|fffd||96||fffd||fffd||fffd||fffd||148||fffd|"|fffd||fffd|"|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd|"

Dim ForOldPlus As Long
    ForOldPlus = Sheets("Config").Cells(94, 2)
Dim ForOldMulti As Long
    ForOldMulti = Sheets("Config").Cells(93, 2) / 100

Dim Only1NewMulti As Long
Dim Only1Price As Long


    BasicPlus = Sheets("Config").Cells(89, 2)
    ConditionRule = Sheets("Config").Cells(90, 2)
    Only1Price = Sheets("Config").Cells(121, 2)
    Only1Price = Application.WorksheetFunction.Max(Only1Price, Int(BuyPrice * Sheets("Config").Cells(118, 2)) + Sheets("Config").Cells(119, 2))



'|fffd||fffd||28d|X|fffd|V----------------------------
'Application.ScreenUpdating = False
'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If

'*******************************************************************************************************************
'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------------------------------------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign

    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url
'|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|(GetCompetitivePricingForASIN, 10/sec)*********************************************************************
Dim xmldata2 As Object
Dim Result2 As Object
Dim Rank As Object
Dim Cart As Object
Dim Cart2 As String
Dim CartJudge As String

Dim CartPrice As Long

Dim Category As String
Dim Ranking As Long

rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=GetCompetitivePricingForASIN" _
                & "&Itemcondition=New" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign

Sheets("Scan").Cells(1, 16) = Url
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata2 = CreateObject("Microsoft.XMLDOM")
    xmldata2.async = False
    xmldata2.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
Set Result2 = xmldata2.SelectNodes("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/SalesRankings/SalesRank")
Set Cart = xmldata2.SelectNodes("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/CompetitivePricing/CompetitivePrices")

'Cart2 = xmldata2.SelectSingleNode("GetCompetitivePricingForASINResponse/GetCompetitivePricingForASINResult/Product/CompetitivePricing/CompetitivePrices").Text


If Not Cart Is Nothing Then
    If Not Cart(0).SelectSingleNode("CompetitivePrice/CompetitivePriceId") Is Nothing Then
        CartJudge = Cart(0).SelectSingleNode("CompetitivePrice/CompetitivePriceId").Text
    End If
    
    If CartJudge = "1" Then
        CartPrice = Cart(0).SelectSingleNode("CompetitivePrice/Price/LandedPrice/Amount").Text
    End If
End If

If ConditionRule = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i" And CartJudge = "1" Then
    BasicPrice = CartPrice
    TrueBasicPrice = BasicPrice
    Sheets("Scan").Cells(x, 16) = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i" & BasicPrice
    Reason = Reason & " |fffd|V|fffd|i|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd||d0b9|"
    GoTo labelFin
End If


'**********************************************************************************************************************************************


'MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||109||fffd||fffd|i|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd||fffd|====================================================================================================================================
    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")


'|fffd||64fe||fffd||fffd||fffd||295|\|fffd||fffd||fffd||302||fffd||fffd||7c2||315||3d0||fffd||fffd||933e|---------------

Dim CondiRecord As String
Dim FBARecord As String
Dim ShippingDay As String
Dim ShippingTime As Long
    ShippingTime = 0


'|fffd||fffd||fffd|i|fffd|v|fffd|Z|fffd||302||fffd||fffd||7c2||315||3d0||fffd|-------------------------------------------
Dim SendPrice As Long
Dim UsedPrice As Long
Dim UsedFullFill As String

Dim CartFullFill As String
Dim PrePrice As Long
Dim PreCondition As String
Dim PreFullFill As String

Dim BasicCondition As String
Dim BasicFullFill As String
Dim RivalPower As Long
Dim RivalFullFill As String
Dim SelfPower As Long
Dim AbsoluteLowestPrice As Long
Dim PersonsCount As Long
    PersonsCount = 0
                        SelfPower = 5

'-----------------------------------------------------

Dim Consider As Long

'----------------------------------------------------------------------
If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For i = 0 To 19
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                PersonsCount = PersonsCount + Consider
                
                If i = 0 Then
                    AbsoluteLowestPrice = tmpPrice
                End If
                
                '|fffd|\|fffd||fffd||fffd||315||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Select Case SubCondition '|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|\|fffd|L
                    Case "Acceptable"
                        CondiRecord = "|fffd||fffd|"
                    Case "Good"
                        CondiRecord = "|fffd||fffd|"
                    Case "VeryGood"
                        CondiRecord = "|fffd||fffd||fffd|"
                    Case "Mint"
                        CondiRecord = "|fffd||642||690|V"
                    Case "New"
                    
                        CondiRecord = "|fffd|V"
                        If NewPrice = Empty Then
                            NewPrice = tmpPrice
                            NewFullFill = RivalFullFill
                        End If
                    Case Else
                        CondiRecord = "|fffd|s|fffd||fffd|"
                End Select
                

                '-----------------------------------
                If RivalFullFill = "Amazon" Then '|fffd|z|fffd||fffd|
                    FBARecord = "F"
                Else
                    FBARecord = ""
                End If
                '------------------------------------
                Sheets("Scan").Cells(x, 16 + i) = FBARecord & CondiRecord & tmpPrice & "x" & Consider
                
                
                '============================================================
            Else
                GoTo label000
            End If
        Next '|fffd||fffd||fffd||fffd||fffd||702||142||34f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|-----------------------------------------------------------------------------------------------------------
label000:

If PersonsCount = 1 Then
    BasicPrice = Only1Price
    GoTo labelOnly1Skip
End If

    Dim Price1 As Long '|fffd||302||fffd||fffd||254||fffd||5c2||fffd||60a4||fffd||255||2433||fffd|O|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd|
    Dim Price2 As Long
    Dim Condition1 As Long
    Dim Condition2 As Long
    Dim PreConsider As Long
    Dim BasicConsider As Long
    Dim ConsiderNumber As Long
        ConsiderNumber = Sheets("Config").Cells(99, 2)
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z------------------------------------------------------------------------------------------------------------------
        PrePrice = 0
        PreCondition = 0
        For i = 0 To 20
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                RivalPoint = ""
                If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                    RivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                End If
                
                Select Case SubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                    Case "Acceptable"
                        RivalPower = 1
                    Case "Good"
                        RivalPower = 2
                    Case "VeryGood"
                        RivalPower = 3
                    Case "Mint"
                        RivalPower = 4
                    Case "New"
                        RivalPower = 5
                        ShippingDay = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                        If Left(ShippingDay, 2) = "14" Then
                            ShippingTime = 14
                        Else
                            ShippingTime = Mid(ShippingDay, 1, InStr(ShippingDay, "-") - 1)
                        End If
                    Case Else
                        RivalPower = 0
                End Select '------------------------------------------------
            
               
            If RivalPower = 5 And ShippingTime >= AmaNoStockJudge Then '|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd||202||75b3||fffd||fffd|
                ShippingTime = 0
                Reason = "Amazon|fffd|V|fffd|i|fffd||fffd||fffd||74c||250||602||a53b||fffd||fffd|"
                GoTo labeltobi
            End If
            
                BasicPrice = tmpPrice
                BasicCondition = RivalPower
                BasicFullFill = RivalFullFill
                BasicConsider = Consider
                If PointEffect = "ON" And RivalPoint <> Empty Then
                    BasicPrice = BasicPrice - RivalPoint
                End If
                    
                
                 '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||282||fffd||30f||a347||fffd||30e|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe|==============================================================
                    If BasicCondition >= SelfPower Then
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If
                    
                    If BasicCondition < SelfPower Then
                        GoTo labeltobi
                    End If
                        
                    If BasicCondition > SelfPower And PrePrice <> Empty Then '|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||82ed||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
                        GoTo label001 '|fffd|Q|fffd|l2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    End If

                  
           Else
             '20|fffd||516||682||fffd||fffd||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||202||fffd||fffd||fffd||fffd||73c8||fffd||fffd||fffd||14c82||fffd||fffd||fffd|--------------------------------------------------------------
             GoTo label001
           End If
labeltobi:
        PrePrice = BasicPrice
        PreCondition = BasicCondition
        PreFullFill = BasicFullFill
        PreConsider = BasicConsider

        Next
            
'|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||56cc2||fffd||fffd||182||fffd||fffd||fffd|For|fffd||14c82||fffd||fffd||112|P|fffd||18f|o|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Else
    BasicPrice = Only1Price
End If

    
label001:


    


'2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10f|o|fffd|i|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|===================================================================================================


'========================================================
Dim SypnPrice As Long '|fffd||14f|I|fffd|I|fffd||243|R|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|


If PreConsider < ConsiderNumber Then
    If SelfPower = 1 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||30f||a347||fffd||342||1c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|------------------------------
        If BasicCondition > 1 Then '|fffd|Q|fffd||50e||80aa||fffd||1c2||fffd||fffd||20f||fffd||202||fffd|P|fffd||91|O|fffd||fffd||fffd||fffd||fffd||14f|I|fffd|Q|fffd|l|fffd||fffd|
            BasicPrice = PrePrice
            BasicCondition = PreCondition
            BasicFullFill = PreFullFill
            BasicConsider = PreConsider
        Else '|fffd||fffd||fffd||282|Q|fffd||82||fffd||fffd||182||fffd||fffd||249||82||30f||a347|
            If PreFullFill <> "Amazon" And BasicFullFill <> "Amazon" Then '|fffd||182||fffd||fffd||24e||fffd||fffd||214|z|fffd||fffd||fffd||309||82||142||fffd||fffd||fffd||fffd|
                If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347|
                    If BasicPrice - PrePrice < SecondPricePlus Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                    If BasicPrice - PrePrice < PrePrice * SecondMulti / 100 Then
                        BasicPrice = PrePrice
                        BasicCondition = PreCondition
                        BasicFullFill = PreFullFill
                        BasicConsider = PreConsider
                    Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                    End If
                End If
            Else '|fffd||182||fffd||fffd||249||82||fffd||fffd||fffd||fffd||1d4|z|fffd||fffd||fffd||fffd||fffd||642||202||fffd||a347||fffd|P|fffd||50e||fffd|Q|fffd||fffd|
                If PreConsider < ConsiderNumber Then
                    BasicPrice = PrePrice
                    BasicCondition = PreCondition
                    BasicFullFill = PreFullFill
                    BasicConsider = PreConsider
                Else
                        If SecondAllow <> "OFF" Then
                            Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                        End If
                End If
            End If
        End If
    Else '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||20f||fffd||30f||a347||fffd||315||fffd||fffd||fffd|--------------------------------------------------------
                If BasicCondition < 5 Then
                    If PrePrice < SecondPriceBorder Then '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||442||30f||a347||fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10d||14c||fffd||255||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Pre|fffd||182||fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||317|p
                        If BasicPrice - PrePrice < SecondPricePlus And PrePrice <> Empty Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                    Else '|fffd|w|fffd||827f||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347|
                        If BasicPrice - PrePrice < PrePrice * SecondPriceMulti / 100 And PrePrice <> Empty Then
                            BasicPrice = PrePrice
                            BasicCondition = PreCondition
                            BasicFullFill = PreFullFill
                            BasicConsider = PreConsider
                        Else
                            If SecondAllow <> "OFF" Then
                                Reason = Reason & " 2|fffd||50e||fffd|Q|fffd||fffd|"
                            End If
                        End If
                     End If
                End If
    End If
Else
    BasicPrice = PrePrice
    BasicCondition = PreCondition
    BasicFullFill = PreFullFill
    BasicConsider = PreConsider
    Reason = Reason & "|fffd|@|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||202||fffd|"
End If


'|fffd||2433||fffd||fffd||309||fffd||fffd|i|fffd||fffd|PrePrice|fffd||fffd||fffd||5c2||10d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||317|p|fffd||fffd||fffd||fffd|---------------------------------------------------


'-------------------------------------------------------
Dim SelfProtect As Long
    SelfProtect = 0
'|fffd|e|fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||2433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TrueBasicPrice = BasicPrice
'|fffd|V|fffd|i|fffd||148||fffd||fffd||194||fffd|r----------------------------------------------
If NewPrice <> Empty Then
    If BasicPrice < NewPrice Then
        BasicPrice = NewPrice
        BasicFullFill = NewFullFill
    End If
End If
'--------------------------------------------------------------

'----------------------------------------------------------------------------------------------------

If BasicCondition <> 5 Then '|fffd|Q|fffd||182||fffd||fffd||fffd||fffd||c2||30e||fffd|-----------------------------------------------------------
    BasicPrice = Int(BasicPrice * ForOldMulti) + ForOldPlus
    BasicPrice = Application.WorksheetFunction.Max(BasicPrice, PrePrice)
    Reason = Reason & "|fffd|@|fffd||e3c0||fffd||fffd||fffd||fffd||fffd||c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7d5||2433|"
    'GoTo labelLastLimit
End If '-----------------------------------------------------------------------------------------------

Dim ForFBAPlus As Long
    ForFBAPlus = Sheets("Config").Cells(92, 2)
Dim ForFBAMulti As Long
    ForFBAMulti = Sheets("Config").Cells(91, 2) / 100
    
If BasicFullFill = "Merchant" Then '|fffd||e3c0||fffd||fffd||fffd||fffd||fffd||214|z|fffd||fffd||fffd||202||fffd|-------------------------------------------------------
        BasicPrice = Int(BasicPrice * ForFBAMulti) + ForFBAPlus
    Reason = Reason & " |fffd||e3c0||fffd||fffd||fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7d5||2433|"
End If '------------------------------------------------------------------------------------------------


'|fffd|V|fffd|i|fffd||30d||fffd||fffd||fffd||fffd||202||80b7||fffd||fffd||fffd|h|fffd|~|fffd||752||fffd|-------------------
Dim StopAhoHigh As String
    StopAhoHigh = Sheets("Config").Cells(124, 2)
Dim StopAhoMulti As Long
    StopAhoMulti = Sheets("Config").Cells(125, 2)
Dim StopAhoPlus As Long
    StopAhoPlus = Sheets("Config").Cells(126, 2)
Dim StopAhoPrice As Long
    StopAhoPrice = Int(BuyPrice * StopAhoMulti) + StopAhoPlus
    
    If StopAhoHigh = "ON" Then
        BasicPrice = Application.WorksheetFunction.Min(BasicPrice, StopAhoPrice)
    End If
'---------------------------------------------

'|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347|-------------------------------------------------------
labelFin:

'--------------------------------------------------------------------------------------------------------


labelLastLimit:


    SendPrice = Sheets("Scan").Cells(3, 8)

'-----------------------------------------------------------------------

BasicPrice = BasicPrice + BasicPlus
BasicPrice = Application.WorksheetFunction.Max(AbsoluteLowLimit, BasicPrice)




    
If BasicPrice < LowLimitByBuyPrice Then
    BasicPrice = LowLimitByBuyPrice
    Reason = Reason & " |fffd|d|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd|K|fffd|p"
End If
'----------------------

labelOnly1Skip:
'--------------------------------------------------------------
'|fffd||14f|I|fffd||fffd||fffd||282||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|======================================
Sheets("Scan").Cells(x, 12) = TrueBasicPrice
Sheets("Scan").Cells(x, 13) = BasicPrice
'========================================================
labelSkip:


End Sub

Attribute VB_Name = "Module17"
Sub IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|()

Dim AWS As String
    AWS = Sheets("Config").Cells(7, 2)
Dim OrderID As String
    OrderID = Sheets("Config").Cells(9, 2)

Dim AuthAWS As String

'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

httpReq.Open "GET", "http://kakakaka.info/auth/license/sedori-tool/" & OrderID & ".html", True, "kakakaka", "password"
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop

Dim htmlDoc As Variant
htmlDoc = httpReq.responseText

AuthAWS = Mid(htmlDoc, InStr(htmlDoc, "<div class=""AWS"">") + Len("<div class=""AWS"">"), InStr(htmlDoc, "<div class=""Mail"">") - InStr(htmlDoc, "<div class=""AWS"">") - Len("<div class=""AWS"">") - 7)


    If AuthAWS = "" Then
        MsgBox "|fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||948d||fffd||fffd||fffd||50d||fffd||fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                & "|fffd|c|fffd|[|fffd||fffd||fffd||303|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        End
    End If

    If AuthAWS = "Undecided" Then
        Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
    Else
        If AWS = AuthAWS Then
            Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
        Else
            If Len(AuthAWS) = 20 Then
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd|AWS|fffd|L|fffd|[|fffd||142||314|F|fffd||602||302||702||701|i|fffd||c2||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd|j|fffd||302||60a4||fffd||202||302||141|A" & vbCrLf _
                        & "|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd||113|x|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd|c|fffd|[|fffd||fffd||fffd|_|fffd||4e782||301|yPayPal|fffd||fffd||fffd||fffd|ID|fffd|z|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd|y|fffd||fffd||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|c|fffd|[|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||60a4||fffd||242||202||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||242||82||fffd||fffd||115|s|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            Else
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||311|g|fffd||74d||fffd||fffd||d0b9||fffd||fffd||fffd||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||508||10a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            End If
            End
        End If
    End If

Set htmlDoc = Nothing
Set httpReq = Nothing
'-----------------------------

End Sub

Attribute VB_Name = "Module18"

'// |fffd|w|fffd||fffd|URL|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Declare Function URLDownloadToFile _
    Lib "urlmon" Alias "URLDownloadToFileA" _
    (ByVal pCaller As Long, _
    ByVal szURL As String, _
    ByVal szFileName As String, _
    ByVal dwReserved As Long, _
    ByVal lpfnCB As Long) As Long
 
'// |fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd|N|fffd||fffd||fffd|A
Private Declare Function DeleteUrlCacheEntry _
    Lib "wininet" Alias "DeleteUrlCacheEntryA" _
    (ByVal lpszUrlName As String) As Long
 
'// |fffd|X|fffd||fffd||fffd|[|fffd|v
Private Declare Sub Sleep _
    Lib "kernel32" (ByVal dwMilliseconds As Long)


Option Explicit
Const FileNameSheet = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|"
Const FileNameCell = "A1"
Const HashStoreSheet = "|fffd|T|fffd||fffd||fffd|l"
Const HashStoreColumn = "B"

Dim Crc32Table&(255)




Function TsvSend(strFileName As String)
'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = Worksheets("Debug").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug").Range("B3")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Config").Range("B8")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************



'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'************************
'|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD5|fffd||64fe|

    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path

    
Dim objMD5 As New MD5 'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
    objMD5.FilePath = strFileName  'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
Dim myMD5 As String
    myMD5 = objMD5.FileHash  'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|

'Base64|fffd||583|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|iMD5|fffd|w|fffd|b|fffd|_|fffd||30f||a347||fffd||fffd|URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v|fffd|j
Dim myMD5_base64 As String
    myMD5_base64 = HexToBase64(myMD5)
    'myMD5_base64 = URLencode(myMD5_base64)|fffd|w|fffd|b|fffd|_|fffd||242||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v
        
'************************
'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=SubmitFeed" _
  & "&FeedType=_POST_FLAT_FILE_LISTINGS_DATA_" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug").Cells(1, 3) = "ON" Then
        Sheets("Debug").Cells(1, 2) = Url
    End If

'*******************************************


    '-------------------------------------------
    '|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||253||fffd||fffd||fffd||fffd|
    Dim objHTTP
    Dim Stream

    ' XMLHTTP|fffd||fffd||fffd||c42c|
    Set objHTTP = CreateObject("MSXML2.XMLHTTP")
    ' Stream |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30d||c42c|
    Set Stream = CreateObject("ADODB.Stream")
    
    ' Stream|fffd||303|I|fffd|[|fffd|v|fffd||fffd|
    Stream.Open
    Stream.Type = 1 ' adTypeBinary
    
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    Stream.LoadFromFile = strFileName
    
    '-------------------------------------------
    '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
    Dim msg1 As String
    
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
    Call objHTTP.Open("POST", Url, False)
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("Content-MD5", myMD5_base64) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|K|fffd|v|fffd||202||fffd|
    Call objHTTP.setRequestHeader("Content-Type", "text/tab-separated-values; charset=Shift_JIS")
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd|(I)|fffd||115d0|M
    Call objHTTP.send(Stream.Read(Stream.Size))
    ' Stream|fffd||fffd||82||fffd||fffd||fffd|
    Stream.Close
    
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug").Cells(1, 3) = "ON" Then
        Sheets("Debug").Cells(2, 2) = objHTTP.responseText
    End If
    
    '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
    Dim xmldata As Object
    Dim Result As Object
    Dim SubmitId As String
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.LoadXML (objHTTP.responseText)
    
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("SubmitFeedResponse/SubmitFeedResult/FeedSubmissionInfo")
    Dim ReportRequestId As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("FeedProcessingStatus").Text = "_SUBMITTED_" Then
            TsvSend = Result(0).SelectSingleNode("FeedSubmissionId").Text
        Else
            TsvSend = Result(0).SelectSingleNode("FeedProcessingStatus").Text
        End If
    End If

    '|fffd||fffd||fffd|MOK|fffd||202||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||243|o|fffd|b|fffd|`ID|fffd||fffd||fffd||82||fffd||fffd||10d||3c3|t|fffd|H|fffd||fffd||fffd|_|fffd||588||693||fffd|
    '|fffd|G|fffd||fffd||fffd|[|fffd||30f||a347||fffd|G|fffd||fffd||fffd|[|fffd|\|fffd|L|fffd||183|o|fffd|b|fffd|`ID
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|


'*******************************************


End Function


Sub |fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|M()
'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = Worksheets("Debug").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug").Range("B3")
Dim strFileName As String
Dim ReportVal As String
    ReportVal = Worksheets("Debug").Range("B6")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Config").Range("B8")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'|fffd|K|fffd|v|fffd||203||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24c|J|fffd||fffd||502||fffd||fffd||143||fffd||fffd|N|fffd|G|fffd|X|fffd|g********************************************************************************************************


'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=RequestReport" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportType=" & ReportVal _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Worksheets("Debug").Cells(1, 3) = "ON" Then
    Sheets("Debug").Cells(1, 2) = Url
End If

'*******************************************

    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path
    '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
    Dim msg1 As String
    Dim objHTTP

    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd|"
    
    ' XMLHTTP|fffd||fffd||fffd||c42c|
    Set objHTTP = CreateObject("MSXML2.XMLHTTP")
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
    Call objHTTP.Open("POST", Url, False)
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.send
    
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd||fffd||fffd|"
    
    '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
    msg1 = objHTTP.responseText
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    Sheets("Scan").Cells(1, 17) = objHTTP.responseText

'************************

    Dim xmldata As Object
    Dim Result As Object
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.LoadXML (objHTTP.responseText)
    
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("RequestReportResponse/RequestReportResult/ReportRequestInfo")
    Dim ReportRequestId As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_SUBMITTED_" Then
            ReportRequestId = Result(0).SelectSingleNode("ReportRequestId").Text
            Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||d7742||fffd||fffd||fffd||702||fffd||fffd||fffd|"
        Else
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
        End If
    End If

'|fffd||fffd||fffd||fffd||fffd||702||150||fffd||243||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd||102||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd||fffd|z|fffd||fffd||241|j
    
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd|w|fffd||fffd||150||fffd||fffd||fffd||fffd|m|fffd|F|fffd|i|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|j***********************************************************************
'|fffd|K|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd|B

    Dim ReportProcessingStatus As String
    '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
ReCheck:
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||502||fffd|Amazon|fffd||256||20a2||fffd||fffd||fffd||d0b9||fffd||702||fffd|"
    ReportProcessingStatus = GetReportStatus(ReportRequestId)
    '==========================================================
    Dim tm As Long
    Dim FileName As String
        FileName = Sheets("Config").Cells(3, 2)
        
        Select Case ReportVal
            Case "_GET_MERCHANT_LISTINGS_DATA_"
                FileName = FileName & "\SypnSyosaiReport.txt"
            Case "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_"
                FileName = FileName & "\SypnReport.txt"
            Case "_GET_AFN_INVENTORY_DATA_"
                FileName = FileName & "\FBAReport.txt"
        End Select
    
    If IsNumeric(ReportProcessingStatus) = True Then
        '|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38e||c2bce||fffd||fffd||fffd|
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||14e||fffd||835e||fffd||742||702||fffd|"
        Dim GeneratedReportId As String
            GeneratedReportId = ReportProcessingStatus
            
            '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
            Call GetReport(GeneratedReportId, ReportVal, FileName)
            '==========================================================
    Else
        '|fffd|w|fffd||839e||fffd||511||48b|@|fffd||fffd||fffd||113|x|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd|
        For tm = 1 To 60
            DoEvents
            Sleep 1000
            Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||151||48b|@|fffd|@|fffd||103|`|fffd|F|fffd|b|fffd|N|fffd||702||14e|c|fffd||fffd|" & 60 - tm & "|fffd|b"
        Next
        GoTo ReCheck
    End If


End Sub

Function GetReportStatus(ReportRequestId As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||7436||fffd||fffd||fffd||fffd||502||fffd||502||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = Worksheets("Debug").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug").Range("B3")
Dim strFileName As String
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Config").Range("B8")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReportRequestList" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportRequestIdList.Id.1=" & ReportRequestId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Scan").Cells(1, 20) <> "" Then
    Sheets("Scan").Cells(1, 16) = Url
End If

    Dim xmldata As Object
    Dim Result As Object
    
    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path
    
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url

'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("GetReportRequestListResponse/GetReportRequestListResult/ReportRequestInfo")
    Dim ReportProcessingStatus As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_DONE_" Then
            ReportProcessingStatus = Result(0).SelectSingleNode("GeneratedReportId").Text
        Else
            ReportProcessingStatus = Result(0).SelectSingleNode("ReportProcessingStatus").Text
        End If
    End If
    
    GetReportStatus = ReportProcessingStatus
    
End Function

Function GetReport(GeneratedReportId As String, ReprotVal As String, FileName As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Config").Range("B7")
Dim sKey As String
    sKey = Worksheets("Debug").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug").Range("B3")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Config").Range("B8")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReport" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportId=" & GeneratedReportId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Scan").Cells(1, 20) <> "" Then
    Sheets("Scan").Cells(1, 16) = Url
End If

  Call TextFileDownload(Url, FileName)
    
End Function
Function TextFileDownload(Url As String, SaveName As String)

'Dim xmlHttp
    'Set xmlHttp = CreateObject("Msxml2.XMLHTTP")
    
Dim xmlHttp As XMLHTTP60
    Set xmlHttp = New XMLHTTP60

    xmlHttp.Open "GET", Url, False
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j"
   xmlHttp.send

    Do While xmlHttp.readyState < 4
        DoEvents
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||313||1c2||74d||fffd||fffd||751||482||fffd||fffd||142||fffd|"
        Sleep 100
        Application.StatusBar = ""
    Loop
    
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||313||1c2||74d||fffd||fffd||74a||fffd||fffd||fffd|"
    'xmlHttp.send
    
    
    Dim html As String

    html = StrConv(xmlHttp.responseBody, vbUnicode)
    Set xmlHttp = Nothing

    Dim intFF As Integer

    intFF = FreeFile

    Open SaveName For Output As #1

    Print #1, html

    Close #1
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|"
    
End Function




Public Function HexToBase64(ByVal strHex As String) As String
     
    ' Function to convert a hex string into a base64 encoded string.
    Dim lngValue    As Long
    Dim lngTemp     As Long
    Dim lngChar     As Long
    Dim intLen      As Integer
    Dim k           As Integer
    Dim j           As Integer
    Dim strWord     As String
    Dim str64       As String
    Dim intTerm     As Integer
    
    Const B64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
     
    intLen = Len(strHex)
     
    ' Pad with zeros to multiple of 3 bytes.
    intTerm = intLen Mod 6
    If (intTerm = 4) Then
        strHex = strHex & "00"
        intLen = intLen + 2
    End If
    If (intTerm = 2) Then
        strHex = strHex & "0000"
        intLen = intLen + 4
    End If
     
    ' Parse into groups of 3 hex bytes.
    For k = 1 To intLen Step 2
        j = j + 1
        strWord = strWord & Mid(strHex, k, 2)
        If (j = 3) Then
            ' Convert 3 8-bit bytes into 4 6-bit characters.
            lngValue = CCur("&H" & strWord)
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1)
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
             
            str64 = Mid(B64, lngTemp + 1, 1) & str64
             
            HexToBase64 = HexToBase64 & str64
            j = 0
            strWord = ""
        End If
    Next
    
    ' Account for padding.
    If (intTerm = 4) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 1) & "="
    If (intTerm = 2) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 2) & "=="

End Function

' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd| MD5 |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function GetFileHashMD5(strFileName)
    Dim MD5
    Set MD5 = CreateObject("System.Security.Cryptography.MD5CryptoServiceProvider")
    MD5.ComputeHash_2 (ReadBinaryFile(strFileName))
    Dim msxml
    Set msxml = CreateObject("MSXML2.DOMDocument")
    Dim el
    Set el = msxml.createElement("tmp")
    el.dataType = "bin.hex"
    el.nodeTypedValue = MD5.hash
    GetFileHashMD5 = el.Text
End Function
' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|o|fffd|C|fffd|g|fffd|z|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function ReadBinaryFile(strFileName)
    Const adTypeBinary = 1
    Dim stm
    Set stm = CreateObject("ADODB.Stream")
    stm.Type = adTypeBinary
    stm.Open
    stm.LoadFromFile strFileName
    ReadBinaryFile = stm.Read
End Function


'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToHex(bytes() As Byte)
    encodeToHex = Encode("bin.Hex", bytes)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToBase64(bytes() As Byte)
    encodeToBase64 = Encode("bin.base64", bytes)
End Function
 
'16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromHex(Text As String)
    decodeFromHex = Decode("bin.Hex", Text)
End Function
 
'BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromBase64(Text As String)
    decodeFromBase64 = Decode("bin.base64", Text)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Encode(dataType As String, bytes() As Byte)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.nodeTypedValue = bytes
    End With
    Encode = Replace(oXmlDoc.DocumentElement.Text, vbLf, "")
End Function
 
'|fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Decode(dataType As String, Text As String)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.Text = Text
    End With
    Decode = oXmlDoc.DocumentElement.nodeTypedValue
End Function

Function EncodeBase64(Text As String) As String
  Dim arrData() As Byte
  arrData = StrConv(Text, vbFromUnicode)

  Dim objXML As MSXML2.DOMDocument60
  Dim objNode As MSXML2.IXMLDOMElement

  Set objXML = New MSXML2.DOMDocument60
  Set objNode = objXML.createElement("b64")

  objNode.dataType = "bin.base64"
  objNode.nodeTypedValue = arrData
  EncodeBase64 = objNode.Text

  Set objNode = Nothing
  Set objXML = Nothing
End Function



' |fffd||209||fffd||fffd|R|fffd|s|fffd|y
' http://d.hatena.ne.jp/n7shi/20100910/1284112553
' https://code.msdn.microsoft.com/office/VBACRC-32-dad7d087
' Dim I%, J%, R&, R1&|fffd||fffd||fffd|Q|fffd|l
' http://www.atmarkit.co.jp/fdotnet/vb6tonet/vb6tonet30/vb6tonet30_01.html

Private Sub InitCrc32Table()
    Dim i%, j%, R&, R1&
    For i = 0 To 255
        R = i
        For j = 0 To 7
            R1 = R And 1
            R = (R - R1) / 2
            If R < 0 Then R = R - &H80000000
            If R1 Then R = R Xor &HEDB88320
        Next j
        Crc32Table(i) = R
    Next i
End Sub

Public Function GetCrc32FromFile&(Path$)
    Dim R&, i&, b As Byte, FL&
    If Crc32Table(255) = 0 Then InitCrc32Table
    FL = FileLen(Path)
    Open Path For Binary Lock Read As #2
    R = Not 0
    For i = 1 To FL
        Get #2, , b
        R = (Int(R / 256) And &HFFFFFF) Xor Crc32Table((R Xor b) And &HFF)
    Next i
    Close #2
    GetCrc32FromFile = Not R
End Function


Attribute VB_Name = "Module19"
 '--------------------- MD5 for VBA ----------------------
 Private Const BITS_TO_A_BYTE = 8
 Private Const BYTES_TO_A_WORD = 4
 Private Const BITS_TO_A_WORD = 32
 Private m_lOnBits(30)
 Private m_l2Power(30)
 Sub MD5Init()
    m_lOnBits(0) = CLng(1)
    m_lOnBits(1) = CLng(3)
    m_lOnBits(2) = CLng(7)
    m_lOnBits(3) = CLng(15)
    m_lOnBits(4) = CLng(31)
    m_lOnBits(5) = CLng(63)
    m_lOnBits(6) = CLng(127)
    m_lOnBits(7) = CLng(255)
    m_lOnBits(8) = CLng(511)
    m_lOnBits(9) = CLng(1023)
    m_lOnBits(10) = CLng(2047)
    m_lOnBits(11) = CLng(4095)
    m_lOnBits(12) = CLng(8191)
    m_lOnBits(13) = CLng(16383)
    m_lOnBits(14) = CLng(32767)
    m_lOnBits(15) = CLng(65535)
    m_lOnBits(16) = CLng(131071)
    m_lOnBits(17) = CLng(262143)
    m_lOnBits(18) = CLng(524287)
    m_lOnBits(19) = CLng(1048575)
    m_lOnBits(20) = CLng(2097151)
    m_lOnBits(21) = CLng(4194303)
    m_lOnBits(22) = CLng(8388607)
    m_lOnBits(23) = CLng(16777215)
    m_lOnBits(24) = CLng(33554431)
    m_lOnBits(25) = CLng(67108863)
    m_lOnBits(26) = CLng(134217727)
    m_lOnBits(27) = CLng(268435455)
    m_lOnBits(28) = CLng(536870911)
    m_lOnBits(29) = CLng(1073741823)
    m_lOnBits(30) = CLng(2147483647)
    m_l2Power(0) = CLng(1)
    m_l2Power(1) = CLng(2)
    m_l2Power(2) = CLng(4)
    m_l2Power(3) = CLng(8)
    m_l2Power(4) = CLng(16)
    m_l2Power(5) = CLng(32)
    m_l2Power(6) = CLng(64)
    m_l2Power(7) = CLng(128)
    m_l2Power(8) = CLng(256)
    m_l2Power(9) = CLng(512)
    m_l2Power(10) = CLng(1024)
    m_l2Power(11) = CLng(2048)
    m_l2Power(12) = CLng(4096)
    m_l2Power(13) = CLng(8192)
    m_l2Power(14) = CLng(16384)
    m_l2Power(15) = CLng(32768)
    m_l2Power(16) = CLng(65536)
    m_l2Power(17) = CLng(131072)
    m_l2Power(18) = CLng(262144)
    m_l2Power(19) = CLng(524288)
    m_l2Power(20) = CLng(1048576)
    m_l2Power(21) = CLng(2097152)
    m_l2Power(22) = CLng(4194304)
    m_l2Power(23) = CLng(8388608)
    m_l2Power(24) = CLng(16777216)
    m_l2Power(25) = CLng(33554432)
    m_l2Power(26) = CLng(67108864)
    m_l2Power(27) = CLng(134217728)
    m_l2Power(28) = CLng(268435456)
    m_l2Power(29) = CLng(536870912)
    m_l2Power(30) = CLng(1073741824)
 End Sub
 Private Function LShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        LShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And 1 Then
            LShift = &H80000000
        Else
            LShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If
    If (lValue And m_l2Power(31 - iShiftBits)) Then
        LShift = ((lValue And m_lOnBits(31 - (iShiftBits + 1))) * m_l2Power(iShiftBits)) Or &H80000000
    Else
        LShift = ((lValue And m_lOnBits(31 - iShiftBits)) * m_l2Power(iShiftBits))
    End If
 End Function
 Private Function RShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        RShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And &H80000000 Then
            RShift = 1
        Else
            RShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If
    RShift = (lValue And &H7FFFFFFE) \ m_l2Power(iShiftBits)
    If (lValue And &H80000000) Then
        RShift = (RShift Or (&H40000000 \ m_l2Power(iShiftBits - 1)))
    End If
 End Function
 Private Function RotateLeft(lValue, iShiftBits)
    RotateLeft = LShift(lValue, iShiftBits) Or RShift(lValue, (32 - iShiftBits))
 End Function
 Private Function AddUnsigned(lX, lY)
    Dim lX4
    Dim lY4
    Dim lX8
    Dim lY8
    Dim lResult
    lX8 = lX And &H80000000
    lY8 = lY And &H80000000
    lX4 = lX And &H40000000
    lY4 = lY And &H40000000
    lResult = (lX And &H3FFFFFFF) + (lY And &H3FFFFFFF)
    If lX4 And lY4 Then
        lResult = lResult Xor &H80000000 Xor lX8 Xor lY8
    ElseIf lX4 Or lY4 Then
        If lResult And &H40000000 Then
            lResult = lResult Xor &HC0000000 Xor lX8 Xor lY8
        Else
            lResult = lResult Xor &H40000000 Xor lX8 Xor lY8
        End If
    Else
        lResult = lResult Xor lX8 Xor lY8
    End If
    AddUnsigned = lResult
 End Function
 Private Function F(x, y, z)
    F = (x And y) Or ((Not x) And z)
 End Function
 Private Function G(x, y, z)
    G = (x And z) Or (y And (Not z))
 End Function
 Private Function h(x, y, z)
    h = (x Xor y Xor z)
 End Function
 Private Function i(x, y, z)
    i = (y Xor (x Or (Not z)))
 End Function
 Private Sub FF(a, b, c, d, x, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub GG(a, b, c, d, x, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub HH(a, b, c, d, x, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(h(b, c, d), x), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Sub II(a, b, c, d, x, s, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(i(b, c, d), x), ac))
    a = RotateLeft(a, s)
    a = AddUnsigned(a, b)
 End Sub
 Private Function ConvertToWordArray(sMessage)
    Dim lMessageLength
    Dim lNumberOfWords
    Dim lWordArray()
    Dim lBytePosition
    Dim lByteCount
    Dim lWordCount
    Const MODULUS_BITS = 512
    Const CONGRUENT_BITS = 448
    lMessageLength = Len(sMessage)
    lNumberOfWords = (((lMessageLength + ((MODULUS_BITS - CONGRUENT_BITS) \ BITS_TO_A_BYTE)) \ (MODULUS_BITS \ BITS_TO_A_BYTE)) + 1) * (MODULUS_BITS \ BITS_TO_A_WORD)
    ReDim lWordArray(lNumberOfWords - 1)
    lBytePosition = 0
    lByteCount = 0
    Do Until lByteCount >= lMessageLength
        lWordCount = lByteCount \ BYTES_TO_A_WORD
        lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
        lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(Asc(Mid(sMessage, lByteCount + 1, 1)), lBytePosition)
        lByteCount = lByteCount + 1
    Loop
    lWordCount = lByteCount \ BYTES_TO_A_WORD
    lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
    lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(&H80, lBytePosition)
    lWordArray(lNumberOfWords - 2) = LShift(lMessageLength, 3)
    lWordArray(lNumberOfWords - 1) = RShift(lMessageLength, 29)
    ConvertToWordArray = lWordArray
 End Function
 Private Function WordToHex(lValue)
    Dim lByte
    Dim lCount
    For lCount = 0 To 3
        lByte = RShift(lValue, lCount * BITS_TO_A_BYTE) And m_lOnBits(BITS_TO_A_BYTE - 1)
        WordToHex = WordToHex & Right("0" & Hex(lByte), 2)
    Next
 End Function
 Public Function MD5(sMessage)
    MD5Init
    Dim x
    Dim k
    Dim AA
    Dim BB
    Dim CC
    Dim DD
    Dim a
    Dim b
    Dim c
    Dim d
    Const S11 = 7
    Const S12 = 12
    Const S13 = 17
    Const S14 = 22
    Const S21 = 5
    Const S22 = 9
    Const S23 = 14
    Const S24 = 20
    Const S31 = 4
    Const S32 = 11
    Const S33 = 16
    Const S34 = 23
    Const S41 = 6
    Const S42 = 10
    Const S43 = 15
    Const S44 = 21
    x = ConvertToWordArray(sMessage)
    a = &H67452301
    b = &HEFCDAB89
    c = &H98BADCFE
    d = &H10325476
    For k = 0 To UBound(x) Step 16
        AA = a
        BB = b
        CC = c
        DD = d
        FF a, b, c, d, x(k + 0), S11, &HD76AA478
        FF d, a, b, c, x(k + 1), S12, &HE8C7B756
        FF c, d, a, b, x(k + 2), S13, &H242070DB
        FF b, c, d, a, x(k + 3), S14, &HC1BDCEEE
        FF a, b, c, d, x(k + 4), S11, &HF57C0FAF
        FF d, a, b, c, x(k + 5), S12, &H4787C62A
        FF c, d, a, b, x(k + 6), S13, &HA8304613
        FF b, c, d, a, x(k + 7), S14, &HFD469501
        FF a, b, c, d, x(k + 8), S11, &H698098D8
        FF d, a, b, c, x(k + 9), S12, &H8B44F7AF
        FF c, d, a, b, x(k + 10), S13, &HFFFF5BB1
        FF b, c, d, a, x(k + 11), S14, &H895CD7BE
        FF a, b, c, d, x(k + 12), S11, &H6B901122
        FF d, a, b, c, x(k + 13), S12, &HFD987193
        FF c, d, a, b, x(k + 14), S13, &HA679438E
        FF b, c, d, a, x(k + 15), S14, &H49B40821
        GG a, b, c, d, x(k + 1), S21, &HF61E2562
        GG d, a, b, c, x(k + 6), S22, &HC040B340
        GG c, d, a, b, x(k + 11), S23, &H265E5A51
        GG b, c, d, a, x(k + 0), S24, &HE9B6C7AA
        GG a, b, c, d, x(k + 5), S21, &HD62F105D
        GG d, a, b, c, x(k + 10), S22, &H2441453
        GG c, d, a, b, x(k + 15), S23, &HD8A1E681
        GG b, c, d, a, x(k + 4), S24, &HE7D3FBC8
        GG a, b, c, d, x(k + 9), S21, &H21E1CDE6
        GG d, a, b, c, x(k + 14), S22, &HC33707D6
        GG c, d, a, b, x(k + 3), S23, &HF4D50D87
        GG b, c, d, a, x(k + 8), S24, &H455A14ED
        GG a, b, c, d, x(k + 13), S21, &HA9E3E905
        GG d, a, b, c, x(k + 2), S22, &HFCEFA3F8
        GG c, d, a, b, x(k + 7), S23, &H676F02D9
        GG b, c, d, a, x(k + 12), S24, &H8D2A4C8A
        HH a, b, c, d, x(k + 5), S31, &HFFFA3942
        HH d, a, b, c, x(k + 8), S32, &H8771F681
        HH c, d, a, b, x(k + 11), S33, &H6D9D6122
        HH b, c, d, a, x(k + 14), S34, &HFDE5380C
        HH a, b, c, d, x(k + 1), S31, &HA4BEEA44
        HH d, a, b, c, x(k + 4), S32, &H4BDECFA9
        HH c, d, a, b, x(k + 7), S33, &HF6BB4B60
        HH b, c, d, a, x(k + 10), S34, &HBEBFBC70
        HH a, b, c, d, x(k + 13), S31, &H289B7EC6
        HH d, a, b, c, x(k + 0), S32, &HEAA127FA
        HH c, d, a, b, x(k + 3), S33, &HD4EF3085
        HH b, c, d, a, x(k + 6), S34, &H4881D05
        HH a, b, c, d, x(k + 9), S31, &HD9D4D039
        HH d, a, b, c, x(k + 12), S32, &HE6DB99E5
        HH c, d, a, b, x(k + 15), S33, &H1FA27CF8
        HH b, c, d, a, x(k + 2), S34, &HC4AC5665
        II a, b, c, d, x(k + 0), S41, &HF4292244
        II d, a, b, c, x(k + 7), S42, &H432AFF97
        II c, d, a, b, x(k + 14), S43, &HAB9423A7
        II b, c, d, a, x(k + 5), S44, &HFC93A039
        II a, b, c, d, x(k + 12), S41, &H655B59C3
        II d, a, b, c, x(k + 3), S42, &H8F0CCC92
        II c, d, a, b, x(k + 10), S43, &HFFEFF47D
        II b, c, d, a, x(k + 1), S44, &H85845DD1
        II a, b, c, d, x(k + 8), S41, &H6FA87E4F
        II d, a, b, c, x(k + 15), S42, &HFE2CE6E0
        II c, d, a, b, x(k + 6), S43, &HA3014314
        II b, c, d, a, x(k + 13), S44, &H4E0811A1
        II a, b, c, d, x(k + 4), S41, &HF7537E82
        II d, a, b, c, x(k + 11), S42, &HBD3AF235
        II c, d, a, b, x(k + 2), S43, &H2AD7D2BB
        II b, c, d, a, x(k + 9), S44, &HEB86D391
        a = AddUnsigned(a, AA)
        b = AddUnsigned(b, BB)
        c = AddUnsigned(c, CC)
        d = AddUnsigned(d, DD)
    Next
    MD5 = LCase(WordToHex(a) & WordToHex(b) & WordToHex(c) & WordToHex(d))
 End Function
Attribute VB_Name = "Module2"

Function GetEanByBoo(BoCode As String, ResaltMode As String) As Variant

Dim BoResalt(1) As Variant
'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

Dim Url As String
    Url = "https://www.bookoffonline.co.jp/old/" & BoCode

httpReq.Open "GET", Url
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop

'Dim htmlDoc As String
'htmlDoc = httpReq.responseText
'Set htmlDoc = New HTMLDocument
'htmlDoc.write httpReq.responseText




Dim htmlDoc As Object
Dim oXmlHttp As Object

Dim htmlText As String


                    
    Set htmlDoc = New HTMLDocument
                    
    Debug.Print StrConv(httpReq.responseBody, 64)
    htmlDoc.write httpReq.responseBody
                     
    htmlText = StrConv(httpReq.responseBody, 64)
    'Sheets("test").Cells(1, 1) = htmlText
    EAN = Format(Mid(htmlText, InStr(htmlText, "JAN</th><td>") + Len("JAN</th><td>"), 13), "0000000000000")
    If IsNumeric(EAN) = False Then
        BoResalt(0) = "|fffd|Y|fffd||fffd|EAN|fffd||202||fffd|"
        BoResalt(1) = Empty
        GetEanByBoo = BoResalt
        Set httpReq = Nothing
        Exit Function
    End If

        htmlText = Mid(htmlText, InStr(htmlText, "<td class=""oldprice"">|fffd||fffd|") + Len("<td class=""oldprice"">|fffd||fffd|"), 10)
        Dim BoPrice As Long
            BoPrice = Left(htmlText, InStr(htmlText, "|fffd|i|fffd||14d||fffd||fffd|j") - 1)

    
    BoResalt(0) = Format(EAN, "0000000000000")
    BoResalt(1) = BoPrice
    
    GetEanByBoo = BoResalt
    
Set httpReq = Nothing
'-----------------------------


End Function
Attribute VB_Name = "Module20"
Sub |fffd|}|fffd|N|fffd||fffd||fffd||30d||157|L|fffd||fffd||fffd||fffd|()

End Sub
Attribute VB_Name = "Module21"
Sub |fffd||fffd||fffd|p|fffd||fffd||fffd||38f||6c2||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|I|fffd||fffd|()


    Dim fType, prompt As String
    Dim fPath As Variant
    Dim ws As Worksheet
    Set ws = Worksheets("Config")

    '|fffd|I|fffd||fffd||fffd||142||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||782||fffd|csv|fffd||24c||fffd||fffd||fffd|
    fType = "Excel |327||fffd||fffd| (*.xlsm),*.xlsm"

    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
    prompt = "|fffd||fffd||fffd||fffd||702||14e|g|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|o|fffd|i|fffd|c|fffd|[|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd|"
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||183|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||315|\|fffd||fffd|
    fPath = Application.GetOpenFilename(fType, , prompt)

    If fPath = False Then
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End
    End If

    'B2|fffd|Z|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    ws.Cells(5, 8).value = fPath

End Sub


Sub |fffd||fffd||fffd|p|fffd||fffd||fffd||30e||fffd||fffd|s()

Dim OldFileFullPass As String
Dim OldFilePass As String
Dim OldFile As String
Dim OldFileName As String

OldFileFullPass = Sheets("Config").Cells(5, 8)

For a = 6 To Len(OldFileFullPass)
    If Left(Right(OldFileFullPass, a), 1) = "\" Then
        OldFilePass = Left(OldFileFullPass, Len(OldFileFullPass) - a)
        OldFile = Right(OldFileFullPass, a - 1)
        OldFileName = Replace(OldFile, ".xlsm", "")
        Exit For
    End If
DoEvents
Next

Dim MyFileFullPass As String
Dim MyFilePass As String
Dim MyFile As String
Dim MyFileName As String

MyFilePass = ActiveWorkbook.Path
MyFile = ActiveWorkbook.Name
MyFileName = Left(MyFile, Len(MyFile) - 5)
MyFileFullPass = MyFilePass & "\" & MyFile


Application.ScreenUpdating = False
Workbooks.Open OldFileFullPass

    Workbooks(MyFile).Sheets("Config").Cells(7, 4) = Workbooks(OldFile).Sheets("Config").Cells(7, 4)

    Workbooks(OldFile).Sheets("Config").Range("B8:B9") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B8:B9")
    
    Workbooks(OldFile).Sheets("Config").Range("A13:D22") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("A13:D22")
    
    Workbooks(OldFile).Sheets("Config").Range("F13:L22") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("F13:L22")
    
    Workbooks(OldFile).Sheets("Config").Range("A54:A63") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("A54:A63")
    
    Workbooks(OldFile).Sheets("Config").Range("B26:B63") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B26:B63")
    
    Workbooks(OldFile).Sheets("Config").Range("D49:D63") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("D49:D63")
    
    Workbooks(OldFile).Sheets("Config").Range("E44:E63") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("E44:E63")
    
    Workbooks(OldFile).Sheets("Config").Range("B70:B71") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B70:B71")
    
    Workbooks(OldFile).Sheets("Config").Range("B76:B79") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B76:B79")
    
    Workbooks(OldFile).Sheets("Config").Range("B82:B85") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B82:B85")
    
    Workbooks(OldFile).Sheets("Config").Range("B89:B94") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B89:B94")
    
    Workbooks(OldFile).Sheets("Config").Range("B99:B101") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B99:B101")
    
    Workbooks(OldFile).Sheets("Config").Range("B103") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B103")
    
    Workbooks(OldFile).Sheets("Config").Range("B106") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B106")
    
    Workbooks(OldFile).Sheets("Config").Range("B109:B111") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B109:B111")
    
    Workbooks(OldFile).Sheets("Config").Range("B114") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B114")
    
    Workbooks(OldFile).Sheets("Config").Range("B118:B119") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B118:B119")
    
    Workbooks(OldFile).Sheets("Config").Range("B121") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B121")
    
    Workbooks(OldFile).Sheets("Config").Range("B124:B126") _
        .Copy Destination:= _
    Workbooks(MyFile).Sheets("Config").Range("B124:B126")



Workbooks(OldFile).Close SaveChanges:=False
Application.ScreenUpdating = True

MsgBox "|fffd|f|fffd|[|fffd|^|fffd||308||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|I"

End Sub
Attribute VB_Name = "Module22"
Sub |fffd|}|fffd|N|fffd||fffd||fffd||30d||117|L|fffd||fffd||fffd||fffd|()
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module3"
Attribute VB_Name = "Module4"
Attribute VB_Name = "Module5"

Attribute VB_Name = "Module6"
Attribute VB_Name = "Module7"
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Sub Amazon|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||18f|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N()


If Sheets("Config").Range("B7") = "" Or Sheets("Config").Range("B8") = "" Then
    MsgBox "MWS|fffd||fffd||42a93||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
    End
Else
    If Sheets("Config").Range("B9") = "" Then
        MsgBox "|fffd||fffd||fffd||fffd|ID|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
        End
    End If
End If

Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"

Dim Res
Res = MsgBox("Amazon|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
"|fffd|i|fffd|s|fffd||cbd42||34d||fffd||fffd||fffd||fffd||303||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd|[|fffd||242||10a|m|fffd|F|fffd||142||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd||a5b3||fffd||fffd||fffd||fffd||fffd|[|fffd|v|fffd||242||202||fffd||fffd||fffd||fffd||fffd|uEsc|fffd|v|fffd|L|fffd|[|fffd||152||fffd|~|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKCancel, "amazon.web|fffd||fffd||fffd||7bd||fffd||317||fffd||fffd|p")
If Res = vbCancel Then Exit Sub



Dim LastIndex As Long
    LastIndex = Sheets("Scan").Cells(Rows.count, 1).End(xlUp).Row

Dim WaitTime As Long
    WaitTime = Sheets("Config").Cells(7, 4)

For i = 7 To LastIndex
    Application.StatusBar = "Amazon|fffd||fffd||fffd||64fe||fffd||fffd||fffd|@" & i & "/" & LastIndex
    
    
    If Sheets("Scan").Cells(i, 14) = "" Then
        Sleep WaitTime
        Application.Run "ASIN|fffd||64fe|"
    End If
    
    
    
    If Sheets("Scan").Cells(i, 13) = "" And Sheets("Scan").Cells(i, 14) <> "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|" Then
        If Sheets("Scan").Cells(3, 2) = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
            If Sheets("Scan").Cells(i, 3) = "|fffd|V|fffd|i" Then
                Sleep WaitTime
                Application.Run "|fffd|V|fffd|i|fffd||14e||fffd||fffd||214|z|fffd||fffd|" '---
            Else
                Sleep WaitTime
                Application.Run "|fffd||fffd||fffd||c2||14e||fffd||fffd||214|z|fffd||fffd|" '---
            End If
        Else
            If Sheets("Scan").Cells(i, 3) = "|fffd|V|fffd|i" Then
                Sleep WaitTime
                Application.Run "|fffd|V|fffd|i|fffd||fffd|FBA" '---
            Else
                Sleep WaitTime
                Application.Run "|fffd||fffd||fffd||c2||fffd|FBA" '---
            End If
        End If
    End If
Next


Application.Run "|fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N"
Application.StatusBar = ""
MsgBox "|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|"
End Sub

Sub |fffd||d448d|s|fffd||10b0c||fffd||fffd||fffd||fffd||fffd||702||14a|m|fffd||fffd||fffd||24e||64fe|()

If Sheets("Config").Range("B6") = "" Or Sheets("Config").Range("B7") = "" Then
    MsgBox "AWS|fffd|L|fffd|[|fffd||fffd||42a93||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
Else


Dim Res
Res = MsgBox("|fffd||d448d|s|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||fffd||702||142||fffd||fffd||fffd||fffd||18e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
"Amazon|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|v|fffd||242||202||fffd||302||141|uEsc|fffd|v|fffd|L|fffd|[|fffd||152||fffd|~|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
"B|fffd||fffd|`G|fffd||fffd||702||142||303|Z|fffd||fffd||fffd||34f||33d1||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel, "amazon.web|fffd||fffd||fffd||7bd||fffd||317||fffd||fffd|p")
If Res = vbCancel Then Exit Sub

Dim Url As String
Dim xmldata As Object
Dim Author As Object
Dim i As Integer
Dim j As Long
Dim k As Long
Dim atai As Long
Dim ItemAttributes As Object
Dim OfferSummary As Object
Dim LowestUsedPrice As Object
Dim ASIN As String
Dim rowIndex As Integer
Dim item As Object
Dim SignedUrl As String
Dim keyid As String '|fffd|@<--|fffd||1c9||fffd|(engi)
Dim Secretkey As String

Dim CodeJudge As String
Dim LastIndex As Long
    LastIndex = Cells(Rows.count, 1).End(xlUp).Row
Dim afo As String

afo = "XXXXXXXX"  '< --|fffd||fffd||fffd|g|fffd||303|A|fffd|\|fffd|V|fffd|G|fffd|C|fffd|g|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
keyid = Sheets("Config").Range("B6") '|fffd|@<--|fffd|@|fffd||3cd|X(|fffd||fffd||fffd|g|fffd||fffd|KEYID|fffd||fffd||fffd||fffd||fffd||fffd|B)
Secretkey = Sheets("Config").Range("B7") '|fffd|@< --|fffd||fffd||fffd|g|fffd||fffd|Secretkey|fffd||fffd||fffd||fffd||fffd||fffd|


'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path

rowIndex = 7 '|fffd|@7|fffd|s|fffd||682||fffd||fffd||152||fffd|s|fffd||182||fffd||fffd||fffd|B

Dim TRY As Long

For rowIndex = 7 To LastIndex
If ActiveSheet.Cells(rowIndex, 1) <> "" Then
'|fffd|@A7|fffd|Z|fffd||fffd||fffd||fffd||fffd||727a||fffd||fffd||fffd||fffd||fffd||258|A|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|BA|fffd||fffd||303|Z|fffd||fffd||fffd|l|fffd||fffd||fffd||d4482||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|B
  While ActiveSheet.Cells(rowIndex, 13) = ""
    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd|@" & rowIndex & "/" & LastIndex
    If ActiveSheet.Cells(rowIndex, 1) = "" Then
        Sheets("Scan").Range("B" & rowIndex & ":K" & rowIndex).ClearContents
        GoTo labelSkip
    End If
    
    While ActiveSheet.Cells(rowIndex, 14) = ""
    '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38e||fffd||fffd||30d|s|fffd||fffd|


    ASIN = Sheets("Scan").Cells(rowIndex, 1).value
    
    If Sheets("Scan").Cells(rowIndex, 10) <> "" Then
        CodeJudge = Sheets("Scan").Cells(rowIndex, 10)
    Else
        If Len(ASIN) = 13 And Left(ASIN, 3) = "978" Then
           CodeJudge = "ISBN"
        Else
            If Len(ASIN) = 13 Then
                CodeJudge = "EAN"
            Else
                If Len(ASIN) = 10 And Left(ASIN, 1) = "4" Then
                    CodeJudge = "ISBN"
                Else
                    CodeJudge = "ASIN"
                End If
            End If
        End If
        Sheets("Scan").Cells(rowIndex, 10) = CodeJudge
    End If
    
    
    '|fffd||fffd||fffd|i|fffd|R|fffd|[|fffd|h|fffd||242||fffd||956a||fffd||fffd|-------------------------
    Select Case CodeJudge
        Case "ASIN" '|fffd||fffd||fffd||302||fffd|TdType|fffd||fffd|ASIN|fffd||24e|w|fffd||80b7||fffd||fffd||18e||fffd||fffd||202||fffd||fffd|B
            Url = "http://webservices.amazon.co.jp/onca/xml?Service=AWSECommerceService&AWSAccessKeyId=" & keyid & "&Operation=ItemLookup&IdType=ISBN&SearchIndex=All&ResponseGroup=Large,OfferSummary&Version=2009-03-31&ItemId=" & ASIN & "&AssociateTag=" & afo

        Case "ISBN"
            Url = "http://webservices.amazon.co.jp/onca/xml?Service=AWSECommerceService&AWSAccessKeyId=" & keyid & "&Operation=ItemLookup&IdType=ISBN&SearchIndex=Books&ResponseGroup=Large,OfferSummary&Version=2009-03-31&ItemId=" & ASIN & "&AssociateTag=" & afo

        Case "EAN"
            Url = "http://webservices.amazon.co.jp/onca/xml?Service=AWSECommerceService&AWSAccessKeyId=" & keyid & "&Operation=ItemLookup&IdType=EAN&SearchIndex=All&ResponseGroup=Large,OfferSummary&Version=2009-03-31&ItemId=" & ASIN & "&AssociateTag=" & afo
    End Select
    '---------------------------------------------
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
    SignedUrl = String(Len(Url) + 100, vbNullChar)
    Call UrlSign(Url, SignedUrl, Secretkey)
    SignedUrl = Left(SignedUrl, InStr(SignedUrl, vbNullChar))

    ' API|fffd||fffd||fffd|s
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load SignedUrl
    '|fffd|@|fffd||3d0||fffd|SignedUrl|fffd|i|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|url|fffd|j|fffd||313||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||82||702||fffd|Aamazon.co.jp|fffd||fffd|WEB|fffd|T|fffd|[|fffd|r|fffd|X|fffd||243|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd|A|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||341|AXMLDOM|fffd||312||8414||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||209||fffd||fffd||141|AXMLDOM-|fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||12182||157|~|fffd||fffd||fffd||fffd||fffd||fffd||42a82||1c2||303|p|fffd|X|fffd||242||fffd||fffd||90a9||fffd||fffd||fffd|w|fffd||80b5||fffd||101|A|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B
    Set ItemAttributes = xmldata.SelectSingleNode("ItemLookupResponse/Items/Item/ItemAttributes")
    Set LowestUsedPrice = xmldata.SelectSingleNode("ItemLookupResponse/Items/Item/OfferSummary/LowestUsedPrice")
    '|fffd|@|fffd|uxml.selectSingleNode|fffd|v|fffd||341|AXML|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||4c2||302|P|fffd|m|fffd|[|fffd|h(IXMLDOMNode)|fffd||fffd||fffd||64fe||fffd||fffd||fffd||90c1||fffd|\|fffd|b|fffd|h|fffd|B
    '|fffd|@|fffd||fffd||fffd||fffd||fffd||242||fffd|XPath|fffd||14c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b7||fffd||9841|@XML|fffd||fffd||fffd||fffd||fffd||302||1c2||315||fffd||fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||202||1c2||30f||fffd||42a82||fffd||fffd||90a9||fffd||303|p|fffd|X|fffd||fffd|
    '|fffd|@itemAttributes|fffd||3d0||fffd||fffd||251||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|@|fffd||fffd||fffd||303|p|fffd|X|fffd||fffd|amazon|fffd||157|L|fffd|B
    '|fffd|@|fffd|C|fffd||fffd||fffd|[|fffd|W|fffd||341|Ahttp://ajex2.web.fc2.com/BGExample01.htm#DOM|fffd|@|fffd||242||fffd||fffd||fffd||702||fffd||fffd|B


    If Not ItemAttributes Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        ActiveSheet.Cells(rowIndex, 14) = ItemAttributes.SelectSingleNode("Title").Text
    End If


    If Not LowestUsedPrice Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        ActiveSheet.Cells(rowIndex, 12) = LowestUsedPrice.SelectSingleNode("Amount").Text
        Application.Run "|fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z"
    End If

    





    Set xmldata = Nothing
    '|fffd|@amazon.co.jp|fffd||582||fffd|WEB|fffd|T|fffd|[|fffd|r|fffd|X|fffd||582||341|A1|fffd|b|fffd||50a|u|fffd||fffd||fffd||c2bc2||fffd||182||302||fffd||fffd||182||202||302||141|A|fffd|E|fffd|G|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||fffd||fffd|Ltimevalue|fffd||fffd|0:00:01|fffd||142||34f||a347||fffd||242||fffd||fffd|amazon|fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||242||202||fffd||302||141|A0:00:02|fffd||182||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd||fffd||a347||fffd|A0:00:03|fffd||202||1d2|l|fffd||fffd||50ab||fffd||fffd||fffd||fffd||fffd||fffd|B
    Excel.Application.Wait (Now + TimeValue("0:00:01"))

    Wend

    rowIndex = rowIndex + 1
  Wend
labelSkip:
End If
Next

End If
Application.StatusBar = ""
MsgBox "Amazon|fffd|f|fffd|[|fffd|^|fffd||30e||64fe||fffd||fffd||fffd||fffd|"
End Sub

Sub |fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|v|fffd|Z()

Dim LastIndex As Long
    LastIndex = Sheets("Scan").Cells(Rows.count, 12).End(xlUp).Row
    
Dim Condition As String
    Condition = Sheets("Scan").Cells(LastIndex, 3)
Dim SendMethod As String
    SendMethod = Sheets("Scan").Cells(3, 2)
Dim ConfigRow As Long
Dim ConfigColumn As Long

Dim ASIN As String
    ASIN = Sheets("Scan").Cells(LastIndex, 1)


Select Case Condition
    Case "|fffd||fffd||fffd||fffd|-|fffd||fffd|"
        ConfigRow = 28
    Case "|fffd||fffd||fffd||fffd|-|fffd||1c2||fffd|"
        ConfigRow = 29
    Case "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||257||1c2||fffd|"
        ConfigRow = 30
    Case "|fffd||fffd||fffd||fffd|-|fffd||642||690|V|fffd|i"
        ConfigRow = 31
    Case "|fffd|V|fffd|i"
        ConfigRow = 32
End Select

Select Case SendMethod
    Case "FBA"
        ConfigColumn = 6
    Case "|fffd||fffd||fffd||214|z|fffd||fffd|"
        ConfigColumn = 4
End Select

Dim Multi As Long
    Multi = Sheets("Config").Cells(ConfigRow, ConfigColumn)
    
Dim Plus As Long
    Plus = Sheets("Config").Cells(ConfigRow, ConfigColumn + 1)

Dim LowestPrice As Long
    LowestPrice = Sheets("Scan").Cells(LastIndex, 12)

Dim SypnPrice As Long
    SypnPrice = Int(LowestPrice * Multi / 100) + Plus
    
Sheets("Scan").Cells(LastIndex, 13) = SypnPrice

End Sub

Sub |fffd|d|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N()

Dim ASIN As String
Dim SameNumber As String
Dim LastIndex As Long
    LastIndex = Cells(Rows.count, 1).End(xlUp).Row
Dim MyCondition As String
Dim CheckCondition As String
Dim SameCount As Long
Dim CheckCount As Long
Dim ExistRow As String
    
    Sheets("Scan").Range("K7:K1006").ClearContents
    
For n = 7 To LastIndex

    ASIN = Sheets("Scan").Cells(n, 1)
 If ASIN <> "" Then
    MyCondition = Sheets("Scan").Cells(n, 3)
    SameNumber = Application.WorksheetFunction.CountIf(Sheets("Scan").Range("A7:A" & LastIndex), ASIN)
    CheckCount = 0
    SameCount = 0
    ExistRow = ""
    
    If SameNumber > 1 Then
        For i = 7 To LastIndex
            If Sheets("Scan").Cells(i, 1) = ASIN Then
                CheckCondition = Sheets("Scan").Cells(i, 3)
                If CheckCondition = MyCondition Then
                    SameCount = SameCount + 1
                    If n <> i Then
                        ExistRow = ExistRow & " , " & i
                    End If
                End If
            CheckCount = CheckCount + 1
            End If
            
            If CheckCount >= SameNumber Then
                GoTo labelFin
            End If
            
        Next
    End If
labelFin:
    If SameCount > 1 Then
        Sheets("Scan").Cells(n, 11) = "|fffd|d|fffd||fffd|" & SameCount - 1 & "|fffd|_" & ExistRow & "|fffd|s|fffd||fffd|"
    End If
  End If
Next

End Sub
Attribute VB_Name = "Module8"
Attribute VB_Name = "Module9"
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)


If Target.count > 1 Then Exit Sub
    If Intersect(Target, Range("A7:A1006")) Is Nothing Then
        'Sheets("Scan").Cells(Target.Row, 14).ClearContents
        Exit Sub
    Else
        If Target <> "" Then
            'MsgBox Target.Row & "," & Target.Column
            
            Dim Memo As String
            Dim Condition As String
            Dim Comment As String
            Dim SealPrice As Long
            Dim SaleJudge As String
            Dim SaleRatio As Long
            Dim BuyPrice As Long
            Dim SKU As String
            Dim Number As Long
            
            Dim Initial As String
                Initial = Sheets("Scan").Cells(3, 3)
            Dim StartNumber As Long
                StartNumber = Sheets("Scan").Cells(3, 4)
            Dim SendMethod As String
                SendMethod = Sheets("Scan").Cells(3, 2)
            Dim FBABoxNumber As Long
                FBABoxNumber = Sheets("Scan").Cells(4, 2)
            Dim SameComment As String
                SameComment = Sheets("Scan").Cells(3, 9)
            Dim SendPricePlus As String
                SendPricePlus = Sheets("Scan").Cells(3, 5)
            
            
                '---------------------------------------------------------------------------------
                'BO|fffd|R|fffd|[|fffd|h|fffd||202||fffd|BOO|fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|EAN|fffd||16102||7c2||fffd|
                '|fffd|l|fffd|D|fffd||fffd||fffd|i|fffd||343|o|fffd|[|fffd|R|fffd|[|fffd|h|fffd||317|p
                Dim BoCode As String
                Dim BoPrice As Long
                Dim EAN As String
                Dim BoResalt As Variant
                Dim PriceMode As String
                
                If Len(Sheets("Scan").Cells(Target.Row, 1)) = 17 Then
                    BoCode = Format(Left(Sheets("Scan").Cells(Target.Row, 1), 10), "0000000000")
                    BoPrice = Right(Sheets("Scan").Cells(Target.Row, 1), 7)
                    BoResalt = GetEanByBoo(BoCode, "EAN|fffd||302||fffd|")
                    EAN = BoResalt(0)
                    PriceMode = "BO"
                Else
                    If (Len(Sheets("Scan").Cells(Target.Row, 1)) = 10 And Left(Sheets("Scan").Cells(Target.Row, 1), 1) = "0") Then
                        BoCode = Format(Left(Sheets("Scan").Cells(Target.Row, 1), 10), "0000000000")
                        If Sheets("Scan").Cells(5, 5) = "ON" Then
                            BoResalt = GetEanByBoo(BoCode, "|fffd||fffd||fffd||c9||fffd||fffd|i|fffd||fffd|")
                            EAN = BoResalt(0)
                            BoPrice = BoResalt(1)
                            PriceMode = "BOO"
                        Else
                            BoResalt = GetEanByBoo(BoCode, "EAN|fffd||302||fffd|")
                            EAN = BoResalt(0)
                        End If
                    Else
                        If Sheets("Scan").Cells(5, 5) = "ON" Then
                            EAN = Sheets("Scan").Cells(Target.Row, 1)
                            BoCode = EanToBoCode(EAN)
                            If BoCode <> Empty Then
                                BoResalt = GetEanByBoo(BoCode, "|fffd||fffd||fffd||c9||fffd||fffd|i|fffd||fffd|")
                                If EAN = BoResalt(0) Then
                                    BoPrice = BoResalt(1)
                                    PriceMode = "BOO"
                                Else
                                    Sheets("Scan").Cells(Target.Row, 6) = 0
                                End If
                            Else
                                Sheets("Scan").Cells(Target.Row, 6) = 0
                            End If
                        End If
                    End If
                End If
                
                
                
                If IsEmpty(BoResalt) = False Then
                    'EAN|fffd||189||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Application.EnableEvents = False
                    Sheets("Scan").Cells(Target.Row, 1) = Format(EAN, "0000000000000")
                    If (PriceMode = "BO" And Sheets("Scan").Cells(5, 6) = "ON") Or (PriceMode = "BOO" And Sheets("Scan").Cells(5, 5) = "ON") Then
                        Sheets("Scan").Cells(Target.Row, 6) = BoPrice
                    End If
                    Application.EnableEvents = True
                End If
                '-------------------------------------------------------------------------------------
                
                If SendPricePlus = Empty Or SendPricePlus = "" Then
                    SendPricePlus = 0
                End If
                '-------------------------------------------------------------
                If Sheets("Scan").Cells(Target.Row, 2) <> "" Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Memo = Sheets("Scan").Cells(Target.Row, 2)
                Else
                    If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                        Memo = Sheets("Scan").Cells(Target.Row - 1, 2)
                    Else
                        Memo = ""
                    End If
                End If
                '-------------------------------------------------------------
                If Sheets("Scan").Cells(Target.Row, 3) <> "" Then '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Condition = Sheets("Scan").Cells(Target.Row, 3)
                Else
                    If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                        Condition = Sheets("Scan").Cells(Target.Row - 1, 3)
                    End If
                End If
                '-------------------------------------------------------------
                If Sheets("Scan").Cells(Target.Row, 4) <> "" Then '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd|
                    Comment = Sheets("Scan").Cells(Target.Row, 4)
                Else
                    If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                        Comment = Sheets("Scan").Cells(Target.Row - 1, 4)
                    End If
                End If
                '-------------------------------------------------------------
                If Sheets("Scan").Cells(Target.Row, 5) <> "" Then '|fffd||fffd||fffd||282||fffd||fffd||fffd||fffd|
                    Number = Sheets("Scan").Cells(Target.Row, 5)
                Else
                    If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                        Number = Sheets("Scan").Cells(Target.Row - 1, 5)
                    Else
                        Number = 1
                    End If
                End If
                
                'If SendMethod = "FBA" Then
                    'Number = Empty
                'End If
                '-------------------------------------------------------------
                
                If Sheets("Scan").Cells(Target.Row, 6) <> "" Then '|fffd|l|fffd|D|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|
                    SealPrice = Sheets("Scan").Cells(Target.Row, 6)
                Else
                    If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                        SealPrice = Sheets("Scan").Cells(Target.Row - 1, 6)
                    End If
                End If
                '-------------------------------------------------------------
                
                    If Sheets("Scan").Cells(Target.Row, 7) <> "" Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        SaleRatio = Sheets("Scan").Cells(Target.Row, 7)
                    Else
                        If Target.Row > 7 Then '2|fffd||96||688||20d|~|fffd||202||fffd|
                            SaleRatio = Sheets("Scan").Cells(Target.Row - 1, 7)
                        Else
                            SaleRatio = 0
                        End If
                    End If
                    
                    If SaleRatio = 0 Then
                        SaleJudge = "OFF"
                    Else
                        SaleJudge = "ON"
                    End If
                '-----------------------------------------------------------------
                BuyPrice = Int(SealPrice * (1 - SaleRatio / 100))
                
                
                SKU = Initial & Format(Now, "YYMMDD")
                    If SendMethod = "FBA" Then 'SKU|fffd|`|fffd||fffd|
                        SKU = SKU & "-" & Format(FBABoxNumber, "00") & "-" & Format(Target.Row - 7 + StartNumber, "000")
                    Else
                        SKU = SKU & "-" & Format(Target.Row - 7 + StartNumber, "000")
                    End If
                    
                    If Memo <> "" Then
                        SKU = SKU & "-" & Memo
                    End If
                    
                    If SaleJudge = "ON" Then
                        SKU = SKU & "-S" & SaleRatio
                    End If
                    
                    If SealPrice <> Empty Then
                        If SaleJudge = "ON" Then
                            '|fffd|Z|fffd|[|fffd||fffd||fffd||fffd||fffd||342||302||fffd||fffd||309||fffd||fffd|i|fffd||fffd||fffd||fffd||142||30c|v|fffd|Z|fffd||fffd|z|fffd||80b5||fffd||101|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|Z
                            SKU = SKU & "-" & SealPrice + Int(SendPricePlus / ((100 - SaleRatio) / 100))
                        Else
                            SKU = SKU & "-" & SealPrice + SendPricePlus
                        End If
                    Else
                        SKU = SKU & "-" & Int(SendPricePlus / ((100 - SaleRatio) / 100))
                    End If
            '-------------------------------------------------
            Dim ASIN As String
                ASIN = Sheets("Scan").Cells(Target.Row, 1)
            Dim CodeJudge As String
                If Len(ASIN) = 13 And Left(ASIN, 3) = "978" Then
                    CodeJudge = "ISBN"
                Else
                    If Len(ASIN) = 13 Then
                        CodeJudge = "EAN"
                    Else
                        If Len(ASIN) = 10 And Left(ASIN, 1) = "4" Then
                            CodeJudge = "ISBN"
                        Else
                            CodeJudge = "ASIN"
                        End If
                    End If
                End If
                    
                
                '---------------------------------------------------------------------
            If Target.Row > 7 Then
                Sheets("Scan").Cells(Target.Row, 2) = Memo
                Sheets("Scan").Cells(Target.Row, 3) = Condition
                Sheets("Scan").Cells(Target.Row, 4) = Comment
                Sheets("Scan").Cells(Target.Row, 5) = Number
                Sheets("Scan").Cells(Target.Row, 6) = SealPrice
                Sheets("Scan").Cells(Target.Row, 7) = SaleRatio
                Sheets("Scan").Cells(Target.Row, 8) = BuyPrice
                Sheets("Scan").Cells(Target.Row, 9) = SKU
                Sheets("Scan").Cells(Target.Row, 10) = CodeJudge
            Else
                Sheets("Scan").Cells(Target.Row, 5) = Number
                Sheets("Scan").Cells(Target.Row, 7) = SaleRatio
                Sheets("Scan").Cells(Target.Row, 8) = BuyPrice
                Sheets("Scan").Cells(Target.Row, 9) = SKU
                Sheets("Scan").Cells(Target.Row, 10) = CodeJudge
            End If
        End If

End If
End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' \zUA
' 4om8{
' -z`-

INQUEST-PP=macro
