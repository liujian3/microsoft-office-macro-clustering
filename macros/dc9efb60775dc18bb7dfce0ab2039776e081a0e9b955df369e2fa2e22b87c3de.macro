Attribute VB_Name = "Module1"
Option Explicit
 
 Sub GetAWP() 'Get Data From Closed Workbook
   Dim i, j, lastrow As Integer
   Dim OutSH As Worksheet
   Dim wb As Workbook
   Dim sFileName As String
   Application.ScreenUpdating = False ' turn off the screen updating
 
   ' Delete any sheet called "AWP Summary"
   ' Turn off run time errors & delete alert
   Application.DisplayAlerts = False
   On Error Resume Next
      Worksheets("AWP Summary").Delete
   'Add a sheet called "AWP Summary"
      Worksheets.Add().Name = "AWP Summary"
      Windows("").Activate
      Sheets("AWP Summary").Select

   'Set the general folder information here and not have to navigate to the folder
      ChDrive ("C:") 'F: --> \\TANELWSYSAPP\filedrive
      ChDir ("\Users\kim.morris\Downloads") ' \Common 2012\PCIC\AWP
   'Make path selections below
      sFileName = Application.GetOpenFilename
   
   'They have cancelled.
   If sFileName = "False" Then Exit Sub
 
   Set wb = Workbooks.Open(sFileName)
   ' Set wb = Workbooks.Open("f:\Temp\Social Club.xls", True, True)
   ' Set wb = Workbooks.Open(ActiveWorkbook.Path & "\Social Club.xls")
   
   ' the sheet in this workbook to copy to
   Set OutSH = ThisWorkbook.Worksheets("AWP Summary")
   OutSH.Cells.ClearContents
   
   OutSH.Range("A1:X1").Value = Array("Serial #", "Base Job#", "Kit", "Customer", "Model", "Spec Job#", "AUDIT", "SO #", "#", "MRP Start", "Prod Start", "Actual Prod Start", "*Use Part: Supply (JOB)/Demand (SO)* Scissor Stds = mwa", "PROD Comp", "MRP DUE", "To Test", "PDI Goal", "Comp Date", "SHIP TO", "SHIP CONFIRM DATE", "Ship Date", "COMMENTS", "INVOICE #", "AHERN PO #")
 
   ' read data from the source workbook
   For i = 1 To wb.Sheets.Count
     With Sheets(i)
       If Sheets(i).Name <> "RECONFIGURE" And Sheets(i).Name <> "REWORK" And _
          Sheets(i).Name <> "FG ON" And Sheets(i).Name <> "AHERN" And _
          Sheets(i).Name <> "SHIPPED" And Sheets(i).Name <> "INBOUND" And _
          Sheets(i).Name <> "FG'S OFF" And Sheets(i).Name <> "R&D-RBLD" And _
          Sheets(i).Name <> "Las Vegas" Then
       lastrow = .Cells(Rows.Count, "E").End(xlUp).Row
       If lastrow > 1 Then
         For j = 2 To lastrow
           If .Cells(j, 12).Value <> "" Then 'only copy if there is something in Actual Start Col L
              OutSH.Cells(Rows.Count, 5).End(xlUp).Offset(1, -4).Resize(1, 24).Value = .Cells(j, 1).Resize(1, 24).Value
           End If
         Next j
       End If
       End If
     End With
   Next i
  
   wb.Close False ' close the source workbook without saving any changes
   Set wb = Nothing ' free memory
   Application.ScreenUpdating = True ' turn on the screen updating
 End Sub

 Sub CreateJobList()
   Dim i, j, lastrow As Integer
   Dim wsSrc As Worksheet, wsDst As Worksheet
   
   Application.ScreenUpdating = False ' turn off the screen updating
 
   ' Delete any sheet called "Data"
   ' Turn off run time errors & delete alert
   Application.DisplayAlerts = False
   On Error Resume Next
      Worksheets("Data").Delete
   'Add a sheet called "Data"
      Worksheets.Add().Name = "Data"
      Windows("").Activate
      Sheets("Data").Select
    
   ' the sheet in this workbook to copy to
   Set wsDst = ThisWorkbook.Worksheets("Data")
   Set wsSrc = ThisWorkbook.Worksheets("AWP Summary")
   wsDst.Cells.ClearContents
   wsDst.Range("A1:H1").Value = Array("Job#", "FIRMx", "Customer", "Model", "S/N", "MRP Start", "Prod Start", "Actual Prod Start")
 
   ' read data from the source workbook
   lastrow = wsSrc.Cells(Rows.Count, "E").End(xlUp).Row
   j = 2
   For i = 2 To lastrow
     If wsSrc.Range("B" & i).Value <> "" And Left(wsSrc.Range("B" & i).Value, 5) <> "STOCK" And Left(wsSrc.Range("D" & i).Value, 5) <> "STOCK" Then
        wsDst.Range("A" & j).Value = "'" & wsSrc.Range("B" & i).Value
        wsDst.Range("B" & j).Value = "FIRMx"
        wsDst.Range("C" & j).Value = wsSrc.Range("D" & i).Value
        wsDst.Range("D" & j).Value = wsSrc.Range("E" & i).Value
        wsDst.Range("E" & j).Value = wsSrc.Range("A" & i).Value
        wsDst.Range("F" & j).Value = wsSrc.Range("J" & i).Value
        wsDst.Range("G" & j).Value = wsSrc.Range("K" & i).Value
        wsDst.Range("H" & j).Value = wsSrc.Range("L" & i).Value
        j = j + 1
     End If
     If wsSrc.Range("F" & i).Value <> "" And Left(wsSrc.Range("F" & i).Value, 5) <> "STOCK" And Left(wsSrc.Range("D" & i), 5) <> "STOCK" Then
        wsDst.Range("A" & j).Value = "'" & wsSrc.Range("F" & i).Value
        wsDst.Range("B" & j).Value = "FIRMx"
        wsDst.Range("C" & j).Value = wsSrc.Range("D" & i).Value
        wsDst.Range("D" & j).Value = wsSrc.Range("E" & i).Value
        wsDst.Range("E" & j).Value = wsSrc.Range("A" & i).Value
        wsDst.Range("F" & j).Value = wsSrc.Range("J" & i).Value
        wsDst.Range("G" & j).Value = wsSrc.Range("K" & i).Value
        wsDst.Range("H" & j).Value = wsSrc.Range("L" & i).Value
        j = j + 1
     End If
     If wsSrc.Range("H" & i).Value <> "" And Left(wsSrc.Range("H" & i).Value, 5) <> "STOCK" And Left(wsSrc.Range("D" & i), 5) <> "STOCK" Then
        wsDst.Range("A" & j).Value = "'" & wsSrc.Range("H" & i).Value
        wsDst.Range("B" & j).Value = "FIRMx"
        wsDst.Range("C" & j).Value = wsSrc.Range("D" & i).Value
        wsDst.Range("D" & j).Value = wsSrc.Range("E" & i).Value
        wsDst.Range("E" & j).Value = wsSrc.Range("A" & i).Value
        wsDst.Range("F" & j).Value = wsSrc.Range("J" & i).Value
        wsDst.Range("G" & j).Value = wsSrc.Range("K" & i).Value
        wsDst.Range("H" & j).Value = wsSrc.Range("L" & i).Value
        j = j + 1
     End If
   Next i
   wsDst.UsedRange.Columns.AutoFit

   Application.ScreenUpdating = True ' turn on the screen updating
 End Sub

Attribute VB_Name = "Module11"
'Short, RunTotal, and Comment
Sub AJS_Formulas()
    Dim wbData As Workbook
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim LR As Long
    
    Set wb = ActiveWorkbook
    Set ws = wb.Worksheets(1)
    Set Rng = ws.Range("A1")
    LR = ActiveSheet.UsedRange.Rows.Count
        
'SORT DATA
    With ActiveWorkbook.Worksheets(1).Sort
        .SortFields.Clear
        .SortFields.Add Key:=Range("A1:A" & LR), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .SortFields.Add Key:=Range("B1:B" & LR), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .SortFields.Add Key:=Range("C1:C" & LR), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .SortFields.Add Key:=Range("D1:D" & LR), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .SetRange Range("A1:AK" & LR)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'Short Formula
    ws.Range("H2") = "=IF(OR(ISBLANK(J2),J2=""""),0,IF(I2=0,ABS(G2),MIN(ABS(G2),ABS(I2))))"

    'Running Total Formula
    ws.Range("I2") = "=IF(B2<>B1,IF(K2+G2>=0,K2+G2,K2+L2+G2),IF(OR(LEFT(J1,5)=""PAINT"",I1+G2>=0),I1+G2,I1+L2+G2))"

    'Comment Formula
    ws.Range("J2") = "=IF(B2<>B1,IF(K2+G2>=0,"""",IF(L2>0,""PAINT ""&L2,"""")&IF(AND(L2>0,K2+L2+M2<0),"" "","""")&IF((K2+L2+M2)<0,""ORDER ""&ABS(K2+L2+M2),""""))," & _
             "IF(OR((I1+G2)>=0,AND(I1=0,J1<>"""")),J1,IF(L2>0,""PAINT ""&L2,"""")&IF(AND(L2>0,K2+L2+M2<0),"" "","""")&IF((K2+L2+M2)<0,""ORDER ""&ABS(K2+L2+M2),"""")))"
    
    'ExtCost Formula
    ws.Range("W2") = "=H2*V2"

    'Copy Formulas down
    ws.Range("H2:J" & LR).FillDown
    ws.Range("W2:W" & LR).FillDown
    
    'Change all formulas to values
    With ws.Range("H1:J" & LR)
        .Value = .Value
    End With
    With ws.Range("W1:W" & LR)
        .Value = .Value
    End With
    
    'Copy Shorts > 0 to new worksheet
    Range("A1").Select
    Selection.AutoFilter
    ActiveSheet.Range("$A$1:$AL$" & LR).AutoFilter Field:=8, Criteria1:=">0", _
        Operator:=xlAnd
    Range(Selection, Selection.End(xlToRight)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Selection.AutoFilter
    Range("A1").Select

    'Remove columns on New Sheet that are no longer needed
    Columns("A").EntireColumn.Delete
    Columns("F").EntireColumn.Delete
    Columns("G").EntireColumn.Delete
    Columns("H:J").EntireColumn.Delete
    Range("A1").Select
End Sub

'Update FIRM DmdType  After AWP - Job List (List of all Jobs Started - FIRMx) or FIRMx Rush if WKNUM is PastDue
Sub UpdAJSDmdType()
    Dim wbData As Workbook
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim LR As Long
    Dim Path As String
    
    Set wb = ActiveWorkbook
    Set ws = wb.Worksheets("Sheet1")
    Set Rng = ws.Range("A1")
      
    LR = ActiveSheet.UsedRange.Rows.Count

    ws.Range("AG2") = "=IF(N2=""FIRM"",IF(H2=""PastDue"",""FIRMx Rush""," & _
             "IFERROR(VLOOKUP(C2,'[AWP - Job List.xlsm]Data'!$A:$B,2,FALSE),""FIRM"")),N2)"
             
    ws.Range("AG2:AG" & LR).FillDown
    With ws.Range("AG2:AG" & LR)
        .Value = .Value
    End With
    
    ws.Range("AG2:AG" & LR).Copy
    ws.Range("N2:N" & LR).PasteSpecial
    Columns("AG").EntireColumn.Delete
    
    Range("A1").Select
End Sub

'Update Comment with Open PO with Conf Delivery Date and WTD Receipts
Sub UpdAJSDailyData()
    Dim wbData As Workbook
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim LR As Long
    Dim Path As String
    
    Set wb = ActiveWorkbook
    Set ws = wb.Worksheets("Sheet1")
    Set Rng = ws.Range("A1")
    
    On Error GoTo Err_Close
    
    LR = ActiveSheet.UsedRange.Rows.Count
    
    'Open file with exported data
    Path = "F:\Common 2012\IS\_M3 Reports\_M3 Instructions for Creating Reports\_IS Use Only Macros\"
    Set wbData = Workbooks.Open(Path & "_ODBC AJS Daily Data to Update.xlsx")
    wbData.Windows(1).Visible = False
    
    'Comments - Update Open PO Qtys with a Conf Date
    ws.Range("AG2") = "=IFERROR(VLOOKUP(A2,'[_ODBC AJS Daily Data to Update.xlsx]MPLINE sum OnOrder ITNO&CODT'!$A:$D,4,FALSE)" & _
                   "&IF(IFERROR(FIND(""PAINT"",G2),0)>0,""; ""&MID(G2,FIND(""PAINT"",G2),LEN(G2)),""""),G2)"
    ws.Range("AG2:AG" & LR).FillDown
    With ws.Range("AG2:AG" & LR)
        .Value = .Value
    End With
    
    ws.Range("AG2:AG" & LR).Copy
    ws.Range("G2:G" & LR).PasteSpecial
    Columns("AG").EntireColumn.Delete
        
    'WTD Receipts
    ws.Range("I2") = "=IFERROR(VLOOKUP(A2,'F:\Common 2012\IS\_M3 Reports\_M3 Instructions for Creating Reports\_IS Use Only Macros\[_ODBC AJS Daily Data to Update.xlsx]WTD Receipts ITNO & TRQY'!$D:$F,3,FALSE),0)"
    ws.Range("I2:I" & LR).FillDown
    With ws.Range("I2:I" & LR)
        .Value = .Value
    End With

Err_Close:
    'Close Data File
    wbData.Windows(1).Visible = True
    wbData.Close False
    Set wbData = Nothing
    
    Range("A1").Select
End Sub

'Unshare Workbook
Sub UnShareWb()
    Dim wb As Workbook
    Set wb = ActiveWorkbook
    On Error GoTo Err_Close
    wb.ExclusiveAccess
Err_Close:
    'Ignore error is not shared
End Sub

're-share it, use
Sub ShareWb()
    Dim wb As Workbook
    Set wb = ActiveWorkbook
    wb.SaveAs wb.Name, accessmode:=xlShared
End Sub

' Excel VBA to refresh drop-down data in all Pivot Table in all worksheets
Sub PTRefreshList()
   Dim pt As PivotTable
   Dim ws As Worksheet

   For Each ws In ActiveWorkbook.Worksheets
      For Each pt In ws.PivotTables
         pt.PivotCache.MissingItemsLimit = xlMissingItemsNone
         pt.PivotCache.Refresh
      Next pt
   Next ws
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
