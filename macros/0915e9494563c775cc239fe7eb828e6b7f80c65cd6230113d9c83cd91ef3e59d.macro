Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"

Public Function ShowFormula(Cells)
If Left(Cells.Formula, 1) = "=" Then _
    ShowFormula = Cells.Formula _
    Else ShowFormula = ""
End Function

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle711111"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public Sub hide(iRow As Integer, iRowStart As Integer, iRowEnd As Integer, sColumn As String, sColStart As String, sColEnd As String)
  
  Dim intColumn As Integer
  Dim intColStart As Integer
  Dim intColEnd As Integer
  
  On Error GoTo 42
  
  intColumn = getColumnNo(sColumn)
  intColStart = getColumnNo(sColStart)
  intColEnd = getColumnNo(sColEnd)
  
  Application.ScreenUpdating = False
  Cells.EntireRow.Hidden = False
  Cells.EntireColumn.Hidden = False
    
  hideNumeric_Rows Excel.Range(Cells(iRowStart, intColumn), Cells(iRowEnd, intColumn))
  hideNumeric_Cols Excel.Range(Cells(iRow, intColStart), Cells(iRow, intColEnd))
  
  Application.ScreenUpdating = True
  [A1].Select
  Exit Sub
42:
  Application.ScreenUpdating = True
  MsgBox "Fehler beim Ausblenden!"
End Sub
Public Sub show()
  Application.ScreenUpdating = False
  Cells.EntireColumn.Hidden = False
  Cells.EntireRow.Hidden = False
  Application.ScreenUpdating = True
  [A1].Select
End Sub
Private Sub Worksheet_Deactivate()
  crsUIInvalidate
End Sub
Private Sub Worksheet_Activate()
  crsUIInvalidate
End Sub


Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
  crsUIInvalidate
End Sub
Private Sub Worksheet_Deactivate()
  crsUIInvalidate
End Sub
Public Sub hide(sColStart As String, sColEnd As String, iRow As Integer, iRowStart As Integer, _
                iRowEnd As Integer, sCol As String, iRowWidth As Integer)
  
  Dim intColStart As Integer
  Dim intColEnd As Integer
  Dim intColumn As Integer
  
  On Error GoTo 42
  
  intColStart = getColumnNo(sColStart)
  intColEnd = getColumnNo(sColEnd)
  intColumn = getColumnNo(sCol)
  Application.ScreenUpdating = False
  Cells.EntireRow.Hidden = False
  Cells.EntireColumn.Hidden = False
  
  hideNumeric_Rows Excel.Range(Cells(iRowStart, intColumn), Cells(iRowEnd, intColumn))
  hideNumeric_Cols Excel.Range(Cells(iRow, intColStart), Cells(iRow, intColEnd))
  Rows(iRowWidth).EntireRow.Hidden = True
    
  [A1].Select
  Application.ScreenUpdating = True
  Exit Sub
42:
  Application.ScreenUpdating = True
  MsgBox "Fehler beim Ausblenden!"
End Sub
Public Sub adjustWidths(iRow As Integer, sColStart As String, sColEnd As String, _
                        ParamArray vWidth() As Variant)
  Dim intColStart As Integer
  Dim intColEnd As Integer
  Dim i As Integer
  Dim intTotal As Integer
  Dim r As Excel.Range
  Dim rr As Excel.Range
  On Error GoTo 42
  If UBound(vWidth) < 7 Then Exit Sub
  intColStart = getColumnNo(sColStart)
  intColEnd = getColumnNo(sColEnd)
  Set r = Excel.Range(Cells(iRow, intColStart), Cells(iRow, intColEnd))
  Application.ScreenUpdating = False
  On Error Resume Next
  frmProgress.show vbModeless
  intTotal = r.Cells.Count
  For Each rr In r.Cells
    With rr
      If Len(.Value) = 1 Then
        If IsNumeric(.Value) Then
          If Int(.Value) >= 1 And Int(.Value) <= 8 Then
            .ColumnWidth = vWidth(Int(.Value) - 1)
          End If
        End If
      End If
      i = i + 1
      frmProgress.lblProgress = "Bearbeitet: " & i & " von " & intTotal
      DoEvents
    End With
  Next
  Unload frmProgress
  Application.ScreenUpdating = True
  Exit Sub
42:
  Application.ScreenUpdating = True
  MsgBox "Anpassen von Spaltenbreiten fehlgeschlagen"
End Sub
Public Sub show()
  Application.ScreenUpdating = False
  Cells.EntireColumn.Hidden = False
  Cells.EntireRow.Hidden = False
  Application.ScreenUpdating = True
  [A1].Select
End Sub

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle91"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "frmNames"
Attribute VB_Base = "0{EC63384C-8977-41BF-9249-4EE48F89A185}{437F8ABF-2CD4-449E-9374-C7A208C7EDB2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
  Unload Me
End Sub

Private Sub cmdOK_Click()
  attachName
  Unload Me
End Sub

Private Sub lstNames_Change()
  On Error GoTo 42
  If (Len(lstNames.Value) > 0) Then cmdOK.Enabled = True
42:
End Sub

Private Sub lstNames_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  attachName
  Unload Me
End Sub

Private Sub UserForm_Activate()
  Dim N As Excel.Name
  On Error GoTo 42
  With lstNames
    For Each N In ActiveWorkbook.Names
      .AddItem N.Name
    Next
  End With
  cmdOK.Enabled = False
42:
End Sub

Private Sub attachName()
  On Error GoTo 42
  With ActiveCell.Validation
    .Delete
    .Add xlValidateList, _
         xlValidAlertStop, _
         xlBetween, _
         "=" & lstNames.Value
    .IgnoreBlank = True
    .InCellDropdown = True
    .InputTitle = vbNullString
    .ErrorTitle = vbNullString
    .InputMessage = vbNullString
    .ErrorMessage = vbNullString
    .ShowInput = True
    .ShowError = True
  End With
42:
End Sub
Attribute VB_Name = "frmProgress"
Attribute VB_Base = "0{CD09D1CB-449D-4FF4-896A-B9485028B186}{06CD581E-A188-445D-BA0B-927C63FD9E35}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Attribute VB_Name = "frmSettings"
Attribute VB_Base = "0{A8E93205-F3D8-4943-83D9-D78C16487672}{F19D69FD-8CD8-4A05-BBFD-CF9921455001}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public SaveFlag As Boolean
Private mlng_LabelColor As Long

Private Sub cmbOVCat1_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat2_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat3_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat4_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat5_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat6_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat7_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCat8_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbOVCatColE_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVCatColS_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVCatRow_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVCol_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVColE_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVColS_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVRow_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVRowE_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbOVRowS_Change()
  cmdSave.Enabled = True
End Sub

Private Sub cmbPOCol_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbPOColS_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbPOColE_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbPORow_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbPORowS_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmbPORowE_Change()
  cmdSave.Enabled = True
End Sub
Private Sub cmdCancel_Click()
  Unload Me
End Sub

Private Sub cmdOVDefault_Click()
  cmbOVCol.Value = CONST_OVERVIEW_COL
  cmbOVColE.Value = CONST_OVERVIEW_COL_ENDING
  cmbOVColS.Value = CONST_OVERVIEW_COL_STARTING
  cmbOVRowE.Value = CONST_OVERVIEW_ROW_ENDING
  cmbOVRowS.Value = CONST_OVERVIEW_ROW_STARTING
  cmbOVRow.Value = CONST_OVERVIEW_ROW
  
  cmbOVCat1.Value = CONST_OVERVIEW_W1
  cmbOVCat2.Value = CONST_OVERVIEW_W2
  cmbOVCat3.Value = CONST_OVERVIEW_W3
  cmbOVCat4.Value = CONST_OVERVIEW_W4
  cmbOVCat5.Value = CONST_OVERVIEW_W5
  cmbOVCat6.Value = CONST_OVERVIEW_W6
  cmbOVCat7.Value = CONST_OVERVIEW_W7
  cmbOVCat8.Value = CONST_OVERVIEW_W8
  
  cmbOVCatColE.Value = CONST_OVERVIEW_WCOL_ENDING
  cmbOVCatColS.Value = CONST_OVERVIEW_WCOL_STARTING
  cmbOVCatRow.Value = CONST_OVERVIEW_WROW
  
  m_blackOverview
End Sub

Private Sub cmdPODefault_Click()
  cmbPOCol.Value = CONST_PRINTOUT_COL
  cmbPOColE.Value = CONST_PRINTOUT_COL_ENDING
  cmbPOColS.Value = CONST_PRINTOUT_COL_STARTING
  cmbPORowE.Value = CONST_PRINTOUT_ROW_ENDING
  cmbPORowS.Value = CONST_PRINTOUT_ROW_STARTING
  cmbPORow.Value = CONST_PRINTOUT_ROW
  m_blackPrintout
End Sub
Private Sub cmdSave_Click()
  On Error Resume Next
  Dim f As Boolean
  SaveFlag = False
  m_blackPrintout
  If Not isValidCol(cmbPOCol.Value) Then lblPOCol.ForeColor = vbRed: f = True
  If Not isValidRow(cmbPORowS.Value) Then lblPORowS.ForeColor = vbRed: f = True
  If Not isValidRow(cmbPORowE.Value) Then lblPORowE.ForeColor = vbRed: f = True
  If Not isValidRow(cmbPORow.Value) Then lblPORow.ForeColor = vbRed: f = True
  If Not isValidCol(cmbPOColS.Value) Then lblPOColS.ForeColor = vbRed: f = True
  If Not isValidCol(cmbPOColE.Value) Then lblPOColE.ForeColor = vbRed: f = True
  
  m_blackOverview
  If Not isValidCol(cmbOVCol.Value) Then lblOVCol.ForeColor = vbRed: f = True
  If Not isValidRow(cmbOVRowS.Value) Then lblOVRowS.ForeColor = vbRed: f = True
  If Not isValidRow(cmbOVRowE.Value) Then lblOVRowE.ForeColor = vbRed: f = True
  If Not isValidRow(cmbOVRow.Value) Then lblOVRow.ForeColor = vbRed: f = True
  If Not isValidCol(cmbOVColS.Value) Then lblOVColS.ForeColor = vbRed: f = True
  If Not isValidCol(cmbOVColE.Value) Then lblOVColE.ForeColor = vbRed: f = True
  If Not isValidCol(cmbOVCatColE.Value) Then lblOVCatColE.ForeColor = vbRed: f = True
  If Not isValidCol(cmbOVCatColS.Value) Then lblOVCatColS.ForeColor = vbRed: f = True
  If Not isValidRow(cmbOVCatRow.Value) Then lblOVCatRow.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat1.Value) Then lblOVCat1.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat2.Value) Then lblOVCat2.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat3.Value) Then lblOVCat3.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat4.Value) Then lblOVCat4.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat5.Value) Then lblOVCat5.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat6.Value) Then lblOVCat6.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat7.Value) Then lblOVCat7.ForeColor = vbRed: f = True
  If Not isValidColWidth(cmbOVCat8.Value) Then lblOVCat8.ForeColor = vbRed: f = True
  
  If f Then
    MsgBox "Die Einstellungen k|fffd|nnen nicht gespeichert werden, weil einige Werte (rot) unzul|fffd|ssig sind.", vbExclamation + vbOKOnly, Me.Caption
  Else
    Me.hide
    SaveFlag = True
  End If
  
End Sub

Private Sub UserForm_Activate()
  
  lblVersion.Caption = "Tool Version: " & CONST_VERSION
  txtInfo.Text = CONST_INFOTEXT
  cmbPOCol.AddItem CONST_PRINTOUT_COL
  cmbPOColE.AddItem CONST_PRINTOUT_COL_ENDING
  cmbPOColS.AddItem CONST_PRINTOUT_COL_STARTING
  cmbPORowE.AddItem CONST_PRINTOUT_ROW_ENDING
  cmbPORowS.AddItem CONST_PRINTOUT_ROW_STARTING
  cmbPORow.AddItem CONST_PRINTOUT_ROW
  
  cmbOVCol.AddItem CONST_OVERVIEW_COL
  cmbOVColE.AddItem CONST_OVERVIEW_COL_ENDING
  cmbOVColS.AddItem CONST_OVERVIEW_COL_STARTING
  cmbOVRowE.AddItem CONST_OVERVIEW_ROW_ENDING
  cmbOVRowS.AddItem CONST_OVERVIEW_ROW_STARTING
  cmbOVRow.AddItem CONST_OVERVIEW_ROW
  
  cmbOVCat1.AddItem CONST_OVERVIEW_W1
  cmbOVCat2.AddItem CONST_OVERVIEW_W2
  cmbOVCat3.AddItem CONST_OVERVIEW_W3
  cmbOVCat4.AddItem CONST_OVERVIEW_W4
  cmbOVCat5.AddItem CONST_OVERVIEW_W5
  cmbOVCat6.AddItem CONST_OVERVIEW_W6
  cmbOVCat7.AddItem CONST_OVERVIEW_W7
  cmbOVCat8.AddItem CONST_OVERVIEW_W8
  
  cmbOVCatColE.AddItem CONST_OVERVIEW_WCOL_ENDING
  cmbOVCatColS.AddItem CONST_OVERVIEW_WCOL_STARTING
  cmbOVCatRow.AddItem CONST_OVERVIEW_WROW
  
  cmdSave.Enabled = False
  
  SaveFlag = False
  
  mlng_LabelColor = lblOVCatColE.ForeColor
  
End Sub
Private Sub m_blackPrintout()
  On Error Resume Next
  lblPOCol.ForeColor = mlng_LabelColor
  lblPORowS.ForeColor = mlng_LabelColor
  lblPORowE.ForeColor = mlng_LabelColor
  lblPORow.ForeColor = mlng_LabelColor
  lblPOColS.ForeColor = mlng_LabelColor
  lblPOColE.ForeColor = mlng_LabelColor
End Sub
Private Sub m_blackOverview()
  On Error Resume Next
  lblOVCol.ForeColor = mlng_LabelColor
  lblOVRowS.ForeColor = mlng_LabelColor
  lblOVRowE.ForeColor = mlng_LabelColor
  lblOVRow.ForeColor = mlng_LabelColor
  lblOVColS.ForeColor = mlng_LabelColor
  lblOVColE.ForeColor = mlng_LabelColor
  lblOVCatColE.ForeColor = mlng_LabelColor
  lblOVCatColS.ForeColor = mlng_LabelColor
  lblOVCatRow.ForeColor = mlng_LabelColor
  lblOVCat1.ForeColor = mlng_LabelColor
  lblOVCat2.ForeColor = mlng_LabelColor
  lblOVCat3.ForeColor = mlng_LabelColor
  lblOVCat4.ForeColor = mlng_LabelColor
  lblOVCat5.ForeColor = mlng_LabelColor
  lblOVCat6.ForeColor = mlng_LabelColor
  lblOVCat7.ForeColor = mlng_LabelColor
  lblOVCat8.ForeColor = mlng_LabelColor
End Sub
Attribute VB_Name = "modHyperlink"
Option Explicit

Public Sub modHyperlink()

Dim objZelle As Object
Dim rngBereich As Range

Dim objZelleAendern As Object
Dim rngBereichAendern As Range
Dim strFormel As String
Dim intLaenge As Integer
Dim Fertig As Boolean
Dim intI As Integer
Dim strInhalt As String
Dim strTemp As String

intI = 131
Set rngBereichAendern = Range("T131", "T979")
Set rngBereich = Range("D131", "D979")



For Each objZelle In rngBereich

    'MsgBox objZelle.Value
    strFormel = ""
    strFormel = objZelle.FormulaLocal
    intLaenge = Len(strFormel)
    strFormel = Right(strFormel, intLaenge - 1)
    
    Set rngBereichAendern = Range("T" & intI, "T979")
    For Each objZelleAendern In rngBereichAendern
    If Fertig = True Then Exit For
    If objZelleAendern.Value = "" Or IsNull(objZelleAendern.Value) = True Then
        strInhalt = strTemp
        strInhalt = ""
        strInhalt = """"
        strInhalt = strInhalt & strTemp
        strInhalt = strInhalt & """"
    Else
        strInhalt = ""
        strInhalt = """"
        strInhalt = strInhalt & CStr(objZelleAendern.Value)
        strInhalt = strInhalt & """"
        strTemp = CStr(objZelleAendern.Value)
    End If
        strFormel = "=HYPERLINK(""#""&""" & strFormel & """" & ";" & strInhalt & ")"
        objZelleAendern.FormulaLocal = strFormel
        Fertig = True
        intI = intI + 1
    Next objZelleAendern
    Fertig = False
Next objZelle


End Sub
Attribute VB_Name = "modMain"
Option Explicit

' =============================================================================
' Version & Informationstext
' =============================================================================

Public Const CONST_VERSION = "11 FEB 2014"
Public Const CONST_INFOTEXT = "Dieses Tool zur Berechnung von klinischen Kosten ist Eigentum der CRS Clinical Research Services Andernach GmbH." & vbNewLine & _
                              "Kontakt: David Surjo (david.surjo@crs-group.de)"

' =============================================================================
' Standardwerte
' =============================================================================

' Printout / Ausblenden
Public Const CONST_PRINTOUT_ROW_STARTING = 16
Public Const CONST_PRINTOUT_ROW_ENDING = 850
Public Const CONST_PRINTOUT_COL = "B" '2

Public Const CONST_PRINTOUT_ROW = 1
Public Const CONST_PRINTOUT_COL_STARTING = "A" '1
Public Const CONST_PRINTOUT_COL_ENDING = "R" '18

' Overview / Ausblenden
Public Const CONST_OVERVIEW_COL_STARTING = "A" '1
Public Const CONST_OVERVIEW_COL_ENDING = "IB" '236
Public Const CONST_OVERVIEW_ROW = 100

Public Const CONST_OVERVIEW_ROW_STARTING = 6
Public Const CONST_OVERVIEW_COL = "IB" ' 236
Public Const CONST_OVERVIEW_ROW_ENDING = 100

' Overview / Breiten nach Kategorien (Einheit: Zeichen; max 255!)
Public Const CONST_OVERVIEW_W1 = 1
Public Const CONST_OVERVIEW_W2 = 2
Public Const CONST_OVERVIEW_W3 = 3
Public Const CONST_OVERVIEW_W4 = 4
Public Const CONST_OVERVIEW_W5 = 5
Public Const CONST_OVERVIEW_W6 = 6
Public Const CONST_OVERVIEW_W7 = 7
Public Const CONST_OVERVIEW_W8 = 8

' Overview / Breiten > Zeile/Spalten mit Kategorien
Public Const CONST_OVERVIEW_WROW = 101
Public Const CONST_OVERVIEW_WCOL_STARTING = "A" '1
Public Const CONST_OVERVIEW_WCOL_ENDING = "IB" '236

' =============================================================================
' Variablen
' =============================================================================

Private mint_PrintoutRow As Integer
Private mint_PrintoutRowStart As Integer
Private mint_PrintoutRowEnd As Integer
Private mstr_PrintoutColStart As String
Private mstr_PrintoutColEnd As String
Private mstr_PrintoutCol As String

Private mstr_OverviewColStart As String
Private mstr_OverviewColEnd As String
Private mint_OverviewRow As Integer
Private mint_OverviewRowStart As Integer
Private mint_OverviewRowEnd As Integer
Private mstr_OverviewCol As String

Private mint_OverviewW1 As Integer
Private mint_OverviewW2 As Integer
Private mint_OverviewW3 As Integer
Private mint_OverviewW4 As Integer
Private mint_OverviewW5 As Integer
Private mint_OverviewW6 As Integer
Private mint_OverviewW7 As Integer
Private mint_OverviewW8 As Integer
Private mint_OverviewWRow As Integer
Private mstr_OverviewWColS As String
Private mstr_OverviewWColE As String

' =============================================================================
' UI
' =============================================================================
Private mobjRibbon As IRibbonUI
' How it works:
'   Cells to be hidden should contain a numeric value (e.g., 1 or 0)
'   Cells to be kept visible should contain a non-numeric value (e.g., "FALSE" or "TRUE" or "SHOW")
Public Sub hideNumeric_Rows(oRange As Excel.Range)
  On Error Resume Next
  With oRange
    .SpecialCells(xlCellTypeFormulas, xlNumbers).Rows.Hidden = True
    .SpecialCells(xlCellTypeConstants, xlNumbers).Rows.Hidden = True
  End With
End Sub
' How it works:
'   Cells to be hidden should contain a numeric value (e.g., 1 or 0)
'   Cells to be kept visible should contain a non-numeric value (e.g., "FALSE" or "TRUE" or "SHOW")
Public Sub hideNumeric_Cols(oRange As Excel.Range)
  On Error Resume Next
  With oRange
    .SpecialCells(xlCellTypeFormulas, xlNumbers).Columns.Hidden = True
    .SpecialCells(xlCellTypeConstants, xlNumbers).Columns.Hidden = True
  End With
End Sub
Public Function isValidCol(sColumn As String) As Boolean
  On Error Resume Next
  isValidCol = (getColumnNo(sColumn) > 0)
End Function
Public Function isValidRow(sRow As String) As Boolean
  On Error Resume Next
  isValidRow = (Range("A" & sRow).Column > 0)
End Function
Public Function isValidColWidth(sWidth As String) As Boolean
  On Error GoTo 42
  Dim i As Integer
  i = Int(sWidth)
  isValidColWidth = (i > 0 And i <= 255)
42:
End Function
Public Property Get getColumnNo(sColumn As String) As Integer
  On Error Resume Next
  getColumnNo = Range(sColumn & "1").Column
End Property

Private Sub doSettingsDialog()
  On Error GoTo 42
  Load frmSettings
  With frmSettings
    .cmbOVCat1.Value = mint_OverviewW1
    .cmbOVCat2.Value = mint_OverviewW2
    .cmbOVCat3.Value = mint_OverviewW3
    .cmbOVCat4.Value = mint_OverviewW4
    .cmbOVCat5.Value = mint_OverviewW5
    .cmbOVCat6.Value = mint_OverviewW6
    .cmbOVCat7.Value = mint_OverviewW7
    .cmbOVCat8.Value = mint_OverviewW8
    .cmbOVCatColE.Value = mstr_OverviewWColE
    .cmbOVCatColS.Value = mstr_OverviewWColS
    .cmbOVCatRow.Value = mint_OverviewWRow
    .cmbOVCol.Value = mstr_OverviewCol
    .cmbOVColE.Value = mstr_OverviewColEnd
    .cmbOVColS.Value = mstr_OverviewColStart
    .cmbOVRow.Value = mint_OverviewRow
    .cmbOVRowE.Value = mint_OverviewRowEnd
    .cmbOVRowS.Value = mint_OverviewRowStart
    .cmbPOCol.Value = mstr_PrintoutCol
    .cmbPOColS.Value = mstr_PrintoutColStart
    .cmbPOColE.Value = mstr_PrintoutColEnd
    .cmbPORow.Value = mint_PrintoutRow
    .cmbPORowS.Value = mint_PrintoutRowStart
    .cmbPORowE.Value = mint_PrintoutRowEnd
    .show
    If .SaveFlag Then
      mint_OverviewW1 = Int(.cmbOVCat1.Value)
      mint_OverviewW2 = Int(.cmbOVCat2.Value)
      mint_OverviewW3 = Int(.cmbOVCat3.Value)
      mint_OverviewW4 = Int(.cmbOVCat4.Value)
      mint_OverviewW5 = Int(.cmbOVCat5.Value)
      mint_OverviewW6 = Int(.cmbOVCat6.Value)
      mint_OverviewW7 = Int(.cmbOVCat7.Value)
      mint_OverviewW8 = Int(.cmbOVCat8.Value)
      mstr_OverviewWColE = .cmbOVCatColE.Value
      mstr_OverviewWColS = .cmbOVCatColS.Value
      mint_OverviewWRow = Int(.cmbOVCatRow.Value)
      mstr_OverviewCol = .cmbOVCol.Value
      mstr_OverviewColEnd = .cmbOVColE.Value
      mstr_OverviewColStart = .cmbOVColS.Value
      mint_OverviewRow = Int(.cmbOVRow.Value)
      mint_OverviewRowEnd = Int(.cmbOVRowE.Value)
      mint_OverviewRowStart = Int(.cmbOVRowS.Value)
      mstr_PrintoutCol = .cmbPOCol.Value
      mstr_PrintoutColStart = .cmbPOColS.Value
      mstr_PrintoutColEnd = .cmbPOColE.Value
      mint_PrintoutRow = Int(.cmbPORow.Value)
      mint_PrintoutRowStart = Int(.cmbPORowS.Value)
      mint_PrintoutRowEnd = Int(.cmbPORowE.Value)
      saveProperties
    End If
  End With
42:
  Unload frmSettings
End Sub
Private Sub defaultProperties()
  
  mint_PrintoutRow = CONST_PRINTOUT_ROW
  mint_PrintoutRowStart = CONST_PRINTOUT_ROW_STARTING
  mint_PrintoutRowEnd = CONST_PRINTOUT_ROW_ENDING
  mstr_PrintoutColStart = CONST_PRINTOUT_COL_STARTING
  mstr_PrintoutColEnd = CONST_PRINTOUT_COL_ENDING
  mstr_PrintoutCol = CONST_PRINTOUT_COL
  
  mstr_OverviewColStart = CONST_OVERVIEW_COL_STARTING
  mstr_OverviewColEnd = CONST_OVERVIEW_COL_ENDING
  mint_OverviewRow = CONST_OVERVIEW_ROW
  mint_OverviewRowStart = CONST_OVERVIEW_ROW_STARTING
  mint_OverviewRowEnd = CONST_OVERVIEW_ROW_ENDING
  mstr_OverviewCol = CONST_OVERVIEW_COL
  
  mint_OverviewW1 = CONST_OVERVIEW_W1
  mint_OverviewW2 = CONST_OVERVIEW_W2
  mint_OverviewW3 = CONST_OVERVIEW_W3
  mint_OverviewW4 = CONST_OVERVIEW_W4
  mint_OverviewW5 = CONST_OVERVIEW_W5
  mint_OverviewW6 = CONST_OVERVIEW_W6
  mint_OverviewW7 = CONST_OVERVIEW_W7
  mint_OverviewW8 = CONST_OVERVIEW_W8
  mint_OverviewWRow = CONST_OVERVIEW_WROW
  mstr_OverviewWColS = CONST_OVERVIEW_WCOL_STARTING
  mstr_OverviewWColE = CONST_OVERVIEW_WCOL_ENDING
  
End Sub

Private Sub loadProperties()
  Dim dp As office.DocumentProperties
  Set dp = ActiveWorkbook.CustomDocumentProperties
  On Error Resume Next
  
  defaultProperties
  
  mint_PrintoutRow = dp("crsPO_R").Value
  mint_PrintoutRowStart = dp("crsPO_RS").Value
  mint_PrintoutRowEnd = dp("crsPO_RE").Value
  mstr_PrintoutColStart = dp("crsPO_CS").Value
  mstr_PrintoutColEnd = dp("crsPO_CE").Value
  mstr_PrintoutCol = dp("crsPO_C").Value
  
  mstr_OverviewColStart = dp("crsOV_CS").Value
  mstr_OverviewColEnd = dp("crsOV_CE").Value
  mint_OverviewRow = dp("crsOV_R").Value
  mint_OverviewRowStart = dp("crsOV_RS").Value
  mint_OverviewRowEnd = dp("crsOV_RE").Value
  mstr_OverviewCol = dp("crsOV_C").Value
  
  mint_OverviewW1 = dp("crsOV_W1").Value
  mint_OverviewW2 = dp("crsOV_W2").Value
  mint_OverviewW3 = dp("crsOV_W3").Value
  mint_OverviewW4 = dp("crsOV_W4").Value
  mint_OverviewW5 = dp("crsOV_W5").Value
  mint_OverviewW6 = dp("crsOV_W6").Value
  mint_OverviewW7 = dp("crsOV_W7").Value
  mint_OverviewW8 = dp("crsOV_W8").Value
  mint_OverviewWRow = dp("crsOV_WR").Value
  mstr_OverviewWColS = dp("crsOV_WCS").Value
  mstr_OverviewWColE = dp("crsOV_WCE").Value
  
  If mint_PrintoutRow < 1 Then mint_PrintoutRow = CONST_PRINTOUT_ROW
  If mint_PrintoutRowStart < 1 Then mint_PrintoutRowStart = CONST_PRINTOUT_ROW_STARTING
  If mint_PrintoutRowEnd < 1 Then mint_PrintoutRowEnd = CONST_PRINTOUT_ROW_ENDING
  If Not isValidCol(mstr_PrintoutColStart) Then mstr_PrintoutColStart = CONST_PRINTOUT_COL_STARTING
  If Not isValidCol(mstr_PrintoutColEnd) Then mstr_PrintoutColEnd = CONST_PRINTOUT_COL_ENDING
  If Not isValidCol(mstr_PrintoutCol) Then mstr_PrintoutCol = CONST_PRINTOUT_COL
  
  If Not isValidCol(mstr_OverviewColStart) Then mstr_OverviewColStart = CONST_OVERVIEW_COL_STARTING
  If Not isValidCol(mstr_OverviewColEnd) Then mstr_OverviewColEnd = CONST_OVERVIEW_COL_ENDING
  If mint_OverviewRow < 1 Then mint_OverviewRow = CONST_OVERVIEW_ROW
  If mint_OverviewRowStart < 1 Then mint_OverviewRowStart = CONST_OVERVIEW_ROW_STARTING
  If mint_OverviewRowEnd < 1 Then mint_OverviewRowEnd = CONST_OVERVIEW_ROW_ENDING
  If Not isValidCol(mstr_OverviewCol) Then mstr_OverviewCol = CONST_OVERVIEW_COL
  
  If mint_OverviewW1 < 1 Or mint_OverviewW1 > 255 Then mint_OverviewW1 = CONST_OVERVIEW_W1
  If mint_OverviewW2 < 1 Or mint_OverviewW2 > 255 Then mint_OverviewW2 = CONST_OVERVIEW_W2
  If mint_OverviewW3 < 1 Or mint_OverviewW3 > 255 Then mint_OverviewW3 = CONST_OVERVIEW_W3
  If mint_OverviewW4 < 1 Or mint_OverviewW4 > 255 Then mint_OverviewW4 = CONST_OVERVIEW_W4
  If mint_OverviewW5 < 1 Or mint_OverviewW5 > 255 Then mint_OverviewW5 = CONST_OVERVIEW_W5
  If mint_OverviewW6 < 1 Or mint_OverviewW6 > 255 Then mint_OverviewW6 = CONST_OVERVIEW_W6
  If mint_OverviewW7 < 1 Or mint_OverviewW7 > 255 Then mint_OverviewW7 = CONST_OVERVIEW_W7
  If mint_OverviewW8 < 1 Or mint_OverviewW8 > 255 Then mint_OverviewW8 = CONST_OVERVIEW_W8
    
  If mint_OverviewWRow < 1 Then mint_OverviewWRow = CONST_OVERVIEW_WROW
  If Not isValidCol(mstr_OverviewWColS) Then mstr_OverviewWColS = CONST_OVERVIEW_WCOL_STARTING
  If Not isValidCol(mstr_OverviewWColE) Then mstr_OverviewWColE = CONST_OVERVIEW_WCOL_ENDING
  
End Sub

Private Sub saveProperties()
  Dim dp As office.DocumentProperties
  Set dp = ActiveWorkbook.CustomDocumentProperties
  On Error Resume Next
  
  If mint_PrintoutRow < 1 Then mint_PrintoutRow = CONST_PRINTOUT_ROW
  If mint_PrintoutRowStart < 1 Then mint_PrintoutRowStart = CONST_PRINTOUT_ROW_STARTING
  If mint_PrintoutRowEnd < 1 Then mint_PrintoutRowEnd = CONST_PRINTOUT_ROW_ENDING
  If Not isValidCol(mstr_PrintoutColStart) Then mstr_PrintoutColStart = CONST_PRINTOUT_COL_STARTING
  If Not isValidCol(mstr_PrintoutColEnd) Then mstr_PrintoutColEnd = CONST_PRINTOUT_COL_ENDING
  If Not isValidCol(mstr_PrintoutCol) Then mstr_PrintoutCol = CONST_PRINTOUT_COL
  
  If Not isValidCol(mstr_OverviewColStart) Then mstr_OverviewColStart = CONST_OVERVIEW_COL_STARTING
  If Not isValidCol(mstr_OverviewColEnd) Then mstr_OverviewColEnd = CONST_OVERVIEW_COL_ENDING
  If mint_OverviewRow < 1 Then mint_OverviewRow = CONST_OVERVIEW_ROW
  If mint_OverviewRowStart < 1 Then mint_OverviewRowStart = CONST_OVERVIEW_ROW_STARTING
  If mint_OverviewRowEnd < 1 Then mint_OverviewRowEnd = CONST_OVERVIEW_ROW_ENDING
  If Not isValidCol(mstr_OverviewCol) Then mstr_OverviewCol = CONST_OVERVIEW_COL
  
  If mint_OverviewW1 < 1 Or mint_OverviewW1 > 255 Then mint_OverviewW1 = CONST_OVERVIEW_W1
  If mint_OverviewW2 < 1 Or mint_OverviewW2 > 255 Then mint_OverviewW2 = CONST_OVERVIEW_W2
  If mint_OverviewW3 < 1 Or mint_OverviewW3 > 255 Then mint_OverviewW3 = CONST_OVERVIEW_W3
  If mint_OverviewW4 < 1 Or mint_OverviewW4 > 255 Then mint_OverviewW4 = CONST_OVERVIEW_W4
  If mint_OverviewW5 < 1 Or mint_OverviewW5 > 255 Then mint_OverviewW5 = CONST_OVERVIEW_W5
  If mint_OverviewW6 < 1 Or mint_OverviewW6 > 255 Then mint_OverviewW6 = CONST_OVERVIEW_W6
  If mint_OverviewW7 < 1 Or mint_OverviewW7 > 255 Then mint_OverviewW7 = CONST_OVERVIEW_W7
  If mint_OverviewW8 < 1 Or mint_OverviewW8 > 255 Then mint_OverviewW8 = CONST_OVERVIEW_W8
    
  If mint_OverviewWRow < 1 Then mint_OverviewWRow = CONST_OVERVIEW_WROW
  If Not isValidCol(mstr_OverviewWColS) Then mstr_OverviewWColS = CONST_OVERVIEW_WCOL_STARTING
  If Not isValidCol(mstr_OverviewWColE) Then mstr_OverviewWColE = CONST_OVERVIEW_WCOL_ENDING
  
  cleanProperties dp
  
  With dp
    .Add "crsPO_R", False, msoPropertyTypeNumber, mint_PrintoutRow
    .Add "crsPO_RS", False, msoPropertyTypeNumber, mint_PrintoutRowStart
    .Add "crsPO_RE", False, msoPropertyTypeNumber, mint_PrintoutRowEnd
    .Add "crsPO_CS", False, msoPropertyTypeString, mstr_PrintoutColStart
    .Add "crsPO_CE", False, msoPropertyTypeString, mstr_PrintoutColEnd
    .Add "crsPO_C", False, msoPropertyTypeString, mstr_PrintoutCol
    
    .Add "crsOV_CS", False, msoPropertyTypeString, mstr_OverviewColStart
    .Add "crsOV_CE", False, msoPropertyTypeString, mstr_OverviewColEnd
    .Add "crsOV_R", False, msoPropertyTypeNumber, mint_OverviewRow
    .Add "crsOV_RS", False, msoPropertyTypeNumber, mint_OverviewRowStart
    .Add "crsOV_RE", False, msoPropertyTypeNumber, mint_OverviewRowEnd
    .Add "crsOV_C", False, msoPropertyTypeString, mstr_OverviewCol
    
    .Add "crsOV_W1", False, msoPropertyTypeNumber, mint_OverviewW1
    .Add "crsOV_W2", False, msoPropertyTypeNumber, mint_OverviewW2
    .Add "crsOV_W3", False, msoPropertyTypeNumber, mint_OverviewW3
    .Add "crsOV_W4", False, msoPropertyTypeNumber, mint_OverviewW4
    .Add "crsOV_W5", False, msoPropertyTypeNumber, mint_OverviewW5
    .Add "crsOV_W6", False, msoPropertyTypeNumber, mint_OverviewW6
    .Add "crsOV_W7", False, msoPropertyTypeNumber, mint_OverviewW7
    .Add "crsOV_W8", False, msoPropertyTypeNumber, mint_OverviewW8
    .Add "crsOV_WR", False, msoPropertyTypeNumber, mint_OverviewWRow
    .Add "crsOV_WCS", False, msoPropertyTypeString, mstr_OverviewWColS
    .Add "crsOV_WCE", False, msoPropertyTypeString, mstr_OverviewWColE
  End With
End Sub
Private Sub cleanProperties(oProperties As office.DocumentProperties)
  Dim p As office.DocumentProperty
  On Error Resume Next
  For Each p In oProperties
    p.Delete
  Next
End Sub
Sub crsUIOnload(ByVal ribbon As IRibbonUI)
  On Error Resume Next
  Set mobjRibbon = ribbon
End Sub
Sub crsUIInvalidate()
  On Error Resume Next
  mobjRibbon.Invalidate
End Sub
Sub crsUIGetEnabled(control As IRibbonControl, ByRef returnedVal)
  On Error GoTo 42
  returnedVal = False
  With control
    If .ID Like "ui_CRSCPPrintout*" Then
      If ActiveSheet.CodeName = "Tabelle711111" Then returnedVal = True
    ElseIf .ID Like "ui_CRSCPOverview*" Then
      If ActiveSheet.CodeName = "Tabelle8" Then returnedVal = True
    End If
  End With
42:
End Sub
Sub crsDispatcher(control As IRibbonControl)
  On Error GoTo 42
  Select Case control.ID
    Case "ui_CRSCPPrintoutShow"
      If ActiveSheet.CodeName = "Tabelle711111" Then Tabelle711111.show
    Case "ui_CRSCPPrintoutHide"
      If ActiveSheet.CodeName = "Tabelle711111" Then
        loadProperties
        Tabelle711111.hide mint_PrintoutRow, _
                           mint_PrintoutRowStart, _
                           mint_PrintoutRowEnd, _
                           mstr_PrintoutCol, _
                           mstr_PrintoutColStart, _
                           mstr_PrintoutColEnd
      End If
    Case "ui_CRSCPOverviewShow"
      If ActiveSheet.CodeName = "Tabelle8" Then Tabelle8.show
    Case "ui_CRSCPOverviewHide"
      If ActiveSheet.CodeName = "Tabelle8" Then
        loadProperties
        Tabelle8.hide mstr_OverviewColStart, _
                      mstr_OverviewColEnd, _
                      mint_OverviewRow, _
                      mint_OverviewRowStart, _
                      mint_OverviewRowEnd, _
                      mstr_OverviewCol, _
                      mint_OverviewWRow
      End If
    Case "ui_CRSCPOverviewWidth"
      If ActiveSheet.CodeName = "Tabelle8" Then
        loadProperties
        Tabelle8.adjustWidths mint_OverviewWRow, _
                              mstr_OverviewWColS, _
                              mstr_OverviewWColE, _
                              mint_OverviewW1, _
                              mint_OverviewW2, _
                              mint_OverviewW3, _
                              mint_OverviewW4, _
                              mint_OverviewW5, _
                              mint_OverviewW6, _
                              mint_OverviewW7, _
                              mint_OverviewW8
      End If
    Case "ui_CRSCPSettings"
      loadProperties
      doSettingsDialog
    Case "ui_CRSCPDD"
      frmNames.show
  End Select
42:
End Sub



INQUEST-PP=macro
