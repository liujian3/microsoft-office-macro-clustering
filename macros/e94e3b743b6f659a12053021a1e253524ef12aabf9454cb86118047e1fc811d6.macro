Attribute VB_Name = "Chart1"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub Create_Scenario_Table()

'Written by Rick Wienrank 8/7/2003
'Dimension Variables

Dim StartRow As Double          'Define first row for scenario table
Dim EndRow As Double            'Define end row for clearing old scenario table
Dim EndCol As Double            'Define last column of scenario table
Dim NewRows As Double           'Define how many rows in new scenario table
Dim HighVal As Double           'Define high share price for scenario table
Dim LowVal As Double            'Define low share price for scenario table
Dim Increment As Double         'Define increments between low and high share price _
                                    for scenario table
ActiveSheet.Unprotect password:="fin123Train**"

Application.ScreenUpdating = False
'Sheet1.Unprotect
CurrentCell = ActiveCell.Address
CurrentSheet = ActiveSheet.Name

'Grabs Scenario High and Low boundries for scenario table and calculates number _
        for the table.  Performs error checking.
HighVal = Range("vba_high")
LowVal = Range("vba_low")
Increment = Range("vba_increment")

If HighVal < LowVal Then
    MsgBox "High value for stock price at option expiry range" _
        & Chr(13) & "must be great than or equal to lower value for range."
    Range("vba_high").Select
    Exit Sub
End If

If HighVal = LowVal Then
    NewRows = 0
Else
    If Increment > HighVal - LowVal Then
        MsgBox "Stock price increment must be less than or equal to the high value of the range" _
        & Chr(13) & "minus the low value of the range."
        Range("vba_increment").Select
        Exit Sub
    Else
        If Increment = 0 Then
            NewRows = 0
            MsgBox "Increment is set to zero - only low stock price scenario will be calculated"
        Else
            If Increment < 0 Then
                MsgBox "Increment must be zero or greater"
                Range("vba_increment").Select
                Exit Sub
            Else
            NewRows = Application.WorksheetFunction.RoundUp((HighVal - LowVal) / Increment, 0)
            End If
        End If
    End If
End If
    
'Clears Previous Scenario Table
StartRow = Range("vba_Scen_start").Row
EndCol = Range("vba_endcol").Column
Range("vba_scen_start").Select
If ActiveCell.Offset(1, 0) <> "" Then
    ActiveCell.End(xlDown).Select
    EndRow = ActiveCell.Row
    Range("vba_scen_start").Select
    Range(ActiveCell.Offset(1, 0), ActiveCell.Offset(EndRow - StartRow, EndCol)).Clear
Else
End If

'Creates Scenario Table
Range("vba_scen_start").Select
ActiveCell.Value = LowVal

For i = 1 To NewRows
    If LowVal + Increment * i > HighVal Then
        ActiveCell.Offset(i, 0).Value = HighVal
    Else
        ActiveCell.Offset(i, 0).Value = LowVal + Increment * i
    End If
Next i

If NewRows <> 0 Then
    Range("vba_scen_start").Copy
    Range("vba_scen_start", ActiveCell.Offset(NewRows, 0)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
            SkipBlanks:=False, Transpose:=False
    
    Range(ActiveCell.Offset(0, 1), ActiveCell.Offset(NewRows, EndCol - 1)).FillDown
Else
End If

'Creates Ranges to be Used in Profit Diagram
Range("vba_scen_start").Select
ActiveWorkbook.Names.Add Name:="Xdata", RefersToR1C1:=Range(ActiveCell.Offset(0, 0), ActiveCell.Offset(NewRows, 0))
Range("vba_scen_start").Select
ActiveWorkbook.Names.Add Name:="Ydata", RefersToR1C1:=Range(ActiveCell.Offset(0, EndCol - 1), ActiveCell.Offset(NewRows, EndCol - 1))


Sheets(CurrentSheet).Select
'Call ProtectionSwitch
Application.ScreenUpdating = True
Range("vba_scen_start").Select
Range(CurrentCell).Select

ActiveSheet.Protect password:="fin123Train**"
End Sub

Sub ProtectionSwitch()
    If Range("vba_protect") = True Then
        Sheet1.Protect
    Else
        Sheet1.Unprotect
    End If
    
End Sub


Attribute VB_Name = "Module2"
Sub payoff()
Attribute payoff.VB_Description = "Macro recorded 10/28/2010 by manishs"
Attribute payoff.VB_ProcData.VB_Invoke_Func = " \n14"
'
' payoff Macro
' Macro recorded 10/28/2010 by manishs
'

'
    Sheets("Payoff Diagram").Select
End Sub
Sub Button1_Click()
Sheets("Strategy inputs").Select
End Sub
Attribute VB_Name = "Module3"
Sub Macro1()
Attribute Macro1.VB_Description = "Macro recorded 11/3/2010 by manishs"
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
' Macro recorded 11/3/2010 by manishs
'

'
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
