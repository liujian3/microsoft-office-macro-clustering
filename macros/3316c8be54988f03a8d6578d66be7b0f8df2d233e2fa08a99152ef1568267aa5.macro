Attribute VB_Name = "Module1"
Public Accepted As Boolean
Public DocSelected
Public Internal

Sub RunBook()
Application.EnableEvents = False
Application.ScreenUpdating = False

'First ensure that file is not a template file and macro has not been run
If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("This is the template file. Please upload to EDX and export against an investment.")
Exit Sub
End If

If Sheets("Sheet4").Range("ActiveSheet").Value = "Active" Then
MsgBox ("This workbook has been activated already.")
Exit Sub
End If

If Sheets("Sheet4").Range("MultipleInv").Value = "Multiple" Then
MsgBox ("This workbook has been exported against multiple investments. Please select 1 investment and try again.")
Exit Sub
End If


'master macro to set up workbook
    Sheets("FY19 Ledger").Visible = True
    Sheets("FY20 Ledger").Visible = True
    Sheets("FY21 Ledger").Visible = True
'    Worksheets("FY20 Ledger").Unprotect
    Call SetUpBook
    Call PopulateFS
    Call HideCondensed
    Call ReadLCC
    Sheets("FY21 Ledger").Activate
    Worksheets("FY19 Ledger").Protect UserInterfaceOnly:=True
    Worksheets("FY20 Ledger").Protect UserInterfaceOnly:=True
    Worksheets("FY21 Ledger").Protect UserInterfaceOnly:=True
    Worksheets("eCPIC Table Export").Protect UserInterfaceOnly:=True
    Worksheets("eCPIC Table Preview").Protect UserInterfaceOnly:=True
    Range("ActiveSheet").Value = "Active"

'Sheets("FY20 Ledger").Shapes("Button 10").Visible = False
Sheets("Home").Visible = False
Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub

Sub AddRow()

Dim Row As Integer
Dim ws As Worksheet
'determine worksheet user is clicking from
Set ws = ActiveSheet
ws.Protect UserInterfaceOnly:=True

'ensure file is not template file
If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("Template")
Exit Sub
End If

'If Range("TemplateCheck").Value = "Template" Then
'Exit Sub
'End If

Row = ws.Range("L1").Value

With ws.Range("B" & Row & ":K" & Row).Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
        
    End With


ws.Range("B" & Row & ":K" & Row).Borders.LineStyle = xlContinuous
    
    
ws.Range("B" & Row & ":K" & Row).Locked = False
ws.Range("B" & Row & ":K" & Row).FormulaHidden = False
ws.Range("E" & Row).Locked = True

ws.Range("L1").Value = Row + 1
ws.Range("B" & Row).Activate


End Sub

Sub RemoveRow()
Dim ws As Worksheet
'determine worksheet user is clicking from
Set ws = ActiveSheet
ws.Protect UserInterfaceOnly:=True

Dim Row As Integer
If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("Template")
Exit Sub
End If

Row = ws.Range("L1").Value - 1
If Row <= 3 Then
Exit Sub
End If

ws.Range("B" & Row & ":C" & Row).ClearContents
ws.Range("D" & Row).ClearContents
ws.Range("F" & Row & ":J" & Row).ClearContents


With ws.Range("B" & Row & ":K" & Row).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.399975585192419
        .PatternTintAndShade = 0
    End With
ws.Range("B" & Row & ":K" & Row).Borders.LineStyle = xlNone
ws.Range("B" & Row - 1 & ":K" & Row - 1).Borders(xlEdgeBottom).LineStyle = xlContinuous


ws.Range("B" & Row & ":K" & Row).Locked = True
ws.Range("B" & Row & ":K" & Row).FormulaHidden = False
ws.Range("L1").Value = Row


End Sub

Sub PopulateFS()

Dim FSRow As Integer
Dim c As Range
Dim YearCol As Integer




'this macro is used to populate the FS comparison table in each tab

'loop through each ledger tab to configure the tables identically for each
vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))
        
        'Pull in correct funding source year for each sheet
        Select Case vWSs(v)
            Case Is = "FY19 Ledger"
             YearCol = 9
            Case Is = "FY20 Ledger"
             YearCol = 10
            Case Is = "FY21 Ledger"
             YearCol = 11
        End Select

'Pull the starting row of the funding sources from the hidden value on the sheet
FSRow = ws.Range("M1").Value

'go through funding sources table
Sheets("eCPIC Funding").Activate

For Each c In Range(Range("C2"), Range("C2").End(xlDown).End(xlDown).End(xlUp))
If c.Value = "Total Yearly Budgets:" Then

'pull DME row into ledger page
ElseIf c.Offset(0, 2).Value = "DME" Then



'Create New Row

ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.Pattern = xlNone
ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.TintAndShade = 0
ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.PatternTintAndShade = 0
ws.Range("N" & FSRow + 21 & ":S" & FSRow + 21).NumberFormat = "$0.000"
ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Font.Bold = False
ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.Pattern = xlNone
ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.TintAndShade = 0
ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.PatternTintAndShade = 0
ws.Range("N" & FSRow + 22 & ":S" & FSRow + 22).NumberFormat = "$0.000"
ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Font.Bold = True
With ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Borders(xlEdgeTop).LineStyle = xlNone
'enter total row
ws.Range("M" & FSRow + 22).Value = "Total"
ws.Range("N" & FSRow + 22).Formula = "=Sum(N21:N" & FSRow + 21 & ")"
ws.Range("O" & FSRow + 22).Formula = "=Sum(O21:O" & FSRow + 21 & ")"
ws.Range("P" & FSRow + 22).Formula = "=Sum(P21:P" & FSRow + 21 & ")"
ws.Range("Q" & FSRow + 22).Formula = "=Sum(Q21:Q" & FSRow + 21 & ")"
ws.Range("R" & FSRow + 22).Formula = "=Sum(R21:R" & FSRow + 21 & ")"
ws.Range("S" & FSRow + 22).Formula = "=Sum(S21:S" & FSRow + 21 & ")"


'move name and DME Total
ws.Range("M" & FSRow + 21).Value = c.Value
ws.Range("N" & FSRow + 21).Value = c.Offset(0, YearCol).Value

ElseIf c.Offset(0, 2).Value = "SS" Then
'move SS value
ws.Range("P" & FSRow + 21).Value = c.Offset(0, YearCol).Value

ElseIf c.Offset(0, 2).Value = "Total" Then
'add ledger total formulas
ws.Range("R" & FSRow + 21).Value = c.Offset(0, YearCol).Value
ws.Range("O" & FSRow + 21).FormulaR1C1 = "=SUMIFS(C[-12],C[-11],RC[-2]&""*"",C[-4],""DME"")"
ws.Range("Q" & FSRow + 21).FormulaR1C1 = "=SUMIFS(C[-14],C[-13],RC[-4]&""*"",C[-6],""O&M"")"
ws.Range("S" & FSRow + 21).FormulaR1C1 = "=SUM(RC[-2],RC[-4])"
'Move FS total
ws.Range("M1").Value = FSRow + 1
FSRow = FSRow + 1
End If


Next

'fix formatting
With ws.Range("M20:S20").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With

Next v

Sheets("FY21 Ledger").Activate

End Sub

Sub SetUpBook()


Dim EndRow As Integer
Dim FSSelectionRow As Integer

Dim Wb As Workbook: Set Wb = ThisWorkbook
Sheets("FY21 Ledger").Activate
'ensure workbook is not template and macro has not been run
If Wb.Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
Exit Sub
End If

If Wb.Sheets("Sheet4").Range("ActiveSheet").Value = "Active" Then
Exit Sub
End If



'Determine funding sources currently listed in this investment's eCPIC FS table
Sheets("eCPIC Funding").Activate
Range("E2").Activate
k = 2
Do Until ActiveCell = ""
If ActiveCell <> "SS" And ActiveCell <> "Total" Then
    If ActiveCell.Offset(0, -2) = "Total Yearly Budgets:" Then
    
    Else
    Sheets("Sheet4").Range("Q" & k).Value = ActiveCell.Offset(0, -2).Value
    Sheets("Sheet4").Range("R" & k).Value = ActiveCell.Offset(1, -2).Value
    Sheets("Sheet4").Range("U" & k).Value = ActiveCell.Offset(1, -2).Value
        If ActiveCell.Offset(2, -2) = "Internal: Yes" Then
        Sheets("Sheet4").Range("S" & k).Value = "Yes"
        Sheets("Sheet4").Range("T" & k).Value = ActiveCell.Offset(0, -2).Value & " (Internal)"
        ElseIf ActiveCell.Offset(2, -2) = "Internal: No" Then
        Sheets("Sheet4").Range("S" & k).Value = "No"
        Sheets("Sheet4").Range("T" & k).Value = ActiveCell.Offset(0, -2).Value & " (External)"
        End If
    
    End If
k = k + 1

End If
ActiveCell.Offset(1, 0).Activate

Loop

'pick FS dropdown from list of FS in investment
FSSelectionRow = Wb.Sheets("Sheet4").Range("T1").End(xlDown).End(xlDown).End(xlUp).Row

'fix ledger column formatting on all sheets
vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))


    With ws.Range("G3").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=Sheet4!$F$3:$F$11"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
    Application.CutCopyMode = False
    With ws.Range("H3").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=Sheet4!$D$3:$D$13"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
    With ws.Range("F3").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=Sheet4!$H$6:$H$9"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
    With ws.Range("D3").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=Sheet4!$T$2:$T$" & FSSelectionRow + 1
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
    With ws.Range("C3").Validation
        .Delete
        .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
        :=xlBetween, Formula1:="0", Formula2:="100000"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
    With ws.Range("B3").Validation
        .Delete
        .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
        Operator:=xlBetween, Formula1:="0", Formula2:="50"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With



    ws.Range("B3:K3").AutoFill Destination:=ws.Range("B3:K500"), Type:=xlFillDefault
    
    ws.Range("B3:K3").Borders.LineStyle = xlContinuous
    With ws.Range("B2:K2").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    
    With ws.Range("B4:K500").Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.399975585192419
        .PatternTintAndShade = 0
    End With
    ws.Range("B4:K500").FormulaHidden = False
    ws.Range("B4:K500").Locked = True


Next v

  Sheets("eCPIC ITT").Range("A2:I65").Copy Sheets("eCPIC Table Export").Range("A2")
    Sheets("eCPIC ITT").Range("A2:I65").Copy Sheets("eCPIC Table Preview").Range("A2")
    
    Sheets("eCPIC CP").Range("C2:I43").Copy Sheets("eCPIC Table Export").Range("J2")
    Sheets("eCPIC CP").Range("C2:I43").Copy Sheets("eCPIC Table Preview").Range("J2")
   
    EndRow = Sheets("eCPIC Funding").Range("C2").End(xlDown).End(xlDown).End(xlUp).Row + 2
    Sheets("eCPIC Funding").Range("C2:X" & EndRow).Copy Sheets("eCPIC Table Export").Range("Q2")
    Sheets("eCPIC Funding").Range("C2:X" & EndRow).Copy Sheets("eCPIC Table Preview").Range("Q2")
    
    If Range("LCCToggle").Value = "Yes" Then
    Sheets("eCPIC LCC").Range("D2:U25").Copy Sheets("eCPIC Table Export").Range("AM2")
    Sheets("eCPIC LCC").Range("D2:U25").Copy Sheets("eCPIC Table Preview").Range("AM2")
    End If
    
    Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Sheets("eCPIC Table Preview").Columns("I:I").Borders(xlInsideVertical).LineStyle = xlNone
    
    Sheets("eCPIC Table Preview").Columns("P:P").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("P:P").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("P:P").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("P:P").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Preview").Columns("P:P").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    If Range("LCCToggle").Value = "Yes" Then
    Sheets("eCPIC Table Preview").Columns("AL:AL").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("AL:AL").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("AL:AL").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Preview").Columns("AL:AL").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Preview").Columns("AL:AL").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Else
    Sheets("eCPIC Table Preview").Columns("AM:BD").Hidden = True
    End If
    
    
    
    Sheets("eCPIC Table Export").Columns("I:I").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("I:I").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("I:I").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("I:I").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Export").Columns("I:I").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Sheets("eCPIC Table Export").Columns("I:I").Borders(xlInsideVertical).LineStyle = xlNone
    
    Sheets("eCPIC Table Export").Columns("P:P").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("P:P").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("P:P").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("P:P").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Export").Columns("P:P").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    If Range("LCCToggle").Value = "Yes" Then
    Sheets("eCPIC Table Export").Columns("AL:AL").Borders(xlDiagonalDown).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("AL:AL").Borders(xlDiagonalUp).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("AL:AL").Borders(xlEdgeLeft).LineStyle = xlNone
    Sheets("eCPIC Table Export").Columns("AL:AL").Borders(xlEdgeTop).LineStyle = xlNone
    With Sheets("eCPIC Table Export").Columns("AL:AL").Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Else
    Sheets("eCPIC Table Export").Columns("AM:BD").Hidden = True
    End If



End Sub


Sub PrepareForExport()
Dim IfMatch As String
Dim FromRng As Range
Dim DMETotal As Double
Dim SSTotal As Double
Dim TotalTotal As Double
Dim PutRow As Integer

Application.ScreenUpdating = False
Sheets("eCPIC Table Export").Unprotect


If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("Template")
Exit Sub
End If

'password protect export
Dim password As Variant
password = Application.InputBox("Enter Password:" & vbLf & "By clicking OK, I acknowledge that the eCPIC values in the comparison tables will be overwritten by ledger values.", "Password Protected")

Select Case password
    Case Is = False
        'do nothing
    Case Is = "FESCOM1"
        'Range("A1").Value = "This is secret code"

'pull values from all three ledger tabs
vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))
            ws.Protect UserInterfaceOnly:=True
            
        
        'place values in correct place depending on which tab they are drawn from
        Select Case vWSs(v)
            Case Is = "FY19 Ledger"
             ITTCol = "G"
             CPCol = "N"
             FSCol = 9
             LCCCol = "AT"
            Case Is = "FY20 Ledger"
             ITTCol = "H"
             CPCol = "O"
             FSCol = 10
             LCCCol = "AU"
            Case Is = "FY21 Ledger"
             ITTCol = "I"
             CPCol = "P"
             FSCol = 11
             LCCCol = "AV"
        End Select
DMETotal = 0
SSTotal = 0
TotalTotal = 0
  
    
    'migrate FY20 IT Towers
If Range("ITTExpanded").Value = "Expanded" Then


    For Each c In ws.Range("AB2:AB65")
    Sheets("eCPIC Table Export").Cells(c.Row, ITTCol).Value2 = c.Value2
    Next c
    

Else
'Move Condensed
ws.Range("O7:O18").Copy
    Sheets("eCPIC Table Export").Range(ITTCol & "2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
End If
   
   
    'Migrate FY20 Cost Pool data
If Range("CPExpanded").Value = "Expanded" Then

    For Each c In ws.Range("AF2:AB43")
    Sheets("eCPIC Table Export").Cells(c.Row, CPCol).Value2 = c.Value2
    Next c


Else
'Move Condensed
ws.Range("S7:S16").Copy
    Sheets("eCPIC Table Export").Range(CPCol & "2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
End If

    'move LCC
    If Range("LCCToggle").Value = "Yes" Then
        If Range("OneMore") = False And Range("TwoMore") = False Then
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Export").Cells(c.Row, LCCCol).Value2 = c.Value2
        Next c
        End If
        
        If Range("OneMore") = "One" Then
        PutRow = 2
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Export").Cells(PutRow, LCCCol).Value2 = c.Value2
        PutRow = PutRow + 2
        Next c
        
        End If
        
        
        If Range("TwoMore") = "Two" Then
        PutRow = 2
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Export").Cells(PutRow, LCCCol).Value2 = c.Value2
        PutRow = PutRow + 3
        Next c
        End If
        
        
    End If
'Move Funding Sources
ws.Activate
Set FromRng = Range(Range("M21"), Range("M21").End(xlDown).End(xlDown).End(xlUp))


For Each c In FromRng
    IfMatch = "NotMatch"
    
    Sheets("eCPIC Table Export").Activate
    
    For Each D In Range(Range("Q2"), Range("Q2").End(xlDown).End(xlDown).End(xlUp))
    If IfMatch = "Match" Then Exit For
    
    If D.Value = c.Value Then
    D.Offset(0, FSCol).Value2 = c.Offset(0, 2).Value2
    DMETotal = DMETotal + c.Offset(0, 2).Value2
    D.Offset(1, FSCol).Value2 = c.Offset(0, 4).Value2
    SSTotal = SSTotal + c.Offset(0, 4).Value2
    D.Offset(2, FSCol).Value2 = c.Offset(0, 6).Value2
    TotalTotal = TotalTotal + c.Offset(0, 6).Value2
    IfMatch = "Match"
    
    End If
    
    If D.Value = "Total Yearly Budgets:" Then
    D.Offset(0, FSCol).Value2 = DMETotal
    D.Offset(1, FSCol).Value2 = SSTotal
    D.Offset(2, FSCol).Value2 = TotalTotal
    D.Offset(1, 20).Formula = "=SUM(T" & D.Row + 1 & ":AJ" & D.Row + 1 & ")"
    D.Offset(2, 20).Formula = "=SUM(T" & D.Row + 2 & ":AJ" & D.Row + 2 & ")"
    End If
    D.Offset(0, 20).Formula = "=SUM(T" & D.Row & ":AJ" & D.Row & ")"
    
    Next D
    
    'set FS values to ledger values in comparison table
    c.Offset(0, 1).Value2 = c.Offset(0, 2).Value2
    c.Offset(0, 3).Value2 = c.Offset(0, 4).Value2
    c.Offset(0, 5).Value2 = c.Offset(0, 6).Value2
    
Next c





         

         
         
         
         
         
         
    'Overwrite FY20 eCPIC Values
    ws.Select
    Range("O7:O17").Select
    Selection.Copy
    Range("N7").PasteSpecial xlPasteValues
    Range("S7:S15").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("R7").PasteSpecial xlPasteValues
    
    
    Next v
    
    Sheets("eCPIC Table Export").Visible = True
    Sheets("eCPIC Table Export").Activate
    Range("A1").Activate
    Application.CutCopyMode = False
    Case Else
        MsgBox "Incorrect Password"
End Select
Sheets("eCPIC Table Export").Protect UserInterfaceOnly:=True
Application.ScreenUpdating = True
End Sub

Sub PreviewTables()
Dim IfMatch As String
Dim FromRng As Range
Dim ITTCol As String
Dim CPCol As String
Dim FSCol As Integer
Dim LCCCol As String
Dim DMETotal As Double
Dim SSTotal As Double
Dim TotalTotal As Double
Sheets("eCPIC Table Preview").Protect UserInterfaceOnly:=True
Application.ScreenUpdating = False
 If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("Template")
Exit Sub
End If
Sheets("eCPIC Table Preview").Protect UserInterfaceOnly:=True
   
   
   vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))
            ws.Protect UserInterfaceOnly:=True
        Select Case vWSs(v)
            Case Is = "FY19 Ledger"
             ITTCol = "G"
             CPCol = "N"
             FSCol = 9
             LCCCol = "AT"
            Case Is = "FY20 Ledger"
             ITTCol = "H"
             CPCol = "O"
             FSCol = 10
             LCCCol = "AU"
            Case Is = "FY21 Ledger"
             ITTCol = "I"
             CPCol = "P"
             FSCol = 11
             LCCCol = "AV"
        End Select

DMETotal = 0
SSTotal = 0
TotalTotal = 0
        
   
    'migrate FY20 IT Towers
If Range("ITTExpanded").Value = "Expanded" Then
    
    For Each c In ws.Range("AB2:AB65")
    Sheets("eCPIC Table Preview").Cells(c.Row, ITTCol).Value2 = c.Value2
    Next c
    

Else
'Move Condensed
ws.Range("O7:O18").Copy
    Sheets("eCPIC Table Preview").Range(ITTCol & "2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
End If
   
   
    'Migrate FY20 Cost Pool data
If Range("CPExpanded").Value = "Expanded" Then

    For Each c In ws.Range("AF2:AF43")
    Sheets("eCPIC Table Preview").Cells(c.Row, CPCol).Value2 = c.Value2
    Next c
    

Else
'Move Condensed
ws.Range("S7:S16").Copy
    Sheets("eCPIC Table Preview").Range(CPCol & "2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
End If


'move LCC
    If Range("LCCToggle").Value = "Yes" Then
        If Range("OneMore") = False And Range("TwoMore") = False Then
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Preview").Cells(c.Row, LCCCol).Value2 = c.Value2
        Next c
        End If
        
        If Range("OneMore") = "One" Then
        PutRow = 2
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Preview").Cells(PutRow, LCCCol).Value2 = c.Value2
        PutRow = PutRow + 2
        Next c
        
        End If
        
        
        If Range("TwoMore") = "Two" Then
        PutRow = 2
        For Each c In ws.Range("AI2:AI8")
        Sheets("eCPIC Table Preview").Cells(PutRow, LCCCol).Value2 = c.Value2
        PutRow = PutRow + 3
        Next c
        End If
        
        
    End If

'Move Funding Sources
ws.Activate
Set FromRng = Range(Range("M21"), Range("M21").End(xlDown).End(xlDown).End(xlUp))


For Each c In FromRng
    IfMatch = "NotMatch"
    
    Sheets("eCPIC Table Preview").Activate
    
    For Each D In Range(Range("Q2"), Range("Q2").End(xlDown).End(xlDown).End(xlUp))
    If IfMatch = "Match" Then Exit For
    
    If D.Value = c.Value Then
    D.Offset(0, FSCol).Value2 = c.Offset(0, 2).Value2
    DMETotal = DMETotal + c.Offset(0, 2).Value2
    D.Offset(1, FSCol).Value2 = c.Offset(0, 4).Value2
    SSTotal = SSTotal + c.Offset(0, 4).Value2
    D.Offset(2, FSCol).Value2 = c.Offset(0, 6).Value2
    TotalTotal = TotalTotal + c.Offset(0, 6).Value2
    IfMatch = "Match"
    
    End If
    
    If D.Value = "Total Yearly Budgets:" Then
    D.Offset(0, FSCol).Value2 = DMETotal
    D.Offset(1, FSCol).Value2 = SSTotal
    D.Offset(2, FSCol).Value2 = TotalTotal
    D.Offset(1, 20).Formula = "=SUM(T" & D.Row + 1 & ":AJ" & D.Row + 1 & ")"
    D.Offset(2, 20).Formula = "=SUM(T" & D.Row + 2 & ":AJ" & D.Row + 2 & ")"
    End If
    D.Offset(0, 20).Formula = "=SUM(T" & D.Row & ":AJ" & D.Row & ")"
    
    Next D
    
Next c

Next v





Sheets("eCPIC Table Preview").Visible = True
Sheets("eCPIC Table Preview").Activate
Range("A1").Activate
Application.CutCopyMode = False
Application.ScreenUpdating = True

End Sub


Sub HideCondensed()


vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))

If Range("ITTExpanded").Value = "Condensed" Then
ws.Columns("J:J").EntireColumn.Hidden = True
End If

If Range("CPExpanded").Value = "Condensed" Then
ws.Columns("I:I").EntireColumn.Hidden = True
End If

        Next v
        
End Sub

Sub ReadLCC()

'If Range("LCCPB").Value = "PB On" Then
'MsgBox ("Proposed Budget rows have been turned on. This template will not prepare the Life Cycle Costs table for export")
'End If
'
'If Range("LCCOutlay").Value = "Outlays On" Then
'MsgBox ("Outlays rows have been turned on. This template will not prepare the Life Cycle Costs table for export")
'End If

If Range("LCCLevel0").Value = True Then
MsgBox ("The life cycle costs table has not been exported at level 0. This template will not prepare the Life Cycle Costs table for export")
End If



End Sub


















Attribute VB_Name = "Module2"
Sub MoveFS()
Dim IfMatch As String
Dim FromRng As Range


Set FromRng = Sheets("FY20 Ledger").Range(Range("M21"), Range("M21").End(xlDown).End(xlDown).End(xlUp))

'Set ToRng = Sheets("eCPIC Table Export").Range(Range("Q2"), Range("Q2").End(xlDown).End(xlDown).End(xlUp))

For Each c In FromRng
    IfMatch = "NotMatch"
    
    Sheets("eCPIC Table Export").Activate
    
    For Each D In Range(Range("Q2"), Range("Q2").End(xlDown).End(xlDown).End(xlUp))
    If IfMatch = "Match" Then Exit For
    
    If D.Value = c.Value Then
    D.Offset(0, 11).Value = c.Offset(0, 2).Value
    D.Offset(1, 11).Value = c.Offset(0, 4).Value
    D.Offset(2, 11).Value = c.Offset(0, 6).Value
    
    IfMatch = "Match"
    
    End If
    
    Next D
    
Next c

End Sub


Attribute VB_Name = "Module3"

Dim FSRow As Integer
Sub AddFS()


'Sheets("FY20 Ledger").Unprotect
Dim Selected As Boolean
Dim Wb As Workbook: Set Wb = ThisWorkbook
Dim FSName As String
Dim TotalRow As Integer
Dim ThisWs As Worksheet

Set ThisWs = ActiveSheet



Selected = False
If Sheets("eCPIC ITT").Range("A2").Value = "<ecpic:investmentNumber>" Then
MsgBox ("Template")
Exit Sub
End If
  
    
    For i = 2 To 1000 Step 1
                    
        k = Sheets("Sheet4").Cells(i, 3) 'col. C

        If (k = "") Then
            Last = i - 1
            Exit For
        End If
    Next i
    
  
    
    UserForm1.ComboBox1.RowSource = "Sheet4!C2:C" & Last
    Accepted = False
    
    UserForm1.Show

    If (Accepted) Then

        k = 0
        For i = 2 To Last
           
                If (Sheets("Sheet4").Cells(i, 3) = DocSelected) Then
                
                  k = i
                  Exit For
                End If
                
        Next i
        
        
        
        
        If (k = 0) Then
            MsgBox "ERROR -- Mismatch on filename picked!"
        Else
        
        For l = 2 To 1000 Step 1
                    
        m = Sheets("Sheet4").Cells(l, 17) 'col. Q
        If m = Sheets("Sheet4").Range("A" & k).Value Then
            MsgBox "Funding Source Already Selected"
            Selected = True
            
            Exit For
            
        End If

        If (m = "") Then
            EndFS = l - 1
            Exit For
        End If
    Next l
           ' Cells(R, 10) = "=HYPERLINK(Artifacts!C" & k & ")"
          ' =HYPERLINK("#Sheet2!A"&MATCH(Table1[[#This Row],[Case ID]],Sheet2!A:A,0),Table1[[#This Row],[name]])
            'Cells(r, 10) = "=Hyperlink(Artifacts!C" & k & ",Artifacts!A" & k & ")"
      If Selected = True Then
      Else
            Sheets("Sheet4").Range("Q" & l) = Sheets("Sheet4").Range("A" & k).Value
            Sheets("Sheet4").Range("R" & l) = Sheets("Sheet4").Range("B" & k).Value
            Sheets("Sheet4").Range("U" & l) = Sheets("Sheet4").Range("B" & k).Value
            If Internal = "Yes" Then
            Sheets("Sheet4").Range("S" & l) = "Yes"
            Sheets("Sheet4").Range("T" & l) = Sheets("Sheet4").Range("A" & k).Value & " (Internal)"
            ElseIf Internal = "No" Then
            Sheets("Sheet4").Range("S" & l) = "No"
            Sheets("Sheet4").Range("T" & l) = Sheets("Sheet4").Range("A" & k).Value & " (External)"
            End If
            
        
        
        Dim v As Long, vWSs As Variant, ws As Worksheet
        
        'Repeat adding of new FS for both export and preview tabs
        vWSs = Array("eCPIC Table Export", "eCPIC Table Preview")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))
            ws.Unprotect

            TotalRow = 2
            FSName = ws.Range("Q" & TotalRow).Value
            Do Until FSName = "Total Yearly Budgets:"
                TotalRow = TotalRow + 1
                FSName = ws.Range("Q" & TotalRow).Value
            Loop
            ws.Range("Q" & TotalRow & ":AL" & TotalRow + 2).Copy ws.Range("Q" & TotalRow + 3 & ":AL" & TotalRow + 5)
            ws.Range("Q" & TotalRow).Value = Sheets("Sheet4").Range("Q" & l).Value
            ws.Range("Q" & TotalRow + 1).Value = Sheets("Sheet4").Range("R" & l).Value
            ws.Range("Q" & TotalRow + 2).Value = "Internal: " & Sheets("Sheet4").Range("S" & l).Value

            For Each c In ws.Range("T" & TotalRow & ":AL" & TotalRow + 2)
            c.Value = 0

            Next


            ws.Protect UserInterfaceOnly:=True
        Next v
        
        
        'Add New FS Row in Ledger
        vWSs = Array("FY19 Ledger", "FY20 Ledger", "FY21 Ledger")
        For v = LBound(vWSs) To UBound(vWSs)
            Set ws = Worksheets(vWSs(v))
            FSRow = ws.Range("M1").Value
            ws.Unprotect
            
            
        With ws.Range("D3:D500").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=Sheet4!$T$2:$T$" & l
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
        End With
        
        ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.Pattern = xlNone
        ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.TintAndShade = 0
        ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Interior.PatternTintAndShade = 0
        ws.Range("N" & FSRow + 21 & ":S" & FSRow + 21).NumberFormat = "$0.000"
        ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Font.Bold = False
        ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.Pattern = xlNone
        ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.TintAndShade = 0
        ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Interior.PatternTintAndShade = 0
        ws.Range("N" & FSRow + 22 & ":S" & FSRow + 22).NumberFormat = "$0.000"
        ws.Range("M" & FSRow + 22 & ":S" & FSRow + 22).Font.Bold = True
        With ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .ColorIndex = 0
                .TintAndShade = 0
                .Weight = xlMedium
            End With
        ws.Range("M" & FSRow + 21 & ":S" & FSRow + 21).Borders(xlEdgeTop).LineStyle = xlNone
        'enter total row
        ws.Range("M" & FSRow + 22).Value = "Total"
        ws.Range("N" & FSRow + 22).Formula = "=Sum(N21:N" & FSRow + 21 & ")"
        ws.Range("O" & FSRow + 22).Formula = "=Sum(O21:O" & FSRow + 21 & ")"
        ws.Range("P" & FSRow + 22).Formula = "=Sum(P21:P" & FSRow + 21 & ")"
        ws.Range("Q" & FSRow + 22).Formula = "=Sum(Q21:Q" & FSRow + 21 & ")"
        ws.Range("R" & FSRow + 22).Formula = "=Sum(R21:R" & FSRow + 21 & ")"
        ws.Range("S" & FSRow + 22).Formula = "=Sum(S21:S" & FSRow + 21 & ")"
        'Add New funding source info
        ws.Range("M" & FSRow + 21) = Sheets("Sheet4").Range("Q" & l).Value
        ws.Range("O" & FSRow + 21).FormulaR1C1 = "=SUMIFS(C[-12],C[-11],RC[-2]&""*"",C[-4],""DME"")"
        ws.Range("Q" & FSRow + 21).FormulaR1C1 = "=SUMIFS(C[-14],C[-13],RC[-4]&""*"",C[-6],""O&M"")"
        ws.Range("S" & FSRow + 21).FormulaR1C1 = "=SUM(RC[-2],RC[-4])"
        ws.Range("N" & FSRow + 21).Value = 0
        ws.Range("P" & FSRow + 21).Value = 0
        ws.Range("R" & FSRow + 21).Value = 0
        ws.Range("M1").Value = FSRow + 1
        FSRow = FSRow + 1
        ws.Protect UserInterfaceOnly:=True
        Next v
        
        
        
        
        
        End If
        
        'Range("I" & r & ":I" & r).Select

    End If
End If

ThisWs.Activate


'Worksheets("FY20 Ledger").Protect UserInterfaceOnly:=True
End Sub





















Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Update by Extendoffice 2018/06/04
    Application.EnableEvents = False
    If Target.Column = 7 Or Target.Column = 8 Then
        Target.Offset(0, 2).Value = ""
    End If
    Application.EnableEvents = True
End Sub

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Update by Extendoffice 2018/06/04
    Application.EnableEvents = False
    If Target.Column = 7 Or Target.Column = 8 Then
        Target.Offset(0, 2).Value = ""
    End If
    Application.EnableEvents = True
End Sub
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
'Update by Extendoffice 2018/06/04
    Application.EnableEvents = False
    If Target.Column = 7 Or Target.Column = 8 Then
        Target.Offset(0, 2).Value = ""
    End If
    Application.EnableEvents = True
End Sub

Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public WithEvents oApp As Excel.Application
Attribute oApp.VB_VarHelpID = -1
Private bDeferredOpen As Boolean

'Private Sub oApp_WorkbookActivate(ByVal Wb As Workbook)
'    If bDeferredOpen Then
'        bDeferredOpen = False
'        Call WorkbookOpenHandler(Wb)
'    End If
'End Sub
'
'Private Sub oApp_WorkbookOpen(ByVal Wb As Workbook)
'    Dim oProtectedViewWindow As ProtectedViewWindow
'    On Error Resume Next
'        'The below line will throw error (Subscript out of range) if the workbook is not opened in protected view.
'        Set oProtectedViewWindow = oApp.ProtectedViewWindows.Item(Wb.Name)
'    On Error GoTo 0 'Reset error handling
'
'    If oProtectedViewWindow Is Nothing Then
'        bDeferredOpen = False
'        Call WorkbookOpenHandler(Wb)
'    Else
'        'Delay open actions till the workbook gets activated.
'        bDeferredOpen = True
'    End If
'End Sub
'
'Private Sub WorkbookOpenHandler(ByVal Wb As Workbook)
'    'The actual workbook open event handler code goes here...
'        Call SetUpBook
'    Call PopulateFS
'    Worksheets("BY20 Ledger").Protect UserInterfaceOnly:=True
'    Range("ActiveSheet").Value = "Active"
'End Sub
'Private Sub Workbook_Open()
'MsgBox ("Hello")
'    Call SetUpBook
'    Call PopulateFS
'    Worksheets("BY20 Ledger").Protect UserInterfaceOnly:=True
'    Range("ActiveSheet").Value = "Active"
'
'End Sub

'Dim bProtected_View As Boolean
''Workbook_Activate code should run only when opened in Protected View
'
'Private Sub Workbook_Open()
'
'    With Application
'        .EnableEvents = True
'        .ScreenUpdating = False
'        .Calculation = xlCalculationAutomatic
'    End With
'
'    If Application.ProtectedViewWindows.Count = 0 Then
'        bProtected_View = False
'    Else
'        bProtected_View = True
'    End If
'
'    If bProtected_View = False Then
'    ' WILL NOT RUN FROM WORKBOOK_OPEN WHILE IN PROTECTED VIEW
'        With ActiveWindow
'            .WindowState = xlMaximized
'            .LargeScroll UP:=65536, ToLeft:=256
'            .DisplayWorkbookTabs = False
'            .DisplayHorizontalScrollBar = True
'            .DisplayVerticalScrollBar = True
'        End With
'
'        If ActiveWindow.DisplayWorkbookTabs = True Then MsgBox "Tabs are visible", vbOKOnly
'        With ActiveWorkbook
'            .Protect Password:=Range("PWW_PWD"), STRUCTURE:=True, Windows:=False
'            If .ProtectStructure = False Then MsgBox "Workbook is Unprotected", vbOKOnly
'
'        End With
'        'WILL NOT RUN FROM WORKBOOK_OPEN WHILE IN PROTECTED VIEW
'    End If
'
'    If ActiveSheet.ProtectContents = False Then MsgBox "Worksheet is Unprotected", vbOKOnly
'    Application.ScreenUpdating = True
'
'End Sub
'
'Private Sub Workbook_Activate()
'
'    If bProtected_View = True Then
'        bProtected_View = False
'        'WILL NOT RUN FROM WORKBOOK_OPEN WHILE IN PROTECTED VIEW
'        With ActiveWindow
'            .WindowState = xlMaximized
'            .LargeScroll UP:=65536, ToLeft:=256
'            .DisplayWorkbookTabs = False
'            .DisplayHorizontalScrollBar = True
'            .DisplayVerticalScrollBar = True
'        End With
'
''        LockAllSheets
''        If ActiveWindow.DisplayWorkbookTabs = True Then MsgBox "Tabs are visible", vbOKOnly
'
'        With ActiveWorkbook
'            .Protect Password:=Range("PWW_PWD"), STRUCTURE:=True, Windows:=False
'            If .ProtectStructure = False Then MsgBox "Workbook is Unprotected", vbOKOnly
'            .Sheets("Home").Select
'
'        End With
'        'WILL NOT RUN FROM WORKBOOK_OPEN WHILE IN PROTECTED VIEW
'    End If
'End Sub
'
'
'
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{9F291809-8E59-478D-8632-051A6E256FA6}{FFC11B7F-E133-407F-BE2F-B3E04F126C86}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
UserForm1.Hide
Accepted = True

DocSelected = ComboBox1.Value
If OptionButton1 Then Internal = "Yes"
If OptionButton2 Then Internal = "No"

End Sub

Private Sub CommandButton2_Click()
UserForm1.Hide
Accepted = False
End Sub

Private Sub OptionButton1_Click()

End Sub

Private Sub OptionButton2_Click()

End Sub

Private Sub UserForm_Click()

End Sub


INQUEST-PP=macro
