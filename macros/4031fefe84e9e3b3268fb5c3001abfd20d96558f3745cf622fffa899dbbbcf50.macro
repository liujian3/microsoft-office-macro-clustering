Attribute VB_Name = "Bauteile"
Option Explicit
Public Sub Umschalter_BauteilBerechnung()
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False)
  Dim Auswahl As Range, Zei%, Kuerzel As Range, Machen As Boolean
  Dim RangeNameB, i%
  Set Auswahl = ThisWorkbook.ActiveSheet.Range("stBerechnung")
  If Auswahl.Value = 1 Then
    If Application.Caller <> "Listenfeld 132" Then
      Machen = True
    ElseIf MsgBox("Eingaben |fffd|berschreiben?", vbOKCancel) = vbOK Then
      Machen = True
    Else
      Machen = False
    End If
    If Machen = True Then 'Modus: "Verwendung Bl|fffd|tter Bauteile und Geometrie"
      For Zei = 6 To 97 '!!!!!!!!!!!!!! hartverdrahtet
        Set Kuerzel = ThisWorkbook.ActiveSheet.Cells(Zei, 2)
        If Len(Kuerzel) > 0 And Len(Kuerzel) < 6 Then
          Kuerzel.Offset(0, 4).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;18;FALSCH)"
          Kuerzel.Offset(0, 5).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;14;FALSCH)"
          If Left(Kuerzel, 3) = "AW " Or Left(Kuerzel, 2) = "D " Then
            Kuerzel.Offset(0, 1).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;2;FALSCH)"
            If Left(Kuerzel, 2) = "D " Then
              Kuerzel.Offset(0, 3).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;3;FALSCH)"
            End If
        ElseIf Left(Kuerzel, 2) = "G " Then
            Kuerzel.Offset(0, 1).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;2;FALSCH)"
          ElseIf Left(Kuerzel, 2) = "W " Or Left(Kuerzel, 2) = "T " Then
            Kuerzel.Offset(0, 2).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;4;FALSCH)"
          End If
        ElseIf Kuerzel = "Bodengrundfl|fffd|che AG [m|fffd|]" Or Kuerzel = "Umfang Bodengrundfl|fffd|che P [m]" Then
          Kuerzel.Offset(0, 3).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;6;FALSCH)"
        ElseIf Kuerzel = "Volumen (Au|fffd|enma|fffd|) [m|fffd|]" Then
          Kuerzel.Offset(0, 4).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;6;FALSCH)"
        End If
      Next Zei
      For Zei = 126 To 170 '!!!!!!!!!!!!!! hartverdrahtet
        Set Kuerzel = ThisWorkbook.ActiveSheet.Cells(Zei, 2)
        If Left(Kuerzel, 3) = "AW " Or Left(Kuerzel, 2) = "T " Or Left(Kuerzel, 2) = "D " Or Left(Kuerzel, 2) = "W " Then
          If Left(Kuerzel, 2) = "W " Then
            Kuerzel.Offset(0, 4).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;15;FALSCH)"
            Kuerzel.Offset(0, 5).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;16;FALSCH)"
            Kuerzel.Offset(0, 6).FormulaLocal = "=SVERWEIS($B" & Zei & ";Geometrie!$A:$R;17;FALSCH)"
          Else
            Kuerzel.Offset(0, 4).FormulaLocal = 0.5 ' alpha fest
          End If
        End If
      Next Zei
      RangeNameB = GetNameArray(ThisWorkbook.ActiveSheet.Name, "B")
      For i = 0 To UBound(RangeNameB)
        On Error Resume Next
        If ActiveSheet.Range(RangeNameB(i)).Locked = False Then ActiveSheet.Range(RangeNameB(i)).Locked = True 'Zellenschutz herstellen
        On Error GoTo Hell
      Next i
    Else
      Auswahl.Value = 2 'zur|fffd|ckstellen
    End If
  ElseIf Auswahl.Value = 2 Then
    If Application.Caller <> "Listenfeld 132" Then
      Machen = True
    ElseIf MsgBox("Formeln l|fffd|schen?", vbOKCancel) = vbOK Then
      Machen = True
    Else
      Machen = False
    End If
    If Machen = True Then 'Modus "Eingabe der Fl|fffd|chen und U-Werte hier"
      RangeNameB = GetNameArray(ThisWorkbook.ActiveSheet.Name, "B")
      For i = 0 To UBound(RangeNameB)
        On Error Resume Next
        If ActiveSheet.Range(RangeNameB(i)).Locked = True Then ActiveSheet.Range(RangeNameB(i)).Locked = False 'Zellenschutz aufheben
        On Error GoTo Hell
        ActiveSheet.Range(RangeNameB(i)) = ""
      Next i
      For Zei = 1 To ThisWorkbook.ActiveSheet.Range("gSAW_alf").Rows.Count 'alpha nicht editierbar, Vorgabe 0.5
        ThisWorkbook.ActiveSheet.Range("gSAW_alf").Cells(Zei) = 0.5
      Next Zei
      For Zei = 1 To ThisWorkbook.ActiveSheet.Range("gSD_alf").Rows.Count
        ThisWorkbook.ActiveSheet.Range("gSD_alf").Cells(Zei) = 0.5
      Next Zei
    Else
      Auswahl.Value = 1 'zur|fffd|ckstellen
    End If
  End If
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Sub SchichtenLeeren()
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False)
  Dim oKnopf As Object, sNr As String, rBereiche, i%
  If MsgBox("Eingaben l|fffd|schen?", vbOKCancel) = vbCancel Then Exit Sub
  Set oKnopf = ActiveSheet.Shapes(Application.Caller)
  sNr = Format(oKnopf.TopLeftCell.Offset(-1, 2), "00")
  rBereiche = Array("b" & sNr & "_Name", "b" & sNr & "_Notiz", "b" & sNr & "_si", _
    "b" & sNr & "_d", "b" & sNr & "_x", "b" & sNr & "_b", _
    "b" & sNr & "_Quelle", "b" & sNr & "_Art", "b" & sNr & "_Stoff")
  For i = 0 To UBound(rBereiche)
    If ThisWorkbook.ActiveSheet.Range(rBereiche(i)).MergeCells = True Then
      ThisWorkbook.ActiveSheet.Range(rBereiche(i)) = ""
    Else
      ThisWorkbook.ActiveSheet.Range(rBereiche(i)).ClearContents
    End If
  Next i
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Function AuswahlBauteilOpak(Q1 As Range, Q2 As Range)
  Dim Bereich(29, 0), i%, Zei%
  Zei = 0
  For i = 1 To Q1.Rows.Count
    If Len(Q1.Cells(i)) > 1 Then
      Bereich(Zei, 0) = Q1.Cells(i)
      Zei = Zei + 1
    End If
  Next i
  For i = 1 To Q2.Rows.Count
    If Len(Q2.Cells(i)) > 1 Then
      Bereich(Zei, 0) = Q2.Cells(i)
      Zei = Zei + 1
    End If
  Next i
  AuswahlBauteilOpak = Bereich
End Function
Function Text_als_Formel(Zelle)
    'Volatile:
    'Kennzeichnet eine benutzerdefinierte Funktion als ver|fffd|nderlich.
    'Solche Funktionen werden immer neu berechnet, wenn in einer beliebigen Zelle des Arbeitsblattes
    'eine Berechnung durchgef|fffd|hrt wird. Nicht ver|fffd|nderliche Funktionen werden nur dann neu berechnet,
    'wenn sich die Eingabevariablen |fffd|ndern. Diese Methode wird in der Regel in einer benutzerdefinierten
    'Funktion zur Berechnung einer Arbeitsblattzelle verwendet, andernfalls hat sie keine Auswirkung.
    Application.Volatile
    Dim strTxt As String
    If Zelle = "" Then
        Text_als_Formel = 0
    Else
        strTxt = Replace(Zelle, " ", "")
        strTxt = Replace(strTxt, Chr(10), "")
        strTxt = Replace(strTxt, Chr(13), "")
        strTxt = Replace(strTxt, ",", ".")
        Text_als_Formel = Application.Evaluate(strTxt & "+0") ' & "+0" warum auch immer, sonst funktionieren einzelen Zahlen nicht...
        If IsError(Text_als_Formel) Then Text_als_Formel = 0
    End If
End Function
Function AdresseBezug(rRange As Range)
  AdresseBezug = rRange.Address(RowAbsolute:=False, ColumnAbsolute:=False)
End Function
Function ListeErstellen(Spalte As Range)
  Dim i%, j%, k%, Liste() As String
  ReDim Liste(39, 2)
  j = 0
  For i = 2 To 500
    If Spalte.Cells(i).Text <> "" Then
      Liste(j, 0) = Spalte.Cells(i).Offset(0, -1).Text
      Liste(j, 1) = Spalte.Cells(i).Text
      Liste(j, 2) = i
      j = j + 1
    End If
  Next i
  ListeErstellen = Liste
End Function
Private Function F_interpol9(a, b, C)
    Dim Ruck, i1%
    Select Case C
        Case Is < a(1): Ruck = b(1)
        Case Is < a(2): i1 = 1: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(3): i1 = 2: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(4): i1 = 3: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(5): i1 = 4: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(6): i1 = 5: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(7): i1 = 6: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(8): i1 = 7: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(9): i1 = 8: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is >= a(9): Ruck = b(9)
    End Select
    F_interpol9 = Ruck
End Function
Function RechLuftschichtRuhend(DickeO, Richtung)
  Dim AA, BB, Ruck, Dicke
  If DickeO > 299 Then Dicke = 299 Else Dicke = DickeO 'neu 20191112: F_interpol kann nicht extrapolieren
  AA = Array(0, 5, 7, 10, 15, 25, 50, 100, 300)
  BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0)
  Select Case Richtung
    Case 1 'Aufw|fffd|rts
      BB = Array(0, 0.11, 0.13, 0.15, 0.16, 0.16, 0.16, 0.16, 0.16)
    Case 2 'Horizontal
      BB = Array(0, 0.11, 0.13, 0.15, 0.17, 0.18, 0.18, 0.18, 0.18)
    Case 3 'Abw|fffd|rts
      BB = Array(0, 0.11, 0.13, 0.15, 0.17, 0.19, 0.21, 0.22, 0.23)
    Case Else
      BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0)
  End Select
  Ruck = F_interpol9(AA, BB, Dicke)
'2017 Korrektur: Dicke in [mm] aber W|fffd|rmedurchlasswiderstand in m|fffd|K/W  falsche Stelle!!!
  DickeO = DickeO / 1000 'neu 20191112: dies stand vor dem SelectCase, wodurch immer nur die ersten beiden St|fffd|tzstellen relevant waren
  If Ruck > 0 Then
    RechLuftschichtRuhend = DickeO / Ruck
  Else
    RechLuftschichtRuhend = 0
  End If
End Function

Attribute VB_Name = "Crypt"
Option Explicit

Private Const BITS_TO_A_BYTE = 8
Private Const BYTES_TO_A_WORD = 4
Private Const BITS_TO_A_WORD = 32
Private m_lOnBits(30)
Private m_l2Power(30)
Private Function pre()
    m_lOnBits(0) = CLng(1)
    m_lOnBits(1) = CLng(3)
    m_lOnBits(2) = CLng(7)
    m_lOnBits(3) = CLng(15)
    m_lOnBits(4) = CLng(31)
    m_lOnBits(5) = CLng(63)
    m_lOnBits(6) = CLng(127)
    m_lOnBits(7) = CLng(255)
    m_lOnBits(8) = CLng(511)
    m_lOnBits(9) = CLng(1023)
    m_lOnBits(10) = CLng(2047)
    m_lOnBits(11) = CLng(4095)
    m_lOnBits(12) = CLng(8191)
    m_lOnBits(13) = CLng(16383)
    m_lOnBits(14) = CLng(32767)
    m_lOnBits(15) = CLng(65535)
    m_lOnBits(16) = CLng(131071)
    m_lOnBits(17) = CLng(262143)
    m_lOnBits(18) = CLng(524287)
    m_lOnBits(19) = CLng(1048575)
    m_lOnBits(20) = CLng(2097151)
    m_lOnBits(21) = CLng(4194303)
    m_lOnBits(22) = CLng(8388607)
    m_lOnBits(23) = CLng(16777215)
    m_lOnBits(24) = CLng(33554431)
    m_lOnBits(25) = CLng(67108863)
    m_lOnBits(26) = CLng(134217727)
    m_lOnBits(27) = CLng(268435455)
    m_lOnBits(28) = CLng(536870911)
    m_lOnBits(29) = CLng(1073741823)
    m_lOnBits(30) = CLng(2147483647)

    m_l2Power(0) = CLng(1)
    m_l2Power(1) = CLng(2)
    m_l2Power(2) = CLng(4)
    m_l2Power(3) = CLng(8)
    m_l2Power(4) = CLng(16)
    m_l2Power(5) = CLng(32)
    m_l2Power(6) = CLng(64)
    m_l2Power(7) = CLng(128)
    m_l2Power(8) = CLng(256)
    m_l2Power(9) = CLng(512)
    m_l2Power(10) = CLng(1024)
    m_l2Power(11) = CLng(2048)
    m_l2Power(12) = CLng(4096)
    m_l2Power(13) = CLng(8192)
    m_l2Power(14) = CLng(16384)
    m_l2Power(15) = CLng(32768)
    m_l2Power(16) = CLng(65536)
    m_l2Power(17) = CLng(131072)
    m_l2Power(18) = CLng(262144)
    m_l2Power(19) = CLng(524288)
    m_l2Power(20) = CLng(1048576)
    m_l2Power(21) = CLng(2097152)
    m_l2Power(22) = CLng(4194304)
    m_l2Power(23) = CLng(8388608)
    m_l2Power(24) = CLng(16777216)
    m_l2Power(25) = CLng(33554432)
    m_l2Power(26) = CLng(67108864)
    m_l2Power(27) = CLng(134217728)
    m_l2Power(28) = CLng(268435456)
    m_l2Power(29) = CLng(536870912)
    m_l2Power(30) = CLng(1073741824)
End Function

Private Function LShift(lValue, iShiftBits)
  If iShiftBits = 0 Then
    LShift = lValue
    Exit Function
  ElseIf iShiftBits = 31 Then
    If lValue And 1 Then
      LShift = &H80000000
    Else
      LShift = 0
    End If
    Exit Function
  ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
    Err.Raise 6
  End If

  If (lValue And m_l2Power(31 - iShiftBits)) Then
    LShift = ((lValue And m_lOnBits(31 - (iShiftBits + 1))) * m_l2Power(iShiftBits)) Or &H80000000
  Else
    LShift = ((lValue And m_lOnBits(31 - iShiftBits)) * m_l2Power(iShiftBits))
  End If
End Function

Private Function RShift(lValue, iShiftBits)
  If iShiftBits = 0 Then
    RShift = lValue
    Exit Function
  ElseIf iShiftBits = 31 Then
    If lValue And &H80000000 Then
      RShift = 1
    Else
      RShift = 0
    End If
    Exit Function
  ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
    Err.Raise 6
  End If
 
  RShift = (lValue And &H7FFFFFFE) \ m_l2Power(iShiftBits)

  If (lValue And &H80000000) Then
    RShift = (RShift Or (&H40000000 \ m_l2Power(iShiftBits - 1)))
  End If
End Function

Private Function RotateLeft(lValue, iShiftBits)
  RotateLeft = LShift(lValue, iShiftBits) Or RShift(lValue, (32 - iShiftBits))
End Function

Private Function AddUnsigned(lX, lY)
  Dim lX4
  Dim lY4
  Dim lX8
  Dim lY8
  Dim lResult

  lX8 = lX And &H80000000
  lY8 = lY And &H80000000
  lX4 = lX And &H40000000
  lY4 = lY And &H40000000

  lResult = (lX And &H3FFFFFFF) + (lY And &H3FFFFFFF)

  If lX4 And lY4 Then
    lResult = lResult Xor &H80000000 Xor lX8 Xor lY8
  ElseIf lX4 Or lY4 Then
    If lResult And &H40000000 Then
      lResult = lResult Xor &HC0000000 Xor lX8 Xor lY8
    Else
      lResult = lResult Xor &H40000000 Xor lX8 Xor lY8
    End If
  Else
    lResult = lResult Xor lX8 Xor lY8
  End If

  AddUnsigned = lResult
End Function

Private Function F(x, y, z)
  F = (x And y) Or ((Not x) And z)
End Function

Private Function G(x, y, z)
  G = (x And z) Or (y And (Not z))
End Function

Private Function H(x, y, z)
  H = (x Xor y Xor z)
End Function

Private Function i(x, y, z)
  i = (y Xor (x Or (Not z)))
End Function

Private Sub FF(a, b, C, d, x, S, ac)
  a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, C, d), x), ac))
  a = RotateLeft(a, S)
  a = AddUnsigned(a, b)
End Sub

Private Sub GG(a, b, C, d, x, S, ac)
  a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, C, d), x), ac))
  a = RotateLeft(a, S)
  a = AddUnsigned(a, b)
End Sub

Private Sub HH(a, b, C, d, x, S, ac)
  a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, C, d), x), ac))
  a = RotateLeft(a, S)
  a = AddUnsigned(a, b)
End Sub

Private Sub II(a, b, C, d, x, S, ac)
  a = AddUnsigned(a, AddUnsigned(AddUnsigned(i(b, C, d), x), ac))
  a = RotateLeft(a, S)
  a = AddUnsigned(a, b)
End Sub

Private Function ConvertToWordArray(sMessage)
  Dim lMessageLength
  Dim lNumberOfWords
  Dim lWordArray()
  Dim lBytePosition
  Dim lByteCount
  Dim lWordCount
 
  Const MODULUS_BITS = 512
  Const CONGRUENT_BITS = 448
 
  lMessageLength = Len(sMessage)
 
  lNumberOfWords = (((lMessageLength + ((MODULUS_BITS - CONGRUENT_BITS) \ BITS_TO_A_BYTE)) \ (MODULUS_BITS \ BITS_TO_A_BYTE)) + 1) * (MODULUS_BITS \ BITS_TO_A_WORD)
  ReDim lWordArray(lNumberOfWords - 1)
 
  lBytePosition = 0
  lByteCount = 0
  Do Until lByteCount >= lMessageLength
    lWordCount = lByteCount \ BYTES_TO_A_WORD
    lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
    lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(Asc(Mid(sMessage, lByteCount + 1, 1)), lBytePosition)
    lByteCount = lByteCount + 1
  Loop

  lWordCount = lByteCount \ BYTES_TO_A_WORD
  lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE

  lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(&H80, lBytePosition)

  lWordArray(lNumberOfWords - 2) = LShift(lMessageLength, 3)
  lWordArray(lNumberOfWords - 1) = RShift(lMessageLength, 29)
 
  ConvertToWordArray = lWordArray
End Function

Private Function WordToHex(lValue)
  Dim lByte
  Dim lCount
 
  For lCount = 0 To 3
    lByte = RShift(lValue, lCount * BITS_TO_A_BYTE) And m_lOnBits(BITS_TO_A_BYTE - 1)
    WordToHex = WordToHex & Right("0" & Hex(lByte), 2)
  Next
End Function
Function MD5Convert(Plaintext As String)
  Dim i%, Converted As String
  For i = 1 To Len(Plaintext)
     Converted = MD5(Plaintext)
     Converted = UCase(Converted)
  Next i
  MD5Convert = Converted
End Function

Public Function MD5(sMessage)
  Call pre
  Dim x
  Dim k
  Dim AA
  Dim BB
  Dim CC
  Dim DD
  Dim a
  Dim b
  Dim C
  Dim d
 
  Const S11 = 7
  Const S12 = 12
  Const S13 = 17
  Const S14 = 22
  Const S21 = 5
  Const S22 = 9
  Const S23 = 14
  Const S24 = 20
  Const S31 = 4
  Const S32 = 11
  Const S33 = 16
  Const S34 = 23
  Const S41 = 6
  Const S42 = 10
  Const S43 = 15
  Const S44 = 21

  x = ConvertToWordArray(sMessage)
 
  a = &H67452301
  b = &HEFCDAB89
  C = &H98BADCFE
  d = &H10325476

  For k = 0 To UBound(x) Step 16
    AA = a
    BB = b
    CC = C
    DD = d

    FF a, b, C, d, x(k + 0), S11, &HD76AA478
    FF d, a, b, C, x(k + 1), S12, &HE8C7B756
    FF C, d, a, b, x(k + 2), S13, &H242070DB
    FF b, C, d, a, x(k + 3), S14, &HC1BDCEEE
    FF a, b, C, d, x(k + 4), S11, &HF57C0FAF
    FF d, a, b, C, x(k + 5), S12, &H4787C62A
    FF C, d, a, b, x(k + 6), S13, &HA8304613
    FF b, C, d, a, x(k + 7), S14, &HFD469501
    FF a, b, C, d, x(k + 8), S11, &H698098D8
    FF d, a, b, C, x(k + 9), S12, &H8B44F7AF
    FF C, d, a, b, x(k + 10), S13, &HFFFF5BB1
    FF b, C, d, a, x(k + 11), S14, &H895CD7BE
    FF a, b, C, d, x(k + 12), S11, &H6B901122
    FF d, a, b, C, x(k + 13), S12, &HFD987193
    FF C, d, a, b, x(k + 14), S13, &HA679438E
    FF b, C, d, a, x(k + 15), S14, &H49B40821

    GG a, b, C, d, x(k + 1), S21, &HF61E2562
    GG d, a, b, C, x(k + 6), S22, &HC040B340
    GG C, d, a, b, x(k + 11), S23, &H265E5A51
    GG b, C, d, a, x(k + 0), S24, &HE9B6C7AA
    GG a, b, C, d, x(k + 5), S21, &HD62F105D
    GG d, a, b, C, x(k + 10), S22, &H2441453
    GG C, d, a, b, x(k + 15), S23, &HD8A1E681
    GG b, C, d, a, x(k + 4), S24, &HE7D3FBC8
    GG a, b, C, d, x(k + 9), S21, &H21E1CDE6
    GG d, a, b, C, x(k + 14), S22, &HC33707D6
    GG C, d, a, b, x(k + 3), S23, &HF4D50D87
    GG b, C, d, a, x(k + 8), S24, &H455A14ED
    GG a, b, C, d, x(k + 13), S21, &HA9E3E905
    GG d, a, b, C, x(k + 2), S22, &HFCEFA3F8
    GG C, d, a, b, x(k + 7), S23, &H676F02D9
    GG b, C, d, a, x(k + 12), S24, &H8D2A4C8A
       
    HH a, b, C, d, x(k + 5), S31, &HFFFA3942
    HH d, a, b, C, x(k + 8), S32, &H8771F681
    HH C, d, a, b, x(k + 11), S33, &H6D9D6122
    HH b, C, d, a, x(k + 14), S34, &HFDE5380C
    HH a, b, C, d, x(k + 1), S31, &HA4BEEA44
    HH d, a, b, C, x(k + 4), S32, &H4BDECFA9
    HH C, d, a, b, x(k + 7), S33, &HF6BB4B60
    HH b, C, d, a, x(k + 10), S34, &HBEBFBC70
    HH a, b, C, d, x(k + 13), S31, &H289B7EC6
    HH d, a, b, C, x(k + 0), S32, &HEAA127FA
    HH C, d, a, b, x(k + 3), S33, &HD4EF3085
    HH b, C, d, a, x(k + 6), S34, &H4881D05
    HH a, b, C, d, x(k + 9), S31, &HD9D4D039
    HH d, a, b, C, x(k + 12), S32, &HE6DB99E5
    HH C, d, a, b, x(k + 15), S33, &H1FA27CF8
    HH b, C, d, a, x(k + 2), S34, &HC4AC5665

    II a, b, C, d, x(k + 0), S41, &HF4292244
    II d, a, b, C, x(k + 7), S42, &H432AFF97
    II C, d, a, b, x(k + 14), S43, &HAB9423A7
    II b, C, d, a, x(k + 5), S44, &HFC93A039
    II a, b, C, d, x(k + 12), S41, &H655B59C3
    II d, a, b, C, x(k + 3), S42, &H8F0CCC92
    II C, d, a, b, x(k + 10), S43, &HFFEFF47D
    II b, C, d, a, x(k + 1), S44, &H85845DD1
    II a, b, C, d, x(k + 8), S41, &H6FA87E4F
    II d, a, b, C, x(k + 15), S42, &HFE2CE6E0
    II C, d, a, b, x(k + 6), S43, &HA3014314
    II b, C, d, a, x(k + 13), S44, &H4E0811A1
    II a, b, C, d, x(k + 4), S41, &HF7537E82
    II d, a, b, C, x(k + 11), S42, &HBD3AF235
    II C, d, a, b, x(k + 2), S43, &H2AD7D2BB
    II b, C, d, a, x(k + 9), S44, &HEB86D391

    a = AddUnsigned(a, AA)
    b = AddUnsigned(b, BB)
    C = AddUnsigned(C, CC)
    d = AddUnsigned(d, DD)
  Next
 
  MD5 = LCase(WordToHex(a) & WordToHex(b) & WordToHex(C) & WordToHex(d))
End Function
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "EnEV"
Option Explicit
Sub EnEVUmschalten()
  On Error GoTo Hell
  Call BlattschutzBlattHerstellen(False)
  If ActiveSheet.Range("stEnEV") = 2 Then
    ActiveSheet.Range("stQPmax14").EntireRow.Hidden = True
    ActiveSheet.Range("stQPmax16").EntireRow.Hidden = False
  Else
    ActiveSheet.Range("stQPmax14").EntireRow.Hidden = False
    ActiveSheet.Range("stQPmax16").EntireRow.Hidden = True
  End If
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Public Sub ReferenzErzeugen()
  Dim Geb As Worksheet, Ref As Worksheet, rng As Range, strEnEV As String
  For Each Ref In ThisWorkbook.Worksheets
    If Ref.Name = "Referenz" Then Ref.Delete 'mit Abfrage. Schleife, falls nicht mehr da
  Next Ref
  Set Geb = ThisWorkbook.Sheets("Gebaeude")
  Geb.Copy ThisWorkbook.Sheets("Bauteile") 'vor Blatt Bauteile
  Set Ref = ThisWorkbook.Sheets("Gebaeude (2)")
  Ref.Name = "Referenz"
  Dim obj As Object
  For Each obj In Ref.Shapes
    If obj.AlternativeText <> "+" And obj.AlternativeText <> "-" Then
      obj.Delete
    End If
  Next obj
  Dim RangeName, i%
  RangeName = GetNameArray("Gebaeude", "") 'st|fffd|ren die Steuerzellen?
  For i = 0 To UBound(RangeName)
    Call BezugReferenz(Geb, Ref, RangeName(i)) 'April2016: hier m|fffd|ssen die Fx unterer Abschluss noch rein!
  Next i
  If Geb.Range("stEnEV") = 1 Then strEnEV = "2014" Else strEnEV = "2016"
  Ref.Range("B2") = "Wohngeb|fffd|ude - EnEV " & strEnEV & " - Referenzgeb|fffd|ude"
  Ref.Range("zAnfHT").EntireRow.Hidden = True
  Ref.Range("zAnfHTSt").FormulaLocal = "=ZEILE(" & Ref.Range("zAnfHTStNeu").Address & ")"
  Ref.Range("zAnfQp").EntireRow.Hidden = True
  Ref.Range("zAnfQpSt").FormulaLocal = "=ZEILE(" & Ref.Range("zAnfQpStNeu").Address & ")"
  Geb.Range("zQPzul").FormulaLocal = "=Referenz!" & Ref.Range("zQP").Address
  Geb.Range("zHTzul").FormulaLocal = "=Referenz!" & Ref.Range("zHT").Address
  Geb.Range("zLastRef").FormulaLocal = "=Referenz!" & Ref.Range("zLast").Address
  Ref.Range("zLastRef") = ""
  Ref.Range("gLast_WRG") = "" 'Korrektur 1.6.2016
  Ref.Range("ge_Dia").FormulaLocal = "=AnlageReferenz(gAN)" 'Korrektur 31.1.2016: Formel!!!
  For Each rng In ThisWorkbook.Sheets("Graphisch").Range("zGraphischRef").Cells
    rng.FormulaLocal = Replace(rng.Offset(0, -2).FormulaLocal, "Gebaeude", "Referenz")
  Next rng
  For Each rng In ThisWorkbook.Sheets("Graphisch").Range("zGraphischRefMon").Cells
    rng.FormulaLocal = Replace(rng.Offset(-5, 0).FormulaLocal, "Gebaeude", "Referenz")
  Next rng
End Sub
Private Sub EnEV2014(Geb As Worksheet, Ref As Worksheet, RangeName, R%, C%)
  Select Case RangeName
    Case "gAW_U": Ref.Cells(R, C) = 0.28 'U-Werte
    Case "gAWW_U": Ref.Cells(R, C) = 1.3
    Case "gAWT_U": Ref.Cells(R, C) = 1.8
    Case "gD_U": Ref.Cells(R, C) = 0.2
    Case "gDW_U": Ref.Cells(R, C) = 1.4
    Case "gDOG_U": Ref.Cells(R, C) = 0.2
    Case "gDAbW_U": Ref.Cells(R, C) = 0.2
    Case "gDAB_U": Ref.Cells(R, C) = 0.35
    Case "gG_U": Ref.Cells(R, C) = 0.35
    Case "gGW_U": Ref.Cells(R, C) = 1.3
    Case "gGAG_U": Ref.Cells(R, C) = 0.28
    Case "gWB_Art": Ref.Cells(R, C) = "optimiert - mit Ber|fffd|cksichtigung DIN 4108 Bbl. 2"
    Case "gWB_dU": Ref.Cells(R, C) = ""
    Case "gHV_Art": Ref.Cells(R, C) = "mit Dichtheitspr|fffd|fung - Abluftanlage"
    Case "gSW_g": Ref.Cells(R, C) = 0.6 'g-Werte
    'Case "gSW_Fs": Ref.Cells(R, C) = 0.9 'Fs-Werte NEIN, durchlaufend
    'Case "gSAW_alf": Ref.Cells(R, C) = 0.5 'alpha-Werte NEIN, durchlaufend
    'Case "gSD_alf": Ref.(R, C) = 0.8
    Case "ge_Art": Ref.Cells(R, C) = "Musteranlage"
    Case "ge_Dia" 'nix, Korrektur 31.1.2016: Formel!!!
'        Dim AN, WoE, Anlage
'        AN = Ref.Range("gAN"): WoE = Ref.Range("gWoE")
'        Anlage = AnlageReferenz(AN, WoE)
''        If AN < 500 And WoE <= 2 Then Anlage = "Anlage 9 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, kleine Solaranlage (unter 500 m|fffd|, bis 2 WE)"
''        If AN < 500 And WoE > 2 Then Anlage = "Anlage 10 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, gro|fffd|e Solaranlage (unter 500 m|fffd|, |fffd|ber 2 WE)"
''        If AN >= 500 And WoE <= 2 Then Anlage = "Anlage 11 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, kleine Solaranlage ab 500 m|fffd|, bis 2 WE)"
''        If AN >= 500 And WoE > 2 Then Anlage = "Anlage 12 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, gro|fffd|e Solaranlage (ab 500 m|fffd|, |fffd|ber 2 WE)"
'        Ref.Cells(R, C) = Anlage
  End Select
End Sub
Public Function AnlageReferenz(AN) ', WoE) 'Korrektur 11.2.2016, WoE nicht mehr relevant
  Dim Anlage
  If AN <= 500 Then Anlage = "Anlage 9 - Referenz EnEV2016 - BW-Kessel, Abluftanlage, kleine Solaranlage (bis 500 m|fffd|)"
  If AN > 500 Then Anlage = "Anlage 10 - Referenz EnEV2016 - BW-Kessel, Abluftanlage, gro|fffd|e Solaranlage (mehr als 500 m|fffd|)"
'  If AN < 500 And WoE <= 2 Then Anlage = "Anlage 9 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, kleine Solaranlage (unter 500 m|fffd|, bis 2 WE)"
'  If AN < 500 And WoE > 2 Then Anlage = "Anlage 10 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, gro|fffd|e Solaranlage (unter 500 m|fffd|, |fffd|ber 2 WE)"
'  If AN >= 500 And WoE <= 2 Then Anlage = "Anlage 11 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, kleine Solaranlage ab 500 m|fffd|, bis 2 WE)"
'  If AN >= 500 And WoE > 2 Then Anlage = "Anlage 12 - Referenz EnEV2009 - BW-Kessel, Abluftanlage, gro|fffd|e Solaranlage (ab 500 m|fffd|, |fffd|ber 2 WE)"
  AnlageReferenz = Anlage
End Function
Private Sub BezugReferenz(Geb As Worksheet, Ref As Worksheet, RangeName)
  Dim RangeCell As Range, R%, C%
  For Each RangeCell In Geb.Range(RangeName)
    R = RangeCell.row: C = RangeCell.Column
    Ref.Cells(R, C).FormulaR1C1 = "=Gebaeude!R" & R & "C" & C
    Ref.Cells(R, C).Interior.ColorIndex = -4142
    Ref.Cells(R, C).Validation.Delete
    Call EnEV2014(Geb, Ref, RangeName, R, C)
  Next RangeCell
End Sub
Function EnergieEffizienzKlasse(qE As Double)
  Dim Ruck
  'EnEV 2014/16 Anlage 10
  Select Case qE
    Case Is < 30: Ruck = "A+"
    Case Is < 50: Ruck = "A"
    Case Is < 75: Ruck = "B"
    Case Is < 100: Ruck = "C"
    Case Is < 130: Ruck = "D"
    Case Is < 160: Ruck = "E"
    Case Is < 200: Ruck = "F"
    Case Is < 250: Ruck = "G"
    Case Else: Ruck = "H"
  End Select
  EnergieEffizienzKlasse = Ruck
End Function
Attribute VB_Name = "RechAnlage"
Option Explicit
Option Base 1
Dim Ruck, AA, BB, i1%, i2%, i3%, i4%, Ruck1, Ruck2, Ruck3, Ruck4, Ruck5, Ruck6, Ruck7, Ruck8, Ruck9
Function RechAnlageCode(sArt As String, AN#, qh#, sRuck As String)
  Dim Art, iRuck%
  Art = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  Art = Split(sArt, "#")
  Select Case sRuck
    Case "eP": iRuck = 1
    Case "qP": iRuck = 2
    Case "qWEE": iRuck = 102
    Case "qHEE": iRuck = 103
  End Select
  RechAnlageCode = RechnungAnlage(Art, AN, qh, iRuck)
End Function
Function RechAnlageRange(rArt As Range, AN#, qh#, sRuck As String)
  Dim Art, iRuck%
  Art = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  For i1 = 1 To 10
    Art(i1) = rArt.Cells(i1)
  Next i1
  Select Case sRuck
    Case "eP": iRuck = 1
    Case "qP": iRuck = 2
    Case "qWEE": iRuck = 102
    Case "qHEE": iRuck = 103
  End Select
  RechAnlageRange = RechnungAnlage(Art, AN, qh, iRuck)
End Function
Private Function RechnungAnlage(Art, AN, qh#, wRuck%)
    Dim fP
    fP = ThisWorkbook.Sheets("Gebaeude").Range("stfPStrom")
    Dim qTWc#, qTWcHE#              'TW |fffd|bergabe
    Dim qTWd#, QhTWd#, qTWdHE#      'TW Verteilung
    Dim qTWs#, qhTWs#, qTWsHE#      'TW Speicherung
    Dim aTWg1#, eTWg1#, qTWgHE1#, fpTW1#    'TW Erzeuger 1
    Dim aTWg2#, eTWg2#, qTWgHE2#, fpTW2#    'TW Erzeuger 2
    Dim qHc#, qHcHE#        'H |fffd|bergabe
    Dim qHd#, qHdHE#        'H Verteilung
    Dim qHs#, qHsHE#        'H Speicherung
    Dim aHg1#, eHg1#, qHgHE1#, fpH1#    'H Erzeuger 1
    Dim aHg2#, eHg2#, qHgHE2#, fpH2#    'H Erzeuger 2
    Dim qLc#, qLcHE#            'L |fffd|bergabe
    Dim qLd#, qLdHE#            'L Verteilung
    Dim qLg1#, eLg1#, qLgHE1#      'L Erzeugung W|fffd|T
    Dim qLg2#, eLg2#, qLgHE2#      'L Erzeugung WP
    Dim qLg3#, eLg3#, qLgHE3#      'L Erzeugung HR
    Dim qhn#, nA#                  'L Luftwechselkorrektur
    'Dim fP_Heizung#, fP_Wasser#,
    Dim fP_Strom#, qw#
    Dim qTW_E#, qTWHE_E#, qTW_P#, qTWHE_P#  'Rechenwerte
    Dim qH_E#, qHHE_E#, qH_P#, qHHE_P#
    Dim qhL#, qL_E#, qLHE_E#, qL_P#, qLHE_P#
    Dim qE#, qP#, eP# 'R|fffd|ckgabewerte
'Werte zuweisen
    qTWc = 0: qTWcHE = 0
    qTWd = TW_d(Art(1), 1, AN): QhTWd = TW_d(Art(1), 2, AN): qTWdHE = TW_d(Art(1), 3, AN)
    qTWs = TW_s(Art(2), 1, AN): qhTWs = TW_s(Art(2), 2, AN): qTWsHE = TW_s(Art(2), 3, AN)
    aTWg1 = TW_g(Art(3), Art(7), 11, AN): eTWg1 = TW_g(Art(3), Art(7), 12, AN)
        qTWgHE1 = TW_g(Art(3), Art(7), 13, AN): fpTW1 = TW_g(Art(3), Art(7), 14, AN)
    aTWg2 = TW_g(Art(3), Art(7), 21, AN): eTWg2 = TW_g(Art(3), Art(7), 22, AN)
        qTWgHE2 = TW_g(Art(3), Art(7), 23, AN): fpTW2 = TW_g(Art(3), Art(7), 24, AN)
    qHc = H_c(Art(4), 1, AN): qHcHE = H_c(Art(4), 2, AN)
    qHd = H_d(Art(5), 1, AN, Art(7)): qHdHE = H_d(Art(5), 2, AN, Art(7))
    qHs = H_s(Art(6), 1, AN): qHsHE = H_s(Art(6), 2, AN)
    aHg1 = H_g(Art(7), 11, AN): eHg1 = H_g(Art(7), 12, AN)
        qHgHE1 = H_g(Art(7), 13, AN): fpH1 = H_g(Art(7), 14, AN)
    aHg2 = H_g(Art(7), 21, AN): eHg2 = H_g(Art(7), 22, AN)
        qHgHE2 = H_g(Art(7), 23, AN): fpH2 = H_g(Art(7), 24, AN)
    nA = L_n(Art(11), 1)
    qhn = L_n(Art(11), 2) 'funktioniert nur begrenzt !!!
    qLc = L_c(Art(8), 1, AN): qLcHE = 0
    qLd = L_d(Art(9), 1, AN): qLdHE = 0
    qLg1 = L_g(Art(10), 1, AN, qh, nA): eLg1 = L_g(Art(10), 2, AN, qh, nA): qLgHE1 = L_g(Art(10), 3, AN, qh, nA) 'W|fffd|T
    qLg2 = L_g(Art(10), 4, AN, qh, nA): eLg2 = L_g(Art(10), 5, AN, qh, nA): qLgHE2 = L_g(Art(10), 6, AN, qh, nA) 'WP
    qLg3 = L_g(Art(10), 7, AN, qh, nA): eLg3 = L_g(Art(10), 8, AN, qh, nA): qLgHE3 = L_g(Art(10), 9, AN, qh, nA) 'HR funtioniert nicht
    
    fP_Strom = fP
            '''''    Select Case Mid(Hart, 3, 2) 'Prim|fffd|rfaktoren HEA
            '''''        Case "S1", "S4": fP_Strom = 2.3: fP_Wasser = 2.3
            '''''        Case "S2", "S3": fP_Strom = 2.3: fP_Wasser = 2.3
            '''''        'Case "WP": fP_Heizung = 3: fP_Wasser = 3
            '''''    End Select
            'If art(1) >= 1 Then qw = 12.5 Else qw = 0 'falls mal wieder B|fffd|rogeb|fffd|ude !!?!
    qw = 12.5
'Rechnen
    qTW_E = (qw + qTWc + qTWd + qTWs) * (aTWg1 * eTWg1 + aTWg2 * eTWg2)
    qTWHE_E = (qTWcHE + qTWdHE + qTWsHE) + (aTWg1 * qTWgHE1 + aTWg2 * qTWgHE2)
    qTW_P = (qw + qTWc + qTWd + qTWs) * (aTWg1 * eTWg1 * fpTW1 + aTWg2 * eTWg2 * fpTW2)
    qTWHE_P = qTWHE_E * fP_Strom
    
    qhL = qLg1 + qLg2 + qLg3 - qLd - qLc - qhn
    qL_E = qLg2 * eLg2 + qLg3 * eLg3
    qLHE_E = qLcHE + qLdHE + qLgHE1 + qLgHE2 + qLgHE3
    qL_P = qL_E * fP_Strom
    qLHE_P = qLHE_E * fP_Strom
    
    qH_E = (qh - QhTWd - qhTWs - qhL + qHc + qHd + qHs) * (aHg1 * eHg1 + aHg2 * eHg2)
    qHHE_E = (qHcHE + qHdHE + qHsHE) + (aHg1 * qHgHE1 + aHg2 * qHgHE2)
    qH_P = (qh - QhTWd - qhTWs - qhL + qHc + qHd + qHs) * (aHg1 * eHg1 * fpH1 + aHg2 * eHg2 * fpH2)
    qHHE_P = qHHE_E * fP_Strom
    
    qE = qTW_E + qTWHE_E + qH_E + qHHE_E + qL_E + qLHE_E
    qP = qTW_P + qTWHE_P + qH_P + qHHE_P + qL_P + qLHE_P
    eP = qP / (qh + qw)
    
'R|fffd|ckgabewerte
    'If art(3) > 6 And art(3) < 13 Then: qTWHE_E = qTW_E + qTWHE_E: qTW_E = 0 'Elektro STIMMT NICHT MEHR !???!!
    Ruck = 0
    Select Case wRuck
        Case 1: Ruck = eP 'Anlagenaufwandszahl
        Case 2: Ruck = qP 'Prim|fffd|renergie gesamt
        Case 3: Ruck = qE 'Endenergie gesamt
        Case 4: Ruck = qh + qw 'Gesamtw|fffd|rmebedarf
        Case 5: Ruck = qTW_E + qH_E + qL_E 'Endenergie fossil
        Case 6: Ruck = qTWHE_E + qHHE_E + qLHE_E 'Endenergie Strom STIMMT NICHT MEHR !???!!
        Case 11: Ruck = qTWd
        Case 12: Ruck = QhTWd
        Case 13: Ruck = qTWdHE
        Case 14: Ruck = qTWs
        Case 15: Ruck = qhTWs
        Case 16: Ruck = qTWsHE
        Case 17: Ruck = Application.WorksheetFunction.Round(aTWg1, 2)
                    If aTWg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(aTWg2, 2)
        Case 18: Ruck = Application.WorksheetFunction.Round(eTWg1, 2)
                    If aTWg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(eTWg2, 2)
        Case 19: Ruck = Application.WorksheetFunction.Round(qTWgHE1, 2)
                    If aTWg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qTWgHE2, 2)
        Case 26: Ruck = Application.WorksheetFunction.Round(fpTW1, 2)
                    If aTWg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(fpTW2, 2)
        Case 20: Ruck = qHc
        Case 21: Ruck = qHd
        Case 22: Ruck = qHdHE
        Case 23: Ruck = Application.WorksheetFunction.Round(aHg1, 2)
                    If aHg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(aHg2, 2)
        Case 24: Ruck = Application.WorksheetFunction.Round(eHg1, 2)
                    If aHg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(eHg2, 2)
        Case 25: Ruck = Application.WorksheetFunction.Round(qHgHE1, 2)
                    If aHg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qHgHE2, 2)
        Case 27: Ruck = Application.WorksheetFunction.Round(fpH1, 2)
                    If aHg2 > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(fpH2, 2)
        Case 28: Ruck = qhL
        Case 291: Ruck = qLc
        Case 292: Ruck = qLcHE
        Case 293: Ruck = qLd
        Case 294: Ruck = qLdHE
        Case 295: Ruck = Application.WorksheetFunction.Round(qLg1, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qLg2, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qLg3, 2)
        Case 296: Ruck = Application.WorksheetFunction.Round(eLg1, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(eLg2, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(eLg3, 2)
        Case 297: Ruck = Application.WorksheetFunction.Round(qLgHE1, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qLgHE2, 2)
                    If nA > 0 Then Ruck = Ruck & ":" & Application.WorksheetFunction.Round(qLgHE3, 2)
        Case 30: Ruck = qhn
        Case 31: Ruck = qTW_E 'Endenergie W|fffd|rme TW
        Case 32: Ruck = qH_E 'Endenergie W|fffd|rme H
        Case 33: Ruck = qTWHE_E + qLHE_E 'Endenergie HE TW*L
        Case 34: Ruck = qHHE_E 'Endenergie HE H
        Case 35: Ruck = qHs
        Case 36: Ruck = qHsHE
        Case 37: Ruck = fP_Strom
        'f|fffd|r anteilige Betrachtung
        Case 40: Ruck = qw  'W|fffd|rme TW
        Case 41: Ruck = qh    'W|fffd|rme Heiz
        Case 42: Ruck = qTWc + qTWcHE + qHc + qHcHE + qLc + qLcHE           '|fffd|bergabe
        Case 43: Ruck = qTWd - QhTWd + qTWdHE + qHd + qHdHE + qLd + qLdHE   'Verteilung
        Case 44: Ruck = qTWs - qhTWs + qTWsHE + qHs + qHsHE                 'Speicherung
        Case 45: Ruck = qTWgHE1 + qTWgHE2 + qHgHE1 + qHgHE2 + qLgHE1 + qLgHE2 + qLgHE3  'Erzeugung
                Ruck = Ruck + (qw + qTWc + qTWd + qTWs) * ((aTWg1 * eTWg1 + aTWg2 * eTWg2) - 1)
                Ruck = Ruck + (qh - QhTWd - qhTWs - qhL + qHc + qHd + qHs) * ((aHg1 * eHg1 + aHg2 * eHg2) - 1)
                Ruck = Ruck + (qLg2 + qLg3)
        Case 46: Ruck = qhL    'Gutschrift L|fffd|ftung wird von qlVent abgezogen
        Case 47: Ruck1 = (qTWcHE + qTWdHE + qTWsHE + qTWgHE1 + qTWgHE2) * (fP_Strom - 1) 'Prim|fffd|renergie
                Ruck2 = (qHcHE + qHdHE + qHsHE + qHgHE1 + qHgHE2) * (fP_Strom - 1)
                Ruck3 = (qLcHE + qLdHE + qLgHE1 + qLgHE2 + qLgHE3) * (fP_Strom - 1)
                Ruck4 = (qw + qTWc + qTWd + qTWs) * ((aTWg1 * eTWg1 * fpTW1 + aTWg2 * eTWg2 * fpTW2) - 1)
                Ruck5 = (qh - QhTWd - qhTWs - qhL + qHc + qHd + qHs) * ((aHg1 * eHg1 * fpH1 + aHg2 * eHg2 * fpH2) - 1)
                Ruck6 = (qLg2 + qLg3) * (fP_Strom - 1)
                Ruck = Ruck1 + Ruck2 + Ruck3 + Ruck4 + Ruck5 + Ruck6
        Case 101: Ruck = Art
        Case 102: Ruck = qTW_E + qH_E + qL_E      'Endenergie ohne HE f|fffd|r Diagramme
        Case 103: Ruck = qTWHE_E + qHHE_E + qLHE_E    'Endenergie nur HE f|fffd|r Diagramme
    End Select
    RechnungAnlage = Ruck
End Function
Function TW_d(Art, wRuck%, AN) 'wRuck: 1-qTWd, 2-qhTWd (W|fffd|rmegutschrift), 3-qTWdHE
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
    If Art = 3 And AN > 500 Then Art = 1 'OHNE Zirkulation nur bis 500 m2
    If Art = 4 And AN > 500 Then Art = 2
'   Tabelle C.1-2a + b + c
    Select Case Art
        Case 1 'Verteilung UNbeheizt - mit Zirkulation
            If wRuck = 1 Then: BB = Array(14.6, 11.6, 10.1, 8.7, 7.6, 7.1, 6.9, 6.8, 6.6, 6.6, 6.6)
            If wRuck = 2 Then: BB = Array(1.7, 1.7, 1.8, 1.8, 1.9, 2#, 2.1, 2.1, 2.2, 2.3, 2.3)
            If wRuck = 3 Then: BB = Array(1.14, 0.82, 0.66, 0.49, 0.34, 0.27, 0.22, 0.18, 0.14, 0.11, 0.09)
            TW_d = F_interpol(AA, BB, AN)
        Case 2 'Verteilung beheizt - mit Zirkulation
            If wRuck = 1 Then: BB = Array(12.1, 9.8, 8.7, 7.7, 6.9, 6.6, 6.5, 6.4, 6.3, 6.3, 6.3)
            If wRuck = 2 Then: BB = Array(5.4, 4.4, 3.9, 3.5, 3.1, 3#, 2.9, 2.9, 2.8, 2.8, 2.8)
            If wRuck = 3 Then: BB = Array(1.14, 0.82, 0.66, 0.49, 0.34, 0.27, 0.22, 0.18, 0.14, 0.11, 0.09)
            TW_d = F_interpol(AA, BB, AN)
        Case 3 'Verteilung UNbeheizt - ohne Zirkulation
            If wRuck = 1 Then: BB = Array(6.7, 5.4, 4.7, 4#, 3.4, 0, 0, 0, 0, 0, 0)
            If wRuck = 2 Then: BB = Array(1#, 1#, 1#, 1#, 1#, 0, 0, 0, 0, 0, 0)
            If wRuck = 3 Then: TW_d = 0: Exit Function
            TW_d = F_interpol(AA, BB, AN) 'If AN > 500 Then TW_d = "AN zu hoch" Else
        Case 4 'Verteilung beheizt - ohne Zirkulation
            If wRuck = 1 Then: BB = Array(5.1, 4.2, 3.8, 3.3, 3#, 0, 0, 0, 0, 0, 0)
            If wRuck = 2 Then: BB = Array(2.3, 1.9, 1.7, 1.5, 1.3, 0, 0, 0, 0, 0, 0)
            If wRuck = 3 Then: TW_d = 0: Exit Function
            TW_d = F_interpol(AA, BB, AN) 'If AN > 500 Then TW_d = "AN zu hoch" Else
        Case 5 'dezentral - 1 Raum 1 Zapfstelle
            If wRuck = 1 Then TW_d = 0.25
            If wRuck = 2 Then TW_d = 0.11
            If wRuck = 3 Then TW_d = 0
        Case 6 'dezentral - 1 Raum mehrere Zapfstellen
            If wRuck = 1 Then TW_d = 0.76
            If wRuck = 2 Then TW_d = 0.34
            If wRuck = 3 Then TW_d = 0
        Case 7 'dezentral - 2 R|fffd|ume gemeinsame Installationswand
            If wRuck = 1 Then: TW_d = 1.01
            If wRuck = 2 Then: TW_d = 0.45
            If wRuck = 3 Then: TW_d = 0
        Case 8 'wohnungszentral
            If wRuck = 1 Then: TW_d = 1.51
            If wRuck = 2 Then: TW_d = 0.68
            If wRuck = 3 Then: TW_d = 0
    End Select
End Function
Function TW_s(Art, wRuck%, AN) 'wRuck: 1-qTWs, 2-qhTWs (W|fffd|rmegutschrift), 3-qTWsHE
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
    Dim ANN
            ''bei Tagesspeicher (..de3) und Kombikessel (..dg) Nutzfl|fffd|che durch WE teilen !!!
            'If art = 3 Then
            '    Select Case CInt(AN)
            '        Case 147, 130: ANN = AN
            '        Case 447: ANN = AN / 2
            '        Case 1331: ANN = AN / 12
            '        Case 716: ANN = AN / 9
            '    End Select
            'Else
            '    ANN = AN
            'End If
    ANN = AN
'   Tabelle C.1-3a + b + c
    Select Case Art
        Case 0: TW_s = 0 'KEINE Speicherung
        Case 1 'Aufstellung beheizt - indirekt beheizter Speicher
            If wRuck = 1 Then: BB = Array(5.3, 3.9, 3.1, 2.3, 1.5, 1.1, 0.9, 0.8, 0.7, 0.5, 0.4)
            If wRuck = 2 Then: BB = Array(2.4, 1.7, 1.4, 1, 0.7, 0.5, 0.4, 0.4, 0.3, 0.2, 0.2)
            If wRuck = 3 Then: BB = Array(0.11, 0.08, 0.07, 0.05, 0.04, 0.04, 0.03, 0.03, 0.03, 0.04, 0.04)
            TW_s = F_interpol(AA, BB, ANN)
        Case 2 'Aufstellung beheizt - Elektro-Nachtspeicher
            If wRuck = 1 Then: BB = Array(4.6, 3.7, 3.2, 2.6, 2, 1.7, 1.6, 1.4, 1.2, 0.9, 0.8)
            If wRuck = 2 Then: BB = Array(2.1, 1.7, 1.4, 1.2, 0.9, 0.7, 0.7, 0.6, 0.5, 0.4, 0.3)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 3 Then: TW_s = 0
        Case 3 'Aufstellung beheizt - Elektro-Tagesspeicher
            If wRuck = 1 Then: BB = Array(2.9, 2.3, 1.9, 1.5, 1.2, 1, 0.8, 0.7, 0.5, 0.5, 0.4)
            If wRuck = 2 Then: BB = Array(1.3, 1, 0.9, 0.7, 0.5, 0.4, 0.4, 0.3, 0.2, 0.2, 0.2)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 3 Then: TW_s = 0
        Case 4 'Aufstellung beheizt - Elektro-Kleispeicher
            If wRuck = 1 Then: TW_s = 1.2
            If wRuck = 2 Then: TW_s = 0.5
            If wRuck = 3 Then: TW_s = 0
        Case 5 'Aufstellung beheizt - bivalenter Solarspeicher
            If wRuck = 1 Then: BB = Array(3.5, 2.5, 2, 1.4, 1.5, 1.1, 0.9, 0.8, 0.7, 0.5, 0.4)
            If wRuck = 2 Then: BB = Array(1.6, 1.1, 0.9, 0.6, 0.7, 0.5, 0.4, 0.4, 0.3, 0.2, 0.2)
            If wRuck = 3 Then: BB = Array(0.11, 0.08, 0.07, 0.05, 0.04, 0.04, 0.03, 0.03, 0.03, 0.04, 0.04)
            TW_s = F_interpol(AA, BB, ANN) 'Hilfsenergie wie bei indirekt beheiztem Speicher !!!!!
        Case 6 'Aufstellung beheizt - gasbeheizter Speicher
            If wRuck = 1 Then: BB = Array(17.8, 15, 13.4, 11.6, 9.9, 8.8, 8.5, 7.2, 6.1, 5, 4.1)
            If wRuck = 2 Then: BB = Array(8, 6.7, 6, 5.2, 4.4, 3.9, 3.8, 3.2, 2.8, 2.3, 1.8)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 3 Then: TW_s = 0
        Case 7 'Aufstellung UNbeheizt - indirekt beheizter Speicher
            If wRuck = 1 Then: BB = Array(6.5, 4.8, 3.8, 2.8, 1.9, 1.4, 1.1, 1, 0.9, 0.7, 0.5)
            If wRuck = 3 Then: BB = Array(0.11, 0.08, 0.07, 0.05, 0.04, 0.04, 0.03, 0.03, 0.03, 0.04, 0.04)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 2 Then: TW_s = 0
        Case 8 'Aufstellung UNbeheizt - Elektro-Nachtspeicher
            If wRuck = 1 Then: BB = Array(5.5, 4.4, 3.8, 3.1, 2.4, 2, 1.9, 1.7, 1.4, 1.1, 0.9)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 2 Then: TW_s = 0
            If wRuck = 3 Then: TW_s = 0
        Case 9 'Aufstellung UNbeheizt - Elektro-Tagesspeicher
            If wRuck = 1 Then: BB = Array(3.4, 2.7, 2.3, 1.8, 1.4, 1.1, 1, 0.8, 0.6, 0.5, 0.4)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 2 Then: TW_s = 0
            If wRuck = 3 Then: TW_s = 0
        Case 10 'Aufstellung UNbeheizt - Elektro-Kleispeicher
            If wRuck = 1 Then: TW_s = 1.5
            If wRuck = 2 Then: TW_s = 0
            If wRuck = 3 Then: TW_s = 0
        Case 11 'Aufstellung UNbeheizt - bivalenter Solarspeicher
            If wRuck = 1 Then: BB = Array(4.3, 3.1, 2.4, 1.7, 1.9, 1.4, 1.1, 1, 0.9, 0.7, 0.5)
            If wRuck = 3 Then: BB = Array(0.11, 0.08, 0.07, 0.05, 0.04, 0.04, 0.03, 0.03, 0.03, 0.04, 0.04)
            TW_s = F_interpol(AA, BB, ANN) 'Hilfsenergie wie bei indirekt beheiztem Speicher !!!!!
            If wRuck = 2 Then: TW_s = 0
        Case 12 'Aufstellung UNbeheizt - gasbeheizter Speicher
            If wRuck = 1 Then: BB = Array(21.3, 18, 16.1, 14, 11.9, 10.5, 10.2, 8.6, 7.3, 6, 4.9)
            TW_s = F_interpol(AA, BB, ANN)
            If wRuck = 2 Then: TW_s = 0
            If wRuck = 3 Then: TW_s = 0
    End Select
End Function
Function TW_g(Art, HArt, wRuck%, AN)   'wRuck: 11-aTWg, 12-eTWg, 13-qTWgHE, 14-fP  Erzeuger 1
                                                'wRuck: 21-aTWg, 22-eTWg, 23-qTWgHE, 24-fP  Erzeuger 2
    Dim fP
    fP = ThisWorkbook.Sheets("Gebaeude").Range("stfPStrom")
    Dim tempAlf
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
    Dim ANN, alfWS, alfWG, eTWgS, eTWgG, qTWgHES, qTWgHEG, alf_Grundlast, alf_Spitzenlast
            ''bei Tagesspeicher (..de3) und Kombikessel (..dg) Nutzfl|fffd|che durch WE teilen !!!
            'If art = 4 Or art = 5 Or art = 8 Then
            '    Select Case CInt(AN)
            '        Case 147, 130: ANN = AN
            '        Case 447: ANN = AN / 2
            '        Case 1331: ANN = AN / 12
            '        Case 716: ANN = AN / 9
            '    End Select
            'Else
            '    ANN = AN
            'End If
    If Art = 112 And AN > 500 Then Art = 111 'OHNE Zirkulation nur bis 500 m2
    If Art = 114 And AN > 500 Then Art = 113
    ANN = AN
'   Tabelle C.1-4b + c + d + e und teilweise a f|fffd|r Deckungsanteil
    If Art <= 5 Or Art = 33 Or Art = 44 Or Art = 55 Then
        If wRuck = 11 Then
            TW_g = 1 ' 1 W|fffd|rmeerzeuger
        ElseIf wRuck = 12 Then
            Select Case Art
                Case 0: TW_g = 0
                Case 1 'Konstanttemperaturkessel
                    BB = Array(1.82, 1.71, 1.64, 1.56, 1.46, 1.4, 1.36, 1.31, 1.26, 1.21, 1.17)
                    TW_g = F_interpol(AA, BB, ANN)
                Case 2 'Niedertemperaturkessel
                    BB = Array(1.21, 1.19, 1.18, 1.17, 1.15, 1.14, 1.14, 1.13, 1.12, 1.11, 1.1)
                    TW_g = F_interpol(AA, BB, ANN)
                Case 3 'Brennwertkessel
                    BB = Array(1.17, 1.15, 1.14, 1.13, 1.12, 1.11, 1.1, 1.1, 1.09, 1.08, 1.08)
                    TW_g = F_interpol(AA, BB, ANN)
                Case 33 'Brennwertkessel verbessert
                    BB = Array(1.15, 1.13, 1.12, 1.11, 1.1, 1.09, 1.08, 1.07, 1.07, 1.06, 1.05)
                    TW_g = F_interpol(AA, BB, ANN)
                Case 4 'Kombikessel NT - DL
                    BB = Array(1.27, 1.22, 1.2, 1.17, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15)
                    'If ANN > 500 Then TW_g = "ANN zu hoch" Else TW_g = F_interpol(AA, BB, ANN) AUSGESCHALTET !!!
                    TW_g = F_interpol(AA, BB, ANN)
                Case 44 'Kombikessel NT - KSp
                    BB = Array(1.41, 1.32, 1.27, 1.18, 1.18, 1.18, 1.18, 1.18, 1.18, 1.18, 1.18)
                    'If ANN > 500 Then TW_g = "ANN zu hoch" Else TW_g = F_interpol(AA, BB, ANN) AUSGESCHALTET !!!
                    TW_g = F_interpol(AA, BB, ANN)
                Case 5 'Kombikessel Brennwert - DL
                    BB = Array(1.23, 1.19, 1.16, 1.14, 1.11, 1.11, 1.11, 1.11, 1.11, 1.11, 1.11)
                    'If ANN > 500 Then TW_g = "ANN zu hoch" Else TW_g = F_interpol(AA, BB, ANN) AUSGESCHALTET !!!
                    TW_g = F_interpol(AA, BB, ANN)
                Case 55 'Kombikessel Brennwert - KSp
                    BB = Array(1.36, 1.28, 1.24, 1.19, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15)
                    'If ANN > 500 Then TW_g = "ANN zu hoch" Else TW_g = F_interpol(AA, BB, ANN) AUSGESCHALTET !!!
                    TW_g = F_interpol(AA, BB, ANN)
            End Select
        ElseIf wRuck = 13 Then
            Select Case Art
                Case 1 To 3, 33: BB = Array(0.3, 0.24, 0.21, 0.17, 0.13, 0.11, 0.1, 0.084, 0.069, 0.054, 0.044)
                Case 4 To 5, 44, 55: BB = Array(0.2, 0.19, 0.18, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17)
            End Select
            TW_g = F_interpol(AA, BB, ANN)
        ElseIf wRuck = 14 Then
            TW_g = 1.1 'PRIM|fffd|RENERGIE WASSER 13.2.
        ElseIf wRuck > 90 Then
            TW_g = 0 'kein zweiter W|fffd|rmeerzeuger
        End If
    ElseIf Art >= 6 Then
        If wRuck < 21 Then
        '   Erzeuger 1
            Select Case Art
                Case 6 'Gas-Speicherwassererw|fffd|rmer
                    If wRuck = 11 Then: TW_g = 1
                    If wRuck = 12 Then: TW_g = 1.22
                    If wRuck = 13 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = 1.1
                Case 7 'Elektro-Heizstab
                    If wRuck = 11 Then: TW_g = 1
                    If wRuck = 12 Then: TW_g = 1
                    If wRuck = 13 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = fP
                Case 8 'E-Durchlauferhitzer, Speicher
                    If wRuck = 11 Then: TW_g = 1
                    If wRuck = 12 Then: TW_g = 1
                    If wRuck = 13 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = fP
                Case 91, 95 'Elektro-HEIZUNGS-WP Wasser/Wasser mit/ohne elektr. Erg|fffd|nzungsheizung
                    If wRuck = 11 Then
                        If Art = 91 Then TW_g = 0.95 Else TW_g = 1
                    End If
                    If wRuck = 12 Then: TW_g = 0.23
                    If wRuck = 13 Then: TW_g = 0.8 * ANN ^ (-0.1)
                    If wRuck = 14 Then: TW_g = fP
                Case 92, 96 'Elektro-WP Erdreich(Sole)/Wasser mit/ohne elektr. Erg|fffd|nzungsheizung
                    If wRuck = 11 Then
                        If Art = 92 Then TW_g = 0.95 Else TW_g = 1
                    End If
                    If wRuck = 12 Then: TW_g = 0.27
                    If wRuck = 13 Then: TW_g = 0.5 * ANN ^ (-0.1)
                    If wRuck = 14 Then: TW_g = fP
                Case 93, 97 'Elektro-WP Luft/Wasser mit/ohne elektr. Erg|fffd|nzungsheizung
                    If wRuck = 11 Then
                        If Art = 93 Then TW_g = 0.95 Else TW_g = 1
                    End If
                    If wRuck = 12 Then: TW_g = 0.3
                    If wRuck = 13 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = fP
                Case 94, 98 'Elektro-WP Abluft/Wasser mit/ohne elektr. Erg|fffd|nzungsheizung
                    If wRuck = 11 Then
                        If Art = 94 Then TW_g = 0.95 Else TW_g = 1
                    End If
                    If wRuck = 12 Then: TW_g = 0.26
                    If wRuck = 13 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = fP
                Case 10 'Nah-/Fernw|fffd|rme
                    If wRuck = 11 Then: TW_g = 1
                    If wRuck = 12 Then: TW_g = 1.14
                    If wRuck = 13 Then: TW_g = 0.4
                    If wRuck = 14 Then: TW_g = 0.7 'KWK fossil !!!!
                Case 111 'solare Trinkwassererw|fffd|rmung - Speicher und Verteilleiungen beheizt, MIT Zirkulation
                    If wRuck = 11 Or wRuck = 13 Then 'Speicher und Verteilleiungen beheizt, MIT Zirkulation
                        BB = Array(0.55, 0.54, 0.53, 0.51, 0.51, 0.51, 0.51, 0.51, 0.51, 0.51, 0.51)
                        TW_g = F_interpol(AA, BB, ANN)
                    End If
                    If wRuck = 12 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = 0
                Case 112 'solare Trinkwassererw|fffd|rmung - Speicher und Verteilleiungen beheizt, OHNE Zirkulation
                    If wRuck = 11 Or wRuck = 13 Then 'Speicher und Verteilleiungen beheizt, OHNE Zirkulation
                        BB = Array(0.68, 0.64, 0.62, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58)
                        TW_g = F_interpol(AA, BB, ANN)
                    End If
                    If wRuck = 12 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = 0
                Case 113 'solare Trinkwassererw|fffd|rmung - Speicher und Verteilleiungen UNbeheizt, MIT Zirkulation
                    If wRuck = 11 Or wRuck = 13 Then 'Speicher und Verteilleiungen UNbeheizt, MIT Zirkulation
                        BB = Array(0.51, 0.51, 0.5, 0.49, 0.53, 0.5, 0.48, 0.45, 0.42, 0.41, 0.41)
                        TW_g = F_interpol(AA, BB, ANN)
                    End If
                    If wRuck = 12 Then: TW_g = 0
                    If wRuck = 14 Then: TW_g = 0
                Case 114 'solare Trinkwassererw|fffd|rmung - Speicher und Verteilleiungen UNbeheizt, OHNE Zirkulation
                    If wRuck = 11 Or wRuck = 13 Then 'Speicher und Verteilleiungen UNbeheizt, OHNE Zirkulation
                        BB = Array(0.63, 0.61, 0.59, 0.57, 0.54, 0.51, 0.49, 0.46, 0.43, 0.42, 0.42)
                        TW_g = F_interpol(AA, BB, ANN)
                    End If
                    If wRuck = 12 Then: TW_g = 0
                    'If wRuck = 13 Then: TW_g = 1
                    If wRuck = 14 Then: TW_g = 0
            End Select
            'neue Tabelle f|fffd|r Hilfsenergie solar 2003/2009
            If Art > 110 And wRuck = 13 Then 'neue Tabelle
                tempAlf = TW_g
                If tempAlf < 0.25 Then
                    BB = Array(3.1, 2.2, 1.8, 1.3, 1, 0.8, 0.7, 0.6, 0.5, 0.5, 0.5)
                    TW_g = F_interpol(AA, BB, ANN)
                ElseIf tempAlf < 0.35 Then
                    BB = Array(2, 1.5, 1.2, 0.9, 0.6, 0.5, 0.5, 0.4, 0.4, 0.3, 0.3)
                    TW_g = F_interpol(AA, BB, ANN)
                ElseIf tempAlf < 0.45 Then
                    BB = Array(1.5, 1.1, 0.9, 0.7, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2)
                    TW_g = F_interpol(AA, BB, ANN)
                ElseIf tempAlf < 0.55 Then
                    BB = Array(1.2, 0.9, 0.7, 0.5, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 0.2)
                    TW_g = F_interpol(AA, BB, ANN)
                Else
                    BB = Array(1, 0.7, 0.6, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 0.2, 0.2)
                    TW_g = F_interpol(AA, BB, ANN)
                End If
            End If

        ElseIf wRuck > 20 Then
       '   Erzeuger 2
            Select Case Art
                Case 6, 7, 8 'Gas-Speicherwasserw|fffd|rmer und Elektro
                    TW_g = 0
                Case 91 To 94 'W|fffd|rmepumpen MIT elektr. Erg|fffd|nzungsheizung
                    If wRuck = 21 Then: TW_g = 0.05
                    If wRuck = 22 Then: TW_g = 1
                    If wRuck = 23 Then: TW_g = 0
                    If wRuck = 24 Then TW_g = fP
                Case 95 To 98 'W|fffd|rmepumpen OHNE elektr. Erg|fffd|nzungsheizung
                    TW_g = 0
                Case 10 'Nah-/Fernw|fffd|rme
                    TW_g = 0
                Case 111, 112, 113, 114 'solare Trinkwassererw|fffd|rmung
                    If wRuck = 21 Then
                        Select Case Art
                            Case 111 'Speicher und Verteilleiungen beheizt, MIT Zirkulation
                                BB = Array(0.55, 0.54, 0.53, 0.51, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54)
                            Case 112 'Speicher und Verteilleiungen beheizt, OHNE Zirkulation
                                BB = Array(0.68, 0.64, 0.62, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58)
                            Case 113 'Speicher und Verteilleiungen UNbeheizt, MIT Zirkulation
                                BB = Array(0.51, 0.51, 0.5, 0.49, 0.53, 0.5, 0.48, 0.45, 0.42, 0.41, 0.41)
                            Case 114 'Speicher und Verteilleiungen UNbeheizt, OHNE Zirkulation
                                BB = Array(0.63, 0.61, 0.59, 0.57, 0.54, 0.51, 0.49, 0.46, 0.43, 0.42, 0.42)
                        End Select
                        TW_g = 1 - F_interpol(AA, BB, ANN)
                    ElseIf wRuck = 22 Then
                        Select Case HArt 'HEIZUNG !!!!!
                            Case 1, 11 'Konstanttemperaturkessel
                                BB = Array(1.82, 1.71, 1.64, 1.56, 1.46, 1.4, 1.36, 1.31, 1.26, 1.21, 1.17)
                                TW_g = F_interpol(AA, BB, ANN)
                            Case 2, 3, 4, 12, 13, 14 'Niedertemperaturkessel
                                BB = Array(1.21, 1.19, 1.18, 1.17, 1.15, 1.14, 1.14, 1.13, 1.12, 1.11, 1.1)
                                TW_g = F_interpol(AA, BB, ANN)
                            Case 5, 6, 7, 15, 16, 17 'Brennwertkessel
                                BB = Array(1.17, 1.15, 1.14, 1.13, 1.12, 1.11, 1.1, 1.1, 1.09, 1.08, 1.08)
                                TW_g = F_interpol(AA, BB, ANN)
                            Case 8, 9, 10, 18, 19, 20 'Brennwertkessel verbessert
                                BB = Array(1.15, 1.13, 1.12, 1.11, 1.1, 1.09, 1.08, 1.07, 1.07, 1.06, 1.05)
                                TW_g = F_interpol(AA, BB, ANN)
                            Case 111 To 182 'W|fffd|rmepumpe
                                TW_g = "Fehler" 'K|fffd|NNEN WIR NOCH NICHT !!!
                            Case 21 'Elektrodirekt oder -speicher
                                TW_g = 1
                            Case 22 'Fern- und Nahw|fffd|rme
                                TW_g = 1.14
                        End Select
                    ElseIf wRuck = 23 Then
                        Select Case HArt 'HEIZUNG !!!!!
                            Case 1 To 20 'Kessel
                                BB = Array(0.3, 0.24, 0.21, 0.17, 0.13, 0.11, 0.1, 0.084, 0.069, 0.054, 0.044)
                                TW_g = F_interpol(AA, BB, ANN)
                            Case 111 To 182 'W|fffd|rmepumpe
                                TW_g = "Fehler" 'K|fffd|NNEN WIR NOCH NICHT !!!
                            Case 21 'Elektrodirekt oder -speicher
                                TW_g = 0
                            Case 22 'Fern- und Nahw|fffd|rme
                                TW_g = 0.4
                        End Select
                    ElseIf wRuck = 24 Then
                        Select Case HArt 'HEIZUNG !!!!!
                            Case 1 To 20 'Kessel
                                TW_g = 1.1
                            Case 111 To 182 'W|fffd|rmepumpe
                                TW_g = "Fehler" 'K|fffd|NNEN WIR NOCH NICHT !!!
                            Case 21 'Elektrodirekt oder -speicher
                                TW_g = 0
                            Case 22 'Fern- und Nahw|fffd|rme
                                TW_g = 0.7
                        End Select
                    End If
            End Select
        End If
    End If
End Function
Function H_c(Art, wRuck%, AN) 'wRuck: 1-qHc, 2-qHcHE
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
'   Tabelle C.3-1 nicht vollst|fffd|ndig
    Select Case Art
        Case 0: H_c = 0
        Case 1 'Wasserheizung, Thermostatventil, 1K oder Fu|fffd|bodenhzt., Einzelraumregler, 1K
            H_c = 1.1
        Case 2 'Wasserheizung, Thermostatventil, 2K oder Fu|fffd|bodenhzt., Einzelraumregler, 2K
            H_c = 3.3
        Case 3 'Elektroheizung Direkt, Anordnung Au|fffd|enwandbereich
            H_c = 0.7
        Case 4 'Elektroheizung Speicher, Anordnung Au|fffd|enwandbereich
            H_c = 4.4
        Case 5 'Elektroheizung Speicher 80%, Direkt 20%
            H_c = 0.8 * 4.4 + 0.2 * 0.7
    End Select
    If wRuck = 2 Then: H_c = 0
End Function
Function H_d(Art, wRuck%, AN, artErz) 'wRuck: 1-qHd, 2-qHdHE
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
    Dim ANN
'            'bei Kombikessel (..dg) Nutzfl|fffd|che durch WE teilen !!!
'            'unter der Annahme, da|fffd| raumluftunabh|fffd|ngig immer = Kombikessel
'                If artErz = 6 Or artErz = 7 Or artErz = 8 Or artErz = 9 Then
'                    Select Case CInt(AN)
'                        Case 147, 130: ANN = AN
'                        Case 447: ANN = AN / 2
'                        Case 1331: ANN = AN / 12
'                        Case 716: ANN = AN / 9
'                    End Select
'                Else
'                    ANN = AN
'                End If
    ANN = AN
'   Tabelle C.3-2a + b + c + d
    If wRuck = 1 Then
        Select Case Art
            Case 0: H_d = 0 'DEZENTRAL
            Case 11, 31 'Verteilung horiz UNbeheizt - Str|fffd|nge au|fffd|en 90/70
                BB = Array(15.2, 11.5, 9.7, 7.9, 6.4, 5.7, 5.3, 4.9, 4.6, 4.4, 4.3)
            Case 12, 32 'Verteilung horiz UNbeheizt - Str|fffd|nge au|fffd|en 70/55
                BB = Array(11.4, 8.6, 7.2, 5.8, 4.7, 4.2, 3.9, 3.6, 3.4, 3.2, 3.1)
            Case 13, 33 'Verteilung horiz UNbeheizt - Str|fffd|nge au|fffd|en 55/45
                BB = Array(8.6, 6.5, 5.4, 4.4, 3.5, 3.1, 2.9, 2.7, 2.5, 2.4, 2.3)
            Case 14, 34 'Verteilung horiz UNbeheizt - Str|fffd|nge au|fffd|en 35/28
                BB = Array(4.4, 3.2, 2.7, 2.1, 1.7, 1.4, 1.3, 1.2, 1.1, 1.1, 1)
            Case 15, 35 'Verteilung horiz UNbeheizt - Str|fffd|nge innen 90/70
                BB = Array(13.8, 10.3, 8.5, 6.8, 5.4, 4.6, 4.3, 3.9, 3.7, 3.4, 3.3)
            Case 16, 36 'Verteilung horiz UNbeheizt - Str|fffd|nge innen 70/55
                BB = Array(10.3, 7.7, 6.3, 5, 3.9, 3.4, 3.1, 2.9, 2.7, 2.5, 2.4)
            Case 17, 37 'Verteilung horiz UNbeheizt - Str|fffd|nge innen 55/45
                BB = Array(7.8, 5.8, 4.8, 3.7, 2.9, 2.5, 2.3, 2.1, 1.9, 1.8, 1.8)
            Case 18, 38 'Verteilung horiz UNbeheizt - Str|fffd|nge innen 35/28
                BB = Array(4, 2.9, 2.3, 1.8, 1.3, 1.1, 1, 0.9, 0.8, 0.8, 0.7)
            Case 21, 41 'Verteilung horiz beheizt - Str|fffd|nge au|fffd|en 90/70
                BB = Array(4.3, 3.8, 3.5, 3.2, 2.9, 2.8, 2.8, 2.7, 2.7, 2.6, 2.6)
            Case 22, 42 'Verteilung horiz beheizt - Str|fffd|nge au|fffd|en 70/55
                BB = Array(3.1, 2.7, 2.5, 2.2, 2.1, 2, 2, 1.9, 1.9, 1.9, 1.8)
            Case 23, 43 'Verteilung horiz beheizt - Str|fffd|nge au|fffd|en 55/45
                BB = Array(2.2, 1.9, 1.7, 1.6, 1.5, 1.4, 1.4, 1.3, 1.3, 1.3, 1.3)
            Case 24, 44 'Verteilung horiz beheizt - Str|fffd|nge au|fffd|en 35/28
                BB = Array(0.8, 0.7, 0.6, 0.6, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
            Case 25, 45 'Verteilung horiz beheizt - Str|fffd|nge innen 90/70
                BB = Array(4.1, 3.6, 3.3, 3, 2.8, 2.7, 2.6, 2.5, 2.5, 2.5, 2.4)
            Case 26, 46 'Verteilung horiz beheizt - Str|fffd|nge innen 70/55
                BB = Array(2.9, 2.5, 2.3, 2.1, 2, 1.9, 1.8, 1.8, 1.8, 1.7, 1.7)
            Case 27, 47 'Verteilung horiz beheizt - Str|fffd|nge innen 55/45
                BB = Array(2.1, 1.8, 1.6, 1.5, 1.4, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2)
            Case 28, 48 'Verteilung horiz beheizt - Str|fffd|nge innen 35/28
                BB = Array(0.7, 0.6, 0.6, 0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4)
        End Select
    ElseIf wRuck = 2 Then
        Select Case Art
            Case 0: H_d = 0 'DEZENTRAL
            Case 11, 15, 21, 25 '90/70 - geregelte Pumpen
                BB = Array(1.69, 1.12, 0.86, 0.61, 0.42, 0.33, 0.28, 0.23, 0.2, 0.17, 0.16)
            Case 12, 16, 22, 26 '70/55 - geregelte Pumpen
                BB = Array(1.85, 1.24, 0.95, 0.68, 0.48, 0.38, 0.33, 0.28, 0.24, 0.22, 0.2)
            Case 13, 17, 23, 27 '55/45 - geregelte Pumpen
                BB = Array(1.98, 1.35, 1.06, 0.78, 0.57, 0.47, 0.42, 0.37, 0.33, 0.3, 0.28)
            Case 14, 18, 24, 28 '35/28 - geregelte Pumpen
                BB = Array(3.52, 2.4, 1.88, 1.39, 1.01, 0.83, 0.74, 0.65, 0.58, 0.53, 0.5)
            Case 31, 35, 41, 45 '90/70 - UNgeregelte Pumpen
                BB = Array(2.02, 1.42, 1.11, 0.81, 0.57, 0.45, 0.39, 0.33, 0.28, 0.24, 0.22)
            Case 32, 36, 42, 46 '70/55 - UNgeregelte Pumpen
                BB = Array(2.22, 1.56, 1.24, 0.91, 0.65, 0.52, 0.46, 0.39, 0.34, 0.3, 0.28)
            Case 33, 37, 43, 47 '55/45 - UNgeregelte Pumpen
                BB = Array(2.38, 1.71, 1.38, 1.04, 0.78, 0.64, 0.58, 0.51, 0.46, 0.42, 0.4)
            Case 34, 38, 44, 48 '35/28 - UNgeregelte Pumpen
                BB = Array(4.22, 3.03, 2.44, 1.85, 1.38, 1.14, 1.02, 0.9, 0.81, 0.74, 0.7)
        End Select
    End If
    H_d = F_interpol(AA, BB, ANN)
End Function
Function H_s(Art, wRuck%, AN) 'wRuck: 1-qHs, 2-qHsHE
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
'   Tabelle C.3-3
    Select Case Art
        Case 0: H_s = 0 'KEINE Speicherung
        Case 1 'beheizt - 55/45
            If wRuck = 1 Then: BB = Array(0.3, 0.2, 0.2, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0)
        Case 2 'beheizt - 35/28
            If wRuck = 1 Then: BB = Array(0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0)
        Case 3 'UNbeheizt - 55/45
            If wRuck = 1 Then: BB = Array(2.6, 1.9, 1.5, 1.1, 0.7, 0.5, 0.4, 0.3, 0.2, 0.2, 0.2)
        Case 4 'UNbeheizt - 35/28
            If wRuck = 1 Then: BB = Array(1.4, 1, 0.8, 0.6, 0.4, 0.3, 0.2, 0.2, 0.1, 0.1, 0.1)
    End Select
    H_s = F_interpol(AA, BB, AN)
    If wRuck = 2 And Art > 0 Then
        BB = Array(0.63, 0.43, 0.34, 0.24, 0.16, 0.12, 0.1, 0.08, 0.07, 0.06, 0.05)
        H_s = F_interpol(AA, BB, AN)
    End If
End Function
Function H_g(Art, wRuck%, AN)  'wRuck: 11-aHg, 12-eHg, 13-qHgHE, 14-fP  Erzeuger 1
                                'wRuck: 21-aHg, 22-eHg, 23-qHgHE, 24-fP  Erzeuger 2
    Dim fP
    fP = ThisWorkbook.Sheets("Gebaeude").Range("stfPStrom")
    AA = Array(100, 150, 200, 300, 500, 750, 1000, 1500, 2500, 5000, 10000)
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
    Dim ANN, alf_Grundlast, alf_Spitzenlast
            ''bei Kombikessel (..dg) Nutzfl|fffd|che durch WE teilen !!!
            ''unter der Annahme, da|fffd| raumluftunabh|fffd|ngig immer = Kombikessel
            '    If art = 6 Or art = 7 Or art = 8 Or art = 9 Then
            '        Select Case CInt(AN)
            '            Case 147, 130: ANN = AN
            '            Case 447: ANN = AN / 2
            '            Case 1331: ANN = AN / 12
            '            Case 716: ANN = AN / 9
            '        End Select
            '    Else
            '        ANN = AN
            '    End If
    ANN = AN
    'If art >= 6 And art <= 10 And AN > 500 Then art = art - 5 'raumluftunabh|fffd|ngig nur bis 500 m2 (Aufstellung beheizt)
'   Tabelle C.3-4b + c + d + e und teilweise a f|fffd|r Deckungsanteil
    If Art <= 21 Then
    
''''''2018-02-25: Fehlerabfang AN>500 aber Aufstellung Kessel innerhalb, d.h. raumluftunabh|fffd|ngig
'''''        If Art > 10 And AN > 500 Then Art = Art - 10
        
        If wRuck = 11 Then
            H_g = 1 ' 1 W|fffd|rmeerzeuger
        ElseIf wRuck = 12 Then
            Select Case Art
                Case 0: H_g = 0
                Case 1 'Konstanttemperaturkessel
                    BB = Array(1.38, 1.33, 1.3, 1.27, 1.23, 1.21, 1.2, 1.18, 1.16, 1.14, 1.13)
                    H_g = F_interpol(AA, BB, ANN)
                Case 2 'Niedertemperaturkessel 70/55
                    BB = Array(1.15, 1.14, 1.13, 1.12, 1.11, 1.11, 1.1, 1.1, 1.09, 1.09, 1.08)
                    H_g = F_interpol(AA, BB, ANN)
                Case 3 'Niedertemperaturkessel 55/45
                    BB = Array(1.14, 1.13, 1.12, 1.12, 1.11, 1.1, 1.1, 1.09, 1.09, 1.08, 1.08)
                    H_g = F_interpol(AA, BB, ANN)
                Case 4 'Niedertemperaturkessel 35/28
                    BB = Array(1.12, 1.11, 1.11, 1.1, 1.1, 1.1, 1.09, 1.09, 1.09, 1.08, 1.08)
                    H_g = F_interpol(AA, BB, ANN)
                Case 5 'Brennwertkessel 70/55
                    BB = Array(1.08, 1.07, 1.07, 1.06, 1.05, 1.05, 1.05, 1.04, 1.04, 1.03, 1.03)
                    H_g = F_interpol(AA, BB, ANN)
                Case 6 'Brennwertkessel 55/45
                    BB = Array(1.05, 1.05, 1.04, 1.04, 1.03, 1.03, 1.02, 1.02, 1.02, 1.01, 1.01)
                    H_g = F_interpol(AA, BB, ANN)
                Case 7 'Brennwertkessel 35/28
                    BB = Array(1, 1, 0.99, 0.99, 0.99, 0.99, 0.99, 0.98, 0.98, 0.98, 0.98)
                    H_g = F_interpol(AA, BB, ANN)
                Case 8 'Brennwertkessel verbessert 70/55
                    BB = Array(1.03, 1.02, 1.01, 1.01, 1, 1, 0.99, 0.99, 0.99, 0.98, 0.98)
                    H_g = F_interpol(AA, BB, ANN)
                Case 9 'Brennwertkessel verbessert 55/45
                    BB = Array(1, 0.99, 0.99, 0.98, 0.98, 0.98, 0.97, 0.97, 0.97, 0.97, 0.96)
                    H_g = F_interpol(AA, BB, ANN)
                Case 10 'Brennwertkessel verbessert 35/28
                    BB = Array(0.95, 0.95, 0.95, 0.95, 0.94, 0.94, 0.94, 0.94, 0.94, 0.93, 0.93)
                    H_g = F_interpol(AA, BB, ANN)
                Case 11 'Konstanttemperaturkessel - raumluftunabh|fffd|ngig
                    BB = Array(1.3, 1.24, 1.21, 1.18, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15)
                    'If ANN > 500 Then H_g = "ANN zu hoch" Else H_g = F_interpol(AA, BB, ANN) AUSGESCHALTET !!!
                    H_g = F_interpol(AA, BB, ANN)
                Case 12 'Niedertemperaturkessel 70/55 - raumluftunabh|fffd|ngig
                    H_g = 1.08
                    'If ANN > 500 Then H_g = "ANN zu hoch" Else H_g = H_g AUSGESCHALTET !!!
                Case 13 'Niedertemperaturkessel 55/45 - raumluftunabh|fffd|ngig
                    BB = Array(1.09, 1.09, 1.08, 1.08, 1.08, 0, 0, 0, 0, 0, 0)
                    H_g = F_interpol(AA, BB, ANN)
                Case 14 'Niedertemperaturkessel 35/28 - raumluftunabh|fffd|ngig
                    BB = Array(1.1, 1.1, 1.09, 1.09, 1.09, 0, 0, 0, 0, 0, 0)
                    H_g = F_interpol(AA, BB, ANN)
                Case 15 'Brennwertkessel 70/55 - raumluftunabh|fffd|ngig
                    H_g = 1.03
                    'If ANN > 500 Then H_g = "ANN zu hoch" Else H_g = H_g AUSGESCHALTET !!!
                Case 16 'Brennwertkessel 55/45 - raumluftunabh|fffd|ngig
                    H_g = 1.01
                    'If ANN > 500 Then H_g = "ANN zu hoch" Else H_g = H_g AUSGESCHALTET !!!
                Case 17 'Brennwertkessel 35/28 - raumluftunabh|fffd|ngig
                    H_g = 0.99
                    'If ANN > 500 Then H_g = "ANN zu hoch" Else H_g = H_g AUSGESCHALTET !!!
                Case 18 'Brennwertkessel verbessert 70/55 - raumluftunabh|fffd|ngig
                    H_g = 0.98
                Case 19 'Brennwertkessel verbessert 55/45 - raumluftunabh|fffd|ngig
                    BB = Array(0.97, 0.96, 0.96, 0.96, 0.96, 0, 0, 0, 0, 0, 0)
                    H_g = F_interpol(AA, BB, ANN)
                Case 20 'Brennwertkessel verbessert 35/28 - raumluftunabh|fffd|ngig
                    H_g = 0.94
            End Select
        ElseIf wRuck = 13 Then
            BB = Array(0.79, 0.66, 0.58, 0.48, 0.38, 0.31, 0.27, 0.23, 0.18, 0.13, 0.09)
            H_g = F_interpol(AA, BB, ANN)
        ElseIf wRuck = 14 Then
            H_g = 1.1 'PRIM|fffd|RENERGIE Heizung 13.2.
        ElseIf wRuck > 20 Then
            H_g = 0 'kein zweiter W|fffd|rmeerzeuger
        End If
    ElseIf Art > 20 Then
        If wRuck < 20 Then
        '   Erzeuger 1
            Select Case Art
                Case 111, 112 'Elektro-WP Wasser/Wasser 55/45
                    If wRuck = 11 Then
                        If Art = 111 Then: H_g = 1
                        If Art = 112 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.23
                    If wRuck = 13 Then: H_g = 3.2 * ANN ^ (-0.1)
                    If wRuck = 14 Then: H_g = fP
                Case 121, 121 'Elektro-WP Wasser/Wasser 35/28
                    If wRuck = 11 Then
                        If Art = 121 Then: H_g = 1
                        If Art = 122 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.19
                    If wRuck = 13 Then: H_g = 3.2 * ANN ^ (-0.1)
                    If wRuck = 14 Then: H_g = fP
                Case 131, 132 'Elektro-WP Erdreich/Wasser 55/45
                    If wRuck = 11 Then
                        If Art = 131 Then: H_g = 1
                        If Art = 132 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.27
                    If wRuck = 13 Then: H_g = 1.9 * ANN ^ (-0.1)
                    If wRuck = 14 Then: H_g = fP
                Case 141, 142 'Elektro-WP Erdreich(Sole)/Wasser 35/28
                    If wRuck = 11 Then
                        If Art = 141 Then: H_g = 1
                        If Art = 142 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.23
                    If wRuck = 13 Then: H_g = 1.9 * ANN ^ (-0.1)
                    If wRuck = 14 Then: H_g = fP
                Case 151, 152 'Elektro-WP Luft/Wasser 55/45
                    If wRuck = 11 Then
                        If Art = 151 Then: H_g = 1
                        If Art = 152 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.37
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = fP
                Case 161, 162 'Elektro-WP Luft/Wasser 35/28
                    If wRuck = 11 Then
                        If Art = 161 Then: H_g = 1
                        If Art = 162 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.3
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = fP
                Case 171, 172 'Elektro-WP Abluft/Wasser ohne WRG 55/45
                    If wRuck = 11 Then
                        If Art = 171 Then: H_g = 1
                        If Art = 172 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.3
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = fP
                Case 181, 182 'Elektro-WP Abluft/Wasser ohne WRG 35/28
                    If wRuck = 11 Then
                        If Art = 181 Then: H_g = 1
                        If Art = 182 Then: H_g = 0.95 ' mit elektr. Erg|fffd|nzungsheizung
                    End If
                    If wRuck = 12 Then: H_g = 0.24
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = fP
                Case 21 'Elektro-Direkt oder -Speicher
                    If wRuck = 11 Then: H_g = 1
                    If wRuck = 12 Then: H_g = 1
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = fP
                Case 22 'Fern- und Nahw|fffd|rme
                    If wRuck = 11 Then: H_g = 1
                    If wRuck = 12 Then: H_g = 1.01
                    If wRuck = 13 Then: H_g = 0
                    If wRuck = 14 Then: H_g = 0.7 'KWK fossil !!!!
            End Select
       ElseIf wRuck > 20 Then
       '   Erzeuger 2
            Select Case Art
                Case 111, 121, 131, 141, 151, 161, 171, 181 'W|fffd|rmepumpe ohne Erg|fffd|nzungsheizung
                    H_g = 0
                Case 112, 122, 132, 142, 152, 162, 172, 182  'W|fffd|rmepumpe mit elektr. Erg|fffd|nzungsheizung
                    If wRuck = 21 Then: H_g = 0.05
                    If wRuck = 22 Then: H_g = 1
                    If wRuck = 23 Then: H_g = 0
                    If wRuck = 24 Then: H_g = fP
                Case 21, 22 'Elektro-Direkt oder -Speicher und Fern- und Nahw|fffd|rme
                    H_g = 0
            End Select
       End If
    End If
End Function
Function L_c(Art, wRuck%, AN) 'wRuck: 1-qLc
'   Tabelle C.2-1
    Select Case Art
        Case 0: L_c = 0 'KEINE L|fffd|ftungsAnlage
        Case 1: L_c = 2.2 'Luftausl|fffd|sse Au|fffd|enwand - mit Einzelraumregelung
        Case 2: L_c = 3.7 'Luftausl|fffd|sse Au|fffd|enwand - mit zentraler Vorregelung
        Case 3: L_c = 8.5 'Luftausl|fffd|sse Au|fffd|enwand - ohne zentraler Vorregelung
        Case 4: L_c = 3.3 'Luftausl|fffd|sse Innenwand - mit Einzelraumregelung
        Case 5: L_c = 4.8 'Luftausl|fffd|sse Innenwand - mit zentraler Vorregelung
        Case 6: L_c = 9.6 'Luftausl|fffd|sse Innenwand - ohne zentraler Vorregelung
        Case 7: L_c = 0 'Lufttemperaturen < 20|fffd|C
    End Select
End Function
Function L_d(Art, wRuck%, AN) 'wRuck: 1-qLd
    AA = Array(100, 150, 200, 300, 500)
    BB = Array(0, 0, 0, 0, 0)
'   Tabelle C.2-2
    Select Case Art
        Case 0: L_d = 0: Exit Function 'KEINE L|fffd|ftungsAnlage
        Case 11: BB = Array(4.8, 3.5, 2.9, 2.2, 1.7) 'Verteil UNbeheizt Dach, WRG durch W|fffd|T 60%
        Case 12: BB = Array(5.6, 4.1, 3.4, 2.6, 2) 'Verteil UNbeheizt Dach, WRG durch W|fffd|T 80%
        Case 13: BB = Array(9, 6.7, 5.6, 4.4, 3.5) 'Verteil UNbeheizt Dach, Z/A-WP ohne W|fffd|T AC
        Case 14: BB = Array(10.2, 7.6, 6.3, 5, 4) 'Verteil UNbeheizt Dach, Z/A-WP 60% AC
        Case 15: BB = Array(9.9, 7.4, 6.1, 4.9, 3.9) 'Verteil UNbeheizt Dach, Z/A-WP 60% DC
        Case 16: BB = Array(9.2, 6.8, 5.6, 4.5, 3.5) 'Verteil UNbeheizt Dach, Heizregister 35|fffd|
        Case 17: BB = Array(11, 8.2, 6.9, 5.5, 4.4) 'Verteil UNbeheizt Dach, Heizregister 45|fffd|
        Case 21: BB = Array(1.4, 1, 0.8, 0.7, 0.5) 'Verteil UNbeheizt Keller, WRG durch W|fffd|T 60%
        Case 22: BB = Array(2.2, 1.6, 1.3, 1, 0.8) 'Verteil UNbeheizt Keller, WRG durch W|fffd|T 80%
        Case 23: BB = Array(5.2, 3.7, 3, 2.3, 1.7) 'Verteil UNbeheizt Keller, Z/A-WP ohne W|fffd|T AC
        Case 24: BB = Array(6.7, 5.1, 4.3, 3.5, 2.8) 'Verteil UNbeheizt Keller, Z/A-WP 60% AC
        Case 25: BB = Array(6.4, 4.9, 4.1, 3.3, 2.7) 'Verteil UNbeheizt Keller, Z/A-WP 60% DC
        Case 26: BB = Array(5.7, 4.3, 3.6, 2.9, 2.3) 'Verteil UNbeheizt Keller, Heizregister 35|fffd|
        Case 27: BB = Array(7.5, 5.7, 4.8, 3.9, 3.2) 'Verteil UNbeheizt Keller, Heizregister 45|fffd|
        Case 31: BB = Array(0, 0, 0, 0, 0) 'Verteil beheizt, WRG durch W|fffd|T 60%
        Case 32: BB = Array(0, 0, 0, 0, 0) 'Verteil beheizt, WRG durch W|fffd|T 80%
        Case 33: BB = Array(1.1, 1, 0.9, 0.8, 0.7) 'Verteil beheizt, Z/A-WP ohne W|fffd|T AC
        Case 34: BB = Array(1.6, 1.4, 1.3, 1.1, 1) 'Verteil beheizt, Z/A-WP 60% AC
        Case 35: BB = Array(1.5, 1.3, 1.2, 1, 1) 'Verteil beheizt, Z/A-WP 60% DC
        Case 36: BB = Array(1.2, 1, 0.9, 0.8, 0.8) 'Verteil beheizt, Heizregister 35|fffd|
        Case 37: BB = Array(2, 1.7, 1.5, 1.4, 1.3) 'Verteil beheizt, Heizregister 45|fffd|
    End Select
    L_d = F_interpol5(AA, BB, AN)
End Function
Function L_g(Art, wRuck%, AN, qh, nA)  'wRuck: 1-qLg1, 2-eLg1, 3-qLgHE1   W|fffd|rme|fffd|bertrager
                                       '       4-qLg2, 5-eLg2, 6-qLgHE2   W|fffd|rmepumpe
                                       '       7-qLg3, 8-eLg3, 9-qLgHE3   Heizgregister
'Anlagenluftwechsel IMMER = 0,4
    Dim qLgWRG, qhn
    AA = Array(15, 20, 30, 40, 50, 60, 70, 80) 'andere Reihenfolge !!!
    BB = Array(0, 0, 0, 0, 0, 0, 0, 0)
    If wRuck = 1 Or wRuck = 4 Or wRuck = 7 Then
'   Tabelle C.2-3 a
        Select Case Art
            Case 11, 12, 14, 15, 18, 31, 32, 34, 35, 38: Ruck = 13.5 '60 % WRG
                ' f|fffd|r Diagrammanlage n = 0,6 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                If nA = 0.6 Then Ruck = 20.2
            Case 13, 16, 17, 19, 33, 36, 37, 39: Ruck = 17.2 '80 % WRG
            Case Else: Ruck = 0
        End Select
        If wRuck = 1 Then
            L_g = Ruck: Exit Function
        ElseIf wRuck = 4 Then
'   Tabelle C.2-3 d
            Select Case Art
                Case 14 To 17: BB = Array(15.3, 19.1, 24.9, 28.7, 31.4, 33.5, 34.5, 35.1) 'W|fffd|T 60 % DC - KEINE Nutzung f|fffd|r TW
                    ' f|fffd|r Diagrammanlage n = 0,6 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    If nA = 0.6 Then: BB = Array(15.3, 20.3, 29.2, 36, 41.3, 45.3, 48.6, 51.1)
                Case 34 To 37: BB = Array(14.1, 16.4, 19.9, 22.2, 23, 23.7, 24.4, 24.8) 'W|fffd|T 60 % DC - Nutzung f|fffd|r TW
                Case 23 To 24: BB = Array(15.3, 20.1, 28.1, 33.9, 38.2, 41.5, 44.3, 46.2) 'kein W|fffd|T AC - KEINE Nutzung f|fffd|r TW
                Case 43 To 44: BB = Array(15.3, 19.3, 25.3, 29.3, 32.1, 34.3, 35.5, 36.1) 'kein W|fffd|T AC - Nutzung f|fffd|r TW
                Case Else: L_g = 0: Exit Function
            End Select
            qLgWRG = Ruck
            qhn = 0 'fest eingestellt, sonst Abfrage |fffd|ber nA
                ' f|fffd|r Diagrammanlage n = 0,6 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                If nA = 0.6 Then qhn = 11.8
            L_g = F_interpol8(AA, BB, qh - qLgWRG + qhn)
        ElseIf wRuck = 7 Then
'   Tabelle C.2-3 f   ???????????????????? zuerst: Heizregister ja/nein (wird bei L_d abgefragt)
            L_g = 0: Exit Function
            Select Case Art
                Case 11, 12, 14, 15, 18: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'W|fffd|T 60 % DC - KEINE Nutzung f|fffd|r TW
                Case 31, 32, 34, 35, 38: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'W|fffd|T 60 % DC - Nutzung f|fffd|r TW
                Case 21 To 24: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'kein W|fffd|T AC - KEINE Nutzung f|fffd|r TW
                Case 41 To 44: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'kein W|fffd|T AC - Nutzung f|fffd|r TW
                Case 13, 16, 17, 19: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'W|fffd|T 60 % DC
                Case 33, 36, 37, 39: BB = Array(0, 0, 0, 0, 0, 0, 0, 0) 'W|fffd|T 80 % DC
                Case Else: L_g = 0: Exit Function
            End Select
            qLgWRG = L_g
            qhn = 0 'fest eingestellt, sonst Abfrage |fffd|ber nA
            L_g = F_interpol8(AA, BB, qh - qLgWRG - qhn)
        End If
    ElseIf wRuck = 2 Then
        L_g = 0
    ElseIf wRuck = 3 Then
'   Tabelle C.2-3 b + c
        Select Case Art
            Case 11, 31: L_g = 2.2 'Abluft/Zuluft mit WRG - zentral 60% AC
            Case 12, 32: L_g = 2.7 'Abluft/Zuluft mit WRG - zentral 60% DC
            Case 13, 33: L_g = 2.6 'Abluft/Zuluft mit WRG - zentral 80% DC
            Case 14, 34: L_g = 2.6 'Abluft/Zuluft mit WRG - zentral mit A/Z-WP 60% AC
            Case 15, 35: L_g = 2.3 'Abluft/Zuluft mit WRG - zentral mit A/Z-WP 60% DC
                    ' f|fffd|r Diagrammanlage n = 0,6 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    If nA = 0.6 Then: L_g = 3.4: Exit Function
            Case 16, 36: L_g = 2.6 'Abluft/Zuluft mit WRG - zentral mit A/Z-WP 80% AC
            Case 17, 37: L_g = 2.2 'Abluft/Zuluft mit WRG - zentral mit A/Z-WP 80% DC
            Case 18, 38: L_g = 3.8 'Abluft/Zuluft mit WRG - DEzentral 60% AC oder DC
            Case 19, 39: L_g = 3.8 'Abluft/Zuluft mit WRG - DEzentral 80% AC oder DC  nicht in Tabelle
            Case 21, 41: L_g = 1.3 'Abluftanlage ohne WRG - AC-Ventilator
            Case 22, 42: L_g = 1.1 'Abluftanlage ohne WRG - DC-Ventilator
            Case 23, 43: L_g = 1.6 'Abluftanlage ohne WRG - AC-Vent. mit A/W-WP
            Case 24, 44: L_g = 1.3 'Abluftanlage ohne WRG - DC-Vent. mit A/W-WP
            Case Else: L_g = 0: Exit Function
        End Select
    ElseIf wRuck = 5 Then
'   Tabelle C.2-3 e
        Select Case Art
            Case 23 To 24, 43 To 44: L_g = 0.28 'ohne W|fffd|T
            Case 14 To 17, 34 To 37: L_g = 0.34 'mit W|fffd|T
            Case Else: L_g = 0: Exit Function
        End Select
    ElseIf wRuck = 6 Then
        L_g = 0
    ElseIf wRuck = 8 Then
'   Tabelle C.2-3 g   ????????????????????????  Heizstab/Kessel
        L_g = 0
    ElseIf wRuck = 9 Then
        L_g = 0
    End If
End Function
Function L_n(Art, wRuck%) 'wRuck: 1-nA, 2-qhn
    If wRuck = 1 Then
        Select Case Art
            Case 0: L_n = 0 'KEINE L|fffd|ftungsAnlage
            Case 1: L_n = 0.4 'n = 0,4
            Case 2: L_n = 0.5 'n = 0,5
            Case 3: L_n = 0.6 'n = 0,6
            Case 4: L_n = 0.7 'n = 0,7
            Case 5: L_n = 0.8 'n = 0,8
            Case 6: L_n = 0.9 'n = 0,9
            Case 7: L_n = 1 'n = 1
        End Select
    ElseIf wRuck = 2 Then
'   Tabelle C.2-4
        Select Case Art
            Case 0: L_n = 0 'KEINE L|fffd|ftungsAnlage
            Case 1: L_n = 0 'n = 0,4
            Case 2: L_n = 5.9 'n = 0,5
            Case 3: L_n = 11.8 'n = 0,6
            Case 4: L_n = 17.7 'n = 0,7
            Case 5: L_n = 23.7 'n = 0,8
            Case 6: L_n = 29.6 'n = 0,9
            Case 7: L_n = 35.5 'n = 1
        End Select
    End If
End Function
Private Function F_interpol(a, b, C)
    Select Case C
        Case Is < a(1): Ruck = b(1)
        Case Is < a(2): i1 = 1: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(3): i1 = 2: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(4): i1 = 3: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(5): i1 = 4: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(6): i1 = 5: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(7): i1 = 6: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(8): i1 = 7: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(9): i1 = 8: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(10): i1 = 9: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(11): i1 = 10: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is >= a(11): Ruck = b(11)
    End Select
    F_interpol = Ruck
End Function
Private Function F_interpol5(a, b, C)
    Select Case C
        Case Is < a(1): Ruck = b(1)
        Case Is < a(2): i1 = 1: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(3): i1 = 2: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(4): i1 = 3: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(5): i1 = 4: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is >= a(5): Ruck = b(5)
    End Select
    F_interpol5 = Ruck
End Function
Private Function F_interpol8(a, b, C)
    Select Case C
        Case Is < a(1): Ruck = b(1)
        Case Is < a(2): i1 = 1: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(3): i1 = 2: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(4): i1 = 3: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(5): i1 = 4: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(6): i1 = 5: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(7): i1 = 6: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is < a(8): i1 = 7: Ruck = b(i1) + (b(i1 + 1) - b(i1)) / (a(i1 + 1) - a(i1)) * (C - a(i1))
        Case Is >= a(8): Ruck = b(8)
    End Select
    F_interpol8 = Ruck
End Function

Attribute VB_Name = "RechWaerme"
Option Explicit
Option Base 1 'wichtig! da array sonst bei 0 und range bei 1 anf|fffd|ngt
Const Th_i = 19, Th_isb = 14
Function nA(cWirk, tu, n, V, AN, HT, Hw, Mon, Th_e As Range) 'theta_e nicht hartverdrahtet!
    If V = 0 Then Exit Function
    Dim PhiPP, Hic, Hsb, Hd, Hce, Zeta, Xi, Tau_p, Tau_t, tM
    Dim Th_c0(12), Th_csb(12), Th_ipp(12), Th_cpp(12), Th_inh(12), Th_cnh(12)
    Dim tNH_FU(12), tBH_FU(12), Th_Mon_FU(12)
    Dim tNH(12), tBH(122), Th_c1(12), tSB(12), Th_c2(12), Th_c3(12)
    Dim dq(12), QNA(12)
    tM = Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
    'Th_e = Array(1, 1.9, 4.7, 9.2, 14.1, 16.7, 19, 18.6, 14.3, 9.5, 4.1, 0.9)
    PhiPP = 1.5 * (HT + 0.34 * 0.5 * V) * (19 + 12)
    Hic = 4 * AN / 0.13
    Hsb = HT + 0.34 * n * V 'gleicher Luftwechsel
    Hd = Hw + 0.34 * n * V
    Hce = Hic * (Hsb - Hd) / (Hic - (Hsb - Hd))
    Zeta = Hic / (Hic + Hce)
    Xi = Hic / (Hic + Hd)
    Tau_p = Zeta * cWirk / (Xi * Hsb)
    Tau_t = Zeta * cWirk / (Hce + Hic)
    With Application.WorksheetFunction
        Th_c0(Mon) = Th_e(Mon) + Zeta * (Th_i - Th_e(Mon))
        Th_csb(Mon) = Th_e(Mon) + Zeta * (Th_isb - Th_e(Mon))
        Th_ipp(Mon) = Th_e(Mon) + PhiPP / Hsb
        Th_cpp(Mon) = Th_e(Mon) + Zeta * (Th_ipp(Mon) - Th_e(Mon))
        Th_inh(Mon) = Th_e(Mon)
        Th_cnh(Mon) = Th_e(Mon) + Zeta * (Th_inh(Mon) - Th_e(Mon))
        'Fallunterscheidung
        'tBH_FU(Mon) = Tau_p * .Ln(.Max(1, Xi * (Th_cpp(Mon) - Th_cnh(Mon)) / (Th_ipp(Mon) - Th_i + Xi * (Th_c0(Mon) - Th_cnh(Mon)) * Exp(-tu / Tau_p))))
        tNH_FU(Mon) = tu
        Th_Mon_FU(Mon) = Th_inh(Mon) + Xi * (Th_c0(Mon) - Th_cnh(Mon)) * Exp(-tNH_FU(Mon) / Tau_p)
        If Th_Mon_FU(Mon) > Th_isb Then 'Fall A
            tNH(Mon) = tu
            If tNH(Mon) <= 0 Then Th_c1(Mon) = Th_c0(Mon) Else Th_c1(Mon) = Th_cnh(Mon) + (Th_Mon_FU(Mon) - Th_inh(Mon)) / Xi
            tSB(Mon) = 0
        Else 'Fall B
            tNH(Mon) = .Min(tu, Tau_p * .Ln(.Max(1, Xi * (Th_c0(Mon) - Th_cnh(Mon)) / (Th_isb - Th_inh(Mon)))))
            If tNH(Mon) <= 0 Then Th_c1(Mon) = Th_c0(Mon) Else Th_c1(Mon) = Th_cnh(Mon) + (Th_isb - Th_inh(Mon)) / Xi
            tSB(Mon) = tu - tNH(Mon)
        End If
        If tSB(Mon) <= 0 Then Th_c2(Mon) = Th_c1(Mon) Else Th_c2(Mon) = Th_csb(Mon) + (Th_c1(Mon) - Th_csb(Mon)) * Exp(-tSB(Mon) / Tau_t)
        tBH(Mon) = Tau_p * .Ln(.Max(1, Xi * (Th_cpp(Mon) - Th_c2(Mon)) / (Th_ipp(Mon) - Th_i)))
        If tBH(Mon) <= 0 Then Th_c3(Mon) = Th_c2(Mon) Else Th_c3(Mon) = Th_cpp(Mon) + (Th_i - Th_ipp(Mon)) / Xi
        dq(Mon) = 0.001 * tM(Mon) * (Hsb * ((Th_i - Th_inh(Mon)) * tNH(Mon) + (Th_i - Th_isb) * tSB(Mon) + (Th_i - Th_ipp(Mon)) * tBH(Mon)) - cWirk * Zeta * (Th_c0(Mon) - Th_c1(Mon) + Th_c2(Mon) - Th_c3(Mon)))
        QNA(Mon) = .Max(0, 0.001 * tM(Mon) * Hsb * (Th_i - Th_e(Mon)) * 24) - dq(Mon) 'Hsb=Hsp !!!
    End With
    nA = QNA(Mon)
End Function
Function nAALT(cWirk, tu, n, V, AN, HT, Hw, Mon, Th_e As Range)
    Dim i1%
    'neu 2012 Test
    Dim theta_i_min
    theta_i_min = -12
    If V = 0 Then Exit Function
    Dim PhiPP, Hic, Hsb, Hd, Hce, Zeta, Xi, Tau_p, Tau_t, tM
    Dim Th_c0(12), Th_csb(12), Th_ipp(12), Th_cpp(12), Th_inh(12), Th_cnh(12) 'Th_e,
    Dim tNH_FU(12), tBH_FU(12), Th_i1_FU(12)
    Dim tNH(12), tBH(122), Th_c1(12), tSB(12), Th_c2(12), Th_c3(12)
    Dim dq(12), QNA(12)
    tM = Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
    'Th_e = Array(-1.3, 0.6, 4.1, 9.5, 12.9, 15.7, 18#, 18.3, 14.4, 9.1, 4.7, 1.3)
    PhiPP = 1.5 * (HT + 0.34 * 0.5 * V) * (19 - theta_i_min)
    Hic = 4 * AN / 0.13
    Hsb = HT + 0.34 * n * V 'gleicher Luftwechsel
    Hd = Hw + 0.34 * n * V
    Hce = Hic * (Hsb - Hd) / (Hic - (Hsb - Hd))
    Zeta = Hic / (Hic + Hce)
    Xi = Hic / (Hic + Hd)
    Tau_p = Zeta * cWirk / (Xi * Hsb)
    Tau_t = Zeta * cWirk / (Hce + Hic)
    i1 = Mon
    With Application.WorksheetFunction
    'For i1 = 1 To 12
        Th_c0(i1) = Th_e(i1) + Zeta * (Th_i - Th_e(i1))
        Th_csb(i1) = Th_e(i1) + Zeta * (Th_isb - Th_e(i1))
        Th_ipp(i1) = Th_e(i1) + PhiPP / Hsb
        Th_cpp(i1) = Th_e(i1) + Zeta * (Th_ipp(i1) - Th_e(i1))
        Th_inh(i1) = Th_e(i1)
        Th_cnh(i1) = Th_e(i1) + Zeta * (Th_inh(i1) - Th_e(i1))
        'Fallunterscheidung
        'tBH_FU(i1) = Tau_p * .Ln(.Max(1, Xi * (Th_cpp(i1) - Th_cnh(i1)) / (Th_ipp(i1) - Th_i + Xi * (Th_c0(i1) - Th_cnh(i1)) * Exp(-tu / Tau_p))))
        tNH_FU(i1) = tu
        Th_i1_FU(i1) = Th_inh(i1) + Xi * (Th_c0(i1) - Th_cnh(i1)) * Exp(-tNH_FU(i1) / Tau_p)
        If Th_i1_FU(i1) > Th_isb Then 'Fall A
            tNH(i1) = tu
            If tNH(i1) <= 0 Then Th_c1(i1) = Th_c0(i1) Else Th_c1(i1) = Th_cnh(i1) + (Th_i1_FU(i1) - Th_inh(i1)) / Xi
            tSB(i1) = 0
        Else 'Fall B
            tNH(i1) = .Min(tu, Tau_p * .Ln(.Max(1, Xi * (Th_c0(i1) - Th_cnh(i1)) / (Th_isb - Th_inh(i1)))))
            If tNH(i1) <= 0 Then Th_c1(i1) = Th_c0(i1) Else Th_c1(i1) = Th_cnh(i1) + (Th_isb - Th_inh(i1)) / Xi
            tSB(i1) = tu - tNH(i1)
        End If
        If tSB(i1) <= 0 Then Th_c2(i1) = Th_c1(i1) Else Th_c2(i1) = Th_csb(i1) + (Th_c1(i1) - Th_csb(i1)) * Exp(-tSB(i1) / Tau_t)
        tBH(i1) = Tau_p * .Ln(.Max(1, Xi * (Th_cpp(i1) - Th_c2(i1)) / (Th_ipp(i1) - Th_i)))
        If tBH(i1) <= 0 Then Th_c3(i1) = Th_c2(i1) Else Th_c3(i1) = Th_cpp(i1) + (Th_i - Th_ipp(i1)) / Xi
        dq(i1) = 0.001 * tM(i1) * (Hsb * ((Th_i - Th_inh(i1)) * tNH(i1) + (Th_i - Th_isb) * tSB(i1) + (Th_i - Th_ipp(i1)) * tBH(i1)) - cWirk * Zeta * (Th_c0(i1) - Th_c1(i1) + Th_c2(i1) - Th_c3(i1)))
        QNA(i1) = .Max(0, 0.001 * tM(i1) * Hsb * (Th_i - Th_e(i1)) * 24) - dq(i1) 'Hsb=Hsp !!!
    'Next i1
    End With
    nAALT = QNA(Mon)
End Function

Attribute VB_Name = "Steuerung"
Option Explicit 'fjdlf3q095q223c189c3240nc783ncn434n714732n32
Public Const BSchutz = "Fr|fffd|hling"
Public Const MSchutz = "TotalVerboten"
'Referenz klonen! Vorher DefaultBlende! Vorher AUF!
Private Sub Zu()
  On Error Resume Next
'Blattschutz erstmal aufheben, sonst geht nix
  Call BlattschutzHerstellen(False)
  ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True
'Nebenrechnungen ausblenden (Spalten und Zeilen)
  Call NebenrechnungAusblenden(True)
'Blattschutz, Deckblatt ausw|fffd|hlen, auf allen Bl|fffd|ttern A1 aktivieren
  Call BlattschutzHerstellen(True)
'Merker
  'erst DefaultBlende, dann Referenz erzeugen
  'Beispiel laden
  'Fusszeile
  'Nebenrechung ausblenden (Knopf l|fffd|schen)
  'Ausweis: Verzeichnisdaten l|fffd|schen
  '" Angezeigte Dezimalstellen: Uopak, g-Werte, Fl|fffd|chen, Volumina = 2 Stellen;
  '  lambda = 3 Stellen; UFenster = 1 Stelle
'Warum auch immer:
  Application.Calculate
End Sub
Private Sub Auf()
'Blattschutz
  Call BlattschutzHerstellen(False)
'Nebenrechnungen
  Call NebenrechnungAusblenden(False)
  ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = False
End Sub
Private Sub Fusszeile()
  Dim objSheet As Worksheet, i%, LogoDateiName, UmschalterUNI As Boolean
  UmschalterUNI = True
  
  If UmschalterUNI Then
    LogoDateiName = "LogoUni_kleiner.jpg"
  Else
    LogoDateiName = "Bildschirm-Logo BV KSI_RGB_4cm.png"
  End If
  For Each objSheet In ThisWorkbook.Worksheets
    Application.PrintCommunication = True
    'Set objSheet = ThisWorkbook.Sheets("Referenz")
'Rechner hausi
    objSheet.PageSetup.LeftFooterPicture.Filename = ThisWorkbook.Path & "\Logos\" & LogoDateiName
'Rechner Uni
'    objSheet.PageSetup.LeftFooterPicture.Filename = _
'        "C:\Users\hoettges\Dropbox\KikiPrivat\Arbeit\MoBi\Logos\Bildschirm-Logo BV KSI_RGB_4cm.png"
    objSheet.PageSetup.CenterFooterPicture.Filename = ""
    objSheet.PageSetup.RightFooterPicture.Filename = ""
    objSheet.PageSetup.LeftFooter = "&G"
    objSheet.PageSetup.CenterFooter = "&""Arial,Standard""&9A. Maas und K. H|fffd|ttges" & Chr(10) & "V2.13, November 2019"
    objSheet.PageSetup.RightFooter = "&""Arial,Standard""&9Berechnungsblatt EnEV2016, Blatt '&A'" & Chr(10) & "Seite &P von &N"
    'objSheet.PrintPreview
  Next objSheet
End Sub
Private Sub DefaultBlende() 'nur Blatt Gebaeude
  Dim Blaetter, i%
  Blaetter = Array("Gebaeude", "Referenz") 'Referenz geht nicht, da Buttons anders nummeriert werden
  'also erst f|fffd|r Gebaeude machen und dann Referenz klonen!!!!!!!!!!!!!!!!
  For i = 0 To 0 '1
'Zeilen
    ThisWorkbook.Sheets(Blaetter(i)).Rows("1:500").EntireRow.Hidden = False
    Dim oKnopf As Object
    For Each oKnopf In ThisWorkbook.Sheets(Blaetter(i)).Shapes
      If InStr(oKnopf.Name, "Button") > 0 Then
        If oKnopf.TextFrame.Characters.Text = "+" Then oKnopf.TextFrame.Characters.Text = "-"
      End If
    Next oKnopf
    ThisWorkbook.Sheets(Blaetter(i)).Range("zDefaultBlende").EntireRow.Hidden = True
    ThisWorkbook.Sheets(Blaetter(i)).Shapes("Button 126").TextFrame.Characters.Text = "+"
    ThisWorkbook.Sheets(Blaetter(i)).Shapes("Button 184").TextFrame.Characters.Text = "+"
    ThisWorkbook.Sheets(Blaetter(i)).Shapes("Button 188").TextFrame.Characters.Text = "+"
'Spalten
    ThisWorkbook.Sheets(Blaetter(i)).Columns("A:Z").EntireColumn.Hidden = False
    ThisWorkbook.Sheets(Blaetter(i)).Columns("M:X").EntireColumn.Hidden = True
    ThisWorkbook.Sheets(Blaetter(i)).Shapes("Button 121").TextFrame.Characters.Text = "+"
  Next i
  ThisWorkbook.Sheets("Bauteile").Columns("A:AC").EntireColumn.Hidden = False
  ThisWorkbook.Sheets("Bauteile").Columns("S:AC").EntireColumn.Hidden = True
  ThisWorkbook.Sheets("Bauteile").Shapes("Button 144").TextFrame.Characters.Text = "+"
  ThisWorkbook.Sheets("Bauteile").Shapes("Button 73").TextFrame.Characters.Text = "-"
End Sub
Public Sub BlattschutzBlattHerstellen(Was As Boolean)
  If Was = True Then
    ActiveSheet.Protect Password:=BSchutz, DrawingObjects:=True, Contents:=True, Scenarios:=True
  Else
    ActiveSheet.Unprotect Password:=BSchutz
  End If
  Application.Calculation = xlCalculationAutomatic
End Sub
Sub BlattschutzHerstellen(Was As Boolean) 'Was = true => Schutz hergestellt
  Dim obj As Object, temp
  temp = ActiveSheet.Name
'Blattschutz, Deckblatt ausw|fffd|hlen, auf allen Bl|fffd|ttern A1 aktivieren
  If Was = True Then
    For Each obj In ActiveWorkbook.Sheets
      obj.Activate
      obj.Range("A1").Select
      obj.Protect Password:=BSchutz, DrawingObjects:=True, Contents:=True, Scenarios:=True
    Next obj
    ActiveWorkbook.Protect Password:=MSchutz, Structure:=True, Windows:=False
    ActiveWorkbook.Sheets(temp).Activate
  Else
    For Each obj In ActiveWorkbook.Sheets
      obj.Visible = True
      obj.Unprotect Password:=BSchutz
    Next obj
    ActiveWorkbook.Unprotect Password:=MSchutz
    ActiveWorkbook.Sheets(temp).Activate
  End If
End Sub
Private Sub NebenrechnungAusblenden(Was As Boolean) 'Was = true => ausgeblendet
'Nebenrechnungen ausblenden (Spalten und Zeilen)
    ThisWorkbook.Sheets("Gebaeude").Range("stHilfGeb").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Referenz").Range("stHilfGeb").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Bauteile").Range("stHilfBaut").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Technik").Range("stHilfTech").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Technik").Range("stHilfTechRows").EntireRow.Hidden = Was
    ThisWorkbook.Sheets("Graphisch").Range("stHilfGraph").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Energieausweis").Range("stHilfAusweis").EntireColumn.Hidden = Was
    ThisWorkbook.Sheets("Tabellen").Range("stHilfTab").EntireColumn.Hidden = Was
End Sub
Sub Leeren()
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False)
  If MsgBox("Eingaben l|fffd|schen?", vbOKCancel) = vbCancel Then Exit Sub
  Dim rBereiche, i%
  rBereiche = GetNameArray(ActiveSheet.Name, "")
  For i = 0 To UBound(rBereiche)
    If ThisWorkbook.ActiveSheet.Range(rBereiche(i)).MergeCells = True Then
      ThisWorkbook.ActiveSheet.Range(rBereiche(i)) = ""
    Else
      ThisWorkbook.ActiveSheet.Range(rBereiche(i)).ClearContents
    End If
  Next i
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Function GetNameArray(strSheet As String, strWhat As String)
  Dim RangeNameV, RangeNameVblau, RangeNameVblauWeiss, RangeNameL, RangeNameN, RangeNameNblau, RangeNameSt, RangeNameB, RangeNameoB, RangeName
  RangeNameV = Array(): RangeNameVblau = Array(): RangeNameL = Array():  RangeNameN = Array(): RangeNameNblau = Array(): RangeNameSt = Array(): RangeNameB = Array(): RangeNameoB = Array(): RangeName = Array(): RangeNameVblauWeiss = Array()
  Select Case strSheet
    Case "Gebaeude" '"gSAW_alf", "gSD_alf" weg
      RangeNameSt = Array("stEnEV", "stBerechnung")
      RangeNameV = Array("gObjekt", "gVe", "ghG", "gWoE", "gAW_A", "gAW_U", "gAWW_A", "gAWW_U", "gAWT_A", "gAWT_U", _
        "gD_A", "gD_U", "gDW_A", "gDW_U", "gDOG_A", "gDOG_U", "gDAbW_A", "gDAbW_U", "gDAB_A", "gDAB_U", _
        "gG_aux", "gG_A", "gG_U", "gGW_A", "gGW_U", "gGAG_A", "gGAG_U", _
        "gWB_dU", "gSW_g", "gSW_Fs", "gSW_FF", "gCwirk_eta", "gCwirk_NA", _
        "ge_eP", "ge_qWEE", "ge_qHEE", "gLast_Te", "gLast_Ti", "gLast_WRG")
      RangeNameL = Array("gAW_Ori", "gAWW_Zuo", "gAWT_Zuo", "gD_Ori", "gD_Nei", "gDW_Zuo", "gG_Art", "gGW_Zuo", _
        "gWB_Art", "gHV_Geschoss", "gHV_Art", "gCwirk_Art", _
        "gHT_Art", "ge_Art", "ge_Dia", "gLast_Dicht")
      RangeNameB = Array("gVe", "gAW_A", "gAW_U", "gAWW_A", "gAWW_U", "gAWT_A", "gAWT_U", _
        "gD_A", "gD_U", "gDW_A", "gDW_U", "gDOG_A", "gDOG_U", "gDAbW_A", "gDAbW_U", "gDAB_A", "gDAB_U", _
        "gG_aux", "gG_A", "gG_U", "gGW_A", "gGW_U", "gGAG_A", "gGAG_U", _
        "gAW_Ori", "gAWW_Zuo", "gAWT_Zuo", "gD_Ori", "gD_Nei", "gDW_Zuo", "gG_Art", "gGW_Zuo", _
        "gSW_g", "gSW_Fs", "gSW_FF", "gSAW_alf", "gSD_alf")
      RangeNameoB = Array("stEnEV", "stBerechnung", _
        "gObjekt", "ghG", "gWoE", _
        "gWB_dU", "gCwirk_eta", "gCwirk_NA", _
        "ge_eP", "ge_qWEE", "ge_qHEE", "gLast_Te", "gLast_Ti", "gLast_WRG", _
        "gWB_Art", "gHV_Geschoss", "gHV_Art", "gCwirk_Art", _
        "gHT_Art", "ge_Art", "ge_Dia", "gLast_Dicht")
      'RangeName = Array( ''' 2016-05 ohne Steuerung f|fffd|r Leeren, funzt dann aber beim Laden nicht mehr... egal
      '2016-06: wieder rein, sonst geht Info verloren, daf|fffd|r aber Blattschutz auf/zu notwendig
      RangeName = Array("stEnEV", "stBerechnung", "gObjekt", "gVe", "ghG", "gWoE", "gAW_A", "gAW_U", "gAWW_A", "gAWW_U", "gAWT_A", "gAWT_U", _
        "gD_A", "gD_U", "gDW_A", "gDW_U", "gDOG_A", "gDOG_U", "gDAbW_A", "gDAbW_U", "gDAB_A", "gDAB_U", _
        "gG_aux", "gG_A", "gG_U", "gGW_A", "gGW_U", "gGAG_A", "gGAG_U", _
        "gAW_Ori", "gAWW_Zuo", "gAWT_Zuo", "gD_Ori", "gD_Nei", "gDW_Zuo", "gG_Art", "gGW_Zuo", _
        "gWB_dU", "gSW_g", "gSW_Fs", "gSW_FF", "gCwirk_eta", "gCwirk_NA", _
        "ge_eP", "ge_qWEE", "ge_qHEE", "gLast_Te", "gLast_Ti", "gLast_WRG", _
        "gWB_Art", "gHV_Geschoss", "gHV_Art", "gCwirk_Art", _
        "gHT_Art", "ge_Art", "ge_Dia", "gLast_Dicht")
    Case "Referenz"
    Case "Bauteile" '"bOp_alf" weg bei V und unten, sowie b0x_alf
      RangeNameV = Array("bOp_Name", "bOp_U", "bTra_Name", "bTra_Fs", "bTra_FF", "bTra_U", "bTra_g", _
        "b01_Name", "b01_d", "b01_b", "b02_Name", "b02_d", "b02_b", _
        "b03_Name", "b03_d", "b03_b", "b04_Name", "b04_d", "b04_b", _
        "b05_Name", "b05_d", "b05_b", "b06_Name", "b06_d", "b06_b", _
        "b07_Name", "b07_d", "b07_b", "b08_Name", "b08_d", "b08_b", _
        "b09_Name", "b09_d", "b09_b", "b10_Name", "b10_d", "b10_b")
      RangeNameVblau = Array("b01_Name", "b02_Name", "b03_Name", "b04_Name", _
        "b05_Name", "b06_Name", "b07_Name", "b08_Name", "b09_Name", "b10_Name")
      RangeNameVblauWeiss = Array("b01_alf", "b02_alf", "b03_alf", "b04_alf", "b05_alf", _
        "b06_alf", "b07_alf", "b08_alf", "b09_alf", "b10_alf")
      RangeNameL = Array("b01_si", "b02_si", "b03_si", "b04_si", "b05_si", _
        "b06_si", "b07_si", "b08_si", "b09_si", "b10_si", _
        "b01_Quelle", "b01_Art", "b01_Stoff", "b02_Quelle", "b02_Art", "b02_Stoff", "b03_Quelle", "b03_Art", "b03_Stoff", _
        "b04_Quelle", "b04_Art", "b04_Stoff", "b05_Quelle", "b05_Art", "b05_Stoff", "b06_Quelle", "b06_Art", "b06_Stoff", _
        "b07_Quelle", "b07_Art", "b07_Stoff", "b08_Quelle", "b08_Art", "b08_Stoff", "b09_Quelle", "b09_Art", "b09_Stoff", _
        "b10_Quelle", "b10_Art", "b10_Stoff", _
        "b01_x", "b02_x", "b03_x", "b04_x", "b05_x", "b06_x", "b07_x", "b08_x", "b09_x", "b10_x")
      RangeNameN = Array("bOp_Notiz", "bTra_Notiz")
      RangeNameNblau = Array("b01_Notiz", "b02_Notiz", "b03_Notiz", "b04_Notiz", "b05_Notiz", _
        "b06_Notiz", "b07_Notiz", "b08_Notiz", "b09_Notiz", "b10_Notiz")
      RangeName = Array("bOp_Name", "bOp_Notiz", "bOp_U", "bTra_Name", "bTra_Notiz", "bTra_Fs", "bTra_FF", "bTra_U", "bTra_g", _
        "b01_Name", "b01_Notiz", "b01_si", "b01_d", "b01_x", "b01_b", "b01_Quelle", "b01_Art", "b01_Stoff", _
        "b02_Name", "b02_Notiz", "b02_si", "b02_d", "b02_x", "b02_b", "b02_Quelle", "b02_Art", "b02_Stoff", _
        "b03_Name", "b03_Notiz", "b03_si", "b03_d", "b03_x", "b03_b", "b03_Quelle", "b03_Art", "b03_Stoff", _
        "b04_Name", "b04_Notiz", "b04_si", "b04_d", "b04_x", "b04_b", "b04_Quelle", "b04_Art", "b04_Stoff", _
        "b05_Name", "b05_Notiz", "b05_si", "b05_d", "b05_x", "b05_b", "b05_Quelle", "b05_Art", "b05_Stoff", _
        "b06_Name", "b06_Notiz", "b06_si", "b06_d", "b06_x", "b06_b", "b06_Quelle", "b06_Art", "b06_Stoff", _
        "b07_Name", "b07_Notiz", "b07_si", "b07_d", "b07_x", "b07_b", "b07_Quelle", "b07_Art", "b07_Stoff", _
        "b08_Name", "b08_Notiz", "b08_si", "b08_d", "b08_x", "b08_b", "b08_Quelle", "b08_Art", "b08_Stoff", _
        "b09_Name", "b09_Notiz", "b09_si", "b09_d", "b09_x", "b09_b", "b09_Quelle", "b09_Art", "b09_Stoff", _
        "b10_Name", "b10_Notiz", "b10_si", "b10_d", "b10_x", "b10_b", "b10_Quelle", "b10_Art", "b10_Stoff")
    Case "Geometrie"
      RangeNameV = Array("fV", "fAW", "fAWW", "fAWT", "fD", "fDW", "fDOG", "fDAbW", "fDAB", "fGaux", "fG", "fGW", "fGAG")
      RangeNameL = Array("fAW_Ori", "fAWW_Zuo", "fAWT_Zuo", "fD_Ori", "fD_Nei", "fDW_Zuo", "fG_Art", "fGW_Zuo", _
        "fAW_U", "fAWW_U", "fAWT_U", "fD_U", "fDW_U", "fDOG_U", "fDAbW_U", "fDAB_U", "fG_U", "fGW_U", "fGAG_U")
      RangeNameN = Array("fV_Notiz", "fAW_Notiz", "fAWW_Notiz", "fAWT_Notiz", "fD_Notiz", "fDW_Notiz", "fDOG_Notiz", "fDAbW_Notiz", "fDABNotiz", "fGaux_Notiz", "fG_Notiz", "fGW_Notiz", "fGAG_Notiz")
      RangeName = Array("fV", "fAW", "fAWW", "fAWT", "fD", "fDW", "fDOG", "fDAbW", "fDAB", "fGaux", "fG", "fGW", "fGAG", _
        "fV_Notiz", "fAW_Notiz", "fAWW_Notiz", "fAWT_Notiz", "fD_Notiz", "fDW_Notiz", "fDOG_Notiz", "fDAbW_Notiz", "fDABNotiz", "fGaux_Notiz", "fG_Notiz", "fGW_Notiz", "fGAG_Notiz", _
        "fAW_Ori", "fAWW_Zuo", "fAWT_Zuo", "fD_Ori", "fD_Nei", "fDW_Zuo", "fG_Art", "fGW_Zuo", _
        "fAW_U", "fAWW_U", "fAWT_U", "fD_U", "fDW_U", "fDOG_U", "fDAbW_U", "fDAB_U", "fG_U", "fGW_U", "fGAG_U")
    Case "Technik" 'stTechAnlage brauchen wir nicht, oder?
      RangeNameV = Array("t0Head", "t0txt_w1", "t0txt_w2", "t0txt_w3", "t0txt_w4", "t0txt_h1", "t0txt_h2", "t0txt_h3", "t0txt_h4", "t0txt_l1", "t0txt_l2", "t0txt_l3", "t0txt_l4", _
        "twHead", "twVal1", "twVal2", "twVal3", "twVal4", "twVal5", "twVal6", "twVal7", "twVal8", "twVal9", "twVal10", "twVal11", "twVal12", "twVal13", _
        "tlHead", "tlVal1", "tlVal2", "tlVal3", "tlVal4", "tlVal5", "tlVal6", "tlVal7", "tlVal8", "tlVal9", "tlVal10", "tlVal11", "tlVal12", _
        "thHead", "thVal1", "thVal2", "thVal3", "thVal4", "thVal5", "thVal6", "thVal7", "thVal8", "thVal9", "thVal10", "thVal11", "thVal12")
      RangeName = RangeNameV
    Case "Graphisch"
    Case "Energieausweis"
      RangeNameSt = Array("aSoftwareherstellerProgrammVersion")
      RangeNameV = Array("aDateien", "aGebaeudeadresseStrasseNr", "aGebaeudeadressePostleitzahl", "aGebaeudeadresseOrt", "aAusstellervorname", _
        "aAusstellername", "aAusstellerBezeichnung", "aAusstellerStrasseNr", "aAusstellerPLZ", "aAusstellerOrt", "aCO2Emissionen", _
        "aAusstellungsdatum", "aRechtsstand", "aGebaeudeteil", "aBaujahrGebaeude", "aBaujahrWaermeerzeuger", "awesentlicheEnergietraeger", _
        "aErneuerbareArt", "aErneuerbareVerwendung", "aPufferspeicherNenninhalt", "aTrinkwarmwasserspeicherNenninhalt", "aNennleistung1", _
        "aWaermeerzeugerBaujahr1", "aAnzahlbaugleiche1", "aPrimaerenergiefaktor1", "aNennleistung2", "aWaermeerzeugerBaujahr2", _
        "aAnzahlbaugleiche2", "aPrimaerenergiefaktor2", "aTrinkwarmwassererzeugerBaujahr1", "aAnzahlbaugleicheWW1", "aTrinkwarmwassererzeugerBaujahr2", "aAnzahlbaugleicheWW2", _
        "aangerechneterlokalererneuerbarerStrom", "aEEWaermeGNutzung1", "aDeckungsanteil1", "aEEWaermeGNutzung2", "aDeckungsanteil2", _
        "averschaerftnachEEWaermeG8", "aPrimaerenergiebedarfHoechstwertverschaerft", "aspezifischerTransmissionswaermeverlustverschaerft")
      RangeNameL = Array("aZusatzinfosbeigefuegt", "aBundesland", "aAltersklasseGebaeude", "aAltersklasseWaermeerzeuger", _
        "aLueftungsartFensterlueftung", "aLueftungsartSchachtlueftung", "aLueftungsartAnlageoWRG", "aLueftungsartAnlagemWRG", _
        "aAnlagezurKuehlung", "aAusstellungsanlass", "aDatenerhebungAussteller", "aDatenerhebungEigentuemer", "aEmpfehlungenmoeglich", _
        "aExtrablattModernisierung", "aGebaeudetyp", "aWohngebaeudeAnbaugrad", "aLuftdichtheit", "aHeizkreisauslegungstemperatur", _
        "aHeizungsanlageinnerhalbHuelle", "aTrinkwarmwasserverteilungZirkulation", "aVereinfachteDatenaufnahme", "aWaermeerzeugerBauweise1", _
        "aEnergietraeger1", "aWaermeerzeugerBauweise2", "aEnergietraeger2", "aTrinkwarmwassererzeugerBauweise1", "aTrinkwarmwassererzeugerBauweise2", _
        "averschaerftnachEEWaermeG712eingehalten", "aSommerlicherWaermeschutz")
      RangeName = Array("aSoftwareherstellerProgrammVersion", "aDateien", "aGebaeudeadresseStrasseNr", "aGebaeudeadressePostleitzahl", "aGebaeudeadresseOrt", "aAusstellervorname", _
        "aAusstellername", "aAusstellerBezeichnung", "aAusstellerStrasseNr", "aAusstellerPLZ", "aAusstellerOrt", "aCO2Emissionen", _
        "aRechtsstand", "aAusstellungsdatum", "aGebaeudeteil", "aBaujahrGebaeude", "aBaujahrWaermeerzeuger", "awesentlicheEnergietraeger", _
        "aErneuerbareArt", "aErneuerbareVerwendung", "aPufferspeicherNenninhalt", "aTrinkwarmwasserspeicherNenninhalt", "aNennleistung1", _
        "aWaermeerzeugerBaujahr1", "aAnzahlbaugleiche1", "aPrimaerenergiefaktor1", "aNennleistung2", "aWaermeerzeugerBaujahr2", _
        "aAnzahlbaugleiche2", "aPrimaerenergiefaktor2", "aTrinkwarmwassererzeugerBaujahr1", "aAnzahlbaugleicheWW1", "aTrinkwarmwassererzeugerBaujahr2", "aAnzahlbaugleicheWW2", _
        "aZusatzinfosbeigefuegt", "aBundesland", "aAltersklasseGebaeude", "aAltersklasseWaermeerzeuger", _
        "aLueftungsartFensterlueftung", "aLueftungsartSchachtlueftung", "aLueftungsartAnlageoWRG", "aLueftungsartAnlagemWRG", _
        "aAnlagezurKuehlung", "aAusstellungsanlass", "aDatenerhebungAussteller", "aDatenerhebungEigentuemer", "aEmpfehlungenmoeglich", _
        "aExtrablattModernisierung", "aGebaeudetyp", "aWohngebaeudeAnbaugrad", "aLuftdichtheit", "aHeizkreisauslegungstemperatur", _
        "aHeizungsanlageinnerhalbHuelle", "aTrinkwarmwasserverteilungZirkulation", "aVereinfachteDatenaufnahme", "aWaermeerzeugerBauweise1", _
        "aEnergietraeger1", "aWaermeerzeugerBauweise2", "aEnergietraeger2", "aTrinkwarmwassererzeugerBauweise1", "aTrinkwarmwassererzeugerBauweise2", _
        "averschaerftnachEEWaermeG712eingehalten", "aSommerlicherWaermeschutz", _
        "aangerechneterlokalererneuerbarerStrom", "aEEWaermeGNutzung1", "aDeckungsanteil1", "aEEWaermeGNutzung2", "aDeckungsanteil2", _
        "averschaerftnachEEWaermeG8", "aPrimaerenergiebedarfHoechstwertverschaerft", "aspezifischerTransmissionswaermeverlustverschaerft")
    Case "Tabellen"
      RangeNameV = Array("dbName", "dbRho", "dbLambda")
      RangeNameN = Array("dbNotiz")
      RangeName = Array("dbName", "dbRho", "dbLambda", "dbNotiz")
    Case "Deckblatt"
      RangeNameV = Array("dGemarkung", "dBauherr", "dBearbeiter", "dDatum")
      RangeName = RangeNameV
  End Select
  Select Case strWhat
    Case "St": GetNameArray = RangeNameSt 'Steuerung
    Case "V": GetNameArray = RangeNameV 'Eingabe Werte
    Case "Vblau": GetNameArray = RangeNameVblau 'Eingabe Werte - Blatt Bauteile blau hinterlegt
    Case "Vblauweiss": GetNameArray = RangeNameVblauWeiss 'alfx nicht editierbar aber bei LilaAus bitte blau, sonst weiss
    Case "L": GetNameArray = RangeNameL 'Eingabe Listenauswahl
    Case "N": GetNameArray = RangeNameN 'Eingabe Notiz
    Case "Nblau": GetNameArray = RangeNameNblau 'Eingabe Notiz - Blatt Bauteile blau hinterlegt
    Case "B": GetNameArray = RangeNameB 'Eingabe betreffend Umschaltung Berechnung Blatt Geometrie
    Case "oB": GetNameArray = RangeNameoB 'Rest ohne Verweis Blatt Geometrie
    Case Else: GetNameArray = RangeName 'alle
  End Select
End Function
Sub LilaAnAus()
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False)
  Dim ColorIndexV, ColorIndexL, ColorIndexN, temp As Range
  Dim RangeNameV, RangeNameL, RangeNameN, RangeNameVblau, RangeNameNblau, RangeNameVblauWeiss, i%
  Select Case ThisWorkbook.ActiveSheet.Name
    Case "Gebaeude": Set temp = ThisWorkbook.ActiveSheet.Range("gObjekt")
    Case "Referenz"
    Case "Bauteile": Set temp = ThisWorkbook.ActiveSheet.Range("bOp_Name")
    Case "Geometrie": Set temp = ThisWorkbook.ActiveSheet.Range("fV")
    Case "Technik": Set temp = ThisWorkbook.ActiveSheet.Range("t0Head")
    Case "Graphisch"
    Case "Energieausweis": Set temp = ThisWorkbook.ActiveSheet.Range("aGebaeudeadresseStrasseNr")
    Case "Tabellen": Set temp = ThisWorkbook.ActiveSheet.Range("dbName")
    Case "Deckblatt": Set temp = ThisWorkbook.ActiveSheet.Range("dGemarkung")
  End Select
  If temp.Interior.ColorIndex = -4142 Then
    ColorIndexV = 6 'gelb?
    ColorIndexL = 44 'orange?
    ColorIndexN = 10092543
  Else
    ColorIndexV = -4142
    ColorIndexL = -4142
    ColorIndexN = -4142
  End If
  RangeNameV = GetNameArray(ThisWorkbook.ActiveSheet.Name, "V")
  RangeNameVblau = GetNameArray(ThisWorkbook.ActiveSheet.Name, "Vblau")
  RangeNameVblauWeiss = GetNameArray(ThisWorkbook.ActiveSheet.Name, "Vblauweiss")
  RangeNameL = GetNameArray(ThisWorkbook.ActiveSheet.Name, "L")
  RangeNameN = GetNameArray(ThisWorkbook.ActiveSheet.Name, "N")
  RangeNameNblau = GetNameArray(ThisWorkbook.ActiveSheet.Name, "Nblau")
  For i = 0 To UBound(RangeNameV)
    ThisWorkbook.ActiveSheet.Range(RangeNameV(i)).Interior.ColorIndex = ColorIndexV
  Next i
  For i = 0 To UBound(RangeNameVblau)
    If ColorIndexV > 0 Then
      ThisWorkbook.ActiveSheet.Range(RangeNameVblau(i)).Interior.ColorIndex = ColorIndexV
    Else
      ThisWorkbook.ActiveSheet.Range(RangeNameVblau(i)).Interior.Color = 15849925 'blau hinterlegt
    End If
  Next i
  For i = 0 To UBound(RangeNameVblauWeiss)
    If ColorIndexV > 0 Then
      ThisWorkbook.ActiveSheet.Range(RangeNameVblau(i)).Interior.ColorIndex = ColorIndexV
    Else
      ThisWorkbook.ActiveSheet.Range(RangeNameVblau(i)).Interior.Color = 15849925 'blau hinterlegt
    End If
  Next i
  For i = 0 To UBound(RangeNameL)
    ThisWorkbook.ActiveSheet.Range(RangeNameL(i)).Interior.ColorIndex = ColorIndexL
  Next i
  For i = 0 To UBound(RangeNameN)
    ThisWorkbook.ActiveSheet.Range(RangeNameN(i)).Interior.Color = ColorIndexN 'hier Color, nicht ColorIndex?
  Next i
  For i = 0 To UBound(RangeNameNblau)
    If ColorIndexV > 0 Then
      ThisWorkbook.ActiveSheet.Range(RangeNameNblau(i)).Interior.Color = ColorIndexN
    Else
      ThisWorkbook.ActiveSheet.Range(RangeNameNblau(i)).Interior.Color = 15849925 'blau hinterlegt
    End If
  Next i
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Function TCombine(List As Range, Deli As String)
  Dim i%, Ruck
  For i = 1 To List.Cells.Count
    If i = 1 Then Ruck = """"
    Ruck = Ruck & List.Cells(i)
    If i < List.Cells.Count Then Ruck = Ruck & Deli Else Ruck = Ruck & """"
  Next i
  TCombine = Ruck
End Function
Sub ZeilenEinAusBlendenAlle()
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False)
  Dim iEin As Integer
  Application.ScreenUpdating = False
  Dim oKnopf As Object, oKnopf2 As Object
  Set oKnopf = ActiveSheet.Shapes(Application.Caller)
  If oKnopf.TextFrame.Characters.Text = "+" Then
    iEin = 1
    oKnopf.TextFrame.Characters.Text = "-"
  Else
    iEin = 0
    oKnopf.TextFrame.Characters.Text = "+"
  End If
'Schleife |fffd|ber alle Kn|fffd|pfe
  For Each oKnopf2 In ActiveSheet.Shapes
    If InStr(oKnopf2.Name, "Button") > 0 Then 'And (oKnopf.Characters.Text = "+" Or oKnopf.Characters.Text = "-") Then
      ZeilenEinAusBlenden oKnopf2.Name, iEin
    End If
  Next oKnopf2
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Sub ZeilenEinAusBlendenEinzeln()
  BlattschutzBlattHerstellen (False)
  ZeilenEinAusBlenden Application.Caller, 2
End Sub
Private Sub ZeilenEinAusBlenden(sName As String, iEin As Integer) 'iEin = 0: alle +, iEin = 1: alle -, iEin = 2: einzeln
  On Error GoTo Hell
  Dim oKnopf As Object, sAnfang As String, sEnde As String
  Set oKnopf = ActiveSheet.Shapes(sName).TextFrame
        'If sName = "Dropdown 186" Then ActiveSheet.Shapes(sName).Delete
  sAnfang = ActiveSheet.Shapes(sName).TopLeftCell.Offset(0, 1)
  sEnde = ActiveSheet.Shapes(sName).TopLeftCell.Offset(0, 2)
  If sAnfang = "" Or sEnde = "" Then Exit Sub
  Dim rZeilen As Range
  Set rZeilen = Range(ActiveSheet.Rows(sAnfang), ActiveSheet.Rows(sEnde))
  If (oKnopf.Characters.Text = "-" And iEin = 2) Or iEin = 0 Then
    rZeilen.EntireRow.Hidden = True
    oKnopf.Characters.Text = "+"
  ElseIf (oKnopf.Characters.Text = "+" And iEin = 2) Or iEin = 1 Then
    rZeilen.EntireRow.Hidden = False
    oKnopf.Characters.Text = "-"
  End If
Hell: 'iEin = 2 d.h. nur wenn einzeln dann Blattschutz wieder herstellen, wenn alle, dann erst nach der Schleife
  If iEin = 2 And ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Sub SpaltenEinAusBlendenEinzeln()
  BlattschutzBlattHerstellen (False)
  SpaltenEinAusBlenden Application.Caller, 2
End Sub
Private Sub SpaltenEinAusBlenden(sName As String, iEin As Integer)
  On Error GoTo Hell
  Dim oKnopf As Object, iAnfang As Integer, iEnde As Integer
  Set oKnopf = ActiveSheet.Shapes(sName).TextFrame
  iAnfang = ActiveSheet.Shapes(sName).TopLeftCell.Offset(0, 0)
  iEnde = ActiveSheet.Shapes(sName).TopLeftCell.Offset(1, 0)
  If iAnfang = 0 Or iEnde = 0 Then Exit Sub
  Dim rSpalten As Range
  Set rSpalten = Range(ActiveSheet.Columns(iAnfang), ActiveSheet.Columns(iEnde))
  Dim BSchutz As Boolean
  If (oKnopf.Characters.Text = "-" And iEin = 2) Or iEin = 0 Then
    rSpalten.EntireColumn.Hidden = True
    oKnopf.Characters.Text = "+"
  ElseIf (oKnopf.Characters.Text = "+" And iEin = 2) Or iEin = 1 Then
    rSpalten.EntireColumn.Hidden = False
    oKnopf.Characters.Text = "-"
  End If
Hell: 'iEin = 2 d.h. nur wenn einzeln dann Blattschutz wieder herstellen, wenn alle, dann erst nach der Schleife
  If iEin = 2 And ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Sub DefineNamesBauteile()
  Dim objBauteile As Worksheet, objName As Range, i%, intMax%, intStartRow%, intRowIncrement%
  Set objBauteile = ThisWorkbook.Worksheets("Bauteile")
  intMax = 10
  intStartRow = 36: intRowIncrement = 22
  For i = 1 To intMax
    Set objName = objBauteile.Cells(intStartRow + (i - 1) * 22, 2)
    objName.UnMerge
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "Name", RefersTo:=objName
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "Notiz", RefersTo:=objName.Offset(0, 4)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "alf", RefersTo:=objName.Offset(0, 8)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "si", RefersTo:=objName.Offset(3, 3)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "d", RefersTo:=objName.Offset(4, 0).Resize(12)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "x", RefersTo:=objName.Offset(4, 1).Resize(12)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "b", RefersTo:=objName.Offset(4, 2).Resize(12)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "Quelle", RefersTo:=objName.Offset(4, 12).Resize(12)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "Art", RefersTo:=objName.Offset(4, 13).Resize(12)
    objBauteile.Names.Add Name:="b" & Format(i, "00") & "_" & "Stoff", RefersTo:=objName.Offset(4, 14).Resize(12)
    objName.Resize(1, 4).Merge
  Next i
End Sub
Private Sub defineNamesAusweis()
  Dim rng As Range, nme As String
  For Each rng In ThisWorkbook.Sheets("Energieausweis").Range("aAlle").Cells
    nme = Replace("a" & rng.Offset(0, 13), "-", "")
    ThisWorkbook.Sheets("Energieausweis").Names.Add Name:=nme, RefersTo:=rng
  Next rng
End Sub
Private Sub KnoepfeGleichGross()
  Dim oSheet As Worksheet, oKnopf As Object
  On Error Resume Next
  For Each oSheet In ThisWorkbook.Worksheets
    For Each oKnopf In oSheet.Shapes
      If InStr(oKnopf.Name, "Button") > 0 Then
        If oKnopf.AlternativeText = "+" Or oKnopf.AlternativeText = "-" Then
          oKnopf.Height = 15
          oKnopf.Width = 15
        End If
      End If
    Next oKnopf
  Next oSheet
End Sub
Sub ZeilenhoeheAnpassenUmbruch()
  On Error GoTo Hell
  Dim row%, oRow As Range
  BlattschutzBlattHerstellen (False)
  ThisWorkbook.ActiveSheet.Range("a:p").SpecialCells(xlCellTypeVisible).EntireRow.AutoFit
Hell:
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'  If Target.Column = 26 Then
'        Target.Columns.ColumnWidth = 40
'   Else
'       Columns(4).ColumnWidth = 20
'  End If
'End Sub

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Technik"
Option Explicit

Sub AnlageLaden()
  If MsgBox("Eingaben |fffd|berschreiben?", vbOKCancel) = vbCancel Then Exit Sub
  Dim i%, Nr%, Bereich As Range
  Nr = ThisWorkbook.ActiveSheet.Range("stTechAnlage").Value
  Set Bereich = ThisWorkbook.ActiveSheet.Range("v:w")
  For i = 1 To 200
    If Left(Bereich.Cells(i, 2), 1) = "$" Then
      ActiveSheet.Range(Bereich.Cells(i, 2)) = Bereich.Cells(i, 1)
    End If
  Next i
End Sub
Attribute VB_Name = "XmlAusweis"
Option Explicit
Public fso As New FileSystemObject, Preview As Boolean
Sub KnopfPreview()
  Preview = True
  Call ScriptPDF
End Sub
Sub KnopfZertifizieren()
  If MsgBox("Durch diese Aktion wird - im Falle der erfolgreichen Datenpr|fffd|fung - " _
    & "eine Registriernummer beim DIBt abgerufen, welche kostenpflichtig ist." & Chr(13) _
    & "(Daf|fffd|r muss beim DIBt ein eigenes Kontingent eingerichtet sein.)" & Chr(13) _
    & "Dies kann ab hier nicht mehr r|fffd|ckg|fffd|ngig gemacht oder abgebrochen werden." & Chr(13) _
    & "Wollen Sie fortfahren?" & Chr(13) & Chr(13) _
    & "(Hinweis: vor dem Zertifizieren muss aktuelle xml geschrieben sein.)", vbOKCancel) = vbCancel Then Exit Sub
  Preview = False
  Call ScriptPDF
End Sub
Sub ScriptPDF()
  Dim ID, objDateien As Range, objPruefung As Range, strCommand As String, strPic As String, strLogo As String, strSign As String, strOut As String, strXML As String
  Dim strPW, strUS
  Set objDateien = ThisWorkbook.Sheets("Energieausweis").Range("aDateien")
  If DateiGeoeffnet(objDateien.Cells(2), objDateien.Cells(7)) = True Then Exit Sub
  Set objPruefung = ThisWorkbook.Sheets("Energieausweis").Range("zPruefungDateien")
  If objPruefung <> "Pr|fffd|fung Format: ok" Then
    MsgBox objPruefung.Text
    Exit Sub
  End If
  ChDir objDateien.Cells(2)
  'strCommand = Chr(34) & objDateien.Cells(1) & "\EnEV2013Console.exe" & Chr(34) & " -application de.lmis.enev.headless.application"
'2017 neue Druckapplikation und neues Schema:
  strCommand = Chr(34) & objDateien.Cells(1) & "\Druckapplikation2016.exe" & Chr(34) & " -application de.lmis.enev.headless.application"
  strXML = objDateien.Cells(3)
  strPic = objDateien.Cells(4)
  strLogo = objDateien.Cells(5)
  strSign = objDateien.Cells(6)
  strOut = objDateien.Cells(7)
  strUS = objDateien.Cells(8)
  strPW = MD5Convert(objDateien.Cells(9))
  If Preview = False Then
    If strUS = "" Then
      MsgBox "'Nutzername DIBt' muss angegeben sein", vbOKOnly
      Exit Sub
    ElseIf strPW = "" Then
      MsgBox "'Nutzername DIBt' muss angegeben sein", vbOKOnly
      Exit Sub
    End If
  End If
  If Len(strPic) > 0 Then strCommand = strCommand & " -i " & Chr(34) & strPic & Chr(34)
  If Len(strLogo) > 0 Then strCommand = strCommand & " -l " & Chr(34) & strLogo & Chr(34)
  If Len(strSign) > 0 Then strCommand = strCommand & " -s " & Chr(34) & strSign & Chr(34)
  If Preview = True Then
    strCommand = strCommand & " -o " & Chr(34) & strOut & Chr(34) & " -d " & Chr(34) & strXML & Chr(34)
    ID = Shell(strCommand, vbNormalFocus)
  Else
    strCommand = strCommand & " -c " & " -us " & Chr(34) & strUS & Chr(34) & " -pw " & Chr(34) & strPW & Chr(34)
    strCommand = strCommand & " -o " & Chr(34) & strOut & Chr(34) & " -d " & Chr(34) & strXML & Chr(34)
    Dim s1, s2
    Set s1 = CreateObject("wscript.shell")
    Set s1 = s1.exec(strCommand)
    s2 = s1.StdOut.ReadAll
    If s2 <> "" Then MsgBox s2, vbOKOnly, "BBSR-Druckapplikation"
  End If
  '""C:\Program Files\Druckapplikation2016\Druckapplikation2016.exe" -application de.lmis.enev.headless.application -i "bild.jpg" -l "logo.jpg" -s "signatur.png" -c  -us "kirstenhoettges@gmail.com" -pw "6D7CBD5E913049460CB2FCF39E615410" -o "out2017.pdf"
End Sub
Function DateiExistiert(strPfad As String, strDatei As String)
  If Dir(strPfad & "\" & strDatei) <> "" Then DateiExistiert = "ok" Else DateiExistiert = "Fehler, Datei nicht gefunden"
End Function
Function DateiGeoeffnet(strPfad As String, strDatei As String) As Boolean 'funzt nit!!!!!!!!!!!!!!
  On Error GoTo Hell
  Open strPfad & "\" & strDatei For Binary Access Read Lock Read As #1
  Close #1
  DateiGeoeffnet = False
  Exit Function
Hell:
  MsgBox "Die pdf-Datei <" & strDatei & "> ist ge|fffd|ffnet, bitte vor dem Erzeugen schlie|fffd|en!"
  DateiGeoeffnet = True
End Function
Sub XMLAusweisExport()
  Dim Datei As String, Text As String, Bereich As Range, RowsCount As Long, RangeName, PrintLine As String, VersionEnEV As String
  Dim Val As String, Itm As String, i%, j%, ValColumnOffset%
'2017 neu
  Dim Rechtsstand As String, Ausstellungsdatum
  On Error GoTo Hell
  BlattschutzBlattHerstellen (False) 'Dateiname wird geschrieben, liegt's daran?
  'Zieldatei festlegen
  Datei = Application.GetSaveAsFilename(filefilter:="XML files (*.xml), *.xml")
  If Datei = "Falsch" Then Exit Sub
  If fso.FileExists(Datei) Then
    If MsgBox("Datei bereits vorhanden. |fffd|berschreiben?", vbOKCancel) = vbCancel Then Exit Sub
  Else
    fso.CreateTextFile (Datei)
  End If
  ThisWorkbook.Sheets("Energieausweis").Range("aDateien").Cells(2) = Replace(Datei, "\" & fso.GetFileName(Datei), "")
  ThisWorkbook.Sheets("Energieausweis").Range("aDateien").Cells(3) = fso.GetFileName(Datei)
  
  Set Bereich = ThisWorkbook.ActiveSheet.Range("aHilf")
  ValColumnOffset = -12
  RowsCount = Bereich.CurrentRegion.Rows.Count
  VersionEnEV = ThisWorkbook.Sheets("Energieausweis").Range("aVersionEnEV")
'2017 neu
  Rechtsstand = ThisWorkbook.Sheets("Energieausweis").Range("aRechtsstand")
  Ausstellungsdatum = ThisWorkbook.Sheets("Energieausweis").Range("aAusstellungsdatum")
  
  Open Datei For Output As #1 'Zieldatei |fffd|ffnen
  'Header
  Print #1, "<?xml version=""1.0""  encoding=""UTF-8""?> "
  'Print #1, "<EnEV-Energieausweis xmlns=""https://energieausweis.dibt.de/schema/Kontrollsystem_Versionsstand_2014-06-02.xsd""> "
'2017 neues Schema
  Print #1, "<EnEV-Energieausweis xmlns=""https://energieausweis.dibt.de/schema/Kontrollsystem_Versionsstand_2016-06-30.xsd""> "
  Print #1, "<Gebaeudebezogene-Daten>"
  RangeName = Array("Gebaeudeadresse-Strasse-Nr", "Gebaeudeadresse-Postleitzahl", "Gebaeudeadresse-Ort", "Ausstellervorname", "Ausstellername", "Aussteller-Bezeichnung", "Aussteller-Strasse-Nr", "Aussteller-PLZ", "Aussteller-Ort", "Zusatzinfos-beigefuegt", "CO2-Emissionen", "Angaben-erhaeltlich", _
    "Registriernummer", "Bundesland", "Postleitzahl", "Gebaeudeteil", "Baujahr-Gebaeude", "Altersklasse-Gebaeude", "Baujahr-Waermeerzeuger", "Altersklasse-Waermeerzeuger", "wesentliche-Energietraeger", "Erneuerbare-Art", "Erneuerbare-Verwendung", "Lueftungsart-Fensterlueftung", "Lueftungsart-Schachtlueftung", "Lueftungsart-Anlage-o-WRG", "Lueftungsart-Anlage-m-WRG", "Anlage-zur-Kuehlung", "Ausstellungsanlass", "Datenerhebung-Aussteller", "Datenerhebung-Eigentuemer", _
    "Gebaeudetyp", "Anzahl-Wohneinheiten", "Gebaeudenutzflaeche", _
    "Wohngebaeude-Anbaugrad", "Bruttovolumen", "durchschnittliche-Geschosshoehe", _
    "Waermebrueckenzuschlag", _
    "Transmissionswaermeverlust", "Luftdichtheit", "Lueftungswaermeverlust", "Solare-Waermegewinne", "Interne-Waermegewinne", _
    "Waermeerzeuger-Bauweise1", "Nennleistung1", "Waermeerzeuger-Baujahr1", "Anzahl-baugleiche1", "Energietraeger1", "Primaerenergiefaktor1", _
    "Waermeerzeuger-Bauweise2", "Nennleistung2", "Waermeerzeuger-Baujahr2", "Anzahl-baugleiche2", "Energietraeger2", "Primaerenergiefaktor2", "Pufferspeicher-Nenninhalt", "Heizkreisauslegungstemperatur", "Heizungsanlage-innerhalb-Huelle", _
    "Trinkwarmwassererzeuger-Bauweise1", "Trinkwarmwassererzeuger-Baujahr1", "Anzahl-baugleicheWW1", _
    "Trinkwarmwassererzeuger-Bauweise2", "Trinkwarmwassererzeuger-Baujahr2", "Anzahl-baugleicheWW2", "Trinkwarmwasserspeicher-Nenninhalt", "Trinkwarmwasserverteilung-Zirkulation", "Vereinfachte-Datenaufnahme", _
    "spezifischer-Transmissionswaermeverlust-Ist", "spezifischer-Transmissionswaermeverlust-Hoechstwert", "angerechneter-lokaler-erneuerbarer-Strom", "Endenergiebedarf-Waerme-AN", "Endenergiebedarf-Hilfsenergie-AN", "Primaerenergiebedarf", "Primaerenergiebedarf-Hoechstwert-Neubau", "Primaerenergiebedarf-Hoechstwert-Bestand", "Energieeffizienzklasse", "EEWaermeG-Nutzung-1", "Deckungsanteil-1", "EEWaermeG-Nutzung-2", "Deckungsanteil-2", "verschaerft-nach-EEWaermeG-7-1-2-eingehalten", "verschaerft-nach-EEWaermeG-8", "Primaerenergiebedarf-Hoechstwert-verschaerft", "spezifischer-Transmissionswaermeverlust-verschaerft", "Sommerlicher-Waermeschutz", _
    "Empfehlungen-moeglich", "Extrablatt-Modernisierung", "Softwarehersteller-Programm-Version")
  For i = 0 To UBound(RangeName)
    PrintLine = WriteTag(ActiveSheet.Name, RangeName(i), 1)
    If PrintLine <> "#" Then Print #1, PrintLine
    Select Case RangeName(i)
'      Case "Angaben-erhaeltlich": Print #1, "</Gebaeudebezogene-Daten>": Print #1, "<Energieausweis-Daten EnEV-Version = " & Chr(34) & VersionEnEV & Chr(34) & ">"
'2017 neue Zeile Rechtsstand
      Case "Angaben-erhaeltlich"
        Print #1, "</Gebaeudebezogene-Daten>"   'erstmal vorherigen Tag schlie|fffd|en
        Print #1, "<Energieausweis-Daten EnEV-Version=" & Chr(34) & VersionEnEV & Chr(34) & " Rechtsstand=" & Chr(34) & Format(Rechtsstand, "YYYY-MM-DD") & Chr(34) & ">"
'2017 neu weil Datum anders formatiert, daf|fffd|r oben aus Array raus
        Print #1, "<Ausstellungsdatum>" & Format(Ausstellungsdatum, "YYYY-MM-DD") & "</Ausstellungsdatum>"
      Case "Datenerhebung-Eigentuemer": Print #1, "<Wohngebaeude>"
      'Case "Gebaeudenutzflaeche": Print #1, "<Bedarfsdaten-4108-4701>"
'2017 umbenannt
      Case "Gebaeudenutzflaeche": Print #1, "<Bedarfswerte-4108-4701>"
      'Case "durchschnittliche-Geschosshoehe": Print #1, "<Huellflaechendaten>": Call WriteTagBauteile
      'Case "Waermebrueckenzuschlag": Print #1, "</Huellflaechendaten>"
'2017 kein Knoten "Huellfl|fffd|chedaten", daf|fffd|r Bauteile modifiziert
      Case "durchschnittliche-Geschosshoehe": Call WriteTagBauteile
      Case "Waermebrueckenzuschlag": 'nix
      Case "Interne-Waermegewinne": Print #1, "<Heizungsanlage>"
      Case "Primaerenergiefaktor1": Print #1, "</Heizungsanlage>": Print #1, "<Heizungsanlage>"
      Case "Primaerenergiefaktor2": Print #1, "</Heizungsanlage>"
      Case "Heizungsanlage-innerhalb-Huelle": Print #1, "<Trinkwarmwasseranlage>"
      Case "Anzahl-baugleicheWW1": Print #1, "</Trinkwarmwasseranlage>": Print #1, "<Trinkwarmwasseranlage>"
      Case "Anzahl-baugleicheWW2": Print #1, "</Trinkwarmwasseranlage>"
      'Case "Sommerlicher-Waermeschutz": Print #1, "</Bedarfsdaten-4108-4701>": Print #1, "</Wohngebaeude>"
'2017 umbenannt
      Case "Sommerlicher-Waermeschutz": Print #1, "</Bedarfswerte-4108-4701>": Print #1, "</Wohngebaeude>"
      Case "Softwarehersteller-Programm-Version": Print #1, "</Energieausweis-Daten>": Print #1, "</EnEV-Energieausweis>"
    End Select
  Next i
  Close #1    'Zieldatei schlie|fffd|en
  'Beep
  Exit Sub
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
Hell:
  Close #1
      MsgBox "FehlerNr.: " & Err.Number & vbNewLine & vbNewLine _
      & "Beschreibung: " & Err.Description _
      , vbCritical, "Fehler"
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzBlattHerstellen (True)
End Sub
Private Function WriteTag(strSheet As String, strTagName, j%) As String
  Dim strTagName2 As String, strRangeName As String
  WriteTag = "#" 'Indikator Fehler?!
  If Preview = False And strTagName = "Registriernummer" Then Exit Function 'passt zwar nicht zusammen aber f|fffd|r Test hochladen
  On Error GoTo Hell
  strRangeName = ThisWorkbook.Worksheets(strSheet).Range("a" & Replace(strTagName, "-", "")).Cells(j)
  strRangeName = SonderzeicheEntfernen(strRangeName)
  strTagName2 = CheckTag(strTagName)
'2017 neu testen ,>.
  strRangeName = Replace(strRangeName, ",", ".")
'2018 Komma in strings nicht entfernen, Inditifizierer: nur dort ein Leerzeichen dahinter
  strRangeName = Replace(strRangeName, ". ", ", ")
  WriteTag = "<" & strTagName2 & ">" & strRangeName & "</" & strTagName2 & ">"
  Exit Function
Hell:
'      MsgBox "bei " & strTagName & " FehlerNr.: " & Err.Number & vbNewLine & vbNewLine _
'      & "Beschreibung: " & Err.Description _
'      , vbCritical, "Fehler"
End Function
Private Sub WriteTagBauteile() '''''''''' bereits inkl. replace ,>.
  Dim i%, j%, k%, rBereich As Range, iTag, iOri, iW As Boolean
  Set rBereich = ThisWorkbook.Sheets("Energieausweis").Range("aHuell")
'2017
  Dim rBereichDazu As Range
  Set rBereichDazu = ThisWorkbook.Sheets("Energieausweis").Range("aHuell2017dazu")
  For i = 1 To rBereich.Rows.Count
    If rBereich.Cells(i, 1) = "" Then Exit Sub
'    Select Case Left(rBereich.Cells(i, 1), 2)
'      Case "D ": iTag = "Dach-Aussenluft": iOri = "": iW = False
'      Case "OG": iTag = "Geschossdecke": iOri = "": iW = False
'      Case "AW", "T ": iTag = "Wand-Aussenluft-" & ExtractOri(rBereich.Cells(i, 1)): iW = False
'      Case "AB", "Ab": iTag = "Wand-andere-Temp": iOri = "": iW = False
'      Case "G ": iTag = ExtractG(rBereich.Cells(i, 1)): iOri = "": iW = False
'      Case "AG": iTag = "Boden-Aussenluft": iOri = "": iW = False
'      Case "W ": iTag = ExtractW(rBereich.Cells(i, 1)): iOri = "": iW = True
'    End Select
'2017
    iTag = "Bauteil-" & rBereichDazu.Columns(1).Cells(i) 'jetzt einfacher
    Print #1, "<" & iTag & ">"
    Print #1, "<Flaechenbezeichnung>" & SonderzeicheEntfernen(rBereich.Columns(1).Cells(i)) & "</Flaechenbezeichnung>"
    Print #1, "<Flaeche>" & Replace(rBereich.Columns(2).Cells(i), ",", ".") & "</Flaeche>"
    Print #1, "<U-Wert>" & Replace(rBereich.Columns(3).Cells(i), ",", ".") & "</U-Wert>"
'    If iW Then Print #1, "<g-Wert>" & rBereich.Columns(4).Cells(i) & "</g-Wert>"
'2017
    If iTag = "Bauteil-Opak" Then Print #1, "<Ausrichtung>" & rBereichDazu.Columns(2).Cells(i) & "</Ausrichtung>"
    If iTag = "Bauteil-Opak" Then Print #1, "<grenztAn>" & rBereichDazu.Columns(3).Cells(i) & "</grenztAn>"
    If iTag = "Bauteil-Transparent" Then Print #1, "<g-Wert>" & Replace(rBereich.Columns(4).Cells(i), ",", ".") & "</g-Wert>"
    If iTag = "Bauteil-Transparent" Then Print #1, "<Ausrichtung>" & rBereichDazu.Columns(2).Cells(i) & "</Ausrichtung>"
    Print #1, "</" & iTag & ">"
  Next i
End Sub
Private Function ExtractOri(sName)
  Dim Ori, OriUml, i% 'Orientierungen umsortieren, damit ERST die Zwischenoris gefunden werden
  OriUml = Array("Nordost", "S|fffd|dost", "S|fffd|dwest", "Nordwest", "Nord", "Ost", "S|fffd|d", "West")
  Ori = Array("Nordost", "Suedost", "Suedwest", "Nordwest", "Nord", "Ost", "Sued", "West")
  For i = 0 To UBound(OriUml)
    If InStr(sName, OriUml(i)) > 0 Then
      ExtractOri = Ori(i)
      Exit Function
    End If
  Next i
End Function
Private Function ExtractG(sName)
  Dim GArt, GArtTag, i%
  GArt = Array("Wand", "Kellerdecke", "Aufgest|fffd|nderter", "Fu|fffd|boden")
  GArtTag = Array("Wand-Erdreich", "Boden-andere-Temp", "Boden-andere-Temp", "Boden-Erdreich")
  For i = 0 To UBound(GArt)
    If InStr(sName, GArt(i)) > 0 Then
      ExtractG = GArtTag(i)
      Exit Function
    End If
  Next i
End Function
Private Function ExtractW(sName)
    If Mid(sName, 1, 2) > 6 And Mid(sName, 1, 2) < 11 Then
      ExtractW = "Fenster-Dach"
    Else
      ExtractW = "Fenster-" & ExtractOri(sName)
    End If
End Function
Private Function CheckTag(strTagName)
  Dim Ruck
  Ruck = strTagName
  Select Case strTagName
    'Case "Waermeerzeuger-Bauweise1", "Waermeerzeuger-Bauweise2": Ruck = "Waermeerzeuger-Bauweise"
'2017 neu erg|fffd|nzt "-4701"
    Case "Waermeerzeuger-Bauweise1", "Waermeerzeuger-Bauweise2": Ruck = "Waermeerzeuger-Bauweise-4701"
    Case "Nennleistung1", "Nennleistung2": Ruck = "Nennleistung"
    Case "Waermeerzeuger-Baujahr1", "Waermeerzeuger-Baujahr2": Ruck = "Waermeerzeuger-Baujahr"
    Case "Anzahl-baugleiche1", "Anzahl-baugleiche2": Ruck = "Anzahl-baugleiche"
    Case "Energietraeger1", "Energietraeger2": Ruck = "Energietraeger"
    Case "Primaerenergiefaktor1", "Primaerenergiefaktor2": Ruck = "Primaerenergiefaktor"
    'Case "Trinkwarmwassererzeuger-Bauweise1", "Trinkwarmwassererzeuger-Bauweise2": Ruck = "Trinkwarmwassererzeuger-Bauweise"
'2017 neu erg|fffd|nzt "-4701"
    Case "Trinkwarmwassererzeuger-Bauweise1", "Trinkwarmwassererzeuger-Bauweise2": Ruck = "Trinkwarmwassererzeuger-Bauweise-4701"
    Case "Trinkwarmwassererzeuger-Baujahr1", "Trinkwarmwassererzeuger-Baujahr2": Ruck = "Trinkwarmwassererzeuger-Baujahr"
    Case "Anzahl-baugleicheWW1", "Anzahl-baugleicheWW2": Ruck = "Anzahl-baugleiche"
  End Select
  CheckTag = Ruck
End Function
Private Function SortiereBauteile(Bereich As Range)
  Dim Ruck(), BereichFeld(), i%, j%, k%, l%, x%, Ori, OriUml, Kuerzel, GArtW, GArtB, WZweite As Boolean, GZweite As Boolean
  ReDim Ruck(Bereich.Rows.Count - 1, 0)
  ReDim BereichFeld(Bereich.Rows.Count - 1, Bereich.Columns.Count - 1)
  x = 0: GZweite = False: WZweite = False
  On Error GoTo Hell 'NUR F|fffd|R DEBUG
  'Kuerzel = Array("D ", "OG", "AW", "Ab", "AB", "G ", "AG", "G ", "W ", "W ") '"T ",
'2017 umsortieren, Dach und OG nach hinten
  Kuerzel = Array("AW", "Ab", "AB", "G ", "AG", "G ", "W ", "W ", "D ", "OG") '"T ",
  OriUml = Array("Nord", "Nordost", "Ost", "S|fffd|dost", "S|fffd|d", "S|fffd|dwest", "West", "Nordwest")
  Ori = Array("Nord", "Nordost", "Ost", "Suedost", "Sued", "S|fffd|dwest", "West", "Nordwest")
  GArtW = Array("Wand beheizter Keller")
  GArtB = Array("Kellerdecke (unbeh. Keller mit Perimeterd|fffd|mmung)", "Kellerdecke (unbeh. Keller ohne Perimeterd|fffd|mmung)", "Aufgest|fffd|nderter Fu|fffd|boden", _
    "Fu|fffd|boden auf Erdreich ohne Randd|fffd|mmung", "Fu|fffd|boden beheizter Keller", "Fu|fffd|boden auf Erdreich waager. Randd|fffd|mmung 5 m", _
    "Fu|fffd|boden auf Erdreich senkr. Randd|fffd|mmung 2 m")
  For k = 0 To UBound(BereichFeld, 1) 'temp Range in Feld, T in AW integrieren
    For l = 0 To UBound(BereichFeld, 2)
      BereichFeld(k, l) = Bereich.Cells(k + 1, l + 1)
      If l = 0 And Left(BereichFeld(k, l), 2) = "T " Then BereichFeld(k, l) = "AW"
    Next l
  Next k
  For i = 0 To UBound(Kuerzel)
    For j = 0 To UBound(Ori)
      For k = 0 To UBound(Ruck)
        If Left(BereichFeld(k, 0), 2) = Kuerzel(i) And Bereich.Cells(k + 1, 5) > 0 Then
          If Kuerzel(i) = "AW" Then 'Or Kuerzel(i) = "T " Then
              If Bereich.Cells(k + 1, 2) = OriUml(j) Then
                Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                x = x + 1
              End If
          ElseIf Kuerzel(i) = "W " And WZweite = False Then  'Dach
              If Bereich.Cells(k + 1, 2) = OriUml(j) And Right(BereichFeld(k, 0), 2) > 6 And Right(BereichFeld(k, 0), 2) < 11 Then
                  Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                  x = x + 1
              End If
          ElseIf Kuerzel(i) = "W " And WZweite = True Then   '90|fffd|
              If Bereich.Cells(k + 1, 2) = OriUml(j) And (Right(BereichFeld(k, 0), 2) <= 6 Or Right(BereichFeld(k, 0), 2) >= 11) Then
                  Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                  x = x + 1
              End If
          ElseIf j = 0 And Kuerzel(i) = "G " And GZweite = False Then
              For l = 0 To UBound(GArtW)
                If Bereich.Cells(k + 1, 2) = GArtW(l) Then
                  Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                  x = x + 1
                End If
              Next l
          ElseIf j = 0 And Kuerzel(i) = "G " And GZweite = True Then
              For l = 0 To UBound(GArtB)
                If Bereich.Cells(k + 1, 2) = GArtB(l) Then
                  Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                  x = x + 1
                End If
              Next l
          ElseIf j = 0 Then
                Ruck(x, 0) = Bereich.Cells(k + 1, 1)
                x = x + 1
          End If
        End If
      Next k
    Next j
    If Kuerzel(i) = "G " Then GZweite = True
    If Kuerzel(i) = "W " Then WZweite = True
  Next i
  SortiereBauteile = Ruck
  Exit Function
Hell:
  MsgBox ("i = " & i & " j = " & j & " k = " & k & " l = " & l)
End Function
Function SonderzeicheEntfernen(Inhalt As String) 'inkl. boolean
  Dim i%, InhaltNeu As String, Zeichen
  InhaltNeu = ""
  If Inhalt = "ja" Then SonderzeicheEntfernen = "true": Exit Function
  If Inhalt = "nein" Then SonderzeicheEntfernen = "false": Exit Function
  For i = 1 To Len(Inhalt)
    Zeichen = Mid(Inhalt, i, 1)
    Select Case Asc(Zeichen)
      Case 1 To 31: 'kein Zeichen
      Case 32: InhaltNeu = InhaltNeu & " " 'Leerzeichen
      Case 33 To 43, 45, 46: InhaltNeu = InhaltNeu & "&#" & Asc(Zeichen) & ";" 'Sonderzeichen
      Case 44: InhaltNeu = InhaltNeu & ","
      Case 48 To 57: InhaltNeu = InhaltNeu & Zeichen 'Zahlen
      Case 58 To 59, 61, 63, 64: InhaltNeu = InhaltNeu & "&#" & Asc(Zeichen) & ";" 'Sonderzeichen
      Case 65 To 90: InhaltNeu = InhaltNeu & Zeichen 'Gro|fffd|buchstaben
      Case 91 To 94, 96: InhaltNeu = InhaltNeu & "&#" & Asc(Zeichen) & ";" 'Sonderzeichen
      Case 97 To 122: InhaltNeu = InhaltNeu & Zeichen 'Kleinbuchstaben
      Case 123 To 255: InhaltNeu = InhaltNeu & "&#" & Asc(Zeichen) & ";" 'Sonderzeichen
      Case 60, 62, 47, 95: InhaltNeu = InhaltNeu & Zeichen '< > / _'
  End Select
  Next i
  SonderzeicheEntfernen = InhaltNeu
End Function
Function SonderzeichenXML(ByVal strText As String, boolUm As Boolean, boolNDZ As Boolean, boolWeg As Boolean)
  'boolUm = UmlauteWeg => NUR eigene
  'boolNDZ = nicht druckbare Zeichen weg => NICHT eigene 'nicht-druckbare Zeichen raus' brauchen wir nicht da Ausweis andere Fkt benutzt
  Dim Mit, Ohne, i%
  If boolNDZ Then strText = Application.WorksheetFunction.Clean(strText)
  If boolUm = True Then '& muss als erstes, sonst wird das Steuerungs-& auch ersetzt
    Mit = Array("&", "<", ">", """", "'", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|")
    Ohne = Array("&#38;", "&#60;", "&#62;", "&#34;", "&#39;", "&#228;", "&#246;", "&#252;", "&#196;", "&#214;", "&#220;", "&#223;", "&#176;", "&#178;")
  Else
    Mit = Array("&", "<", ">", """", "'")
    Ohne = Array("&#38;", "&#60;", "&#62;", "&#34;", "&#39;")
  End If
  For i = 0 To UBound(Mit)
    If boolWeg Then
      If InStr(strText, Mit(i)) > 0 Then
        strText = Application.WorksheetFunction.Substitute(strText, Mit(i), Ohne(i))
      End If
    Else
      If InStr(strText, Ohne(i)) > 0 Then
        strText = Application.WorksheetFunction.Substitute(strText, Ohne(i), Mit(i))
      End If
    End If
  Next i
  SonderzeichenXML = strText
End Function
'Function UmlauteWeg(ByVal strText As String, boolWeg As Boolean)
'  Dim MitUm, OhneUm, i%
'  'aufpassen: "sss" damit "ss" in geschosse drinbleibt, Probleme auch mit R|fffd|ckweg "Mauer", wird "Ma|fffd|r"
'  MitUm = Array("|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "m|fffd|", "<", ">")
'  'OhneUm = Array("ae", "oe", "ue", "Ae", "Oe", "Ue", "sss", "GRAD", "m2", "KLEINER", "GROESSER")
'  OhneUm = MitUm
'  For i = 0 To UBound(OhneUm)
'    OhneUm(i) = "1SZ1" & Asc(MitUm(i)) & "2SZ2"
'  Next i
'  For i = 0 To UBound(MitUm)
'    If boolWeg Then
'      'strText = Replace(strText, MitUm(i), OhneUm(i), 1, -1, vbTextCompare) 'nicht casesensitiv
'      strText = Application.WorksheetFunction.Substitute(strText, MitUm(i), OhneUm(i))
'    Else
'      'strText = Replace(strText, OhneUm(i), MitUm(i), 1, -1, vbTextCompare)
'      strText = Application.WorksheetFunction.Substitute(strText, OhneUm(i), MitUm(i))
'    End If
'  Next i
'  UmlauteWeg = strText
'End Function
Sub Kommentare()
  Dim i%, Bereich As Range, KommentarSpalteOffset%
  On Error Resume Next
  Set Bereich = ThisWorkbook.ActiveSheet.Range("A3")
  KommentarSpalteOffset = 12
  For i = 0 To Bereich.CurrentRegion.Rows.Count
    Bereich.Offset(i, 0).Comment.Delete
    If Bereich.Offset(i, KommentarSpalteOffset) <> "" Then
      Bereich.Offset(i, 0).AddComment
      Bereich.Offset(i, 0).Comment.Text Text:=Bereich.Offset(i, KommentarSpalteOffset).Text
      Bereich.Offset(i, 0).Comment.Shape.Height = Len(Bereich.Offset(i, KommentarSpalteOffset).Text) / 2
      Bereich.Offset(i, 0).Comment.Shape.Width = 200
    End If
  Next i
  Beep
End Sub
'Function PlausibilitaetBereich(Bereich As Range)
'  Dim Msg As String, i%
'  Msg = "Plausibilit|fffd|tspr|fffd|fung: ok"
'  For i = 1 To Bereich.Rows.Count
'    If Bereich.Cells(i, Bereich.Columns.Count).Text <> "ok" And Bereich.Cells(i, Bereich.Columns.Count).Text <> "" Then
'      PlausibilitaetBereich = "Fehler in Zeile """ & Bereich.Cells(i, 1).Offset(0, -1).Text & """"
'      Exit Function
'    End If
'  Next i
'  PlausibilitaetBereich = Msg
'End Function
Function Plausibilitaet(Exp As String, RegExp As String)
  Dim Msg As String
  Msg = "ok"
  Select Case RegExp
    Case ".{1,60}": Msg = ZeichenMinMax(Exp, 1, 60) '. entspricht beliebiges Zeichen au|fffd|er \n (Zeilenende)
    Case ".{0,40}": Msg = ZeichenMinMax(Exp, 0, 40) 'WAS IST MIT chr(13)????
    Case ".{0,12}": Msg = ZeichenMinMax(Exp, 0, 12)
    Case ".{5,60}": Msg = ZeichenMinMax(Exp, 5, 60)
    Case ".{1,40}": Msg = ZeichenMinMax(Exp, 1, 40)
    Case ".{2,100}": Msg = ZeichenMinMax(Exp, 2, 200)
    Case ".{0,30}": Msg = ZeichenMinMax(Exp, 0, 30)
    Case ".{5,200}": Msg = ZeichenMinMax(Exp, 5, 200)
    Case "\d{2,5}": Msg = ZahlenMinMax(Exp, 2, 5) '\d entspricht Zahl [0-9]
    Case "\d{1,7}": Msg = ZahlenMinMax(Exp, 1, 7)
    Case "\d{1,6}": Msg = ZahlenMinMax(Exp, 1, 6)
    Case "\d{1,3}": Msg = ZahlenMinMax(Exp, 1, 3)
    Case "\d{0,7}": Msg = ZahlenMinMax(Exp, 0, 7)
    Case "\d{0,2}": Msg = ZahlenMinMax(Exp, 0, 2)
    Case "\d{1,4}": Msg = ZahlenMinMax(Exp, 1, 4)
    Case "\d{1,5}": Msg = ZahlenMinMax(Exp, 1, 5)
    Case "\d{4}": Msg = ZahlenFest(Exp, 4) 'Ganzzahl fest
    Case "()|(\d{5})": Msg = ZahlenNixOderFest(Exp, 5) 'PLZ
    Case "\d{3}XX": Msg = ZahlenFestXX(Exp, 5) 'PLZxx
    Case "\d{2}\.\d{2}\.20\d{2}": Msg = ZahlenDatum(Exp) 'Datum
    Case "\-?\d{0,4}": Msg = ZahlenMinMaxNeg(Exp, 0, 4)
    Case "\d,\d{2}": Msg = ZahlenFestKomma(Exp, "\d,\d{2}") 'mit Komma
    Case "\d,\d{3}": Msg = ZahlenFestKomma(Exp, "\d,\d{3}")
    Case "0,\d{2}": Msg = ZahlenFestKomma(Exp, "0,\d{2}")
    Case "\d,\d{1,2}": Msg = ZahlenFestKomma(Exp, "\d,\d{1,2}")
    Case "\d,\d\d": Msg = ZahlenFestKomma(Exp, "\d,\d\d")
    Case "\d{1,3},\d": Msg = ZahlenFestKomma(Exp, "\d{1,3},\d")
    Case "\d{1,4},\d": Msg = ZahlenFestKomma(Exp, "\d{1,4},\d")
    Case "()|(\d{1,4},\d)": Msg = ZahlenFestKomma(Exp, "()|(\d{1,4},\d)")
    Case "()|(\d,\d\d)", "()|\d,\d\d": Msg = ZahlenFestKomma(Exp, "()|(\d,\d\d)") 'ohne Klammer m|fffd|sste Fehler sein
    Case "0,\d{2,3}": Msg = ZahlenFestKomma(Exp, "0,\d{2,3}")
    Case "[A-Z]{2}\-20\d{2}\-\d{9}": Msg = ZeichenRegistriernummer(Exp)
    Case "(A\+)|[A-H]": Msg = ZeichenEnergieklasse(Exp)
    Case "decimalFrac0Min0", "decimalFrac0Min0Max100", "decimalFrac0Min0Max99": Msg = ZahlenDecimal(Exp, RegExp)
    Case "boolean": If Exp <> "ja" And Exp <> "nein" Then Msg = "Angabe ""ja"" oder ""nein"""
'neu 2017
    Case ".{0,60}": Msg = ZeichenMinMax(Exp, 0, 60)
    Case ".{1,1024}": Msg = ZeichenMinMax(Exp, 1, 1024)
  End Select
'neu 2017, Indikator = "#"
  If Left(RegExp, 1) = "#" Then
    Msg = Zeichen2017(Exp, RegExp)
  End If
  Plausibilitaet = Msg
End Function
Function Zeichen2017(Exp As String, RegExp As String)
  Dim Msg As String, Base As String, FractionDigits, TotalDigits, Min, Max, SplitArray
  Msg = "ok"
  SplitArray = Split(RegExp, "#")
  Base = SplitArray(1): FractionDigits = SplitArray(2): TotalDigits = SplitArray(3): Min = SplitArray(4): Max = SplitArray(5)
  If Base = "int" Then
    If isINT(Exp) = False Then
      Msg = "Eingabe Zahl ohne Nachkommastellen"
    Else
      Msg = ZahlMinMax(Exp, Min, Max)
    End If
  End If
  If Base = "date" Then
    If IsDate(Exp) = False Then
      Msg = "Eingabe Datum Format YYYY-MM-DD"
    ElseIf Min <> "x" And Max <> "x" Then
      Msg = DatumMinMax(Exp, Min, Max)
    End If
  End If
  If Base = "decimal" Then
    If IsNumeric(Exp) = False Then
      Msg = "Eingabe Zahl (ggf. mit Nachkommastellen)"
    Else
      Msg = ZahlMinMaxDigits(Exp, Min, Max, FractionDigits, TotalDigits)
    End If
  
  End If
  Zeichen2017 = Msg
End Function
Public Function isINT(Target As Variant) As Boolean
  isINT = IsNumeric(Target)
  If isINT Then isINT = InStr(Target, ",") = 0
End Function
Function ZahlMinMaxDigits(Exp As String, Min, Max, FractionDigits, TotalDigits)
  Dim Msg As String
  Msg = "ok"
  Msg = ZahlMinMax(Exp, Min, Max)
  If Msg = "ok" And CInt(Len(Right(Exp, Len(Exp) - InStr(Exp, ",")))) > CInt(FractionDigits) Then Msg = "max. Anzahl Nachkommastellen = " & FractionDigits
  If Msg = "ok" And Len(Exp) - 1 > CInt(TotalDigits) Then Msg = "max. Anzahl Zeichen = " & TotalDigits 'wird nicht erreicht, wenn z.B. max = 100
  ZahlMinMaxDigits = Msg 'f|fffd|r TotalDigits ohne Komma, d.h. -1
End Function
Function ZahlMinMax(Exp As String, Min, Max)
  Dim Msg As String
  Msg = "ok"
  If CDbl(Exp) < CDbl(Min) Then Msg = "Min = " & Min
  If CDbl(Exp) > CDbl(Max) Then Msg = "Max = " & Max
  ZahlMinMax = Msg
End Function
Function DatumMinMax(Exp As String, Min, Max)
  Dim Msg As String
  Msg = "ok"
  If DateValue(Exp) < DateValue(Min) Then Msg = "Min = " & Min
  If DateValue(Exp) > DateValue(Max) Then Msg = "Max = " & Max
  DatumMinMax = Msg
End Function
Function ZeichenMinMax(Exp As String, Min As Long, Max As Long)
  Dim Msg As String '".{Min,Max}"
  Msg = "ok"
  If Len(Exp) < Min Then Msg = "mind. " & Min & " Zeichen"
  If Len(Exp) > Max Then Msg = "max. " & Max & " Zeichen"
  ZeichenMinMax = Msg
End Function
Function ZahlenMinMax(Exp As String, Min As Long, Max As Long)
  Dim Msg As String, i% '"\d{Min,Max}"
  Msg = "ok"
  If Len(Exp) < Min Then Msg = "mind. " & Min & " Zahlen"
  If Len(Exp) > Max Then Msg = "max. " & Max & " Zahlen"
  For i = 1 To Len(Exp)
    'If Asc(Mid(Exp, i, 1)) = 46 Then 'tats|fffd|chlich gilt , als Zahl??????, NEIN
    '  Msg = "Dezimaltrenner , statt ."
    If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then 'And Asc(Mid(Exp, i, 1)) <> 44
      Msg = "nur ganze Zahlen [0-9]" ' oder ,"
    End If
  Next i
  ZahlenMinMax = Msg
End Function
Function ZahlenNixOderFest(Exp As String, Fest As Long)
  Dim Msg As String, i% '"()|(\d{Fest})"
  Msg = "ok"
  If Len(Exp) <> 0 And Len(Exp) <> Fest Then Msg = "Zahl " & Fest & "-stellig"
  For i = 1 To Len(Exp)
    If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then
      Msg = "nur Zahlen [0-9]"
    End If
  Next i
  ZahlenNixOderFest = Msg
End Function
Function ZahlenFestXX(Exp As String, Fest As Long)
  Dim Msg As String, i% '"\d{3}XX"
  Msg = "ok"
  If Len(Exp) <> Fest Then Msg = "PLZ 5-stellig"
  For i = 1 To Len(Exp)
    If i < 4 And ((Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57)) Then
      Msg = "die ersten 3 Stellen nur Zahlen [0-9]"
    ElseIf i >= 4 And Mid(Exp, i, 1) <> "X" Then
      Msg = "die letzten zwei Zahlen durch ""X"" ersetzen"
    End If
  Next i
  ZahlenFestXX = Msg
End Function
Function ZahlenDatum(Exp As String)
  Dim Msg As String, i% '"\d{2}\.\d{2}\.20\d{2}"
  Msg = "ok"
  If Len(Exp) = 0 Then ZahlenDatum = "Angabe fehlt oder fehlerhaft": Exit Function
  If Len(Exp) < 10 Then ZahlenDatum = "Format Datum: xx.xx.20xx": Exit Function
  For i = 1 To Len(Exp)
    Select Case i
      Case 1, 2, 4, 5, 9, 10: If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then Msg = "Format Datum: xx.xx.20xx"
      Case 3, 6: If Mid(Exp, i, 1) <> "." Then Msg = "Format Datum: xx.xx.20xx"
      Case 7: If Mid(Exp, i, 1) <> "2" Then Msg = "Format Datum: xx.xx.20xx"
      Case 8: If Mid(Exp, i, 1) <> "0" Then Msg = "Format Datum: xx.xx.20xx"
    End Select
  Next i
  ZahlenDatum = Msg
End Function
Function ZahlenMinMaxNeg(Exp As String, Min As Long, Max As Long)
  Dim Msg As String, i% '"\-?\d{Min,Max}"
  Msg = "ok"
  If Left(Exp, 1) = "-" Then Exp = Right(Exp, Len(Exp) - 1)
  If Len(Exp) < Min Then Msg = "mind. " & Min & " Zahlen"
  If Len(Exp) > Max Then Msg = "max. " & Max & " Zahlen"
  For i = 1 To Len(Exp)
    If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then
      Msg = "nur Zahlen [0-9]"
    End If
  Next i
  ZahlenMinMaxNeg = Msg
End Function
Function ZahlenFest(Exp As String, Fest As Long)
  Dim Msg As String, i% '"\d{Fest}"
  Msg = "ok"
  If Len(Exp) <> Fest Then Msg = "Zahl " & Fest & "-stellig"
  For i = 1 To Len(Exp)
    If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then
      Msg = "nur Zahlen [0-9]"
    End If
  Next i
  ZahlenFest = Msg
End Function
Function ZahlenFestKomma(Exp As String, Pattern As String)
  Dim Msg As String, i%
  Msg = "ok"
  If Len(Exp) > 0 Then
    If IsNumeric(Exp) = False Then ZahlenFestKomma = "keine Zahl": Exit Function
  End If
  For i = 1 To Len(Exp)
    If Asc(Mid(Exp, i, 1)) = 46 Then
      ZahlenFestKomma = "Dezimaltrenner , statt .": Exit Function
    ElseIf (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) And Asc(Mid(Exp, i, 1)) <> 44 Then
      ZahlenFestKomma = "nur Zahlen [0-9] oder ,": Exit Function
    End If
  Next i
  Select Case Pattern 'Alternativ ()
    Case "()|(\d{1,4},\d)", "()|(\d,\d\d)": 'alles gut
    Case Else: If Len(Exp) = 0 Then Msg = "Zahl angeben"
  End Select
  Select Case Pattern 'Mindestanzahl Zahlen
    Case "\d,\d{2}", "\d,\d\d", "0,\d{2}": If Len(Exp) < 4 Then Msg = "2 Nachkommastellen"
    Case "\d,\d{3}": If Len(Exp) < 5 Then Msg = "3 Nachkommastellen"
    Case "\d,\d{1,2}": If Len(Exp) < 3 Then Msg = "1-2 Nachkommastellen"
    Case "0,\d{2,3}": If Len(Exp) < 4 Then Msg = "2-3 Nachkommastellen"
    Case "\d{1,3},\d", "\d{1,4},\d": If Len(Exp) < 3 Then Msg = "1 Nachkommastelle"
    Case "()|(\d{1,4},\d)": If Len(Exp) > 0 And Len(Exp) < 3 Then Msg = "1 Nachkommastelle"
    Case "()|(\d,\d\d)": If Len(Exp) > 0 And Len(Exp) < 4 Then Msg = "2 Nachkommastellen"
  End Select
  If Msg <> "ok" Then ZahlenFestKomma = Msg: Exit Function
  Select Case Pattern 'Stellen nach Komma
    Case "\d,\d{2}", "0,\d{2}", "\d,\d\d": If Mid(Exp, Len(Exp) - 2, 1) <> "," Then Msg = "2 Nachkommastellen"
    Case "\d,\d{3}": If Mid(Exp, Len(Exp) - 3, 1) <> "," Then Msg = "3 Nachkommastellen"
    Case "\d,\d{1,2}": If Mid(Exp, Len(Exp) - 1, 1) <> "," And Mid(Exp, Len(Exp) - 2, 1) <> "," Then Msg = "1-2 Nachkommastellen"
    Case "0,\d{2,3}": If Mid(Exp, Len(Exp) - 2, 1) <> "," And Mid(Exp, Len(Exp) - 3, 1) <> "," Then Msg = "2-3 Nachkommastellen"
    Case "\d{1,3},\d", "\d{1,4},\d": If Mid(Exp, Len(Exp) - 1, 1) <> "," Then Msg = "1 Nachkommastelle"
    Case "()|(\d{1,4},\d)"
      If Len(Exp) > 0 Then
        If Mid(Exp, Len(Exp) - 1, 1) <> "," Then: Msg = "1 Nachkommastelle"
      End If
    Case "()|(\d,\d\d)":
      If Len(Exp) > 0 Then
        If Mid(Exp, Len(Exp) - 2, 1) <> "," Then Msg = "2 Nachkommastellen"
      End If
  End Select
  Select Case Pattern 'Stellen vor Komma
    Case "0,\d{2}", "0,\d{2,3}": If Mid(Exp, 1, 1) <> 0 Then Msg = "Wert muss < 1 sein"
    Case "\d{1,3},\d": If Mid(Exp, 2, 1) <> "," And Mid(Exp, 3, 1) <> "," And Mid(Exp, 4, 1) <> "," Then Msg = "1-3 Stellen vor Komma"
    Case "\d{1,4},\d": If Mid(Exp, 2, 1) <> "," And Mid(Exp, 3, 1) <> "," And Mid(Exp, 4, 1) <> "," And Mid(Exp, 5, 1) <> "," Then Msg = "1-4 Stellen vor Komma"
    Case "()|(\d{1,4},\d)": If Len(Exp) > 0 And Mid(Exp, 2, 1) <> "," And Mid(Exp, 3, 1) <> "," And Mid(Exp, 4, 1) <> "," And Mid(Exp, 5, 1) <> "," Then Msg = "1-4 Stellen vor Komma"
    Case "()|(\d,\d\d)": If Len(Exp) > 0 And Mid(Exp, 2, 1) <> "," Then Msg = "1 Stelle vor Komma"
    Case Else: If Mid(Exp, 2, 1) <> "," Then Msg = "1 Stelle vor Komma"
  End Select
  ZahlenFestKomma = Msg
End Function
Function ZeichenRegistriernummer(Exp As String)
  Dim Msg As String, i% '"[A-Z]{2}\-20\d{2}\-\d{9}"
  Msg = "ok"
  If Len(Exp) = 0 Then ZeichenRegistriernummer = "Angabe fehlt oder fehlerhaft": Exit Function
  If Len(Exp) < 17 Then ZeichenRegistriernummer = "Anzahl Stellen < 17": Exit Function
  For i = 1 To Len(Exp)
    Select Case i
      Case 1, 2: If (Asc(Mid(Exp, i, 1)) < 65 Or Asc(Mid(Exp, i, 1)) > 90) Then Msg = "Format: XX-20YY-ZZZZZZZZZ (erste 2 Stellen Gro|fffd|buchstaben)"
      Case 3, 8: If Mid(Exp, i, 1) <> "-" Then Msg = "Format: XX-20YY-ZZZZZZZZZ (Stelle 3 und 8 = ""-"")"
      Case 4: If Mid(Exp, i, 1) <> "2" Then Msg = "Format: XX-20YY-ZZZZZZZZZ (Stelle 4 = ""2"")"
      Case 5: If Mid(Exp, i, 1) <> "0" Then Msg = "Format: XX-20YY-ZZZZZZZZZ (Stelle 5 = ""0"")"
      Case 6, 7, 9 To 17: If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then Msg = "Format: XX-20YY-ZZZZZZZZZ (Stelle " & i & " keine Zahl)"
    End Select
  Next i
  ZeichenRegistriernummer = Msg
End Function
Function ZeichenEnergieklasse(Exp As String)
  Dim Msg As String, i% '"(A\+)|[A-H]"
  Msg = "ok"
  If Len(Exp) = 0 Then ZeichenEnergieklasse = "Angabe fehlt oder fehlerhaft": Exit Function
  If Len(Exp) > 2 Or (Len(Exp) = 2 And Exp <> "A+") Or (Len(Exp) = 1 And Asc(Exp) < 65) Or (Len(Exp) = 1 And Asc(Exp) > 72) Then Msg = "Energieklassen: A+, A, B, C, D, E, F, G, H"
  ZeichenEnergieklasse = Msg
End Function
Function ZahlenDecimal(Exp As String, Pattern As String)
  Dim Msg As String, i% 'decimalFrac0Min0,decimalFrac0Min0Max100,decimalFrac0Min0Max99
  Msg = "ok"
  If Len(Exp) > 0 Then
    If IsNumeric(Exp) = False Then ZahlenDecimal = "keine Zahl": Exit Function
    For i = 1 To Len(Exp)
      If (Asc(Mid(Exp, i, 1)) < 48 Or Asc(Mid(Exp, i, 1)) > 57) Then
        ZahlenDecimal = "nur Zahlen [0-9]": Exit Function
      End If
    Next i
    If Pattern = "decimalFrac0Min0Max100" And Exp > 100 Then Msg = "max. 100"
    If Pattern = "decimalFrac0Min0Max99" And Exp > 99 Then Msg = "max. 99"
  End If
  ZahlenDecimal = Msg
End Function
Attribute VB_Name = "aInfos"
'Vor Release
'   - ini-Datei zur|fffd|ck, ersten Bereich beim Ausweis aufr|fffd|umen
'   - Validierung: qP = 40,52 <= 52,47
'   - Fu|fffd|zeile aktualisieren
'   - Makros Auf/Zu wieder privat
'   - Default-Klappen:
'       Gebaeude alle < 10, Monatsspalten
'       Referenz 6+7, keine Monate
'       Bauteile bis 6
'       Geometrie, Technisch, Graphisch alles
'       Tabellen nur freie Definition
'       Energieausweis alles, auch Hinweistexte
'   - neue XML mitschicken? Nein
'   -
'   -
'------------------------------
'Weiterentwicklung
'   - Sprungkn|fffd|pfe Tabellen
'   - Technik L|fffd|ftung Formelzeichen aufr|fffd|umen, z.B. wo schreibt man denn dann qL,G,WE hin?
'   - Bauteile, Darstellung Berechnung und Teilergebnisse wieder sichtbar machen
'   - neue Diagramme Blatt Tabellen
'   - Energieausweis, Knopf l|fffd|schen
'   -
'------------------------------
'Umstellung auf sandbox
'    Datei " C:\Program Files (x86)\EnEV2013\EnEV2013Console.ini" kopieren (Sicherungskopie anlegen)
'       nicht die Kopie sondern die Originaldatei im Text-Editor |fffd|ffnen
'       die folgende Zeile
'           " -Dde.dibt.energieausweis.webservice.url=https://energieausweis.dibt.de/published/WebServiceEnergieausweis/DibtEnergieAusweisService.asmx"
'    |fffd|ndern in
'           " -Dde.dibt.energieausweis.webservice.url=https://energieausweis.dibt.de/sandbox/WebServiceEnergieausweis/DibtEnergieAusweisService.asmx"
'    speichern und durch Datumskontrolle sicherstellen, dass die Datei auch gespeichert wurde, kann ggf. durch Sicherheitseinstellungen des Rechners blockiert sein.


Attribute VB_Name = "xmlExImport"
Option Explicit
Public fso As New FileSystemObject
Dim DIBtSchema2016Convert As Boolean
Sub XMLGebaeudeExport()
  Dim strFileName As String, intHandle As Integer, objSheet As Worksheet
  On Error GoTo Hell
  strFileName = Application.GetSaveAsFilename(filefilter:="XML files (*.xml), *.xml")
  If strFileName = "Falsch" Then Exit Sub
  If fso.FileExists(strFileName) Then
    If MsgBox("Datei bereits vorhanden. |fffd|berschreiben?", vbOKCancel) = vbCancel Then Exit Sub
  Else
    fso.CreateTextFile (strFileName)
  End If
  
  intHandle = FreeFile
  Open strFileName For Output As #intHandle 'Datei |fffd|ffnen
  Print #intHandle, "<?xml version=""1.0""  encoding=""UTF-8""?> " 'Header
  
  Print #intHandle, "<edge>"
  For Each objSheet In ThisWorkbook.Worksheets
    Call WriteTagSheet(intHandle, objSheet)
  Next objSheet
  Print #intHandle, "</edge>"
  Close #intHandle    'Datei schlie|fffd|en
  'Beep
  Exit Sub
Hell:
  Close #intHandle
      MsgBox "FehlerNr.: " & Err.Number & vbNewLine & vbNewLine _
      & "Beschreibung: " & Err.Description _
      , vbCritical, "Fehler"
End Sub
Private Sub WriteTagSheet(intHandle As Integer, objSheet)
  Dim RangeName, i%, j%
  RangeName = GetNameArray(objSheet.Name, "")
  If UBound(RangeName) < 0 Then Exit Sub
  
  Print #intHandle, "<" & objSheet.Name & ">"
  For i = 0 To UBound(RangeName)
    For j = 1 To objSheet.Range(RangeName(i)).Rows.Count
      Print #intHandle, WriteTag(objSheet.Name, RangeName(i), j)
    Next j
  Next i
  Print #intHandle, "</" & objSheet.Name & ">"
End Sub
Private Function WriteTag(strSheet As String, strTagName, j%) As String
  Dim objSheet As Worksheet, i%
  Set objSheet = ThisWorkbook.Worksheets(strSheet)
  WriteTag = "<" & strTagName & ">"
  WriteTag = WriteTag & SonderzeichenXML(objSheet.Range(strTagName).Cells(j), True, False, True)
  WriteTag = WriteTag & "</" & strTagName & ">"
End Function
Sub XMLGebaeudeImport()
  Dim strFileName As String, intHandle As Integer, strFileContent As String, objSheet As Worksheet
  Dim RangeName, i%, j%, lngStart As Long, temp1, temp2, stBerechnung%, FehlerStFehlt As Boolean
  Dim Version As Double, AltesSchemaConvert2017 As Boolean
  
  On Error GoTo Hell
  Application.Calculation = xlCalculationManual
  strFileName = Application.GetOpenFilename(filefilter:="XML files (*.xml), *.xml")
  If strFileName = "Falsch" Then Exit Sub
  
  intHandle = FreeFile
  Open strFileName For Input As #intHandle 'Datei |fffd|ffnen
  strFileContent = Input(LOF(intHandle), #intHandle)
  Close #intHandle    'Datei schlie|fffd|en
  
'Version feststellen: Unsicher, da Dateiname ge|fffd|ndert sein k|fffd|nnte
  temp1 = ReadTag(strFileContent, "aSoftwareherstellerProgrammVersion", 1)
  If InStr(temp1, "_V") > 0 Then
    temp1 = Mid(temp1, InStr(temp1, "_V") + 2, 4)
    If IsNumeric(temp1) = True Then Version = CDbl(Replace(temp1, ".", ",")) Else Version = 2.01
  Else
    Version = 2.01 'default erste Version der 2er-Reihe
  End If
  If Version < 2.08 Then DIBtSchema2016Convert = True Else DIBtSchema2016Convert = False
  
  Call BlattschutzHerstellen(False)
  FehlerStFehlt = False
  If InStr(strFileContent, "stBerechnung") > 0 Then
    stBerechnung = Mid(strFileContent, InStr(strFileContent, "stBerechnung") + 13, 1)
  Else
    'Fehlerbehandlung: Zwischenversion hat die Variablen nicht in xml geschrieben, dh. Annahmen
    stBerechnung = 1 '?
    ThisWorkbook.Sheets("Gebaeude").Range("stBerechnung") = stBerechnung
    ThisWorkbook.Sheets("Gebaeude").Range("stEnEV") = 2
    FehlerStFehlt = True
  End If
  If stBerechnung <> ThisWorkbook.Sheets("Gebaeude").Range("stBerechnung") Then
    ThisWorkbook.Sheets("Gebaeude").Range("stBerechnung") = stBerechnung
    Call Umschalter_BauteilBerechnung
  End If
  Application.Calculation = xlCalculationManual
  
  For Each objSheet In ThisWorkbook.Worksheets
    lngStart = 1
    If objSheet.Name = "Gebaeude" And stBerechnung = 1 Then
      'falls Verweis auf Geometrie dann NICHT laden
      RangeName = GetNameArray(objSheet.Name, "oB")
    Else
      RangeName = GetNameArray(objSheet.Name, "")
    End If
    For i = 0 To UBound(RangeName)
      For j = 1 To objSheet.Range(RangeName(i)).Rows.Count
        If RangeName(i) = "aSoftwareherstellerProgrammVersion" Then
          'nix tun, SP|fffd|TER Versionsverwaltung
        ElseIf RangeName(i) = "gHT_Art" Then
          temp1 = ReadTag(strFileContent, RangeName(i), lngStart)
          If InStr(temp1, "EFH") > 0 Then
            objSheet.Range(RangeName(i)).Cells(j).Value = Replace(temp1, "EFH", "Wohngeb|fffd|ude") 'Version 2.01 - 31.1.2016
          End If
        ElseIf RangeName(i) = "gG_Art" Or RangeName(i) = "fG_Art" Then
          temp1 = ReadTag(strFileContent, RangeName(i), lngStart): temp2 = ""
          If InStr(temp1, "Fu|fffd|boden auf Erdreich ohne Randd|fffd|mmung") > 0 Then temp2 = "Fu|fffd|boden auf Erdr. ohne Randd|fffd|mmung"
          If InStr(temp1, "Fu|fffd|boden auf Erdreich, waager. Randd|fffd|mmung 5 m") > 0 Then temp2 = "Fu|fffd|boden auf Erdr., waager. Randd|fffd|m. 5 m"
          If InStr(temp1, "Fu|fffd|boden auf Erdreich, senkr. Randd|fffd|mmung 2 m") > 0 Then temp2 = "Fu|fffd|boden auf Erdr., senkr. Randd|fffd|m. 2 m"
          If InStr(temp1, "Kellerdecke (unbeh. Keller mit Perimeterd|fffd|mmung)") > 0 Then temp2 = "Kellerdecke, unbeh. Keller mit Perimeterd|fffd|m."
          If InStr(temp1, "Kellerdecke (unbeh. Keller ohne Perimeterd|fffd|mmung)") > 0 Then temp2 = "Kellerdecke, unbeh. Keller ohne Perimeterd|fffd|m."
          If Len(temp2) > 0 Then
            objSheet.Range(RangeName(i)).Cells(j).Value = Replace(temp1, temp1, temp2) 'Version 2.04 - 21.4.2016
          Else
            objSheet.Range(RangeName(i)).Cells(j).Value = temp1
          End If
        ElseIf FehlerStFehlt And (RangeName(i) = "stBerechnung" Or RangeName(i) = "stEnEV") Then 'nix tun
        Else
          objSheet.Range(RangeName(i)).Cells(j).Value = ReadTag(strFileContent, RangeName(i), lngStart)
        End If
      Next j
    Next i
  Next objSheet
'2017
  If Version < 2.08 Then Call DIBtSchema2016NeueNamen(strFileContent)
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzHerstellen (True)
  'If stBerechnung = 1 Then Call Umschalter_BauteilBerechnung
  Beep
  Application.Calculation = xlCalculationAutomatic
  Exit Sub
Hell:
  Close #intHandle
  If ThisWorkbook.Sheets("Gebaeude").Range("stSchutz") = True Then BlattschutzHerstellen (True)
  Application.Calculation = xlCalculationAutomatic
      MsgBox "FehlerNr.: " & Err.Number & vbNewLine & vbNewLine _
      & "Beschreibung: " & Err.Description _
      , vbCritical, "Fehler"
End Sub
Private Function ReadTag(ByVal strFileContent As String, strTagName, ByRef lngStart As Long)
   Dim lngPos1 As Long, lngPos2 As Long
   lngPos1 = InStr(lngStart, strFileContent, "<" & strTagName & ">", vbBinaryCompare)
   If lngPos1 > 0 Then
      lngPos1 = lngPos1 + Len(strTagName) + 2
      lngPos2 = InStr(lngPos1, strFileContent, "</" & strTagName & ">", vbBinaryCompare)
      If lngPos2 > 0 Then ReadTag = Mid(strFileContent, lngPos1, lngPos2 - lngPos1)
      lngStart = lngPos2
   End If
   If IsNumeric(ReadTag) Then ReadTag = Replace(ReadTag, ",", ".", 1, -1, 1) Else ReadTag = SonderzeichenXML(ReadTag, True, False, False)
   'f|fffd|r den bl|fffd|den Prim|fffd|renergiefaktor 0,0 beim Energieausweis
   If ReadTag = "0.0" Then
      ReadTag = "0,0"
   End If
End Function
Private Function ReadTagSchemaConvert(ByVal strFileContent As String, strTagName, ByRef lngStart As Long)
  Dim Ruck
  Ruck = ReadTag(strFileContent, strTagName, lngStart)
  If DIBtSchema2016Convert Then Ruck = DIBtSchema2016EnumsAnpassen(strTagName, Ruck)
  ReadTagSchemaConvert = Ruck
End Function
Private Function DIBtSchema2016NeueNamen(strFileContent)
'2017 neue Namen
  ThisWorkbook.Sheets("Energieausweis").Range("aPufferspeicherNenninhalt") = ReadTag(strFileContent, "aPufferspeicherVolumen", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aHeizungsanlageinnerhalbHuelle") = ReadTag(strFileContent, "aHeizanlageinnerhalbHuelle", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwassererzeugerBaujahr1") = ReadTag(strFileContent, "aWarmwassererzeugerBaujahr1", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwassererzeugerBaujahr2") = ReadTag(strFileContent, "aWarmwassererzeugerBaujahr2", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwasserspeicherNenninhalt") = ReadTag(strFileContent, "aWarmwasserspeicherVolumen", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwasserverteilungZirkulation") = ReadTag(strFileContent, "aWarmwasserZirkulation", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aPrimaerenergiebedarfHoechstwertverschaerft") = ReadTag(strFileContent, "aPrimaerenergieanforderungswertverschaerft", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aspezifischerTransmissionswaermeverlustverschaerft") = ReadTag(strFileContent, "aspezifischerTransmissionsverlustverschaerft", 1)
'2017 neue Namen und neue Enums
  ThisWorkbook.Sheets("Energieausweis").Range("aHeizkreisauslegungstemperatur") = ReadTagSchemaConvert(strFileContent, "aHeizverteilungTemperatur", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwassererzeugerBauweise1") = ReadTagSchemaConvert(strFileContent, "aWarmwassererzeugerBauweise1", 1)
  ThisWorkbook.Sheets("Energieausweis").Range("aTrinkwarmwassererzeugerBauweise2") = ReadTagSchemaConvert(strFileContent, "aWarmwassererzeugerBauweise2", 1)
'2017 nur neue Enums
  Dim RangeNameNeueEnums, i%
  RangeNameNeueEnums = Array("aGebaeudetyp", "aWohngebaeudeAnbaugrad", "aWaermeerzeugerBauweise1", "aWaermeerzeugerBauweise2", "aEnergietraeger1", "aEnergietraeger2")
  For i = 0 To UBound(RangeNameNeueEnums)
    ThisWorkbook.Sheets("Energieausweis").Range(RangeNameNeueEnums(0)) = ReadTagSchemaConvert(strFileContent, RangeNameNeueEnums(0), 1)
  Next i
End Function
Private Function DIBtSchema2016EnumsAnpassen(RangeName, Cont)
  If RangeName = "aGebaeudetyp" Then
    If Cont = "freistehendes Einfamilienhaus" Then Cont = "Einfamilienhaus"
    If Cont = "einseitig angebautes Einfamilienhaus" Then Cont = "Einfamilienhaus"
    If Cont = "zweiseitig angebautes Einfamilienhaus" Then Cont = "Einfamilienhaus"
    If Cont = "freistehendes Zweifamilienhaus" Then Cont = "Zweifamilienhaus"
    If Cont = "einseitig angebautes Zweifamilienhaus" Then Cont = "Zweifamilienhaus"
    If Cont = "zweiseitig angebautes Zweifamilienhaus" Then Cont = "Zweifamilienhaus"
    If Cont = "Mehrfamilienhaus" Then Cont = "Mehrfamilienhaus"
    If Cont = "Wohnteil gemischt genutztes Geb|fffd|ude" Then Cont = "Wohnteil gemischt genutztes Geb|fffd|ude"
    If Cont = "sonstiges Wohngeb|fffd|ude" Then Cont = "Sonstiges"
  ElseIf RangeName = "aWohngebaeudeAnbaugrad" Then
    If Cont = "freistehend" Then Cont = "freistehend"
    If Cont = "einseitig angebaut" Then Cont = "einseitig angebaut"
    If Cont = "zweiseitig angebaut" Then Cont = "zweiseitig angebaut"
  ElseIf RangeName = "aWaermeerzeugerBauweise1" Or RangeName = "aWaermeerzeugerBauweise2" Then
    If Cont = "Brennwertkessel-verbessert-fossil" Then Cont = "Brennwertkessel-verbessert"
    If Cont = "Festbrennstoff-Niedertemperaturkessel-nachwachsend" Then Cont = "Biomasse-W|fffd|rmeerzeuger"
    If Cont = "Festbrennstoff-Brennwertkessel-nachwachsend" Then Cont = "Biomasse-W|fffd|rmeerzeuger"
    If Cont = "Nah-/Fernw|fffd|rme-|fffd|bergabestation" Then Cont = "Fern-/Nahw|fffd|rme"
    If Cont = "Lokales BHKW" Then Cont = "Dezentrale Kraft-W|fffd|rme-Kopplung"
    If Cont = "Elektro-W|fffd|rmepumpe-Grundwasser" Then Cont = "Elektrisch betriebene Wasser/Wasser-Heizungsw|fffd|rmepumpe"
    If Cont = "Elektro-W|fffd|rmepumpe-Erdreich" Then Cont = "Elektrisch betriebene Sole/Wasser-Heizungsw|fffd|rmepumpe"
    If Cont = "|fffd|l-Raumheizger|fffd|t" Then Cont = "|fffd|lbefeuerter Einzelofen"
    If Cont = "Elektronachtspeicherheizung" Then Cont = "Dezentrale Elektro-Speicherheizung"
    If Cont = "Solarthermische-Kollektoren" Then Cont = "Solare Heizungsunterst|fffd|tzung"
    If Cont = "Sonstiges" Then Cont = "Sonstiges"
  ElseIf RangeName = "aEnergietraeger1" Or RangeName = "aEnergietraeger2" Then
    If Cont = "Heiz|fffd|l" Then Cont = "Heiz|fffd|l EL"
    If Cont = "Heiz|fffd|l-Bio|fffd|l-Gemisch" Then Cont = "Heiz|fffd|l-Bio|fffd|l-Gemisch"
    If Cont = "Bio|fffd|l" Then Cont = "Bio|fffd|l"
    If Cont = "Erdgas" Then Cont = "Erdgas H"
    If Cont = "Erdgas-Biogas-Gemisch" Then Cont = "Erdgas-Biogas-Gemisch"
    If Cont = "Biogas" Then Cont = "Biogas"
    If Cont = "Fl|fffd|ssiggas" Then Cont = "Fl|fffd|ssiggas"
    If Cont = "Steinkohle" Then Cont = "Steinkohle"
    If Cont = "Braunkohle" Then Cont = "Braunkohle"
    If Cont = "St|fffd|ckholz" Then Cont = "Holz"
    If Cont = "Holzhackschnitzel" Then Cont = "Holz"
    If Cont = "Holzpellets" Then Cont = "Holz"
    If Cont = "Strom" Then Cont = "allgemeiner Strommix"
    If Cont = "Sonneneinstrahlung" Then Cont = "Solarenergie"
    If Cont = "Sonstiges" Then Cont = "Sonstiges"
  'ElseIf RangeName = "aHeizkreisauslegungstemperatur" Then
  'ElseIf RangeName = "aTrinkwarmwassererzeugerBauweise1" Or RangeName = "aTrinkwarmwassererzeugerBauweise2" Then
  ElseIf RangeName = "aHeizverteilungTemperatur" Then
    If Cont = "90/70" Then Cont = "90/70"
    If Cont = "70/55" Then Cont = "70/55"
    If Cont = "55/45" Then Cont = "55/45"
    If Cont = "35/25" Then Cont = "35/28"
    If Cont = "Luftheizung" Then Cont = "Warmluftheizung"
    If Cont = "nur Einzelraum-Heizger|fffd|te" Then Cont = "nur Einzelraum-Heizger|fffd|te"
  ElseIf RangeName = "aWarmwassererzeugerBauweise1" Or RangeName = "aWarmwassererzeugerBauweise2" Then
    If Cont = "|fffd|ber Heizanlage beheizter Speicher" Then Cont = "|fffd|ber Heizungsanlage beheizter Speicher"
    If Cont = "zentraler Elektrospeicher" Then Cont = "Elektro-Speicher"
    If Cont = "direkt Gas-beheizter Speicher" Then Cont = "Direkt beheizter Trinkwarmwasserspeicher (Gas)"
    If Cont = "dezentraler elektrischer Durchlauferhitzer" Then Cont = "Elektro-Durchlauferhitzer"
    If Cont = "solar unterst|fffd|tzte Warmwasserbereitung" Then Cont = "Solare Trinkwarmwasserbereitung"
    If Cont = "Sonstiges" Then Cont = "Sonstiges"
  End If
  DIBtSchema2016EnumsAnpassen = Cont
End Function

' InQuest injected base64 decoded content
' h	mz
' zxhz
' J'!z
' {-zYn
' '!zf

INQUEST-PP=macro
