Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
' v6.0 - 25072018 - 1621IST

Dim CalculationSetting As Integer
Dim ScreenUpdating As Boolean
Dim DisplayStatusBar  As Boolean
Dim EnableEvents  As Boolean

Private Sub Workbook_BeforeClose(Cancel As Boolean)
        On Error GoTo ErrorHandler
        Application.Calculation = xlCalculationAutomatic
        'Call LogEventTest
        ' Restore Client Settings
10      'Application.Calculation = CalculationSetting
20      'Application.ScreenUpdating = ScreenUpdating
30      'Application.DisplayStatusBar = DisplayStatusBar
40      'Application.EnableEvents = EnableEvents
            Exit Sub
ErrorHandler:
50          Call Module33.LogEvent(Err, "ThisWorkbook.Workbook_BeforeClose", Erl)
60          Call Module33.ErrorHandler
End Sub

Private Sub LogEventTest()
    On Error GoTo ErrorHandler
10    Dim t As Integer
20      t = 7 / 0
ErrorHandler:
50          Call Module33.LogEvent(Err, "ThisWorkbook.TestLog", Erl)
 End Sub
 
Private Sub Workbook_Open()
        On Error GoTo ErrorHandler
        
        ' Store Client Settings
70      CalculationSetting = Application.Calculation
80      ScreenUpdating = Application.ScreenUpdating
90      DisplayStatusBar = Application.DisplayStatusBar
100      EnableEvents = Application.EnableEvents
        
            'Sheet2.CommandButton1_Click
110    Application.Calculation = xlCalculationManual
111         Call Module31.FreezePane
        '    Sheet1.Visible = xlSheetHidden
        '    Sheet8.Visible = xlSheetHidden
120     If Sheet2.Cells(1, 30) = "1" Then
130         Call Module33.OptimizeCode_End_ExceptCalculation
                End
            End If
140     Call Module32.RunInitialMacros
            Exit Sub
ErrorHandler:
150         Call Module33.LogEvent(Err, "ThisWorkbook.Workbook_Open", Erl)
160         Call Module33.ErrorHandler
        End Sub
        
        Sub FillSupplyLOSCB()
            On Error GoTo ErrorHandler
            Dim startTime As Date
170     startTime = Now()

180         If ThisWorkbook.sheetExists("Sheet9") And Range("Sheet3!A3") > "" Then
         'Call FillComboFromSheet(Sheet9.CB_Supply_LOS, "listLOS1")
190          Call Module8.FillDropDownFromSheet(Sheet9, Sheet9.Shapes("dd_Supply_LOS"), "listLOS1", ThisWorkbook.Settings("SupplyLOS"))
        '    Dim val As String
        '    val = Sheet1.Cells(5, 1)
        '    If val > "" Then
        '        Sheet9.CB_Supply_LOS.Clear
        '        Sheet9.CB_Supply_LOS.List = Split(val, ",")
        '        Sheet9.CB_Supply_LOS.Text = Sheet9.CB_Supply_LOS.List(0)
        '    End If
        End If
200      Call Module33.LogTime("FillSupplyLOSCB", startTime, Now())
            Exit Sub
ErrorHandler:
210          Call Module33.LogEvent(Err, "ThisWorkbook.FillSupplyLOSCB", Erl)
220          Call Module33.ErrorHandler
        End Sub
        
        Sub FillOverviewLOSCB()
             On Error GoTo ErrorHandler
            Dim startTime As Date
230      startTime = Now()
240          If ThisWorkbook.sheetExists("Sheet4") And Range("Sheet3!A3") > "" Then
            
250      Call Module8.FillDropDownFromSheet(Sheet4, Sheet4.Shapes("dd_Overvw_LOS"), "listLOS1", ThisWorkbook.Settings("OverviewLOS"))
        'Call FillComboFromSheet(Sheet4.cb_Overvw_LOS, "listLOS1")
            
        '    Dim val As String
        '    val = Sheet4.cb_Overvw_LOS.value
        '    If val = "" Then
        '        Sheet4.cb_Overvw_LOS.ListFillRange = ""
        '        Sheet4.cb_Overvw_LOS.ListFillRange = "ListLOS"
        '        Sheet4.cb_Overvw_LOS.Text = Sheet4.cb_Overvw_LOS.List(0)
        '    End If
            
            Dim val2 As String
260          val2 = Sheet4.Cells(10, 1)
270          If val2 = "" Then
280              Call ThisWorkbook.FillOverviewStaticData
            End If
                
        '    Dim val As String
        '    val = Sheet8.Cells(51, 1)
        '    If val > "" Then
        '        Sheet4.cb_Overvw_LOS.Clear
        '        Sheet4.cb_Overvw_LOS.List = Split(val, ",")
        '        Sheet4.cb_Overvw_LOS.Text = Sheet4.cb_Overvw_LOS.List(0)
        '
        '        Dim val2 As String
        '        val2 = Sheet4.Cells(10, 1)
        '        If val2 = "" Then
        '            Call ThisWorkbook.FillOverviewStaticData
        '        End If
        '    End If
            End If
290      Call Module33.LogTime("FillOverviewLOSCB", startTime, Now())
            Exit Sub
ErrorHandler:
300          Call Module33.LogEvent(Err, "ThisWorkbook.FillOverviewLOSCB", Erl)
310          Call Module33.ErrorHandler
        End Sub
        
        Sub FillParityLOSCB()
            On Error GoTo ErrorHandler
            Dim startTime As Date
320      startTime = Now()
            
330      If ThisWorkbook.sheetExists("Sheet12") And Range("Sheet3!A3") > "" Then
            'Call FillComboFromSheet(Sheet12.cb_Parity_LOS, "listLOS1")
        
340      Call Module8.FillDropDownFromSheet(Sheet12, Sheet12.Shapes("dd_Parity_LOS"), "listLOS1", ThisWorkbook.Settings("ParityLOS"))
                
        '        Dim val As String
        '        val = Sheet19.Cells(5, 1)
        '        If val > "" Then
        '            Sheet12.cb_Parity_LOS.Clear
        '            Sheet12.cb_Parity_LOS.List = Split(val, ",")
        '            Sheet12.cb_Parity_LOS.Text = Sheet12.cb_Parity_LOS.List(0)
        '        End If
            End If
            
350      Call Module33.LogTime("FillParityLOSCB", startTime, Now())
            Exit Sub
ErrorHandler:
360          Call Module33.LogEvent(Err, "ThisWorkbook.FillParityLOSCB", Erl)
370          Call Module33.ErrorHandler
        End Sub
        
        Sub FillOverviewStaticData()
            On Error GoTo ErrorHandler
            Dim startTime As Date
380      startTime = Now()
        
            Dim comps As Integer
            Dim los As Integer
            Dim days As Integer
            
390      comps = IIf(Sheet8.Cells(53, 1) > "", Sheet8.Cells(53, 1), 0)
        'los = IIf(Sheet4.cb_Overvw_LOS.value > "", Sheet4.cb_Overvw_LOS.value, 0)
400      days = IIf(Sheet8.Cells(50, 1) > "", Sheet8.Cells(50, 1), 0)
            
410      If comps > 0 And days > 0 Then
             Dim r As Range
             
             ' Copying Column Headings
420       Set r = Sheet8.Cells(61, 1)
             
430       Sheet8.Visible = True
440       Sheet8.Activate
450       Sheet8.Select
460       r.Resize(, (r.Columns.Count + days + 1)).Select
             
470       Application.CutCopyMode = False
            
480       Selection.Copy
490       Sheet8.Visible = False
             
500       Sheet4.Select
             
510       With Range("A10")
520          .PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                    :=False, Transpose:=False
530              .PasteSpecial xlPasteFormats
540                      .PasteSpecial xlPasteColumnWidths
550                      .PasteSpecial xlPasteComments
                 End With
                 
560       Sheet4.Range("A8").Select
             
             ' Copying Row Headings
570       Set r = Sheet8.Cells(62, 1)
             
580       Sheet8.Visible = True
590       Sheet8.Activate
600       Sheet8.Select
610       r.Resize(r.Rows.Count + comps * 3, (r.Columns.Count + 1)).Select
             
620       Application.CutCopyMode = False
            
630       Selection.Copy
640       Sheet8.Visible = False
             
650       Sheet4.Select
660       Sheet4.Range("A11").Select
670       Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                 :=False, Transpose:=False
680           Selection.PasteSpecial xlPasteFormats
690           Selection.PasteSpecial xlPasteColumnWidths
700           Selection.PasteSpecial xlPasteComments
                 
710       Sheet4.Range("A10").Select
             
             
720       Application.CutCopyMode = False
            
            End If
            
730      Call Module33.LogTime("FillOverviewStaticData", startTime, Now())
            Exit Sub
ErrorHandler:
740          Call Module33.LogEvent(Err, "ThisWorkbook.FillOverviewStaticData", Erl)
750          Call Module33.ErrorHandler
        End Sub
        
        Function sheetExists(sheetToFind As String) As Boolean
760      sheetExists = False
770      For Each sheet In Worksheets
780          If sheetToFind = sheet.CodeName Then
790              sheetExists = True
                    Exit Function
                End If
800      Next sheet
        End Function
        
        
        Public Function Settings(key As String)
        On Error GoTo ErrorHandler
810  Select Case key
          Case "ParityLOS": Settings = "H"
830      Case "SupplyLOS": Settings = "I"
840      Case "OverviewLOS": Settings = "J"
850      Case "RDRestriction": Settings = "K"
860      Case "RDQualification": Settings = "L"
870      Case "RDPromotion": Settings = "M"
880      Case "RDLOS": Settings = "N"
890      Case "RDProduct": Settings = "O"
900      Case "RDInclusion": Settings = "P"
910      Case "LinkCell": Settings = 39
920      Case "FilledCell": Settings = 40
    End Select
            Exit Function
ErrorHandler:
930          Call Module33.LogEvent(Err, "ThisWorkbook.Settings", Erl)
940          Call Module33.ErrorHandler
End Function










INQUEST-PP=macro
