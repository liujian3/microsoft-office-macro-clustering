Attribute VB_Name = "AddEndConditionForm"
Attribute VB_Base = "0{184F631C-37B9-4385-ABB6-57AA5CED69ED}{9E55ABAD-F25C-48A4-8F7A-BB707ECD70C7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub UserForm_Initialize()
    Me.Caption = FORMCAPTION_ADD_ENDCONDITION
    Call SetEndConditionFormCaption(Me)
    
    Call SetRowNameComboBox
    Call SetColumnNumberComboBox
    Call SetConditionValueComboBox
    Call SetLogicalOperatorComboBox
    CancelButton.SetFocus
End Sub

Private Sub OKButton_Click()
    With ReadWizardForm.EndConditionListBox
        Dim addIndex As Integer
        addIndex = .ListCount
        .AddItem
        .Column(0, addIndex) = RowNameComboBox.VALUE
        .Column(1, addIndex) = ColumnNumberComboBox.VALUE
        .Column(2, addIndex) = ConditionValueComboBox.VALUE
        .Column(3, addIndex) = LogicalOperatorComboBox.VALUE
        .Column(4, addIndex) = RowNameComboBox.ListIndex
    End With
    
    If Not ReadWizardForm.DeleteButton.Enabled Then
        ReadWizardForm.DeleteButton.Enabled = True
    End If
    
    Unload Me
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

'[|fffd||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetRowNameComboBox()
    With RowNameComboBox
        .Column = ReadWizardForm.RowListBox.Column
        .ListIndex = 0
    End With
End Function

'[|fffd|s|fffd||50d||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetColumnNumberComboBox()
    With ColumnNumberComboBox
        .AddItem ""
        .AddItem VALUE_END_CELL_COLUMN_NUMBER_NONE
        .ListIndex = 1
    End With
End Function

'[|fffd||fffd||fffd||fffd||fffd|l]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetConditionValueComboBox()
    With ConditionValueComboBox
        .AddItem ""
        .AddItem VALUE_END_CELL_CONDITION_VALUE_NONE
        .ListIndex = 0
    End With
End Function

'[|fffd|_|fffd||fffd||fffd||fffd||fffd|Z|fffd|q]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetLogicalOperatorComboBox()
    With LogicalOperatorComboBox
        .AddItem VALUE_END_CELL_LOGICAL_OPERATOR_AND
        .AddItem VALUE_END_CELL_LOGICAL_OPERATOR_OR
        .ListIndex = 0
    End With
End Function

Attribute VB_Name = "EditEndConditionForm"
Attribute VB_Base = "0{5DD74001-F8D7-4DB5-B51E-CD1BE9628A7B}{9CBCAC8B-AFA0-400F-8C3D-4CF52A485983}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub UserForm_Initialize()
    Me.Caption = FORMCAPTION_EDIT_ENDCONDITION
    Call SetEndConditionFormCaption(Me)
    
    Dim editIndex As Long
    editIndex = ReadWizardForm.EndConditionListBox.ListIndex
    Call SetRowNameComboBox(editIndex)
    Call SetColumnNumberComboBox(editIndex)
    Call SetConditionValueComboBox(editIndex)
    Call SetLogicalOperatorComboBox(editIndex)
    CancelButton.SetFocus
End Sub

Private Sub OKButton_Click()
    With ReadWizardForm.EndConditionListBox
        Dim editIndex As Long
        editIndex = .ListIndex
        .Column(0, editIndex) = RowNameComboBox.VALUE
        .Column(1, editIndex) = ColumnNumberComboBox.VALUE
        .Column(2, editIndex) = ConditionValueComboBox.VALUE
        .Column(3, editIndex) = LogicalOperatorComboBox.VALUE
        .Column(4, editIndex) = RowNameComboBox.ListIndex
    End With
    
    Unload Me
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

'|fffd||fffd||fffd|x|fffd||fffd||fffd|E|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b7||fffd||fffd|
Private Function SetFormCaption()
    Me.Caption = FORMCAPTION_EDIT_ENDCONDITION
    RowNameLabel.Caption = LABELCAPTION_ROW_NAME
    ColumnNumberLabel.Caption = LABELCAPTION_COLUMN_NUMBER
    ConditionValueLabel.Caption = LABELCAPTION_CONDITION_VALUE
    LogicalOperatorLabel.Caption = LABELCAPTION_LOGICAL_OPERATOR
    OKButton.Caption = BUTTONCAPTION_OK
    CancelButton.Caption = BUTTONCAPTION_CANCEL
End Function

'[|fffd||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetRowNameComboBox(index As Long)
    Dim editValue As String
    editValue = ReadWizardForm.EndConditionListBox.Column(0, index)
    With RowNameComboBox
        .Column = ReadWizardForm.RowListBox.Column
        Dim i As Integer
        For i = 0 To .ListCount
            If editValue = .Column(0, i) Then
                .ListIndex = i
                Exit For
            End If
        Next i
    End With
End Function

'[|fffd|s|fffd||50d||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetColumnNumberComboBox(index As Long)
    Dim editValue As String
    editValue = ReadWizardForm.EndConditionListBox.Column(1, index)
    With ColumnNumberComboBox
        If editValue = VALUE_END_CELL_COLUMN_NUMBER_NONE Then
            .AddItem ""
            .AddItem VALUE_END_CELL_COLUMN_NUMBER_NONE
            .ListIndex = 1
        Else
            .AddItem editValue
            .AddItem VALUE_END_CELL_COLUMN_NUMBER_NONE
            .ListIndex = 0
        End If
    End With
End Function

'[|fffd||fffd||fffd||fffd||fffd|l]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetConditionValueComboBox(index As Long)
    Dim editValue As String
    editValue = ReadWizardForm.EndConditionListBox.Column(2, index)
    With ConditionValueComboBox
        If editValue = VALUE_END_CELL_CONDITION_VALUE_NONE Then
            .AddItem ""
            .AddItem VALUE_END_CELL_CONDITION_VALUE_NONE
            .ListIndex = 1
        Else
            .AddItem editValue
            .AddItem VALUE_END_CELL_CONDITION_VALUE_NONE
            .ListIndex = 0
        End If
    End With
End Function

'[|fffd|_|fffd||fffd||fffd||fffd||fffd|Z|fffd|q]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetLogicalOperatorComboBox(index As Long)
    With LogicalOperatorComboBox
        .AddItem VALUE_END_CELL_LOGICAL_OPERATOR_AND
        .AddItem VALUE_END_CELL_LOGICAL_OPERATOR_OR
        .VALUE = ReadWizardForm.EndConditionListBox.Column(3, index)
    End With
End Function


Attribute VB_Name = "EditReadRowListForm"
Attribute VB_Base = "0{94D0DCE4-4495-4C17-B3C9-5BB57DFC1C8A}{5FF551BB-8620-43A4-AD88-23C52CFD6D0A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub UserForm_Initialize()
    Call SetFormCaption
    Dim editIndex As Long
    editIndex = ReadWizardForm.RowListBox.ListIndex
    Call SetRowNameTextBox(editIndex)
    Call SetRowFormatComboBox(editIndex)
    CancelButton.SetFocus
End Sub

Private Sub OKButton_Click()
    With ReadWizardForm.RowListBox
        Dim editIndex As Long
        editIndex = .ListIndex
        .Column(0, editIndex) = RowNameTextBox.VALUE
        .Column(1, editIndex) = RowFormatComboBox.VALUE
    End With
    
    Unload Me
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

'|fffd||fffd||fffd|x|fffd||fffd||fffd|E|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b7||fffd||fffd|
Private Function SetFormCaption()
    Me.Caption = FORMCAPTION_EDIT_READ_ROWLIST
    RowNameLabel.Caption = LABELCAPTION_ROW_NAME
    RowFormatLabel.Caption = LABELCAPTION_DATA_TYPE
    OKButton.Caption = BUTTONCAPTION_OK
    CancelButton.Caption = BUTTONCAPTION_CANCEL
End Function

'[|fffd||fffd|]|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetRowNameTextBox(index As Long)
    RowNameTextBox.VALUE = ReadWizardForm.RowListBox.Column(0, index)
End Function

'[|fffd||fffd||fffd||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetRowFormatComboBox(index As Long)
    With RowFormatComboBox
        .AddItem VALUE_CELL_FORMAT_GENERAL
        .AddItem VALUE_CELL_FORMAT_STRING
        .AddItem VALUE_CELL_FORMAT_NUMERIC
        .AddItem VALUE_CELL_FORMAT_DATE
        .VALUE = ReadWizardForm.RowListBox.Column(1, index)
    End With
End Function


Attribute VB_Name = "EditWriteRowListForm"
Attribute VB_Base = "0{CB93D380-8C38-4473-80CD-83424D5C3A6C}{3D953F9F-79F5-4C49-8608-BA3193AE9040}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()
    Me.Caption = FORMCAPTION_EDIT_WRITE_ROWLIST
    Call SetWriteRowListFormCaption(Me)
    Dim editIndex As Long
    editIndex = WriteWizardForm.RowListBox.ListIndex
    Call SetRowNameTextBox(editIndex)
    Call SetFormatSettingComboBox(editIndex)
    Call SetDataTypeComboBox(editIndex)
    Call SetFormatComboBox(editIndex)
    CancelButton.SetFocus
End Sub

Private Sub OKButton_Click()
    With WriteWizardForm.RowListBox
        Dim editIndex As Long
        editIndex = .ListIndex
        .Column(0, editIndex) = RowNameTextBox.VALUE
        .Column(1, editIndex) = FormatSettingComboBox.VALUE
        .Column(2, editIndex) = DataTypeComboBox.VALUE
        .Column(3, editIndex) = FormatComboBox.VALUE
    End With
    
    Unload Me
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

'[|fffd||fffd|]|fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetRowNameTextBox(index As Long)
    RowNameTextBox.VALUE = WriteWizardForm.RowListBox.Column(0, index)
End Function

'[|fffd||fffd||fffd||fffd||fffd||752||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetFormatSettingComboBox(index As Long)
    With FormatSettingComboBox
        .AddItem VALUE_FORMAT_SETTING_TRUE
        .AddItem VALUE_FORMAT_SETTING_FALSE
        .AddItem VALUE_FORMAT_SETTING_START_ROW
        .VALUE = WriteWizardForm.RowListBox.Column(1, index)
    End With
End Function

'[|fffd|^]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetDataTypeComboBox(index As Long)
    With DataTypeComboBox
        .AddItem VALUE_CELL_FORMAT_GENERAL
        .AddItem VALUE_CELL_FORMAT_STRING
        .AddItem VALUE_CELL_FORMAT_NUMERIC
        .AddItem VALUE_CELL_FORMAT_DATE
        .VALUE = WriteWizardForm.RowListBox.Column(2, index)
    End With
End Function

'[|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetFormatComboBox(index As Long)
    Dim formatValue As Variant
    With FormatComboBox
        For Each formatValue In GetWriteFormatValues
            .AddItem formatValue
        Next
        .VALUE = WriteWizardForm.RowListBox.Column(3, index)
    End With
End Function
Attribute VB_Name = "ExcelWizardConst"
Option Explicit

Private userLanguageJa As Boolean

Public Const EXCEL_MENUBAR_NAME = "WorkSheet Menu Bar"
Public Const ADDIN_NAME_EXCELWIZARD = "Excel Wizard"

'|fffd||209||fffd||fffd||315||3d0||fffd||fffd||fffd|InitStringResource() |fffd||150||752||80b3||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd||182||fffd||fffd||192||8414||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7d1||5576||fffd||fffd||fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B
Public ADDINBUTTON_NAME_GET_SHEET_DATA As String
Public ADDINBUTTON_NAME_PUT_DATA As String

Public FORMCAPTION_READ_WIZARD As String
Public FORMCAPTION_WRITE_WIZARD As String
Public FORMCAPTION_ADD_ENDCONDITION As String
Public FORMCAPTION_EDIT_ENDCONDITION As String
Public FORMCAPTION_EDIT_READ_ROWLIST As String
Public FORMCAPTION_EDIT_WRITE_ROWLIST As String

Public LABELCAPTION_SHEETNAME As String
Public LABELCAPTION_READ_START_CELL_ADDRESS As String
Public LABELCAPTION_WRITE_START_CELL_ADDRESS As String
Public LABELCAPTION_ROW_LIST As String
Public LABELCAPTION_ROW_NAME As String
Public LABELCAPTION_DATA_TYPE As String
Public LABELCAPTION_END_CONDITION As String
Public LABELCAPTION_COLUMN_NUMBER As String
Public LABELCAPTION_CONDITION_VALUE As String
Public LABELCAPTION_LOGICAL_OPERATOR As String
Public LABELCAPTION_FORMAT_SETTING As String
Public LABELCAPTION_FORMAT As String

Public BUTTONCAPTION_SELECT As String
Public BUTTONCAPTION_GET_ROW_NAME As String
Public BUTTONCAPTION_ADD As String
Public BUTTONCAPTION_DELETE As String
Public BUTTONCAPTION_CLOSE As String
Public BUTTONCAPTION_COMPLETE As String
Public BUTTONCAPTION_OK As String
Public BUTTONCAPTION_CANCEL As String

Public MSG_SELECTED_MULTIROWS_FOR_ROWNAME As String
Public MSG_SELECTED_DIFFERENT_READRANGE_FOR_ROWNAME As String
Public MSG_SELECTED_DIFFERENT_WRITERANGE_FOR_ROWNAME As String
Public MSG_NOTSELECTED_DELETEITEM As String
Public MSG_SELECTED_ANOTHER_BOOK As String

Public PROMPT_SELECT_READ_RANGE_INPUTBOX As String
Public TITLE_SELECT_READ_RANGE_INPUTBOX As String
Public PROMPT_SELECT_WRITE_RANGE_INPUTBOX As String
Public TITLE_SELECT_WRITE_RANGE_INPUTBOX As String
Public PROMPT_SELECT_ROWNAME_INPUTBOX As String
Public TITLE_SELECT_ROWNAME_INPUTBOX As String

Public VALUE_END_CELL_COLUMN_NUMBER_NONE As String
Public VALUE_END_CELL_CONDITION_VALUE_NONE As String
Public VALUE_END_CELL_LOGICAL_OPERATOR_AND As String
Public VALUE_END_CELL_LOGICAL_OPERATOR_OR As String

Public VALUE_CELL_FORMAT_GENERAL As String
Public VALUE_CELL_FORMAT_STRING As String
Public VALUE_CELL_FORMAT_NUMERIC As String
Public VALUE_CELL_FORMAT_DATE As String

'com.appresso.ds.dp.modules.adapter.excel.WriteFormatMode |fffd||fffd|key|fffd||24d||fffd||fffd||d0b9||fffd||fffd||fffd||8414||fffd||fffd|
Public VALUE_FORMAT_SETTING_FALSE As String
Public VALUE_FORMAT_SETTING_TRUE As String
Public VALUE_FORMAT_SETTING_START_ROW As String

Function InitStringResource()
    Call SetUserLanguageJa
    
    If IsUserLanguageJa Then
        Call SetJaString
    Else
        Call SetEnString
    End If
End Function

Function SetUserLanguageJa()
    Dim paramDoc As DOMDocument60
    Set paramDoc = CreateObject("MSXML2.DOMDocument.6.0")
    paramDoc.async = False
    Call paramDoc.Load(ActiveWorkbook.Path & "/parameter.xml")

    Dim rootNode As IXMLDOMNode
    Set rootNode = paramDoc.SelectSingleNode("parameter")
    
    If rootNode.Attributes.Item(0).Text = "ja" Then
        userLanguageJa = True
    Else
        userLanguageJa = False
    End If
    
    Set rootNode = Nothing
    Set paramDoc = Nothing
End Function

Function IsUserLanguageJa()
    IsUserLanguageJa = userLanguageJa
End Function

Function SetJaString()
    ADDINBUTTON_NAME_GET_SHEET_DATA = "Excel|fffd||1c2||74e||fffd||fffd|E|fffd|B|fffd|U|fffd|[|fffd|h|fffd||30b|N|fffd||fffd|"
    ADDINBUTTON_NAME_PUT_DATA = "Excel|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|E|fffd|B|fffd|U|fffd|[|fffd|h|fffd||30b|N|fffd||fffd|"

    FORMCAPTION_READ_WIZARD = "Excel|fffd||1c2||74e||fffd||fffd|E|fffd|B|fffd|U|fffd|[|fffd|h"
    FORMCAPTION_WRITE_WIZARD = "Excel|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|E|fffd|B|fffd|U|fffd|[|fffd|h"
    FORMCAPTION_ADD_ENDCONDITION = "|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||312||1c9||fffd|"
    FORMCAPTION_EDIT_ENDCONDITION = "|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||315||48f|W"
    FORMCAPTION_EDIT_READ_ROWLIST = "|fffd||1c2||74e||fffd||fffd||fffd||315||48f|W"
    FORMCAPTION_EDIT_WRITE_ROWLIST = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||757||fffd||315||48f|W"

    LABELCAPTION_SHEETNAME = "|fffd|V|fffd|[|fffd|g|fffd||fffd|"
    LABELCAPTION_READ_START_CELL_ADDRESS = "|fffd||1c2||74e||fffd||fffd|J|fffd|n|fffd|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X"
    LABELCAPTION_WRITE_START_CELL_ADDRESS = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||74a|J|fffd|n|fffd|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X"
    LABELCAPTION_ROW_LIST = "|fffd||fffd||a5d7|"
    LABELCAPTION_ROW_NAME = "|fffd||fffd|"
    LABELCAPTION_DATA_TYPE = "|fffd|^"
    LABELCAPTION_END_CONDITION = "|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|"
    LABELCAPTION_COLUMN_NUMBER = "|fffd|s|fffd||50d||fffd|"
    LABELCAPTION_CONDITION_VALUE = "|fffd||fffd||fffd||fffd||fffd|l"
    LABELCAPTION_LOGICAL_OPERATOR = "|fffd|_|fffd||fffd||fffd||fffd||fffd|Z|fffd|q"
    LABELCAPTION_FORMAT_SETTING = "|fffd||fffd||fffd||fffd||fffd||752||fffd|"
    LABELCAPTION_FORMAT = "|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g"

    BUTTONCAPTION_SELECT = "|fffd|I|fffd||fffd|..."
    BUTTONCAPTION_GET_ROW_NAME = "|fffd||56f02||30e||64fe|"
    BUTTONCAPTION_ADD = "|fffd||1c9||fffd|"
    BUTTONCAPTION_DELETE = "|fffd||d3dc|"
    BUTTONCAPTION_CLOSE = "|fffd||fffd||fffd||fffd||fffd|"
    BUTTONCAPTION_COMPLETE = "|fffd||fffd||fffd||fffd|"
    BUTTONCAPTION_OK = "OK"
    BUTTONCAPTION_CANCEL = "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|"

    MSG_SELECTED_MULTIROWS_FOR_ROWNAME = "|fffd||56f02||24e|w|fffd||fffd||142||fffd||fffd||fffd||348||342||fffd|1|fffd|s|fffd||302||742||142||fffd||fffd|B"
    MSG_SELECTED_DIFFERENT_READRANGE_FOR_ROWNAME = "|fffd||56f02||24e|w|fffd||80b5||fffd||102||fffd||fffd||fffd||348||342||fffd||fffd||1c2||74e||fffd||fffd||348||342||151|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||348||342||188||642||202||fffd||702||fffd||fffd|B"
    MSG_SELECTED_DIFFERENT_WRITERANGE_FOR_ROWNAME = "|fffd||56f02||24e|w|fffd||80b5||fffd||102||fffd||fffd||fffd||348||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||754||348||342||151|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||348||342||188||642||202||fffd||702||fffd||fffd|B"
    MSG_NOTSELECTED_DELETEITEM = "|fffd||d3dc||fffd||fffd||fffd||9340||fffd||682||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    MSG_SELECTED_ANOTHER_BOOK = "Excel|fffd|E|fffd|B|fffd|U|fffd|[|fffd|h|fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||142||342||202||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"

    PROMPT_SELECT_READ_RANGE_INPUTBOX = "|fffd||1c2||74e||fffd||fffd||348||342||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    TITLE_SELECT_READ_RANGE_INPUTBOX = "|fffd||1c2||74e||fffd||fffd||348||342||311|I|fffd||fffd|"
    PROMPT_SELECT_WRITE_RANGE_INPUTBOX = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||754||348||342||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    TITLE_SELECT_WRITE_RANGE_INPUTBOX = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||754||348||342||311|I|fffd||fffd|"
    PROMPT_SELECT_ROWNAME_INPUTBOX = "|fffd||56f02||314||348||342||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    TITLE_SELECT_ROWNAME_INPUTBOX = "|fffd||56f02||30e||64fe|"

    VALUE_END_CELL_COLUMN_NUMBER_NONE = "(|fffd|w|fffd||80b5||fffd||202||fffd|)"
    VALUE_END_CELL_CONDITION_VALUE_NONE = "(|fffd|w|fffd||80b5||fffd||202||fffd|)"
    VALUE_END_CELL_LOGICAL_OPERATOR_AND = "AND"
    VALUE_END_CELL_LOGICAL_OPERATOR_OR = "OR"

    VALUE_CELL_FORMAT_GENERAL = "|fffd|W|fffd||fffd|"
    VALUE_CELL_FORMAT_STRING = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    VALUE_CELL_FORMAT_NUMERIC = "|fffd||fffd||fffd|l"
    VALUE_CELL_FORMAT_DATE = "|fffd||fffd||fffd|t"

'com.appresso.ds.dp.modules.adapter.excel.WriteFormatMode |fffd||fffd|key|fffd||24d||fffd||fffd||d0b9||fffd||fffd||fffd||8414||fffd||fffd|
    VALUE_FORMAT_SETTING_FALSE = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||750||fffd||30f||fffd||fffd||fffd||fffd||17617|p|fffd||fffd||fffd||fffd|"
    VALUE_FORMAT_SETTING_TRUE = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    VALUE_FORMAT_SETTING_START_ROW = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||74a|J|fffd|n|fffd|s|fffd||30f||fffd||fffd||fffd||fffd||17617|p|fffd||fffd||fffd||fffd|"
End Function

Function SetEnString()
    ADDINBUTTON_NAME_GET_SHEET_DATA = "Start Excel Read Wizard"
    ADDINBUTTON_NAME_PUT_DATA = "Start Excel Write Wizard"

    FORMCAPTION_READ_WIZARD = "Excel Read Wizard"
    FORMCAPTION_WRITE_WIZARD = "Excel Write Wizard"
    FORMCAPTION_ADD_ENDCONDITION = "Add reading end condition"
    FORMCAPTION_EDIT_ENDCONDITION = "Edit reading end condition"
    FORMCAPTION_EDIT_READ_ROWLIST = "Edit reading row"
    FORMCAPTION_EDIT_WRITE_ROWLIST = "Edit writing row"

    LABELCAPTION_SHEETNAME = "Sheet name"
    LABELCAPTION_READ_START_CELL_ADDRESS = "Reading starting cell"
    LABELCAPTION_WRITE_START_CELL_ADDRESS = "Writing starting cell"
    LABELCAPTION_ROW_LIST = "Column list"
    LABELCAPTION_ROW_NAME = "Column name"
    LABELCAPTION_DATA_TYPE = "Type"
    LABELCAPTION_END_CONDITION = "Reading end condition"
    LABELCAPTION_COLUMN_NUMBER = "Row number"
    LABELCAPTION_CONDITION_VALUE = "Condition value"
    LABELCAPTION_LOGICAL_OPERATOR = "And/Or"
    LABELCAPTION_FORMAT_SETTING = "Format settings"
    LABELCAPTION_FORMAT = "Format"

    BUTTONCAPTION_SELECT = "Select..."
    BUTTONCAPTION_GET_ROW_NAME = "Get column name"
    BUTTONCAPTION_ADD = "Add"
    BUTTONCAPTION_DELETE = "Delete"
    BUTTONCAPTION_CLOSE = "Cancel"
    BUTTONCAPTION_COMPLETE = "Finish"
    BUTTONCAPTION_OK = "OK"
    BUTTONCAPTION_CANCEL = "Cancel"

    MSG_SELECTED_MULTIROWS_FOR_ROWNAME = "Range that can be specified for column name is only one line. "
    MSG_SELECTED_DIFFERENT_READRANGE_FOR_ROWNAME = "Range specified for the column name is different from range specified for reading. "
    MSG_SELECTED_DIFFERENT_WRITERANGE_FOR_ROWNAME = "Range specified for the column name is different from range specified for writing. "
    MSG_NOTSELECTED_DELETEITEM = "Select item to delete. "
    MSG_SELECTED_ANOTHER_BOOK = "Book that is not opening from Excel Wizard is selected. "

    PROMPT_SELECT_READ_RANGE_INPUTBOX = "Select range of reading. "
    TITLE_SELECT_READ_RANGE_INPUTBOX = "Select range of reading "
    PROMPT_SELECT_WRITE_RANGE_INPUTBOX = "Select range of writing. "
    TITLE_SELECT_WRITE_RANGE_INPUTBOX = "Select range of writing "
    PROMPT_SELECT_ROWNAME_INPUTBOX = "Select range of column name. "
    TITLE_SELECT_ROWNAME_INPUTBOX = "Get column name"

    VALUE_END_CELL_COLUMN_NUMBER_NONE = "(Not specified)"
    VALUE_END_CELL_CONDITION_VALUE_NONE = "(Not specified)"
    VALUE_END_CELL_LOGICAL_OPERATOR_AND = "AND"
    VALUE_END_CELL_LOGICAL_OPERATOR_OR = "OR"

    VALUE_CELL_FORMAT_GENERAL = "General"
    VALUE_CELL_FORMAT_STRING = "String"
    VALUE_CELL_FORMAT_NUMERIC = "Number"
    VALUE_CELL_FORMAT_DATE = "Date"

    'com.appresso.ds.dp.modules.adapter.excel.WriteFormatMode |fffd||fffd|key|fffd||24d||fffd||fffd||d0b9||fffd||fffd||fffd||8414||fffd||fffd|
    VALUE_FORMAT_SETTING_FALSE = "Use format of the cell for writing"
    VALUE_FORMAT_SETTING_TRUE = "Specify format"
    VALUE_FORMAT_SETTING_START_ROW = "Use format of writing beginning row"
End Function

Function GetWriteFormatValues() As Variant
    If IsUserLanguageJa Then
        Dim formatValuesJa(10) As String
        formatValuesJa(0) = ""
        formatValuesJa(1) = "yyyy/m/dd"
        formatValuesJa(2) = "yyyy|fffd|Nm|fffd||fffd|d|fffd||fffd|"
        formatValuesJa(3) = "yyyy/MM/dd H:mm"
        formatValuesJa(4) = "H:mm"
        formatValuesJa(5) = "h|fffd||fffd|mm|fffd||fffd|ss|fffd|b"
        formatValuesJa(6) = "#,##0"
        formatValuesJa(7) = "#,##0.00"
        formatValuesJa(8) = "0%"
        formatValuesJa(9) = "0.00%"
        formatValuesJa(10) = "#.###"
        GetWriteFormatValues = formatValuesJa
    Else
        Dim formatValues(8) As String
        formatValues(0) = ""
        formatValues(1) = "M/dd/yy"
        formatValues(2) = "M/dd/yy H:mm"
        formatValues(3) = "H:mm"
        formatValues(4) = "#,##0"
        formatValues(5) = "#,##0.00"
        formatValues(6) = "0%"
        formatValues(7) = "0.00%"
        formatValues(8) = "#.###"
        GetWriteFormatValues = formatValues
    End If
End Function

Attribute VB_Name = "ExcelWizardModule"
Option Explicit

Sub ExcelWizardForGetSheetData_init()
    Dim menubar As CommandBar
    Dim popup As CommandBarPopup
    Dim button As CommandBarButton
    
    Call InitStringResource
    
    On Error Resume Next
    Set menubar = Application.CommandBars(EXCEL_MENUBAR_NAME)
    menubar.Controls(ADDIN_NAME_EXCELWIZARD).Delete
    Set popup = menubar.Controls.Add(msoControlPopup)
    popup.Caption = ADDIN_NAME_EXCELWIZARD
    
    IconSheet.Shapes("getIcon").Copy
    
    
    Set button = popup.Controls.Add(msoControlButton)
    With button
        .Caption = ADDINBUTTON_NAME_GET_SHEET_DATA
        .Style = msoButtonIconAndCaption
        .PasteFace
        .OnAction = "LaunchExcelWizardForGetSheetData"
    End With
    
    Set menubar = Nothing
    Set popup = Nothing
    Set button = Nothing

    Call LaunchExcelWizardForGetSheetData
End Sub

Sub ExcelWizardForPutData_init()
    Dim menubar As CommandBar
    Dim popup As CommandBarPopup
    Dim button As CommandBarButton
    
    Call InitStringResource
    
    On Error Resume Next
    Set menubar = Application.CommandBars(EXCEL_MENUBAR_NAME)
    menubar.Controls(ADDIN_NAME_EXCELWIZARD).Delete
    Set popup = menubar.Controls.Add(msoControlPopup)
    popup.Caption = ADDIN_NAME_EXCELWIZARD
    
    IconSheet.Shapes("putIcon").Copy
    
    Set button = popup.Controls.Add(msoControlButton)
    With button
        .Caption = ADDINBUTTON_NAME_PUT_DATA
        .Style = msoButtonIconAndCaption
        .PasteFace
        .OnAction = "LaunchExcelWizardForPutData"
    End With
    
    Set menubar = Nothing
    Set popup = Nothing
    Set button = Nothing

    Call LaunchExcelWizardForPutData
End Sub

Sub LaunchExcelWizardForGetSheetData()
    ReadWizardForm.Show vbModeless
End Sub

Sub LaunchExcelWizardForPutData()
    WriteWizardForm.Show vbModeless
End Sub

Attribute VB_Name = "ExcelWizardUtil"
Option Explicit

'[|fffd|V|fffd|[|fffd|g|fffd||fffd|]|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||252|l|fffd||fffd||752||80b7||fffd||fffd|
Function SetSheetNameComboBox(comboBox As comboBox)
    On Error Resume Next
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||250||752||fffd|
    With comboBox
        .Clear
        Dim sheet As Worksheet
        For Each sheet In Sheets
            .AddItem sheet.Name
        Next
        .ListIndex = ActiveSheet.index - 1
    End With
End Function

'|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||312||1c9||fffd|/|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
Function SetEndConditionFormCaption(form As UserForm)
    With form
        .RowNameLabel.Caption = LABELCAPTION_ROW_NAME
        .ColumnNumberLabel.Caption = LABELCAPTION_COLUMN_NUMBER
        .ConditionValueLabel.Caption = LABELCAPTION_CONDITION_VALUE
        .LogicalOperatorLabel.Caption = LABELCAPTION_LOGICAL_OPERATOR
        .OKButton.Caption = BUTTONCAPTION_OK
        .CancelButton.Caption = BUTTONCAPTION_CANCEL
    End With
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||757||fffd||a5d7||fffd||312||1c9||fffd|/|fffd||48f|W|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
Function SetWriteRowListFormCaption(form As UserForm)
    With form
        .RowNameLabel.Caption = LABELCAPTION_ROW_NAME
        .FormatSettingLabel.Caption = LABELCAPTION_FORMAT_SETTING
        .DataTypeLabel.Caption = LABELCAPTION_DATA_TYPE
        .FormatLabel.Caption = LABELCAPTION_FORMAT
        .OKButton.Caption = BUTTONCAPTION_OK
        .CancelButton.Caption = BUTTONCAPTION_CANCEL
    End With
End Function

'|fffd||348||351|I|fffd||fffd||fffd||303|C|fffd||fffd||fffd|v|fffd|b|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function ShowSelectRangeInputBox(selectRange As Range, prompt As String, title As String)
    On Error Resume Next
    Set selectRange = Application.InputBox(prompt, title, Type:=8)
End Function

'|fffd||348||351|I|fffd||fffd||fffd|C|fffd||fffd||fffd|v|fffd|b|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd|\|fffd||fffd||fffd||fffd||fffd||243|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||254||fffd||fffd|f|fffd||fffd||fffd||fffd||fffd||fffd|
Function ChangeActiveSheetAfterSelectRange(inputSheetIndex As Long, SheetNameComboBox As comboBox)
    If inputSheetIndex <> ActiveSheet.index Then
        Sheets(inputSheetIndex).Select
    End If
    If SheetNameComboBox.ListIndex <> inputSheetIndex - 1 Then
        SheetNameComboBox.ListIndex = inputSheetIndex - 1
    End If
End Function

'|fffd||56f03|C|fffd||fffd||fffd|v|fffd|b|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd|\|fffd||fffd||fffd||fffd||fffd||243|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347||fffd|A|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|V|fffd|[|fffd|g|fffd||588||693||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function ChangeActiveSheetAfterSelectRowName(inputSheetIndex As Long, SheetNameComboBox As comboBox)
    If SheetNameComboBox.ListIndex + 1 <> ActiveSheet.index Then
        Sheets(SheetNameComboBox.ListIndex + 1).Select
    End If
End Function


'|fffd|I|fffd||fffd||348||342||fffd||fffd||fffd|J|fffd|n|fffd||292|u|fffd|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||64fe|
Function GetStartCellAdress(selectRange As Range) As String
    GetStartCellAdress = ConvertColumnNumToColumnName(selectRange.Column) & selectRange.row
End Function

'|fffd|Z|fffd||fffd||fffd||253||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function GetCellValue(cell As Range) As String
    Dim cellValueType As String
    cellValueType = TypeName(cell.VALUE)
    GetCellValue = cell.Text
End Function

'|fffd|Z|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||193||fffd||fffd||352|l|fffd||30c|^|fffd||fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|]|fffd||14ed2||80b7||fffd||fffd|
Function GetTypeName(cell As Range) As String
    Dim cellFormat As String
    cellFormat = cell.NumberFormat
    Dim cellValueType As String
    cellValueType = TypeName(cell.VALUE)
    
    If cellValueType = "String" Or cellValueType = "Boolean" Or cellValueType = "Error" Then
        GetTypeName = VALUE_CELL_FORMAT_STRING
    ElseIf cellValueType = "Date" Then
        GetTypeName = VALUE_CELL_FORMAT_DATE
    ElseIf cellFormat = "General" Or IsTimeFormat(cell.NumberFormatLocal) Then
        GetTypeName = VALUE_CELL_FORMAT_GENERAL
    ElseIf IsNumeric(cell.VALUE) Then
        GetTypeName = VALUE_CELL_FORMAT_NUMERIC
    Else
        GetTypeName = VALUE_CELL_FORMAT_GENERAL
    End If
End Function

'|fffd||fffd||50d||fffd||fffd||fffd||56f02||255||3ca||fffd|(ex. 1|fffd||fffd|A, 2|fffd||fffd|B)
Private Function ConvertColumnNumToColumnName(colNum As Integer) As String
    Dim cellAddress As String
    'cellAddress|fffd||355|K|fffd||fffd||fffd|u$[|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]$1|fffd|v|fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||202||fffd|B
    cellAddress = Cells(1, colNum).address
    '|fffd||a576||fffd||fffd||fffd||682||355|K|fffd||fffd||fffd|u$|fffd|v|fffd||142||fffd||fffd||90bd||fffd||7c1|A|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd|B
    '|fffd||14c||fffd||313||55d8e||fffd||fffd||355|K|fffd||fffd||fffd|u$1|fffd|v|fffd||142||fffd||fffd||90bd||fffd||7c1|A|fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||341|u1|fffd|v|fffd||fffd||fffd|q|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a42||fffd|3|fffd||fffd||fffd||fffd||fffd|O|fffd||702||141|B
    ConvertColumnNumToColumnName = Mid(cellAddress, 2, InStr(cellAddress, "1") - 3)
End Function

'|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||312||fffd||fffd||241|uh|fffd|v|fffd|um|fffd|v|fffd|us|fffd|v|fffd||302||fffd||fffd||fffd||fffd||a0a9||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||38e||fffd||fffd||515|\|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||194||fffd||fffd||80b7||fffd||fffd|
Private Function IsTimeFormat(formatLocal As String) As Boolean
    IsTimeFormat = InStr(formatLocal, "h") > 0 Or InStr(formatLocal, "m") > 0 Or InStr(formatLocal, "s") > 0
End Function

Attribute VB_Name = "IconSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ReadWizardForm"
Attribute VB_Base = "0{BEC37F71-E872-4A13-9D35-37698787B110}{4ACB64C0-5B91-4B4D-8995-CE07D10CE87D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub UserForm_Initialize()
    Call SetFormCaption
    Call SetSheetNameComboBox(SheetNameComboBox)
    SelectButton.SetFocus
End Sub

'[|fffd|I|fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub SelectButton_Click()
    Me.Hide
    
    Dim readRange As Range
    
    Call ShowSelectRangeInputBox(readRange, PROMPT_SELECT_READ_RANGE_INPUTBOX, TITLE_SELECT_READ_RANGE_INPUTBOX)
    
    '[|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd| Nothing |fffd||fffd||fffd||752||80b3||fffd||fffd||90bd||fffd||7c1|A|fffd||209||fffd||fffd||30f||fffd||fffd||fffd||fffd||34d|s|fffd||fffd||202||fffd|
    If Not readRange Is Nothing Then
        
        Call ChangeActiveSheetAfterSelectRange(readRange.Parent.index, SheetNameComboBox)
        StartCellAdressTextBox.VALUE = GetStartCellAdress(readRange)
        Call SetRowList(readRange)
        Call SetEndCondition(readRange)
        
        GetRowNameButton.Enabled = True
        AddButton.Enabled = True
        DeleteButton.Enabled = True
        CompleteButton.Enabled = True
    End If
    
    '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|
    Set readRange = Nothing
    
    Me.Show vbModeless
End Sub

'[|fffd||fffd||a5d7|]|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd|
Private Sub RowListBox_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If RowListBox.ListIndex >= 0 Then
        EditReadRowListForm.Show vbModal
        Call UpdateEndConditionRowName
    End If
End Sub

'[|fffd||56f02||30e||64fe|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub GetRowNameButton_Click()
    Me.Hide
    
    Dim rowNameRange As Range
    
    Call ShowSelectRangeInputBox(rowNameRange, PROMPT_SELECT_ROWNAME_INPUTBOX, TITLE_SELECT_ROWNAME_INPUTBOX)
    
    '[|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd| Nothing |fffd||fffd||fffd||752||80b3||fffd||fffd||90bd||fffd||7c1|A|fffd||209||fffd||fffd||30f||fffd||fffd||fffd||fffd||34d|s|fffd||fffd||202||fffd|
    If Not rowNameRange Is Nothing Then
        Call ChangeActiveSheetAfterSelectRowName(rowNameRange.Parent.index, SheetNameComboBox)
        If Not rowNameRange.Rows.count = 1 Then
            MsgBox MSG_SELECTED_MULTIROWS_FOR_ROWNAME
        ElseIf Not rowNameRange.columns.count = RowListBox.ListCount Then
            MsgBox MSG_SELECTED_DIFFERENT_READRANGE_FOR_ROWNAME
        Else
            Call SetRowsName(rowNameRange)
        End If
    End If
    
    '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|
    Set rowNameRange = Nothing
    
    Me.Show vbModeless
End Sub

'[|fffd|V|fffd|[|fffd|g|fffd||fffd|]|fffd||3cd|X|fffd||fffd|
Private Sub SheetNameComboBox_Change()
    On Error Resume Next
    Sheets(SheetNameComboBox.VALUE).Select
End Sub

'[|fffd||1c9||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub AddButton_Click()
    AddEndConditionForm.Show vbModal
End Sub

'[|fffd||d3dc|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub DeleteButton_Click()
    If EndConditionListBox.ListIndex < 0 Then
        MsgBox MSG_NOTSELECTED_DELETEITEM
    Else
        EndConditionListBox.RemoveItem EndConditionListBox.ListIndex
        If EndConditionListBox.ListCount <= 0 Then
            DeleteButton.Enabled = False
            AddButton.SetFocus
        End If
    End If
End Sub

'[|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|]|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd|
Private Sub EndConditionListBox_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If EndConditionListBox.ListIndex >= 0 Then
        EditEndConditionForm.Show vbModal
    End If
End Sub

'[|fffd||82||fffd||fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub CloseButton_Click()
    Unload Me
End Sub

'[|fffd||fffd||fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub CompleteButton_Click()
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311||fffd||fffd||74a|m|fffd|F
    If Dir(ActiveWorkbook.Path & "/parameter.xml") = "" Then
        MsgBox MSG_SELECTED_ANOTHER_BOOK
        Unload Me
    Else
        'XML|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74e||fffd||fffd|
        Dim paramDoc As DOMDocument60
        Set paramDoc = CreateObject("MSXML2.DOMDocument.6.0")
        paramDoc.async = False
        Call paramDoc.Load(ActiveWorkbook.Path & "/parameter.xml")
        
        Dim rootNode As IXMLDOMNode
        Set rootNode = paramDoc.SelectSingleNode("parameter")
        
        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||752||fffd|
        Dim sheetNameElem As IXMLDOMElement
        Set sheetNameElem = paramDoc.createElement("sheetName")
        sheetNameElem.Text = SheetNameComboBox.VALUE
        Call rootNode.appendChild(sheetNameElem)
        Set sheetNameElem = Nothing
        
        '|fffd||1c2||74e||fffd||fffd|J|fffd|n|fffd|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||752||fffd|
        Dim startCellAddressElem As IXMLDOMElement
        Set startCellAddressElem = paramDoc.createElement("startCellAddress")
        startCellAddressElem.Text = StartCellAdressTextBox.VALUE
        Call rootNode.appendChild(startCellAddressElem)
        Set startCellAddressElem = Nothing
        
        '|fffd||fffd||a5d7||fffd||fffd||752||fffd|
        Dim rowElem As IXMLDOMElement
        Dim i As Integer
        For i = 0 To RowListBox.ListCount - 1
            Set rowElem = paramDoc.createElement("row")
            Call rowElem.setAttribute("name", RowListBox.Column(0, i))
            If RowListBox.Column(1, i) = VALUE_CELL_FORMAT_STRING Then
                Call rowElem.setAttribute("format", "string")
            ElseIf RowListBox.Column(1, i) = VALUE_CELL_FORMAT_NUMERIC Then
                Call rowElem.setAttribute("format", "numeric")
            ElseIf RowListBox.Column(1, i) = VALUE_CELL_FORMAT_DATE Then
                Call rowElem.setAttribute("format", "date")
            Else
                Call rowElem.setAttribute("format", "general")
            End If
            Call rootNode.appendChild(rowElem)
        Next i
        Set rowElem = Nothing
        
        '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
        Dim endCondElem As IXMLDOMElement
        Dim j As Integer
        For j = 0 To EndConditionListBox.ListCount - 1
            Set endCondElem = paramDoc.createElement("condition")
            Call endCondElem.setAttribute("rowName", EndConditionListBox.Column(0, j))
            If EndConditionListBox.Column(1, j) = VALUE_END_CELL_COLUMN_NUMBER_NONE Then
                Call endCondElem.setAttribute("columnNumber", "end.rownumber")
            Else
                Call endCondElem.setAttribute("columnNumber", EndConditionListBox.Column(1, j))
            End If
            If EndConditionListBox.Column(2, j) = VALUE_END_CELL_CONDITION_VALUE_NONE Then
                Call endCondElem.setAttribute("conditionValue", "end.condvalue")
            Else
                Call endCondElem.setAttribute("conditionValue", EndConditionListBox.Column(2, j))
            End If
            If EndConditionListBox.Column(3, j) = VALUE_END_CELL_LOGICAL_OPERATOR_AND Then
                Call endCondElem.setAttribute("logicalOperation", "key.and")
            Else
                Call endCondElem.setAttribute("logicalOperation", "key.or")
            End If
            Call endCondElem.setAttribute("rowNumber", EndConditionListBox.Column(4, j))
            Call rootNode.appendChild(endCondElem)
        Next j
        Set endCondElem = Nothing
        
        Set rootNode = Nothing
        
        '|fffd||752||fffd|l|fffd||fffd|XML|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||255||6d1||fffd|
        Call paramDoc.Save(ActiveWorkbook.Path & "/parameter.xml")
        Set paramDoc = Nothing
        
        Unload Me
        
        Application.Quit
    End If
End Sub

'|fffd||fffd||fffd|x|fffd||fffd||fffd|E|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b7||fffd||fffd|
Private Function SetFormCaption()
    Me.Caption = FORMCAPTION_READ_WIZARD
    SheetNameLabel.Caption = LABELCAPTION_SHEETNAME
    StartCellAdressLabel.Caption = LABELCAPTION_READ_START_CELL_ADDRESS
    RowListLabel.Caption = LABELCAPTION_ROW_LIST
    RowListNameLabel.Caption = LABELCAPTION_ROW_NAME
    RowListFormatLabel.Caption = LABELCAPTION_DATA_TYPE
    EndCellConditionLabel.Caption = LABELCAPTION_END_CONDITION
    EndCellRowNameLabel.Caption = LABELCAPTION_ROW_NAME
    EndCellColumnNumberLabel.Caption = LABELCAPTION_COLUMN_NUMBER
    EndCellConditionValueLabel.Caption = LABELCAPTION_CONDITION_VALUE
    EndCellLogicalOperatorLabel.Caption = LABELCAPTION_LOGICAL_OPERATOR
    
    SelectButton.Caption = BUTTONCAPTION_SELECT
    GetRowNameButton.Caption = BUTTONCAPTION_GET_ROW_NAME
    AddButton.Caption = BUTTONCAPTION_ADD
    DeleteButton.Caption = BUTTONCAPTION_DELETE
    CloseButton.Caption = BUTTONCAPTION_CLOSE
    CompleteButton.Caption = BUTTONCAPTION_COMPLETE
End Function

'|fffd||fffd||a5d7||fffd||fffd||752||fffd|
Private Function SetRowList(inputRange As Range)
    Dim rowListColumn() As String
    Dim selectedColumnCnt As Long
    selectedColumnCnt = inputRange.columns.count - 1
    ReDim rowListColumn(2, selectedColumnCnt)
    
    Dim i As Integer
    For i = 0 To selectedColumnCnt
        rowListColumn(0, i) = GetCellValue(inputRange(1, i + 1))
        rowListColumn(1, i) = GetTypeName(inputRange(1, i + 1))
    Next i
    
    With RowListBox
        .Clear
        .columnCount = 2
        .ColumnWidths = "118;118"
        .Column = rowListColumn
    End With
    
    '|fffd||fffd||fffd|I|fffd|z|fffd||fffd||24a||fffd||fffd||84d6||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|
    Erase rowListColumn
End Function

'|fffd||fffd||a5d7||fffd||317||56f02||fffd||752||fffd|
Private Function SetRowsName(inputRange As Range)
    Dim rowListColumn() As String
    Dim selectedColumnCnt As Long
    selectedColumnCnt = inputRange.columns.count - 1
    ReDim rowListColumn(2, selectedColumnCnt)
    
    Dim i As Integer
    For i = 0 To selectedColumnCnt
        rowListColumn(0, i) = GetCellValue(inputRange(1, i + 1))
        rowListColumn(1, i) = RowListBox.List(i, 1)
    Next i
    
    With RowListBox
        .Clear
        .columnCount = 2
        .ColumnWidths = "118;118"
        .Column = rowListColumn
        
        .Top = 108
        .Left = 12
        .Height = 72
        .Width = 240
    End With
    
    Call UpdateEndConditionRowName
    
    '|fffd||fffd||fffd|I|fffd|z|fffd||fffd||24a||fffd||fffd||84d6||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|
    Erase rowListColumn
End Function

'|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
Private Function SetEndCondition(inputRange As Range)
    Dim endConditionListColumn(5) As String
    endConditionListColumn(0) = inputRange(1, 1).Text
    endConditionListColumn(1) = GetEndConditionColumnNumber(inputRange)
    endConditionListColumn(2) = VALUE_END_CELL_CONDITION_VALUE_NONE
    endConditionListColumn(3) = VALUE_END_CELL_LOGICAL_OPERATOR_AND
    '|fffd||56f02||30f|d|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||282||242||355|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|l|fffd||fffd||6ce||fffd||fffd||fffd||fffd||fffd|
    endConditionListColumn(4) = 0
    
    With EndConditionListBox
        .Clear
        .columnCount = 5
        .ColumnWidths = "58;61;61;52;0"
        .Column = endConditionListColumn
    End With
End Function

'|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||64fe|
Private Function GetEndConditionColumnNumber(inputRange As Range) As Long
    GetEndConditionColumnNumber = inputRange.row + inputRange.Rows.count
End Function

'|fffd||fffd||a5d7||fffd||317||56f0d|X|fffd|V|fffd||fffd||fffd|A|fffd||1c2||74e||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||317||56f02||fffd||fffd||fffd||fffd||d0b9||fffd||10d|X|fffd|V|fffd||fffd||fffd||fffd|
Private Function UpdateEndConditionRowName()
    With EndConditionListBox
        Dim i As Integer
        For i = 0 To .ListCount - 1
            .Column(0, i) = RowListBox.Column(0, .Column(4, i))
        Next i
    End With
End Function



Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_AddinUninstall()
    On Error Resume Next
    Application.CommandBars(EXCEL_MENUBAR_NAME).Controls(ADDIN_NAME_EXCELWIZARD).Delete
End Sub

Attribute VB_Name = "WriteWizardForm"
Attribute VB_Base = "0{0CF94A38-2925-479B-8E09-D74A08E5C659}{5121978A-3617-4D65-B980-7B513656E792}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub UserForm_Initialize()
    Call SetFormCaption
    Call SetSheetNameComboBox(SheetNameComboBox)
    SelectButton.SetFocus
End Sub

'[|fffd|I|fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub SelectButton_Click()
    Me.Hide
    
    Dim writeRange As Range
    
    Call ShowSelectRangeInputBox(writeRange, PROMPT_SELECT_WRITE_RANGE_INPUTBOX, TITLE_SELECT_WRITE_RANGE_INPUTBOX)
    
    '[|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd| Nothing |fffd||fffd||fffd||752||80b3||fffd||fffd||90bd||fffd||7c1|A|fffd||209||fffd||fffd||30f||fffd||fffd||fffd||fffd||34d|s|fffd||fffd||202||fffd|
    If Not writeRange Is Nothing Then
        
        Call ChangeActiveSheetAfterSelectRange(writeRange.Parent.index, SheetNameComboBox)
        StartCellAdressTextBox.VALUE = GetStartCellAdress(writeRange)
        Call SetRowList(writeRange)
        
        GetRowNameButton.Enabled = True
        CompleteButton.Enabled = True
    End If
    
    '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|
    Set writeRange = Nothing
    
    Me.Show vbModeless
End Sub

'[|fffd||fffd||a5d7|]|fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd|
Private Sub RowListBox_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If RowListBox.ListIndex >= 0 Then
        EditWriteRowListForm.Show vbModal
    End If
End Sub

'[|fffd||56f02||30e||64fe|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub GetRowNameButton_Click()
    Me.Hide
    
    Dim rowNameRange As Range
    
    Call ShowSelectRangeInputBox(rowNameRange, PROMPT_SELECT_ROWNAME_INPUTBOX, TITLE_SELECT_ROWNAME_INPUTBOX)
    
    If Not rowNameRange Is Nothing Then
        Call ChangeActiveSheetAfterSelectRowName(rowNameRange.Parent.index, SheetNameComboBox)
        If Not rowNameRange.Rows.count = 1 Then
            MsgBox MSG_SELECTED_MULTIROWS_FOR_ROWNAME
        ElseIf Not rowNameRange.columns.count = RowListBox.ListCount Then
            MsgBox MSG_SELECTED_DIFFERENT_WRITERANGE_FOR_ROWNAME
        Else
            Call SetRowsName(rowNameRange)
        End If
        
    End If
    
    Me.Show vbModeless
End Sub

'[|fffd|V|fffd|[|fffd|g|fffd||fffd|]|fffd||3cd|X|fffd||fffd|
Private Sub SheetNameComboBox_Change()
    On Error Resume Next
    Sheets(SheetNameComboBox.VALUE).Select
End Sub

'[|fffd||82||fffd||fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub CloseButton_Click()
    Unload Me
End Sub

'[|fffd||fffd||fffd||fffd|]|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private Sub CompleteButton_Click()
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311||fffd||fffd||74a|m|fffd|F
    If Dir(ActiveWorkbook.Path & "/parameter.xml") = "" Then
        MsgBox MSG_SELECTED_ANOTHER_BOOK
        Unload Me
    Else
        'XML|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74e||fffd||fffd|
        Dim paramDoc As DOMDocument60
        Set paramDoc = CreateObject("MSXML2.DOMDocument.6.0")
        paramDoc.async = False
        Call paramDoc.Load(ActiveWorkbook.Path & "/parameter.xml")
        
        Dim rootNode As IXMLDOMNode
        Set rootNode = paramDoc.SelectSingleNode("parameter")
        
        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||752||fffd|
        Dim sheetNameElem As IXMLDOMElement
        Set sheetNameElem = paramDoc.createElement("sheetName")
        sheetNameElem.Text = SheetNameComboBox.VALUE
        Call rootNode.appendChild(sheetNameElem)
        Set sheetNameElem = Nothing
    
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||74a|J|fffd|n|fffd|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||752||fffd|
        Dim startCellAddressElem As IXMLDOMElement
        Set startCellAddressElem = paramDoc.createElement("startCellAddress")
        startCellAddressElem.Text = StartCellAdressTextBox.VALUE
        Call rootNode.appendChild(startCellAddressElem)
        Set startCellAddressElem = Nothing
        
        '|fffd||fffd||a5d7||fffd||fffd||752||fffd|
        Dim rowElem As IXMLDOMElement
        Dim i As Integer
        For i = 0 To RowListBox.ListCount - 1
            Set rowElem = paramDoc.createElement("row")
            Call rowElem.setAttribute("name", RowListBox.Column(0, i))
            If RowListBox.Column(1, i) = VALUE_FORMAT_SETTING_TRUE Then
                Call rowElem.setAttribute("formatSetting", "true")
            ElseIf RowListBox.Column(1, i) = VALUE_FORMAT_SETTING_START_ROW Then
                Call rowElem.setAttribute("formatSetting", "start_row")
            Else
                Call rowElem.setAttribute("formatSetting", "false")
            End If
            If RowListBox.Column(2, i) = VALUE_CELL_FORMAT_STRING Then
                Call rowElem.setAttribute("dataType", "string")
            ElseIf RowListBox.Column(2, i) = VALUE_CELL_FORMAT_NUMERIC Then
                Call rowElem.setAttribute("dataType", "numeric")
            ElseIf RowListBox.Column(2, i) = VALUE_CELL_FORMAT_DATE Then
                Call rowElem.setAttribute("dataType", "date")
            Else
                Call rowElem.setAttribute("dataType", "general")
            End If
            
            If RowListBox.Column(3, i) = "yyyy/m/dd" Then
                Call rowElem.setAttribute("format", "date.format.default")
            ElseIf RowListBox.Column(3, i) = "yyyy|fffd|Nm|fffd||fffd|d|fffd||fffd|" Then
                Call rowElem.setAttribute("format", "date.format.japanese")
            ElseIf RowListBox.Column(3, i) = "yyyy/MM/dd H:mm" Then
                Call rowElem.setAttribute("format", "date.format.hm")
            ElseIf RowListBox.Column(3, i) = "H:mm" Then
                Call rowElem.setAttribute("format", "time.format.hm")
            ElseIf RowListBox.Column(3, i) = "h|fffd||fffd|mm|fffd||fffd|ss|fffd|b" Then
                Call rowElem.setAttribute("format", "time.format.japanese")
            ElseIf RowListBox.Column(3, i) = "#,##0" Then
                Call rowElem.setAttribute("format", "key.currency.default")
            ElseIf RowListBox.Column(3, i) = "#,##0.00" Then
                Call rowElem.setAttribute("format", "key.numeric.scale.enabled")
            ElseIf RowListBox.Column(3, i) = "0%" Then
                Call rowElem.setAttribute("format", "key.percent.default")
            ElseIf RowListBox.Column(3, i) = "0.00%" Then
                Call rowElem.setAttribute("format", "key.percent.scale.enabled")
            ElseIf RowListBox.Column(3, i) = "#.###" Then
                Call rowElem.setAttribute("format", "key.numeric.optional.1")
            Else
                Call rowElem.setAttribute("format", RowListBox.Column(3, i))
            End If
            
            Call rootNode.appendChild(rowElem)
        Next i
        Set rowElem = Nothing
        Set rootNode = Nothing
        
        '|fffd||752||fffd|l|fffd||fffd|XML|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||255||6d1||fffd|
        Call paramDoc.Save(ActiveWorkbook.Path & "/parameter.xml")
        Set paramDoc = Nothing
        
        Unload Me
        
        Application.Quit
    End If
End Sub

'|fffd||fffd||a5d7||fffd||317||56f02||fffd||752||fffd|
Private Function SetRowsName(inputRange As Range)
    Dim rowListColumn() As String
    Dim selectedColumnCnt As Long
    selectedColumnCnt = inputRange.columns.count - 1
    ReDim rowListColumn(4, selectedColumnCnt)
    
    Dim i As Integer
    For i = 0 To selectedColumnCnt
        rowListColumn(0, i) = GetCellValue(inputRange(1, i + 1))
        rowListColumn(1, i) = RowListBox.List(i, 1)
        rowListColumn(2, i) = RowListBox.List(i, 2)
        rowListColumn(3, i) = RowListBox.List(i, 3)
    Next i
    
    With RowListBox
        .Clear
        .columnCount = 4
        .ColumnWidths = "68;138;68;68"
        .Column = rowListColumn
    End With
    
    '|fffd||fffd||fffd|I|fffd|z|fffd||fffd||24a||fffd||fffd||84d6||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|
    Erase rowListColumn
End Function

'|fffd||fffd||fffd|x|fffd||fffd||fffd|E|fffd|{|fffd|^|fffd||fffd||fffd||fffd|Caption|fffd||fffd||752||80b7||fffd||fffd|
Private Function SetFormCaption()
    Me.Caption = FORMCAPTION_WRITE_WIZARD
    SheetNameLabel.Caption = LABELCAPTION_SHEETNAME
    StartCellAdressLabel.Caption = LABELCAPTION_WRITE_START_CELL_ADDRESS
    RowListLabel.Caption = LABELCAPTION_ROW_LIST
    RowNameLabel.Caption = LABELCAPTION_ROW_NAME
    FormatSettingLabel.Caption = LABELCAPTION_FORMAT_SETTING
    DataTypeLabel.Caption = LABELCAPTION_DATA_TYPE
    FormatLabel.Caption = LABELCAPTION_FORMAT
    
    SelectButton.Caption = BUTTONCAPTION_SELECT
    GetRowNameButton.Caption = BUTTONCAPTION_GET_ROW_NAME
    CloseButton.Caption = BUTTONCAPTION_CLOSE
    CompleteButton.Caption = BUTTONCAPTION_COMPLETE
End Function

'|fffd||fffd||a5d7||fffd||fffd||752||fffd|
Private Function SetRowList(inputRange As Range)
    Dim rowListColumn() As String
    Dim selectedColumnCnt As Long
    selectedColumnCnt = inputRange.columns.count - 1
    ReDim rowListColumn(4, selectedColumnCnt)
    
    Dim i As Integer
    For i = 0 To selectedColumnCnt
        rowListColumn(0, i) = GetCellValue(inputRange(1, i + 1))
        rowListColumn(1, i) = VALUE_FORMAT_SETTING_FALSE
        rowListColumn(2, i) = GetTypeName(inputRange(1, i + 1))
        rowListColumn(3, i) = GetWriteFormatValues(0)
    Next i
    
    With RowListBox
        .Clear
        .columnCount = 4
        .ColumnWidths = "68;138;68;68"
        .Column = rowListColumn
    End With
    
    '|fffd||fffd||fffd|I|fffd|z|fffd||fffd||24a||fffd||fffd||84d6||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|
    Erase rowListColumn
End Function




' InQuest injected base64 decoded content
' tZ+>
' wBzYB
' wBzYB
' wBzYK
' *'.+-

INQUEST-PP=macro
