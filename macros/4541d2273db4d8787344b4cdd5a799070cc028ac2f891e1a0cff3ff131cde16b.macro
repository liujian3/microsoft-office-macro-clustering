Attribute VB_Name = "Image2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Public Sub ISettings_Click()
Settings.Show
End Sub
Public Sub Label1_Click()
End Sub
Public Sub UserSet_Change_Click()
End Sub
Attribute VB_Name = "InitUserForm"
#If VBA7 Then
    Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
        (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
    Private Declare PtrSafe Function FindWindowA Lib "USER32" _
    (ByVal lpClassName As String, _
    ByVal lpWindowName As String) As Long
    
    Private Declare PtrSafe Function GetWindowLongA Lib "USER32" _
    (ByVal hwnd As Long, _
    ByVal nIndex As Long) As Long
    
    Private Declare PtrSafe Function SetWindowLongA Lib "USER32" _
    (ByVal hwnd As Long, _
    ByVal nIndex As Long, _
    ByVal dwNewLong As Long) As Long
#Else
    Private Declare Function FindWindowA Lib "USER32" _
    (ByVal lpClassName As String, _
    ByVal lpWindowName As String) As Long
    
    Private Declare Function GetWindowLongA Lib "USER32" _
    (ByVal hwnd As Long, _
    ByVal nIndex As Long) As Long
    
    Private Declare Function SetWindowLongA Lib "USER32" _
    (ByVal hwnd As Long, _
    ByVal nIndex As Long, _
    ByVal dwNewLong As Long) As Long
#End If
Option Explicit
Sub FormatUserForm(UserFormCaption As String)

Dim hwnd            As Long
Dim exLong          As Long

    hwnd = FindWindowA(vbNullString, UserFormCaption)
    exLong = GetWindowLongA(hwnd, -16)
    If (exLong And &H20000) = 0 Then
        SetWindowLongA hwnd, -16, exLong Or &H20000
        Else
    End If

End Sub



Attribute VB_Name = "License"
Sub LicenseCheck()
If Date > #4/1/2020# Then
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ACS Calculator |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & vbCrLf & vbCrLf _
    & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
    'If Format(Date, "m") = 4 And Format(Date, "d") = 1 Then
     '   With UF1
      '  .CBCalculate.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
       ' .CBCreateTKP.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        'QuotationData.TKPReady.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd||fffd|"
        'MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| <|fffd||fffd||fffd||fffd||fffd||fffd| M3XX> ", vbInformation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        'End With
    'Else
Else
    UserForm1.Show
End If
End Sub
Attribute VB_Name = "Module1"
Public ACSArray(100, 2), ACSArray_Article(120, 2), ACSUArray(70, 3), ACSDetails(10), ManualACS(10), ACSType(), Unit_Type(10) As Variant
Public ACS_Designated, ACS_Art, ACS_Art_Array(11) As String
Public sCount As Integer
Public SavedOptions(10) As Variant
Public iLastProjectNum, iDiscount As Integer
Public sFIO As String
Public TKPName As String
Public GZM_Array(10, 3) As Variant
Option Explicit
Attribute VB_Name = "Module2"
Sub Click()
Call LicenseCheck
End Sub
Sub Picture4_Click()
Settings.Show
End Sub

'''''''''''''''' READ FROM XML ROUTINE ''''''''''''''
'''''' http://excel-macro.tutorialhorizon.com/vba-excel-read-data-from-xml-file/
'''''' http://excel-macro.tutorialhorizon.com/vba-excel-update-xml-file/
Sub ReadXML()
    Call fnReadXMLByTags
End Sub
Function fnReadXMLByTags()
    On Error Resume Next
    Dim mainWorkBook As Workbook
    Set mainWorkBook = ActiveWorkbook
    mainWorkBook.Sheets("Sheet1").Range("A:A").Clear
    Set oXMLFile = CreateObject("Microsoft.XMLDOM")
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    XMLFileName = "C:\Users\rustche\Desktop\SampleProject.acsc"
    oXMLFile.Load (XMLFileName)
    Set DriveNodes = oXMLFile.SelectNodes("/head/Drive/Position/text()")
    Set PriceNodes = oXMLFile.SelectNodes("/head/Drive/Cost/text()")
    Set DescriptionNodes = oXMLFile.SelectNodes("/head/Drive/Description/text()")
    mainWorkBook.Sheets("Sheet1").Range("A" & 1).Value = "Drive ID"
    mainWorkBook.Sheets("Sheet1").Range("B" & 1).Value = "Drive"
    mainWorkBook.Sheets("Sheet1").Range("C" & 1).Value = "Price"
    mainWorkBook.Sheets("Sheet1").Range("D1").Value = "Total Drive: " & DriveNodes.Length
        For i = 0 To (DriveNodes.Length - 1)
            Title = DriveNodes(i).NodeValue
            Price = PriceNodes(i).NodeValue
            Description = DescriptionNodes(i).NodeValue
        mainWorkBook.Sheets("Sheet1").Range("B" & i + 2).Borders.Value = 1
        mainWorkBook.Sheets("Sheet1").Range("C" & i + 2).Borders.Value = 1
        mainWorkBook.Sheets("Sheet1").Range("B" & i + 2).Value = Title
        mainWorkBook.Sheets("Sheet1").Range("C" & i + 2).Value = Price
    Next
    'Reading the Attributes
    Set Nodes_Attribute = oXMLFile.SelectNodes("/head/Drive")
    For i = 0 To (Nodes_Attribute.Length - 1)
        Attributes = Nodes_Attribute(i).getAttribute("id")
        mainWorkBook.Sheets("Sheet1").Range("A" & i + 2).Borders.Value = 1
        mainWorkBook.Sheets("Sheet1").Range("A" & i + 2).Value = Attributes
    Next
    
    'Get the x'th drive title
    Set Nodes_Particular = oXMLFile.SelectSingleNode("/head/Drive[2]/Position/text()") ' index starts with 0, so put 2 for 3th book
    MsgBox "3th Drive Title : " & Nodes_Particular.NodeValue
    
End Function
Attribute VB_Name = "QuotationData"
Attribute VB_Base = "0{CFE008FA-0A3C-4856-9DF0-7A654A13851B}{68F01D4F-0655-4203-B9F2-9ED1BC533522}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Frame4_Click()

End Sub

Private Sub UserForm_Activate()
Dim i, j As Integer
Dim sTKPRegionDefault As String
Dim sDDPDefault As String
Dim iLastProject As Integer
Dim bool_NoGzm, bool_GZM_DCS, bool As Boolean
'On Error Resume Next
With QuotationData
    bool_NoGzm = False
    bool_GZM_DCS = False
    .TKPReady.ForeColor = &HFF&
    .TKPReady.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    .OBTKP.Value = True
    If iDiscount <> 0 Then .TBComments = iDiscount & "% |fffd||fffd||fffd||fffd||fffd||fffd|"
    sFIO = ThisWorkbook.Sheets(1).Range("V2").Value
    sTKPRegionDefault = sRegion & sUsername
    sDDPDefault = ThisWorkbook.Sheets(1).Range("V4").Value
    .TKPRegion_Show.Caption = sTKPRegionDefault
    .TKPDate_Show.Caption = Format(Date, "mm")
    .TKPYear_Show.Caption = Format(Date, "yy")
    .TKPNum_Show.Caption = .TKPNum_Insert.Value
    .TKPRegion_Insert.Value = sTKPRegionDefault
    .TKPDate_Insert.Value = Format(Date, "mm") & Format(Date, "yy")
    .ForWhom.Value = ""
    .DDP.Value = sDDPDefault
    .MinDelivery.Value = ""
    .MaxDelivery.Value = ""
    .CBConditions.Value = ""
    .CBConditions.Clear
    .CBConditions.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| FID."
    .CBConditions.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " & iDiscount & "%."
    .CBConditions.AddItem "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    .CBConditions.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    .CBSegment.Clear
    .CBSegment.AddItem "COG"
    .CBSegment.AddItem "W&WW"
    .CBSegment.AddItem "F&B"
    .CBSegment.AddItem "Metals"
    .CBSegment.AddItem "Mining"
    .CBSegment.AddItem "HVAC"
    .CBSegment.AddItem "Power"
    .CBSegment.AddItem "Automotive"
        Call UserSetInit
    iLastProjectNum = CCur(ThisWorkbook.Sheets(1).Range("Q26").Value)
    If iLastProjectNum = 0 Then iLastProject = 0
    If iLastProjectNum > 0 And iLastProjectNum < 9 Then iLastProject = 1
    If iLastProjectNum >= 9 And iLastProjectNum < 99 Then iLastProject = 2
    If iLastProjectNum >= 99 And iLastProjectNum < 999 Then iLastProject = 3
    If iLastProjectNum >= 999 Then iLastProject = 4
    Select Case iLastProject
        Case 0
            .TKPNum_Insert.Value = "001"
        Case 1
            .TKPNum_Insert.Value = "00" & iLastProjectNum + 1
        Case 2
            .TKPNum_Insert.Value = "0" & iLastProjectNum + 1
        Case 3
            .TKPNum_Insert.Value = "" & iLastProjectNum + 1
        Case 4
            .TKPNum_Insert.Value = iLastProjectNum + 1
    End Select
    For i = 0 To 10
        GZM_Array(i, 0) = ""
        GZM_Array(i, 1) = ""
        GZM_Array(i, 2) = ""
        GZM_Array(i, 3) = ""
    Next
    GZM_Array(0, 0) = "|fffd|"
    GZM_Array(0, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    GZM_Array(0, 2) = "|fffd||fffd||fffd|"
    GZM_Array(0, 3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    For i = 1 To sCount
        GZM_Array(i, 0) = i
        GZM_Array(i, 1) = UserForm1.Controls("TBPosition" & i).Value
        For j = 0 To UBound(ACSType)
            If Unit_Type(i) = ACSType(j, 0) Then
                GZM_Array(i, 2) = ACSType(j, 1)
                GZM_Array(i, 3) = ACSType(j, 2)
            Else
            End If
        Next
    Next
    LBTKP_Table.List = GZM_Array
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 0 To sCount
        If GZM_Array(i, 2) = "" Then bool_NoGzm = True
        If GZM_Array(i, 2) = "DCS" Or GZM_Array(i, 2) = "DCT" Then
            bool_GZM_DCS = True
            tbQ.Value = "T"
        End If
    Next
    If bool_NoGzm = True Then
        .CBConditions.Value = ""
    Else
        If bool_GZM_DCS = True Then
            .CBConditions.Value = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
        Else
            If iDiscount <> 0 Then .CBConditions.Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " & iDiscount & "%."
            If iDiscount = 0 Then .CBConditions.Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| FID/FIDSTD."
        End If
    End If
    .CBConditions.DropDown
End With
End Sub
Private Sub CBConditions_Change()
If QuotationData.CBConditions.Value <> "" Then
    QuotationData.TKPReady.ForeColor = &HC000&
    QuotationData.TKPReady.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Private Sub CBTestQuotation_Click()
If sCount > 0 Then
    'Call UserSetInit
    Call Create_Quotation_Table2
    'QuotationData.Show
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Public Sub Create_Quotation_Table2()
Dim xlAPP As Excel.Application
Dim xlbook As Excel.Workbook
Dim WS As Excel.Worksheet
Dim i, j, k As Integer
Dim CBConditions, sPosition, sCost, sQty, sTotal, sTotalEx, sVAT, sTotalInc, sDelivery, sDDP, sTKPRegion, sTKPDate, sTKPNum As String
If sCount > 0 Then
    Application.ScreenUpdating = False
    Set xlAPP = CreateObject("Excel.Application")
    Set xlbook = xlAPP.Workbooks.Add
    Set WS = xlbook.Worksheets(1)
    xlAPP.Visible = True
    On Error Resume Next
    For j = 0 To sCount - 1
        sPosition = UserForm1.Controls("TBPosition" & j + 1).Value
        sCost = UserForm1.Controls("TBCost" & j + 1).Value
        sQty = UserForm1.Controls("TBQty" & j + 1).Value
        sTotal = UserForm1.Controls("LTotal" & j + 1).Caption
        xlbook.Sheets(1).Cells(1, "A").Value = "|fffd|"
        xlbook.Sheets(1).Cells(1, "B").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /" & vbCrLf & "Description of equipment"
        xlbook.Sheets(1).Cells(1, "C").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Price per unit, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(1, "D").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|. /" & vbCrLf & "Quantity, pcs."
        xlbook.Sheets(1).Cells(1, "E").Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Total price, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(j + 2, "A").Value = j + 1
        xlbook.Sheets(1).Cells(j + 2, "B").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        xlbook.Sheets(1).Cells(j + 2, "C").Value = CCur(sCost) * (1 - iDiscount / 100)
        xlbook.Sheets(1).Cells(j + 2, "D").Value = sQty
        xlbook.Sheets(1).Cells(j + 2, "E").Value = "=C" & (j + 2) & "*D" & (j + 2)
        'xlbook.Sheets(1).Cells(j + 2, "E").Value = CCur(sCost) * (1 - iDiscount / 100) * sQty
    Next
    xlbook.Sheets(1).Cells(sCount + 2, 5).Value = "=SUM(E2:E" & (j + 1) & ")"
    xlbook.Sheets(1).Cells(sCount + 3, 5).Value = "=E" & (j + 2) & "*0.20"
    xlbook.Sheets(1).Cells(sCount + 4, 5).Value = "=E" & (j + 2) & "+" & "E" & (j + 3)
    
    xlbook.Sheets(1).Cells(sCount + 5, "B").Value = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 6, "B").Value = "|fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 7, "B").Value = "|fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| DCS |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 10, "B").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|/|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.  |fffd||fffd||fffd| |fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|), |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 6, "B").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 7, "B").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 8, "B").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 10, "B").WrapText = True
    'xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").Value = QuotationData.CBConditions.Value
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: " & sDelivery & " |fffd||fffd||fffd||fffd||fffd||fffd|"
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: DDP " & sDDP
    
    xlbook.Sheets(1).Cells(sCount + 9, "A").Value = "=B2"
Call ExcelFormatting2(xlbook)
'Call ACSDB_ADD
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Public Function ExcelFormatting2(ByVal xlbook As Excel.Workbook)
Dim k, j As Integer
Application.ScreenUpdating = False
xlbook.Sheets(1).Rows(1).RowHeight = 55
xlbook.Sheets(1).Rows(1).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 3).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 3).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 4).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 4).NumberFormat = "0.00"
xlbook.Sheets(1).Columns(1).ColumnWidth = 3
xlbook.Sheets(1).Columns(2).ColumnWidth = 65
xlbook.Sheets(1).Columns(3).ColumnWidth = 26
xlbook.Sheets(1).Columns(4).ColumnWidth = 18
xlbook.Sheets(1).Columns(5).ColumnWidth = 26
xlbook.Sheets(1).Columns(5).Font.Bold = True
xlbook.Sheets(1).Range("A1:Z99").Font.Name = "Arial"
xlbook.Sheets(1).Range("A1:Z99").Font.Size = 10
xlbook.Sheets(1).Range("A1:Z99").HorizontalAlignment = xlLeft
xlbook.Sheets(1).Range("A1:Z99").VerticalAlignment = xlTop
For j = 0 To sCount - 1
    For k = 1 To 5
        xlbook.Sheets(1).Cells(1, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(j + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k = 3 Or k = 5 Then xlbook.Sheets(1).Cells(j + 2, k).NumberFormat = "0.00"
        xlbook.Sheets(1).Cells(sCount + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 3, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 4, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k < 5 Then xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
        xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
    Next
Next
xlbook.Sheets(1).Cells(sCount + 2, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Excluded, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 2, 1), xlbook.Sheets(1).Cells(sCount + 2, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 2, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 2, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 2, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 2, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 1).Value = "|fffd||fffd||fffd|, % / VAT, %"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 3, 1), xlbook.Sheets(1).Cells(sCount + 3, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 3, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 3, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 3, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Included, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 4, 1), xlbook.Sheets(1).Cells(sCount + 4, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 4, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 4, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 4, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 10, 1), xlbook.Sheets(1).Cells(sCount + 10, 5)).Merge
xlbook.Sheets(1).Cells(sCount + 10, 1).HorizontalAlignment = xlLeft
xlbook.Sheets(1).Cells(sCount + 10, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 10, "A").WrapText = True
xlbook.Sheets(1).Rows(sCount + 10).RowHeight = 96
Application.ScreenUpdating = True
End Function

Public Sub UserForm_Initialize() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub
Private Sub DDP_Change() '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
If QuotationData.DDP.Value <> "" Then
    QuotationData.CBDDP = True
Else
    QuotationData.CBDDP = False
End If
End Sub
Public Sub ForWhom_Change()
If QuotationData.ForWhom.Value <> "" Then
    QuotationData.CBForWhom.Value = True
Else
    QuotationData.CBForWhom.Value = False
End If
End Sub
Public Sub MaxDelivery_Change()
If QuotationData.MaxDelivery.Value <> "" Then
    QuotationData.CBDelivery = True
Else
    QuotationData.CBDelivery = False
End If
If QuotationData.MinDelivery.Value <> "" Then
    QuotationData.CBDelivery = True
Else
    QuotationData.CBDelivery = False
End If
End Sub
Public Sub MinDelivery_Change()
If QuotationData.MinDelivery.Value <> "" Then
    QuotationData.CBDelivery = True
Else
    QuotationData.CBDelivery = False
End If
If QuotationData.MaxDelivery.Value <> "" Then
    QuotationData.CBDelivery = True
Else
    QuotationData.CBDelivery = False
End If
End Sub
Public Sub TKPRegion_Insert_Change() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| caption |fffd||fffd||fffd| |fffd|
On Error Resume Next
QuotationData.TKPRegion_Show.Caption = QuotationData.TKPRegion_Insert.Value
End Sub
Public Sub TKPDate_Insert_Change()
On Error Resume Next
QuotationData.TKPDate_Show.Caption = QuotationData.TKPDate_Insert.Value
End Sub
Public Sub TKPNum_Insert_Change()
QuotationData.TKPNum_Show.Caption = QuotationData.TKPNum_Insert.Value
End Sub
Public Sub TKPReady_Click()
If QuotationData.CBConditions.Value <> "" Then
    QuotationData.Hide
    If QuotationData.OBTKP.Value = True Then Call Create_Quotation
    If QuotationData.OBTable.Value = True Then Call Create_Quotation_Table
    Call UserSetInit
    Call WritePrjNumDat
    ThisWorkbook.Save
Else
    MsgBox "|fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Public Sub Create_Quotation() ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| Excel
Dim sCalcPath, sCalcName As String
Dim sPath As String
Dim sTKPNum, sTKPDate, sTKPRegion As String
Dim sAdress As String
Dim sUser As String
Dim sAsk As String
Dim sClient As String
Dim sTempName, sTempPath, sName As String
Dim sDBName As String
    On Error Resume Next
ThisWorkbook.Sheets(1).Range("A26").Value = CCur(iLastProjectNum) + 1
sCalcPath = ThisWorkbook.Path
sCalcName = "ACS Calculator.xlsm"
sTempName = "Quotation Template.xlsx"
sTempPath = sCalcPath & "\" & sTempName
sUser = Environ("USERNAME")
sAdress = "C:\Users\" & sUser & "\Desktop\"
sTKPRegion = QuotationData.TKPRegion_Insert.Value
sTKPDate = QuotationData.TKPDate_Insert.Value
sTKPNum = QuotationData.TKPNum_Insert.Value
sClient = QuotationData.ForWhom.Value
TKPName = tbQ.Value & sTKPRegion & sTKPDate & sTKPNum
ThisWorkbook.Save
    Call ACSDB_ADD
Workbooks(sTempName).Close SaveChanges:=False
Workbooks.Open Filename:=sTempPath
ActiveWorkbook.Sheets(1).Range("N9").Font.Size = 12
ActiveWorkbook.Sheets(1).Range("N9").Font.Bold = True
ActiveWorkbook.Sheets(1).Range("N9").WrapText = False
ActiveWorkbook.Sheets(1).Range("N9").Value = TKPName
ActiveWorkbook.Sheets(1).Range("A10").Font.Size = 11
ActiveWorkbook.Sheets(1).Range("A10").Font.Bold = True
ActiveWorkbook.Sheets(1).Range("A10").WrapText = False
If QuotationData.CBForWhom = True Then ActiveWorkbook.Sheets(1).Range("A10").Value = sClient
ActiveWorkbook.Sheets(1).Range("D29").Font.Size = 10
ActiveWorkbook.Sheets(1).Range("D29").WrapText = False
ActiveWorkbook.Sheets(1).Range("D29").Font.Bold = True
    Call TKPFillIn
sName = ActiveWorkbook.Sheets(1).Range("N9").Value
ActiveWorkbook.SaveAs PathChecker("") & sName & ".xlsx"
Windows(sName).Activate
End Sub
Public Function TKPFillIn()
Dim i, j As Integer
Dim sDDP, sClient As String
Dim sDelivery As String
Dim sAdress As String
Dim sPositionRow, sDDPRow, sDeliveryRow As Integer
Dim sDDPColumn, sDeliveryColumn As String
Dim sPosition, sCost, sQty, sTotal, sTotalEx, sVAT, sTotalInc As String
sPositionRow = 18
sDeliveryRow = 29
sDeliveryColumn = "E"
sDelivery = QuotationData.MinDelivery.Value & " - " & QuotationData.MaxDelivery.Value
sDDPRow = 30
sDDPColumn = "E"
sDDP = QuotationData.DDP.Value
'sTotalEx = UserForm1.Controls("LTotalEx").Caption
'sVAT = UserForm1.Controls("LVAT").Caption
'sTotalInc = UserForm1.Controls("LTotalInc").Caption
sClient = QuotationData.ForWhom.Value
On Error Resume Next
    ActiveWorkbook.Sheets(1).Range("A27").Value = QuotationData.CBConditions.Value
    For i = 1 To sCount - 1
        Rows("18:18").Select
        Selection.Copy
        Rows("19:19").Select
        Selection.Insert Shift:=xlDown
        Application.CutCopyMode = False
    Next
    For j = 0 To sCount - 1
        sPosition = UserForm1.Controls("TBPosition" & j + 1).Value
        'Desc!!!
        Art = ACS_Art_Array(j + 1)
        
        sCost = UserForm1.Controls("TBCost" & j + 1).Value
        sQty = UserForm1.Controls("TBQty" & j + 1).Value
        sTotal = UserForm1.Controls("LTotal" & j + 1).Caption
        ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "A").Value = j + 1
        'Desc Art = ACS_Art_Array(j + 1)
        If Art = "" Then
            ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "B").Value = sPosition
        Else
            ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "B").Value = Art
        End If
        'ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "B").Value = sPosition
        
        ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "F").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "T").Value = CCur(sCost) * (1 - iDiscount / 100)
        ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "W").Value = sQty
        'ActiveWorkbook.Sheets(1).Cells(sPositionRow + j, "Y").Value = CCur(sCost) * (1 - iDiscount / 100) * sQty
    Next
    If QuotationData.CBForWhom = True Then ActiveWorkbook.Sheets(1).Range("A10").Value = sClient
    If QuotationData.CBDelivery = True Then ActiveWorkbook.Sheets(1).Cells(sDeliveryRow + sCount - 1, sDeliveryColumn).Value = sDelivery & " |fffd||fffd||fffd||fffd||fffd||fffd|"
    If QuotationData.CBDDP = True Then ActiveWorkbook.Sheets(1).Cells(sDDPRow + sCount - 1, sDDPColumn).Value = "DDP " & sDDP
End Function
Public Sub Create_Quotation_Table()
Dim xlAPP As Excel.Application
Dim xlbook As Excel.Workbook
Dim WS As Excel.Worksheet
Dim j, k As Integer
Dim sPosition, sCost, sQty, sTotal, sTotalEx, sVAT, sTotalInc, sDelivery, sDDP, sTKPRegion, sTKPDate, sTKPNum As String
sDelivery = QuotationData.MinDelivery.Value & " - " & QuotationData.MaxDelivery.Value
sDDP = QuotationData.DDP.Value
sTKPRegion = QuotationData.TKPRegion_Insert.Value
sTKPDate = QuotationData.TKPDate_Insert.Value
sTKPNum = QuotationData.TKPNum_Insert.Value
TKPName = tbQ.Value & sTKPRegion & sTKPDate & sTKPNum
If sCount > 0 Then
    Set xlAPP = CreateObject("Excel.Application")
    Set xlbook = xlAPP.Workbooks.Add
    Set WS = xlbook.Worksheets(1)
    xlAPP.Visible = True
    On Error Resume Next
    For j = 0 To sCount - 1
        sPosition = UserForm1.Controls("TBPosition" & j + 1).Value
        sCost = UserForm1.Controls("TBCost" & j + 1).Value
        sQty = UserForm1.Controls("TBQty" & j + 1).Value
        sTotal = UserForm1.Controls("LTotal" & j + 1).Caption
        xlbook.Sheets(1).Cells(1, "A").Value = "|fffd|"
        xlbook.Sheets(1).Cells(1, "B").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /" & vbCrLf & "Description of equipment"
        xlbook.Sheets(1).Cells(1, "C").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Price per unit, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(1, "D").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|. /" & vbCrLf & "Quantity, pcs."
        xlbook.Sheets(1).Cells(1, "E").Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Total price, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(j + 2, "A").Value = j + 1
        
         'Desc Art = ACS_Art_Array(j + 1)
        Art = ACS_Art_Array(j + 1)
        If Art = "" Then
            xlbook.Sheets(1).Cells(j + 2, "B").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        Else
            xlbook.Sheets(1).Cells(j + 2, "B").Value = Art & vbCrLf & sPosition & vbCrLf & ACSDetails(j + 1)
        End If
        'Desc!
        'xlbook.Sheets(1).Cells(j + 2, "B").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        xlbook.Sheets(1).Cells(j + 2, "C").Value = CCur(sCost) * (1 - iDiscount / 100)
        xlbook.Sheets(1).Cells(j + 2, "D").Value = sQty
        'xlbook.Sheets(1).Cells(j + 2, "E").Value = CCur(sCost) * (1 - iDiscount / 100) * sQty
        xlbook.Sheets(1).Cells(j + 2, "E").Value = "=C" & (j + 2) & "*D" & (j + 2)
    Next
    
    xlbook.Sheets(1).Cells(sCount + 2, 5).Value = "=SUM(E2:E" & (j + 1) & ")"
    xlbook.Sheets(1).Cells(sCount + 3, 5).Value = "=E" & (j + 2) & "*0.18"
    xlbook.Sheets(1).Cells(sCount + 4, 5).Value = "=E" & (j + 2) & "+" & "E" & (j + 3)
    
    xlbook.Sheets(1).Cells(sCount + 5, "A").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 5, "A").Value = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & TKPName & ". |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").Value = QuotationData.CBConditions.Value
    xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: " & sDelivery & " |fffd||fffd||fffd||fffd||fffd||fffd|"
    xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: DDP " & sDDP
    
Call ExcelFormatting(xlbook)
Call ACSDB_ADD
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Public Function ExcelFormatting(ByVal xlbook As Excel.Workbook)
Dim k, j As Integer
xlbook.Sheets(1).Rows(1).RowHeight = 55
xlbook.Sheets(1).Rows(1).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 3).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 3).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 4).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 4).NumberFormat = "0.00"
xlbook.Sheets(1).Columns(1).ColumnWidth = 3
xlbook.Sheets(1).Columns(2).ColumnWidth = 65
xlbook.Sheets(1).Columns(3).ColumnWidth = 18
xlbook.Sheets(1).Columns(4).ColumnWidth = 18
xlbook.Sheets(1).Columns(5).ColumnWidth = 18
xlbook.Sheets(1).Columns(5).Font.Bold = True
xlbook.Sheets(1).Range("A1:Z99").Font.Name = "Arial"
xlbook.Sheets(1).Range("A1:Z99").Font.Size = 10
xlbook.Sheets(1).Range("A1:Z99").HorizontalAlignment = xlLeft
xlbook.Sheets(1).Range("A1:Z99").VerticalAlignment = xlTop
For j = 0 To sCount - 1
    For k = 1 To 5
        xlbook.Sheets(1).Cells(1, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(j + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k = 3 Or k = 5 Then xlbook.Sheets(1).Cells(j + 2, k).NumberFormat = "0.00"
        xlbook.Sheets(1).Cells(sCount + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 3, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 4, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k < 5 Then xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
        xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
    Next
Next
xlbook.Sheets(1).Cells(sCount + 2, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Excluded, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 2, 1), xlbook.Sheets(1).Cells(sCount + 2, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 2, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 2, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 2, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 2, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 1).Value = "|fffd||fffd||fffd|, % / VAT, %"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 3, 1), xlbook.Sheets(1).Cells(sCount + 3, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 3, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 3, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 3, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Included, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 4, 1), xlbook.Sheets(1).Cells(sCount + 4, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 4, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 4, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 4, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 5).Interior.Color = &HE0E0E0
End Function
Public Function ACSDB_ADD()
Dim sDBName, sDBPath As String
Dim iCount, i  As Integer
Dim rRange, rLast As Range
Dim sx As Range
Dim sUser, sTKPRegion, sTKPDate, sTKPNum, sQty, sACSType, sClient, sPosition, sQnum, sSegment, sUnitPrice, sTotal, sComment As String
Dim vUser, vRegion, vIndustry, vDate, vQnum, vCustomer, vType, vArticle, vUnitPrice, vQty, vTotal, vComment As Integer
vUser = 0
vRegion = 1
vIndustry = 2
vDate = 3
vQnum = 4
vCustomer = 5
vType = 6
vArticle = 7
vUnitPrice = 8
vQty = 9
vTotal = 10
vComment = 11
sTKPRegion = QuotationData.TKPRegion_Insert.Value
sTKPDate = QuotationData.TKPDate_Insert.Value & Format(Date, "yy")
sTKPNum = QuotationData.TKPNum_Insert.Value
sClient = QuotationData.ForWhom.Value
sQnum = tbQ.Value & sTKPRegion & sTKPDate & sTKPNum
sSegment = QuotationData.CBSegment.Value
sDBName = "Data Base.xlsx"
sDBPath = ThisWorkbook.Path & "\" & sDBName
sUser = Environ("USERNAME")
sComment = QuotationData.TBComments.Value
UserForm1.CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd| " & sQnum & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & UserForm1.CMD.Value
    On Error Resume Next
    Workbooks(sDBName).Close SaveChanges:=True
    Workbooks.Open Filename:=sDBPath
    If sCount <> 0 Then
    For i = 1 To sCount
        sACSType = Unit_Type(i)
        sPosition = UserForm1.Controls("TBPosition" & i).Value
        sUnitPrice = UserForm1.Controls("TBCost" & i).Value
        sQty = UserForm1.Controls("TBQty" & i).Value
        sTotal = UserForm1.Controls("LTotal" & i).Caption
        Set rRange = Range("A" & Rows.Count).End(xlUp).Offset(1)
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vUser).Value = sUser
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vRegion).Value = sTKPRegion
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vIndustry).Value = sSegment
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vDate).Value = sTKPDate
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vQnum).Value = sQnum
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vCustomer).Value = sClient
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vType).Value = sACSType
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vArticle).Value = sPosition
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vUnitPrice).Value = sUnitPrice * (1 - iDiscount / 100)
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vQty).Value = sQty
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vTotal).Value = sUnitPrice * (1 - iDiscount / 100) * sQty
        ActiveWorkbook.Sheets(1).Cells(rRange.Row, rRange.Column + vComment).Value = sComment
    Next
    Else
    End If
    Workbooks(sDBName).Close SaveChanges:=True
End Function
Public Sub WritePrjNumDat()
'On Error GoTo ErrorHandle
On Error Resume Next
PrjNum = ThisWorkbook.Path & "\ProjectNum.dat"
Open PrjNum For Output As #2
        Write #2, sLastPrNum + 1
Close #2
ThisWorkbook.Sheets(1).Range("Q26").Value = sLastPrNum + 1
'ErrorHandle:
  'MsgBox Err.Description _
  '& vbCrLf & "|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ProjectNum.dat", _
  'vbExclamation, _
  '"Error #" & Err.Number
  'End
End Sub
Attribute VB_Name = "SWUpdates"
Attribute VB_Base = "0{B55167F0-6527-43E1-AD38-8F042237368F}{570B7BA7-C92B-460F-B808-DAAC40446590}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub TBUpdates_Change()

End Sub
Attribute VB_Name = "Settings"
Attribute VB_Base = "0{F4E32343-828D-46DD-9965-0FA74E48CFC7}{8D56195F-CD2F-4178-ADB6-69188BDDA797}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ChangeSaveAsPath_Click()
    Dim sUser, sFilePath As String
    Dim fs, a As Object
    sUser = Environ("USERNAME")
    
    strDialog = Application.FileDialog(msoFileDialogFolderPicker).Show
    strPath = Application.FileDialog(msoFileDialogFolderPicker).SelectedItems(1)
    Settings.TBSaveAsPath.Value = PathChecker(strPath)
End Sub

Public Sub UserForm_Initialize()
Dim SaveAsPathFile As String
SaveAsPathFile = ThisWorkbook.Path & "\TKPSaveAsPath.dat"
With Settings
    .TBFileLocation = ThisWorkbook.Path
    .TBDBLocation = .TBFileLocation & "\" & "Data Base.xlsx"
    .TBPrNum = ThisWorkbook.Sheets(1).Range("Q26").Value
    .TBSaveAsPath = PathChecker("")
    
End With
End Sub
Public Sub CBFileOpen_Click()
Shell "explorer.exe " & Settings.TBFileLocation, vbNormalFocus
End Sub
Public Sub CBDBOpen_Click()
Workbooks.Open Filename:=Settings.TBDBLocation
End Sub
Private Sub CBPrNumChange_Click()
Dim InsertNum
InsertNum = InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "")
If IsNumeric(InsertNum) Then
    PrjNum = ThisWorkbook.Path & "\ProjectNum.dat"
    Open PrjNum For Output As #2
            Write #2, InsertNum
    Close #2
    Call UserSetInit
    Settings.TBPrNum = ThisWorkbook.Sheets(1).Range("Q26").Value
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet112"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "UFManual"
Attribute VB_Base = "0{4165F79F-6457-420A-AD53-3E5DC649EE93}{73AC77D7-5FE4-4B44-884F-F3E6A3A19DAF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Sub CBManualModel_Click()
Dim Inserted_ACS, Manual_ACS, Lengh_ACS As String
Dim i, Plus_Count As Integer
Dim startOptionLengh As Integer
Dim startOptionSymbol As Boolean

Inserted_ACS = UFManual.TBManualACS
Lengh_ACS = Len(Inserted_ACS)

For i = 0 To Lengh_ACS
    Manual_ACS = Mid(Inserted_ACS, i + 1, 1)
    If Manual_ACS = "+" Or Manual_ACS = "" Then
        
        If Plus_Count = 0 Then
            ManualACS(Plus_Count) = Mid(Inserted_ACS, 1, i)
            startOptionLengh = i + 1 + 1
            startOptionSymbol = True
        Else
            If startOptionSymbol = True Then
                ManualACS(Plus_Count) = Mid(Inserted_ACS, startOptionLengh, i + 1 - startOptionLengh)
                startOptionSymbol = False
            End If
            startOptionLengh = i + 1 + 1
            startOptionSymbol = True
        End If
        Plus_Count = Plus_Count + 1
    Else
    End If
Next
UFManual.Hide
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| +V992'
For i = 1 To 10
    If ManualACS(i) = "V992" Then
        ManualACS(i) = ""
        ManualACS(0) = ManualACS(0) & "+V992"
    End If
' |fffd||fffd||fffd||fffd||fffd|
Next
UserForm1.ACS = ManualACS(0)
For i = 1 To 10
    UserForm1.Controls("Option" & i).SetFocus
    UserForm1.Controls("Option" & i).Value = ""
Next
For i = 1 To Plus_Count - 1
    UserForm1.Controls("Option" & i).SetFocus
    UserForm1.Controls("Option" & i).Value = ManualACS(i)
Next
End Sub

Private Sub LACS_Type_Click()

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{4C799C8F-EE10-4689-8D73-2DAE1D0018DB}{48C5D84C-0A45-4175-AA3E-5D407B2ECBA2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public SheetNum As Excel.Worksheet
Public Ctrl_Sel As Control
Public ACS_Type As String
Option Explicit

Private Sub ACS_Details2_Change()

End Sub

Private Sub DesignedBy_Click()
MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| | stanislav.chernikov@ru.abb.com", vbInformation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End Sub

Private Sub Frame1_Click()

End Sub

Private Sub TextBox3_Change()

End Sub

Public Sub Ver_Click()
With SWUpdates
    .TBUpdates.Value = ThisWorkbook.Worksheets("ACS Calculator").Range("Q17").Value
    'UserForm1.Ver.Caption & vbCrLf _
    '& vbTab & "- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| DCT880" & vbCrLf _
    '& vbTab & "- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|" & vbCrLf _
    '& vbTab & "- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| ACS800-01/02/04 |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ACS880" & vbCrLf _
    '& vbTab & "- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|" & vbCrLf _
    '& vbTab & "- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf
End With
SWUpdates.Show
End Sub
Public Sub UserForm_Initialize()
Dim i, m As Integer
Dim n As Integer
Call LicenseCheck
'Call UserSetInit
'Call PathChecker("")
Call FormatUserForm(Me.Caption)
'ActiveWindow.WindowState = xlMinimized
With UserForm1
    sCount = 0
    '.Ver.Caption = "Ver.: 3.7a"
    .Width = 531
    For i = 1 To 10
        .Controls("TBPosition" & i).BackColor = &H8000000F
        .Controls("TBCost" & i).BackColor = &H8000000F
        .Controls("TBQty" & i).BackColor = &H8000000F
        .Controls("LTotal" & i).BackColor = &H8000000F
        .Controls("LTotal" & i).Caption = ""
    Next
        Call ClearSheet
        .Total.Caption = ""
        .ACS_Article.Caption = ""
        iDiscount = 0
        ACS_Designated = ""
        .ACS_Details2.Value = ""
        .CMD.Value = ""
        .LTotalEx.Caption = ""
        .LVAT.Caption = ""
        .LTotalInc.Caption = ""
    ' CBACS Initialization
    n = 0
        ReDim ACSType(40, 3)
    Call WriteToACSTypeArray(n, "|fffd||fffd||fffd||fffd||fffd||fffd|", "-", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS880-01 220V", "FIDSTD", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS880-01 400V", "FIDSTD", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS880-01 690V", "FIDSTD", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS880-04", "FIDSTD", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
   ' Call WriteToACSTypeArray(n, "ACS880-07 400V", "FID", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    'Call WriteToACSTypeArray(n, "ACS880-07 690V", "FID", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
    'Call WriteToACSTypeArray(n, "ACS880-17", "FID", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    'Call WriteToACSTypeArray(n, "ACS880-37", "FID", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
    Call WriteToACSTypeArray(n, "-------------------------", "-------", "-------------------------")
        
    Call WriteToACSTypeArray(n, "ACS580-01 400V", "ACS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS580-04 400V", "ACS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS580-07 400V", "FID", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACQ580-01 400V", "ACS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACH580-01 400V", "ACS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
    Call WriteToACSTypeArray(n, "-------------------------", "-------", "-------------------------")
    
    Call WriteToACSTypeArray(n, "ACS150-01E 220V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS150-03E 400V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS310-01E 220V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS310-03E 400V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS355-01E 220V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "ACS355-03E 400V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
    Call WriteToACSTypeArray(n, "-------------------------", "-------", "-------------------------")
      
    Call WriteToACSTypeArray(n, "ACS380 400V", "ACSMIC", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|")
    
    Call WriteToACSTypeArray(n, "-------------------------", "-------", "-------------------------")
    
    Call WriteToACSTypeArray(n, "DCS550-S01 500V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "DCS550-S02 500V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "DCS800-S01 400V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "DCS800-S02 400V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "DCS800-S01 500V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Call WriteToACSTypeArray(n, "DCS800-S02 500V", "DCS", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    
    Erase ACSDetails, Unit_Type, GZM_Array, ManualACS
    .CBACS.List = ACSType
    .CBACS.ListRows = UBound(ACSType) + 1
    
    
    
End With
End Sub
Private Sub WriteToACSTypeArray(ByRef rowNum As Integer, ByVal col0 As String, ByVal col1 As String, ByVal col2 As String)
    ACSType(rowNum, 0) = col0
    ACSType(rowNum, 1) = col1
    ACSType(rowNum, 2) = col2
    rowNum = rowNum + 1
End Sub
Public Sub ClearSheet()
Dim i As Integer
With UserForm1
    .ACS = ""
    .ACS.Clear
    .ACS_Cost.Value = ""
   For i = 1 To 10
    .Controls("Option" & i).Clear
    .CBArticle.Clear
    .Controls("Option" & i).Value = ""
    .CBArticle.Value = ""
    .Controls("Option" & i).ControlTipText = ""
    .CBArticle.ControlSource = ""
    .Controls("ACS_Option" & i).Value = ""
    .TBArticle_Cost.Value = ""
Next
End With
End Sub
Private Sub CBExportToXML_Click()
    Dim sUser, sFilePath As String
    Dim fs, a As Object
    Dim j, i As Integer
    Dim strPath As String
    Dim textToXML As String
    sUser = Environ("USERNAME")
    'On Error GoTo ErrorHandle:
    textToXML = ""
    With UserForm1
        If sCount > 0 Then
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            strPath = Application.GetSaveAsFilename(FileFilter:= _
                "ACS Calculator (*.acsc), *.drive", Title:="Save Location")
            Set fs = CreateObject("Scripting.FileSystemObject")
            '|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "C:\Users\" & sUser & "\Desktop\" & "text.txt"
            Application.DefaultFilePath = "C:\Users\" & sUser & "\Desktop\"
            Set a = fs.CreateTextFile(strPath, True)
            a.Close
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Open strPath For Output As #2
                textToXML = "<?xml version=""1.0"" encoding=""UTF-8""?>" & vbCrLf _
                    & "<head>" & vbCrLf
                For j = 0 To sCount - 1
                    textToXML = textToXML _
                        & vbTab & "<Drive id=""" & j & """>" & vbCrLf _
                        & vbTab & vbTab & "<Position>" & .Controls("TBPosition" & j + 1).Value & "</Position>" & vbCrLf _
                        & vbTab & vbTab & "<Cost>" & .Controls("TBCost" & j + 1).Value & "</Cost>" & vbCrLf _
                        & vbTab & vbTab & "<Qty>" & .Controls("TBQty" & j + 1).Value & "</Qty>" & vbCrLf _
                        & vbTab & vbTab & "<Total>" & .Controls("LTotal" & j + 1).Caption & "</Total>" & vbCrLf _
                        & vbTab & vbTab & "<Description></Description>" & vbCrLf _
                        & vbTab & "</Drive>" & vbCrLf
                Next
                textToXML = textToXML & "</head>"
                Print #2, textToXML
            Close #2
        Else
            MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
    End With
Exit Sub
ErrorHandle:
      MsgBox Err.Description _
      & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
      vbExclamation, _
      "Error #" & Err.Number
      Close #2
      Exit Sub
End Sub
Public Sub CBOpenAs_Click()
With UserForm1
    Dim intChoice, i, GlobalCounter_Buffered As Integer
    Dim strPath, sUser, sLineFromFile  As String
    Dim sLineItems As Variant
    sUser = Environ("USERNAME")
    Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = False
    Application.FileDialog(msoFileDialogOpen _
        ).InitialFileName = "C:\Users\" & sUser & "\Desktop\"
        'Remove all other filters
        Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
        'Add a custom filter
        Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
            "Text Files Only", "*.txt")
    intChoice = Application.FileDialog(msoFileDialogOpen).Show
    If intChoice <> 0 Then
        'get the file path selected by the user
        strPath = Application.FileDialog( _
            msoFileDialogOpen).SelectedItems(1)
    End If
    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    sCount = 0
    'Erase Unit_Type
    On Error GoTo ErrorHandle
    Open strPath For Input As #1
        Do While Not EOF(1)
            Line Input #1, sLineFromFile
                sLineItems = Split(sLineFromFile, ",")
                '''''''''''''''''''''''''' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|'''''''''''''''
                If Mid(sLineItems(1), 1, 3) = "ACS" Or Mid(sLineItems(1), 1, 3) = "DCS" Or Mid(sLineItems(1), 1, 3) = "DCT" Or Mid(sLineItems(1), 1, 3) = "ACQ" Or Mid(sLineItems(1), 1, 3) = "ACH" Then
                    .CBACS = sLineItems(5)
                    Unit_Type(sLineItems(0) + 1) = sLineItems(5)
                    UFManual.TBManualACS.Value = sLineItems(1)
                    Call UFManual.CBManualModel_Click
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    Call Calculate_Click
                    Call IADD_Click
                
                Else
                    .CBArticle = sLineItems(1)
                    .TBArticle_Cost = sLineItems(2)
                    Call CBArticle_ADD_Click
                End If
                .Controls("TBPosition" & sLineItems(0) + 1).Value = sLineItems(1)
                .Controls("TBCost" & sLineItems(0) + 1).Value = sLineItems(2)
                .Controls("TBQty" & sLineItems(0) + 1).Value = sLineItems(3)
                .CBACS = ""
                .CBArticle = ""
            Loop
    Close #1
    Call RefreshTable
    Exit Sub
ErrorHandle:
      MsgBox Err.Description _
      & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
      vbExclamation, _
      "Error #" & Err.Number
      Close #1
      Exit Sub
End With
End Sub

Private Sub CBSaveAs_Click()
    Dim sUser, sFilePath As String
    Dim fs, a As Object
    Dim j, i As Integer
    Dim strPath As String
    sUser = Environ("USERNAME")
    'On Error GoTo ErrorHandle:
    
    With UserForm1
        If sCount > 0 Then
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
            strPath = Application.GetSaveAsFilename(FileFilter:= _
                "Text Files (*.txt), *.txt", Title:="Save Location")
            Set fs = CreateObject("Scripting.FileSystemObject")
            '|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "C:\Users\" & sUser & "\Desktop\" & "text.txt"
            Application.DefaultFilePath = "C:\Users\" & sUser & "\Desktop\"
            Set a = fs.CreateTextFile(strPath, True)
            a.Close
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            Open strPath For Output As #2
            For j = 0 To sCount - 1
                Print #2, j _
                    & "," & .Controls("TBPosition" & j + 1).Value _
                    & "," & .Controls("TBCost" & j + 1).Value _
                    & "," & .Controls("TBQty" & j + 1).Value _
                    & "," & .Controls("LTotal" & j + 1).Caption _
                    & "," & Unit_Type(j + 1)
            Next
        Close #2
        Else
            MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
    End With
Exit Sub
ErrorHandle:
      MsgBox Err.Description _
      & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
      vbExclamation, _
      "Error #" & Err.Number
      Close #2
      Exit Sub
End Sub

'Public Sub CBACS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'UserForm1.ACS.DropDown
'End Sub

Public Sub CBACS_Change()
    Dim i As Integer
On Error Resume Next
Set SheetNum = ThisWorkbook.Worksheets(ACSType((UserForm1.CBACS.ListIndex), 0))
ACS_Type = ACSType((UserForm1.CBACS.ListIndex), 0)
Call ClearSheet
Call ACSU(6, ACS_Type)
Call ACSO(7, ACS_Type)
End Sub
Private Sub ACS_Cost_Change()
UserForm1.ACS_Cost.Value = Replace(UserForm1.ACS_Cost.Value, ".", ",")
End Sub
Private Sub CBDecoder_Click()
With UserForm1
If .CBACS = "" _
        Then
            MsgBox "|fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ACS", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
        Else
            UFManual.LACS_Type = ACS_Type
            UFManual.TBManualACS = ""
            UFManual.TBManualACS = UserForm1.ACS
            UFManual.Show
End If
End With
End Sub
Private Sub CBArticle_Change()
Dim Found_1, Found_2 As Range
Dim sOptionCost As Currency
On Error Resume Next
With UserForm1
    If .CBArticle.Value <> "" Then
        Set Found_1 = SheetNum.Range("A1:HQ100").Find(.CBArticle.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
        Set Found_2 = SheetNum.Range("A1:HQ100").Find(.ACS.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
        sOptionCost = SheetNum.Cells(Found_2.Row, Found_1.Column).Value
        .CBArticle.ControlTipText = SheetNum.Cells(3, Found_1.Column).Value
        .TBArticle_Details = SheetNum.Cells(3, Found_1.Column).Value
        .TBArticle_Cost.Value = Replace(sOptionCost, ".", ",")
        
    Else
        .TBArticle_Cost.Value = ""
        .CBArticle.ControlTipText = ""
        .TBArticle_Details = ""
    End If
    If .Controls("ACS_" & GetActiveControl.Name) = 0 Then .Controls("ACS_" & GetActiveControl.Name) = "x" _
        & .TBArticle_Details = ""
    If .TBArticle_Cost.Value = 0 Then .TBArticle_Cost.Value = "x"
    
End With
End Sub
Public Sub CBArticle_ADD_Click()
Dim i As Integer
Dim iCountSum As Integer
Dim iOffset As Integer
With UserForm1
    On Error Resume Next
    If .CBArticle.Value <> "" And .TBArticle_Cost.Value <> "x" Then
        If sCount < 10 Then
            sCount = sCount + 1
            .Controls("TBPosition" & sCount).BackColor = vbWhite
            .Controls("TBCost" & sCount).BackColor = vbWhite
            .Controls("TBQty" & sCount).BackColor = vbWhite
            .Controls("LTotal" & sCount).BackColor = vbWhite
            .Controls("TBPosition" & sCount).Value = .CBArticle.Value
            .Controls("TBCost" & sCount).Value = .TBArticle_Cost.Value
            .Controls("TBQty" & sCount).Value = "1"
            Unit_Type(sCount) = ACS_Type
                Call RefreshTable
            ACSDetails(sCount) = ACSArray_Article(.CBArticle.ListIndex, 2)
            .CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & sCount & " " _
                & .CBArticle.Value & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                & vbCrLf & .CMD.Value
        Else
            MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        Else
     End If
End With
End Sub
Public Sub FSave_Click()
Dim i As Integer
Dim sOption As String
With UserForm1
    .TBSaved.Value = ""
    For i = 1 To 10
        sOption = .Controls("Option" & i).Value
        SavedOptions(i - 1) = sOption
        If sOption <> "" Then
            .TBSaved.Value = .TBSaved.Value & sOption & " "
        Else
        End If
    Next
End With
End Sub
Public Sub FApply_Click()
Dim i As Integer
Dim sOption As String
Dim Found_1, Found_2 As Range
Dim sOptionCost As Currency
On Error Resume Next
With UserForm1
    If .ACS <> "" And .ACS_Cost <> "" Then
    For i = 1 To 10
        .Controls("Option" & i) = ""
        .Controls("ACS_Option" & i) = ""
        .Controls("Option" & i).ControlTipText = ""
    Next
        For i = 1 To 10
            If SavedOptions(i - 1) <> "" And SavedOptions(i - 1) <> 0 Then
                .Controls("Option" & i) = SavedOptions(i - 1)
                Set Found_1 = SheetNum.Range("A1:HQ100").Find(.Controls("Option" & i), LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
                Set Found_2 = SheetNum.Range("A1:HQ100").Find(.ACS.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
                sOptionCost = SheetNum.Cells(Found_2.Row, Found_1.Column).Value
                .Controls("Option" & i).ControlTipText = SheetNum.Cells(3, Found_1.Column).Value
                .Controls("ACS_Option" & i) = Replace(sOptionCost, ".", ",")
            End If
            If .Controls("ACS_Option" & i) = 0 Then .Controls("ACS_Option" & i) = "x"
        Next
    Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
End With
End Sub
Private Sub Label19_Click()
Call FSave_Click
End Sub
Private Sub Label20_Click()
Call FApply_Click
End Sub
Private Sub Label18_Click()
Call CBArticle_ADD_Click
End Sub
Private Sub Label12_Click()
Call IRemove_Click
End Sub
Private Sub Label13_Click()
Call ITableReset_Click
End Sub
Private Sub Label14_Click()
Call ITableAdd_Click
End Sub
Private Sub LADD_Click()
Call IADD_Click
End Sub
Private Sub SCDiscount_Change()
UserForm1.TBDiscount = UserForm1.SCDiscount
End Sub
Public Sub TBDiscount_Change()
With UserForm1
        .TBDiscount = Replace(.TBDiscount, ",", ".")
        If IsNumeric(.TBDiscount.Value) Then
            iDiscount = .TBDiscount.Value
        Else
            .TBDiscount.Value = ""
            iDiscount = 0
        End If
End With
End Sub
Private Sub CMD_Change()
Dim myParas As Variant
myParas = Split(CMD.Text, vbNewLine)
If UBound(myParas) = 50 Then UserForm1.CMD.Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| 20 |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & UserForm1.CMD.Value
If UBound(myParas) = 70 Then UserForm1.CMD.Value = ""
End Sub
Private Sub Calculate_Click()
Dim sResult As Currency
Dim sInputVoltage As String
Dim sDetails, i As Integer
On Error Resume Next
If UserForm1.ACS.Value <> "" And UserForm1.ACS_Cost.Value <> "" Then
    sResult = 0 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 10
        UserForm1.Controls("Option" & i).BackColor = vbWhite
        If UserForm1.Controls("Option" & i) <> "" Or _
            UserForm1.Controls("ACS_Option" & i).Value <> "x" Or _
            IsNumeric(UserForm1.Controls("ACS_Option" & i).Value) = True Then _
                sResult = sResult + CCur(UserForm1.Controls("ACS_Option" & i))
    Next
    If UserForm1.ACS_Cost.Value <> "" Then sResult = sResult + CCur(ACS_Cost.Value) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 10
        If UserForm1.Controls("Option" & i) = "P904" Then
           sResult = Round(sResult * 1.02, 0)
           Exit For
        End If
        If UserForm1.Controls("Option" & i) = "P909" Then
           sResult = Round(sResult * 1.05, 0)
           Exit For
        End If
        If UserForm1.Controls("Option" & i) = "P931" Then
           sResult = Round(sResult * 1.06, 0)
           Exit For
        End If
        If UserForm1.Controls("Option" & i) = "P932" Then
           sResult = Round(sResult * 1.13, 0)
           Exit For
        End If
    Next
    UserForm1.Total.Caption = CStr(sResult) '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| Total
    UserForm1.ACS_Article.Caption = UserForm1.ACS.Value '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 10
         If UserForm1.Controls("Option" & i).Value <> "" And _
            UserForm1.Controls("ACS_Option" & i).Value <> "x" Or _
            IsNumeric(UserForm1.Controls("ACS_Option" & i).Value) = True Or _
            UserForm1.Controls("Option" & i).Value = "P904" Or _
            UserForm1.Controls("Option" & i).Value = "P909" Or _
            UserForm1.Controls("Option" & i).Value = "P931" Or _
            UserForm1.Controls("Option" & i).Value = "P932" Then
                ACS_Article.Caption = ACS_Article.Caption & "+" & UserForm1.Controls("Option" & i).Value
        End If
        If (UserForm1.Controls("ACS_Option" & i).Value = "x" Or _
            IsNumeric(UserForm1.Controls("ACS_Option" & i).Value) = False And _
            UserForm1.Controls("ACS_Option" & i).Value <> "") And _
            UserForm1.Controls("Option" & i).Value <> "P904" And _
            UserForm1.Controls("Option" & i).Value <> "P909" And _
            UserForm1.Controls("Option" & i).Value <> "P931" And _
            UserForm1.Controls("Option" & i).Value <> "P932" Then
                UserForm1.Controls("Option" & i).BackColor = vbRed
                UserForm1.ACS_Article.Caption = "" '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                UserForm1.Total.Caption = "" '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                MsgBox "|fffd||fffd||fffd||fffd||fffd| |fffd|" & i & " - '" & UserForm1.Controls("Option" & i).Value & "' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
                Exit Sub
        End If
    Next
    sInputVoltage = ACS_Designation_IV
    ACS_Designated = "U|fffd||fffd|: " & sInputVoltage & vbCrLf & vbCrLf
    Call ACS_Details '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    UserForm1.ACS_Details2.Value = ACS_Designated
    UserForm1.CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd| " _
        & UserForm1.ACS_Article.Caption & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & UserForm1.CMD.Value
Else
    MsgBox "|fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If

End Sub
Public Static Sub IADD_Click()
Dim iCountSum As Integer
Dim iOffset As Integer
With UserForm1
    If ACS_Article.Caption <> "" Then
        On Error Resume Next
        If sCount < 10 Then
            sCount = sCount + 1
            .Controls("TBPosition" & sCount).BackColor = vbWhite
            .Controls("TBCost" & sCount).BackColor = vbWhite
            .Controls("TBQty" & sCount).BackColor = vbWhite
            .Controls("LTotal" & sCount).BackColor = vbWhite
            .Controls("TBPosition" & sCount).Value = .ACS_Article.Caption
            'Desc!!!
            ACS_Art_Array(sCount) = ACS_Art
            .Controls("TBCost" & sCount).Value = .Total.Caption
            .Controls("TBQty" & sCount).Value = "1"
            Unit_Type(sCount) = ACS_Type
        Call RefreshTable
            ACSDetails(sCount) = ACS_Details2.Value
            UserForm1.CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & sCount & " " _
                & UserForm1.ACS_Article.Caption & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                & vbCrLf & UserForm1.CMD.Value
        Else
            MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, ""
        End If
        Else
     End If
End With
End Sub
Private Sub ITableAdd_Click()
With UserForm1
    If sCount < 10 Then
        sCount = sCount + 1
        .Controls("TBPosition" & sCount).BackColor = vbWhite
        .Controls("TBCost" & sCount).BackColor = vbWhite
        .Controls("TBQty" & sCount).BackColor = vbWhite
        .Controls("LTotal" & sCount).BackColor = vbWhite
            Call RefreshTable
        .CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & sCount & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
        & vbCrLf & .CMD.Value
    Else
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, ""
    End If
End With
End Sub
Public Sub IRemove_Click()
Dim iOffset As Integer
With UserForm1
    If sCount > 0 Then
        .CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & sCount & .Controls("TBPosition" & sCount).Value & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
        & vbCrLf & .CMD.Value
        .Controls("TBPosition" & sCount).BackColor = &H8000000F
        .Controls("TBCost" & sCount).BackColor = &H8000000F
        .Controls("TBQty" & sCount).BackColor = &H8000000F
        .Controls("LTotal" & sCount).BackColor = &H8000000F
        'Desc!!!
        ACS_Art_Array(sCount) = ""
        sCount = sCount - 1
            Call RefreshTable
    Else
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
End With
End Sub
Public Sub ITableReset_Click()
Dim i, iCount As Integer
With UserForm1
        .CMD.Value = Format(Time, "hh:mm:ss") & ": |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" _
        & vbCrLf & .CMD.Value
        sCount = 0
        .LTotalEx.Caption = ""
        .LVAT.Caption = ""
        .LTotalInc.Caption = ""
        For i = 1 To 10 '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
            ACSDetails(i) = ""
            Unit_Type(i) = ""
            .Controls("TBPosition" & i).BackColor = &H8000000F
            .Controls("TBPosition" & i).Value = ""
            .Controls("TBCost" & i).BackColor = &H8000000F
            .Controls("TBCost" & i).Value = ""
            .Controls("TBQty" & i).BackColor = &H8000000F
            .Controls("TBQty" & i).Value = ""
            .Controls("LTotal" & i).BackColor = &H8000000F
            .Controls("LTotal" & i).Caption = ""
            'UserForm1.Controls("LTotal" & i).BackColor = &H80000000
            'UserForm1.Controls("LTotal" & i).Value = ""
        Next
End With
End Sub
Private Sub CBTKP_Click()
If sCount > 0 Then
    'Call UserSetInit
    'QuotationData.Show
    Call Create_Quotation_Table_CVVersion
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Private Sub TBCost1_Change()
Call RefreshTable
End Sub
Private Sub TBCost2_Change()
Call RefreshTable
End Sub
Private Sub TBCost3_Change()
Call RefreshTable
End Sub
Private Sub TBCost4_Change()
Call RefreshTable
End Sub
Private Sub TBCost5_Change()
Call RefreshTable
End Sub
Private Sub TBCost6_Change()
Call RefreshTable
End Sub
Private Sub TBCost7_Change()
Call RefreshTable
End Sub
Private Sub TBCost8_Change()
Call RefreshTable
End Sub
Private Sub TBCost9_Change()
Call RefreshTable
End Sub
Private Sub TBCost10_Change()
Call RefreshTable
End Sub
Private Sub TBQty1_Change()
Call RefreshTable
End Sub
Private Sub TBQty2_Change()
Call RefreshTable
End Sub
Private Sub TBQty3_Change()
Call RefreshTable
End Sub
Private Sub TBQty4_Change()
Call RefreshTable
End Sub
Private Sub TBQty5_Change()
Call RefreshTable
End Sub
Private Sub TBQty6_Change()
Call RefreshTable
End Sub
Private Sub TBQty7_Change()
Call RefreshTable
End Sub
Private Sub TBQty8_Change()
Call RefreshTable
End Sub
Private Sub TBQty9_Change()
Call RefreshTable
End Sub
Private Sub TBQty10_Change()
Call RefreshTable
End Sub
Public Sub IRefresh_Click()
Call RefreshTable
End Sub
Public Sub ACS_Change() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i, j As Integer
Dim sFound1, sFound2 As Range
Dim vRes1 As Variant '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
UserForm1.ACS_Cost.Value = ""
On Error Resume Next
Err.Clear
        vRes1 = Application.WorksheetFunction.VLookup(ACS.Value, SheetNum.Range("A1:H100"), 6, False)
        Set sFound1 = SheetNum.Range("A1:HQ100").Find(ACS.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
    ' List Cost Update for + Code options
        For j = 0 To UBound(ACSArray)
            Set sFound2 = SheetNum.Range("A1:HQ100").Find(ACSArray(j, 0), LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
            If sFound2.Value <> "" Or sFound2.Value <> 0 Then
                ACSArray(j, 1) = SheetNum.Cells(sFound1.Row, sFound2.Column).Value
            Else
            End If
        Next
    ' End
    ' List Cost Update for Article options
        For j = 0 To UBound(ACSArray_Article)
            Set sFound2 = SheetNum.Range("A1:HQ100").Find(ACSArray_Article(j, 0), LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
            'MsgBox ACSArray_Article(j, 0) & " / " & sFound1.Row & " - " & sFound2.Column
            If sFound2.Value <> "" Or sFound2.Value <> 0 Then
                ACSArray_Article(j, 1) = SheetNum.Cells(sFound1.Row, sFound2.Column).Value
            Else
            End If
        Next
    'End
'Desc!!!
ACS_Art = CStr(SheetNum.Cells(sFound1.Row, (sFound1.Column + 4)).Value)

UserForm1.ACS_Cost.Value = vRes1
For i = 1 To 10
    With UserForm1
        .Controls("Option" & i).Value = ""
        .CBArticle.Value = ""
        .Controls("Option" & i).Clear
        .CBArticle.Clear
        .Controls("Option" & i).List = ACSArray
        .CBArticle.List = ACSArray_Article
        .Controls("ACS_Option" & i) = ""
        .TBArticle_Cost.Value = ""
    End With
Next
End Sub
Public Sub Option1_Change() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|1
Call GetOptionCost
UserForm1.Option2.Visible = True
End Sub
Public Sub Option2_Change()
Call GetOptionCost
UserForm1.Option3.Visible = True
End Sub
Public Sub Option3_Change()
Call GetOptionCost
UserForm1.Option4.Visible = True
End Sub
Public Sub Option4_Change()
Call GetOptionCost
UserForm1.Option5.Visible = True
End Sub
Public Sub Option5_Change()
Call GetOptionCost
UserForm1.Option6.Visible = True
End Sub
Public Sub Option6_Change()
Call GetOptionCost
UserForm1.Option7.Visible = True
End Sub
Public Sub Option7_Change()
Call GetOptionCost
UserForm1.Option8.Visible = True
End Sub
Public Sub Option8_Change()
Call GetOptionCost
UserForm1.Option9.Visible = True
End Sub
Public Sub Option9_Change()
Call GetOptionCost
UserForm1.Option10.Visible = True
End Sub
Public Sub Option10_Change()
Call GetOptionCost
End Sub
Public Function GetOptionCost()
Dim Found_1, Found_2 As Range
Dim sOptionCost As Currency
On Error Resume Next
With UserForm1
    If .Controls(GetActiveControl.Name).Value <> "" Then
        Set Found_1 = SheetNum.Range("A1:HQ100").Find(.Controls(GetActiveControl.Name).Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
        Set Found_2 = SheetNum.Range("A1:HQ100").Find(.ACS.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
        sOptionCost = SheetNum.Cells(Found_2.Row, Found_1.Column).Value
        .Controls(GetActiveControl.Name).ControlTipText = SheetNum.Cells(3, Found_1.Column).Value
        .Controls("ACS_" & GetActiveControl.Name) = Replace(sOptionCost, ".", ",")
    Else
        .Controls("ACS_" & GetActiveControl.Name) = ""
        .Controls(GetActiveControl.Name).ControlTipText = ""
    End If
    If .Controls("ACS_" & GetActiveControl.Name) = "0" Then .Controls("ACS_" & GetActiveControl.Name) = "x"
End With
End Function
Public Function GetActiveControl() As MSForms.Control
Dim ctl As MSForms.Control
    Set ctl = Me.ActiveControl
    Select Case TypeName(ctl)
        Case "Frame"
            Set GetActiveControl = ctl.ActiveControl
        Case Else
            Set GetActiveControl = ctl
        End Select
End Function
Function ACSU(ByVal sRow As Integer, ByVal sACSType As String) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim i, j, m As Integer
For j = 0 To UBound(ACSUArray)
    ACSUArray(j, 0) = ""
    ACSUArray(j, 1) = ""
    ACSUArray(j, 2) = ""
    ACSUArray(j, 3) = ""
Next
For i = 1 To 100
     If SheetNum.Cells(sRow, "A").Value <> 0 Then
        ACSUArray(i, 0) = SheetNum.Cells(sRow, 1).Value
        ACSUArray(i, 1) = SheetNum.Cells(sRow, 6).Value
        ACSUArray(i, 2) = SheetNum.Cells(sRow, 2).Value
        ACSUArray(i, 3) = SheetNum.Cells(sRow, 3).Value
    Else
    End If
    sRow = sRow + 1
Next
ACSUArray(0, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
ACSUArray(0, 1) = "|fffd||fffd||fffd||fffd|"
ACSUArray(0, 2) = SheetNum.Cells(4, "B").Value
ACSUArray(0, 3) = SheetNum.Cells(4, "C").Value
UserForm1.ACS.Clear
UserForm1.ACS.List = ACSUArray()
'For i = 0 To UserForm1.ACS.ListCount - 1
'    If UserForm1.ACS.List(i) = "" Then
'        UserForm1.ACS.RemoveItem (i)
'    End If
'Next
End Function
Function ACSO(ByVal sColumnNum As Integer, ByVal sACSType As String) ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 10 |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim i, iArrayRow, iArrayRow2, j As Integer
Dim sY As Integer
iArrayRow = 0
iArrayRow2 = 0
For j = 0 To UBound(ACSArray)
    ACSArray(j, 0) = ""
    ACSArray(j, 1) = ""
    ACSArray(j, 2) = ""
Next
For j = 0 To UBound(ACSArray_Article)
    ACSArray_Article(j, 0) = ""
    ACSArray_Article(j, 1) = ""
    ACSArray_Article(j, 2) = ""
Next
For i = 1 To 500
    If SheetNum.Cells(4, sColumnNum + i).Value <> "" And Len(SheetNum.Cells(4, sColumnNum + i).Value) < 6 Then
            ACSArray(iArrayRow, 0) = SheetNum.Cells(4, sColumnNum + i).Value
            ACSArray(iArrayRow, 2) = SheetNum.Cells(3, sColumnNum + i).Value
            iArrayRow = iArrayRow + 1
    Else
        If Len(SheetNum.Cells(4, sColumnNum + i).Value) >= 6 Then
            ACSArray_Article(iArrayRow2, 0) = SheetNum.Cells(4, sColumnNum + i).Value
            ACSArray_Article(iArrayRow2, 2) = SheetNum.Cells(3, sColumnNum + i).Value
            iArrayRow2 = iArrayRow2 + 1
        End If
    End If
Next
For i = 1 To 10
    UserForm1.Controls("Option" & i).List = ACSArray()
Next
    UserForm1.CBArticle.List = ACSArray_Article()
End Function
Function ACS_Designation_IV() As String
Dim sLen, ACS_Designation_IVv As String
Dim sVoltageClass As String
sLen = Len(ACS.Value)
If UserForm1.ACS <> "" And UserForm1.ACS_Cost <> "" Then
    'Desc!
    If sLen <= 16 Then
        sVoltageClass = Mid(ACS.Value, sLen, 1)
    ElseIf sLen = 17 Then 'ACS580-07
        sVoltageClass = Mid(ACS.Value, 17, 1)
    Else
        sVoltageClass = Mid(ACS.Value, 16, 1)
    End If
    'sVoltageClass = Mid(ACS.Value, sLen, 1)
Else
    sVoltageClass = 666
End If
Select Case sVoltageClass
    Case "2"
        If sLen > 16 Then
            sVoltageClass = Mid(ACS.Value, sLen - 5, 1)
            Select Case sVoltageClass
                Case "3"
                    ACS_Designation_IVv = "380 - 415 |fffd|, |fffd| 10%"
                Case "5"
                    ACS_Designation_IVv = "380 - 525 |fffd|, |fffd| 10%"
                Case "7"
                    ACS_Designation_IVv = "525 - 690 |fffd|, |fffd| 10%"
            End Select
        Else
            ACS_Designation_IVv = "230 |fffd|, |fffd| 10%"
        End If
    Case "3"
    ACS_Designation_IVv = "380 - 415 |fffd|, |fffd| 10%"
    Case "4"
    ACS_Designation_IVv = "380 - 415 |fffd|, |fffd| 10%"
    Case "5"
    ACS_Designation_IVv = "380 - 525 |fffd|, |fffd| 10%"
    Case "7"
    ACS_Designation_IVv = "525 - 690 |fffd|, |fffd| 10%"
    Case "666"
    ACS_Designation_IVv = ""
End Select

If Left(ACS.Value, 9) = "ACS580-04" Then ACS_Designation_IVv = "380 - 415 |fffd|, |fffd| 10%" & vbCrLf & vbCrLf _
& "IP20" & vbCrLf _
& "E208 - Common mode filter" & vbCrLf _
& "E210 - EMC/RFI-filter, Cat C3, 2nd Env., Earthed/Unearthed Network" & vbCrLf _
& "J400 - ACS-AP-S Assistant Control Panel" & vbCrLf _
& "J410 - Control panel mounting kit"
ACS_Designation_IV = ACS_Designation_IVv
'If ACSType(UserForm1.CBACS.ListIndex, 1) = 1 Then ACS_Designation_IV = "230 - 525 |fffd|, |fffd|10%"
End Function
Function ACS_Details()
Dim sFound As Range
On Error Resume Next
Dim i As Integer
For i = 1 To 10
    If UserForm1.Controls("Option" & i).Value <> "" Then
        Set sFound = SheetNum.Range("A1:HQ100").Find(UserForm1.Controls("Option" & i).Value, _
            LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False, SearchFormat:=False)
        ACS_Designated = ACS_Designated + UserForm1.Controls("Option" & i).Value _
        & " - " & SheetNum.Cells(sFound.Row - 1, sFound.Column).Value & vbCrLf
    Else
    End If
Next
End Function
Public Function RefreshTable()
Dim iCount As Integer
Dim iCountEnd As String
With UserForm1
    .LTotalEx.Caption = 0
    .LVAT.Caption = 0
    .LTotalInc.Caption = 0
    iCountEnd = sCount
    On Error Resume Next
        For iCount = 1 To iCountEnd
        .Controls("LTotal" & iCount).Caption = .Controls("TBCost" & iCount).Value * .Controls("TBQty" & iCount).Value
        .LTotalEx.Caption = CCur(.LTotalEx.Caption) + CCur(.Controls("LTotal" & iCount).Caption)
        Next
    .LVAT.Caption = CCur(.LTotalEx.Caption) * 0.2
    .LTotalInc.Caption = CCur(.LTotalEx.Caption) + CCur(.LVAT.Caption)
    If .LTotalEx.Caption = 0 Then .LTotalEx.Caption = ""
    If .LVAT.Caption = 0 Then .LVAT.Caption = ""
    If .LTotalInc.Caption = 0 Then .LTotalInc.Caption = ""
End With
End Function
Public Sub Create_Quotation_Table_CVVersion()
Dim xlAPP As Excel.Application
Dim xlbook As Excel.Workbook
Dim WS As Excel.Worksheet
Dim i, j, k As Integer
Dim CBConditions, sPosition, sCost, sQty, sTotal, sTotalEx, sVAT, sTotalInc, sDelivery, sDDP, sTKPRegion, sTKPDate, sTKPNum As String

Dim Art As String

If sCount > 0 Then
    Application.ScreenUpdating = False
    Set xlAPP = CreateObject("Excel.Application")
    Set xlbook = xlAPP.Workbooks.Add
    Set WS = xlbook.Worksheets(1)
    xlAPP.Visible = True
    On Error Resume Next
    For j = 0 To sCount - 1
        sPosition = UserForm1.Controls("TBPosition" & j + 1).Value
        sCost = UserForm1.Controls("TBCost" & j + 1).Value
        sQty = UserForm1.Controls("TBQty" & j + 1).Value
        sTotal = UserForm1.Controls("LTotal" & j + 1).Caption
        xlbook.Sheets(1).Cells(1, "A").Value = "|fffd|"
        

        xlbook.Sheets(1).Cells(1, "B").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /" & vbCrLf & "Description of equipment"
        xlbook.Sheets(1).Cells(1, "C").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Price per unit, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(1, "D").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|. /" & vbCrLf & "Quantity, pcs."
        xlbook.Sheets(1).Cells(1, "E").Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| /" & vbCrLf & "Total price, EUR VAT Excluded"
        xlbook.Sheets(1).Cells(j + 2, "A").Value = j + 1
        'Desc Art = ACS_Art_Array(j + 1)
        Art = ACS_Art_Array(j + 1)
        If Art = "" Then
            xlbook.Sheets(1).Cells(j + 2, "B").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        Else
            xlbook.Sheets(1).Cells(j + 2, "B").Value = Art & vbCrLf & sPosition & vbCrLf & ACSDetails(j + 1)
        End If
        'Desc!
        'xlbook.Sheets(1).Cells(j + 2, "B").Value = sPosition & vbCrLf & ACSDetails(j + 1)
        xlbook.Sheets(1).Cells(j + 2, "C").Value = CCur(sCost) * (1 - iDiscount / 100)
        xlbook.Sheets(1).Cells(j + 2, "D").Value = sQty
        'xlbook.Sheets(1).Cells(j + 2, "E").Value = CCur(sCost) * (1 - iDiscount / 100) * sQty
        xlbook.Sheets(1).Cells(j + 2, "E").Value = "=C" & (j + 2) & "*D" & (j + 2)
    Next
    xlbook.Sheets(1).Cells(sCount + 2, 5).Value = "=SUM(E2:E" & (j + 1) & ")"
    xlbook.Sheets(1).Cells(sCount + 3, 5).Value = "=E" & (j + 2) & "*0.2"
    xlbook.Sheets(1).Cells(sCount + 4, 5).Value = "=E" & (j + 2) & "+" & "E" & (j + 3)
    
    xlbook.Sheets(1).Cells(sCount + 6, "A").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    xlbook.Sheets(1).Cells(sCount + 7, "A").Value = "|fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 8, "A").Value = "|fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| DCS |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 9, "A").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|/|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.  |fffd||fffd||fffd| |fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|), |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    xlbook.Sheets(1).Cells(sCount + 6, "A").WrapText = False
    xlbook.Sheets(1).Cells(sCount + 7, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1, "A").Value = QuotationData.CBConditions.Value
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: " & sDelivery & " |fffd||fffd||fffd||fffd||fffd||fffd|"
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").WrapText = False
    'xlbook.Sheets(1).Cells(sCount + 5 + 1 + 1 + 1, "A").Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: DDP " & sDDP
Call ExcelFormatting_CVVersion(xlbook)
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End Sub
Public Function ExcelFormatting_CVVersion(ByVal xlbook As Excel.Workbook)
Dim k, j As Integer
Application.ScreenUpdating = False
xlbook.Sheets(1).Rows(1).RowHeight = 55
xlbook.Sheets(1).Rows(1).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 2).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 3).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 3).NumberFormat = "0.00"
xlbook.Sheets(1).Rows(sCount + 4).Font.Bold = True
xlbook.Sheets(1).Rows(sCount + 4).NumberFormat = "0.00"
xlbook.Sheets(1).Columns(1).ColumnWidth = 3
xlbook.Sheets(1).Columns(2).ColumnWidth = 65
xlbook.Sheets(1).Columns(3).ColumnWidth = 26
xlbook.Sheets(1).Columns(4).ColumnWidth = 18
xlbook.Sheets(1).Columns(5).ColumnWidth = 26
xlbook.Sheets(1).Columns(5).Font.Bold = True
xlbook.Sheets(1).Range("A1:Z99").Font.Name = "Arial"
xlbook.Sheets(1).Range("A1:Z99").Font.Size = 10
xlbook.Sheets(1).Range("A1:Z99").HorizontalAlignment = xlLeft
xlbook.Sheets(1).Range("A1:Z99").VerticalAlignment = xlTop
For j = 0 To sCount - 1
    For k = 1 To 5
        xlbook.Sheets(1).Cells(1, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(j + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k = 3 Or k = 5 Then xlbook.Sheets(1).Cells(j + 2, k).NumberFormat = "0.00"
        xlbook.Sheets(1).Cells(sCount + 2, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 3, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        xlbook.Sheets(1).Cells(sCount + 4, k).BorderAround , _
            LineStyle:=xlContinuous, _
            Weight:=xlThin, _
            ColorIndex:=1
        If k < 5 Then xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
        xlbook.Sheets(1).Cells(1, k).Interior.Color = &HE0E0E0
    Next
Next
xlbook.Sheets(1).Cells(sCount + 2, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Excluded, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 2, 1), xlbook.Sheets(1).Cells(sCount + 2, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 2, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 2, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 2, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 2, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 1).Value = "|fffd||fffd||fffd|, % / VAT, %"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 3, 1), xlbook.Sheets(1).Cells(sCount + 3, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 3, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 3, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 3, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 3, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 1).Value = "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| / TOTAL VAT Included, EUR"
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 4, 1), xlbook.Sheets(1).Cells(sCount + 4, 4)).Merge
xlbook.Sheets(1).Cells(sCount + 4, 1).HorizontalAlignment = xlRight
xlbook.Sheets(1).Cells(sCount + 4, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 4, 1).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Cells(sCount + 4, 5).Interior.Color = &HE0E0E0
xlbook.Sheets(1).Range(xlbook.Sheets(1).Cells(sCount + 9, 1), xlbook.Sheets(1).Cells(sCount + 9, 5)).Merge
xlbook.Sheets(1).Cells(sCount + 9, 1).HorizontalAlignment = xlLeft
xlbook.Sheets(1).Cells(sCount + 9, 1).VerticalAlignment = xlTop
xlbook.Sheets(1).Cells(sCount + 9, "A").WrapText = True
xlbook.Sheets(1).Rows(sCount + 9).RowHeight = 96
Application.ScreenUpdating = True
End Function
Private Sub TBPosition1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition1.Value, 0)
End Sub
Private Sub TBPosition2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition2.Value, 1)
End Sub
Private Sub TBPosition3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition3.Value, 2)
End Sub
Private Sub TBPosition4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition4.Value, 3)
End Sub
Private Sub TBPosition5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition5.Value, 4)
End Sub
Private Sub TBPosition6_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition6.Value, 5)
End Sub
Private Sub TBPosition7_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition7.Value, 6)
End Sub
Private Sub TBPosition8_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition8.Value, 7)
End Sub
Private Sub TBPosition9_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition9.Value, 8)
End Sub
Private Sub TBPosition10_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Call DecodeArticleToProject(UserForm1.TBPosition10.Value, 9)
End Sub
Public Sub DecodeArticleToProject(ByVal article As String, ByVal num As Integer)
'''''''''''''''''''''''''' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim Inserted_ACS, Manual_ACS, Lengh_ACS As String
Dim Plus_Count As Integer
Dim i As Integer
Dim startOptionLengh As Integer
Dim startOptionSymbol As Boolean
Dim noMsgBoxMask As Integer
With UserForm1
    noMsgBoxMask = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|?", vbYesNo, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    'noMsgBoxMask = 6 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    If noMsgBoxMask = 6 Then
        Inserted_ACS = article
        Lengh_ACS = Len(Inserted_ACS)
        Plus_Count = 0
        If Mid(Inserted_ACS, 1, 3) = "ACS" Or Mid(Inserted_ACS, 1, 3) = "DCS" Or Mid(Inserted_ACS, 1, 3) = "DCT" Or Mid(Inserted_ACS, 1, 3) = "ACH" Or Mid(Inserted_ACS, 1, 3) = "ACQ" Then
            For i = 0 To Lengh_ACS
                Manual_ACS = Mid(Inserted_ACS, i + 1, 1)
                If Manual_ACS = "+" Or Manual_ACS = "" Then
                    If Plus_Count = 0 Then
                        ManualACS(Plus_Count) = Mid(Inserted_ACS, 1, i)
                        startOptionLengh = i + 1 + 1
                        startOptionSymbol = True
                    Else
                        If startOptionSymbol = True Then
                            ManualACS(Plus_Count) = Mid(Inserted_ACS, startOptionLengh, i + 1 - startOptionLengh)
                            startOptionSymbol = False
                        End If
                        startOptionLengh = i + 1 + 1
                        startOptionSymbol = True
                    End If
                    Plus_Count = Plus_Count + 1
                Else
                End If
            Next
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| +V992'
            For i = 1 To 10
                If ManualACS(i) = "V992" Then
                    ManualACS(i) = ""
                    ManualACS(0) = ManualACS(0) & "+V992"
                End If
            ''''''''' |fffd||fffd||fffd||fffd||fffd|
            .CBACS = Unit_Type(num + 1)
            .ACS = ManualACS(0)
            Next
            For i = 1 To Plus_Count - 1
                UserForm1.Controls("Option" & i).SetFocus
                UserForm1.Controls("Option" & i).Value = ManualACS(i)
            Next
            'Call Calculate_Click
        Else
            .CBACS = Unit_Type(num + 1)
            .CBArticle = Inserted_ACS
            .TBArticle_Cost = .Controls("TBCost" & num + 1).Value
        End If
    End If
End With
    ''''
End Sub
Private Sub GetPricesFromExcelTable_Click() '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Dim article As String
Dim i, j As Integer
On Error Resume Next
For i = 2 To 890
        UserForm1.CBArticle.Value = ""
        UserForm1.CBArticle.Clear
        UserForm1.CBACS.Value = ""
        UserForm1.Total.Caption = ""
    For j = 1 To 10
        UserForm1.Controls("Option" & j).Value = ""
        UserForm1.Controls("Option" & j).Clear
    Next
    article = ThisWorkbook.Sheets("Sheet1").Cells(i, "B").Value
    Unit_Type(1) = ThisWorkbook.Sheets("Sheet1").Cells(i, "I").Value
    Call DecodeArticleToProject(article, 0)
    If UserForm1.Total.Caption <> "" Then
        ThisWorkbook.Sheets("Sheet1").Cells(i, "G").Value = UserForm1.Total.Caption
    Else
        ThisWorkbook.Sheets("Sheet1").Cells(i, "G").Value = "n/a"
    End If
Next
MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd|"
End Sub
Attribute VB_Name = "UserSettings"
Public sFirst, sSecond, sUsername, sRegion, sDDPDefault, sLastPrNum, datUS, PrjNum, SaveAsPathFile, SaveAsPathDefault  As String
Public Sub UserSetInit()
Dim TextLine
On Error GoTo ErrorHandle
datUS = ThisWorkbook.Path & "\UserSettings.dat"
PrjNum = ThisWorkbook.Path & "\ProjectNum.dat"
Open datUS For Input As #1
Do While Not EOF(1)
Input #1, sFirst, sSecond
Select Case sFirst
    Case "Region"
        sRegion = sSecond
    Case "Username"
        sUsername = sSecond
    Case "DDP_Default"
        sDDPDefault = sSecond
    Case "LastPrNum"
        sLastPrNum = sSecond
    End Select
Loop
Close #1

ThisWorkbook.Sheets(1).Range("V2").Value = sUsername
ThisWorkbook.Sheets(1).Range("V3").Value = sRegion
ThisWorkbook.Sheets(1).Range("V4").Value = sDDPDefault
If hasLine_TKPSaveAsPath = True Then
    Open sTKPSaveAsPath For Output As #2
            Write #2, InsertNum
    Close #2
    Call UserSetInit
End If

Open PrjNum For Input As #1
Do While Not EOF(1)
    Input #1, sFirst
    sLastPrNum = sFirst
Loop
Close #1
ThisWorkbook.Sheets(1).Range("Q26").Value = sLastPrNum
Call PathChecker("")
Exit Sub
ErrorHandle:
  MsgBox Err.Description _
  & vbCrLf & "|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", _
  vbExclamation, _
  "Error #" & Err.Number
  End
End Sub
Public Function PathChecker(ByVal pathNameString As String) As String
''' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| TKP_SaveAs_Path, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '''
On Error GoTo ErrorHandle
Dim hasLine_TKPSaveAsPath As Boolean
hasLine_TKPSaveAsPath = False
SaveAsPathFile = ThisWorkbook.Path & "\TKPSaveAsPath.dat"
SaveAsPathDefault = "C:\Users\" & Environ("USERNAME") & "\Desktop\"

If pathNameString = "" Then
    pathNameString = SaveAsPathDefault
    Open SaveAsPathFile For Input As #1
    Do While Not EOF(1)
        Input #1, sFirst
            If sFirst = "" Then
                hasLine_TKPSaveAsPath = False
            Else
                hasLine_TKPSaveAsPath = True
            End If
    Loop
    Close #1
    If hasLine_TKPSaveAsPath = False Then
        Open SaveAsPathFile For Output As #1
            Write #1, pathNameString
        Close #1
        PathChecker = pathNameString
    Else
        Open SaveAsPathFile For Input As #1
        Do While Not EOF(1)
            Input #1, sFirst
            PathChecker = sFirst
        Loop
        Close #1
    End If
Else
    Open SaveAsPathFile For Output As #1
        Write #1, pathNameString & "\"
    Close #1
    PathChecker = pathNameString & "\"
End If
Exit Function
ErrorHandle:
  MsgBox Err.Description _
  & vbCrLf & "|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", _
  vbExclamation, _
  "Error #" & Err.Number
  End
End Function

' InQuest injected base64 decoded content
' '%y:
' L\zT

INQUEST-PP=macro
