Attribute VB_Name = "Funkce"
Option Explicit
Public Sesit As Workbook, List As Worksheet, Vystup As Worksheet, KTList As Worksheet, Prerus As Boolean, Odeslano As Boolean, BinHod As String * 9, Kde_soubor As String, Hlavicka As Range
Public Const vbKdeBez As Byte = 0, vbKdeRad As Byte = 1, vbKdeSlo As Byte = 2, vbKdeAdr As Byte = 3, vbVysRad As Byte = 16
Public Const vbVysSlo As Byte = 32, vbVysAdr As Byte = 48, vbVysNah As Integer = 256
Function Zacatek(VystupniList As String, VstupniList As String, Optional Ukonci As Boolean = True) As Boolean
 Select Case GetSetting("rrokyta", "Makra", "Spustit")
  Case "STOP"
   Stop
  Case "ZRUS"
   Zacatek = False
   Exit Function
 End Select
 Application.Calculation = xlManual
 Zacatek = True
 Set Sesit = ActiveWorkbook
 Kde_soubor = Sesit.Name
 On Error Resume Next
 Application.StatusBar = "|fffd|ekejte pros|fffd|m, zpracov|fffd|v|fffd|m data"
 Sesit.BuiltinDocumentProperties("Author").Value = "Richard Rokyta (richard.rokyta@vig.cz)"
 Sesit.BuiltinDocumentProperties("Company").Value = "IT VIG |fffd|R"
 Sesit.BuiltinDocumentProperties("Subject").Value = "Verze maker 0.0.45 ze dne 24.03.2017"
 If VystupniList <> "" Then
  Set Vystup = Sesit.Worksheets(VystupniList)
  If Err <> 0 Then
   Err = 0
   If Ukonci Then
    Call Chyba(Kde_soubor, "Nenalezen list " & VystupniList, True, True)
   Else
    Zacatek = False
   End If
  End If
 End If
 If VstupniList <> "" Then
  Set List = Sesit.Worksheets(VstupniList)
  If Err <> 0 Then
   Err = 0
   If Ukonci Then
    Call Chyba(Kde_soubor, "Nenalezen list " & VstupniList, True, True)
   Else
    Zacatek = False
   End If
  End If
 End If
 On Error GoTo 0
End Function
Sub Konec(Optional nic As Boolean)
 Application.Calculation = xlAutomatic
 Application.Calculate
 Application.StatusBar = False
End Sub
Sub SmazList(Kde_soubor As String, Kde_list As String)
 Application.DisplayAlerts = False
  Workbooks(Kde_soubor).Worksheets(Kde_list).Delete
 Application.DisplayAlerts = True
End Sub
Function Hledej(Kde_soubor As String, Kde_list As String, Hledat As String, Volby As Integer, Optional ByVal Kde As String, Optional Cim As String) As String
 Dim Bunka As Range, Delka As Byte
 Prerus = True
 On Error Resume Next
 BinHod = DecToBin(Volby, 9)
 Delka = Len(BinHod)
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  Select Case Mid(BinHod, Delka - 1, 2)
   Case "00"
    Kde = .Range(Cells(1, 1).Address, Cells(Rows.Count, Columns.Count).Address).Address
   Case "01"
    Kde = .Rows(CLng(Kde)).Address
   Case "10"
    Kde = .Columns(CByte(Kde)).Address
   Case "11"
    Kde = .Range(Kde).Address
  End Select
  Hledej = .Range(Kde).Find(Hledat, MatchCase:=True).Address
  If Err = 0 Then
   Prerus = False
   If Mid(BinHod, Delka - 8, 1) = "1" Then .Range(Hledej).Value = Replace(.Range(Hledej).Value, Hledat, Cim)
   Select Case Mid(BinHod, Delka - 5, 2)
    Case "01"
     Hledej = .Range(Hledej).Row
    Case "10"
     Hledej = .Range(Hledej).Column
   End Select
  Else
   Hledej = 1
  End If
 End With
 On Error GoTo 0
End Function
Sub DefNazev(Kde_soubor As String, Kde_list As String, Jmeno As String, ByVal Sloupec1 As Byte, ByVal Sloupec2 As Byte, ByVal Radek1 As Long, ByVal Radek2 As Long)
 Workbooks(Kde_soubor).Worksheets(Kde_list).Range(Cells(Radek1, Sloupec1).Address, Cells(Radek2, Sloupec2).Address).Name = Jmeno
End Sub
Sub DelNazev(Kde_soubor As String)
 Dim Nazvy As Variant
 For Each Nazvy In Workbooks(Kde_soubor).Names
  Nazvy.Delete
 Next Nazvy
End Sub
Sub Preved(Kde_soubor As String, Kde_list As String, NaRadku As Long, Optional Radku As Long, Optional Akce As Byte)
 Dim Sloupec As Byte, Pocatek As Integer, Konec As Integer, Plus As Byte, Podm As String
 If Radku = 0 Then Radku = HledejKonec(Kde_soubor, Kde_list, vbKdeRad)
 Call PrevedPol(Kde_soubor, Kde_list, "^ks^", NaRadku, Akce, Radku, "# ##0")
 Call PrevedPol(Kde_soubor, Kde_list, "^d1^", NaRadku, Akce, Radku, "# ##0,0")
 Call PrevedPol(Kde_soubor, Kde_list, "^d2^", NaRadku, Akce, Radku, "# ##0,00")
 Call PrevedPol(Kde_soubor, Kde_list, "^d3^", NaRadku, Akce, Radku, "# ##0,000")
 If Akce = 10 Then
  Call PrevedPol(Kde_soubor, Kde_list, "^num^", NaRadku, 3, Radku, "0")
 Else
  Call PrevedPol(Kde_soubor, Kde_list, "^num^", NaRadku, Akce, Radku, "0")
 End If
 Call PrevedPol(Kde_soubor, Kde_list, "^K|fffd|^", NaRadku, Akce, Radku, "# ##0 K|fffd|")
 Call PrevedPol(Kde_soubor, Kde_list, "^%^", NaRadku, Akce, Radku, "0,00%")
 Call PrevedPol(Kde_soubor, Kde_list, "^datum^", NaRadku, Akce, Radku, "d.m.rrrr")
 Call PrevedPol(Kde_soubor, Kde_list, "^psc^", NaRadku, Akce, Radku, "000 00")
 Call PrevedPol(Kde_soubor, Kde_list, "^secti^", NaRadku, 1, Radku)
 Call PrevedPol(Kde_soubor, Kde_list, "^pocet^", NaRadku, 4, Radku)
 Call PrevedPol(Kde_soubor, Kde_list, "^radky^", NaRadku, 2, Radku, "^")
 Do
  Call Hledej(Kde_soubor, Kde_list, "^bod^", vbKdeRad + vbVysNah, NaRadku, ".")
 Loop Until Prerus
 Do
  Call Hledej(Kde_soubor, Kde_list, "^zal^", vbKdeRad + vbVysNah, NaRadku, Chr(10))
 Loop Until Prerus
 Do
  Sloupec = Hledej(Kde_soubor, Kde_list, "^pre_", vbKdeRad + vbVysSlo, NaRadku)
  If Not (Prerus) Then
   With Workbooks(Kde_soubor).Worksheets(Kde_list)
    Pocatek = InStr(1, .Cells(NaRadku, Sloupec).Value, "^pre_") + 5
    Konec = InStr(Pocatek, .Cells(NaRadku, Sloupec).Value, "^")
    Podm = Mid(.Cells(NaRadku, Sloupec).Value, Pocatek, Konec - Pocatek)
    .Cells(NaRadku, Sloupec).Value = Left(.Cells(NaRadku, Sloupec).Value, Pocatek - 6) & Mid(.Cells(NaRadku, Sloupec).Value, Konec + 1)
    Plus = Left(Podm, InStr(1, Podm, "_") - 1)
    .Range(Columns(Sloupec).Address, Columns(Sloupec + Plus).Address).Cut
    .Columns(CByte(Mid(Podm, InStr(1, Podm, "_") + 1))).Insert (xlToRight)
   End With
  End If
 Loop Until Prerus
End Sub
Sub PrevedPol(Kde_soubor As String, Kde_list As String, Hledat As String, NaRadku As Long, Akce As Byte, Optional Radku As Long, Optional Hodnota As String)
 Dim Bunka As Range, Sloupec As Byte, Uprav As Integer, Pridat As String, DalsiSloupec As Byte, ObsahBunky As Variant, ObsahBunky2 As String
 Sloupec = Hledej(Kde_soubor, Kde_list, Hledat, vbKdeRad + vbVysSlo + vbVysNah, NaRadku, "")
 If Prerus Then Exit Sub
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  Select Case Akce
   Case 0, 10
    .Columns(Sloupec).NumberFormatLocal = Hodnota
    If Hledat = "^%^" Then
     Uprav = 100
    Else
     Uprav = 1
    End If
    If Akce = 10 Then
     Pridat = Replace(Hledat, "^", "")
     If InStr(1, .Cells(NaRadku + 1, Sloupec).Value, Pridat) > 0 Then
      Pridat = ""
     Else
      If Pridat <> "%" Then Pridat = " " & Pridat
     End If
    End If
    For Each Bunka In .Range(.Cells(NaRadku + 1, Sloupec).Address, .Cells(Radku, Sloupec).Address)
     With Bunka
      On Error Resume Next
      ObsahBunky = .Value
      If ObsahBunky = "" Then
      ElseIf Akce = 10 Then
       .Value = ObsahBunky & Pridat
      ElseIf IsDate(ObsahBunky) And Hodnota = "d.m.rrrr" Then
       .Value = CDate(ObsahBunky)
      ElseIf IsNumeric(ObsahBunky) Then
       .Value = CDbl(ObsahBunky) / Uprav
      ElseIf IsDate(ObsahBunky) Then
       .Value = CDate(ObsahBunky)
      End If
      On Error GoTo 0
     End With
    Next Bunka
   Case 1
    If Left(.Cells(Radku, 1).Value, 5) <> "^sum^" Then
     Radku = Radku + 1
     .Cells(Radku, 1).Value = "^sum^"
    End If
    Call Secti(Kde_soubor, Kde_list, Sloupec, NaRadku + 1, Radku)
   Case 2
    .Columns(Sloupec).ColumnWidth = 51
    If .Cells(NaRadku, Sloupec + 1).Value = "^2^" Then
     For Each Bunka In .Range(.Cells(NaRadku + 1, Sloupec).Address, .Cells(Radku, Sloupec).Address)
      With Bunka
       ObsahBunky = .Value
       ObsahBunky2 = .Offset(0, 1).Value
       ObsahBunky = ObsahBunky & ObsahBunky2
       If InStr(1, ObsahBunky, Hodnota) > 0 Then
        .Value = Replace(ObsahBunky, Hodnota, vbLf)
        .WrapText = True
       ElseIf ObsahBunky2 <> "" Then
        .Value = ObsahBunky
       End If
      End With
     Next Bunka
     .Columns(Sloupec + 1).Delete
    Else
     For Each Bunka In .Range(.Cells(2, Sloupec).Address, .Cells(Radku, Sloupec).Address)
      With Bunka
       ObsahBunky = .Value
       If InStr(1, ObsahBunky, Hodnota) > 0 Then
        .Value = Replace(ObsahBunky, Hodnota, vbLf)
        .WrapText = True
       End If
      End With
     Next Bunka
    End If
   Case 3
    For Each Bunka In .Range(.Cells(NaRadku + 1, Sloupec).Address, .Cells(Radku, Sloupec).Address)
     With Bunka
      ObsahBunky = .Value
      If InStr(1, ObsahBunky, "'") Then .Value = Replace(Replace(ObsahBunky, "','", ", "), "'", "")
     End With
    Next Bunka
   Case 4
    If Left(.Cells(Radku, 1).Value, 5) <> "^sum^" Then
     Radku = Radku + 1
     .Cells(Radku, 1).Value = "^sum^"
    End If
    .Cells(Radku, Sloupec).Value = Trim(.Cells(Radku, Sloupec).Value & " " & Format(Radku - 1 - NaRadku, "#,##0"))
  End Select
 End With
 Call PrevedPol(Kde_soubor, Kde_list, Hledat, NaRadku, Akce, Radku, Hodnota)
End Sub
Function DecToBin(ByVal Cislo As Long, ByVal Pozic As Integer) As String
 Dim i As Integer
 If Cislo > 2 ^ Pozic - 1 Then
  Call Chyba(Kde_soubor, "Chyba p|fffd|i p|fffd|evodu na bin|fffd|rn|fffd| |fffd||fffd|slo", True, True)
 End If
 For i = Pozic To 1 Step -1
  If Cislo >= 2 ^ (i - 1) Then
   DecToBin = DecToBin & "1"
   Cislo = Cislo - (2 ^ (i - 1))
  Else
   DecToBin = DecToBin & "0"
  End If
 Next i
End Function
Function BinToDec(ByVal Cislo As String) As Long
 Dim i As Integer, Posledni As Long, Nasobek As Long
 Posledni = Len(Cislo)
 For i = Posledni To 1 Step -1
  If i = Posledni Then
   BinToDec = Mid(Cislo, i)
   Nasobek = 2
  Else
   If Mid(Cislo, i, 1) = 1 Then BinToDec = BinToDec + Nasobek
   Nasobek = Nasobek * 2
  End If
 Next i
End Function
Private Sub Secti(Kde_soubor As String, Kde_list As String, Sloupec As Byte, OdRadku As Long, DoRadku As Long)
 Dim Hodnota1 As String, Hodnota2 As String, Format_hodnoty As String
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  Hodnota1 = .Cells(DoRadku, Sloupec).Value
  .Cells(DoRadku, Sloupec).Clear
  Format_hodnoty = .Cells(OdRadku, Sloupec).NumberFormatLocal
  If InStr(1, Hodnota1, "^ne^") > 0 Then
   Hodnota2 = Replace(Hodnota1, "^ne^", "")
   If IsNumeric(Replace(Hodnota2, "|fffd|", "")) Then Hodnota2 = Replace(Replace(Hodnota2, "|fffd|", ""), ",", ".")
  Else
   Hodnota2 = Replace(Application.WorksheetFunction.Sum(.Range(Cells(OdRadku, Sloupec).Address, Cells(DoRadku - 1, Sloupec).Address)), ",", ".")
   If Len(Hodnota1) > 0 Then
    If Format_hodnoty = "General" Then
     Hodnota2 = Trim(Hodnota1 & " " & Hodnota2)
    Else
     If InStr(1, Format_hodnoty, "# #") > 0 Then Format_hodnoty = Replace(Replace(Format_hodnoty, "# #", "#,#"), "0,0", "0.0")
     Hodnota2 = Trim(Hodnota1 & " " & Format(Hodnota2, Format_hodnoty))
    End If
   End If
  End If
  .Cells(DoRadku, Sloupec).Value = Hodnota2
  .Cells(DoRadku, Sloupec).NumberFormatLocal = Format_hodnoty
 End With
End Sub
Sub Chyba(Kde_soubor As String, Duvod As String, Zavri As Boolean, Email As Boolean, Optional Predmet As String)
 On Error GoTo 0
 Call Konec
 MsgBox Duvod, vbCritical
 If Application.MailSystem = xlMAPI And Email And Not (Odeslano) Then
  Odeslano = True
  If MsgBox("Zaslat e-mail s chybou", vbQuestion + vbYesNo) = vbYes Then
   If Predmet = "" Then Predmet = Duvod
   Workbooks(Kde_soubor).SendMail "richard.rokyta@vig.cz", Predmet
  End If
 End If
 If Zavri Then Workbooks(Kde_soubor).Close (False)
End Sub
Function HledejKonec(Kde_soubor As String, Kde_list As String, Volby As Integer) As String
 Dim Radku As Long, Sloupcu As Long, Radek As Long, Sloupec As Long
 If Not (Volby > -1 And Volby < 4) Then Call Chyba(Kde_soubor, "|fffd|patn|fffd| volba pro HledejKonec", True, True)
 Prerus = True
 BinHod = DecToBin(Volby, 9)
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  Sloupcu = .Cells.SpecialCells(xlLastCell).Column + 1
  If Sloupcu > .Columns.Count Then Sloupcu = .Columns.Count
  If .Columns(Sloupcu).Hidden Then
   Do Until Sloupcu >= .Columns.Count
    Sloupcu = Sloupcu + 1
    If Not (.Columns(Sloupcu).Hidden) Then Exit Do
   Loop
  End If
  Radku = .Cells.SpecialCells(xlLastCell).Row + 1
  If Radku > .Rows.Count Then Radku = .Rows.Count
  If .Rows(Radku).Hidden Then
   Do Until Radku >= .Rows.Count
    Radku = Radku + 1
    If Not (.Rows(Radku).Hidden) Then Exit Do
   Loop
  End If
  Select Case Mid(BinHod, Len(BinHod) - 1, 2)
   Case "00", "11"
    Radek = HledejKonecCast(Kde_soubor, Kde_list, 1, Sloupcu, Radku, True)
    Sloupec = HledejKonecCast(Kde_soubor, Kde_list, 1, Radek, Sloupcu, False)
    HledejKonec = .Cells(Radek, Sloupec).Address
   Case "01"
    HledejKonec = HledejKonecCast(Kde_soubor, Kde_list, 1, Sloupcu, Radku, True)
   Case "10"
    HledejKonec = HledejKonecCast(Kde_soubor, Kde_list, 1, Radku, Sloupcu, False)
   Case Else
    Exit Function
  End Select
 End With
 Prerus = False
End Function
Function HledejKonecCast(Kde_soubor As String, Kde_list As String, ByVal OdPrvku As Long, ByVal DoPrvku As Long, ByVal OdKud As Long, Orientace As Boolean) As Long
 Dim Prvek As Long, Aktualne As Long, Posledni As Long, Max As Boolean
 If OdPrvku > DoPrvku Then Exit Function
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  On Error Resume Next
  If Orientace Then
   If DoPrvku > .Columns.Count Then DoPrvku = .Columns.Count
   If OdKud > .Rows.Count Then
    OdKud = .Rows.Count
    Max = True
   End If
   For Prvek = OdPrvku To DoPrvku
    If Max Then
     If .Cells(OdKud, Prvek).Value <> "" Then
      Posledni = OdKud
      Exit For
     End If
    End If
    Aktualne = .Cells(OdKud, Prvek).End(xlUp).Row
    Do
     If .Cells(Aktualne, Prvek).Value = "" And Aktualne <> 1 Then
      If Err <> 0 Then Exit Do
      Application.EnableEvents = False
      .Cells(Aktualne, Prvek).Clear
      Application.EnableEvents = True
      Aktualne = .Cells(OdKud, Prvek).End(xlUp).Row
     Else
      Exit Do
     End If
    Loop
    If Aktualne > Posledni Then Posledni = Aktualne
   Next Prvek
  Else
   If DoPrvku > .Rows.Count Then DoPrvku = .Rows.Count
   If OdKud > .Columns.Count Then
    OdKud = .Columns.Count
    Max = True
   End If
   For Prvek = OdPrvku To DoPrvku
    If Max Then
     If .Cells(Prvek, OdKud).Value <> "" Then
      Posledni = OdKud
      Exit For
     End If
    End If
    Aktualne = .Cells(Prvek, OdKud).End(xlToLeft).Column
    Do
     If .Cells(Prvek, Aktualne).Value = "" And Aktualne <> 1 Then
      If Err <> 0 Then Exit Do
      Application.EnableEvents = False
      .Cells(Prvek, Aktualne).Clear
      Application.EnableEvents = True
      Aktualne = .Cells(Prvek, OdKud).End(xlToLeft).Column
     Else
      Exit Do
     End If
    Loop
    If Aktualne > Posledni Then Posledni = Aktualne
   Next Prvek
  End If
 End With
 HledejKonecCast = Posledni
End Function
Function SirkaSloupcu(Kde_soubor As String, Kde_list As String, OdSloupce As Byte, DoSloupce As Byte) As Double
 Dim Sloupec As Range
 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  For Each Sloupec In .Range(.Cells(1, OdSloupce).Address, .Cells(1, DoSloupce).Address)
   SirkaSloupcu = SirkaSloupcu + Sloupec.ColumnWidth
  Next Sloupec
 End With
 SirkaSloupcu = SirkaSloupcu + (0.715 * (DoSloupce - OdSloupce))
End Function
Function Otevri_soub(Optional Text_a_maska As String = "Soubory (*.xls*), *.xls*", Optional Nadpis As String = "Otev|fffd||fffd|t soubor") As String
 Otevri_soub = Application.GetOpenFilename(Text_a_maska, Title:=Nadpis)
 If Otevri_soub = "False" Then MsgBox "P|fffd|eru|fffd|eno u|fffd|ivatelem."
End Function
Sub KTVytvor(Kde_soubor As String, Kde_list As String, Kde_list_oblast As String, Tabulka As String, Optional Od_radku As Long = 1, Optional Od_sloupce As Long = 1, Optional Do_radku As Long, Optional Do_sloupce As Long)
 Dim Max As Range, Test As Range, Dopln As Long
 With Workbooks(Kde_soubor)
  Set KTList = .Worksheets.Add
  KTList.Name = Kde_list
  If Do_radku = 0 Or Do_sloupce = 0 Then Set Max = .Worksheets(Kde_list_oblast).Range(HledejKonec(Kde_soubor, Kde_list_oblast, vbKdeAdr))
  If Do_radku = 0 Then Do_radku = Max.Row
  If Do_sloupce = 0 Then Do_sloupce = Max.Column
  Set Hlavicka = .Worksheets(Kde_list_oblast).Range(Cells(Od_radku, Od_sloupce).Address, Cells(Od_radku, Do_sloupce).Address)
  For Each Test In Hlavicka
   If Test.Value = "" Then Test.Value = Dopln: Dopln = Dopln + 1
  Next Test
  Call DefNazev(Kde_soubor, Kde_list_oblast, "Data", Od_sloupce, Do_sloupce, Od_radku, Do_radku)
  .PivotCaches.Add(SourceType:=xlDatabase, SourceData:="Data").CreatePivotTable(TableDestination:=KTList.Range("A3"), TableName:=Tabulka).NullString = "0"
 End With
 With KTList.PivotTables(Tabulka)
  .GrandTotalName = "Celkem"
  .ShowDrillIndicators = False
 End With
 Set Max = Nothing
End Sub
Sub KTDopln(Soubor As String, List As String, Tabulka As String, Naz_sloupce As String, _
            Optional Umistit As Byte, Optional Nadpis As String, Optional Funkce As Long, Optional Pozice As Byte, Optional Co_celkem As Byte = 1, Optional Popis_celkem As String, _
            Optional Zobr_celkem As Boolean = False, Optional Orientace_dat As Long, Optional Num_form As String, Optional Str_filtr As String, Optional Str_filtr_zobr As Boolean, _
            Optional Str_filtr_cast As Boolean = False, Optional Str_filtr_dat As String, Optional Radit As String, Optional Radit_jak As Byte)
' Umisteni - xlColumnField, xlDataField, xlHidden, xlPageField, xlRowField
 Dim Test As Range, Polozka As PivotItem
 With Workbooks(Soubor).Worksheets(List).PivotTables(Tabulka)
  With .PivotFields(Naz_sloupce)
   If Umistit <> 0 Then .Orientation = Umistit
   If Funkce = 0 Then
    .Subtotals(Co_celkem) = Zobr_celkem
   Else
    .Function = Funkce
   End If
   If Pozice <> 0 Then .Position = Pozice
   If Popis_celkem <> "" Then .SubtotalName = Popis_celkem
   If Num_form <> "" Then .NumberFormat = Num_form
   If Radit <> "" Then .AutoSort Radit_jak, Radit
   If Str_filtr <> "" Then
    For Each Polozka In .PivotItems
     If Not Str_filtr_zobr Then
      If Str_filtr_cast Then
       If Left(Polozka.Value, Len(Str_filtr)) = Str_filtr Then Polozka.Visible = False
      ElseIf Polozka.Value = Str_filtr Then
       Polozka.Visible = False
      ElseIf Str_filtr_dat <> "" And IsDate(Polozka.Value) Then
       If Str_filtr_dat = Month(Polozka.Value) & Year(Polozka.Value) Then Polozka.Visible = False
      End If
     Else
      If Str_filtr_cast Then
       If Left(Polozka.Value, Len(Str_filtr)) <> Str_filtr Then Polozka.Visible = False
      ElseIf Polozka.Value <> Str_filtr Then
       Polozka.Visible = False
      ElseIf Str_filtr_dat <> "" And IsDate(Polozka.Value) Then
       If Str_filtr_dat <> Month(Polozka.Value) & Year(Polozka.Value) Then Polozka.Visible = False
      End If
     End If
    Next Polozka
   End If
   .Caption = Nadpis
  End With
  If Orientace_dat <> 0 Then .DataPivotField.Orientation = Orientace_dat
 End With
End Sub
Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Module1"
Option Explicit
Public Pct As Double, Moc As Boolean, BinHod As String * 6, PctUp As Double, Data As Worksheet, Tabulka As Byte, MocG As Boolean, Dotaz As Boolean
Sub Proved(Optional nic As Boolean)
 Dim PolozkaS As Long, PolozkaK As Long, Polozek As Byte, Duvod As String, x As Integer
 Application.ScreenUpdating = False
 On Error GoTo Problem
 Dotaz = True
 UserForm1.Label1.Caption = "Za|fffd||fffd|tek generace dat ..."
 Sesit.BuiltinDocumentProperties("Title").Value = "Port|fffd|l dlu|fffd|n|fffd|ho pojistn|fffd|ho"
 Call UpdateProgress(0)
 Polozek = Sesit.Worksheets.Count - 2
 Set Data = List
 Call Preved(Kde_soubor, Data.Name, 2, 0, 10)
 On Error GoTo Problem
 With Vystup
  .Activate
  .Range("A7:IV13").Font.ColorIndex = 0
  .Shapes("znovu").Delete
  BinHod = DecToBin(Data.Range("G2").Value, 6)
  If Mid(BinHod, 1, 1) = "1" Then
   .Shapes("cpp").Visible = msoTrue
'   .Range("U3").Value = "|fffd|SEK INTERN|fffd|CH S|fffd|T|fffd|"
'   .Range("U4").Value = "Bud|fffd|jovick|fffd| 64/5, 140 21  Praha 4"
  Else
   .Shapes("koop").Visible = msoTrue
'   .Range("U3").Value = "ODBOR STRATEGIE VN|fffd|J|fffd||fffd|HO OBCHODU"
'   .Range("U4").Value = "Templov|fffd| 747/5, 110 01  Praha 1"
  End If
  .Cells.ColumnWidth = 0.67
  .Range("A6").Value = Data.Range("O2").Value
  .Range("A7").Value = "Datum aktualizace ke dni: " & Data.Range("A2").Value
  .Range("B11").Value = Data.Range("P2").Value
  .Range("AH11").Value = Data.Range("Q2").Value
  Data.Columns(14).Cut
  Data.Columns(2).Insert (xlToRight)
  Call DoplnHodnoty(2, 5, 9)
  PctUp = 1 / Polozek
  For Each List In Sesit.Worksheets
   If Not (List.Name = Vystup.Name Or List.Name = Data.Name) Then
    Select Case List.Name
     Case "Hlavicka"
      Tabulka = 1
     Case "Filtry"
      Tabulka = 2
     Case Else
      Tabulka = Mid(List.Name, 5, Len(List.Name) - 4) + 3
    End Select
    If List.Range("A2").Value = "^smaz^" Then
     PolozkaS = Hledej(Kde_soubor, .Name, "START_" & Tabulka, vbVysRad) - 1
     PolozkaK = Hledej(Kde_soubor, .Name, "KONEC_" & Tabulka, vbVysRad)
     If PolozkaS > 1 And PolozkaK > PolozkaS Then .Range(.Rows(PolozkaS).Address, .Rows(PolozkaK).Address).Delete
     Call SmazList(Kde_soubor, List.Name)
     If Data.Cells(Tabulka + 1, 7) = 1 Then
      Data.Cells(Tabulka + 1, 12).Value = 0
      Data.Cells(Tabulka + 1, 13).Value = 0
     End If
    Else
     UserForm1.Label1.Caption = Mid(Data.Cells(Tabulka + 1, 11).Value, 1, 50) & "..."
     UserForm1.Repaint
     Call UpravKT
     On Error GoTo Problem
    End If
    Pct = Pct + PctUp
    Call UpdateProgress(Pct)
   End If
  Next List
  Set List = Data
  Tabulka = 3
  For x = Polozek To 2 Step -1
   If Data.Cells(x, 7).Value <> 1 Then Data.Rows(x).Delete
  Next x
  Data.Range(Data.Columns(1).Address, Data.Columns(10).Address).Delete
  Polozek = HledejKonec(Kde_soubor, Data.Name, vbKdeRad)
  UserForm1.Label1.Caption = Mid(Data.Cells(Tabulka + 1, 11).Value, 1, 50) & "..."
  UserForm1.Repaint
  Call UpravKT
  .Range("A1").Activate
  Set List = Nothing
 End With
 Unload UserForm1
 Application.ScreenUpdating = True
 GoTo NaKonec
Problem:
 Duvod = Err.Number & " " & Err.Description
 On Error Resume Next
 Unload UserForm1
 Application.ScreenUpdating = True
 Call Chyba(Kde_soubor, Duvod, True, True)
NaKonec:
End Sub
Private Sub DoplnHodnoty(Od As Byte, Kolik As Byte, Kam As Byte)
 Dim x As Byte
 With Vystup
  Kam = Kam - Od
  For x = Od To Od + Kolik
   .Cells(x + Kam, 19).NumberFormat = Data.Cells(2, x).NumberFormat
   .Cells(x + Kam, 19).Value = Data.Cells(2, x).Value
  Next x
 End With
End Sub
Private Sub UpravKT()
 Dim Sloupec As Byte, Radek As Long, SumRadek As Long, Sloupec2 As Byte, Adresa As Range, Hodnota As String, Predp As Boolean
 With List
  .Activate
  If Tabulka <> 3 Then .Rows(1).Delete
  Radek = HledejKonec(Kde_soubor, .Name, vbKdeRad)
  If Data.Cells(Tabulka + 1, 12) = "^pocet^" Then .Range("A1").Value = .Range("A1").Value & "^pocet^"
  .Range(.Rows(2).Address, .Rows(Radek).Address).WrapText = False
  Call Preved(Kde_soubor, .Name, 1, Radek, 0)
  Sloupec = HledejKonec(Kde_soubor, .Name, vbKdeSlo)
  .Cells.Interior.ColorIndex = 2
  If Data.Cells(Tabulka + 1, 14) = 1 Then Data.Cells(Tabulka + 1, 14).Value = "": Predp = True
  For Each Adresa In .Range("A1", Cells(1, Sloupec).Address)
   Hodnota = Adresa.Value
   If Predp Then
    If InStr(1, LCase(Hodnota), "p|fffd|edpis") Then Data.Cells(Tabulka + 1, 14).Value = "jedn|fffd| se o p|fffd|edpisy": Predp = False
   End If
   If Len(Hodnota) > 7 Then
    If InStr(4, Hodnota, " ") Then
     Adresa.Value = Left(Hodnota, 3) & Replace(Hodnota, " ", vbLf, 4, 1)
    ElseIf InStr(4, Hodnota, ".") Then
     Adresa.Value = Left(Hodnota, 3) & Replace(Hodnota, ".", "." & vbLf, 4, 1)
    End If
   End If
  Next Adresa
  With .Range("A1", Cells(1, Sloupec).Address)
   .Font.Bold = True
   .HorizontalAlignment = xlCenter
   .VerticalAlignment = xlCenter
   .Interior.ColorIndex = 35
  End With
  If Radek <> 1 Then
   SumRadek = Hledej(Kde_soubor, .Name, "^sum^", vbKdeSlo + vbVysRad + vbVysNah, 1, "Celkem")
   If Not (Prerus) Then
    If Data.Cells(Tabulka + 1, 7) = 1 Then
     For Each Adresa In .Range("A1", .Cells(1, Sloupec).Address)
      Hodnota = .Cells(SumRadek, Adresa.Column).Value
      If Left(Hodnota, 6) = "Celkem" Then Hodnota = Trim(Mid(Hodnota, 8))
      If Hodnota <> "" Then
       If UCase(Left(Adresa.Value, 5)) = "PO|fffd|ET" Or UCase(Left(Adresa.Value, 5)) = "EV.|fffd|." Then
        Data.Cells(Tabulka + 1, 12) = Hodnota
       ElseIf UCase(Adresa.Value) = "DLUH" Then
        Data.Cells(Tabulka + 1, 13) = Hodnota
       End If
      End If
     Next Adresa
    End If
    If SumRadek = 2 Then
     Radek = 1
    Else
     With .Range("A" & SumRadek, .Cells(SumRadek, Sloupec).Address)
      .Font.Bold = True
      .Interior.ColorIndex = 35
     End With
     .Range("B" & SumRadek, .Cells(SumRadek, Sloupec).Address).HorizontalAlignment = xlRight
     If .Cells(SumRadek, 1).End(xlToRight).Column < Sloupec And .Cells(SumRadek, 2) = "" Then
      .Range("A" & SumRadek, .Cells(SumRadek, 1).End(xlToRight).Offset(0, -1).Address).Merge
     End If
     With .Range("A2", .Cells(Radek, Sloupec).Address)
      .WrapText = False
      .VerticalAlignment = xlTop
     End With
    End If
   End If
  End If
  .Rows(1).RowHeight = 25.5
  With .Range("A1", .Cells(Radek, Sloupec).Address)
   With .Borders
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = 1
   End With
   .Columns.AutoFit
   .Rows.AutoFit
  End With
  .Rows(1).RowHeight = 25.5
  If Radek > 200 Or SirkaSloupcu(Kde_soubor, .Name, 1, Sloupec) > 260 Then Moc = True
  If Not Moc And Dotaz And .Name <> "Data" Then
   MocG = IIf(MsgBox("P|fffd|en|fffd|et jednotliv|fffd| listy na celkov|fffd| p|fffd|ehled?", vbYesNo) = vbYes, False, True)
   If MsgBox("Dotazovat se i pro ka|fffd|d|fffd| list?", vbYesNo) = vbNo Then Dotaz = False
  End If
  If Moc And Not MocG Then MsgBox (.Name & " nelze p|fffd|en|fffd|st na celkov|fffd| p|fffd|ehled!")
  If Not Moc And MocG And .Name <> "Data" Then Moc = True
  If Uprav(Radek, Sloupec) Then Call SmazList(Kde_soubor, .Name)
  Moc = False
 End With
End Sub
Private Function Uprav(Radku As Long, Sloupcu As Byte) As Boolean
 Dim PolozkaS As Long, PolozkaK As Long, Kam1 As Byte, Kam2 As Byte, Bunka As Range, Sloupec As Byte, x As Long
 Dim PctConst As Double, PctUp2 As Double, Oblast As Range, Kolik As Byte, Nadpis As String, Hodnota As String
 Uprav = True
 With Vystup
  .Activate
  PolozkaS = Hledej(Kde_soubor, .Name, "START_" & Tabulka, vbVysRad + vbVysNah, , "")
  PolozkaK = Hledej(Kde_soubor, .Name, "KONEC_" & Tabulka, vbVysRad + vbVysNah, , "")
  Nadpis = Data.Cells(Tabulka + 1, 11).Value
  If PolozkaS = 1 Or PolozkaS >= PolozkaK Or Moc Then
   Uprav = False
   If PolozkaS = 1 Or PolozkaS >= PolozkaK Then
    Call Chyba(Kde_soubor, "Nelze ur|fffd|it za|fffd||fffd|tek nebo konec pro tabulku " & Data.Cells(Tabulka + 1, 11).Value, False, True)
    Exit Function
   Else
    With List
     If Radku < 65530 Then
      If Data.Cells(Tabulka + 1, 9).Value <> "" Then
       Kolik = 3
      Else
       Kolik = 2
      End If
      .Range(.Rows(1).Address, Rows(Kolik).Address).Insert (xlDown)
      With .Rows(1)
       .RowHeight = 12.75
       .Font.Bold = True
       .Font.Underline = xlUnderlineStyleSingle
      End With
      .Rows(Kolik).RowHeight = 7.5
      If Len(Nadpis) > 2 Then .Range("A1").Value = Nadpis & ":"
      .Range("A1", .Cells(1, Sloupcu).Address).Merge
      .Range("A2", .Cells(2, Sloupcu).Address).Merge
      If Kolik = 3 Then
       .Range("A2").Value = Data.Cells(Tabulka + 1, 9).Value
       .Range("A2", .Cells(2, Sloupcu).Address).Merge
       .Rows(2).Font.Italic = True
       .Rows(2).Font.Size = 8
      End If
      Radku = Radku + Kolik
      If Data.Cells(Tabulka + 1, 10).Value <> "" Then
       Radku = Radku + 2
       .Cells(Radku, 1).Value = Data.Cells(Tabulka + 1, 10).Value
       .Range(.Cells(Radku, 1).Address, .Cells(Radku, Sloupcu).Address).Merge
       .Rows(Radku).Font.Italic = True
       .Rows(Radku).Font.Size = 8
      End If
     End If
     .Visible = xlSheetVisible
    End With
   End If
  End If
  If Tabulka = 3 And Radku = 1 Then
   .Range(.Rows(PolozkaS - 1).Address, .Rows(PolozkaK).Address).Delete
   Exit Function
  End If
  If Len(Nadpis) < 2 Then
   .Rows(PolozkaS - 1).Delete
   PolozkaS = PolozkaS - 1
   PolozkaK = PolozkaK - 1
  Else
   .Cells(PolozkaS - 1, 2).Font.ColorIndex = 0
   .Cells(PolozkaS - 1, 2).Value = Nadpis & ":"
  End If
  If Data.Cells(Tabulka + 1, 9).Value <> "" Then
   .Rows(PolozkaS).Insert (xlDown)
   .Cells(PolozkaS, 2).Value = Data.Cells(Tabulka + 1, 9).Value
   .Range(.Cells(PolozkaS, 2).Address, .Cells(PolozkaS, 75).Address).Merge
   With .Rows(PolozkaS)
    With .Font
     .Bold = False
     .Italic = True
     .Size = 8
     .ColorIndex = 0
     .Underline = xlUnderlineStyleNone
    End With
    .EntireRow.AutoFit
   End With
   PolozkaS = PolozkaS + 1
   PolozkaK = PolozkaK + 1
  End If
  PolozkaS = PolozkaS + 1
  If Data.Cells(Tabulka + 1, 10).Value <> "" Then
   .Rows(PolozkaK).Insert (xlDown)
   .Cells(PolozkaK, 2).Value = Data.Cells(Tabulka + 1, 10).Value
   .Range(.Cells(PolozkaK, 2).Address, .Cells(PolozkaK, 75).Address).Merge
   With .Rows(PolozkaK)
    With .Font
     .Italic = True
     .Size = 8
     .ColorIndex = 0
    End With
    .EntireRow.AutoFit
   End With
   PolozkaK = PolozkaK + 1
  End If
  If Moc Then
   PolozkaK = PolozkaS
  Else
   PolozkaK = Radku + PolozkaS - 1
  End If
  .Range(.Rows(PolozkaS).Address, .Rows(PolozkaK).Address).Insert (xlDown)
  If Radku = 1 Or Moc Then
   If Moc Then .Hyperlinks.Add .Cells(PolozkaS, 2), Address:="", SubAddress:=List.Name & "!A1", TextToDisplay:="Odkaz na list - " & Nadpis
   With .Range("B" & PolozkaS & ":BW" & PolozkaS)
    .Merge
    If Not Moc Then .Value = " Nebyly nalezeny |fffd||fffd|dn|fffd| z|fffd|znamy..."
    .RowHeight = 12.75
    With .Font
     .Bold = False
     .Size = 10
     If Not Moc Then
      .Underline = xlUnderlineStyleNone
      .ColorIndex = xlAutomatic
     End If
    End With
   End With
   Call UpdateProgress(Pct + PctUp)
   Exit Function
  End If
  Kam1 = 2
  For x = 1 To Radku
   .Rows(PolozkaS + x - 1).RowHeight = List.Rows(x).RowHeight
  Next x
  PctConst = PctUp / Sloupcu
  For Sloupec = 1 To Sloupcu
   List.Range(List.Cells(1, Sloupec).Address, List.Cells(Radku, Sloupec).Address).Copy .Cells(PolozkaS, Kam1)
   Kam2 = Round(List.Columns(Sloupec).Width / .Cells(1, 1).Width) + 1
   For Each Bunka In .Range(.Cells(PolozkaS, Kam1).Address, .Cells(PolozkaK, Kam1).Address)
    .Range(Bunka.Address, Bunka.Offset(0, Kam2 - 1).Address).Merge
   Next Bunka
   DoEvents
   Kam1 = Kam1 + Kam2
   PctUp2 = PctUp2 + PctConst
   Call UpdateProgress(Pct + PctUp2)
  Next Sloupec
  Set Bunka = Nothing
  Kam1 = Kam1 - 1
  With .Range(.Cells(PolozkaS, 2).Address, .Cells(PolozkaK, Kam1).Address).Borders
   .LineStyle = xlContinuous
   .Weight = xlThin
   .ColorIndex = 15
  End With
  Hodnota = .Cells(PolozkaK, 2).Value
  If Left(Hodnota, 6) = "Celkem" Then
   If Len(Hodnota) > 6 Then
    Sloupec = .Cells(PolozkaK, 2).MergeArea.Columns.Count
    If Sloupec > 7 Then
     .Cells(PolozkaK, 2).UnMerge
     .Range(.Cells(PolozkaK, 2).Address, .Cells(PolozkaK, 8).Address).Merge
     .Range(.Cells(PolozkaK, 9).Address, .Cells(PolozkaK, Sloupec + 1).Address).Merge
     .Cells(PolozkaK, 2).Value = "Celkem"
     .Cells(PolozkaK, 9).Value = Mid(Hodnota, 7)
     .Cells(PolozkaK, 9).HorizontalAlignment = xlRight
    End If
   ElseIf .Cells(PolozkaK, 2).End(xlToRight).Offset(0, -1).Value = "" Then
    .Range(.Cells(PolozkaK, 2).Address, .Cells(PolozkaK, 2).End(xlToRight).Offset(0, -1).Address).Merge
   End If
   If .Cells(PolozkaK, Kam1).End(xlToLeft).Offset(0, 1).Value = "" And .Cells(PolozkaK, Kam1).End(xlToLeft).Offset(0, 1).Column <= Kam1 Then
    .Range(.Cells(PolozkaK, Kam1).Address, .Cells(PolozkaK, Kam1).End(xlToLeft).Offset(0, 1).Address).Merge
   End If
  End If
  If .Cells(1, 1).Value < Kam1 Then .Cells(1, 1).Value = Kam1
 End With
End Function
Private Sub UpdateProgress(Pct As Double)
 With UserForm1
  .FrameProgress.Caption = Format(Pct, "0%")
  .LabelProgress.Width = Pct * (.FrameProgress.Width - 10)
  .Repaint
 End With
End Sub
Private Sub Znovu_spustit()
 If Zacatek("P|fffd|ehled", "Data", False) Then UserForm1.Show
 Call Konec
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Workbook_Open()
 If Zacatek("P|fffd|ehled", "Data", False) Then UserForm1.Show
 Call Konec
End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{47A70945-54AE-4190-ACA3-CD2E58540367}{3303AD98-01CC-4E6E-8004-38EBA05C3798}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
 Call Proved
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then Cancel = True
End Sub


' InQuest injected base64 decoded content
' )^J)

INQUEST-PP=macro
