Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Errorcodes_deu"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub ConvertDTCFormat()
Dim c As Range
Dim lastrow As Integer
Dim temp, body, header As String
Dim temp2 As String

lastrow = Sheets("Errorcodes").Range("A65536").End(xlUp).Row 'find last row populated in col A
Set rng = Sheets("Errorcodes").Range("A1:A" & lastrow) 'initialize range to search in

For Each c In rng
    temp = c.Value 'get value of cell
    temp2 = Trim(Left(temp, 2)) 'extract first 2 characters of value
    body = Trim(Right(temp, Len(temp) - 2)) 'extract all but first 2 characters of value
    header = SAEtoHEX(temp2) 'convert the SAE value to a hexadecimal value
    If header <> "" Then 'if the value was a valid SAE code
        temp = header & body 'create a new value (in hex) to be stored
        c.Value = temp 'store the new value
    End If
Next c 'next cell in range

End Sub
'this function converts an SAE value to its hexadecimal equivalent
Private Function SAEtoHEX(data As String) As String

Select Case data
    Case "B0"
        SAEtoHEX = "0x8"
    Case "B1"
        SAEtoHEX = "0x9"
    Case "B2"
        SAEtoHEX = "0xA"
    Case "B3"
        SAEtoHEX = "0xB"
    Case "C0"
        SAEtoHEX = "0x4"
    Case "C1"
        SAEtoHEX = "0x5"
    Case "C2"
        SAEtoHEX = "0x6"
    Case "C3"
        SAEtoHEX = "0x7"
    Case "P0"
        SAEtoHEX = "0x0"
    Case "P1"
        SAEtoHEX = "0x1"
    Case "P2"
        SAEtoHEX = "0x2"
    Case "P3"
        SAEtoHEX = "0x3"
    Case "U0"
        SAEtoHEX = "0xC"
    Case "U1"
        SAEtoHEX = "0xD"
    Case "U2"
        SAEtoHEX = "0xE"
    Case "U3"
        SAEtoHEX = "0xF"
    Case Else
        SAEtoHEX = ""
    End Select
        
End Function

Private Sub ConvertSAEtoHex_Click()
ConvertDTCFormat
End Sub
Attribute VB_Name = "Module1"
Sub check()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
