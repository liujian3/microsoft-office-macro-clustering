Attribute VB_Name = "Class1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Module1"
Sub Statement()
Attribute Statement.VB_ProcData.VB_Invoke_Func = "a\n14"
'
' Macro2 Macro
'
' Keyboard Shortcut: Ctrl+a
'
    ActiveWorkbook.Worksheets("Balance").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Balance").Sort.SortFields.Add Key:=Range("G15"), _
        SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Balance").Sort
        .SetRange Range("A15:Q44442")
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Columns("I:K").Select
    Selection.NumberFormat = "#,##0.00_ ;[Red]-#,##0.00 "
    
   Range("G15").Formula = "=VALUE(TODAY()-E15)"
   Range("L15").Formula = "=IF(G15<=0,""Current"",IF(G15<30,""1-30"",IF(G15<60,""31-60"",IF(G15<90,""61-90"",IF(G15<180,""91-180"",IF(G15>180,""180+"",""""))))))"
   Range("M15").Formula = "=IF(P15<>"""",""Dispute"",IF(G15<=0, ""Open"", IF(G15>0, ""Overdue"")))"
   
       
   Dim i As Long
        i = Cells(Rows.Count, "A").End(xlUp).Row
        Range("G15").Select
        Selection.AutoFill Destination:=Range("G15:G" & i)
        Range("L15").Select
        Selection.AutoFill Destination:=Range("L15:L" & i)
        Range("M15").Select
        Selection.AutoFill Destination:=Range("M15:M" & i)
        Range("N15").Select
        Selection.AutoFill Destination:=Range("N15:N" & i)
        
   Range("K15:K" & i).Font.Bold = True
   
   
   Range("B11").Select
   Selection.NumberFormat = "[$-en-IE]dd mmmm yyyy;@"
   Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
  
   
Dim SaveName As String
SaveName = ActiveSheet.Range("B12").Text & "-VERITAS Statement As of " & Format(Now, "dd-mm")

ActiveWorkbook.SaveAs fileName:="\\PUNAOPSFNPPIN01\SGP2-Shared\Finance\AR\Pune Collections\Statements\Account-" & _
SaveName & ".xls"


End Sub
               
Sub SaveOffset()


Dim SaveName As String

ActiveSheet.Shapes.SelectAll
Selection.Delete

SaveName = ActiveSheet.Range("D5").Text & "-OFFSET-" & Format(Now, "dd-mm")

ActiveWorkbook.SaveAs fileName:="\\PUNAOPSFNPPIN01\SGP2-Shared\Finance\AR\Pune Collections\Remittances\" & _
SaveName & ".xls"

Dim OutApp As Object
    Dim OutMail As Object

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    On Error Resume Next
    With OutMail
        .to = Range("E6")
        .CC = Range("E4")
        .BCC = ""
        .Subject = Range("D5").Text & "-OFFSET-" & Format(Now, "yyyy-mm-dd")
        .Body = "Hi please process this offset attached to this email. Any question please revert to me. Many thanks"
        .Attachments.Add ActiveWorkbook.FullName
        .Send   'or use .Display
    End With
    On Error GoTo 0

    Set OutMail = Nothing
    Set OutApp = Nothing
    
End Sub
           




Attribute VB_Name = "Module10"
Attribute VB_Name = "Module11"
Sub SendStatement()
Attribute SendStatement.VB_ProcData.VB_Invoke_Func = "a\n14"

Dim i As Integer
    If ActiveSheet.ProtectContents = True Then
        MsgBox "The Current Workbook or the Worksheets which it contains are protected." & vbLf & "                          Please resolve these issues and try again."
    End If

    On Error Resume Next
        ActiveSheet.Buttons.Delete
        
With ThisWorkbook
        .Save
End With

Dim OutApp As Object
    Dim OutMail As Object

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    On Error Resume Next
    With OutMail
        .to = Range("B7")
        .CC = ""
        .BCC = ""
        .Subject = Range("B12") & "-VERITAS- Statement As Of-" & Format(Date, "dd/mmm/yy")
        .Body = "Hi please find attached to this email the latest statement of account."
        .Attachments.Add ActiveWorkbook.FullName
        .Send   'or use .Display
    End With
    On Error GoTo 0

    Set OutMail = Nothing
    Set OutApp = Nothing


   End Sub

Attribute VB_Name = "Module12"
Attribute VB_Name = "Module13"
Attribute VB_Name = "Module14"
Sub Issues()
'
' Issues Macro
'

Range("P15").Formula = "=IFERROR(VLOOKUP(A15,'[Disputes.xlsm]EMEA Disputes'!$1:$1048576,12,0),"""")"

 Dim i As Long
        i = Cells(Rows.Count, "A").End(xlUp).Row
        Range("P15").Select
        Selection.AutoFill Destination:=Range("P15:P" & i)
        
        
Columns("P:P").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'
End Sub

Attribute VB_Name = "Module15"
Sub StatementStatus()

Range("F4").Formula = "=IFERROR(IF(VLOOKUP(B4,Balance!A:K,1,0),""OPEN"",""CLOSED""),""CLOSED"")"

 Dim i As Long
        i = Cells(Rows.Count, "B").End(xlUp).Row
        Range("F4").Select
        Selection.AutoFill Destination:=Range("F4:F" & i)


End Sub
Attribute VB_Name = "Module16"
Sub ExtractData()
Attribute ExtractData.VB_ProcData.VB_Invoke_Func = " \n14"

    Dim wsData As Worksheet
    Dim wsMacro As Worksheet
    Dim sToFind As String
    Dim sFirstAddress As String
    Dim nr As Long, lr As Long
    Dim rFind As Range
    Dim c As Range
    
    'Set worksheets as variables
    Set wsData = Workbooks("DataEMEA.xlsx").Sheets("Data")
    Set wsMacro = Workbooks("Macro Statement (EMEA).xlsm").Sheets("Balance")
    
    
    'Last used row
    lr = wsData.Range("D" & Rows.Count).End(xlUp).Row
    
    'next available blank row on Macro sheet
    nr = wsMacro.Range("A" & Rows.Count).End(xlUp).Row + 1
    
    '*************************************************************************************
    'TODO: change the line below to the range that contains all cells with search values.*
    '*************************************************************************************
    For Each c In wsMacro.Range("D11:M11")
        
        'set the string variable
        sToFind = c.Value 'Change as necessary
        
        'search column D
        Set rFind = wsData.Range("B1:B" & lr).Find(What:=sToFind, lookat:=xlWhole)
        
        'search string not found so go to next cell
        
        If rFind Is Nothing Then
            MsgBox sToFind & "ERP# not found", vbInformation, "Not Found"
            GoTo nextSearch
        ElseIf rFind.Value <> sToFind Then
            MsgBox sToFind & "ERP# not found", vbInformation, "Not Found"
            GoTo nextSearch
        End If
        
        'store the first address
        sFirstAddress = rFind.Address
        
        Do
            'copy the row
            wsData.Range("D" & rFind.Row & ":N" & rFind.Row).Copy
            'paste the row
            wsMacro.Range("A" & nr).PasteSpecial xlPasteAll
            'set next row number
            nr = nr + 1
            'Find the next instance of the search value
            Set rFind = wsData.Range("B1:B" & lr).FindNext(After:=rFind)
        'loop until we get back to the first 1
        Loop Until rFind.Address = sFirstAddress
nextSearch:
        Set rFind = Nothing
    Next c
    
    'House keeping
    Set wsData = Nothing
    Set wsMacro = Nothing
    
    End Sub
Attribute VB_Name = "Module17"
Attribute VB_Name = "Module18"
Attribute VB_Name = "Module19"
Attribute VB_Name = "Module2"
Attribute VB_Name = "Module3"
Attribute VB_Name = "Module4"
Sub Remittance()
'
' Remittance Macro
'

ActiveWorkbook.Worksheets("Balance").Select

Range("O15").Formula = "=IF(COUNTIF(Remit,A15),""PAID"",""UNPAID"")"
Range("N15").Formula = "=K15-IF(O15=""UNPAID"",0,VLOOKUP(A15,offset,3,0))"


      
Dim i As Long
        i = Cells(Rows.Count, "A").End(xlUp).Row
        Range("O15").Select
        Selection.AutoFill Destination:=Range("O15:O" & i)
        
        Range("N15").Select
        Selection.AutoFill Destination:=Range("N15:N" & i)
       
        
   
 Range("A14:P14").Select
    Selection.AutoFilter
        ActiveWorkbook.Worksheets("Balance").AutoFilter.Sort.SortFields.Add Key:= _
        Range("O14"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Balance").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With


Range("A14:O14").Select
Selection.AutoFilter
        

'
End Sub



Attribute VB_Name = "Module5"
Attribute VB_Name = "Module6"
Sub CleanUp()

Dim rng As Range
Set rng = Range("A8")
Range(rng, rng.End(xlDown)).Select
Selection.ClearContents

Dim rng2 As Range
Set rng2 = Range("B8")
Range(rng2, rng2.End(xlDown)).Select
Selection.ClearContents

Dim rng3 As Range
Set rng3 = Range("C8")
Range(rng3, rng3.End(xlDown)).Select
Selection.ClearContents

Dim rng4 As Range
Set rng4 = Range("D8")
Range(rng4, rng4.End(xlDown)).Select
Selection.ClearContents

Dim rng5 As Range
Set rng5 = Range("E8")
Range(rng5, rng5.End(xlDown)).Select
Selection.ClearContents
    
    
End Sub



Attribute VB_Name = "Module7"
Sub GenerateOffset()

Dim rng1 As Range
   
    Set rng1 = Range("D4")
    Range(rng1, rng1.End(xlDown)).Copy
    Sheets("Offset").Range("A8").PasteSpecial Paste:=xlPasteValues
        

Dim rng2 As Range
   
    Set rng2 = Range("B4")
    Range(rng2, rng2.End(xlDown)).Copy
    Sheets("Offset").Range("B8,C8").PasteSpecial Paste:=xlPasteValues

    
Range("D8").Formula = "=VLOOKUP(A8,Remit,3,0)"

Range("E8").Formula = "=VLOOKUP(A8,'Customer Remittance'!A:F,6,0)"

 Dim i As Long
        i = Cells(Rows.Count, "A").End(xlUp).Row
        Range("D8").Select
        Selection.AutoFill Destination:=Range("D8:D" & i)
        Range("E8").Select
        Selection.AutoFill Destination:=Range("E8:E" & i)

   
    
    
  
   
  Range("A8:E21").Select
  ActiveWorkbook.Worksheets("Offset").Sort.SortFields.Clear
  ActiveWorkbook.Worksheets("Offset").Sort.SortFields.Add Key:=Range("B8:B21") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
  With ActiveWorkbook.Worksheets("Offset").Sort
        .SetRange Range("A8:E21")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
  End With
  
  
  ActiveWorkbook.Worksheets("Offset").Select
  Range("A8:E4000").Select
    
    Application.CutCopyMode = False
    With Selection
        .HorizontalAlignment = xlRight
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
  
  Range("B18").Select
  ActiveWindow.SmallScroll Down:=-15
    

End Sub


Attribute VB_Name = "Module8"
Sub StatementInfo()
Attribute StatementInfo.VB_ProcData.VB_Invoke_Func = " \n14"

Range("D4").Formula = "=VLOOKUP(A4,Balance!A:N,1,0)"
Range("E4").Formula = "=VLOOKUP(A4,Balance!A:N,11,0)"
Range("F4").Formula = "=VLOOKUP(A4,Balance!A:N,13,0)"
Range("G4").Formula = "=B4-E4"
       
   Dim i As Long
        i = Cells(Rows.Count, "A").End(xlUp).Row
        
        Range("D4").Select
        Selection.AutoFill Destination:=Range("D4:D" & i)
 
        Range("E4").Select
        Selection.AutoFill Destination:=Range("E4:E" & i)
        
         Range("F4").Select
        Selection.AutoFill Destination:=Range("F4:F" & i)
        
        Range("G4").Select
        Selection.AutoFill Destination:=Range("G4:G" & i)
        
        
 
 
       
   End Sub
Attribute VB_Name = "Module9"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
