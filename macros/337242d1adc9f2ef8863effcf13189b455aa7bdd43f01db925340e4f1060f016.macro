Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Workbook_Open()
    agrxlRegisterWorksheetFunctions
End Sub


Attribute VB_Name = "basExcelerator"
Option Explicit
Private moAutomationObject As Object
Private Function GetAutomationObject() As Object
    On Error GoTo ErrorHandler
    If moAutomationObject Is Nothing Then
        Dim addIn As COMAddIn
        Set addIn = Application.COMAddIns("ReportEngine.Designer.Excelerator")
        Set moAutomationObject = addIn.Object
        If moAutomationObject Is Nothing Then
            Err.Raise vbObjectError, , "Addin '" & addIn.Description & "' is inactive"
        End If
    End If
    Set GetAutomationObject = moAutomationObject
    Exit Function
ErrorHandler:
    Err.Raise Err.Number, Err.Source, Err.Description & vbLf & "Failed to GetAutomationObject from ReportEngine.Designer.Excelerator"
End Function
Public Sub agrxlImmediate(rsAction As String)
    On Error GoTo ErrorHandler
    GetAutomationObject.Action rsAction
    Exit Sub
ErrorHandler:
    ' errors are normally handled in the VSTO but never let any Automation error throw the user into the VBA Editor
    MsgBox Err.Number & ": (" & Err.Source & ") " & Err.Description & vbLf & "agrxlImmediate: " & rsAction & " failed", vbCritical, "AGRESSO Excelerator"
End Sub
Public Sub agrxlLoadSheet()
    agrxlImmediate "LoadSheet"
End Sub
Public Sub agrxlUnLoadSheet()
    agrxlImmediate "UnLoadSheet"
End Sub
Public Sub agrxlLoadAll()
    agrxlImmediate "LoadAll"
End Sub
Public Sub agrxlUnLoadAll()
    agrxlImmediate "UnLoadAll"
End Sub
Public Sub agrxlLoad()
    agrxlImmediate "Load"
End Sub
Public Sub agrxlUnLoad()
    agrxlImmediate "UnLoad"
End Sub
Public Sub agrxlPostSheet()
    agrxlImmediate "PostSheet"
End Sub
Public Sub agrxlValidateSheet()
    agrxlImmediate "ValidateSheet"
End Sub
Public Sub agrxlRegisterWorksheetFunctions()
    ' This does not always seem to work with a user defined group if we just ignore the error then the functions appear under
    ' "User Defined Functions" but they are at least sorted alphabetically so things are not too bad
    On Error Resume Next
    Application.MacroOptions Macro:="AgrGetDescription", Category:="Agresso Excelerator"
End Sub
Public Function AgrGetDescription(AttributeID As String, AttributeValue As String, Optional Client As String = "") As Variant
    If AttributeValue = "" Then
        AgrGetDescription = ""  ' get this important special case over with as quickly as possible!
    Else
        AgrGetDescription = GetAutomationObject.WorksheetFunctionAgrGetDescription(AttributeID, AttributeValue, Client)
        If VarType(AgrGetDescription) <> vbString Then
            AgrGetDescription = CVErr(AgrGetDescription)
        End If
    End If
End Function



INQUEST-PP=macro
