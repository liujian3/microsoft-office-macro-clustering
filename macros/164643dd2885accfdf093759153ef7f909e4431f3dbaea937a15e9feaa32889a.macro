Attribute VB_Name = "AddSchools"
Option Explicit

Sub SchoolAdd(strPhase As String)
    Dim lngAnchor As Long
    Dim lngRow As Long
    Dim strMsgText As String
    Dim strTBPassWord As String

    Range(strPhase).Select
    lngAnchor = Selection.Row
    lngRow = lngAnchor + 1
    strTBPassWord = "mariko"
    Do
        If ActiveSheet.Cells(lngRow, 2) <> "" Then
            lngRow = lngRow + 1
        Else
            strMsgText = Switch(strPhase = "Nursery", "Nursery", _
                                strPhase = "Primary", "Primary", _
                                strPhase = "PriMiddle", "Middle Deemed Primary", _
                                strPhase = "Secondary", "Secondary", _
                                strPhase = "SecMiddle", "Middle Deemed Secondary", _
                                strPhase = "Special", "Special")
            If lngRow - lngAnchor = 1 Then
                MsgBox "There is already an unused blank line for the " & vbCrLf & _
                       strMsgText & " phase.", vbExclamation, "S52 Education Outturn Statement"
            Else
                ActiveWorkbook.Sheets("Table B").Unprotect (strTBPassWord)
                'Insert row
                Range("A" & lngRow & ":U" & lngRow).Insert shift:=xlDown
                'Copy data cell formats
                Range("A" & lngRow - 1 & ":U" & lngRow - 1).Copy
                Range("A" & lngRow).PasteSpecial (xlPasteFormats)
                'Copy formula for total cell
                Range("O" & lngRow - 1).Copy
                Range("O" & lngRow).PasteSpecial
                'Copy error cell formulae

                Rows(lngRow & ":" & lngRow).AutoFit
                Cells(lngRow, 2).Select
                ActiveWorkbook.Sheets("Table B").Protect (strTBPassWord)
                MsgBox "Blank School Line inserted into the " & vbCrLf & _
                       strMsgText & " phase.", vbInformation

            End If
            Exit Do
        End If
    Loop
End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "imgTBSort, 2, 1, MSForms, Image"
Attribute VB_Control = "imgTBInsertSchool, 3, 2, MSForms, Image"
Option Explicit




Private Sub imgTBInsertSchool_Click()
    frmInsert.Show
End Sub



Private Sub imgTBSort_Click()
    frmSorting.Show
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim strErrorWarning As String
    Dim strEWnumber As String
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngFirstDataRow As Long
    Dim lngErrRangeOffset As Long
    Dim lngColorIndexCF As Long
    Dim lngErrCol As Long
    Dim lngerrRow As Long
    Dim strjunko As String
    
    If IsError(ActiveCell) Then Exit Sub
 
    lngFirstDataRow = 12

    strErrorWarning = ""


    lngColorIndexCF = ColorIndexOfCF(Range(ActiveCell.AddressLocal))

    'Gets the conditional formatting applied to the cell if there is one.
'    If lngColorIndexCF = 40 Or lngColorIndexCF = 3 Then

    If (ActiveCell.Row) < 11 Then
             If lngColorIndexCF = 3 Then
                  MsgBox "Error 1.1: All LA details must be present"
            End If
    End If
     If (ActiveCell.Row) >= lngFirstDataRow Then

        If (ActiveCell.Column) > 3 Then
              If lngColorIndexCF = 40 Then
                    MsgBox "Error 1.1 :Value is missing. Do not leave this cell blank. Instead, please enter a zero if that is the amount your authority budgeted for this category."
              ElseIf lngColorIndexCF = 3 Then
                    If IsNumeric(ActiveCell) = False Then
                            MsgBox "Error 1.2 : The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"


                    Else
                            If (ActiveCell) <= 0 Then
                                     MsgBox "Error 1.4: You have entered either a negative or zero amount in this cell. Please check your entry as the value in this cell should be greater than zero"
                          
                            End If
                    End If
              ElseIf lngColorIndexCF = 36 Then
        
                    If (ActiveCell) <= 0 Then
                             MsgBox "Query 1.3 : You have entered a negative or zero amount in this cell.Please check your entry as the value in this cell should be greater than zero."
                    End If
              End If
       
    
        Else
              If lngColorIndexCF = 40 And (ActiveCell.Column) = 2 Then

                MsgBox " Error 2.12 : Schoolname is missing. Do not leave this cell blank. "
                  
              End If
                    
              If (ActiveCell.Column) = 3 Then
                  If lngColorIndexCF = 40 Then
                      MsgBox " Error 2.11 : ESTAB Number is missing Do not leave this cell blank.   "
                               
                   ElseIf lngColorIndexCF = 3 Then
                       If IsNumeric(ActiveCell) = False Then
                                MsgBox " Error 1.2 : ESTAB Number is not numeric your data cannot be loaded untill this is corrected ."
       
                       ElseIf (ActiveCell.Row) < Range("Last_Nursery").Rows.Count Then
                                                 MsgBox "Error 2.2 :The DfE reference number should be a number in the nursery school ranges: 1000-1099 or 1800-1899"
                       ElseIf (ActiveCell.Row) < Range("Last_PriMiddle").Rows.Count Then
                                                 MsgBox "Error 2.3 :The DfE reference number should be a number in the primary school ranges: 2000-3999, 5200-5299 or 5940-5949"
                       ElseIf (ActiveCell.Row) < Range("Last_SecMiddle").Rows.Count Then
                                                 MsgBox "Error 2.4 :The DfE reference number should be a number in the secondary school ranges: 4000-4899, 5400-5499 or 5900-5939"
                       ElseIf (ActiveCell.Row) < Range("Last_Special").Rows.Count Then
                                                 MsgBox "Error 2.5 :The DfE reference number should be a number in the special school ranges: 5950-5999 or 7000-7999"
                       End If
                    End If

             End If
       End If
       
   End If

End Sub


Private Function ColorIndexOfCF(Rng As Range) As Integer
    Dim AC As Integer
    ColorIndexOfCF = 0
    AC = ActiveCondition(Rng)
    If AC <> 0 Then
        ColorIndexOfCF = Rng.FormatConditions(AC).Interior.ColorIndex
    End If
End Function

Private Function ActiveCondition(Rng As Range) As Integer
    Dim Ndx As Long
    Dim FC As FormatCondition
    If Rng.FormatConditions.Count <> 0 Then
        For Ndx = 1 To Rng.FormatConditions.Count
            Set FC = Rng.FormatConditions(Ndx)
            If Application.Evaluate(FC.Formula1) Then
                ActiveCondition = Ndx
                Exit Function
            End If
        Next Ndx
    End If
    ActiveCondition = 0
End Function
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
 
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim strErrorWarning As String
    Dim strEWnumber As String
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngFirstDataRow As Long
    Dim lngErrRangeOffset As Long
    Dim lngColorIndexCF As Long
    Dim lngErrCol As Long
    Dim lngerrRow As Long
    Dim strjunko As String

    If IsError(ActiveCell) Then Exit Sub

    lngFirstDataRow = 11
    strErrorWarning = ""

    lngColorIndexCF = ColorIndexOfCF(Range(ActiveCell.AddressLocal))
    'Gets the conditional formatting applied to the cell if there is one.
    
    If (ActiveCell.Row) < 11 Then
             If lngColorIndexCF = 3 Then
                  MsgBox "Error 1.1: All LA details must be present"
            End If
    End If
    
    If lngColorIndexCF = 36 Then
        If (ActiveCell.Row = 64 Or ActiveCell.Row = 43) Then
            If (ActiveCell) = 0 Then
                     MsgBox "Query 1.6 : You have entered a zero amount in this cell.Please check your entry as the value in this cell should be greater than zero."
            End If
        ElseIf (ActiveCell.Row = 43) Then
            If (ActiveCell) <> 0 Then
                     MsgBox "Query 1.4 : Please check your entry in this cell.Exam fees for primary schools should normally equal zero ."
            End If
        ElseIf (ActiveCell.Row = 15 Or ActiveCell.Row = 36 Or ActiveCell.Row = 37 Or ActiveCell.Row = 38 Or ActiveCell.Row = 39 Or ActiveCell.Row = 47 Or ActiveCell.Row = 48 Or ActiveCell.Row = 76 Or ActiveCell.Row = 77) Then
            If (ActiveCell) = 0 Then
                     MsgBox "Query 1.3 : You have entered a negative or zero amount in this cell.Please check your entry as the value in this cell should be greater than zero."
             Else
        
                     MsgBox "Query 1.2 :You have entered a negative amount in this cell.Please check your entry as the value in this cell should be zero or positive."
            End If
        Else
        
                     MsgBox "Query 1.2 :You have entered a negative amount in this cell.Please check your entry as the value in this cell should be zero or positive."
        End If
    End If
    If lngColorIndexCF = 40 Then
    
                    MsgBox "Error 1.1 :Value is missing. Do not leave this cell blank. Instead, please enter a zero if that is the amount your authority budgeted for this category."
    End If
    If lngColorIndexCF = 3 Then
            If IsNumeric(ActiveCell) = False Then
            
                MsgBox "Error 1.2: The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"
           
                   
            ElseIf (ActiveCell.Row = 14 Or ActiveCell.Row = 41 Or ActiveCell.Row = 44 Or ActiveCell.Row = 60 Or ActiveCell.Row = 64) Then
                If (ActiveCell) = 0 Then
                    MsgBox "Error 1.4: The value in this cell should be positive (not 0 or negative)"
                ElseIf (ActiveCell) < 0 Then
                    MsgBox "Error 1.3: The value in this cell must be greater than or equal 0"
                End If
               
            Else
                If (ActiveCell) < 0 Then
                    MsgBox "Error 1.3: The value in this cell must be greater than or equal 0"
                End If
            End If
    End If
End Sub

Private Function ColorIndexOfCF(Rng As Range) As Integer
    Dim AC As Integer
    ColorIndexOfCF = 0
    AC = ActiveCondition(Rng)
     If AC <> 0 Then
        ColorIndexOfCF = Rng.FormatConditions(AC).Interior.ColorIndex
    End If
End Function

Private Function ActiveCondition(Rng As Range) As Integer
    Dim Ndx As Long
    Dim FC As FormatCondition
    If Rng.FormatConditions.Count <> 0 Then
        For Ndx = 1 To Rng.FormatConditions.Count
            Set FC = Rng.FormatConditions(Ndx)
             If Application.Evaluate(FC.Formula1) Then
                ActiveCondition = Ndx
                Exit Function
            End If
        Next Ndx
    End If
    ActiveCondition = 0
End Function
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
 
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim strErrorWarning As String
    Dim strEWnumber As String
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngFirstDataRow As Long
    Dim lngErrRangeOffset As Long
    Dim lngColorIndexCF As Long
    Dim lngErrCol As Long
    Dim lngerrRow As Long
    Dim strjunko As String

    If IsError(ActiveCell) Then Exit Sub

    lngFirstDataRow = 11
    strErrorWarning = ""

    lngColorIndexCF = ColorIndexOfCF(Range(ActiveCell.AddressLocal))
    'Gets the conditional formatting applied to the cell if there is one.
    
    If (ActiveCell.Row) < 11 Then
             If lngColorIndexCF = 3 Then
                  MsgBox "Error 1.1: All LA details must be present"
            End If
    End If
    
    If lngColorIndexCF = 40 Then
                    MsgBox "Error 1.1 :Value is missing. Do not leave this cell blank. Instead, please enter a zero if that is the amount your authority budgeted for this category."
    End If
    If lngColorIndexCF = 36 Then

                     MsgBox "Query 1.2 :You have entered a negative amount in this cell.Please check your entry as the value in this cell should be greater than zero."
       
    End If
    If lngColorIndexCF = 3 Then
        If (ActiveCell) < 0 Then
            MsgBox "Error 1.3: The value in this cell must be greater than or equal 0"
        ElseIf IsNumeric(ActiveCell) = False Then
            MsgBox "Error 1.2: The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"
        End If
   End If
End Sub

Private Function ColorIndexOfCF(Rng As Range) As Integer
    Dim AC As Integer
    ColorIndexOfCF = 0
    AC = ActiveCondition(Rng)
     If AC <> 0 Then
        ColorIndexOfCF = Rng.FormatConditions(AC).Interior.ColorIndex
    End If
End Function

Private Function ActiveCondition(Rng As Range) As Integer
    Dim Ndx As Long
    Dim FC As FormatCondition
    If Rng.FormatConditions.Count <> 0 Then
        For Ndx = 1 To Rng.FormatConditions.Count
            Set FC = Rng.FormatConditions(Ndx)
             If Application.Evaluate(FC.Formula1) Then
                ActiveCondition = Ndx
                Exit Function
            End If
        Next Ndx
    End If
    ActiveCondition = 0
End Function

Attribute VB_Name = "Sorting"
Option Explicit

Sub Start_Sort(strField As String, strOrdering As String)
    ' This routine will sort the column either ascending or descending
    Dim lngPhaseTop As Long
    Dim lngPhaseBottom As Long
    Dim strPhase As String
    Dim strPhaseBase As String
    Dim lngCounter As Long
    Dim strTBPassWord As String
    
    
    strTBPassWord = "mariko"
    ActiveWorkbook.Sheets("Table B").Unprotect (strTBPassWord)
    For lngCounter = 1 To 6
        strPhase = Switch(lngCounter = 1, "Nursery", _
                          lngCounter = 2, "Primary", _
                          lngCounter = 3, "PriMiddle", _
                          lngCounter = 4, "Secondary", _
                          lngCounter = 5, "SecMiddle", _
                          lngCounter = 6, "Special")
        strPhaseBase = Switch(lngCounter = 1, "TotalNursery", _
                              lngCounter = 2, "PriMiddle", _
                              lngCounter = 3, "TotalPrimary", _
                              lngCounter = 4, "SecMiddle", _
                              lngCounter = 5, "TotalSecondary", _
                              lngCounter = 6, "TotalSpecial")
        lngPhaseTop = Range(strPhase).Row + 1
        lngPhaseBottom = Range(strPhaseBase).Row - 2
        Call SortIt(lngPhaseTop, lngPhaseBottom, strField, strOrdering)
    Next lngCounter
    ActiveWorkbook.Sheets("Table B").Protect (strTBPassWord)
End Sub

Sub SortIt(lngPhaseTop As Long, lngPhaseBottom As Long, _
           strField As String, strOrder As String)
    Dim strPhaseRange As String
    Dim strPhaseKey As String

    strPhaseRange = "A" & lngPhaseTop & ":U" & lngPhaseBottom
    Select Case strField
        Case "DFES"
            strPhaseKey = "C" & lngPhaseTop
        Case "LAREF"
            strPhaseKey = "A" & lngPhaseTop
        Case "SCHOOL"
            strPhaseKey = "B" & lngPhaseTop
    End Select

    If strOrder = "ASC" Then
        Range(strPhaseRange).Sort key1:=Range(strPhaseKey), Order1:=xlAscending
    Else
        Range(strPhaseRange).Sort key1:=Range(strPhaseKey), Order1:=xlDescending
    End If
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "frmInsert"
Attribute VB_Base = "0{385577E1-4CE6-4698-89DD-5A789C57DD95}{7C7B5208-104B-4E8D-82B7-83EBF3BAB264}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
    Me.Hide
End Sub

Private Sub cmdInsert_Click()
    Me.Hide
    If Me.optNursery.Value = True Then
        Call SchoolAdd("Nursery")
    ElseIf Me.optPrimary.Value = True Then
        Call SchoolAdd("Primary")
    ElseIf Me.optPriMiddle.Value = True Then
        Call SchoolAdd("PriMiddle")
    ElseIf Me.optSecondary.Value = True Then
        Call SchoolAdd("Secondary")
    ElseIf Me.optSecMiddle.Value = True Then
        Call SchoolAdd("SecMiddle")
    ElseIf Me.optSpecial.Value = True Then
        Call SchoolAdd("Special")
    End If
End Sub

Private Sub UserForm_Activate()
    Me.optNursery.Value = True
End Sub
Attribute VB_Name = "frmSorting"
Attribute VB_Base = "0{6B146583-768E-4FBC-B81F-7801A5CB3ED7}{A01D2A55-A997-4709-A616-F324BB4EF60A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
    Me.Hide
End Sub

Private Sub cmdOK_Click()
    Dim strOrder As String

    Me.Hide
    If Me.optAscending.Value = True Then
        strOrder = "ASC"
    Else
        strOrder = "DESC"
    End If
    If Me.optDfES.Value = True Then
        Call Start_Sort("DFES", strOrder)
    ElseIf Me.optLAref.Value = True Then
        Call Start_Sort("LAREF", strOrder)
    ElseIf Me.optSchool.Value = True Then
        Call Start_Sort("SCHOOL", strOrder)
    End If
End Sub

Private Sub UserForm_Initialize()
    Me.optAscending.Value = True
    Me.optSchool.Value = True
End Sub


INQUEST-PP=macro
