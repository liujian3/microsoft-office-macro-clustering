Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    If ActiveWorkbook.Saved = False Then
        ActiveWorkbook.Save
    End If
    'Sicherung
    Dim mOK As Byte
    mOK = MsgBox("Sicherungskopie erstellen?", _
    vbYesNo + vbQuestion + vbDefaultButton2, "Sicherungskopie")
    If mOK = vbYes Then
        ActiveWorkbook.SaveCopyAs "C:\Users\Schulung\Documents\Sicherung_" & _
        Format(Date, "ddd dd-mm-yyyy")
    End If
End Sub


Private Sub Workbook_BeforePrint(Cancel As Boolean)
    If ActiveWorkbook.Saved = False Then
        ActiveWorkbook.Save
    End If
End Sub


Private Sub Workbook_Open()
    Worksheets("Liste").Activate
    Range("A1").Select
End Sub
Attribute VB_Name = "DritterFreitagBerechnen"
Option Explicit


Private Sub Start_Click()
    Dim mAkt As Date
    Dim mTag As Byte
    Dim mMonat As Byte
    Dim mZ|fffd|hler As Byte
    Dim mFlag As Boolean
    '
    mZeile = 2
    mAkt = Range("A1")
    mTag = Day(mAkt)
    mMonat = Month(mAkt)
    Do
        'Test auf Fr
        If Weekday(mAkt) = vbFriday Then
            mZ|fffd|hler = mZ|fffd|hler + 1
        End If
        mAkt = mAkt + 1
        'letzter Tag des Monats raus
        If mZ|fffd|hler = 3 Then
            Cells(mZeile, 1) = mAkt - 1
            mZeile = mZeile + 1
            'Monat weiter
            mAkt = CDate("01." & CStr(mMonat + 1) & "." & CStr(Year(mAkt)))
            mMonat = mMonat + 1
            mFlag = True
            mZ|fffd|hler = 0
        End If
        If mMonat = 13 And mFlag = True And mZ|fffd|hler = 0 Then Exit Do
        mFlag = False
    Loop
       
End Sub


Attribute VB_Name = "Export"
Option Explicit

Sub Fehlerfloskel()
    On Error GoTo mFehler
    'Anweisungen
    
    
    
    
    
mWeiter:
    Exit Sub
    
mFehler:
    MsgBox Err.Number & vbCrLf & Err.Description
    Resume mWeiter
       
    
End Sub





Sub Export()
    Dim mWord As Object
    'Fehler
    On Error Resume Next
    'Zugriff auf Word
    Set mWord = GetObject()
    'Test auf Fehler
    If Err.Number > 0 Then
        Set mWord = CreateObject(Class:="Word.Application")    'Word ge|fffd|ffnet, aber nur als Prozess im Arbeitsspeicher
        Err.Clear
    End If
    '
    mWord.Application.Visible = True
    mWord.Application.Activate
    '
    mWord.documents.Add
    '
    With mWord
    
    
    
        .ActiveDocument.Tables.Add Range:=.Selection.Range, NumRows:=2, NumColumns:= _
        5, DefaultTableBehavior:=1, AutoFitBehavior:=0
        '   With .Selection.Tables(1)
        '        If .Style <> "Tabellenraster" Then
        '            .Style = "Tabellenraster"
        '        End If
        '        .ApplyStyleHeadingRows = True
        '        .ApplyStyleLastRow = False
        '        .ApplyStyleFirstColumn = True
        '        .ApplyStyleLastColumn = False
        '        .ApplyStyleRowBands = True
        '        .ApplyStyleColumnBands = False
        '    End With
        .Selection.MoveRight Unit:=1, Count:=5, Extend:=1
        .Selection.Font.Bold = 9999998
        .Selection.ParagraphFormat.Alignment = 1
        .Selection.MoveLeft Unit:=1, Count:=1
        
        'Daten
        mZeile = 1
        'Schleife
        Worksheets("Liste").Activate
        Do While Not Cells(mZeile, 1) = ""
            For i = 1 To 5
                .Selection = Cells(mZeile, i)
                If i = 5 And Cells(mZeile + 1, 1) = "" Then Exit Do
                .Selection.MoveRight Unit:=12
            Next i
            mZeile = mZeile + 1
        Loop
            .Selection.MoveRight Unit:=1
     End With
    
    
End Sub







Attribute VB_Name = "Funktionen"
Option Explicit


Sub Dir_Test()
    Dim mDatei As String, mZiel As String
    mZiel = "C:\Windows\*.ini"
    'Erste
    mDatei = Dir(mZiel)
    'Schleife
    Do While mDatei <> ""
        Debug.Print mDatei
        'weitere
        mDatei = Dir
    Loop
End Sub


Sub mit_Abstand()
    Dim mOK As Byte
    mOK = MsgBox("Wollen Sie l|fffd|schen?" & vbCrLf & "Nicht r|fffd|ckg|fffd|ngig", vbYesNo + vbQuestion + vbDefaultButton2, "L|fffd|schen")
    '
    If mOK = vbYes Then
        'L|fffd|schen
        MsgBox "Gel|fffd|scht"   'Hier wird nichts weiterverarbeitet, daher Leerzeichen nach MsgBox
    End If
End Sub



Public Function GK(mtext As String) As String
    'Ergebnis
    GK = UCase(Left(mtext, 1)) & LCase(Mid(mtext, 2))
End Function




Public Function Encrypt(mtext As String) As String
    Dim mZiel As String, mControl As String
    mControl = ")*'-=/%$%%?/$/'*?)//(&%(#+#+#+.-.,.-/()&/()=/()="
    'Schleife
    For i = 1 To Len(mtext)
        mZiel = mZiel & Chr(Asc(Mid(mtext, i, 1)) Xor Asc(Mid(mControl, i, 1)))
    Next i
    Encrypt = mZiel
        
End Function




Attribute VB_Name = "Import"
Option Explicit



Sub Import_Text()
    Dim mZeile As String, mDatei As String, mArr As Variant
    Dim mZiel As String
    Dim mAuswahl As Variant
    
    '|fffd|ffnen
    mDatei = "H:\Liste.txt"
    '
    With Application.FileDialog(msoFileDialogFilePicker)
        .AllowMultiSelect = True
        .InitialFileName = mDatei
        .ButtonName = "Datei |fffd|ffnen"
        .Filters.Add "Text", "*.txt; *.csv"
        .Filters.Add "Excel", "*.xlsx; *.xlsb; *.xlsm"
        .Filters.Add "Alle", "*.*"
        .Title = "Textdatei ausw|fffd|hlen"
        .Show
        For Each mAuswahl In .SelectedItems
            Debug.Print mAuswahl
        Next mAuswahl
    
    End With
    
End Sub



Sub |fffd|ffnen_Text()
    Dim mZeil As String, mDatei As String, mArr As Variant, mZiel As String
    mDatei = "H:\Liste.txt"
    
    'Neues Blatt
    Worksheets.Add After:=Worksheets(Worksheets.Count)
    mZeile = 1
    
    Open mDatei For Input As #1
    
    Do While Not EOF(1)
        Input #1, mZeil
        mArr = Split(mZeil, Chr(9))            'Chr(9) = Tab
        'Schreiben
        For i = LBound(mArr) To UBound(mArr)
            Cells(mZeile, i + 1) = mArr(i)      ' i+1   deswegen da Array bei Null anf|fffd|ngt
            'Datum
            If i = 2 And mZeile > 1 Then
                Cells(mZeile, i + 1) = DateValue(Cells(mZeile, i + 1))   'Text in Datum umwandeln
            End If
        Next i
        mZeile = mZeile + 1
    Loop
        
    Close #1
End Sub



Sub |fffd|ffnen_TextCSV()
    Dim mZeil As String, mDatei As String, mArr As Variant, mZiel As String
    mDatei = "H:\Liste.csv"
    
    'Neues Blatt
    Worksheets.Add After:=Worksheets(Worksheets.Count)
    mZeile = 1
    
    Open mDatei For Input As #1
    
    Do While Not EOF(1)
        Input #1, mZeil
        mArr = Split(mZeil, ";")
        'Schreiben
        For i = LBound(mArr) To UBound(mArr)
            Cells(mZeile, i + 1) = mArr(i)      ' i+1   deswegen da Array bei Null anf|fffd|ngt
            'Datum
'            If i = 2 And mZeile > 1 Then
'                Cells(mZeile, i + 1) = DateValue(Cells(mZeile, i + 1))   'Text in Datum umwandeln
'            End If
        Next i
        mZeile = mZeile + 1
    Loop
        
    Close #1
End Sub




Sub ImportAccess()
    Dim dbe As Object    ' As DAO.DBEngine
    Dim db  As Object    ' As DAO.Database
    Dim dbfile As String
    dbfile = "H:\Nordwind.mdb"
    
    Set dbe = CreateObject("DAO.DBEngine.120")   ' ab Acc2007
    Set db = dbe.OpenDatabase(dbfile)
    
    Dim rst As DAO.Recordset
    
    Set rst = db.OpenRecordset("Bestelldetails", dbOpenSnapshot)
    
    'Neues Blatt
    Worksheets.Add After:=Worksheets(Worksheets.Count)
    
    '|fffd|berschrift
    For i = 0 To rst.Fields.Count - 1
        Cells(1, i + 1) = rst.Fields(i).Name
    Next i
    
    'Daten
    mZeile = 2
    Do While Not rst.EOF
        For i = 0 To rst.Fields.Count - 1
            Cells(mZeile, i + 1) = rst.Fields(i)
        Next i
        mZeile = mZeile + 1
        rst.MoveNext
    Loop
    
End Sub

Attribute VB_Name = "Objekte"
Option Explicit


Sub Hierarchie()
    Application.Workbooks("Mappe1.xlsm").Worksheets("Tabelle1").Range("I1").Value = 15
    'tempor|fffd|re Objekte
'    ActiveWorkbook
'    ActiveSheet
'    ActiveCell
'
'    Range
'    ActiveWindow
    
    
End Sub




Sub summen1()
    Dim mSumme As Single
    mZeile = 2
    'Schleife
    Worksheets("Liste").Activate
    Do While Not Cells(mZeile, 1) = ""
        mSumme = mSumme + Cells(mZeile, 5)
        mZeile = mZeile + 1
     
    Loop
    Range("L1") = "Summe"
    Range("M1") = mSumme
    Range("M1").NumberFormat = "#,##0.00 |fffd|"
    
End Sub




Sub Ende_Ermitteln1()
    Dim mZl As Long, MsP As Integer
    '
    mZl = Cells.SpecialCells(xlCellTypeLastCell).Row
    MsP = Cells.SpecialCells(xlCellTypeLastCell).Column
    '
    Debug.Print mZl, MsP
        
End Sub


Sub EndeErmitteln2()
    Range("A300000").End(xlUp).Select
    '
    Dim mAdr As String
    mAdr = ActiveCell.Address
    'Zeile
    Dim mZl As Long
    mZl = CLng(Mid(mAdr, 4))
    
End Sub



Sub Bedingte_Formatierung()
    mZeile = 2
    Worksheets("Liste").Activate
    Range("A:E").ClearFormats
    'Schleife
    Do While Not Cells(mZeile, 1) = ""
        If Trim(LCase(Cells(mZeile, 3))) = "rot" Then
            Range(Cells(mZeile, 1), Cells(mZeile, 5)).Interior.Color = RGB(220, 200, 200)
        End If
        If Trim(LCase(Cells(mZeile, 3))) = "blau" Then
            Range(Cells(mZeile, 1), Cells(mZeile, 5)).Interior.Color = RGB(200, 200, 220)
        End If
        mZeile = mZeile + 1
    Loop
    With Range(Cells(1, 1), Cells(mZeile - 1, 5))
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With

End Sub




Sub Export()
    Dim mMappe As String, mBlatt As String
    'Quelle
    mMappe = ActiveWorkbook.Name
    mBlatt = "Liste"
    mZeile = 2
    'Ziel
    Workbooks.Add
    Dim mZl As Long: mZl = 2
    'Schleife
    With Workbooks(mMappe).Worksheets(mBlatt)
        '|fffd|berschrift
        For i = 1 To 5
            Cells(1, i) = .Cells(1, i)
        Next i
        Do While Not .Cells(mZeile, 1) = ""
            'Test auf schreiben
            If Trim(LCase(.Cells(mZeile, 2))) = "ulm" Then
                For i = 1 To 5
                    Cells(mZl, i) = .Cells(mZeile, i)
                Next i
                mZl = mZl + 1
            End If
            mZeile = mZeile + 1
        Loop
        
    End With
End Sub





Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Range("A1") = ActiveCell.Address
    Range("A2") = Target
    'Test auf Spalte
    Dim mAdr As String
    mAdr = ActiveCell.Address
    
    If (Mid(mAdr, 2, 1) = "A" Or Mid(mAdr, 2, 1) = "B") And Mid(mAdr, 3, 1) = "$" Then
        Cells(CLng(Mid(mAdr, 4)), 3).Select        'springt in Spalte 3
    End If
    
    'Test auf Zahl
    
    Dim mWert As String
    mWert = Target
'    On Error Resume Next
'    If CSng(mWert) > 0 Then
'        'weg
'        If Err.Number > 0 Then
'            'keine Zahl
'            Err.Clear
'            Exit Sub
'        End If
'    End If

    'Test mit VAL
    If InStr(1, mWert, ",") > 0 Then
        mWert = Replace(mWert, ",", ".")
    End If
    If Val(mWert) > 0 Then
        Cells(CLng(Mid(mAdr, 4)), Asc(Mid(mAdr, 2, 1)) - 63).Select
    End If




End Sub
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Monatsauswahl, 2, 0, MSForms, ComboBox"
Attribute VB_Control = "Steuer, 1, 1, MSForms, CheckBox"
Option Explicit

Private Sub Monatsauswahl_Change()
    Range("G6") = Monatsauswahl.Column(0)
    Range("G7") = Monatsauswahl.Column(1)
End Sub




Private Sub Steuer_Click()
    If Steuer = True Then
        Steuer.BackColor = RGB(220, 220, 220)
        Steuer.Caption = "Mit Steuer !"
        Range("G3") = MwSt
        Range("G3").NumberFormat = "0%"
    Else
        Steuer.BackColor = RGB(255, 255, 255)
        Steuer.Caption = "Mit Steuer ?"
        Range("G3").Clear
    End If
End Sub
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Start, 1, 0, MSForms, CommandButton"
Option Explicit


Private Sub Start_Click()
    Dim mAkt As Date
    Dim mTag As Byte
    Dim mMonat As Byte
    Dim mZ|fffd|hler As Byte
    Dim mFlag As Boolean
    '
    mZeile = 2
    mAkt = Range("A1")
    mTag = Day(mAkt)
    mMonat = Month(mAkt)
    Do
        'Test auf Fr
        If Weekday(mAkt) = vbFriday Then
            mZ|fffd|hler = mZ|fffd|hler + 1
        End If
        mAkt = mAkt + 1
        'letzter Tag des Monats raus
        If mZ|fffd|hler = 3 Then
            Cells(mZeile, 1) = mAkt - 1
            mZeile = mZeile + 1
            'Monat weiter
            mAkt = CDate("01." & CStr(mMonat + 1) & "." & CStr(Year(mAkt)))
            mMonat = mMonat + 1
            mFlag = True
            mZ|fffd|hler = 0
        End If
        If mMonat = 13 And mFlag = True And mZ|fffd|hler = 0 Then Exit Do
        mFlag = False
    Loop
       
End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Variablen"
Option Explicit

Option Compare Text
'Textvergleich

Option Base 1   ' verhindert dass der Array bei Null anf|fffd|ngt zu z|fffd|hlen
'Arrays

'|fffd|ffentliche Variable f|fffd|r alle Module
Public mZeile As Long, mSpalte As Integer
Public i As Long, j As Long, k As Long  'f|fffd|r jede Variable muss der Typ deklariert werden


' |fffd|ffentliche Variable nur in diesem Modul
Dim mUser As String

Dim mDatei As Workbook



Public mMonat(12) As String


Public Const MwSt As Single = 0.19








Sub Monat_f|fffd|llen()
    'Schleife
    For i = 1 To 12
        mMonat(i) = MonthName(i)
    Next i
End Sub






'Lokale Variablen

Sub VarTest1()
    'deklarieren
    Dim mtext As String, mWert As Single
    'f|fffd|llen
    mtext = "Schulung"
    mWert = 1234.5
    
    'Arbeiten, |fffd|berladen
    mtext = mtext & ",vba"
    '|fffd|bergeben
'    Call VarTest2(mText, mWert, True)
'    VarTest2 mText, mWert, True
    'benannte Argumente
    Call VarTest2(xWert:=mWert, xLogisch:=True, xText:=mtext)
    
End Sub


Sub VarTest2(xText As String, xWert As Single, Optional xLogisch As Boolean)
    Debug.Print xText, xWert, xLogisch
End Sub




Sub Arraytest()
    'eindimensionales Array
    Dim mArr1(12) As Byte    'hier keine Variablen m|fffd|glich
    'zweidimensionale
    Dim mArr2(12, 4) As Byte
    'dreidimensional
    Dim Arr3(12, 4, 3) As Byte
    
    'Variable Arrays
    Dim mArr_Var() As Byte
    'ermitteln
    Dim mAnz As Integer
    mAnz = 12
    ReDim mArr_Var(mAnz) As Byte      'nur mit Redim m|fffd|glich
    
    
End Sub


INQUEST-PP=macro
