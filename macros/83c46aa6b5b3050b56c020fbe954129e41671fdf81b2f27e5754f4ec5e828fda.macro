Attribute VB_Name = "Module1"
Public pagearray(200) As String
Public startslide As Integer
Private Declare Function GetSystemMetrics Lib "user32.dll" (ByVal indexnum As Long) As Long

Public Sub OnSlideSelectionChanged(ByVal SldRange As SlideRange)

MsgBox "hit slide selection"

'Application.Caption = ActivePresentation.Name

'For Each Window In Application.Windows
    
    'Window.Activate
    'Application.Caption = ActivePresentation.Name
    'MsgBox Application.Caption
        
'Next Window

'OnWindowActivate(ByVal Pres As Presentation, ByVal Win As DocumentWindow)

End Sub

Public Sub littlelines(control As IRibbonControl)
On Error Resume Next

If ActiveWindow.Selection.ShapeRange(1).Type = msoTable Then

Set tableobj = ActiveWindow.Selection.ShapeRange(1).Table

For y = 1 To tableobj.Rows.Count
    For x = 1 To tableobj.Columns.Count
        If tableobj.Cell(y, x).Selected Then
            If firstrowhit = True Then
                'donothing
            Else
                firstselectedrow = y
                firstrowhit = True
            End If
            'MsgBox "row: " & y & ", col: " & x
            lastselectedrow = y
        End If
    Next
Next

numrows = lastselectedrow - firstselectedrow + 1

If numrows < 2 Then
    MsgBox "Select at least between which new divider rows are to be inserted.", vbExclamation
    End
End If

numdividers = numrows - 1

'MsgBox numdividers

For j = 0 To numdividers - 1

    newrow1 = firstselectedrow + 1 + (j * 3)
    newrow2 = firstselectedrow + 2 + (j * 3)

    ActiveWindow.Selection.ShapeRange(1).Table.Rows.Add (newrow1)
    ActiveWindow.Selection.ShapeRange(1).Table.Rows.Add (newrow1)

For x = 1 To tableobj.Columns.Count
    For y = newrow1 To newrow2
        With tableobj.Cell(y, x)
            .Borders.Item(ppBorderBottom).Transparency = 1
            .Borders.Item(ppBorderTop).Transparency = 1
            .Borders.Item(ppBorderLeft).Transparency = 1
            .Borders.Item(ppBorderRight).Transparency = 1
        End With
    Next y
Next x

For x = 1 To tableobj.Columns.Count
    For y = newrow1 To newrow2

        With tableobj.Cell(y, x)
            .Shape.Fill.Visible = msoFalse
            .Shape.TextFrame.MarginBottom = 0
            .Shape.TextFrame.MarginTop = 0
            .Shape.TextFrame.MarginLeft = 0
            .Shape.TextFrame.MarginRight = 0
            .Shape.TextFrame.TextRange.Font.Size = 1
            
            If y = newrow1 Then
            
                With .Borders.Item(ppBorderBottom)
                
                .Transparency = 0
                .Visible = msoTrue
                .Weight = 0.5
                .ForeColor.RGB = RGB(190, 190, 190)
                .DashStyle = msoLineSolid
                
                End With
                
            End If
            
        End With
        
        tableobj.Rows(y).Height = 3.5
    Next y
Next x

Next j

SendKeys ("{ESC}")
SendKeys ("{ESC}")

End If

End Sub

Sub copyinplace()
On Error Resume Next

firsttop = ActiveWindow.Selection.ShapeRange.Top
firstleft = ActiveWindow.Selection.ShapeRange.Left
firstwidth = ActiveWindow.Selection.ShapeRange.Width

ActiveWindow.Selection.Copy

Dim shp As Object

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

Set shp = ActivePresentation.Slides(slidenum).Shapes.Paste

shp.Top = firsttop
shp.Left = firstleft

shp.Select

End Sub

Sub abouttab(control As IRibbonControl)

UserForm3.Show

End Sub

Sub onLoad(ribbon As IRibbonUI)
End Sub

Sub test()

rightval = ActiveWindow.Selection.ShapeRange.Left + ActiveWindow.Selection.ShapeRange.Width
MsgBox rightval

End Sub

Sub width25()
On Error Resume Next

ActiveWindow.Selection.ShapeRange.Width = 720.1251

End Sub

Sub width20()
On Error Resume Next

    ActiveWindow.Selection.ShapeRange.Width = 648

End Sub

Sub width10()
On Error Resume Next

ActiveWindow.Selection.ShapeRange.Width = 306.1417

End Sub

Sub normalscript()
On Error Resume Next

ActiveWindow.Selection.TextRange.Font.Superscript = msoFalse
ActiveWindow.Selection.TextRange.Font.Subscript = msoFalse

End Sub

Sub slidenavigator()
On Error Resume Next

'Checks that a pres is open first
openvar = ActiveWindow.Presentation.Name
If Err.Number <> "0" Then
    Exit Sub
End If
'End book check

Set haveexited = Nothing

UserForm1.ListBox1.Clear
UserForm1.ListBox2.Clear
UserForm1.ListBox3.Clear

startslide = ActiveWindow.Selection.SlideRange.SlideNumber

i = 0
adj = 0

Dim currentslide As Slide

For Each currentslide In ActivePresentation.Slides
       
    i = i + 1
    If currentslide.Shapes.Title.TextFrame.TextRange.Text = "" Then
            UserForm1.ListBox1.AddItem ("Slide " & i)
    Else
            UserForm1.ListBox1.AddItem (currentslide.Shapes.Title.TextFrame.TextRange.Text)
    End If
    UserForm1.ListBox2.AddItem (i)
    
    testvar = currentslide.Shapes("shp_Folio").TextFrame.TextRange.Text
    
    If Len(ActiveWindow.View.Slide.Shapes("shp_Folio").TextFrame.TextRange.Text) > 0 Then
        UserForm1.ListBox3.AddItem (currentslide.Shapes("shp_Folio").TextFrame.TextRange.Text)
        pagearray(Int(currentslide.Shapes("shp_Folio").TextFrame.TextRange.Text)) = i
                If testvar = "" Then
            UserForm1.ListBox3.AddItem (" ")
        End If
    End If
    
Set testvar = Nothing

Next currentslide

UserForm1.ListBox1.BorderColor = RGB(35, 40, 60)
UserForm1.ListBox2.BorderColor = RGB(35, 40, 60)
UserForm1.ListBox3.BorderColor = RGB(35, 40, 60)

UserForm1.ListBox1.Height = ((i - adj) * 10.485) + 1.8
UserForm1.ListBox2.Height = ((i - adj) * 10.485) + 1.8
UserForm1.ListBox3.Height = ((i - adj) * 10.485) + 1.8
UserForm1.Height = ((i - adj) * 10.485) + 1.8 + 58.2
UserForm1.CommandButton1.Top = UserForm1.Height + 5
UserForm1.BackColor = RGB(215, 220, 220)

resheight = GetSystemMetrics(1)
If UserForm1.Height > resheight * 0.73 Then
    UserForm1.Height = resheight * 0.73
    UserForm1.ListBox1.Height = UserForm1.Height - 58.2
    UserForm1.ListBox2.Height = UserForm1.Height - 58.2
    UserForm1.ListBox3.Height = UserForm1.Height - 58.2
End If

currenttitle = ActiveWindow.View.Slide.Shapes.Title.TextFrame.TextRange.Text
currentpagenum = ActiveWindow.View.Slide.Shapes("shp_Folio").TextFrame.TextRange.Text

UserForm1.ListBox1.Selected(startslide - 1) = True
UserForm1.ListBox2.Selected(startslide - 1) = True
UserForm1.ListBox3.Selected(startslide - 1) = True

UserForm1.Show
UserForm1.ListBox1.SetFocus
enterpressed = False
Set haveexited = Nothing

End Sub

Sub swapshapes()
On Error Resume Next

'Checks that a pres is open first
testvar = ActiveWindow.Presentation.Name
If Err.Number <> "0" Then
    Exit Sub
End If
'End book check

secondshapetest = ActiveWindow.Selection.ShapeRange(2).Left
    If Err.Number <> "0" Then
        MsgBox "2 shapes must be selected for their positions to be swapped."
        End
    End If

thirdshapetest = ActiveWindow.Selection.ShapeRange(3).Left
    If Err.Number = "0" Then
        MsgBox "2 shapes must be selected for their positions to be swapped."
        End
    End If
       
left1 = ActiveWindow.Selection.ShapeRange(1).Left
top1 = ActiveWindow.Selection.ShapeRange(1).Top

left2 = ActiveWindow.Selection.ShapeRange(2).Left
top2 = ActiveWindow.Selection.ShapeRange(2).Top

ActiveWindow.Selection.ShapeRange(1).Left = left2
ActiveWindow.Selection.ShapeRange(1).Top = top2

ActiveWindow.Selection.ShapeRange(2).Left = left1
ActiveWindow.Selection.ShapeRange(2).Top = top1

End Sub

Sub pasteinplace()
On Error Resume Next

ActivePresentation.Application.Activate

oldtop = Application.ActiveWindow.Selection.ShapeRange.Top
oldleft = Application.ActiveWindow.Selection.ShapeRange.Left
Application.ActiveWindow.Selection.Delete

Application.ActiveWindow.View.PasteSpecial DataType:=ppPasteEnhancedMetafile

Application.ActiveWindow.Selection.ShapeRange.Top = oldtop
Application.ActiveWindow.Selection.ShapeRange.Left = oldleft

End Sub

Sub editfootnote()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For i = 1 To 100

If ActivePresentation.Slides(slidenum).Shapes(i).Name = "shp_FootNote" Then
    ActivePresentation.Slides(slidenum).Shapes(i).Select
    Exit For
End If
Next i

If Err.Number <> "" Then SendKeys ("{F2}")

End Sub

Sub edittitle()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For i = 1 To 100

If Mid(ActivePresentation.Slides(slidenum).Shapes(i).Name, 1, 5) = "Title" Then
    ActivePresentation.Slides(slidenum).Shapes(i).Select
    Exit For
End If
Next i

If Err.Number <> "" Then SendKeys ("{F2}")

End Sub

Sub editstrapline()
On Error Resume Next
slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    lowerbound = 107
    upperbound = 127
Else
    lowerbound = 116
    upperbound = 136
End If

For i = 1 To 100

If Mid(ActivePresentation.Slides(slidenum).Shapes(i).Name, 1, 19) = "Content Placeholder" Then
    If ActivePresentation.Slides(slidenum).Shapes(i).Top > lowerbound And ActivePresentation.Slides(slidenum).Shapes(i).Top < upperbound Then
        ActivePresentation.Slides(slidenum).Shapes(i).Select
        Exit For
    End If
End If
Next i

If Err.Number <> "" Then SendKeys ("{F2}")

End Sub

Sub addfootnoteref()
On Error Resume Next

'Checks that a pres is open first
testvar = ActiveWindow.Presentation.Name
If Err.Number <> "0" Then
    Exit Sub
End If
'End book check

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

footnotenum = InputBox("Enter footnote number to reference", "Insert Footnote Reference")

With ActivePresentation.Slides(slidenum).Shapes.addtextbox(msoTextOrientationHorizontal, 360, 30, 30, 10)
        .TextFrame.TextRange.Text = "(" & footnotenum & ")"
        .TextFrame.TextRange.Font.Size = 7
        .TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter
        .Select
End With

End Sub

Sub addtbu()
On Error Resume Next

var_width = 85.03937
var_height = 50
    
testvar = ActiveWindow.Selection.ShapeRange.Name
If Err.Number <> "0" Then
    var_top = 77.76
    var_left = 670.8356
Else
    var_top = ActiveWindow.Selection.ShapeRange.Top + (ActiveWindow.Selection.ShapeRange.Height / 2) - (21.81 / 2)
    var_left = ActiveWindow.Selection.ShapeRange.Left + ((ActiveWindow.Selection.ShapeRange.Width / 2) - (85.03937 / 2))
End If

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For i = 1 To 20
    ActivePresentation.Slides(slidenum).Shapes("updatedbox").Delete
Next i

    With ActivePresentation.Slides(slidenum).Shapes.addtextbox(msoTextOrientationHorizontal, var_left, var_top, var_width, var_height)
        .Name = "tbubox"
        .TextFrame.TextRange.Text = "TBU"
        .TextFrame.TextRange.Font.Size = 12
        .TextFrame.TextRange.Font.Name = "Garamond"
        .TextFrame.TextRange.Font.Bold = msoTrue
        .TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter
        .TextFrame.TextRange.Font.Color = RGB(255, 255, 255)
        .Fill.BackColor.RGB = RGB(255, 0, 0)
        .Select
    End With
      
End Sub

Sub adddottedred()
On Error Resume Next

Dim shp As Shape

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

Set shp = ActivePresentation.Slides(slidenum).Shapes.AddShape(msoShapeRectangle, 320, 178, 200, 200)
shp.Fill.Visible = msoFalse
shp.Line.ForeColor.RGB = RGB(255, 0, 0)
shp.Line.DashStyle = msoLineDash
shp.Line.Weight = 1
shp.Select

End Sub

Sub addstrapline()
On Error Resume Next

Dim shp As Shape

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    leftcoord = 107.25
    topcoord = 117.36
    boxheight = 395
Else
    leftcoord = 107.25
    topcoord = 126.125
    boxheight = 395
End If

Set shp = ActivePresentation.Slides(slidenum).Shapes.addtextbox(msoTextOrientationHorizontal, leftcoord, topcoord, 648, boxheight)
shp.Name = "Content Placeholder"
shp.TextFrame.AutoSize = ppAutoSizeNone
shp.TextFrame.TextRange.Font.Name = "Garamond"
shp.TextFrame.TextRange.Font.Size = 12
shp.TextFrame.TextRange.Font.Bold = msoTrue
shp.TextFrame.TextRange.Font.Color.RGB = RGB(5, 130, 190)
shp.TextFrame.MarginLeft = 0
shp.TextFrame.MarginRight = 0
shp.TextFrame.MarginBottom = 0
shp.TextFrame.MarginTop = 5.96
shp.TextFrame.TextRange.Text = "[Strapline]"
shp.Select

SendKeys "{F2}"

End Sub

Sub addtableheading()
On Error Resume Next

Dim shp As Shape

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    leftcoord = 107.25
    topcoord = 154.47
Else
    leftcoord = 107.25
    topcoord = 164.47
End If

Set shp = ActivePresentation.Slides(slidenum).Shapes.AddTable(1, 1, leftcoord, topcoord, 648, 17.28)
shp.Name = "headingbox"
shp.Table.Cell(1, 1).Shape.Fill.ForeColor.RGB = RGB(255, 255, 255)
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Name = "Garamond"
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Size = 12
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Bold = msoTrue
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Color.RGB = RGB(5, 130, 190)
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Text = "HEADING"
shp.Table.Cell(1, 1).Shape.TextFrame.MarginBottom = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginLeft = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginTop = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginRight = 1.4
shp.Table.Cell(1, 1).Borders.Item(ppBorderBottom).ForeColor.RGB = RGB(5, 130, 190)
shp.Table.Cell(1, 1).Borders.Item(ppBorderBottom).Visible = True
shp.Table.Cell(1, 1).Borders.Item(ppBorderBottom).Weight = 1
shp.Table.Cell(1, 1).Shape.Height = 17.28
shp.Height = 17.28
shp.Select

End Sub

Sub addtableheadingdark()
On Error Resume Next

Dim shp As Shape

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    leftcoord = 107.25
    topcoord = 154.47
Else
    leftcoord = 107.25
    topcoord = 164.47
End If

Set shp = ActivePresentation.Slides(slidenum).Shapes.AddTable(1, 1, leftcoord, topcoord, 648, 17.28)
shp.Name = "headingbox"
shp.Table.Background.Fill.Visible = msoTrue
shp.Table.Cell(1, 1).Shape.Fill.Visible = msoTrue
shp.Table.Cell(1, 1).Shape.Fill.ForeColor.RGB = RGB(5, 130, 190)
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Name = "Garamond"
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Size = 12
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Bold = msoTrue
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
shp.Table.Cell(1, 1).Shape.TextFrame.TextRange.Text = "HEADING"
shp.Table.Cell(1, 1).Shape.TextFrame.MarginBottom = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginLeft = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginTop = 1.4
shp.Table.Cell(1, 1).Shape.TextFrame.MarginRight = 1.4
shp.Table.Cell(1, 1).Borders.Item(ppBorderBottom).Visible = msoFalse
shp.Table.Cell(1, 1).Shape.Height = 17.28
shp.Height = 17.28
shp.Select

End Sub

Sub deleteboxes()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For i = 1 To 10
    ActivePresentation.Slides(slidenum).Shapes("tbubox").Delete
Next i
For i = 1 To 10
    ActivePresentation.Slides(slidenum).Shapes("updatedbox").Delete
Next i

End Sub

Sub addupdated()
On Error Resume Next

var_width = 85.03937
var_height = 50
    
testvar = ActiveWindow.Selection.ShapeRange.Name
If Err.Number <> "0" Then
    var_top = 77.76
    var_left = 670.8356
Else
    var_top = ActiveWindow.Selection.ShapeRange.Top + (ActiveWindow.Selection.ShapeRange.Height / 2) - (21.81 / 2)
    var_left = ActiveWindow.Selection.ShapeRange.Left + ((ActiveWindow.Selection.ShapeRange.Width / 2) - (85.03937 / 2))
End If

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For i = 1 To 20
    ActivePresentation.Slides(slidenum).Shapes("tbubox").Delete
Next i

    With ActivePresentation.Slides(slidenum).Shapes.addtextbox(msoTextOrientationHorizontal, var_left, var_top, var_width, var_height)
        .Name = "updatedbox"
        .TextFrame.TextRange.Text = "Updated"
        .TextFrame.TextRange.Font.Size = 12
        .TextFrame.TextRange.Font.Name = "Garamond"
        .TextFrame.TextRange.Font.Bold = msoTrue
        .TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter
        .TextFrame.TextRange.Font.Color = RGB(255, 255, 255)
        .Fill.BackColor.RGB = RGB(90, 140, 35)
        .Select
    End With
      

End Sub

Sub h0()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Left = 35.88
Else
    ActiveWindow.Selection.ShapeRange.Left = 36
End If
    
End Sub


Sub h1()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Left = 107.25
Else
    ActiveWindow.Selection.ShapeRange.Left = 108.25
End If

End Sub

Sub h2()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Left = 755.875 - ActiveWindow.Selection.ShapeRange.Width
Else
    ActiveWindow.Selection.ShapeRange.Left = 756.875 - ActiveWindow.Selection.ShapeRange.Width
End If


End Sub

Sub snapmiddle()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Left = 420.876 - (ActiveWindow.Selection.ShapeRange.Width / 2)
Else
    ActiveWindow.Selection.ShapeRange.Left = 396 - (ActiveWindow.Selection.ShapeRange.Width / 2)
End If

End Sub

Sub v0()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 77.76
Else
    ActiveWindow.Selection.ShapeRange.Top = 86.4
End If

End Sub

Sub v1()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 117.36
Else
    ActiveWindow.Selection.ShapeRange.Top = 126.125
End If

End Sub

Sub v2()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 154.47
Else
    ActiveWindow.Selection.ShapeRange.Top = 164.47
End If

End Sub

Sub v3()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 172.74
Else
    ActiveWindow.Selection.ShapeRange.Top = 182.74
End If

End Sub

Sub v4()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 330
Else
    ActiveWindow.Selection.ShapeRange.Top = 340
End If

End Sub

Sub v5()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 348.7793
Else
    ActiveWindow.Selection.ShapeRange.Top = 358.7793
End If

End Sub

Sub v6()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActiveWindow.Selection.ShapeRange.Top = 513.7169 - ActiveWindow.Selection.ShapeRange.Height
Else
    ActiveWindow.Selection.ShapeRange.Top = 522.25 - ActiveWindow.Selection.ShapeRange.Height
End If

End Sub

Sub v7()
On Error Resume Next

If ActivePresentation.PageSetup.SlideWidth > 800 Then 'ours
    ActiveWindow.Selection.ShapeRange.Top = 555.7774 - ActiveWindow.Selection.ShapeRange.Height
Else
    ActiveWindow.Selection.ShapeRange.Top = 565.5 - ActiveWindow.Selection.ShapeRange.Height
End If

End Sub

Sub addline()
On Error Resume Next
slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

If ActivePresentation.PageSetup.SlideWidth > 800 Then
    ActivePresentation.Slides(slidenum).Shapes.addline(107.25, 512.207, 755.875, 512.207).Select
Else
    ActivePresentation.Slides(slidenum).Shapes.addline(107.25, 521.25, 755.875, 521.25).Select
End If

ActiveWindow.Selection.ShapeRange.Name = "baselineshape"
ActiveWindow.Selection.ShapeRange.Line.ForeColor.RGB = RGB(5, 130, 190)

End Sub

Sub selectline()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For Each Shape In ActivePresentation.Slides(slidenum).Shapes
   If Shape.Name = "baselineshape" Then Shape.Select msoFalse
Next Shape

End Sub

Sub selectheadingbox()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

For Each Shape In ActivePresentation.Slides(slidenum).Shapes
   If Shape.Name = "headingbox" Then Shape.Select msoFalse
Next Shape

End Sub

Sub selectbody()
On Error Resume Next

slidenum = ActiveWindow.Selection.SlideRange.SlideNumber

ActiveWindow.Selection.Unselect


For Each Shape In ActivePresentation.Slides(slidenum).Shapes
    If Shape.Name = "shp_PresTitle" Or Shape.Name = "shp_SDPTitle" Or (Left(Shape.Name, 19) = "Content Placeholder" And Shape.Top > 100 And Shape.Top < 130) Or Shape.Name = "shp_FootNote" Or Shape.Name = "shp_Folio" Or Left(Shape.Name, 6) = "Title " Or Shape.Top < 100 Then
        'do nothing
    Else
        Shape.Select msoFalse
    End If
Next Shape


End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{6BDBB2B0-1BBE-49AA-B119-9D12A6BB19A8}{FF33833A-7297-443E-AFF0-0A7914F2D955}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public enterpressed As Boolean
Public haveexited As Boolean

Private Sub CommandButton3_Click()
Unload Me

If enterpressed = True Then
    fakevar = 0
Else
    ActivePresentation.Slides(startslide).Select
End If

haveexited = False
enterpressed = False

End Sub

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub ListBox1_Change()
On Error Resume Next

If haveexited = True Then
    haveexited = False
Else
    ActivePresentation.Slides(UserForm1.ListBox1.ListIndex + 1).Select
    UserForm1.ListBox2.Selected(UserForm1.ListBox1.ListIndex) = True
    UserForm1.ListBox3.Selected(UserForm1.ListBox1.ListIndex) = True
End If

End Sub

Private Sub ListBox2_Change()
On Error Resume Next

If haveexited = True Then
    haveexited = False
Else
    ActivePresentation.Slides(Int(UserForm1.ListBox2.Value)).Select
    UserForm1.ListBox1.Selected(UserForm1.ListBox2.ListIndex) = True
    UserForm1.ListBox3.Selected(UserForm1.ListBox2.ListIndex) = True
End If

End Sub

Private Sub ListBox3_Change()
On Error Resume Next

If haveexited = True Then
    haveexited = False
Else
    ActivePresentation.Slides(Int(pagearray(Int(UserForm1.ListBox3.Value)))).Select
    UserForm1.ListBox1.Selected(UserForm1.ListBox3.ListIndex) = True
    UserForm1.ListBox2.Selected(UserForm1.ListBox3.ListIndex) = True
End If

End Sub

Private Sub ListBox1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
On Error Resume Next

If KeyAscii = 13 Then
enterpressed = True
haveexited = True
UserForm1.Hide
End If

End Sub

Private Sub ListBox2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
On Error Resume Next

If KeyAscii = 13 Then
enterpressed = True
haveexited = True
UserForm1.ListBox1.SetFocus
UserForm1.Hide
End If

End Sub

Private Sub ListBox3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
On Error Resume Next

If KeyAscii = 13 Then
enterpressed = True
haveexited = True
UserForm1.ListBox1.SetFocus
UserForm1.Hide
End If

End Sub

Private Sub UserForm_Terminate()
On Error Resume Next

If enterpressed = True Then
    fakevar = 0
Else
    ActivePresentation.Slides(startslide).Select
End If

haveexited = False
enterpressed = False

End Sub


Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{60B38E96-942C-43A1-A409-CE30F80EF115}{A12AC7CD-A57C-4AC4-8B44-52083D6D4504}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub CommandButton2_Click()
Shell ("Explorer Mailto://John@long.com")
End Sub

Private Sub UserForm_Initialize()
CommandButton1.Top = 300
UserForm3.BackColor = RGB(215, 220, 220)
End Sub


INQUEST-PP=macro
