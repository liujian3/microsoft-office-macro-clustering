Attribute VB_Name = "Compta"
' Version 0.0.1714.0
' Pour compta non MCH

Option Explicit

Private Sub Workbook_BeforePrint(Cancel As Boolean)
    Application.Calculate
End Sub

Function GetBalanceOrError(compte As String, colonne As Integer) As Variant
    GetBalanceOrError = GetSolde(compte, colonne)
End Function

Function GetSolde(compte As String, colonne As Integer) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")

    Dim result As Variant
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
      
    If result = 0 Then
      result = ""
    End If
    
    GetSolde = result
End Function


Function GetBalance(compte As String, colonne As Integer) As Variant
    GetBalance = GetSoldeNoError(compte, colonne)
End Function

Function GetBalance0(compte As String, colonne As Integer) As Variant
    GetBalance0 = GetSoldeNoError(compte, colonne)
    
    If GetBalance0 = "" Then
      GetBalance0 = 0
    End If
    
    
End Function


Function GetSoldeNoError(compte As String, colonne As Integer) As Variant
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")
    
    Dim result As Variant
    
    Err.Clear
    On Error Resume Next
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
    
    If result = 0 Then
      result = ""
    End If
    
    GetSoldeNoError = result
End Function


Function GetTitre(compte As String) As String
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")

    Dim result As Variant
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:D"), 2, False)
      
    If result = 0 Then
      result = ""
    End If
    
    GetTitre = result
End Function

Function GetTitreNoError(compte As String) As String
'    Application.Volatile (True)

    Dim sheet As Worksheet
        Set sheet = ThisWorkbook.Sheets("COMPTA")

    Dim result As Variant
    
    Err.Clear
    On Error Resume Next
    
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:D"), 2, False)
      
    If result = 0 Then
      result = ""
    End If
    
    GetTitreNoError = result
End Function

Function TextInfo(textnum As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("INFOTEXTS")
    TextInfo = sheet.Cells(textnum, 2)
End Function

Function TextCresus(textnum As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTATEXTS")
    TextCresus = sheet.Cells(textnum, 2)
End Function

Function TextCompany() As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextCompany = sheet.Cells(2, 2)
End Function

Function SoldeFinNoError(compte As String) As Variant
    SoldeFinNoError = GetSoldeNoError(compte, 3)
End Function

Function SoldeBudgetNoError(compte As String) As Variant
    SoldeBudgetNoError = GetSoldeNoError(compte, 4)
End Function

Function SoldePrecedentNoError(compte As String) As Variant
    SoldePrecedentNoError = GetSoldeNoError(compte, 5)
End Function
    
Private Function TitreCompteNoError(compte As String) As Variant
    TitreCompteNoError = GetSoldeNoError(compte, 2)
End Function
    
Function GetSoldeFSNoErr(compte As Variant, colonne As Integer, fs As Variant) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    
    If fs = 71 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA71")
    ElseIf fs = 72 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA72")
    ElseIf fs = 73 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA73")
    ElseIf fs = 0 Or fs = "" Then
      Set sheet = ThisWorkbook.Sheets("COMPTA")
    ElseIf fs = 1 Then
      Set sheet = ThisWorkbook.Sheets("COMPTAGEN")
    Else
      GetSoldeFSNoErr = CVErr(2000)
    End If

    Dim result As Variant
    On Error Resume Next
    
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
    
    GetSoldeFSNoErr = result

End Function
    

Function GetSoldeFS(compte As Variant, colonne As Integer, fs As Variant) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    
    If fs = 71 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA71")
    ElseIf fs = 72 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA72")
    ElseIf fs = 73 Then
      Set sheet = ThisWorkbook.Sheets("COMPTA73")
    ElseIf fs = 0 Or fs = "" Then
      Set sheet = ThisWorkbook.Sheets("COMPTA")
    ElseIf fs = 1 Then
      Set sheet = ThisWorkbook.Sheets("COMPTAGEN")
    Else
      GetSoldeFS = CVErr(2000)
    End If

    Dim result As Variant
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
    
    If result = 0 Then
      result = ""
    End If
    
    GetSoldeFS = result

End Function



Function GetSoldeFonction(compte As Variant, colonne As Integer) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("FONCTIONS")

    Dim result As Variant
    Dim key As String
        key = compte
    
    result = Application.WorksheetFunction.VLookup(key, sheet.Range("A:S"), colonne, False)
    
    If result = 0 Then
      result = ""
    End If
    
    GetSoldeFonction = result
    
End Function


Function TitreFonction(compte As Variant) As Variant
    TitreFonction = GetSoldeFonction(compte, 2)
End Function


Function SoldeFonction(compte As Variant) As Variant
    SoldeFonction = GetSoldeFonction(compte, 3)
End Function


Function GetSoldeFonctionDCGeneral(compte As Variant, colonne As Integer, investissement As Integer) As Double
    Dim sheet As Worksheet
    
    If (investissement = 1) Then
        Set sheet = ThisWorkbook.Sheets("FUNCTIONSGROUPINVEST")
    Else
        Set sheet = ThisWorkbook.Sheets("FUNCTIONSGROUP")
    End If

    Dim result As Variant
    Err.Clear
    On Error Resume Next
    Err.Clear
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
    
    If result = 0 Then
      result = ""
    End If
    
    If Err.Number = 0 Then
      GetSoldeFonctionDCGeneral = result
    Else
      GetSoldeFonctionDCGeneral = ""
    End If
      
End Function


Function GetSoldeFonctionDC(compte As Variant, colonne As Integer) As Double
    GetSoldeFonctionDC = GetSoldeFonctionDCGeneral(compte, colonne, 0)
End Function


Function GetSoldeFonctionDC_I(compte As Variant, colonne As Integer) As Double
    GetSoldeFonctionDC_I = GetSoldeFonctionDCGeneral(compte, colonne, 1)
End Function


Function GetSoldeNatureDC(compte As Variant, colonne As Integer) As Variant
    Dim sheet As Worksheet
    
    Set sheet = ThisWorkbook.Sheets("NATURESALL")

    Dim result As Variant
    Err.Clear
    On Error Resume Next
    Err.Clear
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:S"), colonne, False)
    
    If result = 0 Then
      result = ""
    End If
    
    Dim errno As Integer
    errno = Err.Number
    
    If Err.Number = 0 Then
      GetSoldeNatureDC = result
    Else
      GetSoldeNatureDC = ""
    End If
      
End Function

Function SoldeBudgetFonction(compte As Variant) As Variant
    SoldeBudgetFonction = GetSoldeFonction(compte, 4)
End Function


Function SoldePrecedentFonction(compte As Variant) As Variant
    SoldePrecedentFonction = GetSoldeFonction(compte, 5)
End Function

Function SoldeBilanDebut(compte As String) As Variant
    SoldeBilanDebut = GetSolde(compte, 3)
End Function

Function SoldeBilanFin(compte As String) As Variant
    SoldeBilanFin = GetSolde(compte, 5)
End Function

Function SoldeBilanFinNoErr(compte As String) As Variant
    SoldeBilanFinNoErr = GetSoldeNoError(compte, 5)
End Function


Function SoldeFin(compte As String) As Variant
    SoldeFin = GetSolde(compte, 3)
End Function

Function SoldeBudget(compte As String) As Variant
    SoldeBudget = GetSolde(compte, 4)
End Function

Function SoldePrecedent(compte As String) As Variant
    SoldePrecedent = GetSolde(compte, 5)
End Function

Function SoldeFinFS(compte As Variant, fs As Integer) As Variant
    SoldeFinFS = GetSoldeFS(compte, 3, fs)
End Function

Function SoldeBudgetFS(compte As Variant, fs As Integer) As Variant
    SoldeBudgetFS = GetSoldeFS(compte, 4, fs)
End Function

Function SoldePrecedentFS(compte As Variant, fs As Integer) As Variant
    SoldePrecedentFS = GetSoldeFS(compte, 5, fs)
End Function

Function SoldeFinFSNoErr(compte As Variant, fs As Integer) As Variant
    SoldeFinFSNoErr = GetSoldeFSNoErr(compte, 3, fs)
End Function

Function SoldeBudgetFSNoErr(compte As Variant, fs As Integer) As Variant
    SoldeBudgetFSNoErr = GetSoldeFSNoErr(compte, 4, fs)
End Function

Function SoldePrecedentFSNoErr(compte As Variant, fs As Integer) As Variant
    SoldePrecedentFSNoErr = GetSoldeFSNoErr(compte, 5, fs)
End Function


Function SoldeBudgetN(compte As String, annee As Integer) As Variant
' Donne le budget de ann|fffd|e "+N"

    If annee < 0 Or annee > 5 Then
      Debug.Print "SoldeBudgetN: erreur d'argument: annee doit |fffd|tre compris entre 0 et 5"
      SoldeBudgetN = CVErr(xlErrNA)
    Else
        SoldeBudgetN = GetSolde(compte, 13 + annee)
    End If
End Function


Function SoldePrecedentN(compte As Variant, annee As Integer) As Variant
' Donne le solde pr|fffd|c|fffd|dent de ann|fffd|e "-N"

    If annee < -6 Or annee > -1 Then
      Debug.Print "SoldePrecedentN: erreur d'argument: annee doit |fffd|tre compris entre -6 et -1"
      SoldePrecedentN = CVErr(xlErrNA)
    Else
        SoldePrecedentN = GetSolde(compte, 13 - annee)
    End If
End Function


Function SoldeBudgetR(compte As Variant) As Variant
' Donne le solde pr|fffd|c|fffd|dent de ann|fffd|e "-N"
    SoldeBudgetR = GetSolde(compte, 6)
End Function


Function SoldeDebut(compte As String) As Variant
    SoldeDebut = GetSolde(compte, 5)
End Function


Function SF(compte As String)
    SF = SoldeFin(compte)
End Function


Function SoldeDiff(compte As String) As Double
    SoldeDebut = GetSolde(compte, 14)
End Function

Function AccountName(compte As String) As Variant
    AccountName = TitreCompte(compte)
End Function

Function TitreCompte(compte As String) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")

    Dim result As Variant
    
    Err.Clear
    On Error Resume Next
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:D"), 2, False)
      
    If result = 0 Then
      result = " < Le compte n'existe pas >"
    End If
    
    TitreCompte = result
End Function


Function TitreCompte2(compte As String) As Variant
    TitreCompte2 = GetSolde(compte, 2)
End Function


Function AnneeCompta() As Integer
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    AnneeCompta = sheet.Cells(1, 2)
End Function

Function TextYear(annee As Integer) As String
    TextYear = TextAnneeCompta(annee)
End Function

Function TextAnneeCompta(annee As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextAnneeCompta = TextCompta(3) & " " & AnneeCompta() + annee
End Function


Function TextCommune() As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextCommune = sheet.Cells(2, 2)
End Function


Function TextBudgetCompta(annee As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextBudgetCompta = TextCompta(7) & " " & AnneeCompta() + annee
End Function

Function SystemInfo(numtext As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("SYSTEMINFO")
    Dim temp As String
    temp = sheet.Cells(numtext, 1)
    SystemInfo = temp
End Function

Function TextCompta(numero As Integer) As Variant
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextCompta = sheet.Cells(numero, 2)
End Function

Function TextFS(fs As Variant) As String
    Dim result As String
    
    If fs = 71 Then
      result = TextCompta(60)
    ElseIf fs = 72 Then
      result = TextCompta(61)
    ElseIf fs = 73 Then
      result = TextCompta(62)
    ElseIf fs = 0 Or fs = "" Then
      result = TextCompta(58)
    ElseIf fs = 1 Then
      result = TextCompta(59)
    End If
    
    TextFS = result
End Function

Function RevenuCourant(fs As Variant) As Double
    RevenuCourant = _
        GetSoldeFSNoErr("40", 3, fs) _
        + GetSoldeFSNoErr("41", 3, fs) _
        + GetSoldeFSNoErr("42", 3, fs) _
        + GetSoldeFSNoErr("43", 3, fs) _
        + GetSoldeFSNoErr("46", 3, fs)
End Function

Function DetteNette_1(fs As Variant) As Double
  DetteNette_1 = SoldeBilanFin("20") - SoldeBilanFin("10")
End Function

Function InvestissementsBruts(fs As Variant) As Double
    InvestissementsBruts = _
        GetSoldeFSNoErr("50", 3, fs) _
        + GetSoldeFSNoErr("51", 3, fs) _
        + GetSoldeFSNoErr("52", 3, fs) _
        + GetSoldeFSNoErr("55", 3, fs) _
        + GetSoldeFSNoErr("55", 3, fs) _
        + GetSoldeFSNoErr("56", 3, fs)
End Function

Function DepensesCourantes(fs As Variant) As Double
    DepensesCourantes = _
        GetSoldeFSNoErr("31", 3, fs) _
        - GetSoldeFSNoErr("3180", 3, fs) _
        + GetSoldeFSNoErr("34", 3, fs) _
        - GetSoldeFSNoErr("344", 3, fs) _
        + GetSoldeFSNoErr("36", 3, fs) _
        - GetSoldeFSNoErr("364", 3, fs) _
        - GetSoldeFSNoErr("365", 3, fs) _
        - GetSoldeFSNoErr("366", 3, fs) _
        + GetSoldeFSNoErr("380", 3, fs) _
        + GetSoldeFSNoErr("381", 3, fs) _
        + GetSoldeFSNoErr("3840", 3, fs)
End Function

Function DetteBrute(fs As Variant) As Double
  DetteBrute = _
    SoldeBilanFinNoErr("200") _
    + SoldeBilanFinNoErr("201") _
    - SoldeBilanFinNoErr("2016") _
    + SoldeBilanFinNoErr("206") - _
    SoldeBilanFinNoErr("216")
End Function


Function InfoCompta(numero As Integer, annee As Integer) As Variant
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("MCHDATA")
    InfoCompta = sheet.Cells(numero, 3 + annee)
End Function


Function MyTestFunction(n As Integer) As Variant
    Dim result As Integer
    
    result = n * 2
    
    If result = 0 Then
        MyTestFunction = ""
    Else
        MyTestFunction = result
    End If
End Function



Function Diff(n1 As Variant, n2 As Variant) As Variant
    Dim result As Double
    
    If n1 = "" Then
      n1 = 0
    End If
    
     If n2 = "" Then
      n2 = 0
    End If

    result = n1 - n2
    
    If result = 0 Then
        Diff = ""
    Else
        Diff = result
    End If
End Function


Function Balance(n1 As Variant, n2 As Variant) As Variant
    Dim result As Variant

    If n1 = "" Then
      n1 = 0
    End If
    
     If n2 = "" Then
      n2 = 0
    End If
    
    If n1 = n2 Then
      result = ""
    End If
    
    If n1 > n2 Then
      result = ""
    Else
      result = n2 - n1
    End If
    
    If result = 0 Then
      result = ""
    End If
    
    Balance = result
    
End Function


Function Balance2(n1 As Variant, n2 As Variant, colonne As Integer) As Variant
    Dim result As Variant
    Dim temp As Variant
    
    If colonne = 1 Then
      temp = n1
      n1 = n2
      n2 = temp
    End If

    If n1 = "" Then
      n1 = 0
    End If
    
     If n2 = "" Then
      n2 = 0
    End If
    
    If n1 = n2 Then
      result = ""
    End If
    
    If n1 > n2 Then
      result = ""
    Else
      result = n2 - n1
    End If
    
    If result = 0 Then
      result = ""
    End If
    
    Balance2 = result
    
End Function


Function AlmostEqual(n1 As Variant, n2 As Variant) As Boolean
  If (n1 = "") Then
    n1 = 0
  End If
  
  If (n2 = "") Then
    n2 = 0
  End If
  
  AlmostEqual = (Abs(n1 - n2) < 0.01)
End Function




Attribute VB_Name = "F_AFFECTBENEF1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_ANNEXE1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_BILAN1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_BILAN2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_COUVERTURE"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_RESULTAT1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_RESULTAT2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
' Cette fonction est appell|fffd|e |fffd| l'ouverture du fichier
' Ici on modifie l'ent|fffd|te pour l'impression de toutes les feuilles

    Dim sheetIndex, numsheets As Integer
    
    numsheets = ThisWorkbook.Sheets.Count
    sheetIndex = 1
    
'    While (sheetIndex <= numsheets)
'        ThisWorkbook.Sheets(sheetIndex).PageSetup.CenterHeader = "&B&12" & TextCommune() & "&B"
'          sheetIndex = sheetIndex + 1
'    Wend

    Application.ErrorCheckingOptions.BackgroundChecking = False
    Application.Calculate
    
'    Call AssignTabNames
    
    Me.Saved = True
    
End Sub


Private Sub Workbook_BeforePrint(Cancel As Boolean)
' Cette fonction est appell|fffd|e avant l'impression
' Elle lance un recalcul de tout afin d'|fffd|viter d'imprimer des donn|fffd|es non recalcul|fffd|es
    Application.Calculate
End Sub


Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    Debug.Print "----------------------------"
    Debug.Print "BeforeSave"
End Sub


Private Sub Workbook_AfterSave(ByVal Success As Boolean)
    If Success Then
      Debug.Print "AfterSave"
      Me.Saved = True
    End If
End Sub


Sub SupprimeSheets_D()
    ' Supprime les feuilles fran|fffd|aises

    Sheets(Array("Couverture", "1 Bilan d|fffd|taill|fffd|", "2 R|fffd|sultat d|fffd|taill|fffd|", "3 Annexes", _
        "4 Affectation b|fffd|n|fffd|fice", "5 Bilan 5 ans", "6 Cpte r|fffd|sultat 5 ans", "7 Ratios", _
        "8 Graphiques", "9 D|fffd|finitions")).Select
        
    Sheets("4 Affectation b|fffd|n|fffd|fice").Activate
    ActiveWindow.SelectedSheets.Delete
End Sub
Sub SupprimeSheets_F()
   ' Supprime les feuilles allemandes

    Sheets(Array("Titelseite", "1 Detaillierte Bilanz", "2 Erfolgsrechnung", _
        "3 Anhang", "4 Gewinnverwendung", "5 F|fffd|nfjahresbilanz", "6 F|fffd|nfj|fffd|hrige ER", _
        "7 Kennzahlen", "8 Grafiken", "9 Definitionen")).Select
    Sheets("1 Detaillierte Bilanz").Activate
    ActiveWindow.SelectedSheets.Delete
End Sub



Attribute VB_Name = "Utilities"
Sub UnhideAllSheets()
    Dim ws As Worksheet
    
    For Each ws In ActiveWorkbook.Worksheets
        ws.Visible = xlSheetVisible
    Next ws
End Sub

Function GetWorksheetFromCodeName(ByVal CodeName As String) As Worksheet
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        If StrComp(ws.CodeName, CodeName, vbTextCompare) = 0 Then
            Set GetWorksheetFromCodeName = ws
            Exit Function
        End If
    Next ws
End Function

Sub EpsitecPrepare()
' Macro |fffd| l'usage d'Epsitec
' S|fffd|lectionner la cellule A1 de chaque Worksheet
' et active le 1er Worksheet

    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        ws.Range("A1").Select
    Next ws
        
    ThisWorkbook.Worksheets(1).Activate
End Sub




INQUEST-PP=macro
