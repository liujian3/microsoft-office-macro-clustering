Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "UpdateKeys, 668, 0, MSForms, CommandButton"
Private Sub UpdateKeys_Click()
    Dim Result As Boolean
    Result = KeyTableUpdater(Me.Name)
End Sub

Private Sub Worksheet_PivotTableUpdate(ByVal Target As PivotTable)
    If Target.Name = "MAIN TABLE" Then
        Dim Result As Boolean
        Result = KeyTableUpdater(Me.Name)
    End If
End Sub

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "UpdateTags, 833, 0, MSForms, CommandButton"
Private Sub UpdateTags_Click()
    TagTableUpdater
End Sub

Private Sub Worksheet_PivotTableUpdate(ByVal Target As PivotTable)
    TagTableUpdater
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "TableUpdaters"
Function KeyTableUpdater(Optional SheetName As String = "") As Boolean
   Dim Empties As Integer
    Dim Line As Integer
    Dim OpenKeys As Integer
    Dim ClosedKeys As Integer
    
    KeyTableUpdater = False
    On Error GoTo ErrorCode
    If SheetName = "" And InStr(ActiveSheet.Name, "Desp") > 0 Then
        SheetName = ActiveSheet.Name
    End If
    If InStr(SheetName, "Desp") = 0 Then
        Dim CSheet As Worksheet
        For Each CSheet In ThisWorkbook.Worksheets
            If InStr(CSheet.Name, "Desp") > 0 Then
                SheetName = CSheet.Name
            End If
        Next CSheet
    End If
    If SheetName = "" Then
        GoTo ErrorCode:
    End If
    
    With Sheets("MCDS + PL")
        Empties = 0
        Line = 20
        OpenKeys = 0
        ClosedKeys = 0
        Do
            If .Range("B" + CStr(Line)) = "" And .Range("D" + CStr(Line)) = "" And .Range("H" + CStr(Line)) = "" And .Range("L" + CStr(Line)) = "" And .Range("M" + CStr(Line)) = "" And .Range("O" + CStr(Line)) = "" And .Range("P" + CStr(Line)) = "" Then
                Empties = Empties + 1
            Else
                Empties = 0
            End If
                
            If .Range("B" + CStr(Line)) = Sheets(SheetName).Range("E26") Or Sheets(SheetName).Range("E26") = "(All)" Or Sheets(SheetName).Range("E26") = "(blank)" And .Range("B" + CStr(Line)) = "" Then
                If InStr(.Range("O" + CStr(Line)), "-") = 0 And InStr(.Range("O" + CStr(Line)), "_") = 0 Then
                    ClosedKeys = ClosedKeys + GetInt(.Range("O" + CStr(Line)))
                End If
                If InStr(.Range("P" + CStr(Line)), "-") = 0 And InStr(.Range("P" + CStr(Line)), "_") = 0 Then
                    OpenKeys = OpenKeys + GetInt(.Range("P" + CStr(Line)))
                End If
            End If
            Line = Line + 1
        Loop Until Empties > 20
    End With
    
    Sheets(SheetName).Range("I29") = OpenKeys
    Sheets(SheetName).Range("I30") = ClosedKeys
    Sheets(SheetName).Range("I31") = "=I29+I30"
    
    KeyTableUpdater = True
    Exit Function
    
ErrorCode:
    m = MsgBox("An error has occurred and the key table has not updated properly", vbExclamation, Err.Description)
End Function

Private Function GetInt(CellString As String) As Integer
    Dim C As String
    Dim N As Integer
    Dim GetString As String
    
    GetInt = 0
    If Len(CellString) > 0 Then
        For N = 1 To Len(CellString)
            C = Mid(CellString, N, 1)
            If Asc(C) >= 48 And Asc(C) <= 57 Then
                GetString = GetString + C
            End If
        Next
    End If
    If Len(GetString) > 0 Then
        GetInt = GetString
    ElseIf CellString <> "" Then
        GetInt = 1
    End If
End Function

Sub TagTableUpdater()
   Dim Empties As Integer
    Dim Line As Integer
    Dim Colors(1, 40) As String
    Dim ColorCount As Integer
    Dim ColorTotals(40) As Integer
    Dim Delivery As String

On Error GoTo ErrorCode
    
    Delivery = Sheets("AD & TAGS").Range("E5")
    ColorCount = 0
    For Line = 9 To 43
        If Sheets("AD & TAGS").Range("K" + CStr(Line)) <> "" And Sheets("AD & TAGS").Range("K" + CStr(Line)) <> "TRAFF" And Sheets("AD & TAGS").Range("K" + CStr(Line)) <> "STICKY" Then
            Colors(0, ColorCount) = Sheets("AD & TAGS").Range("K" + CStr(Line))
            Colors(1, ColorCount) = Line
            ColorCount = ColorCount + 1
        End If
    Next
    
    With Sheets("Key Tag")
        Empties = 0
        Line = 7
        OpenKeys = 0
        ClosedKeys = 0
        Do
            If .Range("C" + CStr(Line)) = "" And .Range("D" + CStr(Line)) = "" And .Range("I" + CStr(Line)) = "" And .Range("J" + CStr(Line)) = "" And .Range("K" + CStr(Line)) = "" And .Range("L" + CStr(Line)) = "" And .Range("M" + CStr(Line)) = "" And .Range("N" + CStr(Line)) = "" And .Range("P" + CStr(Line)) = "" And .Range("R" + CStr(Line)) = "" Then
                Empties = Empties + 1
            Else
                Empties = 0
            End If
            
            If .Range("M" + CStr(Line)) = Delivery Or Delivery = "(All)" Or Delivery = "(blank)" And .Range("M" + CStr(Line)) = "" Then
                For N = 1 To ColorCount
                    If .Range("J" + CStr(Line)) = Colors(0, N - 1) Then
                        ColorTotals(N - 1) = ColorTotals(N - 1) + 1
                        Exit For
                    End If
                Next
            End If
            Line = Line + 1
        Loop Until Empties > 20
    End With
    
    For N = 1 To ColorCount
        Sheets("AD & TAGS").Range("M" + Colors(1, N - 1)) = ColorTotals(N - 1)
        ColorTotals(N - 1) = 0
    Next
    
    With Sheets("Frontal Tags")
        Empties = 0
        Line = 8
        OpenKeys = 0
        ClosedKeys = 0
        Do
            If .Range("C" + CStr(Line)) = "" And .Range("D" + CStr(Line)) = "" And .Range("I" + CStr(Line)) = "" And .Range("J" + CStr(Line)) = "" And .Range("K" + CStr(Line)) = "" And .Range("L" + CStr(Line)) = "" And .Range("M" + CStr(Line)) = "" And .Range("N" + CStr(Line)) = "" And .Range("P" + CStr(Line)) = "" And .Range("R" + CStr(Line)) = "" Then
                Empties = Empties + 1
            Else
                Empties = 0
            End If
            
            If .Range("L" + CStr(Line)) = Delivery Or Delivery = "(All)" Or Delivery = "(blank)" And .Range("L" + CStr(Line)) = "" Then
                For N = 1 To ColorCount
                    If .Range("I" + CStr(Line)) = Colors(0, N - 1) Then
                        ColorTotals(N - 1) = ColorTotals(N - 1) + 1
                        Exit For
                    End If
                Next
            End If
            Line = Line + 1
        Loop Until Empties > 20
    End With
    
    For N = 1 To ColorCount
        Sheets("AD & TAGS").Range("N" + Colors(1, N - 1)) = ColorTotals(N - 1)
        ColorTotals(N - 1) = 0
    Next
    
On Error GoTo ErrorOK
    With Sheets("Cabinet Tag")
        Empties = 0
        Line = 7
        OpenKeys = 0
        ClosedKeys = 0
        Do
            If .Range("C" + CStr(Line)) = "" And .Range("D" + CStr(Line)) = "" And .Range("I" + CStr(Line)) = "" And .Range("J" + CStr(Line)) = "" And .Range("K" + CStr(Line)) = "" And .Range("L" + CStr(Line)) = "" And .Range("M" + CStr(Line)) = "" And .Range("N" + CStr(Line)) = "" And .Range("P" + CStr(Line)) = "" And .Range("R" + CStr(Line)) = "" Then
                Empties = Empties + 1
            Else
                Empties = 0
            End If
            
            If .Range("R" + CStr(Line)) = Delivery Or Delivery = "(All)" Or Delivery = "(blank)" And .Range("R" + CStr(Line)) = "" Then
                For N = 1 To ColorCount
                    If .Range("N" + CStr(Line)) = Colors(0, N - 1) Then
                        ColorTotals(N - 1) = ColorTotals(N - 1) + 1
                        Exit For
                    End If
                Next
            End If
            Line = Line + 1
        Loop Until Empties > 20
    End With
    
    For N = 1 To ColorCount
        If Colors(0, N - 1) <> "BLUE" And Colors(0, N - 1) <> "GREEN" And Colors(0, N - 1) <> "YELLOW" And Colors(0, N - 1) <> "WHITE" Then
            Sheets("AD & TAGS").Range("O" + Colors(1, N - 1)) = ColorTotals(N - 1)
            ColorTotals(N - 1) = 0
        End If
    Next
    
ErrorOK:
Exit Sub
    
ErrorCode:
    m = MsgBox("An error has occurred and the tag table has not updated properly", vbExclamation, Err.Description)
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_BeforePrint(Cancel As Boolean)
    Me.RefreshAll
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    Me.RefreshAll
End Sub


INQUEST-PP=macro
