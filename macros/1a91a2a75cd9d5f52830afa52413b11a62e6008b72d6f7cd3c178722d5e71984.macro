Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "Module1"

Sub Clear()

Dim Msg, Style, TITLE, Response
Beep
Msg = "All input information will be cleared. Do you want to continue?"   ' Define message.
Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
TITLE = "PPC's Workpapers"  ' Define title.
Response = MsgBox(Msg, Style, TITLE)
If Response = vbCancel Then    ' User chose Cancel.
    GoTo Quit
End If

Application.ScreenUpdating = False
Application.EnableEvents = False
Range("InputClear").ClearContents
Range("Agreed").Validation.Delete
Range("FSdate").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Sheet1.Range("a1").Select
Application.EnableEvents = True
Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub
Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
  Range("a1").Select
End Sub
Private Sub Worksheet_Deactivate()
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
'
Dim KeyAmounts As Excel.Range, cell As Range
Set KeyAmounts = Range("Amounts")

For Each cell In Target
    If Union(cell, Range("Amounts")).Address = Range("Amounts").Address And cell.Value = Empty Then
        Application.EnableEvents = False
        cell.Offset(0, 1).Select
        With Selection
            .Validation.Delete
            .ClearContents
        End With
        If ActiveCell.Offset(0, 1).Value <> Empty Then
            ActiveCell.Offset(0, 1).Select
            ActiveCell.ClearContents
            ActiveCell.Offset(0, -1).Select
        End If
        ActiveCell.Offset(0, -1).Select
        Application.EnableEvents = True
    End If
    If Union(cell, Range("Amounts")).Address = Range("Amounts").Address And cell.Value <> Empty Then
    Application.EnableEvents = False
        If cell.Row < KeyAmounts.Row Or cell.Row >= Range("AmountsEnd").Row Then Exit Sub
        If cell.Value > Range("PromHurdle").Value Then
            cell.Offset(0, 1).Select
            With Selection.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                xlBetween, Formula1:="Yes,No"
                .IgnoreBlank = False
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = "PPC's e-Workpapers"
                .InputMessage = ""
                .ErrorMessage = _
                "This is not a valid input. Please select ""Cancel"" and then select ""Yes"" or ""No"" from the drop-down list."
                .ShowInput = True
                .ShowError = True
            End With
            Else
            cell.Offset(0, 1).Select
            With Selection
                .Validation.Delete
                .ClearContents
            End With
            ActiveCell.Offset(0, 1).Select
            ActiveCell.ClearContents
            ActiveCell.Offset(0, -2).Select
        End If
        Application.EnableEvents = True
    End If
    If Union(cell, Range("Agreed")).Address = Range("Agreed").Address Then
    Application.EnableEvents = False
    On Error Resume Next
        If Target.Validation.Type = 3 Then
            If cell.Value = "Yes" Or cell.Value = Empty Then
                If cell.Offset(0, 1).Value <> Empty Then
                cell.Offset(0, 1).Select
                ActiveCell.ClearContents
                ActiveCell.Offset(0, -1).Select
                End If
            End If
            If cell.Value = "No" Then
                cell.Offset(0, 1).Select
            End If
        End If
    Application.EnableEvents = True
    End If
Next cell
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

Dim Item As Range

    Application.ScreenUpdating = False

    If Range("TotProm").Value <> "" Then
        Range("TotProm").Select
        With Selection.Borders(xlBottom)
            .LineStyle = xlDouble
            .Weight = xlThick
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlTop)
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    Else
        Range("TotProm").Select
        Selection.Borders(xlBottom).LineStyle = xlNone
        Selection.Borders(xlTop).LineStyle = xlNone
    End If

    For Each Item In Range("FSInfo")
        If Item.Value = "" Then
            Item.EntireRow.Hidden = True
            Else: Item.EntireRow.Hidden = False
        End If
    Next Item

    Application.ScreenUpdating = True
    Range("A1").Select

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
