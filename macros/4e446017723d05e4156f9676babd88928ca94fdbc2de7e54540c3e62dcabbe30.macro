Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Sub EnableControl(Id As Integer, Enabled As Boolean)
Dim CB As CommandBar
Dim C As CommandBarControl
For Each CB In Application.CommandBars
Set C = CB.FindControl(Id:=Id, recursive:=True)
If Not C Is Nothing Then C.Enabled = Enabled
Next
End Sub

Private Sub Workbook_Activate()
If ActiveWorkbook.ProtectStructure = False Then
GoTo Ende
End If
' Die Befehlsschaltfl|fffd|chen deaktivieren
EnableControl 21, False ' Ausschneiden (cut)
EnableControl 19, False ' Kopieren (copy)
EnableControl 22, False ' Einf|fffd|gen (paste)
EnableControl 755, False ' Inhalte Einf|fffd|gen (pastespecial)
' Tastenkombinationen abfangen
Application.OnKey "^c", "" ' STRG + c kopieren abfangen (copy)
Application.OnKey "^v", "" ' STRG + v einf|fffd|gen abfangen (cut)
Application.OnKey "^x", "" ' STRG + x ausschneiden abfangen (cut)
Application.OnKey "+{DEL}", "" ' SHIFT + ENTF auschneiden abfangen (cut)
Application.OnKey "+{INSERT}", "" ' SHIFT + EINFG einf|fffd|gen abfangen (paste)
' Zellen mit dem Randanfasser verschieben, kopieren verhindern
Application.CellDragAndDrop = False
Ende:
End Sub

Private Sub Workbook_Open()
If ActiveWorkbook.ProtectStructure = False Then
GoTo Ende
End If
' Die Befehlsschaltfl|fffd|chen deaktivieren
EnableControl 21, False ' Ausschneiden (copy)
EnableControl 19, False ' Kopieren (copy)
EnableControl 22, False ' Einf|fffd|gen (paste)
EnableControl 755, False ' '
' Tastenkombinationen abfangen
Application.OnKey "^c", "" ' STRG + c Kopieren (copy)
Application.OnKey "^v", "" ' STRG + v (cut)
Application.OnKey "^x", "" ' STRG + x (paste)
Application.OnKey "+{DEL}", "" ' SHIFT + ENTF (cut)
Application.OnKey "+{INSERT}", "" ' SHIFT + EINFG (paste)
' Zellen mit dem Randanfasser verschieben, kopieren wieder erm|fffd|glichen
Application.CellDragAndDrop = False
Ende:
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
' Die Befehlsschaltfl|fffd|chen wieder aktivieren
EnableControl 21, True ' Ausschneiden (cut)
EnableControl 19, True ' Kopieren (copy)
EnableControl 22, True ' Einf|fffd|gen (paste)
EnableControl 755, True ' pastespecial
' Tastenkombinationen abfangen
Application.OnKey "^c" ' STRG + c (copy)
Application.OnKey "^v" ' STRG + v (cut)
Application.OnKey "^x" ' STRG + x (cut)
Application.OnKey "+{DEL}" ' SHIFT + ENTF (cut)
Application.OnKey "+{INSERT}" ' SHIFT + EINFG (paste)
' Zellen mit dem Randanfasser verschieben, kopieren wieder erm|fffd|glichen
Application.CellDragAndDrop = True
End Sub

Private Sub Workbook_Deactivate()
' Die Befehlsschaltfl|fffd|chen wieder aktivieren
EnableControl 21, True ' Kopieren (copy)
EnableControl 19, True ' Kopieren (copy)
EnableControl 22, True ' Einf|fffd|gen (paste)
EnableControl 755, True ' ' Inhalte Einf|fffd|gen (pastespecial)

' Tastenkombinationen wieder einschalten
Application.OnKey "^c" ' STRG + c Kopieren (copy)
Application.OnKey "^v" ' STRG + v Einf|fffd|gen (paste)
Application.OnKey "^x" ' STRG + v ausschneiden (cut)
Application.OnKey "+{DEL}" ' SHIFT + ENTF (cut)
Application.OnKey "+{INSERT}" ' SHIFT + EINFG (paste)
' Zellen mit dem Randanfasser verschieben, kopieren wieder erm|fffd|glichen
Application.CellDragAndDrop = True
End Sub

Attribute VB_Name = "Tabelle01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 2, 1, MSForms, CommandButton"
Private Sub CommandButton2_Click()

    UserForm2.Show
    
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Tabelle03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle05"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle06"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle07"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle08"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 16, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle09"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 5, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()

    UserForm1.Show
    
End Sub
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 5, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()

    UserForm1.Show
    
End Sub

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 4, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 2, MSForms, CommandButton"
Private Sub CommandButton1_Click()

 If Range("D22") <> "0" And Range("B13") <> "" And Range("B14") <> "" And Range("B23") = "" And Range("A22") = "List Price converted by User Input" Then
    Range("D23:D26").Copy
    Range("B23:B26").PasteSpecial (PasteValues - 4163)
    Range("D31:D35").Copy
    Range("B31:B35").PasteSpecial (PasteValues - 4163)
    Range("C23:C26") = Range("B12")
    Range("C31:C35") = Range("B12")
    Range("D23") = Range("D23") * Range("B14")
    Range("D24") = Range("D24") * Range("B14")
    Range("D25") = Range("D25") * Range("B14")
    Range("D26") = Range("D26") * Range("B14")
    Range("D31") = Range("D31") * Range("B14")
    Range("D32") = Range("D32") * Range("B14")
    Range("D33") = Range("D33") * Range("B14")
    Range("D34") = Range("D34") * Range("B14")
    Range("D35") = Range("D35") * Range("B14")

 GoTo Ende
    
 Else: GoTo Message
 
 End If

Message:
MsgBox "Wrong Input"

Ende:

End Sub

Private Sub CommandButton2_Click()

 If Range("D22") <> "0" And Range("B13") <> "" And Range("B14") <> "" And Range("B23") <> "" And Range("A22") = "List Price according to Price List currency" Then
    Range("D23") = "='Miscellaneous-Remarks'!E49"
    Range("D24") = "='Miscellaneous-Remarks'!E50"
    Range("D25") = "='Miscellaneous-Remarks'!E51"
    Range("D26") = "='Miscellaneous-Remarks'!E52"
    Range("D31") = Range("B31")
    Range("D32") = Range("B32")
    Range("D33") = Range("B33")
    Range("D34") = Range("B34")
    Range("D35") = Range("B35")
    Range("B23:C35").ClearContents
 GoTo Ende
    
 Else: GoTo Message
 
 End If

Message:
MsgBox "Wrong Input"

Ende:

End Sub
Private Sub CommandButton3_Click()

 'Checks whether the structure of the workbook is protected. If yes the protection first has to be removed to show the PL Options sheet
  If ActiveWorkbook.ProtectStructure = True Then
    MsgBox "Workbook is Protected. Please remove the protection to see PL Options!"
    GoTo Ende
  End If
  
 'Makes PL Options visible
  If Sheets("PL Options").Visible = xlVeryHidden Then
    Sheets("PL Options").Visible = True
    GoTo Ende
  End If
  
 'Makes PL Options invisible
  If Sheets("PL Options").Visible = True Then
    Sheets("PL Options").Visible = xlVeryHidden
    GoTo Ende
  End If

Ende:

End Sub
Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
      
    UserForm1.Show

End Sub


Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{E605B4EE-F58E-4D65-A524-24591D6DE217}{79FD6C88-5F73-45F8-858D-0113E822198A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()

    ComboBox1.AddItem "China"        'ListIndex = 0
    ComboBox1.AddItem "France"       'ListIndex = 1
    ComboBox1.AddItem "Germany"      'ListIndex = 2
    ComboBox1.AddItem "CIS"          'ListIndex = 3
    ComboBox1.AddItem "Japan"        'ListIndex = 4
    ComboBox1.AddItem "ROW"          'ListIndex = 5
    ComboBox1.AddItem "USA"          'ListIndex = 6
    'Use drop-down list
    ComboBox1.Style = fmStyleDropDownList
    'Combo box values are ListIndex values
    ComboBox1.BoundColumn = 0
    'Set combo box to first entry
    ComboBox1.ListIndex = 5
 
    ComboBox2.AddItem "50 Hz"        'ListIndex = 0
    ComboBox2.AddItem "60 Hz"        'ListIndex = 2
    'Use drop-down list
    ComboBox2.Style = fmStyleDropDownList
    'Combo box values are ListIndex values
    ComboBox2.BoundColumn = 0
    'Set combo box to first entry
    ComboBox2.ListIndex = 0
         
End Sub

Private Sub CommandButton1_Click()
 
 'Detect currently active sheet
 Dim Current As String
     Current = ActiveSheet.Name
   
 'Select input, if any, and paste the content into the PL Options sheet for further use
  If TextBox1.Value <> "" Then
    TextBox1.SelStart = 0
    TextBox1.SelLength = TextBox1.TextLength
    TextBox1.Copy
    Sheets("PL Options").Activate
    Range("A1").Select
    ActiveSheet.Paste
  End If
  
 'Select input, if any, and paste the content into the PL Options sheet for further use
  If TextBox2.Value <> "" Then
    TextBox2.SelStart = 0
    TextBox2.SelLength = TextBox2.TextLength
    TextBox2.Copy
    Sheets("PL Options").Activate
    Range("A2").Select
    ActiveSheet.Paste
  End If
  
 'Select input, if any, and paste the content into the PL Options sheet for further use
    ComboBox1.SelStart = 0
    ComboBox1.SelLength = ComboBox1.TextLength
    ComboBox1.Copy
    Sheets("PL Options").Activate
    Range("A3").Select
    ActiveSheet.Paste
    
  'Select input, if any, and paste the content into the PL Options sheet for further use
    ComboBox2.SelStart = 0
    ComboBox2.SelLength = ComboBox2.TextLength
    ComboBox2.Copy
    Sheets("PL Options").Activate
    Range("A4").Select
    ActiveSheet.Paste
    
 'Select input, if any, and paste the content into the PL Options sheet for further use. Only values less than 36% are exceptet for input
  If TextBox3.Value <= 36 Then
    TextBox3.SelStart = 0
    TextBox3.SelLength = TextBox3.TextLength
    TextBox3.Copy
    Sheets("PL Options").Activate
    Range("A5").Select
    ActiveSheet.Paste
    End If
    
 'Select input, if any, and paste the content into the PL Options sheet for further use. Only values less than 36% are exceptet for input
  If TextBox4.Value <= 36 Then
    TextBox4.SelStart = 0
    TextBox4.SelLength = TextBox4.TextLength
    TextBox4.Copy
    Sheets("PL Options").Activate
    Range("A6").Select
    ActiveSheet.Paste
  End If
    
 'Close dialoge and return to the active sheet
  If Current = "SPECTROPORT" Then
    Sheets("SPECTROPORT").Activate
  End If
  
  If Current = "SPECTROTEST" Then
    Sheets("SPECTROTEST").Activate
  End If
  
  If Current = "SPECTROMAX" Then
    Sheets("SPECTROMAX").Activate
  End If
  
  If Current = "SPECTROLAB M12" Then
    Sheets("SPECTROLAB").Activate
  End If
    
    If Current = "SPECTROLAB S01" Then
    Sheets("SPECTROLAB").Activate
  End If
  
  If Current = "SPECTRO XSORT" Then
    Sheets("SPECTRO XSORT").Activate
  End If
  
  If Current = "SPECTROSCOUT" Then
    Sheets("SPECTROSCOUT").Activate
  End If
  
  If Current = "SPECTROSCOUT at-line" Then
    Sheets("SPECTROSCOUT").Activate
  End If
  
  If Current = "SPECTRO MIDEX" Then
    Sheets("SPECTRO MIDEX").Activate
  End If
  
  If Current = "SPECTRO MIDEX Precious Metal" Then
    Sheets("SPECTRO MIDEX Precious Metal").Activate
  End If
 
  If Current = "SPECTROCUBE" Then
    Sheets("SPECTROCUBE").Activate
  End If
  
  If Current = "SPECTRO XEPOS" Then
    Sheets("SPECTRO XEPOS").Activate
  End If
  
  If Current = "SPECTRO GENESIS" Then
    Sheets("SPECTRO GENESIS").Activate
  End If
    
  If Current = "SPECTROGREEN-BLUE" Then
    Sheets("SPECTROGREEN-BLUE").Activate
  End If
    
  If Current = "SPECTRO ARCOS" Then
    Sheets("SPECTRO ARCOS").Activate
  End If
  
     Unload UserForm1

End Sub

Private Sub TextBox3_Change()

  'No entry is made in case the input reseller discount is higher than 36%
    If TextBox3.Value > 36 Then
    TextBox3.Value = ""
    End If
    
End Sub

Private Sub TextBox4_Change()

  'No entry is made in case the input reseller discount is higher than 36%
    If TextBox4.Value > 36 Then
    TextBox4.Value = ""
    End If

End Sub

Private Sub CommandButton2_Click()
    
    Unload UserForm1
  
End Sub



Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{6E262CAC-B8EC-41AD-9795-FC6C03429BDB}{75038A58-9883-40D3-8F3F-6E4D9E961334}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()

 'Checks whether the sheets are protected. If yes, the unprotect dialogue is loaded
  If Sheets("Commission Payment Form").ProtectContents = True Then
    UserForm3.Show
  End If

 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROPORT").Visible = xlVeryHidden Then
    CheckBox17.Value = False
    Else: CheckBox17.Value = True
  End If
 
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROTEST").Visible = xlVeryHidden Then
    CheckBox2.Value = False
    Else: CheckBox2.Value = True
  End If
   
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROCHECK").Visible = xlVeryHidden Then
    CheckBox16.Value = False
    Else: CheckBox16.Value = True
  End If
   
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROMAX").Visible = xlVeryHidden Then
    CheckBox3.Value = False
    Else: CheckBox3.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROLAB M12").Visible = xlVeryHidden Then
    CheckBox4.Value = False
    Else: CheckBox4.Value = True
  End If
   
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROLAB S01").Visible = xlVeryHidden Then
    CheckBox4.Value = False
    Else: CheckBox20.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO XSORT").Visible = xlVeryHidden Then
    CheckBox5.Value = False
    Else: CheckBox5.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROSCOUT").Visible = xlVeryHidden Then
    CheckBox14.Value = False
    Else: CheckBox14.Value = True
  End If
  
   'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROSCOUT at-line").Visible = xlVeryHidden Then
    CheckBox15.Value = False
    Else: CheckBox15.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO MIDEX").Visible = xlVeryHidden Then
    CheckBox6.Value = False
    Else: CheckBox6.Value = True
  End If
  
   'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO MIDEX Precious Metal").Visible = xlVeryHidden Then
    CheckBox18.Value = False
    Else: CheckBox18.Value = True
  End If
  
  'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROCUBE").Visible = xlVeryHidden Then
    CheckBox19.Value = False
    Else: CheckBox19.Value = True
  End If
   
  'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO XEPOS").Visible = xlVeryHidden Then
    CheckBox8.Value = False
    Else: CheckBox8.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO GENESIS").Visible = xlVeryHidden Then
    CheckBox9.Value = False
    Else: CheckBox9.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTROGREEN-BLUE").Visible = xlVeryHidden Then
    CheckBox10.Value = False
    Else: CheckBox10.Value = True
  End If
  
 'Checks whether the relevant form is hidden or not and activates/deactivates the checkbox respectively
  If Sheets("SPECTRO ARCOS").Visible = xlVeryHidden Then
    CheckBox11.Value = False
    Else: CheckBox11.Value = True
  End If
  
End Sub

Private Sub Checkbox17_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox17.Value = False Then
    Sheets("SPECTROPORT").Visible = xlVeryHidden
    Else: Sheets("SPECTROPORT").Visible = True
  End If

End Sub

Private Sub Checkbox2_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox2.Value = False Then
    Sheets("SPECTROTEST").Visible = xlVeryHidden
    Else: Sheets("SPECTROTEST").Visible = True
  End If

End Sub

Private Sub Checkbox16_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox16.Value = False Then
    Sheets("SPECTROCHECK").Visible = xlVeryHidden
    Sheets("Programs CHECK").Visible = xlVeryHidden
    Else: Sheets("SPECTROCHECK").Visible = True
    Sheets("Programs CHECK").Visible = True
  End If

End Sub

Private Sub Checkbox3_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox3.Value = False Then
    Sheets("SPECTROMAX").Visible = xlVeryHidden
    Sheets("Programs MAXx").Visible = xlVeryHidden
    Else: Sheets("SPECTROMAX").Visible = True
    Sheets("Programs MAXx").Visible = True
  End If

End Sub

Private Sub Checkbox4_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox4.Value = False Then
    Sheets("SPECTROLAB M12").Visible = xlVeryHidden
    Else: Sheets("SPECTROLAB M12").Visible = True
  End If

End Sub

Private Sub Checkbox20_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox20.Value = False Then
    Sheets("SPECTROLAB S01").Visible = xlVeryHidden
    Else: Sheets("SPECTROLAB S01").Visible = True
  End If

End Sub

Private Sub Checkbox5_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox5.Value = False Then
    Sheets("SPECTRO XSORT").Visible = xlVeryHidden
    Else: Sheets("SPECTRO XSORT").Visible = True
  End If

End Sub

Private Sub Checkbox14_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox14.Value = False Then
    Sheets("SPECTROSCOUT").Visible = xlVeryHidden
    Else: Sheets("SPECTROSCOUT").Visible = True
  End If

End Sub

Private Sub Checkbox15_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox15.Value = False Then
    Sheets("SPECTROSCOUT at-line").Visible = xlVeryHidden
    Else: Sheets("SPECTROSCOUT at-line").Visible = True
  End If

End Sub

Private Sub Checkbox6_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox6.Value = False Then
    Sheets("SPECTRO MIDEX").Visible = xlVeryHidden
    Else: Sheets("SPECTRO MIDEX").Visible = True
  End If

End Sub

Private Sub Checkbox18_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox18.Value = False Then
    Sheets("SPECTRO MIDEX Precious Metal").Visible = xlVeryHidden
    Else: Sheets("SPECTRO MIDEX Precious Metal").Visible = True
  End If

End Sub


Private Sub Checkbox19_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox19.Value = False Then
    Sheets("SPECTROCUBE").Visible = xlVeryHidden
    Else: Sheets("SPECTROCUBE").Visible = True
  End If

End Sub

Private Sub Checkbox8_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox8.Value = False Then
    Sheets("SPECTRO XEPOS").Visible = xlVeryHidden
    Else: Sheets("SPECTRO XEPOS").Visible = True
  End If

End Sub

Private Sub Checkbox9_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox9.Value = False Then
    Sheets("SPECTRO GENESIS").Visible = xlVeryHidden
    Else: Sheets("SPECTRO GENESIS").Visible = True
  End If

End Sub

Private Sub Checkbox10_Click()

'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox10.Value = False Then
    Sheets("SPECTROGREEN-BLUE").Visible = xlVeryHidden
    Else: Sheets("SPECTROGREEN-BLUE").Visible = True
  End If

End Sub

Private Sub Checkbox11_Click()

 'Hides the relevant sheet or makes it visible if the checkbox is ticked
  If CheckBox11.Value = False Then
    Sheets("SPECTRO ARCOS").Visible = xlVeryHidden
    Else: Sheets("SPECTRO ARCOS").Visible = True
  End If

End Sub

Private Sub CommandButton1_Click()

 'Selects the password from the input field and defines the content as "Password"
  Dim Password As String
    TextBox1.SelStart = 0
    TextBox1.SelLength = TextBox1.TextLength
    Password = TextBox1
    
 'Displays a message box if no password is entered
  If Password = "" Then
    GoTo EnterPassword
  End If
    
  'In case cell E1 is empty the password is written into the cells, otherwise a message is displayed that the sheets are already protected
    Sheets("PL Options").Activate
    TextBox1.SelStart = 0
    TextBox1.SelLength = TextBox1.TextLength
    TextBox1.Copy
    Range("E1").Select
  If Range("E1").Value = "" Then
    ActiveSheet.Paste
    Range("A1").Select
    Else: Range("A1").Select
    GoTo AlreadyProtected
  End If
     
   'Protects the sheets with the selected password
    Sheets("SPECTROPORT").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROTEST").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROCHECK").Protect (Password), AllowFiltering:=True
    Sheets("Programs CHECK").Protect (Password)
    Sheets("SPECTROMAX").Protect (Password), AllowFiltering:=True
    Sheets("Programs MAXx").Protect (Password)
    Sheets("SPECTROLAB M12").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROLAB S01").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO XSORT").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROSCOUT").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROSCOUT at-line").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO MIDEX").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO MIDEX Precious Metal").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROCUBE").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO XEPOS").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO GENESIS").Protect (Password), AllowFiltering:=True
    Sheets("SPECTROGREEN-BLUE").Protect (Password), AllowFiltering:=True
    Sheets("SPECTRO ARCOS").Protect (Password), AllowFiltering:=True
    Sheets("Miscellaneous-Remarks").Protect (Password), AllowFiltering:=True
    Sheets("Commission Payment Form").Protect (Password)
    GoTo Protected
    
EnterPassword:
    MsgBox "Please enter a Password before pressing the Protect button"
    GoTo Ende

AlreadyProtected:
    MsgBox "Tables are already Protected"
    GoTo Ende
    
Protected:
    MsgBox "All Tables are Protected"
    GoTo Ende

Ende:
    Unload UserForm2
End Sub


Private Sub CommandButton2_Click()

 'Selects the password from the input field and defines the content as "Password"
   Dim Password As String
    TextBox1.SelStart = 0
    TextBox1.SelLength = TextBox1.TextLength
    Password = TextBox1
    
  'Selects cell E1 where the password, if defined, is stored
    Sheets("PL Options").Activate
    Range("E1").Select
    
 'Compares input with password and displays eror message in case the password is wrong
  If Range("E1").Value <> Password And Range("E1").Value <> "" Then
    Range("A1").Select
    GoTo WrongPassword
  End If
  
 'Displays message, if sheets are already unprotected
  If Range("E1").Value = "" Then
    Range("A1").Select
    GoTo AlreadyUnprotected
  End If
  
  'Unprotects the sheets
    Sheets("SPECTROPORT").Unprotect (Password)
    Sheets("SPECTROTEST").Unprotect (Password)
    Sheets("SPECTROCHECK").Unprotect (Password)
    Sheets("Programs CHECK").Unprotect (Password)
    Sheets("SPECTROMAX").Unprotect (Password)
    Sheets("Programs MAXx").Unprotect (Password)
    Sheets("SPECTROLAB M12").Unprotect (Password)
    Sheets("SPECTROLAB S01").Unprotect (Password)
    Sheets("SPECTRO XSORT").Unprotect (Password)
    Sheets("SPECTROSCOUT").Unprotect (Password)
    Sheets("SPECTROSCOUT at-line").Unprotect (Password)
    Sheets("SPECTRO MIDEX").Unprotect (Password)
    Sheets("SPECTRO MIDEX Precious Metal").Unprotect (Password)
    Sheets("SPECTROCUBE").Unprotect (Password)
    Sheets("SPECTRO XEPOS").Unprotect (Password)
    Sheets("SPECTRO GENESIS").Unprotect (Password)
    Sheets("SPECTROGREEN-BLUE").Unprotect (Password)
    Sheets("SPECTRO ARCOS").Unprotect (Password)
    Sheets("Miscellaneous-Remarks").Unprotect (Password)
    Sheets("Commission Payment Form").Unprotect (Password)
    Sheets("PL Options").Activate
    Range("E1").Value = ""
    Range("A1").Select
    GoTo Unprotected
    
WrongPassword:

    MsgBox "Incorrect Password"
    GoTo Ende
    
AlreadyUnprotected:
    MsgBox "Tables are already Unprotected"
    GoTo Ende
    
Unprotected:
    MsgBox "All Tables are Unprotected"
    GoTo Ende:
     
Ende:
    
End Sub

Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{4B10C7DD-63B8-46CD-A4D1-0F7F57E2F552}{3AB793D9-70FC-4A06-A790-07E4B3C6EB30}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
    
    TextBox1.SetFocus

End Sub

Private Sub CommandButton1_Click()

 'Defines the content of the textbox as Password
   Dim Password As String
    TextBox1.SelStart = 0
    TextBox1.SelLength = TextBox1.TextLength
    Password = TextBox1
    
 'Selects cell E1 where the password is stored
    Sheets("PL Options").Activate
    Range("E1").Select
    
 'Checks whether the password is corrects and displays an error message, if not
  If Range("E1").Value <> Password And Range("E1").Value <> "" Then
    Range("A1").Select
    GoTo WrongPassword
  End If
  
 'Checks if the sheets are already unprotected
  If Range("E1").Value = "" Then
    Range("A1").Select
    GoTo AlreadyUnprotected
  End If
  
  'Unprotects the sheets
    Sheets("SPECTROPORT").Unprotect (Password)
    Sheets("SPECTROTEST").Unprotect (Password)
    Sheets("SPECTROMAX").Unprotect (Password)
    Sheets("Programs MAXx").Unprotect (Password)
    Sheets("SPECTROLAB M12").Unprotect (Password)
    Sheets("SPECTROLAB S01").Unprotect (Password)
    Sheets("SPECTRO XSORT").Unprotect (Password)
    Sheets("SPECTROSCOUT").Unprotect (Password)
    Sheets("SPECTROSCOUT at-line").Unprotect (Password)
    Sheets("SPECTRO MIDEX").Unprotect (Password)
    Sheets("SPECTRO MIDEX Precious Metal").Unprotect (Password)
    Sheets("SPECTROCUBE").Unprotect (Password)
    Sheets("SPECTRO XEPOS").Unprotect (Password)
    Sheets("SPECTRO GENESIS").Unprotect (Password)
    Sheets("SPECTROGREEN-BLUE").Unprotect (Password)
    Sheets("SPECTRO ARCOS").Unprotect (Password)
    Sheets("Miscellaneous-Remarks").Unprotect (Password)
    Sheets("Commission Payment Form").Unprotect (Password)
    Sheets("PL Options").Activate
    Range("E1").Value = ""
    Range("A1").Select
    GoTo Unprotected
    
WrongPassword:
    MsgBox "Incorrect Password"
    End
    
AlreadyUnprotected:
    MsgBox "Tables are already Unprotected"
    GoTo Ende
    
Unprotected:
    MsgBox "All Tables are Unprotected"
    GoTo Ende:
     
Ende:
    Unload UserForm3
    
End Sub



INQUEST-PP=macro
