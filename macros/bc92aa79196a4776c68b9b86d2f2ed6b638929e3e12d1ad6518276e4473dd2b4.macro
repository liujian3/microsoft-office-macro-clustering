Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Module1"
Option Explicit

Sub Austausch()

    'Tauscht die Artikelnummern in der Tabelle EplSheet
    'entsprechend der Austauschliste, die aktiv ist,
    'wenn das Makro aufgerufen wird.
    'Alle Zellen, die bearbeitet worden sind, werden gelb gef|fffd|rbt.
    'Erstellt: 03.09.2012 Stefan Jarsch, Corporate Engineering
    '24.01.2013: Anpassung f|fffd|r Kabeldaten
    
    'Spalten|fffd|berschriften zum Identifizieren der Spalten
    ' Die |fffd|berschriften m|fffd|ssen in Source und Destination Table gleich hei|fffd|en, Reihenfolge egal!
    Const cstrArtikel As String = "Artikelnummer [1]"
    'Speziell f|fffd|r Kabel:
    Const cstrBez As String = "Kabel / Paket: Bezeichnung in der Grafik de_DE"
    Const cstrTyp As String = "Kabel / Paket: Typ"
    Const cstrSpannung As String = "Kabel: Spannung"
        
    Dim rngSource As Range
    Dim rngDest As Range
    Dim lColSourceID As Long
    Dim lColDestID As Long
    Dim lToGet As Long
    Dim lToRepl As Long
    
    'Austauschtabelle identifizieren
    Set rngSource = ActiveSheet.Range("A2", Range("A2").End(xlDown).EntireRow)
    
    'Eplan Tabelle identifizieren
    Worksheets("EplSheet").Activate
    Set rngDest = ActiveSheet.Range("A1", Range("A2").End(xlDown).EntireRow) 'A2, weil A1 dummer weise leer ist
    
    'Artikelnummer dient zur Identifikation, als letztes ersetzen
    lColSourceID = ColFromRowname("von", rngSource)
    lColDestID = ColFromRowname(cstrArtikel, rngDest)
    
    'Bezeichnung ersetzen
    lToGet = ColFromRowname(cstrBez, rngSource)
    lToRepl = ColFromRowname(cstrBez, rngDest)
    ReplaceInRow rngSource, lColSourceID, lToGet, rngDest, lColDestID, lToRepl
    
    'Typ ersetzen
    lToGet = ColFromRowname(cstrTyp, rngSource)
    lToRepl = ColFromRowname(cstrTyp, rngDest)
    ReplaceInRow rngSource, lColSourceID, lToGet, rngDest, lColDestID, lToRepl
    
    'Spannung ersetzen
    lToGet = ColFromRowname(cstrSpannung, rngSource)
    lToRepl = ColFromRowname(cstrSpannung, rngDest)
    ReplaceInRow rngSource, lColSourceID, lToGet, rngDest, lColDestID, lToRepl
    
    'Artikelnummer ersetzen (muss als letztes erfolgen!!)
    lToGet = ColFromRowname("nach", rngSource)
    ReplaceInRow rngSource, lColSourceID, lToGet, rngDest, lColDestID, lColDestID
    

End Sub

Private Sub ReplaceInRow(rSrcData As Range, lColSrcID As Long, lColSrcData As Long, _
                rDestData As Range, lColDestID As Long, lColDestData As Long)

    Dim rngSourceRow As Range
    Dim rngDestRow As Range
    Dim strSearch As String
    Dim strRepl As String

    'Alle Suchwerte durchlaufen und in Eplan Tabelle ersetzen
    For Each rngSourceRow In rSrcData.Rows
        'ID, nach der gesucht werden soll
        strSearch = rngSourceRow.Cells(1, lColSrcID).Value
        'Ersetzungswert steht in Data
        strRepl = rngSourceRow.Cells(1, lColSrcData).Value
        'alle Zielwerde durchlaufen und ersetzen, wo ID gleich
        For Each rngDestRow In rDestData.Rows
            If rngDestRow.Cells(1, lColDestID).Value = strSearch Then
                With rngDestRow.Cells(1, lColDestData)
                    .Value = strRepl
                    .Interior.ColorIndex = 36 'ersetzte Zellen gelb f|fffd|rben
                End With
            End If
        Next rngDestRow
    Next rngSourceRow
End Sub

Private Function ColFromRowname(strRowname As String, rng As Range) As Long

    Dim rngHead As Range
    Dim rngCol As Range
    Dim iCol As Long
    
    'Zeile mit |fffd|berschriften
    Set rngHead = rng.Rows(1)
    'Spalten zum Ersetzen anhand der |fffd|berschrift identifizieren
    'Set rngHead = Range(Range("A1"), Range("A1").EntireRow)
    iCol = 0 'Initialisierung
    For Each rngCol In rngHead.Columns
        If rngCol.Value = strRowname Then
            iCol = rngCol.Column 'Spaltennummer
            Exit For    'fertig, wenn gefunden
        End If
    Next rngCol
    ColFromRowname = iCol
    
    If iCol = 0 Then
        'Fehlermeldung, wenn Spalte nicht gefunden
        MsgBox "Spalten|fffd|berschrift " & strRowname & " nicht gefunden!", vbCritical
    End If

End Function

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

 
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

 
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

 


INQUEST-PP=macro
