Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
'Studien aus Tabelle "Stand Rekrutierung" auslesen

Public Studie As String
Public ScrDatum
Public Gruppe As String
Public Zeile As Integer
Public Screening As String
Public LetzteZeile As Integer
Public pfad As String
Public Pfadteil As String
Public Datei As String
Public StudienNrkurz As String
Public Studienjahr As String
Public SpalteHistorie As String
Public Spaltennummer As Integer
Public Unterordner As String

Public AnzStudien As Integer
Public AnzGruppen(1 To 50) As Integer
Public EBLDatei(1 To 50) As String
Public EBLDateiname(1 To 50) As String
Public EBLDateikurz(1 To 50) As String
Public AnzTabellen As Integer
Public EBLGruppen(1 To 50) As String
Public EBLScrDatum(1 To 50) As String
Public EBStandDatei As String
Public Verkettenzeile As Integer

Public SSTPfad As String
Public SSTDatei As String
Public SSTDateiname As String
Public SSTDateinamekurz As String
Public SSTWert As Integer

Sub Aktualisierung()
    Application.DisplayAlerts = False
    With UserForm1
         .Top = Application.Top
         .Left = Application.Left
         .Height = Application.Height
         .Width = Application.Width
    End With
    UserForm1.Label1.Caption = "Aktualisierung der Ist-Werte"
    UserForm1.Show
    DoEvents
    
    ActiveWorkbook.Worksheets("Stand Rekrutierung").Unprotect
    
    Worksheets("Verketten").Range("A3:B1000").ClearContents
    
    Application.ScreenUpdating = False 'Das "Flackern" ausstellen
    
    Call Verkettung
    Call Historie
    Call Studien
    Call StudienSponsor
    
    ThisWorkbook.Sheets("Stand Rekrutierung").Activate
    ActiveWorkbook.Worksheets("Stand Rekrutierung").Protect
    ThisWorkbook.Save
    DoEvents
     Application.DisplayAlerts = True
    MsgBox ("Ist-Werte sind aktualisiert.")
    Application.ScreenUpdating = True 'Das Bildschirm-Aktualisieren wieder einschalten
    UserForm1.Hide
End Sub

Sub Studien()
    'Studienpfad bestimmen und den Pfad auslesen
    
    Dim i As Byte
    ThisWorkbook.Sheets("Stand Rekrutierung").Activate
    
    LetzteZeile = Range("LetzteZeile").Row
    Zeile = 3

    Pfadteil = "M:\KLINIK\Recruiting\PROBANDENEINBESTELLUNG neu\"
    
    SpalteHistorie = Split(Range("Historie").Columns.Address, "$")(1)
    Spaltennummer = Range(SpalteHistorie & ":" & SpalteHistorie).Column - 1
    
    Range(Cells(3, Spaltennummer + 7), Cells(LetzteZeile, Spaltennummer + 7)).ClearContents
    
    Studie = Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value
    ScrDatum = Range(Cells(Zeile, 3), Cells(Zeile, 3)).Value
    Gruppe = Range(Cells(Zeile, 4), Cells(Zeile, 4)).Value
    Screening = Studie & "_" & Gruppe & "_" & ScrDatum
    
    StudienNrkurz = Left(Studie, 3) & Mid(Studie, 5, 2)
    Studienjahr = Mid(Studie, 5, 2)
    pfad = Pfadteil & "20" & Studienjahr & "\"
    
    Call Ordnerauslesen(pfad, StudienNrkurz, Zeile) ' Ordner auslesen: EBL-Datei finden, |fffd|ffnen und nach Auslesen wieder schlie|fffd|en
    
        ThisWorkbook.Sheets("Stand Rekrutierung").Activate
       Do Until Zeile = LetzteZeile
            Zeile = Zeile + 1
            Studie = Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value
            If Len(Studie) > 1 Then
                StudienNrkurz = Left(Studie, 3) & Mid(Studie, 5, 2)
                Studienjahr = Mid(Studie, 5, 2)
                pfad = Pfadteil & "20" & Studienjahr & "\"
                Call Ordnerauslesen(pfad, StudienNrkurz, Zeile) ' Ordner auslesen: EBL-Datei finden, |fffd|ffnen und nach Auslesen wieder schlie|fffd|en
                
            End If
            ScrDatum = Range(Cells(Zeile, 3), Cells(Zeile, 3)).Value
            Gruppe = Range(Cells(Zeile, 4), Cells(Zeile, 4)).Value
            Screening = Studie & "_" & Gruppe & "_" & ScrDatum
            
        Loop
       
End Sub
Public Sub Ordnerauslesen(PfadEBL, StudieEBL, Zeile)
    'EBL-Datei finden, |fffd|ffnen und nach Auslesen wieder schlie|fffd|en
    
     Dim strFolder As String
     Dim AnzOrdner As Long
     Dim objFSO As Object
    Dim objOrdner As Object
    Dim index As Boolean
    
    ThisWorkbook.Sheets("Stand Rekrutierung").Activate
    SpalteHistorie = Split(Range("Historie").Columns.Address, "$")(1)
    Spaltennummer = Range(SpalteHistorie & ":" & SpalteHistorie).Column - 1
     
     strFolder = Dir(PfadEBL, vbDirectory)
     Set objFSO = CreateObject("Scripting.FileSystemObject")
     Set objOrdner = objFSO.GetFolder(PfadEBL)
     AnzOrdner = objOrdner.subfolders.Count
     index = False
     
    For i = 1 To AnzOrdner + 11 '10 "Ordner" als Reserve, da auch Dateien gez|fffd|hlt werden
        On Error Resume Next
        strFolder = Dir()
        If Left(strFolder, 5) = StudieEBL Then
            index = True
            Unterordner = PfadEBL & strFolder
            pfad = PfadEBL & strFolder & "\" & "Screening\" & StudieEBL & "*.xlsm"
            
            If Dir(pfad) = "" Then
                Range(Cells(Zeile, Spaltennummer + 7), Cells(Zeile, Spaltennummer + 7)).Value = "Nein"
            Else
               Application.DisplayAlerts = False
                Workbooks.Open pfad, ReadOnly:=True, UpdateLinks:=False 'EBL-Datei |fffd|ffnen
                Datei = ActiveWorkbook.Name
                
                Call StandEBL ' Einzelne Register aus EBL-Datei auslesen und die dazugeh|fffd|rigen Werte aus SST lesen
                
                Workbooks(Datei).Close
                Workbooks(SSTDateinamekurz).Close
                
                ThisWorkbook.Worksheets("Stand Rekrutierung").Activate
                Application.EnableEvents = True
                Application.DisplayAlerts = True
               
                Range(Cells(Zeile, Spaltennummer + 7), Cells(Zeile, Spaltennummer + 7)).Value = "Ja"
            End If
           
        End If
        If index = False Then
            Range(Cells(Zeile, Spaltennummer + 7), Cells(Zeile, Spaltennummer + 7)).Value = "Nein"
        End If
    Next

     End Sub
Public Sub StandEBL()
'Einzelne Register aus EBL-Datei auslesen
    
    Dim Inhalt As String
    Dim i As Integer
    Dim j As Integer
    Dim AnzEintraege(1 To 50) As Byte
    Dim MaxAnz As Byte
    Dim MaxZeile As Byte
    Dim Verketten As String
    Dim Registername As String
    
    Workbooks(Datei).Activate
    AnzTabellen = Workbooks(Datei).Worksheets.Count
    SSTPfad = "N:\Studien\20" & Mid(Studie, 5, 2) & "\" & Left(Studie, 3) & Mid(Studie, 5, 2) & Right(Studie, 2) & "\Klinik\Study Status\"
    If Dir(SSTPfad) = "" Then
                    SSTPfad = "N:\Studien\20" & Mid(Studie, 5, 2) & "\" & Left(Studie, 3) & Mid(Studie, 5, 2) & Right(Studie, 2) & "\40_MA_CPU\Klinik\Study Status\"
    End If
                                
    If Left(Studie, 6) = "130/17" Then SSTPfad = "N:\Studien\2017\13017SU\40_MA_CPU\Klinik\Study Status\"  ' Studie 130/17 speziell, da drei Buchstaben am Ende
    If Left(Studie, 6) = "025/19" Then SSTPfad = "N:\Studien\2019\02519F7\40_MA_CPU\Klinik\Study Status\"  ' Studie 025/19 spezielle Bezeichnung
                                
    SSTDatei = SSTPfad & Left(Studie, 3) & Mid(Studie, 5, 2) & " Studienstatustabelle.xlsm"
    SSTDateinamekurz = Left(Studie, 3) & Mid(Studie, 5, 2) & " Studienstatustabelle.xlsm"
    
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    
    Workbooks.Open SSTDatei, ReadOnly:=True 'SST-Datei |fffd|ffnen
      
    'Anzahl Eintr|fffd|ge aus EBL Register auslesen
    
    For i = 1 To AnzTabellen
       
        Workbooks(Datei).Sheets(i).Activate
                        
                Sheets(i).Activate
                Registername = Worksheets(i).Name
                
                Range(Cells(1, 1), Cells(1, 1)).Select
                
                If Not Left(Registername, 7) = "Vorlage" Then
                
                EBLScrDatum(i) = Range(Cells(2, 11), Cells(2, 11)).Value 'Zelle K2
                EBLGruppen(i) = Range(Cells(2, 12), Cells(2, 12)).Value 'Zelle L2
               
                AnzEintraege(i) = Application.CountA(Range("A5:A500"))
                
                Verketten = Studie & "_" & EBLGruppen(i) & "_" & EBLScrDatum(i)
              
                'Verketten EBL in Tabelle "Verketten" eintragen
                ThisWorkbook.Worksheets("Verketten").Activate
                     
                Dim c As Range
                    With Sheets("Verketten").Range("a3:a1000")
                        Set c = .Find(Verketten, LookIn:=xlValues)
                        If Not c Is Nothing Then
                           Verkettenzeile = c.Row
                             Worksheets("Verketten").Range(Cells(Verkettenzeile, 2), Cells(Verkettenzeile, 2)).Value = Verketten
                
                        End If
                    End With
                
                
                'Eintr|fffd|ge in "Stand Rekrutierung" eintragen
                
                ThisWorkbook.Sheets("Stand Rekrutierung").Activate
                
                SpalteHistorie = Split(Range("Historie").Columns.Address, "$")(1)
                     
                
                    With Sheets("Verketten").Range("a3:a1000")
                        Set c = .Find(Verketten, LookIn:=xlValues)
                        If Not c Is Nothing Then
                            
                            'Werte aus EBL auslesen und in "Stand Rekrutierung" eintragen
                            Verkettenzeile = c.Row
                            Spaltennummer = Range(SpalteHistorie & ":" & SpalteHistorie).Column - 1
                             Worksheets("Stand Rekrutierung").Range(Cells(Verkettenzeile, Spaltennummer), Cells(Verkettenzeile, Spaltennummer)).Value = AnzEintraege(i)
                                  
                              'Werte aus SST auslesen und in "Stand Rekrutierung" eintragen
                              On Error Resume Next
                              Call SSTBlattVorhanden
                              
                        End If
                    End With
                
                End If
                
    Next i
    
End Sub

Public Sub Historie()
    'Spalte Historie einf|fffd|gen
    
    SpalteHistorie = Split(Range("Historie").Columns.Address, "$")(1)
    Columns(SpalteHistorie & ":" & SpalteHistorie).Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range(SpalteHistorie & "1:" & SpalteHistorie & "1").Value = Date
   Columns(SpalteHistorie & ":" & SpalteHistorie).EntireColumn.AutoFit
   Range(SpalteHistorie & "1:" & SpalteHistorie & "2").Merge
   
End Sub

     Public Sub Verkettung()
        'Verketten der Studiennummern mit Gruppe und Screening-Datum
        
        Dim Inhalt As String
        Dim Zeile As Integer
        
        LetzteZeile = Range("LetzteZeile").Row
        Zeile = 3
         Do Until Zeile = LetzteZeile
            Inhalt = Range(Cells(Zeile, 1), Cells(Zeile, 1)) & "_" & Range(Cells(Zeile, 4), Cells(Zeile, 4)) & "_" & Range(Cells(Zeile, 3), Cells(Zeile, 3))
            Sheets("Verketten").Range("A" & (Zeile)).Value = Inhalt
            Zeile = Zeile + 1
         Loop
      
End Sub
Public Sub StudienSponsor()
        'Sponsoren aus dem Terminplan auslesen
        
         Application.DisplayAlerts = False
        ThisWorkbook.Sheets("TP").Range("A2:B531").ClearContents
        Workbooks.Open "N:\Studien\Studienplanung\Mannheim\Terminplan_2018.xlsm", ReadOnly = True
        Workbooks("Terminplan_2018.xlsm").Activate
        Sheets("Project team").Range("A2:B531").Copy
        ThisWorkbook.Sheets("TP").Range("A2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        Workbooks("Terminplan_2018.xlsm").Close
        Application.DisplayAlerts = True
        
End Sub

Private Function GetValue(pfad, Datei, Blatt, zelle)
'** Daten aus geschlossener Arbeitsmappe auslesen

           Dim arg As String
           
            '** Das Argument erstellen
            arg = "'" & pfad & "[" & Datei & "]" & Blatt & "'!" & Range(zelle).Range("A1").Address(, , xlR1C1)
            
            '** Auslesen |fffd|ber Excel4Macro
            GetValue = ExecuteExcel4Macro(arg)

End Function

Public Sub SSTBlattVorhanden()
           Dim Blatt As Worksheet
           
            Workbooks(SSTDateinamekurz).Activate
           For Each Blatt In Worksheets
               If Blatt.Name = "RecListe" Then
                        Call SSTauslesen
                End If
           Next Blatt
           ThisWorkbook.Sheets("Stand Rekrutierung").Activate
           
End Sub

Public Sub SSTauslesen()
 'SST Werte auslesen
                
                ThisWorkbook.Sheets("Stand Rekrutierung").Activate
               
                'Screeners
                
                On Error Resume Next
                
                With Range(Cells(Verkettenzeile, Spaltennummer + 1), Cells(Verkettenzeile, Spaltennummer + 1))
                            .Formula = "=VLookup($C" & Verkettenzeile & ",'" & SSTPfad & "[" & SSTDateinamekurz & "]" & "RecListe" & "'!$A$9:$I$87,2,0)"
                            .Formula = .Value
                  End With
                                                                                     
                'Eligible
                With Range(Cells(Verkettenzeile, Spaltennummer + 2), Cells(Verkettenzeile, Spaltennummer + 2))
                            .Formula = "=VLookup($C" & Verkettenzeile & ",'" & SSTPfad & "[" & SSTDateinamekurz & "]" & "RecListe" & "'!$A$9:$I$87,3,0)"
                            .Formula = .Value
                End With
                                         
                 'SF ratio
                With Range(Cells(Verkettenzeile, Spaltennummer + 3), Cells(Verkettenzeile, Spaltennummer + 3))
                            .Formula = "=VLookup($C" & Verkettenzeile & ",'" & SSTPfad & "[" & SSTDateinamekurz & "]" & "RecListe" & "'!$A$9:$I$87,8,0)"
                            .Formula = .Value
                End With
              
                 'Randomized
                With Range(Cells(Verkettenzeile, Spaltennummer + 4), Cells(Verkettenzeile, Spaltennummer + 4))
                            .Formula = "=VLookup($C" & Verkettenzeile & ",'" & SSTPfad & "[" & SSTDateinamekurz & "]" & "RecListe" & "'!$A$9:$I$87,9,0)"
                            .Formula = .Value
                End With
                If Range(Cells(Verkettenzeile, Spaltennummer + 4), Cells(Verkettenzeile, Spaltennummer + 4)) = "#NV" Then
                            Range(Cells(Verkettenzeile, Spaltennummer + 4), Cells(Verkettenzeile, Spaltennummer + 4)) = " "
                End If
               
                 If Range(Cells(Verkettenzeile, 3), Cells(Verkettenzeile, 3)) > Date - 1 Then
                            Range(Cells(Verkettenzeile, Spaltennummer + 1), Cells(Verkettenzeile, Spaltennummer + 1)) = " "
                            Range(Cells(Verkettenzeile, Spaltennummer + 2), Cells(Verkettenzeile, Spaltennummer + 2)) = " "
                            Range(Cells(Verkettenzeile, Spaltennummer + 3), Cells(Verkettenzeile, Spaltennummer + 3)) = " "
                            Range(Cells(Verkettenzeile, Spaltennummer + 4), Cells(Verkettenzeile, Spaltennummer + 4)) = " "
                 End If

                For i = 1 To 4
                        If Range(Cells(Verkettenzeile, Spaltennummer + i), Cells(Verkettenzeile, Spaltennummer + i)) = "#NV" Then
                                Range(Cells(Verkettenzeile, Spaltennummer + i), Cells(Verkettenzeile, Spaltennummer + i)) = " "
                        End If
                Next i
End Sub




Attribute VB_Name = "Modul2"
'Vergleich Rekrutierung mit Terminplan

Public ErsteZeileRec As Integer
Public LetzteZeileRec As Integer
Public LetzteZeileRec2 As Integer
Public StudiencodeRec(1 To 400) As String
Public StudienanzahlRec As Integer

Public ErsteZeileTP As Integer
Public LetzteZeileTP As Integer
Public StudiencodeTP2018(1 To 400) As String
Public AnzahlzeilenproStudieTP2017(1 To 400) As String
Public AnzahlzeilenproStudieTP2018(1 To 400) As String
Public StudienanzahlTP2017 As Integer
Public StudienanzahlTP2018 As Integer

Public StudieErsteZeile2018(1 To 400) As Integer
Public StudieLetzteZeile2018(1 To 400) As Integer

Public Studienplanung2018 As String
Public Studienplanungkurz2018 As String

Public Abbruch As Boolean  'Abbruch des Makros falls Rekrutierung nicht mit Terminplan |fffd|bereinstimmt
Sub Werte()
    ErsteZeileRec = 2
    LetzteZeileRec = Sheets("Stand Rekrutierung").Range("LetzteZeile").Row
    'LetzteZeileRec2 = Sheets("Stand Rekrutierung").Range("LetzteZeileVergleichTP").Row
    ErsteZeileTP = 7
    LetzteZeileTP = 2000
    
   Studienplanung2018 = "N:\Studien\Studienplanung\Mannheim\Terminplan_2018.xlsm"
    Studienplanungkurz2018 = "Terminplan_2018.xlsm"
    
End Sub

Sub AuswertungAktualisieren()

     With UserForm1
         .Top = Application.Top
         .Left = Application.Left
         .Height = Application.Height
         .Width = Application.Width
    End With
    UserForm1.Label1.Caption = "Vergleich der Studiennummern mit dem Terminplan"
    UserForm1.Show
    DoEvents
    
    Werte
     Auswertungloeschen
     
    Workbooks.Open Studienplanung2018, ReadOnly = True
    ThisWorkbook.Sheets("Vergleich TP").Activate
    AuswertungTP2018
    Workbooks(Studienplanungkurz2018).Close
    
    AuswertungRekrutierung
    AuswertungSSTGr
    
    ThisWorkbook.Save
    DoEvents
    
    MsgBox ("Der Vergleich mit dem Terminplan 2018 ist durchgef|fffd|hrt")
    UserForm1.Hide
       
End Sub
Sub AuswertungRekrutierung()
    'Auswertung der Rekrutierung
    
    Dim Zeile As Integer 'Zeile in Rekrutierung
    Dim InhaltZelle As String
    Dim index As Integer 'Index f|fffd|r Array
   
    index = 1
    
    Sheets("Stand Rekrutierung").Activate
    Werte
    
    'Inhalte auslesen
    For Zeile = ErsteZeileRec To LetzteZeileRec - 1
        InhaltZelle = Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value
        
        If InhaltZelle <> "x" Then
            If Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value <> Range(Cells(Zeile - 1, 1), Cells(Zeile - 1, 1)).Value Then
                StudiencodeRec(index) = InhaltZelle
                index = index + 1
            End If
        End If
        
     Next
           
    StudienanzahlRec = index - 1
          
    'Inhalte in Tabelle "Auswertung" eintragen
    For Zeile = 3 To StudienanzahlRec + 2
        Sheets("Vergleich TP").Range("B" & (Zeile) & ":B" & (Zeile)).Value = StudiencodeRec(Zeile - 2)
    Next
    
   Sheets("Vergleich TP").Activate
           
End Sub

Sub AuswertungTP2018()
'Auswertung des Terminplans 2018 (inkl. Jahre 2019+2020)
    
    Dim Studien As Integer 'Studien z|fffd|hlen
    Dim ZeilenproStudie As Integer 'Zeilen pro Studie z|fffd|hlen
    Dim Zeile As Integer 'Zeile im Terminplan
    Dim InhaltZelle As String
    Dim InhaltnaechsteZelle As String
    Dim index As Integer 'Index f|fffd|r Array
    
    Studien = 0
    ZeilenproStudie = 0
    index = 1
    
    Werte
    
    'Inhalte aus dem Terminplan auslesen
    Windows(Studienplanungkurz2018).Activate
    Sheets("CW1-52").Activate
    
    For Zeile = ErsteZeileTP To LetzteZeileTP
        InhaltZelle = Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value
        InhaltnaechsteZelle = Range(Cells(Zeile + 2, 1), Cells(Zeile + 2, 1)).Value
                        
        If InhaltZelle <> "" And InhaltZelle <> "." Then
            If InhaltZelle = InhaltnaechsteZelle Then
                ZeilenproStudie = ZeilenproStudie + 2
            Else
                ZeilenproStudie = ZeilenproStudie + 2
                AnzahlzeilenproStudieTP2018(index) = ZeilenproStudie
                StudiencodeTP2018(index) = InhaltZelle
               
                index = index + 1
                ZeilenproStudie = 0
                Windows(Studienplanungkurz2018).Activate
            End If
        End If
    Next
    
    StudienanzahlTP2018 = index - 1
        
    'Inhalte in Rekrutierung eintragen
    ThisWorkbook.Activate
    
    For Zeile = 3 To StudienanzahlTP2018 + 2
        Sheets("Vergleich TP").Range("D" & (Zeile) & ":C" & (Zeile)).Value = StudiencodeTP2018(Zeile - 2)
    Next
        
    ActiveWorkbook.Sheets("Vergleich TP").Activate
    
End Sub
Public Sub AuswertungSSTGr()
    Application.CutCopyMode = True
    Worksheets("SST Gr").Range("A2:A199").Copy
    Worksheets("Vergleich TP").Range("C3").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
End Sub
Sub Auswertungloeschen()
'In Auswertung Zellen l|fffd|schen

    Range("B3:D202").ClearContents
    Range("B3").Select
End Sub


Attribute VB_Name = "Modul3"
'Aktualisierung der Tabelle "SST Gr"

Public SSTPfad As String
Public SSTDatei As String
Public SSTJahr As String
Public pfad As String
Public Studie(1 To 500) As String
Public Studiekurz(1 To 500) As String
Public AnzStudien As Byte
Public Datei As String

Public FSI(1 To 500) As String
Public LSO(1 To 500) As String
Public Randomized(1 To 500) As String
Public Completed(1 To 500) As String
Public Screeners(1 To 500) As String
Public ScreeningFactor(1 To 500) As String

Public Ordnerstruktur As String

Public Sub Aktualisierung()

    With UserForm1
         .Top = Application.Top
         .Left = Application.Left
         .Height = Application.Height
         .Width = Application.Width
    End With
    UserForm1.Label1.Caption = "Gruppenbezeichnungen aus SST einlesen"
    UserForm1.Show
    DoEvents
    
    Worksheets("Verketten SST").Activate
    Zellenloeschen
    SSTVerketten
    
    ThisWorkbook.Save
    DoEvents
    
   UserForm1.Hide
    
End Sub

Public Sub SSTVerketten()
        Dim Inhalt As String
        Dim Zeile As Integer
        
        ThisWorkbook.Worksheets("SST Gr").Activate
        
        Inhalt = Range(Cells(2, 1), Cells(2, 1)).Value
        pfad = "N:\Studien\"
        Zeile = 3
        
        Do Until Inhalt = ""
           
            If Not Left(Inhalt, 1) = "A" Then
                SSTPfad = pfad & "20" & Mid(Inhalt, 5, 2) & "\" & Left(Inhalt, 3) & Mid(Inhalt, 5, 2) & Right(Inhalt, 2) & "\Klinik\Study Status\"
                If Inhalt = "025/19-02.FS-07" Then
                    SSTPfad = "N:\Studien\2019\02519F7\40_MA_CPU\Klinik\Study Status\"
                End If
                Worksheets("Verketten SST").Activate
                
                If Dir(SSTPfad) = "" Then
                
                    SSTPfad = pfad & "20" & Mid(Inhalt, 5, 2) & "\" & Left(Inhalt, 3) & Mid(Inhalt, 5, 2) & Right(Inhalt, 2) & "\40_MA_CPU\Klinik\Study Status\"
                   
                   If Dir(SSTPfad) = "" Then
                        Range(Cells(Zeile - 1, 2), Cells(Zeile - 1, 2)).Value = "Datei nicht vorhanden"
                        Worksheets("SST Gr").Range("C" & Zeile - 1).Value = "SST-Datei nicht vorhanden"
                        Range(Cells(Zeile - 1, 3), Cells(Zeile - 1, 3)).Select
                        With Selection.Interior
                            .Pattern = xlSolid
                            .PatternColorIndex = xlAutomatic
                            .ThemeColor = xlThemeColorDark1
                            TintAndShade = -0.149998474074526
                            .PatternTintAndShade = 0
                        End With
                Else
                    Range(Cells(Zeile - 1, 2), Cells(Zeile - 1, 2)).Value = SSTPfad
                    SSTDatei = Left(Inhalt, 3) & Mid(Inhalt, 5, 2) & " Studienstatustabelle.xlsm"
                    If Inhalt = "025/19-02.FS-07" Then
                        SSTDatei = "02519 Studienstatustabelle.xlsm"
                    End If
                    Range(Cells(Zeile - 1, 3), Cells(Zeile - 1, 3)).Value = SSTDatei
                    Datei = SSTPfad & SSTDatei
                    Call Dateiauslesen(Datei, Zeile - 1)
                End If
                Else
                    Range(Cells(Zeile - 1, 2), Cells(Zeile - 1, 2)).Value = SSTPfad
                    SSTDatei = Left(Inhalt, 3) & Mid(Inhalt, 5, 2) & " Studienstatustabelle.xlsm"
                    Range(Cells(Zeile - 1, 3), Cells(Zeile - 1, 3)).Value = SSTDatei
                    Datei = SSTPfad & SSTDatei
                    Call Dateiauslesen(Datei, Zeile - 1)
                End If
            Else
               Worksheets("Verketten SST").Activate
                Range(Cells(Zeile - 1, 2), Cells(Zeile - 1, 3)).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .ThemeColor = xlThemeColorDark1
                     .TintAndShade = -0.149998474074526
                    .PatternTintAndShade = 0
                End With
            End If
            
            ThisWorkbook.Worksheets("SST Gr").Activate
            Inhalt = Range(Cells(Zeile, 1), Cells(Zeile, 1)).Value
            Zeile = Zeile + 1
        Loop
             
        AnzStudien = Zeile - 3
        
End Sub

Public Sub Dateiauslesen(Dateinamen As String, SSTZeile As Integer)
'Werte aus SST auslesen und in Tabelle "Studienstatus" eintragen

    Dim Datei As String

    Application.EnableEvents = False
    Workbooks.Open Dateinamen, ReadOnly:=True
    Application.EnableEvents = True
    Datei = ActiveWorkbook.Name
    

    Application.CutCopyMode = True
    
    Worksheets("Timelines").Range("C7:C86").Copy
    ThisWorkbook.Sheets("SST Gr").Range("C" & SSTZeile).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=True
    
    Application.CutCopyMode = False
    
    Application.EnableEvents = False
    Workbooks(Datei).Close False
    Application.EnableEvents = True
  End Sub
  Public Sub Zellenloeschen()
        Sheets("SST Gr").Range("C2:AK200").ClearContents
       Range("C2:D200").Select
         Selection.ClearContents
         With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
  End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 5, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Modul1.Aktualisierung
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Modul3.Aktualisierung
End Sub

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{775DE4D3-89F8-4620-8CB9-A6675FDCF00D}{17FB521F-9DA2-418B-91BF-D2BF254A6009}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' InQuest injected base64 decoded content
' %z'!L

INQUEST-PP=macro
