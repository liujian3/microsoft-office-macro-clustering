Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Class1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Mod_AMS_dop_b|fffd||fffd|dy"
Option Explicit

Public Function AMS(Typ As Integer, Temperatura As Double)
'funkcja podaje dopuszczalny b|fffd||fffd|d dla okre|fffd|lonego typu narz|fffd|dzia w funkcji temperatury wed|fffd|ug normy AMS2750
'1 - czujnik TUS, roboczy w piecu kl.III, wsadowy
'2 - czujnik po|fffd|rednicz|fffd|cy i ISC nieszlachetny, roboczy w piecu kl.II
'3 - mierniki robocze analogowe
'4 - mierniki robocze cyfrowe
'5 - czujnik kontrolny, po|fffd|rednicz|fffd|cy i ISC szlachetny, miernik TUS, ISC i polowy
'6 - miernik po|fffd|rednicz|fffd|cy
'7 - miernik kontrolny

AMS = 0
    If Typ = 1 Then
    'czujnik TUS, roboczy w piecu kl.III, wsadowy
    If Temperatura * 0.0075 > 2.2 Then
    AMS = Temperatura * 0.0075
    Else
    AMS = 2.2
    End If
    End If
    
        If Typ = 2 Then
        'czujnik po|fffd|rednicz|fffd|cy i ISC nieszlachetny, roboczy w piecu kl.II
        If Temperatura * 0.004 > 1.1 Then
        AMS = Temperatura * 0.004
        Else
        AMS = 1.1
        End If
        End If
    
            If Typ = 3 Then
            'mierniki robocze analogowe
            If Temperatura * 0.003 > 1.1 Then
            AMS = Temperatura * 0.003
            Else
            AMS = 1.1
            End If
            End If
            
                If Typ = 4 Then
                'mierniki robocze cyfrowe
                AMS = 1.1
                End If
         
                    If Typ = 5 Then
                    'czujnik kontrolny, po|fffd|rednicz|fffd|cy i ISC szlachetny, miernik TUS, ISC i polowy
                    If Temperatura * 0.001 > 0.6 Then
                    AMS = Temperatura * 0.001
                    Else
                    AMS = 0.6
                    End If
                    End If
                
                        If Typ = 6 Then
                        'miernik po|fffd|rednicz|fffd|cy
                        If Temperatura * 0.0005 > 0.2 Then
                        AMS = Temperatura * 0.0005
                        Else
                        AMS = 0.2
                        End If
                        End If
            
                            If Typ = 7 Then
                            'miernik kontrolny
                            If Temperatura * 0.00015 > 0.05 Then
                            AMS = Temperatura * 0.00015
                            Else
                            AMS = 0.05
                            End If
                            End If
End Function
Attribute VB_Name = "Mod_Dekady_poprawka"
Option Explicit

Public Function Dekada(NumerDekady As String, Argument As Double)


'funkcja dodaje poprawk|fffd| dla danej dekady wzorcowej i podanej warto|fffd|ci rezystancji(argumentu)
'dane wzorc|fffd|w musz|fffd| znajdowa|fffd| si|fffd| w arkuszu WZORCE w |fffd|ci|fffd|le okre|fffd|lonych kom|fffd|rkach


'deklaracja zmiennych
Dim w(7, 10) As Integer
Dim arg_10000 As Integer
Dim arg_1000 As Integer
Dim arg_100 As Integer
Dim arg_10 As Integer
Dim arg_1 As Integer
Dim arg_01 As Integer
Dim arg_001 As Integer
Dim rezystancja As Double
Dim r As Double


rezystancja = Argument



'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X10000
arg_10000 = Int(rezystancja / 10000)
r = arg_10000 * 1000
r = r * 10
rezystancja = rezystancja - r
    'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X1000
    arg_1000 = Int(rezystancja / 1000)
    r = arg_1000 * 1000
    rezystancja = rezystancja - r
        'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X100
        arg_100 = Int(rezystancja / 100)
        r = arg_100 * 100
        rezystancja = rezystancja - r
            'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X10
            arg_10 = Int(rezystancja / 10)
            r = arg_10 * 10
            rezystancja = rezystancja - r
                'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X1
                arg_1 = Int(rezystancja / 1)
                r = arg_1 * 1
                rezystancja = (rezystancja - r) * 100
                    'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X01
                    arg_01 = Int(rezystancja / 10)
                    r = arg_01 * 10
                    rezystancja = rezystancja - r
                        'okre|fffd|lenie pozycji prze|fffd||fffd|cznika dekady X001
                        arg_001 = rezystancja


'test
If NumerDekady = "1" Then
Dekada = arg_10000
End If


If NumerDekady = "2" Then
Dekada = arg_1000
End If


If NumerDekady = "3" Then
Dekada = arg_100
End If

If NumerDekady = "4" Then
Dekada = arg_10
End If


If NumerDekady = "5" Then
Dekada = arg_1
End If


If NumerDekady = "6" Then
Dekada = arg_01
End If

If NumerDekady = "7" Then
Dekada = arg_001
End If
'end test





If NumerDekady = "01a" Then
'zmienne w(1,1)...w(1,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10000 ohm
'w(1, 1) = Worksheets("WZORCE").Range("---")
'w(1, 2) = Worksheets("WZORCE").Range("---")
'w(1, 3) = Worksheets("WZORCE").Range("---")
'w(1, 4) = Worksheets("WZORCE").Range("---")
'w(1, 5) = Worksheets("WZORCE").Range("---")
'w(1, 6) = Worksheets("WZORCE").Range("---")
'w(1, 8) = Worksheets("WZORCE").Range("---")
'w(1, 9) = Worksheets("WZORCE").Range("---")
'w(1, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(2,1)...w(2,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1000 ohm
'w(2, 1) = Worksheets("WZORCE").Range("---")
'w(2, 2) = Worksheets("WZORCE").Range("---")
'w(2, 3) = Worksheets("WZORCE").Range("---")
'w(2, 4) = Worksheets("WZORCE").Range("---")
'w(2, 5) = Worksheets("WZORCE").Range("---")
'w(2, 6) = Worksheets("WZORCE").Range("---")
'w(2, 8) = Worksheets("WZORCE").Range("---")
'w(2, 9) = Worksheets("WZORCE").Range("---")
'w(2, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(3,1)...w(3,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X100 ohm
w(3, 1) = Worksheets("WZORCE").Range("M862")
w(3, 2) = Worksheets("WZORCE").Range("M863")
w(3, 3) = Worksheets("WZORCE").Range("M864")
w(3, 4) = Worksheets("WZORCE").Range("M865")
'w(3, 5) = Worksheets("WZORCE").Range("---")
'w(3, 6) = Worksheets("WZORCE").Range("---")
'w(3, 8) = Worksheets("WZORCE").Range("---")
'w(3, 9) = Worksheets("WZORCE").Range("---")
'w(3, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(4,1)...w(4,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10 ohm
w(4, 1) = Worksheets("WZORCE").Range("M866")
w(4, 2) = Worksheets("WZORCE").Range("M867")
w(4, 3) = Worksheets("WZORCE").Range("M868")
w(4, 4) = Worksheets("WZORCE").Range("M869")
w(4, 5) = Worksheets("WZORCE").Range("M870")
w(4, 6) = Worksheets("WZORCE").Range("M871")
w(4, 8) = Worksheets("WZORCE").Range("M872")
w(4, 9) = Worksheets("WZORCE").Range("M873")
w(4, 10) = Worksheets("WZORCE").Range("M874")

'zmienne w(5,1)...w(5,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1 ohm
w(5, 1) = Worksheets("WZORCE").Range("M875")
w(5, 2) = Worksheets("WZORCE").Range("M876")
w(5, 3) = Worksheets("WZORCE").Range("M877")
w(5, 4) = Worksheets("WZORCE").Range("M878")
w(5, 5) = Worksheets("WZORCE").Range("M879")
w(5, 6) = Worksheets("WZORCE").Range("M880")
w(5, 8) = Worksheets("WZORCE").Range("M881")
w(5, 9) = Worksheets("WZORCE").Range("M882")
w(5, 10) = Worksheets("WZORCE").Range("M883")

'zmienne w(6,1)...w(6,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,1 ohm
w(6, 1) = Worksheets("WZORCE").Range("M884")
w(6, 2) = Worksheets("WZORCE").Range("M885")
w(6, 3) = Worksheets("WZORCE").Range("M886")
w(6, 4) = Worksheets("WZORCE").Range("M887")
w(6, 5) = Worksheets("WZORCE").Range("M888")
w(6, 6) = Worksheets("WZORCE").Range("M889")
w(6, 8) = Worksheets("WZORCE").Range("M890")
w(6, 9) = Worksheets("WZORCE").Range("M891")
w(6, 10) = Worksheets("WZORCE").Range("M892")

'zmienne w(7,1)...w(7,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,01 ohm
w(7, 1) = Worksheets("WZORCE").Range("M893")
w(7, 2) = Worksheets("WZORCE").Range("M894")
w(7, 3) = Worksheets("WZORCE").Range("M895")
w(7, 4) = Worksheets("WZORCE").Range("M896")
w(7, 5) = Worksheets("WZORCE").Range("M897")
w(7, 6) = Worksheets("WZORCE").Range("M898")
w(7, 8) = Worksheets("WZORCE").Range("M899")
w(7, 9) = Worksheets("WZORCE").Range("M900")
w(7, 10) = Worksheets("WZORCE").Range("M901")
'End If



If NumerDekady = "01b" Then
'zmienne w(1,1)...w(1,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10000 ohm
'w(1, 1) = Worksheets("WZORCE").Range("---")
'w(1, 2) = Worksheets("WZORCE").Range("---")
'w(1, 3) = Worksheets("WZORCE").Range("---")
'w(1, 4) = Worksheets("WZORCE").Range("---")
'w(1, 5) = Worksheets("WZORCE").Range("---")
'w(1, 6) = Worksheets("WZORCE").Range("---")
'w(1, 8) = Worksheets("WZORCE").Range("---")
'w(1, 9) = Worksheets("WZORCE").Range("---")
'w(1, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(2,1)...w(2,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1000 ohm
'w(2, 1) = Worksheets("WZORCE").Range("---")
'w(2, 2) = Worksheets("WZORCE").Range("---")
'w(2, 3) = Worksheets("WZORCE").Range("---")
'w(2, 4) = Worksheets("WZORCE").Range("---")
'w(2, 5) = Worksheets("WZORCE").Range("---")
'w(2, 6) = Worksheets("WZORCE").Range("---")
'w(2, 8) = Worksheets("WZORCE").Range("---")
'w(2, 9) = Worksheets("WZORCE").Range("---")
'w(2, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(3,1)...w(3,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X100 ohm
w(3, 1) = Worksheets("WZORCE").Range("U862")
w(3, 2) = Worksheets("WZORCE").Range("U863")
w(3, 3) = Worksheets("WZORCE").Range("U864")
w(3, 4) = Worksheets("WZORCE").Range("U865")
'w(3, 5) = Worksheets("WZORCE").Range("---")
'w(3, 6) = Worksheets("WZORCE").Range("---")
'w(3, 8) = Worksheets("WZORCE").Range("---")
'w(3, 9) = Worksheets("WZORCE").Range("---")
'w(3, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(4,1)...w(4,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10 ohm
w(4, 1) = Worksheets("WZORCE").Range("U866")
w(4, 2) = Worksheets("WZORCE").Range("U867")
w(4, 3) = Worksheets("WZORCE").Range("U868")
w(4, 4) = Worksheets("WZORCE").Range("U869")
w(4, 5) = Worksheets("WZORCE").Range("U870")
w(4, 6) = Worksheets("WZORCE").Range("U871")
w(4, 8) = Worksheets("WZORCE").Range("U872")
w(4, 9) = Worksheets("WZORCE").Range("U873")
w(4, 10) = Worksheets("WZORCE").Range("U874")

'zmienne w(5,1)...w(5,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1 ohm
w(5, 1) = Worksheets("WZORCE").Range("U875")
w(5, 2) = Worksheets("WZORCE").Range("U876")
w(5, 3) = Worksheets("WZORCE").Range("U877")
w(5, 4) = Worksheets("WZORCE").Range("U878")
w(5, 5) = Worksheets("WZORCE").Range("U879")
w(5, 6) = Worksheets("WZORCE").Range("U880")
w(5, 8) = Worksheets("WZORCE").Range("U881")
w(5, 9) = Worksheets("WZORCE").Range("U882")
w(5, 10) = Worksheets("WZORCE").Range("U883")

'zmienne w(6,1)...w(6,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,1 ohm
w(6, 1) = Worksheets("WZORCE").Range("U884")
w(6, 2) = Worksheets("WZORCE").Range("U885")
w(6, 3) = Worksheets("WZORCE").Range("U886")
w(6, 4) = Worksheets("WZORCE").Range("U887")
w(6, 5) = Worksheets("WZORCE").Range("U888")
w(6, 6) = Worksheets("WZORCE").Range("U889")
w(6, 8) = Worksheets("WZORCE").Range("U890")
w(6, 9) = Worksheets("WZORCE").Range("U891")
w(6, 10) = Worksheets("WZORCE").Range("U892")

'zmienne w(7,1)...w(7,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,01 ohm
w(7, 1) = Worksheets("WZORCE").Range("U893")
w(7, 2) = Worksheets("WZORCE").Range("U894")
w(7, 3) = Worksheets("WZORCE").Range("U895")
w(7, 4) = Worksheets("WZORCE").Range("U896")
w(7, 5) = Worksheets("WZORCE").Range("U897")
w(7, 6) = Worksheets("WZORCE").Range("U898")
w(7, 8) = Worksheets("WZORCE").Range("U899")
w(7, 9) = Worksheets("WZORCE").Range("U900")
w(7, 10) = Worksheets("WZORCE").Range("U901")
End If



If NumerDekady = "02a" Then
'zmienne w(1,1)...w(1,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10000 ohm
w(1, 1) = Worksheets("WZORCE").Range("M922")
w(1, 2) = Worksheets("WZORCE").Range("M923")
w(1, 3) = Worksheets("WZORCE").Range("M924")
w(1, 4) = Worksheets("WZORCE").Range("M925")
'w(1, 5) = Worksheets("WZORCE").Range("---")
'w(1, 6) = Worksheets("WZORCE").Range("---")
'w(1, 8) = Worksheets("WZORCE").Range("---")
'w(1, 9) = Worksheets("WZORCE").Range("---")
'w(1, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(2,1)...w(2,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1000 ohm
w(2, 1) = Worksheets("WZORCE").Range("M926")
w(2, 2) = Worksheets("WZORCE").Range("M927")
w(2, 3) = Worksheets("WZORCE").Range("M928")
w(2, 4) = Worksheets("WZORCE").Range("M929")
w(2, 5) = Worksheets("WZORCE").Range("M930")
w(2, 6) = Worksheets("WZORCE").Range("M931")
w(2, 8) = Worksheets("WZORCE").Range("M932")
w(2, 9) = Worksheets("WZORCE").Range("M933")
w(2, 10) = Worksheets("WZORCE").Range("M934")

'zmienne w(3,1)...w(3,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X100 ohm
w(3, 1) = Worksheets("WZORCE").Range("M935")
w(3, 2) = Worksheets("WZORCE").Range("M936")
w(3, 3) = Worksheets("WZORCE").Range("M937")
w(3, 4) = Worksheets("WZORCE").Range("M938")
w(3, 5) = Worksheets("WZORCE").Range("M939")
w(3, 6) = Worksheets("WZORCE").Range("M940")
w(3, 8) = Worksheets("WZORCE").Range("M941")
w(3, 9) = Worksheets("WZORCE").Range("M942")
w(3, 10) = Worksheets("WZORCE").Range("M943")

'zmienne w(4,1)...w(4,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10 ohm
w(4, 1) = Worksheets("WZORCE").Range("M944")
w(4, 2) = Worksheets("WZORCE").Range("M945")
w(4, 3) = Worksheets("WZORCE").Range("M946")
w(4, 4) = Worksheets("WZORCE").Range("M947")
w(4, 5) = Worksheets("WZORCE").Range("M948")
w(4, 6) = Worksheets("WZORCE").Range("M949")
w(4, 8) = Worksheets("WZORCE").Range("M950")
w(4, 9) = Worksheets("WZORCE").Range("M951")
w(4, 10) = Worksheets("WZORCE").Range("M952")

'zmienne w(5,1)...w(5,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1 ohm
w(5, 1) = Worksheets("WZORCE").Range("M953")
w(5, 2) = Worksheets("WZORCE").Range("M954")
w(5, 3) = Worksheets("WZORCE").Range("M955")
w(5, 4) = Worksheets("WZORCE").Range("M956")
w(5, 5) = Worksheets("WZORCE").Range("M957")
w(5, 6) = Worksheets("WZORCE").Range("M958")
w(5, 8) = Worksheets("WZORCE").Range("M959")
w(5, 9) = Worksheets("WZORCE").Range("M960")
w(5, 10) = Worksheets("WZORCE").Range("M961")

'zmienne w(6,1)...w(6,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,1 ohm
'w(6, 1) = Worksheets("WZORCE").Range("---")
'w(6, 2) = Worksheets("WZORCE").Range("---")
'w(6, 3) = Worksheets("WZORCE").Range("---")
'w(6, 4) = Worksheets("WZORCE").Range("---")
'w(6, 5) = Worksheets("WZORCE").Range("---")
'w(6, 6) = Worksheets("WZORCE").Range("---")
'w(6, 8) = Worksheets("WZORCE").Range("---")
'w(6, 9) = Worksheets("WZORCE").Range("---")
'w(6, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(7,1)...w(7,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,01 ohm
'w(7, 1) = Worksheets("WZORCE").Range("---")
'w(7, 2) = Worksheets("WZORCE").Range("---")
'w(7, 3) = Worksheets("WZORCE").Range("---")
'w(7, 4) = Worksheets("WZORCE").Range("---")
'w(7, 5) = Worksheets("WZORCE").Range("---")
'w(7, 6) = Worksheets("WZORCE").Range("---")
'w(7, 8) = Worksheets("WZORCE").Range("---")
'w(7, 9) = Worksheets("WZORCE").Range("---")
'w(7, 10) = Worksheets("WZORCE").Range("---")
End If




If NumerDekady = "02B" Then
'zmienne w(1,1)...w(1,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10000 ohm
w(1, 1) = Worksheets("WZORCE").Range("U922")
w(1, 2) = Worksheets("WZORCE").Range("U923")
w(1, 3) = Worksheets("WZORCE").Range("U924")
w(1, 4) = Worksheets("WZORCE").Range("U925")
'w(1, 5) = Worksheets("WZORCE").Range("---")
'w(1, 6) = Worksheets("WZORCE").Range("---")
'w(1, 8) = Worksheets("WZORCE").Range("---")
'w(1, 9) = Worksheets("WZORCE").Range("---")
'w(1, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(2,1)...w(2,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1000 ohm
w(2, 1) = Worksheets("WZORCE").Range("U926")
w(2, 2) = Worksheets("WZORCE").Range("U927")
w(2, 3) = Worksheets("WZORCE").Range("U928")
w(2, 4) = Worksheets("WZORCE").Range("U929")
w(2, 5) = Worksheets("WZORCE").Range("U930")
w(2, 6) = Worksheets("WZORCE").Range("U931")
w(2, 8) = Worksheets("WZORCE").Range("U932")
w(2, 9) = Worksheets("WZORCE").Range("U933")
w(2, 10) = Worksheets("WZORCE").Range("U934")

'zmienne w(3,1)...w(3,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X100 ohm
w(3, 1) = Worksheets("WZORCE").Range("U935")
w(3, 2) = Worksheets("WZORCE").Range("U936")
w(3, 3) = Worksheets("WZORCE").Range("U937")
w(3, 4) = Worksheets("WZORCE").Range("U938")
w(3, 5) = Worksheets("WZORCE").Range("U939")
w(3, 6) = Worksheets("WZORCE").Range("U940")
w(3, 8) = Worksheets("WZORCE").Range("U941")
w(3, 9) = Worksheets("WZORCE").Range("U942")
w(3, 10) = Worksheets("WZORCE").Range("U943")

'zmienne w(4,1)...w(4,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X10 ohm
w(4, 1) = Worksheets("WZORCE").Range("U944")
w(4, 2) = Worksheets("WZORCE").Range("U945")
w(4, 3) = Worksheets("WZORCE").Range("U946")
w(4, 4) = Worksheets("WZORCE").Range("U947")
w(4, 5) = Worksheets("WZORCE").Range("U948")
w(4, 6) = Worksheets("WZORCE").Range("U949")
w(4, 8) = Worksheets("WZORCE").Range("U950")
w(4, 9) = Worksheets("WZORCE").Range("U951")
w(4, 10) = Worksheets("WZORCE").Range("U952")

'zmienne w(5,1)...w(5,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X1 ohm
w(5, 1) = Worksheets("WZORCE").Range("U953")
w(5, 2) = Worksheets("WZORCE").Range("U954")
w(5, 3) = Worksheets("WZORCE").Range("U955")
w(5, 4) = Worksheets("WZORCE").Range("U956")
w(5, 5) = Worksheets("WZORCE").Range("U957")
w(5, 6) = Worksheets("WZORCE").Range("U958")
w(5, 8) = Worksheets("WZORCE").Range("U959")
w(5, 9) = Worksheets("WZORCE").Range("U960")
w(5, 10) = Worksheets("WZORCE").Range("U961")

'zmienne w(6,1)...w(6,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,1 ohm
'w(6, 1) = Worksheets("WZORCE").Range("---")
'w(6, 2) = Worksheets("WZORCE").Range("---")
'w(6, 3) = Worksheets("WZORCE").Range("---")
'w(6, 4) = Worksheets("WZORCE").Range("---")
'w(6, 5) = Worksheets("WZORCE").Range("---")
'w(6, 6) = Worksheets("WZORCE").Range("---")
'w(6, 8) = Worksheets("WZORCE").Range("---")
'w(6, 9) = Worksheets("WZORCE").Range("---")
'w(6, 10) = Worksheets("WZORCE").Range("---")

'zmienne w(7,1)...w(7,10) s|fffd| argumentami ze |fffd|wiadectw wzorcowania, dekada X0,01 ohm
'w(7, 1) = Worksheets("WZORCE").Range("---")
'w(7, 2) = Worksheets("WZORCE").Range("---")
'w(7, 3) = Worksheets("WZORCE").Range("---")
'w(7, 4) = Worksheets("WZORCE").Range("---")
'w(7, 5) = Worksheets("WZORCE").Range("---")
'w(7, 6) = Worksheets("WZORCE").Range("---")
'w(7, 8) = Worksheets("WZORCE").Range("---")
'w(7, 9) = Worksheets("WZORCE").Range("---")
'w(7, 10) = Worksheets("WZORCE").Range("---")
End If












                                'test
                                If NumerDekady = "02a" Then
                                Dekada = w(5, 10)
                                End If
                                'end test


















End If


End Function
Attribute VB_Name = "Mod_INTERPOLACJA_Newtona"
Option Explicit

Public Function s0_4(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double, x3 As Double, y3 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 4 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s0 (pot|fffd|ga 0)
'x3  ;   f(3)=y3  ;   .....................       ...............................         .....................................
'x2  ;   f(2)=y2  ;   f(2,3)=(y3-y3)/(x3-x2)      ...............................         .....................................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   f(1,2,3)=(f(2,3)-f(1,2))/(x3-x1)        .....................................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)    ;   f(0,1,2,3)=(f(1,2,3)-f(0,1,2))/(x3-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s3*x^3   +   s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f23 As Double
Dim f12 As Double
Dim f01 As Double
Dim f123 As Double
Dim f012 As Double
Dim f0123 As Double

f23 = (y3 - y2) / (x3 - x2)
f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f123 = (f23 - f12) / (x3 - x1)
f012 = (f12 - f01) / (x2 - x0)

f0123 = (f123 - f012) / (x3 - x0)


 s0_4 = y0 - f01 * x0 + f012 * x0 * x1 - f0123 * x0 * x1 * x2
's1_4 = f01 - f012 * (x0 + x1) + f0123 * (x0 * x1 + x0 * x2 + x1 * x2)
's2_4 = f012 - f0123 * (x0 + x1 + x2)
's3_4 = f0123

End Function
Public Function s1_4(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double, x3 As Double, y3 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 4 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s1 (pot|fffd|ga 1)
'x3  ;   f(3)=y3  ;   .....................       ...............................         .....................................
'x2  ;   f(2)=y2  ;   f(2,3)=(y3-y3)/(x3-x2)      ...............................         .....................................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   f(1,2,3)=(f(2,3)-f(1,2))/(x3-x1)        .....................................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)    ;   f(0,1,2,3)=(f(1,2,3)-f(0,1,2))/(x3-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s3*x^3   +   s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f23 As Double
Dim f12 As Double
Dim f01 As Double
Dim f123 As Double
Dim f012 As Double
Dim f0123 As Double

f23 = (y3 - y2) / (x3 - x2)
f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f123 = (f23 - f12) / (x3 - x1)
f012 = (f12 - f01) / (x2 - x0)

f0123 = (f123 - f012) / (x3 - x0)


's0_4 = y0 - f01 * x0 + f012 * x0 * x1 - f0123 * x0 * x1 * x2
 s1_4 = f01 - f012 * (x0 + x1) + f0123 * (x0 * x1 + x0 * x2 + x1 * x2)
's2_4 = f012 - f0123 * (x0 + x1 + x2)
's3_4 = f0123

End Function
Public Function s2_4(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double, x3 As Double, y3 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 4 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s2 (pot|fffd|ga 2)
'x3  ;   f(3)=y3  ;   .....................       ...............................         .....................................
'x2  ;   f(2)=y2  ;   f(2,3)=(y3-y3)/(x3-x2)      ...............................         .....................................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   f(1,2,3)=(f(2,3)-f(1,2))/(x3-x1)        .....................................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)    ;   f(0,1,2,3)=(f(1,2,3)-f(0,1,2))/(x3-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s3*x^3   +   s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f23 As Double
Dim f12 As Double
Dim f01 As Double
Dim f123 As Double
Dim f012 As Double
Dim f0123 As Double

f23 = (y3 - y2) / (x3 - x2)
f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f123 = (f23 - f12) / (x3 - x1)
f012 = (f12 - f01) / (x2 - x0)

f0123 = (f123 - f012) / (x3 - x0)


's0_4 = y0 - f01 * x0 + f012 * x0 * x1 - f0123 * x0 * x1 * x2
's1_4 = f01 - f012 * (x0 + x1) + f0123 * (x0 * x1 + x0 * x2 + x1 * x2)
 s2_4 = f012 - f0123 * (x0 + x1 + x2)
's3_4 = f0123

End Function
Public Function s3_4(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double, x3 As Double, y3 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 4 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s3 (pot|fffd|ga 3)
'x3  ;   f(3)=y3  ;   .....................       ...............................         .....................................
'x2  ;   f(2)=y2  ;   f(2,3)=(y3-y3)/(x3-x2)      ...............................         .....................................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   f(1,2,3)=(f(2,3)-f(1,2))/(x3-x1)        .....................................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)    ;   f(0,1,2,3)=(f(1,2,3)-f(0,1,2))/(x3-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s3*x^3   +   s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f23 As Double
Dim f12 As Double
Dim f01 As Double
Dim f123 As Double
Dim f012 As Double
Dim f0123 As Double

f23 = (y3 - y2) / (x3 - x2)
f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f123 = (f23 - f12) / (x3 - x1)
f012 = (f12 - f01) / (x2 - x0)

f0123 = (f123 - f012) / (x3 - x0)


's0_4 = y0 - f01 * x0 + f012 * x0 * x1 - f0123 * x0 * x1 * x2
's1_4 = f01 - f012 * (x0 + x1) + f0123 * (x0 * x1 + x0 * x2 + x1 * x2)
's2_4 = f012 - f0123 * (x0 + x1 + x2)
 s3_4 = f0123

End Function



Public Function s0_3(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 3 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s0 (pot|fffd|ga 0)
'x2  ;   f(2)=y2  ;   ......................      ...............................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   ...............................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f12 As Double
Dim f01 As Double
Dim f012 As Double

f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f012 = (f12 - f01) / (x2 - x0)


  s0_3 = y0 - f01 * x0 + f012 * x0 * x1
 's1_3 = f01 - f012 * (x0 + x1)
 's2_3 = f012


End Function



Public Function s1_3(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 3 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s1 (pot|fffd|ga 1)
'x2  ;   f(2)=y2  ;   ......................      ...............................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   ...............................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f12 As Double
Dim f01 As Double
Dim f012 As Double

f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f012 = (f12 - f01) / (x2 - x0)


 's0_3 = y0 - f01 * x0 + f012 * x0 * x1
  s1_3 = f01 - f012 * (x0 + x1)
 's2_3 = f012


End Function



Public Function s2_3(x0 As Double, y0 As Double, x1 As Double, y1 As Double, x2 As Double, y2 As Double)

'wzory do wyliczenia wielomianu interpolacyjnego metod|fffd| NEWTONA dla 3 par argument-warto|fffd||fffd|. Wsp|fffd|czynnik s2 (pot|fffd|ga 2)
'x2  ;   f(2)=y2  ;   ......................      ...............................
'x1  ;   f(1)=y1  ;   f(1,2)=(y2-y1)/(x2-x1)  ;   ...............................
'x0  ;   f(0)=y0  ;   f(0,1)=(y1-y0)/(x1-x0)  ;   f(0,1,2)=(f(1,2)-f(0,1))/(x2-x0)

's0 = f(0)      -   f(0,1)*x0            +   f(0,1,2)*x0*x1  -   f(0,1,2,3)*x0*x1*x2
's1 = f(0,1)    -   f(0,1,2)*(x0+x1)     +   f(0,1,2,3)*(x0*x1+x0*x2+x1*x2)
's2 = f(0,1,2)  -   f(0,1,2,3)*(x0+x1+x2)
's3 = f(0,1,2,3)
'Y(x)=s2*x^2   +   s1*x^1   +   s0*x^0    jest to wynikowy wielomian

Dim f12 As Double
Dim f01 As Double
Dim f012 As Double

f12 = (y2 - y1) / (x2 - x1)
f01 = (y1 - y0) / (x1 - x0)

f012 = (f12 - f01) / (x2 - x0)


 's0_3 = y0 - f01 * x0 + f012 * x0 * x1
 's1_3 = f01 - f012 * (x0 + x1)
  s2_3 = f012


End Function
Attribute VB_Name = "Mod_Przyrz|fffd|dy"
Option Explicit

Public Function Miernik(Argument As Double)
'funkcja podaje poprawk|fffd| dla podanego miernika i podanej warto|fffd|ci(argumentu)
'dane wzorc|fffd|w musz|fffd| znajdowa|fffd| si|fffd| w arkuszu WZORCE w |fffd|ci|fffd|le okre|fffd|lonych kom|fffd|rkach

'deklaracja zmiennych
Miernik = 0
Dim w(1 To 7, 1 To 7) As Double
Dim arg_ni|fffd|szy As Double
Dim arg_wy|fffd|szy As Double
Dim wart_ni|fffd|sza As Double
Dim wart_wy|fffd|sza As Double
Dim i As Integer
Dim krok As Double
Dim arg As Double
Dim wart As Double



'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("G442")
w(1, 2) = Worksheets("WZORCE").Range("G443")
w(1, 3) = Worksheets("WZORCE").Range("G444")
w(1, 4) = Worksheets("WZORCE").Range("G445")
w(1, 5) = Worksheets("WZORCE").Range("G446")
w(1, 6) = Worksheets("WZORCE").Range("G447")
w(1, 7) = Worksheets("WZORCE").Range("G448")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("H442")
w(2, 2) = Worksheets("WZORCE").Range("H443")
w(2, 3) = Worksheets("WZORCE").Range("H444")
w(2, 4) = Worksheets("WZORCE").Range("H445")
w(2, 5) = Worksheets("WZORCE").Range("H446")
w(2, 6) = Worksheets("WZORCE").Range("H447")
w(2, 7) = Worksheets("WZORCE").Range("H448")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)
arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Miernik = wart
        Else
        Miernik = 0
        End If


End Function
Attribute VB_Name = "Mod_Pt100"
Option Explicit

Public Function Pt100(T_symulowana As Double, R_zmierzona As Double)
'Funkcja wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu Pt100 dla danej rezystancji i odwrotnie
                                    
Dim T_nizsza As Double
Dim T_wyzsza As Double
Dim R_nizsza As Double
Dim R_wyzsza As Double
Dim r As Double
Dim R_wyliczona As Double
Dim T As Double
Dim T_wyliczona As Double
Dim i As Integer
                                    
                                    
'Za|fffd|adowanie tabeli PN charakterstyk|fffd| z normy PN-EN60751+A2
Dim PN(-201 To 851) As Double
                                    


PN(-201) = 18.09
PN(-200) = 18.52
PN(-199) = 18.95
PN(-198) = 19.38
PN(-197) = 19.82
PN(-196) = 20.25
PN(-195) = 20.68
PN(-194) = 21.11
PN(-193) = 21.54
PN(-192) = 21.97
PN(-191) = 22.4
PN(-190) = 22.83
PN(-189) = 23.25
PN(-188) = 23.68
PN(-187) = 24.11
PN(-186) = 24.54
PN(-185) = 24.97
PN(-184) = 25.39
PN(-183) = 25.82
PN(-182) = 26.24
PN(-181) = 26.67
PN(-180) = 27.1
PN(-179) = 27.52
PN(-178) = 27.95
PN(-177) = 28.37
PN(-176) = 28.8
PN(-175) = 29.22
PN(-174) = 29.64
PN(-173) = 30.07
PN(-172) = 30.49
PN(-171) = 30.91
PN(-170) = 31.34
PN(-169) = 31.76
PN(-168) = 32.18
PN(-167) = 32.6
PN(-166) = 33.02
PN(-165) = 33.44
PN(-164) = 33.86
PN(-163) = 34.28
PN(-162) = 34.7
PN(-161) = 35.12
PN(-160) = 35.54
PN(-159) = 35.96
PN(-158) = 36.38
PN(-157) = 36.8
PN(-156) = 37.22
PN(-155) = 37.64
PN(-154) = 38.05
PN(-153) = 38.47
PN(-152) = 38.89
PN(-151) = 39.31
PN(-150) = 39.72
PN(-149) = 40.14
PN(-148) = 40.56
PN(-147) = 40.97
PN(-146) = 41.39
PN(-145) = 41.8
PN(-144) = 42.22
PN(-143) = 42.63
PN(-142) = 43.05
PN(-141) = 43.46
PN(-140) = 43.88
PN(-139) = 44.29
PN(-138) = 44.7
PN(-137) = 45.12
PN(-136) = 45.53
PN(-135) = 45.94
PN(-134) = 46.36
PN(-133) = 46.77
PN(-132) = 47.18
PN(-131) = 47.59
PN(-130) = 48
PN(-129) = 48.42
PN(-128) = 48.83
PN(-127) = 49.24
PN(-126) = 49.65
PN(-125) = 50.06
PN(-124) = 50.47
PN(-123) = 50.88
PN(-122) = 51.29
PN(-121) = 51.7
PN(-120) = 52.11
PN(-119) = 52.52
PN(-118) = 52.93
PN(-117) = 53.34
PN(-116) = 53.75
PN(-115) = 54.15
PN(-114) = 54.56
PN(-113) = 54.97
PN(-112) = 55.38
PN(-111) = 55.79
PN(-110) = 56.19
PN(-109) = 56.6
PN(-108) = 57.01
PN(-107) = 57.41
PN(-106) = 57.82
PN(-105) = 58.23
PN(-104) = 58.63
PN(-103) = 59.04
PN(-102) = 59.44
PN(-101) = 59.85
PN(-100) = 60.26
PN(-99) = 60.66
PN(-98) = 61.07
PN(-97) = 61.47
PN(-96) = 61.88
PN(-95) = 62.28
PN(-94) = 62.68
PN(-93) = 63.09
PN(-92) = 63.49
PN(-91) = 63.9
PN(-90) = 64.3
PN(-89) = 64.7
PN(-88) = 65.11
PN(-87) = 65.51
PN(-86) = 65.91
PN(-85) = 66.31
PN(-84) = 66.72
PN(-83) = 67.12
PN(-82) = 67.52
PN(-81) = 67.92
PN(-80) = 68.33
PN(-79) = 68.73
PN(-78) = 69.13
PN(-77) = 69.53
PN(-76) = 69.93
PN(-75) = 70.33
PN(-74) = 70.73
PN(-73) = 71.13
PN(-72) = 71.53
PN(-71) = 71.93
PN(-70) = 72.33
PN(-69) = 72.73
PN(-68) = 73.13
PN(-67) = 73.53
PN(-66) = 73.93
PN(-65) = 74.33
PN(-64) = 74.73
PN(-63) = 75.13
PN(-62) = 75.53
PN(-61) = 75.93
PN(-60) = 76.33
PN(-59) = 76.73
PN(-58) = 77.12
PN(-57) = 77.52
PN(-56) = 77.92
PN(-55) = 78.32
PN(-54) = 78.72
PN(-53) = 79.11
PN(-52) = 79.51
PN(-51) = 79.91
PN(-50) = 80.31
PN(-49) = 80.7
PN(-48) = 81.1
PN(-47) = 81.5
PN(-46) = 81.89
PN(-45) = 82.29
PN(-44) = 82.69
PN(-43) = 83.08
PN(-42) = 83.48
PN(-41) = 83.87
PN(-40) = 84.27
PN(-39) = 84.67
PN(-38) = 85.06
PN(-37) = 85.46
PN(-36) = 85.85
PN(-35) = 86.25
PN(-34) = 86.64
PN(-33) = 87.04
PN(-32) = 87.43
PN(-31) = 87.83
PN(-30) = 88.22
PN(-29) = 88.62
PN(-28) = 89.01
PN(-27) = 89.4
PN(-26) = 89.8
PN(-25) = 90.19
PN(-24) = 90.59
PN(-23) = 90.98
PN(-22) = 91.37
PN(-21) = 91.77
PN(-20) = 92.16
PN(-19) = 92.55
PN(-18) = 92.95
PN(-17) = 93.34
PN(-16) = 93.73
PN(-15) = 94.12
PN(-14) = 94.52
PN(-13) = 94.91
PN(-12) = 95.3
PN(-11) = 95.69
PN(-10) = 96.09
PN(-9) = 96.48
PN(-8) = 96.87
PN(-7) = 97.26
PN(-6) = 97.65
PN(-5) = 98.04
PN(-4) = 98.44
PN(-3) = 98.83
PN(-2) = 99.22
PN(-1) = 99.61
PN(0) = 100
PN(1) = 100.39
PN(2) = 100.78
PN(3) = 101.17
PN(4) = 101.56
PN(5) = 101.95
PN(6) = 102.34
PN(7) = 102.73
PN(8) = 103.12
PN(9) = 103.51
PN(10) = 103.9
PN(11) = 104.29
PN(12) = 104.68
PN(13) = 105.07
PN(14) = 105.46
PN(15) = 105.85
PN(16) = 106.24
PN(17) = 106.63
PN(18) = 107.02
PN(19) = 107.4
PN(20) = 107.79
PN(21) = 108.18
PN(22) = 108.57
PN(23) = 108.96
PN(24) = 109.35
PN(25) = 109.73
PN(26) = 110.12
PN(27) = 110.51
PN(28) = 110.9
PN(29) = 111.29
PN(30) = 111.67
PN(31) = 112.06
PN(32) = 112.45
PN(33) = 112.83
PN(34) = 113.22
PN(35) = 113.61
PN(36) = 114
PN(37) = 114.38
PN(38) = 114.77
PN(39) = 115.15
PN(40) = 115.54
PN(41) = 115.93
PN(42) = 116.31
PN(43) = 116.7
PN(44) = 117.08
PN(45) = 117.47
PN(46) = 117.86
PN(47) = 118.24
PN(48) = 118.63
PN(49) = 119.01
PN(50) = 119.4
PN(51) = 119.78
PN(52) = 120.17
PN(53) = 120.55
PN(54) = 120.94
PN(55) = 121.32
PN(56) = 121.71
PN(57) = 122.09
PN(58) = 122.47
PN(59) = 122.86
PN(60) = 123.24
PN(61) = 123.63
PN(62) = 124.01
PN(63) = 124.39
PN(64) = 124.78
PN(65) = 125.16
PN(66) = 125.54
PN(67) = 125.93
PN(68) = 126.31
PN(69) = 126.69
PN(70) = 127.08
PN(71) = 127.46
PN(72) = 127.84
PN(73) = 128.22
PN(74) = 128.61
PN(75) = 128.99
PN(76) = 129.37
PN(77) = 129.75
PN(78) = 130.13
PN(79) = 130.52
PN(80) = 130.9
PN(81) = 131.28
PN(82) = 131.66
PN(83) = 132.04
PN(84) = 132.42
PN(85) = 132.8
PN(86) = 133.18
PN(87) = 133.57
PN(88) = 133.95
PN(89) = 134.33
PN(90) = 134.71
PN(91) = 135.09
PN(92) = 135.47
PN(93) = 135.85
PN(94) = 136.23
PN(95) = 136.61
PN(96) = 136.99
PN(97) = 137.37
PN(98) = 137.75
PN(99) = 138.13
PN(100) = 138.51
PN(101) = 138.88
PN(102) = 139.26
PN(103) = 139.64
PN(104) = 140.02
PN(105) = 140.4
PN(106) = 140.78
PN(107) = 141.16
PN(108) = 141.54
PN(109) = 141.91
PN(110) = 142.29
PN(111) = 142.67
PN(112) = 143.05
PN(113) = 143.43
PN(114) = 143.8
PN(115) = 144.18
PN(116) = 144.56
PN(117) = 144.94
PN(118) = 145.31
PN(119) = 145.69
PN(120) = 146.07
PN(121) = 146.44
PN(122) = 146.82
PN(123) = 147.2
PN(124) = 147.57
PN(125) = 147.95
PN(126) = 148.33
PN(127) = 148.7
PN(128) = 149.08
PN(129) = 149.46
PN(130) = 149.83
PN(131) = 150.21
PN(132) = 150.58
PN(133) = 150.96
PN(134) = 151.33
PN(135) = 151.71
PN(136) = 152.08
PN(137) = 152.46
PN(138) = 152.83
PN(139) = 153.21
PN(140) = 153.58
PN(141) = 153.96
PN(142) = 154.33
PN(143) = 154.71
PN(144) = 155.08
PN(145) = 155.46
PN(146) = 155.83
PN(147) = 156.2
PN(148) = 156.58
PN(149) = 156.95
PN(150) = 157.33
PN(151) = 157.7
PN(152) = 158.07
PN(153) = 158.45
PN(154) = 158.82
PN(155) = 159.19
PN(156) = 159.56
PN(157) = 159.94
PN(158) = 160.31
PN(159) = 160.68
PN(160) = 161.05
PN(161) = 161.43
PN(162) = 161.8
PN(163) = 162.17
PN(164) = 162.54
PN(165) = 162.91
PN(166) = 163.29
PN(167) = 163.66
PN(168) = 164.03
PN(169) = 164.4
PN(170) = 164.77
PN(171) = 165.14
PN(172) = 165.51
PN(173) = 165.89
PN(174) = 166.26
PN(175) = 166.63
PN(176) = 167
PN(177) = 167.37
PN(178) = 167.74
PN(179) = 168.11
PN(180) = 168.48
PN(181) = 168.85
PN(182) = 169.22
PN(183) = 169.59
PN(184) = 169.96
PN(185) = 170.33
PN(186) = 170.7
PN(187) = 171.07
PN(188) = 171.43
PN(189) = 171.8
PN(190) = 172.17
PN(191) = 172.54
PN(192) = 172.91
PN(193) = 173.28
PN(194) = 173.65
PN(195) = 174.02
PN(196) = 174.38
PN(197) = 174.75
PN(198) = 175.12
PN(199) = 175.49
PN(200) = 175.86
PN(201) = 176.22
PN(202) = 176.59
PN(203) = 176.96
PN(204) = 177.33
PN(205) = 177.69
PN(206) = 178.06
PN(207) = 178.43
PN(208) = 178.79
PN(209) = 179.16
PN(210) = 179.53
PN(211) = 179.89
PN(212) = 180.26
PN(213) = 180.63
PN(214) = 180.99
PN(215) = 181.36
PN(216) = 181.72
PN(217) = 182.09
PN(218) = 182.46
PN(219) = 182.82
PN(220) = 183.19
PN(221) = 183.55
PN(222) = 183.92
PN(223) = 184.28
PN(224) = 184.65
PN(225) = 185.01
PN(226) = 185.38
PN(227) = 185.74
PN(228) = 186.11
PN(229) = 186.47
PN(230) = 186.84
PN(231) = 187.2
PN(232) = 187.56
PN(233) = 187.93
PN(234) = 188.29
PN(235) = 188.66
PN(236) = 189.02
PN(237) = 189.38
PN(238) = 189.75
PN(239) = 190.11
PN(240) = 190.47
PN(241) = 190.84
PN(242) = 191.2
PN(243) = 191.56
PN(244) = 191.92
PN(245) = 192.29
PN(246) = 192.65
PN(247) = 193.01
PN(248) = 193.37
PN(249) = 193.74
PN(250) = 194.1
PN(251) = 194.46
PN(252) = 194.82
PN(253) = 195.18
PN(254) = 195.55
PN(255) = 195.91
PN(256) = 196.27
PN(257) = 196.63
PN(258) = 196.99
PN(259) = 197.35
PN(260) = 197.71
PN(261) = 198.07
PN(262) = 198.43
PN(263) = 198.79
PN(264) = 199.15
PN(265) = 199.51
PN(266) = 199.87
PN(267) = 200.23
PN(268) = 200.59
PN(269) = 200.95
PN(270) = 201.31
PN(271) = 201.67
PN(272) = 202.03
PN(273) = 202.39
PN(274) = 202.75
PN(275) = 203.11
PN(276) = 203.47
PN(277) = 203.83
PN(278) = 204.19
PN(279) = 204.55
PN(280) = 204.9
PN(281) = 205.26
PN(282) = 205.62
PN(283) = 205.98
PN(284) = 206.34
PN(285) = 206.7
PN(286) = 207.05
PN(287) = 207.41
PN(288) = 207.77
PN(289) = 208.13
PN(290) = 208.48
PN(291) = 208.84
PN(292) = 209.2
PN(293) = 209.56
PN(294) = 209.91
PN(295) = 210.27
PN(296) = 210.63
PN(297) = 210.98
PN(298) = 211.34
PN(299) = 211.7
PN(300) = 212.05
PN(301) = 212.41
PN(302) = 212.76
PN(303) = 213.12
PN(304) = 213.48
PN(305) = 213.83
PN(306) = 214.19
PN(307) = 214.54
PN(308) = 214.9
PN(309) = 215.25
PN(310) = 215.61
PN(311) = 215.96
PN(312) = 216.32
PN(313) = 216.67
PN(314) = 217.03
PN(315) = 217.38
PN(316) = 217.74
PN(317) = 218.09
PN(318) = 218.44
PN(319) = 218.8
PN(320) = 219.15
PN(321) = 219.51
PN(322) = 219.86
PN(323) = 220.21
PN(324) = 220.57
PN(325) = 220.92
PN(326) = 221.27
PN(327) = 221.63
PN(328) = 221.98
PN(329) = 222.33
PN(330) = 222.68
PN(331) = 223.04
PN(332) = 223.39
PN(333) = 223.74
PN(334) = 224.09
PN(335) = 224.45
PN(336) = 224.8
PN(337) = 225.15
PN(338) = 225.5
PN(339) = 225.85
PN(340) = 226.21
PN(341) = 226.56
PN(342) = 226.91
PN(343) = 227.26
PN(344) = 227.61
PN(345) = 227.96
PN(346) = 228.31
PN(347) = 228.66
PN(348) = 229.02
PN(349) = 229.37
PN(350) = 229.72
PN(351) = 230.07
PN(352) = 230.42
PN(353) = 230.77
PN(354) = 231.12
PN(355) = 231.47
PN(356) = 231.82
PN(357) = 232.17
PN(358) = 232.52
PN(359) = 232.87
PN(360) = 233.21
PN(361) = 233.56
PN(362) = 233.91
PN(363) = 234.26
PN(364) = 234.61
PN(365) = 234.96
PN(366) = 235.31
PN(367) = 235.66
PN(368) = 236
PN(369) = 236.35
PN(370) = 236.7
PN(371) = 237.05
PN(372) = 237.4
PN(373) = 237.74
PN(374) = 238.09
PN(375) = 238.44
PN(376) = 238.79
PN(377) = 239.13
PN(378) = 239.48
PN(379) = 239.83
PN(380) = 240.18
PN(381) = 240.52
PN(382) = 240.87
PN(383) = 241.22
PN(384) = 241.56
PN(385) = 241.91
PN(386) = 242.26
PN(387) = 242.6
PN(388) = 242.95
PN(389) = 243.29
PN(390) = 243.64
PN(391) = 243.99
PN(392) = 244.33
PN(393) = 244.68
PN(394) = 245.02
PN(395) = 245.37
PN(396) = 245.71
PN(397) = 246.06
PN(398) = 246.4
PN(399) = 246.75
PN(400) = 247.09
PN(401) = 247.44
PN(402) = 247.78
PN(403) = 248.13
PN(404) = 248.47
PN(405) = 248.81
PN(406) = 249.16
PN(407) = 249.5
PN(408) = 249.85
PN(409) = 250.19
PN(410) = 250.53
PN(411) = 250.88
PN(412) = 251.22
PN(413) = 251.56
PN(414) = 251.91
PN(415) = 252.25
PN(416) = 252.59
PN(417) = 252.93
PN(418) = 253.28
PN(419) = 253.62
PN(420) = 253.96
PN(421) = 254.3
PN(422) = 254.65
PN(423) = 254.99
PN(424) = 255.33
PN(425) = 255.67
PN(426) = 256.01
PN(427) = 256.35
PN(428) = 256.7
PN(429) = 257.04
PN(430) = 257.38
PN(431) = 257.72
PN(432) = 258.06
PN(433) = 258.4
PN(434) = 258.74
PN(435) = 259.08
PN(436) = 259.42
PN(437) = 259.76
PN(438) = 260.1
PN(439) = 260.44
PN(440) = 260.78
PN(441) = 261.12
PN(442) = 261.46
PN(443) = 261.8
PN(444) = 262.14
PN(445) = 262.48
PN(446) = 262.82
PN(447) = 263.16
PN(448) = 263.5
PN(449) = 263.84
PN(450) = 264.18
PN(451) = 264.52
PN(452) = 264.86
PN(453) = 265.2
PN(454) = 265.53
PN(455) = 265.87
PN(456) = 266.21
PN(457) = 266.55
PN(458) = 266.89
PN(459) = 267.22
PN(460) = 267.56
PN(461) = 267.9
PN(462) = 268.24
PN(463) = 268.57
PN(464) = 268.91
PN(465) = 269.25
PN(466) = 269.59
PN(467) = 269.92
PN(468) = 270.26
PN(469) = 270.6
PN(470) = 270.93
PN(471) = 271.27
PN(472) = 271.61
PN(473) = 271.94
PN(474) = 272.28
PN(475) = 272.61
PN(476) = 272.95
PN(477) = 273.29
PN(478) = 273.62
PN(479) = 273.96
PN(480) = 274.29
PN(481) = 274.63
PN(482) = 274.96
PN(483) = 275.3
PN(484) = 275.63
PN(485) = 275.97
PN(486) = 276.3
PN(487) = 276.64
PN(488) = 276.97
PN(489) = 277.31
PN(490) = 277.64
PN(491) = 277.98
PN(492) = 278.31
PN(493) = 278.64
PN(494) = 278.98
PN(495) = 279.31
PN(496) = 279.64
PN(497) = 279.98
PN(498) = 280.31
PN(499) = 280.64
PN(500) = 280.98
PN(501) = 281.31
PN(502) = 281.64
PN(503) = 281.98
PN(504) = 282.31
PN(505) = 282.64
PN(506) = 282.97
PN(507) = 283.31
PN(508) = 283.64
PN(509) = 283.97
PN(510) = 284.3
PN(511) = 284.63
PN(512) = 284.97
PN(513) = 285.3
PN(514) = 285.63
PN(515) = 285.96
PN(516) = 286.29
PN(517) = 286.62
PN(518) = 286.95
PN(519) = 287.29
PN(520) = 287.62
PN(521) = 287.95
PN(522) = 288.28
PN(523) = 288.61
PN(524) = 288.94
PN(525) = 289.27
PN(526) = 289.6
PN(527) = 289.93
PN(528) = 290.26
PN(529) = 290.59
PN(530) = 290.92
PN(531) = 291.25
PN(532) = 291.58
PN(533) = 291.91
PN(534) = 292.24
PN(535) = 292.56
PN(536) = 292.89
PN(537) = 293.22
PN(538) = 293.55
PN(539) = 293.88
PN(540) = 294.21
PN(541) = 294.54
PN(542) = 294.86
PN(543) = 295.19
PN(544) = 295.52
PN(545) = 295.85
PN(546) = 296.18
PN(547) = 296.5
PN(548) = 296.83
PN(549) = 297.16
PN(550) = 297.49
PN(551) = 297.81
PN(552) = 298.14
PN(553) = 298.47
PN(554) = 298.8
PN(555) = 299.12
PN(556) = 299.45
PN(557) = 299.78
PN(558) = 300.1
PN(559) = 300.43
PN(560) = 300.75
PN(561) = 301.08
PN(562) = 301.41
PN(563) = 301.73
PN(564) = 302.06
PN(565) = 302.38
PN(566) = 302.71
PN(567) = 303.03
PN(568) = 303.36
PN(569) = 303.69
PN(570) = 304.01
PN(571) = 304.34
PN(572) = 304.66
PN(573) = 304.98
PN(574) = 305.31
PN(575) = 305.63
PN(576) = 305.96
PN(577) = 306.28
PN(578) = 306.61
PN(579) = 306.93
PN(580) = 307.25
PN(581) = 307.58
PN(582) = 307.9
PN(583) = 308.23
PN(584) = 308.55
PN(585) = 308.87
PN(586) = 309.2
PN(587) = 309.52
PN(588) = 309.84
PN(589) = 310.16
PN(590) = 310.49
PN(591) = 310.81
PN(592) = 311.13
PN(593) = 311.45
PN(594) = 311.78
PN(595) = 312.1
PN(596) = 312.42
PN(597) = 312.74
PN(598) = 313.06
PN(599) = 313.39
PN(600) = 313.71
PN(601) = 314.03
PN(602) = 314.35
PN(603) = 314.67
PN(604) = 314.99
PN(605) = 315.31
PN(606) = 315.64
PN(607) = 315.96
PN(608) = 316.28
PN(609) = 316.6
PN(610) = 313.71
PN(611) = 317.24
PN(612) = 317.56
PN(613) = 317.88
PN(614) = 318.2
PN(615) = 318.52
PN(616) = 318.84
PN(617) = 319.16
PN(618) = 319.48
PN(619) = 319.8
PN(620) = 320.12
PN(621) = 320.43
PN(622) = 320.75
PN(623) = 321.07
PN(624) = 321.39
PN(625) = 321.71
PN(626) = 322.03
PN(627) = 322.35
PN(628) = 322.67
PN(629) = 322.98
PN(630) = 323.3
PN(631) = 323.62
PN(632) = 323.94
PN(633) = 324.26
PN(634) = 324.57
PN(635) = 324.89
PN(636) = 325.21
PN(637) = 325.53
PN(638) = 325.84
PN(639) = 326.16
PN(640) = 326.48
PN(641) = 326.79
PN(642) = 327.11
PN(643) = 327.43
PN(644) = 327.74
PN(645) = 328.06
PN(646) = 328.38
PN(647) = 328.69
PN(648) = 329.01
PN(649) = 329.32
PN(650) = 329.64
PN(651) = 329.96
PN(652) = 330.27
PN(653) = 330.59
PN(654) = 330.9
PN(655) = 331.22
PN(656) = 331.53
PN(657) = 331.85
PN(658) = 332.16
PN(659) = 332.48
PN(660) = 332.79
PN(661) = 333.11
PN(662) = 333.42
PN(663) = 333.74
PN(664) = 334.05
PN(665) = 334.36
PN(666) = 334.68
PN(667) = 334.99
PN(668) = 335.31
PN(669) = 335.62
PN(670) = 335.93
PN(671) = 336.25
PN(672) = 336.56
PN(673) = 336.87
PN(674) = 337.18
PN(675) = 337.5
PN(676) = 337.81
PN(677) = 338.12
PN(678) = 338.44
PN(679) = 338.75
PN(680) = 339.06
PN(681) = 339.37
PN(682) = 339.69
PN(683) = 340
PN(684) = 340.31
PN(685) = 340.62
PN(686) = 340.93
PN(687) = 341.24
PN(688) = 341.56
PN(689) = 341.87
PN(690) = 342.18
PN(691) = 342.49
PN(692) = 342.8
PN(693) = 343.11
PN(694) = 343.42
PN(695) = 343.73
PN(696) = 344.04
PN(697) = 344.35
PN(698) = 344.66
PN(699) = 344.97
PN(700) = 345.28
PN(701) = 345.59
PN(702) = 345.9
PN(703) = 346.21
PN(704) = 346.52
PN(705) = 346.83
PN(706) = 347.14
PN(707) = 347.45
PN(708) = 347.76
PN(709) = 348.07
PN(710) = 348.38
PN(711) = 348.69
PN(712) = 348.99
PN(713) = 349.3
PN(714) = 349.61
PN(715) = 349.92
PN(716) = 350.23
PN(717) = 350.54
PN(718) = 350.84
PN(719) = 351.15
PN(720) = 351.46
PN(721) = 351.77
PN(722) = 352.08
PN(723) = 352.38
PN(724) = 352.69
PN(725) = 353
PN(726) = 353.3
PN(727) = 353.61
PN(728) = 353.92
PN(729) = 354.22
PN(730) = 354.53
PN(731) = 354.84
PN(732) = 355.14
PN(733) = 355.45
PN(734) = 355.76
PN(735) = 356.06
PN(736) = 356.37
PN(737) = 356.67
PN(738) = 356.98
PN(739) = 357.28
PN(740) = 357.59
PN(741) = 357.9
PN(742) = 358.2
PN(743) = 358.51
PN(744) = 358.81
PN(745) = 359.12
PN(746) = 359.42
PN(747) = 359.72
PN(748) = 360.03
PN(749) = 360.33
PN(750) = 360.64
PN(751) = 360.94
PN(752) = 361.25
PN(753) = 361.55
PN(754) = 361.85
PN(755) = 362.16
PN(756) = 362.46
PN(757) = 362.76
PN(758) = 363.07
PN(759) = 363.37
PN(760) = 363.67
PN(761) = 363.98
PN(762) = 364.28
PN(763) = 364.58
PN(764) = 364.89
PN(765) = 365.19
PN(766) = 365.49
PN(767) = 365.79
PN(768) = 366.1
PN(769) = 366.4
PN(770) = 366.7
PN(771) = 367
PN(772) = 367.3
PN(773) = 367.6
PN(774) = 367.91
PN(775) = 368.21
PN(776) = 368.51
PN(777) = 368.81
PN(778) = 369.11
PN(779) = 369.41
PN(780) = 369.71
PN(781) = 370.01
PN(782) = 370.31
PN(783) = 370.61
PN(784) = 370.91
PN(785) = 371.21
PN(786) = 371.51
PN(787) = 371.81
PN(788) = 372.11
PN(789) = 372.41
PN(790) = 372.71
PN(791) = 373.01
PN(792) = 373.31
PN(793) = 373.61
PN(794) = 373.91
PN(795) = 374.21
PN(796) = 374.51
PN(797) = 374.81
PN(798) = 375.11
PN(799) = 375.41
PN(800) = 375.7
PN(801) = 376
PN(802) = 376.3
PN(803) = 376.6
PN(804) = 376.9
PN(805) = 377.19
PN(806) = 377.49
PN(807) = 377.79
PN(808) = 378.09
PN(809) = 378.39
PN(810) = 378.68
PN(811) = 378.98
PN(812) = 379.28
PN(813) = 379.57
PN(814) = 379.87
PN(815) = 380.17
PN(816) = 380.46
PN(817) = 380.76
PN(818) = 381.06
PN(819) = 381.35
PN(820) = 381.65
PN(821) = 381.95
PN(822) = 382.24
PN(823) = 382.54
PN(824) = 382.83
PN(825) = 383.13
PN(826) = 383.42
PN(827) = 383.72
PN(828) = 384.01
PN(829) = 394.31
PN(830) = 384.6
PN(831) = 384.9
PN(832) = 385.19
PN(833) = 385.49
PN(834) = 385.78
PN(835) = 386.08
PN(836) = 386.37
PN(837) = 386.67
PN(838) = 386.96
PN(839) = 387.25
PN(840) = 387.55
PN(841) = 387.84
PN(842) = 388.14
PN(843) = 388.43
PN(844) = 388.72
PN(845) = 389.02
PN(846) = 389.31
PN(847) = 389.6
PN(848) = 389.9
PN(849) = 390.19
PN(850) = 390.48
PN(851) = 390.77

'podj|fffd|cie decyzji czy znana jest rezystancja czy temperatura, je|fffd|eli R_zmierzona=0 szukana jest rezystancja
If R_zmierzona = 0 Then
                                
'Wyszukiwanie w tabeli temperatury najbli|fffd|szej do T_symulowana
    For i = -200 To 850
      If i > T_symulowana Then
      i = i - 1
    Exit For
      End If
    Next
                                                            
'zaokr|fffd|glenie temperatury do 3 miejsc po przecinku
   T = Round(T_symulowana, 3)
                                                            
                                
'doprecyzowanie R do T_symulowanej
    T_nizsza = i
    T_wyzsza = i + 1
    R_nizsza = PN(i)
    R_wyzsza = PN(i + 1)
                                    
    For i = 0 To 10000
       If ((T_wyzsza - T_nizsza) / 10000) * i + T_nizsza > T Then
       i = i - 1
       R_wyliczona = ((R_wyzsza - R_nizsza) / 10000) * i + R_nizsza
    Exit For
       End If
    Next
                                
Pt100 = R_wyliczona
                                
Else
                                
                                
'Wyszukiwanie w tabeli rezystancji najbli|fffd|szej do R_symulowana
    For i = -200 To 850
      If PN(i) > R_zmierzona Then
      i = i - 1
    Exit For
      End If
    Next
                                
'zaokr|fffd|glenie rezystancji do 3 miejsc po przecinku
   r = Round(R_zmierzona, 3)
                                
                                
'doprecyzowanie T do R_zmierzonej
    T_nizsza = i
    T_wyzsza = i + 1
    R_nizsza = PN(i)
    R_wyzsza = PN(i + 1)
                                    
    For i = 0 To 10000
       If ((R_wyzsza - R_nizsza) / 10000) * i + R_nizsza > r Then
       i = i - 1
       T_wyliczona = ((T_wyzsza - T_nizsza) / 10000) * i + T_nizsza
    Exit For
       End If
    Next
                                
Pt100 = T_wyliczona
End If
                                
End Function


















Public Function Pt100p(T_symulowana As Double, R_zmierzona As Double)

End Function


'Funkcja wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu Pt100 przemys|fffd|owego dla danej rezystancji i odwrotnie z wielomianu
                                
'Zmienne lokalne pomocnicze do oblicze|fffd|
               Dim Rt As Double
               Dim Rt1 As Double
               Dim Rt2 As Double

               
'Sta|fffd|e wsp|fffd|czynniki z normy dla Pt100 jako|fffd|ci przemys|fffd|owej

                Const A As Double = 0.0039083
                Const B As Double = -0.0000005775
                Const C As Double = -0.000000000004183
                Const Ro As Double = 100


                                           
'Przeliczanie temperatury  Pt-100 dla zakresu -200 |fffd| 0|fffd|C [ohm].
        Rt1 = Ro * (1 + A * T_symulowana + B * T_symulowana ^ 2 + C * (T_symulowana - 100) * T_symulowana ^ 3)
       
      
                                           
'Przeliczanie temperatury  Pt-100 dla zakresu 0 |fffd| 850|fffd|C [ohm].
        Rt2 = Ro * (1 + A * T_symulowana + B * T_symulowana ^ 2)


                      
'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 0 Then
                    Rt = Rt1
                    End If

                    If T_symulowana >= 0 Then
                    Rt = Rt2
                    End If

'podj|fffd|cie decyzji czy znana jest rezystancja czy temperatura,
'je|fffd|eli R_zmierzona=0 szukana jest rezystancja
'Je|fffd|eli R_zmiezona jest wi|fffd|ksza od 0 szukana jest temperatura

If R_zmierzona = 0 Then
Pt100p = Rt
Else
Pt100p = 0
End If

'Wynikiem dia|fffd|ania funkcji Pt100p jest temperatura przy znanej rezystancji [C].
'Lub rezystancja przy znanej temperaturze [ohm].



'dla temp

End Function

























Attribute VB_Name = "Mod_Pt100_kontrolny"
Option Explicit

Public Function Pt100w3(T_symulowana As Double, R_zmierzona As Double, s0 As Double, s1 As Double, s2 As Double)
'Funkcja wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu Pt100 WZORCOWEGO dla danej rezystancji i odwrotnie z wielomianu
                                    
Dim T_skorygowana As Double
Dim T_nizsza As Double
Dim T_wyzsza As Double
Dim R_nizsza As Double
Dim R_wyzsza As Double
Dim r As Double
Dim R_wyliczona As Double
Dim T As Double
Dim T_wyliczona As Double
Dim i As Integer
Dim T_korekta As Double
                                    
'Za|fffd|adowanie tabeli PN charakterstyk|fffd| z normy PN-EN60751+A2
Dim PN(-201 To 851) As Double
                                    


PN(-201) = 18.09
PN(-200) = 18.52
PN(-199) = 18.95
PN(-198) = 19.38
PN(-197) = 19.82
PN(-196) = 20.25
PN(-195) = 20.68
PN(-194) = 21.11
PN(-193) = 21.54
PN(-192) = 21.97
PN(-191) = 22.4
PN(-190) = 22.83
PN(-189) = 23.25
PN(-188) = 23.68
PN(-187) = 24.11
PN(-186) = 24.54
PN(-185) = 24.97
PN(-184) = 25.39
PN(-183) = 25.82
PN(-182) = 26.24
PN(-181) = 26.67
PN(-180) = 27.1
PN(-179) = 27.52
PN(-178) = 27.95
PN(-177) = 28.37
PN(-176) = 28.8
PN(-175) = 29.22
PN(-174) = 29.64
PN(-173) = 30.07
PN(-172) = 30.49
PN(-171) = 30.91
PN(-170) = 31.34
PN(-169) = 31.76
PN(-168) = 32.18
PN(-167) = 32.6
PN(-166) = 33.02
PN(-165) = 33.44
PN(-164) = 33.86
PN(-163) = 34.28
PN(-162) = 34.7
PN(-161) = 35.12
PN(-160) = 35.54
PN(-159) = 35.96
PN(-158) = 36.38
PN(-157) = 36.8
PN(-156) = 37.22
PN(-155) = 37.64
PN(-154) = 38.05
PN(-153) = 38.47
PN(-152) = 38.89
PN(-151) = 39.31
PN(-150) = 39.72
PN(-149) = 40.14
PN(-148) = 40.56
PN(-147) = 40.97
PN(-146) = 41.39
PN(-145) = 41.8
PN(-144) = 42.22
PN(-143) = 42.63
PN(-142) = 43.05
PN(-141) = 43.46
PN(-140) = 43.88
PN(-139) = 44.29
PN(-138) = 44.7
PN(-137) = 45.12
PN(-136) = 45.53
PN(-135) = 45.94
PN(-134) = 46.36
PN(-133) = 46.77
PN(-132) = 47.18
PN(-131) = 47.59
PN(-130) = 48
PN(-129) = 48.42
PN(-128) = 48.83
PN(-127) = 49.24
PN(-126) = 49.65
PN(-125) = 50.06
PN(-124) = 50.47
PN(-123) = 50.88
PN(-122) = 51.29
PN(-121) = 51.7
PN(-120) = 52.11
PN(-119) = 52.52
PN(-118) = 52.93
PN(-117) = 53.34
PN(-116) = 53.75
PN(-115) = 54.15
PN(-114) = 54.56
PN(-113) = 54.97
PN(-112) = 55.38
PN(-111) = 55.79
PN(-110) = 56.19
PN(-109) = 56.6
PN(-108) = 57.01
PN(-107) = 57.41
PN(-106) = 57.82
PN(-105) = 58.23
PN(-104) = 58.63
PN(-103) = 59.04
PN(-102) = 59.44
PN(-101) = 59.85
PN(-100) = 60.26
PN(-99) = 60.66
PN(-98) = 61.07
PN(-97) = 61.47
PN(-96) = 61.88
PN(-95) = 62.28
PN(-94) = 62.68
PN(-93) = 63.09
PN(-92) = 63.49
PN(-91) = 63.9
PN(-90) = 64.3
PN(-89) = 64.7
PN(-88) = 65.11
PN(-87) = 65.51
PN(-86) = 65.91
PN(-85) = 66.31
PN(-84) = 66.72
PN(-83) = 67.12
PN(-82) = 67.52
PN(-81) = 67.92
PN(-80) = 68.33
PN(-79) = 68.73
PN(-78) = 69.13
PN(-77) = 69.53
PN(-76) = 69.93
PN(-75) = 70.33
PN(-74) = 70.73
PN(-73) = 71.13
PN(-72) = 71.53
PN(-71) = 71.93
PN(-70) = 72.33
PN(-69) = 72.73
PN(-68) = 73.13
PN(-67) = 73.53
PN(-66) = 73.93
PN(-65) = 74.33
PN(-64) = 74.73
PN(-63) = 75.13
PN(-62) = 75.53
PN(-61) = 75.93
PN(-60) = 76.33
PN(-59) = 76.73
PN(-58) = 77.12
PN(-57) = 77.52
PN(-56) = 77.92
PN(-55) = 78.32
PN(-54) = 78.72
PN(-53) = 79.11
PN(-52) = 79.51
PN(-51) = 79.91
PN(-50) = 80.31
PN(-49) = 80.7
PN(-48) = 81.1
PN(-47) = 81.5
PN(-46) = 81.89
PN(-45) = 82.29
PN(-44) = 82.69
PN(-43) = 83.08
PN(-42) = 83.48
PN(-41) = 83.87
PN(-40) = 84.27
PN(-39) = 84.67
PN(-38) = 85.06
PN(-37) = 85.46
PN(-36) = 85.85
PN(-35) = 86.25
PN(-34) = 86.64
PN(-33) = 87.04
PN(-32) = 87.43
PN(-31) = 87.83
PN(-30) = 88.22
PN(-29) = 88.62
PN(-28) = 89.01
PN(-27) = 89.4
PN(-26) = 89.8
PN(-25) = 90.19
PN(-24) = 90.59
PN(-23) = 90.98
PN(-22) = 91.37
PN(-21) = 91.77
PN(-20) = 92.16
PN(-19) = 92.55
PN(-18) = 92.95
PN(-17) = 93.34
PN(-16) = 93.73
PN(-15) = 94.12
PN(-14) = 94.52
PN(-13) = 94.91
PN(-12) = 95.3
PN(-11) = 95.69
PN(-10) = 96.09
PN(-9) = 96.48
PN(-8) = 96.87
PN(-7) = 97.26
PN(-6) = 97.65
PN(-5) = 98.04
PN(-4) = 98.44
PN(-3) = 98.83
PN(-2) = 99.22
PN(-1) = 99.61
PN(0) = 100
PN(1) = 100.39
PN(2) = 100.78
PN(3) = 101.17
PN(4) = 101.56
PN(5) = 101.95
PN(6) = 102.34
PN(7) = 102.73
PN(8) = 103.12
PN(9) = 103.51
PN(10) = 103.9
PN(11) = 104.29
PN(12) = 104.68
PN(13) = 105.07
PN(14) = 105.46
PN(15) = 105.85
PN(16) = 106.24
PN(17) = 106.63
PN(18) = 107.02
PN(19) = 107.4
PN(20) = 107.79
PN(21) = 108.18
PN(22) = 108.57
PN(23) = 108.96
PN(24) = 109.35
PN(25) = 109.73
PN(26) = 110.12
PN(27) = 110.51
PN(28) = 110.9
PN(29) = 111.29
PN(30) = 111.67
PN(31) = 112.06
PN(32) = 112.45
PN(33) = 112.83
PN(34) = 113.22
PN(35) = 113.61
PN(36) = 114
PN(37) = 114.38
PN(38) = 114.77
PN(39) = 115.15
PN(40) = 115.54
PN(41) = 115.93
PN(42) = 116.31
PN(43) = 116.7
PN(44) = 117.08
PN(45) = 117.47
PN(46) = 117.86
PN(47) = 118.24
PN(48) = 118.63
PN(49) = 119.01
PN(50) = 119.4
PN(51) = 119.78
PN(52) = 120.17
PN(53) = 120.55
PN(54) = 120.94
PN(55) = 121.32
PN(56) = 121.71
PN(57) = 122.09
PN(58) = 122.47
PN(59) = 122.86
PN(60) = 123.24
PN(61) = 123.63
PN(62) = 124.01
PN(63) = 124.39
PN(64) = 124.78
PN(65) = 125.16
PN(66) = 125.54
PN(67) = 125.93
PN(68) = 126.31
PN(69) = 126.69
PN(70) = 127.08
PN(71) = 127.46
PN(72) = 127.84
PN(73) = 128.22
PN(74) = 128.61
PN(75) = 128.99
PN(76) = 129.37
PN(77) = 129.75
PN(78) = 130.13
PN(79) = 130.52
PN(80) = 130.9
PN(81) = 131.28
PN(82) = 131.66
PN(83) = 132.04
PN(84) = 132.42
PN(85) = 132.8
PN(86) = 133.18
PN(87) = 133.57
PN(88) = 133.95
PN(89) = 134.33
PN(90) = 134.71
PN(91) = 135.09
PN(92) = 135.47
PN(93) = 135.85
PN(94) = 136.23
PN(95) = 136.61
PN(96) = 136.99
PN(97) = 137.37
PN(98) = 137.75
PN(99) = 138.13
PN(100) = 138.51
PN(101) = 138.88
PN(102) = 139.26
PN(103) = 139.64
PN(104) = 140.02
PN(105) = 140.4
PN(106) = 140.78
PN(107) = 141.16
PN(108) = 141.54
PN(109) = 141.91
PN(110) = 142.29
PN(111) = 142.67
PN(112) = 143.05
PN(113) = 143.43
PN(114) = 143.8
PN(115) = 144.18
PN(116) = 144.56
PN(117) = 144.94
PN(118) = 145.31
PN(119) = 145.69
PN(120) = 146.07
PN(121) = 146.44
PN(122) = 146.82
PN(123) = 147.2
PN(124) = 147.57
PN(125) = 147.95
PN(126) = 148.33
PN(127) = 148.7
PN(128) = 149.08
PN(129) = 149.46
PN(130) = 149.83
PN(131) = 150.21
PN(132) = 150.58
PN(133) = 150.96
PN(134) = 151.33
PN(135) = 151.71
PN(136) = 152.08
PN(137) = 152.46
PN(138) = 152.83
PN(139) = 153.21
PN(140) = 153.58
PN(141) = 153.96
PN(142) = 154.33
PN(143) = 154.71
PN(144) = 155.08
PN(145) = 155.46
PN(146) = 155.83
PN(147) = 156.2
PN(148) = 156.58
PN(149) = 156.95
PN(150) = 157.33
PN(151) = 157.7
PN(152) = 158.07
PN(153) = 158.45
PN(154) = 158.82
PN(155) = 159.19
PN(156) = 159.56
PN(157) = 159.94
PN(158) = 160.31
PN(159) = 160.68
PN(160) = 161.05
PN(161) = 161.43
PN(162) = 161.8
PN(163) = 162.17
PN(164) = 162.54
PN(165) = 162.91
PN(166) = 163.29
PN(167) = 163.66
PN(168) = 164.03
PN(169) = 164.4
PN(170) = 164.77
PN(171) = 165.14
PN(172) = 165.51
PN(173) = 165.89
PN(174) = 166.26
PN(175) = 166.63
PN(176) = 167
PN(177) = 167.37
PN(178) = 167.74
PN(179) = 168.11
PN(180) = 168.48
PN(181) = 168.85
PN(182) = 169.22
PN(183) = 169.59
PN(184) = 169.96
PN(185) = 170.33
PN(186) = 170.7
PN(187) = 171.07
PN(188) = 171.43
PN(189) = 171.8
PN(190) = 172.17
PN(191) = 172.54
PN(192) = 172.91
PN(193) = 173.28
PN(194) = 173.65
PN(195) = 174.02
PN(196) = 174.38
PN(197) = 174.75
PN(198) = 175.12
PN(199) = 175.49
PN(200) = 175.86
PN(201) = 176.22
PN(202) = 176.59
PN(203) = 176.96
PN(204) = 177.33
PN(205) = 177.69
PN(206) = 178.06
PN(207) = 178.43
PN(208) = 178.79
PN(209) = 179.16
PN(210) = 179.53
PN(211) = 179.89
PN(212) = 180.26
PN(213) = 180.63
PN(214) = 180.99
PN(215) = 181.36
PN(216) = 181.72
PN(217) = 182.09
PN(218) = 182.46
PN(219) = 182.82
PN(220) = 183.19
PN(221) = 183.55
PN(222) = 183.92
PN(223) = 184.28
PN(224) = 184.65
PN(225) = 185.01
PN(226) = 185.38
PN(227) = 185.74
PN(228) = 186.11
PN(229) = 186.47
PN(230) = 186.84
PN(231) = 187.2
PN(232) = 187.56
PN(233) = 187.93
PN(234) = 188.29
PN(235) = 188.66
PN(236) = 189.02
PN(237) = 189.38
PN(238) = 189.75
PN(239) = 190.11
PN(240) = 190.47
PN(241) = 190.84
PN(242) = 191.2
PN(243) = 191.56
PN(244) = 191.92
PN(245) = 192.29
PN(246) = 192.65
PN(247) = 193.01
PN(248) = 193.37
PN(249) = 193.74
PN(250) = 194.1
PN(251) = 194.46
PN(252) = 194.82
PN(253) = 195.18
PN(254) = 195.55
PN(255) = 195.91
PN(256) = 196.27
PN(257) = 196.63
PN(258) = 196.99
PN(259) = 197.35
PN(260) = 197.71
PN(261) = 198.07
PN(262) = 198.43
PN(263) = 198.79
PN(264) = 199.15
PN(265) = 199.51
PN(266) = 199.87
PN(267) = 200.23
PN(268) = 200.59
PN(269) = 200.95
PN(270) = 201.31
PN(271) = 201.67
PN(272) = 202.03
PN(273) = 202.39
PN(274) = 202.75
PN(275) = 203.11
PN(276) = 203.47
PN(277) = 203.83
PN(278) = 204.19
PN(279) = 204.55
PN(280) = 204.9
PN(281) = 205.26
PN(282) = 205.62
PN(283) = 205.98
PN(284) = 206.34
PN(285) = 206.7
PN(286) = 207.05
PN(287) = 207.41
PN(288) = 207.77
PN(289) = 208.13
PN(290) = 208.48
PN(291) = 208.84
PN(292) = 209.2
PN(293) = 209.56
PN(294) = 209.91
PN(295) = 210.27
PN(296) = 210.63
PN(297) = 210.98
PN(298) = 211.34
PN(299) = 211.7
PN(300) = 212.05
PN(301) = 212.41
PN(302) = 212.76
PN(303) = 213.12
PN(304) = 213.48
PN(305) = 213.83
PN(306) = 214.19
PN(307) = 214.54
PN(308) = 214.9
PN(309) = 215.25
PN(310) = 215.61
PN(311) = 215.96
PN(312) = 216.32
PN(313) = 216.67
PN(314) = 217.03
PN(315) = 217.38
PN(316) = 217.74
PN(317) = 218.09
PN(318) = 218.44
PN(319) = 218.8
PN(320) = 219.15
PN(321) = 219.51
PN(322) = 219.86
PN(323) = 220.21
PN(324) = 220.57
PN(325) = 220.92
PN(326) = 221.27
PN(327) = 221.63
PN(328) = 221.98
PN(329) = 222.33
PN(330) = 222.68
PN(331) = 223.04
PN(332) = 223.39
PN(333) = 223.74
PN(334) = 224.09
PN(335) = 224.45
PN(336) = 224.8
PN(337) = 225.15
PN(338) = 225.5
PN(339) = 225.85
PN(340) = 226.21
PN(341) = 226.56
PN(342) = 226.91
PN(343) = 227.26
PN(344) = 227.61
PN(345) = 227.96
PN(346) = 228.31
PN(347) = 228.66
PN(348) = 229.02
PN(349) = 229.37
PN(350) = 229.72
PN(351) = 230.07
PN(352) = 230.42
PN(353) = 230.77
PN(354) = 231.12
PN(355) = 231.47
PN(356) = 231.82
PN(357) = 232.17
PN(358) = 232.52
PN(359) = 232.87
PN(360) = 233.21
PN(361) = 233.56
PN(362) = 233.91
PN(363) = 234.26
PN(364) = 234.61
PN(365) = 234.96
PN(366) = 235.31
PN(367) = 235.66
PN(368) = 236
PN(369) = 236.35
PN(370) = 236.7
PN(371) = 237.05
PN(372) = 237.4
PN(373) = 237.74
PN(374) = 238.09
PN(375) = 238.44
PN(376) = 238.79
PN(377) = 239.13
PN(378) = 239.48
PN(379) = 239.83
PN(380) = 240.18
PN(381) = 240.52
PN(382) = 240.87
PN(383) = 241.22
PN(384) = 241.56
PN(385) = 241.91
PN(386) = 242.26
PN(387) = 242.6
PN(388) = 242.95
PN(389) = 243.29
PN(390) = 243.64
PN(391) = 243.99
PN(392) = 244.33
PN(393) = 244.68
PN(394) = 245.02
PN(395) = 245.37
PN(396) = 245.71
PN(397) = 246.06
PN(398) = 246.4
PN(399) = 246.75
PN(400) = 247.09
PN(401) = 247.44
PN(402) = 247.78
PN(403) = 248.13
PN(404) = 248.47
PN(405) = 248.81
PN(406) = 249.16
PN(407) = 249.5
PN(408) = 249.85
PN(409) = 250.19
PN(410) = 250.53
PN(411) = 250.88
PN(412) = 251.22
PN(413) = 251.56
PN(414) = 251.91
PN(415) = 252.25
PN(416) = 252.59
PN(417) = 252.93
PN(418) = 253.28
PN(419) = 253.62
PN(420) = 253.96
PN(421) = 254.3
PN(422) = 254.65
PN(423) = 254.99
PN(424) = 255.33
PN(425) = 255.67
PN(426) = 256.01
PN(427) = 256.35
PN(428) = 256.7
PN(429) = 257.04
PN(430) = 257.38
PN(431) = 257.72
PN(432) = 258.06
PN(433) = 258.4
PN(434) = 258.74
PN(435) = 259.08
PN(436) = 259.42
PN(437) = 259.76
PN(438) = 260.1
PN(439) = 260.44
PN(440) = 260.78
PN(441) = 261.12
PN(442) = 261.46
PN(443) = 261.8
PN(444) = 262.14
PN(445) = 262.48
PN(446) = 262.82
PN(447) = 263.16
PN(448) = 263.5
PN(449) = 263.84
PN(450) = 264.18
PN(451) = 264.52
PN(452) = 264.86
PN(453) = 265.2
PN(454) = 265.53
PN(455) = 265.87
PN(456) = 266.21
PN(457) = 266.55
PN(458) = 266.89
PN(459) = 267.22
PN(460) = 267.56
PN(461) = 267.9
PN(462) = 268.24
PN(463) = 268.57
PN(464) = 268.91
PN(465) = 269.25
PN(466) = 269.59
PN(467) = 269.92
PN(468) = 270.26
PN(469) = 270.6
PN(470) = 270.93
PN(471) = 271.27
PN(472) = 271.61
PN(473) = 271.94
PN(474) = 272.28
PN(475) = 272.61
PN(476) = 272.95
PN(477) = 273.29
PN(478) = 273.62
PN(479) = 273.96
PN(480) = 274.29
PN(481) = 274.63
PN(482) = 274.96
PN(483) = 275.3
PN(484) = 275.63
PN(485) = 275.97
PN(486) = 276.3
PN(487) = 276.64
PN(488) = 276.97
PN(489) = 277.31
PN(490) = 277.64
PN(491) = 277.98
PN(492) = 278.31
PN(493) = 278.64
PN(494) = 278.98
PN(495) = 279.31
PN(496) = 279.64
PN(497) = 279.98
PN(498) = 280.31
PN(499) = 280.64
PN(500) = 280.98
PN(501) = 281.31
PN(502) = 281.64
PN(503) = 281.98
PN(504) = 282.31
PN(505) = 282.64
PN(506) = 282.97
PN(507) = 283.31
PN(508) = 283.64
PN(509) = 283.97
PN(510) = 284.3
PN(511) = 284.63
PN(512) = 284.97
PN(513) = 285.3
PN(514) = 285.63
PN(515) = 285.96
PN(516) = 286.29
PN(517) = 286.62
PN(518) = 286.95
PN(519) = 287.29
PN(520) = 287.62
PN(521) = 287.95
PN(522) = 288.28
PN(523) = 288.61
PN(524) = 288.94
PN(525) = 289.27
PN(526) = 289.6
PN(527) = 289.93
PN(528) = 290.26
PN(529) = 290.59
PN(530) = 290.92
PN(531) = 291.25
PN(532) = 291.58
PN(533) = 291.91
PN(534) = 292.24
PN(535) = 292.56
PN(536) = 292.89
PN(537) = 293.22
PN(538) = 293.55
PN(539) = 293.88
PN(540) = 294.21
PN(541) = 294.54
PN(542) = 294.86
PN(543) = 295.19
PN(544) = 295.52
PN(545) = 295.85
PN(546) = 296.18
PN(547) = 296.5
PN(548) = 296.83
PN(549) = 297.16
PN(550) = 297.49
PN(551) = 297.81
PN(552) = 298.14
PN(553) = 298.47
PN(554) = 298.8
PN(555) = 299.12
PN(556) = 299.45
PN(557) = 299.78
PN(558) = 300.1
PN(559) = 300.43
PN(560) = 300.75
PN(561) = 301.08
PN(562) = 301.41
PN(563) = 301.73
PN(564) = 302.06
PN(565) = 302.38
PN(566) = 302.71
PN(567) = 303.03
PN(568) = 303.36
PN(569) = 303.69
PN(570) = 304.01
PN(571) = 304.34
PN(572) = 304.66
PN(573) = 304.98
PN(574) = 305.31
PN(575) = 305.63
PN(576) = 305.96
PN(577) = 306.28
PN(578) = 306.61
PN(579) = 306.93
PN(580) = 307.25
PN(581) = 307.58
PN(582) = 307.9
PN(583) = 308.23
PN(584) = 308.55
PN(585) = 308.87
PN(586) = 309.2
PN(587) = 309.52
PN(588) = 309.84
PN(589) = 310.16
PN(590) = 310.49
PN(591) = 310.81
PN(592) = 311.13
PN(593) = 311.45
PN(594) = 311.78
PN(595) = 312.1
PN(596) = 312.42
PN(597) = 312.74
PN(598) = 313.06
PN(599) = 313.39
PN(600) = 313.71
PN(601) = 314.03
PN(602) = 314.35
PN(603) = 314.67
PN(604) = 314.99
PN(605) = 315.31
PN(606) = 315.64
PN(607) = 315.96
PN(608) = 316.28
PN(609) = 316.6
PN(610) = 313.71
PN(611) = 317.24
PN(612) = 317.56
PN(613) = 317.88
PN(614) = 318.2
PN(615) = 318.52
PN(616) = 318.84
PN(617) = 319.16
PN(618) = 319.48
PN(619) = 319.8
PN(620) = 320.12
PN(621) = 320.43
PN(622) = 320.75
PN(623) = 321.07
PN(624) = 321.39
PN(625) = 321.71
PN(626) = 322.03
PN(627) = 322.35
PN(628) = 322.67
PN(629) = 322.98
PN(630) = 323.3
PN(631) = 323.62
PN(632) = 323.94
PN(633) = 324.26
PN(634) = 324.57
PN(635) = 324.89
PN(636) = 325.21
PN(637) = 325.53
PN(638) = 325.84
PN(639) = 326.16
PN(640) = 326.48
PN(641) = 326.79
PN(642) = 327.11
PN(643) = 327.43
PN(644) = 327.74
PN(645) = 328.06
PN(646) = 328.38
PN(647) = 328.69
PN(648) = 329.01
PN(649) = 329.32
PN(650) = 329.64
PN(651) = 329.96
PN(652) = 330.27
PN(653) = 330.59
PN(654) = 330.9
PN(655) = 331.22
PN(656) = 331.53
PN(657) = 331.85
PN(658) = 332.16
PN(659) = 332.48
PN(660) = 332.79
PN(661) = 333.11
PN(662) = 333.42
PN(663) = 333.74
PN(664) = 334.05
PN(665) = 334.36
PN(666) = 334.68
PN(667) = 334.99
PN(668) = 335.31
PN(669) = 335.62
PN(670) = 335.93
PN(671) = 336.25
PN(672) = 336.56
PN(673) = 336.87
PN(674) = 337.18
PN(675) = 337.5
PN(676) = 337.81
PN(677) = 338.12
PN(678) = 338.44
PN(679) = 338.75
PN(680) = 339.06
PN(681) = 339.37
PN(682) = 339.69
PN(683) = 340
PN(684) = 340.31
PN(685) = 340.62
PN(686) = 340.93
PN(687) = 341.24
PN(688) = 341.56
PN(689) = 341.87
PN(690) = 342.18
PN(691) = 342.49
PN(692) = 342.8
PN(693) = 343.11
PN(694) = 343.42
PN(695) = 343.73
PN(696) = 344.04
PN(697) = 344.35
PN(698) = 344.66
PN(699) = 344.97
PN(700) = 345.28
PN(701) = 345.59
PN(702) = 345.9
PN(703) = 346.21
PN(704) = 346.52
PN(705) = 346.83
PN(706) = 347.14
PN(707) = 347.45
PN(708) = 347.76
PN(709) = 348.07
PN(710) = 348.38
PN(711) = 348.69
PN(712) = 348.99
PN(713) = 349.3
PN(714) = 349.61
PN(715) = 349.92
PN(716) = 350.23
PN(717) = 350.54
PN(718) = 350.84
PN(719) = 351.15
PN(720) = 351.46
PN(721) = 351.77
PN(722) = 352.08
PN(723) = 352.38
PN(724) = 352.69
PN(725) = 353
PN(726) = 353.3
PN(727) = 353.61
PN(728) = 353.92
PN(729) = 354.22
PN(730) = 354.53
PN(731) = 354.84
PN(732) = 355.14
PN(733) = 355.45
PN(734) = 355.76
PN(735) = 356.06
PN(736) = 356.37
PN(737) = 356.67
PN(738) = 356.98
PN(739) = 357.28
PN(740) = 357.59
PN(741) = 357.9
PN(742) = 358.2
PN(743) = 358.51
PN(744) = 358.81
PN(745) = 359.12
PN(746) = 359.42
PN(747) = 359.72
PN(748) = 360.03
PN(749) = 360.33
PN(750) = 360.64
PN(751) = 360.94
PN(752) = 361.25
PN(753) = 361.55
PN(754) = 361.85
PN(755) = 362.16
PN(756) = 362.46
PN(757) = 362.76
PN(758) = 363.07
PN(759) = 363.37
PN(760) = 363.67
PN(761) = 363.98
PN(762) = 364.28
PN(763) = 364.58
PN(764) = 364.89
PN(765) = 365.19
PN(766) = 365.49
PN(767) = 365.79
PN(768) = 366.1
PN(769) = 366.4
PN(770) = 366.7
PN(771) = 367
PN(772) = 367.3
PN(773) = 367.6
PN(774) = 367.91
PN(775) = 368.21
PN(776) = 368.51
PN(777) = 368.81
PN(778) = 369.11
PN(779) = 369.41
PN(780) = 369.71
PN(781) = 370.01
PN(782) = 370.31
PN(783) = 370.61
PN(784) = 370.91
PN(785) = 371.21
PN(786) = 371.51
PN(787) = 371.81
PN(788) = 372.11
PN(789) = 372.41
PN(790) = 372.71
PN(791) = 373.01
PN(792) = 373.31
PN(793) = 373.61
PN(794) = 373.91
PN(795) = 374.21
PN(796) = 374.51
PN(797) = 374.81
PN(798) = 375.11
PN(799) = 375.41
PN(800) = 375.7
PN(801) = 376
PN(802) = 376.3
PN(803) = 376.6
PN(804) = 376.9
PN(805) = 377.19
PN(806) = 377.49
PN(807) = 377.79
PN(808) = 378.09
PN(809) = 378.39
PN(810) = 378.68
PN(811) = 378.98
PN(812) = 379.28
PN(813) = 379.57
PN(814) = 379.87
PN(815) = 380.17
PN(816) = 380.46
PN(817) = 380.76
PN(818) = 381.06
PN(819) = 381.35
PN(820) = 381.65
PN(821) = 381.95
PN(822) = 382.24
PN(823) = 382.54
PN(824) = 382.83
PN(825) = 383.13
PN(826) = 383.42
PN(827) = 383.72
PN(828) = 384.01
PN(829) = 394.31
PN(830) = 384.6
PN(831) = 384.9
PN(832) = 385.19
PN(833) = 385.49
PN(834) = 385.78
PN(835) = 386.08
PN(836) = 386.37
PN(837) = 386.67
PN(838) = 386.96
PN(839) = 387.25
PN(840) = 387.55
PN(841) = 387.84
PN(842) = 388.14
PN(843) = 388.43
PN(844) = 388.72
PN(845) = 389.02
PN(846) = 389.31
PN(847) = 389.6
PN(848) = 389.9
PN(849) = 390.19
PN(850) = 390.48
PN(851) = 390.77

'podj|fffd|cie decyzji czy znana jest rezystancja czy temperatura, je|fffd|eli R_zmierzona=0 szukana jest rezystancja
If R_zmierzona = 0 Then
'podj|fffd|to decyzj|fffd| |fffd|e znana jest tepmeratura poniewa|fffd| R_zmierzona=0, a wi|fffd|c szukana jest rezystancja


'teraz poprawki dla wyliczenia rezystancji na podstawie symulowanej temperatury i wielomianu koryguj|fffd|cego
's0, s1 i s2 s|fffd| wsp|fffd|czynnikami wielomianu opisuj|fffd|cego poprawki, x jest temperatur|fffd|
'Y(x)=s2*x^2   +   s1*x^1   +   s0*x^0   ; Y(x)jest poprawk|fffd| w st. C

T_korekta = s2 * T_symulowana ^ 2 + s1 * T_symulowana + s0

T_skorygowana = T_symulowana - T_korekta


'Wyszukiwanie w tabeli temperatury najbli|fffd|szej do T_symulowana
    For i = -200 To 850
      If i > T_skorygowana Then
      i = i - 1
    Exit For
      End If
    Next
                                                            
'zaokr|fffd|glenie temperatury do 3 miejsc po przecinku
   T = Round(T_skorygowana, 3)
                                                            
                                
'doprecyzowanie R do T_skorygowanej
    T_nizsza = i
    T_wyzsza = i + 1
    R_nizsza = PN(i)
    R_wyzsza = PN(i + 1)
                                    
    For i = 0 To 10000
       If ((T_wyzsza - T_nizsza) / 10000) * i + T_nizsza > T Then
       i = i - 1
       R_wyliczona = ((R_wyzsza - R_nizsza) / 10000) * i + R_nizsza
    Exit For
       End If
    Next
                                
Pt100w3 = R_wyliczona

                               
Else
                                
'podj|fffd|to decyzj|fffd| |fffd|e znana jest rezystancja, poniewa|fffd| R_zmierzona >0, a wi|fffd|c szukana jest temparatura.
'Wyszukiwanie w tabeli rezystancji najbli|fffd|szej do R_symulowana
    For i = -200 To 850
      If PN(i) > R_zmierzona Then
      i = i - 1
    Exit For
      End If
    Next
                                
'zaokr|fffd|glenie rezystancji do 3 miejsc po przecinku
   r = Round(R_zmierzona, 3)
                                
                                
'doprecyzowanie T do R_zmierzonej
    T_nizsza = i
    T_wyzsza = i + 1
    R_nizsza = PN(i)
    R_wyzsza = PN(i + 1)
                                    
    For i = 0 To 10000
       If ((R_wyzsza - R_nizsza) / 10000) * i + R_nizsza > r Then
       i = i - 1
       T_wyliczona = ((T_wyzsza - T_nizsza) / 10000) * i + T_nizsza
    Exit For
       End If
    Next
                                

'teraz poprawki dla wyliczenia temperatury na podstawie zmierzonej rezystancji i wielomianu koryguj|fffd|cego
's0, s1 i s2 s|fffd| wsp|fffd|czynnikami wielomianu opisuj|fffd|cego poprawki, x jest temperatur|fffd|
'Y(x)=s2*x^2   +   s1*x^1   +   s0*x^0   ; Y(x)jest poprawk|fffd| w st. C

T_korekta = s2 * T_wyliczona ^ 2 + s1 * T_wyliczona + s0
Pt100w3 = T_wyliczona + T_korekta

End If


                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
End Function


Attribute VB_Name = "Mod_Tc_J"
Option Explicit

Public Function EJ(T_otoczenia As Double, T_symulowana As Double)
'Funkcja wyliczaj|fffd|ca STE dla czujnika typu J dla danej temperatury z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmienne lokalne pomocnicze do oblicze|fffd|
               Dim E1 As Double
               Dim E2 As Double
               Dim E_otoczenia As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J dla zakresu -210 |fffd| 760|fffd|C.

                Const a01 As Double = 50.381187815
                Const a02 As Double = 0.03047583693
                Const a03 As Double = -0.00008568106572
                Const a04 As Double = 1.3228195295E-07
                Const a05 As Double = -1.7052958337E-10
                Const a06 As Double = 2.0948090697E-13
                Const a07 As Double = -1.2538395336E-16
                Const a08 As Double = 1.5631725697E-20

'Przeliczanie temperatury otoczenia dla zakresu -210 |fffd| 760|fffd|C na STE dla J [|fffd|V].
        E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8
                                           
'Przeliczanie temperatury  na STE dla J dla zakresu -210 |fffd| 760|fffd|C [|fffd|V].
        E1 = a01 * T_symulowana ^ 1 + a02 * T_symulowana ^ 2 + a03 * T_symulowana ^ 3 + a04 * T_symulowana ^ 4 + a05 * T_symulowana ^ 5 + a06 * T_symulowana ^ 6 + a07 * T_symulowana ^ 7 + a08 * T_symulowana ^ 8 - E_otoczenia
      

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J dla zakresu 760 |fffd| 1200|fffd|C
                Const a10 As Double = 296456.25681
                Const a11 As Double = -1497.6127786
                Const a12 As Double = 3.1787103924
                Const a13 As Double = -0.0031847686701
                Const a14 As Double = 1.5720819004E-06
                Const a15 As Double = -3.0691369056E-10

              
'Przeliczanie temperatury  na STE dla K dla zakresu 760 |fffd| 1200|fffd|C [|fffd|V].
       E2 = a10 * T_symulowana ^ 0 + a11 * T_symulowana ^ 1 + a12 * T_symulowana ^ 2 + a13 * T_symulowana ^ 3 + a14 * T_symulowana ^ 4 + a15 * T_symulowana ^ 5 - E_otoczenia
                          
                      
'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 760 Then
                    EJ = E1
                    End If

                    If T_symulowana >= 760 Then
                    EJ = E2
                    End If

                    If T_symulowana < -210 Or T_symulowana > 1200 Then
                    EJ = 0
                    End If
                 
'Wynikiem dia|fffd|ania funkcji EJ jest STE [|fffd|V].
End Function

Public Function TJ(T_otoczenia As Double, E_zmierzona As Double)
'Funkcja odwrotna wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu J dla danej STE z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmenne lokalne pomocnicze do oblicze|fffd|
               Dim T1 As Double
               Dim T2 As Double
               Dim T3 As Double
               Dim E_otoczenia As Double
               Dim E_suma As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J dla zakresu -210 |fffd| 760|fffd|C.
                Const a01 As Double = 50.381187815
                Const a02 As Double = 0.03047583693
                Const a03 As Double = -0.00008568106572
                Const a04 As Double = 1.3228195295E-07
                Const a05 As Double = -1.7052958337E-10
                Const a06 As Double = 2.0948090697E-13
                Const a07 As Double = -1.2538395336E-16
                Const a08 As Double = 1.5631725697E-20

'Przeliczanie temperatury otoczenia dla zakresu -210 |fffd| 760|fffd|C na STE dla J [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8
                               
'Sumowanie STE odczytanej z woltomierza z STE otoczenia
      E_suma = E_zmierzona + E_otoczenia
                             
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J funkcja odwrotna dla zakresu -8095 |fffd| 0|fffd|V co odpowiada -210|fffd|0|fffd|C.
                Const d01 As Double = 0.019528268
                Const d02 As Double = -0.0000012286185
                Const d03 As Double = -1.0752178E-09
                Const d04 As Double = -5.9086933E-13
                Const d05 As Double = -1.7256713E-16
                Const d06 As Double = -2.8131513E-20
                Const d07 As Double = -2.396337E-24
                Const d08 As Double = -8.3823321E-29
 
'obliczanie temperatury czujnika typu J na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -8095 |fffd| 0|fffd|V (-210|fffd|0|fffd|C)
T1 = d01 * E_suma ^ 1 + d02 * E_suma ^ 2 + d03 * E_suma ^ 3 + d04 * E_suma ^ 4 + d05 * E_suma ^ 5 + d06 * E_suma ^ 6 + d07 * E_suma ^ 7 + d08 * E_suma ^ 8
                  
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J funkcja odwrotna dla zakresu -0 |fffd| 42919|fffd|V co odpowiada 0|fffd|760|fffd|C.
                Const d11 As Double = 0.01978425
                Const d12 As Double = -0.0000002001204
                Const d13 As Double = 1.036969E-11
                Const d14 As Double = -2.549687E-16
                Const d15 As Double = 3.585153E-21
                Const d16 As Double = -5.344285E-26
                Const d17 As Double = 5.09989E-31
              
'obliczanie temperatury czujnika typu J na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 0 |fffd| 42919|fffd|V (0|fffd|760|fffd|C)
T2 = d11 * E_suma ^ 1 + d12 * E_suma ^ 2 + d13 * E_suma ^ 3 + d14 * E_suma ^ 4 + d15 * E_suma ^ 5 + d16 * E_suma ^ 6 + d17 * E_suma ^ 7
                   
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu J funkcja odwrotna dla zakresu -42919 |fffd| 69553|fffd|V co odpowiada 760|fffd|1200|fffd|C.
               
                Const d20 As Double = -3113.58187
                Const d21 As Double = 0.300543684
                Const d22 As Double = -0.0000099477323
                Const d23 As Double = 1.7027663E-10
                Const d24 As Double = -1.43033468E-15
                Const d25 As Double = 4.73886084E-21
               
'obliczanie temperatury czujnika typu J na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 20644 |fffd| 54886|fffd|V (500|fffd|1372|fffd|C)
T3 = d20 * E_suma ^ 0 + d21 * E_suma ^ 1 + d22 * E_suma ^ 2 + d23 * E_suma ^ 3 + d24 * E_suma ^ 4 + d25 * E_suma ^ 5
            
'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_suma < 0 Then
                    TJ = T1
                    End If

                    If E_suma >= 0 And E_suma < 42919 Then
                    TJ = T2
                    End If

                    If E_suma >= 42919 Then
                    TJ = T3
                    End If
                    
                    If E_suma < -8095 Or E_suma > 69553 Then
                    TJ = 0
                    End If
                    
                 
'Wynikiem dia|fffd|ania funkcji TJ jest temperatura [|fffd|C].
End Function
Attribute VB_Name = "Mod_Tc_K"
Option Explicit

Public Function EK(T_otoczenia As Double, T_symulowana As Double)
'Funkcja wyliczaj|fffd|ca STE dla czujnika typu K dla danej temperatury z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmienne lokalne pomocnicze do oblicze|fffd|
               Dim E1 As Double
               Dim E2 As Double
               Dim E_otoczenia As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K dla zakresu 0 |fffd| 1327|fffd|C.
               Const a00 As Double = -17.600413686
               Const a01 As Double = 38.921204975
               Const a02 As Double = 0.018558770032
               Const a03 As Double = -0.000099457592874
               Const a04 As Double = 3.1840945719E-07
               Const a05 As Double = -5.6072844889E-10
               Const a06 As Double = 5.6075059059E-13
               Const a07 As Double = -3.2020720003E-16
               Const a08 As Double = 9.7151147152E-20
               Const a09 As Double = -1.2104721275E-23
               Const b00 As Double = 118.5976
               Const b01 As Double = -0.0001183432

'Przeliczanie temperatury otoczenia dla zakresu 0 |fffd| 1327|fffd|C na STE dla K [|fffd|V].
      E_otoczenia = a00 * T_otoczenia ^ 0 + a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8 + a09 * T_otoczenia ^ 9 + b00 * Exp(b01 * (T_otoczenia - 126.9686) ^ 2)
                                           
'Przeliczanie temperatury  na STE dla K dla zakresu 0 |fffd| 1327|fffd|C [|fffd|V].
      E2 = a00 * T_symulowana ^ 0 + a01 * T_symulowana ^ 1 + a02 * T_symulowana ^ 2 + a03 * T_symulowana ^ 3 + a04 * T_symulowana ^ 4 + a05 * T_symulowana ^ 5 + a06 * T_symulowana ^ 6 + a07 * T_symulowana ^ 7 + a08 * T_symulowana ^ 8 + a09 * T_symulowana ^ 9 + b00 * Exp(b01 * (T_symulowana - 126.9686) ^ 2) - E_otoczenia
      

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K dla zakresu -270 |fffd| 0|fffd|C
                Const a11 As Double = 39.450128025
                Const a12 As Double = 0.023622373598
                Const a13 As Double = -0.00032858906784
                Const a14 As Double = -4.9904828777E-06
                Const a15 As Double = -6.7509059173E-08
                Const a16 As Double = -5.7410327428E-10
                Const a17 As Double = -3.1088872894E-12
                Const a18 As Double = -1.0451609365E-14
                Const a19 As Double = -1.9889266878E-17
                Const a10 As Double = -1.6322697486E-20
                
'Przeliczanie temperatury  na STE dla K dla zakresu -270 |fffd| 0|fffd|C [|fffd|V].
       E1 = a11 * T_symulowana ^ 1 + a12 * T_symulowana ^ 2 + a13 * T_symulowana ^ 3 + a14 * T_symulowana ^ 4 + a15 * T_symulowana ^ 5 + a16 * T_symulowana ^ 6 + a17 * T_symulowana ^ 7 + a18 * T_symulowana ^ 8 + a19 * T_symulowana ^ 9 + a10 * T_symulowana ^ 10 - E_otoczenia
                          
                      
'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 0 Then
                    EK = E1
                    End If

                    If T_symulowana >= 0 Then
                    EK = E2
                    End If

                    If T_symulowana < -270 Or T_symulowana > 1372 Then
                    EK = 0
                    End If
                 
'Wynikiem dia|fffd|ania funkcji EK jest STE [|fffd|V].
End Function

Public Function TK(T_otoczenia As Double, E_zmierzona As Double)
'Funkcja odwrotna wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu K dla danej STE z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmenne lokalne pomocnicze do oblicze|fffd|
               Dim T1 As Double
               Dim T2 As Double
               Dim T3 As Double
               Dim E_otoczenia As Double
               Dim E_suma As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K dla zakresu 0 |fffd| 1327|fffd|C.
               Const a00 As Double = -17.600413686
               Const a01 As Double = 38.921204975
               Const a02 As Double = 0.018558770032
               Const a03 As Double = -0.000099457592874
               Const a04 As Double = 3.1840945719E-07
               Const a05 As Double = -5.6072844889E-10
               Const a06 As Double = 5.6075059059E-13
               Const a07 As Double = -3.2020720003E-16
               Const a08 As Double = 9.7151147152E-20
               Const a09 As Double = -1.2104721275E-23
               Const b00 As Double = 118.5976
               Const b01 As Double = -0.0001183432

'Przeliczanie temperatury otoczenia dla zakresu 0 |fffd| 1327|fffd|C na STE dla K [|fffd|V].
      E_otoczenia = a00 * T_otoczenia ^ 0 + a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8 + a09 * T_otoczenia ^ 9 + b00 * Exp(b01 * (T_otoczenia - 126.9686) ^ 2)
                             
'Sumowanie STE odczytanej z woltomierza z STE otoczenia
      E_suma = E_zmierzona + E_otoczenia
                             


'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K funkcja odwrotna dla zakresu -5891 |fffd| 0|fffd|V co odpowiada -200|fffd|0|fffd|C.
               
                Const d01 As Double = 0.025173462
                Const d02 As Double = -0.0000011662878
                Const d03 As Double = -1.0833638E-09
                Const d04 As Double = -8.977354E-13
                Const d05 As Double = -3.7342377E-16
                Const d06 As Double = -8.6632643E-20
                Const d07 As Double = -1.0450598E-23
                Const d08 As Double = -5.1920577E-28
 
'obliczanie temperatury czujnika typu K na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -5891 |fffd| 0|fffd|V (-200|fffd|0|fffd|C)
T1 = d01 * E_suma ^ 1 + d02 * E_suma ^ 2 + d03 * E_suma ^ 3 + d04 * E_suma ^ 4 + d05 * E_suma ^ 5 + d06 * E_suma ^ 6 + d07 * E_suma ^ 7 + d08 * E_suma ^ 8
               
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K funkcja odwrotna dla zakresu -0 |fffd| 20644|fffd|V co odpowiada 0|fffd|500|fffd|C.
                Const d11 As Double = 0.02508355
                Const d12 As Double = 0.00000007860106
                Const d13 As Double = -2.503131E-10
                Const d14 As Double = 8.31527E-14
                Const d15 As Double = -1.228034E-17
                Const d16 As Double = 9.804036E-22
                Const d17 As Double = -4.41303E-26
                Const d18 As Double = 1.057734E-30
                Const d19 As Double = -1.052755E-35
              
'obliczanie temperatury czujnika typu K na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 0 |fffd| 20644|fffd|V (0|fffd|500|fffd|C)
T2 = d11 * E_suma ^ 1 + d12 * E_suma ^ 2 + d13 * E_suma ^ 3 + d14 * E_suma ^ 4 + d15 * E_suma ^ 5 + d16 * E_suma ^ 6 + d17 * E_suma ^ 7 + d18 * E_suma ^ 8 + d19 * E_suma ^ 9
                   
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu K funkcja odwrotna dla zakresu -20644 |fffd| 54886|fffd|V co odpowiada 500|fffd|1372|fffd|C.
               
                Const d20 As Double = -131.8058
                Const d21 As Double = 0.04830222
                Const d22 As Double = -0.000001646031
                Const d23 As Double = 5.464731E-11
                Const d24 As Double = -9.650715E-16
                Const d25 As Double = 8.802193E-21
                Const d26 As Double = -3.11081E-26
               
'obliczanie temperatury czujnika typu K na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 20644 |fffd| 54886|fffd|V (500|fffd|1372|fffd|C)
T3 = d20 * E_suma ^ 0 + d21 * E_suma ^ 1 + d22 * E_suma ^ 2 + d23 * E_suma ^ 3 + d24 * E_suma ^ 4 + d25 * E_suma ^ 5 + d26 * E_suma ^ 6
            
'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_suma < 0 Then
                    TK = T1
                    End If

                    If E_suma >= 0 And E_suma < 20644 Then
                    TK = T2
                    End If

                    If E_suma >= 20644 Then
                    TK = T3
                    End If
                    
                    If E_suma < -5891 Or E_suma > 54886 Then
                    TK = 0
                    End If
                    
                 
'Wynikiem dia|fffd|ania funkcji TK jest temperatura [|fffd|C].
End Function
Attribute VB_Name = "Mod_Tc_N"
Option Explicit

Public Function EN(T_otoczenia As Double, T_symulowana As Double)
'Funkcja wyliczaj|fffd|ca STE dla czujnika typu N dla danej temperatury z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmienne lokalne pomocnicze do oblicze|fffd|
               Dim E1 As Double
               Dim E2 As Double
               Dim E_otoczenia As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N dla zakresu 0 |fffd| 1300|fffd|C.
               Const a01 As Double = 25.929394601
               Const a02 As Double = 0.01571014188
               Const a03 As Double = 0.000043825627237
               Const a04 As Double = -2.5261169794E-07
               Const a05 As Double = 6.4311819339E-10
               Const a06 As Double = -1.0063471519E-12
               Const a07 As Double = 9.9745338992E-16
               Const a08 As Double = -6.0863245607E-19
               Const a09 As Double = 2.0849229339E-22
               Const a10 As Double = -3.0682196151E-26

'Przeliczanie temperatury otoczenia dla zakresu 0 |fffd| 1300|fffd|C na STE dla N [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8 + a09 * T_otoczenia ^ 9 + a10 * T_otoczenia ^ 10
               
'Przeliczanie temperatury  na STE dla N dla zakresu 0 |fffd| 1300|fffd|C [|fffd|V].
      E2 = a01 * T_symulowana ^ 1 + a02 * T_symulowana ^ 2 + a03 * T_symulowana ^ 3 + a04 * T_symulowana ^ 4 + a05 * T_symulowana ^ 5 + a06 * T_symulowana ^ 6 + a07 * T_symulowana ^ 7 + a08 * T_symulowana ^ 8 + a09 * T_symulowana ^ 9 + a10 * T_symulowana ^ 10 - E_otoczenia
   
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N dla zakresu |fffd|270 |fffd| 0|fffd|C.
               Const a11 As Double = 26.159105962
               Const a12 As Double = 0.010957484228
               Const a13 As Double = -0.00009384111554
               Const a14 As Double = -4.6412039759E-08
               Const a15 As Double = -2.6303357716E-09
               Const a16 As Double = -2.2653438003E-11
               Const a17 As Double = -7.6089300791E-14
               Const a18 As Double = -9.3419667835E-17

'Przeliczanie temperatury  na STE dla N dla zakresu -270 |fffd| 0|fffd|C [|fffd|V].
      E1 = a11 * T_symulowana ^ 1 + a12 * T_symulowana ^ 2 + a13 * T_symulowana ^ 3 + a14 * T_symulowana ^ 4 + a15 * T_symulowana ^ 5 + a16 * T_symulowana ^ 6 + a17 * T_symulowana ^ 7 + a18 * T_symulowana ^ 8 - E_otoczenia
                                      
'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 0 Then
                    EN = E1
                    End If

                    If T_symulowana >= 0 Then
                    EN = E2
                    End If

                    If T_symulowana < -270 Or T_symulowana > 1300 Then
                    EN = 0
                    End If
                 
'Wynikiem dia|fffd|ania funkcji EN jest STE [|fffd|V].
End Function

Public Function TN(T_otoczenia As Double, E_zmierzona As Double)
'Funkcja odwrotna wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu S dla danej STE z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmenne lokalne pomocnicze do oblicze|fffd|
               Dim T1 As Double
               Dim T2 As Double
               Dim T3 As Double
               Dim E_otoczenia As Double
               Dim E_suma As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N dla zakresu 0 |fffd| 1300|fffd|C.
               Const a01 As Double = 25.929394601
               Const a02 As Double = 0.01571014188
               Const a03 As Double = 0.000043825627237
               Const a04 As Double = -2.5261169794E-07
               Const a05 As Double = 6.4311819339E-10
               Const a06 As Double = -1.0063471519E-12
               Const a07 As Double = 9.9745338992E-16
               Const a08 As Double = -6.0863245607E-19
               Const a09 As Double = 2.0849229339E-22
               Const a10 As Double = -3.0682196151E-26

'Przeliczanie temperatury otoczenia dla zakresu 0 |fffd| 1300|fffd|C na STE dla N [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8 + a09 * T_otoczenia ^ 9 + a10 * T_otoczenia ^ 10
                               
'Sumowanie STE odczytanej z woltomierza z STE otoczenia
      E_suma = E_zmierzona + E_otoczenia
                             
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N funkcja odwrotna dla zakresu -3990 |fffd| 0|fffd|V co odpowiada -200|fffd|0|fffd|C.
               Const d01 As Double = 0.038436847
               Const d02 As Double = 0.0000011010485
               Const d03 As Double = 5.2229312E-09
               Const d04 As Double = 7.2060525E-12
               Const d05 As Double = 5.8488586E-15
               Const d06 As Double = 2.7754916E-18
               Const d07 As Double = 7.7075166E-22
               Const d08 As Double = 1.1582665E-25
               Const d09 As Double = 7.3138868E-30
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -3990 |fffd| 0|fffd|V (-200|fffd|0|fffd|C)
T1 = d01 * E_suma ^ 1 + d02 * E_suma ^ 2 + d03 * E_suma ^ 3 + d04 * E_suma ^ 4 + d05 * E_suma ^ 5 + d06 * E_suma ^ 6 + d07 * E_suma ^ 7 + d08 * E_suma ^ 8 + d09 * E_suma ^ 9


'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N funkcja odwrotna dla zakresu 0 |fffd| 20613|fffd|V co odpowiada 0 |fffd| 600|fffd|C.
               Const d11 As Double = 0.0386896
               Const d12 As Double = -0.00000108267
               Const d13 As Double = 4.70205E-11
               Const d14 As Double = -2.12169E-18
               Const d15 As Double = -1.17272E-19
               Const d16 As Double = 5.3928E-24
               Const d17 As Double = -7.98156E-29
               
'obliczanie temperatury czujnika typu N na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 10 |fffd| 20613|fffd|V (0 |fffd| 600|fffd|C).
T2 = d11 * E_suma ^ 1 + d12 * E_suma ^ 2 + d13 * E_suma ^ 3 + d14 * E_suma ^ 4 + d15 * E_suma ^ 5 + d16 * E_suma ^ 6 + d17 * E_suma ^ 7

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu N funkcja odwrotna dla zakresu 20613|fffd|47513|fffd|V co odpowiada 600|fffd|1300|fffd|C.
               Const d20 As Double = 19.72485
               Const d21 As Double = 0.03300943
               Const d22 As Double = -0.0000003915159
               Const d23 As Double = 9.855391E-12
               Const d24 As Double = -1.274371E-16
               Const d25 As Double = 7.767022E-22
               
'obliczanie temperatury czujnika typu N na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 20613|fffd|47513|fffd|V (600|fffd|1300|fffd|C).
T3 = d20 * E_suma ^ 0 + d21 * E_suma ^ 1 + d22 * E_suma ^ 2 + d23 * E_suma ^ 3 + d24 * E_suma ^ 4 + d25 * E_suma ^ 5


'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_suma < 0 Then
                    TN = T1
                    End If

                    If E_suma >= 0 And E_suma < 20613 Then
                    TN = T2
                    End If

                    If E_suma >= 20613 Then
                    TN = T3
                    End If
                    
                    If E_suma < -3990 Or E_suma > 47513 Then
                    TN = 0
                    End If
                    
                 
'Wynikiem dia|fffd|ania funkcji TN jest temperatura [|fffd|C].
End Function

Attribute VB_Name = "Mod_Tc_S"
Option Explicit

Public Function ES(T_otoczenia As Double, T_symulowana As Double)
'Funkcja wyliczaj|fffd|ca STE dla czujnika typu S dla danej temperatury z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmenne lokalne pomocnicze do oblicze|fffd|
               Dim E1 As Double
               Dim E2 As Double
               Dim E3 As Double
               Dim E_otoczenia As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C.
               Const a01 As Double = 5.40313308631
               Const a02 As Double = 0.012593428974
               Const a03 As Double = -2.32477968689E-05
               Const a04 As Double = 3.22028823036E-08
               Const a05 As Double = -3.31465196389E-11
               Const a06 As Double = 2.55744251786E-14
               Const a07 As Double = -1.25068871393E-17
               Const a08 As Double = 2.71443176145E-21
               
'Przeliczanie temperatury otoczenia na STE dla S [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8
               
'Przeliczanie temperatury  na STE dla S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C [|fffd|V].
      E1 = a01 * T_symulowana ^ 1 + a02 * T_symulowana ^ 2 + a03 * T_symulowana ^ 3 + a04 * T_symulowana ^ 4 + a05 * T_symulowana ^ 5 + a06 * T_symulowana ^ 6 + a07 * T_symulowana ^ 7 + a08 * T_symulowana ^ 8 - E_otoczenia
              
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu 1064,18 |fffd| 1664,50|fffd|C.
               Const a11 As Double = 1329.00444085
               Const a12 As Double = 3.34509311344
               Const a13 As Double = 0.00654805192818
               Const a14 As Double = -1.64856259209E-06
               Const a15 As Double = 1.29989605174E-11
               
'Przeliczanie temperatury  na STE dla S dla zakresu 1064,18 |fffd| 1664,50|fffd|C [|fffd|V].
      E2 = a11 * T_symulowana ^ 0 + a12 * T_symulowana ^ 1 + a13 * T_symulowana ^ 2 + a14 * T_symulowana ^ 3 + a15 * T_symulowana ^ 4 - E_otoczenia
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu 1664,50 |fffd| 1768,10|fffd|C.
               Const a21 As Double = 146628.232636
               Const a22 As Double = -258.430516752
               Const a23 As Double = 0.163693574641
               Const a24 As Double = -3.30439046987E-05
               Const a25 As Double = -9.43223690612E-12

'Przeliczanie temperatury  na STE dla S dla zakresu 1664,50 |fffd| 1768,10|fffd|C [|fffd|V].
      E3 = a21 * T_symulowana ^ 1 + a22 * T_symulowana ^ 2 + a23 * T_symulowana ^ 3 + a24 * T_symulowana ^ 4 + a25 * T_symulowana ^ 5 - E_otoczenia

'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 1064.18 Then
                    ES = E1
                    End If

                    If T_symulowana >= 1064.18 And T_symulowana < 1664.5 Then
                    ES = E2
                    End If

                    If T_symulowana >= 1664.5 Then
                    ES = E3
                    End If
                    
                    If T_symulowana < -50 Or T_symulowana > 1664.5 Then
                    ES = 0
                    End If
                    
'Wynikiem dia|fffd|ania funkcji ES jest STE [|fffd|V].
End Function

Public Function TS(T_otoczenia As Double, E_zmierzona As Double)
'Funkcja odwrotna wyliczaj|fffd|ca Temperatur|fffd| dla czujnika typu S dla danej STE z uwzgl|fffd|dnieniem temperatury otoczenia.

'Zmenne lokalne pomocnicze do oblicze|fffd|
               Dim T1 As Double
               Dim T2 As Double
               Dim T3 As Double
               Dim T4 As Double
               Dim E_otoczenia As Double
               Dim E_suma As Double
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C.
               Const a01 As Double = 5.40313308631
               Const a02 As Double = 0.012593428974
               Const a03 As Double = -2.32477968689E-05
               Const a04 As Double = 3.22028823036E-08
               Const a05 As Double = -3.31465196389E-11
               Const a06 As Double = 2.55744251786E-14
               Const a07 As Double = -1.25068871393E-17
               Const a08 As Double = 2.71443176145E-21
               
'Przeliczanie temperatury otoczenia na STE dla S [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8

'Sumowanie STE odczytanej z woltomierza z STE otoczenia
      E_suma = E_zmierzona + E_otoczenia
                             
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu -235 |fffd| 1874|fffd|V co odpowiada -50|fffd|250|fffd|C.
               Const d00 As Double = 0.18494946
               Const d01 As Double = -0.0000800504062
               Const d02 As Double = 0.00000010223743
               Const d03 As Double = -1.52248592E-10
               Const d04 As Double = 1.88821343E-13
               Const d05 As Double = -1.59085941E-16
               Const d06 As Double = 8.2302708E-20
               Const d07 As Double = -2.34181944E-23
               Const d08 As Double = 2.7978626E-27
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -235|fffd|1874|fffd|V (-50|fffd|250|fffd|C)
T1 = d00 * E_suma ^ 1 + d01 * E_suma ^ 2 + d02 * E_suma ^ 3 + d03 * E_suma ^ 4 + d04 * E_suma ^ 5 + d05 * E_suma ^ 6 + d06 * E_suma ^ 7 + d07 * E_suma ^ 8 + d08 * E_suma ^ 9


'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 1874 |fffd| 10332|fffd|V co odpowiada 250 |fffd| 1064|fffd|C.
               Const d10 As Double = 12.91507177
               Const d11 As Double = 0.1466298863
               Const d12 As Double = -0.00001534713402
               Const d13 As Double = 3.145945973E-09
               Const d14 As Double = -4.163257839E-13
               Const d15 As Double = 3.187963771E-17
               Const d16 As Double = -1.2916375E-21
               Const d17 As Double = 2.183475087E-26
               Const d18 As Double = -1.447379511E-31
               Const d19 As Double = 8.211272125E-36
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 1874|fffd|10332|fffd|V (250|fffd|1064|fffd|C).
T2 = d10 * E_suma ^ 0 + d11 * E_suma ^ 1 + d12 * E_suma ^ 2 + d13 * E_suma ^ 3 + d14 * E_suma ^ 4 + d15 * E_suma ^ 5 + d16 * E_suma ^ 6 + d17 * E_suma ^ 7 + d18 * E_suma ^ 8 + d19 * E_suma ^ 9

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 10332|fffd|17336|fffd|V co odpowiada 1064|fffd|1664,5|fffd|C.
               Const d20 As Double = -80.87801117
               Const d21 As Double = 0.1621573104
               Const d22 As Double = -0.000008536869453
               Const d23 As Double = 4.719686976E-10
               Const d24 As Double = -1.441693666E-14
               Const d25 As Double = 2.08161889E-19
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 10332|fffd|17336|fffd|V (1064 |fffd| 1664,5|fffd|C).
T3 = d20 * E_suma ^ 0 + d21 * E_suma ^ 1 + d22 * E_suma ^ 2 + d23 * E_suma ^ 3 + d24 * E_suma ^ 4 + d25 * E_suma ^ 5

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 17536|fffd|18694|fffd|V co odpowiada 1664,5 |fffd| 1768,1|fffd|C.
               Const d30 As Double = 53338.75126
               Const d31 As Double = -12.35892298
               Const d32 As Double = 0.001092657613
               Const d33 As Double = -4.265693686E-08
               Const d34 As Double = 6.24720542E-13
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 17536 |fffd| 18694|fffd|V (1664,5 |fffd| 1768,1|fffd|C).
T4 = d30 * E_suma ^ 0 + d31 * E_suma ^ 1 + d32 * E_suma ^ 2 + d33 * E_suma ^ 3 + d34 * E_suma ^ 4

'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_suma < 1874 Then
                    TS = T1
                    End If

                    If E_suma >= 1874 And E_suma < 10332 Then
                    TS = T2
                    End If

                    If E_suma >= 10332 And E_suma < 17336 Then
                    TS = T3
                    End If

                    If E_suma >= 17536 Then
                    TS = T4
                    End If
                    
                    If E_suma < -235 Or E_suma > 18694 Then
                    TS = 0
                    End If
                    
                 
'Wynikiem dia|fffd|ania funkcji TS jest temperatura [|fffd|C].
End Function
Attribute VB_Name = "Mod_Tc_S_kontrolna"
Option Explicit

Public Function TwS(T_otoczenia As Double, E_zmierzona As Double, s1 As Double, s2 As Double, s3 As Double, m As Byte, j As Byte)
'Funkcja wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu S wzorcowego dla danej STE

'    Kolejno|fffd||fffd| dzia|fffd|a|fffd| przy odczycie temperatury z czujnika wzorcowego typu S
'1.  Odczyt temperatury otoczenia.  =T_otoczenia
'2.  Zamiana temp otocz. na STE zgodnie z norm|fffd| PN-EN60584  =E_otoczenia
'3.  Odczyt wzorca z woltomierza (bez otoczenia i poprawki). =E_zmierzona
'4.  Dodanie STE otoczenia do odczytu wzorca z woltomierza.  =E_suma
'5.  Zamiana STE wzorca z otoczeniem na temperatur|fffd| zgodnie z norm|fffd| PN-EN60584  =T
'6.  Wyliczenie odchy|fffd|ki E_korekta dla wzorca w temperaturze T z wielomianu GUM.
'    E_zmierzona(T)-E_znormalizowana(T) czyli E_koryguj|fffd|ca = s1*(T)+s2*T^2+s3*T^3 gdzie E_znormalizowana(T)= STE odczytana z PN-EN60584
'                                                                  s1, s2, s3 podane sa na |fffd|wiadectwie GUM.
'7.  Dodanie E_zmnierzona + E_otoczenia + E_korekta  = E_skorygowana
'8.  Zamiana E_skorygowana na temperatur|fffd| zgodnie z PN-EN60584  = T


Dim E_suma As Double
Dim E_skorygowana As Double
Dim E_koryguj|fffd|ca As Double
Dim E_otoczenia As Double
Dim T As Double
Dim T1 As Double
Dim T2 As Double
Dim T3 As Double
Dim T4 As Double

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C.
               Const a01 As Double = 5.40313308631
               Const a02 As Double = 0.012593428974
               Const a03 As Double = -2.32477968689E-05
               Const a04 As Double = 3.22028823036E-08
               Const a05 As Double = -3.31465196389E-11
               Const a06 As Double = 2.55744251786E-14
               Const a07 As Double = -1.25068871393E-17
               Const a08 As Double = 2.71443176145E-21
               
'Przeliczanie temperatury otoczenia na STE dla S [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8

'Sumowanie STE odczytanej z woltomierza z STE otoczenia zgodnie z metod|fffd| przekazan|fffd| porametrem "m"
       'm <> 0 liczenie poprawki tylko z STE temopary. W tym przypadku poprawka na otoczenie zawarta jest tylko w odczycie z termometru.
       'm = 0  liczenie poprawki |fffd||fffd|cznie STE i z temperatur|fffd| otoczenia zmierzon|fffd| termometrem. W tym przypadku poprawk|fffd| wyznaczon|fffd| dla temopary stosujemy r|fffd|wnie|fffd| dla sk|fffd|adowej otoczenia odczytanej z termometeru. Jest to zgodne z instrukcj|fffd|.
        If m = 0 Then
        E_suma = E_zmierzona + E_otoczenia
        Else
        E_suma = E_zmierzona
        End If

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu -235 |fffd| 1874|fffd|V co odpowiada -50|fffd|250|fffd|C.
               Const d00 As Double = 0.18494946
               Const d01 As Double = -0.0000800504062
               Const d02 As Double = 0.00000010223743
               Const d03 As Double = -1.52248592E-10
               Const d04 As Double = 1.88821343E-13
               Const d05 As Double = -1.59085941E-16
               Const d06 As Double = 8.2302708E-20
               Const d07 As Double = -2.34181944E-23
               Const d08 As Double = 2.7978626E-27
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -235|fffd|1874|fffd|V (-50|fffd|250|fffd|C)
T1 = d00 * E_suma ^ 1 + d01 * E_suma ^ 2 + d02 * E_suma ^ 3 + d03 * E_suma ^ 4 + d04 * E_suma ^ 5 + d05 * E_suma ^ 6 + d06 * E_suma ^ 7 + d07 * E_suma ^ 8 + d08 * E_suma ^ 9


'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 1874 |fffd| 10332|fffd|V co odpowiada 250 |fffd| 1064|fffd|C.
               Const d10 As Double = 12.91507177
               Const d11 As Double = 0.1466298863
               Const d12 As Double = -0.00001534713402
               Const d13 As Double = 3.145945973E-09
               Const d14 As Double = -4.163257839E-13
               Const d15 As Double = 3.187963771E-17
               Const d16 As Double = -1.2916375E-21
               Const d17 As Double = 2.183475087E-26
               Const d18 As Double = -1.447379511E-31
               Const d19 As Double = 8.211272125E-36
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 1874|fffd|10332|fffd|V (250|fffd|1064|fffd|C).
T2 = d10 * E_suma ^ 0 + d11 * E_suma ^ 1 + d12 * E_suma ^ 2 + d13 * E_suma ^ 3 + d14 * E_suma ^ 4 + d15 * E_suma ^ 5 + d16 * E_suma ^ 6 + d17 * E_suma ^ 7 + d18 * E_suma ^ 8 + d19 * E_suma ^ 9

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 10332|fffd|17336|fffd|V co odpowiada 1064|fffd|1664,5|fffd|C.
               Const d20 As Double = -80.87801117
               Const d21 As Double = 0.1621573104
               Const d22 As Double = -0.000008536869453
               Const d23 As Double = 4.719686976E-10
               Const d24 As Double = -1.441693666E-14
               Const d25 As Double = 2.08161889E-19
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 10332|fffd|17336|fffd|V (1064 |fffd| 1664,5|fffd|C).
T3 = d20 * E_suma ^ 0 + d21 * E_suma ^ 1 + d22 * E_suma ^ 2 + d23 * E_suma ^ 3 + d24 * E_suma ^ 4 + d25 * E_suma ^ 5

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 17536|fffd|18694|fffd|V co odpowiada 1664,5 |fffd| 1768,1|fffd|C.
               Const d30 As Double = 53338.75126
               Const d31 As Double = -12.35892298
               Const d32 As Double = 0.001092657613
               Const d33 As Double = -4.265693686E-08
               Const d34 As Double = 6.24720542E-13
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 17536 |fffd| 18694|fffd|V (1664,5 |fffd| 1768,1|fffd|C).
T4 = d30 * E_suma ^ 0 + d31 * E_suma ^ 1 + d32 * E_suma ^ 2 + d33 * E_suma ^ 3 + d34 * E_suma ^ 4

'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_suma < 1874 Then
                    T = T1
                    End If

                    If E_suma >= 1874 And E_suma < 10332 Then
                    T = T2
                    End If

                    If E_suma >= 10332 And E_suma < 17336 Then
                    T = T3
                    End If

                    If E_suma >= 17536 Then
                    T = T4
                    End If
                    
                    If E_suma < -235 Or E_suma > 18694 Then
                    T = 0
                    End If

'Wyliczenie odchy|fffd|ki E_koryguj|fffd|ca dla wzorca w temperaturze T z wielomianu GUM.
        'Const x1 As Double = -0.0000191876: Rem tylko do cel|fffd|w testowych
        'Const x2 As Double = 0.00000000507204: Rem tylko do cel|fffd|w testowych
        'Const x3 As Double = 1.63178E-12: Rem tylko do cel|fffd|w testowych
        'E_koryguj|fffd|ca = (x1 * T + x2 * T ^ 2 + x3 * T ^ 3) * 1000: Rem tylko do cel|fffd|w testowych
         Rem w razie potrzeby testowania usun|fffd||fffd| apostrofy w 4 powy|fffd|czych liniach a do|fffd|o|fffd|y|fffd| w lini ni|fffd|szej.
         If j = 0 Then
         E_koryguj|fffd|ca = (s1 * T + s2 * T ^ 2 + s3 * T ^ 3) * 1000
         Else
         E_koryguj|fffd|ca = (s1 * T + s2 * T ^ 2 + s3 * T ^ 3)
         End If
                         
'Dodanie E_zmnierzona + E_otoczenia + E_korekta  = E_skorygowana

   E_skorygowana = E_zmierzona + E_otoczenia + E_koryguj|fffd|ca

'Zamiana E_skorygowana na temperatur|fffd| zgodnie z PN-EN60584  = T
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu -235 |fffd| 1874|fffd|V co odpowiada -50|fffd|250|fffd|C.
               'Const d00 As Double = 0.18494946
               'Const d01 As Double = -0.0000800504062
               'Const d02 As Double = 0.00000010223743
               'Const d03 As Double = -1.52248592E-10
               'Const d04 As Double = 1.88821343E-13
               'Const d05 As Double = -1.59085941E-16
               'Const d06 As Double = 8.2302708E-20
               'Const d07 As Double = -2.34181944E-23
               'Const d08 As Double = 2.7978626E-27
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu -235|fffd|1874|fffd|V (-50|fffd|250|fffd|C)
T1 = d00 * E_skorygowana ^ 1 + d01 * E_skorygowana ^ 2 + d02 * E_skorygowana ^ 3 + d03 * E_skorygowana ^ 4 + d04 * E_skorygowana ^ 5 + d05 * E_skorygowana ^ 6 + d06 * E_skorygowana ^ 7 + d07 * E_skorygowana ^ 8 + d08 * E_skorygowana ^ 9


'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 1874 |fffd| 10332|fffd|V co odpowiada 250 |fffd| 1064|fffd|C.
               'Const d10 As Double = 12.91507177
               'Const d11 As Double = 0.1466298863
               'Const d12 As Double = -0.00001534713402
               'Const d13 As Double = 3.145945973E-09
               'Const d14 As Double = -4.163257839E-13
               'Const d15 As Double = 3.187963771E-17
               'Const d16 As Double = -1.2916375E-21
               'Const d17 As Double = 2.183475087E-26
               'Const d18 As Double = -1.447379511E-31
               'Const d19 As Double = 8.211272125E-36
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 1874|fffd|10332|fffd|V (250|fffd|1064|fffd|C).
T2 = d10 * E_skorygowana ^ 0 + d11 * E_skorygowana ^ 1 + d12 * E_skorygowana ^ 2 + d13 * E_skorygowana ^ 3 + d14 * E_skorygowana ^ 4 + d15 * E_skorygowana ^ 5 + d16 * E_skorygowana ^ 6 + d17 * E_skorygowana ^ 7 + d18 * E_skorygowana ^ 8 + d19 * E_skorygowana ^ 9

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 10332|fffd|17336|fffd|V co odpowiada 1064|fffd|1664,5|fffd|C.
               'Const d20 As Double = -80.87801117
               'Const d21 As Double = 0.1621573104
               'Const d22 As Double = -0.000008536869453
               'Const d23 As Double = 4.719686976E-10
               'Const d24 As Double = -1.441693666E-14
               'Const d25 As Double = 2.08161889E-19
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 10332|fffd|17336|fffd|V (1064 |fffd| 1664,5|fffd|C).
T3 = d20 * E_skorygowana ^ 0 + d21 * E_skorygowana ^ 1 + d22 * E_skorygowana ^ 2 + d23 * E_skorygowana ^ 3 + d24 * E_skorygowana ^ 4 + d25 * E_skorygowana ^ 5

'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S funkcja odwrotna dla zakresu 17536|fffd|18694|fffd|V co odpowiada 1664,5 |fffd| 1768,1|fffd|C.
               'Const d30 As Double = 53338.75126
               'Const d31 As Double = -12.35892298
               'Const d32 As Double = 0.001092657613
               'Const d33 As Double = -4.265693686E-08
               'Const d34 As Double = 6.24720542E-13
               
'obliczanie temperatury czujnika typu S na podstawie zmierzonej STE z uwzgl|fffd|dnieniem temperatury otoczenia dla zakresu 17536 |fffd| 18694|fffd|V (1664,5 |fffd| 1768,1|fffd|C).
T4 = d30 * E_skorygowana ^ 0 + d31 * E_skorygowana ^ 1 + d32 * E_skorygowana ^ 2 + d33 * E_skorygowana ^ 3 + d34 * E_skorygowana ^ 4

'Wybranie wariantu temperatury z w|fffd|a|fffd|ciwego przedzia|fffd|u STE.
                    If E_skorygowana < 1874 Then
                    T = T1
                    End If

                    If E_skorygowana >= 1874 And E_skorygowana < 10332 Then
                    T = T2
                    End If

                    If E_skorygowana >= 10332 And E_skorygowana < 17336 Then
                    T = T3
                    End If

                    If E_skorygowana >= 17536 Then
                    T = T4
                    End If
                    
                    If E_skorygowana < -235 Or E_skorygowana > 18694 Then
                    T = 0
                    End If

                    TwS = T

'Funkcja wylicza temperature odpowiadaj|fffd|ca STE odczytanej z wzorca typu S uwzgl|fffd|dniaj|fffd|c temperature otoczenia
'oraz wielomian koryguj|fffd|cy ze |fffd|wiadectwa wzorcowania termoelementu.
End Function



Public Function EwS(T_otoczenia As Double, T_symulowana As Double, s1 As Double, s2 As Double, s3 As Double, m As Byte, j As Byte)
'Funkcja wliczaj|fffd|ca Temperatur|fffd| dla czujnika typu S wzorcowego dla danej STE

'    Kolejno|fffd||fffd| dzia|fffd|a|fffd| przy wyliczeniu STE wzorca S w za|fffd|o|fffd|onej temperaturze
'1.  Zamiana temp otocz. na STE zgodnie z norm|fffd| PN-EN60584  =E_otoczenia
'2.  Zamiana T_symulowanej ne STE zgodnie z norm|fffd| PN-EN60584  =E_ca|fffd|kowita
'3.  Wyliczenie brakuj|fffd|cej temperatury ponad otoczenie =T_brakuj|fffd|ca
'4.  Wyliczenie poprawki dla T_symulowanej  zgodnie z wielomianem GUM [mkV] =E_korekcyja
'4.  albo:Wyliczenie poprawki dla T_brakuj|fffd|cej (ponad otoczenie)[mkV] =E_koryguj|fffd|ca
'5.  Odj|fffd|cie  E_wyliczona = E_ca|fffd|kowita - E_otoczenia -E_korekcyjna


'Zmienne lokalne pomocnicze do oblicze|fffd|
               Dim E_otoczenia As Double
               Dim E1 As Double
               Dim E2 As Double
               Dim E3 As Double
               Dim E_ca|fffd|kowita As Double
               Dim T_brakuj|fffd|ca As Double
               Dim T As Double
               Dim E_wyliczona As Double
               Dim E_koryguj|fffd|ca As Double
               
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C.
               Const a01 As Double = 5.40313308631
               Const a02 As Double = 0.012593428974
               Const a03 As Double = -2.32477968689E-05
               Const a04 As Double = 3.22028823036E-08
               Const a05 As Double = -3.31465196389E-11
               Const a06 As Double = 2.55744251786E-14
               Const a07 As Double = -1.25068871393E-17
               Const a08 As Double = 2.71443176145E-21
               
'Przeliczanie temperatury otoczenia na STE dla S [|fffd|V].
      E_otoczenia = a01 * T_otoczenia ^ 1 + a02 * T_otoczenia ^ 2 + a03 * T_otoczenia ^ 3 + a04 * T_otoczenia ^ 4 + a05 * T_otoczenia ^ 5 + a06 * T_otoczenia ^ 6 + a07 * T_otoczenia ^ 7 + a08 * T_otoczenia ^ 8
               
'Przeliczanie temperatury  na STE dla S dla zakresu |fffd|50,00 |fffd| 1064,18|fffd|C [|fffd|V].
      E1 = a01 * T_symulowana ^ 1 + a02 * T_symulowana ^ 2 + a03 * T_symulowana ^ 3 + a04 * T_symulowana ^ 4 + a05 * T_symulowana ^ 5 + a06 * T_symulowana ^ 6 + a07 * T_symulowana ^ 7 + a08 * T_symulowana ^ 8
              
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu 1064,18 |fffd| 1664,50|fffd|C.
               Const a11 As Double = 1329.00444085
               Const a12 As Double = 3.34509311344
               Const a13 As Double = 0.00654805192818
               Const a14 As Double = -1.64856259209E-06
               Const a15 As Double = 1.29989605174E-11
               
'Przeliczanie temperatury  na STE dla S dla zakresu 1064,18 |fffd| 1664,50|fffd|C [|fffd|V].
      E2 = a11 * T_symulowana ^ 0 + a12 * T_symulowana ^ 1 + a13 * T_symulowana ^ 2 + a14 * T_symulowana ^ 3 + a15 * T_symulowana ^ 4
               
'Sta|fffd|e wsp|fffd|czynniki z normy dla typu S dla zakresu 1664,50 |fffd| 1768,10|fffd|C.
               Const a21 As Double = 146628.232636
               Const a22 As Double = -258.430516752
               Const a23 As Double = 0.163693574641
               Const a24 As Double = -3.30439046987E-05
               Const a25 As Double = -9.43223690612E-12

'Przeliczanie temperatury  na STE dla S dla zakresu 1664,50 |fffd| 1768,10|fffd|C [|fffd|V].
      E3 = a21 * T_symulowana ^ 1 + a22 * T_symulowana ^ 2 + a23 * T_symulowana ^ 3 + a24 * T_symulowana ^ 4 + a25 * T_symulowana ^ 5

'Wybranie wariantu STE z w|fffd|a|fffd|ciwego przedzia|fffd|u temperatury.
                    If T_symulowana < 1064.18 Then
                    E_ca|fffd|kowita = E1
                    End If

                    If T_symulowana >= 1064.18 And T_symulowana < 1664.5 Then
                    E_ca|fffd|kowita = E2
                    End If

                    If T_symulowana >= 1664.5 Then
                    E_ca|fffd|kowita = E3
                    End If
                    
                    If T_symulowana < -50 Or T_symulowana > 1664.5 Then
                    E_ca|fffd|kowita = 0
                    End If
                    
'Wyliczenie brakuj|fffd|cej temperatury ponad otoczenie
T_brakuj|fffd|ca = T_symulowana - T_otoczenia


'Wyliczenie poprawki dla T_symulowanej  zgodnie z wielomianem GUM [mkV] =E_korekcyja
'albo:Wyliczenie poprawki dla T_brakuj|fffd|cej (ponad otoczenie)[mkV] =E_korekcyjna
        If m = 0 Then
        T = T_symulowana
        Else
        T = T_brakuj|fffd|ca
        End If

 If j = 0 Then
 E_koryguj|fffd|ca = (s1 * T + s2 * T ^ 2 + s3 * T ^ 3) * 1000
 Else
 E_koryguj|fffd|ca = (s1 * T + s2 * T ^ 2 + s3 * T ^ 3)
 End If
 
 

' Wyliczenie STE jak|fffd| da|fffd|aby termopara wzorcowa S w danej temperaturze o otoczeniu.
 EwS = E_ca|fffd|kowita - E_otoczenia - E_koryguj|fffd|ca

End Function
Attribute VB_Name = "Mod_Termometry"
Option Explicit

Public Function Termometr(NumerTermometru As String, Argument As Double)
'funkcja podaje poprawk|fffd| dla podanego termometru i podanej warto|fffd|ci(argumentu)
'dane wzorc|fffd|w musz|fffd| znajdowa|fffd| si|fffd| w arkuszu WZORCE w |fffd|ci|fffd|le okre|fffd|lonych kom|fffd|rkach

'deklaracja zmiennych
Termometr = 0
Dim w(1 To 7, 1 To 7) As Double
Dim arg_ni|fffd|szy As Double
Dim arg_wy|fffd|szy As Double
Dim wart_ni|fffd|sza As Double
Dim wart_wy|fffd|sza As Double
Dim i As Integer
Dim krok As Double
Dim arg As Double
Dim wart As Double


If NumerTermometru = "01a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P22")
w(1, 2) = Worksheets("WZORCE").Range("P23")
w(1, 3) = Worksheets("WZORCE").Range("P24")
w(1, 4) = Worksheets("WZORCE").Range("P25")
w(1, 5) = Worksheets("WZORCE").Range("P26")
w(1, 6) = Worksheets("WZORCE").Range("P27")
w(1, 7) = Worksheets("WZORCE").Range("P28")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q22")
w(2, 2) = Worksheets("WZORCE").Range("Q23")
w(2, 3) = Worksheets("WZORCE").Range("Q24")
w(2, 4) = Worksheets("WZORCE").Range("Q25")
w(2, 5) = Worksheets("WZORCE").Range("Q26")
w(2, 6) = Worksheets("WZORCE").Range("Q27")
w(2, 7) = Worksheets("WZORCE").Range("Q28")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)
arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If

End If





If NumerTermometru = "01b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X22")
w(1, 2) = Worksheets("WZORCE").Range("X23")
w(1, 3) = Worksheets("WZORCE").Range("X24")
w(1, 4) = Worksheets("WZORCE").Range("X25")
w(1, 5) = Worksheets("WZORCE").Range("X26")
w(1, 6) = Worksheets("WZORCE").Range("X27")
w(1, 7) = Worksheets("WZORCE").Range("X28")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y22")
w(2, 2) = Worksheets("WZORCE").Range("Y23")
w(2, 3) = Worksheets("WZORCE").Range("Y24")
w(2, 4) = Worksheets("WZORCE").Range("Y25")
w(2, 5) = Worksheets("WZORCE").Range("Y26")
w(2, 6) = Worksheets("WZORCE").Range("Y27")
w(2, 7) = Worksheets("WZORCE").Range("Y28")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "02a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P42")
w(1, 2) = Worksheets("WZORCE").Range("P43")
w(1, 3) = Worksheets("WZORCE").Range("P44")
w(1, 4) = Worksheets("WZORCE").Range("P45")
w(1, 5) = Worksheets("WZORCE").Range("P46")
w(1, 6) = Worksheets("WZORCE").Range("P47")
w(1, 7) = Worksheets("WZORCE").Range("P48")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q42")
w(2, 2) = Worksheets("WZORCE").Range("Q43")
w(2, 3) = Worksheets("WZORCE").Range("Q44")
w(2, 4) = Worksheets("WZORCE").Range("Q45")
w(2, 5) = Worksheets("WZORCE").Range("Q46")
w(2, 6) = Worksheets("WZORCE").Range("Q47")
w(2, 7) = Worksheets("WZORCE").Range("Q48")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "02b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X42")
w(1, 2) = Worksheets("WZORCE").Range("X43")
w(1, 3) = Worksheets("WZORCE").Range("X44")
w(1, 4) = Worksheets("WZORCE").Range("X45")
w(1, 5) = Worksheets("WZORCE").Range("X46")
w(1, 6) = Worksheets("WZORCE").Range("X47")
w(1, 7) = Worksheets("WZORCE").Range("X48")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y42")
w(2, 2) = Worksheets("WZORCE").Range("Y43")
w(2, 3) = Worksheets("WZORCE").Range("Y44")
w(2, 4) = Worksheets("WZORCE").Range("Y45")
w(2, 5) = Worksheets("WZORCE").Range("Y46")
w(2, 6) = Worksheets("WZORCE").Range("Y47")
w(2, 7) = Worksheets("WZORCE").Range("Y48")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If









If NumerTermometru = "03a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P62")
w(1, 2) = Worksheets("WZORCE").Range("P63")
w(1, 3) = Worksheets("WZORCE").Range("P64")
w(1, 4) = Worksheets("WZORCE").Range("P65")
w(1, 5) = Worksheets("WZORCE").Range("P66")
w(1, 6) = Worksheets("WZORCE").Range("P67")
w(1, 7) = Worksheets("WZORCE").Range("P68")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q62")
w(2, 2) = Worksheets("WZORCE").Range("Q63")
w(2, 3) = Worksheets("WZORCE").Range("Q64")
w(2, 4) = Worksheets("WZORCE").Range("Q65")
w(2, 5) = Worksheets("WZORCE").Range("Q66")
w(2, 6) = Worksheets("WZORCE").Range("Q67")
w(2, 7) = Worksheets("WZORCE").Range("Q68")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "03b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X62")
w(1, 2) = Worksheets("WZORCE").Range("X63")
w(1, 3) = Worksheets("WZORCE").Range("X64")
w(1, 4) = Worksheets("WZORCE").Range("X65")
w(1, 5) = Worksheets("WZORCE").Range("X66")
w(1, 6) = Worksheets("WZORCE").Range("X67")
w(1, 7) = Worksheets("WZORCE").Range("X68")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y62")
w(2, 2) = Worksheets("WZORCE").Range("Y63")
w(2, 3) = Worksheets("WZORCE").Range("Y64")
w(2, 4) = Worksheets("WZORCE").Range("Y65")
w(2, 5) = Worksheets("WZORCE").Range("Y66")
w(2, 6) = Worksheets("WZORCE").Range("Y67")
w(2, 7) = Worksheets("WZORCE").Range("Y68")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If












If NumerTermometru = "04a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P82")
w(1, 2) = Worksheets("WZORCE").Range("P83")
w(1, 3) = Worksheets("WZORCE").Range("P84")
w(1, 4) = Worksheets("WZORCE").Range("P85")
w(1, 5) = Worksheets("WZORCE").Range("P86")
w(1, 6) = Worksheets("WZORCE").Range("P87")
w(1, 7) = Worksheets("WZORCE").Range("P88")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q82")
w(2, 2) = Worksheets("WZORCE").Range("Q83")
w(2, 3) = Worksheets("WZORCE").Range("Q84")
w(2, 4) = Worksheets("WZORCE").Range("Q85")
w(2, 5) = Worksheets("WZORCE").Range("Q86")
w(2, 6) = Worksheets("WZORCE").Range("Q87")
w(2, 7) = Worksheets("WZORCE").Range("Q88")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "04b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X82")
w(1, 2) = Worksheets("WZORCE").Range("X83")
w(1, 3) = Worksheets("WZORCE").Range("X84")
w(1, 4) = Worksheets("WZORCE").Range("X85")
w(1, 5) = Worksheets("WZORCE").Range("X86")
w(1, 6) = Worksheets("WZORCE").Range("X87")
w(1, 7) = Worksheets("WZORCE").Range("X88")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y82")
w(2, 2) = Worksheets("WZORCE").Range("Y83")
w(2, 3) = Worksheets("WZORCE").Range("Y84")
w(2, 4) = Worksheets("WZORCE").Range("Y85")
w(2, 5) = Worksheets("WZORCE").Range("Y86")
w(2, 6) = Worksheets("WZORCE").Range("Y87")
w(2, 7) = Worksheets("WZORCE").Range("Y88")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If









If NumerTermometru = "05a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P102")
w(1, 2) = Worksheets("WZORCE").Range("P103")
w(1, 3) = Worksheets("WZORCE").Range("P104")
w(1, 4) = Worksheets("WZORCE").Range("P105")
w(1, 5) = Worksheets("WZORCE").Range("P106")
w(1, 6) = Worksheets("WZORCE").Range("P107")
w(1, 7) = Worksheets("WZORCE").Range("P108")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q102")
w(2, 2) = Worksheets("WZORCE").Range("Q103")
w(2, 3) = Worksheets("WZORCE").Range("Q104")
w(2, 4) = Worksheets("WZORCE").Range("Q105")
w(2, 5) = Worksheets("WZORCE").Range("Q106")
w(2, 6) = Worksheets("WZORCE").Range("Q107")
w(2, 7) = Worksheets("WZORCE").Range("Q108")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "05b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X102")
w(1, 2) = Worksheets("WZORCE").Range("X103")
w(1, 3) = Worksheets("WZORCE").Range("X104")
w(1, 4) = Worksheets("WZORCE").Range("X105")
w(1, 5) = Worksheets("WZORCE").Range("X106")
w(1, 6) = Worksheets("WZORCE").Range("X107")
w(1, 7) = Worksheets("WZORCE").Range("X108")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y102")
w(2, 2) = Worksheets("WZORCE").Range("Y103")
w(2, 3) = Worksheets("WZORCE").Range("Y104")
w(2, 4) = Worksheets("WZORCE").Range("Y105")
w(2, 5) = Worksheets("WZORCE").Range("Y106")
w(2, 6) = Worksheets("WZORCE").Range("Y107")
w(2, 7) = Worksheets("WZORCE").Range("Y108")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "06a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P122")
w(1, 2) = Worksheets("WZORCE").Range("P123")
w(1, 3) = Worksheets("WZORCE").Range("P124")
w(1, 4) = Worksheets("WZORCE").Range("P125")
w(1, 5) = Worksheets("WZORCE").Range("P126")
w(1, 6) = Worksheets("WZORCE").Range("P127")
w(1, 7) = Worksheets("WZORCE").Range("P128")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q122")
w(2, 2) = Worksheets("WZORCE").Range("Q123")
w(2, 3) = Worksheets("WZORCE").Range("Q124")
w(2, 4) = Worksheets("WZORCE").Range("Q125")
w(2, 5) = Worksheets("WZORCE").Range("Q126")
w(2, 6) = Worksheets("WZORCE").Range("Q127")
w(2, 7) = Worksheets("WZORCE").Range("Q128")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "06b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X122")
w(1, 2) = Worksheets("WZORCE").Range("X123")
w(1, 3) = Worksheets("WZORCE").Range("X124")
w(1, 4) = Worksheets("WZORCE").Range("X125")
w(1, 5) = Worksheets("WZORCE").Range("X126")
w(1, 6) = Worksheets("WZORCE").Range("X127")
w(1, 7) = Worksheets("WZORCE").Range("X128")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y122")
w(2, 2) = Worksheets("WZORCE").Range("Y123")
w(2, 3) = Worksheets("WZORCE").Range("Y124")
w(2, 4) = Worksheets("WZORCE").Range("Y125")
w(2, 5) = Worksheets("WZORCE").Range("Y126")
w(2, 6) = Worksheets("WZORCE").Range("Y127")
w(2, 7) = Worksheets("WZORCE").Range("Y128")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If









If NumerTermometru = "07a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P142")
w(1, 2) = Worksheets("WZORCE").Range("P143")
w(1, 3) = Worksheets("WZORCE").Range("P144")
w(1, 4) = Worksheets("WZORCE").Range("P145")
w(1, 5) = Worksheets("WZORCE").Range("P146")
w(1, 6) = Worksheets("WZORCE").Range("P147")
w(1, 7) = Worksheets("WZORCE").Range("P148")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q142")
w(2, 2) = Worksheets("WZORCE").Range("Q143")
w(2, 3) = Worksheets("WZORCE").Range("Q144")
w(2, 4) = Worksheets("WZORCE").Range("Q145")
w(2, 5) = Worksheets("WZORCE").Range("Q146")
w(2, 6) = Worksheets("WZORCE").Range("Q147")
w(2, 7) = Worksheets("WZORCE").Range("Q148")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "07b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X142")
w(1, 2) = Worksheets("WZORCE").Range("X143")
w(1, 3) = Worksheets("WZORCE").Range("X144")
w(1, 4) = Worksheets("WZORCE").Range("X145")
w(1, 5) = Worksheets("WZORCE").Range("X146")
w(1, 6) = Worksheets("WZORCE").Range("X147")
w(1, 7) = Worksheets("WZORCE").Range("X148")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y142")
w(2, 2) = Worksheets("WZORCE").Range("Y143")
w(2, 3) = Worksheets("WZORCE").Range("Y144")
w(2, 4) = Worksheets("WZORCE").Range("Y145")
w(2, 5) = Worksheets("WZORCE").Range("Y146")
w(2, 6) = Worksheets("WZORCE").Range("Y147")
w(2, 7) = Worksheets("WZORCE").Range("Y148")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If








If NumerTermometru = "08a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P162")
w(1, 2) = Worksheets("WZORCE").Range("P163")
w(1, 3) = Worksheets("WZORCE").Range("P164")
w(1, 4) = Worksheets("WZORCE").Range("P165")
w(1, 5) = Worksheets("WZORCE").Range("P166")
w(1, 6) = Worksheets("WZORCE").Range("P167")
w(1, 7) = Worksheets("WZORCE").Range("P168")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q162")
w(2, 2) = Worksheets("WZORCE").Range("Q163")
w(2, 3) = Worksheets("WZORCE").Range("Q164")
w(2, 4) = Worksheets("WZORCE").Range("Q165")
w(2, 5) = Worksheets("WZORCE").Range("Q166")
w(2, 6) = Worksheets("WZORCE").Range("Q167")
w(2, 7) = Worksheets("WZORCE").Range("Q168")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "08b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X162")
w(1, 2) = Worksheets("WZORCE").Range("X163")
w(1, 3) = Worksheets("WZORCE").Range("X164")
w(1, 4) = Worksheets("WZORCE").Range("X165")
w(1, 5) = Worksheets("WZORCE").Range("X166")
w(1, 6) = Worksheets("WZORCE").Range("X167")
w(1, 7) = Worksheets("WZORCE").Range("X168")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y162")
w(2, 2) = Worksheets("WZORCE").Range("Y163")
w(2, 3) = Worksheets("WZORCE").Range("Y164")
w(2, 4) = Worksheets("WZORCE").Range("Y165")
w(2, 5) = Worksheets("WZORCE").Range("Y166")
w(2, 6) = Worksheets("WZORCE").Range("Y167")
w(2, 7) = Worksheets("WZORCE").Range("Y168")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If







If NumerTermometru = "09a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P182")
w(1, 2) = Worksheets("WZORCE").Range("P183")
w(1, 3) = Worksheets("WZORCE").Range("P184")
w(1, 4) = Worksheets("WZORCE").Range("P185")
w(1, 5) = Worksheets("WZORCE").Range("P186")
w(1, 6) = Worksheets("WZORCE").Range("P187")
w(1, 7) = Worksheets("WZORCE").Range("P188")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q182")
w(2, 2) = Worksheets("WZORCE").Range("Q183")
w(2, 3) = Worksheets("WZORCE").Range("Q184")
w(2, 4) = Worksheets("WZORCE").Range("Q185")
w(2, 5) = Worksheets("WZORCE").Range("Q186")
w(2, 6) = Worksheets("WZORCE").Range("Q187")
w(2, 7) = Worksheets("WZORCE").Range("Q188")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "09b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X182")
w(1, 2) = Worksheets("WZORCE").Range("X183")
w(1, 3) = Worksheets("WZORCE").Range("X184")
w(1, 4) = Worksheets("WZORCE").Range("X185")
w(1, 5) = Worksheets("WZORCE").Range("X186")
w(1, 6) = Worksheets("WZORCE").Range("X187")
w(1, 7) = Worksheets("WZORCE").Range("X188")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y182")
w(2, 2) = Worksheets("WZORCE").Range("Y183")
w(2, 3) = Worksheets("WZORCE").Range("Y184")
w(2, 4) = Worksheets("WZORCE").Range("Y185")
w(2, 5) = Worksheets("WZORCE").Range("Y186")
w(2, 6) = Worksheets("WZORCE").Range("Y187")
w(2, 7) = Worksheets("WZORCE").Range("Y188")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If









If NumerTermometru = "10a" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("P202")
w(1, 2) = Worksheets("WZORCE").Range("P203")
w(1, 3) = Worksheets("WZORCE").Range("P204")
w(1, 4) = Worksheets("WZORCE").Range("P205")
w(1, 5) = Worksheets("WZORCE").Range("P206")
w(1, 6) = Worksheets("WZORCE").Range("P207")
w(1, 7) = Worksheets("WZORCE").Range("P208")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Q202")
w(2, 2) = Worksheets("WZORCE").Range("Q203")
w(2, 3) = Worksheets("WZORCE").Range("Q204")
w(2, 4) = Worksheets("WZORCE").Range("Q205")
w(2, 5) = Worksheets("WZORCE").Range("Q206")
w(2, 6) = Worksheets("WZORCE").Range("Q207")
w(2, 7) = Worksheets("WZORCE").Range("Q208")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If






If NumerTermometru = "10b" Then
'zmienne w(1,1)...w(1,7) s|fffd| argumentami ze |fffd|wiadectw wzorcowania
w(1, 1) = Worksheets("WZORCE").Range("X202")
w(1, 2) = Worksheets("WZORCE").Range("X203")
w(1, 3) = Worksheets("WZORCE").Range("X204")
w(1, 4) = Worksheets("WZORCE").Range("X205")
w(1, 5) = Worksheets("WZORCE").Range("X206")
w(1, 6) = Worksheets("WZORCE").Range("X207")
w(1, 7) = Worksheets("WZORCE").Range("X208")
'zmienne w(2,1)...w(2,7) s|fffd| warto|fffd|ciami ze |fffd|wiadectw wzorcowania
w(2, 1) = Worksheets("WZORCE").Range("Y202")
w(2, 2) = Worksheets("WZORCE").Range("Y203")
w(2, 3) = Worksheets("WZORCE").Range("Y204")
w(2, 4) = Worksheets("WZORCE").Range("Y205")
w(2, 5) = Worksheets("WZORCE").Range("Y206")
w(2, 6) = Worksheets("WZORCE").Range("Y207")
w(2, 7) = Worksheets("WZORCE").Range("Y208")
'Funkcja interpoluje poprawki tylko w zakresie w(1,1)...w(1,7)

arg_ni|fffd|szy = 0
arg_wy|fffd|szy = 0
wart_ni|fffd|sza = 0
wart_wy|fffd|sza = 0
' wyszukiwanie 2 najbli|fffd|szych argumentowi punkt|fffd|w wzorcowania

For i = 1 To 7
    If Argument >= w(1, i) And Argument <= w(1, i + 1) Then
    arg_ni|fffd|szy = w(1, i)
    arg_wy|fffd|szy = w(1, i + 1)
    wart_ni|fffd|sza = w(2, i)
    wart_wy|fffd|sza = w(2, i + 1)
    Exit For
    End If
Next

krok = (arg_wy|fffd|szy - arg_ni|fffd|szy) / 10000
arg = 0
wart = 0

For i = 1 To 10000
arg = arg_ni|fffd|szy + i * krok
    If arg >= Argument Then
    wart = wart_ni|fffd|sza + ((wart_wy|fffd|sza - wart_ni|fffd|sza) / 10000) * (i - 1)
    Exit For
    End If
Next

        If Argument >= w(1, 1) And Argument <= w(1, 7) Then
        Termometr = wart
        Else
        Termometr = 0
        End If
End If

End Function
Attribute VB_Name = "Mod_Wielomiany_Los"
Option Explicit

Public Function Wielomian3(Temperatura As Double, s0 As Double, s1 As Double, s2 As Double)
'funkcja wylicza warto|fffd||fffd| wielomianu dla podanego argumentu i wsp|fffd|czynnik|fffd|w wielomianu
Wielomian3 = s2 * Temperatura ^ 2 + s1 * Temperatura + s0
End Function
Public Function Wielomian4(Temperatura As Double, s0 As Double, s1 As Double, s2 As Double, s3 As Double)
'funkcja wylicza warto|fffd||fffd| wielomianu dla podanego argumentu i wsp|fffd|czynnik|fffd|w wielomianu
Wielomian4 = s3 * Temperatura ^ 3 + s2 * Temperatura ^ 2 + s1 * Temperatura + s0
End Function

Public Function Rozmyj(X As Double, Wg|fffd|r|fffd| As Double, Wd|fffd| As Double)
'funkcja dodaje liczb|fffd| losow|fffd| i odejmuje inn|fffd| liczb|fffd| losow|fffd| do liczby X
Rozmyj = X + (X * Rnd * Wg|fffd|r|fffd| * 0.01) - (X * Rnd * Wd|fffd| * 0.01)
End Function
Attribute VB_Name = "Mod_Wolny"
Option Explicit

Attribute VB_Name = "Mod_|fffd|rednia_3D"
Option Explicit

Public Function |fffd|R_test3D(x1 As Double, x2 As Double, x3 As Double, x4 As Double, x5 As Double, x6 As Double, x7 As Double, x8 As Double, x9 As Double, x10 As Double)

'opis: funkcja sprawdza wszystkie elementy zbioru (x) wyliczaj|fffd|c |fffd|redni|fffd| z ca|fffd|o|fffd|ci zbioru lub z reszty zbioru po odrzuceniu najbardziej r|fffd|ni|fffd|cego si|fffd|.
'tabela z danymi do oblicze|fffd|
'd(1,n)     d(2,n)      d(3,n)      d(4,n)          kol.1 zawiera argumenty x.
'x1         d1          1           1               kol.2 zawiera r|fffd|nice x od |fffd|redniej z ca|fffd|ego zbioru x-|fffd|w.
'x2         d2          2           2               kol.3 zawiera argumenty x po zastapieniu b|fffd||fffd|dnego |fffd|redni|fffd| z pozosta|fffd|ych x.-|fffd|w
'x3         d3          3           3
'x4         d4          4           4
'x5         d5          5           5
'x6         d6          6           6
'x7         d7          7           7
'x8         d8          8           8
'x9         d9          9           9
'x10        d10         10          10

Dim X_srednia As Double
Dim D_srednia As Double
Dim d_max As Double
Dim d3D As Integer
Dim X_srednia_zredukowana As Double

'za|fffd|adowanie 1 kolumny tabeli elementami zbioru danych wej|fffd|ciowych
Dim d(1 To 4, 1 To 10) As Double
d(1, 1) = x1
d(1, 2) = x2
d(1, 3) = x3
d(1, 4) = x4
d(1, 5) = x5
d(1, 6) = x6
d(1, 7) = x7
d(1, 8) = x8
d(1, 9) = x9
d(1, 10) = x10


'wype|fffd|nienie danymi trzeciej kolumy
d(3, 1) = d(1, 1)
d(3, 2) = d(1, 2)
d(3, 3) = d(1, 3)
d(3, 4) = d(1, 4)
d(3, 5) = d(1, 5)
d(3, 6) = d(1, 6)
d(3, 7) = d(1, 7)
d(3, 8) = d(1, 8)
d(3, 9) = d(1, 9)
d(3, 10) = d(1, 10)








'===================jest 10 element|fffd|w==============================================================
                    If x10 <> 0 Then

'obliczenie |fffd|redniej ze wszystkich element|fffd|w zbioru w kolumnie 1
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 10



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 10
 
 d_max = 0


'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0 + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0 + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
                    d(3, 5) = X_srednia_zredukowana
                    End If
                    
                       If d_max < d(2, 6) Then
                        d_max = d(2, 6)
                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + 0 + d(2, 7) + d(2, 8) + d(2, 9) + d(2, 10)) / 9
                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + 0 + d(1, 7) + d(1, 8) + d(1, 9) + d(1, 10)) / 9
                        d(3, 6) = X_srednia_zredukowana
                        End If
                    
                            If d_max < d(2, 7) Then
                            d_max = d(2, 7)
                            D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + 0 + d(2, 8) + d(2, 9) + d(2, 10)) / 9
                            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + 0 + d(1, 8) + d(1, 9) + d(1, 10)) / 9
                            d(3, 7) = X_srednia_zredukowana
                            End If
                   
                                If d_max < d(2, 8) Then
                                d_max = d(2, 8)
                                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + 0 + d(2, 9) + d(2, 10)) / 9
                                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + 0 + d(1, 9) + d(1, 10)) / 9
                                d(3, 8) = X_srednia_zredukowana
                                End If
                    
                                    If d_max < d(2, 9) Then
                                    d_max = d(2, 9)
                                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + 0 + d(2, 10)) / 9
                                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + 0 + d(1, 10)) / 9
                                    d(3, 9) = X_srednia_zredukowana
                                    End If
                                        
                                        If d_max < d(2, 10) Then
                                        d_max = d(2, 10)
                                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9) + 0) / 9
                                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9) + 0) / 9
                                        d(3, 10) = X_srednia_zredukowana
                                        End If
                    
                    
                                    
                    
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
                    End If
 '==================koniec 10 element|fffd|w==============================================================
 
 
 
 
 
 '==================jest 9 element|fffd|w==============================================================
                    If x10 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 9



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 9
 
 d_max = 0


'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 8
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 8
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 8
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 8
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 8
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 8
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 8
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 8
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0 + d(2, 6) + d(2, 7) + d(2, 8) + d(2, 9)) / 8
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0 + d(1, 6) + d(1, 7) + d(1, 8) + d(1, 9)) / 8
                    d(3, 5) = X_srednia_zredukowana
                    End If
                    
                       If d_max < d(2, 6) Then
                        d_max = d(2, 6)
                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + 0 + d(2, 7) + d(2, 8) + d(2, 9)) / 8
                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + 0 + d(1, 7) + d(1, 8) + d(1, 9)) / 8
                        d(3, 6) = X_srednia_zredukowana
                        End If
                    
                            If d_max < d(2, 7) Then
                            d_max = d(2, 7)
                            D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + 0 + d(2, 8) + d(2, 9)) / 8
                            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + 0 + d(1, 8) + d(1, 9)) / 8
                            d(3, 7) = X_srednia_zredukowana
                            End If
                   
                                If d_max < d(2, 8) Then
                                d_max = d(2, 8)
                                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + 0 + d(2, 9)) / 8
                                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + 0 + d(1, 9)) / 8
                                d(3, 8) = X_srednia_zredukowana
                                End If
                    
                                    If d_max < d(2, 9) Then
                                    d_max = d(2, 9)
                                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8) + 0) / 8
                                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8) + 0) / 8
                                    d(3, 9) = X_srednia_zredukowana
                                    End If
                                        
                                
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
 '==================koniec 9 element|fffd|w==============================================================

 
 
 
 
 
'==================jest 8 element|fffd|w==============================================================
                    If x9 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8)) / 8



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8)) / 8
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8)) / 7
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8)) / 7
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8)) / 7
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8)) / 7
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8)) / 7
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8)) / 7
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5) + d(2, 6) + d(2, 7) + d(2, 8)) / 7
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5) + d(1, 6) + d(1, 7) + d(1, 8)) / 7
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0 + d(2, 6) + d(2, 7) + d(2, 8)) / 7
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0 + d(1, 6) + d(1, 7) + d(1, 8)) / 7
                    d(3, 5) = X_srednia_zredukowana
                    End If
                    
                       If d_max < d(2, 6) Then
                        d_max = d(2, 6)
                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + 0 + d(2, 7) + d(2, 8)) / 7
                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + 0 + d(1, 7) + d(1, 8)) / 7
                        d(3, 6) = X_srednia_zredukowana
                        End If
                    
                            If d_max < d(2, 7) Then
                            d_max = d(2, 7)
                            D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + 0 + d(2, 8)) / 7
                            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + 0 + d(1, 8)) / 7
                            d(3, 7) = X_srednia_zredukowana
                            End If
                   
                                If d_max < d(2, 8) Then
                                d_max = d(2, 8)
                                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7) + 0) / 7
                                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7) + 0) / 7
                                d(3, 8) = X_srednia_zredukowana
                                End If
                    
                                                                           
                                
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
 '==================koniec 8 element|fffd|w==============================================================
 
 
 
 
 
 
'==================jest 7 element|fffd|w==============================================================
                    If x8 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7)) / 7



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7)) / 7
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7)) / 6
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7)) / 6
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7)) / 6
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7)) / 6
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5) + d(2, 6) + d(2, 7)) / 6
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5) + d(1, 6) + d(1, 7)) / 6
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5) + d(2, 6) + d(2, 7)) / 6
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5) + d(1, 6) + d(1, 7)) / 6
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0 + d(2, 6) + d(2, 7)) / 6
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0 + d(1, 6) + d(1, 7)) / 6
                    d(3, 5) = X_srednia_zredukowana
                    End If
                    
                       If d_max < d(2, 6) Then
                        d_max = d(2, 6)
                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + 0 + d(2, 7)) / 6
                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + 0 + d(1, 7)) / 6
                        d(3, 6) = X_srednia_zredukowana
                        End If
                    
                            If d_max < d(2, 7) Then
                            d_max = d(2, 7)
                            D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6) + 0) / 6
                            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6) + 0) / 6
                            d(3, 7) = X_srednia_zredukowana
                            End If
                   
                                                                           
                                
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
'===================koniec 7 element|fffd|w==============================================================
 
 
 
 
 
 
'===================jest 6 element|fffd|w==============================================================
                    If x7 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6)) / 6



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6)) / 6
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6)) / 5
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6)) / 5
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5) + d(2, 6)) / 5
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5) + d(1, 6)) / 5
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5) + d(2, 6)) / 5
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5) + d(1, 6)) / 5
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5) + d(2, 6)) / 5
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5) + d(1, 6)) / 5
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0 + d(2, 6)) / 5
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0 + d(1, 6)) / 5
                    d(3, 5) = X_srednia_zredukowana
                    End If
                    
                       If d_max < d(2, 6) Then
                        d_max = d(2, 6)
                        D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5) + 0) / 5
                        X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5) + 0) / 5
                        d(3, 6) = X_srednia_zredukowana
                        End If
    
                   
                                                                                                  
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
'===================koniec 6 element|fffd|w==============================================================
 
 
 
 
 
 
'===================jest 5 element|fffd|w==============================================================
                    If x6 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5)) / 5



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5)) / 5
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4) + d(2, 5)) / 4
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4) + d(1, 5)) / 4
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4) + d(2, 5)) / 4
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4) + d(1, 5)) / 4
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4) + d(2, 5)) / 4
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4) + d(1, 5)) / 4
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0 + d(2, 5)) / 4
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0 + d(1, 5)) / 4
                d(3, 4) = X_srednia_zredukowana
                End If
                
                    If d_max < d(2, 5) Then
                    d_max = d(2, 5)
                    D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4) + 0) / 4
                    X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4) + 0) / 4
                    d(3, 5) = X_srednia_zredukowana
                    End If
                   
                                                                                                  
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
 '==================koniec 5 element|fffd|w==============================================================
 
 
 
 
 
 
 
'===================jest 4 element|fffd|w==============================================================
                    If x5 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3) + d(1, 4)) / 4



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + d(2, 4)) / 4
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3) + d(2, 4)) / 3
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3) + d(1, 4)) / 3
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3) + d(2, 4)) / 3
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3) + d(1, 4)) / 3
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0 + d(2, 4)) / 3
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0 + d(1, 4)) / 3
            d(3, 3) = X_srednia_zredukowana
            End If
            
                If d_max < d(2, 4) Then
                d_max = d(2, 4)
                D_srednia = (d(2, 1) + d(2, 2) + d(2, 3) + 0) / 3
                X_srednia_zredukowana = (d(1, 1) + d(1, 2) + d(1, 3) + 0) / 3
                d(3, 4) = X_srednia_zredukowana
                End If
                
                                                                                                  
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
'===================koniec 4 element|fffd|w==============================================================
 
 
 
 
 
 
'===================jest 3 element|fffd|w==============================================================
                    If x4 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2) + d(1, 3)) / 3



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2) + d(2, 3)) / 3
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2) + d(2, 3)) / 2
    X_srednia_zredukowana = (0 + d(1, 2) + d(1, 3)) / 2
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0 + d(2, 3)) / 2
        X_srednia_zredukowana = (d(1, 1) + 0 + d(1, 3)) / 2
        d(3, 2) = X_srednia_zredukowana
        End If
        
            If d_max < d(2, 3) Then
            d_max = d(2, 3)
            D_srednia = (d(2, 1) + d(2, 2) + 0) / 2
            X_srednia_zredukowana = (d(1, 1) + d(1, 2) + 0) / 2
            d(3, 3) = X_srednia_zredukowana
            End If
            
                                                                                                  
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
'==================koniec 3 element|fffd|w==============================================================
 
 
 
 
 
'===================jest 2 element|fffd|w==============================================================
                    If x3 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1) + d(1, 2)) / 2



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)



'wyliczenie |fffd|redniej r|fffd|nicy ze wszystkich r|fffd|nic
 D_srednia = (d(2, 1) + d(2, 2)) / 2
 
 d_max = 0
 

'odszukanie najwi|fffd|kszej r|fffd|nicy i wyliczenie |fffd|redniej z x i D_|fffd|rednia po odrzuceniu podejrzanego elementu x
    If d_max < d(2, 1) Then
    d_max = d(2, 1)
    D_srednia = (0 + d(2, 2)) / 1
    X_srednia_zredukowana = (0 + d(1, 2)) / 1
    d(3, 1) = X_srednia_zredukowana
    End If
   
        If d_max < d(2, 2) Then
        d_max = d(2, 2)
        D_srednia = (d(2, 1) + 0) / 1
        X_srednia_zredukowana = (d(1, 1) + 0) / 1
        d(3, 2) = X_srednia_zredukowana
        End If
        
                                                                                                
                          
                   
'utworzenie warto|fffd|ci 3D dla sprawdzenia warunku 3D.
 d3D = D_srednia * 3

'przeprowadenie testu 3D. Je|fffd|eli d_max >d3D to nale|fffd|y odrzuci|fffd| ten element, w przeciwnym wypadku nic nie odrzuca|fffd|.
 If d_max > d3D Then
'podej|fffd|enie b|fffd||fffd|du potwierdzone, odrzucamy jeden element a wynikiem procedury jest |fffd|rednia z pozosta|fffd|ych
 |fffd|R_test3D = X_srednia_zredukowana
 
 Else

'odrzucenie elementu by|fffd|o niepotrzebne, przywracamy go z powrotem to tabeli a wynikiem jest |fffd|rednia z ca|fffd|o|fffd|ci zbioru.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10
 End If
 
                    End If
'==================koniec 2 element|fffd|w==============================================================
 
 
 
 
'===================jest 1 element|fffd|w==============================================================
                    If x2 = 0 Then
'obliczenie |fffd|redniej z 9 pierwszych element|fffd|w zbioru w kolumnie 1, poniewa|fffd| ostaniego brak czyli = 0
X_srednia = (d(1, 1)) / 1



X_srednia_zredukowana = 0
|fffd|R_test3D = 0
'za|fffd|adowanie 2 kolumny r|fffd|nicami poszczeg|fffd|lnych element|fffd|w od |fffd|redniej z ca|fffd|ego zbioru (d1...d6)
d(2, 1) = Abs(X_srednia - x1)
d(2, 2) = Abs(X_srednia - x2)
d(2, 3) = Abs(X_srednia - x3)
d(2, 4) = Abs(X_srednia - x4)
d(2, 5) = Abs(X_srednia - x5)
d(2, 6) = Abs(X_srednia - x6)
d(2, 7) = Abs(X_srednia - x7)
d(2, 8) = Abs(X_srednia - x8)
d(2, 9) = Abs(X_srednia - x9)
d(2, 10) = Abs(X_srednia - x10)


'odrzucanie nie ma sensu.
 |fffd|R_test3D = X_srednia
 d(3, 1) = x1
 d(3, 2) = x2
 d(3, 3) = x3
 d(3, 4) = x4
 d(3, 5) = x5
 d(3, 6) = x6
 d(3, 7) = x7
 d(3, 8) = x8
 d(3, 9) = x9
 d(3, 10) = x10

 
                    End If
'==================koniec 1 element|fffd|w==============================================================
 
 
 
 
 
 
 
 
 
 
 
'------------------------------------------------------------------------------------------------------------------------
' tutaj mo|fffd|na dopisa|fffd| nast|fffd|pn|fffd| rund|fffd| tego samego algorytmu.

End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{FF3FD17D-F1C7-428B-8C3D-7A7149ED2B3D}{97452C61-1B36-4272-8356-75C721457C74}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "clsInfo"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public WithEvents LabelData As MSForms.Label
Attribute LabelData.VB_VarHelpID = -1

Private Sub LabelData_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  Dim iDzien As Integer, dData As Date, iLicz As Integer
  
  On Error GoTo ERR_EXIT
  iDzien = CInt(LabelData.Caption)
  'W tej procedurze zdarzeniowej mo|fffd|na stworzy|fffd| r|fffd|ne kombinacje dzia|fffd|ania kodu
  'w zale|fffd|no|fffd|ci od naci|fffd|ni|fffd|tego(-ych) klawisza(-y)
  
  'bez klawisza    Shift=0           z Alt              Shift=4
  'z Shift         Shift=1           z Shift+Alt        Shift=5
  'z Ctrl          Shift=2           z Ctrl+Alt         Shift=6
  'z Shift+Ctrl    Shift=3           z Shift+Ctrl+Alt   Shift=7
  
  'Dla przyk|fffd|adu utworzono specjalne dzia|fffd|anie procedury w przypadku
  'klikni|fffd|cia na dowolny dzie|fffd| miesi|fffd|ca z u|fffd|yciem klawiszy Shift, Ctrl, a nawet klawisza Alt
  dData = DateSerial(iRok, iMiesiac, iDzien)
  With ActiveSheet
    With ActiveCell
'bez klawiszy - czysta data
       If Shift = 0 Then
          .Value = dData
          .Offset(1, 0).Select
          LabelData.SpecialEffect = 2
'z Shiftem - data i dzie|fffd| tygodnia
       ElseIf Shift = 1 Then
'formatowanie daty ,ze wzgl|fffd|du na u|fffd|ycie funkcji Array, kt|fffd|ra w Excelu'97 powoduje
'konwersj|fffd| danych
          .Resize(, 2) = Array(Format(dData, "yyyy/mm/dd"), DzienTygodnia(dData))
          .Offset(1, 0).Select
          LabelData.SpecialEffect = 2
'z Ctrl - data, dzie|fffd| tygodnia i ewentualne |fffd|wi|fffd|to
       ElseIf Shift = 2 Then
          .Resize(, 3) = Array(Format(dData, "yyyy/mm/dd"), DzienTygodnia(dData), _
                          LabelData.ControlTipText)
          .Offset(1, 0).Select
          LabelData.SpecialEffect = 2
'z Shiftem i Ctrl - miesi|fffd|c (data,dzie|fffd| tyg.+ ewentualne |fffd|wi|fffd|to,nr kolejny dnia roku)
       ElseIf Shift = 3 Then
          dData = DateSerial(iRok, iMiesiac, 0)
          For iLicz = LBound(tblDni) To UBound(tblDni)
            .Resize(, 3).Value = Array("DATA", "DZIE|fffd|.TYG", "DZIE|fffd| ROKU")
            .Offset(iLicz, 0).Resize(, 3).Value = Array(Format(dData + iLicz, "yyyy/mm/dd"), _
                           DzienTygodnia(dData + iLicz) _
                           & " " & tblDni(iLicz).LabelData.ControlTipText, _
                           DateDiff("d", DateSerial(iRok, 1, 1), (dData + iLicz)) + 1)
          Next iLicz
       Else
           MsgBox "To jest przyk|fffd|ad dla innych rozwi|fffd|za|fffd| oprogramowania zdarzenia.", _
                   vbInformation, LabelData.Caption
       End If
    End With
  End With
Exit Sub
    '-------- koniec przyk|fffd|adu --------
    
ERR_EXIT:
  MsgBox "B|fffd||fffd|d nr - " & Err.Number & vbCrLf _
         & "Opis - " & Err.Description & vbCrLf, _
         vbCritical, "Niepowodzenie"
End Sub
Attribute VB_Name = "frmKalendarz"
Attribute VB_Base = "0{C9B26C9C-2AFE-47ED-8F18-98E1A4B164E8}{6C6B2FC9-65D7-4512-8A2E-BD4580FBF2FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
 Dim iLicz As Integer

Private Sub cmbMiesiac_Change()
 Dim iStart As Integer, iKoniec As Integer, iLiczDni As Integer
 
 iMiesiac = Me.cmbMiesiac.ListIndex + 1
 iStart = Weekday(DateSerial(iRok, iMiesiac, 1), vbMonday) - 1
 iKoniec = Day(DateSerial(iRok, iMiesiac + 1, 0)) + iStart
 iLiczDni = 1
 ReDim tblDni(1 To Day(DateSerial(iRok, iMiesiac + 1, 0)))
 For iLicz = 0 To 36
   With Me.Controls(iLicz)
     .BackColor = &H8000000F
     .ControlTipText = ""
     .SpecialEffect = 0
     If iLicz >= iStart And iLicz < iKoniec Then
        .Caption = iLiczDni
        .Visible = True
        Set tblDni(iLiczDni).LabelData = frmKalendarz.Controls(iLicz)
            iLiczDni = iLiczDni + 1
      ElseIf iLicz < iStart Or iLicz >= iKoniec Then
             .Caption = ""
             .Visible = False
      End If
   End With
 Next iLicz
 iStart = iStart - 1
 For iLicz = LBound(vTblSw) To UBound(vTblSw)
      If vTblSw(iLicz)(0) = iMiesiac Then
        With Me.Controls(vTblSw(iLicz)(1) + iStart)
             .ControlTipText = vTblSw(iLicz)(2)
             .BackColor = &HC0C0FF
        End With
      ElseIf vTblSw(iLicz)(0) > iMiesiac Then
        Exit For
      End If
 Next iLicz
Me.Caption = NazwaMiesiaca(iMiesiac) & " " & iRok
End Sub

Private Sub spbRok_Change()
 iRok = Me.spbRok.Value
 Call KalendarzRoku(iRok)
   If Len(Me.cmbMiesiac.Value) > 0 Then
      cmbMiesiac_Change
   End If
 lblRok = spbRok.Value
End Sub

Private Sub UserForm_Initialize()
 With Me
   With .spbRok
        .Max = Year(Date) + 15
        .Value = Year(Date)
        .Min = Year(Date) - 10
   End With
   With .cmbMiesiac
      For iLicz = 1 To 12
        .AddItem NazwaMiesiaca(iLicz)
      Next iLicz
        .Style = fmStyleDropDownList
        .ListRows = 12
        .ListIndex = Month(Date) - 1
   End With
 End With
End Sub
Attribute VB_Name = "modFunkcje"
Option Explicit
'----------------------------------------------------------------------------------'
'HELP
'Jawne Deklarowanie:
'Deklarowanie zmiennych za pomoc|fffd| s|fffd||fffd|w kluczowych Dim, Private, Public, oraz Static nazywamy jawnym deklarowaniem.
'Zmienna w j|fffd|zyku Visual Basic mo|fffd|e by|fffd| te|fffd| niejawnie zadeklarowana po prostu przez u|fffd|ycie jej w instrukcji przypisania.
'Wszystkie zmienne zadeklarowane niejawnie s|fffd| typu Variant.
'Zmienne typu Variant wymagaj|fffd| wi|fffd|cej zasob|fffd|w pami|fffd|ci ni|fffd| wi|fffd|kszo|fffd||fffd| innych zmiennych.
'Jawne deklarowanie wszystkich zmiennych redukuje niebezpiecze|fffd|stwo wyst|fffd|pienia b|fffd||fffd|d|fffd|w wynikaj|fffd|cych z konflikt|fffd|w nazw i pomy|fffd|ek w pisowni.
'Aby unikn|fffd||fffd| przykrych niespodzianek dobrze by|fffd|oby wyrobi|fffd| sobie nawyk jawnego deklarowania wszystkich zmiennych.
'Bardzo pomocna w tym mo|fffd|e okaza|fffd| si|fffd| instrukcja Option Explicit.
'Je|fffd|eli w sekcji deklaracji modu|fffd|u kodu wpiszesz:
'Option Explicit
'VBA wy|fffd|wietli komunikat o b|fffd||fffd|dzie, ilekro|fffd| wykryje niezadeklarowan|fffd| zmienn|fffd|.
'W takim przypadku mo|fffd|emy doda|fffd| brakuj|fffd|c|fffd| deklaracj|fffd|.
'Instrukcja Option Explicit wykorzystywana jest na poziomie modu|fffd|u w celu wymuszenia jawnego deklarowania wszystkich zmiennych w danym module.
'------------------------------------------------------------------------------------'
'http://dzono4.w.interia.pl/kurs/zmienne.htm
'------------------------------------------------------------------------------------'





Public Function NazwaDnia(NumerDnia As Integer)
'funkcja podaje nazw|fffd| dnia tygodnia na podstawie jego numeru w formacie 2.

'budowa tabeli z nazwami dni tygodnia
Dim tydzien(1 To 7) As String
tydzien(1) = "(Poniedzia|fffd|ek)"
tydzien(2) = "(Wtorek)"
tydzien(3) = "(|fffd|roda)"
tydzien(4) = "(Czwartek)"
tydzien(5) = "(Pi|fffd|tek)"
tydzien(6) = "(Sobota)"
tydzien(7) = "(Niedziela)"

'przypisanie nazwy do numeru
If NumerDnia = 1 Then
NazwaDnia = tydzien(1)
ElseIf NumerDnia = 2 Then
NazwaDnia = tydzien(2)
ElseIf NumerDnia = 3 Then
NazwaDnia = tydzien(3)
ElseIf NumerDnia = 4 Then
NazwaDnia = tydzien(4)
ElseIf NumerDnia = 5 Then
NazwaDnia = tydzien(5)
ElseIf NumerDnia = 6 Then
NazwaDnia = tydzien(6)
ElseIf NumerDnia = 7 Then
NazwaDnia = tydzien(7)
End If

End Function

Public Function DataW(Data As Date, Czasookres As Integer, Jednostka As String)
'funkcja podaje drug|fffd| dat|fffd| na podstawie podanej daty, jednostek czasookresu i czasookresu

'deklaracja zmiennych
Dim dzien As Integer
Dim miesiac As Integer
Dim rok As Integer
Dim i As Integer

'budowa tabeli z kalendarzem
Dim kalendarz(2000 To 2050, 1 To 12) As Integer
For i = 2000 To 2050
kalendarz(i, 1) = 31
kalendarz(i, 2) = 28
kalendarz(i, 3) = 31
kalendarz(i, 4) = 30
kalendarz(i, 5) = 31
kalendarz(i, 6) = 30
kalendarz(i, 7) = 31
kalendarz(i, 8) = 31
kalendarz(i, 9) = 30
kalendarz(i, 10) = 31
kalendarz(i, 11) = 30
kalendarz(i, 12) = 31
Next

For i = 2000 To 2050 Step 4
kalendarz(i, 2) = 29
Next i

'podstawianie danych pod zmienne
DataW = Data
dzien = Day(Data)
rok = Year(Data)
miesiac = Month(Data)

'dodawanie czasookresu w latach
If Jednostka = "r" Or Jednostka = "R" Then
rok = rok + Czasookres
    If dzien > kalendarz(rok, miesiac) Then
    dzien = dzien - 1
    End If
End If

'dodawanie czasookresu w miesi|fffd|cach
If Jednostka = "m" Or Jednostka = "M" Then
miesiac = miesiac + Czasookres
    For i = 1 To 100
        If miesiac > 12 Then
        miesiac = miesiac - 12
        rok = rok + 1
        End If
    Next

    If dzien > kalendarz(rok, miesiac) Then
    dzien = dzien - 1
    End If
        If dzien > kalendarz(rok, miesiac) Then
        dzien = dzien - 1
        End If
            If dzien > kalendarz(rok, miesiac) Then
            dzien = dzien - 1
            End If
End If




'dodawanie czasookresu w dniach
If Jednostka = "d" Or Jednostka = "D" Then
dzien = dzien + Czasookres

    For i = 1 To 100
        If dzien > kalendarz(rok, miesiac) Then
        dzien = dzien - kalendarz(rok, miesiac)
        miesiac = miesiac + 1
        End If
            If miesiac > 12 Then
            miesiac = miesiac - 12
            rok = rok + 1
            End If
    Next
End If


'sk|fffd|adanie daty nast|fffd|pnego wzorcowania
DataW = DateSerial(rok, miesiac, dzien)

End Function




Function IleDniRoboczych(ByVal StartData As Date, ByVal StopData As Date) As Variant
Attribute IleDniRoboczych.VB_Description = "ZWRACA LICZB|fffd| DNI ROBOCZYCH POMI|fffd|DZY DWOMA DATAMI.\nUwzgl|fffd|dnia 12 dni |fffd|wi|fffd|tecznych wg stanu na dzie|fffd| 01-01-2007."
Attribute IleDniRoboczych.VB_ProcData.VB_Invoke_Func = " \n14"
'wg stanu prawnego na dzie|fffd| 01 stycznia 2007 roku (12 dni |fffd|wi|fffd|tecznych)
 Dim dDataWielkanoc As Date, lOkres As Long, lWolne As Long, dLicz As Date, lRok As Long
 
 If StartData <= StopData Then
    lOkres = DateDiff("d", StartData, StopData) + 1
    lRok = Year(StartData)
    dDataWielkanoc = Wielkanoc(lRok)
   For dLicz = StartData To StopData
     If lRok <> Year(dLicz) Then
        lRok = Year(dLicz)
        dDataWielkanoc = Wielkanoc(lRok)
     End If
     If Weekday(dLicz, vbMonday) = 6 Or Weekday(dLicz, vbMonday) = 7 Then
        lWolne = lWolne + 1
     ElseIf Weekday(dLicz, vbMonday) < 6 Then
        Select Case dLicz
               Case DateSerial(lRok, 1, 1), dDataWielkanoc + 1, _
                    DateSerial(lRok, 5, 1), DateSerial(lRok, 5, 3), _
                    dDataWielkanoc + 60, DateSerial(lRok, 8, 15), _
                    DateSerial(lRok, 11, 1), DateSerial(lRok, 11, 11), _
                    DateSerial(lRok, 12, 25), DateSerial(lRok, 12, 26)
                    lWolne = lWolne + 1
        End Select
     End If
   Next dLicz
  IleDniRoboczych = lOkres - lWolne
 Else
  IleDniRoboczych = CVErr(xlErrValue)
 End If
End Function

Function PierwszyDzienRoboczy(ByVal dData As Date) As Date
Attribute PierwszyDzienRoboczy.VB_Description = "ZWRACA DAT|fffd| PIERWSZEGO DNIA ROBOCZEGO DLA WSKAZANEJ DATY.\nUwzgl|fffd|dnia 12 dni |fffd|wi|fffd|trecznych wg stanu na dzie|fffd| 01-01-2007."
Attribute PierwszyDzienRoboczy.VB_ProcData.VB_Invoke_Func = " \n14"
 Dim dDataWielkanoc       As Date
 Dim bytIndeks            As Byte
 dData = dData + 1
 dDataWielkanoc = Wielkanoc(Year(dData))
 Do
    bytIndeks = 0
    Select Case Weekday(dData, vbMonday)
        Case 6
             bytIndeks = 2
        Case 7
             bytIndeks = 1
    End Select
    dData = dData + bytIndeks
    bytIndeks = 0
   Select Case dData
        Case DateSerial(Year(dData), 1, 1), dDataWielkanoc + 1, DateSerial(Year(dData), 5, 1), _
             DateSerial(Year(dData), 5, 3), dDataWielkanoc + 60, DateSerial(Year(dData), 8, 15), _
             DateSerial(Year(dData), 11, 1), DateSerial(Year(dData), 11, 11), DateSerial(Year(dData), 12, 26)
             bytIndeks = 1
        Case DateSerial(Year(dData), 12, 25)
             bytIndeks = 2
   End Select
    dData = dData + bytIndeks
   Loop Until bytIndeks = 0
 PierwszyDzienRoboczy = dData
End Function

Function Wielkanoc(ByVal rok As Integer) As Date
Attribute Wielkanoc.VB_Description = "USTALA DAT|fffd| PIERWSZEGO DNIA |fffd|WI|fffd|T WIELKANOCNYCH"
Attribute Wielkanoc.VB_ProcData.VB_Invoke_Func = " \n14"
'http://www.cpearson.com/excel/holidays.htm
'poprawna dla lat 1900 - 2099
  Dim id    As Integer
  id = (((255 - 11 * (rok Mod 19)) - 21) Mod 30) + 21
  Wielkanoc = DateSerial(rok, 3, 1) + id + (id > 48) + 6 - ((rok + rok \ 4 + _
              id + (id > 48) + 1) Mod 7)
End Function

Function DzienTygodnia(dData As Date) As String
Attribute DzienTygodnia.VB_Description = "SUBSTYTUT FUNKCJI WeekdayName NIEOBECNEJ W EXCELU 97"
Attribute DzienTygodnia.VB_ProcData.VB_Invoke_Func = " \n14"
  'dla Excel'97
  DzienTygodnia = Choose(Weekday(dData, vbMonday), "Pn", "Wt", "|fffd|r", "Cz", "Pt", "So", "N")
End Function
Function NazwaMiesiaca(NrMiesiaca As Integer) As String
 'dla Excel'97
 NazwaMiesiaca = Choose(NrMiesiaca, "Stycze|fffd|", "Luty", "Marzec", "Kwiecie|fffd|", "Maj", _
                                   "Czerwiec", "Lipiec", "Sierpie|fffd|", "Wrzesie|fffd|", _
                                   "Pa|fffd|dziernik", "Listopad", "Grudzie|fffd|")
End Function






Public Function InterLinPop(TemperaturaNi|fffd|sza As Double, PoprawkaNi|fffd|sza As Double, TemperaturaWy|fffd|sza As Double, PoprawkaWy|fffd|sza As Double, Temperatura As Double)
'funkcja interpoluje liniowo pomi|fffd|dzy dwoma punktami wzorcowania).
'InterLinPop(T1;P1;T2;P2;T) gdzie T1-temp.wzorc.ni|fffd|sza, P1-popr.ni|fffd|sza, T2-temp.wzorc.wy|fffd|sza, P2-popr.wy|fffd|sza, t-temp.wymagana, wynikiem jest poprawka.
'funkcja mo|fffd|e interpolowac r|fffd|wnie|fffd| si|fffd||fffd|.
Dim PrzyrostTemperatury As Double
Dim PrzyrostPoprawki As Double
Dim PrzyrostPoprawkiNaStopie|fffd| As Double
Dim Nadwy|fffd|kaTemperatury As Double
Dim Poprawka As Double




             PrzyrostTemperatury = TemperaturaWy|fffd|sza - TemperaturaNi|fffd|sza
             PrzyrostPoprawki = PoprawkaWy|fffd|sza - PoprawkaNi|fffd|sza
             PrzyrostPoprawkiNaStopie|fffd| = PrzyrostPoprawki / PrzyrostTemperatury
             Nadwy|fffd|kaTemperatury = Temperatura - TemperaturaNi|fffd|sza
             Poprawka = (PrzyrostPoprawkiNaStopie|fffd| * Nadwy|fffd|kaTemperatury) + PoprawkaNi|fffd|sza

InterLinPop = Poprawka

End Function






Attribute VB_Name = "modKalendarz"
Option Explicit
Option Private Module

Sub KalendarzRoku(ByVal iRok As Integer)
 Dim dData As Date
    
   dData = DateSerial(iRok, 1, 1)
  vTblSw(1) = Array(Month(dData), Day(dData), "Nowy Rok")
   dData = Wielkanoc(iRok)
  vTblSw(2) = Array(Month(dData), Day(dData), "Wielkanoc")
   dData = dData + 1
  vTblSw(3) = Array(Month(dData), Day(dData), "Wielkanoc")
   dData = DateSerial(iRok, 5, 1)
  vTblSw(4) = Array(Month(dData), Day(dData), "|fffd|wi|fffd|to Pracy")
   dData = DateSerial(iRok, 5, 3)
  vTblSw(5) = Array(Month(dData), Day(dData), "3 Maja")
   dData = Wielkanoc(iRok) + 49
  vTblSw(6) = Array(Month(dData), Day(dData), "Zielone |fffd|wi|fffd|tki")
   dData = dData + 11
  vTblSw(7) = Array(Month(dData), Day(dData), "Bo|fffd|e Cia|fffd|o")
   dData = DateSerial(iRok, 8, 15)
  vTblSw(8) = Array(Month(dData), Day(dData), "Wniebowzi|fffd|cie NMP")
   dData = DateSerial(iRok, 11, 1)
  vTblSw(9) = Array(Month(dData), Day(dData), "Wszystkich |fffd|wi|fffd|tych")
   dData = DateSerial(iRok, 11, 11)
  vTblSw(10) = Array(Month(dData), Day(dData), "|fffd|wi|fffd|to Niepodleg|fffd|o|fffd|ci")
   dData = DateSerial(iRok, 12, 25)
  vTblSw(11) = Array(Month(dData), Day(dData), "Bo|fffd|e Narodzenie")
   dData = DateSerial(iRok, 12, 26)
  vTblSw(12) = Array(Month(dData), Day(dData), "Bo|fffd|e Narodzenie")
End Sub
Attribute VB_Name = "modPublic"
Option Explicit

 Public vTblSw(1 To 12) As Variant
 Public iRok            As Integer
 Public iMiesiac        As Integer
 Public tblDni()        As New clsInfo
Attribute VB_Name = "modStart"
Option Explicit

Sub Start()    ' skr|fffd|t klawiszowy CTRL + SHIFT + k
Attribute Start.VB_ProcData.VB_Invoke_Func = "K\n14"
'kompilacja warunkowa dla zachowania zgodno|fffd|ci z Excel'97
#If VBA6 Then
    frmKalendarz.Show vbModeless
#Else
    frmKalendarz.Show
#End If
End Sub

' InQuest injected base64 decoded content
' kk	"5

INQUEST-PP=macro
