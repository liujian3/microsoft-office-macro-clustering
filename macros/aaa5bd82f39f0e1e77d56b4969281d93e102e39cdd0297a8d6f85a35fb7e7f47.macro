Attribute VB_Name = "C01OtherWorkbook"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private WithEvents Workbook As Excel.Workbook
Attribute Workbook.VB_VarHelpID = -1
Private Sub Class_Initialize()
    
  If W_REPBOOK <> "" Then
     Set Workbook = Workbooks(W_REPBOOK)
  End If
  If W_FNDBOOK <> "" Then
     Set Workbook = Workbooks(W_FNDBOOK)
  End If

End Sub
Private Sub Workbook_SheetChange(ByVal SH As Object, ByVal Target As Range)
    
  Set OWB = Nothing

End Sub
Private Sub Workbook_NewSheet(ByVal SH As Object)

  Set OWB = Nothing

End Sub
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

  Set OWB = Nothing

End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)

  Set OWB = Nothing

End Sub
Private Sub Class_Terminate()
    
  Set Workbook = Nothing
  If SW_UNDO = False Then
     W_REPBOOK = ""
     W_FNDBOOK = ""
     Erase AR_REP
     SW_HIDE = True
     SW_HIDE = False
     On Error Resume Next
     AppActivate Application.Caption
     On Error GoTo 0
  End If

End Sub
Attribute VB_Name = "C03Excel"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public WithEvents APP As Application
Attribute APP.VB_VarHelpID = -1

Private Sub APP_NewWorkbook(ByVal WB As Workbook)

'  If Val(Application.Version) >= 15 Then
'     Call KILLTM_MM
'  End If
  
  Call MAP_RESET

'  If Val(Application.Version) >= 15 Then
'     Call SETTM_MM
'  End If

End Sub

Private Sub APP_SheetActivate(ByVal SH As Object)
  
  Call MAP_RESET

End Sub

Private Sub APP_SheetCalculate(ByVal SH As Object)

  Call MAP_RESET

End Sub

Private Sub APP_SheetChange(ByVal SH As Object, ByVal Target As Range)
  
  Dim W_SEL As Range
  Dim W_AC As Range
  
  Application.EnableEvents = False
  On Error Resume Next
  Set W_SEL = Selection
  Set W_AC = ActiveCell
  On Error GoTo LABEL_ERROR
  Application.Undo
  Application.Undo
'  If Target.Count = 1 Then
'     Select Case Application.MoveAfterReturnDirection
'     Case xlDown
'        If Target.Row <> Rows.Count Then
'           Cells(Target.Row + 1, Target.Column).Select
'        End If
'     Case xlUp
'        If Target.Row <> 1 Then
'           Cells(Target.Row - 1, Target.Column).Select
'        End If
'     Case xlToRight
'        If Target.Column <> Columns.Count Then
'           Cells(Target.Row, Target.Column + 1).Select
'        End If
'     Case xlToLeft
'        If Target.Column <> 1 Then
'           Cells(Target.Row, Target.Column - 1).Select
'        End If
'     End Select
'  End If
  On Error Resume Next
  W_SEL.Select
  Set W_SEL = Nothing
  W_AC.Activate
  Set W_AC = Nothing
  On Error GoTo 0
  Application.EnableEvents = True
  
  Call MAP_RESET
  Exit Sub

LABEL_ERROR:
  Application.EnableEvents = True

End Sub

Private Sub APP_SheetSelectionChange(ByVal SH As Object, ByVal Target As Range)
  
  If UserForm1.ListBox11.RowSource = "" Then
     Call MAP_RESET
  Else
     Call MAP_SCRL
  End If

End Sub

Private Sub APP_WindowActivate(ByVal WB As Workbook, ByVal Wn As Window)
  
  Call MAP_RESET

End Sub

Private Sub APP_WindowResize(ByVal WB As Workbook, ByVal Wn As Window)
  
  Call MAP_RESET

End Sub

Private Sub APP_WorkbookActivate(ByVal WB As Workbook)
  
  Call MAP_RESET

End Sub

Private Sub APP_WorkbookBeforeClose(ByVal WB As Workbook, Cancel As Boolean)

  Call MAP_INIT

End Sub

Private Sub APP_WorkbookNewSheet(ByVal WB As Workbook, ByVal SH As Object)
  
  Call MAP_RESET

End Sub

Private Sub Class_Initialize()

'  If Val(Application.Version) >= 15 Then
'     Call SETTM_MM
'  End If

End Sub

Private Sub Class_Terminate()

'  If Val(Application.Version) >= 15 Then
'     Call KILLTM_MM
'  End If

End Sub
Attribute VB_Name = "C04Excel"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public WithEvents APP As Application
Attribute APP.VB_VarHelpID = -1

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

Private Sub APP_WindowActivate(ByVal WB As Workbook, ByVal Wn As Window)

#If Win64 Then
  Dim hwnd01 As LongPtr
  Dim hWndN As LongPtr
#Else
  Dim hwnd01 As Long
  Dim hWndN As Long
#End If


  If UserForm1.Tag = "" Then
     hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
     hWndN = FindWindow(vbNullString, Wn.Parent.Parent.Caption)
#If Win64 Then
     Call SetWindowLongPtr(hwnd01, -8, hWndN)
#Else
     Call SetWindowLong(hwnd01, -8, hWndN)
#End If
     Call SetWindowPos(hwnd01, 0, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd|O
  Else
     If Wn.Caption = UserForm1.Tag Then
        UserForm1.Tag = ""
     End If
  End If

End Sub

Private Sub APP_WindowDeactivate(ByVal WB As Workbook, ByVal Wn As Window)
    
  If Wn.WindowState = xlMinimized Then
     UserForm1.Tag = Wn.Caption
  End If

End Sub

Private Sub Class_Initialize()

#If Win64 Then
  Dim hwnd01 As LongPtr
  Dim hWndN As LongPtr
#Else
  Dim hwnd01 As Long
  Dim hWndN As Long
#End If
  
    
  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  If ActiveWindow Is Nothing Then
     hWndN = FindWindow(vbNullString, Application.Caption)
  Else
     hWndN = FindWindow(vbNullString, ActiveWindow.Parent.Parent.Caption)
  End If
#If Win64 Then
  Call SetWindowLongPtr(hwnd01, -8, hWndN)
#Else
  Call SetWindowLong(hwnd01, -8, hWndN)
#End If
  Call SetWindowPos(hwnd01, 0, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd|O

End Sub
Attribute VB_Name = "C05RA"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const default_lexer = "(?![[(\\]).(?:[*+?]\??|\{\d+(?:,\d*)?\}\??)?|\\(?:[bABCEGLQUXZ]|[lu].|(?:[^\w]|[aefnrtdDwWsS]|c.|0\d{2}|x(?:[\da-fA-F]{2}|{[\da-fA-F]{4}})|N\{\w+\}|[Pp](?:\{\w+\}|.))(?:[*+?]\??|\{\d+(?:,\d*)?\}\??)?)|\[.*?(?!\\)\](?:[*+?]\??|\{\d+(?:,\d*)?\}\??)?|\(.*?(?!\\)\)(?:[*+?]\??|\{\d+(?:,\d*)?\}\??)?"
Const single_char = "(?:\\(?:[fnrtdDwWsS]|c.|[^\w\/{|}-]|0\d{2}|x(?:[\da-fA-F]{2}|{[\da-fA-F]{4}}))|[^\$^])"
Const always_fail = "^\\b\0"


Dim p__current_lexer As String
Dim p__path As Variant
Dim p__lex As String

Dim p__track As Long
Dim p__mutable As Long
Dim p__reduce As Long
Dim p__unroll_plus
Dim p__fold_meta_pairs As Long

Dim p__mcount As Long
Dim p__mlist
Dim p__stats_add As Long
Dim p__stats_cooked As Long

Dim p__re
Dim p__str
Dim p__stats_raw
Dim p__stats_dup As Long

Dim VR As Object

Private Sub Class_Initialize()

  p__mutable = 0
  p__track = 0
  p__unroll_plus = 0

  p__fold_meta_pairs = 1
  p__reduce = 1

  p__mcount = 0
  p__stats_raw = 0
  p__stats_add = 0
  p__stats_cooked = 0
  p__stats_dup = 0

  p__current_lexer = default_lexer

  Set VR = CreateObject("VBScript.RegExp")
  With VR
     .IgnoreCase = False
     .Global = True
  End With

End Sub

Property Get path() As Variant

  path = p__path

End Property

Sub Add(ByVal p1 As String)

  Dim record As String
  Dim list As Variant
  Dim wkArray() As String
  Dim I As Long

  
'  record = RTrim$(p1)
  record = p1
  
  p__stats_raw = p__stats_raw + Len(record)

  VR.Pattern = "[\+\*\?\(\\\[\{]"

  If VR.Test(record) = True Then
     If p__lex <> "" Then
        list = f_lex(record)
     Else
        list = f_fastlex(record)
     End If
  Else
     ReDim wkArray(Len(record) - 1)
     For I = 1 To Len(record)
        wkArray(I - 1) = Mid$(record, I, 1)
     Next I
     list = wkArray
  End If

  Call InsertR(list)

End Sub

Private Function f_lex(ByVal record As String) As Variant

  Dim llen As Long
  Dim path() As String
      
  Dim token As String
  Dim next_token As String
  Dim DIFF As Long
  Dim token_len As Long
  Dim MATCHES As Object
  Dim stripRecord As String
  Dim lastOffset As Long
  Dim temp_record_pos As Long
  Dim remain As String
    
  Dim VR9 As Object
  Dim B As Long
    
    
  llen = 0
  
  If p__lex <> "" Then
     p__re = p__lex
  Else
     p__re = p__current_lexer
  End If

  token = ""
  next_token = Null
  DIFF = 0
  token_len = 0
  stripRecord = record
  lastOffset = 0

  VR.Pattern = p__re
      
  Set VR9 = CreateObject("VBScript.RegExp")
  With VR9
     .IgnoreCase = False
     .Global = True
  End With
      
  Do While VR.Test(stripRecord) = True
     Set MATCHES = VR.Execute(stripRecord)
     token = MATCHES.Item(0).Submatches(0)
     temp_record_pos = MATCHES.Item(0).Submatches(0).FirstIndex + lastOffset + 1
  
     token_len = Len(token)
     stripRecord = Mid$(stripRecord, MATCHES.Item(0).FirstIndex + 1 + token_len, Len(stripRecord) - MATCHES.Item(0).FirstIndex - token_len)
     lastOffset = lastOffset + MATCHES.Item(0).FirstIndex + token_len
      
     If temp_record_pos - llen > token_len Then
        next_token = token
        DIFF = temp_record_pos - llen - token_len
        token = Mid$(record, llen + 1, DIFF)
        llen = llen + DIFF
     End If

     llen = llen + token_len

L_TOKEN:
     If Left$(token, 1) = "\" Then
        VR9.Pattern = "^\\x([\da-fA-F]{2})$"
        If VR9.Test(token) = True Then
           token = f_perl_quotemeta(Chr(Val("&h" & VR9.Replace(token, "$1"))))
           VR9.Pattern = "^\\([^\w$()*+.?@\[\\\]^|{\/])$"
           token = VR9.Replace(token, "$1")
        Else
           VR9.Pattern = "^\\([^\w$()*+.?@\[\\\]^|{\/])$"
           token = VR9.Replace(token, "$1")
        End If
     End If

     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
     ReDim Preserve path(B + 1)
     path(UBound(path)) = token

L_NEXT_TOKEN:

     If next_token <> "" Then
        token = next_token
        next_token = ""
        GoTo L_TOKEN
     End If
  
  Loop
        
  If llen < Len(stripRecord) Then
     remain = Right$(stripRecord, Len(stripRecord) - llen)
     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
     ReDim Preserve path(B + 1)
     path(UBound(path)) = remain
  End If
     
  f_lex = path

End Function

Private Function f_fastlex(ByVal record As String) As Variant

  Dim llen As Long
  Dim path() As String

  Dim unroll_plus As Long
  Dim token As String
  Dim qualifier As String
  Dim Class As String

  Dim modifier As String
  Dim class_matcher As String
  Dim paren_matcher As String
  Dim misc_matcher As String
  Dim regular_matcher As String
  Dim qm_matcher As String

  Dim matcher As String
  Dim stripRecord As String

  Dim VR2 As Object
  Dim VR3 As Object
  Dim VR9 As Object
  Dim MATCHES As Object
  Dim B As Long

  Dim I As Long


  llen = 0
  unroll_plus = p__unroll_plus
  token = ""
  qualifier = ""

  modifier = "(?:[*+?]\??|\{(?:\d+(?:,\d*)?|,\d+)\}\??)?"
  class_matcher = "\[(?:\[:[a-z]+:\]|\\?.)*?\]"
  paren_matcher = "\(.*?(?!\\)\)" & modifier
  misc_matcher = "(\d{3})(" & modifier & ")"
  regular_matcher = "([^\\[(])(" & modifier & ")"
  qm_matcher = "(\\?.)"
    
  matcher = regular_matcher
  stripRecord = record

  Set VR2 = CreateObject("VBScript.RegExp")
  With VR2
     .IgnoreCase = False
     .Global = True
  End With

  Set VR3 = CreateObject("VBScript.RegExp")
  With VR3
     .IgnoreCase = False
     .Global = True
  End With

  Set VR9 = CreateObject("VBScript.RegExp")
  With VR9
     .IgnoreCase = False
     .Global = True
  End With
  
  Do
     VR.Pattern = "^" & matcher
     VR2.Pattern = "^(" & class_matcher & ")(" & modifier & ")"
     VR3.Pattern = "^(" & paren_matcher & ")"
     If VR.Test(stripRecord) = True Then
        Set MATCHES = VR.Execute(stripRecord)
        stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
     
        token = MATCHES.Item(0).Submatches(0)
        If MATCHES.Item(0).Submatches.count >= 2 Then
           qualifier = MATCHES.Item(0).Submatches(1)
        Else
           qualifier = ""
        End If

        VR9.Pattern = "([][{}*+?@\\/])"
        token = VR9.Replace(token, "\$1")

        VR9.Pattern = "\+(\?)?"

        If unroll_plus = 1 And VR9.Test(qualifier) = True Then
           Set MATCHES = VR9.Execute(qualifier)
           qualifier = VR9.Replace(qualifier, "*")
           If MATCHES.Item(0).Submatches.count > 0 Then
              qualifier = qualifier & MATCHES.Item(0).Submatches(0)
           End If

           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = token
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = "{" & token & "}{" & qualifier & "}"
        Else
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = token & qualifier
        End If

        GoTo L_NEXT
     ElseIf Left$(stripRecord, 1) = "\" Then
        stripRecord = Right$(stripRecord, Len(stripRecord) - 1)
        
        VR.Pattern = "^([sdwSDW])(" & modifier & ")"
        If VR.Test(stripRecord) = True Then
           Set MATCHES = VR.Execute(stripRecord)
           stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
           token = MATCHES.Item(0).Submatches(0)
           qualifier = MATCHES.Item(0).Submatches(1)

           VR9.Pattern = "\+(\?)?"

           If unroll_plus = 1 And VR9.Test(qualifier) = True Then
              Set MATCHES = VR9.Execute(qualifier)
              qualifier = VR9.Replace(qualifier, "*")

              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              path(UBound(path)) = "\" & token
              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              If MATCHES.Item(0).Submatches.count > 0 Then
                 path(UBound(path)) = "\" & token & qualifier & MATCHES.Item(0).Submatches(0)
              Else
                 path(UBound(path)) = "\" & token & qualifier
              End If
           Else
              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              path(UBound(path)) = "\" & token & qualifier
           End If
           GoTo L_NEXT
        End If

        VR.Pattern = "^x([\da-fA-F]{2})(" & modifier & ")"
        If VR.Test(stripRecord) = True Then
           Set MATCHES = VR.Execute(stripRecord)
           stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
           token = f_perl_quotemeta(Chr(Val("&h" & MATCHES.Item(0).Submatches(0))))
           qualifier = MATCHES.Item(0).Submatches(1)

           VR9.Pattern = "^\\([^\w$()*+.?@\[\\\]^|{\/])$"
           token = VR9.Replace(token, "$1")

           VR9.Pattern = "\+(\?)?"

           If unroll_plus = 1 And VR9.Test(qualifier) = True Then
              Set MATCHES = VR9.Execute(qualifier)
              qualifier = VR9.Replace(qualifier, "*")

              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              path(UBound(path)) = token
              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              If MATCHES.Item(0).Submatches.count > 0 Then
                 path(UBound(path)) = token & qualifier & MATCHES.Item(0).Submatches(0)
              Else
                 path(UBound(path)) = token & qualifier
              End If
           Else
              B = -1
              On Error Resume Next
              B = UBound(path)
              On Error GoTo 0
              ReDim Preserve path(B + 1)
              path(UBound(path)) = token & qualifier
           End If
           GoTo L_NEXT
        End If

        VR.Pattern = "^" & misc_matcher
        If VR.Test(stripRecord) = True Then
           Set MATCHES = VR.Execute(stripRecord)
           stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
           
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = Chr(Val("&o" & Left$(MATCHES.Item(0).Submatches(0), 3))) & Right$(MATCHES.Item(0).Submatches(0), Len(MATCHES.Item(0).Submatches(0)) - 3)
           GoTo L_NEXT
        End If

        VR.Pattern = "^(.)"
        If VR.Test(stripRecord) = True Then
           Set MATCHES = VR.Execute(stripRecord)
           stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
           token = MATCHES.Item(0).Submatches(0)
           VR9.Pattern = "([bfnrtv\[\]{}()\\\$*+.?@|/^])"
           token = VR9.Replace(token, "\$1")
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = token
           GoTo L_NEXT
        End If
           
        GoTo L_NEXT
     ElseIf VR2.Test(stripRecord) = True Then
        Set MATCHES = VR2.Execute(stripRecord)
        stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
     
        Class = MATCHES.Item(0).Submatches(0)
        If MATCHES.Item(0).Submatches.count >= 2 Then
           qualifier = MATCHES.Item(0).Submatches(1)
        Else
           qualifier = ""
        End If

'        VR9.Pattern = "\[\\?(.)\]"
        VR9.Pattern = "\\?(.)"
        If VR9.Test(Mid$(Class, 2, Len(Class) - 2)) = True Then
           Set MATCHES = VR9.Execute(Mid$(Class, 2, Len(Class) - 2))
           Class = "["
           For I = 0 To MATCHES.count - 1
              Class = Class & f_perl_quotemeta(MATCHES.Item(I).Submatches(0))
           Next I
           Class = Class & "]"
           VR9.Pattern = "\\([!@%])"
           Class = VR9.Replace(Class, "$1")
        End If
        
        VR9.Pattern = "\+(\?)?"
        If unroll_plus = 1 And VR9.Test(qualifier) = True Then
           Set MATCHES = VR9.Execute(qualifier)
           qualifier = VR9.Replace(qualifier, "*")
           
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = Class
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           If MATCHES.Item(0).Submatches.count > 0 Then
              path(UBound(path)) = Class & qualifier & MATCHES.Item(0).Submatches(0)
           Else
              path(UBound(path)) = Class & qualifier
           End If
        Else
           B = -1
           On Error Resume Next
           B = UBound(path)
           On Error GoTo 0
           ReDim Preserve path(B + 1)
           path(UBound(path)) = Class & qualifier
        End If

        GoTo L_NEXT
     ElseIf VR3.Test(stripRecord) = True Then
        Set MATCHES = VR3.Execute(stripRecord)
        stripRecord = Right$(stripRecord, Len(stripRecord) - Len(MATCHES.Item(0).Value))
     
        B = -1
        On Error Resume Next
        B = UBound(path)
        On Error GoTo 0
        ReDim Preserve path(B + 1)
        path(UBound(path)) = MATCHES.Item(0).Submatches(0)
     
        GoTo L_NEXT
     End If
     Exit Do
L_NEXT:
  Loop

  f_fastlex = path

End Function

Function InsertR(ByVal list As Variant)

  Dim dup As Long
  Dim P As Variant
  
  
  dup = 0

  p__path = f_insert_path(p__path, list)

  If dup = p__stats_dup Then
     p__stats_add = p__stats_add + 1
     For Each P In list
        If TypeName(P) = "String" Then
           p__stats_cooked = p__stats_cooked + Len(P)
        End If
     Next
  End If

  p__str = ""
  p__re = ""

End Function

Private Function f_insert_path(ByVal list As Variant, ByVal pin As Variant) As Variant

  Dim ofset As Long
  Dim token As Variant
  
  Dim DIC As Object
  Dim DIC2 As Object
  
  Dim I As Long
  Dim bl As Long
  Dim bp As Long
  Dim bt As Long
  
  Dim patho As Variant
  Dim node As Variant
  Dim arr1() As Variant
  Dim new1 As Variant
  
  Dim path() As Variant
  Dim pathv() As Variant
  
  Dim wpath As Variant
  
  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  bl = -1
  On Error Resume Next
  bl = UBound(list)
  On Error GoTo 0
  bp = -1
  On Error Resume Next
  bp = UBound(pin)
  On Error GoTo 0
  
  If bl = -1 Then
     If bp = -1 Then
        DIC.Add "", 0
        f_insert_path = Array(DIC)
     ElseIf bp = 0 Then
        If pin(0) = "" Then
           DIC.Add "", 0
           f_insert_path = Array(DIC)
        Else
           f_insert_path = pin
        End If
     Else
        f_insert_path = pin
     End If
     Exit Function
  End If

  wpath = Array()
  Erase wpath
  
  For I = 0 To bl
     bt = -1
     On Error Resume Next
     bt = UBound(wpath)
     On Error GoTo 0
     ReDim Preserve wpath(bt + 1)
     If f_is_hash(list(I)) = True Then
        Set wpath(UBound(wpath)) = list(I)
     Else
        wpath(UBound(wpath)) = list(I)
     End If
  Next I
  
  ofset = 0
  token = ""

  If bp = -1 Then
     If f_is_hash(list(0)) = False Then
        If f_is_array(list(0)) = False Then
           DIC.Add "", 0
           DIC.Add list(0), list
           f_insert_path = Array(DIC)
        Else
           f_insert_path = list
        End If
     Else
        Set DIC = list(0)
        DIC("") = 0
        Set list(0) = DIC
        f_insert_path = list
     End If
     Exit Function
  End If

  Do While bp >= 0
     If f_is_hash(f_array_shift(pin, False)) = True Then
        Set token = f_array_shift(pin, True)
     Else
        token = f_array_shift(pin, True)
     End If

     If f_is_hash(token) = True Then
        wpath = f_insert_node(wpath, ofset, token, pin)
        Exit Do
     End If

     patho = ""
     
     bt = -1
     On Error Resume Next
     bt = UBound(wpath)
     On Error GoTo 0
     
     If ofset <= bt Then
        If f_is_hash(wpath(ofset)) = True Then
           Set patho = wpath(ofset)
        Else
           patho = wpath(ofset)
        End If
     
        If f_is_hash(patho) = True Then
           Set node = wpath(ofset)
           Set DIC = node
           If DIC.Exists(token) = True Then
              bt = -1
              On Error Resume Next
              bt = UBound(wpath)
              On Error GoTo 0
              If ofset < bt Then
                 Erase arr1
                 ReDim arr1(bt - ofset)
                 For I = ofset To bt
                    If f_is_hash(wpath(I)) = True Then
                       Set arr1(I - ofset) = wpath(I)
                    Else
                       arr1(I - ofset) = wpath(I)
                    End If
                 Next I
                 DIC2.RemoveAll
                 DIC2.Add token, f_perl_array(Array(token), pin)
                 DIC2.Add f_re_path(Array(node)), arr1
                 Set new1 = DIC2
  
                 Set wpath(ofset) = new1
                 ReDim Preserve wpath(ofset)
                 Exit Do
              Else
                 DIC(token) = f_insert_path(DIC(token), f_perl_array(token, pin))
                 Set wpath(ofset) = DIC
                 f_insert_path = wpath
                 Exit Function
              End If
           Else
              If ofset = bt Then
                 DIC(token) = f_perl_array(Array(token), pin)
                 Set wpath(ofset) = DIC
              Else
                 Erase arr1
                 ReDim arr1(bt - ofset)
                 For I = ofset To bt
                    If f_is_hash(wpath(I)) = True Then
                       Set arr1(I - ofset) = wpath(I)
                    Else
                       arr1(I - ofset) = wpath(I)
                    End If
                 Next I
                 DIC2.RemoveAll
                 DIC2.Add f_node_key(token), f_perl_array(Array(token), pin)
                 DIC2.Add f_node_key(node), arr1
                 Set new1 = DIC2
  
                 Set wpath(ofset) = new1
                 ReDim Preserve wpath(ofset)
              End If
              Exit Do
           End If
        End If
     End If
  
     bt = -1
     On Error Resume Next
     bt = UBound(wpath)
     On Error GoTo 0
     bp = -1
     On Error Resume Next
     bp = UBound(pin)
     On Error GoTo 0
  
     If ofset > bt Then
        DIC2.RemoveAll
        DIC2.Add "", 0
        DIC2.Add token, f_perl_array(Array(token), pin)
        ReDim Preserve wpath(bt + 1)
        Set wpath(UBound(wpath)) = DIC2
        Exit Do
     ElseIf f_is_hash(wpath(ofset)) = True Then
     ElseIf f_is_array(wpath(ofset)) = True Then
     ElseIf token <> wpath(ofset) Then
        DIC2.RemoveAll
        If Len(token) > 0 Then
           DIC2.Add f_node_key(token), f_perl_array(token, pin)
        Else
           DIC2.Add "", 0
        End If
        ReDim pathv(bt - ofset)
        For I = ofset To bt
          If f_is_hash(wpath(I)) = True Then
             Set pathv(I - ofset) = wpath(I)
          Else
             pathv(I - ofset) = wpath(I)
          End If
        Next I
        DIC2.Add wpath(ofset), pathv
           
        ReDim path(ofset)
        For I = 0 To ofset - 1
           If f_is_hash(wpath(I)) = True Then
              Set path(I) = wpath(I)
           Else
              path(I) = wpath(I)
           End If
        Next I
        Set path(ofset) = DIC2
        wpath = path
        Exit Do
     ElseIf bp < 0 Then
        patho = ""
        On Error Resume Next
        patho = wpath(ofset + 1)
        On Error GoTo 0
        If patho <> "" Then
           ofset = ofset + 1
           If f_is_hash(wpath(ofset)) = True Then
              DIC2.RemoveAll
              DIC2.Add "", 0
              Set wpath(ofset) = DIC2
           Else
              DIC2.RemoveAll
              DIC2.Add "", 0
              Erase arr1
              ReDim arr1(bt - ofset)
              For I = ofset To bt
                 If f_is_hash(wpath(I)) = True Then
                    Set arr1(I - ofset) = wpath(I)
                 Else
                    arr1(I - ofset) = wpath(I)
                 End If
              Next I
              DIC2.Add wpath(ofset), arr1
              
              ReDim path(ofset)
              For I = 0 To ofset - 1
                 If f_is_hash(wpath(I)) = True Then
                    Set path(I) = wpath(I)
                 Else
                    path(I) = wpath(I)
                 End If
              Next I
              Set path(ofset) = DIC2
              wpath = path
           End If
        Else
           p__stats_dup = p__stats_dup + 1
        End If
        Exit Do
     End If
     ofset = ofset + 1
  
     bp = -1
     On Error Resume Next
     bp = UBound(pin)
     On Error GoTo 0
  Loop

  f_insert_path = wpath
  Exit Function

End Function

Private Function f_insert_node(ByVal path As Variant, ByVal ofset As Long, ByVal token As Variant, ByVal pin As Variant) As Variant

  Dim path_end() As Variant
  Dim I As Long
  Dim token_key As Variant
  Dim token_key2 As Variant
  Dim path_key As Variant

  Dim bp As Long
  Dim be As Long
  Dim bo As Long
  Dim bn As Long
  Dim bi As Long

  Dim old_path As Variant
  Dim new_path() As Variant

  Dim DIC As Object
  Dim DIC2 As Object

  Dim new1 As Variant

  Dim wpath As Variant
  Dim J As Long

  
  bp = -1
  On Error Resume Next
  bp = UBound(path)
  On Error GoTo 0

  If bp - ofset >= 0 Then
     ReDim path_end(bp - ofset)
  End If
  
  For I = 0 To bp - ofset
     If f_is_hash(path(ofset + I)) = True Then
        Set path_end(I) = path(ofset + I)
     Else
        path_end(I) = path(ofset + I)
     End If
  Next I

  token_key = f_re_path(Array(token))

  be = -1
  On Error Resume Next
  be = UBound(path_end)
  On Error GoTo 0
  
  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  If be < 0 Then
     DIC2.RemoveAll
     DIC2.Add "", 0
     DIC2.Add token_key, f_perl_array(Array(token), pin)
     Set new1 = DIC2
        
     ReDim Preserve path(bp + 1)
     Set path(UBound(path)) = new1
  
  ElseIf be >= 0 And _
     f_is_hash(path_end(0)) = True Then
     Set DIC = path_end(0)
     If DIC.Exists(token_key) = True Then
        If be > 0 Then
           path_key = f_re_path(Array(path_end(0)))
           DIC2.RemoveAll
           DIC2.Add path_key, path_end
           DIC2.Add token_key, f_perl_array(Array(token), pin)
           Set new1 = DIC2
  
           Set path(ofset) = new1
           ReDim Preserve path(ofset)
        Else
           old_path = DIC(token_key)
           bo = -1
           On Error Resume Next
           bo = UBound(old_path)
           On Error GoTo 0
           Erase new_path
           Do While bo >= 0
              If f_node_eq(old_path(0), token) = False Then
                 Exit Do
              End If
              bn = -1
              On Error Resume Next
              bn = UBound(new_path)
              On Error GoTo 0
              ReDim Preserve new_path(bn + 1)
              If f_is_hash(f_array_shift(old_path, False)) = True Then
                 Set new_path(UBound(new_path)) = f_array_shift(old_path, True)
              Else
                 new_path(UBound(new_path)) = f_array_shift(old_path, True)
              End If
              If f_is_hash(f_array_shift(pin, False)) = True Then
                 Set token = f_array_shift(pin, True)
              Else
                 token = f_array_shift(pin, True)
              End If
              bo = -1
              On Error Resume Next
              bo = UBound(old_path)
              On Error GoTo 0
           Loop
  
           bn = -1
           On Error Resume Next
           bn = UBound(new_path)
           On Error GoTo 0
  
           If bn >= 0 Then
              If f_is_hash(token) = True Then
                 Set token_key2 = token
              Else
                 token_key2 = token
              End If
              bi = -1
              On Error Resume Next
              bi = UBound(pin)
              On Error GoTo 0
              If bi >= 0 Then
                 DIC2.RemoveAll
                 DIC2.Add f_re_path(old_path), old_path
                 DIC2.Add token_key2, f_perl_array(Array(token), pin)
                 Set new1 = DIC2
              Else
                 bo = -1
                 On Error Resume Next
                 bo = UBound(old_path)
                 On Error GoTo 0
                 If bo >= 0 Then
                    new1 = f_insert_path(old_path, Array(token))
                    If f_is_hash(new1(0)) = True Then
                       Set new1 = new1(0)
                    Else
                       new1 = new1(0)
                    End If
                 Else
                    DIC2.RemoveAll
                    DIC2.Add "", 0
                    DIC2.Add token, Array(token)
                    Set new1 = DIC2
                 End If
              End If
              ReDim Preserve new_path(bn + 1)
              If f_is_hash(new1) = True Then
                 Set new_path(UBound(new_path)) = new1
              Else
                 new_path(UBound(new_path)) = new1
              End If
           End If
           DIC(token_key) = new_path
           Set path_end(0) = DIC
           
           For I = ofset To bp
              If f_is_hash(path_end(I - ofset)) = True Then
                 Set path(I) = path_end(I - ofset)
              Else
                 path(I) = path_end(I - ofset)
              End If
           Next I
        End If
     ElseIf f_node_eq(path_end(0), token) = False Then
        If be > 0 Then
           path_key = f_re_path(Array(path_end(0)))
           DIC2.RemoveAll
           DIC2.Add path_key, path_end
           DIC2.Add token_key, f_perl_array(Array(token), pin)
           Set new1 = DIC2
  
           Set path(ofset) = new1
           ReDim Preserve path(ofset)
        Else
           DIC(token_key) = f_perl_array(Array(token), pin)
           Set path_end(0) = DIC
           
           For I = ofset To bp
              If f_is_hash(path_end(I - ofset)) = True Then
                 Set path(I) = path_end(I - ofset)
              Else
                 path(I) = path_end(I - ofset)
              End If
           Next I
        End If
     Else
        Do While be >= 0
           If f_node_eq(path_end(0), token) = False Then
              Exit Do
           End If
           Call f_array_shift(path_end, True)
           If f_is_hash(f_array_shift(pin, False)) = True Then
              Set token = f_array_shift(pin, True)
           Else
              token = f_array_shift(pin, True)
           End If
           ofset = ofset + 1
           be = -1
           On Error Resume Next
           be = UBound(path_end)
           On Error GoTo 0
        Loop

        be = -1
        On Error Resume Next
        be = UBound(path_end)
        On Error GoTo 0
        If be >= 0 Then
           path_end = f_insert_path(path_end, f_perl_array(Array(token), pin))
           be = -1
           On Error Resume Next
           be = UBound(path_end)
           On Error GoTo 0
           
           If be - ofset >= 0 Then
              ReDim Preserve path(be - ofset)
              For I = ofset To be
                 If f_is_hash(path_end(I - ofset)) = True Then
                    Set path(I) = path_end(I - ofset)
                 Else
                    path(I) = path_end(I - ofset)
                 End If
              Next I
           Else
              ReDim wpath(bp + be)
              J = -1
              For I = 0 To ofset - 1
                 J = J + 1
                 If f_is_hash(path(I)) = True Then
                    Set wpath(J) = path(I)
                 Else
                    wpath(J) = path(I)
                 End If
              Next I
              For I = 0 To be
                 J = J + 1
                 If f_is_hash(path_end(I)) = True Then
                    Set wpath(J) = path_end(I)
                 Else
                    wpath(J) = path_end(I)
                 End If
              Next
              ReDim Preserve wpath(J)
              path = wpath
           End If
        Else
           token_key = f_node_key(token)
       
           DIC2.RemoveAll
           DIC2.Add "", 0
           DIC2.Add token_key, f_perl_array(Array(token), pin)
           Set new1 = DIC2
  
           ReDim Preserve path(bp + 1)
           Set path(UBound(path)) = new1
        End If
     End If
  Else
     If bp >= 0 Then
        DIC2.RemoveAll
        DIC2.Add path_end(0), path_end
        DIC2.Add token_key, f_perl_array(Array(token), pin)
        Set new1 = DIC2
  
        Set path(ofset) = new1
        ReDim Preserve path(ofset)
     Else
        DIC2.RemoveAll
        DIC2.Add "", 0
        DIC2.Add token_key, f_perl_array(Array(token), pin)
        Set new1 = DIC2
        
        ReDim Preserve path(bp + 1)
        Set path(UBound(path)) = new1
     End If
  End If
  
  f_insert_node = path
  Exit Function

End Function

Private Function f_re_path(ByVal p1 As Variant) As Variant

  Dim arr As Variant
  Dim str As String
  Dim skip As Long
  Dim I As Long
  
  Dim DIC As Object
  Dim key As Variant
  
  Dim temp_map() As Variant
  Dim temp_join_array() As Variant
  
  Dim VR9 As Object
  Dim MATCHES As Object
  
  Dim count As Long
  Dim ba As Long
  Dim bp As Long
  Dim bt As Long
  Dim bj As Long
  
  
  Set DIC = CreateObject("Scripting.Dictionary")
  
  Set VR9 = CreateObject("VBScript.RegExp")
  With VR9
     .IgnoreCase = False
     .Global = True
  End With
  
  If p__unroll_plus = 1 Then
     arr = p1
     str = ""
     skip = 0

     ba = -1
     On Error Resume Next
     ba = UBound(arr)
     On Error GoTo 0
     
     For I = 0 To ba
        If f_is_array(arr(I)) = True Then
           If f_is_hash(arr(I)) = True Then
              Set DIC = arr(I)
              If DIC.Exists("") = True Then
                 Erase temp_map
                 For Each key In DIC
                    If key <> "" Then
                       bt = -1
                       On Error Resume Next
                       bt = UBound(temp_map)
                       On Error GoTo 0
                       ReDim Preserve temp_map(bt + 1)
                       If f_is_array(DIC(key)) = True Then
                          temp_map(UBound(temp_map)) = f_re_path(DIC(key))
                       Else
                          temp_map(UBound(temp_map)) = DIC(key)
                       End If
                    End If
                 Next
                 str = str & f_combine_new(temp_map) & "?"
              Else
                 Erase temp_map
                 For Each key In DIC
                    bt = -1
                    On Error Resume Next
                    bt = UBound(temp_map)
                    On Error GoTo 0
                    ReDim Preserve temp_map(bt + 1)
                    If f_is_array(DIC(key)) = True Then
                       temp_map(UBound(temp_map)) = f_re_path(DIC(key))
                    Else
                       temp_map(UBound(temp_map)) = DIC(key)
                    End If
                 Next
                 str = str & f_combine_new(temp_map)
              End If
           Else
              str = str & f_re_path(arr(I))
           End If
        Else
           VR9.Pattern = arr(I) & "\*(\??)"
           If I < UBound(arr) - 1 And _
              f_is_array(arr(I + 1)) = False Then
              If VR9.Test(arr(I + 1)) = True Then
                 Set MATCHES = VR9.Execute(arr(I + 1))
                 If MATCHES.Item(0).Submatches.count > 0 Then
                    str = str & arr(I) & "+" & MATCHES.Item(0).Submatches(0)
                 Else
                    str = str & arr(I) & "+"
                 End If
                 skip = skip + 1
              ElseIf skip > 0 Then
                 skip = 0
              Else
                 str = str & arr(I)
              End If
           ElseIf skip > 0 Then
              skip = 0
           Else
              str = str & arr(I)
           End If
        End If
     Next I
     f_re_path = str
     Exit Function
  End If

  count = 0
  
  bp = -1
  On Error Resume Next
  bp = UBound(p1)
  On Error GoTo 0
  
  For I = 0 To bp
     If f_is_array(p1(I)) = True Then
        count = count + 1
     End If
  Next
  If count = 0 Then
     f_re_path = ""
     For I = 0 To bp
        f_re_path = f_re_path & p1(I)
     Next
     Exit Function
  End If

  Erase temp_join_array
  For I = 0 To UBound(p1)
     If f_is_array(p1(I)) = False Then
        bj = -1
        On Error Resume Next
        bj = UBound(temp_join_array)
        On Error GoTo 0
        ReDim Preserve temp_join_array(bj + 1)
        temp_join_array(UBound(temp_join_array)) = p1(I)
     ElseIf f_is_hash(p1(I)) = True Then
        Set DIC = p1(I)
        If DIC.Exists("") = True Then
           Erase temp_map
           For Each key In DIC
              If key <> "" Then
                 bt = -1
                 On Error Resume Next
                 bt = UBound(temp_map)
                 On Error GoTo 0
                 ReDim Preserve temp_map(bt + 1)
                 If f_is_array(DIC(key)) = True Then
                    temp_map(UBound(temp_map)) = f_re_path(DIC(key))
                 Else
                    temp_map(UBound(temp_map)) = DIC(key)
                 End If
              End If
           Next
           bj = -1
           On Error Resume Next
           bj = UBound(temp_join_array)
           On Error GoTo 0
           ReDim Preserve temp_join_array(bj + 1)
           temp_join_array(UBound(temp_join_array)) = f_combine_new(temp_map) & "?"
        Else
           Erase temp_map
           For Each key In DIC
              bt = -1
              On Error Resume Next
              bt = UBound(temp_map)
              On Error GoTo 0
              ReDim Preserve temp_map(bt + 1)
              If f_is_array(DIC(key)) = True Then
                 temp_map(UBound(temp_map)) = f_re_path(DIC(key))
              Else
                 temp_map(UBound(temp_map)) = DIC(key)
              End If
           Next
           bj = -1
           On Error Resume Next
           bj = UBound(temp_join_array)
           On Error GoTo 0
           ReDim Preserve temp_join_array(bj + 1)
           temp_join_array(UBound(temp_join_array)) = f_combine_new(temp_map)
        End If
     Else
        bj = -1
        On Error Resume Next
        bj = UBound(temp_join_array)
        On Error GoTo 0
        ReDim Preserve temp_join_array(bj + 1)
        temp_join_array(UBound(temp_join_array)) = f_re_path(p1(I))
     End If
  Next I
                 
  f_re_path = Join$(temp_join_array, "")

End Function

Private Function f_combine_new(ByVal p1 As Variant) As String

  Dim short() As Variant
  Dim along() As Variant
  Dim AL As Object

  Dim VR9 As Object

  Dim I As Long
  Dim temp() As Variant

  Dim bp As Long
  Dim bs As Long
  Dim ba As Long


  Set VR9 = CreateObject("VBScript.RegExp")
  With VR9
     .IgnoreCase = False
     .Global = True
     .Pattern = "^" & single_char & "$"
  End With

  Erase short
  Erase along

  bp = -1
  On Error Resume Next
  bp = UBound(p1)
  On Error GoTo 0
  For I = 0 To bp
     If VR9.Test(p1(I)) = True Then
        bs = -1
        On Error Resume Next
        bs = UBound(short)
        On Error GoTo 0
        ReDim Preserve short(bs + 1)
        short(UBound(short)) = p1(I)
     Else
        ba = -1
        On Error Resume Next
        ba = UBound(along)
        On Error GoTo 0
        ReDim Preserve along(ba + 1)
        along(UBound(along)) = p1(I)
     End If
  Next I

  bs = -1
  On Error Resume Next
  bs = UBound(short)
  On Error GoTo 0
  ba = -1
  On Error Resume Next
  ba = UBound(along)
  On Error GoTo 0
  
  If bs = 0 And ba = -1 Then
     f_combine_new = short(0)
  ElseIf bs > 0 And Join$(short, "|") = Join$(p1, "|") Then
     f_combine_new = f_make_class(short)
  Else
     Set AL = CreateObject("System.Collections.ArrayList")
     For I = 0 To ba
        AL.Add CStr(10000 + Len(along(I))) & along(I)
     Next
     AL.Sort
     For I = 0 To AL.count - 1
        along(I) = Right$(AL(I), Len(AL(I)) - 5)
     Next I
               
     ReDim temp(ba + 1)
     If bs > 0 Then
        temp(0) = f_make_class(short)
        For I = 0 To ba
           temp(I + 1) = along(I)
        Next I
     Else
        For I = 0 To ba
           temp(I) = along(I)
        Next I
        If bs = 0 Then
           temp(ba + 1) = short(0)
        Else
           If ba >= 0 Then
              ReDim Preserve temp(ba)
           Else
              Erase temp
           End If
        End If
     End If
     f_combine_new = "(?:" & Join$(temp, "|") & ")"
  End If

End Function

Private Function f_make_class(ByVal short As Variant) As String

  Dim DIC As Object
  Dim I As Long
  Dim meta As Variant
  Dim key As Variant
  Dim AL As Object
  Dim arr() As String
  
  Dim VR9 As Object
  Dim RE As String
  Dim del() As String
  Dim dash As String
  Dim caret As String
  Dim Class As String

  Dim bs As Long
  Dim bd As Long


  Set DIC = CreateObject("Scripting.Dictionary")
  
  bs = -1
  On Error Resume Next
  bs = UBound(short)
  On Error GoTo 0
  
  For I = 0 To bs
     If DIC.Exists(short(I)) = False Then
        DIC.Add short(I), 1
     End If
  Next I

  If DIC.Exists("\w") = True And DIC.Exists("\d") = True Then
     DIC.Remove "\d"
  End If
  
  If DIC.Exists("\W") = True And DIC.Exists("\D") = True Then
     DIC.Remove "\D"
  End If

  If DIC.Exists(".") = True Or _
     (p__fold_meta_pairs = 1 And _
      (DIC.Exists("\d") = True And DIC.Exists("\D") = True) Or _
      (DIC.Exists("\s") = True And DIC.Exists("\S") = True) Or _
      (DIC.Exists("\w") = True And DIC.Exists("\W") = True)) Then
     f_make_class = "."
     Exit Function
  End If

  
  Set VR9 = CreateObject("VBScript.RegExp")
  With VR9
     .IgnoreCase = False
     .Global = True
  End With
  
  For Each meta In Array("\d", "\D", "\s", "\S", "\w", "\W")
     If DIC.Exists(meta) = True Then
        RE = meta
        VR9.Pattern = "^" & RE & "$"
        Erase del
        For Each key In DIC
           If VR9.Test(key) = True Then
              bd = -1
              On Error Resume Next
              bd = UBound(del)
              On Error GoTo 0
              ReDim Preserve del(bd + 1)
              del(UBound(del)) = key
           End If
        Next
        bd = -1
        On Error Resume Next
        bd = UBound(del)
        On Error GoTo 0
        For I = 0 To bd
           DIC.Remove del(I)
        Next I
     End If
  Next

  If DIC.count = 1 Then
     f_make_class = f_dic_key(DIC, 0)
     Exit Function
  End If

  For Each meta In Array(".", "+", "*", "?", "(", ")", "^", "$", "[")
     If DIC.Exists("\" & meta) = True Then
        If DIC.Exists(meta) = False Then
           DIC.Add meta, "1"
        End If
        DIC.Remove "\" & meta
     End If
  Next

  dash = ""
  If DIC.Exists("-") = True Then
     DIC.Remove "-"
     dash = "-"
  End If

  caret = ""
  If DIC.Exists("^") = True Then
     DIC.Remove "^"
     dash = "^"
  End If

  Set AL = CreateObject("System.Collections.ArrayList")
  For Each key In DIC
     AL.Add key
  Next
  AL.Sort
  ReDim arr(AL.count)
  For I = 0 To AL.count - 1
     arr(I) = AL(I)
  Next
  Class = Join$(arr, "")

  VR9.Pattern = "0123456789"
  If VR9.Test(Class) = True Then
     Class = VR9.Replace(Class, "\d")
     If Class = "\d" Then
        f_make_class = Class
        Exit Function
     End If
  End If

  f_make_class = "[" & dash & Class & caret & "]"

End Function

Private Function f_perl_quotemeta(ByVal str As String) As String

  Dim VR As Object

  Set VR = CreateObject("VBScript.RegExp")
  With VR
     .IgnoreCase = False
     .Global = True
     .Pattern = "([^\^\-a-zA-Z0-9 !\" & Chr$(34) & "#_])"
  End With
  f_perl_quotemeta = VR.Replace(str, "\$1")

End Function

Private Function f_is_array(ByVal arr As Variant) As Boolean

  If IsArray(arr) = True Then
     f_is_array = True
  Else
     f_is_array = f_is_hash(arr)
  End If

End Function

Private Function f_is_hash(ByVal arr As Variant) As Boolean

  Dim DIC As Object
  
  Set DIC = CreateObject("Scripting.Dictionary")
  On Error GoTo L_ERR
  Set DIC = arr
  On Error GoTo 0
  f_is_hash = True
  Exit Function

L_ERR:
  f_is_hash = False

End Function

Private Function f_node_eq(ByVal p1 As Variant, ByVal p2 As Variant) As Boolean

  Dim DIC As Object
  Dim DIC2 As Object
   
  Dim b1 As Long
  Dim B2 As Long
  
  
  If TypeName(p1) <> TypeName(p2) Then
     f_node_eq = False
     Exit Function
  End If

  If f_is_array(p1) = True Then
     If f_is_hash(p1) = f_is_hash(p2) Then
        If f_is_hash(p1) = True Then
           Set DIC = CreateObject("Scripting.Dictionary")
           Set DIC = p1
           Set DIC2 = CreateObject("Scripting.Dictionary")
           Set DIC2 = p2
           If DIC.count = DIC2.count Then
              If f_re_path(Array(p1)) = f_re_path(Array(p2)) Then
                 f_node_eq = True
                 Exit Function
              End If
           End If
        Else
           b1 = -1
           On Error Resume Next
           b1 = UBound(p1)
           On Error GoTo 0
           B2 = -1
           On Error Resume Next
           B2 = UBound(p2)
           On Error GoTo 0
           If b1 = B2 Then
              If f_re_path(p1) = f_re_path(p2) Then
                 f_node_eq = True
                 Exit Function
              End If
           End If
        End If
     End If
     f_node_eq = False
     Exit Function
  Else
     If p1 = p2 Then
        f_node_eq = True
        Exit Function
     Else
        f_node_eq = False
        Exit Function
     End If
  End If

End Function

Private Function f_node_key(ByVal node As Variant) As Variant

  Dim key As Variant
  Dim DIC As Object
  Dim skey As Variant
  Dim B As Long
  
  If f_is_array(node) = False Then
     f_node_key = CStr(node)
     Exit Function
  End If
  If f_is_hash(node) = False Then
     B = -1
     On Error Resume Next
     B = UBound(node)
     On Error GoTo 0
     If B >= 0 Then
        f_node_key = CStr(f_node_key(node(0)))
     Else
        f_node_key = ""
     End If
     Exit Function
  End If

  skey = ""
  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC = node

  For Each key In DIC
     If key = "" Then
     Else
        If skey = "" Or skey > key Then
           skey = key
        End If
     End If
  Next

  f_node_key = CStr(skey)
  Exit Function

End Function

Function RE() As String

  If p__re = "" Then
     Call f_build_re(f_as_string)
  End If

  RE = f_compress(p__re)

End Function

Private Function f_build_re(ByVal str As String) As String

  p__re = p__str

End Function

Private Function f_as_string() As String

  If p__str = "" Then
     If p__mutable > 0 Or p__reduce = 0 Then
     Else
        Call s_reduce
     End If
     p__str = f_re_path(p__path)
     If Len(p__str) = 0 Then
        p__str = always_fail
     End If
  End If

  f_as_string = p__str

End Function

Private Sub s_reduce()

  Dim varray As Variant
  Dim head As Variant
  Dim tail As Variant
  Dim bh As Long


  varray = f_reduce_path(p__path)
  If f_is_hash(varray(0)) = True Then
     Set head = varray(0)
  Else
     head = varray(0)
  End If
  If f_is_hash(varray(1)) = True Then
     Set tail = varray(1)
  Else
     tail = varray(1)
  End If

  bh = -1
  On Error Resume Next
  bh = UBound(head)
  On Error GoTo 0

  If bh = -1 Then
     p__path = tail
  Else
     p__path = f_perl_array(f_unrev_path(tail), f_unrev_path(head))
  End If

End Sub

Private Function f_reduce_path(ByVal path As Variant) As Variant

  Dim snew As String
  Dim head As Variant
  Dim tail As Variant
  Dim bp As Long
  Dim P As Variant
  Dim varray As Variant
  Dim node_head As Variant
  Dim node_tail As Variant
  Dim bh As Long
  Dim bt As Long
  
  Dim DIC As Object
  Dim DIC2 As Object
  
  Dim key As Variant
  Dim CNT As Long
  
  Dim opt As Variant
  Dim fixed As Variant
  
  Dim tailwk As Variant
  
  
  
  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  head = Array()
  Erase head
  tail = Array()
  Erase tail
  
  bp = -1
  On Error Resume Next
  bp = UBound(path)
  On Error GoTo 0
  
  Do While (bp >= 0)
     If f_is_hash(f_array_pop(path, False)) = True Then
        Set P = f_array_pop(path, True)
     Else
        P = f_array_pop(path, True)
     End If
     
     If f_is_hash(P) = True Then
        varray = f_reduce_node(P)
        If f_is_hash(varray(0)) = True Then
           Set node_head = varray(0)
        Else
           node_head = varray(0)
        End If
        If f_is_hash(varray(1)) = True Then
           Set node_tail = varray(1)
        Else
           node_tail = varray(1)
        End If
  
        bh = -1
        On Error Resume Next
        bh = UBound(node_head)
        On Error GoTo 0
        
        If bh >= 0 Then
           head = f_array_merge(head, node_head)
        End If

        If f_is_hash(node_tail) = True Then
           bt = -1
           On Error Resume Next
           bt = UBound(tail)
           On Error GoTo 0
           ReDim Preserve tail(bt + 1)
           Set tail(UBound(tail)) = node_tail
        Else
           tail = f_array_merge(tail, node_tail)
        End If
     Else
        bh = -1
        On Error Resume Next
        bh = UBound(head)
        On Error GoTo 0
        
        If bh >= 0 Then
           bt = -1
           On Error Resume Next
           bt = UBound(tail)
           On Error GoTo 0
           ReDim Preserve tail(bt + 1)
           tail(UBound(tail)) = P
        Else
           Call f_array_unshift(tail, P)
        End If
     End If
     
     bp = -1
     On Error Resume Next
     bp = UBound(path)
     On Error GoTo 0
  Loop

  bt = -1
  On Error Resume Next
  bt = UBound(tail)
  On Error GoTo 0

  CNT = 0
  If bt > 0 Then
     If f_is_hash(tail(0)) = True Then
        Set DIC = tail(0)
        CNT = DIC.count
     End If
  End If

  If CNT = 2 Then
     For Each key In DIC
        path = DIC(key)
        If f_is_array(path) = True Then
        Else
           If path = 0 Then
              GoTo L_NEXT
           End If
        End If
        
        bp = -1
        On Error Resume Next
        bp = UBound(path(0))
        On Error GoTo 0
        
        If bp = 0 And f_is_array(path(0)) = True Then
           opt = path(0)
        Else
           fixed = path
        End If

L_NEXT:
     Next
  
     Set DIC2 = tail(0)
     If DIC2.Exists("") = True Then
        If f_is_hash(f_array_shift(tail, False)) = True Then
           Set tailwk = f_array_shift(tail, True)
        Else
           tailwk = f_array_shift(tail, True)
        End If
        path = tail
        If f_is_hash(tailwk) = True Then
           Set tail = tailwk
        Else
           tail = tailwk
        End If
        varray = f_slide_tail(head, tail, path)
        If f_is_hash(varray(0)) = True Then
           Set head = varray(0)
        Else
           head = varray(0)
        End If
        If f_is_hash(varray(1)) = True Then
           Set tail = varray(1)
        Else
           tail = varray(1)
        End If
        If f_is_hash(varray(2)) = True Then
           Set path = varray(2)
        Else
           path = varray(2)
        End If
        tail = f_array_merge(Array(tail), path)
     End If
  End If
  
  f_reduce_path = Array(head, tail)

End Function

Private Function f_reduce_node(ByVal node As Variant) As Variant

  Dim loptional As Long
  Dim DIC As Object
  Dim key As Variant
  Dim path As Variant
  Dim bp As Long
  Dim DIC2 As Object
  Dim result As Variant
  
  Dim varray As Variant
  
  Dim fail As Variant
  Dim reduce As Variant
  
  Dim common As Variant
  Dim tail As Variant
  
  Dim CNT As Long
  Dim cnt2 As Long
  

  loptional = f_remove_optional(node)

  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC = node
  Set DIC2 = CreateObject("Scripting.Dictionary")

  If loptional = 1 And DIC.count = 1 Then
     path = DIC(f_dic_key(DIC, 0))
     If f_is_hash(path) = False Then
        DIC2.RemoveAll
        DIC2.Add "", 0
        DIC2.Add path(0), path
        Set result = DIC2
        f_reduce_node = Array(Array(), result)
        Exit Function
     End If
  End If

  varray = f_scan_node(node)
  If f_is_hash(varray(0)) = True Then
     Set fail = varray(0)
  Else
     fail = varray(0)
  End If
  If f_is_hash(varray(1)) = True Then
     Set reduce = varray(1)
  Else
     reduce = varray(1)
  End If


  Set DIC = Nothing
  Set DIC2 = Nothing
  CNT = 0
  cnt2 = 0
  If f_is_hash(fail) = True Then
     Set DIC = fail
     CNT = DIC.count
  Else
     CNT = -1
     On Error Resume Next
     CNT = UBound(fail)
     On Error GoTo 0
     CNT = CNT + 1
  End If
  If f_is_hash(reduce) = True Then
     Set DIC2 = reduce
     cnt2 = DIC2.count
  Else
     cnt2 = -1
     On Error Resume Next
     cnt2 = UBound(reduce)
     On Error GoTo 0
     cnt2 = cnt2 + 1
  End If

  If CNT = 0 And cnt2 = 1 And loptional = 0 Then
     path = DIC2(f_dic_key(DIC2, 0))
     varray = f_do_reduce(path)
     If f_is_hash(varray(0)) = True Then
        Set common = varray(0)
     Else
        common = varray(0)
     End If
     If f_is_hash(varray(1)) = True Then
        Set tail = varray(1)
     Else
        tail = varray(1)
     End If
     f_reduce_node = Array(common, tail)
     Exit Function
  End If

  f_reduce_node = f_reduce_fail(reduce, fail, loptional)

End Function

Private Function f_scan_node(ByVal node As Variant) As Variant

  Dim fail As Variant
  Dim bf As Long
  Dim reduce As Variant
  
  Dim DIC As Object
  Dim DIC2 As Object
  Dim DIC3 As Object
  Dim DIC4 As Object
  Dim DIC5 As Object
  
  Dim key As Variant
  Dim temp_map() As Variant
  Dim CNT As Long
  Dim bt As Long
  Dim bd As Long
  Dim arr As Variant
  Dim I As Long

  Dim AL As Object

  Dim temp_map2() As Variant
  Dim temp_sp As Long
  Dim bt2 As Long

  Dim path As Variant
  Dim vend As Variant
  Dim arr1() As Variant
  Dim ba As Long

  Dim opt_path As Variant
  Dim vend2 As Variant

  Dim varray As Variant
  Dim bv As Long

  Dim head As Variant
  Dim bh As Long
  Dim slide As Variant
  Dim new_path As Variant

  Dim common As Variant
  Dim bc As Long
  Dim tail As Variant

  Dim temp As Variant


  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  Set DIC3 = CreateObject("Scripting.Dictionary")
  Set DIC4 = CreateObject("Scripting.Dictionary")
  Set DIC5 = CreateObject("Scripting.Dictionary")
  Set DIC = node
  
  DIC2.RemoveAll

  fail = Array()
  Erase fail

  Erase temp_map
  For Each key In DIC
     bd = -1
     On Error Resume Next
     bd = UBound(DIC(key))
     On Error GoTo 0
     
     CNT = 0
     arr = DIC(key)
     For I = 0 To bd
        If f_is_hash(arr(I)) = True Then
           CNT = CNT + 1
        End If
     Next
     
     bd = bd + 1
     
     bt = -1
     On Error Resume Next
     bt = UBound(temp_map)
     On Error GoTo 0
     ReDim Preserve temp_map(bt + 1)
     temp_map(UBound(temp_map)) = CNT & "|" & f_node_offset(DIC(key)) & "|" & bd & "#" & key
  Next

  bt = -1
  On Error Resume Next
  bt = UBound(temp_map)
  On Error GoTo 0
  
  Set AL = CreateObject("System.Collections.ArrayList")
  For I = 0 To bt
     AL.Add temp_map(I)
  Next I
  AL.Sort
  For I = 0 To AL.count - 1
     temp_map(I) = AL(I)
  Next I
  
  Erase temp_map2
  For I = 0 To bt
     temp_sp = InStr(temp_map(I), "#")
     bt2 = -1
     On Error Resume Next
     bt2 = UBound(temp_map2)
     On Error GoTo 0
     ReDim Preserve temp_map2(bt2 + 1)
     If Len(temp_map(I)) > temp_sp Then
        temp_map2(UBound(temp_map2)) = Right$(temp_map(I), Len(temp_map(I)) - temp_sp)
     Else
        temp_map2(UBound(temp_map2)) = ""
     End If
  Next I

  bt2 = -1
  On Error Resume Next
  bt2 = UBound(temp_map2)
  On Error GoTo 0
  
  For I = 0 To bt2
     path = f_perl_reverse(DIC(temp_map2(I)))
     If f_is_hash(f_array_shift(path, False)) = True Then
        Set vend = f_array_shift(path, True)
     Else
        vend = f_array_shift(path, True)
     End If

     If f_is_hash(vend) = False Then
        If DIC2.Exists(vend) = False Then
           Erase arr1
        Else
           arr1 = DIC2(vend)
           DIC2.Remove vend
        End If
        ba = -1
        On Error Resume Next
        ba = UBound(arr1)
        On Error GoTo 0
        ReDim Preserve arr1(ba + 1)
        arr1(UBound(arr1)) = f_perl_array(vend, path)
        DIC2.Add vend, arr1
     Else
        Set DIC3 = vend
        If DIC3.count = 2 And DIC3.Exists("") = True Then
           key = f_dic_key(DIC3, 0)
           opt_path = DIC3(key)
           If key = "" Then
              key = f_dic_key(DIC3, 1)
              opt_path = DIC3(key)
           End If
           opt_path = f_perl_reverse(opt_path)
           DIC4.RemoveAll
           DIC4.Add "", 0
           DIC4.Add opt_path(0), opt_path
           Set vend2 = DIC4

           head = Array()
           Erase head
           varray = f_slide_tail(head, vend2, path)
           If f_is_hash(varray(0)) = True Then
              Set head = varray(0)
           Else
              head = varray(0)
           End If
           If f_is_hash(varray(1)) = True Then
              Set slide = varray(1)
           Else
              slide = varray(1)
           End If
           If f_is_hash(varray(2)) = True Then
              Set path = varray(2)
           Else
              path = varray(2)
           End If

           bh = -1
           On Error Resume Next
           bh = UBound(head)
           On Error GoTo 0
           
           If bh >= 1 Then
              new_path = f_perl_array(f_perl_array(head, Array(slide)), path)
           End If
        End If
        If f_is_array(new_path) Then
           If DIC2.Exists(new_path(0)) = False Then
              Erase varray
           Else
              varray = DIC2(new_path(0))
           End If
           
           bv = -1
           On Error Resume Next
           bv = UBound(varray)
           On Error GoTo 0
           ReDim Preserve varray(bv + 1)
           varray(UBound(varray)) = new_path
                     
           DIC2.Remove new_path(0)
           DIC2.Add new_path(0), varray
        Else
           varray = f_reduce_node(vend)
           If f_is_hash(varray(0)) = True Then
              Set common = varray(0)
           Else
              common = varray(0)
           End If
           If f_is_hash(varray(1)) = True Then
              Set tail = varray(1)
           Else
              tail = varray(1)
           End If
           
           bc = -1
           On Error Resume Next
           bc = UBound(common)
           On Error GoTo 0

           If bc = -1 Then
              bf = -1
              On Error Resume Next
              bf = UBound(fail)
              On Error GoTo 0
              ReDim Preserve fail(bf + 1)
              fail(UBound(fail)) = f_perl_array(f_perl_reverse(path), Array(tail))
           Else
              If f_is_hash(tail) = True Then
                 Set DIC5 = tail
                 If DIC5.count = 2 And DIC5.Exists("") = True Then
                    varray = f_slide_tail(common, tail, path)
                    If f_is_hash(varray(0)) = True Then
                       Set common = varray(0)
                    Else
                       common = varray(0)
                    End If
                    If f_is_hash(varray(1)) = True Then
                       Set tail = varray(1)
                    Else
                       tail = varray(1)
                    End If
                    If f_is_hash(varray(2)) = True Then
                       Set path = varray(2)
                    Else
                       path = varray(2)
                    End If
                 End If
              End If
              If DIC2.Exists(common(0)) = False Then
                 Erase varray
              Else
                 varray = DIC2(common(0))
              End If
              bv = -1
              On Error Resume Next
              bv = UBound(varray)
              On Error GoTo 0
              ReDim Preserve varray(bv + 1)
              If f_is_hash(tail) = True Then
                 varray(UBound(varray)) = f_perl_array(f_perl_array(common, Array(tail)), path)
              Else
                 temp = Array()
                 Erase temp
                 temp = f_array_merge(temp, common)
                 temp = f_array_merge(temp, tail)
                 temp = f_array_merge(temp, path)
                 varray(UBound(varray)) = temp
              End If
              If DIC2.Exists(common(0)) = True Then
                 DIC2.Remove common(0)
              End If
              DIC2.Add common(0), varray
           End If
        End If
     End If
  Next I

  Set reduce = DIC2

  f_scan_node = Array(fail, reduce)

End Function

Private Function f_node_offset(ByVal NR As Variant) As Long

  Dim temp_lastindex As Long
  Dim I As Long
  
  If f_is_hash(NR) = False Then
     f_node_offset = -1
     Exit Function
  End If

  temp_lastindex = UBound(NR)
  If f_is_hash(NR(temp_lastindex)) = True Then
     f_node_offset = temp_lastindex
     Exit Function
  End If

  For I = 0 To temp_lastindex
     If f_is_array(NR(I)) = True Then
        f_node_offset = I
        Exit Function
     End If
  Next I

  f_node_offset = -1

End Function

Private Function f_slide_tail(ByVal head As Variant, ByVal tail As Variant, ByVal path As Variant) As Variant

  Dim DIC As Object
  Dim DIC2 As Object
  
  Dim temp_key As Variant
  Dim slide_path As Variant
  Dim slide As Variant
  Dim slide_node As Variant

  Dim B As Long
  Dim bs As Long
  Dim bh As Long


  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  Set DIC = tail

  temp_key = f_dic_key(DIC, 0)
  slide_path = DIC(temp_key)
  If temp_key = "" Then
     If f_is_hash(f_dic_key(DIC, 1)) = True Then
        Set temp_key = f_dic_key(DIC, 1)
     Else
        temp_key = f_dic_key(DIC, 1)
     End If
     slide_path = DIC(temp_key)
  End If

  B = -1
  On Error Resume Next
  B = UBound(path)
  On Error GoTo 0

  Do While B >= 0
     bs = -1
     On Error Resume Next
     bs = UBound(slide_path)
     On Error GoTo 0
     If bs < 0 Then
        Exit Do
     End If
     If TypeName(path(0)) <> TypeName(slide_path(0)) Then
        Exit Do
     ElseIf path(0) <> slide_path(0) Then
        Exit Do
     End If
     If f_is_hash(f_array_shift(path, False)) = True Then
        Set slide = f_array_shift(path, True)
     Else
        slide = f_array_shift(path, True)
     End If
     Call f_array_shift(slide_path, True)

     bs = -1
     On Error Resume Next
     bs = UBound(slide_path)
     On Error GoTo 0
     ReDim Preserve slide_path(bs + 1)
     slide_path(UBound(slide_path)) = slide

     bh = -1
     On Error Resume Next
     bh = UBound(head)
     On Error GoTo 0
     ReDim Preserve head(bh + 1)
     head(UBound(head)) = slide

     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
  Loop

  DIC2.Add "", 0
  bs = -1
  On Error Resume Next
  bs = UBound(slide_path)
  On Error GoTo 0
  If bs >= 0 Then
     DIC2.Add f_node_key(slide_path(0)), slide_path
  End If
  Set slide_node = DIC2

  f_slide_tail = Array(head, slide_node, path)

End Function

Private Function f_do_reduce(ByVal path As Variant) As Variant

  Dim RA As Object

  Dim B As Long
  
  Dim temp_path As Variant
  Dim bt As Long
  
  Dim common As Variant
  Dim bc As Long
  
  Dim temp_node As Variant
  
  Dim tail As Variant
  
  Dim I As Long
  Dim J As Long
  
  Dim S1 As Long
  Dim S2 As Long
  Dim S3 As Long
  Dim s4 As Long
  
  Dim DIC As Object
  Dim AL As Object


  Set RA = New C05RA

  Set DIC = CreateObject("Scripting.Dictionary")
  Set AL = CreateObject("System.Collections.ArrayList")

  B = -1
  On Error Resume Next
  B = UBound(path)
  On Error GoTo 0
  
  For I = 0 To B
     If f_is_hash(path(I)) = True Then
        Set DIC = path(I)
        S1 = DIC.count
     Else
        S1 = 0
     End If
     S1 = S1 + 10000
     
     S2 = f_node_offset(path(I))
     S2 = 10000 - S2 + 10000
    
     S3 = -1
     On Error Resume Next
     S3 = UBound(path(I))
     On Error GoTo 0
     S3 = S3 + 1
     S3 = S3 + 10000

     s4 = I + 10000
     
     AL.Add CStr(S1) & CStr(S2) & CStr(S3) & CStr(s4)
  Next I

  AL.Sort
  temp_path = Array()
  Erase temp_path
  bt = -1
  
  For I = 0 To AL.count - 1
     J = CLng(Right$(AL(I), 5)) - 10000
     ReDim Preserve temp_path(bt + 1)
     temp_path(UBound(temp_path)) = path(J)
     bt = bt + 1
  Next I

  bt = -1
  On Error Resume Next
  bt = UBound(temp_path)
  On Error GoTo 0
  
  For I = 0 To bt
     RA.InsertR temp_path(I)
  Next I

  path = RA.path

  common = Array()
  Erase common
    
  B = -1
  On Error Resume Next
  B = UBound(path)
  On Error GoTo 0
  
  Do While B > -1
     If f_is_hash(path(0)) = True Then
        Exit Do
     End If
     temp_node = f_array_shift(path, True)
     If f_is_array(temp_node) = True Then
        common = f_array_merge(common, temp_node)
     Else
        bc = -1
        On Error Resume Next
        bc = UBound(common)
        On Error GoTo 0
        ReDim Preserve common(bc + 1)
        common(UBound(common)) = temp_node
     End If
     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
  Loop

  B = -1
  On Error Resume Next
  B = UBound(path)
  On Error GoTo 0

  If B > 0 Then
     tail = path
  Else
     If B = 0 Then
        If f_is_hash(path(0)) = True Then
           Set tail = path(0)
        Else
           tail = path(0)
        End If
     End If
  End If

  f_do_reduce = Array(common, tail)

End Function

Private Function f_reduce_fail(ByVal reduce As Variant, ByVal fail As Variant, ByVal loptional As Long) As Variant

  Dim DIC As Object
  Dim DIC2 As Object
  Dim result As Variant
  Dim key As Variant
  Dim path As Variant
  Dim B As Long
  Dim varray As Variant
  Dim common As Variant
  Dim tail As Variant
  Dim F As Variant
  Dim I As Long
  Dim bf As Long
  

  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  If loptional <> 0 Then
     DIC.Add "", 0
     Set result = DIC
  End If

  On Error Resume Next
  Set DIC2 = reduce
  On Error GoTo 0

  For Each key In DIC2
     path = DIC2(key)
     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
    
     If B <= 0 Then
        path = path(0)
        path = f_unrev_path(path)
        DIC.Add f_node_key(path(0)), path
     Else
        varray = f_do_reduce(path)
        If f_is_hash(varray(0)) = True Then
           Set common = varray(0)
        Else
           common = varray(0)
        End If
        If f_is_hash(varray(1)) = True Then
           Set tail = varray(1)
        Else
           tail = varray(1)
        End If
        If f_is_hash(tail) = True Then
           varray = f_unrev_node(tail)
        Else
           varray = f_unrev_path(tail)
        End If
        path = f_perl_array(Array(varray), f_unrev_path(common))
        If DIC.Exists(f_node_key(path(0))) = True Then
           path = f_perl_array(DIC(f_node_key(path(0))), path)
           DIC.Remove f_node_key(path(0))
        End If
        DIC.Add f_node_key(path(0)), path
     End If
  Next

  bf = -1
  On Error Resume Next
  bf = UBound(fail)
  On Error GoTo 0
  
  For I = 0 To bf
     F = fail(I)
     DIC.Add F(0), F
  Next I

  Set result = DIC

  f_reduce_fail = Array(Array(), result)

End Function

Private Function f_unrev_path(ByVal path As Variant) As Variant

  Dim B As Long
  Dim I As Long
  Dim CNT As Long
  Dim vnew As Variant
  Dim bn As Long
  Dim P As Variant
  Dim varray As Variant

  
  vnew = Array()
  Erase vnew
  
  B = -1
  On Error Resume Next
  B = UBound(path)
  On Error GoTo 0
  
  CNT = 0
  For I = 0 To B
     If f_is_array(path(I)) = True Then
        CNT = CNT + 1
     End If
  Next I
  
  If f_is_array(path) = False Or CNT = 0 Then
     vnew = f_perl_reverse(path)
     f_unrev_path = vnew
     Exit Function
  End If

  Do While B >= 0
     If f_is_hash(f_array_pop(path, False)) = True Then
        Set P = f_array_pop(path, True)
     Else
        P = f_array_pop(path, True)
     End If

     bn = -1
     On Error Resume Next
     bn = UBound(vnew)
     On Error GoTo 0
     ReDim Preserve vnew(bn + 1)

     If f_is_array(P) = False Then
        vnew(UBound(vnew)) = P
     Else
        If f_is_hash(P) = True Then
           varray = f_unrev_node(P)
           If f_is_hash(varray(0)) = True Then
              Set vnew(UBound(vnew)) = varray(0)
           Else
              vnew(UBound(vnew)) = varray(0)
           End If
        Else
           vnew(UBound(vnew)) = f_unrev_path(P)
        End If
     End If
  
     B = -1
     On Error Resume Next
     B = UBound(path)
     On Error GoTo 0
  Loop
 
  f_unrev_path = vnew

End Function

Private Function f_unrev_node(ByRef node As Variant) As Variant

  Dim loptional As Long
  Dim vnew As Variant
  Dim bn As Long
  Dim DIC As Object
  Dim DIC2 As Object
  Dim key As Variant
  Dim temp_val As Variant
  Dim path As Variant
  
  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  loptional = f_remove_optional(node)

  If loptional <> 0 Then
     DIC.Add "", 0
     Set vnew = DIC
  End If

  Set DIC2 = node

  For Each key In DIC2
     temp_val = DIC2(key)
     path = f_unrev_path(temp_val)
     If f_is_array(path) = True Then
        On Error Resume Next
        Set DIC = vnew
        On Error GoTo 0
        If DIC.Exists(f_node_key(path(0))) = True Then
           path = f_perl_array(DIC(f_node_key(path(0))), path)
           DIC.Remove f_node_key(path(0))
        End If
        DIC.Add f_node_key(path(0)), path
        Set vnew = DIC
     Else
        bn = -1
        On Error Resume Next
        bn = UBound(vnew)
        On Error GoTo 0
        ReDim Preserve vnew(bn + 1)
        vnew(UBound(vnew)) = path
     End If
  Next

  f_unrev_node = Array(vnew)

End Function

Private Function f_compress(ByVal RESTR As String) As String

  Dim startChar As String
  Dim startI As Long

  Dim Class As Boolean
  Dim notClass As Boolean
  Dim notYen As Long

  Dim I As Long


  f_compress = ""
  startChar = ""
  startI = 0
   
  Class = False
  notClass = False
  notYen = 0
  
  For I = 1 To Len(RESTR)
     
     If Mid$(RESTR, I, 1) = "\" Then
        If notYen = 0 Then
           If I <= Len(RESTR) - 1 Then
              If Mid$(RESTR, I, 2) = "\\" Then
                 notYen = I
              ElseIf Mid$(RESTR, I, 2) = "\]" Then
                 notClass = True
              End If
           End If
        End If
     ElseIf Mid$(RESTR, I, 1) = "]" Then
        If notClass = False Then
           Class = False
        Else
           notClass = False
        End If
     End If
     
     If Class = True Then
        If I <= Len(RESTR) - 1 Then
           If AscW(Mid$(RESTR, I, 1)) + 1 = AscW(Mid$(RESTR, I + 1, 1)) And _
              Mid$(RESTR, I, 1) <> "\" And _
              Mid$(RESTR, I + 1, 1) <> "\" Then
              If startChar = "" Then
                 startChar = Mid$(RESTR, I, 1)
                 startI = I
              End If
           Else
              If startChar = "" Then
                 f_compress = f_compress & Mid$(RESTR, I, 1)
              Else
                 If I - startI > 1 Then
                    f_compress = f_compress & startChar & "-" & Mid$(RESTR, I, 1)
                 Else
                    f_compress = f_compress & Mid$(RESTR, startI, 2)
                 End If
                 startChar = ""
                 startI = 0
              End If
           End If
        Else
           If startChar = "" Then
              f_compress = f_compress & Mid$(RESTR, I, 1)
           Else
              If I - startI > 1 Then
                 f_compress = f_compress & startChar & "-" & Mid$(RESTR, I, 1)
              Else
                 f_compress = f_compress & Mid$(RESTR, startI, 2)
              End If
              startChar = ""
              startI = 0
           End If
        End If
     Else
        f_compress = f_compress & Mid$(RESTR, I, 1)
     End If
     
     If Mid$(RESTR, I, 1) = "\" Then
        If notYen = 0 Then
           If I <= Len(RESTR) - 1 Then
              If Mid$(RESTR, I, 2) = "\[" Then
                 notClass = True
              End If
           End If
        Else
           If I > notYen Then
              notYen = 0
           End If
        End If
     ElseIf Mid$(RESTR, I, 1) = "[" Then
        If notClass = False Then
           Class = True
        Else
           notClass = False
        End If
     End If
  Next I

End Function

Private Function f_array_shift(ByRef arr As Variant, ByVal F As Boolean) As Variant

  Dim arrwk As Variant
  Dim B As Long
  Dim I As Long
  
  
  B = -1
  On Error Resume Next
  B = UBound(arr)
  On Error GoTo 0
  
  arrwk = arr
  If B > 0 Then
     ReDim arrwk(B - 1)
  Else
     Erase arrwk
  End If
  
  For I = 0 To B
     If I = 0 Then
        If f_is_hash(arr(0)) = True Then
           Set f_array_shift = arr(0)
        Else
           f_array_shift = arr(0)
        End If
     Else
        If f_is_hash(arr(I)) = True Then
           Set arrwk(I - 1) = arr(I)
        Else
           arrwk(I - 1) = arr(I)
        End If
     End If
  Next I

  If F = True Then
     arr = arrwk
  End If

End Function

Private Function f_array_pop(ByRef arr As Variant, ByVal F As Boolean) As Variant

  Dim B As Long
  
  B = -1
  On Error Resume Next
  B = UBound(arr)
  On Error GoTo 0
  
  If f_is_hash(arr(B)) = True Then
     Set f_array_pop = arr(B)
  Else
     f_array_pop = arr(B)
  End If
  If F = True Then
     If B > 0 Then
        ReDim Preserve arr(B - 1)
     Else
        Erase arr
     End If
  End If

End Function

Private Function f_array_unshift(ByRef arr As Variant, ByVal P As Variant) As Long

  Dim arrwk As Variant
  Dim B As Long
  Dim I As Long
  
  
  B = -1
  On Error Resume Next
  B = UBound(arr)
  On Error GoTo 0
  
  arrwk = arr
  ReDim arrwk(B + 1)
  
  For I = 0 To B + 1
     If I = 0 Then
        If f_is_hash(P) = True Then
           Set arrwk(0) = P
        Else
           arrwk(0) = P
        End If
     Else
        If f_is_hash(arr(I - 1)) = True Then
           Set arrwk(I) = arr(I - 1)
        Else
           arrwk(I) = arr(I - 1)
        End If
     End If
  Next I

  arr = arrwk
  f_array_unshift = B + 1

End Function

Private Function f_perl_reverse(ByVal P As Variant) As Variant

  Dim B As Long
  Dim AL As Object
  Dim I As Long
  

  If f_is_array(P) = True Then
     B = -1
     On Error Resume Next
     B = UBound(P)
     On Error GoTo 0
     
     Set AL = CreateObject("System.Collections.ArrayList")
     For I = 0 To B
        AL.Add P(I)
     Next I
     AL.Reverse
     For I = 0 To AL.count - 1
        If f_is_hash(AL(I)) = True Then
           Set P(I) = AL(I)
        Else
           P(I) = AL(I)
        End If
     Next I
     f_perl_reverse = P
  Else
     f_perl_reverse = StrReverse(P)
  End If

End Function

Private Function f_remove_optional(ByRef node As Variant) As Long

  Dim DIC As Object
  
  If f_is_array(node) = False Then
     f_remove_optional = 0
     Exit Function
  End If
  If f_is_hash(node) = False Then
     f_remove_optional = 0
     Exit Function
  End If

  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC = node

  If DIC.Exists("") = True Then
     DIC.Remove ""
     Set node = DIC
     f_remove_optional = 1
     Exit Function
  Else
     f_remove_optional = 0
     Exit Function
  End If

End Function

Private Function f_perl_array(ByVal p1 As Variant, ByVal p2 As Variant) As Variant

  Dim R As Variant
  Dim S As Variant

  If f_is_array(p1) = True Then
     R = p1
  Else
     R = Array(p1)
  End If

  If f_is_array(p2) = True Then
     S = p2
  Else
     S = Array(p2)
  End If

  f_perl_array = f_array_merge(R, S)

End Function

Private Function f_array_merge(ByVal p1 As Variant, ByVal p2 As Variant) As Variant

  Dim WK() As Variant
  Dim B As Long
  Dim bp1 As Long
  Dim bp2 As Long
  
  bp1 = -1
  On Error Resume Next
  bp1 = UBound(p1)
  On Error GoTo 0
  
  bp2 = -1
  On Error Resume Next
  bp2 = UBound(p2)
  On Error GoTo 0
  
  ReDim WK(bp1 + bp2 + 1)
  
  For B = 0 To bp1
     If f_is_hash(p1(B)) = True Then
        Set WK(B) = p1(B)
     Else
        WK(B) = p1(B)
     End If
  Next B

  For B = 0 To bp2
     If f_is_hash(p2(B)) = True Then
        Set WK(bp1 + 1 + B) = p2(B)
     Else
        WK(bp1 + 1 + B) = p2(B)
     End If
  Next B

  f_array_merge = WK

End Function

Private Function f_dic_key(ByVal D As Variant, ByVal K As Long) As Variant

  Dim DIC As Object
  Dim key As Variant
  Dim CNT As Long


  Set DIC = CreateObject("Scripting.Dictionary")
  Set DIC = D

  CNT = -1
  
  For Each key In DIC
     If f_is_hash(key) = True Then
        Set f_dic_key = key
     Else
        f_dic_key = key
     End If
     CNT = CNT + 1
     If CNT = K Then
        Exit Function
     End If
  Next

End Function
Attribute VB_Name = "C06RA"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
  
Private Sub Class_Initialize()

  Set RA = New C05RA

End Sub

Sub Add(ByVal text As String)

  RA.Add (text)

End Sub

Function RE() As String

  RE = RA.RE

End Function
Attribute VB_Name = "C07Excel"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public WithEvents APP As Application
Attribute APP.VB_VarHelpID = -1

Private Sub APP_WindowActivate(ByVal WB As Workbook, ByVal Wn As Window)

  On Error Resume Next
  Unload UserForm10
  Call BAR15_TM_STR
  On Error GoTo 0

End Sub
Attribute VB_Name = "M01COMMON"
Option Explicit
Option Private Module
Option Base 1
  Public RA As Object
  Public SW_INST As Boolean                                '|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd|X|fffd|C|fffd|b|fffd|`
  Public SW_UNINST As Boolean
  Public W_ADPATH As String                                '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd|i|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd|j
  Public W_ADPATH2 As String                               '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd|i|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd|j
  Public W_THPATHS As String                               'Thisworkbook.Path|fffd|i|fffd|V|fffd||fffd||fffd|[|fffd|g|fffd|p|fffd|X|fffd|j
  Public W_DIR As String                                   '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|
  Public W_DIR2 As String                                  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|
  Public W_NAME As String                                  '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
  Public W_INI As String                                   'INI|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X
  Public W_RET As Long                                     '|fffd||7c2||fffd|l
  Public R As Long                                         '|fffd|s
  Public W_CNTFA As Long
  Public W_CNTRA As Long
  Public W_CNTRA2 As Long
  Public W_EXCNT As Long
  Public SW_WBC As Boolean
  Public SW_RMENU As Boolean
  Public W_VERE As String
  Public W_VERJ As String
  Public SW_AU As Boolean
  Public SW_FCREG As Boolean
  Public SW_TRY As Boolean
  Public SW_UF1C As Boolean
  Public W_UF8H As Double
  Public SW_USE As Boolean
  Public SW_MINIW As Boolean
  Public SW_MINIW2 As Boolean
  Public SW_1STTP As Boolean
  Public SW_SAVEPOS As Boolean
  Public W_TOP As Double
  Public W_LEFT As Double
  Public SW_WAO As Boolean
  Public SW_NETALLOFF As Boolean
  Public W_PASSLIST As String
  Public AR_WVI() As String
  Public W_APLCAP As String
  Public SW_GREPALL As Boolean
  Public SW_CLASSIC As Boolean
  Public SW_CLASSIC2 As Boolean
  Public SW_AFS As Boolean
  Public SW_GFS As Boolean
  Public SW_TEMP As Boolean
  Public W_GREPTH As String
  
  '|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
  Public W_FTEXT As String
  Public W_ATEXT As String
  Public W_RTEXT As String
  Public W_DTEXT As String
  Public AR_FTEXT(10) As String
  Public AR_ATEXT(10) As String
  Public AR_RTEXT(10) As String
  Public AR_DTEXT(10) As String
  Public AR_FALSH(10) As String
  Public AR_AALSH(10) As String
  Public AR_RALSH(10) As String
  Public AR_DALSH(10) As String
  Public SW_UPLOW As Boolean
  Public SW_STRVAL As Boolean
  Public SW_VALUE As Boolean
  Public SW_BOOK As Boolean
  Public SW_FNDCLR As Boolean
  Public W_FNDCLR As String
  Public W_FNDTAG As String
  Public SW_INCSRH As Boolean
  Public SW_GOAR As Boolean
  Public SW_DISCRLF As Boolean
  Public SW_ADDDENY As Boolean
  Public W_FSV01 As String
  Public W_FSV02 As String
  Public W_FSV03 As String
  Public W_FSV04 As String
  Public W_FSV05 As String
  Public W_FSV06 As String
  Public W_FSV07 As String
  Public W_FSV08 As String
  Public W_FSV09 As String
  Public W_FSV10 As String
  Public W_RSV01 As String
  Public W_RSV02 As String
  Public W_RSV03 As String
  Public W_RSV04 As String
  Public W_RSV05 As String
  Public W_RSV06 As String
  Public W_RSV07 As String
  Public W_RSV08 As String
  Public W_RSV09 As String
  Public W_RSV10 As String
  Public SW_ASK As Boolean
  Public SW_CLRKEEP As Boolean
  Public SW_ALLSHP As Boolean
  Public SW_COMONLY As Boolean
  Public SW_NOTCOM As Boolean
  Public SW_BLSHT As Boolean
  Public SW_HDSHT As Boolean
  Public SW_SHTNM As Boolean
  Public SW_LHD As Boolean
  Public SW_CHD As Boolean
  Public SW_RHD As Boolean
  Public SW_LFT As Boolean
  Public SW_CFT As Boolean
  Public SW_RFT As Boolean
  Public SW_HFT As Boolean
  Public W_FRC As String
  Public W_TOC As String
  Public W_GREPFL As String
  Public W_GREPDIR As String
  Public SW_GREPSUB As Boolean
  Public SW_GREPBKUP As Boolean
  Public SW_OFFSET As Boolean
  Public SW_UPDOWN As Boolean
  Public W_OFFSETR As String
  Public W_OFFSETC As String
  Public W_OBJSTR As String
  Public W_OSTR As String
  Public W_ASTR1 As String
  Public W_ASTR2 As String
  Public W_ASTR3 As String
  Public W_ASTR4 As String
  Public W_ESTR1 As String
  Public W_ESTR2 As String
  Public W_ESTR3 As String
  Public SW_SEND As Boolean
  Public SW_LOCAL As Boolean
  Public W_LCLFL As String
  Public SW_ERRREP As Boolean
  Public SW_ACTVCELL As Boolean
  Public SW_WRDCMPL As Boolean
  Public SW_TRNSP As Boolean
  Public SW_ATCLR As Boolean
  Public SW_UPDCHK As Boolean
  Public SW_FCGUIDE As Boolean
  Public SW_ENGLISH As Boolean
  Public SW_VBE As Boolean
  Public SW_MEIRYO As Boolean
  Public SW_DRAT As Boolean
  Public SW_DRRW As Boolean
  Public SW_DRCL As Boolean
  Public SW_SACE As Boolean
  Public SW_SARW As Boolean
  Public SW_SACL As Boolean
  Public SW_TOC As Boolean
  Public SW_UZ As Boolean
  Public SW_GOF As Boolean
  Public SW_BAR As Boolean
  Public SW_BARUPD As Boolean
  Public SW_GHO As Boolean
  Public SW_GHL As Boolean
  Public SW_SWRC As Boolean
  Public SW_PCMPL As Boolean
  Public SW_NOTSF As Boolean
  Public SW_NOTSG As Boolean
  Public SW_SHPUR As Boolean
  Public SW_INCSA As Boolean
  Public SW_HSGREP As Boolean
  Public SW_PRGRSS As Boolean
  Public SW_HDNM As Boolean
  Public SW_SCALL As Boolean
  Public SW_SCBK As Boolean
  Public SW_SCSHT As Boolean
  Public SW_TRGTNM As Boolean
  Public SW_TRGTRT As Boolean
  Public SW_SHIFTF As Boolean
  Public SW_CTRLF As Boolean
  Public SW_ALTF As Boolean
  Public W_KEYF As String
  Public W_ONKEYF As String
  Public SW_SHIFTR As Boolean
  Public SW_CTRLR As Boolean
  Public SW_ALTR As Boolean
  Public W_KEYR As String
  Public W_ONKEYR As String
  Public W_PAGE As Long
  Public W_PAGEN As String
  Public W_HIS As Long
  Public W_BGIMG As String
  Public W_FGCLR As String
  Public W_FGTAG As String

  Public W_REPBOOK As String
  Public W_FNDBOOK As String
  Public AR_REP() As Variant
  Public SW_UNDO As Boolean
  Public OWB As Object
  Public W_ASK As Boolean

  Public AFN As Long
  Public AR_AFS() As Long
  Public AR_AFV() As String
  Public AR_AFN() As String
  Public AR_AFR() As Long
  
  '|fffd|J|fffd||fffd||fffd|[
  Public W_LABEL As Object
  Public W_BUTTON As Object
  Public SW_BGCLR As Long
  Public W_BGCLR As Long
  Public W_BGCLRL As String
  Public W_BGCLRT As String

  '|fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[
  Public W_BOX As Object
  Public W_RETXT As String
  Public W_SELSTART As Long

  Public SW_IS As Boolean
  Public W_CB1 As String

  Public W_CLKBTN As String
  Public W_EVAR As Variant

  Public SW_TO As Boolean

  '|fffd|P|fffd||fffd||22ae|
  Public SW_DIC As Boolean
#If Win64 Then
  Public W_TMID As LongPtr
#Else
  Public W_TMID As Long
#End If
  Public myBar0 As Variant
  Public AR_PWORD() As String

  '|fffd||fffd||fffd||fffd||fffd||fffd|
  Public SW_EXC As Boolean
  Public SW_EX As Boolean
#If Win64 Then
  Public W_TMIDR As LongPtr
#Else
  Public W_TMIDR As Long
#End If
  
  '|fffd||fffd||fffd|L
  Public AR_SHRF() As String
  Public AR_SHRR() As String
  Public W_MAXF0 As Long
  Public W_MAXF1 As Long
  Public W_MAXR0 As Long
  Public W_MAXR1 As Long
  Public W_MAXR2 As Long
  
  '|fffd||fffd||fffd||fffd||fffd|X|fffd|V
  Public SW_AUTOUPD As Boolean
  Public W_STRVER As String

  Public SW_ERRFLG As Boolean
  
  '|fffd||fffd||fffd||fffd|
  Public SW_DCB As Boolean
  Public SW_DCI As Boolean
  Public SW_DCU As Boolean
  Public SW_DCK As Boolean
  Public SW_DCC As Boolean
  Public W_DCCLR As String
  Public W_DCTAG As String
  Public SW_DCB2 As Boolean
  Public SW_DCI2 As Boolean
  Public SW_DCU2 As Boolean
  Public SW_DCK2 As Boolean
  Public SW_DCC2 As Boolean
  Public W_DCCLR2 As String
  Public W_DCTAG2 As String
  Public SW_DCB3 As Boolean
  Public SW_DCI3 As Boolean
  Public SW_DCU3 As Boolean
  Public SW_DCK3 As Boolean
  
  '|fffd||fffd||fffd|l|fffd|[|fffd||fffd|
  Public AR_RENP() As String
  Public AR_RENF() As String
  
  Public W_ACS As String
  
  Public AR_PAGEI(20) As Long
  Public AR_PAGES(20) As Boolean
  
  '|fffd|A|fffd||fffd||fffd||fffd||fffd|s
  Public SW_TM As Boolean
  Public W_TMMS As Long
#If Win64 Then
  Public W_TMIDNP As LongPtr
#Else
  Public W_TMIDNP As Long
#End If
  
  Public SW_HIDE As Boolean
  Public W_MOVE As Long
  
  Public W_BOX2 As Object
  Public W_PCCNT As Long
  Public SW_PCST As Boolean
  
  Public W_TP0 As Long
  Public W_TP1 As Long
  Public W_TP11 As Long
  Public SW_ANM As Boolean
  
  Public SW_PRA As Boolean
  
  Public AR_OPE() As String
  Public W_OPE As Long
  Public SW_OPE As Boolean
  Public FR As Long
  
  Public SW_NRC As Boolean
  
  Public SW_NEWS As Boolean
  Public AR_URL(8) As String
  Public AR_NEWS(8) As String
  
  Public W_BMB01 As String
  Public W_BMB02 As String
  Public W_BMB03 As String
  Public W_BMB04 As String
  Public W_BMB05 As String
  Public W_BMB06 As String
  Public W_BMB07 As String
  Public W_BMB08 As String
  Public W_BMB09 As String
  Public W_BMB10 As String
  Public W_BMS01 As String
  Public W_BMS02 As String
  Public W_BMS03 As String
  Public W_BMS04 As String
  Public W_BMS05 As String
  Public W_BMS06 As String
  Public W_BMS07 As String
  Public W_BMS08 As String
  Public W_BMS09 As String
  Public W_BMS10 As String
  Public W_BMC01 As String
  Public W_BMC02 As String
  Public W_BMC03 As String
  Public W_BMC04 As String
  Public W_BMC05 As String
  Public W_BMC06 As String
  Public W_BMC07 As String
  Public W_BMC08 As String
  Public W_BMC09 As String
  Public W_BMC10 As String
  
  '|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v
  Public SW_MM As Boolean
  Public XL2 As Object
  Public SW_LC As Boolean
  Public W_IST As Long
  Public W_IED As Long
  Public W_VRS As Long
  Public W_VRE As Long
  Public SW_EF As Boolean
#If Win64 Then
  Public W_TMIDMM As LongPtr
#Else
  Public W_TMIDMM As Long
#End If
  Public SW_ACTIVE_OLD As Boolean
  
  
  Public SW_SPREP As Boolean
  Public W_ZPATH As String
  Public W_GBNAME As String
  Public W_FRB As String
  
  Public W_PNO As Long
  Public W_FRBS As String
  
  Public SW_P4V As Boolean
  Public SW_P8V As Boolean
  Public SW_P10V As Boolean
  Public SW_P11V As Boolean
  Public SW_P12V As Boolean
  Public SW_P13V As Boolean
  Public SW_P14V As Boolean
  Public SW_P15V As Boolean
  Public SW_P16V As Boolean
  Public SW_P17V As Boolean
  Public SW_P18V As Boolean
  
'Excel2013|fffd||20f||fffd|
#If Win64 Then
  Public W_TMIDUF As LongPtr
  Public hwndO As LongPtr
#Else
  Public W_TMIDUF As Long
  Public hwndO As Long
#End If
  Public SW_ACTUF_OLD As Boolean
  Public W_AAC As String


  Public SW_CBO2 As Boolean
  Public W_LI As Long
  
  Public XL3 As Object
  
  '|fffd||1c9||fffd||fffd||316||fffd||fffd||fffd|
  Public W_VALARG As String
  Public W_PROMTH As String
  Public SW_ACEXE As Boolean
  Public W_VALARG2 As String
  Public W_PROMTH2 As String
  Public SW_ACEXE2 As Boolean
  Public W_VALARG3 As String
  Public W_PROMTH3 As String
  Public SW_ACEXE3 As Boolean
  Public AR_MTHD() As String
  Public W_MAXM0 As Long
  Public W_MAXM1 As Long
  Public W_MAXM2 As Long
  
 'VBE
#If Win64 Then
  Public W_TMIDUF2 As LongPtr
#Else
  Public W_TMIDUF2 As Long
#End If
  Public SW_ACTUF2_OLD As Boolean
  
  Public SW_PCHK As Boolean
  Public W_AC1 As Long
#If Win64 Then
  Public W_TMIDPC As LongPtr
#Else
  Public W_TMIDPC As Long
#End If
  Public SW_CB49 As Boolean
  
  Public W_OPAGE As String
  
  '|fffd|t|fffd|B|fffd||fffd|
  Public SW_FLDD As Boolean
  Public SW_FLDR As Boolean
  Public SW_FLDU As Boolean
  Public SW_FLDL As Boolean
  Public SW_FLIC As Boolean
  Public SW_FLDC As Boolean
  
  '|fffd||208||543||fffd||fffd|[|fffd|h
  Public SW_SMPL As Boolean
  Public SW_SMPN As Boolean
  Public SW_SMPP As Boolean
  Public SW_SMPA As Boolean
  
  '|fffd|Z|fffd||fffd|
  Public W_PRDIC As String
  
  Public SW_NRE As Boolean
  Public SW_ORE As Boolean
  
  Public W_MAXP As Long
  
  Public W_CNTRLNM As String
  Public W_PNAME As String
  Public W_FCLBL As String
  
  Public SW_HISHP As Boolean
  
#If Win64 Then
  Public W_TMID_BGF As LongPtr
#Else
  Public W_TMID_BGF As Long
#End If
  
  Public SW_STOPBGF As Boolean
  Public SW_STOPBGF2 As Boolean
  Public SW_STOPBGIU As Boolean
  
  Public SW_OPEN As Boolean
  
  'Diff
  Public W_SDF1 As String
  Public W_SDF2 As String
  Public SW_SDSJIS As Boolean
  Public SW_SDUTF8 As Boolean
  Public SW_SDCRLF As Boolean
  Public SW_SDCR As Boolean
  Public SW_SDLF As Boolean
  Public W_SDST As String
  Public W_SDED As String
  Public W_SDTC As String
  Public SW_SDIS As Boolean
  Public SW_SDTR As Boolean
  Public SW_SDCC As Boolean
  Public SW_SDCAN As Boolean
  Public W_DF1STCLR As String
  Public W_DF1STTAG As String
  Public W_DF2NDCLR As String
  Public W_DF2NDTAG As String
  Public W_DFNOLCLR As String
  Public W_DFNOLTAG As String
  Public W_DFINLCLR As String
  Public W_DFINLTAG As String
  
#If Win64 Then
  Public W_TMIDBK As LongPtr
  Public W_TMIDIK As LongPtr
  Public W_TMIDB15 As LongPtr
#Else
  Public W_TMIDBK As Long
  Public W_TMIDIK As Long
  Public W_TMIDB15 As Long
#End If
  
  Public XL4 As Object
  Public W_BAR15T As Double
  Public W_BAR15L As Double
  
  Public RPDIC As Object
  
  Public W_PWCTF As String
  Public SW_PWCLN As Boolean
  Public SW_PWCRS As Boolean
  
  '|fffd||78b|`|fffd||fffd|
  Public DIC_S1 As Object
  Public DIC_S2 As Object
  
  Public XL2ND As Object
  
  'Idx
  Public W_IDXDIR As String
  Public SW_IDXSUB As Boolean
  Public SW_IDXVAL As Boolean
  
  Public SW_CLCL As Long
  Public SW_RSHELP As Boolean
  
  'DIFF D&D
#If Win64 Then
  Public ghWnd As LongPtr
  Public W_PREVWNDPROC As LongPtr
#Else
  Public ghWnd As Long
  Public W_PREVWNDPROC As Long
#End If
  Public SW_DDSC As Boolean
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Public SW_PNEXT As Boolean
  '|fffd|O|fffd||fffd|J|fffd|n|fffd||292|u
  Public W_PSS As Long
  Public W_PSR As Long
  Public W_PSC As Long
  '|fffd|O|fffd||4c2c9||288||292|u
  Public W_PRS As Long
  Public W_PRR As Long
  Public W_PRC As Long
  '|fffd||fffd||fffd||4c2c9||288||292|u
  Public W_1RS As Long
  Public W_1RR As Long
  Public W_1RC As Long
  
  '|fffd||fffd||fffd||350||fffd||fffd||fffd|
  Public SW_DESCC As Boolean
  Public SW_DESC As Boolean
  Public W_BOXD As Object
#If Win64 Then
  Public W_TMIDD As LongPtr
#Else
  Public W_TMIDD As Long
#End If
  
  '|fffd||fffd||fffd||fffd|
  Public SW_ACF As Boolean
  Public SW_AC1 As Boolean
  Public SW_AC2 As Boolean
  Public SW_AC3 As Boolean
  Public SW_AC4 As Boolean
  Public SW_AC6 As Boolean
  Public SW_AC7 As Boolean
  Public SW_AC8 As Boolean
  Public SW_AC9 As Boolean
  Public W_AC1T As String
  Public W_AC2T As String
  Public W_AC3T As String
  Public W_AC4T As String
  Public W_AC6T As String
  Public W_AC7T As String
  Public W_AC8T As String
  Public W_AC9T As String
  Public SW_AC1D As Boolean
  Public SW_AC2D As Boolean
  Public SW_AC3D As Boolean
  Public SW_AC4D As Boolean
  Public SW_AC6D As Boolean
  Public SW_AC7D As Boolean
  Public SW_AC8D As Boolean
  Public SW_AC9D As Boolean
  
  
'|fffd||598|A|fffd|t|fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||143|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
#If Win64 Then
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#Else
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#End If
  
  '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|R|fffd|s|fffd|[
#If Win64 Then
  Private Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#Else
  Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#End If
  '|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|f|fffd|B|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||310||752||fffd|i|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||389||fffd||fffd|j
#If Win64 Then
  Private Declare PtrSafe Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryA" _
     (ByVal lpPathName As String) As Long
#Else
  Private Declare Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryA" _
     (ByVal lpPathName As String) As Long
#End If
  '|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd|C|fffd|x|fffd||fffd||fffd|g
#If Win64 Then
  Private Declare PtrSafe Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As LongPtr)
#Else
  Private Declare Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
#End If
  Private Const KEYEVENTF_KEYUP = &H2
  Private Const VK_CTRL = 17
  Private Const VK_ALT = 18
  Private Const VK_F11 = 122
  Private Const VK_F4 = 115

  Dim RE As Object


'|fffd||151|O|fffd||282||303|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetForegroundWindow Lib "user32.dll" () As Long
#End If


'Z|fffd|I|fffd|[|fffd|_|fffd|[|fffd||303|g|fffd|b|fffd|v|fffd||292|u|fffd||242||fffd||fffd||fffd|q|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetTopWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
#Else
Private Declare Function GetTopWindow Lib "user32.dll" (ByVal hwnd As Long) As Long
#End If

'|fffd|w|fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||313||fffd||fffd||343|R|fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function ImmGetContext Lib "imm32.dll" (ByVal hwnd As LongPtr) As LongPtr
#Else
Private Declare Function ImmGetContext Lib "IMM32" (ByVal hwnd As Long) As Long
#End If

'|fffd|w|fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||313||fffd||fffd||343|R|fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function ImmReleaseContext Lib "imm32.dll" (ByVal hwnd As LongPtr, ByVal hIMC As LongPtr) As Long
#Else
Private Declare Function ImmReleaseContext Lib "IMM32" (ByVal hwnd As Long, ByVal hIMC As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function ImmSetCompositionString Lib "imm32.dll" Alias "ImmSetCompositionStringA" _
    (ByVal hIMC As LongPtr, ByVal dwIndex As Long, lpComp As Any, ByVal dw As Long, lpRead As Any, ByVal dw2 As Long) As Long
#Else
Private Declare Function ImmSetCompositionString Lib "imm32.dll" Alias "ImmSetCompositionStringA" _
    (ByVal hIMC As Long, ByVal dwIndex As Long, lpComp As Any, ByVal dw As Long, lpRead As Any, ByVal dw2 As Long) As Long
#End If
Private Const SCS_SETSTR = &H9

#If Win64 Then
Private Declare PtrSafe Function ImmNotifyIME Lib "imm32.dll" _
    (ByVal hIMC As LongPtr, ByVal dwAction As Long, ByVal dwIndex As Long, ByVal dwValue As Long) As Long
#Else
Private Declare Function ImmNotifyIME Lib "imm32.dll" _
    (ByVal hIMC As Long, ByVal dwAction As Long, ByVal dwIndex As Long, ByVal dwValue As Long) As Long
#End If
Private Const NI_COMPOSITIONSTR = &H15
Private Const NI_OPENCANDIDATE = &H10
Private Const CPS_CONVERT = 2

#If Win64 Then
Private Declare PtrSafe Function ImmSetOpenStatus Lib "imm32.dll" (ByVal hIMC As LongPtr, ByVal B As Long) As Long
#Else
Private Declare Function ImmSetOpenStatus Lib "imm32.dll" (ByVal hIMC As Long, ByVal B As Long) As Long
#End If
  
Private Const VK_TAB = &H9
Private Const VK_SHIFT = &H10
Private Const VK_0 = &H30
Private Const VK_1 = &H31
Private Const VK_2 = &H32
Private Const VK_3 = &H33
Private Const VK_4 = &H34
Private Const VK_5 = &H35
Private Const VK_6 = &H36
Private Const VK_7 = &H37
Private Const VK_8 = &H38
Private Const VK_9 = &H39
Private Const VK_A = &H41
Private Const VK_B = &H42
Private Const VK_C = &H43
Private Const VK_D = &H44
Private Const VK_E = &H45
Private Const VK_F = &H46
Private Const VK_G = &H47
Private Const VK_H = &H48
Private Const VK_I = &H49
Private Const VK_J = &H4A
Private Const VK_K = &H4B
Private Const VK_L = &H4C
Private Const VK_M = &H4D
Private Const VK_N = &H4E
Private Const VK_O = &H4F
Private Const VK_P = &H50
Private Const VK_Q = &H51
Private Const VK_R = &H52
Private Const VK_S = &H53
Private Const VK_T = &H54
Private Const VK_U = &H55
Private Const VK_V = &H56
Private Const VK_W = &H57
Private Const VK_X = &H58
Private Const VK_Y = &H59
Private Const VK_Z = &H5A
Private Const VK_OEM_1 = &HBA       ':
Private Const VK_OEM_PLUS = &HBB    ';
Private Const VK_OEM_COMMA = &HBC   ',
Private Const VK_OEM_MINUS = &HBD   '-
Private Const VK_OEM_PERIOD = &HBE  '.
Private Const VK_OEM_2 = &HBF       '/
Private Const VK_OEM_3 = &HC0       '@
Private Const VK_OEM_4 = &HDB       '[
Private Const VK_OEM_5 = &HDC       '\
Private Const VK_OEM_6 = &HDE       ']
Private Const VK_OEM_7 = &HDF       '^
Private Const VK_OEM_102 = &HE2     '\


#If Win64 Then
Private Declare PtrSafe Function GetDesktopWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetDesktopWindow Lib "user32" () As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function GetWindowRect Lib "user32" (ByVal hwnd As LongPtr, lpRect As RECT) As Long
#Else
Private Declare Function GetWindowRect Lib "user32" (ByVal hwnd As Long, lpRect As RECT) As Long
#End If
Private Type RECT
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type

#If Win64 Then
Private Declare PtrSafe Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
#Else
Private Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
#End If
Private Type POINTAPI
        X As Long
        Y As Long
End Type

#If Win64 Then
Private Declare PtrSafe Function SetCursorPos Lib "user32" (ByVal X As Long, ByVal Y As Long) As Long
#Else
Private Declare Function SetCursorPos Lib "user32" (ByVal X As Long, ByVal Y As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
#Else
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
#End If
Private Const WM_USER = &H400
Private Const BFFM_SETSELECTIONA = (WM_USER + 102)
Private Const BFFM_INITIALIZED = 1

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
''Private Declare PtrSafe Function GetWindowLong Lib "USER32" Alias "GetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long) As Long
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If
Private Const GWL_EXSTYLE = (-20)

#If Win64 Then
''Private Declare PtrSafe Function SetWindowLong Lib "USER32" Alias "SetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#Else
Private Declare Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As Long, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#End If
Private Const LWA_COLORKEY = 1
Private Const LWA_ALPHA = 2
Private Const WS_EX_LAYERED = &H80000

'|fffd|X|fffd||fffd||fffd|[|fffd|v
#If Win64 Then
Private Declare PtrSafe Sub Sleep Lib "KERNEL32.dll" (ByVal dwMilliseconds As Long)
#Else
Private Declare Sub Sleep Lib "KERNEL32.dll" (ByVal dwMilliseconds As Long)
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function AccessibleObjectFromWindow Lib "oleacc" ( _
    ByVal hwnd As LongPtr, ByVal dwId As Long, riid As Any, ppvObject As Object) As Long

Private Declare PtrSafe Function FindWindowExA Lib "user32" ( _
    ByVal hwndParent As LongPtr, ByVal hwndChildAfter As LongPtr, _
    ByVal lpszClass As String, ByVal lpszWindow As String) As LongPtr
#Else
Private Declare Function AccessibleObjectFromWindow Lib "oleacc" ( _
    ByVal hwnd As Long, ByVal dwId As Long, riid As Any, ppvObject As Object) As Long

Private Declare Function FindWindowExA Lib "user32" ( _
    ByVal hwndParent As Long, ByVal hwndChildAfter As Long, _
    ByVal lpszClass As String, ByVal lpszWindow As String) As Long
#End If

'|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||30e|Q|fffd||181|v|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
#If Win64 Then
Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As LongPtr
Private Type BROWSEINFO
   hwndOwner       As LongPtr  '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As LongPtr  '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#Else
Private Declare Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As Long
Private Type BROWSEINFO
   hwndOwner       As Long     '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As Long     '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#End If
'ID|fffd|l|fffd|p|fffd|X|fffd||3ca||fffd|
#If Win64 Then
Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
#Else
Private Declare Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As Long, ByVal pszPath As String) As Long
#End If

'|fffd|^|fffd|X|fffd|N|fffd||303||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As LongPtr)
#Else
Private Declare Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As Long)
#End If

Dim AR_BRSTR() As String
Dim GP As Long

Sub INST_CHK_RTN()

  Dim I As Long
  Dim FSO As Object
  
  Dim W_INST As String
  
  
  SW_UNINST = False
  
  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||752||fffd|
  W_DIR2 = ""
  W_ADPATH2 = ""
  If Val(Application.Version) >= 9 Then         'Excel2000|fffd||20f||fffd|
     Call ADPATH2000_RTN
     W_ADPATH2 = W_ADPATH
     W_NAME = Left$(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
     W_DIR2 = W_ADPATH & W_NAME
  End If

  W_ADPATH = Application.LibraryPath & "\"
  
  W_NAME = Left$(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
  W_DIR = W_ADPATH & W_NAME
  Set FSO = CreateObject("Scripting.FileSystemObject")
  W_THPATHS = FSO.GetFolder(ThisWorkbook.path).Shortpath
  W_THPATHS = Application.Substitute(W_THPATHS, FSO.GetFolder(ThisWorkbook.path).Shortname, W_NAME)
  Set FSO = Nothing
  
  SW_INST = False
  
  If (ThisWorkbook.path = W_DIR Or _
      W_THPATHS = W_DIR) And _
     Dir(W_INI) <> "" Then
     SW_INST = True
  Else
     For I = 1 To AddIns.count
        If AddIns(I).FullName = ThisWorkbook.FullName Then
           If AddIns(I).Installed = True Then
              SW_INST = True
              Exit For
           End If
        ElseIf AddIns(I).Name = ThisWorkbook.Name Then
           W_INST = AddIns(I).path & "\inst"
           If Dir(W_INST) <> "" Then
              Open W_INST For Input As #1
              Line Input #1, W_DIR2
              Close #1
           End If
        End If
     Next I
  End If

End Sub

Sub INST_AFT_RTN()

  Application.ScreenUpdating = False
  Kill W_DIR & "\inst"
  
  Workbooks(Workbooks.count).Close False
  Call INST_WRITE_RTN
  Call NRINST(W_DIR & "\" & ThisWorkbook.Name)
  
'''  Application.ScreenUpdating = True
'''  If SW_ENGLISH = True Then
'''     W_RET = MsgBox("Restart Excel." & vbCrLf & _
'''                    "Show Regular Expression Find dialog by Ctrl+R." & vbCrLf & vbCrLf & _
'''                    "Because copied to """ & W_ADPATH & W_NAME & """, " & vbCrLf & _
'''                    "you may delete """ & ThisWorkbook.Path & """.", _
'''                    vbInformation)
'''  Else
'''     W_RET = MsgBox("Excel|fffd||fffd||fffd||10b|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
'''                    "Ctrl+R|fffd||150||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf & _
'''                    "|fffd|u" & W_ADPATH & W_NAME & "|fffd|v|fffd||243|R|fffd|s|fffd|[|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||302||141|A" & vbCrLf & _
'''                    "|fffd|u" & ThisWorkbook.Path & "|fffd|v|fffd||34d||d3dc||fffd||fffd||fffd||102||fffd||fffd|\|fffd||fffd||fffd||702||fffd||fffd||fffd|B", _
'''                    vbInformation)
'''  End If

  ThisWorkbook.Close False

End Sub

Sub INST_WRITE_RTN()
  
  Dim W_INST As String
    
  W_INST = W_DIR & "\inst.vbs"
  Open W_INST For Output As #1

'''  W_STR = "Option Explicit"
'''  Print #1, W_STR
'''  W_STR = "Dim xlApp"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = GetObject(, " & Chr$(34) & "Excel.Application" & Chr$(34) & ")"
'''  Print #1, W_STR
'''  W_STR = "xlApp.AddIns(" & Chr$(34) & W_NAME & Chr$(34) & ").Installed = False"
'''  Print #1, W_STR
'''  W_STR = "On Error Resume Next"
'''  Print #1, W_STR
'''  W_STR = "xlApp.AddIns.Add " & Chr$(34) & W_DIR & "\" & ThisWorkbook.Name & Chr$(34)
'''  Print #1, W_STR
'''  W_STR = "On Error GoTo 0"
'''  Print #1, W_STR
'''  W_STR = "WScript.Sleep 1000"
'''  Print #1, W_STR
'''  W_STR = "xlApp.AddIns(" & Chr$(34) & W_NAME & Chr$(34) & ").Installed = True"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = Nothing"
'''  Print #1, W_STR
  
  Close #1

End Sub

Sub INST_RTN()
  
  Dim W_README As String
  Dim W_README_E As String
  Dim SW_ERR As Boolean
  Dim SW_MKDIR As Boolean
  Dim I As Long
  
  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
  
  
  SW_ERR = False
  SW_MKDIR = False
  'readme|fffd|`|fffd|F|fffd|b|fffd|N
  W_README = ThisWorkbook.path & "\readme.txt"
  W_README_E = ThisWorkbook.path & "\readme_e.txt"
  
  If Dir(W_README) = "" Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("""readme.txt"" doesn't exist.", vbCritical)
     Else
        W_RET = MsgBox("readme.txt|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical)
     End If
     ThisWorkbook.Close False
     Exit Sub
  End If
  
  If Dir(W_README_E) = "" Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("""readme_e.txt"" doesn't exist.", vbCritical)
     Else
        W_RET = MsgBox("readme_e.txt|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical)
     End If
     ThisWorkbook.Close False
     Exit Sub
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|w|fffd||fffd|
  If SW_ENGLISH = True Then
     W_RET = MsgBox("Change install folder from user add-in folder to other folder?", vbYesNo)
  Else
     W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|U|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo)
  End If
  If W_RET = vbYes Then
     With W_BROWSEINFO
         .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
         If SW_ENGLISH = True Then
            .lpszTitle = "Select install folder"       '|fffd|^|fffd|C|fffd|g|fffd||fffd|
         Else
            .lpszTitle = "|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
         End If
         .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
         .lpfn = FARPROC(AddressOf BrowseCallbackProc)
         .lParam = Application.UserLibraryPath & Chr$(0)
     End With

     W_ID = SHBrowseForFolder(W_BROWSEINFO)
     If W_ID > 0 Then
        W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
        W_DSPATH = W_FLDPATH
        If InStr(W_DSPATH, vbNullChar) > 0 Then
           W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
        End If
        If Right$(W_DSPATH, 1) = "\" Then
           W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
           If Right$(W_DSPATH, 1) = ":" Then
              W_DSPATH = W_DSPATH & "\"
           End If
        End If
     Else
        CoTaskMemFree W_ID
        ThisWorkbook.Close False
        Exit Sub
     End If
     CoTaskMemFree W_ID
     W_NAME = Left$(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
     W_DIR2 = W_DSPATH & "\" & W_NAME
  End If
  
  '|fffd|p|fffd|X|fffd|`|fffd|F|fffd|b|fffd|N
L_PATHCHK:
  For I = 1 To AddIns.count
     If AddIns(I).Name = ThisWorkbook.Name Then
        If AddIns(I).FullName <> W_DIR2 & "\" & ThisWorkbook.Name Then
           If SW_ENGLISH = True Then
              W_RET = MsgBox("If install folder is different from the last time, delete from add-in list and install.", vbCritical)
           Else
              W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||60aa||fffd|O|fffd||fffd||188||642||202||fffd||a347||fffd||341|A|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||103|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical)
           End If
           If Workbooks.count = 0 Then
              Workbooks.Add
           End If
           Application.Dialogs(xlDialogAddinManager).Show
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Retry?", vbYesNo)
           Else
              W_RET = MsgBox("|fffd||10e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo)
           End If
           If W_RET = vbYes Then
              GoTo L_PATHCHK
           Else
              ThisWorkbook.Close False
              Exit Sub
           End If
        End If
     End If
  Next I
  
  Application.ScreenUpdating = False
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|`|fffd|F|fffd|b|fffd|N
  If Val(Application.Version) >= 9 Then         'Excel2000|fffd||20f||fffd|
     W_DIR = W_DIR2
     If Dir(W_DIR, vbDirectory) = "" Then
        SW_ERR = False
        SW_MKDIR = True
        On Error GoTo LABEL_ERR2
        MkDir (W_DIR)
        On Error GoTo 0
     End If
  Else
     GoTo LABEL_ERR2
  End If
     
  On Error GoTo LABEL_ERR3
  Open W_DIR & "\test.cnt" For Output As #1
  Close #1
  Kill W_DIR & "\test.cnt"
  On Error GoTo 0

LABEL_COPY:
  '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|R|fffd|s|fffd|[
  W_RET = CopyFile(ThisWorkbook.path & "\" & ThisWorkbook.Name, _
                   W_DIR & "\" & ThisWorkbook.Name, 0)
  W_RET = CopyFile(W_README, W_DIR & "\readme.txt", 0)
  W_RET = CopyFile(W_README_E, W_DIR & "\readme_e.txt", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\FunCustomize.dll", _
                   W_DIR & "\FunCustomize.dll", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\auto.xla", _
                   W_DIR & "\auto.xla", 0)

  W_RET = CopyFile(ThisWorkbook.path & "\NetRE.xll", _
                   W_DIR & "\NetRE.xll", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\NetRE.dna", _
                   W_DIR & "\NetRE.dna", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\NetRE64.xll", _
                   W_DIR & "\NetRE64.xll", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\NetRE64.dna", _
                   W_DIR & "\NetRE64.dna", 0)
  W_RET = CopyFile(ThisWorkbook.path & "\NetRE.dll", _
                   W_DIR & "\NetRE.dll", 0)

  W_RET = CopyFile(ThisWorkbook.path & "\thsrs.dat", _
                   W_DIR & "\thsrs.dat", 0)

  Workbooks.Add
  
  '|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||c42c|
  Open W_DIR & "\inst" For Output As #1
  Print #1, W_DIR2
  Close #1
  If SW_ENGLISH = True Then
     Open W_DIR & "\e" For Output As #1
     Close #1
  End If
  
  Application.ScreenUpdating = True
  
  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd|
  AddIns.Add Filename:=W_DIR & "\" & ThisWorkbook.Name
  SW_INST = True
  AddIns(W_NAME).Installed = True

  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd|g|fffd||74d||fffd||fffd||782||193||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||10b|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||151||fffd||fffd||fffd||fffd||fffd|ThisWorkbook|fffd||fffd|Open|fffd||fffd|
  Exit Sub

LABEL_ERR1:
  SW_ERR = True
  SW_MKDIR = False
  Resume Next

LABEL_ERR2:
  SW_MKDIR = False
  If SW_ENGLISH = True Then
     W_RET = MsgBox("Can't auto install because of no authority." & vbCrLf & _
                    "Please manual install.", vbCritical)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                    "|fffd||84ee||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical)
  End If
  ThisWorkbook.Close False
  Exit Sub

LABEL_ERR3:
  If SW_MKDIR = True Then
     RmDir W_DIR
  End If
  If SW_ENGLISH = True Then
     W_RET = MsgBox("Can't auto install because of no authority." & vbCrLf & _
                    "Please manual install.", vbCritical)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||7ce||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                    "|fffd||84ee||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical)
  End If
  ThisWorkbook.Close False
  Exit Sub

End Sub

Sub UNINST_RTN()

  Call TM_END
  
  If W_ONKEYF <> "" Then
     Application.OnKey W_ONKEYF
  End If
  If W_ONKEYR <> "" Then
     Application.OnKey W_ONKEYR
  End If
  
  If SW_ENGLISH = True Then
     W_RET = MsgBox("""" & W_NAME & """ remains in the list of [addin] in [tool] menu." & vbCrLf & _
                    "You can delete it from the list when you select it.", _
                    vbInformation)
  Else
     W_RET = MsgBox("[|fffd|c|fffd|[|fffd||fffd|] |fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd| [|fffd|A|fffd|h|fffd|C|fffd||fffd|] |fffd||155|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||a5d7||fffd||241|u" & _
                    W_NAME & "|fffd|v|fffd||fffd||fffd|c|fffd||fffd||702||fffd||fffd||fffd||fffd|A" & vbCrLf & _
                    "|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||188||a5d7||fffd||fffd||fffd||fffd||d3dc||fffd||142||fffd||fffd||702||fffd||fffd|B", _
                    vbInformation)
  End If
  
  SW_UNINST = True
  
  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd|
  AddIns(W_NAME).Installed = False

  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||193||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||302||151||fffd||fffd||fffd||fffd||fffd|ThisWorkbook|fffd||fffd|BeforeClose|fffd||fffd|

End Sub

Sub UNINST2_RTN()

  If Val(Application.Version) >= 15 Then
     If UserForm1.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           Unload UserForm10
        End If
     End If
  End If
  
  Call TM_END
  
  SW_ENGLISH = UserForm1.CheckBox49.Value
  
  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd|
  AddIns(W_NAME).Installed = False

  '|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||193||fffd||fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||302||151||fffd||fffd||fffd||fffd||fffd|ThisWorkbook|fffd||fffd|BeforeClose|fffd||fffd|

End Sub

Sub SET_PAGE()

  Dim I As Long
  
  With UserForm1.MultiPage1
     For I = 0 To .Pages.count - 1
        If .Pages(I).Name = W_PAGEN Then
           .Value = I
           Exit For
        End If
     Next I
  End With

End Sub

Sub INI_READ_RTN()
  
  Dim W_STR As String
  Dim I As Long
    
  Open W_INI For Input As #1
  
  Do While Not EOF(1)
     Line Input #1, W_STR
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     If Left$(W_STR, 5) = "FTEXT" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_FTEXT(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 8) = "ATEXT00=" Then
        If Len(W_STR) > 8 Then
           W_ATEXT = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "ATEXT" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_ATEXT(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "RTEXT" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_RTEXT(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "FALSH" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_FALSH(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "AALSH" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_AALSH(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "RALSH" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_RALSH(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "DALSH" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_DALSH(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     'Grep|fffd|X|fffd||fffd||fffd|b|fffd|h
     ElseIf InStr(W_STR, "GREPTH=") = 1 Then
        If Len(W_STR) > 7 Then
           W_GREPTH = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd|^|fffd|u|fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "PAGEI" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_PAGEI(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|^|fffd|u|fffd|\|fffd||fffd|
     ElseIf Left$(W_STR, 5) = "PAGES" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        Select Case Right$(W_STR, 1)
           Case "0"
              AR_PAGES(I) = False
           Case "1"
              AR_PAGES(I) = True
           Case Else
              AR_PAGES(I) = False
        End Select
     '|fffd||53ec||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "UPLOW=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_UPLOW = False
           Case "1"
              SW_UPLOW = True
           Case Else
              SW_UPLOW = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd|l
     ElseIf InStr(W_STR, "STRVAL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_STRVAL = False
           Case "1"
              SW_STRVAL = True
           Case Else
              SW_STRVAL = False
        End Select
     '|fffd|l|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "VALUE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_VALUE = False
           Case "1"
              SW_VALUE = True
           Case Else
              SW_VALUE = False
        End Select
     '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "BOOK=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_BOOK = False
           Case "1"
              SW_BOOK = True
           Case Else
              SW_BOOK = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "FNDCLRD=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FNDCLR = False
           Case "1"
              SW_FNDCLR = True
           Case Else
              SW_FNDCLR = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "FNDCLR=") = 1 Then
        If Len(W_STR) > 7 Then
           W_FNDCLR = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "FNDTAG=") = 1 Then
        If Len(W_STR) > 7 Then
           W_FNDTAG = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd|T|fffd|[|fffd|`
     ElseIf InStr(W_STR, "INCSRH=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_INCSRH = False
           Case "1"
              SW_INCSRH = True
           Case Else
              SW_INCSRH = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "GOAR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GOAR = False
           Case "1"
              SW_GOAR = True
           Case Else
              SW_GOAR = False
        End Select
     '|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DISCLRF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DISCRLF = False
           Case "1"
              SW_DISCRLF = True
           Case Else
              SW_DISCRLF = False
        End Select
     '|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "NOTSF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NOTSF = False
           Case "1"
              SW_NOTSF = True
           Case Else
              SW_NOTSF = False
        End Select
     '|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g
     ElseIf InStr(W_STR, "NOTSG=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NOTSG = False
           Case "1"
              SW_NOTSG = True
           Case Else
              SW_NOTSG = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "AFS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AFS = False
           Case "1"
              SW_AFS = True
           Case Else
              SW_AFS = False
        End Select
     'Grep|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "GFS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GFS = False
           Case "1"
              SW_GFS = True
           Case Else
              SW_GFS = False
        End Select
     '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||6d2||fffd|
     ElseIf InStr(W_STR, "ADDDENY=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ADDDENY = False
           Case "1"
              SW_ADDDENY = True
           Case Else
              SW_ADDDENY = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DCB=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCB = False
           Case "1"
              SW_DCB = True
           Case Else
              SW_DCB = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||38e||fffd|
     ElseIf InStr(W_STR, "DCI=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCI = False
           Case "1"
              SW_DCI = True
           Case Else
              SW_DCI = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DCU=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCU = False
           Case "1"
              SW_DCU = True
           Case Else
              SW_DCU = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DCK=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCK = False
           Case "1"
              SW_DCK = True
           Case Else
              SW_DCK = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "DCC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCC = False
           Case "1"
              SW_DCC = True
           Case Else
              SW_DCC = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "DCCLR=") = 1 Then
        If Len(W_STR) > 6 Then
           W_DCCLR = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "DCTAG=") = 1 Then
        If Len(W_STR) > 6 Then
           W_DCTAG = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "DCB2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCB2 = False
           Case "1"
              SW_DCB2 = True
           Case Else
              SW_DCB2 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||38e||fffd|2
     ElseIf InStr(W_STR, "DCI2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCI2 = False
           Case "1"
              SW_DCI2 = True
           Case Else
              SW_DCI2 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "DCU2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCU2 = False
           Case "1"
              SW_DCU2 = True
           Case Else
              SW_DCU2 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "DCK2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCK2 = False
           Case "1"
              SW_DCK2 = True
           Case Else
              SW_DCK2 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
     ElseIf InStr(W_STR, "DCC2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCC2 = False
           Case "1"
              SW_DCC2 = True
           Case Else
              SW_DCC2 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
     ElseIf InStr(W_STR, "DCCLR2=") = 1 Then
        If Len(W_STR) > 6 Then
           W_DCCLR2 = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
     ElseIf InStr(W_STR, "DCTAG2=") = 1 Then
        If Len(W_STR) > 6 Then
           W_DCTAG2 = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "DCB3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCB3 = False
           Case "1"
              SW_DCB3 = True
           Case Else
              SW_DCB3 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||38e||fffd|3
     ElseIf InStr(W_STR, "DCI3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCI3 = False
           Case "1"
              SW_DCI3 = True
           Case Else
              SW_DCI3 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "DCU3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCU3 = False
           Case "1"
              SW_DCU3 = True
           Case Else
              SW_DCU3 = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "DCK3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DCK3 = False
           Case "1"
              SW_DCK3 = True
           Case Else
              SW_DCK3 = False
        End Select
     '|fffd||fffd||fffd||343|Z|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "ACF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ACF = False
           Case "1"
              SW_ACF = True
           Case Else
              SW_ACF = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|1
     ElseIf InStr(W_STR, "AC1=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC1 = False
           Case "1"
              SW_AC1 = True
           Case Else
              SW_AC1 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|2
     ElseIf InStr(W_STR, "AC2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC2 = False
           Case "1"
              SW_AC2 = True
           Case Else
              SW_AC2 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|3
     ElseIf InStr(W_STR, "AC3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC3 = False
           Case "1"
              SW_AC3 = True
           Case Else
              SW_AC3 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|4
     ElseIf InStr(W_STR, "AC4=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC4 = False
           Case "1"
              SW_AC4 = True
           Case Else
              SW_AC4 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|6
     ElseIf InStr(W_STR, "AC6=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC6 = False
           Case "1"
              SW_AC6 = True
           Case Else
              SW_AC6 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|7
     ElseIf InStr(W_STR, "AC7=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC7 = False
           Case "1"
              SW_AC7 = True
           Case Else
              SW_AC7 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|8
     ElseIf InStr(W_STR, "AC8=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC8 = False
           Case "1"
              SW_AC8 = True
           Case Else
              SW_AC8 = False
        End Select
     '|fffd||fffd||fffd||357|L|fffd||fffd|9
     ElseIf InStr(W_STR, "AC9=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC9 = False
           Case "1"
              SW_AC9 = True
           Case Else
              SW_AC9 = False
        End Select
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|1
     ElseIf InStr(W_STR, "AC1T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC1T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "AC2T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC2T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "AC3T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC3T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|4
     ElseIf InStr(W_STR, "AC4T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC4T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|6
     ElseIf InStr(W_STR, "AC6T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC6T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|7
     ElseIf InStr(W_STR, "AC7T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC7T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|8
     ElseIf InStr(W_STR, "AC8T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC8T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||34f||fffd||fffd||fffd|9
     ElseIf InStr(W_STR, "AC9T=") = 1 Then
        If Len(W_STR) > 5 Then
           W_AC9T = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||fffd||fffd||354||6d2||fffd|1
     ElseIf InStr(W_STR, "AC1D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC1D = False
           Case "1"
              SW_AC1D = True
           Case Else
              SW_AC1D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|2
     ElseIf InStr(W_STR, "AC2D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC2D = False
           Case "1"
              SW_AC2D = True
           Case Else
              SW_AC2D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|3
     ElseIf InStr(W_STR, "AC3D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC3D = False
           Case "1"
              SW_AC3D = True
           Case Else
              SW_AC3D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|4
     ElseIf InStr(W_STR, "AC4D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC4D = False
           Case "1"
              SW_AC4D = True
           Case Else
              SW_AC4D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|6
     ElseIf InStr(W_STR, "AC6D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC6D = False
           Case "1"
              SW_AC6D = True
           Case Else
              SW_AC6D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|7
     ElseIf InStr(W_STR, "AC7D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC7D = False
           Case "1"
              SW_AC7D = True
           Case Else
              SW_AC7D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|8
     ElseIf InStr(W_STR, "AC8D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC8D = False
           Case "1"
              SW_AC8D = True
           Case Else
              SW_AC8D = False
        End Select
     '|fffd||fffd||fffd||354||6d2||fffd|9
     ElseIf InStr(W_STR, "AC9D=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_AC9D = False
           Case "1"
              SW_AC9D = True
           Case Else
              SW_AC9D = False
        End Select
     '|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v
     ElseIf InStr(W_STR, "MM=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_MM = False
           Case Else
              SW_MM = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|1
     ElseIf InStr(W_STR, "FSV01=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV01 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|2
     ElseIf InStr(W_STR, "FSV02=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV02 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|3
     ElseIf InStr(W_STR, "FSV03=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV03 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|4
     ElseIf InStr(W_STR, "FSV04=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV04 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|5
     ElseIf InStr(W_STR, "FSV05=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV05 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|6
     ElseIf InStr(W_STR, "FSV06=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV06 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|7
     ElseIf InStr(W_STR, "FSV07=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV07 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|8
     ElseIf InStr(W_STR, "FSV08=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV08 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|9
     ElseIf InStr(W_STR, "FSV09=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV09 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|10
     ElseIf InStr(W_STR, "FSV10=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FSV10 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|1
     ElseIf InStr(W_STR, "RSV01=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV01 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|2
     ElseIf InStr(W_STR, "RSV02=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV02 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|3
     ElseIf InStr(W_STR, "RSV03=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV03 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|4
     ElseIf InStr(W_STR, "RSV04=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV04 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|5
     ElseIf InStr(W_STR, "RSV05=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV05 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|6
     ElseIf InStr(W_STR, "RSV06=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV06 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|7
     ElseIf InStr(W_STR, "RSV07=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV07 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|8
     ElseIf InStr(W_STR, "RSV08=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV08 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|9
     ElseIf InStr(W_STR, "RSV09=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV09 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||6d1||fffd|10
     ElseIf InStr(W_STR, "RSV10=") = 1 Then
        If Len(W_STR) > 6 Then
           W_RSV10 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB01=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB01 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB02=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB02 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB03=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB03 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB04=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB04 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB05=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB05 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB06=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB06 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB07=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB07 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB08=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB08 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB09=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB09 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMB10=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMB10 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS01=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS01 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS02=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS02 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS03=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS03 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS04=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS04 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS05=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS05 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS06=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS06 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS07=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS07 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS08=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS08 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS09=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS09 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMS10=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMS10 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC01=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC01 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC02=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC02 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC03=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC03 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC04=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC04 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC05=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC05 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC06=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC06 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC07=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC07 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC08=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC08 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC09=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC09 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
     ElseIf InStr(W_STR, "BMC10=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BMC10 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|u|fffd||fffd||fffd||fffd||fffd|m|fffd|F
     ElseIf InStr(W_STR, "REPASK=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ASK = False
           Case "1"
              SW_ASK = True
           Case Else
              SW_ASK = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd|F|fffd||6ce||fffd|
     ElseIf InStr(W_STR, "CLRKEEP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CLRKEEP = False
           Case "1"
              SW_CLRKEEP = True
           Case Else
              SW_CLRKEEP = False
        End Select
     '|fffd|S|fffd||102||303|V|fffd|F|fffd|C|fffd|v
     ElseIf InStr(W_STR, "ALLSHP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ALLSHP = False
           Case "1"
              SW_ALLSHP = True
           Case Else
              SW_ALLSHP = False
        End Select
     '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||fffd|
     ElseIf InStr(W_STR, "COMONLY=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_COMONLY = False
           Case "1"
              SW_COMONLY = True
           Case Else
              SW_COMONLY = False
        End Select
     '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||fffd|
     ElseIf InStr(W_STR, "NOTCOM=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NOTCOM = False
           Case "1"
              SW_NOTCOM = True
           Case Else
              SW_NOTCOM = False
        End Select
     '|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|
     ElseIf InStr(W_STR, "BLSHT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_BLSHT = False
           Case "1"
              SW_BLSHT = True
           Case Else
              SW_BLSHT = False
        End Select
     '|fffd||fffd|\|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|
     ElseIf InStr(W_STR, "HDSHT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_HDSHT = False
           Case "1"
              SW_HDSHT = True
           Case Else
              SW_HDSHT = False
        End Select
     '|fffd|V|fffd|[|fffd|g|fffd||fffd|
     ElseIf InStr(W_STR, "SHTNM=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SHTNM = False
           Case "1"
              SW_SHTNM = True
           Case Else
              SW_SHTNM = False
        End Select
     '|fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|[
     ElseIf InStr(W_STR, "LHD=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_LHD = False
           Case "1"
              SW_LHD = True
           Case Else
              SW_LHD = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|[
     ElseIf InStr(W_STR, "CHD=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CHD = False
           Case "1"
              SW_CHD = True
           Case Else
              SW_CHD = False
        End Select
     '|fffd|E|fffd|w|fffd|b|fffd|_|fffd|[
     ElseIf InStr(W_STR, "RHD=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_RHD = False
           Case "1"
              SW_RHD = True
           Case Else
              SW_RHD = False
        End Select
     '|fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|[
     ElseIf InStr(W_STR, "LFT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_LFT = False
           Case "1"
              SW_LFT = True
           Case Else
              SW_LFT = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|[
     ElseIf InStr(W_STR, "CFT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CFT = False
           Case "1"
              SW_CFT = True
           Case Else
              SW_CFT = False
        End Select
     '|fffd|E|fffd|t|fffd|b|fffd|^|fffd|[
     ElseIf InStr(W_STR, "RFT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_RFT = False
           Case "1"
              SW_RFT = True
           Case Else
              SW_RFT = False
        End Select
     '|fffd|B|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
     ElseIf InStr(W_STR, "HFT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_HFT = False
           Case "1"
              SW_HFT = True
           Case Else
              SW_HFT = False
        End Select
     '|fffd|s|fffd||fffd||fffd||fffd||fffd||582||fffd|
     ElseIf InStr(W_STR, "SWRC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SWRC = False
           Case "1"
              SW_SWRC = True
           Case Else
              SW_SWRC = False
        End Select
     '|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd|O
     ElseIf InStr(W_STR, "HDNM=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_HDNM = False
           Case "1"
              SW_HDNM = True
           Case Else
              SW_HDNM = False
        End Select
     '|fffd||348||351|S|fffd||fffd|
     ElseIf InStr(W_STR, "SCALL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SCALL = False
           Case "1"
              SW_SCALL = True
           Case Else
              SW_SCALL = False
        End Select
     '|fffd||348||343|u|fffd|b|fffd|N
     ElseIf InStr(W_STR, "SCBK=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SCBK = False
           Case "1"
              SW_SCBK = True
           Case Else
              SW_SCBK = False
        End Select
     '|fffd||348||343|V|fffd|[|fffd|g
     ElseIf InStr(W_STR, "SCSHT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SCSHT = False
           Case "1"
              SW_SCSHT = True
           Case Else
              SW_SCSHT = False
        End Select
     '|fffd||38f||6d6||fffd||fffd|O
     ElseIf InStr(W_STR, "TRGTNM=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_TRGTNM = False
           Case "1"
              SW_TRGTNM = True
           Case Else
              SW_TRGTNM = False
        End Select
     '|fffd||38f||6ce|Q|fffd||194||348||fffd|
     ElseIf InStr(W_STR, "TRGTRT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_TRGTRT = False
           Case "1"
              SW_TRGTRT = True
           Case Else
              SW_TRGTRT = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "FLDD=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLDD = False
           Case "1"
              SW_FLDD = True
           Case Else
              SW_FLDD = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd|E
     ElseIf InStr(W_STR, "FLDR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLDR = False
           Case "1"
              SW_FLDR = True
           Case Else
              SW_FLDR = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "FLDU=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLDU = False
           Case "1"
              SW_FLDU = True
           Case Else
              SW_FLDU = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "FLDL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLDL = False
           Case "1"
              SW_FLDL = True
           Case Else
              SW_FLDL = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "FLIC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLIC = False
           Case "1"
              SW_FLIC = True
           Case Else
              SW_FLIC = False
        End Select
     '|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "FLDC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FLDC = False
           Case "1"
              SW_FLDC = True
           Case Else
              SW_FLDC = False
        End Select
     '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "EXFRCLM=") = 1 Then
        If Len(W_STR) > 8 Then
           W_FRC = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||fffd||fffd|o|fffd||fffd||fffd|
     ElseIf InStr(W_STR, "EXTOCLM=") = 1 Then
        If Len(W_STR) > 8 Then
           W_TOC = Right$(W_STR, Len(W_STR) - 8)
        End If
     'GREP|fffd|t|fffd|@|fffd|C|fffd||fffd|
     ElseIf InStr(W_STR, "GREPFL=") = 1 Then
        If Len(W_STR) > 7 Then
           W_GREPFL = Right$(W_STR, Len(W_STR) - 7)
        End If
     'GREP|fffd|t|fffd|H|fffd||fffd||fffd|_(|fffd||fffd|ver|fffd||fffd||fffd||fffd||308||68d|s|fffd|p)
     ElseIf InStr(W_STR, "GREPDIR=") = 1 Then
        If Len(W_STR) > 8 Then
           AR_DTEXT(1) = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315||fffd||fffd||fffd||fffd||fffd|
     ElseIf Left$(W_STR, 5) = "DTEXT" And _
        IsNumeric(Mid$(W_STR, 6, 2)) = True And _
        Mid$(W_STR, 8, 1) = "=" Then
        I = CLng(Mid$(W_STR, 6, 2))
        If Len(W_STR) > 8 Then
           AR_DTEXT(I) = Right$(W_STR, Len(W_STR) - 8)
        End If
     'GREP|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_
     ElseIf InStr(W_STR, "GREPSUB=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GREPSUB = False
           Case "1"
              SW_GREPSUB = True
           Case Else
              SW_GREPSUB = False
        End Select
     'UNZIP
     ElseIf InStr(W_STR, "UNZIP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_UZ = False
           Case "1"
              SW_UZ = True
           Case Else
              SW_UZ = False
        End Select
     'GREP|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
     ElseIf InStr(W_STR, "GREPBKUP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GREPBKUP = False
           Case "1"
              SW_GREPBKUP = True
           Case Else
              SW_GREPBKUP = False
        End Select
     'GREP|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
     ElseIf InStr(W_STR, "GOF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GOF = False
           Case "1"
              SW_GOF = True
           Case Else
              SW_GOF = False
        End Select
     '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g
     ElseIf InStr(W_STR, "OFFSET=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_OFFSET = False
           Case "1"
              SW_OFFSET = True
           Case Else
              SW_OFFSET = False
        End Select
     '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|s
     ElseIf InStr(W_STR, "OFFSETR=") = 1 Then
        If Len(W_STR) > 8 Then
           W_OFFSETR = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd|
     ElseIf InStr(W_STR, "OFFSETC=") = 1 Then
        If Len(W_STR) > 8 Then
           W_OFFSETC = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||327a||fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "UPDOWN=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_UPDOWN = False
           Case "1"
              SW_UPDOWN = True
           Case Else
              SW_UPDOWN = False
        End Select
     '|fffd||fffd||fffd||5c2||fffd|GREP
     ElseIf InStr(W_STR, "GREPALL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GREPALL = False
           Case "1"
              SW_GREPALL = True
           Case Else
              SW_GREPALL = False
        End Select
     '|fffd|`|fffd|F|fffd|b|fffd|N|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "OBJSTR=") = 1 Then
        If Len(W_STR) > 7 Then
           W_OBJSTR = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "OSTR=") = 1 Then
        If Len(W_STR) > 5 Then
           W_OSTR = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1
     ElseIf InStr(W_STR, "ASTR1=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ASTR1 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "ASTR2=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ASTR2 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "ASTR3=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ASTR3 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|4
     ElseIf InStr(W_STR, "ASTR4=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ASTR4 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|1
     ElseIf InStr(W_STR, "ESTR1=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ESTR1 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|2
     ElseIf InStr(W_STR, "ESTR2=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ESTR2 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|3
     ElseIf InStr(W_STR, "ESTR3=") = 1 Then
        If Len(W_STR) > 6 Then
           W_ESTR3 = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd|M
     ElseIf InStr(W_STR, "SEND=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SEND = False
           Case "1"
              SW_SEND = True
           Case Else
              SW_SEND = False
        End Select
     '|fffd||fffd||fffd|[|fffd|J|fffd||fffd|
     ElseIf InStr(W_STR, "LOCAL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_LOCAL = False
           Case "1"
              SW_LOCAL = True
           Case Else
              SW_LOCAL = False
        End Select
     '|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
     ElseIf InStr(W_STR, "LCLFL=") = 1 Then
        If Len(W_STR) > 6 Then
           W_LCLFL = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||fffd||fffd||743|Z|fffd||fffd|
     ElseIf InStr(W_STR, "ACTVCELL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ACTVCELL = False
           Case "1"
              SW_ACTVCELL = True
           Case Else
              SW_ACTVCELL = False
        End Select
     '|fffd|P|fffd||fffd||22ae|
     ElseIf InStr(W_STR, "WRDCMPL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_WRDCMPL = False
           Case "1"
              SW_WRDCMPL = True
           Case Else
              SW_WRDCMPL = False
        End Select
     '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|||fffd|[|fffd|g
     ElseIf InStr(W_STR, "ERRREP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ERRREP = False
           Case "1"
              SW_ERRREP = True
           Case Else
              SW_ERRREP = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "TRNSP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_TRNSP = False
           Case "1"
              SW_TRNSP = True
           Case Else
              SW_TRNSP = False
        End Select
     '|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "BGCLR=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BGCLR = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "BGCLRL=") = 1 Then
        If Len(W_STR) > 7 Then
           W_BGCLRL = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "BGCLRT=") = 1 Then
        If Len(W_STR) > 7 Then
           W_BGCLRT = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "ATCLR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ATCLR = False
           Case "1"
              SW_ATCLR = True
           Case Else
              SW_ATCLR = False
        End Select
     '|fffd|X|fffd|V|fffd|m|fffd|F
     ElseIf InStr(W_STR, "UPDCHK=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_UPDCHK = False
           Case "1"
              SW_UPDCHK = True
           Case Else
              SW_UPDCHK = False
        End Select
     '|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd||5c2||103|I|fffd|t
     ElseIf InStr(W_STR, "NETALLOFF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NETALLOFF = False
           Case "1"
              SW_NETALLOFF = True
           Case Else
              SW_NETALLOFF = False
        End Select
     '|fffd||590||fffd||fffd|K|fffd|C|fffd|h
     ElseIf InStr(W_STR, "FCGUIDE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_FCGUIDE = False
           Case "1"
              SW_FCGUIDE = True
           Case Else
              SW_FCGUIDE = False
        End Select
     'ENGLISH
     ElseIf InStr(W_STR, "ENGLISH=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ENGLISH = False
           Case "1"
              SW_ENGLISH = True
           Case Else
              SW_ENGLISH = False
        End Select
     'VBE
     ElseIf InStr(W_STR, "VBE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_VBE = False
           Case "1"
              SW_VBE = True
           Case Else
              SW_VBE = False
        End Select
     'MEIRYO
     ElseIf InStr(W_STR, "MEIRYO=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_MEIRYO = False
           Case "1"
              SW_MEIRYO = True
           Case Else
              SW_MEIRYO = False
        End Select
     '|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[
     ElseIf InStr(W_STR, "BAR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_BAR = False
           Case "1"
              SW_BAR = True
           Case Else
              SW_BAR = False
        End Select
     'Grep|fffd|o|fffd||7c3|I|fffd|t
     ElseIf InStr(W_STR, "GHO=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GHO = False
           Case "1"
              SW_GHO = True
           Case Else
              SW_GHO = False
        End Select
     '|fffd|n|fffd|C|fffd||fffd||fffd|C|fffd|g
     ElseIf InStr(W_STR, "GHL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_GHL = False
           Case "1"
              SW_GHL = True
           Case Else
              SW_GHL = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DRAT=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DRAT = False
           Case "1"
              SW_DRAT = True
           Case Else
              SW_DRAT = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
     ElseIf InStr(W_STR, "DRRW=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DRRW = False
           Case "1"
              SW_DRRW = True
           Case Else
              SW_DRRW = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "DRCL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DRCL = False
           Case "1"
              SW_DRCL = True
           Case Else
              SW_DRCL = False
        End Select
     '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|Z|fffd||fffd|
     ElseIf InStr(W_STR, "SACE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SACE = False
           Case "1"
              SW_SACE = True
           Case Else
              SW_SACE = False
        End Select
     '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|s
     ElseIf InStr(W_STR, "SARW=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SARW = False
           Case "1"
              SW_SARW = True
           Case Else
              SW_SARW = False
        End Select
     '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|
     ElseIf InStr(W_STR, "SACL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SACL = False
           Case "1"
              SW_SACL = True
           Case Else
              SW_SACL = False
        End Select
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "EXC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_EXC = False
           Case "1"
              SW_EXC = True
           Case Else
              SW_EXC = False
        End Select
     '|fffd||fffd||fffd||350||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "DESCC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_DESCC = False
           Case "1"
              SW_DESCC = True
           Case Else
              SW_DESCC = False
        End Select
     '|fffd||fffd||fffd||295||22ae|
     ElseIf InStr(W_STR, "PCMPL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_PCMPL = False
           Case "1"
              SW_PCMPL = True
           Case Else
              SW_PCMPL = False
        End Select
     '|fffd|^|fffd|u|fffd||fffd||fffd||fffd||fffd||3cd|X
     ElseIf InStr(W_STR, "TOC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_TOC = False
           Case "1"
              SW_TOC = True
           Case Else
              SW_TOC = False
        End Select
     '|fffd|j|fffd||fffd||fffd|[|fffd|X
     ElseIf InStr(W_STR, "NEWS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NEWS = False
           Case "1"
              SW_NEWS = True
           Case Else
              SW_NEWS = False
        End Select
     '|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||103|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|
     ElseIf InStr(W_STR, "SHPUR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SHPUR = False
           Case "1"
              SW_SHPUR = True
           Case Else
              SW_SHPUR = False
        End Select
     '|fffd|X|fffd|}|fffd|[|fffd|g|fffd|A|fffd|[|fffd|g|fffd||702||fffd|
     ElseIf InStr(W_STR, "INCSA=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_INCSA = False
           Case "1"
              SW_INCSA = True
           Case Else
              SW_INCSA = False
        End Select
     '|fffd|V|fffd|F|fffd|C|fffd|v|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|e
     ElseIf InStr(W_STR, "HISHP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_HISHP = False
           Case "1"
              SW_HISHP = True
           Case Else
              SW_HISHP = False
        End Select
     '|fffd||fffd||fffd||fffd|Grep
     ElseIf InStr(W_STR, "HSGREP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_HSGREP = False
           Case "1"
              SW_HSGREP = True
           Case Else
              SW_HSGREP = False
        End Select
     'FRBS
     ElseIf InStr(W_STR, "FRBS=") = 1 Then
        If Len(W_STR) > 5 Then
           W_FRBS = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd|i|fffd||fffd|
     ElseIf InStr(W_STR, "PRGRSS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_PRGRSS = False
           Case "1"
              SW_PRGRSS = True
           Case Else
              SW_PRGRSS = False
        End Select
     '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
     ElseIf InStr(W_STR, "PROMTH=") = 1 Then
        If Len(W_STR) > 7 Then
           W_PROMTH = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "VALARG=") = 1 Then
        If Len(W_STR) > 7 Then
           W_VALARG = Right$(W_STR, Len(W_STR) - 7)
        End If
     '|fffd||fffd||fffd|s
     ElseIf InStr(W_STR, "ACEXE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ACEXE = False
           Case "1"
              SW_ACEXE = True
           Case Else
              SW_ACEXE = False
        End Select
     '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
     ElseIf InStr(W_STR, "PROMTH2=") = 1 Then
        If Len(W_STR) > 8 Then
           W_PROMTH2 = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "VALARG2=") = 1 Then
        If Len(W_STR) > 8 Then
           W_VALARG2 = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||fffd||fffd|s
     ElseIf InStr(W_STR, "ACEXE2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ACEXE2 = False
           Case "1"
              SW_ACEXE2 = True
           Case Else
              SW_ACEXE2 = False
        End Select
     '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
     ElseIf InStr(W_STR, "PROMTH3=") = 1 Then
        If Len(W_STR) > 8 Then
           W_PROMTH3 = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "VALARG3=") = 1 Then
        If Len(W_STR) > 8 Then
           W_VALARG3 = Right$(W_STR, Len(W_STR) - 8)
        End If
     '|fffd||fffd||fffd|s
     ElseIf InStr(W_STR, "ACEXE3=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ACEXE3 = False
           Case "1"
              SW_ACEXE3 = True
           Case Else
              SW_ACEXE3 = False
        End Select
     '|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E
     ElseIf InStr(W_STR, "MINIW=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_MINIW = False
           Case "1"
              SW_MINIW = True
           Case Else
              SW_MINIW = False
        End Select
     '|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|Q
     ElseIf InStr(W_STR, "MINIW2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_MINIW2 = False
           Case "1"
              SW_MINIW2 = True
           Case Else
              SW_MINIW2 = False
        End Select
     '|fffd||208||543||fffd||fffd|[|fffd|h
     ElseIf InStr(W_STR, "SMPL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SMPL = False
           Case "1"
              SW_SMPL = True
           Case Else
              SW_SMPL = False
        End Select
     '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd||fffd|
     ElseIf InStr(W_STR, "SMPN=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SMPN = False
           Case "1"
              SW_SMPN = True
           Case Else
              SW_SMPN = False
        End Select
     '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd|O
     ElseIf InStr(W_STR, "SMPP=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SMPP = False
           Case "1"
              SW_SMPP = True
           Case Else
              SW_SMPP = False
        End Select
     '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd||fffd||fffd||5c2||fffd|
     ElseIf InStr(W_STR, "SMPA=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SMPA = False
           Case "1"
              SW_SMPA = True
           Case Else
              SW_SMPA = False
        End Select
     '|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "PRDIC=") = 1 Then
        If Len(W_STR) > 6 Then
           W_PRDIC = Right$(W_STR, Len(W_STR) - 6)
        End If
     '.NET Framework|fffd||fffd||fffd|K|fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "NRE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_NRE = False
           Case "1"
              SW_NRE = True
           Case Else
              SW_NRE = False
        End Select
     'Onigmo|fffd||fffd||fffd|K|fffd|\|fffd||fffd|
     ElseIf InStr(W_STR, "ORE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ORE = False
           Case "1"
              SW_ORE = True
           Case Else
              SW_ORE = False
        End Select
     '|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "SHIFTF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SHIFTF = False
           Case "1"
              SW_SHIFTF = True
           Case Else
              SW_SHIFTF = False
        End Select
     '|fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "CTRLF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CTRLF = False
           Case "1"
              SW_CTRLF = True
           Case Else
              SW_CTRLF = False
        End Select
     '|fffd|`|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "ALTF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ALTF = False
           Case "1"
              SW_ALTF = True
           Case Else
              SW_ALTF = False
        End Select
     '|fffd|L|fffd|[|fffd|i|fffd||fffd||fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "KEYF=") = 1 Then
        If Len(W_STR) > 5 Then
           W_KEYF = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "SHIFTR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SHIFTR = False
           Case "1"
              SW_SHIFTR = True
           Case Else
              SW_SHIFTR = False
        End Select
     '|fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "CTRLR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CTRLR = False
           Case "1"
              SW_CTRLR = True
           Case Else
              SW_CTRLR = False
        End Select
     '|fffd|`|fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "ALTR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_ALTR = False
           Case "1"
              SW_ALTR = True
           Case Else
              SW_ALTR = False
        End Select
     '|fffd|L|fffd|[|fffd|i|fffd|u|fffd||fffd||fffd|j
     ElseIf InStr(W_STR, "KEYR=") = 1 Then
        If Len(W_STR) > 5 Then
           W_KEYR = Right$(W_STR, Len(W_STR) - 5)
        End If
     '|fffd|n|fffd|C|fffd|X|fffd|R|fffd|A
     ElseIf InStr(W_STR, "HIS=") = 1 Then
        If Len(W_STR) > 4 Then
           W_HIS = 0
           On Error Resume Next
           W_HIS = CLng("&H" & Right$(W_STR, Len(W_STR) - 4))
           On Error GoTo 0
           If W_HIS Mod 100 > 0 Then
              W_HIS = 0
           End If
        End If
     '|fffd|w|fffd|i|fffd||645c|
     ElseIf InStr(W_STR, "BGIMG=") = 1 Then
        If Len(W_STR) > 6 Then
           W_BGIMG = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|O|fffd|i|fffd||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "FGCLR=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FGCLR = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|O|fffd|i|fffd||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "FGTAG=") = 1 Then
        If Len(W_STR) > 6 Then
           W_FGTAG = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd||292|u|fffd|L|fffd||fffd|
     ElseIf InStr(W_STR, "SAVEPOS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SAVEPOS = False
           Case "1"
              SW_SAVEPOS = True
           Case Else
              SW_SAVEPOS = False
        End Select
     '|fffd|g|fffd|b|fffd|v
     ElseIf InStr(W_STR, "TOP=") = 1 Then
        If Len(W_STR) > 4 Then
           W_TOP = CDbl(Right$(W_STR, Len(W_STR) - 4))
        End If
     '|fffd||fffd||fffd|t|fffd|g
     ElseIf InStr(W_STR, "LEFT=") = 1 Then
        If Len(W_STR) > 5 Then
           W_LEFT = CDbl(Right$(W_STR, Len(W_STR) - 5))
        End If
     '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|A|fffd|j|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|t
     ElseIf InStr(W_STR, "WAO=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_WAO = False
           Case "1"
              SW_WAO = True
           Case Else
              SW_WAO = False
        End Select
     '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||a39e||fffd||fffd|~
     ElseIf InStr(W_STR, "STOPBGF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_STOPBGF = False
           Case "1"
              SW_STOPBGF = True
           Case Else
              SW_STOPBGF = False
        End Select
     '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|~
     ElseIf InStr(W_STR, "STOPBGF2=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_STOPBGF2 = False
           Case "1"
              SW_STOPBGF2 = True
           Case Else
              SW_STOPBGF2 = False
        End Select
     '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|X|fffd|V|fffd||fffd|~
     ElseIf InStr(W_STR, "STOPBGIU=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_STOPBGIU = False
           Case "1"
              SW_STOPBGIU = True
           Case Else
              SW_STOPBGIU = False
        End Select
     'Smart Diff |fffd|t|fffd|@|fffd|C|fffd||fffd|1
     ElseIf InStr(W_STR, "SDF1=") = 1 Then
        If Len(W_STR) > 5 Then
           W_SDF1 = Right$(W_STR, Len(W_STR) - 5)
        End If
     'Smart Diff |fffd|t|fffd|@|fffd|C|fffd||fffd|2
     ElseIf InStr(W_STR, "SDF2=") = 1 Then
        If Len(W_STR) > 5 Then
           W_SDF2 = Right$(W_STR, Len(W_STR) - 5)
        End If
     'Smart DifF Shift-JIS
     ElseIf InStr(W_STR, "SDSJIS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDSJIS = False
           Case "1"
              SW_SDSJIS = True
           Case Else
              SW_SDSJIS = False
        End Select
     'Smart DifF UTF-8
     ElseIf InStr(W_STR, "SDUTF8=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDUTF8 = False
           Case "1"
              SW_SDUTF8 = True
           Case Else
              SW_SDUTF8 = False
        End Select
     'Smart DifF CRLF
     ElseIf InStr(W_STR, "SDCRLF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDCRLF = False
           Case "1"
              SW_SDCRLF = True
           Case Else
              SW_SDCRLF = False
        End Select
     'Smart DifF CR
     ElseIf InStr(W_STR, "SDCR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDCR = False
           Case "1"
              SW_SDCR = True
           Case Else
              SW_SDCR = False
        End Select
     'Smart DifF LF
     ElseIf InStr(W_STR, "SDLF=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDLF = False
           Case "1"
              SW_SDLF = True
           Case Else
              SW_SDLF = False
        End Select
     'Smart Diff |fffd|J|fffd|n|fffd||fffd|
     ElseIf InStr(W_STR, "SDST=") = 1 Then
        If Len(W_STR) > 5 Then
           W_SDST = Right$(W_STR, Len(W_STR) - 5)
        End If
     'Smart Diff |fffd|I|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "SDED=") = 1 Then
        If Len(W_STR) > 5 Then
           W_SDED = Right$(W_STR, Len(W_STR) - 5)
        End If
     'Smart Diff |fffd|^|fffd|u|fffd||fffd|
     ElseIf InStr(W_STR, "SDTC=") = 1 Then
        If Len(W_STR) > 5 Then
           W_SDTC = Right$(W_STR, Len(W_STR) - 5)
        End If
     'Smart Diff |fffd||d448d|s|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "SDIS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDIS = False
           Case "1"
              SW_SDIS = True
           Case Else
              SW_SDIS = False
        End Select
     'Smart Diff |fffd|s|fffd||fffd||fffd|O|fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||16cce||fffd|
     ElseIf InStr(W_STR, "SDTR=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDTR = False
           Case "1"
              SW_SDTR = True
           Case Else
              SW_SDTR = False
        End Select
     'Smart Diff |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|r
     ElseIf InStr(W_STR, "SDCC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_SDCC = False
           Case "1"
              SW_SDCC = True
           Case Else
              SW_SDCC = False
        End Select
     'Diff1st|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DF1STCLR=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DF1STCLR = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff1st|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DF1STTAG=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DF1STTAG = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff2nd|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DF2NDCLR=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DF2NDCLR = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff2nd|fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DF2NDTAG=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DF2NDTAG = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff|fffd|s|fffd||202||fffd||fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DFNOLCLR=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DFNOLCLR = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff|fffd|s|fffd||202||fffd||fffd|w|fffd|i|fffd|F
     ElseIf InStr(W_STR, "DFNOLTAG=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DFNOLTAG = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff|fffd|s|fffd||fffd||fffd||fffd||fffd||655||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "DFINLCLR=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DFINLCLR = Right$(W_STR, Len(W_STR) - 9)
        End If
     'Diff|fffd|s|fffd||fffd||fffd||fffd||fffd||655||fffd||fffd||fffd||fffd|F
     ElseIf InStr(W_STR, "DFINLTAG=") = 1 Then
        If Len(W_STR) > 9 Then
           W_DFINLTAG = Right$(W_STR, Len(W_STR) - 9)
        End If
     '2013|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd|[
     ElseIf InStr(W_STR, "BAR15T=") = 1 Then
        If Len(W_STR) > 7 Then
           W_BAR15T = 0
           On Error Resume Next
           W_BAR15T = CDbl(Right$(W_STR, Len(W_STR) - 7))
           On Error GoTo 0
        End If
     '2013|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|[
     ElseIf InStr(W_STR, "BAR15L=") = 1 Then
        If Len(W_STR) > 7 Then
           W_BAR15L = 0
           On Error Resume Next
           W_BAR15L = CDbl(Right$(W_STR, Len(W_STR) - 7))
           On Error GoTo 0
        End If
     '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||351||38f||fffd|
     ElseIf InStr(W_STR, "PWCTF=") = 1 Then
        If Len(W_STR) > 6 Then
           W_PWCTF = Right$(W_STR, Len(W_STR) - 6)
        End If
     '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||350||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "PWCLN=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_PWCLN = False
           Case "1"
              SW_PWCLN = True
           Case Else
              SW_PWCLN = False
        End Select
     '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||34d||10a|J
     ElseIf InStr(W_STR, "PWCRS=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_PWCRS = False
           Case "1"
              SW_PWCRS = True
           Case Else
              SW_PWCRS = False
        End Select
     'Idx|fffd|t|fffd|H|fffd||fffd||fffd|_
     ElseIf InStr(W_STR, "IDXDIR=") = 1 Then
        If Len(W_STR) > 7 Then
           W_IDXDIR = Right$(W_STR, Len(W_STR) - 7)
        End If
     'Idx|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_
     ElseIf InStr(W_STR, "IDXSUB=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_IDXSUB = False
           Case "1"
              SW_IDXSUB = True
           Case Else
              SW_IDXSUB = False
        End Select
     'Idx|fffd|l|fffd||fffd||fffd||fffd|
     ElseIf InStr(W_STR, "IDXVAL=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_IDXVAL = False
           Case "1"
              SW_IDXVAL = True
           Case Else
              SW_IDXVAL = False
        End Select
     '|fffd|N|fffd||fffd||fffd|V|fffd|b|fffd|NUI
     ElseIf InStr(W_STR, "CLASSIC=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_CLASSIC = False
           Case "1"
              SW_CLASSIC = True
              SW_CLASSIC2 = True
           Case Else
              SW_CLASSIC = False
        End Select
     '|fffd|g|fffd|p|fffd||fffd|
     ElseIf InStr(W_STR, "USE=") = 1 Then
        Select Case Right$(W_STR, 1)
           Case "0"
              SW_USE = False
           Case "1"
              SW_USE = True
           Case Else
              SW_USE = False
        End Select
     End If
  Loop

  Close #1

  SW_OPEN = True
  Call INI_WRITE_RTN
  SW_OPEN = False

End Sub

Sub INI_WRITE_RTN()
  
  Dim W_STR As String
  Dim W_VAL As String
  Dim I As Long
  Dim W_I As String
    
  Open W_INI For Output As #1

  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_FTEXT)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "FTEXT" & W_I & "=" & AR_FTEXT(I)
     Print #1, W_STR
  Next I
  
  '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  W_STR = "ATEXT00=" & W_ATEXT
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_ATEXT)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "ATEXT" & W_I & "=" & AR_ATEXT(I)
     Print #1, W_STR
  Next I
  
  '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_RTEXT)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "RTEXT" & W_I & "=" & AR_RTEXT(I)
     Print #1, W_STR
  Next I
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_FALSH)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "FALSH" & W_I & "=" & AR_FALSH(I)
     Print #1, W_STR
  Next I
     
  '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_AALSH)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "AALSH" & W_I & "=" & AR_AALSH(I)
     Print #1, W_STR
  Next I
     
  '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_RALSH)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "RALSH" & W_I & "=" & AR_RALSH(I)
     Print #1, W_STR
  Next I
     
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_DALSH)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "DALSH" & W_I & "=" & AR_DALSH(I)
     Print #1, W_STR
  Next I
  
  'Grep|fffd|X|fffd||fffd||fffd|b|fffd|h
  W_STR = "GREPTH=" & W_GREPTH
  Print #1, W_STR
  
  '|fffd|^|fffd|u|fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_PAGEI)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "PAGEI" & W_I & "=" & AR_PAGEI(I)
     Print #1, W_STR
  Next I
  
  '|fffd|^|fffd|u|fffd|\|fffd||fffd|
  For I = 1 To UBound(AR_PAGES)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     If AR_PAGES(I) = False Then
        W_VAL = "0"
     Else
        W_VAL = "1"
     End If
     W_STR = "PAGES" & W_I & "=" & W_VAL
     Print #1, W_STR
  Next I
  
  '|fffd||53ec||fffd||fffd||fffd||fffd|
  If SW_UPLOW = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "UPLOW=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd|l
  If SW_STRVAL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "STRVAL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|l|fffd||fffd||fffd||fffd|
  If SW_VALUE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "VALUE=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
  If SW_BOOK = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "BOOK=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd|
  If SW_FNDCLR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FNDCLRD=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd||fffd|F
  W_STR = "FNDCLR=" & W_FNDCLR
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd|[|fffd|\|fffd||fffd||fffd|F
  W_STR = "FNDTAG=" & W_FNDTAG
  Print #1, W_STR
  
  '|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd|T|fffd|[|fffd|`
  If SW_INCSRH = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "INCSRH=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_GOAR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GOAR=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
  If SW_DISCRLF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DISCLRF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_NOTSF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NOTSF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g
  If SW_NOTSG = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NOTSG=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
  If SW_AFS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AFS=" & W_VAL
  Print #1, W_STR
  
  'Grep|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|
  If SW_GFS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GFS=" & W_VAL
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||6d2||fffd|
  If SW_ADDDENY = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ADDDENY=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_DCB = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCB=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||38e||fffd|
  If SW_DCI = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCI=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_DCU = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCU=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_DCK = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCK=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
  If SW_DCC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
  W_STR = "DCCLR=" & W_DCCLR
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F
  W_STR = "DCTAG=" & W_DCTAG
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
  If SW_DCB2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCB2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||38e||fffd|2
  If SW_DCI2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCI2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
  If SW_DCU2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCU2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
  If SW_DCK2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCK2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
  If SW_DCC2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCC2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
  W_STR = "DCCLR2=" & W_DCCLR2
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F2
  W_STR = "DCTAG2=" & W_DCTAG2
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
  If SW_DCB3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCB3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||38e||fffd|3
  If SW_DCI3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCI3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
  If SW_DCU3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCU3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
  If SW_DCK3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DCK3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||343|Z|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_ACF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ACF=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|1
  If SW_AC1 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC1=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|2
  If SW_AC2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|3
  If SW_AC3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|4
  If SW_AC4 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC4=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|6
  If SW_AC6 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC6=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|7
  If SW_AC7 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC7=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|8
  If SW_AC8 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC8=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||357|L|fffd||fffd|9
  If SW_AC9 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC9=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|1
  W_VAL = W_AC1T
  W_STR = "AC1T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|2
  W_VAL = W_AC2T
  W_STR = "AC2T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|3
  W_VAL = W_AC3T
  W_STR = "AC3T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|4
  W_VAL = W_AC4T
  W_STR = "AC4T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|6
  W_VAL = W_AC6T
  W_STR = "AC6T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|7
  W_VAL = W_AC7T
  W_STR = "AC7T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|8
  W_VAL = W_AC8T
  W_STR = "AC8T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||34f||fffd||fffd||fffd|9
  W_VAL = W_AC9T
  W_STR = "AC9T=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|1
  If SW_AC1D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC1D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|2
  If SW_AC2D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC2D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|3
  If SW_AC3D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC3D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|4
  If SW_AC4D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC4D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|6
  If SW_AC6D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC6D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|7
  If SW_AC7D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC7D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|8
  If SW_AC8D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC8D=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||354||6d2||fffd|9
  If SW_AC9D = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "AC9D=" & W_VAL
  Print #1, W_STR
  
  '|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v
  If SW_MM = False Then
     W_VAL = "0"
  Else
     W_VAL = "0"
  End If
  W_STR = "MM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|1
  W_VAL = W_FSV01
  W_STR = "FSV01=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|2
  W_VAL = W_FSV02
  W_STR = "FSV02=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|3
  W_VAL = W_FSV03
  W_STR = "FSV03=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|4
  W_VAL = W_FSV04
  W_STR = "FSV04=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|5
  W_VAL = W_FSV05
  W_STR = "FSV05=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|6
  W_VAL = W_FSV06
  W_STR = "FSV06=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|7
  W_VAL = W_FSV07
  W_STR = "FSV07=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|8
  W_VAL = W_FSV08
  W_STR = "FSV08=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|9
  W_VAL = W_FSV09
  W_STR = "FSV09=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|10
  W_VAL = W_FSV10
  W_STR = "FSV10=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|1
  W_VAL = W_RSV01
  W_STR = "RSV01=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|2
  W_VAL = W_RSV02
  W_STR = "RSV02=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|3
  W_VAL = W_RSV03
  W_STR = "RSV03=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|4
  W_VAL = W_RSV04
  W_STR = "RSV04=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|5
  W_VAL = W_RSV05
  W_STR = "RSV05=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|6
  W_VAL = W_RSV06
  W_STR = "RSV06=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|7
  W_VAL = W_RSV07
  W_STR = "RSV07=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|8
  W_VAL = W_RSV08
  W_STR = "RSV08=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|9
  W_VAL = W_RSV09
  W_STR = "RSV09=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||6d1||fffd|10
  W_VAL = W_RSV10
  W_STR = "RSV10=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB01
  W_STR = "BMB01=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB02
  W_STR = "BMB02=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB03
  W_STR = "BMB03=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB04
  W_STR = "BMB04=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB05
  W_STR = "BMB05=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB06
  W_STR = "BMB06=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB07
  W_STR = "BMB07=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB08
  W_STR = "BMB08=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB09
  W_STR = "BMB09=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMB10
  W_STR = "BMB10=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS01
  W_STR = "BMS01=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS02
  W_STR = "BMS02=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS03
  W_STR = "BMS03=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS04
  W_STR = "BMS04=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS05
  W_STR = "BMS05=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS06
  W_STR = "BMS06=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS07
  W_STR = "BMS07=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS08
  W_STR = "BMS08=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS09
  W_STR = "BMS09=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMS10
  W_STR = "BMS10=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC01
  W_STR = "BMC01=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC02
  W_STR = "BMC02=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC03
  W_STR = "BMC03=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC04
  W_STR = "BMC04=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC05
  W_STR = "BMC05=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC06
  W_STR = "BMC06=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC07
  W_STR = "BMC07=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC08
  W_STR = "BMC08=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC09
  W_STR = "BMC09=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N
  W_VAL = W_BMC10
  W_STR = "BMC10=" & W_VAL
  Print #1, W_STR
  
  '|fffd|u|fffd||fffd||fffd||fffd||fffd|m|fffd|F
  If SW_ASK = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "REPASK=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|F|fffd||6ce||fffd|
  If SW_CLRKEEP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CLRKEEP=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||5c2||102||303|V|fffd|F|fffd|C|fffd|v
  If SW_ALLSHP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ALLSHP=" & W_VAL
  Print #1, W_STR
  
  '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||fffd|
  If SW_COMONLY = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "COMONLY=" & W_VAL
  Print #1, W_STR
  
  '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||20a|O
  If SW_NOTCOM = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NOTCOM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|
  If SW_BLSHT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "BLSHT=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd|\|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|
  If SW_HDSHT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "HDSHT=" & W_VAL
  Print #1, W_STR
  
  '|fffd|V|fffd|[|fffd|g|fffd||fffd|
  If SW_SHTNM = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SHTNM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|[
  If SW_LHD = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "LHD=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|[
  If SW_CHD = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CHD=" & W_VAL
  Print #1, W_STR
  
  '|fffd|E|fffd|w|fffd|b|fffd|_|fffd|[
  If SW_RHD = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "RHD=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|[
  If SW_LFT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "LFT=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|[
  If SW_CFT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CFT=" & W_VAL
  Print #1, W_STR
  
  '|fffd|E|fffd|t|fffd|b|fffd|^|fffd|[
  If SW_RFT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "RFT=" & W_VAL
  Print #1, W_STR
  
  '|fffd|B|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If SW_HFT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "HFT=" & W_VAL
  Print #1, W_STR
  
  '|fffd|s|fffd||fffd||fffd||fffd||fffd||582||fffd|
  If SW_SWRC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SWRC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd|O
  If SW_HDNM = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "HDNM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||348||351|S|fffd||fffd|
  If SW_SCALL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SCALL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||348||343|u|fffd|b|fffd|N
  If SW_SCBK = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SCBK=" & W_VAL
  Print #1, W_STR
  
  '|fffd||348||343|V|fffd|[|fffd|g
  If SW_SCSHT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SCSHT=" & W_VAL
  Print #1, W_STR
  
  '|fffd||38f||6d6||fffd||fffd|O
  If SW_TRGTNM = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "TRGTNM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||38f||6ce|Q|fffd||194||348||fffd|
  If SW_TRGTRT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "TRGTRT=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
  If SW_FLDD = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLDD=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd|E
  If SW_FLDR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLDR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
  If SW_FLDU = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLDU=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd||fffd|
  If SW_FLDL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLDL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_FLIC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLIC=" & W_VAL
  Print #1, W_STR
  
  '|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_FLDC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FLDC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|
  W_VAL = W_FRC
  W_STR = "EXFRCLM=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd|
  W_VAL = W_TOC
  W_STR = "EXTOCLM=" & W_VAL
  Print #1, W_STR
  
  'GREP|fffd|t|fffd|@|fffd|C|fffd||fffd|
  W_VAL = W_GREPFL
  W_STR = "GREPFL=" & W_VAL
  Print #1, W_STR
     
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315||fffd||fffd||fffd||fffd||fffd|
  For I = 1 To UBound(AR_DTEXT)
     W_I = CStr(I)
     If Len(W_I) = 1 Then
        W_I = "0" & W_I
     End If
     W_STR = "DTEXT" & W_I & "=" & AR_DTEXT(I)
     Print #1, W_STR
  Next I
  
  'GREP|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_
  If SW_GREPSUB = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GREPSUB=" & W_VAL
  Print #1, W_STR
  
  'UNZIP
  If SW_UZ = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "UNZIP=" & W_VAL
  Print #1, W_STR
  
  'GREP|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
  If SW_GREPBKUP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GREPBKUP=" & W_VAL
  Print #1, W_STR
  
  'GREP|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If SW_GOF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GOF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g
  If SW_OFFSET = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "OFFSET=" & W_VAL
  Print #1, W_STR
  
  '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|s
  W_VAL = W_OFFSETR
  W_STR = "OFFSETR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd|
  W_VAL = W_OFFSETC
  W_STR = "OFFSETC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||327a||fffd|\|fffd||fffd|
  If SW_UPDOWN = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "UPDOWN=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||5c2||fffd|Grep
  If SW_GREPALL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GREPALL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|`|fffd|F|fffd|b|fffd|N|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
  W_VAL = W_OBJSTR
  W_STR = "OBJSTR=" & W_VAL
  Print #1, W_STR
  
  '|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|
  W_VAL = W_OSTR
  W_STR = "OSTR=" & W_VAL
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1
  W_VAL = W_ASTR1
  W_STR = "ASTR1=" & W_VAL
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
  W_VAL = W_ASTR2
  W_STR = "ASTR2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|3
  W_VAL = W_ASTR3
  W_STR = "ASTR3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||1c9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|4
  W_VAL = W_ASTR4
  W_STR = "ASTR4=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|1
  W_VAL = W_ESTR1
  W_STR = "ESTR1=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|2
  W_VAL = W_ESTR2
  W_STR = "ESTR2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|3
  W_VAL = W_ESTR3
  W_STR = "ESTR3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|M
  If SW_SEND = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SEND=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|[|fffd|J|fffd||fffd|
  If SW_LOCAL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "LOCAL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  W_VAL = W_LCLFL
  W_STR = "LCLFL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||743|Z|fffd||fffd|
  If SW_ACTVCELL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ACTVCELL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|P|fffd||fffd||22ae|
  If SW_WRDCMPL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "WRDCMPL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|||fffd|[|fffd|g
  If SW_ERRREP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ERRREP=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_TRNSP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "TRNSP=" & W_VAL
  Print #1, W_STR
  
  '|fffd|w|fffd|i|fffd|F
  W_STR = "BGCLR=" & W_BGCLR
  Print #1, W_STR
  
  '|fffd|w|fffd|i|fffd|F
  W_STR = "BGCLRL=" & W_BGCLRL
  Print #1, W_STR
  
  '|fffd|w|fffd|i|fffd|F
  W_STR = "BGCLRT=" & W_BGCLRT
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_ATCLR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ATCLR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|X|fffd|V|fffd|m|fffd|F
  If SW_UPDCHK = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "UPDCHK=" & W_VAL
  Print #1, W_STR
  
  '|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd||5c2||103|I|fffd|t
  If SW_NETALLOFF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NETALLOFF=" & W_VAL
  Print #1, W_STR
  
  '|fffd||590||fffd||fffd|K|fffd|C|fffd|h
  If SW_FCGUIDE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "FCGUIDE=" & W_VAL
  Print #1, W_STR
  
  'ENGLISH
  If SW_ENGLISH = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ENGLISH=" & W_VAL
  Print #1, W_STR
  
  'VBE
  If SW_VBE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "VBE=" & W_VAL
  Print #1, W_STR
  
  'MEIRYO
  If SW_MEIRYO = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "MEIRYO=" & W_VAL
  Print #1, W_STR
  
  '|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[
  If SW_BAR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "BAR=" & W_VAL
  Print #1, W_STR
  
  'Grep|fffd|o|fffd||7c3|I|fffd|t
  If SW_GHO = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GHO=" & W_VAL
  Print #1, W_STR
  
  '|fffd|n|fffd|C|fffd||fffd||fffd|C|fffd|g
  If SW_GHL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "GHL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_DRAT = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DRAT=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
  If SW_DRRW = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DRRW=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_DRCL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DRCL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|Z|fffd||fffd|
  If SW_SACE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SACE=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|s
  If SW_SARW = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SARW=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|
  If SW_SACL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SACL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
  If SW_EXC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "EXC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||350||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|
  If SW_DESCC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "DESCC=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||295||22ae|
  If SW_PCMPL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "PCMPL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|^|fffd|u|fffd||fffd||fffd||fffd||fffd||3cd|X
  If SW_TOC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "TOC=" & W_VAL
  Print #1, W_STR
  
  '|fffd|j|fffd||fffd||fffd|[|fffd|X
  If SW_NEWS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NEWS=" & W_VAL
  Print #1, W_STR
  
  '|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||103|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|
  If SW_SHPUR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SHPUR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|X|fffd|}|fffd|[|fffd|g|fffd|A|fffd|[|fffd|g|fffd||702||fffd|
  If SW_INCSA = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "INCSA=" & W_VAL
  Print #1, W_STR
  
  '|fffd|V|fffd|F|fffd|C|fffd|v|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|e
  If SW_HISHP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "HISHP=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd||fffd|Grep
  If SW_HSGREP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "HSGREP=" & W_VAL
  Print #1, W_STR
  
  'FRBS
  W_STR = "FRBS=" & W_FRBS
  Print #1, W_STR
  
  '|fffd|i|fffd||fffd|
  If SW_PRGRSS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "PRGRSS=" & W_VAL
  Print #1, W_STR
  
  '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
  W_VAL = W_PROMTH
  W_STR = "PROMTH=" & W_VAL
  Print #1, W_STR
  
  '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
  W_VAL = W_VALARG
  W_STR = "VALARG=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|s
  If SW_ACEXE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ACEXE=" & W_VAL
  Print #1, W_STR
  
  '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
  W_VAL = W_PROMTH2
  W_STR = "PROMTH2=" & W_VAL
  Print #1, W_STR
  
  '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
  W_VAL = W_VALARG2
  W_STR = "VALARG2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|s
  If SW_ACEXE2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ACEXE2=" & W_VAL
  Print #1, W_STR
  
  '|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h
  W_VAL = W_PROMTH3
  W_STR = "PROMTH3=" & W_VAL
  Print #1, W_STR
  
  '|fffd|l|fffd|A|fffd||fffd||fffd||fffd|
  W_VAL = W_VALARG3
  W_STR = "VALARG3=" & W_VAL
  Print #1, W_STR
  
  '|fffd||fffd||fffd|s
  If SW_ACEXE3 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ACEXE3=" & W_VAL
  Print #1, W_STR
  
  '|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E
  If SW_MINIW = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "MINIW=" & W_VAL
  Print #1, W_STR
  
  '|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|Q
  If SW_MINIW2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "MINIW2=" & W_VAL
  Print #1, W_STR
  
  '|fffd||208||543||fffd||fffd|[|fffd|h
  If SW_SMPL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SMPL=" & W_VAL
  Print #1, W_STR
  
  '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd||fffd|
  If SW_SMPN = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SMPN=" & W_VAL
  Print #1, W_STR
  
  '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd|O
  If SW_SMPP = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SMPP=" & W_VAL
  Print #1, W_STR
  
  '|fffd||208||543||fffd||fffd|[|fffd|h|fffd|E|fffd||fffd||fffd||5c2||fffd|
  If SW_SMPA = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SMPA=" & W_VAL
  Print #1, W_STR
  
  '|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd|
  W_VAL = W_PRDIC
  W_STR = "PRDIC=" & W_VAL
  Print #1, W_STR
  
  '.NET Framework|fffd||fffd||fffd|K|fffd|\|fffd||fffd|
  If SW_NRE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "NRE=" & W_VAL
  Print #1, W_STR
  
  'Onigmo|fffd||fffd||fffd|K|fffd|\|fffd||fffd|
  If SW_ORE = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ORE=" & W_VAL
  Print #1, W_STR
  
  '|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
  If SW_SHIFTF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SHIFTF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
  If SW_CTRLF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CTRLF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|`|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
  If SW_ALTF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ALTF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|L|fffd|[|fffd|i|fffd||fffd||fffd||fffd||fffd|j
  W_STR = "KEYF=" & W_KEYF
  Print #1, W_STR
  
  '|fffd|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
  If SW_SHIFTR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SHIFTR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
  If SW_CTRLR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CTRLR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|`|fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
  If SW_ALTR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "ALTR=" & W_VAL
  Print #1, W_STR
  
  '|fffd|L|fffd|[|fffd|i|fffd|u|fffd||fffd||fffd|j
  W_STR = "KEYR=" & W_KEYR
  Print #1, W_STR
  
  '|fffd|n|fffd|C|fffd|X|fffd|R|fffd|A
  W_STR = "HIS=" & Hex(W_HIS)
  Print #1, W_STR
  
  '|fffd|w|fffd|i|fffd||645c|
  W_STR = "BGIMG=" & W_BGIMG
  Print #1, W_STR
  
  '|fffd|O|fffd|i|fffd||fffd||fffd||fffd||fffd|F
  W_STR = "FGCLR=" & W_FGCLR
  Print #1, W_STR
  
  '|fffd|O|fffd|i|fffd||fffd||fffd||fffd||fffd|F
  W_STR = "FGTAG=" & W_FGTAG
  Print #1, W_STR
  
  '|fffd||292|u|fffd|L|fffd||fffd|
  If SW_SAVEPOS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SAVEPOS=" & W_VAL
  Print #1, W_STR
  
  '|fffd|g|fffd|b|fffd|v
  W_STR = "TOP=" & CStr(W_TOP)
  Print #1, W_STR
  
  '|fffd||fffd||fffd|t|fffd|g
  W_STR = "LEFT=" & CStr(W_LEFT)
  Print #1, W_STR
  
  '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|A|fffd|j|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|t
  If SW_WAO = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "WAO=" & W_VAL
  Print #1, W_STR
  
  '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||a39e||fffd||fffd|~
  If SW_STOPBGF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "STOPBGF=" & W_VAL
  Print #1, W_STR
  
  '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|~
  If SW_STOPBGF2 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "STOPBGF2=" & W_VAL
  Print #1, W_STR
  
  '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|X|fffd|V|fffd||fffd|~
  If SW_STOPBGIU = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "STOPBGIU=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff |fffd|t|fffd|@|fffd|C|fffd||fffd|1
  W_STR = "SDF1=" & W_SDF1
  Print #1, W_STR
  
  'Smart Diff |fffd|t|fffd|@|fffd|C|fffd||fffd|2
  W_STR = "SDF2=" & W_SDF2
  Print #1, W_STR
  
  'Smart Diff Shift-JIS
  If SW_SDSJIS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDSJIS=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff UTF-8
  If SW_SDUTF8 = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDUTF8=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff CRLF
  If SW_SDCRLF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDCRLF=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff CR
  If SW_SDCR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDCR=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff LF
  If SW_SDLF = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDLF=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff |fffd|J|fffd|n|fffd||fffd|
  W_STR = "SDST=" & W_SDST
  Print #1, W_STR
  
  'Smart Diff |fffd|I|fffd||fffd||fffd||fffd|
  W_STR = "SDED=" & W_SDED
  Print #1, W_STR
  
  'Smart Diff |fffd|^|fffd|u|fffd||fffd|
  W_STR = "SDTC=" & W_SDTC
  Print #1, W_STR
  
  'Smart Diff |fffd||d448d|s|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|
  If SW_SDIS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDIS=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff|fffd|@|fffd|s|fffd||fffd||fffd|O|fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||16cce||fffd|
  If SW_SDTR = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDTR=" & W_VAL
  Print #1, W_STR
  
  'Smart Diff |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|r
  If SW_SDCC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "SDCC=" & W_VAL
  Print #1, W_STR
  
  'Diff1st|fffd|w|fffd|i|fffd|F
  W_STR = "DF1STCLR=" & W_DF1STCLR
  Print #1, W_STR
  
  'Diff1st|fffd|w|fffd|i|fffd|F
  W_STR = "DF1STTAG=" & W_DF1STTAG
  Print #1, W_STR
  
  'Diff2nd|fffd|w|fffd|i|fffd|F
  W_STR = "DF2NDCLR=" & W_DF2NDCLR
  Print #1, W_STR
  
  'Diff2nd|fffd|w|fffd|i|fffd|F
  W_STR = "DF2NDTAG=" & W_DF2NDTAG
  Print #1, W_STR
  
  'Diff|fffd|s|fffd||202||fffd||fffd|w|fffd|i|fffd|F
  W_STR = "DFNOLCLR=" & W_DFNOLCLR
  Print #1, W_STR
  
  'Diff|fffd|s|fffd||202||fffd||fffd|w|fffd|i|fffd|F
  W_STR = "DFNOLTAG=" & W_DFNOLTAG
  Print #1, W_STR
  
  'Diff|fffd|s|fffd||fffd||fffd||fffd||fffd||655||fffd||fffd||fffd||fffd|F
  W_STR = "DFINLCLR=" & W_DFINLCLR
  Print #1, W_STR
  
  'Diff|fffd|s|fffd||fffd||fffd||fffd||fffd||655||fffd||fffd||fffd||fffd|F
  W_STR = "DFINLTAG=" & W_DFINLTAG
  Print #1, W_STR
  
  '2013|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd|[
  W_STR = "BAR15T=" & CStr(W_BAR15T)
  Print #1, W_STR
  
  '2013|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd|[
  W_STR = "BAR15L=" & CStr(W_BAR15L)
  Print #1, W_STR
  
  '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||351||38f||fffd|
  W_STR = "PWCTF=" & W_PWCTF
  Print #1, W_STR
  
  '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||350||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If SW_PWCLN = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "PWCLN=" & W_VAL
  Print #1, W_STR
  
  '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||34d||10a|J
  If SW_PWCRS = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "PWCRS=" & W_VAL
  Print #1, W_STR
  
  'Idx|fffd|t|fffd|H|fffd||fffd||fffd|_
  W_STR = "IDXDIR=" & W_IDXDIR
  Print #1, W_STR
  
  'Idx|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_
  If SW_IDXSUB = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "IDXSUB=" & W_VAL
  Print #1, W_STR
  
  'Idx|fffd|l|fffd||fffd||fffd||fffd|
  If SW_IDXVAL = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "IDXVAL=" & W_VAL
  Print #1, W_STR
  
  '|fffd|N|fffd||fffd||fffd|V|fffd|b|fffd|NUI
  If SW_CLASSIC = False Then
     W_VAL = "0"
  Else
     W_VAL = "1"
  End If
  W_STR = "CLASSIC=" & W_VAL
  Print #1, W_STR
  
  '|fffd|g|fffd|p|fffd||fffd|
  If W_EXCNT <= 1 Then
     If SW_OPEN = True Then
        W_STR = "USE=" & "1"
        Print #1, W_STR
     Else
        W_STR = "USE=" & "0"
        Print #1, W_STR
     End If
  Else
     If SW_USE = False Then
        W_VAL = "0"
     Else
        W_VAL = "1"
     End If
     W_STR = "USE=" & W_VAL
     Print #1, W_STR
  End If
  
  Close #1

End Sub

Sub CNT_READ_RTN()
  
  Dim W_CNT As String
  Dim W_STR As String
    
  W_CNT = ThisWorkbook.path & "\" & W_NAME & ".cnt"
  If Dir(W_CNT) = "" Then
     Exit Sub
  End If
    
  Open W_CNT For Input As #1
  
  Do While Not EOF(1)
     Line Input #1, W_STR
     If InStr(W_STR, "CNT=") > 0 Then
        If Len(W_STR) > 4 Then
           W_EXCNT = CLng(Right$(W_STR, Len(W_STR) - 4))
        End If
     End If
  Loop

  Close #1

End Sub

Sub CNT_WRITE_RTN()
  
  Dim W_CNT As String
  Dim W_STR As String
  Dim W_VAL As String
    
    
  If ThisWorkbook.path <> "" Then
     W_CNT = ThisWorkbook.path & "\" & W_NAME & ".cnt"
  Else
     W_CNT = Left$(ThisWorkbook.FullName, Len(ThisWorkbook.FullName) - Len(ThisWorkbook.Name)) & W_NAME & ".cnt"
  End If
  
  Open W_CNT For Output As #1
  
  W_VAL = W_EXCNT
  W_STR = "CNT=" & W_VAL
  Print #1, W_STR
  
  Close #1

End Sub

Sub AUTO_WRITE_RTN()
  
  Dim W_AUTO As String
  Dim W_STR As String
    
  If SW_ENGLISH = True Then
     Open ThisWorkbook.path & "\e" For Output As #1
     Close #1
  End If
  
  W_AUTO = ThisWorkbook.path & "\auto.vbs"
  Open W_AUTO For Output As #1

'''  W_STR = "Option Explicit"
'''  Print #1, W_STR
'''  W_STR = "Dim strPath"
'''  Print #1, W_STR
'''  W_STR = "Dim xlApp"
'''  Print #1, W_STR
'''  W_STR = "With WScript"
'''  Print #1, W_STR
'''  W_STR = "strPath = Replace(.ScriptFullName, .ScriptName, " & Chr$(34) & Chr$(34) & ") & " & Chr$(34) & "\auto.xla" & Chr$(34)
'''  Print #1, W_STR
'''  W_STR = "End With"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = GetObject(, " & Chr$(34) & "Excel.Application" & Chr$(34) & ")"
'''  Print #1, W_STR
'''  W_STR = "xlApp.Workbooks.Open strPath, False, True"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = Nothing"
'''  Print #1, W_STR
  
  Close #1

End Sub

Sub UPD_WRITE_RTN(ByVal W_UPDF As String)
  
  Dim W_UPD As String
  Dim W_STR As String
    
  Dim W_MVER As Long
    
    
  If SW_ENGLISH = True Then
     Open ThisWorkbook.path & "\e" For Output As #1
     Close #1
  End If
  
  W_MVER = CDbl(Right$(UserForm1.Label3.Caption, 4)) * 100
  
  Open ThisWorkbook.path & "\v" For Output As #1
  Print #1, CStr(W_MVER)
  Close #1
  
  W_UPD = ThisWorkbook.path & "\upd.vbs"
  Open W_UPD For Output As #1

'''  W_STR = "Option Explicit"
'''  Print #1, W_STR
'''  W_STR = "Dim strPath"
'''  Print #1, W_STR
'''  W_STR = "Dim xlApp"
'''  Print #1, W_STR
'''  W_STR = "strPath = " & Chr$(34) & W_UPDF & Chr$(34)
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = GetObject(, " & Chr$(34) & "Excel.Application" & Chr$(34) & ")"
'''  Print #1, W_STR
'''  W_STR = "xlApp.Workbooks.Open strPath, False, True"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = Nothing"
'''  Print #1, W_STR
  
  Close #1

End Sub

Sub GREP_WRITE_RTN(ByVal W_GREP As String)
  
  Dim W_STR As String
    
  Open W_GREP For Output As #1

'''  W_STR = "Option Explicit"
'''  Print #1, W_STR
'''  W_STR = "Dim strPath"
'''  Print #1, W_STR
'''  W_STR = "Dim xlApp"
'''  Print #1, W_STR
'''  W_STR = "strPath = " & Chr$(34) & ThisWorkbook.path & "\" & ThisWorkbook.Name & Chr$(34)
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = CreateObject(" & Chr$(34) & "Excel.Application" & Chr$(34) & ")"
'''  Print #1, W_STR
'''  W_STR = "xlApp.Visible = True"
'''  Print #1, W_STR
'''  W_STR = "xlApp.Visible = False"
'''  Print #1, W_STR
'''  W_STR = "xlApp.Workbooks.Open strPath, False, True"
'''  Print #1, W_STR
'''  W_STR = "Set xlApp = Nothing"
'''  Print #1, W_STR
  
  Close #1

End Sub

Sub RMENU_SHOWF_RTN()
     
  SW_RMENU = True
  Call SHOWF_RTN

End Sub

Sub SHOWF_RTN()
     
  'Excel2013|fffd||20d|~
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  
  W_PAGEN = UserForm1.MultiPage1.Pages(0).Name
  
  If Val(Application.Version) >= 9 Then
     If SW_CLASSIC = False Then
        UserForm1.Hide
        Call SHOW_MODELESS(UserForm13)
     Else
        Call SHOW_MODELESS(UserForm11)
        Call SHOW_MODELESS(UserForm1)
        On Error Resume Next
        UserForm1.CommandButton9.SetFocus
        DoEvents
        Call COMBO_FOCUS
        On Error GoTo 0
     End If
  Else
     UserForm1.Show
  End If

End Sub

Sub SHOWR_RTN()
     
  W_PAGEN = UserForm1.MultiPage1.Pages(1).Name
  If Val(Application.Version) >= 9 Then
     If SW_CLASSIC = False Then
        UserForm1.Hide
        Call SHOW_MODELESS(UserForm13)
     Else
        Call SHOW_MODELESS(UserForm11)
        Call SHOW_MODELESS(UserForm1)
        On Error Resume Next
        DoEvents
        UserForm1.CommandButton9.SetFocus
        DoEvents
        Call COMBO_FOCUS
        On Error GoTo 0
     End If
  Else
     UserForm1.Show
  End If

End Sub

Sub RANGE_GET(ByVal R1C1 As String, SR As Long, SC As Long, ER As Long, EC As Long)
 
  Dim W_ADDRESS As String
   
  If InStr(R1C1, ":") > 0 Then
     W_ADDRESS = Left$(R1C1, InStr(R1C1, ":") - 1)
     If InStr(W_ADDRESS, "R") > 0 And _
        InStr(W_ADDRESS, "C") > 0 Then
        SR = CLng(Mid$(W_ADDRESS, 2, InStr(W_ADDRESS, "C") - 2))
        SC = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - InStr(W_ADDRESS, "C")))
     ElseIf InStr(W_ADDRESS, "R") > 0 Then
        SR = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - 1))
        SC = 1
     ElseIf InStr(W_ADDRESS, "C") > 0 Then
        SR = 1
        SC = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - 1))
     End If
     W_ADDRESS = Right$(R1C1, Len(R1C1) - InStr(R1C1, ":"))
     If InStr(W_ADDRESS, "R") > 0 And _
        InStr(W_ADDRESS, "C") > 0 Then
        ER = CLng(Mid$(W_ADDRESS, 2, InStr(W_ADDRESS, "C") - 2))
        EC = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - InStr(W_ADDRESS, "C")))
     ElseIf InStr(W_ADDRESS, "R") > 0 Then
        ER = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - 1))
        EC = Columns.count
     ElseIf InStr(W_ADDRESS, "C") > 0 Then
        ER = Rows.count
        EC = CLng(Right$(W_ADDRESS, Len(W_ADDRESS) - 1))
     End If
  ElseIf InStr(R1C1, "R") > 0 And _
         InStr(R1C1, "C") > 0 Then
     SR = CLng(Mid$(R1C1, 2, InStr(R1C1, "C") - 2))
     SC = CLng(Right$(R1C1, Len(R1C1) - InStr(R1C1, "C")))
     ER = CLng(Mid$(R1C1, 2, InStr(R1C1, "C") - 2))
     EC = CLng(Right$(R1C1, Len(R1C1) - InStr(R1C1, "C")))
  ElseIf InStr(R1C1, "R") > 0 Then
     SR = CLng(Right$(R1C1, Len(R1C1) - 1))
     SC = 1
     ER = CLng(Right$(R1C1, Len(R1C1) - 1))
     EC = Columns.count
  ElseIf InStr(R1C1, "C") > 0 Then
     SR = 1
     SC = CLng(Right$(R1C1, Len(R1C1) - 1))
     ER = Rows.count
     EC = CLng(Right$(R1C1, Len(R1C1) - 1))
  End If

End Sub

Sub VBE_OC()

  Application.ScreenUpdating = False
  Sleep (500)
  
  If Workbooks.count = 0 Then
     Call KeybdEvent(VK_CTRL, 0, 0, 0)
     Call KeybdEvent(VK_N, 0, 0, 0)
     Call KeybdEvent(VK_CTRL, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_N, 0, KEYEVENTF_KEYUP, 0)

     Call KeybdEvent(VK_ALT, 0, 0, 0)
     Call KeybdEvent(VK_F11, 0, 0, 0)
     Call KeybdEvent(VK_ALT, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_F11, 0, KEYEVENTF_KEYUP, 0)

     Call KeybdEvent(VK_ALT, 0, 0, 0)
     Call KeybdEvent(VK_F4, 0, 0, 0)
     Call KeybdEvent(VK_ALT, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_F4, 0, KEYEVENTF_KEYUP, 0)
  
     DoEvents
  
     Call KeybdEvent(VK_ALT, 0, 0, 0)
     Call KeybdEvent(VK_F4, 0, 0, 0)
     Call KeybdEvent(VK_ALT, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_F4, 0, KEYEVENTF_KEYUP, 0)
  Else
     Call KeybdEvent(VK_ALT, 0, 0, 0)
     Call KeybdEvent(VK_F11, 0, 0, 0)
     Call KeybdEvent(VK_ALT, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_F11, 0, KEYEVENTF_KEYUP, 0)

     Call KeybdEvent(VK_ALT, 0, 0, 0)
     Call KeybdEvent(VK_F4, 0, 0, 0)
     Call KeybdEvent(VK_ALT, 0, KEYEVENTF_KEYUP, 0)
     Call KeybdEvent(VK_F4, 0, KEYEVENTF_KEYUP, 0)

     DoEvents
  End If
  
  Application.ScreenUpdating = True

End Sub

Sub RCLICK_FORWARD_TAB()

  Dim W_TNAME As String
  Dim W_TAB1 As Long
  Dim W_TAB2 As Long
  Dim I As Long
  
  If UserForm1.MultiPage1.Value = 0 Then
     Exit Sub
  End If
  
  W_TNAME = UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name
  W_TAB1 = CLng(Application.Substitute(W_TNAME, "Page", ""))
  W_TNAME = UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value - 1).Name
  W_TAB2 = CLng(Application.Substitute(W_TNAME, "Page", ""))
  
  For I = 1 To UBound(AR_PAGEI)
     If I = W_TAB1 Then
        AR_PAGEI(I) = AR_PAGEI(I) - 1
     End If
     If I = W_TAB2 Then
        AR_PAGEI(I) = AR_PAGEI(I) + 1
     End If
  Next I

  Call TAB_ORDER
  Call TAB_ORDER

End Sub

Sub RCLICK_BACK_TAB()

  Dim W_TNAME As String
  Dim W_TAB1 As Long
  Dim W_TAB2 As Long
  Dim I As Long
  
  If UserForm1.MultiPage1.Value = UserForm1.MultiPage1.Pages.count - 1 Then
     Exit Sub
  End If
  
  W_TNAME = UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name
  W_TAB1 = CLng(Application.Substitute(W_TNAME, "Page", ""))
  W_TNAME = UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value + 1).Name
  W_TAB2 = CLng(Application.Substitute(W_TNAME, "Page", ""))
  
  For I = 1 To UBound(AR_PAGEI)
     If I = W_TAB1 Then
        AR_PAGEI(I) = AR_PAGEI(I) + 1
     End If
     If I = W_TAB2 Then
        AR_PAGEI(I) = AR_PAGEI(I) - 1
     End If
  Next I

  Call TAB_ORDER
  Call TAB_ORDER

End Sub

Sub RCLICK_DEFAULT_TAB()

  Dim W_TNAME As String
  Dim W_TAB1 As Long
  Dim I As Long

  W_TNAME = UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name
  W_TAB1 = CLng(Application.Substitute(W_TNAME, "Page", ""))
  
  Call TAB_DEFAULT

  Call TAB_ORDER
  Call TAB_ORDER

  SW_TO = True
  For I = 1 To UserForm1.MultiPage1.Pages.count
     UserForm1.MultiPage1.Pages(I - 1).Visible = True
  Next I
  SW_P8V = True
  SW_P11V = True
  SW_P10V = True
  SW_P13V = True
  If UserForm1.ToggleButton1.Value = True Then
     UserForm1.MultiPage1.Pages("Page8").Visible = False
     UserForm1.MultiPage1.Pages("Page11").Visible = False
     UserForm1.MultiPage1.Pages("Page10").Visible = False
     UserForm1.MultiPage1.Pages("Page13").Visible = False
  End If
  If UserForm1.ToggleButton2.Value = True Then
     UserForm1.MultiPage1.Pages("Page12").Visible = False
     UserForm1.MultiPage1.Pages("Page14").Visible = False
     UserForm1.MultiPage1.Pages("Page16").Visible = False
     UserForm1.MultiPage1.Pages("Page17").Visible = False
     UserForm1.MultiPage1.Pages("Page18").Visible = False
     UserForm1.MultiPage1.Pages("Page15").Visible = False
     UserForm1.MultiPage1.Pages("Page4").Visible = False
  End If
  SW_TO = False

  SW_TO = True
  For I = 1 To UBound(AR_PAGEI)
     If I = W_TAB1 Then
        UserForm1.MultiPage1.Value = AR_PAGEI(I)
        Exit For
     End If
  Next I
  SW_TO = False

End Sub

Sub TAB_ORDER()

LABEL_START:
  
  On Error GoTo LABEL_ERROR
  
  SW_TO = True
  With UserForm1.MultiPage1
     .Pages("Page1").Index = AR_PAGEI(1)
     .Pages("Page2").Index = AR_PAGEI(2)
     .Pages("Page3").Index = AR_PAGEI(3)
     .Pages("Page4").Index = AR_PAGEI(4)
     .Pages("Page5").Index = AR_PAGEI(5)
     .Pages("Page6").Index = AR_PAGEI(6)
     .Pages("Page7").Index = AR_PAGEI(7)
     .Pages("Page8").Index = AR_PAGEI(8)
     .Pages("Page9").Index = AR_PAGEI(9)
     .Pages("Page10").Index = AR_PAGEI(10)
     .Pages("Page11").Index = AR_PAGEI(11)
     .Pages("Page12").Index = AR_PAGEI(12)
     .Pages("Page13").Index = AR_PAGEI(13)
     .Pages("Page14").Index = AR_PAGEI(14)
     .Pages("Page15").Index = AR_PAGEI(15)
     .Pages("Page16").Index = AR_PAGEI(16)
     .Pages("Page17").Index = AR_PAGEI(17)
     .Pages("Page18").Index = AR_PAGEI(18)
     .Pages("Page19").Index = AR_PAGEI(19)
     .Pages("Page20").Index = AR_PAGEI(20)
  End With
  SW_TO = False

  On Error GoTo 0
  Exit Sub

LABEL_ERROR:
  On Error GoTo 0
  Call TAB_DEFAULT
  Resume LABEL_START

End Sub

Sub RCLICK_HIDE_TAB()

  Dim I As Long
  Dim W_SCNT As Long
  
  W_SCNT = 0
  
  For I = 0 To UserForm1.MultiPage1.Pages.count - 1
     If UserForm1.MultiPage1.Pages(I).Visible = True Then
        W_SCNT = W_SCNT + 1
     End If
  Next I
  
  If W_SCNT <= 1 Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't hide the last tab.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||14c||fffd||303|^|fffd|u|fffd||354||fffd|\|fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Exit Sub
  End If
  
  UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Visible = False

End Sub

Sub RCLICK_SHOW_TAB()

  Dim I As Long
  
  For I = 0 To UserForm1.MultiPage1.Pages.count - 1
     UserForm1.MultiPage1.Pages(I).Visible = True
  Next I

  If UserForm1.ToggleButton1.Value = True Then
     SW_P8V = True
     UserForm1.MultiPage1.Pages("Page8").Visible = False
  
     SW_P11V = True
     UserForm1.MultiPage1.Pages("Page11").Visible = False

     SW_P10V = True
     UserForm1.MultiPage1.Pages("Page10").Visible = False
  
     SW_P13V = True
     UserForm1.MultiPage1.Pages("Page13").Visible = False
  End If

  If UserForm1.ToggleButton2.Value = True Then
     SW_P17V = True
     UserForm1.MultiPage1.Pages("Page17").Visible = False
     
     SW_P18V = True
     UserForm1.MultiPage1.Pages("Page18").Visible = False
     
     SW_P12V = True
     UserForm1.MultiPage1.Pages("Page12").Visible = False

     SW_P14V = True
     UserForm1.MultiPage1.Pages("Page14").Visible = False
  
     SW_P16V = True
     UserForm1.MultiPage1.Pages("Page16").Visible = False
  
     SW_P15V = True
     UserForm1.MultiPage1.Pages("Page15").Visible = False
     
     SW_P4V = True
     UserForm1.MultiPage1.Pages("Page4").Visible = False
  End If

End Sub

Sub RCLICK_SW_NRE()

  If SW_NRE = True Then
     If SW_ORE = True Then
        SW_ORE = False
     Else
        SW_NRE = False
        SW_ORE = False
     End If
  Else
     SW_NRE = True
  End If

  If SW_NRE = True Then
     If SW_ORE = True Then
        CommandBars("EREPU9").Controls(6).State = msoButtonUp
        CommandBars("EREPU9").Controls(7).State = msoButtonDown
     Else
        CommandBars("EREPU9").Controls(6).State = msoButtonDown
        CommandBars("EREPU9").Controls(7).State = msoButtonUp
     End If
  Else
     CommandBars("EREPU9").Controls(6).State = msoButtonUp
     CommandBars("EREPU9").Controls(7).State = msoButtonUp
  End If
  
  Call KeybdEvent(VK_TAB, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, KEYEVENTF_KEYUP, 0)
  
  Call KeybdEvent(VK_SHIFT, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_SHIFT, 0, KEYEVENTF_KEYUP, 0)
 
End Sub

Sub RCLICK_SW_ORE()
  
  Dim W_ONG As String
  
  
  If SW_NRE = True Then
     If SW_ORE = True Then
        SW_NRE = False
        SW_ORE = False
     Else
        W_ONG = ThisWorkbook.path & "\bregonig.dll"
        If Dir(W_ONG) = "" Then
           If SW_ENGLISH = True Then
              W_RET = MsgBox("bregonig.dll doesn't exists.", vbExclamation)
           Else
              W_RET = MsgBox("bregonig.dll|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
           End If
           Exit Sub
        End If
        SW_ORE = True
     End If
  Else
     W_ONG = ThisWorkbook.path & "\bregonig.dll"
     If Dir(W_ONG) = "" Then
        If SW_ENGLISH = True Then
           W_RET = MsgBox("bregonig.dll doesn't exists.", vbExclamation)
        Else
           W_RET = MsgBox("bregonig.dll|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Exit Sub
     End If
     SW_NRE = True
     SW_ORE = True
  End If
  
  If SW_NRE = True Then
     If SW_ORE = True Then
        CommandBars("EREPU9").Controls(6).State = msoButtonUp
        CommandBars("EREPU9").Controls(7).State = msoButtonDown
     Else
        CommandBars("EREPU9").Controls(6).State = msoButtonDown
        CommandBars("EREPU9").Controls(7).State = msoButtonUp
     End If
  Else
     CommandBars("EREPU9").Controls(6).State = msoButtonUp
     CommandBars("EREPU9").Controls(7).State = msoButtonUp
  End If
  
  Call KeybdEvent(VK_TAB, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, KEYEVENTF_KEYUP, 0)
  
  Call KeybdEvent(VK_SHIFT, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, 0, 0)
  Call KeybdEvent(VK_TAB, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_SHIFT, 0, KEYEVENTF_KEYUP, 0)
 
End Sub

Sub RCLICK_SETTING()
  
  Dim myBar99 As Variant
  Dim C As Object
  
  Dim RE As Object
  Dim W_COM As String
  Dim AR_CAP(65) As String
  Dim SW_HIT As Boolean
  Dim W_STR As String
  Dim W_CTRL As Object
  Dim W_VAL As String
  Dim AR_SEL() As String
  Dim I As Long
  Dim J As Long
  Dim AR_SPL As Variant
  Dim W_K1 As String
  Dim W_K2 As String
  Dim I1 As Long
  Dim I2 As Long
  Dim B As Long
  
  
  With UserForm1
     If .CheckBox49.Value = True Then
        W_COM = "Common"
     Else
        W_COM = "|fffd||fffd||fffd||fffd|"
     End If
  
     AR_CAP(1) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox1.Caption & Chr$(1) & .CheckBox1.Name
     AR_CAP(2) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox2.Caption & Chr$(1) & .CheckBox2.Name
     AR_CAP(3) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox3.Caption & Chr$(1) & .CheckBox3.Name
     AR_CAP(4) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox7.Caption & Chr$(1) & .CheckBox7.Name
     AR_CAP(5) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox32.Caption & Chr$(1) & .CheckBox32.Name
     AR_CAP(6) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox12.Caption & Chr$(1) & .CheckBox12.Name
     AR_CAP(7) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox16.Caption & Chr$(1) & .CheckBox16.Name
     AR_CAP(8) = W_COM & Chr$(1) & "" & Chr$(1) & .CheckBox60.Caption & Chr$(1) & .CheckBox60.Name

     AR_CAP(9) = .MultiPage1("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox22.Caption & Chr$(1) & .CheckBox22.Name
     AR_CAP(10) = .MultiPage1("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox208.Caption & Chr$(1) & .CheckBox208.Name
     AR_CAP(11) = .MultiPage1("Page1").Caption & Chr$(1) & .Label143.Caption & Chr$(1) & .OptionButton14.Caption & Chr$(1) & .OptionButton14.Name
     AR_CAP(12) = .MultiPage1("Page1").Caption & Chr$(1) & .Label143.Caption & Chr$(1) & .OptionButton15.Caption & Chr$(1) & .OptionButton15.Name
     AR_CAP(13) = .MultiPage1("Page1").Caption & Chr$(1) & .Label143.Caption & Chr$(1) & .OptionButton16.Caption & Chr$(1) & .OptionButton16.Name

     AR_CAP(14) = .MultiPage1("Page18").Caption & Chr$(1) & .Label144.Caption & Chr$(1) & .OptionButton22.Caption & Chr$(1) & .OptionButton22.Name
     AR_CAP(15) = .MultiPage1("Page18").Caption & Chr$(1) & .Label144.Caption & Chr$(1) & .OptionButton23.Caption & Chr$(1) & .OptionButton23.Name
     AR_CAP(16) = .MultiPage1("Page18").Caption & Chr$(1) & .Label144.Caption & Chr$(1) & .OptionButton24.Caption & Chr$(1) & .OptionButton24.Name
     AR_CAP(17) = .MultiPage1("Page18").Caption & Chr$(1) & .Label144.Caption & Chr$(1) & .OptionButton25.Caption & Chr$(1) & .OptionButton25.Name
     AR_CAP(18) = .MultiPage1("Page18").Caption & Chr$(1) & .Label145.Caption & Chr$(1) & .OptionButton26.Caption & Chr$(1) & .OptionButton26.Name
     AR_CAP(19) = .MultiPage1("Page18").Caption & Chr$(1) & .Label145.Caption & Chr$(1) & .OptionButton27.Caption & Chr$(1) & .OptionButton27.Name

     AR_CAP(20) = .MultiPage1("Page12").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox54.Caption & Chr$(1) & .CheckBox54.Name
     AR_CAP(21) = .MultiPage1("Page12").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox55.Caption & Chr$(1) & .CheckBox55.Name
     AR_CAP(22) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton4.Caption & Chr$(1) & .OptionButton4.Name
     AR_CAP(23) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton5.Caption & Chr$(1) & .OptionButton5.Name
     AR_CAP(24) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton6.Caption & Chr$(1) & .OptionButton6.Name
     AR_CAP(25) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton7.Caption & Chr$(1) & .OptionButton7.Name
     AR_CAP(26) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton8.Caption & Chr$(1) & .OptionButton8.Name
     AR_CAP(27) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton9.Caption & Chr$(1) & .OptionButton9.Name
     AR_CAP(28) = .MultiPage1("Page12").Caption & Chr$(1) & .Label146.Caption & Chr$(1) & .OptionButton10.Caption & Chr$(1) & .OptionButton10.Name

     AR_CAP(29) = .MultiPage1("Page14").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox59.Caption & Chr$(1) & .CheckBox59.Name

     AR_CAP(30) = .MultiPage1("Page16").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox84.Caption & Chr$(1) & .CheckBox84.Name
     AR_CAP(31) = .MultiPage1("Page16").Caption & Chr$(1) & .Label147.Caption & Chr$(1) & .OptionButton17.Caption & Chr$(1) & .OptionButton17.Name
     AR_CAP(32) = .MultiPage1("Page16").Caption & Chr$(1) & .Label147.Caption & Chr$(1) & .OptionButton18.Caption & Chr$(1) & .OptionButton18.Name
     AR_CAP(33) = .MultiPage1("Page16").Caption & Chr$(1) & .Label147.Caption & Chr$(1) & .OptionButton19.Caption & Chr$(1) & .OptionButton19.Name
     AR_CAP(34) = .MultiPage1("Page16").Caption & Chr$(1) & .Label148.Caption & Chr$(1) & .OptionButton20.Caption & Chr$(1) & .OptionButton20.Name
     AR_CAP(35) = .MultiPage1("Page16").Caption & Chr$(1) & .Label148.Caption & Chr$(1) & .OptionButton21.Caption & Chr$(1) & .OptionButton21.Name

     AR_CAP(36) = .MultiPage1("Page15").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox68.Caption & Chr$(1) & .CheckBox68.Name

     AR_CAP(37) = .MultiPage1("Page5").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox62.Caption & Chr$(1) & .CheckBox62.Name
     AR_CAP(38) = .MultiPage1("Page5").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox75.Caption & Chr$(1) & .CheckBox75.Name
     AR_CAP(39) = .MultiPage1("Page5").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox202.Caption & Chr$(1) & .CheckBox202.Name
     AR_CAP(40) = .MultiPage1("Page5").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox27.Caption & Chr$(1) & .CheckBox27.Name

     AR_CAP(41) = .MultiPage1("Page10").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox42.Caption & Chr$(1) & .CheckBox42.Name

     AR_CAP(42) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox48.Caption & Chr$(1) & .CheckBox48.Name
     AR_CAP(43) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox78.Caption & Chr$(1) & .CheckBox78.Name
     AR_CAP(44) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox71.Caption & Chr$(1) & .CheckBox71.Name
     AR_CAP(45) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox85.Caption & Chr$(1) & .CheckBox85.Name
     AR_CAP(46) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox50.Caption & Chr$(1) & .CheckBox50.Name
     AR_CAP(47) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox65.Caption & Chr$(1) & .CheckBox65.Name
     AR_CAP(48) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox49.Caption & Chr$(1) & .CheckBox49.Name
     AR_CAP(49) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox56.Caption & Chr$(1) & .CheckBox56.Name
     AR_CAP(50) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox43.Caption & Chr$(1) & .CheckBox43.Name
     AR_CAP(51) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox73.Caption & Chr$(1) & .CheckBox73.Name
     AR_CAP(52) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page1").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox69.Caption & Chr$(1) & .CheckBox69.Name
  
     AR_CAP(53) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page3").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox86.Caption & Chr$(1) & .CheckBox86.Name
     AR_CAP(54) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page3").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox209.Caption & Chr$(1) & .CheckBox209.Name
     
     AR_CAP(55) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & .Label149.Caption & Chr$(1) & .OptionButton11.Caption & Chr$(1) & .OptionButton11.Name
     AR_CAP(56) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & .Label149.Caption & Chr$(1) & .OptionButton12.Caption & Chr$(1) & .OptionButton12.Name
     AR_CAP(57) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & .Label149.Caption & Chr$(1) & .OptionButton13.Caption & Chr$(1) & .OptionButton13.Name
     AR_CAP(58) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox34.Caption & Chr$(1) & .CheckBox34.Name
     AR_CAP(59) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox37.Caption & Chr$(1) & .CheckBox37.Name
     AR_CAP(60) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox72.Caption & Chr$(1) & .CheckBox72.Name
     AR_CAP(61) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox74.Caption & Chr$(1) & .CheckBox74.Name
     AR_CAP(62) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page2").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox92.Caption & Chr$(1) & .CheckBox92.Name
  
     AR_CAP(63) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page4").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox88.Caption & Chr$(1) & .CheckBox88.Name
     AR_CAP(64) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page4").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox33.Caption & Chr$(1) & .CheckBox33.Name
     AR_CAP(65) = .MultiPage1("Page13").Caption & " - " & .MultiPage3("Page4").Caption & Chr$(1) & "" & Chr$(1) & .CheckBox44.Caption & Chr$(1) & .CheckBox44.Name
  End With
  
  Erase AR_SEL
  J = 0
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
     .Pattern = "\(.\)$"
  End With
  
  For I = 1 To UBound(AR_CAP)
     AR_SPL = Split(AR_CAP(I), Chr$(1))
     SW_HIT = False
     
     If CommandBars("EREPU9").Controls(7).text = "" Then
        SW_HIT = True
     Else
        If AR_SPL(1) = "" Then
           W_STR = AR_SPL(0) & Chr$(1) & AR_SPL(1) & Chr$(1) & RE.Replace(AR_SPL(2), "")
        Else
           W_STR = AR_SPL(0) & Chr$(1) & AR_SPL(1)
        End If
        If InStr(1, W_STR, CommandBars("EREPU9").Controls(7).text, vbTextCompare) > 0 Then
           SW_HIT = True
        End If
     End If
        
     If SW_HIT = True Then
        J = J + 1
        ReDim Preserve AR_SEL(J)
        Set W_CTRL = UserForm1.Controls(AR_SPL(3))
        W_VAL = W_CTRL.Value
        Set W_CTRL = Nothing
        AR_SEL(J) = AR_SPL(0) & Chr$(1) & AR_SPL(1) & Chr$(1) & RE.Replace(AR_SPL(2), "") & Chr$(1) & W_VAL & Chr$(1) & AR_SPL(3)
     End If
  Next I
  
  B = 0
  On Error Resume Next
  B = UBound(AR_SEL)
  On Error GoTo 0
  
  If B = 0 Then
     Exit Sub
  End If
  
  Set myBar99 = Nothing
  On Error Resume Next
  Set myBar99 = Application.CommandBars("EREPU99")
  On Error GoTo 0
  
  If myBar99 Is Nothing Then
  Else
     For Each C In CommandBars
        If C.Name = "EREPU99" Then
           C.Delete
        End If
     Next C
  End If
  
  Set myBar99 = CommandBars.Add(Name:="EREPU99", Position:=msoBarPopup, Temporary:=True)
  With myBar99
  
     W_K1 = ""
     W_K2 = ""
     
     For I = 1 To UBound(AR_SEL)
        AR_SPL = Split(AR_SEL(I), Chr$(1))
        If AR_SPL(3) = "True" Then
           AR_SPL(3) = "On"
        Else
           AR_SPL(3) = "Off"
        End If
        
        If AR_SPL(0) <> W_K1 Then
           With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
              I1 = .Index
              .Caption = AR_SPL(0)
           End With
           W_K1 = AR_SPL(0)
           W_K2 = ""
        End If
        
        With .Controls(I1)
           If AR_SPL(1) <> "" Then
              If AR_SPL(1) <> W_K2 Then
                 With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
                    I2 = .Index
                    .Caption = AR_SPL(1)
                 End With
                 W_K2 = AR_SPL(1)
              End If
              With .Controls(I2)
                 With .Controls.Add
                    .Caption = AR_SPL(2) & " : " & AR_SPL(3)
                    If AR_SPL(3) = "On" Then
                       .Enabled = False
                       .OnAction = ""
                    Else
                       .OnAction = "'" & "RCLICK_SETTING_CHG" & Chr$(34) & AR_SPL(4) & Chr$(34) & "'"
                       .FaceId = 548
                    End If
                 End With
              End With
           Else
              With .Controls.Add
                 .Caption = AR_SPL(2) & " : " & AR_SPL(3)
                 .OnAction = "'" & "RCLICK_SETTING_CHG" & Chr$(34) & AR_SPL(4) & Chr$(34) & "'"
                 .FaceId = 548
              End With
           End If
        End With
     Next I
  End With

  On Error Resume Next
  Application.CommandBars("EREPU99").ShowPopup
  On Error GoTo 0


End Sub

Sub RCLICK_SETTING_CHG(ByVal W_CTRL As String)

  With UserForm1
     .Controls(W_CTRL).Value = Not .Controls(W_CTRL).Value
  End With

End Sub

Sub RCLICK_CUT()

'  Application.SendKeys ("^x")
  Call KeybdEvent(VK_CTRL, 0, 0, 0)
  Call KeybdEvent(VK_X, 0, 0, 0)
  Call KeybdEvent(VK_CTRL, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_X, 0, KEYEVENTF_KEYUP, 0)

End Sub

Sub RCLICK_COPY()

'  Application.SendKeys ("^c")
  Call KeybdEvent(VK_CTRL, 0, 0, 0)
  Call KeybdEvent(VK_C, 0, 0, 0)
  Call KeybdEvent(VK_CTRL, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_C, 0, KEYEVENTF_KEYUP, 0)

End Sub

Sub RCLICK_PASTE()

'  Application.SendKeys ("^v")
  Call KeybdEvent(VK_CTRL, 0, 0, 0)
  Call KeybdEvent(VK_V, 0, 0, 0)
  Call KeybdEvent(VK_CTRL, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_V, 0, KEYEVENTF_KEYUP, 0)

End Sub

Sub RCLICK_ALL()

'  Application.SendKeys ("^a")
  Call KeybdEvent(VK_CTRL, 0, 0, 0)
  Call KeybdEvent(VK_A, 0, 0, 0)
  Call KeybdEvent(VK_CTRL, 0, KEYEVENTF_KEYUP, 0)
  Call KeybdEvent(VK_A, 0, KEYEVENTF_KEYUP, 0)

End Sub

Sub RCLICK_SET_FORMULA()

  Dim W_TXT As String
  
  On Error Resume Next
  
  W_TXT = ""
  
  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              W_TXT = ActiveCell.Value
           End If
        End If
        
        If ActiveCell.FormulaHidden = False Then
           If ActiveCell.HasFormula = True Then
              W_TXT = ActiveCell.Formula
           End If
        End If
     End If
  End If

  If W_TXT <> "" Then
     W_BOX.Value = W_TXT
  End If

  On Error GoTo 0

End Sub

Sub RCLICK_SET_VALUE()

  Dim W_TXT As String
  
  On Error Resume Next
  
  W_TXT = ""
  
  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              W_TXT = ActiveCell.Value
           End If
        End If
     End If
  End If

  If W_TXT <> "" Then
     W_BOX.Value = W_TXT
  End If

  On Error GoTo 0

End Sub

Sub RCLICK_SHAL_REFLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_FALSH(W_LI + 1) = "!"
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO"
     End If
  End If

End Sub

Sub RCLICK_RLAL_REFLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_FALSH(W_LI + 1) = ""
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO"
     End If
  End If

End Sub

Sub RCLICK_DEL_REFLIST()
  
  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_FTEXT(W_LI + 1) = ""
        For I = W_LI + 2 To UBound(AR_FTEXT)
           AR_FTEXT(I - 1) = AR_FTEXT(I)
        Next I
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO"
     End If
  End If

End Sub

Sub RCLICK_SHAL_REPLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_RALSH(W_LI + 1) = "!"
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REPCOMBO"
     End If
  End If

End Sub

Sub RCLICK_RLAL_REPLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_RALSH(W_LI + 1) = ""
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REPCOMBO"
     End If
  End If

End Sub

Sub RCLICK_DEL_REPLIST()
  
  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_RTEXT(W_LI + 1) = ""
        For I = W_LI + 2 To UBound(AR_RTEXT)
           AR_RTEXT(I - 1) = AR_RTEXT(I)
        Next I
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REPCOMBO"
     End If
  End If

End Sub

Sub RCLICK_SHAL_DIRLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_DALSH(W_LI + 1) = "!"
        Application.OnTime Now + TimeValue("00:00:01"), "SET_DIRCOMBO"
     End If
  End If

End Sub

Sub RCLICK_RLAL_DIRLIST()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_DALSH(W_LI + 1) = ""
        Application.OnTime Now + TimeValue("00:00:01"), "SET_DIRCOMBO"
     End If
  End If

End Sub

Sub RCLICK_DEL_DIRLIST()
  
  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_DTEXT(W_LI + 1) = ""
        For I = W_LI + 2 To UBound(AR_DTEXT)
           AR_DTEXT(I - 1) = AR_DTEXT(I)
        Next I
        Application.OnTime Now + TimeValue("00:00:01"), "SET_DIRCOMBO"
     End If
  End If

End Sub

Sub RCLICK_SHAL_REFLIST2()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_AALSH(W_LI + 1) = "!"
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO2"
     End If
  End If

End Sub

Sub RCLICK_RLAL_REFLIST2()

  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_AALSH(W_LI + 1) = ""
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO2"
     End If
  End If

End Sub

Sub RCLICK_DEL_REFLIST2()
  
  Dim I As Long
  
  
  If W_BOX Is Nothing Then
  ElseIf SW_CBO2 = True Then
     If W_LI >= 0 Then
        AR_ATEXT(W_LI + 1) = ""
        For I = W_LI + 2 To UBound(AR_ATEXT)
           AR_ATEXT(I - 1) = AR_ATEXT(I)
        Next I
        Application.OnTime Now + TimeValue("00:00:01"), "SET_REFCOMBO2"
     End If
  End If

End Sub

Sub RCLICK_RE101()
  
  W_RETXT = "^"
  Call RETXT_SET

End Sub

Sub RCLICK_RE102()
  
  W_RETXT = "$"
  Call RETXT_SET

End Sub

Sub RCLICK_RE103()
  
  W_RETXT = "\b"
  Call RETXT_SET

End Sub

Sub RCLICK_RE104()
  
  W_RETXT = "\B"
  Call RETXT_SET

End Sub

Sub RCLICK_RE201()
  
  W_RETXT = "\n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE202()
  
  W_RETXT = "\t"
  Call RETXT_SET

End Sub

Sub RCLICK_RE203()
  
  W_RETXT = "\?"
  Call RETXT_SET

End Sub

Sub RCLICK_RE204()
  
  W_RETXT = "\*"
  Call RETXT_SET

End Sub

Sub RCLICK_RE205()
  
  W_RETXT = "\+"
  Call RETXT_SET

End Sub

Sub RCLICK_RE206()
  
  W_RETXT = "\."
  Call RETXT_SET

End Sub

Sub RCLICK_RE207()
  
  W_RETXT = "\|"
  Call RETXT_SET

End Sub

Sub RCLICK_RE208()
  
  W_RETXT = "\{"
  Call RETXT_SET

End Sub

Sub RCLICK_RE209()
  
  W_RETXT = "\}"
  Call RETXT_SET

End Sub

Sub RCLICK_RE210()
  
  W_RETXT = "\\"
  Call RETXT_SET

End Sub

Sub RCLICK_RE211()
  
  W_RETXT = "\["
  Call RETXT_SET

End Sub

Sub RCLICK_RE212()
  
  W_RETXT = "\]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE213()
  
  W_RETXT = "\("
  Call RETXT_SET

End Sub

Sub RCLICK_RE214()
  
  W_RETXT = "\)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE215()
  
  W_RETXT = "\$"
  Call RETXT_SET

End Sub

Sub RCLICK_RE301()
  
  W_RETXT = "[]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE302()
  
  W_RETXT = "[^]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE303()
  
  W_RETXT = "."
  Call RETXT_SET

End Sub

Sub RCLICK_RE304()
  
  W_RETXT = "\w"
  Call RETXT_SET

End Sub

Sub RCLICK_RE305()
  
  W_RETXT = "\W"
  Call RETXT_SET

End Sub

Sub RCLICK_RE306()
  
  W_RETXT = "\d"
  Call RETXT_SET

End Sub

Sub RCLICK_RE307()
  
  W_RETXT = "\D"
  Call RETXT_SET

End Sub

Sub RCLICK_RE308()
  
  W_RETXT = "\s"
  Call RETXT_SET

End Sub

Sub RCLICK_RE309()
  
  W_RETXT = "\S"
  Call RETXT_SET

End Sub

Sub RCLICK_RE401()
  
  W_RETXT = "[x]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE402()
  
  W_RETXT = "[x,]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE403()
  
  W_RETXT = "[x,y]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE404()
  
  W_RETXT = "?"
  Call RETXT_SET

End Sub

Sub RCLICK_RE405()
  
  W_RETXT = "*"
  Call RETXT_SET

End Sub

Sub RCLICK_RE406()
  
  W_RETXT = "+"
  Call RETXT_SET

End Sub

Sub RCLICK_RE407()
  
  W_RETXT = "?"
  Call RETXT_SET

End Sub

Sub RCLICK_RE501()
  
  W_RETXT = "()"
  Call RETXT_SET

End Sub

Sub RCLICK_RE502()
  
  W_RETXT = "(?:)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE503()
  
  W_RETXT = "(?=)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE504()
  
  W_RETXT = "(?!)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE505()
  
  W_RETXT = "|"
  Call RETXT_SET

End Sub

Sub RCLICK_RE506()
  
  W_RETXT = "\n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE601()
  
  W_RETXT = "\n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE602()
  
  W_RETXT = "$$"
  Call RETXT_SET

End Sub

Sub RCLICK_RE603()
  
  W_RETXT = "$n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE604()
  
  W_RETXT = "$&"
  Call RETXT_SET

End Sub

Sub RCLICK_RE605()
  
  W_RETXT = "$`"
  Call RETXT_SET

End Sub

Sub RCLICK_RE606()
  
  W_RETXT = "$'"
  Call RETXT_SET

End Sub

Sub RCLICK_RE607()
  
  W_RETXT = "$+"
  Call RETXT_SET

End Sub

Sub RCLICK_RE608()
  
  W_RETXT = "$_"
  Call RETXT_SET

End Sub

Sub RCLICK_RE701()
  
  W_RETXT = "[UPPER]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE702()
  
  W_RETXT = "[LOWER]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE703()
  
  W_RETXT = "[WIDE]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE704()
  
  W_RETXT = "[NARROW]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE801()
  
  W_RETXT = "[COND>]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE802()
  
  W_RETXT = "[COND<]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE803()
  
  W_RETXT = "[COND>=]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE804()
  
  W_RETXT = "[COND<=]"
  Call RETXT_SET

End Sub

Sub RCLICK_RE901()
  
  W_RETXT = "&L"
  Call RETXT_SET

End Sub

Sub RCLICK_RE902()
  
  W_RETXT = "&C"
  Call RETXT_SET

End Sub

Sub RCLICK_RE903()
  
  W_RETXT = "&R"
  Call RETXT_SET

End Sub

Sub RCLICK_RE904()
  
  W_RETXT = "&E"
  Call RETXT_SET

End Sub

Sub RCLICK_RE905()
  
  W_RETXT = "&X"
  Call RETXT_SET

End Sub

Sub RCLICK_RE906()
  
  W_RETXT = "&Y"
  Call RETXT_SET

End Sub

Sub RCLICK_RE907()
  
  W_RETXT = "&B"
  Call RETXT_SET

End Sub

Sub RCLICK_RE908()
  
  W_RETXT = "&I"
  Call RETXT_SET

End Sub

Sub RCLICK_RE909()
  
  W_RETXT = "&U"
  Call RETXT_SET

End Sub

Sub RCLICK_RE910()
  
  W_RETXT = "&S"
  Call RETXT_SET

End Sub

Sub RCLICK_RE911()
  
  W_RETXT = "&D"
  Call RETXT_SET

End Sub

Sub RCLICK_RE912()
  
  W_RETXT = "&T"
  Call RETXT_SET

End Sub

Sub RCLICK_RE913()
  
  W_RETXT = "&Z"
  Call RETXT_SET

End Sub

Sub RCLICK_RE914()
  
  W_RETXT = "&F"
  Call RETXT_SET

End Sub

Sub RCLICK_RE915()
  
  W_RETXT = "&A"
  Call RETXT_SET

End Sub

Sub RCLICK_RE916()
  
  W_RETXT = "&P"
  Call RETXT_SET

End Sub

Sub RCLICK_RE917()
  
  W_RETXT = "&P+n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE918()
  
  W_RETXT = "&P-n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE919()
  
  W_RETXT = "&&"
  Call RETXT_SET

End Sub

Sub RCLICK_RE920()
  
  W_RETXT = "&""Font"""
  Call RETXT_SET

End Sub

Sub RCLICK_RE921()
  
  W_RETXT = "&n"
  Call RETXT_SET

End Sub

Sub RCLICK_RE922()
  
  W_RETXT = "&N"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1001()
  
  W_RETXT = "(?<=)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1002()
  
  W_RETXT = "(?<!)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1003()
  
  W_RETXT = "(?<xxx>)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1004()
  
  W_RETXT = "\k<xxx>"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1005()
  
  W_RETXT = "(?imnsx-imnsx:)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1006()
  
  W_RETXT = "(?imnsx-imnsx)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1007()
  
  W_RETXT = "(?>)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1008()
  
  W_RETXT = "(?#)"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1101()
  
  W_RETXT = "\Q\E"
  Call RETXT_SET

End Sub

Sub RCLICK_RE1201()
  
  W_RETXT = "${xxx}"
  Call RETXT_SET

End Sub

Sub RETXT_SET()
    
  With W_BOX
     W_SELSTART = .SelStart + Len(W_RETXT)
     Select Case .SelStart
     Case 0
         .Value = W_RETXT & .Value
     Case Len(.Value)
         .Value = .Value & W_RETXT
     Case Else
         .Value = Left$(.Value, .SelStart) & W_RETXT & Right$(.Value, Len(.Value) - .SelStart)
     End Select
  End With

End Sub

Sub UNDO_RTN()

  Dim I As Long
  Dim J As Long
  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  
  Application.ScreenUpdating = False
  SW_UNDO = True
  On Error GoTo LABEL_ERROR
  Workbooks(W_REPBOOK).Activate
  
  For I = 1 To UBound(AR_REP, 2)
     If IsEmpty(AR_REP(1, I)) = True Then
        Exit For
     End If
     If Workbooks(W_REPBOOK).Sheets(AR_REP(1, I)).Name <> AR_REP(2, I) Then
        GoTo LABEL_ERROR
     End If
     With Workbooks(W_REPBOOK).Sheets(AR_REP(1, I)).Cells(AR_REP(3, I), AR_REP(4, I))
        If AR_REP(6, I) = True Then
           .Value = AR_REP(5, I)
        Else
           If .HasArray = True Then
              .FormulaArray = AR_REP(5, I)
           Else
              .Formula = AR_REP(5, I)
           End If
        End If
        If AR_REP(7, I) <> "" Then
           .Characters.Font.Color = 0
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(7, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(7, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Color = CLng(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(8, I) <> "" Then
           .Characters.Font.Bold = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(8, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(8, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Bold = CBool(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(9, I) <> "" Then
           .Characters.Font.Italic = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(9, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(9, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Italic = CBool(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(10, I) <> "" Then
           .Characters.Font.Underline = -4142
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(10, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(10, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Underline = CLng(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(11, I) <> "" Then
           .Characters.Font.Strikethrough = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(11, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(11, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Strikethrough = CBool(AR_ITEM2(2))
           Next J
        End If
     End With
  Next I

  On Error GoTo 0
  SW_UNDO = False
  If W_REPBOOK <> "" Then
     Set OWB = Nothing
     W_REPBOOK = ""
  End If
  Erase AR_REP
  Application.ScreenUpdating = True
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox(I - 1 & " item(s) were undone.", vbInformation)
  Else
     W_RET = MsgBox(I - 1 & " |fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
  End If
  Call COMBO_FOCUS
  Exit Sub

LABEL_ERROR:
  On Error GoTo 0
  SW_UNDO = False
  If W_REPBOOK <> "" Then
     Set OWB = Nothing
     W_REPBOOK = ""
  End If
  Erase AR_REP
  Application.ScreenUpdating = True
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Undo failed. Open file again.", vbExclamation)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
  End If
  Call COMBO_FOCUS

End Sub

Sub UNDO2_RTN()

  Dim I As Long
  Dim J As Long
  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  
  Application.ScreenUpdating = False
  SW_UNDO = True
  On Error GoTo LABEL_ERROR
  Workbooks(W_FNDBOOK).Activate
  
  For I = 1 To UBound(AR_REP, 2)
     If IsEmpty(AR_REP(1, I)) = True Then
        Exit For
     End If
     If Workbooks(W_FNDBOOK).Sheets(AR_REP(1, I)).Name <> AR_REP(2, I) Then
        GoTo LABEL_ERROR
     End If
     With Workbooks(W_FNDBOOK).Sheets(AR_REP(1, I)).Cells(AR_REP(3, I), AR_REP(4, I))
        If AR_REP(5, I) <> "" Then
           .Characters.Font.Color = 0
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(5, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(5, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Color = CLng(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(6, I) <> "" Then
           .Characters.Font.Bold = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(6, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(6, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Bold = CBool(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(7, I) <> "" Then
           .Characters.Font.Italic = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(7, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(7, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Italic = CBool(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(8, I) <> "" Then
           .Characters.Font.Underline = -4142
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(8, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(8, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Underline = CLng(AR_ITEM2(2))
           Next J
        End If
        If AR_REP(9, I) <> "" Then
           .Characters.Font.Strikethrough = False
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(AR_REP(9, I), ",")
           Else
              AR_ITEM = SPLIT97(AR_REP(9, I), ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              .Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Strikethrough = CBool(AR_ITEM2(2))
           Next J
        End If
     End With
  Next I

  On Error GoTo 0
  SW_UNDO = False
  If W_FNDBOOK <> "" Then
     Set OWB = Nothing
     W_FNDBOOK = ""
  End If
  Erase AR_REP
  Application.ScreenUpdating = True
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox(I - 1 & " item(s) were undone.", vbInformation)
  Else
     W_RET = MsgBox(I - 1 & " |fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
  End If
  Call COMBO_FOCUS
  Exit Sub

LABEL_ERROR:
  On Error GoTo 0
  SW_UNDO = False
  If W_FNDBOOK <> "" Then
     Set OWB = Nothing
     W_FNDBOOK = ""
  End If
  Erase AR_REP
  Application.ScreenUpdating = True
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Undo failed. Open file again.", vbExclamation)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
  End If
  Call COMBO_FOCUS

End Sub

Sub COMBO_FOCUS()
  
  On Error Resume Next
  
  If UserForm1.ToggleButton5.Value = True Then
     With UserForm1.ComboBox31
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
     On Error GoTo 0
     Exit Sub
  End If
  
  Select Case UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name
  Case "Page1"
     If SW_IS = False Then
        With UserForm1.ComboBox1
           .SelStart = 0
           .SelLength = Len(.Value)
           .SetFocus
        End With
     End If
  Case "Page2"
     With UserForm1.ComboBox3
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page6"
     With UserForm1.ComboBox6
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page17"
     With UserForm1.ComboBox27
        .SelStart = 0
        .SelLength = Len(.Value)
     End With
  Case "Page18"
     With UserForm1.ComboBox29
        .SelStart = 0
        .SelLength = Len(.Value)
     End With
  Case "Page12"
     With UserForm1.ComboBox16
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page14"
     With UserForm1.ComboBox22
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page16"
     With UserForm1.ComboBox26
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page15"
     With UserForm1.ComboBox24
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page4"
     With UserForm1.ComboBox4
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page20"
     With UserForm1.ComboBox61
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page5"
     With UserForm1.ComboBox5
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page7"
     With UserForm1.ComboBox8
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page9"
     With UserForm1.ComboBox15
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  Case "Page8"
     With UserForm1.ComboBox12
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  End Select
  On Error GoTo 0

End Sub

Sub RMENU_ADD()

  Dim I As Long
  Dim SW_CBT As Boolean
  
  'Excel2003SP3|fffd||142||350|}|fffd|`|fffd|`|fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||197||fffd||fffd||fffd||fffd||90bd||fffd||fffd|
  SW_CBT = False
  If Application.CommandBars("Drawing").Visible = False Then
     Application.ScreenUpdating = False
     SW_CBT = True
     Application.CommandBars("Drawing").Visible = True
  End If
  
  For I = 1 To Application.CommandBars.count
  'Cell
     Select Case Application.CommandBars(I).Name
     Case "Cell", "Column", "Row", "Shapes", "Desktop"
        With Application.CommandBars(I).Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If SW_ENGLISH = True Then
              .Caption = "Regular Expression Find"
           Else
              .Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
           End If
           .BeginGroup = True
           With .Controls.Add()
              If SW_ENGLISH = True Then
                 .Caption = "Open dialog"
              Else
                 .Caption = "|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|N|fffd||fffd|"
              End If
              .OnAction = "RMENU_SHOWF_RTN"
           End With
           With .Controls.Add()
              If SW_ENGLISH = True Then
                 .Caption = "Find all with clipboard string"
              Else
                 .Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|v|fffd|{|fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||5c2||10c||fffd||fffd||fffd|"
              End If
              .OnAction = "RMENU_FA_RTN"
           End With
           Select Case Application.CommandBars(I).Name
           Case "Cell", "Column"
              With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
                 If SW_ENGLISH = True Then
                    .Caption = "RegEx AutoFilter"
                 Else
                    .Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|I|fffd|[|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^"
                 End If
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Set (posi)"
                    Else
                       .Caption = "|fffd||752||fffd|(|fffd|m|fffd||fffd|)"
                    End If
                    .OnAction = "RMENU_SETP_REAF"
                 End With
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Set (nega)"
                    Else
                       .Caption = "|fffd||752||fffd|(|fffd||6d2||fffd|)"
                    End If
                    .OnAction = "RMENU_SETN_REAF"
                 End With
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Release"
                    Else
                       .Caption = "|fffd||fffd||fffd||fffd|"
                    End If
                    .OnAction = "RMENU_RLS_REAF"
                 End With
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Release all"
                    Else
                       .Caption = "|fffd|S|fffd||fffd||fffd||fffd|"
                    End If
                    .OnAction = "RMENU_ALLRLS_REAF"
                 End With
              End With
           End Select
           Select Case Application.CommandBars(I).Name
           Case "Cell", "Column", "Row"
              With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
                 If SW_ENGLISH = True Then
                    .Caption = "Classic Color"
                 Else
                    .Caption = "|fffd|N|fffd||fffd||fffd|V|fffd|b|fffd|N|fffd|J|fffd||fffd||fffd|["
                 End If
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Font Color"
                    Else
                       .Caption = "|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||310|F"
                    End If
                    .OnAction = "RMENU_CC_FONT"
                 End With
                 With .Controls.Add()
                    If SW_ENGLISH = True Then
                       .Caption = "Fill Color"
                    Else
                       .Caption = "|fffd|h|fffd||fffd||82||502||fffd||fffd||310|F"
                    End If
                    .OnAction = "RMENU_CC_FILL"
                 End With
              End With
           End Select
        End With
     End Select
  Next I
  
  If SW_CBT = True Then
     SW_CBT = False
     Application.CommandBars("Drawing").Visible = False
     Application.ScreenUpdating = True
  End If

End Sub

Sub RMENU_FA_RTN()

  Dim W_TEXT As String


  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  With New MSForms.DataObject
     .GetFromClipboard
     W_TEXT = ""
     On Error Resume Next
     W_TEXT = .GetText
     On Error GoTo 0
  End With
  
  If W_TEXT = "" Then
     Exit Sub
  End If
  
  W_TEXT = Application.Substitute(W_TEXT, "?", Chr$(1) & "?")
  W_TEXT = Application.Substitute(W_TEXT, "*", Chr$(1) & "*")
  W_TEXT = Application.Substitute(W_TEXT, "+", Chr$(1) & "+")
  W_TEXT = Application.Substitute(W_TEXT, ".", Chr$(1) & ".")
  W_TEXT = Application.Substitute(W_TEXT, "(", Chr$(1) & "(")
  W_TEXT = Application.Substitute(W_TEXT, ")", Chr$(1) & ")")
  W_TEXT = Application.Substitute(W_TEXT, "{", Chr$(1) & "{")
  W_TEXT = Application.Substitute(W_TEXT, "}", Chr$(1) & "}")
  W_TEXT = Application.Substitute(W_TEXT, "\", Chr$(1) & "\")
  W_TEXT = Application.Substitute(W_TEXT, "[", Chr$(1) & "[")
  W_TEXT = Application.Substitute(W_TEXT, "]", Chr$(1) & "]")
  W_TEXT = Application.Substitute(W_TEXT, "^", Chr$(1) & "^")
  W_TEXT = Application.Substitute(W_TEXT, "$", Chr$(1) & "$")
  W_TEXT = Application.Substitute(W_TEXT, Chr$(1), "\")
 
  UserForm1.ComboBox1.Value = W_TEXT
  
  W_EVAR = ""
  W_CLKBTN = "RMENU_FA_RTN"
  SW_HIDE = True
  Call UserForm1.FINDPN(True, 3)
  
  W_CLKBTN = ""
  SW_HIDE = False
  If UserForm1.MultiPage2.Visible = False Then
     Unload UserForm1
  Else
     Call UserForm1.MultiPage1_Change
     Call SHOWF_RTN
     If SW_CLASSIC = False Then
        SW_CLASSIC2 = True
        Unload UserForm13
        Call SHOW_MODELESS(UserForm1)
     End If
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub RMENU_SETP_REAF()

  Call SET_REAF(True)

End Sub

Sub RMENU_SETN_REAF()

  Call SET_REAF(False)

End Sub

Private Sub SET_REAF(ByVal SW_POSI As Boolean)

  Dim W_COND As String
  Dim AWS As Worksheet
    
  Dim SR As Long
  Dim ER As Long
  Dim SC As Long
  Dim EC As Long
    
  Dim FN As Long
    
  Dim CL As Object
  Dim RE As Object

  Dim W_VL As String
    
    
  If Selection.Columns.count > 1 Then
     Exit Sub
  End If
    
  On Error Resume Next
  Set AWS = ActiveSheet
  On Error GoTo 0
  
  If AWS Is Nothing Then
     Exit Sub
  End If
  
  If Selection.Columns(1).Column >= AWS.UsedRange.Cells(1).Column And _
     Selection.Columns(1).Column <= AWS.UsedRange.Cells(AWS.UsedRange.Cells.count).Column Then
  Else
     Set AWS = Nothing
     Exit Sub
  End If

  If AWS.AutoFilterMode = True Then
     SR = AWS.AutoFilter.Range.Rows(1).Row
     ER = AWS.AutoFilter.Range.Rows(AWS.AutoFilter.Range.Rows.count).Row
     SC = AWS.AutoFilter.Range.Columns(1).Column
     EC = AWS.AutoFilter.Range.Columns(AWS.AutoFilter.Range.Columns.count).Column

     If Selection.Column >= SC And _
        Selection.Column <= EC Then
     Else
        Set AWS = Nothing
        Exit Sub
     End If
  End If
  
  If SW_ENGLISH = True Then
     W_COND = InputBox("Extract condition", "RegEx AutoFilter")
  Else
     W_COND = InputBox("|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|I|fffd|[|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^")
  End If
  
  If W_COND = "" Then
     Set AWS = Nothing
     Exit Sub
  End If
    
  If AWS.AutoFilterMode = False Then
     If Selection.Rows.count > 1 Then
        Columns(Selection.Column).AutoFilter
     Else
        AWS.UsedRange.AutoFilter
     End If
  
     SR = AWS.AutoFilter.Range.Rows(1).Row
     ER = AWS.AutoFilter.Range.Rows(AWS.AutoFilter.Range.Rows.count).Row
     SC = AWS.AutoFilter.Range.Columns(1).Column
     EC = AWS.AutoFilter.Range.Columns(AWS.AutoFilter.Range.Columns.count).Column
  End If
       
  Set RE = CreateObject("VBScript.RegExp")
  With RE
    .Pattern = W_COND
    .IgnoreCase = False
    .Global = True
  End With

  For Each CL In Range(Cells(SR, Selection.Column), Cells(ER, Selection.Column))
     W_VL = ""
     On Error Resume Next
     W_VL = CL.Value
     On Error GoTo 0
          
     If Right$(W_VL, 1) = vbTab Then
        If CL.HasFormula = False Then
           CL.Value = Left$(CL.Value, Len(CL.Value) - 1)
        Else
           CL.Formula = Left$(CL.Formula, Len(CL.Formula) - 4)
        End If
     End If
     
     If RE.Test(W_VL) = True Then
        If CL.HasFormula = False Then
           CL.Value = CL.Value & vbTab
        Else
           CL.Formula = CL.Formula & "&" & Chr$(34) & vbTab & Chr$(34)
        End If
     End If
  Next

  FN = Selection.Column - SC + 1
  If SW_POSI = True Then
     AWS.AutoFilter.Range.AutoFilter Field:=FN, Criteria1:="=*" & vbTab
  Else
     AWS.AutoFilter.Range.AutoFilter Field:=FN, Criteria1:="<>*" & vbTab
  End If
  
  Set AWS = Nothing

End Sub

Sub RMENU_RLS_REAF()

  Dim AWS As Worksheet
    
  Dim SR As Long
  Dim ER As Long
  Dim SC As Long
  Dim EC As Long
    
  Dim FN As Long
    
  Dim CL As Object
  Dim W_VL As String
  
    
  If Selection.Columns.count > 1 Then
     Exit Sub
  End If
    
  On Error Resume Next
  Set AWS = ActiveSheet
  On Error GoTo 0
  
  If AWS Is Nothing Then
     Exit Sub
  End If
  
  If Selection.Columns(1).Column >= AWS.UsedRange.Cells(1).Column And _
     Selection.Columns(1).Column <= AWS.UsedRange.Cells(AWS.UsedRange.Cells.count).Column Then
  Else
     Set AWS = Nothing
     Exit Sub
  End If

  If AWS.AutoFilterMode = False Then
     Set AWS = Nothing
     Exit Sub
  Else
     SR = AWS.AutoFilter.Range.Rows(1).Row
     ER = AWS.AutoFilter.Range.Rows(AWS.AutoFilter.Range.Rows.count).Row
     SC = AWS.AutoFilter.Range.Columns(1).Column
     EC = AWS.AutoFilter.Range.Columns(AWS.AutoFilter.Range.Columns.count).Column

     If Selection.Column >= SC And _
        Selection.Column <= EC Then
     Else
        Set AWS = Nothing
        Exit Sub
     End If
  End If
  
  For Each CL In Range(Cells(SR, Selection.Column), Cells(ER, Selection.Column))
     W_VL = ""
     On Error Resume Next
     W_VL = CL.Value
     On Error GoTo 0
          
     If Right$(W_VL, 1) = vbTab Then
        If CL.HasFormula = False Then
           CL.Value = Left$(CL.Value, Len(CL.Value) - 1)
        Else
           CL.Formula = Left$(CL.Formula, Len(CL.Formula) - 4)
        End If
     End If
  Next

  FN = Selection.Column - SC + 1
  AWS.AutoFilter.Range.AutoFilter Field:=FN

  Set AWS = Nothing

End Sub

Sub RMENU_ALLRLS_REAF()

  Dim AWS As Worksheet
    
  Dim SR As Long
  Dim ER As Long
  Dim SC As Long
  Dim EC As Long
    
  Dim CL As Object
  Dim W_VL As String
  
    
  On Error Resume Next
  Set AWS = ActiveSheet
  On Error GoTo 0
  
  If AWS Is Nothing Then
     Exit Sub
  End If
  
  If AWS.AutoFilterMode = False Then
     Set AWS = Nothing
     Exit Sub
  Else
     SR = AWS.AutoFilter.Range.Rows(1).Row
     ER = AWS.AutoFilter.Range.Rows(AWS.AutoFilter.Range.Rows.count).Row
     SC = AWS.AutoFilter.Range.Columns(1).Column
     EC = AWS.AutoFilter.Range.Columns(AWS.AutoFilter.Range.Columns.count).Column
  End If
  
  For Each CL In Range(Cells(SR, Selection.Column), Cells(ER, Selection.Column))
     W_VL = ""
     On Error Resume Next
     W_VL = CL.Value
     On Error GoTo 0
          
     If Right$(W_VL, 1) = vbTab Then
        If CL.HasFormula = False Then
           CL.Value = Left$(CL.Value, Len(CL.Value) - 1)
        Else
           CL.Formula = Left$(CL.Formula, Len(CL.Formula) - 4)
        End If
     End If
  Next

  AWS.UsedRange.AutoFilter

  Set AWS = Nothing

End Sub

Sub RMENU_CC_FONT()
     
    SW_CLCL = 1
    UserForm4.Hide
    Unload UserForm4
    SW_CLCL = 1
    UserForm4.Show vbModeless

End Sub

Sub RMENU_CC_FILL()

    SW_CLCL = 2
    UserForm4.Hide
    Unload UserForm4
    SW_CLCL = 2
    UserForm4.Show vbModeless

End Sub

Sub RMENU_DEL()

  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim L As Long
  Dim SW_CBT As Boolean

  '|fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||d3dc|
  
  'Excel2003SP3|fffd||142||350|}|fffd|`|fffd|`|fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||197||fffd||fffd||fffd||fffd||90bd||fffd||fffd|
  SW_CBT = False
  If Application.CommandBars("Drawing").Visible = False Then
     Application.ScreenUpdating = False
     SW_CBT = True
     Application.CommandBars("Drawing").Visible = True
  End If
  
  For I = 1 To Application.CommandBars.count
     'Cell
     Select Case Application.CommandBars(I).Name
     Case "Cell", "Column", "Row", "Shapes", "Desktop"
        With Application.CommandBars(I)
           For J = .Controls.count To 1 Step -1
              If .Controls(J).Caption = "Regular Expression Find" Or _
                 .Controls(J).Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|" Then
                 With .Controls(J)
                    For K = .Controls.count To 1 Step -1
                       If .Controls(K).Caption = "RegEx AutoFilter" Or _
                          .Controls(K).Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|I|fffd|[|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^" Then
                          With .Controls(K)
                             For L = .Controls.count To 1 Step -1
                                .Controls(L).Delete
                             Next L
                          End With
                          .Controls(K).Delete
                       ElseIf .Controls(K).Caption = "Classic Color" Or _
                          .Controls(K).Caption = "|fffd|N|fffd||fffd||fffd|V|fffd|b|fffd|N|fffd|J|fffd||fffd||fffd|[" Then
                          With .Controls(K)
                             For L = .Controls.count To 1 Step -1
                                .Controls(L).Delete
                             Next L
                          End With
                          .Controls(K).Delete
                       End If
                    Next K
                 End With
                 .Controls(J).Delete
              ElseIf .Controls(J).Caption = "RegEx AutoFilter" Or _
                 .Controls(J).Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|I|fffd|[|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^" Then
                 With .Controls(J)
                    For K = .Controls.count To 1 Step -1
                       .Controls(K).Delete
                    Next K
                 End With
                 .Controls(J).Delete
              ElseIf .Controls(J).Caption = "Find all with clipboard string" Or _
                 Right$(.Controls(J).Caption, 16) = "RegEx AutoFilter" Or _
                 .Controls(J).Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|v|fffd|{|fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||5c2||10c||fffd||fffd||fffd|" Or _
                 Left$(.Controls(J).Caption, 11) = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|I|fffd|[|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^" Then
                 .Controls(J).Delete
              End If
           Next J
        End With
     End Select
  Next I
  
  If SW_CBT = True Then
     SW_CBT = False
     Application.CommandBars("Drawing").Visible = False
     Application.ScreenUpdating = True
  End If

End Sub

Sub BGCLR_SET()

  Dim W_LBL As Object

  With UserForm1
     .BackColor = W_BGCLR
     .MultiPage1.BackColor = W_BGCLR
     .MultiPage2.BackColor = W_BGCLR
     .MultiPage3.BackColor = W_BGCLR
     .MultiPage4.BackColor = W_BGCLR
     .Frame1.BackColor = W_BGCLR
     If W_BGCLRL = "1" Then
        .MultiPage1.Pages("Page1").Picture = LoadPicture()
        .MultiPage1.Pages("Page2").Picture = LoadPicture()
        .MultiPage1.Pages("Page6").Picture = LoadPicture()
        .MultiPage1.Pages("Page17").Picture = LoadPicture()
        .MultiPage1.Pages("Page18").Picture = LoadPicture()
        .MultiPage1.Pages("Page12").Picture = LoadPicture()
        .MultiPage1.Pages("Page14").Picture = LoadPicture()
        .MultiPage1.Pages("Page15").Picture = LoadPicture()
        .MultiPage1.Pages("Page16").Picture = LoadPicture()
        .MultiPage1.Pages("Page4").Picture = LoadPicture()
        .MultiPage1.Pages("Page20").Picture = LoadPicture()
        .MultiPage1.Pages("Page5").Picture = LoadPicture()
        .MultiPage1.Pages("Page7").Picture = LoadPicture()
        .MultiPage1.Pages("Page9").Picture = LoadPicture()
        .MultiPage1.Pages("Page19").Picture = LoadPicture()
        .MultiPage1.Pages("Page8").Picture = LoadPicture()
        .MultiPage1.Pages("Page11").Picture = LoadPicture()
        .MultiPage1.Pages("Page10").Picture = LoadPicture()
        .MultiPage1.Pages("Page13").Picture = LoadPicture()
        .MultiPage1.Pages("Page3").Picture = LoadPicture()
        .MultiPage2.Pages(0).Picture = LoadPicture()
        .MultiPage2.Pages(1).Picture = LoadPicture()
        .MultiPage2.Pages(2).Picture = LoadPicture()
        .MultiPage2.Pages(3).Picture = LoadPicture()
        .MultiPage2.Pages(4).Picture = LoadPicture()
        .MultiPage2.Pages(5).Picture = LoadPicture()
        .MultiPage2.Pages(6).Picture = LoadPicture()
        .MultiPage2.Pages(7).Picture = LoadPicture()
        .MultiPage2.Pages(8).Picture = LoadPicture()
        .MultiPage2.Pages(9).Picture = LoadPicture()
        .MultiPage3.Pages(0).Picture = LoadPicture()
        .MultiPage3.Pages(1).Picture = LoadPicture()
        .MultiPage3.Pages(2).Picture = LoadPicture()
        .MultiPage3.Pages(3).Picture = LoadPicture()
        .MultiPage3.Pages(4).Picture = LoadPicture()
        .MultiPage3.Pages(5).Picture = LoadPicture()
        .MultiPage4.Pages(0).Picture = LoadPicture()
        .MultiPage4.Pages(1).Picture = LoadPicture()
        .MultiPage4.Pages(2).Picture = LoadPicture()
        .MultiPage4.Pages(3).Picture = LoadPicture()
        .MultiPage4.Pages(4).Picture = LoadPicture()
        .MultiPage4.Pages(5).Picture = LoadPicture()
        .MultiPage4.Pages(6).Picture = LoadPicture()
        .MultiPage4.Pages(7).Picture = LoadPicture()
     Else
        Set W_LBL = UserForm4.Controls("Label" & W_BGCLRL)
        .MultiPage1.Pages("Page1").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page2").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page6").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page17").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page18").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page12").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page14").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page15").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page16").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page4").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page20").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page5").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page7").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page9").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page19").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page8").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page11").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page10").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page13").Picture = W_LBL.Picture
        .MultiPage1.Pages("Page3").Picture = W_LBL.Picture
        .MultiPage2.Pages(0).Picture = W_LBL.Picture
        .MultiPage2.Pages(1).Picture = W_LBL.Picture
        .MultiPage2.Pages(2).Picture = W_LBL.Picture
        .MultiPage2.Pages(3).Picture = W_LBL.Picture
        .MultiPage2.Pages(4).Picture = W_LBL.Picture
        .MultiPage2.Pages(5).Picture = W_LBL.Picture
        .MultiPage2.Pages(6).Picture = W_LBL.Picture
        .MultiPage2.Pages(7).Picture = W_LBL.Picture
        .MultiPage2.Pages(8).Picture = W_LBL.Picture
        .MultiPage2.Pages(9).Picture = W_LBL.Picture
        .MultiPage3.Pages(0).Picture = W_LBL.Picture
        .MultiPage3.Pages(1).Picture = W_LBL.Picture
        .MultiPage3.Pages(2).Picture = W_LBL.Picture
        .MultiPage3.Pages(3).Picture = W_LBL.Picture
        .MultiPage3.Pages(4).Picture = W_LBL.Picture
        .MultiPage3.Pages(5).Picture = W_LBL.Picture
        .MultiPage4.Pages(0).Picture = W_LBL.Picture
        .MultiPage4.Pages(1).Picture = W_LBL.Picture
        .MultiPage4.Pages(2).Picture = W_LBL.Picture
        .MultiPage4.Pages(3).Picture = W_LBL.Picture
        .MultiPage4.Pages(4).Picture = W_LBL.Picture
        .MultiPage4.Pages(5).Picture = W_LBL.Picture
        .MultiPage4.Pages(6).Picture = W_LBL.Picture
        .MultiPage4.Pages(7).Picture = W_LBL.Picture
        Set W_LBL = Nothing
     End If
     
     If W_HIS > 30000 Then
        If W_BGIMG <> "" Then
           On Error Resume Next
           .MultiPage1.Pages("Page1").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page2").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page3").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page4").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page5").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page6").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page7").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page8").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page9").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page10").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page11").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page12").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page13").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page14").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page15").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page16").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page17").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page18").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page19").Picture = LoadPicture(W_BGIMG)
           .MultiPage1.Pages("Page20").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page1").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page2").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page3").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page4").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page5").Picture = LoadPicture(W_BGIMG)
           .MultiPage3.Pages("Page6").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page1").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page2").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page3").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page4").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page5").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page6").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page7").Picture = LoadPicture(W_BGIMG)
           .MultiPage4.Pages("Page8").Picture = LoadPicture(W_BGIMG)
           On Error GoTo 0
        End If
        
        'Find
        .Label1.ForeColor = W_FGCLR
        .CheckBox1.ForeColor = W_FGCLR
        .CheckBox2.ForeColor = W_FGCLR
        .CheckBox3.ForeColor = W_FGCLR
        .CheckBox7.ForeColor = W_FGCLR
        .CheckBox22.ForeColor = W_FGCLR
        .CheckBox208.ForeColor = W_FGCLR
        .CheckBox32.ForeColor = W_FGCLR
        .Label143.ForeColor = W_FGCLR
        .OptionButton14.ForeColor = W_FGCLR
        .OptionButton15.ForeColor = W_FGCLR
        .OptionButton16.ForeColor = W_FGCLR
     
        'Replace
        .Label8.ForeColor = W_FGCLR
        .Label2.ForeColor = W_FGCLR
        .CheckBox12.ForeColor = W_FGCLR
     
        'Shape
        .Label20.ForeColor = W_FGCLR
        .Label22.ForeColor = W_FGCLR
     
        'VBE
        .Label141.ForeColor = W_FGCLR
        .Label140.ForeColor = W_FGCLR
     
        'Fill
        .Label142.ForeColor = W_FGCLR
        .Label144.ForeColor = W_FGCLR
        .OptionButton22.ForeColor = W_FGCLR
        .OptionButton23.ForeColor = W_FGCLR
        .OptionButton24.ForeColor = W_FGCLR
        .OptionButton25.ForeColor = W_FGCLR
        .Label145.ForeColor = W_FGCLR
        .OptionButton26.ForeColor = W_FGCLR
        .OptionButton27.ForeColor = W_FGCLR
     
        'Sheet
        .Label62.ForeColor = W_FGCLR
        .Label63.ForeColor = W_FGCLR
        .Label314.ForeColor = W_FGCLR
        .Label315.ForeColor = W_FGCLR
        .Label316.ForeColor = W_FGCLR
        .CheckBox54.ForeColor = W_FGCLR
        .CheckBox55.ForeColor = W_FGCLR
        .Label146.ForeColor = W_FGCLR
        .OptionButton4.ForeColor = W_FGCLR
        .OptionButton5.ForeColor = W_FGCLR
        .OptionButton6.ForeColor = W_FGCLR
        .OptionButton7.ForeColor = W_FGCLR
        .OptionButton8.ForeColor = W_FGCLR
        .OptionButton9.ForeColor = W_FGCLR
        .OptionButton10.ForeColor = W_FGCLR
     
        'Rename
        .Label101.ForeColor = W_FGCLR
        .Label100.ForeColor = W_FGCLR
        .Label102.ForeColor = W_FGCLR
        .CheckBox59.ForeColor = W_FGCLR
 
        'Name
        .Label134.ForeColor = W_FGCLR
        .Label133.ForeColor = W_FGCLR
        .CheckBox84.ForeColor = W_FGCLR
        .Label147.ForeColor = W_FGCLR
        .OptionButton17.ForeColor = W_FGCLR
        .OptionButton18.ForeColor = W_FGCLR
        .OptionButton19.ForeColor = W_FGCLR
        .Label148.ForeColor = W_FGCLR
        .OptionButton20.ForeColor = W_FGCLR
        .OptionButton21.ForeColor = W_FGCLR
        
        'Split
        .Label103.ForeColor = W_FGCLR
        .CheckBox68.ForeColor = W_FGCLR
     
        'Extarct
        .Label13.ForeColor = W_FGCLR
        .Label14.ForeColor = W_FGCLR
        .Label15.ForeColor = W_FGCLR

        'Grep
        .Label16.ForeColor = W_FGCLR
        .Label17.ForeColor = W_FGCLR
        .CheckBox62.ForeColor = W_FGCLR
        .Label18.ForeColor = W_FGCLR
        .Label19.ForeColor = W_FGCLR
        .CheckBox16.ForeColor = W_FGCLR
        .CheckBox60.ForeColor = W_FGCLR
        .CheckBox75.ForeColor = W_FGCLR
        .CheckBox202.ForeColor = W_FGCLR
        .Label104.ForeColor = W_FGCLR
        .Label105.ForeColor = W_FGCLR

        'Grep Replace
        .Label25.ForeColor = W_FGCLR
        .Label29.ForeColor = W_FGCLR
        .Label26.ForeColor = W_FGCLR
        .CheckBox63.ForeColor = W_FGCLR
        .Label27.ForeColor = W_FGCLR
        .Label28.ForeColor = W_FGCLR
        .CheckBox27.ForeColor = W_FGCLR

        'Grep Shapes
        .Label39.ForeColor = W_FGCLR
        .Label40.ForeColor = W_FGCLR
        .Label36.ForeColor = W_FGCLR
        .CheckBox64.ForeColor = W_FGCLR
        .Label37.ForeColor = W_FGCLR
        .Label38.ForeColor = W_FGCLR
     
        'Diff
        .Label303.ForeColor = W_FGCLR
        .Label305.ForeColor = W_FGCLR
        .Label307.ForeColor = W_FGCLR
        .Label312.ForeColor = W_FGCLR
        .Label313.ForeColor = W_FGCLR
        .Label311.ForeColor = W_FGCLR
        .Label304.ForeColor = W_FGCLR
        .Label306.ForeColor = W_FGCLR
        .OptionButton28.ForeColor = W_FGCLR
        .OptionButton29.ForeColor = W_FGCLR
        .OptionButton30.ForeColor = W_FGCLR
        .OptionButton31.ForeColor = W_FGCLR
        .OptionButton32.ForeColor = W_FGCLR
        .CheckBox200.ForeColor = W_FGCLR
        .CheckBox229.ForeColor = W_FGCLR
        .CheckBox201.ForeColor = W_FGCLR
        
        'Check
        .Label30.ForeColor = W_FGCLR
        .Label31.ForeColor = W_FGCLR
        .Label34.ForeColor = W_FGCLR
        .Label35.ForeColor = W_FGCLR
        .Label32.ForeColor = W_FGCLR

        'Make
        .Label44.ForeColor = W_FGCLR
        .Label45.ForeColor = W_FGCLR
        .Label46.ForeColor = W_FGCLR
        .Label47.ForeColor = W_FGCLR
        .Label48.ForeColor = W_FGCLR
        .Label49.ForeColor = W_FGCLR
        .Label50.ForeColor = W_FGCLR
        .Label51.ForeColor = W_FGCLR
        .Label56.ForeColor = W_FGCLR
        .Label52.ForeColor = W_FGCLR
        .Label54.ForeColor = W_FGCLR
        .Label57.ForeColor = W_FGCLR
        .Label53.ForeColor = W_FGCLR
        .Label55.ForeColor = W_FGCLR

        'Share
        .CheckBox41.ForeColor = W_FGCLR
        .CheckBox42.ForeColor = W_FGCLR
     
        'Setting
        .CheckBox48.ForeColor = W_FGCLR
        .CheckBox78.ForeColor = W_FGCLR
        .CheckBox71.ForeColor = W_FGCLR
        .CheckBox209.ForeColor = W_FGCLR
        .CheckBox85.ForeColor = W_FGCLR
        .CheckBox50.ForeColor = W_FGCLR
        .CheckBox65.ForeColor = W_FGCLR
        .CheckBox49.ForeColor = W_FGCLR
        .CheckBox56.ForeColor = W_FGCLR
        .CheckBox43.ForeColor = W_FGCLR
        .Label43.ForeColor = W_FGCLR
        .CheckBox73.ForeColor = W_FGCLR
        .CheckBox69.ForeColor = W_FGCLR
     
        .Label149.ForeColor = W_FGCLR
        .OptionButton11.ForeColor = W_FGCLR
        .OptionButton12.ForeColor = W_FGCLR
        .OptionButton13.ForeColor = W_FGCLR
        .CheckBox34.ForeColor = W_FGCLR
        .CheckBox37.ForeColor = W_FGCLR
        .CheckBox72.ForeColor = W_FGCLR
        .CheckBox74.ForeColor = W_FGCLR
        .CheckBox92.ForeColor = W_FGCLR
     
        .CheckBox81.ForeColor = W_FGCLR
        .CheckBox86.ForeColor = W_FGCLR
     
        .CheckBox88.ForeColor = W_FGCLR
        .CheckBox33.ForeColor = W_FGCLR
        .CheckBox44.ForeColor = W_FGCLR
     
        .Label107.ForeColor = W_FGCLR
        .Label108.ForeColor = W_FGCLR
        .Label109.ForeColor = W_FGCLR
        .Label110.ForeColor = W_FGCLR
        .Label111.ForeColor = W_FGCLR
        .Label112.ForeColor = W_FGCLR
        .Label113.ForeColor = W_FGCLR
        .Label114.ForeColor = W_FGCLR
        .Label115.ForeColor = W_FGCLR
        .Label116.ForeColor = W_FGCLR
     
        .Label121.ForeColor = W_FGCLR
        .Label122.ForeColor = W_FGCLR
        .Label123.ForeColor = W_FGCLR
        .Label124.ForeColor = W_FGCLR
        .Label127.ForeColor = W_FGCLR
        .Label128.ForeColor = W_FGCLR
        .Label129.ForeColor = W_FGCLR
        .Label130.ForeColor = W_FGCLR
     
        'Version
        .Label3.ForeColor = W_FGCLR
        .Label4.ForeColor = W_FGCLR
        .Label6.ForeColor = W_FGCLR
     
        .CheckBox206.ForeColor = W_FGCLR
     
        'Decoration
        .Label287.ForeColor = W_FGCLR
        .Label288.ForeColor = W_FGCLR
        .CheckBox171.ForeColor = W_FGCLR
        .CheckBox172.ForeColor = W_FGCLR
        .CheckBox173.ForeColor = W_FGCLR
        .CheckBox174.ForeColor = W_FGCLR
        .CheckBox175.ForeColor = W_FGCLR
        .CheckBox176.ForeColor = W_FGCLR
        .CheckBox177.ForeColor = W_FGCLR
        .CheckBox178.ForeColor = W_FGCLR
        .CheckBox179.ForeColor = W_FGCLR
        .CheckBox180.ForeColor = W_FGCLR
        .CheckBox181.ForeColor = W_FGCLR
     
        'Around
        .CheckBox210.ForeColor = W_FGCLR
        .Label339.ForeColor = W_FGCLR
        .Label340.ForeColor = W_FGCLR
        .Label341.ForeColor = W_FGCLR
        .Label352.ForeColor = W_FGCLR
        .Frame1.ForeColor = W_FGCLR
        .CheckBox211.ForeColor = W_FGCLR
        .CheckBox212.ForeColor = W_FGCLR
        .CheckBox213.ForeColor = W_FGCLR
        .CheckBox214.ForeColor = W_FGCLR
        .CheckBox215.ForeColor = W_FGCLR
        .CheckBox216.ForeColor = W_FGCLR
        .CheckBox217.ForeColor = W_FGCLR
        .CheckBox218.ForeColor = W_FGCLR
        .CheckBox219.ForeColor = W_FGCLR
        .CheckBox220.ForeColor = W_FGCLR
        .CheckBox221.ForeColor = W_FGCLR
        .CheckBox222.ForeColor = W_FGCLR
        .CheckBox223.ForeColor = W_FGCLR
        .CheckBox224.ForeColor = W_FGCLR
        .CheckBox225.ForeColor = W_FGCLR
        .CheckBox226.ForeColor = W_FGCLR
        .CheckBox227.ForeColor = W_FGCLR
        .CheckBox228.ForeColor = W_FGCLR
        
        '+ Cond
        .CheckBox186.ForeColor = W_FGCLR
     
        'Shape
        .Label289.ForeColor = W_FGCLR
        .OptionButton1.ForeColor = W_FGCLR
        .OptionButton2.ForeColor = W_FGCLR
        .OptionButton3.ForeColor = W_FGCLR
        .CheckBox189.ForeColor = W_FGCLR
        .CheckBox188.ForeColor = W_FGCLR
     
        'Grep
        .Label294.ForeColor = W_FGCLR
        .CheckBox190.ForeColor = W_FGCLR
        .CheckBox194.ForeColor = W_FGCLR
        .CheckBox195.ForeColor = W_FGCLR
        .CheckBox203.ForeColor = W_FGCLR
        .CheckBox207.ForeColor = W_FGCLR
        
        '+ Cmd
        .Label295.ForeColor = W_FGCLR
        .Label296.ForeColor = W_FGCLR
        .Label297.ForeColor = W_FGCLR
     End If
     
     .Label7.BackColor = W_BGCLR
     .Label353.BackColor = W_BGCLR
     .Label9.BackColor = W_BGCLR
     .Label10.BackColor = W_BGCLR
     .Label11.BackColor = W_BGCLR
     .Label12.BackColor = W_BGCLR
     .Label13.BackColor = W_BGCLR
     .Label14.BackColor = W_BGCLR
     .Label15.BackColor = W_BGCLR
     .Label33.BackColor = W_BGCLR
     .Label41.BackColor = W_BGCLR
     .Label42.BackColor = W_BGCLR
     .Label60.BackColor = W_BGCLR
     .Label61.BackColor = W_BGCLR
     .Label64.BackColor = W_BGCLR
     .Label65.BackColor = W_BGCLR
     .Label66.BackColor = W_BGCLR
     .Label67.BackColor = W_BGCLR
     .Label68.BackColor = W_BGCLR
     .Label69.BackColor = W_BGCLR
     .Label70.BackColor = W_BGCLR
     .Label71.BackColor = W_BGCLR
     .Label72.BackColor = W_BGCLR
     .Label73.BackColor = W_BGCLR
     .Label74.BackColor = W_BGCLR
     .Label75.BackColor = W_BGCLR
     .Label76.BackColor = W_BGCLR
     .Label77.BackColor = W_BGCLR
     .Label78.BackColor = W_BGCLR
     .Label79.BackColor = W_BGCLR
     .Label80.BackColor = W_BGCLR
     .Label81.BackColor = W_BGCLR
     .Label82.BackColor = W_BGCLR
     .Label83.BackColor = W_BGCLR
     .Label84.BackColor = W_BGCLR
     .Label85.BackColor = W_BGCLR
     .Label86.BackColor = W_BGCLR
     .Label87.BackColor = W_BGCLR
     .Label88.BackColor = W_BGCLR
     .Label89.BackColor = W_BGCLR
     .Label90.BackColor = W_BGCLR
     .Label91.BackColor = W_BGCLR
     .Label92.BackColor = W_BGCLR
     .Label93.BackColor = W_BGCLR
     .Label94.BackColor = W_BGCLR
     .Label95.BackColor = W_BGCLR
     .Label96.BackColor = W_BGCLR
     .Label97.BackColor = W_BGCLR
     .Label98.BackColor = W_BGCLR
     .Label99.BackColor = W_BGCLR
     .Label115.BackColor = W_BGCLR
     .Label116.BackColor = W_BGCLR
     .Label119.BackColor = W_BGCLR
     .Label120.BackColor = W_BGCLR
     .Label138.BackColor = W_BGCLR
     .Label139.BackColor = W_BGCLR
     .Label150.BackColor = W_BGCLR
  End With

End Sub

Sub UF_SHOW0()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  Dim W_TPS As Long

  
  W_TPS = W_TP1
  If UserForm1.CheckBox43.Value = True Then
     W_TP1 = 200
  Else
     W_TP1 = 255
  End If

  If W_TP1 <> W_TPS Then
     hwnd = FindWindow(vbNullString, UserForm1.Caption)
#If Win64 Then
     Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
     Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
     On Error Resume Next
     Call SetLayeredWindowAttributes(hwnd, 0, W_TP1, LWA_ALPHA)
     On Error GoTo 0
  End If

  W_TPS = W_TP11
  W_TP11 = W_TP0
  
  If W_TP11 <> W_TPS Then
     hwnd = FindWindow(vbNullString, UserForm11.Caption)
#If Win64 Then
     Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
     Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
     On Error Resume Next
     Call SetLayeredWindowAttributes(hwnd, 0, W_TP11, LWA_ALPHA)
     On Error GoTo 0
  End If

End Sub

Sub REGISTER()

  Dim W_ADSC As Variant

#If Win64 Then
  Application.ScreenUpdating = False
  ThisWorkbook.IsAddin = False
  With ThisWorkbook.Worksheets(1)
     If SW_ENGLISH = True Then
        W_ADSC = Array("(Object_String) " & .Cells(13, 7).Value, "(Find_String) " & .Cells(13, 8).Value)
        Application.MacroOptions Macro:=.Cells(13, 1).Value, _
                                 Description:=.Cells(13, 6).Value, _
                                 Category:=.Cells(13, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Object_String) " & .Cells(14, 7).Value, "(Find_String) " & .Cells(14, 8).Value, "(Index) " & .Cells(14, 9).Value)
        Application.MacroOptions Macro:=.Cells(14, 1).Value, _
                                 Description:=.Cells(14, 6).Value, _
                                 Category:=.Cells(14, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Object_String) " & .Cells(15, 7).Value, "(Find_String) " & .Cells(15, 8).Value, "(Submatch) " & .Cells(15, 9).Value, "(Index) " & .Cells(15, 10).Value)
        Application.MacroOptions Macro:=.Cells(15, 1).Value, _
                                 Description:=.Cells(15, 6).Value, _
                                 Category:=.Cells(15, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Object_String) " & .Cells(16, 7).Value, "(Find_String) " & .Cells(16, 8).Value)
        Application.MacroOptions Macro:=.Cells(16, 1).Value, _
                                 Description:=.Cells(16, 6).Value, _
                                 Category:=.Cells(16, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Object_String) " & .Cells(17, 7).Value, "(Find_String) " & .Cells(17, 8).Value, "(Replace_String) " & .Cells(17, 9).Value)
        Application.MacroOptions Macro:=.Cells(17, 1).Value, _
                                 Description:=.Cells(17, 6).Value, _
                                 Category:=.Cells(17, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Object_String) " & .Cells(18, 7).Value, "(Split_String) " & .Cells(18, 8).Value, "(Index) " & .Cells(18, 9).Value)
        Application.MacroOptions Macro:=.Cells(18, 1).Value, _
                                 Description:=.Cells(18, 6).Value, _
                                 Category:=.Cells(18, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Cell_Range) " & .Cells(19, 7).Value, "(Criteria) " & .Cells(19, 8).Value)
        Application.MacroOptions Macro:=.Cells(19, 1).Value, _
                                 Description:=.Cells(19, 6).Value, _
                                 Category:=.Cells(19, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Criteria) " & .Cells(20, 7).Value, "(Cell_Range) " & .Cells(20, 8).Value, "(Column_Index) " & .Cells(20, 9).Value)
        Application.MacroOptions Macro:=.Cells(20, 1).Value, _
                                 Description:=.Cells(20, 6).Value, _
                                 Category:=.Cells(20, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Criteria) " & .Cells(21, 7).Value, "(Cell_Range) " & .Cells(21, 8).Value, "(Row_Index) " & .Cells(21, 9).Value)
        Application.MacroOptions Macro:=.Cells(21, 1).Value, _
                                 Description:=.Cells(21, 6).Value, _
                                 Category:=.Cells(21, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Criteria) " & .Cells(22, 7).Value, "(Cell_Range) " & .Cells(22, 8).Value)
        Application.MacroOptions Macro:=.Cells(22, 1).Value, _
                                 Description:=.Cells(22, 6).Value, _
                                 Category:=.Cells(22, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array("(Criteria) " & .Cells(23, 7).Value)
        Application.MacroOptions Macro:=.Cells(23, 1).Value, _
                                 Description:=.Cells(23, 6).Value, _
                                 Category:=.Cells(23, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
     Else
        W_ADSC = Array(.Cells(2, 7).Value, .Cells(2, 8).Value)
        Application.MacroOptions Macro:=.Cells(2, 1).Value, _
                                 Description:=.Cells(2, 6).Value, _
                                 Category:=.Cells(2, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(3, 7).Value, .Cells(3, 8).Value, .Cells(3, 9).Value)
        Application.MacroOptions Macro:=.Cells(3, 1).Value, _
                                 Description:=.Cells(3, 6).Value, _
                                 Category:=.Cells(3, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(4, 7).Value, .Cells(4, 8).Value, .Cells(4, 9).Value, .Cells(4, 10).Value)
        Application.MacroOptions Macro:=.Cells(4, 1).Value, _
                                 Description:=.Cells(4, 6).Value, _
                                 Category:=.Cells(4, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(5, 7).Value, .Cells(5, 8).Value)
        Application.MacroOptions Macro:=.Cells(5, 1).Value, _
                                 Description:=.Cells(5, 6).Value, _
                                 Category:=.Cells(5, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(6, 7).Value, .Cells(6, 8).Value, .Cells(6, 9).Value)
        Application.MacroOptions Macro:=.Cells(6, 1).Value, _
                                 Description:=.Cells(6, 6).Value, _
                                 Category:=.Cells(6, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(7, 7).Value, .Cells(7, 8).Value, .Cells(7, 9).Value)
        Application.MacroOptions Macro:=.Cells(7, 1).Value, _
                                 Description:=.Cells(7, 6).Value, _
                                 Category:=.Cells(7, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(8, 7).Value, .Cells(8, 8).Value)
        Application.MacroOptions Macro:=.Cells(8, 1).Value, _
                                 Description:=.Cells(8, 6).Value, _
                                 Category:=.Cells(8, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(9, 7).Value, .Cells(9, 8).Value, .Cells(9, 9).Value)
        Application.MacroOptions Macro:=.Cells(9, 1).Value, _
                                 Description:=.Cells(9, 6).Value, _
                                 Category:=.Cells(9, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(10, 7).Value, .Cells(10, 8).Value, .Cells(10, 9).Value)
        Application.MacroOptions Macro:=.Cells(10, 1).Value, _
                                 Description:=.Cells(10, 6).Value, _
                                 Category:=.Cells(10, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(11, 7).Value, .Cells(11, 8).Value)
        Application.MacroOptions Macro:=.Cells(11, 1).Value, _
                                 Description:=.Cells(11, 6).Value, _
                                 Category:=.Cells(11, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
        W_ADSC = Array(.Cells(12, 7).Value)
        Application.MacroOptions Macro:=.Cells(12, 1).Value, _
                                 Description:=.Cells(12, 6).Value, _
                                 Category:=.Cells(12, 4).Value, _
                                 ArgumentDescriptions:=W_ADSC
     End If
  End With
  ThisWorkbook.IsAddin = True
  ThisWorkbook.Saved = True
  Application.ScreenUpdating = True
#Else
  Application.RegisterXLL ThisWorkbook.path & "\FunCustomize.dll"
  If SW_ENGLISH = True Then
     Application.Run [FunCustomize], ThisWorkbook.Name, shFunctions.Range("A13:Z23")
  Else
     Run [FunCustomize], ThisWorkbook.Name, shFunctions.Range("A2:Z12")
  End If
#End If

  Call NRREG

  SW_FCREG = True

End Sub

Sub UNREGISTER2()

#If Win64 Then
#Else
  On Error Resume Next
  If Run([FuncDelete], shFunctions.Range("A2:Z12")) = -1 Then
     ExecuteExcel4Macro "UNREGISTER(""" & ThisWorkbook.path & "\FunCustomize.dll" & """)"
  End If
  On Error GoTo 0
#End If

  SW_FCREG = False

End Sub

Sub RMV_BAR()

  Dim C As Object

  For Each C In CommandBars
     If C.Name = "Excelre" Then
        C.Delete
     End If
  Next C

End Sub

Sub MK_BAR()

  Dim BAR As CommandBar

  Set BAR = CommandBars.Add
  With BAR
     .Name = "Excelre"
     .Position = msoBarTop
     .Visible = True
     With .Controls.Add(Type:=msoControlComboBox)
        If SW_ENGLISH = True Then
           .Caption = "Find what"
        Else
           .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
        End If
        Call SET_REFCOMBO
     End With
     With .Controls.Add
        If SW_ENGLISH = True Then
           .Caption = "Find prev"
        Else
           .Caption = "|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "BAR_FINDP"
        .FaceId = 132
     End With
     With .Controls.Add
        If SW_ENGLISH = True Then
           .Caption = "Find next"
        Else
           .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "BAR_FINDN"
        .FaceId = 133
     End With
     With .Controls.Add
        If SW_ENGLISH = True Then
           .Caption = "Start pos"
        Else
           .Caption = "|fffd|J|fffd|n|fffd||292|u"
        End If
        .OnAction = "BAR_ST_POS"
        .FaceId = 134
     End With
     With .Controls.Add(Type:=msoControlButton)
        .BeginGroup = True
        If SW_ENGLISH = True Then
           .Caption = "Show dialog"
        Else
           .Caption = "|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|\|fffd||fffd|"
        End If
        .OnAction = "BAR_FORM"
        .FaceId = 25
     End With
     With .Controls.Add
        If SW_ENGLISH = True Then
           .Caption = "Help"
        Else
           .Caption = "|fffd|w|fffd||fffd||fffd|v"
        End If
        .OnAction = "BAR_HELP"
        .FaceId = 49
     End With
  End With

End Sub

Sub BAR_FINDP()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = CommandBars("Excelre").Controls(1).text
  
  W_EVAR = ""
  W_CLKBTN = "BAR_FINDP"
  Call UserForm1.FINDPN(False, 0)
  CommandBars("Excelre").Controls(1).text = UserForm1.ComboBox1.Value
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub BAR_FINDN()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = CommandBars("Excelre").Controls(1).text
  
  W_EVAR = ""
  W_CLKBTN = "BAR_FINDN"
  Call UserForm1.FINDPN(True, 0)
  CommandBars("Excelre").Controls(1).text = UserForm1.ComboBox1.Value
  
  W_CLKBTN = ""
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub BAR_FORM()

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "BAR_FORM"
  Call SHOWF_RTN
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub BAR_HELP()

  Dim SW_SHOW As Boolean
  Dim I As Long

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "BAR_HELP"
  
  SW_SHOW = False
  If UserForms.count > 0 Then
     For I = 0 To UserForms.count - 1
        If UserForms(I).Name = UserForm1.Name Then
           SW_SHOW = UserForms(I).Visible
           Exit For
        End If
     Next I
  End If
  
  If SW_SHOW = False Then
     UserForm1.Hide
  End If
  Call HELP_RTN
  If SW_SHOW = False Then
     Unload UserForm1
  End If
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub BAR_ST_POS()
  
  Dim AR_AC As Variant
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "BAR_ST_POS"
  
  If W_ACS = "" Then
     Exit Sub
  End If
  
  If Val(Application.Version) >= 9 Then
     AR_AC = SPLIT2000(W_ACS, vbTab)
  Else
     AR_AC = SPLIT97(W_ACS, vbTab)
  End If

  Application.ScreenUpdating = False
  On Error Resume Next
  Workbooks(AR_AC(0)).Activate
  Workbooks(AR_AC(0)).Sheets(AR_AC(1)).Activate
  Workbooks(AR_AC(0)).Sheets(AR_AC(1)).Cells(CLng(AR_AC(2)), CLng(AR_AC(3))).Activate
  On Error GoTo LABEL_REP
  Application.ScreenUpdating = True
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_BGF()

  Dim W_CAN As Long


  On Error GoTo LABEL_REP
  
L_BGF_S:
  
  Call TM_BGF_STR
  
  W_CAN = UserForm1.BGF_CANCHK
  Do While W_CAN = 0
     W_CAN = UserForm1.BGF_CANCHK
     DoEvents
  Loop
  
  Call TM_BGF_END
  
  Do While W_CAN = 2
     W_CAN = UserForm1.BGF_CANCHK
     DoEvents
  Loop
  
  If W_CAN = 0 Then
     GoTo L_BGF_S
  End If
  
  If Dir(ThisWorkbook.path & "\bgf*.vbs") <> "" Then
     On Error Resume Next
     Kill (ThisWorkbook.path & "\bgf*.vbs")
     On Error GoTo 0
  End If
  
  Application.Quit
  
  Exit Sub

LABEL_REP:
'''  Call REPORT_RTN

End Sub

Sub HIDE_IDX()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Call UserForm1.IDX_UPD(SW_HISHP)
  SW_HISHP = Not SW_HISHP
  
  Exit Sub

LABEL_REP:
'''  Call REPORT_RTN

End Sub

Sub HIDE_MIDX()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton279_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_MIDX(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean

  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  Call UserForm1.CommandButton279_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\midx_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\midx.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\midx_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\midx_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_SIDX()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton280_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_SIDX(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean

  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  Call UserForm1.CommandButton280_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\sidx_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\sidx.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\sidx_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\sidx_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP1()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton20_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP2()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton31_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP3()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton39_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP4()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton42_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP5()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton272_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HIDE_GREP6()

  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  Application.Visible = False
  Call UserForm1.CommandButton274_Click
  Application.Visible = True
  Unload UserForm1
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP1(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean

  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  Call UserForm1.CommandButton20_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grep5_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grep5.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grep5_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grep5_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP2(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean
  
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  
  Call UserForm1.CommandButton31_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grep6_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grep6.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grep6_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grep6_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP3(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean
  
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  
  Call UserForm1.CommandButton39_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grep7_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grep7.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grep7_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grep7_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP4(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean
  
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  
  Call UserForm1.CommandButton42_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grep8_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grep8.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grep8_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grep8_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP5(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean
  
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  
  Call UserForm1.CommandButton272_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grep9_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grep9.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grep9_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grep9_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub HS_GREP6(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean
  
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  
  W_PNO = PNO
  Set XL2ND = GET_2NDXL
  
  Call UserForm1.CommandButton274_Click
  Unload UserForm1
  
  Set XL2ND = Nothing
  DoEvents
  
  W_GREP = ThisWorkbook.path & "\grepA_" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\grepA.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\grepA_" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\grepA_" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           On Error Resume Next
           Kill (W_GREPP)
           On Error GoTo LABEL_REP
        End If
     Next P
     On Error Resume Next
     Kill (W_GREP0)
     On Error GoTo LABEL_REP
  End If
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub PWC(ByVal PNO As Long)

  Dim W_GREP As String
  Dim W_GREP0 As String
  Dim W_GREPP As String
  Dim P As Long
  Dim SW_LAST As Boolean

  Dim W_CS0 As String
  Dim W_CS1 As String
  Dim W_CS2 As String
  Dim W_CS3 As String
  Dim W_CS4 As String
  Dim W_CS5 As String
  Dim W_CSS As String

  Dim AR_N() As Long
  Dim N As Long
  Dim W_PASS As String
  
  Dim DTB As Date
  Dim TMB As Date
  Dim DTA As Date
  Dim TMA As Date
  
  Dim W_MSG As String
  
  Dim W_STR As String
  Dim AR_WK As Variant
  Dim I As Long
  Dim WB As Workbook
  
  
  DTB = Date
  TMB = time
  
  Application.ScreenUpdating = False
  Set WB = Workbooks.Add
  Application.Calculation = xlCalculationManual
  Application.EnableEvents = False
  
  On Error GoTo LABEL_REP
  
  W_PNO = PNO
  
  If SW_PWCLN = True Then
     W_CS0 = "0123456789"
     W_CS1 = "01"
     W_CS2 = "23"
     W_CS3 = "45"
     W_CS4 = "67"
     W_CS5 = "89"
  Else
     W_CS0 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!" & Chr$(34) & "#$%&'()=~|-^\`{@[+*};:]<>?_,./ "
     W_CS1 = "abcdefghijklmnopqrs"
     W_CS2 = "ABCDEFGHIJKLMNOPQRS"
     W_CS3 = "1234567890!" & Chr$(34) & "#$%&'()"
     W_CS4 = "=~|-^\`{@[+*};:]<>?"
     W_CS5 = "tuvwxyzTUVWXYZ?_,./ "
  End If
  
  Select Case PNO
  Case 1
     W_CSS = W_CS1
  Case 2
     W_CSS = W_CS2
  Case 3
     W_CSS = W_CS3
  Case 4
     W_CSS = W_CS4
  Case 5
     W_CSS = W_CS5
  End Select
  
  Application.DisplayAlerts = False
  
  If SW_PWCRS = True Then
     If Dir(ThisWorkbook.path & "\pwcC" & PNO & ".dat") <> "" Then
        Open ThisWorkbook.path & "\pwcC" & PNO & ".dat" For Input As #1
        Line Input #1, W_STR
        Line Input #1, W_STR
        Line Input #1, W_STR
        Close #1
        AR_WK = Split(W_STR, vbTab)
        ReDim AR_N(UBound(AR_WK) + 1)
        For I = 0 To UBound(AR_WK)
           AR_N(I + 1) = CLng(AR_WK(I))
        Next I
     End If
  Else
     ReDim AR_N(1)
     AR_N(1) = 0
  End If
  
  Do
     If Dir(ThisWorkbook.path & "\pwcC.vbs") <> "" Then
        Open ThisWorkbook.path & "\pwcC" & PNO & ".dat" For Output As #1
        W_STR = W_PWCTF
        Print #1, W_STR
        W_STR = SW_PWCLN
        Print #1, W_STR
        W_STR = CStr(AR_N(1))
        For I = 2 To UBound(AR_N)
           W_STR = W_STR & vbTab & CStr(AR_N(I))
        Next I
        Print #1, W_STR
        Close #1
        
        Exit Do
     End If
     
     If Dir(ThisWorkbook.path & "\pwcE.vbs") <> "" Then
        Exit Do
     End If
     
     AR_N(UBound(AR_N)) = AR_N(UBound(AR_N)) + 1
     For N = UBound(AR_N) To 2 Step -1
        If AR_N(N) > Len(W_CS0) Then
           AR_N(N - 1) = AR_N(N - 1) + 1
           AR_N(N) = 1
        End If
     Next N
     If AR_N(1) > Len(W_CSS) Then
        ReDim AR_N(UBound(AR_N) + 1)
        AR_N(1) = 1
        For N = 2 To UBound(AR_N)
           AR_N(N) = 1
        Next N
     End If
  
     W_PASS = Mid$(W_CSS, AR_N(1), 1)
     For N = 2 To UBound(AR_N)
        W_PASS = W_PASS & Mid$(W_CS0, AR_N(N), 1)
     Next N
       
     On Error GoTo LABEL_ERR
     Workbooks.Open Filename:=W_PWCTF, UpdateLinks:=0, Password:=W_PASS, ReadOnly:=True

     If SW_PWCRS = True Then
        For P = 1 To W_MAXP
           If Dir(ThisWorkbook.path & "\pwcC" & P & ".dat") <> "" Then
              On Error Resume Next
              Kill ThisWorkbook.path & "\pwcC" & P & ".dat"
              On Error GoTo 0
           End If
        Next P
     End If
     
     Open ThisWorkbook.path & "\pwcE.vbs" For Output As #1
     Close #1
  
     DTA = Date
     TMA = time
     
     W_MSG = "Start : " & Format(DTB, "yyyy/mm/dd") & " " & Format(TMB, "hh:mm:ss") & vbCrLf & _
             "End : " & Format(DTA, "yyyy/mm/dd") & " " & Format(TMA, "hh:mm:ss") & vbCrLf & _
             "Pass : " & W_PASS
     
     Application.Visible = True
     Application.ScreenUpdating = True
     AppActivate Application.Caption
  
     MsgBox W_MSG
  
L_NEXT:
     On Error GoTo 0
  Loop
  
L_END:

  W_GREP = ThisWorkbook.path & "\pwc" & PNO & "E.vbs"
  Open W_GREP For Output As #1
  Close #1
  
  W_GREP0 = ThisWorkbook.path & "\pwcE.vbs"
  
  SW_LAST = True
  For P = 1 To W_MAXP
     W_GREPP = ThisWorkbook.path & "\pwc" & P & "E.vbs"
     If Dir(W_GREPP) = "" Then
        SW_LAST = False
        Exit For
     End If
  Next P
  
  If SW_LAST = True Then
     For P = 1 To W_MAXP
        W_GREPP = ThisWorkbook.path & "\pwc" & P & "E.vbs"
        If Dir(W_GREPP) <> "" Then
           Kill (W_GREPP)
        End If
     Next P
     If Dir(ThisWorkbook.path & "\pwcC.vbs") <> "" Then
        On Error Resume Next
        Kill ThisWorkbook.path & "\pwcC.vbs"
        On Error GoTo 0
     Else
        Kill (W_GREP0)
     End If
     W_GREP0 = ThisWorkbook.path & "\pwc.vbs"
     Kill (W_GREP0)
  End If
  
  WB.Close False
  Set WB = Nothing
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  Exit Sub

LABEL_ERR:
  Err.Clear
  Resume L_NEXT

LABEL_REP:
  Call REPORT_RTN
  Err.Clear
  Resume L_END

End Sub

Sub HELP_RTN()

  Dim W_README As String
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  'readme|fffd|`|fffd|F|fffd|b|fffd|N
  If UserForm1.CheckBox49.Value = True Then
     W_README = ThisWorkbook.path & "\readme_e.txt"
  Else
     W_README = ThisWorkbook.path & "\readme.txt"
  End If
  If Dir(W_README) = "" Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("""readme_e.txt"" doesn't exist.", vbExclamation)
     Else
        W_RET = MsgBox("readme.txt|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     W_RET = ShellExecute(0, "open", W_README, vbNull, vbNull, 1)
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Sub RECONVERT(W_CONTROL As Control)

#If Win64 Then
  Dim hwnd As LongPtr
  Dim hIMC As LongPtr
#Else
  Dim hwnd As Long
  Dim hIMC As Long
#End If

  Dim W_BYTE() As Byte
  Dim W_BKSTR As String
  Dim W_STR As String
  Dim W_LSTR As String
  Dim W_RSTR As String
  Dim RE As Object
  Dim W_SS As Long
  Dim W_SL As Long

  If W_CONTROL.Value = "" Then
     Exit Sub
  End If
  
  hwnd = GetForegroundWindow()
  hwnd = GetTopWindow(hwnd)
  hwnd = GetTopWindow(hwnd)
  
  hIMC = ImmGetContext(hwnd)
  
  If W_CONTROL.SelLength = 0 Then
     W_CONTROL.SelStart = 0
     W_CONTROL.SelLength = Len(W_CONTROL.Value)
  End If
  W_SS = W_CONTROL.SelStart
  W_SL = W_CONTROL.SelLength
  W_STR = Mid$(W_CONTROL.Value, W_CONTROL.SelStart + 1, W_CONTROL.SelLength)
     
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "^[-:;,=@\[\\\]^*+<=>?`{|}~_A-Za-z0-9]+$"
     .IgnoreCase = True
     .Global = True
  End With
    
  If RE.Test(W_STR) = True Then
     UserForm1.TextBox24.Value = ""
     UserForm1.TextBox24.Enabled = True
     UserForm1.TextBox24.SetFocus
     
     W_BKSTR = W_CONTROL.Value
     W_RET = ImmSetOpenStatus(hIMC, 1)
          
     Call REINPUT(W_STR)
          
     W_STR = UserForm1.TextBox24.Value
     
     UserForm1.TextBox24.Value = ""
     UserForm1.TextBox24.Enabled = False
     UserForm1.CommandButton9.SetFocus
     W_LSTR = Left(W_CONTROL.Value, W_SS)
     W_RSTR = Right(W_CONTROL.Value, Len(W_CONTROL.Value) - (W_SS + W_SL))
     W_CONTROL.Value = W_LSTR & W_STR & W_RSTR
     W_CONTROL.SetFocus
     W_CONTROL.SelStart = W_SS
     W_CONTROL.SelLength = W_SL
     If RE.Test(W_STR) = False Then
        Call RECONVERT(W_CONTROL)
     End If
  End If
  
  Set RE = Nothing
  
  W_BYTE = StrConv(W_STR, vbFromUnicode)
  
  W_RET = ImmSetCompositionString(hIMC, SCS_SETSTR, W_BYTE(0), UBound(W_BYTE) + 1, ByVal 0, 0)
    
  W_RET = ImmNotifyIME(hIMC, NI_COMPOSITIONSTR, CPS_CONVERT, 0)
    
  W_RET = ImmNotifyIME(hIMC, NI_OPENCANDIDATE, 0, 0)

  W_RET = ImmReleaseContext(hwnd, hIMC)
     
End Sub

Private Sub REINPUT(ByVal W_INSTR As String)

  Dim I As Long
  Dim VK As Long
  Dim SW_SHIFT As Boolean
  
  For I = 1 To Len(W_INSTR)
     VK = 0
     SW_SHIFT = False
     Select Case Mid$(W_INSTR, I, 1)
     Case "A", "a"
        VK = VK_A
     Case "B", "b"
        VK = VK_B
     Case "C", "c"
        VK = VK_C
     Case "D", "d"
        VK = VK_D
     Case "E", "e"
        VK = VK_E
     Case "F", "f"
        VK = VK_F
     Case "G", "g"
        VK = VK_G
     Case "H", "h"
        VK = VK_H
     Case "I", "i"
        VK = VK_I
     Case "J", "j"
        VK = VK_J
     Case "K", "k"
        VK = VK_K
     Case "L", "l"
        VK = VK_L
     Case "M", "m"
        VK = VK_M
     Case "N", "n"
        VK = VK_N
     Case "O", "o"
        VK = VK_O
     Case "P", "p"
        VK = VK_P
     Case "R", "q"
        VK = VK_R
     Case "S", "s"
        VK = VK_S
     Case "T", "t"
        VK = VK_T
     Case "U", "u"
        VK = VK_U
     Case "V", "v"
        VK = VK_V
     Case "W", "w"
        VK = VK_W
     Case "X", "x"
        VK = VK_X
     Case "Y", "y"
        VK = VK_Y
     Case "Z", "z"
        VK = VK_Z
     Case "0", "o"
        VK = VK_0
     Case "1"
        VK = VK_1
     Case "2"
        VK = VK_2
     Case "3"
        VK = VK_3
     Case "4"
        VK = VK_4
     Case "5"
        VK = VK_5
     Case "6"
        VK = VK_6
     Case "7"
        VK = VK_7
     Case "8"
        VK = VK_8
     Case "9"
        VK = VK_9
     Case ":"
        VK = VK_OEM_1
     Case ";"
        VK = VK_OEM_PLUS
     Case ","
        VK = VK_OEM_COMMA
     Case "-"
        VK = VK_OEM_MINUS
     Case "."
        VK = VK_OEM_PERIOD
     Case "/"
        VK = VK_OEM_2
     Case "@"
        VK = VK_OEM_3
     Case "["
        VK = VK_OEM_4
     Case "\"
        VK = VK_OEM_5
     Case "]"
        VK = VK_OEM_6
     Case "^"
        VK = VK_OEM_7
     Case "*"
        SW_SHIFT = True
        VK = VK_OEM_1
     Case "+"
        SW_SHIFT = True
        VK = VK_OEM_PLUS
     Case "<"
        SW_SHIFT = True
        VK = VK_OEM_COMMA
     Case "="
        SW_SHIFT = True
        VK = VK_OEM_MINUS
     Case ">"
        SW_SHIFT = True
        VK = VK_OEM_PERIOD
     Case "?"
        SW_SHIFT = True
        VK = VK_OEM_2
     Case "`"
        SW_SHIFT = True
        VK = VK_OEM_3
     Case "{"
        SW_SHIFT = True
        VK = VK_OEM_4
     Case "|"
        SW_SHIFT = True
        VK = VK_OEM_5
     Case "}"
        SW_SHIFT = True
        VK = VK_OEM_6
     Case "~"
        SW_SHIFT = True
        VK = VK_OEM_7
     Case "_"
        SW_SHIFT = True
        VK = VK_OEM_102
     End Select
       
     If SW_SHIFT = True Then
        Call KeybdEvent(VK_SHIFT, 0, 0, 0)
        DoEvents
     End If
     Call KeybdEvent(VK, 0, 0, 0)
     DoEvents
     Call KeybdEvent(VK, 0, KEYEVENTF_KEYUP, 0)
     DoEvents
     If SW_SHIFT = True Then
        Call KeybdEvent(VK_SHIFT, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
     End If
  Next I

End Sub

Sub SET_POS(ByVal SW_NEXT As Boolean)
'|fffd||292|u|fffd||fffd||fffd||fffd|

  Dim L As Double
  Dim T As Double
  Dim AL As Double
  Dim AR As Double
  Dim AT As Double
  Dim AB As Double
 
#If Win64 Then
  Dim hwnd As LongPtr
  Dim hWnd2 As LongPtr
#Else
  Dim hwnd As Long
  Dim hWnd2 As Long
#End If
  
  Dim recF As RECT
  Dim FL As Double
  Dim FR As Double
  Dim FT As Double
  Dim FB As Double
  
  Dim recD As RECT
  Dim DL As Double
  Dim DR As Double
  Dim DT As Double
  Dim DB As Double
    
  Dim MoP As POINTAPI
  
  Dim AC As Range
  
  L = ActiveWindow.PointsToScreenPixelsX(0) * (72 / 96)
  T = ActiveWindow.PointsToScreenPixelsY(0) * (72 / 96)
  Set AC = ActiveCell
  AL = L + ActiveCell.Left * (ActiveWindow.Zoom / 100)
  AR = AL + ActiveCell.Width * (ActiveWindow.Zoom / 100)
  AT = T + ActiveCell.Top * (ActiveWindow.Zoom / 100)
  AB = AT + ActiveCell.Height * (ActiveWindow.Zoom / 100)
  AC.Activate
  Set AC = Nothing
 
  hwnd = GetForegroundWindow()
  Call GetWindowRect(hwnd, recF)
  FL = recF.Left * (72 / 96)
  FR = recF.Right * (72 / 96)
  FT = recF.Top * (72 / 96)
  FB = recF.Bottom * (72 / 96)
    
  hWnd2 = GetDesktopWindow
  Call GetWindowRect(hWnd2, recD)
  DL = recD.Left * (72 / 96)
  DR = recD.Right * (72 / 96)
  DT = recD.Top * (72 / 96)
  DB = recD.Bottom * (72 / 96)

  If SW_NEXT = True Then
     If (FL <= AL And _
        FR >= AR And _
        FT <= AT And _
        FB >= AB) Or _
        (FL <= AL And _
        FR >= AR And _
        FT <= AB And _
        FB >= AB) Then
        If AB + UserForm1.Height <= DB Then
           UserForm1.Top = AB
        ElseIf AT - UserForm1.Height >= DT Then
           UserForm1.Top = AT - UserForm1.Height
        End If
     End If
  Else
     If (FL <= AL And _
        FR >= AR And _
        FT <= AT And _
        FB >= AB) Or _
        (FL <= AL And _
        FR >= AR And _
        FT <= AB And _
        FB >= AB) Then
        If AT - UserForm1.Height >= DT Then
           UserForm1.Top = AT - UserForm1.Height
        ElseIf AB + UserForm1.Height <= DB Then
           UserForm1.Top = AB
        End If
     End If
  End If

  If UserForm1.Top <> FT Then
     GetCursorPos MoP
     MoP.Y = MoP.Y + (UserForm1.Top - FT) * (96 / 72)
     SetCursorPos MoP.X, MoP.Y
  End If

End Sub

Sub SET_POS2(ByVal SW_NEXT As Boolean)
'|fffd||292|u|fffd||fffd||fffd||fffd|

  Dim L As Double
  Dim T As Double
  Dim AL As Double
  Dim AR As Double
  Dim AT As Double
  Dim AB As Double
 
#If Win64 Then
  Dim hwnd As LongPtr
  Dim hWnd2 As LongPtr
#Else
  Dim hwnd As Long
  Dim hWnd2 As Long
#End If
  
  Dim recF As RECT
  Dim FL As Double
  Dim FR As Double
  Dim FT As Double
  Dim FB As Double
  
  Dim recD As RECT
  Dim DL As Double
  Dim DR As Double
  Dim DT As Double
  Dim DB As Double
    
  Dim MoP As POINTAPI
  
  Dim AC As Range
  
  L = ActiveWindow.PointsToScreenPixelsX(0) * (72 / 96)
  T = ActiveWindow.PointsToScreenPixelsY(0) * (72 / 96)
  Set AC = ActiveCell
  AL = L + ActiveCell.Left * (ActiveWindow.Zoom / 100)
  AR = AL + ActiveCell.Width * (ActiveWindow.Zoom / 100)
  AT = T + ActiveCell.Top * (ActiveWindow.Zoom / 100)
  AB = AT + ActiveCell.Height * (ActiveWindow.Zoom / 100)
  AC.Activate
  Set AC = Nothing
 
  hwnd = GetForegroundWindow()
  Call GetWindowRect(hwnd, recF)
  FL = recF.Left * (72 / 96)
  FR = recF.Right * (72 / 96)
  FT = recF.Top * (72 / 96)
  FB = recF.Bottom * (72 / 96)
    
  hWnd2 = GetDesktopWindow
  Call GetWindowRect(hWnd2, recD)
  DL = recD.Left * (72 / 96)
  DR = recD.Right * (72 / 96)
  DT = recD.Top * (72 / 96)
  DB = recD.Bottom * (72 / 96)

  If SW_NEXT = True Then
     If (FL <= AL And _
        FR >= AR And _
        FT <= AT And _
        FB >= AB) Or _
        (FL <= AL And _
        FR >= AR And _
        FT <= AB And _
        FB >= AB) Then
        If AB + UserForm13.Height <= DB Then
           UserForm13.Top = AB
        ElseIf AT - UserForm13.Height >= DT Then
           UserForm13.Top = AT - UserForm13.Height
        End If
     End If
  Else
     If (FL <= AL And _
        FR >= AR And _
        FT <= AT And _
        FB >= AB) Or _
        (FL <= AL And _
        FR >= AR And _
        FT <= AB And _
        FB >= AB) Then
        If AT - UserForm13.Height >= DT Then
           UserForm13.Top = AT - UserForm13.Height
        ElseIf AB + UserForm13.Height <= DB Then
           UserForm13.Top = AB
        End If
     End If
  End If

  If UserForm13.Top <> FT Then
     GetCursorPos MoP
     MoP.Y = MoP.Y + (UserForm13.Top - FT) * (96 / 72)
     SetCursorPos MoP.X, MoP.Y
  End If

End Sub

Sub KILL_XLB()

  Dim W_XLVER As String
  Dim W_XLBPATH As String
  Dim FSO As Object
  Dim W_SIZE As Long
  
   
  If Application.Visible = False Then
     Exit Sub
  End If
  
  If Val(Application.Version) = 9 Then
     W_XLVER = ""
  Else
     W_XLVER = CStr(CLng(Val(Application.Version)))
  End If

  W_XLBPATH = CreateObject("WScript.Shell").ExpandEnvironmentStrings("%APPDATA%") & "\Microsoft\Excel\Excel" & W_XLVER & ".xlb"
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  On Error Resume Next
  W_SIZE = FSO.GetFile(W_XLBPATH).Size
  On Error GoTo 0
  Set FSO = Nothing
  
  If W_SIZE >= CLng(1024) * CLng(1024) * CLng(10) Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Size of tool bar setting file is over 10M." & vbCrLf & _
                       "Delete it?" & vbCrLf & _
                       "The file will be made again automatically, but tool bar setting will be reset.", vbOKCancel + vbExclamation)
     Else
        W_RET = MsgBox("|fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||752||fffd||6d1||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||317|e|fffd||282||fffd|10M|fffd||12d02||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||34e||fffd||fffd||fffd||fffd|I|fffd||24d||10d||c42c||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|A|fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||310||752||fffd||343||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbExclamation)
     End If
     If W_RET = vbOK Then
        On Error Resume Next
        Workbooks.Open W_XLBPATH
        Kill W_XLBPATH
        On Error GoTo 0
     End If
  End If
  
  On Error Resume Next

End Sub

Sub TAB_DEFAULT()

  AR_PAGEI(1) = 0
  AR_PAGEI(2) = 1
  AR_PAGEI(6) = 2
  AR_PAGEI(17) = 3
  AR_PAGEI(18) = 4
  AR_PAGEI(12) = 5
  AR_PAGEI(14) = 6
  AR_PAGEI(16) = 7
  AR_PAGEI(15) = 8
  AR_PAGEI(4) = 9
  AR_PAGEI(20) = 10
  AR_PAGEI(5) = 11
  AR_PAGEI(7) = 12
  AR_PAGEI(9) = 13
  AR_PAGEI(19) = 14
  AR_PAGEI(8) = 15
  AR_PAGEI(11) = 16
  AR_PAGEI(10) = 17
  AR_PAGEI(13) = 18
  AR_PAGEI(3) = 19

End Sub

Function TAB_CHK() As Boolean

  Dim I As Long
  Dim J As Long
  
  TAB_CHK = True

  For I = 1 To UBound(AR_PAGEI)
     For J = I + 1 To UBound(AR_PAGEI)
        If AR_PAGEI(J) = AR_PAGEI(I) Then
           TAB_CHK = False
           Exit Function
        End If
     Next J
  Next I

End Function

Sub PCMPL(ByVal W_STRBK As String)

  Dim W_STR As String
  Dim W_SS As Long
  
  If SW_PCST = True Then
     Exit Sub
  End If
  
  If Len(W_BOX.Value) = Len(W_STRBK) - 1 Then
  ElseIf W_BOX.Value = W_STRBK Then
  ElseIf W_BOX.SelStart = 0 Then
  Else
     If (Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "(" Or _
         Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "{" Or _
         Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "[") Then
        W_PCCNT = W_PCCNT + 1
        SW_PCST = True
        W_SS = W_BOX.SelStart
        Set W_BOX2 = W_BOX
        If Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "(" Then
           W_STR = Left$(W_BOX.Value, W_BOX.SelStart) & ")" & Right$(W_BOX.Value, Len(W_BOX.Value) - W_BOX.SelStart)
           W_BOX.Value = W_STR
        End If
        If Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "{" Then
           W_STR = Left$(W_BOX.Value, W_BOX.SelStart) & "}" & Right$(W_BOX.Value, Len(W_BOX.Value) - W_BOX.SelStart)
           W_BOX.Value = W_STR
        End If
        If Mid$(W_BOX.Value, W_BOX.SelStart, 1) = "[" Then
           W_STR = Left$(W_BOX.Value, W_BOX.SelStart) & "]" & Right$(W_BOX.Value, Len(W_BOX.Value) - W_BOX.SelStart)
           W_BOX.Value = W_STR
        End If
        If W_BOX.Name = "ComboBox59" Or _
           W_BOX.Name = "TextBox70" Or _
           W_BOX.Name = "TextBox71" Or _
           W_BOX.Name = "TextBox72" Or _
           W_BOX.Name = "TextBox73" Or _
           W_BOX.Name = "TextBox75" Or _
           W_BOX.Name = "TextBox76" Or _
           W_BOX.Name = "TextBox77" Or _
           W_BOX.Name = "TextBox78" Then
        Else
           Call COMBO_FOCUS
        End If
        W_BOX2.SelStart = W_SS
        Set W_BOX2 = Nothing
        SW_PCST = False
     End If
  End If

End Sub

Function SET_ONKEY(SW_SHIFT As Boolean, SW_CTRL As Boolean, SW_ALT As Boolean, _
                   W_KEY As String, ByVal SW_DFT As Boolean) As String

  SET_ONKEY = ""
  If SW_DFT = True Then
     SW_CTRL = True
     SW_SHIFT = True
     W_KEY = "r"
  End If
     
  If SW_SHIFT = True Then
     SET_ONKEY = SET_ONKEY & "+"
  End If
  If SW_CTRL = True Then
     SET_ONKEY = SET_ONKEY & "^"
  End If
  If SW_ALT = True Then
     SET_ONKEY = SET_ONKEY & "%"
  End If
  SET_ONKEY = SET_ONKEY & "{" & W_KEY & "}"

End Function

Function WINDOWCHK() As Boolean

  Dim I As Long
  
  WINDOWCHK = False
  For I = 1 To Windows.count
     If Windows(I).Visible = True Then
        WINDOWCHK = True
        Exit For
     End If
  Next I

End Function

Function SPLIT97(ByVal W_STR As String, ByVal W_DLMT As String) As Variant

  Dim AR_WK() As String
  Dim I As Long
  Dim SW_END As Boolean
  
  SPLIT97 = ""
    
  I = 0
  SW_END = False
  Do While SW_END = False
    ReDim Preserve AR_WK(0 To I)
    If InStr(W_STR, W_DLMT) > 0 Then
       AR_WK(I) = Left$(W_STR, InStr(W_STR, W_DLMT) - 1)
       If Len(W_STR) - (InStr(W_STR, W_DLMT) + Len(W_DLMT)) + 1 > 0 Then
          W_STR = Right$(W_STR, Len(W_STR) - (InStr(W_STR, W_DLMT) + Len(W_DLMT)) + 1)
       Else
          I = I + 1
          ReDim Preserve AR_WK(0 To I)
          AR_WK(I) = ""
          SW_END = True
       End If
    Else
       AR_WK(I) = W_STR
       SW_END = True
    End If
    I = I + 1
  Loop
  SPLIT97 = AR_WK
  Erase AR_WK

End Function

Function IsOF(ByVal C As Range) As Boolean

  Dim W_VAR As Variant

  IsOF = False
  On Error GoTo LABEL_ERR:
  W_VAR = C.Value
  On Error GoTo 0
  Exit Function

LABEL_ERR:
  IsOF = True
  Resume Next

End Function

Function REPSTRCNV(ByVal W_REPSTR As String) As String

  Dim I As Long
  
  REPSTRCNV = W_REPSTR
  Do While InStr(W_REPSTR, "\n") > 0
     I = InStr(W_REPSTR, "\n")
     If I > 1 Then
        REPSTRCNV = Left$(W_REPSTR, I - 1)
     Else
        REPSTRCNV = ""
     End If
     REPSTRCNV = REPSTRCNV & vbLf
     If I < Len(W_REPSTR) - 1 Then
        REPSTRCNV = REPSTRCNV & Right$(W_REPSTR, Len(W_REPSTR) - I - 1)
     End If
     W_REPSTR = REPSTRCNV
  Loop

End Function

Function FNDSTRCNV(ByVal W_FNDSTR As String) As String

  Dim RE As Object
  Dim RE2 As Object
  Dim MATCHES As Object
  Dim LENL As Long
  Dim LENR As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  
  FNDSTRCNV = W_FNDSTR
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "([^\\])?\(\?#.*?\)"
     .IgnoreCase = True
     .Global = True
  End With
  
  FNDSTRCNV = RE.Replace(W_FNDSTR, "$1")
  Set RE = Nothing

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[^\\]?\\Q(.*?)\\E"
     .IgnoreCase = False
     .Global = False
  End With

  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .Pattern = "([?*+.|{}\\[\]()$^])"
     .IgnoreCase = False
     .Global = True
  End With
  
  Do While RE.Test(FNDSTRCNV) = True
     Set MATCHES = RE.Execute(FNDSTRCNV)
     If Mid$(MATCHES.Item(0).Value, 1, 2) = "\Q" Then
        LENL = MATCHES.Item(0).FirstIndex
     Else
        LENL = MATCHES.Item(0).FirstIndex + 1
     End If
     LENR = Len(FNDSTRCNV) - (MATCHES.Item(0).FirstIndex + MATCHES.Item(0).Length)
     W_STR1 = ""
     W_STR2 = ""
     W_STR3 = ""
     If LENL > 0 Then
        W_STR1 = Left$(FNDSTRCNV, LENL)
     End If
     If Mid$(MATCHES.Item(0).Value, 1, 2) = "\Q" Then
        W_STR2 = RE2.Replace(Mid$(MATCHES.Item(0).Value, 3, Len(MATCHES.Item(0).Value) - 4), "\$1")
     Else
        W_STR2 = RE2.Replace(Mid$(MATCHES.Item(0).Value, 4, Len(MATCHES.Item(0).Value) - 5), "\$1")
     End If
     If LENR > 0 Then
        W_STR3 = Right$(FNDSTRCNV, LENR)
     End If
     FNDSTRCNV = W_STR1 & W_STR2 & W_STR3
     Set MATCHES = Nothing
  Loop
  
  Set RE2 = Nothing
  Set RE = Nothing

End Function

Function FNDSTRCNV2(ByVal W_FNDSTR As String, W_PREFND As String, SW_ERRFLG As Boolean) As String

  Dim W_LV As Long
  Dim W_PLV As Long
  Dim I As Long
  Dim W_SI As Long
  Dim W_EI As Long
  Dim W_STR As String
  
  
  FNDSTRCNV2 = W_FNDSTR
  W_PREFND = ""
  SW_ERRFLG = False
  
  W_LV = 0
  W_PLV = 0
  
  For I = 1 To Len(W_FNDSTR)
     If Mid$(W_FNDSTR, I, 4) = "(?<=" Or _
        Mid$(W_FNDSTR, I, 4) = "(?<!" Then
        W_SI = I
        W_LV = W_LV + 1
        W_PLV = W_LV
     ElseIf Mid$(W_FNDSTR, I, 1) = "(" Then
        W_LV = W_LV + 1
     ElseIf Mid$(W_FNDSTR, I, 1) = ")" Then
        If W_LV = W_PLV And _
           W_PLV > 0 Then
           W_EI = I
           W_STR = Mid$(W_FNDSTR, W_SI, W_EI - W_SI + 1)
           If W_PREFND = "" Then
              W_PREFND = W_STR
           Else
              W_PREFND = W_PREFND & Chr$(127) & W_STR
           End If
           Mid$(W_FNDSTR, W_SI, W_EI - W_SI + 1) = String$(W_EI - W_SI + 1, Chr$(127))
        End If
        W_LV = W_LV - 1
        W_PLV = 0
     End If
  Next I
  
  If W_PREFND <> "" Then
     FNDSTRCNV2 = Replace(W_FNDSTR, Chr$(127), "")
  End If
  
  If W_LV <> 0 Then
     SW_ERRFLG = True
  End If
  
End Function

Function FNDSTRCNV3(ByVal W_FNDSTR As String) As String

  Dim RE As Object
  Dim RE2 As Object
  Dim MATCHES As Object
  Dim LENL As Long
  Dim LENR As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  
  FNDSTRCNV3 = W_FNDSTR
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[^\\]?\\Q(.*?)\\E"
     .IgnoreCase = False
     .Global = False
  End With

  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .Pattern = "([?*+.|{}\\[\]()$^])"
     .IgnoreCase = False
     .Global = True
  End With
  
  Do While RE.Test(FNDSTRCNV3) = True
     Set MATCHES = RE.Execute(FNDSTRCNV3)
     If Mid$(MATCHES.Item(0).Value, 1, 2) = "\Q" Then
        LENL = MATCHES.Item(0).FirstIndex
     Else
        LENL = MATCHES.Item(0).FirstIndex + 1
     End If
     LENR = Len(FNDSTRCNV3) - (MATCHES.Item(0).FirstIndex + MATCHES.Item(0).Length)
     W_STR1 = ""
     W_STR2 = ""
     W_STR3 = ""
     If LENL > 0 Then
        W_STR1 = Left$(FNDSTRCNV3, LENL)
     End If
     If Mid$(MATCHES.Item(0).Value, 1, 2) = "\Q" Then
        W_STR2 = RE2.Replace(Mid$(MATCHES.Item(0).Value, 3, Len(MATCHES.Item(0).Value) - 4), "\$1")
     Else
        W_STR2 = RE2.Replace(Mid$(MATCHES.Item(0).Value, 4, Len(MATCHES.Item(0).Value) - 5), "\$1")
     End If
     If LENR > 0 Then
        W_STR3 = Right$(FNDSTRCNV3, LENR)
     End If
     FNDSTRCNV3 = W_STR1 & W_STR2 & W_STR3
     Set MATCHES = Nothing
  Loop
  
  Set RE2 = Nothing
  Set RE = Nothing

End Function

#If Win64 Then
Function BrowseCallbackProc(ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal lParam As LongPtr, ByVal lpData As LongPtr) As LongPtr
'|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd|
    
  If uMsg = BFFM_INITIALIZED Then
     SendMessage hwnd, BFFM_SETSELECTIONA, 1, ByVal lpData
  End If

End Function
#Else
Function BrowseCallbackProc(ByVal hwnd As Long, ByVal uMsg As Long, ByVal lParam As Long, ByVal lpData As Long) As Long
'|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd|
    
  If uMsg = BFFM_INITIALIZED Then
     SendMessage hwnd, BFFM_SETSELECTIONA, 1, ByVal lpData
  End If

End Function
#End If
#If Win64 Then
Function FARPROC(pfn As LongPtr) As LongPtr
'AddressOf|fffd||fffd||fffd|Z|fffd|q|fffd||316||7c2||fffd|l|fffd||fffd||7c2||fffd||fffd||590||fffd|
    
  FARPROC = pfn

End Function
#Else
Function FARPROC(pfn As Long) As Long
'AddressOf|fffd||fffd||fffd|Z|fffd|q|fffd||316||7c2||fffd|l|fffd||fffd||7c2||fffd||fffd||590||fffd|
    
  FARPROC = pfn

End Function
#End If

Function GEN_RND(ByVal W_RESTRU As String) As String

  Dim W_RNDSTR As String
  Dim W_RIGHT As String
  Dim W_RND As Long

  Dim W_FNDSTR As String
  Dim W_FNDSTR2 As String
  Dim RE9 As Object
  Dim W_LV1 As Long

  Dim W_CNV As String
  Dim AR_CNV As Variant
  Dim J As Long

  Dim AR_WK As Variant
  Dim W_PREFND As String
  Dim I As Long


  GEN_RND = ""
    
  W_FNDSTR = W_RESTRU
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\\", Chr$(1))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\[", Chr$(4))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\]", Chr$(5))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\{", Chr$(6))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\}", Chr$(7))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\.", Chr$(14))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\*", Chr$(15))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\+", Chr$(16))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\?", Chr$(17))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\^", Chr$(28))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\$", Chr$(29))
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV(W_FNDSTR)
  If W_FNDSTR = "" Then
     GoTo LABEL_ERR
  End If
  
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\\", Chr$(1))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\[", Chr$(4))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\]", Chr$(5))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\{", Chr$(6))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\}", Chr$(7))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\.", Chr$(14))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\*", Chr$(15))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\+", Chr$(16))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\?", Chr$(17))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\^", Chr$(28))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\$", Chr$(29))
  
  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = True
     .Global = True
  End With
  RE9.Pattern = "(\[[^\(\]]*?)(\(+?)([^\(\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  End If
  RE9.Pattern = "(\[[^\|\]]*?)(\|+?)([^\|\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  End If
  RE9.Pattern = "(\[[^\)\]]*?)(\)+?)([^\)\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  End If
  RE9.Pattern = "(\*|\+|\?|\{.*?\})(\?)"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1")
  End If
  Set RE9 = Nothing
  
  W_FNDSTR2 = FNDSTRCNV2(W_FNDSTR, W_PREFND, SW_ERRFLG)
  If SW_ERRFLG = True Then
     GoTo LABEL_ERR
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR2
     .IgnoreCase = False
     .Global = True
  End With
  On Error GoTo LABEL_ERR
  RE.Test (" ")
  If W_PREFND <> "" Then
     AR_WK = Split(W_PREFND, Chr$(127))
     For I = 0 To UBound(AR_WK)
        RE.Pattern = Mid$(AR_WK(I), 5, Len(AR_WK(I)) - 5)
        RE.Test (" ")
     Next I
  End If
  On Error GoTo 0
  Set RE = Nothing
  
  W_FNDSTR = Application.Substitute(W_FNDSTR, ".", "[ -~]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\w", "[a-zA-Z_0-9]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\W", "[^a-zA-Z_0-9]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\d", "[0-9]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\D", "[^0-9]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\s", "[ ]")
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\S", "[^ ]")
  
  W_FNDSTR = Application.Substitute(W_FNDSTR, "(?", Chr$(31))
  
  W_RIGHT = W_FNDSTR
  W_FNDSTR = ""
  Do While W_RIGHT <> ""
     If Left$(W_RIGHT, 1) = "*" Then
        Randomize
        W_RND = Int((6 * Rnd))
        W_FNDSTR = W_FNDSTR & "{" & W_RND & "}"
     ElseIf Left$(W_RIGHT, 1) = "+" Then
        Randomize
        W_RND = Int((5 * Rnd)) + 1
        W_FNDSTR = W_FNDSTR & "{" & W_RND & "}"
     ElseIf Left$(W_RIGHT, 1) = "?" Then
        Randomize
        W_RND = Int((2 * Rnd))
        W_FNDSTR = W_FNDSTR & "{" & W_RND & "}"
     Else
        W_FNDSTR = W_FNDSTR + Left$(W_RIGHT, 1)
     End If
     W_RIGHT = Right$(W_RIGHT, Len(W_RIGHT) - 1)
  Loop

  W_FNDSTR = Application.Substitute(W_FNDSTR, Chr$(31), "(?")

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = False
     .Global = True
  End With
  
  RE9.Pattern = "(\\)([0-7]{3})"
  If RE9.Test(W_FNDSTR) = True Then
     W_CNV = RE9.Replace(W_FNDSTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 3 Then
           AR_CNV(J) = Chr$("&O" & Left(AR_CNV(J), 3)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 3)
        End If
     Next J
     W_FNDSTR = Join(AR_CNV, "")
  End If
  
  RE9.Pattern = "(\\x)([0-9A-Fa-f]{2})"
  If RE9.Test(W_FNDSTR) = True Then
     W_CNV = RE9.Replace(W_FNDSTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 2 Then
           AR_CNV(J) = Chr$("&H" & Left(AR_CNV(J), 2)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 2)
        End If
     Next J
     W_FNDSTR = Join(AR_CNV, "")
  End If
  
  RE9.Pattern = "(\\u)([0-9A-Fa-f]{4})"
  If RE9.Test(W_FNDSTR) = True Then
     W_CNV = RE9.Replace(W_FNDSTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 4 Then
           AR_CNV(J) = ChrW$("&H" & Left(AR_CNV(J), 4)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 4)
        End If
     Next J
     W_FNDSTR = Join(AR_CNV, "")
  End If
  
  Set RE9 = Nothing
  
  W_LV1 = -1
  Erase AR_BRSTR
  
  Call RND1(W_FNDSTR, GEN_RND, W_LV1)
  
  Erase AR_BRSTR
  
  GEN_RND = Application.Substitute(GEN_RND, "^", "")
  GEN_RND = Application.Substitute(GEN_RND, "$", "")
  
  GEN_RND = Application.Substitute(GEN_RND, Chr$(1), "\")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(2), "(")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(3), ")")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(4), "[")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(5), "]")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(6), "{")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(7), "}")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(14), ".")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(15), "*")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(16), "+")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(17), "?")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(18), "|")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(28), "^")
  GEN_RND = Application.Substitute(GEN_RND, Chr$(29), "$")

  Exit Function

LABEL_ERR:
  
  Exit Function

End Function

Private Sub RND1(ByVal W_RESIN As String, ByRef W_RESOT As String, ByRef W_LV1 As Long)

  Dim I As Long
  Dim W_RND As Long
     
  Dim W_LV2 As Long
  Dim W_LVS As Long
  Dim W_STR As String
  Dim SI As Long
  Dim EI As Long
  Dim J As Long
  Dim AR_STR As Variant
  Dim W_GRP As Long
  Dim W_STR2 As String
  Dim AR_J As Variant
     
  Dim W_LENBK As Long
  Dim B As Long
  Dim RE9 As Object
  Dim GPB As Long
     
     
  If W_LV1 = -1 Then
     W_LV1 = 0
     GP = 0
  Else
     Set RE9 = CreateObject("VBScript.RegExp")
     With RE9
        .Pattern = "(\\\d+)"
        .IgnoreCase = False
        .Global = True
     End With
  
     If RE9.Test(W_RESIN) = True Then
        W_STR = RE9.Replace(W_RESIN, vbTab & "$1" & vbTab)
        AR_STR = Split(W_STR, vbTab)
        RE9.Pattern = "^\\\d+$"
        For I = 0 To UBound(AR_STR)
           If RE9.Test(AR_STR(I)) = True Then
              B = CLng(Val(Right$(AR_STR(I), Len(AR_STR(I)) - 1)))
              On Error Resume Next
              AR_STR(I) = AR_BRSTR(B)
              On Error GoTo 0
           End If
        Next I
        W_RESIN = Join(AR_STR, "")
     End If
  End If
  
  If InStr(W_RESIN, "(") = 0 And _
     InStr(W_RESIN, ")") = 0 Then
     AR_STR = Split(W_RESIN, "|")
     Randomize
     W_RND = Int(((UBound(AR_STR) + 1) * Rnd))
     W_RESOT = W_RESOT & EXOUT(AR_STR(W_RND))
     Exit Sub
  End If
  
  W_LV2 = 0
  
  If InStr(W_RESIN, "|") > 0 Then
     For I = 1 To Len(W_RESIN)
        If Mid$(W_RESIN, I, 1) = "(" Then
           W_LV2 = W_LV2 + 1
        End If
        If W_LV2 = 0 Then
           If Mid$(W_RESIN, I, 1) = "|" Then
              Mid$(W_RESIN, I, 1) = vbTab
           End If
        End If
        If Mid$(W_RESIN, I, 1) = ")" Then
           W_LV2 = W_LV2 - 1
        End If
     Next I
  
     AR_STR = Split(W_RESIN, vbTab)
     If UBound(AR_STR) > 0 Then
        Randomize
        W_RND = Int(((UBound(AR_STR) + 1) * Rnd))
        Call RND1(AR_STR(W_RND), W_RESOT, W_LV1)
        Exit Sub
     End If
  End If
  
  SI = 1

  For I = 1 To Len(W_RESIN)
     If Mid$(W_RESIN, I, 1) = "(" Then
        If W_LV1 = 0 Then
           If I > SI Then
              W_STR = Mid$(W_RESIN, SI, I - SI)
              AR_STR = Split(W_STR)
              Randomize
              W_RND = Int(((UBound(AR_STR) + 1) * Rnd))
              W_RESOT = W_RESOT & EXOUT(AR_STR(W_RND))
           End If
           If Mid$(W_RESIN, I, 3) = "(?:" Then
              W_GRP = 1
              SI = I + 3
           ElseIf Mid$(W_RESIN, I, 3) = "(?=" Then
              W_GRP = 2
              SI = I + 3
           ElseIf Mid$(W_RESIN, I, 3) = "(?!" Then
              W_GRP = 3
              SI = I + 3
           ElseIf Mid$(W_RESIN, I, 4) = "(?<=" Then
              W_GRP = 4
              SI = I + 4
           ElseIf Mid$(W_RESIN, I, 4) = "(?<!" Then
              W_GRP = 5
              SI = I + 4
           Else
              W_GRP = 6
              SI = I + 1
              GP = GP + 1
              ReDim Preserve AR_BRSTR(GP)
              GPB = GP
           End If
        End If
        W_LV1 = W_LV1 + 1
     End If
     
     If Mid$(W_RESIN, I, 1) = ")" Then
        W_LV1 = W_LV1 - 1
        If W_LV1 = 0 Then
           If I > SI Then
              If W_GRP = 6 Or W_GRP = 1 Then
                 W_STR = Mid$(W_RESIN, SI, I - SI)
                 
                 If W_GRP = 6 Then
                    W_LENBK = Len(W_RESOT)
                 End If
                 Call RND1(W_STR, W_RESOT, W_LV1)
                 If W_GRP = 6 Then
                    AR_BRSTR(GPB) = Right$(W_RESOT, Len(W_RESOT) - W_LENBK)
                 End If
                 
                 EI = 0
                 If I < Len(W_RESIN) Then
                    If Mid$(W_RESIN, I + 1, 1) = "{" Then
                       EI = InStr(I + 1, W_RESIN, "}")
                    End If
                 End If
                 If EI > 0 Then
                    W_STR2 = Mid$(W_RESIN, I + 2, EI - I - 2)
                    AR_J = Split(W_STR2, ",")
                    If UBound(AR_J) > 0 Then
                       Randomize
                       W_RND = Int(((CLng(AR_J(1)) - CLng(AR_J(0)) + 1) * Rnd))
                    Else
                       W_RND = 0
                    End If
                    For J = 2 To CLng(AR_J(0)) + W_RND
                       Call RND1(W_STR, W_RESOT, W_LV1)
                    Next J
                    SI = EI + 1
                 Else
                    SI = I + 1
                 End If
              Else
                 SI = I + 1
              End If
           Else
              SI = I + 1
           End If
        End If
     End If
  Next I

  If W_LV1 = 0 Then
     If I > SI Then
        W_STR = Mid$(W_RESIN, SI, I - SI)
        Call RND1(W_STR, W_RESOT, W_LV1)
     End If
     SI = I + 1
  End If
  
End Sub
  
Private Function EXOUT(ByVal W_RESIN As String) As String
  
  Dim W_L1STR As String
  Dim W_M1STR As String
  Dim W_R1STR As String
  Dim W_S1STR As String
  Dim W_L2STR As String
  Dim W_M2STR As String
  Dim W_R2STR As String
  Dim W_S2STR As String
  
  Dim W_SEL As String
  Dim W_PAT As String
  Dim AR_SEL As Variant
  Dim W_RESIN2 As String
  Dim W_N As Long
  Dim I As Long
  Dim W_RND As Long
  Dim SW_PAT As Boolean
     
  Dim W_LSTR As String
  Dim W_RSTR As String
  
  Dim W_RESOT As String
  Dim AR_I As Variant
  
  
  SW_PAT = False
  W_PAT = "(^|[^\\])\((.*?)\)"
  If RESPLITSTR(W_RESIN, "(^|[^\\])\((.*)\)", W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
     If RESPLITSTR(W_S1STR, "(^|[^\\])\((.*)\)", W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
        SW_PAT = True
        W_PAT = "(^|[^\\])\((.*)\)"
     End If
  End If
  
  
  If RESPLITSTR(W_RESIN, W_PAT, W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
     If SPLITSELN(W_L1STR, True, W_RESIN, W_RESOT) = True Then
     Else
        If RESPLITSTR(W_L1STR, "(^|[^\\])\{(.*?)\}", W_L2STR, W_M2STR, W_R2STR, W_S2STR) = True Then
           W_LSTR = Left$(W_L2STR, Len(W_L2STR) - 1)
           W_RSTR = Right$(W_L2STR, 1)
           W_RESOT = W_RESOT & W_LSTR
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_LSTR))
           If InStr(W_S2STR, ",") > 0 Then
              AR_I = Split(W_S2STR, ",")
              Randomize
              If AR_I(1) = "" Then
                 W_RND = Int((6 * Rnd))
              Else
                 W_RND = Int(((CLng(AR_I(1)) - CLng(AR_I(0)) + 1) * Rnd))
              End If
              W_N = CLng(AR_I(0)) + W_RND
           Else
              W_N = CLng(W_S2STR)
           End If
           
           For I = 1 To W_N
              W_RESOT = W_RESOT & W_RSTR
           Next I
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_RSTR))
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M2STR))
           W_L1STR = ""
        End If
        
        W_RESOT = W_RESOT & W_L1STR
        W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_L1STR))
        AR_SEL = SPLITP(W_S1STR)
        W_RESIN2 = Right$(W_RESIN, Len(W_RESIN) - Len(W_M1STR))
        W_N = 1
        If RESPLITSTR(W_RESIN2, "(^|[^\\])\{(.*?)\}", W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
           If W_L1STR = "" Then
              If InStr(W_S1STR, ",") > 0 Then
                 AR_I = Split(W_S1STR, ",")
                 Randomize
                 If AR_I(1) = "" Then
                    W_RND = Int((6 * Rnd))
                 Else
                    W_RND = Int(((CLng(AR_I(1)) - CLng(AR_I(0)) + 1) * Rnd))
                 End If
                 W_N = CLng(AR_I(0)) + W_RND
              Else
                 W_N = CLng(W_S1STR)
              End If
              
              W_RESIN = W_RESIN2
              W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M1STR))
           Else
              W_RESIN = W_RESIN2
           End If
        Else
           W_RESIN = W_RESIN2
        End If
        
        For I = 1 To W_N
           Randomize
           W_RND = Int(((UBound(AR_SEL) + 1) * Rnd + 1)) - 1
           W_SEL = AR_SEL(W_RND)
           Do While W_SEL <> ""
              W_RET = EXOUT(W_SEL)
           Loop
        Next I
        If SW_PAT = True Then
           If Len(W_RESIN) >= Len(W_M1STR) Then
              W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M1STR))
           End If
        End If
     End If
  Else
     If SPLITSELN(W_RESIN, True, W_RESIN, W_RESOT) = True Then
        W_RESOT = W_RESOT & EXOUT(W_RESIN)
     Else
        If RESPLITSTR(W_RESIN, "(^|[^\\])\{(.*?)\}", W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
           W_LSTR = Left$(W_L1STR, Len(W_L1STR) - 1)
           W_RSTR = Right$(W_L1STR, 1)
           W_RESOT = W_RESOT & W_LSTR
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_LSTR))
           If InStr(W_S1STR, ",") > 0 Then
              AR_I = Split(W_S1STR, ",")
              Randomize
              If AR_I(1) = "" Then
                 W_RND = Int((6 * Rnd))
              Else
                 W_RND = Int(((CLng(AR_I(1)) - CLng(AR_I(0)) + 1) * Rnd))
              End If
              W_N = CLng(AR_I(0)) + W_RND
           Else
              W_N = CLng(W_S1STR)
           End If
           
           For I = 1 To W_N
              W_RESOT = W_RESOT & W_RSTR
           Next I
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_RSTR))
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M1STR))
           EXOUT = W_RESOT & W_RESIN
           Exit Function
        End If
        
        If W_RESIN <> "" Then
           AR_SEL = SPLITP(W_RESIN)
           W_RESIN = ""
           W_N = 1
           If RESPLITSTR(W_RESIN, "(^|[^\\])\{(.*?)\}", W_L1STR, W_M1STR, W_R1STR, W_S1STR) = True Then
              If InStr(W_S1STR, ",") > 0 Then
                 AR_I = Split(W_S1STR, ",")
                 Randomize
                 If AR_I(1) = "" Then
                    W_RND = Int((6 * Rnd))
                 Else
                    W_RND = Int(((CLng(AR_I(1)) - CLng(AR_I(0)) + 1) * Rnd))
                 End If
                 W_N = CLng(AR_I(0)) + W_RND
              Else
                 W_N = CLng(W_S1STR)
              End If
              
              W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M1STR))
           End If
           For I = 1 To W_N
              Randomize
              W_RND = Int(((UBound(AR_SEL) + 1) * Rnd + 1)) - 1
              W_SEL = AR_SEL(W_RND)
              If SPLITSELN(W_SEL, False, W_RESIN, W_RESOT) = True Then
              Else
                 W_RESOT = W_RESOT & W_SEL
              End If
           Next I
        End If
     End If
  End If

  EXOUT = W_RESOT

End Function

Private Function SPLITSELN(ByVal W_STR As String, ByVal SW_UPD As Boolean, ByRef W_RESIN As String, ByRef W_RESOT As String) As Boolean

  Dim W_L2STR As String
  Dim W_M2STR As String
  Dim W_R2STR As String
  Dim W_S2STR As String
  Dim W_L3STR As String
  Dim W_M3STR As String
  Dim W_R3STR As String
  Dim W_S3STR As String
        
  Dim W_SEL As String
  Dim W_N As Long
  Dim I As Long
  Dim W_S2STRC As String
  Dim W_RND As Long
        
  Dim AR_I As Variant
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim J As Long
        
    
  If RESPLITSTR(W_STR, "(^|[^\\])\[(.*?)\]", W_L2STR, W_M2STR, W_R2STR, W_S2STR) = True Then
     If RESPLITSTR(W_L2STR, "(^|[^\\])\{(.*?)\}", W_L3STR, W_M3STR, W_R3STR, W_S3STR) = True Then
        W_RESOT = W_RESOT & Left$(W_L3STR, Len(W_L3STR) - 1)
        W_SEL = Right$(W_L3STR, 1)
        W_N = CLng(W_S3STR)
        For I = 1 To W_N
           W_RESOT = W_RESOT & W_SEL
        Next I
        If SW_UPD = True Then
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_L3STR))
           W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M3STR))
        End If
     Else
        If W_L2STR = "" Then
           W_N = 1
           If SW_UPD = True Then
              W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M2STR))
           End If
           If RESPLITSTR(W_R2STR, "(^)\{(.*?)\}", W_L3STR, W_M3STR, W_R3STR, W_S3STR) = True Then
              If InStr(W_S3STR, ",") > 0 Then
                 AR_I = Split(W_S3STR, ",")
                 Randomize
                 If AR_I(1) = "" Then
                    W_RND = Int((6 * Rnd))
                 Else
                    W_RND = Int(((CLng(AR_I(1)) - CLng(AR_I(0)) + 1) * Rnd))
                 End If
                 W_N = CLng(AR_I(0)) + W_RND
              Else
                 W_N = CLng(W_S3STR)
              End If
              
              If SW_UPD = True Then
                 W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_M3STR))
              End If
           End If
           
           W_S2STRC = CLSCNV(W_S2STR)
           If Left$(W_S2STRC, 1) = "^" Then
              W_STR2 = CLSCNV(" -~")
              W_STR3 = ""
              For J = 1 To Len(W_STR2)
                 If InStr(Right$(W_S2STRC, Len(W_S2STRC) - 1), Mid$(W_STR2, J, 1)) = 0 Then
                    W_STR3 = W_STR3 & Mid$(W_STR2, J, 1)
                 End If
              Next J
              W_S2STRC = W_STR3
           End If
           
           For I = 1 To W_N
              Randomize
              W_RND = Int((Len(W_S2STRC) * Rnd) + 1)
              W_RESOT = W_RESOT & Mid$(W_S2STRC, W_RND, 1)
           Next I
        Else
           W_RESOT = W_RESOT & W_L2STR
           If SW_UPD = True Then
              W_RESIN = Right$(W_RESIN, Len(W_RESIN) - Len(W_L2STR))
           End If
        End If
     End If
     SPLITSELN = True
  Else
     SPLITSELN = False
  End If

End Function

Function CLSCNV(ByVal W_STR As String) As String

  Dim W_STRO As String
  Dim I As Long
  Dim W_STC As String
  Dim W_EDC As String
  Dim W_ST As Long
  Dim W_ED As Long
  Dim J As Long
  
  
  CLSCNV = ""
  
  For I = 1 To Len(W_STR)
     If I = Len(W_STR) Then
        W_STRO = W_STRO & Mid$(W_STR, I, 1)
     Else
        If Mid$(W_STR, I + 1, 1) = "-" Then
           W_STC = Mid$(W_STR, I, 1)
           W_EDC = Mid$(W_STR, I + 2, 1)
           W_ST = AscW(W_STC)
           W_ED = AscW(W_EDC)
           For J = W_ST To W_ED
              W_STRO = W_STRO & ChrW$(J)
           Next J
           I = I + 2
        Else
           W_STRO = W_STRO & Mid$(W_STR, I, 1)
        End If
     End If
  Next I

  CLSCNV = W_STRO

End Function

Private Function RESPLITSTR(ByVal W_STR As String, ByVal W_REPTN As String, ByRef W_LSTR As String, ByRef W_MSTR As String, ByRef W_RSTR As String, ByRef W_SSTR As String) As Boolean

  Dim RE As Object
  Dim MATCHES As Object
  Dim ST As Long
  Dim ED As Long
  
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_REPTN
     .IgnoreCase = True
     .Global = True
  End With
  
  If RE.Test(W_STR) = True Then
     Set MATCHES = RE.Execute(W_STR)
     ST = 1
     If MATCHES.Item(0).Submatches(0) = "" Then
        ED = 0
     Else
        ED = MATCHES.Item(0).FirstIndex + 1
     End If
     W_LSTR = Mid$(W_STR, ST, ED - ST + 1)
     ST = ED + 1
     ED = MATCHES.Item(0).FirstIndex + MATCHES.Item(0).Length
     W_MSTR = Mid$(W_STR, ST, ED - ST + 1)
     ST = ED + 1
     ED = Len(W_STR)
     W_RSTR = Mid$(W_STR, ST, ED - ST + 1)
     RESPLITSTR = True
     W_SSTR = MATCHES.Item(0).Submatches(1)
     Set MATCHES = Nothing
  Else
     RESPLITSTR = False
  End If

  Set RE = Nothing

End Function

Private Function SPLITP(ByVal W_STR As String) As Variant

  Dim RE As Object
  Dim MATCHES As Object
  Dim AR_WK As Variant
  Dim I As Long
  
  SPLITP = ""
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
  End With
    
  RE.Pattern = "(\()(?:(.*?)(\|)(.*?))+(\))"
  If RE.Test(W_STR) = True Then
     W_STR = RE.Replace(W_STR, "$1$2" & vbTab & "$4$5")
  End If
  
  AR_WK = Split(W_STR, "|")
    
  For I = 0 To UBound(AR_WK)
     AR_WK(I) = Application.Substitute(AR_WK(I), vbTab, "|")
  Next I
  
  SPLITP = AR_WK
  Set RE = Nothing

End Function

Sub SET_REFCOMBO()
  
  Dim I As Long
  
  
  UserForm1.ComboBox1.Clear
  UserForm1.ComboBox1.ListIndex = -1
  UserForm1.ComboBox3.Clear
  UserForm1.ComboBox3.ListIndex = -1
  UserForm1.ComboBox4.Clear
  UserForm1.ComboBox4.ListIndex = -1
  UserForm1.ComboBox5.Clear
  UserForm1.ComboBox5.ListIndex = -1
  UserForm1.ComboBox6.Clear
  UserForm1.ComboBox6.ListIndex = -1
  UserForm1.ComboBox8.Clear
  UserForm1.ComboBox8.ListIndex = -1
  UserForm1.ComboBox12.Clear
  UserForm1.ComboBox12.ListIndex = -1
  UserForm1.ComboBox15.Clear
  UserForm1.ComboBox15.ListIndex = -1
  UserForm1.ComboBox16.Clear
  UserForm1.ComboBox16.ListIndex = -1
  UserForm1.ComboBox22.Clear
  UserForm1.ComboBox22.ListIndex = -1
  UserForm1.ComboBox24.Clear
  UserForm1.ComboBox24.ListIndex = -1
  UserForm1.ComboBox26.Clear
  UserForm1.ComboBox26.ListIndex = -1
  UserForm1.ComboBox27.Clear
  UserForm1.ComboBox27.ListIndex = -1
  UserForm1.ComboBox29.Clear
  UserForm1.ComboBox29.ListIndex = -1
  UserForm1.ComboBox31.Clear
  UserForm1.ComboBox31.ListIndex = -1
  UserForm1.ComboBox61.Clear
  UserForm1.ComboBox61.ListIndex = -1
  If UserForm1.CheckBox65.Value = True Then
     If Val(Application.Version) >= 15 Then
        If XL4 Is Nothing Then
        Else
           UserForm10.ComboBox1.Clear
           UserForm10.ComboBox1.ListIndex = -1
        End If
     Else
        CommandBars("Excelre").Controls(1).Clear
     End If
  End If
  If SW_CLASSIC2 = False Then
     UserForm13.ComboBox1.Clear
     UserForm13.ComboBox1.ListIndex = -1
  End If
     
  For I = 1 To UBound(AR_FTEXT)
     If AR_FTEXT(I) <> "" Then
        UserForm1.ComboBox1.AddItem AR_FTEXT(I)
        UserForm1.ComboBox1.list(UserForm1.ComboBox1.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox3.AddItem AR_FTEXT(I)
        UserForm1.ComboBox3.list(UserForm1.ComboBox3.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox4.AddItem AR_FTEXT(I)
        UserForm1.ComboBox4.list(UserForm1.ComboBox4.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox5.AddItem AR_FTEXT(I)
        UserForm1.ComboBox5.list(UserForm1.ComboBox5.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox6.AddItem AR_FTEXT(I)
        UserForm1.ComboBox6.list(UserForm1.ComboBox6.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox8.AddItem AR_FTEXT(I)
        UserForm1.ComboBox8.list(UserForm1.ComboBox8.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox12.AddItem AR_FTEXT(I)
        UserForm1.ComboBox12.list(UserForm1.ComboBox12.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox15.AddItem AR_FTEXT(I)
        UserForm1.ComboBox15.list(UserForm1.ComboBox15.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox16.AddItem AR_FTEXT(I)
        UserForm1.ComboBox16.list(UserForm1.ComboBox16.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox22.AddItem AR_FTEXT(I)
        UserForm1.ComboBox22.list(UserForm1.ComboBox22.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox24.AddItem AR_FTEXT(I)
        UserForm1.ComboBox24.list(UserForm1.ComboBox24.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox26.AddItem AR_FTEXT(I)
        UserForm1.ComboBox26.list(UserForm1.ComboBox26.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox27.AddItem AR_FTEXT(I)
        UserForm1.ComboBox27.list(UserForm1.ComboBox27.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox29.AddItem AR_FTEXT(I)
        UserForm1.ComboBox29.list(UserForm1.ComboBox29.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox31.AddItem AR_FTEXT(I)
        UserForm1.ComboBox31.list(UserForm1.ComboBox31.ListCount - 1, 1) = AR_FALSH(I)
        UserForm1.ComboBox61.AddItem AR_FTEXT(I)
        UserForm1.ComboBox61.list(UserForm1.ComboBox61.ListCount - 1, 1) = AR_FALSH(I)
        If UserForm1.CheckBox65.Value = True Then
           If Val(Application.Version) >= 15 Then
              If XL4 Is Nothing Then
              Else
                 UserForm10.ComboBox1.AddItem AR_FTEXT(I)
                 UserForm10.ComboBox1.list(UserForm10.ComboBox1.ListCount - 1, 1) = AR_FALSH(I)
              End If
           Else
              CommandBars("Excelre").Controls(1).AddItem AR_FTEXT(I)
           End If
        End If
        If SW_CLASSIC2 = False Then
           UserForm13.ComboBox1.AddItem AR_FTEXT(I)
           UserForm13.ComboBox1.list(UserForm13.ComboBox1.ListCount - 1, 1) = AR_FALSH(I)
        End If
        If I = 1 Then
           UserForm1.ComboBox1.ListIndex = 0
           UserForm1.ComboBox3.ListIndex = 0
           UserForm1.ComboBox4.ListIndex = 0
           UserForm1.ComboBox5.ListIndex = 0
           UserForm1.ComboBox6.ListIndex = 0
           UserForm1.ComboBox8.ListIndex = 0
           UserForm1.ComboBox12.ListIndex = 0
           UserForm1.ComboBox15.ListIndex = 0
           UserForm1.ComboBox16.ListIndex = 0
           UserForm1.ComboBox22.ListIndex = 0
           UserForm1.ComboBox24.ListIndex = 0
           UserForm1.ComboBox26.ListIndex = 0
           UserForm1.ComboBox27.ListIndex = 0
           UserForm1.ComboBox29.ListIndex = 0
           UserForm1.ComboBox31.ListIndex = 0
           UserForm1.ComboBox61.ListIndex = 0
           If UserForm1.CheckBox65.Value = True Then
              If Val(Application.Version) >= 15 Then
                 If XL4 Is Nothing Then
                 Else
                    UserForm10.ComboBox1.ListIndex = 0
                 End If
              Else
                 CommandBars("Excelre").Controls(1).ListIndex = 0
              End If
           End If
           If SW_CLASSIC2 = False Then
              UserForm13.ComboBox1.ListIndex = 0
           End If
        End If
     End If
  Next I

End Sub

Sub SET_REPCOMBO()
  
  Dim I As Long
  
  UserForm1.ComboBox2.Clear
  UserForm1.ComboBox2.ListIndex = -1
  UserForm1.ComboBox7.Clear
  UserForm1.ComboBox7.ListIndex = -1
  UserForm1.ComboBox9.Clear
  UserForm1.ComboBox9.ListIndex = -1
  UserForm1.ComboBox13.Clear
  UserForm1.ComboBox13.ListIndex = -1
  UserForm1.ComboBox14.Clear
  UserForm1.ComboBox14.ListIndex = -1
  UserForm1.ComboBox17.Clear
  UserForm1.ComboBox17.ListIndex = -1
  UserForm1.ComboBox21.Clear
  UserForm1.ComboBox21.ListIndex = -1
  UserForm1.ComboBox25.Clear
  UserForm1.ComboBox25.ListIndex = -1
  UserForm1.ComboBox28.Clear
  UserForm1.ComboBox28.ListIndex = -1
  UserForm1.ComboBox30.Clear
  UserForm1.ComboBox30.ListIndex = -1
  If UserForm1.CheckBox65.Value = True Then
     If Val(Application.Version) >= 15 Then
        If XL4 Is Nothing Then
        Else
           UserForm10.ComboBox2.Clear
           UserForm10.ComboBox2.ListIndex = -1
        End If
     End If
  End If
  If SW_CLASSIC2 = False Then
     UserForm13.ComboBox2.Clear
     UserForm13.ComboBox2.ListIndex = -1
  End If
  
  For I = 1 To UBound(AR_RTEXT)
     If AR_RTEXT(I) <> "" Then
        UserForm1.ComboBox2.AddItem AR_RTEXT(I)
        UserForm1.ComboBox2.list(UserForm1.ComboBox2.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox7.AddItem AR_RTEXT(I)
        UserForm1.ComboBox7.list(UserForm1.ComboBox7.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox9.AddItem AR_RTEXT(I)
        UserForm1.ComboBox9.list(UserForm1.ComboBox9.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox13.AddItem AR_RTEXT(I)
        UserForm1.ComboBox13.list(UserForm1.ComboBox13.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox14.AddItem AR_RTEXT(I)
        UserForm1.ComboBox14.list(UserForm1.ComboBox14.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox17.AddItem AR_RTEXT(I)
        UserForm1.ComboBox17.list(UserForm1.ComboBox17.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox21.AddItem AR_RTEXT(I)
        UserForm1.ComboBox21.list(UserForm1.ComboBox21.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox25.AddItem AR_RTEXT(I)
        UserForm1.ComboBox25.list(UserForm1.ComboBox25.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox28.AddItem AR_RTEXT(I)
        UserForm1.ComboBox28.list(UserForm1.ComboBox28.ListCount - 1, 1) = AR_RALSH(I)
        UserForm1.ComboBox30.AddItem AR_RTEXT(I)
        UserForm1.ComboBox30.list(UserForm1.ComboBox30.ListCount - 1, 1) = AR_RALSH(I)
        If UserForm1.CheckBox65.Value = True Then
           If Val(Application.Version) >= 15 Then
              If XL4 Is Nothing Then
              Else
                 UserForm10.ComboBox2.AddItem AR_RTEXT(I)
                 UserForm10.ComboBox2.list(UserForm10.ComboBox2.ListCount - 1, 1) = AR_RALSH(I)
              End If
           End If
        End If
        If SW_CLASSIC2 = False Then
           UserForm13.ComboBox2.AddItem AR_RTEXT(I)
           UserForm13.ComboBox2.list(UserForm13.ComboBox2.ListCount - 1, 1) = AR_RALSH(I)
        End If
        If I = 1 Then
           UserForm1.ComboBox2.ListIndex = 0
           UserForm1.ComboBox7.ListIndex = 0
           UserForm1.ComboBox9.ListIndex = 0
           UserForm1.ComboBox13.ListIndex = 0
           UserForm1.ComboBox14.ListIndex = 0
           UserForm1.ComboBox17.ListIndex = 0
           UserForm1.ComboBox21.ListIndex = 0
           UserForm1.ComboBox25.ListIndex = 0
           UserForm1.ComboBox28.ListIndex = 0
           UserForm1.ComboBox30.ListIndex = 0
           If UserForm1.CheckBox65.Value = True Then
              If Val(Application.Version) >= 15 Then
                 If XL4 Is Nothing Then
                 Else
                    UserForm10.ComboBox2.ListIndex = 0
                 End If
              End If
           End If
           If SW_CLASSIC2 = False Then
              UserForm13.ComboBox2.ListIndex = 0
           End If
        End If
     End If
  Next I

End Sub

Sub SET_DIRCOMBO()
  
  Dim I As Long
  
  UserForm1.ComboBox18.Clear
  UserForm1.ComboBox18.ListIndex = -1
  UserForm1.ComboBox19.Clear
  UserForm1.ComboBox19.ListIndex = -1
  UserForm1.ComboBox20.Clear
  UserForm1.ComboBox20.ListIndex = -1
  UserForm1.ComboBox23.Clear
  UserForm1.ComboBox23.ListIndex = -1
  UserForm1.ComboBox60.Clear
  UserForm1.ComboBox60.ListIndex = -1
  UserForm1.ComboBox62.Clear
  UserForm1.ComboBox62.ListIndex = -1
  If SW_CLASSIC2 = False Then
     UserForm13.ComboBox3.Clear
     UserForm13.ComboBox3.ListIndex = -1
  End If
     
  For I = 1 To UBound(AR_DTEXT)
     If AR_DTEXT(I) <> "" Then
        UserForm1.ComboBox18.AddItem AR_DTEXT(I)
        UserForm1.ComboBox18.list(UserForm1.ComboBox18.ListCount - 1, 1) = AR_DALSH(I)
        UserForm1.ComboBox19.AddItem AR_DTEXT(I)
        UserForm1.ComboBox19.list(UserForm1.ComboBox19.ListCount - 1, 1) = AR_DALSH(I)
        UserForm1.ComboBox20.AddItem AR_DTEXT(I)
        UserForm1.ComboBox20.list(UserForm1.ComboBox20.ListCount - 1, 1) = AR_DALSH(I)
        UserForm1.ComboBox23.AddItem AR_DTEXT(I)
        UserForm1.ComboBox23.list(UserForm1.ComboBox23.ListCount - 1, 1) = AR_DALSH(I)
        UserForm1.ComboBox60.AddItem AR_DTEXT(I)
        UserForm1.ComboBox60.list(UserForm1.ComboBox60.ListCount - 1, 1) = AR_DALSH(I)
        UserForm1.ComboBox62.AddItem AR_DTEXT(I)
        UserForm1.ComboBox62.list(UserForm1.ComboBox62.ListCount - 1, 1) = AR_DALSH(I)
        If SW_CLASSIC2 = False Then
           UserForm13.ComboBox3.AddItem AR_DTEXT(I)
           UserForm13.ComboBox3.list(UserForm13.ComboBox3.ListCount - 1, 1) = AR_DALSH(I)
        End If
        If I = 1 Then
           UserForm1.ComboBox18.ListIndex = 0
           UserForm1.ComboBox19.ListIndex = 0
           UserForm1.ComboBox20.ListIndex = 0
           UserForm1.ComboBox23.ListIndex = 0
           UserForm1.ComboBox60.ListIndex = 0
           UserForm1.ComboBox62.ListIndex = 0
           If SW_CLASSIC2 = False Then
              UserForm13.ComboBox3.ListIndex = 0
           End If
        End If
     End If
  Next I

End Sub

Sub SET_REFCOMBO2()
  
  Dim I As Long
  
  
  UserForm1.ComboBox59.Clear
  UserForm1.ComboBox59.ListIndex = -1
     
  For I = 1 To UBound(AR_ATEXT)
     If AR_ATEXT(I) <> "" Then
        UserForm1.ComboBox59.AddItem AR_ATEXT(I)
        UserForm1.ComboBox59.list(UserForm1.ComboBox59.ListCount - 1, 1) = AR_AALSH(I)
        If I = 1 Then
           UserForm1.ComboBox59.ListIndex = 0
        End If
     End If
  Next I

End Sub

Function NewRA() As Object

  Set NewRA = New C06RA

End Function

Sub SETTM_UF2()

#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If

  If W_TMIDUF2 = 0 Then
     SW_ACTUF2_OLD = True
              
     hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
              
     Call SetWindowPos(hwnd01, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
     On Error Resume Next
     AppActivate Application.VBE.MainWindow.Caption  'VBE|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X
     On Error GoTo 0
     
     W_TMIDUF2 = SetTimer(0, 0, 1000, AddressOf UF2_TM)
  End If

End Sub

Sub KILLTM_UF2()

  If W_TMIDUF2 <> 0 Then
     KillTimer 0, W_TMIDUF2
     W_TMIDUF2 = 0
  End If

End Sub

Sub UF2_TM()

  Dim SW_ACTUF As Boolean

#If Win64 Then
  Dim hwndA As LongPtr
  Dim hwndF As LongPtr
  Dim hwnd01 As LongPtr
  Dim hwnd As LongPtr
#Else
  Dim hwndA As Long
  Dim hwndF As Long
  Dim hwnd01 As Long
  Dim hwnd As Long
#End If


  On Error GoTo LABEL_ERR

  hwndA = GetActiveWindow
  hwndF = GetForegroundWindow()
  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_ACTUF = False
  
  hwnd = FindWindow(vbNullString, Application.VBE.MainWindow.Caption)
  
  If hwnd = hwndA And _
     hwnd = hwndF Then
     SW_ACTUF = True
  End If

  If SW_ACTUF = SW_ACTUF2_OLD Then
  Else
     If hwnd01 > 0 Then
        If hwndA = hwnd01 Then
        Else
           If SW_ACTUF = False Then
              Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
              Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
           Else
              Call SetWindowPos(hwnd01, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
              On Error Resume Next
              AppActivate Application.VBE.MainWindow.Caption  'VBE|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X
              On Error GoTo 0
           End If
        End If
     End If
     SW_ACTUF2_OLD = SW_ACTUF
  End If

  On Error GoTo 0
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Call KILLTM_UF2
  Exit Sub

End Sub

Function NRML_CHK(ByVal W_FW As String, ByVal W_LV As Long, ByVal SW_GREP As Boolean) As String

  Dim I As Long
  Dim W_PLV As Long
  Dim SW_YEN As Boolean
  Dim SW_CC As Boolean
  Dim SW_RP As Boolean
  Dim W_NCHK As Long

  Dim AR_FW As Variant
  Dim RA1 As Object
  Dim RE9 As Object

  Dim W_FW2 As String
  Dim W_NRML_CHK As String
  
  Dim W_STR As String

  Dim AR_PSTR() As String
  Dim P As Long
  Dim W_MAXP As Long
  Dim SW_CHR31 As Boolean
  Dim W_STR2 As String
  Dim S As Long
  Dim AR_FW3() As String
  Dim F As Long
 
  Dim AL As Object

'''  Dim W_FWBK As String
  Dim J As Long
  Dim SW_EXFOR As Boolean


  NRML_CHK = ""
  
  If Left$(W_FW, 7) = "[COND>]" Or _
     Left$(W_FW, 7) = "[COND<]" Or _
     Left$(W_FW, 8) = "[COND>=]" Or _
     Left$(W_FW, 8) = "[COND<=]" Then
     Exit Function
  End If
  
  W_FW = Application.Substitute(W_FW, "\\", Chr$(1))
  W_FW = FNDSTRCNV(W_FW)
  W_FW = Application.Substitute(W_FW, "\\", Chr$(1))
  W_FW = Application.Substitute(W_FW, "\(", Chr$(2))
  W_FW = Application.Substitute(W_FW, "\)", Chr$(3))
  W_FW = Application.Substitute(W_FW, "\[", Chr$(4))
  W_FW = Application.Substitute(W_FW, "\]", Chr$(5))
  W_FW = Application.Substitute(W_FW, "\{", Chr$(6))
  W_FW = Application.Substitute(W_FW, "\}", Chr$(7))
  W_FW = Application.Substitute(W_FW, "\.", Chr$(14))
  W_FW = Application.Substitute(W_FW, "\*", Chr$(15))
  W_FW = Application.Substitute(W_FW, "\+", Chr$(16))
  W_FW = Application.Substitute(W_FW, "\?", Chr$(17))
  W_FW = Application.Substitute(W_FW, "\|", Chr$(18))
  W_FW = Application.Substitute(W_FW, "\^", Chr$(28))
  W_FW = Application.Substitute(W_FW, "\$", Chr$(29))
  
  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .Pattern = "\(\?(?:-?[imnsx])+?\)"
     .IgnoreCase = False
     .Global = True
  End With
  If RE9.Test(W_FW) = True Then
     Set RE9 = Nothing
     Exit Function
  End If
  
  RE9.Pattern = "\(\?<.*?>"
  W_FW = RE9.Replace(W_FW, "(")
  RE9.Pattern = "\((?!\?!)(?!\?<!)(?!\?(?:-?[imnsx])+?:?)(?:\?(?:<?=|:|>))?([^(|)]+?)\)(?!\*)(?!\?)(?!\{)"
  Do While RE9.Test(W_FW) = True
     W_FW = RE9.Replace(W_FW, "$1")
  Loop
  RE9.Pattern = "\\k<.*?>"
  W_FW = RE9.Replace(W_FW, "")
  Set RE9 = Nothing
  
  SW_YEN = False
  SW_CC = False
  SW_RP = False
  W_PLV = 0
  W_NCHK = 0
  For I = 1 To Len(W_FW)
     SW_EXFOR = False
     
     If W_NCHK = 1 Then
        If Mid$(W_FW, I, 1) = "\" Or _
           Mid$(W_FW, I, 1) = "(" Or _
           Mid$(W_FW, I, 1) = ")" Or _
           Mid$(W_FW, I, 1) = "[" Or _
           Mid$(W_FW, I, 1) = "]" Or _
           Mid$(W_FW, I, 1) = "{" Or _
           Mid$(W_FW, I, 1) = "}" Or _
           Mid$(W_FW, I, 1) = "?" Or _
           Mid$(W_FW, I, 1) = "*" Or _
           Mid$(W_FW, I, 1) = "+" Or _
           Mid$(W_FW, I, 1) = "." Or _
           Mid$(W_FW, I, 1) = "^" Or _
           Mid$(W_FW, I, 1) = "$" Or _
           Mid$(W_FW, I, 1) = "|" Then
           W_NCHK = 2
           If Mid$(W_FW, I, 1) = "?" Or _
              Mid$(W_FW, I, 1) = "*" Then
              NRML_CHK = Left$(NRML_CHK, Len(NRML_CHK) - 1)
              If NRML_CHK = "" Then
                 W_NCHK = 0
              End If
           End If
           If Mid$(W_FW, I, 1) = "{" Then
              If Mid$(W_FW, I + 1, 2) = "0}" Or _
                 Mid$(W_FW, I + 1, 2) = "0," Then
                 NRML_CHK = Left$(NRML_CHK, Len(NRML_CHK) - 1)
              Else
                 J = InStr(I + 1, W_FW, "}")
                 If J > 0 Then
                    W_STR = Mid$(W_FW, I + 1, J - I - 1)
                    If InStr(W_STR, ",") > 0 Then
                       W_STR = Left$(W_STR, InStr(W_STR, ",") - 1)
                       If Mid$(W_FW, J + 1, 1) = "?" Then
                          SW_EXFOR = True
                       End If
                    End If
                    If IsNumeric(W_STR) = True Then
                       J = CLng(W_STR)
                       NRML_CHK = Left$(NRML_CHK, Len(NRML_CHK) - 1) & String$(J, Right$(NRML_CHK, 1))
                    End If
                    If SW_EXFOR = True Then
                       Exit For
                    End If
                 End If
              End If
              W_NCHK = 0
'''              If NRML_CHK = "" Then
'''                 W_NCHK = 0
'''              End If
           End If
        End If
     End If
     
     Select Case Mid$(W_FW, I, 1)
     Case "\"
        SW_YEN = Not SW_YEN
     Case "("
        If SW_YEN = False Then
           W_PLV = W_PLV + 1
        Else
           SW_YEN = False
        End If
     Case ")"
        If SW_YEN = False Then
           W_PLV = W_PLV - 1
        Else
           SW_YEN = False
        End If
     Case "["
        If SW_YEN = False Then
           SW_CC = True
        Else
           SW_YEN = False
        End If
     Case "]"
        If SW_YEN = False Then
           SW_CC = False
        Else
           SW_YEN = False
        End If
     Case "{"
        If SW_YEN = False Then
           SW_RP = True
        Else
           SW_YEN = False
        End If
     Case "}"
        If SW_YEN = False Then
           SW_RP = False
        Else
           SW_YEN = False
        End If
     Case "?", "*", "+", "."
        If SW_YEN = True Then
           SW_YEN = False
        End If
     Case "^", "$"
     Case "|"
        If SW_YEN = True Then
           SW_YEN = False
        Else
           If SW_CC = False And _
              SW_RP = False And _
              W_PLV = 0 Then
              NRML_CHK = ""
              Exit For
           End If
        End If
     Case "x", "u", "0" To "7"
        If SW_YEN = True Then
           NRML_CHK = ""
           Exit For
        Else
           If SW_CC = False And _
              SW_RP = False And _
              W_PLV = 0 Then
              If W_NCHK = 0 Or _
                 W_NCHK = 1 Then
                 W_NCHK = 1
                 NRML_CHK = NRML_CHK & Mid$(W_FW, I, 1)
              End If
           End If
        End If
     Case Else
        If SW_YEN = True Then
           SW_YEN = False
        Else
           If SW_CC = False And _
              SW_RP = False And _
              W_PLV = 0 Then
              If W_NCHK = 0 Or _
                 W_NCHK = 1 Then
                 W_NCHK = 1
                 NRML_CHK = NRML_CHK & Mid$(W_FW, I, 1)
              End If
           End If
        End If
     End Select
  Next I

  If NRML_CHK = "" And W_LV = 1 Then
     On Error GoTo LABEL_SKIP
     Set AL = CreateObject("System.Collections.ArrayList")
     On Error GoTo 0
     Set AL = Nothing
     
     W_FW2 = W_FW
     If Left$(W_FW2, 1) = "(" And Right$(W_FW2, 1) = ")" And InStr(W_FW2, "|") > 0 Then
        W_FW2 = Mid$(W_FW2, 2, Len(W_FW2) - 2)
     End If
     
     If InStr(W_FW2, "(") = 0 And InStr(W_FW2, ")") = 0 And InStr(W_FW2, "|") > 0 Then
        Set RE9 = CreateObject("VBScript.RegExp")
        With RE9
           .Pattern = "\[.*?\|.*?\]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE9.Test(W_FW2) = False Then
           RE9.Pattern = W_FW2
           On Error GoTo LABEL_SKIP
           RE9.Test (" ")
           On Error GoTo 0
           
           AR_FW = Split(W_FW2, "|")
           Set RA1 = NewRA
           For I = 0 To UBound(AR_FW)
              If AR_FW(I) <> "" Then
                 RA1.Add AR_FW(I)
              End If
           Next I
           NRML_CHK = NRML_CHK(RA1.RE, 2, SW_GREP)
           Set RA1 = Nothing
        End If
        Set RE9 = Nothing
     End If
  End If

LABEL_SKIP:
  On Error GoTo 0
  Set AL = Nothing
  
  If SW_GREP = False Then
     GoTo LABEL_CHKE
  End If

'''  W_FWBK = W_FW

  If NRML_CHK = "" And (W_LV = 1 Or W_LV = 3) Then
     W_FW2 = W_FW
     If Left$(W_FW2, 1) = "(" And Right$(W_FW2, 1) = ")" And InStr(W_FW2, "|") > 0 Then
        W_FW2 = Mid$(W_FW2, 2, Len(W_FW2) - 2)
     End If

     If InStr(W_FW2, "(") = 0 And InStr(W_FW2, ")") = 0 And InStr(W_FW2, "|") > 0 Then
        Set RE9 = CreateObject("VBScript.RegExp")
        With RE9
           .Pattern = "\[.*?\|.*?\]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE9.Test(W_FW2) = False Then
           AR_FW = Split(W_FW2, "|")
           For I = 0 To UBound(AR_FW)
              W_STR = NRML_CHK(AR_FW(I), 2, SW_GREP)
              If Len(W_STR) > 0 Then
                 If W_NRML_CHK <> "" Then
                    W_NRML_CHK = W_NRML_CHK & vbTab
                 End If
                 W_NRML_CHK = W_NRML_CHK & W_STR
              Else
                 W_NRML_CHK = ""
                 Exit Function
              End If
           Next I
           NRML_CHK = W_NRML_CHK
        End If
        Set RE9 = Nothing
     End If
  End If

  If NRML_CHK = "" And W_LV = 1 Then
     Set RE9 = CreateObject("VBScript.RegExp")
     With RE9
        .Pattern = "^(.*?)(\([^()]+?\))(.*?)$"
        .IgnoreCase = True
        .Global = False
     End With
     
     P = 0
     
     Do While RE9.Test(W_FW) = True
        W_FW = Replace(W_FW, Chr$(31), Chr$(11))
        P = P + 1
        ReDim Preserve AR_PSTR(P)
        AR_PSTR(P) = RE9.Replace(W_FW, "$2")
        W_FW = RE9.Replace(W_FW, "$1" & Chr$(31) & "$3")
     Loop
     
     Set RE9 = Nothing
     
     W_MAXP = P
     W_NRML_CHK = ""
     F = 0
     
     For P = W_MAXP To 1 Step -1
        W_STR = NRML_CHK(W_FW, 3, SW_GREP)
        If W_STR = "" Then
           Exit For
        End If
        
        If InStr(W_STR, Chr$(31)) = 0 Then
           S = InStrRev(W_STR, Chr$(11))
           If S > 0 Then
              Mid(W_STR, S, 1) = Chr$(31)
           Else
              NRML_CHK = W_STR
              Exit For
           End If
        End If
             
        S = InStrRev(W_STR, Chr$(31))
        If S > 0 Then
           W_STR = Replace(W_STR, Chr$(31), AR_PSTR(P))
        End If
        S = InStrRev(W_STR, Chr$(11))
        If S > 0 Then
           Mid(W_STR, S, 1) = Chr$(31)
        End If
        
        If Left$(W_STR, 1) = "(" And Right$(W_STR, 1) = ")" Then
           If Left$(W_STR, 3) = "(?:" Then
              W_STR = Mid$(W_STR, 4, Len(W_STR) - 4)
           Else
              W_STR = Mid$(W_STR, 2, Len(W_STR) - 2)
           End If
           W_STR = NRML_CHK(W_STR, 3, SW_GREP)
        End If
        If InStr(W_STR, vbTab) > 0 Then
           SW_CHR31 = False
           AR_FW = Split(W_STR, vbTab)
           For I = 0 To UBound(AR_FW)
              W_STR2 = NRML_CHK(AR_FW(I), 3, SW_GREP)
              If Len(W_STR2) > 0 Then
                 S = InStrRev(W_STR2, Chr$(31))
                 If S > 0 Then
                    SW_CHR31 = True
                    W_FW = W_STR2
                 Else
                    S = InStrRev(W_STR2, Chr$(11))
                    If S > 0 Then
                       Mid(W_STR2, S, 1) = Chr$(31)
                       F = F + 1
                       ReDim Preserve AR_FW3(F)
                       AR_FW3(F) = W_STR2
                    Else
                       If W_NRML_CHK <> "" Then
                          W_NRML_CHK = W_NRML_CHK & vbTab
                       End If
                       W_NRML_CHK = W_NRML_CHK & W_STR2
                    End If
                 End If
              Else
                 W_NRML_CHK = ""
                 Exit Function
              End If
           Next I
           If SW_CHR31 = False Then
              If F > 0 And _
                 P > 1 Then
                 W_FW = AR_FW3(F)
                 F = F - 1
              Else
                 NRML_CHK = W_NRML_CHK
                 Exit For
              End If
           End If
        Else
           W_STR2 = NRML_CHK(W_STR, 3, SW_GREP)
           If W_STR2 = "" Then
              Exit For
           End If
           If InStr(W_STR2, Chr$(31)) > 0 Then
              W_FW = W_STR
           ElseIf InStr(W_STR2, Chr$(11)) > 0 Then
              W_FW = W_STR2
              P = 0
              For I = 1 To Len(W_STR2)
                 If Mid$(W_STR2, I, 1) = Chr$(11) Then
                    P = P + 1
                 End If
              Next I
              P = P + 1
           Else
              If F > 0 And _
                 P > 1 Then
                 If W_NRML_CHK <> "" Then
                    W_NRML_CHK = W_NRML_CHK & vbTab
                 End If
                 W_NRML_CHK = W_NRML_CHK & W_STR2
                 W_FW = AR_FW3(F)
                 F = F - 1
              Else
                 NRML_CHK = W_STR2
                 Exit For
              End If
           End If
        End If
     Next P
  End If

LABEL_CHKE:

  If W_LV = 1 Then
     NRML_CHK = Application.Substitute(NRML_CHK, "~", "~~")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(1), "\")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(2), "(")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(3), ")")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(4), "[")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(5), "]")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(6), "{")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(7), "}")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(14), ".")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(15), "~*")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(16), "+")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(17), "~?")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(18), "|")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(28), "^")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(29), "$")
     
     NRML_CHK = Application.Substitute(NRML_CHK, "\\", "\")
     NRML_CHK = Application.Substitute(NRML_CHK, "\(", "(")
     NRML_CHK = Application.Substitute(NRML_CHK, "\)", ")")
     NRML_CHK = Application.Substitute(NRML_CHK, "\[", "[")
     NRML_CHK = Application.Substitute(NRML_CHK, "\]", "]")
     NRML_CHK = Application.Substitute(NRML_CHK, "\{", "{")
     NRML_CHK = Application.Substitute(NRML_CHK, "\}", "}")
     NRML_CHK = Application.Substitute(NRML_CHK, "\.", ".")
     NRML_CHK = Application.Substitute(NRML_CHK, "\*", "~*")
     NRML_CHK = Application.Substitute(NRML_CHK, "\+", "+")
     NRML_CHK = Application.Substitute(NRML_CHK, "\?", "~?")
     NRML_CHK = Application.Substitute(NRML_CHK, "\|", "|")
     NRML_CHK = Application.Substitute(NRML_CHK, "\^", "^")
     NRML_CHK = Application.Substitute(NRML_CHK, "\$", "$")
  Else
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(1), "\\")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(2), "\(")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(3), "\)")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(4), "\[")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(5), "\]")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(6), "\{")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(7), "\}")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(14), "\.")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(15), "\*")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(16), "\+")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(17), "\?")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(18), "\|")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(28), "\^")
     NRML_CHK = Application.Substitute(NRML_CHK, Chr$(29), "\$")
  End If

End Function

Sub MAKE_REIS_RTN()

  Dim NWB As Workbook
    
    
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "MakeInput"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
    
  Application.ScreenUpdating = False
    
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
    
  Set NWB = Workbooks.Add
    
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
    
  With NWB.Worksheets(1).Cells
     If SW_ENGLISH = True Then
        .Font.Name = "Courier New"
        .Font.Size = 8
     Else
        .Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
        .Font.Size = 9
     End If
  End With
    
  With NWB.Worksheets(1)
     If UserForm1.CheckBox49.Value = True Then
        .Cells(31, 1).Value = "Kind"
        .Cells(31, 2).Value = "String"
        .Cells(31, 3).Value = "Repeat (more)"
        .Cells(31, 4).Value = "Repeat (less)"
        .Cells(31, 5).Value = "Shortest"
     Else
        .Cells(31, 1).Value = "|fffd||fffd||fffd|"
        .Cells(31, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(31, 3).Value = "|fffd|J|fffd||fffd||502||fffd||fffd|i|fffd||20f||fffd|j"
        .Cells(31, 4).Value = "|fffd|J|fffd||fffd||502||fffd||fffd|i|fffd||209||fffd||fffd|j"
        .Cells(31, 5).Value = "|fffd||152|Z|fffd||fffd|v"
     End If
     .Columns(1).ColumnWidth = 20
     .Columns(2).ColumnWidth = 25
     .Columns(2).NumberFormatLocal = "@"
     .Columns(3).ColumnWidth = 15
     .Columns(4).ColumnWidth = 15
     .Columns(5).ColumnWidth = 8
     .Range(.Cells(31, 1), .Cells(31, 5)).Interior.ColorIndex = 4
    
     If UserForm1.CheckBox49.Value = True Then
        .Cells(1, 1).Value = "Pos : Start"
        .Cells(2, 1).Value = "Pos : Word bound"
        .Cells(3, 1).Value = "Pos : Not word bound"
        .Cells(4, 1).Value = "Pos : End"
        .Cells(5, 1).Value = "Any : Char"
        .Cells(6, 1).Value = "Any : Num"
        .Cells(7, 1).Value = "Any : Word char"
        .Cells(8, 1).Value = "Any : Space"
        .Cells(9, 1).Value = "Any : Not num"
        .Cells(10, 1).Value = "Any : Not word char"
        .Cells(11, 1).Value = "Any : Not space"
        .Cells(12, 1).Value = "Assign : 1 char of string"
        .Cells(13, 1).Value = "Assign : 1 char except string"
        .Cells(14, 1).Value = "Fix : 1 Char"
        .Cells(15, 1).Value = "Fix : String"
        .Cells(16, 1).Value = "Group : Start"
        .Cells(17, 1).Value = "Group : End"
        .Cells(18, 1).Value = "Group : Posi look ahead start"
        .Cells(19, 1).Value = "Group : Nega look ahead start"
        .Cells(20, 1).Value = "Select"
     Else
        .Cells(1, 1).Value = "|fffd||292|u|fffd|F|fffd||64ea|"
        .Cells(2, 1).Value = "|fffd||292|u|fffd|F|fffd|P|fffd||a2eb||fffd|E"
        .Cells(3, 1).Value = "|fffd||292|u|fffd|F|fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
        .Cells(4, 1).Value = "|fffd||292|u|fffd|F|fffd||fffd||fffd||fffd|"
        .Cells(5, 1).Value = "|fffd|C|fffd||4c1|F|fffd||fffd||fffd||fffd|"
        .Cells(6, 1).Value = "|fffd|C|fffd||4c1|F|fffd||fffd||fffd||fffd|"
        .Cells(7, 1).Value = "|fffd|C|fffd||4c1|F|fffd|P|fffd||a576||fffd||fffd|"
        .Cells(8, 1).Value = "|fffd|C|fffd||4c1|F|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
        .Cells(9, 1).Value = "|fffd|C|fffd||4c1|F|fffd||fffd||fffd||fffd||fffd||20a|O"
        .Cells(10, 1).Value = "|fffd|C|fffd||4c1|F|fffd|P|fffd||a576||fffd||fffd||fffd||20a|O"
        .Cells(11, 1).Value = "|fffd|C|fffd||4c1|F|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd||fffd||20a|O"
        .Cells(12, 1).Value = "|fffd|w|fffd||fffd|F|fffd||fffd||fffd||fffd||fffd||52182|P|fffd||fffd||fffd||fffd|"
        .Cells(13, 1).Value = "|fffd|w|fffd||fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||20a|O|fffd|P|fffd||fffd||fffd||fffd|"
        .Cells(14, 1).Value = "|fffd||152||fffd|F|fffd|P|fffd||fffd||fffd||fffd|"
        .Cells(15, 1).Value = "|fffd||152||fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(16, 1).Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd|F|fffd|J|fffd|n"
        .Cells(17, 1).Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd|F|fffd|I|fffd||fffd|"
        .Cells(18, 1).Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd|F|fffd|m|fffd||fffd||fffd||1c2||74a|J|fffd|n"
        .Cells(19, 1).Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd|F|fffd||6d2||fffd||fffd||1c2||74a|J|fffd|n"
        .Cells(20, 1).Value = "|fffd|I|fffd||fffd|"
     End If
    
     .Cells(1, 2).Value = "A1"
     .Cells(2, 2).Value = "A2"
     .Cells(3, 2).Value = "A3"
     .Cells(4, 2).Value = "A4"
     .Cells(5, 2).Value = "B1"
     .Cells(6, 2).Value = "B2"
     .Cells(7, 2).Value = "B3"
     .Cells(8, 2).Value = "B4"
     .Cells(9, 2).Value = "B5"
     .Cells(10, 2).Value = "B6"
     .Cells(11, 2).Value = "B7"
     .Cells(12, 2).Value = "C1"
     .Cells(13, 2).Value = "C2"
     .Cells(14, 2).Value = "D1"
     .Cells(15, 2).Value = "D2"
     .Cells(16, 2).Value = "E1"
     .Cells(17, 2).Value = "E2"
     .Cells(18, 2).Value = "E3"
     .Cells(19, 2).Value = "E4"
     .Cells(20, 2).Value = "F1"
    
     .Cells(1, 3).Value = 0
     .Cells(2, 3).Value = 0
     .Cells(3, 3).Value = 0
     .Cells(4, 3).Value = 0
     .Cells(5, 3).Value = 0
     .Cells(6, 3).Value = 0
     .Cells(7, 3).Value = 0
     .Cells(8, 3).Value = 0
     .Cells(9, 3).Value = 0
     .Cells(10, 3).Value = 0
     .Cells(11, 3).Value = 0
     .Cells(12, 3).Value = 1
     .Cells(13, 3).Value = 1
     .Cells(14, 3).Value = 1
     .Cells(15, 3).Value = 1
     .Cells(16, 3).Value = 0
     .Cells(17, 3).Value = 0
     .Cells(18, 3).Value = 0
     .Cells(19, 3).Value = 0
     .Cells(20, 3).Value = 0
    
     .Cells(1, 4).Value = 0
     .Cells(2, 4).Value = 0
     .Cells(3, 4).Value = 0
     .Cells(4, 4).Value = 0
     .Cells(5, 4).Value = 1
     .Cells(6, 4).Value = 1
     .Cells(7, 4).Value = 1
     .Cells(8, 4).Value = 1
     .Cells(9, 4).Value = 1
     .Cells(10, 4).Value = 1
     .Cells(11, 4).Value = 1
     .Cells(12, 4).Value = 1
     .Cells(13, 4).Value = 1
     .Cells(14, 4).Value = 1
     .Cells(15, 4).Value = 0
     .Cells(16, 4).Value = 0
     .Cells(17, 4).Value = 1
     .Cells(18, 4).Value = 0
     .Cells(19, 4).Value = 0
     .Cells(20, 4).Value = 0
    
     If UserForm1.CheckBox49.Value = True Then
        .Cells(1, 5).Value = "On"
     Else
        .Cells(1, 5).Value = "|fffd|I|fffd||fffd|"
     End If
    
     .Range(.Rows(1), .Rows(30)).Hidden = True
    
     .Range(.Cells(32, 1), .Cells(32, 1).End(xlDown)).Select
      With Selection.Validation
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$A$1:$A$20"
        .IgnoreBlank = True
        .InCellDropdown = True
        .IMEMode = xlIMEModeNoControl
        .ShowInput = True
        .ShowError = True
     End With

     .Range(.Cells(32, 3), .Cells(32, 3).End(xlDown)).Select
      With Selection.Validation
        .Add Type:=xlValidateWholeNumber, AlertStyle:=xlValidAlertStop, Operator:=xlGreaterEqual, Formula1:="0"
        .IgnoreBlank = True
        .InCellDropdown = True
        .IMEMode = xlIMEModeNoControl
        .ShowInput = True
        .ShowError = True
     End With

     .Range(.Cells(32, 4), .Cells(32, 4).End(xlDown)).Select
      With Selection.Validation
        .Add Type:=xlValidateWholeNumber, AlertStyle:=xlValidAlertStop, Operator:=xlGreaterEqual, Formula1:="1"
        .IgnoreBlank = True
        .InCellDropdown = True
        .IMEMode = xlIMEModeNoControl
        .ShowInput = True
        .ShowError = True
     End With

     .Range(.Cells(32, 5), .Cells(32, 5).End(xlDown)).Select
     With Selection.Validation
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$E$1:$E$1"
        .IgnoreBlank = True
        .InCellDropdown = True
        .IMEMode = xlIMEModeNoControl
        .ShowInput = True
        .ShowError = True
     End With
    
     .Range(.Cells(32, 2), .Cells(32, 2).End(xlDown)).Select
     With Selection
        .FormatConditions.Add Type:=xlExpression, Formula1:="=AND(NOT(ISBLANK($A32)),VLOOKUP($A32,$A$1:$D$20,3,0)=0)"
        .FormatConditions(1).Interior.ColorIndex = 15
        .FormatConditions.Add Type:=xlExpression, Formula1:="=AND(NOT(ISBLANK($A32)),VLOOKUP($A32,$A$1:$D$20,3,0)=1)"
        .FormatConditions(2).Interior.ColorIndex = 36
     End With

     .Range(.Cells(32, 3), .Cells(32, 5).End(xlDown)).Select
     With Selection
        .FormatConditions.Add Type:=xlExpression, Formula1:="=AND(NOT(ISBLANK($A32)),VLOOKUP($A32,$A$1:$D$20,4,0)=0)"
        .FormatConditions(1).Interior.ColorIndex = 15
        .FormatConditions.Add Type:=xlExpression, Formula1:="=AND(NOT(ISBLANK($A32)),VLOOKUP($A32,$A$1:$D$20,4,0)=1)"
        .FormatConditions(2).Interior.ColorIndex = 36
     End With

     .Names.Add Name:="RE_Input_Sheet", RefersToR1C1:="=" & .Name
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If

  Application.ScreenUpdating = True
  NWB.Worksheets(1).Cells(32, 1).Select
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub READ_REIS_RTN()

  Dim W_NAME1 As String
  Dim R As Long
  Dim LASTR As Long
  Dim R2 As Long
  Dim W_RESTR As String
  Dim W_STR As String
  Dim W_STR2 As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "ReadInput"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
     
  W_NAME1 = ""
  On Error Resume Next
  W_NAME1 = ActiveSheet.Names(1).Name
  On Error GoTo LABEL_REP
  If W_NAME1 <> ActiveSheet.Name & "!RE_Input_Sheet" Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Active sheet isn't regex input sheet", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||742||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  LASTR = Cells(Rows.count, 1).End(xlUp).Row
  On Error Resume Next
  If Cells(Rows.count, 1).Value2 = "" And _
     Cells(Rows.count, 1).HasFormula = False Then
  Else
     LASTR = Rows.count
  End If
  On Error GoTo LABEL_REP
  
  W_RESTR = ""
  
  For R = 32 To LASTR
     If Cells(R, 1).Value <> "" Then
        For R2 = 1 To 20
           If Cells(R2, 1).Value = Cells(R, 1).Value Then
              If Cells(R2, 3).Value = 1 Then
                 If Cells(R, 2).Value = "" Then
                    GoTo L_NEXT
                 End If
                 If Cells(R2, 2).Value = "D1" Then
                    W_STR2 = Left$(Cells(R, 2).Value, 1)
                 Else
                    W_STR2 = Cells(R, 2).Value
                 End If
                 W_STR2 = Application.Substitute(W_STR2, "?", Chr$(1) & "?")
                 W_STR2 = Application.Substitute(W_STR2, "*", Chr$(1) & "*")
                 W_STR2 = Application.Substitute(W_STR2, "+", Chr$(1) & "+")
                 W_STR2 = Application.Substitute(W_STR2, ".", Chr$(1) & ".")
                 W_STR2 = Application.Substitute(W_STR2, "{", Chr$(1) & "{")
                 W_STR2 = Application.Substitute(W_STR2, "}", Chr$(1) & "}")
                 W_STR2 = Application.Substitute(W_STR2, "\", Chr$(1) & "\")
                 W_STR2 = Application.Substitute(W_STR2, "[", Chr$(1) & "[")
                 W_STR2 = Application.Substitute(W_STR2, "]", Chr$(1) & "]")
                 W_STR2 = Application.Substitute(W_STR2, "^", Chr$(1) & "^")
                 W_STR2 = Application.Substitute(W_STR2, "$", Chr$(1) & "$")
                 W_STR2 = Application.Substitute(W_STR2, Chr$(1), "\")
              End If
              
              Select Case Left$(Cells(R2, 2).Value, 1)
              Case "A"
                 Select Case Cells(R2, 2).Value
                 Case "A1"
                    W_STR = "^"
                 Case "A2"
                    W_STR = "\b"
                 Case "A3"
                    W_STR = "\B"
                 Case "A4"
                    W_STR = "$"
                 End Select
                 W_RESTR = W_RESTR & W_STR
              Case "B"
                 Select Case Cells(R2, 2).Value
                 Case "B1"
                    W_STR = "."
                 Case "B2"
                    W_STR = "\d"
                 Case "B3"
                    W_STR = "\w"
                 Case "B4"
                    W_STR = "\s"
                 Case "B5"
                    W_STR = "\D"
                 Case "B6"
                    W_STR = "\W"
                 Case "B7"
                    W_STR = "\S"
                 End Select
                 W_RESTR = W_RESTR & W_STR
              Case "C"
                 Select Case Cells(R2, 2).Value
                 Case "C1"
                    W_STR = "["
                 Case "C2"
                    W_STR = "[^"
                 End Select
                 W_STR = W_STR & W_STR2 & "]"
                 W_RESTR = W_RESTR & W_STR
              Case "D"
                 W_STR = W_STR2
                 W_RESTR = W_RESTR & W_STR2
              Case "E"
                 Select Case Cells(R2, 2).Value
                 Case "E1"
                    W_STR = "("
                 Case "E2"
                    W_STR = ")"
                 Case "E3"
                    W_STR = "(?="
                 Case "E4"
                    W_STR = "?!"
                 End Select
                 W_RESTR = W_RESTR & W_STR
              Case "F"
                 Select Case Cells(R2, 2).Value
                 Case "F1"
                    W_STR = "|"
                 End Select
                 W_RESTR = W_RESTR & W_STR
              End Select
           
              If Cells(R2, 4).Value = 1 Then
                 If Cells(R, 3).Value <> "" Then
                    If Cells(R, 4).Value = "" Then
                       Select Case Cells(R, 3).Value
                       Case 0
                          W_STR = "*"
                       Case 1
                          W_STR = "+"
                       Case Else
                          W_STR = "{" & Cells(R, 3).Value & ",}"
                       End Select
                    Else
                       If Cells(R, 3).Value = Cells(R, 4).Value Then
                          W_STR = "{" & Cells(R, 3).Value & "}"
                       Else
                          W_STR = "{" & Cells(R, 3).Value & "," & Cells(R, 4).Value & "}"
                       End If
                    End If
                    W_RESTR = W_RESTR & W_STR
                 End If
                 If Cells(R, 5).Value <> "" Then
                    If Cells(R, 3).Value <> Cells(R, 4).Value Then
                       W_RESTR = W_RESTR & "?"
                    End If
                 End If
              End If
           End If
        Next R2
     End If
  
L_NEXT:
  Next R
  
  If W_RESTR <> "" Then
     UserForm1.ComboBox1.Value = W_RESTR
  End If
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub


LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub SETTING_DFT()

  Dim I As Long

  If RPDIC Is Nothing Then
     Set RPDIC = CreateObject("Scripting.Dictionary")
  End If
  
  W_NAME = Left$(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
  W_INI = ThisWorkbook.path & "\" & W_NAME & ".ini"
  SW_ALLSHP = True
  SW_COMONLY = False
  SW_NOTCOM = False
  SW_SHTNM = True
  SW_LHD = False
  SW_CHD = False
  SW_RHD = False
  SW_LFT = False
  SW_CFT = False
  SW_RFT = False
  SW_DRAT = True
  SW_DRRW = False
  SW_DRCL = False
  SW_SACE = True
  SW_SARW = False
  SW_SACL = False
  SW_SCALL = True
  SW_SCBK = False
  SW_SCSHT = False
  SW_TRGTNM = True
  SW_TRGTRT = False
  SW_MINIW = True
  SW_MINIW2 = True
  SW_SMPL = False
  SW_SMPN = True
  SW_SMPP = False
  SW_SMPA = False
  SW_FLDD = True
  SW_FLDR = False
  SW_FLDU = False
  SW_FLDL = False
  SW_FLIC = True
  SW_FLDC = False
  SW_GHO = True
  SW_GHL = True
  SW_HSGREP = True
  SW_INCSA = True
  SW_AFS = True
  SW_GFS = False
  SW_GOAR = False
  
  If Val(Application.Version) >= 15 Then
     SW_BAR = False
  Else
     SW_BAR = False
  End If
  W_BAR15T = 0
  W_BAR15L = 0
     
  W_FNDCLR = &HFF&
  W_FNDTAG = 3
  W_DCCLR = &H80000012
  W_DCTAG = 0
  W_DCCLR2 = &H80000012
  W_DCTAG2 = 0
  W_BGCLR = &H8000000F
  W_BGCLRL = "1"
  W_BGCLRT = 0
  W_FGCLR = &H8000000F
  W_FGTAG = 0
  
  SW_SDSJIS = True
  SW_SDUTF8 = False
  SW_SDCRLF = True
  SW_SDCR = False
  SW_SDLF = False
  W_SDST = 0
  W_SDED = 0
  W_SDTC = 4
  SW_SDIS = True
  SW_SDTR = False
  SW_SDCC = False
  W_DF1STCLR = &HFFFF&
  W_DF1STTAG = 6
  W_DF2NDCLR = &HFFFF00
  W_DF2NDTAG = 8
  W_DFNOLCLR = &HC0C0C0
  W_DFNOLTAG = 15
  W_DFINLCLR = &HFF&
  W_DFINLTAG = 3
  
  SW_STOPBGF = True
  SW_STOPBGF2 = True
  SW_STOPBGIU = True
  
  SW_UPDOWN = False
  
  W_HIS = 0
  W_FNDCLR = &H0&
  W_FNDTAG = 0
  
  SW_CLASSIC = False
  
  Call TAB_DEFAULT
  For I = 1 To UBound(AR_PAGES)
     AR_PAGES(I) = True
  Next

  If Dir(W_INI) <> "" Then
     Call INI_READ_RTN
     If TAB_CHK = False Then
        Call TAB_DEFAULT
     End If
  End If

End Sub

Sub CB_DEL()

  On Error Resume Next
  Application.CommandBars("EREPU1").Delete
  Application.CommandBars("EREPU2").Delete
  Application.CommandBars("EREPU3").Delete
  Application.CommandBars("EREPU4").Delete
  Application.CommandBars("EREPU5").Delete
  Application.CommandBars("EREPU6").Delete
  Application.CommandBars("EREPU7").Delete
  Application.CommandBars("EREPU8").Delete
  Application.CommandBars("EREPU9").Delete
  Application.CommandBars("EREPU10").Delete
  Application.CommandBars("EREPU11").Delete
  Application.CommandBars("EREPU12").Delete
  Application.CommandBars("EREPU13").Delete
  Application.CommandBars("EREPU14").Delete
  Application.CommandBars("EREPU99").Delete
  On Error GoTo 0

End Sub

Sub CELL_REP_ALL()

  Call UserForm1.CommandButton5_Click1

End Sub

Sub CELL_REP_SIM()

  Call UserForm1.CommandButton5_Click2

End Sub

Sub SHAPE_REP_ALL()

  Call UserForm1.CommandButton25_Click1

End Sub

Sub SHAPE_REP_SIM()

  Call UserForm1.CommandButton25_Click2

End Sub

Function CELL_CNT(RNG As Range) As Variant

  CELL_CNT = 0
  
  If Val(Application.Version) >= 12 Then         'Excel2007|fffd||20f||fffd|
     CELL_CNT = CELL_CNT2007(RNG)
  Else
     CELL_CNT = RNG.Cells.count
  End If

End Function

Sub MM_COM(W_CNTRL As Object)
  
  Dim C As Control
  Dim CB As CommandButton
  Dim TB As ToggleButton
  Dim P As Object
  Dim W_LABEL As Object
  
  If W_CNTRLNM = W_CNTRL.Name Then
     Exit Sub
  Else
     W_CNTRLNM = W_CNTRL.Name
  End If
  
  Set P = Nothing
  On Error Resume Next
  Set P = W_CNTRL.Parent
  On Error GoTo 0
  If P Is Nothing Then
     Set P = W_CNTRL
  End If
  
  For Each C In P.Controls
     Set CB = Nothing
     Set TB = Nothing
     
     On Error Resume Next
     Set CB = C
     Set TB = C
     On Error GoTo 0
     
     If Not CB Is Nothing Then
        C.BackColor = &H8000000F
     ElseIf Not TB Is Nothing Then
        C.BackColor = &H8000000F
     End If
  
     Set CB = Nothing
     Set TB = Nothing
  Next

  Set W_LABEL = Nothing
  On Error Resume Next
  Set W_LABEL = P.Controls(W_FCLBL)
  On Error GoTo 0
  If Not W_LABEL Is Nothing Then
     If W_LABEL.Parent.Name = W_PNAME Then
        W_LABEL.Visible = False
     End If
  End If
  Set W_LABEL = Nothing

  Set CB = Nothing
  Set TB = Nothing
  
  On Error Resume Next
  Set CB = W_CNTRL
  Set TB = W_CNTRL
  On Error GoTo 0
  
  If Not CB Is Nothing Then
     CB.BackColor = RGB(252, 220, 236)
  ElseIf Not TB Is Nothing Then
     TB.BackColor = RGB(252, 220, 236)
  ElseIf TypeName(W_CNTRL) = "CheckBox" Then
      On Error Resume Next
      W_PNAME = P.Name
      On Error GoTo 0
      W_FCLBL = W_CNTRL.Tag
      Set W_LABEL = Nothing
      On Error Resume Next
      Set W_LABEL = P.Controls(W_FCLBL)
      On Error GoTo 0
      If Not W_LABEL Is Nothing Then
         W_LABEL.Top = W_CNTRL.Top + 1
         W_LABEL.Left = W_CNTRL.Left - 1
         W_LABEL.Visible = True
      End If
      Set W_LABEL = Nothing
  ElseIf TypeName(W_CNTRL) = "OptionButton" Then
      On Error Resume Next
      W_PNAME = P.Name
      On Error GoTo 0
      W_FCLBL = W_CNTRL.Tag
      Set W_LABEL = Nothing
      On Error Resume Next
      Set W_LABEL = P.Controls(W_FCLBL)
      On Error GoTo 0
      If Not W_LABEL Is Nothing Then
         W_LABEL.Top = W_CNTRL.Top
         W_LABEL.Left = W_CNTRL.Left
         W_LABEL.Visible = True
      End If
      Set W_LABEL = Nothing
  End If

  Set CB = Nothing
  Set TB = Nothing

End Sub

Function SWING_CNV(ByVal W_KEYWD As String) As String

  Dim W_KEYWD2 As String


  SWING_CNV = ""
  
  W_KEYWD2 = SWING_CNV_E2(W_KEYWD)
  
  If SW_ENGLISH = False Then
     W_KEYWD2 = SWING_CNV_J(W_KEYWD2)
  End If

  SWING_CNV = W_KEYWD2

End Function

Function SWING_CHK(ByVal W_KEYWD As String) As String

  Dim W_KEYWD2 As String
  Dim ASH As Worksheet
  Dim RE9 As Object
  Dim C As Object
  Dim W_STR As String
  Dim MATCHES As Object
  Dim I As Long


  SWING_CHK = ""
  
  W_KEYWD2 = SWING_CNV_E(W_KEYWD)
  
  If SW_ENGLISH = False And _
     W_KEYWD2 = W_KEYWD Then
     W_KEYWD2 = SWING_CNV_J(W_KEYWD2)
  End If

  If W_KEYWD2 = W_KEYWD Then
     Exit Function
  End If

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .Pattern = W_KEYWD2
     .IgnoreCase = True
     .Global = True
  End With
  
  For Each C In ActiveSheet.UsedRange
     On Error Resume Next
     W_STR = C.Formula
     On Error GoTo 0
     If W_STR = "" Then
        On Error Resume Next
        W_STR = C.Value
        On Error GoTo 0
     End If
     If W_STR <> "" Then
        If RE9.Test(W_STR) = True Then
           Set MATCHES = RE9.Execute(W_STR)
           For I = 0 To MATCHES.count - 1
              If MATCHES.Item(I) <> W_KEYWD Then
                 If InStr(SWING_CHK, MATCHES.Item(I)) = 0 Then
                    SWING_CHK = SWING_CHK & MATCHES.Item(I) & vbTab
                 End If
              End If
           Next I
           Set MATCHES = Nothing
        End If
     End If
  Next

  Set RE9 = Nothing
  
  If SWING_CHK <> "" Then
     SWING_CHK = Left$(SWING_CHK, Len(SWING_CHK) - 1)
  End If

End Function

Private Function SWING_CNV_E(ByVal W_KEYWD As String) As String

  Dim RE9 As Object


  SWING_CNV_E = W_KEYWD

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = True
     .Global = True
  End With

  RE9.Pattern = "[!" & Chr$(34) & "#$%&'()=~|\-^\\`{@[+*};:\]<>?_,./ ]+"
  If RE9.Test(W_KEYWD) = True Then
     SWING_CNV_E = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If

  Set RE9 = Nothing

End Function

Private Function SWING_CNV_E2(ByVal W_KEYWD As String) As String

  Dim RE9 As Object


  SWING_CNV_E2 = W_KEYWD

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = True
     .Global = True
  End With

  RE9.Pattern = "(er|re)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  RE9.Pattern = "(or|our)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  RE9.Pattern = "(ize|ise)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  RE9.Pattern = "(yze|yse)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  RE9.Pattern = "(ense|ence)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  RE9.Pattern = "(og|ogue)"
  If RE9.Test(W_KEYWD) = True Then
     W_KEYWD = RE9.Replace(W_KEYWD, RE9.Pattern)
  End If
  
  Set RE9 = Nothing

  SWING_CNV_E2 = W_KEYWD

End Function

Private Function SWING_CNV_J(ByVal W_KEYWD As String) As String

  Dim W_STR As String
  Dim AR_STR1() As String
  Dim AR_STR2() As String
  Dim I As Long
  Dim W_MAXI As Long
  Dim W_CH1 As String
  Dim AR_CH() As String
  Dim J As Long
  Dim RE9 As Object


  SWING_CNV_J = W_KEYWD
  W_STR = W_KEYWD

  W_STR = Application.Substitute(W_STR, "\", Chr$(1))
  W_STR = Application.Substitute(W_STR, "(", Chr$(2))
  W_STR = Application.Substitute(W_STR, ")", Chr$(3))
  W_STR = Application.Substitute(W_STR, "[", Chr$(4))
  W_STR = Application.Substitute(W_STR, "]", Chr$(5))
  W_STR = Application.Substitute(W_STR, "{", Chr$(6))
  W_STR = Application.Substitute(W_STR, "}", Chr$(7))
  W_STR = Application.Substitute(W_STR, ".", Chr$(14))
  W_STR = Application.Substitute(W_STR, "*", Chr$(15))
  W_STR = Application.Substitute(W_STR, "+", Chr$(16))
  W_STR = Application.Substitute(W_STR, "?", Chr$(17))
  W_STR = Application.Substitute(W_STR, "|", Chr$(18))
  W_STR = Application.Substitute(W_STR, "^", Chr$(28))
  W_STR = Application.Substitute(W_STR, "$", Chr$(29))
  W_STR = Application.Substitute(W_STR, "-", Chr$(11))
  W_STR = Application.Substitute(W_STR, "!", Chr$(31))

  W_STR = StrConv(W_STR, vbKatakana)
  W_STR = StrConv(W_STR, vbWide)

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = True
     .Global = True
  End With
  
  RE9.Pattern = "([|fffd|G|fffd|P|fffd|Z|fffd|e|fffd|l|fffd|w|fffd||fffd||fffd||fffd||fffd|Q|fffd|[|fffd|f|fffd|x|fffd|y])[|fffd|C|fffd|[]"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, "$1[|fffd|C|fffd|[]")
  End If

  RE9.Pattern = "([|fffd|I|fffd|R|fffd|\|fffd|g|fffd|m|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|S|fffd|]|fffd|h|fffd|{|fffd||])[|fffd|E|fffd|[]"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, "$1[|fffd|E|fffd|[]")
  End If
  
  RE9.Pattern = "(|fffd|o||fffd||fffd||fffd|@)"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, RE9.Pattern)
  End If
  
  RE9.Pattern = "(|fffd|r||fffd||fffd||fffd|B)"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, RE9.Pattern)
  End If
  
  RE9.Pattern = "(|fffd|x||fffd||fffd||fffd|F)"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, RE9.Pattern)
  End If
  
  RE9.Pattern = "(|fffd|{||fffd||fffd||fffd|H)"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, RE9.Pattern)
  End If
  
  RE9.Pattern = "(|fffd|u||fffd||fffd|(?![|fffd|@|fffd|B|fffd|F|fffd|H]))"
  If RE9.Test(W_STR) = True Then
     W_STR = RE9.Replace(W_STR, "(|fffd|u||fffd||fffd|)")
  End If
  
  ReDim AR_STR1(Len(W_STR))
  ReDim AR_STR2(Len(W_STR))
  For I = 1 To Len(W_STR)
     AR_STR1(I) = Mid$(W_STR, I, 1)
  Next I
  
  W_MAXI = Len(W_STR)
  
  For I = 1 To W_MAXI
     W_CH1 = AR_STR1(I)
     J = 1
     ReDim AR_CH(J)
     AR_CH(J) = W_CH1
     
     If W_CH1 <> StrConv(W_CH1, vbNarrow) Then
        J = J + 1
        ReDim Preserve AR_CH(J)
        AR_CH(J) = StrConv(W_CH1, vbNarrow)
     End If
  
     If W_CH1 <> StrConv(W_CH1, vbHiragana) Then
        J = J + 1
        ReDim Preserve AR_CH(J)
        AR_CH(J) = StrConv(W_CH1, vbHiragana)
     End If
  
     RE9.Pattern = "[|fffd|A|fffd|C|fffd|E|fffd|G|fffd|I|fffd|@|fffd|B|fffd|D|fffd|F|fffd|H|fffd|c|fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]"
     If RE9.Test(W_CH1) = True Then
        J = J + 1
        ReDim Preserve AR_CH(J)
        Select Case W_CH1
        Case "|fffd|A"
           AR_CH(J) = "|fffd|@"
        Case "|fffd|C"
           AR_CH(J) = "|fffd|B"
        Case "|fffd|E"
           AR_CH(J) = "|fffd|D"
        Case "|fffd|G"
           AR_CH(J) = "|fffd|F"
        Case "|fffd|I"
           AR_CH(J) = "|fffd|H"
        Case "|fffd|@"
           AR_CH(J) = "|fffd|A"
        Case "|fffd|B"
           AR_CH(J) = "|fffd|C"
        Case "|fffd|D"
           AR_CH(J) = "|fffd|E"
        Case "|fffd|F"
           AR_CH(J) = "|fffd|G"
        Case "|fffd|H"
           AR_CH(J) = "|fffd|I"
        Case "|fffd|c"
           AR_CH(J) = "|fffd|b"
        Case "|fffd|b"
           AR_CH(J) = "|fffd|c"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        Case "|fffd||fffd|"
           AR_CH(J) = "|fffd||fffd|"
        End Select
        J = J + 1
        ReDim Preserve AR_CH(J)
        AR_CH(J) = StrConv(AR_CH(J - 1), vbNarrow)
        J = J + 1
        ReDim Preserve AR_CH(J)
        AR_CH(J) = StrConv(AR_CH(J - 2), vbHiragana)
     End If
     
     If J = 1 Then
        AR_STR2(I) = AR_CH(1)
     Else
        AR_STR2(I) = Join$(AR_CH, "|")
        AR_STR2(I) = "(" & AR_STR2(I) & ")"
     End If
  Next I
  
  Set RE9 = Nothing
  
  W_STR = Join$(AR_STR2, "")
  
  W_STR = Application.Substitute(W_STR, Chr$(1), "\")
  W_STR = Application.Substitute(W_STR, Chr$(2), "(")
  W_STR = Application.Substitute(W_STR, Chr$(3), ")")
  W_STR = Application.Substitute(W_STR, Chr$(4), "[")
  W_STR = Application.Substitute(W_STR, Chr$(5), "]")
  W_STR = Application.Substitute(W_STR, Chr$(6), "{")
  W_STR = Application.Substitute(W_STR, Chr$(7), "}")
  W_STR = Application.Substitute(W_STR, Chr$(14), ".")
  W_STR = Application.Substitute(W_STR, Chr$(15), "*")
  W_STR = Application.Substitute(W_STR, Chr$(16), "+")
  W_STR = Application.Substitute(W_STR, Chr$(17), "?")
  W_STR = Application.Substitute(W_STR, Chr$(18), "|")
  W_STR = Application.Substitute(W_STR, Chr$(28), "^")
  W_STR = Application.Substitute(W_STR, Chr$(29), "$")
  W_STR = Application.Substitute(W_STR, Chr$(11), "-")
  W_STR = Application.Substitute(W_STR, Chr$(31), "!")
  
  SWING_CNV_J = W_STR

End Function

Function CNV_FLNM(ByVal W_FLNM As String) As String

  CNV_FLNM = Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 2, 4) & "/" & _
             Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 6, 2) & "/" & _
             Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 8, 2) & " " & _
             Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 11, 2) & ":" & _
             Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 13, 2) & ":" & _
             Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 15, 2)
  Select Case Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 18, 1)
  Case "M"
     CNV_FLNM = CNV_FLNM & " -"
  Case "N"
     CNV_FLNM = CNV_FLNM & "  "
  Case "P"
     CNV_FLNM = CNV_FLNM & " +"
  End Select

End Function

Function GET_2NDXL() As Object

  Dim guid(0 To 3) As Long
  Dim acc As Object

#If Win64 Then
  Dim hwnd As LongPtr
  Dim hWnd2 As LongPtr
  Dim hWnd3 As LongPtr
#Else
  Dim hwnd As Long
  Dim hWnd2 As Long
  Dim hWnd3 As Long
#End If
  
  Dim GEI As Collection
  Dim SW_HIT As Boolean
  Dim G As Variant
  Dim I As Long
  Dim APP As Object
  Dim WB As Workbook
  Dim APPBK As Object
  

  Set GET_2NDXL = Nothing
  
  guid(0) = &H20400
  guid(1) = &H0
  guid(2) = &HC0
  guid(3) = &H46000000

  Set GEI = New Collection
  
  Do
     hwnd = FindWindowExA(0, hwnd, "XLMAIN", vbNullString)
'''     If hwnd = 0 Then
'''        Exit Do
'''     End If
     hWnd2 = FindWindowExA(hwnd, 0, "XLDESK", vbNullString)
     hWnd3 = FindWindowExA(hWnd2, 0, "EXCEL7", vbNullString)
     If AccessibleObjectFromWindow(hWnd3, &HFFFFFFF0, guid(0), acc) = 0 Then
        SW_HIT = False
        Set APP = Nothing
        On Error Resume Next
        Set APP = acc.Application
        On Error GoTo 0
        If APP Is Nothing Then
        Else
           For Each G In GEI
              If G Is APP Then
                 SW_HIT = True
                 Exit For
              End If
           Next
           If SW_HIT = False Then
              GEI.Add APP
              Set APPBK = APP
              For I = 1 To APPBK.Workbooks.count
                 Set WB = Nothing
                 On Error Resume Next
                 Set WB = APPBK.Workbooks(I)
                 On Error GoTo 0
                 If WB Is Nothing Then
                 Else
                    If WB.Name = W_FRBS Then
                       Set GET_2NDXL = APPBK
                       Exit For
                    End If
                 End If
              Next I
              Set WB = Nothing
              Set APPBK = Nothing
              If GET_2NDXL Is Nothing Then
              Else
                 Set APP = Nothing
                 Set acc = Nothing
                 Exit Do
              End If
           End If
           Set APP = Nothing
           Set acc = Nothing
        End If
     End If
  Loop

  Set GEI = Nothing

End Function

Function COMP_LINE_RATE(W_LTEXT As String, W_RTEXT As String, ByVal LS As Long, ByVal LE As Long, ByVal RS As Long, ByVal RE As Long, ByVal AN As Long) As Long

  Dim LI As Long
  Dim RI As Long
  Dim A As Long
  Dim A_MAX As Long
  Dim LI_BK As Long
  Dim RI_BK As Long
  Dim W_CNT As Long
  Dim I As Long
  
  
  A_MAX = 0
  
  For LI = LS To LE
     If LE + 1 - LI < A_MAX Then
        Exit For
     End If
     
     If Mid$(W_LTEXT, LI, 1) = " " Or _
        Mid$(W_LTEXT, LI, 1) = ChrW(&H3000) Then
     ElseIf InStr(RS, W_RTEXT, Mid$(W_LTEXT, LI, AN)) > 0 Then
        RI = InStr(RS, W_RTEXT, Mid$(W_LTEXT, LI, AN))
        If RI <= RE Then
           For A = 1 To Len(W_LTEXT) - LI + 1
              If Mid$(W_RTEXT, RI + A, 1) = Mid$(W_LTEXT, LI + A, 1) Then
              Else
                 Exit For
              End If
           Next A
                     
           If A >= AN Then
              If A_MAX < A Then
                 A_MAX = A
                 LI_BK = LI
                 RI_BK = RI
              End If
           End If
        
           LI = LI + A - 1
        End If
     End If
  Next LI
           
  If A_MAX >= AN Then
     Mid$(W_LTEXT, LI_BK, A_MAX) = String$(A_MAX, " ")
     Mid$(W_RTEXT, RI_BK, A_MAX) = String$(A_MAX, " ")
     W_CNT = COMP_LINE_RATE(W_LTEXT, W_RTEXT, LS, LI_BK - 1, RS, RI_BK - 1, AN)
     W_CNT = COMP_LINE_RATE(W_LTEXT, W_RTEXT, LI_BK, LE, RI_BK, RE, AN)
  ElseIf AN > 1 Then
     AN = 1
     W_CNT = COMP_LINE_RATE(W_LTEXT, W_RTEXT, LS, LE, RS, RE, AN)
  End If

  W_CNT = 0
  For I = 1 To Len(W_LTEXT)
     If Mid$(W_LTEXT, I, 1) = " " Then
        W_CNT = W_CNT + 1
     End If
  Next I
  
  COMP_LINE_RATE = Int(W_CNT * 100 / Len(W_LTEXT))

End Function

Function RE_CNV(ByVal W_STR As String) As String

  Dim W_BEFSTR As String
  Dim AR_BEFSTR As Variant
  Dim I As Long
  Dim AR_WK As Variant


  RE_CNV = ""

  W_BEFSTR = Application.Substitute(W_STR, "|fffd|@", " ")
  
  AR_WK = Split(W_BEFSTR, " OR ", , vbTextCompare)
  If UBound(AR_WK) > 0 Then
     If CNT_P(AR_WK(0), "L") = 0 Or _
        CNT_P(AR_WK(UBound(AR_WK)), "R") = 0 Then
        W_BEFSTR = "(" & W_BEFSTR & ")"
     End If
  End If
  
  W_BEFSTR = Application.Substitute(W_BEFSTR, "(", " ( ")
  W_BEFSTR = Application.Substitute(W_BEFSTR, ")", " ) ")
  W_BEFSTR = Replace(W_BEFSTR, "OR", " | ", , , vbTextCompare)
  
  W_BEFSTR = Application.Substitute(W_BEFSTR, "?", Chr$(1) & "?")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "*", Chr$(1) & "*")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "+", Chr$(1) & "+")
  W_BEFSTR = Application.Substitute(W_BEFSTR, ".", Chr$(1) & ".")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "{", Chr$(1) & "{")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "}", Chr$(1) & "}")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "\", Chr$(1) & "\")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "[", Chr$(1) & "[")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "]", Chr$(1) & "]")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "^", Chr$(1) & "^")
  W_BEFSTR = Application.Substitute(W_BEFSTR, "$", Chr$(1) & "$")
  W_BEFSTR = Application.Substitute(W_BEFSTR, Chr$(1), "\")
  
  AR_BEFSTR = Split(W_BEFSTR, " ")

  For I = 0 To UBound(AR_BEFSTR)
     If AR_BEFSTR(I) = "" Or _
        AR_BEFSTR(I) = "(" Or _
        AR_BEFSTR(I) = "|" Or _
        AR_BEFSTR(I) = ")" Then
     Else
        If Len(AR_BEFSTR(I)) > 1 Then
           If Left$(AR_BEFSTR(I), 1) = "-" Then
              AR_BEFSTR(I) = "(?!.*" & Right$(AR_BEFSTR(I), Len(AR_BEFSTR(I)) - 1) & ")"
           Else
              AR_BEFSTR(I) = "(?=.*" & AR_BEFSTR(I) & ")"
           End If
        Else
           AR_BEFSTR(I) = "(?=.*" & AR_BEFSTR(I) & ")"
        End If
     End If
  Next I

  RE_CNV = "^" & Join(AR_BEFSTR, "")

End Function

Function CNT_P(ByVal W_STR As String, ByVal SW_LR As String)

  Dim W_LPCNT As Long
  Dim W_RPCNT As Long
  Dim I As Long
  

  CNT_P = 0

  W_LPCNT = 0
  W_RPCNT = 0
  
  For I = 1 To Len(W_STR)
     If Mid$(W_STR, I, 1) = "(" Then
        W_LPCNT = W_LPCNT + 1
     End If
     If Mid$(W_STR, I, 1) = ")" Then
        W_RPCNT = W_RPCNT + 1
     End If
  Next I

  If SW_LR = "L" Then
     CNT_P = W_LPCNT - W_RPCNT
  Else
     CNT_P = W_RPCNT - W_LPCNT
  End If

End Function

Sub FONT_CHG1_1()

  UserForm1.MultiPage1.Font.Name = "Segoe UI"
  UserForm1.MultiPage3.Font.Name = "Segoe UI"
 
  UserForm1.Label1.Font.Name = "Segoe UI"
  UserForm1.CheckBox1.Font.Name = "Segoe UI"
  UserForm1.CheckBox2.Font.Name = "Segoe UI"
  UserForm1.CheckBox3.Font.Name = "Segoe UI"
  UserForm1.CheckBox7.Font.Name = "Segoe UI"
  UserForm1.CheckBox22.Font.Name = "Segoe UI"
  UserForm1.CheckBox208.Font.Name = "Segoe UI"
  UserForm1.CheckBox32.Font.Name = "Segoe UI"
  UserForm1.CheckBox74.Font.Name = "Segoe UI"
  UserForm1.CheckBox92.Font.Name = "Segoe UI"
  UserForm1.CheckBox206.Font.Name = "Segoe UI"
  UserForm1.CheckBox207.Font.Name = "Segoe UI"
  UserForm1.Label143.Font.Name = "Segoe UI"
  UserForm1.OptionButton14.Font.Name = "Segoe UI"
  UserForm1.OptionButton15.Font.Name = "Segoe UI"
  UserForm1.OptionButton16.Font.Name = "Segoe UI"
  UserForm1.CommandButton45.Font.Name = "Segoe UI"
  UserForm1.CommandButton78.Font.Name = "Segoe UI"
  UserForm1.CommandButton37.Font.Name = "Segoe UI"
  UserForm1.CommandButton12.Font.Name = "Segoe UI"
  UserForm1.CommandButton1.Font.Name = "Segoe UI"
  UserForm1.CommandButton2.Font.Name = "Segoe UI"
  UserForm1.CommandButton81.Font.Name = "Segoe UI"
  UserForm1.CommandButton85.Font.Name = "Segoe UI"
  UserForm1.CommandButton87.Font.Name = "Segoe UI"
  UserForm1.CommandButton88.Font.Name = "Segoe UI"
  UserForm1.CommandButton104.Font.Name = "Segoe UI"
  UserForm1.CommandButton261.Font.Name = "Segoe UI"
  UserForm1.CommandButton262.Font.Name = "Segoe UI"
  
  UserForm1.Label8.Font.Name = "Segoe UI"
  UserForm1.Label2.Font.Name = "Segoe UI"
  UserForm1.CheckBox12.Font.Name = "Segoe UI"
  UserForm1.CommandButton91.Font.Name = "Segoe UI"
  UserForm1.CommandButton79.Font.Name = "Segoe UI"
  UserForm1.CommandButton54.Font.Name = "Segoe UI"
  UserForm1.CommandButton15.Font.Name = "Segoe UI"
  UserForm1.CommandButton5.Font.Name = "Segoe UI"
  UserForm1.CommandButton3.Font.Name = "Segoe UI"
  UserForm1.CommandButton4.Font.Name = "Segoe UI"
  UserForm1.CommandButton82.Font.Name = "Segoe UI"
  
  UserForm1.Label20.Font.Name = "Segoe UI"
  UserForm1.Label22.Font.Name = "Segoe UI"
  UserForm1.CommandButton267.Font.Name = "Segoe UI"
  UserForm1.CommandButton86.Font.Name = "Segoe UI"
  UserForm1.CommandButton25.Font.Name = "Segoe UI"
  UserForm1.CommandButton22.Font.Name = "Segoe UI"
  
  UserForm1.Label141.Font.Name = "Segoe UI"
  UserForm1.Label140.Font.Name = "Segoe UI"
  UserForm1.CommandButton103.Font.Name = "Segoe UI"
  UserForm1.CommandButton101.Font.Name = "Segoe UI"
  UserForm1.CommandButton102.Font.Name = "Segoe UI"
  UserForm1.CommandButton100.Font.Name = "Segoe UI"
  UserForm1.CommandButton98.Font.Name = "Segoe UI"
  UserForm1.CommandButton99.Font.Name = "Segoe UI"
  
  UserForm1.Label142.Font.Name = "Segoe UI"
  UserForm1.Label144.Font.Name = "Segoe UI"
  UserForm1.OptionButton22.Font.Name = "Segoe UI"
  UserForm1.OptionButton23.Font.Name = "Segoe UI"
  UserForm1.OptionButton24.Font.Name = "Segoe UI"
  UserForm1.OptionButton25.Font.Name = "Segoe UI"
  UserForm1.Label145.Font.Name = "Segoe UI"
  UserForm1.OptionButton26.Font.Name = "Segoe UI"
  UserForm1.OptionButton27.Font.Name = "Segoe UI"
  UserForm1.CommandButton118.Font.Name = "Segoe UI"
  
  UserForm1.Label62.Font.Name = "Segoe UI"
  UserForm1.Label63.Font.Name = "Segoe UI"
  UserForm1.Label314.Font.Name = "Segoe UI"
  UserForm1.Label315.Font.Name = "Segoe UI"
  UserForm1.Label316.Font.Name = "Segoe UI"
  UserForm1.CheckBox54.Font.Name = "Segoe UI"
  UserForm1.CheckBox55.Font.Name = "Segoe UI"
  UserForm1.Label146.Font.Name = "Segoe UI"
  UserForm1.OptionButton4.Font.Name = "Segoe UI"
  UserForm1.OptionButton5.Font.Name = "Segoe UI"
  UserForm1.OptionButton6.Font.Name = "Segoe UI"
  UserForm1.OptionButton7.Font.Name = "Segoe UI"
  UserForm1.OptionButton8.Font.Name = "Segoe UI"
  UserForm1.OptionButton9.Font.Name = "Segoe UI"
  UserForm1.OptionButton10.Font.Name = "Segoe UI"
  UserForm1.CommandButton51.Font.Name = "Segoe UI"
  UserForm1.CommandButton272.Font.Name = "Segoe UI"
  UserForm1.CommandButton273.Font.Name = "Segoe UI"
  UserForm1.CommandButton274.Font.Name = "Segoe UI"
  
  UserForm1.Label101.Font.Name = "Segoe UI"
  UserForm1.Label100.Font.Name = "Segoe UI"
  UserForm1.Label102.Font.Name = "Segoe UI"
  UserForm1.CheckBox59.Font.Name = "Segoe UI"
  UserForm1.CommandButton77.Font.Name = "Segoe UI"
  UserForm1.CommandButton75.Font.Name = "Segoe UI"
  UserForm1.CommandButton290.Font.Name = "Segoe UI"
  UserForm1.CommandButton76.Font.Name = "Segoe UI"
  
  UserForm1.Label134.Font.Name = "Segoe UI"
  UserForm1.Label133.Font.Name = "Segoe UI"
  UserForm1.CheckBox84.Font.Name = "Segoe UI"
  UserForm1.Label147.Font.Name = "Segoe UI"
  UserForm1.OptionButton17.Font.Name = "Segoe UI"
  UserForm1.OptionButton18.Font.Name = "Segoe UI"
  UserForm1.OptionButton19.Font.Name = "Segoe UI"
  UserForm1.Label148.Font.Name = "Segoe UI"
  UserForm1.OptionButton20.Font.Name = "Segoe UI"
  UserForm1.OptionButton21.Font.Name = "Segoe UI"
  UserForm1.CommandButton89.Font.Name = "Segoe UI"
  UserForm1.CommandButton90.Font.Name = "Segoe UI"
  
  UserForm1.Label103.Font.Name = "Segoe UI"
  UserForm1.CheckBox68.Font.Name = "Segoe UI"
  UserForm1.CommandButton84.Font.Name = "Segoe UI"
  UserForm1.CommandButton80.Font.Name = "Segoe UI"
  
  UserForm1.Label13.Font.Name = "Segoe UI"
  UserForm1.Label14.Font.Name = "Segoe UI"
  UserForm1.Label15.Font.Name = "Segoe UI"
  UserForm1.CommandButton16.Font.Name = "Segoe UI"
  
  UserForm1.Label318.Font.Name = "Segoe UI"
  UserForm1.Label319.Font.Name = "Segoe UI"
  UserForm1.Label320.Font.Name = "Segoe UI"
  UserForm1.Label321.Font.Name = "Segoe UI"
  UserForm1.Label322.Font.Name = "Segoe UI"
  UserForm1.CheckBox204.Font.Name = "Segoe UI"
  UserForm1.CheckBox205.Font.Name = "Segoe UI"
  UserForm1.CommandButton275.Font.Name = "Segoe UI"
  UserForm1.CommandButton278.Font.Name = "Segoe UI"
  UserForm1.CommandButton279.Font.Name = "Segoe UI"
  UserForm1.CommandButton280.Font.Name = "Segoe UI"
  
  UserForm1.Label16.Font.Name = "Segoe UI"
  UserForm1.Label17.Font.Name = "Segoe UI"
  UserForm1.Label19.Font.Name = "Segoe UI"
  UserForm1.CheckBox62.Font.Name = "Segoe UI"
  UserForm1.Label18.Font.Name = "Segoe UI"
  UserForm1.CommandButton19.Font.Name = "Segoe UI"
  UserForm1.CheckBox16.Font.Name = "Segoe UI"
  UserForm1.CheckBox60.Font.Name = "Segoe UI"
  UserForm1.CheckBox75.Font.Name = "Segoe UI"
  UserForm1.CheckBox202.Font.Name = "Segoe UI"
  UserForm1.Label104.Font.Name = "Segoe UI"
  UserForm1.Label105.Font.Name = "Segoe UI"
  UserForm1.CommandButton21.Font.Name = "Segoe UI"
  UserForm1.CommandButton20.Font.Name = "Segoe UI"
  UserForm1.CommandButton303.Font.Name = "Segoe UI"
  
  UserForm1.Label25.Font.Name = "Segoe UI"
  UserForm1.Label29.Font.Name = "Segoe UI"
  UserForm1.Label26.Font.Name = "Segoe UI"
  UserForm1.Label28.Font.Name = "Segoe UI"
  UserForm1.CheckBox63.Font.Name = "Segoe UI"
  UserForm1.Label27.Font.Name = "Segoe UI"
  UserForm1.CommandButton30.Font.Name = "Segoe UI"
  UserForm1.CheckBox27.Font.Name = "Segoe UI"
  UserForm1.CommandButton32.Font.Name = "Segoe UI"
  UserForm1.CommandButton31.Font.Name = "Segoe UI"
  
  UserForm1.Label39.Font.Name = "Segoe UI"
  UserForm1.Label40.Font.Name = "Segoe UI"
  UserForm1.Label36.Font.Name = "Segoe UI"
  UserForm1.Label38.Font.Name = "Segoe UI"
  UserForm1.Label37.Font.Name = "Segoe UI"
  UserForm1.CheckBox64.Font.Name = "Segoe UI"
  UserForm1.CommandButton40.Font.Name = "Segoe UI"
  UserForm1.CommandButton41.Font.Name = "Segoe UI"
  UserForm1.CommandButton42.Font.Name = "Segoe UI"
  UserForm1.CommandButton39.Font.Name = "Segoe UI"
  
  UserForm1.Label303.Font.Name = "Segoe UI"
  UserForm1.Label305.Font.Name = "Segoe UI"
  UserForm1.Label307.Font.Name = "Segoe UI"
  UserForm1.Label312.Font.Name = "Segoe UI"
  UserForm1.Label313.Font.Name = "Segoe UI"
  UserForm1.Label311.Font.Name = "Segoe UI"
  UserForm1.Label304.Font.Name = "Segoe UI"
  UserForm1.Label306.Font.Name = "Segoe UI"
  UserForm1.OptionButton29.Font.Name = "Segoe UI"
  UserForm1.OptionButton28.Font.Name = "Segoe UI"
  UserForm1.OptionButton31.Font.Name = "Segoe UI"
  UserForm1.OptionButton32.Font.Name = "Segoe UI"
  UserForm1.OptionButton30.Font.Name = "Segoe UI"
  UserForm1.CheckBox200.Font.Name = "Segoe UI"
  UserForm1.CheckBox229.Font.Name = "Segoe UI"
  UserForm1.CheckBox201.Font.Name = "Segoe UI"
  UserForm1.CommandButton257.Font.Name = "Segoe UI"
  UserForm1.CommandButton258.Font.Name = "Segoe UI"
  UserForm1.CommandButton288.Font.Name = "Segoe UI"
  UserForm1.CommandButton289.Font.Name = "Segoe UI"
  UserForm1.CommandButton259.Font.Name = "Segoe UI"
  UserForm1.CommandButton260.Font.Name = "Segoe UI"
  
  UserForm1.Label30.Font.Name = "Segoe UI"
  UserForm1.Label31.Font.Name = "Segoe UI"
  UserForm1.Label34.Font.Name = "Segoe UI"
  UserForm1.CommandButton35.Font.Name = "Segoe UI"
  UserForm1.CommandButton36.Font.Name = "Segoe UI"
  UserForm1.Label35.Font.Name = "Segoe UI"
  UserForm1.CommandButton34.Font.Name = "Segoe UI"
  UserForm1.CommandButton33.Font.Name = "Segoe UI"
  
  UserForm1.Label44.Font.Name = "Segoe UI"
  UserForm1.Label45.Font.Name = "Segoe UI"
  UserForm1.Label46.Font.Name = "Segoe UI"
  UserForm1.Label47.Font.Name = "Segoe UI"
  UserForm1.Label48.Font.Name = "Segoe UI"
  UserForm1.Label49.Font.Name = "Segoe UI"
  UserForm1.Label50.Font.Name = "Segoe UI"
  UserForm1.Label51.Font.Name = "Segoe UI"
  UserForm1.Label56.Font.Name = "Segoe UI"
  UserForm1.CommandButton50.Font.Name = "Segoe UI"
  UserForm1.CommandButton48.Font.Name = "Segoe UI"
  UserForm1.Label52.Font.Name = "Segoe UI"
  UserForm1.Label54.Font.Name = "Segoe UI"
  UserForm1.CommandButton49.Font.Name = "Segoe UI"
  
  UserForm1.CheckBox41.Font.Name = "Segoe UI"
  UserForm1.CheckBox42.Font.Name = "Segoe UI"
  UserForm1.CommandButton43.Font.Name = "Segoe UI"
  UserForm1.CommandButton44.Font.Name = "Segoe UI"
  
  UserForm1.CheckBox34.Font.Name = "Segoe UI"
  UserForm1.CheckBox37.Font.Name = "Segoe UI"
  UserForm1.CheckBox33.Font.Name = "Segoe UI"
  UserForm1.CheckBox48.Font.Name = "Segoe UI"
  UserForm1.CheckBox85.Font.Name = "Segoe UI"
  UserForm1.CheckBox44.Font.Name = "Segoe UI"
  UserForm1.CheckBox88.Font.Name = "Segoe UI"
  UserForm1.CheckBox49.Font.Name = "Segoe UI"
  UserForm1.CheckBox50.Font.Name = "Segoe UI"
  UserForm1.CheckBox56.Font.Name = "Segoe UI"
  UserForm1.CheckBox43.Font.Name = "Segoe UI"
  UserForm1.CheckBox73.Font.Name = "Segoe UI"
  UserForm1.CheckBox65.Font.Name = "Segoe UI"
  UserForm1.CheckBox78.Font.Name = "Segoe UI"
  UserForm1.Label43.Font.Name = "Segoe UI"
  UserForm1.Label107.Font.Name = "Segoe UI"
  UserForm1.Label108.Font.Name = "Segoe UI"
  UserForm1.Label109.Font.Name = "Segoe UI"
  UserForm1.Label110.Font.Name = "Segoe UI"
  UserForm1.Label111.Font.Name = "Segoe UI"
  UserForm1.Label112.Font.Name = "Segoe UI"
  UserForm1.Label113.Font.Name = "Segoe UI"
  UserForm1.Label114.Font.Name = "Segoe UI"
  UserForm1.Label115.Font.Name = "Segoe UI"
  UserForm1.Label116.Font.Name = "Segoe UI"
  UserForm1.Label121.Font.Name = "Segoe UI"
  UserForm1.Label122.Font.Name = "Segoe UI"
  UserForm1.Label123.Font.Name = "Segoe UI"
  UserForm1.Label124.Font.Name = "Segoe UI"
  UserForm1.Label127.Font.Name = "Segoe UI"
  UserForm1.Label128.Font.Name = "Segoe UI"
  UserForm1.Label129.Font.Name = "Segoe UI"
  UserForm1.Label130.Font.Name = "Segoe UI"
  UserForm1.CommandButton46.Font.Name = "Segoe UI"
  UserForm1.CommandButton47.Font.Name = "Segoe UI"
  UserForm1.CommandButton6.Font.Name = "Segoe UI"
  UserForm1.CommandButton73.Font.Name = "Segoe UI"
  UserForm1.CommandButton17.Font.Name = "Segoe UI"
  UserForm1.CommandButton18.Font.Name = "Segoe UI"
  UserForm1.CommandButton38.Font.Name = "Segoe UI"
  UserForm1.CommandButton126.Font.Name = "Segoe UI"
  UserForm1.CommandButton158.Font.Name = "Segoe UI"
  UserForm1.CommandButton7.Font.Name = "Segoe UI"
  UserForm1.CommandButton92.Font.Name = "Segoe UI"
  UserForm1.CommandButton14.Font.Name = "Segoe UI"
  UserForm1.CommandButton8.Font.Name = "Segoe UI"

  UserForm1.Label3.Font.Name = "Segoe UI"
  UserForm1.Label172.Font.Name = "Segoe UI"
  UserForm1.Label299.Font.Name = "Segoe UI"
  UserForm1.Label4.Font.Name = "Segoe UI"
  UserForm1.Label5.Font.Name = "Segoe UI"
  UserForm1.Label6.Font.Name = "Segoe UI"
  UserForm1.Label7.Font.Name = "Segoe UI"
  UserForm1.Label353.Font.Name = "Segoe UI"
  UserForm1.Label149.Font.Name = "Segoe UI"
  UserForm1.OptionButton11.Font.Name = "Segoe UI"
  UserForm1.OptionButton12.Font.Name = "Segoe UI"
  UserForm1.OptionButton13.Font.Name = "Segoe UI"
  UserForm1.CheckBox71.Font.Name = "Segoe UI"
  UserForm1.CheckBox209.Font.Name = "Segoe UI"
  UserForm1.CheckBox72.Font.Name = "Segoe UI"
  UserForm1.CheckBox69.Font.Name = "Segoe UI"
  UserForm1.CommandButton83.Font.Name = "Segoe UI"
  UserForm1.CheckBox81.Font.Name = "Segoe UI"
  UserForm1.CheckBox86.Font.Name = "Segoe UI"

  UserForm1.Label41.Font.Name = "Segoe UI"
  UserForm1.Label42.Font.Name = "Segoe UI"
  UserForm1.Label58.Font.Name = "Segoe UI"
  UserForm1.Label59.Font.Name = "Segoe UI"
  UserForm1.Label60.Font.Name = "Segoe UI"
  UserForm1.Label61.Font.Name = "Segoe UI"
  UserForm1.Label117.Font.Name = "Segoe UI"
  UserForm1.Label118.Font.Name = "Segoe UI"
  UserForm1.Label119.Font.Name = "Segoe UI"
  UserForm1.Label120.Font.Name = "Segoe UI"
  UserForm1.Label138.Font.Name = "Segoe UI"
  UserForm1.Label139.Font.Name = "Segoe UI"
  UserForm1.CommandButton9.Font.Name = "Segoe UI"
  UserForm1.CommandButton94.Font.Name = "Segoe UI"
  UserForm1.CommandButton95.Font.Name = "Segoe UI"
  UserForm1.CommandButton96.Font.Name = "Segoe UI"
  UserForm1.CommandButton97.Font.Name = "Segoe UI"
  
  UserForm1.MultiPage2.Font.Name = "Segoe UI"

  UserForm1.Label10.Font.Name = "Segoe UI"
  UserForm1.Label11.Font.Name = "Segoe UI"
  UserForm1.Label12.Font.Name = "Segoe UI"
  UserForm1.ListBox1.Font.Name = "Segoe UI"
  UserForm1.Label9.Font.Name = "Segoe UI"

  UserForm1.Label64.Font.Name = "Segoe UI"
  UserForm1.Label65.Font.Name = "Segoe UI"
  UserForm1.Label66.Font.Name = "Segoe UI"
  UserForm1.ListBox2.Font.Name = "Segoe UI"
  UserForm1.Label67.Font.Name = "Segoe UI"

  UserForm1.Label68.Font.Name = "Segoe UI"
  UserForm1.Label69.Font.Name = "Segoe UI"
  UserForm1.Label70.Font.Name = "Segoe UI"
  UserForm1.ListBox3.Font.Name = "Segoe UI"
  UserForm1.Label71.Font.Name = "Segoe UI"

  UserForm1.Label72.Font.Name = "Segoe UI"
  UserForm1.Label73.Font.Name = "Segoe UI"
  UserForm1.Label74.Font.Name = "Segoe UI"
  UserForm1.ListBox4.Font.Name = "Segoe UI"
  UserForm1.Label75.Font.Name = "Segoe UI"

  UserForm1.Label76.Font.Name = "Segoe UI"
  UserForm1.Label77.Font.Name = "Segoe UI"
  UserForm1.Label78.Font.Name = "Segoe UI"
  UserForm1.ListBox5.Font.Name = "Segoe UI"
  UserForm1.Label79.Font.Name = "Segoe UI"

  UserForm1.Label80.Font.Name = "Segoe UI"
  UserForm1.Label81.Font.Name = "Segoe UI"
  UserForm1.Label82.Font.Name = "Segoe UI"
  UserForm1.ListBox6.Font.Name = "Segoe UI"
  UserForm1.Label83.Font.Name = "Segoe UI"

  UserForm1.Label84.Font.Name = "Segoe UI"
  UserForm1.Label85.Font.Name = "Segoe UI"
  UserForm1.Label86.Font.Name = "Segoe UI"
  UserForm1.ListBox7.Font.Name = "Segoe UI"
  UserForm1.Label87.Font.Name = "Segoe UI"

  UserForm1.Label88.Font.Name = "Segoe UI"
  UserForm1.Label89.Font.Name = "Segoe UI"
  UserForm1.Label90.Font.Name = "Segoe UI"
  UserForm1.ListBox8.Font.Name = "Segoe UI"
  UserForm1.Label91.Font.Name = "Segoe UI"

  UserForm1.Label92.Font.Name = "Segoe UI"
  UserForm1.Label93.Font.Name = "Segoe UI"
  UserForm1.Label94.Font.Name = "Segoe UI"
  UserForm1.ListBox9.Font.Name = "Segoe UI"
  UserForm1.Label95.Font.Name = "Segoe UI"

  UserForm1.Label96.Font.Name = "Segoe UI"
  UserForm1.Label97.Font.Name = "Segoe UI"
  UserForm1.Label98.Font.Name = "Segoe UI"
  UserForm1.ListBox10.Font.Name = "Segoe UI"
  UserForm1.Label99.Font.Name = "Segoe UI"

  UserForm1.MultiPage4.Font.Name = "Segoe UI"
  UserForm1.Label287.Font.Name = "Segoe UI"
  UserForm1.Label288.Font.Name = "Segoe UI"
  UserForm1.CheckBox171.Font.Name = "Segoe UI"
  UserForm1.CheckBox172.Font.Name = "Segoe UI"
  UserForm1.CheckBox173.Font.Name = "Segoe UI"
  UserForm1.CheckBox174.Font.Name = "Segoe UI"
  UserForm1.CheckBox175.Font.Name = "Segoe UI"
  UserForm1.CheckBox176.Font.Name = "Segoe UI"
  UserForm1.CheckBox177.Font.Name = "Segoe UI"
  UserForm1.CheckBox178.Font.Name = "Segoe UI"
  UserForm1.CheckBox179.Font.Name = "Segoe UI"
  UserForm1.CheckBox180.Font.Name = "Segoe UI"
  UserForm1.CheckBox181.Font.Name = "Segoe UI"
  UserForm1.CommandButton246.Font.Name = "Segoe UI"
  UserForm1.CommandButton247.Font.Name = "Segoe UI"

  UserForm1.CheckBox210.Font.Name = "Segoe UI"
  UserForm1.Label330.Font.Name = "Segoe UI"
  UserForm1.Label331.Font.Name = "Segoe UI"
  UserForm1.Label332.Font.Name = "Segoe UI"
  UserForm1.Label333.Font.Name = "Segoe UI"
  UserForm1.Label334.Font.Name = "Segoe UI"
  UserForm1.Label335.Font.Name = "Segoe UI"
  UserForm1.Label336.Font.Name = "Segoe UI"
  UserForm1.Label337.Font.Name = "Segoe UI"
  UserForm1.Label338.Font.Name = "Segoe UI"
  UserForm1.Label339.Font.Name = "Segoe UI"
  UserForm1.Label340.Font.Name = "Segoe UI"
  UserForm1.Label341.Font.Name = "Segoe UI"
  UserForm1.Label352.Font.Name = "Segoe UI"
  UserForm1.Label342.Font.Name = "Segoe UI"
  UserForm1.Label343.Font.Name = "Segoe UI"
  UserForm1.Label344.Font.Name = "Segoe UI"
  UserForm1.Label345.Font.Name = "Segoe UI"
  UserForm1.Label346.Font.Name = "Segoe UI"
  UserForm1.Label347.Font.Name = "Segoe UI"
  UserForm1.Label348.Font.Name = "Segoe UI"
  UserForm1.Label349.Font.Name = "Segoe UI"
  UserForm1.Label350.Font.Name = "Segoe UI"
  
  UserForm1.CheckBox186.Font.Name = "Segoe UI"

  UserForm1.Label289.Font.Name = "Segoe UI"
  UserForm1.OptionButton1.Font.Name = "Segoe UI"
  UserForm1.OptionButton2.Font.Name = "Segoe UI"
  UserForm1.OptionButton3.Font.Name = "Segoe UI"
  UserForm1.CheckBox188.Font.Name = "Segoe UI"
  UserForm1.CheckBox189.Font.Name = "Segoe UI"

  UserForm1.Label292.Font.Name = "Segoe UI"
  UserForm1.Label294.Font.Name = "Segoe UI"
  UserForm1.CheckBox190.Font.Name = "Segoe UI"
  UserForm1.CheckBox194.Font.Name = "Segoe UI"
  UserForm1.CheckBox195.Font.Name = "Segoe UI"
  UserForm1.CheckBox203.Font.Name = "Segoe UI"
      
  UserForm1.Label295.Font.Name = "Segoe UI"
  UserForm1.Label296.Font.Name = "Segoe UI"
  UserForm1.Label297.Font.Name = "Segoe UI"
  UserForm1.CommandButton248.Font.Name = "Segoe UI"
  UserForm1.CommandButton249.Font.Name = "Segoe UI"
  UserForm1.CommandButton250.Font.Name = "Segoe UI"
  UserForm1.CommandButton251.Font.Name = "Segoe UI"
  UserForm1.CommandButton252.Font.Name = "Segoe UI"
  UserForm1.CommandButton253.Font.Name = "Segoe UI"

  UserForm1.Label324.Font.Name = "Segoe UI"
  UserForm1.Label325.Font.Name = "Segoe UI"
  UserForm1.Label326.Font.Name = "Segoe UI"
  UserForm1.Label327.Font.Name = "Segoe UI"
  UserForm1.Label328.Font.Name = "Segoe UI"
  UserForm1.CommandButton283.Font.Name = "Segoe UI"
  UserForm1.CommandButton284.Font.Name = "Segoe UI"
  UserForm1.CommandButton285.Font.Name = "Segoe UI"
  UserForm1.CommandButton286.Font.Name = "Segoe UI"
  UserForm1.CommandButton287.Font.Name = "Segoe UI"

  UserForm1.MultiPage5.Font.Name = "Segoe UI"

  UserForm1.ListBox12.Font.Name = "Segoe UI"
  UserForm1.ListBox13.Font.Name = "Segoe UI"
  UserForm1.ListBox14.Font.Name = "Segoe UI"
  UserForm1.ListBox15.Font.Name = "Segoe UI"
  UserForm1.ListBox16.Font.Name = "Segoe UI"
  UserForm1.ListBox17.Font.Name = "Segoe UI"
  UserForm1.ListBox18.Font.Name = "Segoe UI"
  UserForm1.ListBox19.Font.Name = "Segoe UI"
  UserForm1.ListBox20.Font.Name = "Segoe UI"
  UserForm1.ListBox21.Font.Name = "Segoe UI"

End Sub

Sub FONT_CHG1_2()

  UserForm1.MultiPage1.Font.Name = "Meiryo UI"
  UserForm1.MultiPage3.Font.Name = "Meiryo UI"
 
  UserForm1.Label1.Font.Name = "Meiryo UI"
  UserForm1.CheckBox1.Font.Name = "Meiryo UI"
  UserForm1.CheckBox2.Font.Name = "Meiryo UI"
  UserForm1.CheckBox3.Font.Name = "Meiryo UI"
  UserForm1.CheckBox7.Font.Name = "Meiryo UI"
  UserForm1.CheckBox22.Font.Name = "Meiryo UI"
  UserForm1.CheckBox208.Font.Name = "Meiryo UI"
  UserForm1.CheckBox32.Font.Name = "Meiryo UI"
  UserForm1.CheckBox74.Font.Name = "Meiryo UI"
  UserForm1.CheckBox92.Font.Name = "Meiryo UI"
  UserForm1.CheckBox206.Font.Name = "Meiryo UI"
  UserForm1.CheckBox207.Font.Name = "Meiryo UI"
  UserForm1.Label143.Font.Name = "Meiryo UI"
  UserForm1.OptionButton14.Font.Name = "Meiryo UI"
  UserForm1.OptionButton15.Font.Name = "Meiryo UI"
  UserForm1.OptionButton16.Font.Name = "Meiryo UI"
  UserForm1.CommandButton45.Font.Name = "Meiryo UI"
  UserForm1.CommandButton78.Font.Name = "Meiryo UI"
  UserForm1.CommandButton37.Font.Name = "Meiryo UI"
  UserForm1.CommandButton12.Font.Name = "Meiryo UI"
  UserForm1.CommandButton1.Font.Name = "Meiryo UI"
  UserForm1.CommandButton2.Font.Name = "Meiryo UI"
  UserForm1.CommandButton81.Font.Name = "Meiryo UI"
  UserForm1.CommandButton85.Font.Name = "Meiryo UI"
  UserForm1.CommandButton87.Font.Name = "Meiryo UI"
  UserForm1.CommandButton88.Font.Name = "Meiryo UI"
  UserForm1.CommandButton104.Font.Name = "Meiryo UI"
  UserForm1.CommandButton261.Font.Name = "Meiryo UI"
  UserForm1.CommandButton262.Font.Name = "Meiryo UI"
  
  UserForm1.Label8.Font.Name = "Meiryo UI"
  UserForm1.Label2.Font.Name = "Meiryo UI"
  UserForm1.CheckBox12.Font.Name = "Meiryo UI"
  UserForm1.CommandButton91.Font.Name = "Meiryo UI"
  UserForm1.CommandButton79.Font.Name = "Meiryo UI"
  UserForm1.CommandButton54.Font.Name = "Meiryo UI"
  UserForm1.CommandButton15.Font.Name = "Meiryo UI"
  UserForm1.CommandButton5.Font.Name = "Meiryo UI"
  UserForm1.CommandButton3.Font.Name = "Meiryo UI"
  UserForm1.CommandButton4.Font.Name = "Meiryo UI"
  UserForm1.CommandButton82.Font.Name = "Meiryo UI"
  
  UserForm1.Label20.Font.Name = "Meiryo UI"
  UserForm1.Label22.Font.Name = "Meiryo UI"
  UserForm1.CommandButton267.Font.Name = "Meiryo UI"
  UserForm1.CommandButton86.Font.Name = "Meiryo UI"
  UserForm1.CommandButton25.Font.Name = "Meiryo UI"
  UserForm1.CommandButton22.Font.Name = "Meiryo UI"
  
  UserForm1.Label141.Font.Name = "Meiryo UI"
  UserForm1.Label140.Font.Name = "Meiryo UI"
  UserForm1.CommandButton103.Font.Name = "Meiryo UI"
  UserForm1.CommandButton101.Font.Name = "Meiryo UI"
  UserForm1.CommandButton102.Font.Name = "Meiryo UI"
  UserForm1.CommandButton100.Font.Name = "Meiryo UI"
  UserForm1.CommandButton98.Font.Name = "Meiryo UI"
  UserForm1.CommandButton99.Font.Name = "Meiryo UI"
  
  UserForm1.Label142.Font.Name = "Meiryo UI"
  UserForm1.Label144.Font.Name = "Meiryo UI"
  UserForm1.OptionButton22.Font.Name = "Meiryo UI"
  UserForm1.OptionButton23.Font.Name = "Meiryo UI"
  UserForm1.OptionButton24.Font.Name = "Meiryo UI"
  UserForm1.OptionButton25.Font.Name = "Meiryo UI"
  UserForm1.Label145.Font.Name = "Meiryo UI"
  UserForm1.OptionButton26.Font.Name = "Meiryo UI"
  UserForm1.OptionButton27.Font.Name = "Meiryo UI"
  UserForm1.CommandButton118.Font.Name = "Meiryo UI"
  
  UserForm1.Label62.Font.Name = "Meiryo UI"
  UserForm1.Label63.Font.Name = "Meiryo UI"
  UserForm1.Label314.Font.Name = "Meiryo UI"
  UserForm1.Label315.Font.Name = "Meiryo UI"
  UserForm1.Label316.Font.Name = "Meiryo UI"
  UserForm1.CheckBox54.Font.Name = "Meiryo UI"
  UserForm1.CheckBox55.Font.Name = "Meiryo UI"
  UserForm1.Label146.Font.Name = "Meiryo UI"
  UserForm1.OptionButton4.Font.Name = "Meiryo UI"
  UserForm1.OptionButton5.Font.Name = "Meiryo UI"
  UserForm1.OptionButton6.Font.Name = "Meiryo UI"
  UserForm1.OptionButton7.Font.Name = "Meiryo UI"
  UserForm1.OptionButton8.Font.Name = "Meiryo UI"
  UserForm1.OptionButton9.Font.Name = "Meiryo UI"
  UserForm1.OptionButton10.Font.Name = "Meiryo UI"
  UserForm1.CommandButton51.Font.Name = "Meiryo UI"
  UserForm1.CommandButton272.Font.Name = "Meiryo UI"
  UserForm1.CommandButton273.Font.Name = "Meiryo UI"
  UserForm1.CommandButton274.Font.Name = "Meiryo UI"
  
  UserForm1.Label101.Font.Name = "Meiryo UI"
  UserForm1.Label100.Font.Name = "Meiryo UI"
  UserForm1.Label102.Font.Name = "Meiryo UI"
  UserForm1.CheckBox59.Font.Name = "Meiryo UI"
  UserForm1.CommandButton77.Font.Name = "Meiryo UI"
  UserForm1.CommandButton75.Font.Name = "Meiryo UI"
  UserForm1.CommandButton290.Font.Name = "Meiryo UI"
  UserForm1.CommandButton76.Font.Name = "Meiryo UI"
  
  UserForm1.Label134.Font.Name = "Meiryo UI"
  UserForm1.Label133.Font.Name = "Meiryo UI"
  UserForm1.CheckBox84.Font.Name = "Meiryo UI"
  UserForm1.Label147.Font.Name = "Meiryo UI"
  UserForm1.OptionButton17.Font.Name = "Meiryo UI"
  UserForm1.OptionButton18.Font.Name = "Meiryo UI"
  UserForm1.OptionButton19.Font.Name = "Meiryo UI"
  UserForm1.Label148.Font.Name = "Meiryo UI"
  UserForm1.OptionButton20.Font.Name = "Meiryo UI"
  UserForm1.OptionButton21.Font.Name = "Meiryo UI"
  UserForm1.CommandButton89.Font.Name = "Meiryo UI"
  UserForm1.CommandButton90.Font.Name = "Meiryo UI"
  
  UserForm1.Label103.Font.Name = "Meiryo UI"
  UserForm1.CheckBox68.Font.Name = "Meiryo UI"
  UserForm1.CommandButton84.Font.Name = "Meiryo UI"
  UserForm1.CommandButton80.Font.Name = "Meiryo UI"
  
  UserForm1.Label13.Font.Name = "Meiryo UI"
  UserForm1.Label14.Font.Name = "Meiryo UI"
  UserForm1.Label15.Font.Name = "Meiryo UI"
  UserForm1.CommandButton16.Font.Name = "Meiryo UI"
  
  UserForm1.Label318.Font.Name = "Meiryo UI"
  UserForm1.Label319.Font.Name = "Meiryo UI"
  UserForm1.Label320.Font.Name = "Meiryo UI"
  UserForm1.Label321.Font.Name = "Meiryo UI"
  UserForm1.Label322.Font.Name = "Meiryo UI"
  UserForm1.CheckBox204.Font.Name = "Meiryo UI"
  UserForm1.CheckBox205.Font.Name = "Meiryo UI"
  UserForm1.CommandButton275.Font.Name = "Meiryo UI"
  UserForm1.CommandButton278.Font.Name = "Meiryo UI"
  UserForm1.CommandButton279.Font.Name = "Meiryo UI"
  UserForm1.CommandButton280.Font.Name = "Meiryo UI"
  
  UserForm1.Label16.Font.Name = "Meiryo UI"
  UserForm1.Label17.Font.Name = "Meiryo UI"
  UserForm1.Label19.Font.Name = "Meiryo UI"
  UserForm1.CheckBox62.Font.Name = "Meiryo UI"
  UserForm1.Label18.Font.Name = "Meiryo UI"
  UserForm1.CommandButton19.Font.Name = "Meiryo UI"
  UserForm1.CheckBox16.Font.Name = "Meiryo UI"
  UserForm1.CheckBox60.Font.Name = "Meiryo UI"
  UserForm1.CheckBox75.Font.Name = "Meiryo UI"
  UserForm1.CheckBox202.Font.Name = "Meiryo UI"
  UserForm1.Label104.Font.Name = "Meiryo UI"
  UserForm1.Label105.Font.Name = "Meiryo UI"
  UserForm1.CommandButton21.Font.Name = "Meiryo UI"
  UserForm1.CommandButton20.Font.Name = "Meiryo UI"
  UserForm1.CommandButton303.Font.Name = "Meiryo UI"
  
  UserForm1.Label25.Font.Name = "Meiryo UI"
  UserForm1.Label29.Font.Name = "Meiryo UI"
  UserForm1.Label26.Font.Name = "Meiryo UI"
  UserForm1.Label28.Font.Name = "Meiryo UI"
  UserForm1.CheckBox63.Font.Name = "Meiryo UI"
  UserForm1.Label27.Font.Name = "Meiryo UI"
  UserForm1.CommandButton30.Font.Name = "Meiryo UI"
  UserForm1.CheckBox27.Font.Name = "Meiryo UI"
  UserForm1.CommandButton32.Font.Name = "Meiryo UI"
  UserForm1.CommandButton31.Font.Name = "Meiryo UI"
  
  UserForm1.Label39.Font.Name = "Meiryo UI"
  UserForm1.Label40.Font.Name = "Meiryo UI"
  UserForm1.Label36.Font.Name = "Meiryo UI"
  UserForm1.Label38.Font.Name = "Meiryo UI"
  UserForm1.Label37.Font.Name = "Meiryo UI"
  UserForm1.CheckBox64.Font.Name = "Meiryo UI"
  UserForm1.CommandButton40.Font.Name = "Meiryo UI"
  UserForm1.CommandButton41.Font.Name = "Meiryo UI"
  UserForm1.CommandButton42.Font.Name = "Meiryo UI"
  UserForm1.CommandButton39.Font.Name = "Meiryo UI"
  
  UserForm1.Label303.Font.Name = "Meiryo UI"
  UserForm1.Label305.Font.Name = "Meiryo UI"
  UserForm1.Label307.Font.Name = "Meiryo UI"
  UserForm1.Label312.Font.Name = "Meiryo UI"
  UserForm1.Label313.Font.Name = "Meiryo UI"
  UserForm1.Label311.Font.Name = "Meiryo UI"
  UserForm1.Label304.Font.Name = "Meiryo UI"
  UserForm1.Label306.Font.Name = "Meiryo UI"
  UserForm1.OptionButton29.Font.Name = "Meiryo UI"
  UserForm1.OptionButton28.Font.Name = "Meiryo UI"
  UserForm1.OptionButton31.Font.Name = "Meiryo UI"
  UserForm1.OptionButton32.Font.Name = "Meiryo UI"
  UserForm1.OptionButton30.Font.Name = "Meiryo UI"
  UserForm1.CheckBox200.Font.Name = "Meiryo UI"
  UserForm1.CheckBox229.Font.Name = "Meiryo UI"
  UserForm1.CheckBox201.Font.Name = "Meiryo UI"
  UserForm1.CommandButton257.Font.Name = "Meiryo UI"
  UserForm1.CommandButton258.Font.Name = "Meiryo UI"
  UserForm1.CommandButton288.Font.Name = "Meiryo UI"
  UserForm1.CommandButton289.Font.Name = "Meiryo UI"
  UserForm1.CommandButton259.Font.Name = "Meiryo UI"
  UserForm1.CommandButton260.Font.Name = "Meiryo UI"
  
  UserForm1.Label30.Font.Name = "Meiryo UI"
  UserForm1.Label31.Font.Name = "Meiryo UI"
  UserForm1.Label34.Font.Name = "Meiryo UI"
  UserForm1.CommandButton35.Font.Name = "Meiryo UI"
  UserForm1.CommandButton36.Font.Name = "Meiryo UI"
  UserForm1.Label35.Font.Name = "Meiryo UI"
  UserForm1.CommandButton34.Font.Name = "Meiryo UI"
  UserForm1.CommandButton33.Font.Name = "Meiryo UI"
  
  UserForm1.Label44.Font.Name = "Meiryo UI"
  UserForm1.Label45.Font.Name = "Meiryo UI"
  UserForm1.Label46.Font.Name = "Meiryo UI"
  UserForm1.Label47.Font.Name = "Meiryo UI"
  UserForm1.Label48.Font.Name = "Meiryo UI"
  UserForm1.Label49.Font.Name = "Meiryo UI"
  UserForm1.Label50.Font.Name = "Meiryo UI"
  UserForm1.Label51.Font.Name = "Meiryo UI"
  UserForm1.Label56.Font.Name = "Meiryo UI"
  UserForm1.CommandButton50.Font.Name = "Meiryo UI"
  UserForm1.CommandButton48.Font.Name = "Meiryo UI"
  UserForm1.Label52.Font.Name = "Meiryo UI"
  UserForm1.Label54.Font.Name = "Meiryo UI"
  UserForm1.CommandButton49.Font.Name = "Meiryo UI"
  
  UserForm1.CheckBox41.Font.Name = "Meiryo UI"
  UserForm1.CheckBox42.Font.Name = "Meiryo UI"
  UserForm1.CommandButton43.Font.Name = "Meiryo UI"
  UserForm1.CommandButton44.Font.Name = "Meiryo UI"
  
  UserForm1.CheckBox34.Font.Name = "Meiryo UI"
  UserForm1.CheckBox37.Font.Name = "Meiryo UI"
  UserForm1.CheckBox33.Font.Name = "Meiryo UI"
  UserForm1.CheckBox48.Font.Name = "Meiryo UI"
  UserForm1.CheckBox85.Font.Name = "Meiryo UI"
  UserForm1.CheckBox44.Font.Name = "Meiryo UI"
  UserForm1.CheckBox88.Font.Name = "Meiryo UI"
  UserForm1.CheckBox49.Font.Name = "Meiryo UI"
  UserForm1.CheckBox50.Font.Name = "Meiryo UI"
  UserForm1.CheckBox56.Font.Name = "Meiryo UI"
  UserForm1.CheckBox43.Font.Name = "Meiryo UI"
  UserForm1.CheckBox73.Font.Name = "Meiryo UI"
  UserForm1.CheckBox65.Font.Name = "Meiryo UI"
  UserForm1.CheckBox78.Font.Name = "Meiryo UI"
  UserForm1.Label43.Font.Name = "Meiryo UI"
  UserForm1.Label107.Font.Name = "Meiryo UI"
  UserForm1.Label108.Font.Name = "Meiryo UI"
  UserForm1.Label109.Font.Name = "Meiryo UI"
  UserForm1.Label110.Font.Name = "Meiryo UI"
  UserForm1.Label111.Font.Name = "Meiryo UI"
  UserForm1.Label112.Font.Name = "Meiryo UI"
  UserForm1.Label113.Font.Name = "Meiryo UI"
  UserForm1.Label114.Font.Name = "Meiryo UI"
  UserForm1.Label115.Font.Name = "Meiryo UI"
  UserForm1.Label116.Font.Name = "Meiryo UI"
  UserForm1.Label121.Font.Name = "Meiryo UI"
  UserForm1.Label122.Font.Name = "Meiryo UI"
  UserForm1.Label123.Font.Name = "Meiryo UI"
  UserForm1.Label124.Font.Name = "Meiryo UI"
  UserForm1.Label127.Font.Name = "Meiryo UI"
  UserForm1.Label128.Font.Name = "Meiryo UI"
  UserForm1.Label129.Font.Name = "Meiryo UI"
  UserForm1.Label130.Font.Name = "Meiryo UI"
  UserForm1.CommandButton46.Font.Name = "Meiryo UI"
  UserForm1.CommandButton47.Font.Name = "Meiryo UI"
  UserForm1.CommandButton6.Font.Name = "Meiryo UI"
  UserForm1.CommandButton73.Font.Name = "Meiryo UI"
  UserForm1.CommandButton17.Font.Name = "Meiryo UI"
  UserForm1.CommandButton18.Font.Name = "Meiryo UI"
  UserForm1.CommandButton38.Font.Name = "Meiryo UI"
  UserForm1.CommandButton126.Font.Name = "Meiryo UI"
  UserForm1.CommandButton158.Font.Name = "Meiryo UI"
  UserForm1.CommandButton7.Font.Name = "Meiryo UI"
  UserForm1.CommandButton92.Font.Name = "Meiryo UI"
  UserForm1.CommandButton14.Font.Name = "Meiryo UI"
  UserForm1.CommandButton8.Font.Name = "Meiryo UI"

  UserForm1.Label3.Font.Name = "Meiryo UI"
  UserForm1.Label172.Font.Name = "Meiryo UI"
  UserForm1.Label299.Font.Name = "Meiryo UI"
  UserForm1.Label4.Font.Name = "Meiryo UI"
  UserForm1.Label5.Font.Name = "Meiryo UI"
  UserForm1.Label6.Font.Name = "Meiryo UI"
  UserForm1.Label7.Font.Name = "Meiryo UI"
  UserForm1.Label353.Font.Name = "Meiryo UI"
  UserForm1.Label149.Font.Name = "Meiryo UI"
  UserForm1.OptionButton11.Font.Name = "Meiryo UI"
  UserForm1.OptionButton12.Font.Name = "Meiryo UI"
  UserForm1.OptionButton13.Font.Name = "Meiryo UI"
  UserForm1.CheckBox71.Font.Name = "Meiryo UI"
  UserForm1.CheckBox209.Font.Name = "Meiryo UI"
  UserForm1.CheckBox72.Font.Name = "Meiryo UI"
  UserForm1.CheckBox69.Font.Name = "Meiryo UI"
  UserForm1.CommandButton83.Font.Name = "Meiryo UI"
  UserForm1.CheckBox81.Font.Name = "Meiryo UI"
  UserForm1.CheckBox86.Font.Name = "Meiryo UI"

  UserForm1.Label41.Font.Name = "Meiryo UI"
  UserForm1.Label42.Font.Name = "Meiryo UI"
  UserForm1.Label58.Font.Name = "Meiryo UI"
  UserForm1.Label59.Font.Name = "Meiryo UI"
  UserForm1.Label60.Font.Name = "Meiryo UI"
  UserForm1.Label61.Font.Name = "Meiryo UI"
  UserForm1.Label117.Font.Name = "Meiryo UI"
  UserForm1.Label118.Font.Name = "Meiryo UI"
  UserForm1.Label119.Font.Name = "Meiryo UI"
  UserForm1.Label120.Font.Name = "Meiryo UI"
  UserForm1.Label138.Font.Name = "Meiryo UI"
  UserForm1.Label139.Font.Name = "Meiryo UI"
  UserForm1.CommandButton9.Font.Name = "Meiryo UI"
  UserForm1.CommandButton94.Font.Name = "Meiryo UI"
  UserForm1.CommandButton95.Font.Name = "Meiryo UI"
  UserForm1.CommandButton96.Font.Name = "Meiryo UI"
  UserForm1.CommandButton97.Font.Name = "Meiryo UI"
  
  UserForm1.MultiPage2.Font.Name = "Meiryo UI"

  UserForm1.Label10.Font.Name = "Meiryo UI"
  UserForm1.Label11.Font.Name = "Meiryo UI"
  UserForm1.Label12.Font.Name = "Meiryo UI"
  UserForm1.ListBox1.Font.Name = "Meiryo UI"
  UserForm1.Label9.Font.Name = "Meiryo UI"

  UserForm1.Label64.Font.Name = "Meiryo UI"
  UserForm1.Label65.Font.Name = "Meiryo UI"
  UserForm1.Label66.Font.Name = "Meiryo UI"
  UserForm1.ListBox2.Font.Name = "Meiryo UI"
  UserForm1.Label67.Font.Name = "Meiryo UI"

  UserForm1.Label68.Font.Name = "Meiryo UI"
  UserForm1.Label69.Font.Name = "Meiryo UI"
  UserForm1.Label70.Font.Name = "Meiryo UI"
  UserForm1.ListBox3.Font.Name = "Meiryo UI"
  UserForm1.Label71.Font.Name = "Meiryo UI"

  UserForm1.Label72.Font.Name = "Meiryo UI"
  UserForm1.Label73.Font.Name = "Meiryo UI"
  UserForm1.Label74.Font.Name = "Meiryo UI"
  UserForm1.ListBox4.Font.Name = "Meiryo UI"
  UserForm1.Label75.Font.Name = "Meiryo UI"

  UserForm1.Label76.Font.Name = "Meiryo UI"
  UserForm1.Label77.Font.Name = "Meiryo UI"
  UserForm1.Label78.Font.Name = "Meiryo UI"
  UserForm1.ListBox5.Font.Name = "Meiryo UI"
  UserForm1.Label79.Font.Name = "Meiryo UI"

  UserForm1.Label80.Font.Name = "Meiryo UI"
  UserForm1.Label81.Font.Name = "Meiryo UI"
  UserForm1.Label82.Font.Name = "Meiryo UI"
  UserForm1.ListBox6.Font.Name = "Meiryo UI"
  UserForm1.Label83.Font.Name = "Meiryo UI"

  UserForm1.Label84.Font.Name = "Meiryo UI"
  UserForm1.Label85.Font.Name = "Meiryo UI"
  UserForm1.Label86.Font.Name = "Meiryo UI"
  UserForm1.ListBox7.Font.Name = "Meiryo UI"
  UserForm1.Label87.Font.Name = "Meiryo UI"

  UserForm1.Label88.Font.Name = "Meiryo UI"
  UserForm1.Label89.Font.Name = "Meiryo UI"
  UserForm1.Label90.Font.Name = "Meiryo UI"
  UserForm1.ListBox8.Font.Name = "Meiryo UI"
  UserForm1.Label91.Font.Name = "Meiryo UI"

  UserForm1.Label92.Font.Name = "Meiryo UI"
  UserForm1.Label93.Font.Name = "Meiryo UI"
  UserForm1.Label94.Font.Name = "Meiryo UI"
  UserForm1.ListBox9.Font.Name = "Meiryo UI"
  UserForm1.Label95.Font.Name = "Meiryo UI"

  UserForm1.Label96.Font.Name = "Meiryo UI"
  UserForm1.Label97.Font.Name = "Meiryo UI"
  UserForm1.Label98.Font.Name = "Meiryo UI"
  UserForm1.ListBox10.Font.Name = "Meiryo UI"
  UserForm1.Label99.Font.Name = "Meiryo UI"

  UserForm1.MultiPage4.Font.Name = "Meiryo UI"
  UserForm1.Label287.Font.Name = "Meiryo UI"
  UserForm1.Label288.Font.Name = "Meiryo UI"
  UserForm1.CheckBox171.Font.Name = "Meiryo UI"
  UserForm1.CheckBox172.Font.Name = "Meiryo UI"
  UserForm1.CheckBox173.Font.Name = "Meiryo UI"
  UserForm1.CheckBox174.Font.Name = "Meiryo UI"
  UserForm1.CheckBox175.Font.Name = "Meiryo UI"
  UserForm1.CheckBox176.Font.Name = "Meiryo UI"
  UserForm1.CheckBox177.Font.Name = "Meiryo UI"
  UserForm1.CheckBox178.Font.Name = "Meiryo UI"
  UserForm1.CheckBox179.Font.Name = "Meiryo UI"
  UserForm1.CheckBox180.Font.Name = "Meiryo UI"
  UserForm1.CheckBox181.Font.Name = "Meiryo UI"
  UserForm1.CommandButton246.Font.Name = "Meiryo UI"
  UserForm1.CommandButton247.Font.Name = "Meiryo UI"

  UserForm1.CheckBox210.Font.Name = "Meiryo UI"
  UserForm1.Label330.Font.Name = "Meiryo UI"
  UserForm1.Label331.Font.Name = "Meiryo UI"
  UserForm1.Label332.Font.Name = "Meiryo UI"
  UserForm1.Label333.Font.Name = "Meiryo UI"
  UserForm1.Label334.Font.Name = "Meiryo UI"
  UserForm1.Label335.Font.Name = "Meiryo UI"
  UserForm1.Label336.Font.Name = "Meiryo UI"
  UserForm1.Label337.Font.Name = "Meiryo UI"
  UserForm1.Label338.Font.Name = "Meiryo UI"
  UserForm1.Label339.Font.Name = "Meiryo UI"
  UserForm1.Label340.Font.Name = "Meiryo UI"
  UserForm1.Label341.Font.Name = "Meiryo UI"
  UserForm1.Label352.Font.Name = "Meiryo UI"
  UserForm1.Label342.Font.Name = "Meiryo UI"
  UserForm1.Label343.Font.Name = "Meiryo UI"
  UserForm1.Label344.Font.Name = "Meiryo UI"
  UserForm1.Label345.Font.Name = "Meiryo UI"
  UserForm1.Label346.Font.Name = "Meiryo UI"
  UserForm1.Label347.Font.Name = "Meiryo UI"
  UserForm1.Label348.Font.Name = "Meiryo UI"
  UserForm1.Label349.Font.Name = "Meiryo UI"
  UserForm1.Label350.Font.Name = "Meiryo UI"
  
  UserForm1.CheckBox186.Font.Name = "Meiryo UI"

  UserForm1.Label289.Font.Name = "Meiryo UI"
  UserForm1.OptionButton1.Font.Name = "Meiryo UI"
  UserForm1.OptionButton2.Font.Name = "Meiryo UI"
  UserForm1.OptionButton3.Font.Name = "Meiryo UI"
  UserForm1.CheckBox188.Font.Name = "Meiryo UI"
  UserForm1.CheckBox189.Font.Name = "Meiryo UI"

  UserForm1.Label292.Font.Name = "Meiryo UI"
  UserForm1.Label294.Font.Name = "Meiryo UI"
  UserForm1.CheckBox190.Font.Name = "Meiryo UI"
  UserForm1.CheckBox194.Font.Name = "Meiryo UI"
  UserForm1.CheckBox195.Font.Name = "Meiryo UI"
  UserForm1.CheckBox203.Font.Name = "Meiryo UI"

  UserForm1.Label295.Font.Name = "Meiryo UI"
  UserForm1.Label296.Font.Name = "Meiryo UI"
  UserForm1.Label297.Font.Name = "Meiryo UI"
  UserForm1.CommandButton248.Font.Name = "Meiryo UI"
  UserForm1.CommandButton249.Font.Name = "Meiryo UI"
  UserForm1.CommandButton250.Font.Name = "Meiryo UI"
  UserForm1.CommandButton251.Font.Name = "Meiryo UI"
  UserForm1.CommandButton252.Font.Name = "Meiryo UI"
  UserForm1.CommandButton253.Font.Name = "Meiryo UI"

  UserForm1.Label324.Font.Name = "Meiryo UI"
  UserForm1.Label325.Font.Name = "Meiryo UI"
  UserForm1.Label326.Font.Name = "Meiryo UI"
  UserForm1.Label327.Font.Name = "Meiryo UI"
  UserForm1.Label328.Font.Name = "Meiryo UI"
  UserForm1.CommandButton283.Font.Name = "Meiryo UI"
  UserForm1.CommandButton284.Font.Name = "Meiryo UI"
  UserForm1.CommandButton285.Font.Name = "Meiryo UI"
  UserForm1.CommandButton286.Font.Name = "Meiryo UI"
  UserForm1.CommandButton287.Font.Name = "Meiryo UI"

  UserForm1.MultiPage5.Font.Name = "Meiryo UI"

  UserForm1.ListBox12.Font.Name = "Meiryo UI"
  UserForm1.ListBox13.Font.Name = "Meiryo UI"
  UserForm1.ListBox14.Font.Name = "Meiryo UI"
  UserForm1.ListBox15.Font.Name = "Meiryo UI"
  UserForm1.ListBox16.Font.Name = "Meiryo UI"
  UserForm1.ListBox17.Font.Name = "Meiryo UI"
  UserForm1.ListBox18.Font.Name = "Meiryo UI"
  UserForm1.ListBox19.Font.Name = "Meiryo UI"
  UserForm1.ListBox20.Font.Name = "Meiryo UI"
  UserForm1.ListBox21.Font.Name = "Meiryo UI"

End Sub

Sub FONT_CHG1_3()

  UserForm1.MultiPage1.Font.Name = "Tahoma"
  UserForm1.MultiPage3.Font.Name = "Tahoma"
  
  UserForm1.Label1.Font.Name = "Tahoma"
  UserForm1.CheckBox1.Font.Name = "Tahoma"
  UserForm1.CheckBox2.Font.Name = "Tahoma"
  UserForm1.CheckBox3.Font.Name = "Tahoma"
  UserForm1.CheckBox7.Font.Name = "Tahoma"
  UserForm1.CheckBox22.Font.Name = "Tahoma"
  UserForm1.CheckBox208.Font.Name = "Tahoma"
  UserForm1.CheckBox32.Font.Name = "Tahoma"
  UserForm1.CheckBox74.Font.Name = "Tahoma"
  UserForm1.CheckBox92.Font.Name = "Tahoma"
  UserForm1.CheckBox206.Font.Name = "Tahoma"
  UserForm1.CheckBox207.Font.Name = "Tahoma"
  UserForm1.Label143.Font.Name = "Tahoma"
  UserForm1.OptionButton14.Font.Name = "Tahoma"
  UserForm1.OptionButton15.Font.Name = "Tahoma"
  UserForm1.OptionButton16.Font.Name = "Tahoma"
  UserForm1.CommandButton45.Font.Name = "Tahoma"
  UserForm1.CommandButton78.Font.Name = "Tahoma"
  UserForm1.CommandButton37.Font.Name = "Tahoma"
  UserForm1.CommandButton12.Font.Name = "Tahoma"
  UserForm1.CommandButton1.Font.Name = "Tahoma"
  UserForm1.CommandButton2.Font.Name = "Tahoma"
  UserForm1.CommandButton81.Font.Name = "Tahoma"
  UserForm1.CommandButton85.Font.Name = "Tahoma"
  UserForm1.CommandButton87.Font.Name = "Tahoma"
  UserForm1.CommandButton88.Font.Name = "Tahoma"
  UserForm1.CommandButton104.Font.Name = "Tahoma"
  UserForm1.CommandButton261.Font.Name = "Tahoma"
  UserForm1.CommandButton262.Font.Name = "Tahoma"

  UserForm1.Label8.Font.Name = "Tahoma"
  UserForm1.Label2.Font.Name = "Tahoma"
  UserForm1.CheckBox12.Font.Name = "Tahoma"
  UserForm1.CommandButton91.Font.Name = "Tahoma"
  UserForm1.CommandButton79.Font.Name = "Tahoma"
  UserForm1.CommandButton54.Font.Name = "Tahoma"
  UserForm1.CommandButton15.Font.Name = "Tahoma"
  UserForm1.CommandButton5.Font.Name = "Tahoma"
  UserForm1.CommandButton3.Font.Name = "Tahoma"
  UserForm1.CommandButton4.Font.Name = "Tahoma"
  UserForm1.CommandButton82.Font.Name = "Tahoma"

  UserForm1.Label20.Font.Name = "Tahoma"
  UserForm1.Label22.Font.Name = "Tahoma"
  UserForm1.CommandButton267.Font.Name = "Tahoma"
  UserForm1.CommandButton86.Font.Name = "Tahoma"
  UserForm1.CommandButton25.Font.Name = "Tahoma"
  UserForm1.CommandButton22.Font.Name = "Tahoma"
  
  UserForm1.Label141.Font.Name = "Tahoma"
  UserForm1.Label140.Font.Name = "Tahoma"
  UserForm1.CommandButton103.Font.Name = "Tahoma"
  UserForm1.CommandButton101.Font.Name = "Tahoma"
  UserForm1.CommandButton102.Font.Name = "Tahoma"
  UserForm1.CommandButton100.Font.Name = "Tahoma"
  UserForm1.CommandButton98.Font.Name = "Tahoma"
  UserForm1.CommandButton99.Font.Name = "Tahoma"

  UserForm1.Label142.Font.Name = "Tahoma"
  UserForm1.Label144.Font.Name = "Tahoma"
  UserForm1.OptionButton22.Font.Name = "Tahoma"
  UserForm1.OptionButton23.Font.Name = "Tahoma"
  UserForm1.OptionButton24.Font.Name = "Tahoma"
  UserForm1.OptionButton25.Font.Name = "Tahoma"
  UserForm1.Label145.Font.Name = "Tahoma"
  UserForm1.OptionButton26.Font.Name = "Tahoma"
  UserForm1.OptionButton27.Font.Name = "Tahoma"
  UserForm1.CommandButton118.Font.Name = "Tahoma"
  
  UserForm1.Label62.Font.Name = "Tahoma"
  UserForm1.Label63.Font.Name = "Tahoma"
  UserForm1.Label314.Font.Name = "Tahoma"
  UserForm1.Label315.Font.Name = "Tahoma"
  UserForm1.Label316.Font.Name = "Tahoma"
  UserForm1.CheckBox54.Font.Name = "Tahoma"
  UserForm1.CheckBox55.Font.Name = "Tahoma"
  UserForm1.Label146.Font.Name = "Tahoma"
  UserForm1.OptionButton4.Font.Name = "Tahoma"
  UserForm1.OptionButton5.Font.Name = "Tahoma"
  UserForm1.OptionButton6.Font.Name = "Tahoma"
  UserForm1.OptionButton7.Font.Name = "Tahoma"
  UserForm1.OptionButton8.Font.Name = "Tahoma"
  UserForm1.OptionButton9.Font.Name = "Tahoma"
  UserForm1.OptionButton10.Font.Name = "Tahoma"
  UserForm1.CommandButton51.Font.Name = "Tahoma"
  UserForm1.CommandButton272.Font.Name = "Tahoma"
  UserForm1.CommandButton273.Font.Name = "Tahoma"
  UserForm1.CommandButton274.Font.Name = "Tahoma"

  UserForm1.Label101.Font.Name = "Tahoma"
  UserForm1.Label100.Font.Name = "Tahoma"
  UserForm1.Label102.Font.Name = "Tahoma"
  UserForm1.CheckBox59.Font.Name = "Tahoma"
  UserForm1.CommandButton77.Font.Name = "Tahoma"
  UserForm1.CommandButton75.Font.Name = "Tahoma"
  UserForm1.CommandButton290.Font.Name = "Tahoma"
  UserForm1.CommandButton76.Font.Name = "Tahoma"
  
  UserForm1.Label134.Font.Name = "Tahoma"
  UserForm1.Label133.Font.Name = "Tahoma"
  UserForm1.CheckBox84.Font.Name = "Tahoma"
  UserForm1.Label147.Font.Name = "Tahoma"
  UserForm1.OptionButton17.Font.Name = "Tahoma"
  UserForm1.OptionButton18.Font.Name = "Tahoma"
  UserForm1.OptionButton19.Font.Name = "Tahoma"
  UserForm1.Label148.Font.Name = "Tahoma"
  UserForm1.OptionButton20.Font.Name = "Tahoma"
  UserForm1.OptionButton21.Font.Name = "Tahoma"
  UserForm1.CommandButton89.Font.Name = "Tahoma"
  UserForm1.CommandButton90.Font.Name = "Tahoma"
  
  UserForm1.Label103.Font.Name = "Tahoma"
  UserForm1.CheckBox68.Font.Name = "Tahoma"
  UserForm1.CommandButton84.Font.Name = "Tahoma"
  UserForm1.CommandButton80.Font.Name = "Tahoma"
  
  UserForm1.Label13.Font.Name = "Tahoma"
  UserForm1.Label14.Font.Name = "Tahoma"
  UserForm1.Label15.Font.Name = "Tahoma"
  UserForm1.CommandButton16.Font.Name = "Tahoma"

  UserForm1.Label318.Font.Name = "Tahoma"
  UserForm1.Label319.Font.Name = "Tahoma"
  UserForm1.Label320.Font.Name = "Tahoma"
  UserForm1.Label321.Font.Name = "Tahoma"
  UserForm1.Label322.Font.Name = "Tahoma"
  UserForm1.CheckBox204.Font.Name = "Tahoma"
  UserForm1.CheckBox205.Font.Name = "Tahoma"
  UserForm1.CommandButton275.Font.Name = "Tahoma"
  UserForm1.CommandButton278.Font.Name = "Tahoma"
  UserForm1.CommandButton279.Font.Name = "Tahoma"
  UserForm1.CommandButton280.Font.Name = "Tahoma"

  UserForm1.Label16.Font.Name = "Tahoma"
  UserForm1.Label17.Font.Name = "Tahoma"
  UserForm1.Label19.Font.Name = "Tahoma"
  UserForm1.CheckBox62.Font.Name = "Tahoma"
  UserForm1.Label18.Font.Name = "Tahoma"
  UserForm1.CommandButton19.Font.Name = "Tahoma"
  UserForm1.CheckBox16.Font.Name = "Tahoma"
  UserForm1.CheckBox60.Font.Name = "Tahoma"
  UserForm1.CheckBox75.Font.Name = "Tahoma"
  UserForm1.CheckBox202.Font.Name = "Tahoma"
  UserForm1.Label104.Font.Name = "Tahoma"
  UserForm1.Label105.Font.Name = "Tahoma"
  UserForm1.CommandButton21.Font.Name = "Tahoma"
  UserForm1.CommandButton20.Font.Name = "Tahoma"
  UserForm1.CommandButton303.Font.Name = "Tahoma"

  UserForm1.Label25.Font.Name = "Tahoma"
  UserForm1.Label29.Font.Name = "Tahoma"
  UserForm1.Label26.Font.Name = "Tahoma"
  UserForm1.Label28.Font.Name = "Tahoma"
  UserForm1.CheckBox63.Font.Name = "Tahoma"
  UserForm1.Label27.Font.Name = "Tahoma"
  UserForm1.CommandButton30.Font.Name = "Tahoma"
  UserForm1.CheckBox27.Font.Name = "Tahoma"
  UserForm1.CommandButton32.Font.Name = "Tahoma"
  UserForm1.CommandButton31.Font.Name = "Tahoma"

  UserForm1.Label39.Font.Name = "Tahoma"
  UserForm1.Label40.Font.Name = "Tahoma"
  UserForm1.Label36.Font.Name = "Tahoma"
  UserForm1.Label38.Font.Name = "Tahoma"
  UserForm1.Label37.Font.Name = "Tahoma"
  UserForm1.CheckBox64.Font.Name = "Tahoma"
  UserForm1.CommandButton40.Font.Name = "Tahoma"
  UserForm1.CommandButton41.Font.Name = "Tahoma"
  UserForm1.CommandButton42.Font.Name = "Tahoma"
  UserForm1.CommandButton39.Font.Name = "Tahoma"
  
  UserForm1.Label303.Font.Name = "Tahoma"
  UserForm1.Label305.Font.Name = "Tahoma"
  UserForm1.Label307.Font.Name = "Tahoma"
  UserForm1.Label312.Font.Name = "Tahoma"
  UserForm1.Label313.Font.Name = "Tahoma"
  UserForm1.Label311.Font.Name = "Tahoma"
  UserForm1.Label304.Font.Name = "Tahoma"
  UserForm1.Label306.Font.Name = "Tahoma"
  UserForm1.OptionButton29.Font.Name = "Tahoma"
  UserForm1.OptionButton28.Font.Name = "Tahoma"
  UserForm1.OptionButton31.Font.Name = "Tahoma"
  UserForm1.OptionButton32.Font.Name = "Tahoma"
  UserForm1.OptionButton30.Font.Name = "Tahoma"
  UserForm1.CheckBox200.Font.Name = "Tahoma"
  UserForm1.CheckBox229.Font.Name = "Tahoma"
  UserForm1.CheckBox201.Font.Name = "Tahoma"
  UserForm1.CommandButton257.Font.Name = "Tahoma"
  UserForm1.CommandButton258.Font.Name = "Tahoma"
  UserForm1.CommandButton288.Font.Name = "Tahoma"
  UserForm1.CommandButton289.Font.Name = "Tahoma"
  UserForm1.CommandButton259.Font.Name = "Tahoma"
  UserForm1.CommandButton260.Font.Name = "Tahoma"
  
  UserForm1.Label30.Font.Name = "Tahoma"
  UserForm1.Label31.Font.Name = "Tahoma"
  UserForm1.Label34.Font.Name = "Tahoma"
  UserForm1.CommandButton35.Font.Name = "Tahoma"
  UserForm1.CommandButton36.Font.Name = "Tahoma"
  UserForm1.Label35.Font.Name = "Tahoma"
  UserForm1.CommandButton34.Font.Name = "Tahoma"
  UserForm1.CommandButton33.Font.Name = "Tahoma"

  UserForm1.Label44.Font.Name = "Tahoma"
  UserForm1.Label45.Font.Name = "Tahoma"
  UserForm1.Label46.Font.Name = "Tahoma"
  UserForm1.Label47.Font.Name = "Tahoma"
  UserForm1.Label48.Font.Name = "Tahoma"
  UserForm1.Label49.Font.Name = "Tahoma"
  UserForm1.Label50.Font.Name = "Tahoma"
  UserForm1.Label51.Font.Name = "Tahoma"
  UserForm1.Label56.Font.Name = "Tahoma"
  UserForm1.CommandButton50.Font.Name = "Tahoma"
  UserForm1.CommandButton48.Font.Name = "Tahoma"
  UserForm1.Label52.Font.Name = "Tahoma"
  UserForm1.Label54.Font.Name = "Tahoma"
  UserForm1.CommandButton49.Font.Name = "Tahoma"
  
  UserForm1.CheckBox41.Font.Name = "Tahoma"
  UserForm1.CheckBox42.Font.Name = "Tahoma"
  UserForm1.CommandButton43.Font.Name = "Tahoma"
  UserForm1.CommandButton44.Font.Name = "Tahoma"

  UserForm1.CheckBox34.Font.Name = "Tahoma"
  UserForm1.CheckBox37.Font.Name = "Tahoma"
  UserForm1.CheckBox33.Font.Name = "Tahoma"
  UserForm1.CheckBox48.Font.Name = "Tahoma"
  UserForm1.CheckBox85.Font.Name = "Tahoma"
  UserForm1.CheckBox44.Font.Name = "Tahoma"
  UserForm1.CheckBox88.Font.Name = "Tahoma"
  UserForm1.CheckBox49.Font.Name = "Tahoma"
  UserForm1.CheckBox50.Font.Name = "Tahoma"
  UserForm1.CheckBox56.Font.Name = "Tahoma"
  UserForm1.CheckBox43.Font.Name = "Tahoma"
  UserForm1.CheckBox73.Font.Name = "Tahoma"
  UserForm1.CheckBox65.Font.Name = "Tahoma"
  UserForm1.CheckBox78.Font.Name = "Tahoma"
  UserForm1.Label43.Font.Name = "Tahoma"
  UserForm1.Label107.Font.Name = "Tahoma"
  UserForm1.Label108.Font.Name = "Tahoma"
  UserForm1.Label109.Font.Name = "Tahoma"
  UserForm1.Label110.Font.Name = "Tahoma"
  UserForm1.Label111.Font.Name = "Tahoma"
  UserForm1.Label112.Font.Name = "Tahoma"
  UserForm1.Label113.Font.Name = "Tahoma"
  UserForm1.Label114.Font.Name = "Tahoma"
  UserForm1.Label115.Font.Name = "Tahoma"
  UserForm1.Label116.Font.Name = "Tahoma"
  UserForm1.Label121.Font.Name = "Tahoma"
  UserForm1.Label122.Font.Name = "Tahoma"
  UserForm1.Label123.Font.Name = "Tahoma"
  UserForm1.Label124.Font.Name = "Tahoma"
  UserForm1.Label127.Font.Name = "Tahoma"
  UserForm1.Label128.Font.Name = "Tahoma"
  UserForm1.Label129.Font.Name = "Tahoma"
  UserForm1.Label130.Font.Name = "Tahoma"
  UserForm1.CommandButton46.Font.Name = "Tahoma"
  UserForm1.CommandButton47.Font.Name = "Tahoma"
  UserForm1.CommandButton6.Font.Name = "Tahoma"
  UserForm1.CommandButton73.Font.Name = "Tahoma"
  UserForm1.CommandButton17.Font.Name = "Tahoma"
  UserForm1.CommandButton18.Font.Name = "Tahoma"
  UserForm1.CommandButton38.Font.Name = "Tahoma"
  UserForm1.CommandButton126.Font.Name = "Tahoma"
  UserForm1.CommandButton158.Font.Name = "Tahoma"
  UserForm1.CommandButton7.Font.Name = "Tahoma"
  UserForm1.CommandButton92.Font.Name = "Tahoma"
  UserForm1.CommandButton14.Font.Name = "Tahoma"
  UserForm1.CommandButton8.Font.Name = "Tahoma"

  UserForm1.Label3.Font.Name = "Tahoma"
  UserForm1.Label172.Font.Name = "Tahoma"
  UserForm1.Label299.Font.Name = "Tahoma"
  UserForm1.Label4.Font.Name = "Tahoma"
  UserForm1.Label5.Font.Name = "Tahoma"
  UserForm1.Label6.Font.Name = "Tahoma"
  UserForm1.Label7.Font.Name = "Tahoma"
  UserForm1.Label353.Font.Name = "Tahoma"
  UserForm1.Label149.Font.Name = "Tahoma"
  UserForm1.OptionButton11.Font.Name = "Tahoma"
  UserForm1.OptionButton12.Font.Name = "Tahoma"
  UserForm1.OptionButton13.Font.Name = "Tahoma"
  UserForm1.CheckBox71.Font.Name = "Tahoma"
  UserForm1.CheckBox209.Font.Name = "Tahoma"
  UserForm1.CheckBox72.Font.Name = "Tahoma"
  UserForm1.CheckBox69.Font.Name = "Tahoma"
  UserForm1.CommandButton83.Font.Name = "Tahoma"
  UserForm1.CheckBox81.Font.Name = "Tahoma"
  UserForm1.CheckBox86.Font.Name = "Tahoma"

  UserForm1.Label41.Font.Name = "Tahoma"
  UserForm1.Label42.Font.Name = "Tahoma"
  UserForm1.Label58.Font.Name = "Tahoma"
  UserForm1.Label59.Font.Name = "Tahoma"
  UserForm1.Label60.Font.Name = "Tahoma"
  UserForm1.Label61.Font.Name = "Tahoma"
  UserForm1.Label117.Font.Name = "Tahoma"
  UserForm1.Label118.Font.Name = "Tahoma"
  UserForm1.Label119.Font.Name = "Tahoma"
  UserForm1.Label120.Font.Name = "Tahoma"
  UserForm1.Label138.Font.Name = "Tahoma"
  UserForm1.Label139.Font.Name = "Tahoma"
  UserForm1.CommandButton9.Font.Name = "Tahoma"
  UserForm1.CommandButton94.Font.Name = "Tahoma"
  UserForm1.CommandButton95.Font.Name = "Tahoma"
  UserForm1.CommandButton96.Font.Name = "Tahoma"
  UserForm1.CommandButton97.Font.Name = "Tahoma"
  
  UserForm1.MultiPage2.Font.Name = "Tahoma"

  UserForm1.Label10.Font.Name = "Tahoma"
  UserForm1.Label11.Font.Name = "Tahoma"
  UserForm1.Label12.Font.Name = "Tahoma"
  UserForm1.ListBox1.Font.Name = "Tahoma"
  UserForm1.Label9.Font.Name = "Tahoma"

  UserForm1.Label64.Font.Name = "Tahoma"
  UserForm1.Label65.Font.Name = "Tahoma"
  UserForm1.Label66.Font.Name = "Tahoma"
  UserForm1.ListBox2.Font.Name = "Tahoma"
  UserForm1.Label67.Font.Name = "Tahoma"

  UserForm1.Label68.Font.Name = "Tahoma"
  UserForm1.Label69.Font.Name = "Tahoma"
  UserForm1.Label70.Font.Name = "Tahoma"
  UserForm1.ListBox3.Font.Name = "Tahoma"
  UserForm1.Label71.Font.Name = "Tahoma"

  UserForm1.Label72.Font.Name = "Tahoma"
  UserForm1.Label73.Font.Name = "Tahoma"
  UserForm1.Label74.Font.Name = "Tahoma"
  UserForm1.ListBox4.Font.Name = "Tahoma"
  UserForm1.Label75.Font.Name = "Tahoma"

  UserForm1.Label76.Font.Name = "Tahoma"
  UserForm1.Label77.Font.Name = "Tahoma"
  UserForm1.Label78.Font.Name = "Tahoma"
  UserForm1.ListBox5.Font.Name = "Tahoma"
  UserForm1.Label79.Font.Name = "Tahoma"

  UserForm1.Label80.Font.Name = "Tahoma"
  UserForm1.Label81.Font.Name = "Tahoma"
  UserForm1.Label82.Font.Name = "Tahoma"
  UserForm1.ListBox6.Font.Name = "Tahoma"
  UserForm1.Label83.Font.Name = "Tahoma"

  UserForm1.Label84.Font.Name = "Tahoma"
  UserForm1.Label85.Font.Name = "Tahoma"
  UserForm1.Label86.Font.Name = "Tahoma"
  UserForm1.ListBox7.Font.Name = "Tahoma"
  UserForm1.Label87.Font.Name = "Tahoma"

  UserForm1.Label88.Font.Name = "Tahoma"
  UserForm1.Label89.Font.Name = "Tahoma"
  UserForm1.Label90.Font.Name = "Tahoma"
  UserForm1.ListBox8.Font.Name = "Tahoma"
  UserForm1.Label91.Font.Name = "Tahoma"

  UserForm1.Label92.Font.Name = "Tahoma"
  UserForm1.Label93.Font.Name = "Tahoma"
  UserForm1.Label94.Font.Name = "Tahoma"
  UserForm1.ListBox9.Font.Name = "Tahoma"
  UserForm1.Label95.Font.Name = "Tahoma"

  UserForm1.Label96.Font.Name = "Tahoma"
  UserForm1.Label97.Font.Name = "Tahoma"
  UserForm1.Label98.Font.Name = "Tahoma"
  UserForm1.ListBox10.Font.Name = "Tahoma"
  UserForm1.Label99.Font.Name = "Tahoma"
  
  UserForm1.MultiPage4.Font.Name = "Tahoma"
  UserForm1.Label287.Font.Name = "Tahoma"
  UserForm1.Label288.Font.Name = "Tahoma"
  UserForm1.CheckBox171.Font.Name = "Tahoma"
  UserForm1.CheckBox172.Font.Name = "Tahoma"
  UserForm1.CheckBox173.Font.Name = "Tahoma"
  UserForm1.CheckBox174.Font.Name = "Tahoma"
  UserForm1.CheckBox175.Font.Name = "Tahoma"
  UserForm1.CheckBox176.Font.Name = "Tahoma"
  UserForm1.CheckBox177.Font.Name = "Tahoma"
  UserForm1.CheckBox178.Font.Name = "Tahoma"
  UserForm1.CheckBox179.Font.Name = "Tahoma"
  UserForm1.CheckBox180.Font.Name = "Tahoma"
  UserForm1.CheckBox181.Font.Name = "Tahoma"
  UserForm1.CommandButton246.Font.Name = "Tahoma"
  UserForm1.CommandButton247.Font.Name = "Tahoma"

  UserForm1.CheckBox210.Font.Name = "Tahoma"
  UserForm1.Label330.Font.Name = "Tahoma"
  UserForm1.Label331.Font.Name = "Tahoma"
  UserForm1.Label332.Font.Name = "Tahoma"
  UserForm1.Label333.Font.Name = "Tahoma"
  UserForm1.Label334.Font.Name = "Tahoma"
  UserForm1.Label335.Font.Name = "Tahoma"
  UserForm1.Label336.Font.Name = "Tahoma"
  UserForm1.Label337.Font.Name = "Tahoma"
  UserForm1.Label338.Font.Name = "Tahoma"
  UserForm1.Label339.Font.Name = "Tahoma"
  UserForm1.Label340.Font.Name = "Tahoma"
  UserForm1.Label341.Font.Name = "Tahoma"
  UserForm1.Label352.Font.Name = "Tahoma"
  UserForm1.Label342.Font.Name = "Tahoma"
  UserForm1.Label343.Font.Name = "Tahoma"
  UserForm1.Label344.Font.Name = "Tahoma"
  UserForm1.Label345.Font.Name = "Tahoma"
  UserForm1.Label346.Font.Name = "Tahoma"
  UserForm1.Label347.Font.Name = "Tahoma"
  UserForm1.Label348.Font.Name = "Tahoma"
  UserForm1.Label349.Font.Name = "Tahoma"
  UserForm1.Label350.Font.Name = "Tahoma"

  UserForm1.CheckBox186.Font.Name = "Tahoma"

  UserForm1.Label289.Font.Name = "Tahoma"
  UserForm1.OptionButton1.Font.Name = "Tahoma"
  UserForm1.OptionButton2.Font.Name = "Tahoma"
  UserForm1.OptionButton3.Font.Name = "Tahoma"
  UserForm1.CheckBox188.Font.Name = "Tahoma"
  UserForm1.CheckBox189.Font.Name = "Tahoma"

  UserForm1.Label292.Font.Name = "Tahoma"
  UserForm1.Label294.Font.Name = "Tahoma"
  UserForm1.CheckBox190.Font.Name = "Tahoma"
  UserForm1.CheckBox194.Font.Name = "Tahoma"
  UserForm1.CheckBox195.Font.Name = "Tahoma"
  UserForm1.CheckBox203.Font.Name = "Tahoma"
      
  UserForm1.Label295.Font.Name = "Tahoma"
  UserForm1.Label296.Font.Name = "Tahoma"
  UserForm1.Label297.Font.Name = "Tahoma"
  UserForm1.CommandButton248.Font.Name = "Tahoma"
  UserForm1.CommandButton249.Font.Name = "Tahoma"
  UserForm1.CommandButton250.Font.Name = "Tahoma"
  UserForm1.CommandButton251.Font.Name = "Tahoma"
  UserForm1.CommandButton252.Font.Name = "Tahoma"
  UserForm1.CommandButton253.Font.Name = "Tahoma"

  UserForm1.Label324.Font.Name = "Tahoma"
  UserForm1.Label325.Font.Name = "Tahoma"
  UserForm1.Label326.Font.Name = "Tahoma"
  UserForm1.Label327.Font.Name = "Tahoma"
  UserForm1.Label328.Font.Name = "Tahoma"
  UserForm1.CommandButton283.Font.Name = "Tahoma"
  UserForm1.CommandButton284.Font.Name = "Tahoma"
  UserForm1.CommandButton285.Font.Name = "Tahoma"
  UserForm1.CommandButton286.Font.Name = "Tahoma"
  UserForm1.CommandButton287.Font.Name = "Tahoma"

  UserForm1.MultiPage5.Font.Name = "Tahoma"

  UserForm1.ListBox12.Font.Name = "Tahoma"
  UserForm1.ListBox13.Font.Name = "Tahoma"
  UserForm1.ListBox14.Font.Name = "Tahoma"
  UserForm1.ListBox15.Font.Name = "Tahoma"
  UserForm1.ListBox16.Font.Name = "Tahoma"
  UserForm1.ListBox17.Font.Name = "Tahoma"
  UserForm1.ListBox18.Font.Name = "Tahoma"
  UserForm1.ListBox19.Font.Name = "Tahoma"
  UserForm1.ListBox20.Font.Name = "Tahoma"
  UserForm1.ListBox21.Font.Name = "Tahoma"

End Sub

Sub FONT_CHG1_4()

  UserForm1.MultiPage1.Font.Name = "MS UI Gothic"
  UserForm1.MultiPage3.Font.Name = "MS UI Gothic"
  
  UserForm1.Label1.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox1.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox2.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox3.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox7.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox22.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox208.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox32.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox74.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox92.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox206.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox207.Font.Name = "MS UI Gothic"
  UserForm1.Label143.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton14.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton15.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton16.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton45.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton78.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton37.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton12.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton1.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton2.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton81.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton85.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton87.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton88.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton104.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton261.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton262.Font.Name = "MS UI Gothic"

  UserForm1.Label8.Font.Name = "MS UI Gothic"
  UserForm1.Label2.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox12.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton91.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton79.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton54.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton15.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton5.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton3.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton4.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton82.Font.Name = "MS UI Gothic"

  UserForm1.Label20.Font.Name = "MS UI Gothic"
  UserForm1.Label22.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton267.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton86.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton25.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton22.Font.Name = "MS UI Gothic"
  
  UserForm1.Label141.Font.Name = "MS UI Gothic"
  UserForm1.Label140.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton103.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton101.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton102.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton100.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton98.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton99.Font.Name = "MS UI Gothic"

  UserForm1.Label142.Font.Name = "MS UI Gothic"
  UserForm1.Label144.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton22.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton23.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton24.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton25.Font.Name = "MS UI Gothic"
  UserForm1.Label145.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton26.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton27.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton118.Font.Name = "MS UI Gothic"
  
  UserForm1.Label62.Font.Name = "MS UI Gothic"
  UserForm1.Label63.Font.Name = "MS UI Gothic"
  UserForm1.Label314.Font.Name = "MS UI Gothic"
  UserForm1.Label315.Font.Name = "MS UI Gothic"
  UserForm1.Label316.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox54.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox55.Font.Name = "MS UI Gothic"
  UserForm1.Label146.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton4.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton5.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton6.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton7.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton8.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton9.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton10.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton51.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton272.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton273.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton274.Font.Name = "MS UI Gothic"

  UserForm1.Label101.Font.Name = "MS UI Gothic"
  UserForm1.Label100.Font.Name = "MS UI Gothic"
  UserForm1.Label102.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox59.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton77.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton75.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton290.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton76.Font.Name = "MS UI Gothic"
  
  UserForm1.Label134.Font.Name = "MS UI Gothic"
  UserForm1.Label133.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox84.Font.Name = "MS UI Gothic"
  UserForm1.Label147.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton17.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton18.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton19.Font.Name = "MS UI Gothic"
  UserForm1.Label148.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton20.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton21.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton89.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton90.Font.Name = "MS UI Gothic"
  
  UserForm1.Label103.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox68.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton84.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton80.Font.Name = "MS UI Gothic"
  
  UserForm1.Label13.Font.Name = "MS UI Gothic"
  UserForm1.Label14.Font.Name = "MS UI Gothic"
  UserForm1.Label15.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton16.Font.Name = "MS UI Gothic"

  UserForm1.Label318.Font.Name = "MS UI Gothic"
  UserForm1.Label319.Font.Name = "MS UI Gothic"
  UserForm1.Label320.Font.Name = "MS UI Gothic"
  UserForm1.Label321.Font.Name = "MS UI Gothic"
  UserForm1.Label322.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox204.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox205.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton275.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton278.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton279.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton280.Font.Name = "MS UI Gothic"

  UserForm1.Label16.Font.Name = "MS UI Gothic"
  UserForm1.Label17.Font.Name = "MS UI Gothic"
  UserForm1.Label19.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox62.Font.Name = "MS UI Gothic"
  UserForm1.Label18.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton19.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox16.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox60.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox75.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox202.Font.Name = "MS UI Gothic"
  UserForm1.Label104.Font.Name = "MS UI Gothic"
  UserForm1.Label105.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton21.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton20.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton303.Font.Name = "MS UI Gothic"

  UserForm1.Label25.Font.Name = "MS UI Gothic"
  UserForm1.Label29.Font.Name = "MS UI Gothic"
  UserForm1.Label26.Font.Name = "MS UI Gothic"
  UserForm1.Label28.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox63.Font.Name = "MS UI Gothic"
  UserForm1.Label27.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton30.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox27.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton32.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton31.Font.Name = "MS UI Gothic"

  UserForm1.Label39.Font.Name = "MS UI Gothic"
  UserForm1.Label40.Font.Name = "MS UI Gothic"
  UserForm1.Label36.Font.Name = "MS UI Gothic"
  UserForm1.Label38.Font.Name = "MS UI Gothic"
  UserForm1.Label37.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox64.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton40.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton41.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton42.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton39.Font.Name = "MS UI Gothic"
  
  UserForm1.Label303.Font.Name = "MS UI Gothic"
  UserForm1.Label305.Font.Name = "MS UI Gothic"
  UserForm1.Label307.Font.Name = "MS UI Gothic"
  UserForm1.Label312.Font.Name = "MS UI Gothic"
  UserForm1.Label313.Font.Name = "MS UI Gothic"
  UserForm1.Label311.Font.Name = "MS UI Gothic"
  UserForm1.Label304.Font.Name = "MS UI Gothic"
  UserForm1.Label306.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton29.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton28.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton31.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton32.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton30.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox200.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox229.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox201.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton257.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton258.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton288.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton289.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton259.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton260.Font.Name = "MS UI Gothic"
  
  UserForm1.Label30.Font.Name = "MS UI Gothic"
  UserForm1.Label31.Font.Name = "MS UI Gothic"
  UserForm1.Label34.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton35.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton36.Font.Name = "MS UI Gothic"
  UserForm1.Label35.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton34.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton33.Font.Name = "MS UI Gothic"

  UserForm1.Label44.Font.Name = "MS UI Gothic"
  UserForm1.Label45.Font.Name = "MS UI Gothic"
  UserForm1.Label46.Font.Name = "MS UI Gothic"
  UserForm1.Label47.Font.Name = "MS UI Gothic"
  UserForm1.Label48.Font.Name = "MS UI Gothic"
  UserForm1.Label49.Font.Name = "MS UI Gothic"
  UserForm1.Label50.Font.Name = "MS UI Gothic"
  UserForm1.Label51.Font.Name = "MS UI Gothic"
  UserForm1.Label56.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton50.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton48.Font.Name = "MS UI Gothic"
  UserForm1.Label52.Font.Name = "MS UI Gothic"
  UserForm1.Label54.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton49.Font.Name = "MS UI Gothic"
  
  UserForm1.CheckBox41.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox42.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton43.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton44.Font.Name = "MS UI Gothic"

  UserForm1.CheckBox34.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox37.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox33.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox48.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox85.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox44.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox88.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox49.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox50.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox56.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox43.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox73.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox65.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox78.Font.Name = "MS UI Gothic"
  UserForm1.Label43.Font.Name = "MS UI Gothic"
  UserForm1.Label107.Font.Name = "MS UI Gothic"
  UserForm1.Label108.Font.Name = "MS UI Gothic"
  UserForm1.Label109.Font.Name = "MS UI Gothic"
  UserForm1.Label110.Font.Name = "MS UI Gothic"
  UserForm1.Label111.Font.Name = "MS UI Gothic"
  UserForm1.Label112.Font.Name = "MS UI Gothic"
  UserForm1.Label113.Font.Name = "MS UI Gothic"
  UserForm1.Label114.Font.Name = "MS UI Gothic"
  UserForm1.Label115.Font.Name = "MS UI Gothic"
  UserForm1.Label116.Font.Name = "MS UI Gothic"
  UserForm1.Label121.Font.Name = "MS UI Gothic"
  UserForm1.Label122.Font.Name = "MS UI Gothic"
  UserForm1.Label123.Font.Name = "MS UI Gothic"
  UserForm1.Label124.Font.Name = "MS UI Gothic"
  UserForm1.Label127.Font.Name = "MS UI Gothic"
  UserForm1.Label128.Font.Name = "MS UI Gothic"
  UserForm1.Label129.Font.Name = "MS UI Gothic"
  UserForm1.Label130.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton46.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton47.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton6.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton73.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton17.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton18.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton38.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton126.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton158.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton7.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton92.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton14.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton8.Font.Name = "MS UI Gothic"

  UserForm1.Label3.Font.Name = "MS UI Gothic"
  UserForm1.Label172.Font.Name = "MS UI Gothic"
  UserForm1.Label299.Font.Name = "MS UI Gothic"
  UserForm1.Label4.Font.Name = "MS UI Gothic"
  UserForm1.Label5.Font.Name = "MS UI Gothic"
  UserForm1.Label6.Font.Name = "MS UI Gothic"
  UserForm1.Label7.Font.Name = "MS UI Gothic"
  UserForm1.Label353.Font.Name = "MS UI Gothic"
  UserForm1.Label149.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton11.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton12.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton13.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox71.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox209.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox72.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox69.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton83.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox81.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox86.Font.Name = "MS UI Gothic"

  UserForm1.Label41.Font.Name = "MS UI Gothic"
  UserForm1.Label42.Font.Name = "MS UI Gothic"
  UserForm1.Label58.Font.Name = "MS UI Gothic"
  UserForm1.Label59.Font.Name = "MS UI Gothic"
  UserForm1.Label60.Font.Name = "MS UI Gothic"
  UserForm1.Label61.Font.Name = "MS UI Gothic"
  UserForm1.Label117.Font.Name = "MS UI Gothic"
  UserForm1.Label118.Font.Name = "MS UI Gothic"
  UserForm1.Label119.Font.Name = "MS UI Gothic"
  UserForm1.Label120.Font.Name = "MS UI Gothic"
  UserForm1.Label138.Font.Name = "MS UI Gothic"
  UserForm1.Label139.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton9.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton94.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton95.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton96.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton97.Font.Name = "MS UI Gothic"
  
  UserForm1.MultiPage2.Font.Name = "MS UI Gothic"

  UserForm1.Label10.Font.Name = "MS UI Gothic"
  UserForm1.Label11.Font.Name = "MS UI Gothic"
  UserForm1.Label12.Font.Name = "MS UI Gothic"
  UserForm1.ListBox1.Font.Name = "MS UI Gothic"
  UserForm1.Label9.Font.Name = "MS UI Gothic"

  UserForm1.Label64.Font.Name = "MS UI Gothic"
  UserForm1.Label65.Font.Name = "MS UI Gothic"
  UserForm1.Label66.Font.Name = "MS UI Gothic"
  UserForm1.ListBox2.Font.Name = "MS UI Gothic"
  UserForm1.Label67.Font.Name = "MS UI Gothic"

  UserForm1.Label68.Font.Name = "MS UI Gothic"
  UserForm1.Label69.Font.Name = "MS UI Gothic"
  UserForm1.Label70.Font.Name = "MS UI Gothic"
  UserForm1.ListBox3.Font.Name = "MS UI Gothic"
  UserForm1.Label71.Font.Name = "MS UI Gothic"

  UserForm1.Label72.Font.Name = "MS UI Gothic"
  UserForm1.Label73.Font.Name = "MS UI Gothic"
  UserForm1.Label74.Font.Name = "MS UI Gothic"
  UserForm1.ListBox4.Font.Name = "MS UI Gothic"
  UserForm1.Label75.Font.Name = "MS UI Gothic"

  UserForm1.Label76.Font.Name = "MS UI Gothic"
  UserForm1.Label77.Font.Name = "MS UI Gothic"
  UserForm1.Label78.Font.Name = "MS UI Gothic"
  UserForm1.ListBox5.Font.Name = "MS UI Gothic"
  UserForm1.Label79.Font.Name = "MS UI Gothic"

  UserForm1.Label80.Font.Name = "MS UI Gothic"
  UserForm1.Label81.Font.Name = "MS UI Gothic"
  UserForm1.Label82.Font.Name = "MS UI Gothic"
  UserForm1.ListBox6.Font.Name = "MS UI Gothic"
  UserForm1.Label83.Font.Name = "MS UI Gothic"

  UserForm1.Label84.Font.Name = "MS UI Gothic"
  UserForm1.Label85.Font.Name = "MS UI Gothic"
  UserForm1.Label86.Font.Name = "MS UI Gothic"
  UserForm1.ListBox7.Font.Name = "MS UI Gothic"
  UserForm1.Label87.Font.Name = "MS UI Gothic"

  UserForm1.Label88.Font.Name = "MS UI Gothic"
  UserForm1.Label89.Font.Name = "MS UI Gothic"
  UserForm1.Label90.Font.Name = "MS UI Gothic"
  UserForm1.ListBox8.Font.Name = "MS UI Gothic"
  UserForm1.Label91.Font.Name = "MS UI Gothic"

  UserForm1.Label92.Font.Name = "MS UI Gothic"
  UserForm1.Label93.Font.Name = "MS UI Gothic"
  UserForm1.Label94.Font.Name = "MS UI Gothic"
  UserForm1.ListBox9.Font.Name = "MS UI Gothic"
  UserForm1.Label95.Font.Name = "MS UI Gothic"

  UserForm1.Label96.Font.Name = "MS UI Gothic"
  UserForm1.Label97.Font.Name = "MS UI Gothic"
  UserForm1.Label98.Font.Name = "MS UI Gothic"
  UserForm1.ListBox10.Font.Name = "MS UI Gothic"
  UserForm1.Label99.Font.Name = "MS UI Gothic"

  UserForm1.MultiPage4.Font.Name = "MS UI Gothic"
  UserForm1.Label287.Font.Name = "MS UI Gothic"
  UserForm1.Label288.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox171.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox172.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox173.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox174.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox175.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox176.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox177.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox178.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox179.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox180.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox181.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton246.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton247.Font.Name = "MS UI Gothic"

  UserForm1.CheckBox210.Font.Name = "MS UI Gothic"
  UserForm1.Label330.Font.Name = "MS UI Gothic"
  UserForm1.Label331.Font.Name = "MS UI Gothic"
  UserForm1.Label332.Font.Name = "MS UI Gothic"
  UserForm1.Label333.Font.Name = "MS UI Gothic"
  UserForm1.Label334.Font.Name = "MS UI Gothic"
  UserForm1.Label335.Font.Name = "MS UI Gothic"
  UserForm1.Label336.Font.Name = "MS UI Gothic"
  UserForm1.Label337.Font.Name = "MS UI Gothic"
  UserForm1.Label338.Font.Name = "MS UI Gothic"
  UserForm1.Label339.Font.Name = "MS UI Gothic"
  UserForm1.Label340.Font.Name = "MS UI Gothic"
  UserForm1.Label341.Font.Name = "MS UI Gothic"
  UserForm1.Label352.Font.Name = "MS UI Gothic"
  UserForm1.Label342.Font.Name = "MS UI Gothic"
  UserForm1.Label343.Font.Name = "MS UI Gothic"
  UserForm1.Label344.Font.Name = "MS UI Gothic"
  UserForm1.Label345.Font.Name = "MS UI Gothic"
  UserForm1.Label346.Font.Name = "MS UI Gothic"
  UserForm1.Label347.Font.Name = "MS UI Gothic"
  UserForm1.Label348.Font.Name = "MS UI Gothic"
  UserForm1.Label349.Font.Name = "MS UI Gothic"
  UserForm1.Label350.Font.Name = "MS UI Gothic"

  UserForm1.CheckBox186.Font.Name = "MS UI Gothic"

  UserForm1.Label289.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton1.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton2.Font.Name = "MS UI Gothic"
  UserForm1.OptionButton3.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox188.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox189.Font.Name = "MS UI Gothic"

  UserForm1.Label292.Font.Name = "MS UI Gothic"
  UserForm1.Label294.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox190.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox194.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox195.Font.Name = "MS UI Gothic"
  UserForm1.CheckBox203.Font.Name = "MS UI Gothic"
      
  UserForm1.Label295.Font.Name = "MS UI Gothic"
  UserForm1.Label296.Font.Name = "MS UI Gothic"
  UserForm1.Label297.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton248.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton249.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton250.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton251.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton252.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton253.Font.Name = "MS UI Gothic"

  UserForm1.Label324.Font.Name = "MS UI Gothic"
  UserForm1.Label325.Font.Name = "MS UI Gothic"
  UserForm1.Label326.Font.Name = "MS UI Gothic"
  UserForm1.Label327.Font.Name = "MS UI Gothic"
  UserForm1.Label328.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton283.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton284.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton285.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton286.Font.Name = "MS UI Gothic"
  UserForm1.CommandButton287.Font.Name = "MS UI Gothic"

  UserForm1.MultiPage5.Font.Name = "MS UI Gothic"

  UserForm1.ListBox12.Font.Name = "MS UI Gothic"
  UserForm1.ListBox13.Font.Name = "MS UI Gothic"
  UserForm1.ListBox14.Font.Name = "MS UI Gothic"
  UserForm1.ListBox15.Font.Name = "MS UI Gothic"
  UserForm1.ListBox16.Font.Name = "MS UI Gothic"
  UserForm1.ListBox17.Font.Name = "MS UI Gothic"
  UserForm1.ListBox18.Font.Name = "MS UI Gothic"
  UserForm1.ListBox19.Font.Name = "MS UI Gothic"
  UserForm1.ListBox20.Font.Name = "MS UI Gothic"
  UserForm1.ListBox21.Font.Name = "MS UI Gothic"

End Sub

Sub FONT_CHG2()

  If SW_ENGLISH = True Then
     UserForm1.Label32.Font.Name = "Courier New"
     UserForm1.Label33.Font.Name = "Courier New"
     UserForm1.Label53.Font.Name = "Courier New"
     UserForm1.Label55.Font.Name = "Courier New"
     UserForm1.Label57.Font.Name = "Courier New"
     UserForm1.Label301.Font.Name = "Courier New"
     UserForm1.Label302.Font.Name = "Courier New"
     
     UserForm1.Label32.Font.Size = 8
     UserForm1.Label33.Font.Size = 8
     UserForm1.Label53.Font.Size = 8
     UserForm1.Label55.Font.Size = 8
     UserForm1.Label57.Font.Size = 8
     UserForm1.Label301.Font.Size = 8
     UserForm1.Label302.Font.Size = 8
     
     UserForm1.ComboBox1.Font.Name = "Courier New"
     UserForm1.ComboBox2.Font.Name = "Courier New"
     UserForm1.ComboBox3.Font.Name = "Courier New"
     UserForm1.ComboBox4.Font.Name = "Courier New"
     UserForm1.ComboBox5.Font.Name = "Courier New"
     UserForm1.ComboBox6.Font.Name = "Courier New"
     UserForm1.ComboBox7.Font.Name = "Courier New"
     UserForm1.ComboBox8.Font.Name = "Courier New"
     UserForm1.ComboBox9.Font.Name = "Courier New"
     UserForm1.ComboBox12.Font.Name = "Courier New"
     UserForm1.ComboBox13.Font.Name = "Courier New"
     UserForm1.ComboBox14.Font.Name = "Courier New"
     UserForm1.ComboBox15.Font.Name = "Courier New"
     UserForm1.ComboBox16.Font.Name = "Courier New"
     UserForm1.ComboBox17.Font.Name = "Courier New"
     UserForm1.ComboBox18.Font.Name = "Courier New"
     UserForm1.ComboBox19.Font.Name = "Courier New"
     UserForm1.ComboBox20.Font.Name = "Courier New"
     UserForm1.ComboBox21.Font.Name = "Courier New"
     UserForm1.ComboBox22.Font.Name = "Courier New"
     UserForm1.ComboBox23.Font.Name = "Courier New"
     UserForm1.ComboBox24.Font.Name = "Courier New"
     UserForm1.ComboBox25.Font.Name = "Courier New"
     UserForm1.ComboBox26.Font.Name = "Courier New"
     UserForm1.ComboBox27.Font.Name = "Courier New"
     UserForm1.ComboBox28.Font.Name = "Courier New"
     UserForm1.ComboBox29.Font.Name = "Courier New"
     UserForm1.ComboBox30.Font.Name = "Courier New"
     UserForm1.ComboBox31.Font.Name = "Courier New"
     UserForm1.ComboBox60.Font.Name = "Courier New"
     UserForm1.ComboBox61.Font.Name = "Courier New"
     UserForm1.ComboBox62.Font.Name = "Courier New"
  
     UserForm1.ComboBox1.Font.Size = 8
     UserForm1.ComboBox2.Font.Size = 8
     UserForm1.ComboBox3.Font.Size = 8
     UserForm1.ComboBox4.Font.Size = 8
     UserForm1.ComboBox5.Font.Size = 8
     UserForm1.ComboBox6.Font.Size = 8
     UserForm1.ComboBox7.Font.Size = 8
     UserForm1.ComboBox8.Font.Size = 8
     UserForm1.ComboBox9.Font.Size = 8
     UserForm1.ComboBox12.Font.Size = 8
     UserForm1.ComboBox13.Font.Size = 8
     UserForm1.ComboBox14.Font.Size = 8
     UserForm1.ComboBox15.Font.Size = 8
     UserForm1.ComboBox16.Font.Size = 8
     UserForm1.ComboBox17.Font.Size = 8
     UserForm1.ComboBox18.Font.Size = 8
     UserForm1.ComboBox19.Font.Size = 8
     UserForm1.ComboBox20.Font.Size = 8
     UserForm1.ComboBox21.Font.Size = 8
     UserForm1.ComboBox22.Font.Size = 8
     UserForm1.ComboBox23.Font.Size = 8
     UserForm1.ComboBox24.Font.Size = 8
     UserForm1.ComboBox25.Font.Size = 8
     UserForm1.ComboBox26.Font.Size = 8
     UserForm1.ComboBox27.Font.Size = 8
     UserForm1.ComboBox28.Font.Size = 8
     UserForm1.ComboBox29.Font.Size = 8
     UserForm1.ComboBox30.Font.Size = 8
     UserForm1.ComboBox31.Font.Size = 8
     UserForm1.ComboBox60.Font.Size = 8
     UserForm1.ComboBox61.Font.Size = 8
     UserForm1.ComboBox62.Font.Size = 8
  
     UserForm1.TextBox1.Font.Name = "Courier New"
     UserForm1.TextBox2.Font.Name = "Courier New"
     UserForm1.TextBox3.Font.Name = "Courier New"
     UserForm1.TextBox5.Font.Name = "Courier New"
     UserForm1.TextBox7.Font.Name = "Courier New"
     UserForm1.TextBox8.Font.Name = "Courier New"
     UserForm1.TextBox10.Font.Name = "Courier New"
     UserForm1.TextBox11.Font.Name = "Courier New"
     UserForm1.TextBox12.Font.Name = "Courier New"
     UserForm1.TextBox13.Font.Name = "Courier New"
     UserForm1.TextBox14.Font.Name = "Courier New"
     UserForm1.TextBox15.Font.Name = "Courier New"
     UserForm1.TextBox16.Font.Name = "Courier New"
     UserForm1.TextBox17.Font.Name = "Courier New"
     UserForm1.TextBox18.Font.Name = "Courier New"
     UserForm1.TextBox19.Font.Name = "Courier New"
     UserForm1.TextBox20.Font.Name = "Courier New"
     UserForm1.TextBox21.Font.Name = "Courier New"
     UserForm1.TextBox22.Font.Name = "Courier New"
     UserForm1.TextBox23.Font.Name = "Courier New"
     UserForm1.TextBox25.Font.Name = "Courier New"
     UserForm1.TextBox26.Font.Name = "Courier New"
     UserForm1.TextBox27.Font.Name = "Courier New"
     UserForm1.TextBox28.Font.Name = "Courier New"
     UserForm1.TextBox29.Font.Name = "Courier New"
     UserForm1.TextBox30.Font.Name = "Courier New"
     UserForm1.TextBox37.Font.Name = "Courier New"
     UserForm1.TextBox38.Font.Name = "Courier New"
     UserForm1.TextBox39.Font.Name = "Courier New"
     UserForm1.TextBox40.Font.Name = "Courier New"
     UserForm1.TextBox41.Font.Name = "Courier New"
     UserForm1.TextBox42.Font.Name = "Courier New"
     UserForm1.TextBox43.Font.Name = "Courier New"
     UserForm1.TextBox44.Font.Name = "Courier New"
     UserForm1.TextBox45.Font.Name = "Courier New"
     UserForm1.TextBox47.Font.Name = "Courier New"
     UserForm1.TextBox48.Font.Name = "Courier New"
     UserForm1.TextBox49.Font.Name = "Courier New"
     UserForm1.TextBox50.Font.Name = "Courier New"
     UserForm1.TextBox51.Font.Name = "Courier New"
     UserForm1.TextBox52.Font.Name = "Courier New"
     UserForm1.TextBox53.Font.Name = "Courier New"
     UserForm1.TextBox54.Font.Name = "Courier New"
     UserForm1.TextBox55.Font.Name = "Courier New"
     UserForm1.TextBox56.Font.Name = "Courier New"
     UserForm1.TextBox57.Font.Name = "Courier New"
     UserForm1.TextBox58.Font.Name = "Courier New"
     UserForm1.TextBox59.Font.Name = "Courier New"
     UserForm1.TextBox60.Font.Name = "Courier New"
     UserForm1.TextBox61.Font.Name = "Courier New"
     UserForm1.TextBox62.Font.Name = "Courier New"
     UserForm1.TextBox63.Font.Name = "Courier New"
     UserForm1.TextBox64.Font.Name = "Courier New"
     UserForm1.TextBox65.Font.Name = "Courier New"
     UserForm1.TextBox66.Font.Name = "Courier New"
  
     UserForm1.TextBox1.Font.Size = 8
     UserForm1.TextBox2.Font.Size = 8
     UserForm1.TextBox3.Font.Size = 8
     UserForm1.TextBox5.Font.Size = 8
     UserForm1.TextBox7.Font.Size = 8
     UserForm1.TextBox8.Font.Size = 8
     UserForm1.TextBox10.Font.Size = 8
     UserForm1.TextBox11.Font.Size = 8
     UserForm1.TextBox12.Font.Size = 8
     UserForm1.TextBox13.Font.Size = 8
     UserForm1.TextBox14.Font.Size = 8
     UserForm1.TextBox15.Font.Size = 8
     UserForm1.TextBox16.Font.Size = 8
     UserForm1.TextBox17.Font.Size = 8
     UserForm1.TextBox18.Font.Size = 8
     UserForm1.TextBox19.Font.Size = 8
     UserForm1.TextBox20.Font.Size = 8
     UserForm1.TextBox21.Font.Size = 8
     UserForm1.TextBox22.Font.Size = 8
     UserForm1.TextBox23.Font.Size = 8
     UserForm1.TextBox25.Font.Size = 8
     UserForm1.TextBox26.Font.Size = 8
     UserForm1.TextBox27.Font.Size = 8
     UserForm1.TextBox28.Font.Size = 8
     UserForm1.TextBox29.Font.Size = 8
     UserForm1.TextBox30.Font.Size = 8
     UserForm1.TextBox37.Font.Size = 8
     UserForm1.TextBox38.Font.Size = 8
     UserForm1.TextBox39.Font.Size = 8
     UserForm1.TextBox40.Font.Size = 8
     UserForm1.TextBox41.Font.Size = 8
     UserForm1.TextBox42.Font.Size = 8
     UserForm1.TextBox43.Font.Size = 8
     UserForm1.TextBox44.Font.Size = 8
     UserForm1.TextBox45.Font.Size = 8
     UserForm1.TextBox47.Font.Size = 8
     UserForm1.TextBox48.Font.Size = 8
     UserForm1.TextBox49.Font.Size = 8
     UserForm1.TextBox50.Font.Size = 8
     UserForm1.TextBox51.Font.Size = 8
     UserForm1.TextBox52.Font.Size = 8
     UserForm1.TextBox53.Font.Size = 8
     UserForm1.TextBox54.Font.Size = 8
     UserForm1.TextBox55.Font.Size = 8
     UserForm1.TextBox56.Font.Size = 8
     UserForm1.TextBox57.Font.Size = 8
     UserForm1.TextBox58.Font.Size = 8
     UserForm1.TextBox59.Font.Size = 8
     UserForm1.TextBox60.Font.Size = 8
     UserForm1.TextBox61.Font.Size = 8
     UserForm1.TextBox62.Font.Size = 8
     UserForm1.TextBox63.Font.Size = 8
     UserForm1.TextBox64.Font.Size = 8
     UserForm1.TextBox65.Font.Size = 8
     UserForm1.TextBox66.Font.Size = 8
  
     UserForm1.ComboBox59.Font.Name = "Courier New"
     UserForm1.TextBox32.Font.Name = "Courier New"
     UserForm1.TextBox33.Font.Name = "Courier New"
     UserForm1.TextBox34.Font.Name = "Courier New"
     UserForm1.TextBox35.Font.Name = "Courier New"
     UserForm1.TextBox4.Font.Name = "Courier New"
     UserForm1.TextBox36.Font.Name = "Courier New"
     UserForm1.TextBox6.Font.Name = "Courier New"
    
     UserForm1.ComboBox59.Font.Size = 8
     UserForm1.TextBox32.Font.Size = 8
     UserForm1.TextBox33.Font.Size = 8
     UserForm1.TextBox34.Font.Size = 8
     UserForm1.TextBox35.Font.Size = 8
     UserForm1.TextBox4.Font.Size = 8
     UserForm1.TextBox36.Font.Size = 8
     UserForm1.TextBox6.Font.Size = 8
  Else
     UserForm1.Label32.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label33.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label53.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label55.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label57.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label301.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.Label302.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     
     UserForm1.Label32.Font.Size = 9
     UserForm1.Label33.Font.Size = 9
     UserForm1.Label53.Font.Size = 9
     UserForm1.Label55.Font.Size = 9
     UserForm1.Label57.Font.Size = 9
     UserForm1.Label301.Font.Size = 9
     UserForm1.Label302.Font.Size = 9
     
     UserForm1.ComboBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox3.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox4.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox5.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox6.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox7.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox8.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox9.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox12.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox13.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox14.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox15.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox16.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox17.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox18.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox19.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox20.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox21.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox22.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox23.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox24.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox25.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox26.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox27.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox28.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox29.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox30.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox31.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox60.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox61.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.ComboBox62.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     UserForm1.ComboBox1.Font.Size = 9
     UserForm1.ComboBox2.Font.Size = 9
     UserForm1.ComboBox3.Font.Size = 9
     UserForm1.ComboBox4.Font.Size = 9
     UserForm1.ComboBox5.Font.Size = 9
     UserForm1.ComboBox6.Font.Size = 9
     UserForm1.ComboBox7.Font.Size = 9
     UserForm1.ComboBox8.Font.Size = 9
     UserForm1.ComboBox9.Font.Size = 9
     UserForm1.ComboBox12.Font.Size = 9
     UserForm1.ComboBox13.Font.Size = 9
     UserForm1.ComboBox14.Font.Size = 9
     UserForm1.ComboBox15.Font.Size = 9
     UserForm1.ComboBox16.Font.Size = 9
     UserForm1.ComboBox17.Font.Size = 9
     UserForm1.ComboBox18.Font.Size = 9
     UserForm1.ComboBox19.Font.Size = 9
     UserForm1.ComboBox20.Font.Size = 9
     UserForm1.ComboBox21.Font.Size = 9
     UserForm1.ComboBox22.Font.Size = 9
     UserForm1.ComboBox23.Font.Size = 9
     UserForm1.ComboBox24.Font.Size = 9
     UserForm1.ComboBox25.Font.Size = 9
     UserForm1.ComboBox26.Font.Size = 9
     UserForm1.ComboBox27.Font.Size = 9
     UserForm1.ComboBox28.Font.Size = 9
     UserForm1.ComboBox29.Font.Size = 9
     UserForm1.ComboBox30.Font.Size = 9
     UserForm1.ComboBox31.Font.Size = 9
     UserForm1.ComboBox60.Font.Size = 9
     UserForm1.ComboBox61.Font.Size = 9
     UserForm1.ComboBox62.Font.Size = 9
  
     UserForm1.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox3.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox5.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox7.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox8.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox10.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox11.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox12.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox13.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox14.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox15.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox16.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox17.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox18.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox19.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox20.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox21.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox22.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox23.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox25.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox26.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox27.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox28.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox29.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox30.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox37.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox38.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox39.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox40.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox41.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox42.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox43.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox44.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox45.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox47.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox48.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox49.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox50.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox51.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox52.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox53.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox54.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox55.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox56.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox57.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox58.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox59.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox60.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox61.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox62.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox63.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox64.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox65.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox66.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     UserForm1.TextBox1.Font.Size = 9
     UserForm1.TextBox2.Font.Size = 9
     UserForm1.TextBox3.Font.Size = 9
     UserForm1.TextBox5.Font.Size = 9
     UserForm1.TextBox7.Font.Size = 9
     UserForm1.TextBox8.Font.Size = 9
     UserForm1.TextBox10.Font.Size = 9
     UserForm1.TextBox11.Font.Size = 9
     UserForm1.TextBox12.Font.Size = 9
     UserForm1.TextBox13.Font.Size = 9
     UserForm1.TextBox14.Font.Size = 9
     UserForm1.TextBox15.Font.Size = 9
     UserForm1.TextBox16.Font.Size = 9
     UserForm1.TextBox17.Font.Size = 9
     UserForm1.TextBox18.Font.Size = 9
     UserForm1.TextBox19.Font.Size = 9
     UserForm1.TextBox20.Font.Size = 9
     UserForm1.TextBox21.Font.Size = 9
     UserForm1.TextBox22.Font.Size = 9
     UserForm1.TextBox23.Font.Size = 9
     UserForm1.TextBox25.Font.Size = 9
     UserForm1.TextBox26.Font.Size = 9
     UserForm1.TextBox27.Font.Size = 9
     UserForm1.TextBox28.Font.Size = 9
     UserForm1.TextBox29.Font.Size = 9
     UserForm1.TextBox30.Font.Size = 9
     UserForm1.TextBox37.Font.Size = 9
     UserForm1.TextBox38.Font.Size = 9
     UserForm1.TextBox39.Font.Size = 9
     UserForm1.TextBox40.Font.Size = 9
     UserForm1.TextBox41.Font.Size = 9
     UserForm1.TextBox42.Font.Size = 9
     UserForm1.TextBox43.Font.Size = 9
     UserForm1.TextBox44.Font.Size = 9
     UserForm1.TextBox45.Font.Size = 9
     UserForm1.TextBox47.Font.Size = 9
     UserForm1.TextBox48.Font.Size = 9
     UserForm1.TextBox49.Font.Size = 9
     UserForm1.TextBox50.Font.Size = 9
     UserForm1.TextBox51.Font.Size = 9
     UserForm1.TextBox52.Font.Size = 9
     UserForm1.TextBox53.Font.Size = 9
     UserForm1.TextBox54.Font.Size = 9
     UserForm1.TextBox55.Font.Size = 9
     UserForm1.TextBox56.Font.Size = 9
     UserForm1.TextBox57.Font.Size = 9
     UserForm1.TextBox58.Font.Size = 9
     UserForm1.TextBox59.Font.Size = 9
     UserForm1.TextBox60.Font.Size = 9
     UserForm1.TextBox61.Font.Size = 9
     UserForm1.TextBox62.Font.Size = 9
     UserForm1.TextBox63.Font.Size = 9
     UserForm1.TextBox64.Font.Size = 9
     UserForm1.TextBox65.Font.Size = 9
     UserForm1.TextBox66.Font.Size = 9
  
     UserForm1.ComboBox59.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox32.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox33.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox34.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox35.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox4.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox36.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     UserForm1.TextBox6.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
    
     UserForm1.ComboBox59.Font.Size = 9
     UserForm1.TextBox32.Font.Size = 9
     UserForm1.TextBox33.Font.Size = 9
     UserForm1.TextBox34.Font.Size = 9
     UserForm1.TextBox35.Font.Size = 9
     UserForm1.TextBox4.Font.Size = 9
     UserForm1.TextBox36.Font.Size = 9
     UserForm1.TextBox6.Font.Size = 9
  End If

End Sub
Attribute VB_Name = "M02EXCEL2000"
Option Explicit
Option Private Module
Option Base 1
#If Win64 Then
Public Declare PtrSafe Function SetTimer Lib "user32" _
  (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, _
   ByVal uElapse As Long, ByVal lpTimerFunc As LongPtr) As LongPtr
#Else
Public Declare Function SetTimer Lib "user32" _
  (ByVal hwnd As Long, ByVal nIDEvent As Long, _
   ByVal uElapse As Long, ByVal lpTimerFunc As Long) As Long
#End If
#If Win64 Then
Public Declare PtrSafe Function KillTimer Lib "user32" _
  (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr) As Long
#Else
Public Declare Function KillTimer Lib "user32" _
  (ByVal hwnd As Long, ByVal nIDEvent As Long) As Long
#End If

'|fffd||598|A|fffd|t|fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||143|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
#If Win64 Then
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#Else
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#End If

Function FIND2000(TRNG As Range, ByVal W_FW As String, W_AFT As Variant, ByVal W_LI As Variant, ByVal W_SO As Variant, ByVal W_SD As Variant, ByVal W_MC As Boolean, ByVal W_MB As Boolean) As Range

  On Error GoTo LABEL_ERROR
  Set FIND2000 = TRNG.Find(W_FW, W_AFT, W_LI, xlPart, W_SO, W_SD, W_MC, W_MB)
  On Error GoTo 0
  Exit Function

LABEL_RESUME:
  On Error Resume Next
  Set FIND2000 = TRNG.Find(W_FW, W_AFT, W_LI, xlPart, W_SO, W_SD, W_MC, W_MB)
  On Error GoTo 0
  Exit Function

LABEL_ERROR:
  On Error GoTo 0
  Set W_AFT = ActiveCell
  Resume LABEL_RESUME

End Function

Sub ADPATH2000_RTN()

  W_ADPATH = Application.UserLibraryPath

End Sub

Sub SHOW_MODELESS(W_USERFORM As Object)

  W_USERFORM.Show vbModeless

End Sub

Sub TM_BGF_STR()

  Dim W_MS As Long

  W_MS = 600000
  W_TMID_BGF = SetTimer(0, 0, W_MS, AddressOf BGF_EXE_CTRL)

End Sub

Sub TM_BGF_END()

  KillTimer 0, W_TMID_BGF

End Sub

Sub BGF_EXE_CTRL()

  Dim W_CAN As Long
  
  On Error GoTo L_ERR
  
  Call TM_BGF_END

  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  W_CAN = 0
  
  Call UserForm1.BGF_EXE(W_CAN)
  Unload UserForm1

  If W_CAN = 0 Then
     Call TM_BGF_STR
  ElseIf W_CAN = 1 Then
     Application.Quit
  End If

  Exit Sub

L_ERR:

End Sub

Sub TM_STR()

  Dim W_MS As Long

  W_MS = 750
  W_TMID = SetTimer(0, 0, W_MS, AddressOf SRCH_DIC)

End Sub

Sub TM_END()

  KillTimer 0, W_TMID

End Sub

Sub SRCH_DIC()
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_WORD As String
  Dim W_DICF As String
  Dim I As Long
  Dim J As Long
  Dim AR_WORD() As String
  Dim AR_WORD2() As String
  
  Call TM_END

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "(\w|[^ -~|fffd|-|fffd|])+$"
     .IgnoreCase = True
     .Global = True
  End With
  If RE.Test(W_BOX.Value) = False Then
     Set RE = Nothing
     Exit Sub
  End If
  Set MATCHES = RE.Execute(W_BOX.Value)
  W_WORD = MATCHES.Item(0).Value
  Set RE = Nothing
  Set MATCHES = Nothing
  
  W_DICF = ThisWorkbook.path & "\dic.txt"
  If Dir(W_DICF) = "" Then
     Exit Sub
  End If
  
  I = 0
  Erase AR_WORD
  Open W_DICF For Input As #1
  Do While Not EOF(1)
     I = I + 1
     ReDim Preserve AR_WORD(I)
     Line Input #1, AR_WORD(I)
  Loop
  Close #1
  
  J = 0
  Erase AR_WORD2
  ReDim Preserve AR_WORD2(10)
  Erase AR_PWORD
  ReDim Preserve AR_PWORD(10)
  For I = 1 To UBound(AR_WORD)
     If Left$(AR_WORD(I), Len(W_WORD)) = W_WORD And _
        AR_WORD(I) <> W_WORD Then
        J = J + 1
        AR_WORD2(J) = AR_WORD(I)
        AR_PWORD(J) = Right$(AR_WORD(I), Len(AR_WORD(I)) - Len(W_WORD))
        If J = 10 Then
           Exit For
        End If
     End If
  Next I
  
  If AR_WORD2(1) <> "" Then
     Set myBar0 = CommandBars.Add(Position:=msoBarPopup, Temporary:=True)
     With myBar0
        With .Controls.Add
           .Caption = AR_WORD2(1)
           .OnAction = "INS_DIC1"
        End With
     End With
     If AR_WORD2(2) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(2)
              .OnAction = "INS_DIC2"
           End With
        End With
     End If
     If AR_WORD2(3) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(3)
              .OnAction = "INS_DIC3"
           End With
        End With
     End If
     If AR_WORD2(4) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(4)
              .OnAction = "INS_DIC4"
           End With
        End With
     End If
     If AR_WORD2(5) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(5)
              .OnAction = "INS_DIC5"
           End With
        End With
     End If
     If AR_WORD2(6) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(6)
              .OnAction = "INS_DIC6"
           End With
        End With
     End If
     If AR_WORD2(7) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(7)
              .OnAction = "INS_DIC7"
           End With
        End With
     End If
     If AR_WORD2(8) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(8)
              .OnAction = "INS_DIC8"
           End With
        End With
     End If
     If AR_WORD2(9) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(9)
              .OnAction = "INS_DIC9"
           End With
        End With
     End If
     If AR_WORD2(10) <> "" Then
        With myBar0
           With .Controls.Add
              .Caption = AR_WORD2(10)
              .OnAction = "INS_DIC10"
           End With
        End With
     End If
     myBar0.ShowPopup
  End If

End Sub

Sub INS_DIC1()

  W_BOX.Value = W_BOX.Value & AR_PWORD(1)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC2()

  W_BOX.Value = W_BOX.Value & AR_PWORD(2)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC3()

  W_BOX.Value = W_BOX.Value & AR_PWORD(3)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC4()

  W_BOX.Value = W_BOX.Value & AR_PWORD(4)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC5()

  W_BOX.Value = W_BOX.Value & AR_PWORD(5)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC6()

  W_BOX.Value = W_BOX.Value & AR_PWORD(6)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC7()

  W_BOX.Value = W_BOX.Value & AR_PWORD(7)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC8()

  W_BOX.Value = W_BOX.Value & AR_PWORD(8)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC9()

  W_BOX.Value = W_BOX.Value & AR_PWORD(9)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub INS_DIC10()

  W_BOX.Value = W_BOX.Value & AR_PWORD(10)
  W_SELSTART = Len(W_BOX.Value)

End Sub

Sub MK_DIC()
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_DICF As String
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim AR_WORD() As String
  Dim AR_WORD2() As String
  Dim SW_DIC_AD As Boolean
  Dim SW_DIC_DB As Boolean
  Dim SW_DICF As Boolean
  
  W_DICF = ThisWorkbook.path & "\dic.txt"
  I = 0
  Erase AR_WORD
  SW_DICF = False
  If Dir(W_DICF) <> "" Then
     Open W_DICF For Input As #1
     Do While Not EOF(1)
        I = I + 1
        ReDim Preserve AR_WORD(I)
        Line Input #1, AR_WORD(I)
        SW_DICF = True
     Loop
     Close #1
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "(\w|[^ -~|fffd|-|fffd|])+"
     .IgnoreCase = True
     .Global = True
  End With
  Set MATCHES = RE.Execute(W_BOX.Value)
  
  K = 0
  Erase AR_WORD2
  SW_DIC_AD = False
  For J = 0 To MATCHES.count - 1
     If Len(MATCHES.Item(J).Value) >= 2 Then
        K = K + 1
        ReDim Preserve AR_WORD2(K)
        AR_WORD2(K) = MATCHES.Item(J).Value
        SW_DIC_AD = True
     End If
  Next J
  
  If SW_DIC_AD = True Then
     If SW_DICF = True Then
        For I = 1 To UBound(AR_WORD)
           SW_DIC_DB = False
           For J = 0 To MATCHES.count - 1
              If AR_WORD(I) = MATCHES.Item(J) Then
                 SW_DIC_DB = True
                 Exit For
              End If
           Next J
           If SW_DIC_DB = False Then
              K = K + 1
              ReDim Preserve AR_WORD2(K)
              AR_WORD2(K) = AR_WORD(I)
           End If
        Next I
     End If
    
     Open W_DICF For Output As #1
     For K = 1 To UBound(AR_WORD2)
        Print #1, AR_WORD2(K)
     Next K
     Close #1
  End If
  
  Set RE = Nothing
  Set MATCHES = Nothing

End Sub

Sub TMNP_STR(ByVal W_NPFR As Long)

  Select Case W_NPFR
  Case 1
     W_TMIDNP = SetTimer(0, 0, W_TMMS, AddressOf TMNF)
  Case 2
     W_TMIDNP = SetTimer(0, 0, W_TMMS, AddressOf TMPF)
  End Select

End Sub

Sub TMNP_END()

  KillTimer 0, W_TMIDNP

End Sub

Sub TMNF()

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "CommandButton2"
  If SW_TM = True Then
     Call UserForm1.FINDPN(True, 0)
  End If
  If W_TMMS >= 100 Then
     W_TMMS = W_TMMS - 50
     KillTimer 0, W_TMIDNP
     W_TMIDNP = SetTimer(0, 0, W_TMMS, AddressOf TMNF)
  End If
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub TMPF()

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "CommandButton1"
  If SW_TM = True Then
     Call UserForm1.FINDPN(False, 0)
  End If
  If W_TMMS >= 100 Then
     W_TMMS = W_TMMS - 50
     KillTimer 0, W_TMIDNP
     W_TMIDNP = SetTimer(0, 0, W_TMMS, AddressOf TMPF)
  End If
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Sub TMD_STR()

  Dim W_MS As Long

  W_MS = 250
  W_TMIDD = SetTimer(0, 0, W_MS, AddressOf GET_DESC)

End Sub

Sub TMD_END()

  KillTimer 0, W_TMIDD
  UserForm1.Caption = Left$(UserForm1.Label3, InStr(UserForm1.Label3, " Version ") - 1)

End Sub

Sub GET_DESC()
  
  Dim W_DESC As String
  Dim W_STR0 As String
  Dim W_STR As String
  Dim SW_OK As Boolean
  Dim W_CNT As Long
  Dim W_TH As String
  Dim I As Long
  Dim RE1 As Object
  Dim RE2 As Object
  Dim RE3 As Object
  
  
  Call TMD_END
  
  W_STR0 = W_BOXD.Value
  W_STR0 = Replace(W_STR0, "\\", Chr$(1))
  W_STR0 = Replace(W_STR0, "\(", Chr$(2))
  W_STR0 = Replace(W_STR0, "\)", Chr$(3))
  W_STR0 = Replace(W_STR0, "\[", Chr$(4))
  W_STR0 = Replace(W_STR0, "\]", Chr$(5))
  W_STR0 = Replace(W_STR0, "\{", Chr$(6))
  W_STR0 = Replace(W_STR0, "\}", Chr$(7))
  W_STR0 = Replace(W_STR0, "\.", Chr$(14))
  W_STR0 = Replace(W_STR0, "\*", Chr$(15))
  W_STR0 = Replace(W_STR0, "\+", Chr$(16))
  W_STR0 = Replace(W_STR0, "\?", Chr$(17))
  W_STR0 = Replace(W_STR0, "\|", Chr$(18))
  W_STR0 = Replace(W_STR0, "\^", Chr$(28))
  W_STR0 = Replace(W_STR0, "\$", Chr$(29))
  W_STR = Left$(W_BOXD.Value, W_BOXD.SelStart)
  W_STR = Replace(W_STR, "\\", Chr$(1))
  W_STR = Replace(W_STR, "\(", Chr$(2))
  W_STR = Replace(W_STR, "\)", Chr$(3))
  W_STR = Replace(W_STR, "\[", Chr$(4))
  W_STR = Replace(W_STR, "\]", Chr$(5))
  W_STR = Replace(W_STR, "\{", Chr$(6))
  W_STR = Replace(W_STR, "\}", Chr$(7))
  W_STR = Replace(W_STR, "\.", Chr$(14))
  W_STR = Replace(W_STR, "\*", Chr$(15))
  W_STR = Replace(W_STR, "\+", Chr$(16))
  W_STR = Replace(W_STR, "\?", Chr$(17))
  W_STR = Replace(W_STR, "\|", Chr$(18))
  W_STR = Replace(W_STR, "\^", Chr$(28))
  W_STR = Replace(W_STR, "\$", Chr$(29))
  
  Set RE1 = CreateObject("VBScript.RegExp")
  With RE1
     .Pattern = "^.*?\{(\d+)$"
     .IgnoreCase = False
     .Global = True
  End With
  
  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .Pattern = "^.*?\{(\d+),$"
     .IgnoreCase = False
     .Global = True
  End With
  
  Set RE3 = CreateObject("VBScript.RegExp")
  With RE3
     .Pattern = "^.*?\{(\d+),(\d+)$"
     .IgnoreCase = False
     .Global = True
  End With
  
  If Right$(W_STR, 1) = "(" Then
     SW_OK = True
     If Len(W_STR) >= Len(W_STR0) Then
     ElseIf Mid$(W_STR0, Len(W_STR), 2) = "(?" Then
        SW_OK = False
     End If
     If SW_OK = True Then
        W_CNT = 0
        For I = 1 To Len(W_STR)
           If Mid$(W_STR, I, 1) = "(" Then
              If I = Len(W_STR0) Then
                 W_CNT = W_CNT + 1
              ElseIf Mid$(W_STR0, I, 2) = "(?" Then
              Else
                 W_CNT = W_CNT + 1
              End If
           End If
        Next I
        If W_CNT > 0 Then
           If SW_ENGLISH = True Then
              Select Case W_CNT
              Case 1
                 W_TH = "st"
              Case 2
                 W_TH = "nd"
              Case 3
                 W_TH = "rd"
              Case Else
                 W_TH = "th"
              End Select
              W_DESC = W_CNT & W_TH & " capture group"
           Else
              W_DESC = W_CNT & "|fffd||516||683|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
           End If
        End If
     End If
  ElseIf Right$(W_STR, 3) = "(?:" Then
     If SW_ENGLISH = True Then
        W_DESC = "No caputure group"
     Else
        W_DESC = "|fffd||fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
     End If
  ElseIf Right$(W_STR, 4) = "(?<=" Then
     If SW_ENGLISH = True Then
        W_DESC = "(?<=xxx) : Matches position where xxx ends."
     Else
        W_DESC = "(?<=xxx) : xxx|fffd|I|fffd||fffd||fffd||292|u|fffd||243|}|fffd|b|fffd|`"
     End If
  ElseIf Right$(W_STR, 4) = "(?<!" Then
     If SW_ENGLISH = True Then
        W_DESC = "(?<!xxx) : Matches position where xxx doesn't end."
     Else
        W_DESC = "(?<!xxx) : xxx|fffd||fffd|I|fffd||fffd||fffd||292|u|fffd||243|}|fffd|b|fffd|`"
     End If
  ElseIf Right$(W_STR, 3) = "(?=" Then
     If SW_ENGLISH = True Then
        W_DESC = "(?=xxx) : Matches position where xxx starts."
     Else
        W_DESC = "(?=xxx) : xxx|fffd|J|fffd|n|fffd||292|u|fffd||243|}|fffd|b|fffd|`"
     End If
  ElseIf Right$(W_STR, 3) = "(?!" Then
     If SW_ENGLISH = True Then
        W_DESC = "(?!xxx) : Matches position where xxx doesn't start."
     Else
        W_DESC = "(?!xxx) : xxx|fffd||fffd|J|fffd|n|fffd||292|u|fffd||243|}|fffd|b|fffd|`"
     End If
  ElseIf Right$(W_STR, 1) = "[" Then
     If SW_ENGLISH = True Then
        W_DESC = "[xyz] : Any character in xyz"
     Else
        W_DESC = "[xyz] : xyz|fffd||302||fffd||fffd||fffd||fffd||a0a9|1|fffd||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 2) = "[^" Then
     If SW_ENGLISH = True Then
        W_DESC = "[^xyz] : Any character except xyz"
     Else
        W_DESC = "[^xyz] : xyz|fffd||20a|O|fffd||302||fffd||fffd||fffd||fffd||a0a9|1|fffd||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 1) = "|" Then
     If SW_ENGLISH = True Then
        W_DESC = "Or"
     Else
        W_DESC = "|fffd||702||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 1) = "^" Then
     If SW_ENGLISH = True Then
        W_DESC = "Begining"
     Else
        W_DESC = "|fffd||64ea|"
     End If
  ElseIf Right$(W_STR, 1) = "$" Then
     If SW_ENGLISH = True Then
        W_DESC = "End"
     Else
        W_DESC = "|fffd||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 1) = "." Then
     If SW_ENGLISH = True Then
        W_DESC = "Any character except newline"
     Else
        W_DESC = "|fffd||fffd||fffd|s|fffd||20a|O|fffd||314|C|fffd||4c2||fffd|1|fffd||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 2) = "\d" Then
     If SW_ENGLISH = True Then
        W_DESC = "Number"
     Else
        W_DESC = "|fffd||fffd||fffd||fffd|"
     End If
  ElseIf Right$(W_STR, 2) = "\D" Then
     If SW_ENGLISH = True Then
        W_DESC = "Any character except number"
     Else
        W_DESC = "|fffd||fffd||fffd||fffd||fffd||20a|O"
     End If
  ElseIf Right$(W_STR, 2) = "\n" Then
     If SW_ENGLISH = True Then
        W_DESC = "Newline"
     Else
        W_DESC = "|fffd||fffd||fffd|s"
     End If
  ElseIf Right$(W_STR, 1) = "*" Then
     If SW_ENGLISH = True Then
        W_DESC = "Repeats 0 times or more"
     Else
        W_DESC = "0|fffd||fffd||20f||fffd|J|fffd||fffd||502||fffd|"
     End If
  ElseIf Right$(W_STR, 1) = "+" Then
     If SW_ENGLISH = True Then
        W_DESC = "Repeats 1 or more times"
     Else
        W_DESC = "1|fffd||fffd||20f||fffd|J|fffd||fffd||502||fffd|"
     End If
  ElseIf Right$(W_STR, 1) = "?" Then
     If Len(W_STR) = 1 Then
     ElseIf (Right$(W_STR, 2) = "}?" Or _
             Right$(W_STR, 2) = "*?" Or _
             Right$(W_STR, 2) = "+?" Or _
             Right$(W_STR, 2) = "??") Then
        If SW_ENGLISH = True Then
           W_DESC = "Repeat shortest times"
        Else
           W_DESC = "|fffd|J|fffd||fffd||502||fffd||fffd||152|Z|fffd||fffd|v"
        End If
     ElseIf Right$(W_STR, 2) = "(?" Then
     Else
        If SW_ENGLISH = True Then
           W_DESC = "Repeats 0 times or 1 time"
        Else
           W_DESC = "0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|J|fffd||fffd||502||fffd|"
        End If
     End If
  ElseIf RE1.Test(W_STR) = True Then
     If Mid$(W_STR0, Len(W_STR) + 1, 1) = "," Then
     Else
        If SW_ENGLISH = True Then
           W_DESC = "Repeats " & RE1.Replace(W_STR, "$1") & " times"
        Else
           W_DESC = RE1.Replace(W_STR, "$1") & "|fffd||fffd|J|fffd||fffd||502||fffd|"
        End If
     End If
  ElseIf RE2.Test(W_STR) = True Then
     If Mid$(W_STR0, Len(W_STR) + 1, 1) Like "[0-9]" Then
     Else
        If SW_ENGLISH = True Then
           W_DESC = "Repeats " & RE2.Replace(W_STR, "$1") & " or more times"
        Else
           W_DESC = RE2.Replace(W_STR, "$1") & "|fffd||fffd||20f||fffd|J|fffd||fffd||502||fffd|"
        End If
     End If
  ElseIf RE3.Test(W_STR) = True Then
     If SW_ENGLISH = True Then
        W_DESC = "Repeats between " & RE3.Replace(W_STR, "$1") & " and " & RE3.Replace(W_STR, "$2") & " times"
     Else
        W_DESC = RE3.Replace(W_STR, "$1") & "|fffd||fffd||20f||fffd|" & RE3.Replace(W_STR, "$2") & "|fffd||fffd||209||fffd||fffd|J|fffd||fffd||502||fffd|"
     End If
  End If
  
  If W_DESC <> "" Then
     UserForm1.Caption = "    " & W_DESC
  End If

  Set RE1 = Nothing
  Set RE2 = Nothing
  Set RE3 = Nothing

End Sub

Sub TMR_STR()

  Dim W_MS As Long

  W_MS = 500
  W_TMIDR = SetTimer(0, 0, W_MS, AddressOf RNDS)

End Sub

Sub TMR_END()

  KillTimer 0, W_TMIDR
  UserForm1.TextBox23.Value = ""
  UserForm1.TextBox23.Visible = False

End Sub

Sub RNDS()
  
  Dim I As Long
  Dim W_RNDSTR As String
  Dim AR_TXT As Variant
  Dim J As Long
  Dim W_RCNT As Long
  
  Call TMR_END
  W_RCNT = 0
  
  For I = 1 To 10
     On Error Resume Next
     W_RNDSTR = GEN_RND(W_BOX.Value)
     If Err.Number > 0 Then
        W_RNDSTR = ""
     End If
     On Error GoTo 0
     AR_TXT = Split(UserForm1.TextBox23.Value, vbCrLf)
     For J = 0 To UBound(AR_TXT)
        If AR_TXT(J) = W_RNDSTR Then
           Exit For
        End If
     Next J
     If J = UBound(AR_TXT) + 1 Then
        UserForm1.TextBox23.Value = UserForm1.TextBox23.Value & W_RNDSTR & vbCrLf
        W_RCNT = W_RCNT + 1
        If W_RCNT >= 5 Then
           Exit For
        End If
     End If
  Next I
  
  If UserForm1.TextBox23.Value <> "" Then
     UserForm1.TextBox23.Value = Left(UserForm1.TextBox23.Value, Len(UserForm1.TextBox23.Value) - 1)
     UserForm1.TextBox23.Visible = True
  End If

End Sub

Sub BAR15_TM_STR()

  Dim W_MS As Long

  W_MS = 250
  W_TMIDB15 = SetTimer(0, 0, W_MS, AddressOf BAR15)

End Sub

Sub BAR15()

  If Workbooks.count > 0 Then
     KillTimer 0, W_TMIDB15
     W_TMIDB15 = 0
     UserForm10.Show vbModeless
     On Error Resume Next
     AppActivate Application.Caption
     On Error GoTo 0
  End If

End Sub

Sub BGFK_TM_STR()

  Dim W_MS As Long

  W_MS = 250
  W_TMIDBK = SetTimer(0, 0, W_MS, AddressOf BGFK)

End Sub

Sub BGFK()

  If Workbooks.count > 0 Then
     Application.Visible = False
     KillTimer 0, W_TMIDBK
     W_TMIDBK = 0
     Call UserForm1.BGF_KICK(False)
     Application.Visible = True
  End If

End Sub

Sub IXUK_TM_STR()

  Dim W_MS As Long

  W_MS = 250
  W_TMIDIK = SetTimer(0, 0, W_MS, AddressOf IXUK)

End Sub

Sub IXUK()

  If Workbooks.count > 0 Then
     Application.Visible = False
     KillTimer 0, W_TMIDIK
     W_TMIDIK = 0
     Call UserForm1.IDX_UPD_KICK
     Application.Visible = True
  End If

End Sub

Function SPLIT2000(ByVal W_STR As String, ByVal W_DLMT As String) As Variant

  SPLIT2000 = Split(W_STR, W_DLMT)

End Function

Sub Auto_Close()

  'Excel2000|fffd||302||742||30f||fffd||fffd||fffd|
  If SW_WBC = True Then
     Exit Sub
  End If
  
  If SW_INST = True Then
     Call CNT_READ_RTN
     Call INI_WRITE_RTN
     
     If Application.Visible = True Then
        W_EXCNT = W_EXCNT - 1
        Call CNT_WRITE_RTN
     End If
     Call KILL_XLB
     If SW_VBE = True Then
        Call VBE_OC
     End If
  End If

End Sub
Attribute VB_Name = "M03FUNCTION"
Option Explicit

Sub Auto_Open()
   
  If SW_TRY = True Then
     Exit Sub
  End If
  
  Call REGISTER

End Sub
#If Win64 Then
Function RETEST(ByVal text As Variant, ByVal search_criteria As String) As Variant
Attribute RETEST.VB_Description = "Inspect if match pattern. Distinct cases."
Attribute RETEST.VB_ProcData.VB_Invoke_Func = " \n18"
  
  RETEST = RETEST_L(text, search_criteria)
  
End Function
#Else
Private Function RETEST(ByVal text As Variant, ByVal search_criteria As String) As Variant

  RETEST = RETEST_L(text, search_criteria)

End Function
#End If

Private Function RETEST_L(ByVal P_STR As Variant, ByVal P_SRHSTR As String) As Variant

  Dim RE As Object
  Dim W_FNDSTR As String
  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long
 
  Dim NRE As Object
  Dim SW_NR As Boolean


  RETEST_L = False
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              AR_RET(R, C) = RE.Test(AR_STR(R, C))
           Else
              AR_RET(R, C) = NRTEST(NRE, CStr(AR_STR(R, C)))
           End If
        Next C
     Next R
     RETEST_L = AR_RET
  Else
     If SW_NR = False Then
        RETEST_L = RE.Test(P_STR)
     Else
        RETEST_L = NRTEST(NRE, CStr(P_STR))
     End If
  End If
  
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  RETEST_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function REEXE(ByVal text As Variant, ByVal search_criteria As String, Optional Index As Long = 1) As Variant
Attribute REEXE.VB_ProcData.VB_Invoke_Func = " \n15"
  
  REEXE = REEXE_L(text, search_criteria, Index)

End Function
#Else
Private Function REEXE(ByVal text As Variant, ByVal search_criteria As String, Optional Index As Long = 1) As Variant
  
  REEXE = REEXE_L(text, search_criteria, Index)

End Function
#End If

Private Function REEXE_L(ByVal P_STR As Variant, ByVal P_SRHSTR As String, Optional P_IDX As Long = 1) As Variant
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_FNDSTR As String
  Dim PMATCHES() As Object
  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim AR_STR2 As Variant
  Dim MCNT As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String


  REEXE_L = ""
  If P_IDX <= 0 Then
     REEXE_L = CVErr(xlErrValue)
     Exit Function
  End If
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With

  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              Set MATCHES = RE.Execute(AR_STR(R, C))
              MCNT = MATCHES.count
           Else
              AR_STR2 = Split(NREXE(NRE, AR_STR(R, C)), vbCrLf)
              MCNT = UBound(AR_STR2) + 1
           End If
           
           If MCNT < P_IDX Then
              AR_RET(R, C) = CVErr(xlErrNA)
           Else
              If SW_NR = False Then
                 W_VL = MATCHES.Item(P_IDX - 1).Value
              Else
                 AR_WK = Split(AR_STR2(P_IDX - 1), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
                 W_VL = Mid$(AR_STR(R, C), W_FI + 1, W_LN)
              End If
              
              AR_RET(R, C) = W_VL
           End If
           Set MATCHES = Nothing
        Next C
     Next R
     REEXE_L = AR_RET
  Else
     If SW_NR = False Then
        Set MATCHES = RE.Execute(P_STR)
        MCNT = MATCHES.count
     Else
        AR_STR2 = Split(NREXE(NRE, P_STR), vbCrLf)
        MCNT = UBound(AR_STR2) + 1
     End If
     
     If MCNT < P_IDX Then
        REEXE_L = CVErr(xlErrNA)
     Else
        If SW_NR = False Then
           W_VL = MATCHES.Item(P_IDX - 1).Value
        Else
           AR_WK = Split(AR_STR2(P_IDX - 1), vbTab)
           W_FI = CLng(AR_WK(0))
           W_LN = CLng(AR_WK(1))
           W_VL = Mid$(P_STR, W_FI + 1, W_LN)
        End If
        
        REEXE_L = W_VL
     End If
     Set MATCHES = Nothing
  End If
  
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REEXE_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function REEXE2(ByVal text As Variant, ByVal search_criteria As String, ByVal submatch As Long, Optional Index As Long = 1) As Variant
Attribute REEXE2.VB_ProcData.VB_Invoke_Func = " \n15"
  
  REEXE2 = REEXE2_L(text, search_criteria, submatch, Index)

End Function
#Else
Private Function REEXE2(ByVal text As Variant, ByVal search_criteria As String, ByVal submatch As Long, Optional Index As Long = 1) As Variant
  
  REEXE2 = REEXE2_L(text, search_criteria, submatch, Index)

End Function
#End If

Private Function REEXE2_L(ByVal P_STR As Variant, ByVal P_SRHSTR As String, ByVal P_SBMCH As Long, Optional P_IDX As Long = 1) As Variant
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_FNDSTR As String
  Dim PMATCHES() As Object
  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim AR_STR2 As Variant
  Dim MCNT As Long


  REEXE2_L = ""
  If P_IDX <= 0 Then
     REEXE2_L = CVErr(xlErrValue)
     Exit Function
  End If
  If P_IDX <= 0 Then
     REEXE2_L = CVErr(xlErrValue)
     Exit Function
  End If
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With

  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              Set MATCHES = RE.Execute(AR_STR(R, C))
              MCNT = MATCHES.count
           Else
              AR_STR2 = Split(NREXE(NRE, AR_STR(R, C)), vbCrLf)
              MCNT = UBound(AR_STR2) + 1
           End If
           
           If MCNT < P_IDX Then
              AR_RET(R, C) = CVErr(xlErrNA)
           Else
              If SW_NR = False Then
                 If MATCHES.Item(P_IDX - 1).Submatches.count < P_SBMCH Then
                    AR_RET(R, C) = CVErr(xlErrNA)
                 Else
                    AR_RET(R, C) = MATCHES.Item(P_IDX - 1).Submatches(P_SBMCH - 1)
                 End If
              Else
                 If NRTEST2(NRE, AR_STR(R, C), P_IDX, P_SBMCH) = False Then
                    AR_RET(R, C) = CVErr(xlErrNA)
                 Else
                    AR_RET(R, C) = NREXE2(NRE, AR_STR(R, C), P_IDX, P_SBMCH)
                 End If
              End If
           End If
           Set MATCHES = Nothing
        Next C
     Next R
     REEXE2_L = AR_RET
  Else
     If SW_NR = False Then
        Set MATCHES = RE.Execute(P_STR)
        MCNT = MATCHES.count
     Else
        AR_STR2 = Split(NREXE(NRE, P_STR), vbCrLf)
        MCNT = UBound(AR_STR2) + 1
     End If
     
     If MCNT < P_IDX Then
        REEXE2_L = CVErr(xlErrNA)
     Else
        If SW_NR = False Then
           If MATCHES.Item(P_IDX - 1).Submatches.count < P_SBMCH Then
              REEXE2_L = CVErr(xlErrNA)
           Else
              REEXE2_L = MATCHES.Item(P_IDX - 1).Submatches(P_SBMCH - 1)
           End If
        Else
           If NRTEST2(NRE, P_STR, P_IDX, P_SBMCH) = False Then
              REEXE2_L = CVErr(xlErrNA)
           Else
              REEXE2_L = NREXE2(NRE, P_STR, P_IDX, P_SBMCH)
           End If
        End If
     End If
     Set MATCHES = Nothing
  End If
 
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REEXE2_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function RECNT(ByVal text As Variant, ByVal search_criteria As String) As Variant
Attribute RECNT.VB_ProcData.VB_Invoke_Func = " \n15"
  
  RECNT = RECNT_L(text, search_criteria)

End Function
#Else
Private Function RECNT(ByVal text As Variant, ByVal search_criteria As String) As Variant
  
  RECNT = RECNT_L(text, search_criteria)

End Function
#End If

Private Function RECNT_L(ByVal P_STR As Variant, ByVal P_SRHSTR As String) As Variant

  Dim RE As Object
  Dim MATCHES As Object
  Dim W_FNDSTR As String
  Dim PMATCHES() As Object
  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim AR_STR2 As Variant
  Dim MCNT As Long


  RECNT_L = 0
  
  SW_NR = False
  
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With

  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              Set MATCHES = RE.Execute(AR_STR(R, C))
              MCNT = MATCHES.count
           Else
              AR_STR2 = Split(NREXE(NRE, AR_STR(R, C)), vbCrLf)
              MCNT = UBound(AR_STR2) + 1
           End If
           
           AR_RET(R, C) = MCNT
           Set MATCHES = Nothing
        Next C
     Next R
     RECNT_L = AR_RET
  Else
     If SW_NR = False Then
        Set MATCHES = RE.Execute(P_STR)
        MCNT = MATCHES.count
     Else
        AR_STR2 = Split(NREXE(NRE, P_STR), vbCrLf)
        MCNT = UBound(AR_STR2) + 1
     End If
     
     RECNT_L = MCNT
     Set MATCHES = Nothing
  End If
  
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  RECNT_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function REREPL(ByVal text As Variant, ByVal search_criteria As String, ByVal replace_text As String) As Variant
Attribute REREPL.VB_ProcData.VB_Invoke_Func = " \n15"
  
  REREPL = REREPL_L(text, search_criteria, replace_text)

End Function
#Else
Private Function REREPL(ByVal text As Variant, ByVal search_criteria As String, ByVal replace_text As String) As Variant
  
  REREPL = REREPL_L(text, search_criteria, replace_text)

End Function
#End If

Private Function REREPL_L(ByVal P_STR As Variant, ByVal P_SRHSTR As String, ByVal P_REPSTR As String) As Variant
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_FNDSTR As String
  Dim PMATCHES() As Object

  Dim I As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_ADJ As Long
  Dim W_STR0 As String
  Dim W_STR1 As String
  Dim W_STR2 As String

  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long
  
  Dim NRE As Object
  Dim SW_NR As Boolean
  
  
  REREPL_L = ""
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With

  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              AR_RET(R, C) = RE.Replace(AR_STR(R, C), REPSTRCNV(P_REPSTR))
           Else
              AR_RET(R, C) = NRREP(NRE, AR_STR(R, C), REPSTRCNV(P_REPSTR))
           End If
        Next C
     Next R
     REREPL_L = AR_RET
  Else
     If SW_NR = False Then
        REREPL_L = RE.Replace(P_STR, REPSTRCNV(P_REPSTR))
     Else
        REREPL_L = NRREP(NRE, P_STR, REPSTRCNV(P_REPSTR))
     End If
  End If
  
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REREPL_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function RESPLIT(ByVal text As Variant, ByVal split_criteria As String, Optional Index As Long = 1) As Variant
Attribute RESPLIT.VB_ProcData.VB_Invoke_Func = " \n15"
  
  RESPLIT = RESPLIT_L(text, split_criteria, Index)

End Function
#Else
Private Function RESPLIT(ByVal text As Variant, ByVal split_criteria As String, Optional Index As Long = 1) As Variant

  RESPLIT = RESPLIT_L(text, split_criteria, Index)

End Function
#End If

Private Function RESPLIT_L(ByVal P_STR As Variant, ByVal P_SPLTSTR As String, Optional P_IDX As Long = 1) As Variant

  Dim RE As Object
  Dim W_STR As String
  Dim AR_SPSTR As Variant
  Dim W_SPLSTR As String

  Dim PMATCHES() As Object
  Dim I As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_ADJ As Long
  Dim W_STR0 As String
  Dim W_STR1 As String
  Dim W_STR2 As String

  Dim AR_STR As Variant
  Dim AR_RET As Variant
  Dim R As Long
  Dim C As Long

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim SW_WK As Boolean


  RESPLIT_L = ""
  
  SW_NR = False
  
  W_SPLSTR = FNDSTRCNV3(P_SPLTSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_SPLSTR
     .IgnoreCase = False
     .Global = True
  End With

  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_SPLSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  If IsArray(P_STR) = True And _
     TypeName(P_STR) = "Range" Then
     AR_STR = P_STR
     AR_RET = P_STR
     For R = 1 To UBound(AR_STR, 1)
        For C = 1 To UBound(AR_STR, 2)
           If SW_NR = False Then
              SW_WK = RE.Test(AR_STR(R, C)) = False
           Else
              SW_WK = NRTEST(NRE, CStr(AR_STR(R, C))) = False
           End If
           
           If SW_WK = False Then
              AR_RET(R, C) = CVErr(xlErrNA)
              GoTo LABEL_NEXT
           End If
  
           If SW_NR = False Then
              W_STR = RE.Replace(AR_STR(R, C), Chr$(1))
           Else
              W_STR = NRREP(NRE, AR_STR(R, C), Chr$(1))
           End If
  
           If Val(Application.Version) >= 9 Then
              AR_SPSTR = SPLIT2000(W_STR, Chr$(1))
           Else
              AR_SPSTR = SPLIT97(W_STR, Chr$(1))
           End If
    
           If UBound(AR_SPSTR) + 1 < P_IDX Then
              AR_RET(R, C) = CVErr(xlErrNA)
           ElseIf P_IDX <= 0 Then
              AR_RET(R, C) = CVErr(xlErrValue)
           Else
              AR_RET(R, C) = AR_SPSTR(P_IDX - 1)
           End If
LABEL_NEXT:
        Next C
     Next R
     RESPLIT_L = AR_RET
  Else
     If SW_NR = False Then
        SW_WK = RE.Test(P_STR)
     Else
        SW_WK = NRTEST(NRE, CStr(P_STR))
     End If
     
     If SW_WK = False Then
        RESPLIT_L = CVErr(xlErrNA)
        Set RE = Nothing
        Exit Function
     End If
  
     If SW_NR = False Then
        W_STR = RE.Replace(P_STR, Chr$(1))
     Else
        W_STR = NRREP(NRE, P_STR, Chr$(1))
     End If
  
     Set RE = Nothing
  
     If Val(Application.Version) >= 9 Then
        AR_SPSTR = SPLIT2000(W_STR, Chr$(1))
     Else
        AR_SPSTR = SPLIT97(W_STR, Chr$(1))
     End If
    
     If UBound(AR_SPSTR) + 1 < P_IDX Then
        RESPLIT_L = CVErr(xlErrNA)
     ElseIf P_IDX <= 0 Then
        RESPLIT_L = CVErr(xlErrValue)
     Else
        RESPLIT_L = AR_SPSTR(P_IDX - 1)
     End If
  End If
  
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  RESPLIT_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function RECNTIF(ByVal table As Range, ByVal search_criteria As String) As Long
Attribute RECNTIF.VB_ProcData.VB_Invoke_Func = " \n15"
  
  RECNTIF = RECNTIF_L(table, search_criteria)

End Function
#Else

Private Function RECNTIF(ByVal table As Range, ByVal search_criteria As String) As Long
  
  RECNTIF = RECNTIF_L(table, search_criteria)

End Function
#End If

Private Function RECNTIF_L(ByVal P_TBL As Range, ByVal P_SRHSTR As String) As Long
  
  Dim RE As Object
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long
  Dim W_RSR As Long
  Dim W_RSC As Long
  Dim W_RER As Long
  Dim W_REC As Long
  
  Dim C As Object
  Dim W_FNDSTR As String

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim SW_WK As Boolean


  RECNTIF_L = 0
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Call RANGE_GET(P_TBL.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
  Call RANGE_GET(Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name) _
                 .UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
  
  If W_ER < W_USR Or _
     W_SR > W_UER Or _
     W_EC < W_USC Or _
     W_SC > W_UEC Then
     Exit Function
  End If
  
  W_RSR = Application.Max(W_SR, W_USR)
  W_RSC = Application.Max(W_SC, W_USC)
  W_RER = Application.Min(W_ER, W_UER)
  W_REC = Application.Min(W_EC, W_UEC)
  
  With Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name)
     For Each C In Range(.Cells(W_RSR, W_RSC), .Cells(W_RER, W_REC))
        If C.Value <> "" Then
           If SW_NR = False Then
              SW_WK = RE.Test(C.Value)
           Else
              SW_WK = NRTEST(NRE, C.Value)
           End If
           
           If SW_WK = True Then
              RECNTIF_L = RECNTIF_L + 1
           End If
        End If
     Next C
  End With
 
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  RECNTIF_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function REVLOOKUP(ByVal search_criteria As String, ByVal table As Range, ByVal column_number As Long) As Variant
  
  REVLOOKUP = REVLOOKUP_L(search_criteria, table, column_number)

End Function
#Else
Private Function REVLOOKUP(ByVal search_criteria As String, ByVal table As Range, ByVal column_number As Long) As Variant
  
  REVLOOKUP = REVLOOKUP_L(search_criteria, table, column_number)

End Function
#End If

Private Function REVLOOKUP_L(ByVal P_SRHSTR As String, ByVal P_TBL As Range, ByVal P_CNO As Long) As Variant
  
  Dim RE As Object
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  
  Dim R As Long
  Dim W_FNDSTR As String
  Dim SW_FIND As Boolean

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim SW_WK As Boolean

  
  REVLOOKUP_L = ""
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Call RANGE_GET(P_TBL.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
  
  If P_CNO <= 0 Then
     REVLOOKUP_L = CVErr(xlErrValue)
  ElseIf W_EC < W_SC + P_CNO - 1 Then
     REVLOOKUP_L = CVErr(xlErrValue)
  Else
     SW_FIND = False
     With Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name)
        For R = W_SR To W_ER
           If SW_NR = False Then
              SW_WK = RE.Test(.Cells(R, W_SC))
           Else
              SW_WK = NRTEST(NRE, .Cells(R, W_SC))
           End If
           
           If SW_WK = True Then
              SW_FIND = True
              Exit For
           End If
        Next R
     
        If SW_FIND = True Then
           REVLOOKUP_L = .Cells(R, W_SC + P_CNO - 1).Value
        Else
           REVLOOKUP_L = CVErr(xlErrNA)
        End If
     End With
  End If
 
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REVLOOKUP_L = CVErr(xlErrValue)

End Function
#If Win64 Then
Function REHLOOKUP(ByVal search_criteria As String, ByVal table As Range, ByVal row_number As Long) As Variant
  
  REHLOOKUP = REHLOOKUP_L(search_criteria, table, row_number)

End Function
#Else
Private Function REHLOOKUP(ByVal search_criteria As String, ByVal table As Range, ByVal row_number As Long) As Variant
  
  REHLOOKUP = REHLOOKUP_L(search_criteria, table, row_number)

End Function
#End If

Private Function REHLOOKUP_L(ByVal P_SRHSTR As String, ByVal P_TBL As Range, ByVal P_RNO As Long) As Variant
  
  Dim RE As Object
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  
  Dim C As Long
  Dim W_FNDSTR As String
  Dim SW_FIND As Boolean

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim SW_WK As Boolean


  REHLOOKUP_L = ""
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Call RANGE_GET(P_TBL.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
  
  If P_RNO <= 0 Then
     REHLOOKUP_L = CVErr(xlErrValue)
  ElseIf W_ER < W_SR + P_RNO - 1 Then
     REHLOOKUP_L = CVErr(xlErrValue)
  Else
     SW_FIND = False
     With Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name)
        For C = W_SC To W_EC
           If SW_NR = False Then
              SW_WK = RE.Test(.Cells(W_SR, C))
           Else
              SW_WK = NRTEST(NRE, .Cells(W_SR, C))
           End If
           
           If SW_WK = True Then
              SW_FIND = True
              Exit For
           End If
        Next C
     
        If SW_FIND = True Then
           REHLOOKUP_L = .Cells(W_SR + P_RNO - 1, C).Value
        Else
           REHLOOKUP_L = CVErr(xlErrNA)
        End If
     End With
  End If
 
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REHLOOKUP_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function REMATCH(ByVal search_criteria As String, ByVal table As Range) As Variant
  
  REMATCH = REMATCH_L(search_criteria, table)

End Function
#Else

Private Function REMATCH(ByVal search_criteria As String, ByVal table As Range) As Variant
  
  REMATCH = REMATCH_L(search_criteria, table)

End Function
#End If

Private Function REMATCH_L(ByVal P_SRHSTR As String, ByVal P_TBL As Range) As Variant
  
  Dim RE As Object
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  
  Dim I As Long
  Dim R As Long
  Dim C As Long
  Dim W_FNDSTR As String
  Dim SW_FIND As Boolean

  Dim NRE As Object
  Dim SW_NR As Boolean
  Dim SW_WK As Boolean


  REMATCH_L = ""
  
  SW_NR = False
  
  W_FNDSTR = FNDSTRCNV3(P_SRHSTR)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = False
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, RE.IgnoreCase)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Call RANGE_GET(P_TBL.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
  
  If W_SC = W_EC Or _
     W_SR = W_ER Then
  Else
     REMATCH_L = CVErr(xlErrNA)
     Exit Function
  End If
  
  SW_FIND = False
  I = 0
  If W_SC = W_EC Then
     With Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name)
        For R = W_SR To W_ER
           I = I + 1
           
           If SW_NR = False Then
              SW_WK = RE.Test(.Cells(R, W_SC))
           Else
              SW_WK = NRTEST(NRE, .Cells(R, W_SC))
           End If
           
           If SW_WK = True Then
              SW_FIND = True
              Exit For
           End If
        Next R
     End With
  Else
     With Workbooks(P_TBL.Parent.Parent.Name).Worksheets(P_TBL.Parent.Name)
        For C = W_SC To W_EC
           I = I + 1
           
           If SW_NR = False Then
              SW_WK = RE.Test(.Cells(W_SR, C))
           Else
              SW_WK = NRTEST(NRE, .Cells(W_SR, C))
           End If
           
           If SW_WK = True Then
              SW_FIND = True
              Exit For
           End If
        Next C
     End With
  End If
  
  If SW_FIND = True Then
     REMATCH_L = I
  Else
     REMATCH_L = CVErr(xlErrNA)
  End If
 
  Set NRE = Nothing
  Set RE = Nothing
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  REMATCH_L = CVErr(xlErrValue)

End Function

#If Win64 Then
Function RERND(ByVal generate_criteria As String) As String

  RERND = RERND_L(generate_criteria)
  
End Function
#Else
Private Function RERND(ByVal generate_criteria As String) As String

  RERND = RERND_L(generate_criteria)
  
End Function
#End If

Private Function RERND_L(ByVal P_GENSTR As String) As String

  RERND_L = ""
  RERND_L = GEN_RND(P_GENSTR)
  
End Function
Attribute VB_Name = "M04REPORT"
Option Private Module
Option Explicit
'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
    (ByVal lpszAgent As String, ByVal dwAccessType As Long, ByVal lpszProxyName As String, _
    ByVal lpszProxyBypass As String, ByVal dwFlags As Long) As Long
#Else
Private Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
    (ByVal lpszAgent As String, ByVal dwAccessType As Long, ByVal lpszProxyName As String, _
    ByVal lpszProxyBypass As String, ByVal dwFlags As Long) As Long
#End If
'dwAccessType(|fffd||691||fffd||fffd||fffd||fffd|@)
'|fffd||fffd||fffd||fffd||fffd||310||752||fffd|i|fffd|v|fffd||fffd|IE|fffd||310||752||fffd|j|fffd||17617|p|fffd||fffd||fffd||702||fffd|
Private Const INTERNET_OPEN_TYPE_PRECONFIG As Long = &H0
'dwFlags(|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd|g|fffd|p|fffd|L|fffd||fffd|)

'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||752||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetSetOption Lib "wininet.dll" Alias "InternetSetOptionA" _
    (ByVal hInternet As Long, ByVal lOption As Long, ByRef sBuffer As Any, ByVal lBufferLength As Long) As Integer
#Else
Private Declare Function InternetSetOption Lib "wininet.dll" Alias "InternetSetOptionA" _
    (ByVal hInternet As Long, ByVal lOption As Long, ByRef sBuffer As Any, ByVal lBufferLength As Long) As Integer
#End If
'lOption
Public Const INTERNET_OPTION_CONNECT_TIMEOUT As Long = 2 '|fffd||691||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_RECEIVE_TIMEOUT As Long = 6 '|fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_SEND_TIMEOUT As Long = 5 '|fffd||fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_CONNECT_RETRIES As Long = 3 '|fffd||fffd||fffd|g|fffd||fffd||fffd|C|fffd||fffd|

'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
    (ByVal hInternet As Long, ByVal lpszServerName As String, ByVal nServerPort As Integer, _
    ByVal lpszUsername As String, ByVal lpszPassword As String, ByVal dwService As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#Else
Private Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
    (ByVal hInternet As Long, ByVal lpszServerName As String, ByVal nServerPort As Integer, _
    ByVal lpszUsername As String, ByVal lpszPassword As String, ByVal dwService As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#End If
'HTTP
Private Const INTERNET_DEFAULT_HTTP_PORT   As Integer = 80
'HTTP
Private Const INTERNET_SERVICE_HTTP   As Long = 3

'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
    (ByVal hConnect As Long, ByVal lpszVerb As String, ByVal lpszObjectName As String, _
    ByVal lpszVersion As String, ByVal lpszReferer As String, ByVal lpszAcceptTypes As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#Else
Private Declare Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
    (ByVal hConnect As Long, ByVal lpszVerb As String, ByVal lpszObjectName As String, _
    ByVal lpszVersion As String, ByVal lpszReferer As String, ByVal lpszAcceptTypes As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#End If
'|fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||16cce||fffd||fffd||fffd||fffd|A|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||72ed||fffd||fffd||fffd|I|fffd||243|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Const INTERNET_FLAG_RELOAD        As Long = &H80000000
'|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_DONT_CACHE    As Long = &H4000000
'|fffd|N|fffd|b|fffd|L|fffd|[|fffd||fffd||6d1||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_NO_COOKIES    As Long = &H80000

'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
#If Win64 Then
Private Declare PtrSafe Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
    (ByVal hRequest As Long, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, _
    ByVal lpOptional As String, ByVal dwOptionalLength As Long) As Integer
#Else
Private Declare Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
    (ByVal hRequest As Long, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, _
    ByVal lpOptional As String, ByVal dwOptionalLength As Long) As Integer
#End If
'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function HttpQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
    (ByVal hRequest As Long, ByVal dwInfoLevel As Long, ByRef lpvBuffer As Any, _
    ByRef lpdwBufferLength As Long, ByRef lpdwIndex As Long) As Integer
#Else
Private Declare Function HttpQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
    (ByVal hRequest As Long, ByVal dwInfoLevel As Long, ByRef lpvBuffer As Any, _
    ByRef lpdwBufferLength As Long, ByRef lpdwIndex As Long) As Integer
#End If
'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||30c||fffd||fffd||283|R|fffd|[|fffd|h
Private Const HTTP_QUERY_STATUS_CODE      As Long = 19
'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd|N|fffd||fffd||fffd|[|fffd|Y
#If Win64 Then
Private Declare PtrSafe Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInternet As Long) As Integer
#Else
Private Declare Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInternet As Long) As Integer
#End If

#If Win64 Then
Private Declare PtrSafe Function InternetOpenUrl Lib "wininet.dll" Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, ByVal sUrl As String, ByVal sHeaders As String, _
    ByVal lHeadersLength As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long
#Else
Private Declare Function InternetOpenUrl Lib "wininet.dll" Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, ByVal sUrl As String, ByVal sHeaders As String, _
    ByVal lHeadersLength As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long
#End If

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
#If Win64 Then
Private Declare PtrSafe Function InternetReadFile Lib "wininet.dll" _
    (ByVal hRequest As Long, ByRef lpBuffer As Any, ByVal dwNumberOfBytesToRead As Long, _
    ByRef lpdwNumberOfBytesRead As Long) As Integer
#Else
Private Declare Function InternetReadFile Lib "wininet.dll" _
    (ByVal hRequest As Long, ByRef lpBuffer As Any, ByVal dwNumberOfBytesToRead As Long, _
    ByRef lpdwNumberOfBytesRead As Long) As Integer
#End If

Sub REPORTM_RTN()

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_URL255 As String * 255
  Dim W_HEADER As String
  Dim W_PDATA As String
  Dim W_DATA As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_RET2 As String

  Dim W_KIND As String
  Dim W_BIT As String


  W_RET2 = ""
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  Set Locator = CreateObject("WbemScripting.SWbemLocator")
  Set Service = Locator.ConnectServer
  Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
  W_OS = ""
  For Each os In OsSet
     W_OS = W_OS & os.Caption & " " & os.Version
  Next os
  Set Service = Nothing
  Set OsSet = Nothing
  Set Locator = Nothing
  
  With UserForm21
     If .OptionButton1.Value = True Then
        W_KIND = .OptionButton1.Caption
     ElseIf .OptionButton2.Value = True Then
        W_KIND = .OptionButton2.Caption
     ElseIf .OptionButton3.Value = True Then
        W_KIND = .OptionButton3.Caption
     End If
  End With
  
#If Win64 Then
  W_BIT = "64Bit"
#Else
  W_BIT = "32Bit"
#End If
  
  W_DATA = "Windows:" & W_OS & vbCrLf & _
           "Excel:" & Application.Version & vbCrLf & _
           "Bit:" & W_BIT & vbCrLf & _
           "ExcelRE:" & Right$(UserForm1.Label3, 4) & vbCrLf & _
           "Kind:" & W_KIND & vbCrLf & _
           "Name:" & UserForm21.TextBox1.Value & vbCrLf & _
           "Message:" & UserForm21.TextBox2.Value

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        W_URL = "/cgi/bug/aska.cgi"
        W_URL255 = W_URL
        W_REQHND = HttpOpenRequest(W_HTTPHND, "POST", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        W_HEADER = "Content-Type: application/x-www-form-urlencoded"
        W_PDATA = "mode=regist&comment=" & FP_Encode_URL(W_DATA)
        Call HttpSendRequest(W_REQHND, W_HEADER, Len(W_HEADER), W_PDATA, Len(W_PDATA))
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError

  If W_RET = 0 And _
     W_RET2 = "200" Then
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Has sent.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
     End If
  Else
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Couldn't send.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B")
     End If
  End If

End Sub

Sub REPORT_RTN()

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_URL255 As String * 255
  Dim W_HEADER As String
  Dim W_PDATA As String
  Dim W_DATA As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_RET2 As String

  Dim W_SL_PPN As String
  Dim W_SL_PN As String
  Dim W_SL_NM As String
  Dim W_SL_AD As String
  Dim W_SL_VL As String
  Dim W_SL_TX As String

  Dim W_BIT As String


  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Application.Visible = True
  End If

  If Err.Number = -2147319765 Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Sorry, error occurred." & vbCrLf & _
                       "If you change to design mode, you can avoid this error.", vbCritical)
     Else
        W_RET = MsgBox("|fffd|\|fffd||fffd||fffd||c2802||fffd||702||fffd||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       "|fffd|f|fffd|U|fffd|C|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||255||3cd|X|fffd||fffd||fffd||fffd||181|A|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||349||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd|B", vbCritical)
     End If
     Exit Sub
  End If

  If UserForm1.CheckBox33.Value = True Or _
     UserForm1.CheckBox88.Value = True Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Sorry, error occurred.", vbCritical)
     Else
        W_RET = MsgBox("|fffd|\|fffd||fffd||fffd||c2802||fffd||702||fffd||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbCritical)
     End If
     GoTo LABEL_UNDO
  End If
  
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Sorry, error occurred." & vbCrLf & _
                    "May I send error report?" & vbCrLf & _
                    "Personal information isn't sent.", vbQuestion + vbOKCancel)
  Else
     W_RET = MsgBox("|fffd|\|fffd||fffd||fffd||c2802||fffd||702||fffd||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                    "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||115d0|M|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H" & vbCrLf & _
                    "|fffd||90|l|fffd||fffd||fffd||351||fffd||fffd|M|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbQuestion + vbOKCancel)
  End If
  
  
  If W_RET = vbCancel Then
     GoTo LABEL_UNDO
  End If
  
  W_RET2 = ""
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  Set Locator = CreateObject("WbemScripting.SWbemLocator")
  Set Service = Locator.ConnectServer
  Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
  W_OS = ""
  For Each os In OsSet
     W_OS = W_OS & os.Caption & " " & os.Version
  Next os
  Set Service = Nothing
  Set OsSet = Nothing
  Set Locator = Nothing
  
#If Win64 Then
  W_BIT = "64Bit"
#Else
  W_BIT = "32Bit"
#End If
  
  W_DATA = "Windows:" & W_OS & vbCrLf & _
           "Excel:" & Application.Version & vbCrLf & _
           "Bit:" & W_BIT & vbCrLf & _
           "ExcelRE:" & Right$(UserForm1.Label3, 4) & vbCrLf & _
           "Classic UI:" & SW_CLASSIC & vbCrLf & _
           "MultiPage:" & UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Caption & vbCrLf & _
           "Button:" & W_CLKBTN & vbCrLf & _
           "Try:" & SW_TRY & vbCrLf & _
           "Find what:" & UserForm1.ComboBox1.Value & vbCrLf & _
           "Replace with:" & UserForm1.ComboBox2.Value & vbCrLf & _
           "Case senstive:" & UserForm1.CheckBox1.Value & vbCrLf & _
           "Only string values:" & UserForm1.CheckBox2.Value
  W_DATA = W_DATA & vbCrLf & _
           "Find values:" & UserForm1.CheckBox3.Value & vbCrLf & _
           "Find whole workbook:" & UserForm1.CheckBox7.Value & vbCrLf & _
           "Incremental search:" & UserForm1.CheckBox22.Value & vbCrLf & _
           "Go around:" & UserForm1.CheckBox208.Value & vbCrLf & _
           "Cross lines:" & UserForm1.CheckBox32.Value & vbCrLf & _
           "Additional string:" & W_ATEXT & vbCrLf & _
           "Deny:" & SW_ADDDENY & vbCrLf & _
           "Quick search toolbar:" & UserForm1.CheckBox65.Value & vbCrLf & _
           "Confirm when replace:" & UserForm1.CheckBox12.Value & vbCrLf & _
           "Include smartart:" & SW_INCSA
  W_DATA = W_DATA & vbCrLf & _
           "Include subfolder:" & UserForm1.CheckBox16.Value & vbCrLf & _
           "Include ZIP archives:" & UserForm1.CheckBox60.Value & vbCrLf & _
           "Open file:" & UserForm1.CheckBox62.Value & vbCrLf & _
           "Create backup:" & UserForm1.CheckBox27.Value & vbCrLf & _
           "Grep history off:" & SW_GHO & vbCrLf & _
           "Highlight:" & SW_GHL & vbCrLf & _
           "Find book:" & W_FNDBOOK & vbCrLf & _
           "Replace book:" & W_REPBOOK & vbCrLf & _
           "Error info:" & Err.Number & vbTab & Err.Description & vbCrLf & _
           "Find target:" & W_EVAR
  W_DATA = W_DATA & vbCrLf & _
           "Word complement:" & UserForm1.CheckBox37.Value & vbCrLf & _
           "No result example:" & UserForm1.CheckBox71.Value & vbCrLf & _
           "No input description:" & UserForm1.CheckBox209.Value & vbCrLf & _
           "Bold:" & SW_DCB & vbCrLf & _
           "Italic:" & SW_DCI & vbCrLf & _
           "Underline:" & SW_DCU & vbCrLf & _
           "Strikethrough:" & SW_DCK & vbCrLf & _
           "Color:" & SW_DCC & vbCrLf & _
           "ColorIndex:" & W_DCTAG & vbCrLf & _
           "Keep decoration:" & SW_CLRKEEP
  W_DATA = W_DATA & vbCrLf & _
           "Bold2:" & SW_DCB2 & vbCrLf & _
           "Bold3:" & SW_DCB3 & vbCrLf & _
           "Italic2:" & SW_DCI2 & vbCrLf & _
           "Italic3:" & SW_DCI3 & vbCrLf & _
           "Underline2:" & SW_DCU2 & vbCrLf & _
           "Underline3:" & SW_DCU3 & vbCrLf & _
           "Strikethrough2:" & SW_DCK2 & vbCrLf & _
           "Strikethrough3:" & SW_DCK3 & vbCrLf & _
           "Color2:" & SW_DCC2 & vbCrLf & _
           "Not strandard find:" & UserForm1.CheckBox74.Value
  W_DATA = W_DATA & vbCrLf & _
           "Updown:" & UserForm1.CheckBox202.Value & vbCrLf & _
           "Offset:" & UserForm1.CheckBox75.Value & vbCrLf & _
           "Offset row:" & UserForm1.TextBox25.Value & vbCrLf & _
           "Offset column:" & UserForm1.TextBox26.Value & vbCrLf & _
           "High speed grep:" & SW_HSGREP & vbCrLf
  W_DATA = W_DATA & vbCrLf & _
           "Execute:" & SW_ACEXE & vbCrLf & _
           "Property method:" & W_PROMTH & vbCrLf & _
           "Value argument:" & W_VALARG & vbCrLf & _
           ".NET Framework:" & SW_NRE & vbCrLf & _
           "Not suggest:" & UserForm1.CheckBox92.Value & vbCrLf & _
           "Auto fuzzy search:" & UserForm1.CheckBox206.Value & vbCrLf & _
           "High score:" & W_HIS

  On Error Resume Next
  W_SL_PPN = Selection.Parent.Parent.Name
  W_SL_PN = Selection.Parent.Name
  W_SL_NM = Selection.Name
  W_SL_AD = Selection.Address
  W_SL_VL = Selection.Value
  W_SL_TX = Selection.text
  On Error GoTo 0

  W_DATA = W_DATA & vbCrLf & _
           "Selection Parent Parent Name:" & W_SL_PPN & vbCrLf & _
           "Selection Parent Name:" & W_SL_PN & vbCrLf & _
           "Selection Name:" & W_SL_NM & vbCrLf & _
           "Selection Address:" & W_SL_AD & vbCrLf & _
           "Selection Value:" & W_SL_VL & vbCrLf & _
           "Selection Text:" & W_SL_TX

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        W_URL = "/cgi/bug/aska.cgi"
        W_URL255 = W_URL
        W_REQHND = HttpOpenRequest(W_HTTPHND, "POST", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        W_HEADER = "Content-Type: application/x-www-form-urlencoded"
        W_PDATA = "mode=regist&comment=" & FP_Encode_URL(W_DATA)
        Call HttpSendRequest(W_REQHND, W_HEADER, Len(W_HEADER), W_PDATA, Len(W_PDATA))
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError

  If W_RET = 0 And _
     W_RET2 = "200" Then
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Has sent." & vbCrLf & _
                "Thanks for cooperation.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                "|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||80aa||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
     End If
  Else
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Couldn't send.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B")
     End If
     GoTo LABEL_UNDO
  End If

  If WINDOWCHK = True Then
     If ActiveWorkbook.path = "" Then
        GoTo LABEL_UNDO
     End If
  Else
     GoTo LABEL_UNDO
  End If

  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("May I send this excel file?", vbQuestion + vbOKCancel)
  Else
     W_RET = MsgBox("Excel|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
  End If
  If W_RET = vbCancel Then
     GoTo LABEL_UNDO
  End If
  
  Call REPORT2_RTN

LABEL_UNDO:
  If (W_CLKBTN = "CommandButton3" Or _
     W_CLKBTN = "CommandButton4" Or _
     W_CLKBTN = "CommandButton5") And _
     W_CNTRA > 0 Then
     Application.ScreenUpdating = True
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Undo replacements?", vbQuestion + vbOKCancel)
     Else
        W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||1570c||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
     End If
     If W_RET = vbOK Then
        Call UNDO_RTN
     End If
  End If
  If (W_CLKBTN = "CommandButton1" Or _
     W_CLKBTN = "CommandButton2" Or _
     W_CLKBTN = "CommandButton12") And _
     W_CNTFA > 0 Then
     Application.ScreenUpdating = True
     If SW_CLRKEEP = True And _
        (SW_DCB2 = True Or _
         SW_DCI2 = True Or _
         SW_DCU2 = True Or _
         SW_DCK2 = True Or _
         SW_DCC2 = True) Then
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Undo color changes?", vbQuestion + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|F|fffd||3cd|X|fffd||1570c||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
        End If
        If W_RET = vbOK Then
           Call UNDO2_RTN
        End If
     End If
  End If

End Sub

Sub HISTORY_RTN()

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_URL255 As String * 255
  Dim W_HEADER As String
  Dim W_PDATA As String
  Dim W_DATA As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_RET2 As String

  '|fffd||fffd||fffd||115d0|M|fffd|@|fffd|\|fffd|p|fffd|~
  Exit Sub


  W_RET2 = ""
  
  
  W_DATA = "ExcelRE:" & vbCrLf & _
           Right$(UserForm1.Label3, 4) & vbCrLf & _
           "Find what:" & vbCrLf & _
           UserForm1.ComboBox1.Value

  If W_CLKBTN = "CommandButton3" Or _
     W_CLKBTN = "CommandButton4" Or _
     W_CLKBTN = "CommandButton5" Or _
     W_CLKBTN = "CommandButton25" Or _
     W_CLKBTN = "CommandButton31" Or _
     W_CLKBTN = "CommandButton42" Or _
     W_CLKBTN = "CommandButton34" Then
     W_DATA = W_DATA & vbCrLf & _
              "Replace with:" & vbCrLf & _
              UserForm1.ComboBox2.Value
  End If

  If (W_CLKBTN = "CommandButton1" Or _
     W_CLKBTN = "CommandButton2" Or _
     W_CLKBTN = "CommandButton12" Or _
     W_CLKBTN = "CommandButton3" Or _
     W_CLKBTN = "CommandButton4" Or _
     W_CLKBTN = "CommandButton5") And _
     W_ATEXT <> "" Then
     If SW_ADDDENY = False Then
        W_DATA = W_DATA & vbCrLf & _
                 "Additional string:" & vbCrLf & _
                 W_ATEXT
     Else
        W_DATA = W_DATA & vbCrLf & _
                 "Deny string:" & vbCrLf & _
                 W_ATEXT
     End If
  End If

  DoEvents

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        W_URL = "/cgi/history/aska.cgi"
        W_URL255 = W_URL
        W_REQHND = HttpOpenRequest(W_HTTPHND, "POST", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        W_HEADER = "Content-Type: application/x-www-form-urlencoded"
        W_PDATA = "mode=regist&comment=" & FP_Encode_URL(W_DATA)
        Call HttpSendRequest(W_REQHND, W_HEADER, Len(W_HEADER), W_PDATA, Len(W_PDATA))
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError

  If W_RET = 0 And _
     W_RET2 = "200" Then
'     MsgBox ("|fffd||fffd||fffd|M|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
'             "|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||80aa||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
  Else
'     MsgBox ("|fffd||fffd||fffd|M|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B")
  End If

End Sub
Sub SHARE1_RTN(I As Long, J As Long)

  Dim W_SHR2 As String
  Dim AR_SHR2 As Variant
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long
  Dim W_URL As String
  Dim W_URL2 As String
  Dim W_URL255 As String * 255
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_SIZE As Long
  Dim W_BBUF(1024) As Byte
  Dim W_STR As String
  Dim W_POS As Long
  Dim K As Long
  Dim C As Long
  Dim W_RET2 As String
  
  Dim AR_LINE As Variant
  
  If UserForm1.CheckBox49.Value = True Then
     W_URL = "http://srcedit.pekori.jp/tool/share_e.txt"
  Else
     W_URL = "http://srcedit.pekori.jp/tool/share.txt"
  End If
  
  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        If UserForm1.CheckBox49.Value = True Then
           W_URL2 = "/tool/share_e.txt"
        Else
           W_URL2 = "/tool/share.txt"
        End If
        W_URL255 = W_URL2
        W_REQHND = HttpOpenRequest(W_HTTPHND, "GET", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        Call HttpSendRequest(W_REQHND, vbNullString, 0, vbNullString, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  If W_RET = 0 And _
     W_RET2 = "200" Then
  Else
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Now, this function can't be used.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||742||fffd||fffd||30b|@|fffd|\|fffd||34e|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B")
     End If
     Exit Sub
  End If
  
  If W_RET = 0 Then
     W_REQHND = InternetOpenUrl(W_WININET, W_URL, vbNullString, 0, INTERNET_FLAG_RELOAD, 0)
     
     W_POS = 0
     W_LEN = 0
     W_STR = ""
     C = -1
     Do
        W_SIZE = 0
        Call InternetReadFile(W_REQHND, W_BBUF(1), 1024, W_SIZE)
        If Err.LastDllError = 0 Then
           If W_SIZE = 0 Then
              Exit Do
           End If
           W_LEN = W_LEN + W_SIZE
           K = 0
           For K = 1 To W_SIZE
               W_POS = W_POS + 1
                  
               If C >= 256 Then
                  W_STR = W_STR + Chr(C + W_BBUF(K)):
                  C = 0
               Else
                  C = W_BBUF(K)
                  If C >= 160 And C <= 223 Then
                     W_STR = W_STR & ChrB(C - 64)
                     W_STR = W_STR & ChrB(255)
                  ElseIf C > 128 And C < 253 Then
                     C = C * 256
                  Else
                     If C <> 13 Then
                        W_STR = W_STR & Chr(C)
                     End If
                  End If
               End If
              
           Next K
        Else
           Exit Do
        End If
     Loop
     W_RET = Err.LastDllError

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError
  
  If Val(Application.Version) >= 9 Then
     AR_LINE = SPLIT2000(W_STR, vbLf)
  Else
     AR_LINE = SPLIT97(W_STR, vbLf)
  End If
      
  I = 0
  J = 0
  For K = 0 To UBound(AR_LINE) - 1
     W_STR = AR_LINE(K)
     If Val(Application.Version) >= 9 Then
        AR_SHR2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_SHR2 = SPLIT97(W_STR, vbTab)
     End If
     If AR_SHR2(0) = "1" Then
        I = I + 1
     Else
        J = J + 1
     End If
  Next K
  
  If I = 0 Then
     ReDim AR_SHRF(0 To 0, 0 To 1)
  Else
     ReDim AR_SHRF(0 To I - 1, 0 To 1)
  End If
  If J = 0 Then
     ReDim AR_SHRR(0 To 0, 0 To 2)
  Else
     ReDim AR_SHRR(0 To J - 1, 0 To 2)
  End If
  
  I = 0
  J = 0
  W_MAXF0 = 0
  W_MAXF1 = 0
  W_MAXR0 = 0
  W_MAXR1 = 0
  W_MAXR2 = 0
  For K = 0 To UBound(AR_LINE) - 1
     W_STR = AR_LINE(K)
     If Val(Application.Version) >= 9 Then
        AR_SHR2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_SHR2 = SPLIT97(W_STR, vbTab)
     End If
     If AR_SHR2(0) = "1" Then
        I = I + 1
        AR_SHRF(I - 1, 0) = AR_SHR2(1)
        If W_MAXF0 < LenB(StrConv(AR_SHR2(1), vbFromUnicode)) Then
           W_MAXF0 = LenB(StrConv(AR_SHR2(1), vbFromUnicode))
        End If
        AR_SHRF(I - 1, 1) = AR_SHR2(2)
        If W_MAXF1 < LenB(StrConv(AR_SHR2(2), vbFromUnicode)) Then
           W_MAXF1 = LenB(StrConv(AR_SHR2(2), vbFromUnicode))
        End If
     Else
        J = J + 1
        AR_SHRR(J - 1, 0) = AR_SHR2(1)
        If W_MAXR0 < LenB(StrConv(AR_SHR2(1), vbFromUnicode)) Then
           W_MAXR0 = LenB(StrConv(AR_SHR2(1), vbFromUnicode))
        End If
        AR_SHRR(J - 1, 1) = AR_SHR2(2)
        If W_MAXR1 < LenB(StrConv(AR_SHR2(2), vbFromUnicode)) Then
           W_MAXR1 = LenB(StrConv(AR_SHR2(2), vbFromUnicode))
        End If
        AR_SHRR(J - 1, 2) = AR_SHR2(3)
        If W_MAXR2 < LenB(StrConv(AR_SHR2(3), vbFromUnicode)) Then
           W_MAXR2 = LenB(StrConv(AR_SHR2(3), vbFromUnicode))
        End If
     End If
  Next K

End Sub
Sub SHARE2_RTN(I As Long, J As Long)

  Dim W_STR As String
  Dim W_SHR2 As String
  Dim AR_SHR2 As Variant
    
  W_SHR2 = UserForm1.TextBox10.Value
  
  Open W_SHR2 For Input As #1
  I = 0
  J = 0
  Do While Not EOF(1)
     Line Input #1, W_STR
     If Val(Application.Version) >= 9 Then
        AR_SHR2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_SHR2 = SPLIT97(W_STR, vbTab)
     End If
     If UBound(AR_SHR2) < 2 Then
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("format of local share data file isn't correct.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||fffd||fffd|L|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
        I = 0
        J = 0
        UserForm1.TextBox10.SetFocus
        Close #1
        Exit Sub
     Else
        If AR_SHR2(0) = "1" Then
           I = I + 1
        Else
           J = J + 1
        End If
     End If
  Loop
  Close #1
  
  If I = 0 Then
     ReDim AR_SHRF(0 To 0, 0 To 1)
  Else
     ReDim AR_SHRF(0 To I - 1, 0 To 1)
  End If
  If J = 0 Then
     ReDim AR_SHRR(0 To 0, 0 To 2)
  Else
     ReDim AR_SHRR(0 To J - 1, 0 To 2)
  End If
  
  Open W_SHR2 For Input As #1
  I = 0
  J = 0
  W_MAXF0 = 0
  W_MAXF1 = 0
  W_MAXR0 = 0
  W_MAXR1 = 0
  W_MAXR2 = 0
  Do While Not EOF(1)
     Line Input #1, W_STR
     If Val(Application.Version) >= 9 Then
        AR_SHR2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_SHR2 = SPLIT97(W_STR, vbTab)
     End If
     If AR_SHR2(0) = "1" Then
        I = I + 1
        AR_SHRF(I - 1, 0) = AR_SHR2(1)
        If W_MAXF0 < LenB(StrConv(AR_SHR2(1), vbFromUnicode)) Then
           W_MAXF0 = LenB(StrConv(AR_SHR2(1), vbFromUnicode))
        End If
        AR_SHRF(I - 1, 1) = AR_SHR2(2)
        If W_MAXF1 < LenB(StrConv(AR_SHR2(2), vbFromUnicode)) Then
           W_MAXF1 = LenB(StrConv(AR_SHR2(2), vbFromUnicode))
        End If
     Else
        J = J + 1
        AR_SHRR(J - 1, 0) = AR_SHR2(1)
        If W_MAXR0 < LenB(StrConv(AR_SHR2(1), vbFromUnicode)) Then
           W_MAXR0 = LenB(StrConv(AR_SHR2(1), vbFromUnicode))
        End If
        AR_SHRR(J - 1, 1) = AR_SHR2(2)
        If W_MAXR1 < LenB(StrConv(AR_SHR2(2), vbFromUnicode)) Then
           W_MAXR1 = LenB(StrConv(AR_SHR2(2), vbFromUnicode))
        End If
        AR_SHRR(J - 1, 2) = AR_SHR2(3)
        If W_MAXR2 < LenB(StrConv(AR_SHR2(3), vbFromUnicode)) Then
           W_MAXR2 = LenB(StrConv(AR_SHR2(3), vbFromUnicode))
        End If
     End If
  Loop
  Close #1

End Sub
Sub METHOD_RTN(ByVal W_KIND As Long, I As Long)

  Dim AR_MTHD2 As Variant
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long
  Dim W_URL As String
  Dim W_URL2 As String
  Dim W_URL255 As String * 255
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_SIZE As Long
  Dim W_BBUF(1024) As Byte
  Dim W_STR As String
  Dim W_POS As Long
  Dim K As Long
  Dim C As Long
  Dim W_RET2 As String
  
  Dim AR_LINE As Variant
  
  If UserForm1.CheckBox49.Value = True Then
     W_URL = "http://srcedit.pekori.jp/tool/method_e.txt"
  Else
     W_URL = "http://srcedit.pekori.jp/tool/method.txt"
  End If
  
  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        If UserForm1.CheckBox49.Value = True Then
           W_URL2 = "/tool/method_e.txt"
        Else
           W_URL2 = "/tool/method.txt"
        End If
        W_URL255 = W_URL2
        W_REQHND = HttpOpenRequest(W_HTTPHND, "GET", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        Call HttpSendRequest(W_REQHND, vbNullString, 0, vbNullString, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  If W_RET = 0 And _
     W_RET2 = "200" Then
  Else
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Now, this function can't be used.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||742||fffd||fffd||30b|@|fffd|\|fffd||34e|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B")
     End If
     Exit Sub
  End If
  
  If W_RET = 0 Then
     W_REQHND = InternetOpenUrl(W_WININET, W_URL, vbNullString, 0, INTERNET_FLAG_RELOAD, 0)
     
     W_POS = 0
     W_LEN = 0
     W_STR = ""
     C = -1
     Do
        W_SIZE = 0
        Call InternetReadFile(W_REQHND, W_BBUF(1), 1024, W_SIZE)
        If Err.LastDllError = 0 Then
           If W_SIZE = 0 Then
              Exit Do
           End If
           W_LEN = W_LEN + W_SIZE
           K = 0
           For K = 1 To W_SIZE
               W_POS = W_POS + 1
                  
               If C >= 256 Then
                  W_STR = W_STR + Chr(C + W_BBUF(K)):
                  C = 0
               Else
                  C = W_BBUF(K)
                  If C >= 160 And C <= 223 Then
                     W_STR = W_STR & ChrB(C - 64)
                     W_STR = W_STR & ChrB(255)
                  ElseIf C > 128 And C < 253 Then
                     C = C * 256
                  Else
                     If C <> 13 Then
                        W_STR = W_STR & Chr(C)
                     End If
                  End If
               End If
              
           Next K
        Else
           Exit Do
        End If
     Loop
     W_RET = Err.LastDllError

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError
  
  If Val(Application.Version) >= 9 Then
     AR_LINE = SPLIT2000(W_STR, vbLf)
  Else
     AR_LINE = SPLIT97(W_STR, vbLf)
  End If
      
  I = 0
  For K = 0 To UBound(AR_LINE) - 1
     W_STR = AR_LINE(K)
     If Val(Application.Version) >= 9 Then
        AR_MTHD2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_MTHD2 = SPLIT97(W_STR, vbTab)
     End If
     If AR_MTHD2(0) = CStr(W_KIND) Then
        I = I + 1
     End If
  Next K
  
  If I = 0 Then
     ReDim AR_MTHD(0 To 0, 0 To 2)
  Else
     ReDim AR_MTHD(0 To I - 1, 0 To 2)
  End If
  
  I = 0
  W_MAXM0 = 0
  W_MAXM1 = 0
  W_MAXM2 = 0
  For K = 0 To UBound(AR_LINE) - 1
     W_STR = AR_LINE(K)
     If Val(Application.Version) >= 9 Then
        AR_MTHD2 = SPLIT2000(W_STR, vbTab)
     Else
        AR_MTHD2 = SPLIT97(W_STR, vbTab)
     End If
     If AR_MTHD2(0) = CStr(W_KIND) Then
        I = I + 1
        AR_MTHD(I - 1, 0) = AR_MTHD2(1)
        If W_MAXM0 < LenB(StrConv(AR_MTHD2(1), vbFromUnicode)) Then
           W_MAXM0 = LenB(StrConv(AR_MTHD2(1), vbFromUnicode))
        End If
        AR_MTHD(I - 1, 1) = AR_MTHD2(2)
        If W_MAXM1 < LenB(StrConv(AR_MTHD2(2), vbFromUnicode)) Then
           W_MAXM1 = LenB(StrConv(AR_MTHD2(2), vbFromUnicode))
        End If
        AR_MTHD(I - 1, 2) = AR_MTHD2(3)
        If W_MAXM2 < LenB(StrConv(AR_MTHD2(3), vbFromUnicode)) Then
           W_MAXM2 = LenB(StrConv(AR_MTHD2(3), vbFromUnicode))
        End If
     End If
  Next K

End Sub
Sub VER_GET_RTN1()

  Dim I As Long
  
  W_STRVER = ""
  For I = 1 To 10
     W_STRVER = VER_GET
     If W_STRVER <> "" Then
        Exit For
     End If
  Next I

End Sub
Sub VER_GET_RTN2()

  Dim W_LVER As Long
  Dim W_MVER As Long

  If W_STRVER = "" Then
     Exit Sub
  End If
  
  W_LVER = CDbl(W_STRVER) * 100
  W_MVER = CDbl(Right$(UserForm1.Label3.Caption, 4)) * 100
 
  If W_MVER < W_LVER Then
     UserForm1.Label41.Visible = True
     UserForm1.Label42.Visible = True
     W_VERE = "Now, current version is ver" & W_STRVER & "."
     W_VERJ = "|fffd||fffd||fffd||742||30d||150|V|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|ver" & W_STRVER & "|fffd||142||fffd||fffd|B"
     If UserForm1.CheckBox49.Value = True Then
        UserForm1.Label41.Caption = W_VERE
     Else
        UserForm1.Label41.Caption = W_VERJ
     End If
  End If

End Sub
Sub GET_NEWS_RTN()

  Dim W_HTML As String
  Dim RE As Object
  Dim MATCHES As Object
  Dim RE2 As Object
  Dim MATCHES2 As Object
  Dim J As Long
  Dim K As Long

  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_GNRSTR As String
  Dim W_PTN As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  
  Dim W_SIZE As Long
  Dim W_BBUF(1024) As Byte
  Dim W_STR As String
  Dim W_POS As Long
  Dim I As Long

  Dim C As Long


  W_URL = "http://news.yahoo.co.jp/"

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

  If W_RET = 0 Then
     W_REQHND = InternetOpenUrl(W_WININET, W_URL, vbNullString, 0, INTERNET_FLAG_RELOAD, 0)
     
     W_POS = 0
     W_LEN = 0
     W_STR = ""
     C = -1
     K = 0
     Do
        W_SIZE = 0
        Call InternetReadFile(W_REQHND, W_BBUF(1), 1024, W_SIZE)
        If Err.LastDllError = 0 Then
           If W_SIZE = 0 Then
              Exit Do
           End If
           W_LEN = W_LEN + W_SIZE
'           K = 0
'           For I = 1 To W_SIZE
'               W_POS = W_POS + 1
'
'               If C <> -1 Then
'                  C = C + W_BBUF(I) - 128
'                  If C >= 3616 And C <= 3679 Then
'                     W_STR = W_STR & ChrB(C - 3520)
'                     W_STR = W_STR & ChrB(255)
'                  Else
'                     W_STR = W_STR & Application.Evaluate("CHAR(" & C & ")")
'                  End If
'                  C = -1
'               Else
'                  C = W_BBUF(I)
'                  If C >= 128 Then
'                     C = (C - 128) * 256
'                  Else
'                     If C <> 13 Then
'                        W_STR = W_STR & Chr(C)
'                     End If
'                     C = -1
'                  End If
'               End If
'           Next I
        
'UTF-8
           For I = 1 To W_SIZE
              If K = 0 Then
                 C = W_BBUF(I)
                 If C < 128 Then
                    W_STR = W_STR & Chr(C)
                 ElseIf (C And &HE0) = &HC0 Then
                    C = C And &H1F
                    K = 1
                 ElseIf (C And &HF0) = &HE0 Then
                    C = C And &HF
                    K = 2
                 ElseIf (C And &HF8) = &HF0 Then
                    C = C And &H7
                    K = 3
                 ElseIf (C And &HFC) = &HF8 Then
                    C = C And &H3
                    K = 4
                 ElseIf (C And &HFE) = &HFC Then
                    C = C And &H1
                    K = 5
                 Else
                    Exit Do
                 End If
              Else
                 If (W_BBUF(I) And &HC0) <> &H80 Then
                    Exit Do
                 End If
                 K = K - 1
                 C = (C * 64) + (W_BBUF(I) And &H3F)
                 If K = 0 Then
                    If C >= &H10000 Then
                       C = C - &H10000
                       W_STR = W_STR & ChrW(&HD800 + (C \ 1024))
                       W_STR = W_STR & ChrW(&HDC00 + (C Mod 1024))
                    Else
                       If C <> &HFEFF Then
                          W_STR = W_STR & ChrW(C)
                       End If
                    End If
                 End If
              End If
           Next I
        
        Else
           Exit Do
        End If
     Loop
     W_RET = Err.LastDllError

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError
    
  W_HTML = Join(Split(W_STR, vbLf))
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     W_PTN = Chr$(34) & "topics" & Chr$(34) & ".*?"
     W_PTN = W_PTN & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?" & _
             "<li class=""topicsListItem.*?><a href=(.*?)<.*?"
     .Pattern = W_PTN
     .IgnoreCase = True
     .Global = True
  End With

  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .Pattern = "^" & Chr$(34) & "(.*?)" & Chr$(34) & ".*?>(.*?)$"
     .IgnoreCase = True
     .Global = True
  End With
  
  If RE.Test(W_HTML) = False Then
     GoTo LABEL_EXIT
  End If
  
  Set MATCHES = RE.Execute(W_HTML)
  
  With MATCHES.Item(0)
     K = 9
     Erase AR_URL
     Erase AR_NEWS
     For I = 0 To .Submatches.count - 1
        If RE2.Test(.Submatches(I)) = False Then
           GoTo LABEL_EXIT
        End If
        Set MATCHES2 = RE2.Execute(.Submatches(I))
        For J = 0 To MATCHES2.Item(0).Submatches.count - 1
           If J Mod 2 = 0 Then
              K = K - 1
              AR_URL(K) = MATCHES2.Item(0).Submatches(J)
           Else
              AR_NEWS(K) = MATCHES2.Item(0).Submatches(J)
              AR_NEWS(K) = Application.Substitute(AR_NEWS(K), "&amp;", "&")
           End If
        Next J
     Next I
  End With

LABEL_EXIT:
  Set RE2 = Nothing
  Set MATCHES2 = Nothing
  Set RE = Nothing
  Set MATCHES = Nothing

End Sub
Function VER_GET() As String

  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_URL255 As String * 255
  Dim W_HEADER As String
  Dim W_PDATA As String
  Dim W_DATA As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_RET2 As String
  
  Dim W_SIZE As Long
  Dim W_BBUF(1024) As Byte
  Dim W_STR As String
  Dim W_POS As Long
  Dim I As Long

  VER_GET = ""
  W_RET2 = ""
  
  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If
  
  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        W_URL = "/relatestver.txt"
        W_URL255 = W_URL
        W_REQHND = HttpOpenRequest(W_HTTPHND, "GET", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        Call HttpSendRequest(W_REQHND, vbNullString, 0, vbNullString, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If

     '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
     If W_RET = 0 And _
        W_RET2 = "200" Then
        W_POS = 0
        W_LEN = 0
        W_STR = ""
        Do
           W_SIZE = 0
           Call InternetReadFile(W_REQHND, W_BBUF(1), 1024, W_SIZE)
           If Err.LastDllError = 0 Then
              If W_SIZE = 0 Then
                 Exit Do
              End If
              W_LEN = W_LEN + W_SIZE
              For I = 1 To W_SIZE
                  W_POS = W_POS + 1
                  W_STR = W_STR & StrConv((ChrB(W_BBUF(I))), vbUnicode)
              Next I
           Else
              Exit Do
           End If
        Loop
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError
  
  If W_RET = 0 And _
     W_RET2 = "200" Then
     VER_GET = W_STR
  End If

End Function
'*******************************************************************************
'   URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|
'*******************************************************************************
Private Function FP_Encode_URL(ByRef strSource As String) As String
    
  Const cnsPer = "%"
  Const cnsZero = "0"
  Dim lngLenB As Long, cntRead As Long
  Dim bytChar As Byte, bytTbl() As Byte
  Dim strBuf As String

  FP_Encode_URL = ""
  lngLenB = LenB(StrConv(strSource, vbFromUnicode))
  ' |fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||a347||fffd||34f|I|fffd||fffd|
  If lngLenB < 1 Then Exit Function
  '---------------------------------------------------------------------------
  ' |fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||24a|i|fffd|[
  ReDim bytTbl(lngLenB - 1)
  bytTbl = StrConv(strSource, vbFromUnicode)
  '---------------------------------------------------------------------------
  ' |fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd|J|fffd||fffd||502||fffd|
  Do While cntRead < lngLenB
     ' |fffd|z|fffd||42a42||fffd|1Byte|fffd||fffd||fffd|o|fffd||fffd|
     bytChar = bytTbl(cntRead)
     ' |fffd|o|fffd||355||fffd||fffd||fffd||fffd||fffd||fffd||48f|W
     If (((bytChar >= &H81) And (bytChar <= &H9F)) Or _
        ((bytChar >= &HE0) And (bytChar <= &HEF))) Then
        ' 2|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd|o|fffd|C|fffd|g|fffd||682||30f||fffd||fffd||fffd|
        GoSub Encode_URL_SUB
        cntRead = cntRead + 1
        ' |fffd||353c||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||202||fffd||fffd||a347||fffd||34f|I|fffd||fffd|
        If cntRead >= lngLenB Then Exit Do
           ' 2|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd|o|fffd|C|fffd|g|fffd||682||30f||fffd||fffd||fffd|
        bytChar = bytTbl(cntRead)
        GoSub Encode_URL_SUB
     ElseIf bytChar = &H20 Then
        ' |fffd||fffd||fffd|p|fffd||d4495||fffd||fffd||fffd|
        strBuf = strBuf & "+"
     ElseIf (((bytChar >= &H40) And (bytChar <= &H5A)) Or _
             ((bytChar >= &H61) And (bytChar <= &H7A)) Or _
             ((bytChar >= &H30) And (bytChar <= &H39)) Or _
             (bytChar = &H2A) Or (bytChar = &H2D) Or _
             (bytChar = &H2E) Or (bytChar = &H5F)) Then
         ' |fffd||3ca||fffd||fffd|s|fffd|v|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||7c2||fffd|)
        strBuf = strBuf & Chr(bytChar)
     Else
         ' |fffd||fffd||fffd||311||fffd|(|fffd||3ca||fffd||fffd|o|fffd||fffd|)
        GoSub Encode_URL_SUB
     End If
     cntRead = cntRead + 1
  Loop
  ' |fffd||3ca||fffd||fffd||fffd||fffd||282||fffd||502||fffd|
  FP_Encode_URL = strBuf
  Exit Function

'===============================================================================
' |fffd|o|fffd||355||48f|W|fffd||fffd||fffd||28f||fffd||fffd||fffd|(Hex|fffd|l|fffd|o|fffd||fffd|)
Encode_URL_SUB:
  strBuf = strBuf & cnsPer & Right(cnsZero & Hex(bytChar), 2)
  Return

End Function
Attribute VB_Name = "M05REPORT2"
Option Private Module
Option Explicit
'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
    (ByVal lpszAgent As String, ByVal dwAccessType As Long, ByVal lpszProxyName As String, _
    ByVal lpszProxyBypass As String, ByVal dwFlags As Long) As Long
#Else
Private Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
    (ByVal lpszAgent As String, ByVal dwAccessType As Long, ByVal lpszProxyName As String, _
    ByVal lpszProxyBypass As String, ByVal dwFlags As Long) As Long
#End If
'dwAccessType(|fffd||691||fffd||fffd||fffd||fffd|@)
'|fffd||fffd||fffd||fffd||fffd||310||752||fffd|i|fffd|v|fffd||fffd|IE|fffd||310||752||fffd|j|fffd||17617|p|fffd||fffd||fffd||702||fffd|
Private Const INTERNET_OPEN_TYPE_PRECONFIG As Long = &H0
'dwFlags(|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd|g|fffd|p|fffd|L|fffd||fffd|)

'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||752||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetSetOption Lib "wininet.dll" Alias "InternetSetOptionA" _
    (ByVal hInternet As Long, ByVal lOption As Long, ByRef sBuffer As Any, ByVal lBufferLength As Long) As Integer
#Else
Private Declare Function InternetSetOption Lib "wininet.dll" Alias "InternetSetOptionA" _
    (ByVal hInternet As Long, ByVal lOption As Long, ByRef sBuffer As Any, ByVal lBufferLength As Long) As Integer
#End If
'lOption
Public Const INTERNET_OPTION_CONNECT_TIMEOUT As Long = 2 '|fffd||691||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_RECEIVE_TIMEOUT As Long = 6 '|fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_SEND_TIMEOUT As Long = 5 '|fffd||fffd||fffd|M|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g
Public Const INTERNET_OPTION_CONNECT_RETRIES As Long = 3 '|fffd||fffd||fffd|g|fffd||fffd||fffd|C|fffd||fffd|

'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
#If Win64 Then
Private Declare PtrSafe Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
    (ByVal hInternet As Long, ByVal lpszServerName As String, ByVal nServerPort As Integer, _
    ByVal lpszUsername As String, ByVal lpszPassword As String, ByVal dwService As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#Else
Private Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
    (ByVal hInternet As Long, ByVal lpszServerName As String, ByVal nServerPort As Integer, _
    ByVal lpszUsername As String, ByVal lpszPassword As String, ByVal dwService As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#End If
'HTTP
Private Const INTERNET_DEFAULT_HTTP_PORT   As Integer = 80
'HTTP
Private Const INTERNET_SERVICE_HTTP   As Long = 3

'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
    (ByVal hConnect As Long, ByVal lpszVerb As String, ByVal lpszObjectName As String, _
    ByVal lpszVersion As String, ByVal lpszReferer As String, ByVal lpszAcceptTypes As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#Else
Private Declare Function HttpOpenRequest Lib "wininet.dll" Alias "HttpOpenRequestA" _
    (ByVal hConnect As Long, ByVal lpszVerb As String, ByVal lpszObjectName As String, _
    ByVal lpszVersion As String, ByVal lpszReferer As String, ByVal lpszAcceptTypes As Long, _
    ByVal dwFlags As Long, ByVal dwContext As Long) As Long
#End If
'|fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||16cce||fffd||fffd||fffd||fffd|A|fffd|T|fffd|[|fffd|o|fffd||fffd||fffd||72ed||fffd||fffd||fffd|I|fffd||243|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Const INTERNET_FLAG_RELOAD        As Long = &H80000000
'|fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_DONT_CACHE    As Long = &H4000000
'|fffd|N|fffd|b|fffd|L|fffd|[|fffd||fffd||6d1||fffd||fffd||fffd||fffd||202||fffd|
Private Const INTERNET_FLAG_NO_COOKIES    As Long = &H80000

'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
#If Win64 Then
Private Declare PtrSafe Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
    (ByVal hRequest As Long, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, _
    ByRef lpOptional As Any, ByVal dwOptionalLength As Long) As Integer
#Else
Private Declare Function HttpSendRequest Lib "wininet.dll" Alias "HttpSendRequestA" _
    (ByVal hRequest As Long, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, _
    ByRef lpOptional As Any, ByVal dwOptionalLength As Long) As Integer
#End If
'|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function HttpQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
    (ByVal hRequest As Long, ByVal dwInfoLevel As Long, ByRef lpvBuffer As Any, _
    ByRef lpdwBufferLength As Long, ByRef lpdwIndex As Long) As Integer
#Else
Private Declare Function HttpQueryInfo Lib "wininet.dll" Alias "HttpQueryInfoA" _
    (ByVal hRequest As Long, ByVal dwInfoLevel As Long, ByRef lpvBuffer As Any, _
    ByRef lpdwBufferLength As Long, ByRef lpdwIndex As Long) As Integer
#End If
'HTTP|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||30c||fffd||fffd||283|R|fffd|[|fffd|h
Private Const HTTP_QUERY_STATUS_CODE      As Long = 19
'|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd|N|fffd||fffd||fffd|[|fffd|Y
#If Win64 Then
Private Declare PtrSafe Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInternet As Long) As Integer
#Else
Private Declare Function InternetCloseHandle Lib "wininet.dll" _
    (ByVal hInternet As Long) As Integer
#End If

#If Win64 Then
Private Declare PtrSafe Function InternetOpenUrl Lib "wininet.dll" Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, ByVal sUrl As String, ByVal sHeaders As String, _
    ByVal lHeadersLength As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long
#Else
Private Declare Function InternetOpenUrl Lib "wininet.dll" Alias "InternetOpenUrlA" _
    (ByVal hInternetSession As Long, ByVal sUrl As String, ByVal sHeaders As String, _
    ByVal lHeadersLength As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long
#End If

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
#If Win64 Then
Private Declare PtrSafe Function InternetReadFile Lib "wininet.dll" _
    (ByVal hRequest As Long, ByRef lpBuffer As Any, ByVal dwNumberOfBytesToRead As Long, _
    ByRef lpdwNumberOfBytesRead As Long) As Integer
#Else
Private Declare Function InternetReadFile Lib "wininet.dll" _
    (ByVal hRequest As Long, ByRef lpBuffer As Any, ByVal dwNumberOfBytesToRead As Long, _
    ByRef lpdwNumberOfBytesRead As Long) As Integer
#End If

Sub REPORT2_RTN()

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_WININET As Long
  Dim W_HTTPHND As Long
  Dim W_REQHND As Long

  Dim W_URL As String
  Dim W_URL255 As String * 255
  Dim W_HEADER As String
  Dim W_PDATA As String
  Dim W_DATA As String
  
  Dim W_BUF As String * 1024
  Dim W_LEN As Long
  Dim W_RET2 As String

  Dim W_BOUND As String
  Dim AR_SDATA() As Byte
  Dim AR_EDATA() As Byte
  Dim AR_FDATA() As Byte
  Dim I As Long
  Dim J As Long
  Dim W_SFEDATA() As Byte
  Dim W_SDATA As String
  Dim W_EDATA As String
  Dim AR_PDATA() As Byte
  Dim FSO As Object

  W_RET2 = ""
  
  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd|
  W_WININET = InternetOpen(vbNullString, INTERNET_OPEN_TYPE_PRECONFIG, vbNullString, _
              vbNullString, 0)
  W_RET = Err.LastDllError

 '|fffd||752||fffd||315||3cd|X
  If W_RET = 0 Then
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_RECEIVE_TIMEOUT, 5000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_SEND_TIMEOUT, 10000, 4)
     W_RET = InternetSetOption(W_WININET, INTERNET_OPTION_CONNECT_RETRIES, 0, 4)
     W_RET = 0
  End If

  If W_RET = 0 Then
     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||691||fffd|
     W_HTTPHND = InternetConnect(W_WININET, "srcedit.pekori.jp", INTERNET_DEFAULT_HTTP_PORT, _
                 vbNullString, vbNullString, INTERNET_SERVICE_HTTP, 0, 0)
     W_RET = Err.LastDllError
  
     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
     If W_RET = 0 Then
        W_URL = "/cgi/bugup/upload.cgi"
        W_URL255 = W_URL
        W_REQHND = HttpOpenRequest(W_HTTPHND, "POST", W_URL255, "HTTP/1.1", vbNullString, 0, _
                   INTERNET_FLAG_RELOAD + INTERNET_FLAG_DONT_CACHE + INTERNET_FLAG_NO_COOKIES, 0)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd|M
     If W_RET = 0 Then
        W_BOUND = CStr(Date) & CStr(time)
        W_HEADER = "multipart/form-data; boundary=" & W_BOUND
        W_PDATA = "--" & W_BOUND & vbCrLf & _
                  "Content-Disposition: form-data; name=""filedata""; filename=""" & _
                  ActiveWorkbook.path & "\" & ActiveWorkbook.Name & """" & vbCrLf + _
                  "Content-Type: application/vnd.ms-excel" & vbCrLf & _
                  "Content-Transfer-Encoding: binary" & vbCrLf & vbCrLf
        W_SDATA = W_PDATA
        W_PDATA = vbCrLf & "--" & W_BOUND & vbCrLf & _
                  "Content-Disposition: form-data; name=""ext""" & _
                  vbCrLf & vbCrLf & "ext" & vbCrLf & _
                  "--" & W_BOUND & vbCrLf & _
                  "Content-Disposition: form-data; name=""comment""" & _
                  vbCrLf & vbCrLf & ActiveWorkbook.Name & vbCrLf & _
                  "--" & W_BOUND & vbCrLf & _
                  "Content-Disposition: form-data; name=""delpass""" & _
                  vbCrLf & vbCrLf & "1234" & vbCrLf & _
                  vbCrLf & "--" & W_BOUND & "--" & vbCrLf
        W_EDATA = W_PDATA
        Set FSO = CreateObject("Scripting.FileSystemObject")
        ReDim AR_FDATA(FSO.GetFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name).Size)
        Set FSO = Nothing
        Open ActiveWorkbook.path & "\" & ActiveWorkbook.Name For Binary As #1
        Get #1, , AR_FDATA
        Close #1
        W_PDATA = ""
        J = 0
        AR_SDATA = StrConv(W_SDATA, vbFromUnicode)
        For I = 0 To UBound(AR_SDATA)
           J = J + 1
           ReDim Preserve AR_PDATA(J)
           AR_PDATA(J) = AR_SDATA(I)
        Next I
        Erase AR_SDATA
        For I = 0 To UBound(AR_FDATA) - 1
           J = J + 1
           ReDim Preserve AR_PDATA(J)
           AR_PDATA(J) = AR_FDATA(I)
        Next I
        Erase AR_FDATA
        AR_EDATA = StrConv(W_EDATA, vbFromUnicode)
        For I = 0 To UBound(AR_EDATA)
           J = J + 1
           ReDim Preserve AR_PDATA(J)
           AR_PDATA(J) = AR_EDATA(I)
        Next I
        Erase AR_EDATA
        Call HttpSendRequest(W_REQHND, W_HEADER, Len(W_HEADER), AR_PDATA(1), J)
        W_RET = Err.LastDllError
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe|
     If W_RET = 0 Then
        W_LEN = 1024
        W_BUF = vbNullString
        Call HttpQueryInfo(W_REQHND, HTTP_QUERY_STATUS_CODE, ByVal W_BUF, W_LEN, 0)
        W_RET = Err.LastDllError
        If W_RET = 0 Then
           W_RET2 = Left$(W_BUF, 3)
        End If
     End If

     '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
     Call InternetCloseHandle(W_REQHND)
     W_RET = Err.LastDllError

     '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||612|f
     Call InternetCloseHandle(W_HTTPHND)
     W_RET = Err.LastDllError
  End If

  '|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y
  Call InternetCloseHandle(W_WININET)
  W_RET = Err.LastDllError

  If W_RET = 0 And _
     W_RET2 = "200" Then
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Has sent." & vbCrLf & _
                "Thanks for cooperation.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                "|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||80aa||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
     End If
  Else
     If UserForm1.CheckBox49.Value = True Then
        MsgBox ("Couldn't send.")
     Else
        MsgBox ("|fffd||fffd||fffd|M|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B")
     End If
  End If

End Sub
Attribute VB_Name = "M06GESTURE"
Option Explicit
Option Private Module

Private Const MAX_ACTION = 4            '|fffd||151||fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|
Private Const DEF_MINMOVE = 10          '|fffd||14f||fffd||fffd||313||fffd||fffd||fffd|

Private mAction(MAX_ACTION - 1) As Long
Private mActionIndex As Long
Private mNowAction As Boolean
Private mMessageSkip As Boolean

Private mStartPosX As Long
Private mStartPosY As Long
Private mEndPosX As Long
Private mEndPosY As Long
Private mLastPosX As Long
Private mLastPosY As Long

Dim W_MG As String

#If Win64 Then
Public mHook As LongPtr
#Else
Public mHook As Long
#End If


#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If
Private Const GWL_HINSTANCE = -6&

#If Win64 Then
Declare PtrSafe Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (ByVal idHook As Long, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
#Else
Private Declare Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (ByVal idHook As Long, ByVal lpfn As Long, ByVal hmod As Long, ByVal dwThreadId As Long) As Long
#End If
Private Const HC_ACTION = 0&
Private Const WH_MOUSE_LL = 14&

#If Win64 Then
Private Declare PtrSafe Function UnhookWindowsHookEx Lib "user32" (ByVal hHook As LongPtr) As Long
#Else
Private Declare Function UnhookWindowsHookEx Lib "user32" (ByVal hHook As Long) As Long
#End If

#If Win64 Then
Declare PtrSafe Function CallNextHookEx Lib "user32" (ByVal hHook As LongPtr, ByVal nCode As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
#Else
Private Declare Function CallNextHookEx Lib "user32" (ByVal hHook As Long, ByVal nCode As Long, ByVal wParam As Long, lParam As Any) As Long
#End If

#If Win64 Then
Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As LongPtr, ByVal Length As LongPtr)
#Else
Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As Long)
#End If

Type POINTAPI
  X As Long
  Y As Long
End Type

Type MSLLHOOKSTRUCT
  pt As POINTAPI
  mouseData As Long
  flags As Long
  time As Long
  dwExtraInfo As Long
End Type

Sub SetHook()
    
#If Win64 Then
  Dim hwnd As LongPtr
  Dim hInst As LongPtr
#Else
  Dim hwnd As Long
  Dim hInst As Long
#End If
  
  
  hwnd = FindWindow(vbNullString, UserForm1.Caption)
    
  ResetHook
    
#If Win64 Then
  hInst = GetWindowLongPtr(hwnd, GWL_HINSTANCE)
#Else
  hInst = GetWindowLong(hwnd, GWL_HINSTANCE)
#End If

  If hInst = 0 Then
     Exit Sub
  End If
    
  mHook = SetWindowsHookEx(WH_MOUSE_LL, AddressOf HookProc, hInst, 0)
  
End Sub

Public Sub ResetHook()
    
  If mHook Then
     UnhookWindowsHookEx mHook
     mHook = 0
  End If

End Sub
#If Win64 Then
Function HookProc(ByVal nCode As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
    
  Dim hwnd As LongPtr
  
  Dim M As MSLLHOOKSTRUCT
  Dim zDelta As Integer
  
  On Error GoTo LABEL_ERR
  
  HookProc = 0
  If nCode = HC_ACTION Then
     If wParam = &H200 Or _
        wParam = &H204 Or _
        wParam = &H205 Then
        CopyMemory M.pt.X, ByVal lParam, LenB(M)

        W_RET = CheckAction(CLng(wParam), CLng(M.pt.X), CLng(M.pt.Y))
     ElseIf wParam = &H20A Then
        CopyMemory M.pt.X, ByVal lParam, LenB(M)
        
        zDelta = CInt(M.mouseData / 2 ^ 16) / 120
        zDelta = zDelta * (-1)
        If UserForm1.MultiPage2.Visible = True Then
           Select Case UserForm1.MultiPage2.Value
           Case 0
              Call LISTBOX_SCROLL(UserForm1.ListBox1, zDelta)
           Case 1
              Call LISTBOX_SCROLL(UserForm1.ListBox2, zDelta)
           Case 2
              Call LISTBOX_SCROLL(UserForm1.ListBox3, zDelta)
           Case 3
              Call LISTBOX_SCROLL(UserForm1.ListBox4, zDelta)
           Case 4
              Call LISTBOX_SCROLL(UserForm1.ListBox5, zDelta)
           Case 5
              Call LISTBOX_SCROLL(UserForm1.ListBox6, zDelta)
           Case 6
              Call LISTBOX_SCROLL(UserForm1.ListBox7, zDelta)
           Case 7
              Call LISTBOX_SCROLL(UserForm1.ListBox8, zDelta)
           Case 8
              Call LISTBOX_SCROLL(UserForm1.ListBox9, zDelta)
           Case 9
              Call LISTBOX_SCROLL(UserForm1.ListBox10, zDelta)
           End Select
        End If
     End If
  End If
    
  If HookProc = 0 Then
     HookProc = CallNextHookEx(0, nCode, wParam, ByVal lParam)
  End If

  On Error GoTo 0

  Exit Function

LABEL_ERR:
  MsgBox Err.LastDllError
  On Error GoTo 0
  ResetHook

End Function
#Else
Function HookProc(ByVal nCode As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
    
  Dim hwnd As Long
  
  Dim M As MSLLHOOKSTRUCT
  Dim zDelta As Integer
  
  On Error GoTo LABEL_ERR
  
  HookProc = 0
  If nCode = HC_ACTION Then
     If wParam = &H200 Or _
        wParam = &H204 Or _
        wParam = &H205 Then
        CopyMemory M.pt.X, ByVal lParam, LenB(M)
          
        W_RET = CheckAction(wParam, M.pt.X, M.pt.Y)
        If mHook = 0 Then
           Exit Function
        End If
     ElseIf wParam = &H20A Then
        CopyMemory M.pt.X, ByVal lParam, LenB(M)
        
        zDelta = CInt(M.mouseData / 2 ^ 16) / 120
        zDelta = zDelta * (-1)
        If UserForm1.MultiPage2.Visible = True Then
           Select Case UserForm1.MultiPage2.Value
           Case 0
              Call LISTBOX_SCROLL(UserForm1.ListBox1, zDelta)
           Case 1
              Call LISTBOX_SCROLL(UserForm1.ListBox2, zDelta)
           Case 2
              Call LISTBOX_SCROLL(UserForm1.ListBox3, zDelta)
           Case 3
              Call LISTBOX_SCROLL(UserForm1.ListBox4, zDelta)
           Case 4
              Call LISTBOX_SCROLL(UserForm1.ListBox5, zDelta)
           Case 5
              Call LISTBOX_SCROLL(UserForm1.ListBox6, zDelta)
           Case 6
              Call LISTBOX_SCROLL(UserForm1.ListBox7, zDelta)
           Case 7
              Call LISTBOX_SCROLL(UserForm1.ListBox8, zDelta)
           Case 8
              Call LISTBOX_SCROLL(UserForm1.ListBox9, zDelta)
           Case 9
              Call LISTBOX_SCROLL(UserForm1.ListBox10, zDelta)
           End Select
        End If
     End If
  End If

  If HookProc = 0 Then
     HookProc = CallNextHookEx(mHook, nCode, wParam, lParam)
  End If
  
  On Error GoTo 0
  
  Exit Function

LABEL_ERR:
  On Error GoTo 0
  ResetHook

End Function
#End If

Public Sub LISTBOX_SCROLL(W_LISTBOX As Object, ByVal zDelta As Integer)

  Dim W_LI As Long

  If W_LISTBOX.Visible = False Then
     Exit Sub
  End If
  
  W_LI = W_LISTBOX.ListIndex
  W_LI = W_LI + zDelta
  If W_LI < 0 Then
     W_LI = 0
  ElseIf W_LI > W_LISTBOX.ListCount - 1 Then
     W_LI = W_LISTBOX.ListCount - 1
  End If
  W_LISTBOX.ListIndex = W_LI
  W_LISTBOX.SetFocus

End Sub

Public Function CheckAction(ByVal MsgID As Long, ByVal X As Long, ByVal Y As Long) As Boolean
    
  Dim dx As Long
  Dim dy As Long
  Dim dd As Long
  
  Dim sx As Long
  Dim sy As Long
    
  Dim W_MP1 As Long
  
  CheckAction = False
    
  Select Case MsgID
  Case &H200  'MOUSEMOVE
     If mNowAction Then
        dx = X - mLastPosX
        dy = Y - mLastPosY
        sx = Sgn(dx)
        sy = Sgn(dy)
        If Sqr(dx * dx + dy * dy) > DEF_MINMOVE Then
           dx = Abs(dx)
           dy = Abs(dy)
           If dx > dy / 3 Then
              sy = 0
           End If
           If dy > dx / 3 Then
              sx = 0
           End If
                    
           AddAction sx, sy
           mLastPosX = X
           mLastPosY = Y
        End If
                
        CheckAction = True
        SW_NRC = True
     End If
        
  Case &H204  'RIGHTDOWN
     If mMessageSkip Then
     Else
        mNowAction = True
        mLastPosX = X
        mLastPosY = Y
        mStartPosX = X
        mStartPosY = Y
        mActionIndex = 0
        CheckAction = True
        W_MG = ""
     End If
        
  Case &H205  'RIGHTUP
     CheckAction = True
     If mMessageSkip Then
        mMessageSkip = False
     Else
        mEndPosX = X
        mEndPosY = Y
        mNowAction = False
        If mActionIndex Then
           Select Case W_MG
           Case "L", "R", "D", "U", "DU", "DR", "RL", "LR", "UD", "DL"
              Call ResetHook
'              Unload UserForm15
           End Select
           
           Select Case W_MG
           Case "L"
              Call RCLICK_FORWARD_TAB
           Case "R"
              Call RCLICK_BACK_TAB
           Case "D"
              Call RCLICK_HIDE_TAB
           Case "U"
              Call RCLICK_SHOW_TAB
           Case "DU"
              Call RCLICK_DEFAULT_TAB
           Case "DR"
              Unload UserForm1
           Case "RL"
              UserForm1.ToggleButton14.Value = False
           Case "LR"
              UserForm1.ToggleButton14.Value = True
           Case "UD"
              UserForm1.CheckBox43.Value = Not UserForm1.CheckBox43.Value
           Case "DL"
              Call HELP_RTN
           End Select
           UserForm1.Image28.Visible = False
           UserForm1.Image29.Visible = False
           UserForm1.Image30.Visible = False
           UserForm1.Image31.Visible = False
           UserForm1.Label117.Visible = False
           UserForm1.Label118.Visible = False
        Else
           '|fffd|A|fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||202||fffd|
           mMessageSkip = True
        End If
     End If
            
  End Select
    
End Function

Private Sub AddAction(ByVal sx As Long, ByVal sy As Long)
    
  Dim ang As Long
    
  If mActionIndex < MAX_ACTION Then
        
     ang = GetAngle(sx, sy)
     If ang < 0 Then
        Exit Sub
     End If
        
     Select Case ang
     Case 0, 2, 4, 6
     Case Else
        Exit Sub
     End Select
        
     If mActionIndex > 0 Then
        If mAction(mActionIndex - 1) = ang Then
           '|fffd|O|fffd||fffd||193||fffd||fffd||fffd|
           Exit Sub
        End If
     Else
        '|fffd||fffd||fffd||7c2||102||313||fffd||fffd||fffd|
        UserForm1.Image28.Visible = False
        UserForm1.Image29.Visible = False
        UserForm1.Image30.Visible = False
        UserForm1.Image31.Visible = False
        W_MG = ""
     End If
        
     UserForm1.Label117.Visible = False
     UserForm1.Label118.Visible = False
     
     mAction(mActionIndex) = ang
     mActionIndex = mActionIndex + 1
    
     Select Case ang
     Case 0, 2, 4, 6
        W_MG = W_MG & GetActionDirChar$(ang)
        Select Case Len(W_MG)
        Case 1
           UserForm1.Image28.Visible = True
           UserForm1.Image28.Picture = GetImage(GetActionDirChar$(ang))
           UserForm1.Label117.Left = UserForm1.Image28.Left + UserForm1.Image28.Width
           UserForm1.Label118.Left = UserForm1.Image28.Left + UserForm1.Image28.Width
        Case 2
           UserForm1.Image29.Visible = True
           UserForm1.Image29.Picture = GetImage(GetActionDirChar$(ang))
           UserForm1.Label117.Left = UserForm1.Image29.Left + UserForm1.Image29.Width
           UserForm1.Label118.Left = UserForm1.Image29.Left + UserForm1.Image29.Width
        Case 3
           UserForm1.Image30.Visible = True
           UserForm1.Image30.Picture = GetImage(GetActionDirChar$(ang))
           UserForm1.Label117.Left = UserForm1.Image30.Left + UserForm1.Image30.Width
           UserForm1.Label118.Left = UserForm1.Image30.Left + UserForm1.Image30.Width
        Case 4
           UserForm1.Image31.Visible = True
           UserForm1.Image31.Picture = GetImage(GetActionDirChar$(ang))
           UserForm1.Label117.Left = UserForm1.Image31.Left + UserForm1.Image31.Width
           UserForm1.Label118.Left = UserForm1.Image31.Left + UserForm1.Image31.Width
        End Select
     
        Select Case W_MG
        Case "L"
           UserForm1.Label118.Caption = UserForm1.Label107.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "R"
           UserForm1.Label118.Caption = UserForm1.Label108.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "D"
           UserForm1.Label118.Caption = UserForm1.Label109.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "U"
           UserForm1.Label118.Caption = UserForm1.Label110.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "DU"
           UserForm1.Label118.Caption = UserForm1.Label111.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "DR"
           UserForm1.Label118.Caption = UserForm1.Label112.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "RL"
           UserForm1.Label118.Caption = UserForm1.Label113.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "LR"
           UserForm1.Label118.Caption = UserForm1.Label114.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "UD"
           UserForm1.Label118.Caption = UserForm1.Label115.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        Case "DL"
           UserForm1.Label118.Caption = UserForm1.Label116.Caption
           UserForm1.Label117.Visible = True
           UserForm1.Label118.Visible = True
        End Select
     
     End Select
    
  End If
    
End Sub

Private Function GetAngle(ByVal sx As Long, ByVal sy As Long) As Long
'|fffd||693||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
    
  If 0 < sx Then
     If 0 < sy Then
        GetAngle = 3
     ElseIf sy = 0 Then
        GetAngle = 2
     Else
        GetAngle = 1
     End If
  ElseIf sx < 0 Then
     If 0 < sy Then
        GetAngle = 5
     ElseIf sy = 0 Then
        GetAngle = 6
     Else
        GetAngle = 7
     End If
  Else
     If 0 < sy Then
        GetAngle = 4
     ElseIf sy = 0 Then
        GetAngle = -1
     Else
        GetAngle = 0
     End If
  End If

End Function

Private Function GetActionDirChar$(ByVal ModeDir As Long)
    
  GetActionDirChar$ = Mid$("U/R\D/L\", ModeDir + 1, 1)

End Function

Private Function GetImage(ByVal ARROW As String) As Object
    
  Set GetImage = Nothing
  Select Case ARROW
  Case "L"
     Set GetImage = UserForm1.Image12.Picture
  Case "R"
     Set GetImage = UserForm1.Image13.Picture
  Case "D"
     Set GetImage = UserForm1.Image14.Picture
  Case "U"
     Set GetImage = UserForm1.Image15.Picture
  End Select
    
End Function
Attribute VB_Name = "M07MINIMAP"
Option Explicit
Option Private Module

'''#If Win64 Then
'''Private Declare PtrSafe Function FindWindow Lib "User32.dll" Alias "FindWindowA" _
'''(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
'''#Else
'''Private Declare Function FindWindow Lib "User32.dll" Alias "FindWindowA" _
'''(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
'''#End If
'''
'''#If Win64 Then
'''Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
'''    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
'''#Else
'''Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
'''    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
'''#End If
'''
''''|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
'''#If Win64 Then
'''Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
'''#Else
'''Private Declare Function GetActiveWindow Lib "user32" () As Long
'''#End If
'''
''''|fffd||151|O|fffd||282||303|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
'''#If Win64 Then
'''Private Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
'''#Else
'''Private Declare Function GetForegroundWindow Lib "User32.dll" () As Long
'''#End If

Sub MAP_INIT()
     
  With UserForm1.ListBox11
     .ColumnCount = 1
     .ColumnWidths = "1"
     .RowSource = ""
  End With

End Sub

Sub MAP_RESET()

  Dim W_STR As String
  Dim W_CLWDT As Long
  Dim I As Long
  
  
'''''#If Win64 Then
'''''  Dim hwnd As LongPtr
'''''#Else
'''''  Dim hwnd As Long
'''''#End If
  
  
  If WINDOWCHK = False Then
     Call MAP_INIT
     Exit Sub
  End If
  
  If ActiveWorkbook.Name <> UserForm1.ListBox11.Tag Then
     Call MAP_INIT
     Exit Sub
  End If
  
  With UserForm1.ListBox11
     .ColumnCount = Application.Min(ActiveSheet.UsedRange.Columns.count, 9)
     W_STR = ""
     For I = 1 To Application.Min(ActiveSheet.UsedRange.Columns.count, 9)
        W_CLWDT = Application.Max((ActiveSheet.UsedRange.Columns(I).ColumnWidth / 8.38) * 30, 10)
        If ActiveSheet.UsedRange.Columns(I).ColumnWidth = 0 Then
           W_CLWDT = 1
        End If
        W_STR = W_STR & W_CLWDT & " pt;"
     Next I
     W_STR = Left(W_STR, Len(W_STR) - 1)
     If .ColumnWidths <> W_STR Then
        .ColumnWidths = W_STR
     End If
     .RowSource = ActiveSheet.UsedRange.Address
  End With

  W_VRS = 0
  W_VRE = 0
  Call MAP_SCRL

  Call SET_MARK

  'Excel2013|fffd||20d|~
'''  If Val(Application.Version) >= 15 Then
'''     hwnd = FindWindow(vbNullString, UserForm14.Caption)
'''     Call SetWindowPos(hwnd, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
'''     On Error Resume Next
'''     AppActivate Application.ActiveWindow.Parent.Parent.Caption  'Excel|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X
'''     On Error GoTo 0
'''  End If

End Sub

Sub MAP_SCRL()

  Dim I As Long
  Dim W_CNT As Long
  Dim W_RST As Long
  Dim W_RED As Long
  
  If ActiveWindow.VisibleRange.Rows(1).Row = W_VRS And _
     ActiveWindow.VisibleRange.Rows(ActiveWindow.VisibleRange.Rows.count).Row = W_VRE Then
     Exit Sub
  End If
  
  SW_LC = False
  SW_EF = True
  For I = W_IST To W_IED
     UserForm1.ListBox11.Selected(I) = False
  Next I
  SW_LC = True
  
  W_CNT = ActiveSheet.UsedRange.Rows.count
  
  W_VRS = ActiveWindow.VisibleRange.Rows(1).Row
  W_VRE = ActiveWindow.VisibleRange.Rows(ActiveWindow.VisibleRange.Rows.count).Row
  
  W_RST = Application.Min(ActiveWindow.VisibleRange.Rows(1).Row - ActiveSheet.UsedRange.Rows(1).Row + 1, W_CNT)
  W_RST = Application.Max(W_RST, 1)
  W_RED = Application.Min(ActiveWindow.VisibleRange.Rows(ActiveWindow.VisibleRange.Rows.count).Row, W_CNT)

  W_IST = W_RST - 1
  W_IED = W_RED - 1

  SW_LC = False
  For I = W_IST To W_IED
     If ActiveSheet.Rows(ActiveSheet.UsedRange.Rows(1).Row + I).EntireRow.Hidden = False Then
        UserForm1.ListBox11.Selected(I) = True
     End If
  Next I
  SW_LC = True
  UserForm1.ListBox11.TopIndex = Application.Max(W_IST - 10, 0)

End Sub

'Sub MM_TM()
'
'  Dim W As Long
'  Dim SW_ACTIVE As Boolean
'
'#If Win64 Then
'  Dim hwndA As LongPtr
'  Dim hwnd14 As LongPtr
'  Dim hwnd As LongPtr
'#Else
'  Dim hwndA As Long
'  Dim hwnd14 As Long
'  Dim hwnd As Long
'#End If
'
'  Dim W_CNT As Long
'
'
'''''  hwndA = GetActiveWindow
'''''  hwnd14 = FindWindow(vbNullString, UserForm14.Caption)
'''''  SW_ACTIVE = False
'''''
'''''  For W = 1 To Application.Windows.count
'''''     hwnd = FindWindow(vbNullString, Application.Windows(W).Parent.Parent.Caption)
'''''     If hwnd = hwndA Then
'''''        SW_ACTIVE = True
'''''        Exit For
'''''     End If
'''''  Next W
'
'''''  If SW_ACTIVE = SW_ACTIVE_OLD Then
'''''  Else
'''''     If hwnd14 > 0 Then
'''''        If hwndA = hwnd14 Then
'''''        Else
'''''           If SW_ACTIVE = False Then
'''''              Call SetWindowPos(hwnd14, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
'''''              W_CNT = 0
'''''              Do While GetForegroundWindow = hwnd14 And W_CNT < Application.Windows.count
'''''                 W_CNT = W_CNT + 1
'''''                 Call SetWindowPos(hwnd14, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
'''''              Loop
'''''              Call SetWindowPos(hwnd14, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
'''''           Else
'''''              Call SetWindowPos(hwnd14, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
'''''              On Error Resume Next
'''''              AppActivate Application.ActiveWindow.Parent.Parent.Caption  'Excel|fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X
'''''              On Error GoTo 0
'''''           End If
'''''        End If
'''''     End If
'''''     SW_ACTIVE_OLD = SW_ACTIVE
'''''  End If
'
'End Sub

'Sub SETTM_MM()
'
''''  If W_TMIDMM = 0 Then
''''     SW_ACTIVE_OLD = True
''''     W_TMIDMM = SetTimer(0, 0, 1000, AddressOf MM_TM)
''''  End If
'
'End Sub
'
'Sub KILLTM_MM()
'
''''  If W_TMIDMM <> 0 Then
''''     KillTimer 0, W_TMIDMM
''''     W_TMIDMM = 0
''''  End If
'
'End Sub

Sub SET_MARK()

  Dim AR_MARK(289) As String
  Dim AR_WK As Variant
  Dim I As Long
  Dim J As Long
  Dim AR_WK2 As Variant
  Dim W_CNT As Long
  
  
  AR_WK = Split(UserForm1.Label300.Tag, ",")
  W_CNT = ActiveWorkbook.ActiveSheet.UsedRange.Rows.count
  
  For I = 0 To UBound(AR_WK)
     AR_WK2 = Split(AR_WK(I), vbCrLf)
     If AR_WK2(0) = ActiveWorkbook.ActiveSheet.Name Then
        J = CLng(AR_WK2(1))
        J = Int(CDbl(J / W_CNT) * CDbl(UserForm1.Label300.Height * 0.445))
        If J < 1 Then
           J = 1
        ElseIf J > Int(UserForm1.Label300.Height * 0.445) Then
           J = Int(UserForm1.Label300.Height * 0.445)
        End If
        AR_MARK(J) = "*****"
     End If
  Next I
  UserForm1.Label300.Caption = Join$(AR_MARK, vbCrLf)

End Sub
Attribute VB_Name = "M08EXCEL2007"
Option Explicit
Option Private Module
Option Base 1

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|R|fffd|s|fffd|[
#If Win64 Then
  Private Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#Else
  Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#End If

Dim W_J As Long
Dim AR_POS() As Long
Dim AR_LEN0() As Long
Dim AR_LEN() As Long
Dim W_CLTXTBK As String

Function SA_GETTXT(SHP As Object, W_TXT As String) As Boolean

  Dim W_SPTXT As String
  Dim I As Long


  SA_GETTXT = False
  W_TXT = ""
  
  If SHP.Type <> msoSmartArt Then
     Exit Function
  End If

  SA_GETTXT = True

  For I = 1 To SHP.SmartArt.Nodes.count
     W_SPTXT = SHP.SmartArt.Nodes(I).TextFrame2.TextRange.text
     If W_SPTXT <> "" Then
        If W_TXT = "" Then
           W_TXT = W_SPTXT
        Else
           W_TXT = W_TXT & Chr$(2) & W_SPTXT
        End If
     End If
  Next I

End Function

Function SA_EXIST(SHP As Object, W_FW As String) As Long

  Dim W_SPTXT As String
  Dim I As Long


  SA_EXIST = 0
  
  If SHP.Type <> msoSmartArt Then
     Exit Function
  End If

  SA_EXIST = 1

  For I = 1 To SHP.SmartArt.Nodes.count
     W_SPTXT = SHP.SmartArt.Nodes(I).TextFrame2.TextRange.text
     If InStr(W_SPTXT, W_FW) > 0 Then
        SA_EXIST = 2
        Exit Function
     End If
  Next I

End Function

Function SA_FIND(W_SHP As Object, RE As Object, NRE As Object, ByVal SW_NR As Boolean, ByVal W_KBN As Long, ByVal SW_GREP As Boolean, ByVal W_TEMP As String, W_CNTFA2 As Long, ByVal S As Long, Optional ByVal SW_SML As Boolean) As Boolean

  Dim I As Long
  Dim J As Long
  Dim W_SPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim SW_FIND As Boolean
  Dim W_STR As String
  
  Dim W_FCIX As Long
  Dim W_SPCLR As String
  Dim W_BOOL As Variant
  Dim W_SPDCB As String
  Dim W_SPDCI As String
  Dim W_SPDCU As String
  Dim W_SPDCK As String
  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  
  Dim W_SPTXTBK As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim W_REPTXT As String
  
  Dim K As Long
  
  Dim W_FRBPATH As String
  Dim ADDR As String
  Dim W_PATH As String
  
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  
  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String
  
  Dim W_TEXT As String
  Dim L As Long
  Dim W_CNT As Long
  
  
  SA_FIND = False
  
  If W_SHP.Type <> msoSmartArt Then
     Exit Function
  End If

  SA_FIND = True

  For I = 1 To W_SHP.SmartArt.Nodes.count
     W_SPTXT = W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.text
     If UserForm1.CheckBox32.Value = True Then
        If W_KBN = 1 Or _
           W_KBN = 2 Then
           W_SPTXTBK = W_SPTXT
           W_SPTXT = Replace(W_SPTXT, vbLf, "")
        End If
     End If
     W_EVAR = W_SPTXT
     
     If SW_NR = False Then
        SW_WK = RE.Test(W_SPTXT)
     Else
        SW_WK = NRTEST(NRE, W_SPTXT)
     End If
     
     If SW_WK = False Then
        GoTo LABEL_NEXT
     End If
     
     If W_KBN = 3 Then
        With W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange
           '|fffd|F|fffd||6d1||fffd|
           W_FCIX = -1
           W_POS = 1
           W_SPCLR = ""
           For K = 1 To Len(W_SPTXT)
              If .Characters(K, 1).Font.Fill.ForeColor.RGB <> W_FCIX Then
                 If W_FCIX <> -1 Then
                    W_LEN = K - W_POS
                    If W_SPCLR = "" Then
                       W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                    Else
                       W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                    End If
                 End If
                 W_POS = K
                 W_FCIX = .Characters(K, 1).Font.Fill.ForeColor.RGB
              End If
              If K = Len(W_SPTXT) Then
                 W_LEN = K - W_POS + 1
                 If W_SPCLR = "" Then
                    W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                 Else
                    W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                 End If
              End If
           Next K
           '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           If IsNull(.Characters.Font.Bold) = True Then
              ReDim AR_WK(Len(W_SPTXT))
              For K = 1 To Len(W_SPTXT)
                 AR_WK(K) = .Characters(K, 1).Font.Bold
              Next K
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_SPDCB = ""
              For K = 1 To Len(W_SPTXT)
                 If AR_WK(K) <> W_BOOL Then
                    W_LEN = K - W_POS
                    If W_SPDCB = "" Then
                       W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = K
                    W_BOOL = AR_WK(K)
                 End If
                 If K = Len(W_SPTXT) Then
                    W_LEN = K - W_POS + 1
                    If W_SPDCB = "" Then
                       W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next K
           Else
              W_SPDCB = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Bold
           End If
           '|fffd||391||315||6d1||fffd|
           If IsNull(.Characters.Font.Italic) = True Then
              ReDim AR_WK(Len(W_SPTXT))
              For K = 1 To Len(W_SPTXT)
                 AR_WK(K) = .Characters(K, 1).Font.Italic
              Next K
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_SPDCI = ""
              For K = 1 To Len(W_SPTXT)
                 If AR_WK(K) <> W_BOOL Then
                    W_LEN = K - W_POS
                    If W_SPDCI = "" Then
                       W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = K
                    W_BOOL = AR_WK(K)
                 End If
                 If K = Len(W_SPTXT) Then
                    W_LEN = K - W_POS + 1
                    If W_SPDCI = "" Then
                       W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next K
           Else
              W_SPDCI = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Italic
           End If
           '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           If IsNull(.Characters.Font.UnderlineStyle) = True Then
              ReDim AR_WK(Len(W_SPTXT))
              For K = 1 To Len(W_SPTXT)
                 AR_WK(K) = .Characters(K, 1).Font.UnderlineStyle
              Next K
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_SPDCU = ""
              For K = 1 To Len(W_SPTXT)
                 If AR_WK(K) <> W_BOOL Then
                    W_LEN = K - W_POS
                    If W_SPDCU = "" Then
                       W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = K
                    W_BOOL = AR_WK(K)
                 End If
                 If K = Len(W_SPTXT) Then
                    W_LEN = K - W_POS + 1
                    If W_SPDCU = "" Then
                       W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next K
           Else
              W_SPDCU = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.UnderlineStyle
           End If
           '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           If IsNull(.Characters.Font.Strikethrough) = True Then
              ReDim AR_WK(Len(W_SPTXT))
              For K = 1 To Len(W_SPTXT)
                 AR_WK(K) = .Characters(K, 1).Font.Strikethrough
              Next K
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_SPDCK = ""
              For K = 1 To Len(W_SPTXT)
                 If AR_WK(K) <> W_BOOL Then
                    W_LEN = K - W_POS
                    If W_SPDCK = "" Then
                       W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = K
                    W_BOOL = AR_WK(K)
                 End If
                 If K = Len(W_SPTXT) Then
                    W_LEN = K - W_POS + 1
                    If W_SPDCK = "" Then
                       W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next K
           Else
              W_SPDCK = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Strikethrough
           End If
        End With
     End If
     
     If SW_NR = False Then
        Set MATCHES = RE.Execute(W_SPTXT)
        MAXJ = MATCHES.count - 1
        RE.Global = False
     Else
        AR_STR = Split(NREXE(NRE, W_SPTXT), vbCrLf)
        MAXJ = UBound(AR_STR)
        AR_RES = Split(NRRES(NRE, W_SPTXT, REPSTRCNV(UserForm1.ComboBox7.Value)), Chr$(1))
        If UBound(AR_RES) = -1 Then
           ReDim AR_RES(0 To MAXJ)
        End If
     End If
     
     W_ST = 1
     For J = 0 To MAXJ
        If SW_NR = False Then
           W_FI = MATCHES.Item(J).FirstIndex
           W_LN = MATCHES.Item(J).Length
           W_VL = MATCHES.Item(J).Value
        Else
           AR_WK = Split(AR_STR(J), vbTab)
           W_FI = CLng(AR_WK(0))
           W_LN = CLng(AR_WK(1))
           W_VL = Mid$(W_SPTXT, W_FI + 1, W_LN)
           W_RS = AR_RES(J)
        End If
        
        SW_FIND = True
        If SW_FIND = True Then
           If W_KBN = 1 Then
              W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
              W_LEN = W_LN
              
              If SW_GREP = False Then
                 If AFN Mod 10000 = 0 Then
                    ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
                    ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
                    ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
                    ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
                 End If
     
                 If UserForm1.CheckBox32.Value = True Then
                    If W_POS > 1 Then
                       W_TEXT = Left$(W_SPTXTBK, W_POS - 1)
                       W_POS = W_POS + Len(W_TEXT) - Len(Replace(W_TEXT, vbLf, ""))
                    End If
                    L = 0
                    W_CNT = 0
                    Do While W_CNT < W_LEN
                       L = L + 1
                       If Mid$(W_SPTXTBK, L, 1) <> vbLf Then
                          W_CNT = W_CNT + 1
                       End If
                    Loop
                    W_LEN = W_LEN + L - W_CNT
                 End If
     
                 AFN = AFN + 1
                 AR_AFS(AFN) = S
                 AR_AFN(AFN) = W_SHP.Name & Chr$(0) & I
                 AR_AFV(AFN) = W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(W_POS, W_LEN).text
                 AR_AFR(AFN) = W_SHP.ID
              End If
              
              If SW_CLRKEEP = True And _
                 (SW_DCB2 = True Or _
                  SW_DCI2 = True Or _
                  SW_DCU2 = True Or _
                  SW_DCK2 = True Or _
                  SW_DCC2 = True) Then
                 If SW_GREP = False Then
                    If W_CNTFA = 0 Then
                       If ActiveWorkbook.path <> "" And _
                          ActiveWorkbook.HasPassword = False And _
                          ActiveWorkbook.ReadOnly = False And _
                          ActiveWorkbook.FileFormat <> xlCSV And _
                          ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
                          DT = Date
                          TM = time
                          On Error GoTo L_BK_END2
                          If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                             On Error Resume Next
                             W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                              ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                             On Error GoTo 0
                             W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                             If RPDIC.Exists(W_CNV) = False Then
                                RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                             End If
                          End If
                          ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
                          W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
                          If RPDIC.Exists(W_CNV) = False Then
                             RPDIC.Add W_CNV, "SF" & vbTab & UserForm1.ComboBox6.Value & vbTab & ""
                          End If
                       End If
L_BK_END2:
                       On Error GoTo 0
                    End If
                 End If
                 
                 With W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(W_POS, W_LEN).Font
                    If SW_DCB2 = True Then
                       .Bold = SW_DCB3
                    End If
                    If SW_DCI2 = True Then
                       .Italic = SW_DCI3
                    End If
                    If SW_DCU2 = True Then
                       If SW_DCU3 = True Then
                          .UnderlineStyle = 2
                       Else
                          .UnderlineStyle = False
                       End If
                    End If
                    If SW_DCK2 = True Then
                       .Strikethrough = SW_DCK3
                    End If
                    If SW_DCC2 = True Then
                       If W_DCTAG2 = "0" Then
                          .Fill.ForeColor.SchemeColor = False
                       Else
                          .Fill.ForeColor.RGB = CLng(W_DCCLR2)
                       End If
                    End If
                 End With
              End If
              W_ST = W_POS + W_LEN
              W_CNTFA = W_CNTFA + 1
           End If
           If W_KBN = 2 Then
              Exit For
           End If
           If W_KBN = 3 Then
              If SW_GREP = False Then
                 If W_CNTFA = 0 Then
                    If ActiveWorkbook.path <> "" And _
                       ActiveWorkbook.HasPassword = False And _
                       ActiveWorkbook.ReadOnly = False And _
                       ActiveWorkbook.FileFormat <> xlCSV And _
                       ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
                       DT = Date
                       TM = time
                       On Error GoTo L_BK_END1
                       If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                          On Error Resume Next
                          W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                           ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                          On Error GoTo 0
                          W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                          If RPDIC.Exists(W_CNV) = False Then
                             RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                          End If
                       End If
                       ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
                       W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
                       If RPDIC.Exists(W_CNV) = False Then
                          RPDIC.Add W_CNV, "SR" & vbTab & UserForm1.ComboBox6.Value & vbTab & UserForm1.ComboBox7.Value
                       End If
                    End If
L_BK_END1:
                    On Error GoTo 0
                 End If
              End If
           End If
           If W_KBN = 3 And W_ASK = True And SW_SML = False Then
              '|fffd||fffd||fffd||fffd||fffd||3cd|X
              W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
              W_LEN = W_LN
              If SW_CLRKEEP = True And _
                 (SW_DCB2 = True Or _
                  SW_DCI2 = True Or _
                  SW_DCU2 = True Or _
                  SW_DCK2 = True Or _
                  SW_DCC2 = True) Then
                 With W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(W_POS, W_LEN).Font
                    If SW_DCB2 = True Then
                       .Bold = SW_DCB3
                    End If
                    If SW_DCI2 = True Then
                       .Italic = SW_DCI3
                    End If
                    If SW_DCU2 = True Then
                       If SW_DCU3 = True Then
                          .UnderlineStyle = 2
                       Else
                          .UnderlineStyle = False
                       End If
                    End If
                    If SW_DCK2 = True Then
                       .Strikethrough = SW_DCK3
                    End If
                    If SW_DCC2 = True Then
                       If W_DCTAG2 = "0" Then
                          .Fill.ForeColor.SchemeColor = False
                       Else
                          .Fill.ForeColor.RGB = CLng(W_DCCLR2)
                       End If
                    End If
                 End With
              End If
              W_ST = W_POS + W_LEN
           End If
           If W_KBN = 3 And _
              SW_GREP = False Then
              W_CNTFA = W_CNTFA + 1
           End If
        Else
           W_ST = W_ST + W_LN
        End If
     Next J
     
     If W_KBN = 2 Then
        If SW_FIND = True Then
           W_CNTFA = W_CNTFA + 1
        End If
     End If
     
     If W_KBN = 3 Then
        '|fffd|m|fffd|F
        W_RET = vbYes
        If W_ASK = True And SW_SML = False Then
           Sheets(W_SHP.Parent.Index).Select
           W_SHP.Select
           Call UserForm1.REP_ASK(2)
           If SW_CLRKEEP = True And _
              (SW_DCB2 = True Or _
               SW_DCI2 = True Or _
               SW_DCU2 = True Or _
               SW_DCK2 = True Or _
               SW_DCC2 = True) Then
              '|fffd|F|fffd||7c2||fffd|
              If SW_DCC2 = True Then
                 AR_ITEM = SPLIT2000(W_SPCLR, ",")
                 For J = 0 To UBound(AR_ITEM)
                    AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
                    W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Fill.ForeColor.RGB = CLng(AR_ITEM2(2))
                 Next J
              End If
              '|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
              If SW_DCB2 = True Then
                 AR_ITEM = SPLIT2000(W_SPDCB, ",")
                 For J = 0 To UBound(AR_ITEM)
                    AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
                    W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Bold = CBool(AR_ITEM2(2))
                 Next J
              End If
              '|fffd||391||316||7c2||fffd|
              If SW_DCI2 = True Then
                 AR_ITEM = SPLIT2000(W_SPDCI, ",")
                 For J = 0 To UBound(AR_ITEM)
                    AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
                    W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Italic = CBool(AR_ITEM2(2))
                 Next J
              End If
              '|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
              If SW_DCU2 = True Then
                 AR_ITEM = SPLIT2000(W_SPDCU, ",")
                 For J = 0 To UBound(AR_ITEM)
                    AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
                    W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.UnderlineStyle = CLng(AR_ITEM2(2))
                 Next J
              End If
              '|fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
              If SW_DCK2 = True Then
                 AR_ITEM = SPLIT2000(W_SPDCK, ",")
                 For J = 0 To UBound(AR_ITEM)
                    AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
                    W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Strikethrough = CBool(AR_ITEM2(2))
                 Next J
              End If
              If W_RET = vbCancel Then
                 Exit Function
              End If
              If W_RET = vbNo Then
                 GoTo LABEL_NEXT
              End If
           End If
        End If
     
        W_SPTXTBK = W_SPTXT
        W_ST = 1
        W_J = 0
        Erase AR_LEN0
        Erase AR_POS
        Erase AR_LEN
        For J = 0 To MAXJ
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
              W_VL = MATCHES.Item(J).Value
           Else
              AR_WK = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK(0))
              W_LN = CLng(AR_WK(1))
              W_VL = Mid$(W_SPTXTBK, W_FI + 1, W_LN)
              W_RS = AR_RES(J)
           End If
           
           SW_FIND = True
           If SW_FIND = True Then
              If RE.Pattern = "$" Then
                 W_POS = Len(W_SPTXT) + 1
              Else
                 If W_LN = 0 Then
                    If J > 0 Then
                       W_ST = W_ST + 1
                    End If
                 End If
                 W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
              End If
              W_LEN = W_LN
              W_J = W_J + 1
              ReDim Preserve AR_LEN0(W_J)
              AR_LEN0(W_J) = W_LEN
              ReDim Preserve AR_POS(W_J)
              AR_POS(W_J) = W_POS
              If W_POS - 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR1 = W_SPTXT
                 Else
                    W_STR1 = Left$(W_SPTXT, W_POS - 1)
                 End If
              Else
                 W_STR1 = ""
              End If
              If W_LEN = 0 Then
                 W_STR2 = ""
              Else
                 W_STR2 = Mid$(W_SPTXT, W_POS, W_LEN)
              End If
              If Len(W_SPTXT) - W_POS - W_LEN + 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR3 = ""
                 Else
                    W_STR3 = Right$(W_SPTXT, Len(W_SPTXT) - W_POS - W_LEN + 1)
                 End If
              Else
                 W_STR3 = ""
              End If
              
              SW_SPREP = UserForm1.SP_REP3(W_STR2, W_REPTXT)
              If SW_SPREP = True Then
                 W_STR2 = W_REPTXT
              Else
                 If SW_NR = False Then
                    W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(UserForm1.ComboBox7.Value))
                    W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
                 Else
                    W_STR2 = W_RS
                 End If
                 W_LEN = Len(W_STR2)
              End If
              ReDim Preserve AR_LEN(W_J)
              AR_LEN(W_J) = W_LEN
              W_SPTXT = W_STR1 & W_STR2 & W_STR3
              W_ST = W_POS + W_LEN
              If SW_GREP = False Then
                 W_CNTRA = W_CNTRA + 1
              End If
           Else
              W_ST = W_ST + W_LN
           End If
        Next J
        W_REPTXT = W_STR1 & W_STR2 & W_STR3
        '|fffd|u|fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
        W_SHP.SmartArt.Nodes(I).TextFrame2.TextRange.text = W_REPTXT
     
        If SW_CLRKEEP = True Then
           Call KEEP_DC_SA(W_SHP.SmartArt.Nodes(I), 1, W_SPDCB, SW_DCB2)
           Call KEEP_DC_SA(W_SHP.SmartArt.Nodes(I), 2, W_SPDCI, SW_DCI2)
           Call KEEP_DC_SA(W_SHP.SmartArt.Nodes(I), 3, W_SPDCU, SW_DCU2)
           Call KEEP_DC_SA(W_SHP.SmartArt.Nodes(I), 4, W_SPDCK, SW_DCK2)
           Call KEEP_DC_SA(W_SHP.SmartArt.Nodes(I), 5, W_SPCLR, SW_DCC2)
        End If
           
        If SW_SML = True Then
           With W_SHP.SmartArt.Nodes(I).Shapes.Fill
              .ForeColor.SchemeColor = 51
              .Patterned msoPatternLargeGrid
           End With
        End If
           
        Erase AR_POS
        Erase AR_LEN
        Erase AR_LEN0
     End If
     
     If SW_GREP = True And SW_FIND = True Then
        FR = FR + 1
        If W_ZPATH = "" Then
           If UserForm1.CheckBox64.Value = False Then
              W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
           Else
              If Workbooks(W_GBNAME).path = "" Then
                 W_FRBPATH = Workbooks(W_GBNAME).Name
              Else
                 W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
              End If
           End If
        Else
           W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
           W_PATH = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(W_TEMP) - 1)
           W_PATH = Right$(W_PATH, Len(W_PATH) - InStr(W_PATH, "\"))
           W_FRBPATH = W_ZPATH & "\" & W_PATH
        End If
        Application.EnableEvents = False
        If W_KBN = 1 Then
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Value = FR - 5
        Else
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Value = FR - 6
        End If
        If UserForm1.CheckBox64.Value = False Then
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(UserForm1.ComboBox20.Value) - 1)
        Else
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
        End If
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 3).Value = Sheets(S).Name
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 4).Value = W_SHP.Name
        If W_KBN = 1 Then
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = W_SPTXT
        Else
           If ActiveWorkbook.ReadOnly = True Then
              Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = W_SPTXT
              Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Interior.ColorIndex = 3
           Else
              Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = W_REPTXT
           End If
        End If
        If W_ZPATH = "" Then
           If InStr(W_FRBPATH, "\") > 0 Then
              If TypeName(Sheets(S)) = "Worksheet" Then
                 ADDR = "'" & Sheets(S).Name & "'!" & Range(W_SHP.TopLeftCell, W_SHP.BottomRightCell).Address
                 ActiveSheet.Hyperlinks.Add Workbooks(W_FRB).Worksheets(1).Cells(FR, 5), W_FRBPATH, ADDR
              Else
                 ActiveSheet.Hyperlinks.Add Workbooks(W_FRB).Worksheets(1).Cells(FR, 5), W_FRBPATH
              End If
           End If
        End If
        Workbooks(W_FRB).Worksheets(1).Range(Workbooks(W_FRB).Worksheets(1).Cells(FR, 1), Workbooks(W_FRB).Worksheets(1).Cells(FR, 5)).Borders.LineStyle = True
        If SW_GHO = False Then
           Workbooks(W_FRB).Activate
           Application.ScreenUpdating = True
           Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
           Application.ScreenUpdating = False
           If UserForm1.CheckBox64.Value = False Then
              Workbooks(Workbooks.count).Activate
           Else
              Workbooks(W_GBNAME).Activate
           End If
        End If
        Application.EnableEvents = True
        W_CNTFA = W_CNTFA + 1
        W_CNTFA2 = W_CNTFA2 + 1
        If W_KBN = 3 Then
           W_CNTRA = W_CNTRA + 1
        End If
     End If
     
     Set MATCHES = Nothing
     RE.Global = True

LABEL_NEXT:
  Next I

End Function

Private Sub KEEP_DC_SA(ByRef S As Object, ByVal W_DC As Long, ByVal W_SP As String, ByVal SW_DCCHG As Boolean)

  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  
  Dim AR_POS2() As Long
  Dim AR_LEN2() As Long
  Dim AR_CI2() As Variant
  Dim W_SPTXTBK As String

  Dim J As Long
  Dim K As Long
  Dim L As Long

  '|fffd||fffd||fffd||fffd||fffd|F|fffd||3cd|X
     AR_ITEM = SPLIT2000(W_SP, ",")
  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_CI2
  For J = 0 To UBound(AR_ITEM)
     AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
     ReDim Preserve AR_POS2(J + 1)
     AR_POS2(J + 1) = CLng(AR_ITEM2(0))
     ReDim Preserve AR_LEN2(J + 1)
     AR_LEN2(J + 1) = CLng(AR_ITEM2(1))
     ReDim Preserve AR_CI2(J + 1)
     If W_DC = 3 Then
        If AR_ITEM2(2) = "False" Or AR_ITEM2(2) = "-4142" Or AR_ITEM2(2) = "0" Then
           AR_CI2(J + 1) = False
        Else
           AR_CI2(J + 1) = 2
        End If
     ElseIf W_DC = 5 Then
        AR_CI2(J + 1) = CLng(AR_ITEM2(2))
        If AR_CI2(J + 1) = 74 Then
           AR_CI2(J + 1) = -4105
        End If
     Else
        AR_CI2(J + 1) = CBool(AR_ITEM2(2))
     End If
  Next J
           
  K = 1
  For J = 1 To W_J
     '|fffd|u|fffd||fffd||fffd|O|fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        Do While AR_POS2(K) <= AR_POS(J)
           If AR_POS2(K) < AR_POS(J) Then
              If AR_POS2(K) + AR_LEN2(K) - 1 >= AR_POS(J) Then
                 If AR_POS2(K) + AR_LEN2(K) > AR_POS(J) + AR_LEN0(J) Then
                    If AR_LEN0(J) = 0 Then
                    Else
                       ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                       ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                       ReDim Preserve AR_CI2(UBound(AR_CI2) + 1)
                       If UBound(AR_POS2) > K + 1 Then
                          For L = UBound(AR_POS2) To K + 2 Step -1
                             AR_POS2(L) = AR_POS2(L - 1)
                             AR_LEN2(L) = AR_LEN2(L - 1)
                             AR_CI2(L) = AR_CI2(L - 1)
                          Next L
                       End If
                       AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                       If UBound(AR_POS2) > K + 1 Then
                          AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                       Else
                          AR_LEN2(K + 1) = Len(W_SPTXTBK) + 1 - AR_POS2(K + 1)
                       End If
                       AR_CI2(K + 1) = AR_CI2(K)
                    End If
                 End If
                 AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
              End If
           Else
              If AR_LEN2(K) = AR_LEN0(J) Then
                 AR_LEN2(K) = AR_LEN(J)
              Else
                 If AR_LEN0(J) = 0 Then
                 Else
                    ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                    ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                    ReDim Preserve AR_CI2(UBound(AR_CI2) + 1)
                    If UBound(AR_POS2) > K + 1 Then
                       For L = UBound(AR_POS2) To K + 2 Step -1
                          AR_POS2(L) = AR_POS2(L - 1)
                          AR_LEN2(L) = AR_LEN2(L - 1)
                          AR_CI2(L) = AR_CI2(L - 1)
                       Next L
                    End If
                    AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                    If UBound(AR_POS2) > K + 1 Then
                       AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                    Else
                       AR_LEN2(K + 1) = Len(W_CLTXTBK) + 1 - AR_POS2(K + 1)
                    End If
                    AR_CI2(K + 1) = AR_CI2(K)
                 End If
                 If AR_LEN(J) = AR_LEN0(J) Then
                    AR_LEN2(K) = AR_LEN(J)
                 Else
                    AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
                 End If
              End If
           End If
           If AR_LEN2(K) > 0 Then
              Select Case W_DC
              Case 1
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
              Case 2
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
              Case 3
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.UnderlineStyle = AR_CI2(K)
              Case 4
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
              Case 5
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Fill.ForeColor.RGB = AR_CI2(K)
              End Select
           End If
           K = K + 1
           If K > UBound(AR_POS2) Then
              Exit Do
           End If
        Loop
     End If
     
     '|fffd|u|fffd||fffd||fffd|F|fffd||3cd|X
     If AR_LEN(J) > 0 And _
        SW_DCCHG = True Then
        Select Case W_DC
        Case 1
           S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.Bold = SW_DCB3
        Case 2
           S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.Italic = SW_DCI3
        Case 3
           If SW_DCU3 = True Then
              S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.UnderlineStyle = 2
           Else
              S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.UnderlineStyle = False
           End If
        Case 4
           S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.Strikethrough = SW_DCK3
        Case 5
           If W_DCTAG2 = "0" Then
              S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.Fill.ForeColor.SchemeColor = False
           Else
              S.TextFrame2.TextRange.Characters(AR_POS(J), AR_LEN(J)).Font.Fill.ForeColor.RGB = CLng(W_DCCLR2)
           End If
        End Select
     End If
     For L = K To UBound(AR_POS2)
        AR_POS2(L) = AR_POS2(L) + AR_LEN(J) - AR_LEN0(J)
     Next L
     
     '|fffd|u|fffd||fffd||fffd||fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        If J + 1 <= W_J Then
           Do While AR_POS2(K) < AR_POS(J + 1)
              Select Case W_DC
              Case 1
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
              Case 2
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
              Case 3
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.UnderlineStyle = AR_CI2(K)
              Case 4
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
              Case 5
                 S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Fill.ForeColor.RGB = AR_CI2(K)
              End Select
              K = K + 1
              If K > UBound(AR_POS2) Then
                 Exit Do
              End If
           Loop
        Else
           Do While K <= UBound(AR_POS2)
              If AR_LEN2(K) > 0 Then
                 Select Case W_DC
                 Case 1
                    S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
                 Case 2
                    S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
                 Case 3
                    S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.UnderlineStyle = AR_CI2(K)
                 Case 4
                    S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
                 Case 5
                    S.TextFrame2.TextRange.Characters(AR_POS2(K), AR_LEN2(K)).Font.Fill.ForeColor.RGB = AR_CI2(K)
                 End Select
              End If
              K = K + 1
           Loop
        End If
     End If
  Next J
  
  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_CI2

End Sub

Sub SEL_SA(LB As Object, ByVal I As Long, ByVal J As Long)

  Sheets(LB.list(I, 1)).Shapes(LB.list(I, 2)).SmartArt.Nodes(J).Shapes.Select
'''  Sheets(LB.list(LB.ListIndex, 1)).Shapes(LB.list(LB.ListIndex, 2)).SmartArt.Nodes(I).Shapes.Select

End Sub

Function CELL_CNT2007(RNG As Range) As Variant

  CELL_CNT2007 = RNG.Cells.CountLarge

End Function
Attribute VB_Name = "M09EXCEL2002"
Option Explicit
Option Private Module
Option Base 1

#If Win64 Then
Private Declare PtrSafe Function ShowWindowAsync Lib "user32.dll" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindowAsync Lib "user32.dll" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If

Function FIND2002(TRNG As Range, ByVal W_FW As String, W_AFT As Variant, ByVal W_LI As Variant, ByVal W_SO As Variant, ByVal W_SD As Variant, ByVal W_MC As Boolean, ByVal W_MB As Boolean) As Range

  On Error GoTo LABEL_ERROR
  Set FIND2002 = TRNG.Find(W_FW, W_AFT, W_LI, xlPart, W_SO, W_SD, W_MC, W_MB, False)
  On Error GoTo 0
  Exit Function

LABEL_RESUME:
  On Error Resume Next
  Set FIND2002 = TRNG.Find(W_FW, W_AFT, W_LI, xlPart, W_SO, W_SD, W_MC, W_MB, False)
  On Error GoTo 0
  Exit Function

LABEL_ERROR:
  On Error GoTo 0
  Set W_AFT = ActiveCell
  Resume LABEL_RESUME

End Function

Sub STCI2002(WS As Worksheet, ByVal CI As Long)

  WS.Tab.ColorIndex = CI

End Sub

Sub EXCELAPPHIDE()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  
  hwnd = Application.hwnd
  
  Call ShowWindowAsync(hwnd, 0)

End Sub

Attribute VB_Name = "M10EXCEL2013"
Option Explicit
Option Base 1
Option Private Module

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If

'|fffd||151|O|fffd||282||303|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetForegroundWindow Lib "user32.dll" () As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindow Lib "user32" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If
Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const SW_SHOWMAXIMIZED = 3

#If Win64 Then
Private Declare PtrSafe Function ShowWindowAsync Lib "user32.dll" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindowAsync Lib "user32.dll" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

Dim W_TMIDG3 As Long

Sub SETTM_UF()

  If XL3 Is Nothing Then
     Set XL3 = New C04Excel
     Set XL3.APP = Application
  End If
  
  On Error Resume Next
  AppActivate UserForm1.Caption
  On Error GoTo 0
  
End Sub

Sub KILLTM_UF()

  Set XL3 = Nothing

End Sub

Sub UF_TM()

  Dim SW_ACTUF As Boolean

#If Win64 Then
  Dim hwnd01 As LongPtr
  Dim hWndN As LongPtr
#Else
  Dim hwnd01 As Long
  Dim hWndN As Long
#End If


  On Error GoTo LABEL_ERR
  
  If W_TMIDUF = 0 Then
     Call KILLTM_UF
     Exit Sub
  End If
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  If UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page17" Then
  ElseIf ActiveWindow.Parent.Parent.Caption <> W_AAC Then
     hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
     hWndN = FindWindow(vbNullString, ActiveWindow.Parent.Parent.Caption)
#If Win64 Then
     Call SetWindowLongPtr(hwnd01, -8, hWndN)
#Else
     Call SetWindowLong(hwnd01, -8, hWndN)
#End If
     Call SetWindowPos(hwnd01, 0, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd|O
     W_AAC = ActiveWindow.Parent.Parent.Caption
  End If

  On Error GoTo 0
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Call KILLTM_UF
  Exit Sub

End Sub

Sub GREP2013S1()

  Application.ScreenUpdating = True
     
  W_APLCAP = ""
  On Error Resume Next
  W_APLCAP = Application.ActiveWindow.Parent.Parent.Caption
  On Error GoTo 0
  
End Sub

Sub GREP2013S2()

#If Win64 Then
  Dim hwnd01 As LongPtr
  Dim hwnd As LongPtr
#Else
  Dim hwnd01 As Long
  Dim hwnd As Long
#End If

  
  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
    
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd||fffd||fffd|
  UserForm1.Tag = ""
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400)  '|fffd||fffd||fffd|
  
  hwnd = FindWindow(vbNullString, W_APLCAP)
  ShowWindow hwnd, SW_SHOWMINIMIZED
  
  Call SetWindowPos(hwnd01, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
  UserForm1.Tag = "T"

  Call UF_SHOW0
  Call UserForm1.UF_SHOW2
  
  On Error Resume Next
  AppActivate Windows(Workbooks(Workbooks.count).Windows(1).Caption).Parent.Parent.Caption
  On Error GoTo 0

End Sub

Sub GREP2013E1()


#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If

 
  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)

  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  UserForm1.Tag = ""
  If W_APLCAP = "" Then
     UserForm1.Hide
  End If

End Sub

Sub GREP2013E2()

#If Win64 Then
  Dim hwnd01 As LongPtr
  Dim hwnd As LongPtr
#Else
  Dim hwnd01 As Long
  Dim hwnd As Long
#End If

  Dim I As Long
  Dim W As Long
  Dim W_WC As String

  W_WC = ActiveWindow.Caption

  W = 0
  On Error Resume Next
  W = UBound(AR_WVI)
  On Error GoTo 0
  
  For I = 1 To W
     Windows(AR_WVI(I)).Visible = True
  Next I

  Windows(W_WC).Activate

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  
  If W_APLCAP = "" Then
     UserForm1.Show vbModeless
  End If
  Call SetWindowPos(hwnd01, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
  UserForm1.Tag = "T"
                 
End Sub

Sub GREP2013E3()

#If Win64 Then
  Dim hwndA As LongPtr
  Dim hwnd01 As LongPtr
#Else
  Dim hwndA As Long
  Dim hwnd01 As Long
#End If


  hwndA = FindWindow(vbNullString, ActiveWorkbook.Parent.Parent.Caption)
  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)

#If Win64 Then
  Call SetWindowLongPtr(hwnd01, -8, hwndA)
#Else
  Call SetWindowLong(hwnd01, -8, hwndA)
#End If
  
  AppActivate UserForm1.Caption

End Sub
     
Sub SETTM_PC()

  SW_PCHK = False
  SW_CB49 = UserForm1.CheckBox49.Value
  W_TMIDPC = SetTimer(0, 0, 1000, AddressOf PC_TM)

End Sub
     
Sub PC_TM()

  KillTimer 0, W_TMIDPC
  W_TMIDPC = 0
  
  If SW_PCHK = True Then
     Exit Sub
  End If

  SW_PCHK = True
  
  Workbooks(Workbooks.count).Close False
  
  Application.Calculation = W_AC1
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  Call SETTING_DFT

  If SW_CB49 = True Then
     W_RET = MsgBox("Activate contents.", vbExclamation)
  Else
     W_RET = MsgBox("|fffd|R|fffd||fffd||fffd|e|fffd||fffd||fffd|c|fffd||fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
  End If

End Sub

Sub EXCEL2013APPHIDE()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  
  hwnd = Application.hwnd
  Call ShowWindowAsync(hwnd, 0)

End Sub
Attribute VB_Name = "M11RAILROAD"
Option Explicit
Option Private Module
Option Base 1
    
Dim R2BK As Long
Dim GP As Long
Dim AR_CNV3() As String
Dim B3 As Long

Sub RE_SPLIT(ByVal RESTR As String, ByRef W_LV1 As Long, ByRef R As Long, ByRef C As Long, ByRef MAXR As Long, ByRef MAXC As Long)

  Dim I As Long
  Dim SI As Long
  Dim W_STR As String
  Dim RBK As Long
    
  Dim R1 As Long
  Dim C1 As Long
  Dim R2 As Long
  Dim C2 As Long
    
  Dim EI As Long
    
  Dim W_LV2 As Long
  Dim AR_STR As Variant
  Dim CBK As Long
  Dim MAXC2 As Long
  Dim W_LVS As Long
    
  Dim R1BK As Long
  Dim CX As Long
  Dim SW_LPEND As Boolean
  Dim W_GRP As Long
  Dim GP1 As Long
    
  Dim J As Long
    
    
  If W_LV1 = -1 Then
     W_LV1 = 0
     GP = 0
  End If
  
  If InStr(RESTR, "(") = 0 And _
     InStr(RESTR, ")") = 0 Then
     Call RE_SPLIT2(RESTR, R, C, MAXC)
     If MAXR < R Then
        MAXR = R
     End If
     Exit Sub
  End If
  
  W_LV2 = 0
  
  If InStr(RESTR, "|") > 0 Then
     For I = 1 To Len(RESTR)
        If Mid$(RESTR, I, 1) = "(" Then
           W_LV2 = W_LV2 + 1
        End If
        If W_LV2 = 0 Then
           If Mid$(RESTR, I, 1) = "|" Then
              Mid$(RESTR, I, 1) = vbTab
           End If
        End If
        If Mid$(RESTR, I, 1) = ")" Then
           W_LV2 = W_LV2 - 1
        End If
     Next I
  
     AR_STR = Split(RESTR, vbTab)
     If UBound(AR_STR) > 0 Then
        CBK = C
        MAXC2 = 0
        For I = 0 To UBound(AR_STR)
           If AR_STR(I) <> "" Then
              If MAXR > 0 Then
                 R = MAXR + 4
              End If
              C = CBK
              Call RE_SPLIT(AR_STR(I), W_LV1, R, C, MAXR, MAXC)
              MAXR = MAXR + 1
              If MAXC2 < C Then
                 MAXC2 = C
              End If
           End If
        Next I
        If MAXC < MAXC2 - 1 Then
           MAXC = MAXC2
           C = MAXC + 2
        End If
        
        C = C - 1
        Exit Sub
     End If
  End If
  
  
  SI = 1

  For I = 1 To Len(RESTR)
     If Mid$(RESTR, I, 1) = "(" Then
        If W_LV1 = 0 Then
           If I > SI Then
              W_STR = Mid$(RESTR, SI, I - SI)
              Call RE_SPLIT2(W_STR, R, C, MAXC)
              C = C + 1
              Cells(R + 3, C).Value = "+"
           End If
           If Mid$(RESTR, I, 3) = "(?:" Then
              W_GRP = 1
              SI = I + 3
           ElseIf Mid$(RESTR, I, 3) = "(?=" Then
              W_GRP = 2
              SI = I + 3
           ElseIf Mid$(RESTR, I, 3) = "(?!" Then
              W_GRP = 3
              SI = I + 3
           ElseIf Mid$(RESTR, I, 4) = "(?<=" Then
              W_GRP = 4
              SI = I + 4
           ElseIf Mid$(RESTR, I, 4) = "(?<!" Then
              W_GRP = 5
              SI = I + 4
           Else
              W_GRP = 6
              GP = GP + 1
              GP1 = GP
              SI = I + 1
           End If
        End If
        W_LV1 = W_LV1 + 1
     End If
     
     If Mid$(RESTR, I, 1) = ")" Then
        RBK = R
        W_LV1 = W_LV1 - 1
        If W_LV1 = 0 Then
           R2BK = 0
           If I > SI Then
              W_STR = Mid$(RESTR, SI, I - SI)
              C1 = C + 1
              R1 = R + 2
              Call RE_SPLIT(W_STR, W_LV1, R, C, MAXR, MAXC)
              C2 = MAXC
              
              If MAXC > C Then
                 C = MAXC
              End If
              
              R2 = R + 4
              If R2BK > R2 Then
                 R2 = R2BK
              Else
                 R2BK = R2
              End If
              If MAXR < R2 Then
                 MAXR = R2
              End If
              If R1 = R2 And C1 = C2 Then
              Else
                 R1BK = R1
                 R1 = R1 - 1
                 SW_LPEND = False
                 Do While SW_LPEND = False
                    SW_LPEND = True
                    For CX = C1 To C2
                       If Cells(R1, CX).Value <> "" Then
                          R1 = R1 - 1
                          SW_LPEND = False
                          Exit For
                       End If
                    Next CX
                 Loop
                 R1 = R1 + 1
                 With Range(Cells(R1, C1), Cells(R2, C2))
                    .Borders(xlEdgeLeft).LineStyle = True
                    .Borders(xlEdgeBottom).LineStyle = True
                    .Borders(xlEdgeRight).LineStyle = True
                    .Borders(xlEdgeTop).LineStyle = True
                 End With
                 Select Case W_GRP
                 Case 1
                    Cells(R1 - 1, C1).Value = "Not Cap Group"
                 Case 2
                    Cells(R1 - 1, C1).Value = "Posi LookAhead"
                 Case 3
                    Cells(R1 - 1, C1).Value = "Nega LookAhead"
                 Case 4
                    Cells(R1 - 1, C1).Value = "Posi LookBack"
                 Case 5
                    Cells(R1 - 1, C1).Value = "Nega LookBack"
                 Case 6
                    Cells(R1 - 1, C1).Value = "Group" & GP1
                 End Select
                 With Cells(R1 - 1, C1)
                    .HorizontalAlignment = xlLeft
                    .Cells.VerticalAlignment = xlBottom
                    .Font.Subscript = True
                 End With
                 R1 = R1BK
              End If
              EI = 0
              If I < Len(RESTR) Then
                 If Mid$(RESTR, I + 1, 1) = "{" Then
                    EI = InStr(I + 1, RESTR, "}")
                    If Mid$(RESTR, EI + 1, 1) = "?" Then
                       EI = EI + 1
                    End If
                 ElseIf Mid$(RESTR, I + 1, 1) = "*" Or _
                        Mid$(RESTR, I + 1, 1) = "+" Then
                    EI = I + 1
                    If Mid$(RESTR, EI + 1, 1) = "?" Then
                       EI = EI + 1
                    End If
                 ElseIf Mid$(RESTR, I + 1, 1) = "?" Then
                    EI = I + 1
                 End If
                 If EI > 0 Then
                    Call REOUT(Mid$(RESTR, I + 1, EI - I), R2, C2)
                    R2 = R2 + 1
                    If R2BK > R2 Then
                    Else
                       R2BK = R2
                    End If
                    C = C2
                 End If
                    
                 If EI = 0 Then
                    If I > 1 Then
                       If Mid$(RESTR, I - 1, 1) = ")" Then
                          C = C - 1
                       ElseIf Mid$(RESTR, I - 1, 1) = "}" Then
                          For J = I - 2 To 1 Step -1
                             If Mid$(RESTR, J, 1) = "{" Then
                                Exit For
                             End If
                          Next J
                          If Mid$(RESTR, J - 1, 1) = ")" Then
                             C = C - 1
                          End If
                       ElseIf Mid$(RESTR, I - 1, 1) = "*" Or _
                              Mid$(RESTR, I - 1, 1) = "+" Then
                          If I > 2 Then
                             If Mid$(RESTR, I - 2, 1) = ")" Then
                                C = C - 1
                             End If
                          End If
                       ElseIf Mid$(RESTR, I - 1, 1) = "?" Then
                          If I > 2 Then
                             If Mid$(RESTR, I - 2, 1) = ")" Then
                                C = C - 1
                             ElseIf Mid$(RESTR, I - 2, 1) = "}" Then
                                For J = I - 3 To 1 Step -1
                                   If Mid$(RESTR, J, 1) = "{" Then
                                      Exit For
                                   End If
                                Next J
                                If Mid$(RESTR, J - 1, 1) = ")" Then
                                   C = C - 1
                                End If
                             ElseIf Mid$(RESTR, I - 2, 1) = "*" Or _
                                    Mid$(RESTR, I - 2, 1) = "+" Then
                                If I > 3 Then
                                   If Mid$(RESTR, I - 3, 1) = ")" Then
                                      C = C - 1
                                   End If
                                End If
                             End If
                          End If
                       End If
                    End If
                 End If
                    
                 If EI > 0 Then
                    I = EI
                 End If
              End If
              C = C + 1
              If I < Len(RESTR) Then
                 Cells(R1 + 1, C).Value = "+"
              End If
           End If
           SI = I + 1
        End If
        R = RBK
     End If
  Next I

  If W_LV1 = 0 Then
     If I > SI Then
        W_STR = Mid$(RESTR, SI, I - SI)
        Call RE_SPLIT(W_STR, W_LV1, R, C, MAXR, MAXC)
     End If
     SI = I + 1
  End If

End Sub

Private Sub RE_SPLIT2(ByVal RESTR As String, ByRef R As Long, ByRef C As Long, ByRef MAXC As Long)

  Dim I As Long
  Dim AR_STR As Variant
  Dim CBK As Long
  Dim MAXC2 As Long
  
  AR_STR = Split(RESTR, "|")
  CBK = C
  MAXC2 = 0

  For I = 0 To UBound(AR_STR)
     If AR_STR(I) <> "" Then
        R = R + 3
        C = CBK
        Call REOUT(AR_STR(I), R, C)
        If MAXC2 < C Then
           MAXC2 = C
        End If
     End If
  Next I

  R = R - 3
  MAXC = MAXC2

End Sub

Private Sub REOUT(ByVal RESTR As String, ByRef R As Long, ByRef C As Long)

  Dim I As Long
  Dim SW_CL As Boolean
  Dim SW_RP As Boolean
  Dim SW_RP2 As Boolean
  Dim SW_LTE As Boolean
  Dim W_STR As String
  Dim SI As Long
  Dim CBK As Long

  Dim RE9 As Object
  Dim W_CNV As String
  Dim AR_CNV As Variant
  Dim J As Long


  SW_CL = False
  SW_RP = False
  SW_RP2 = False
  SW_LTE = False
  CBK = C

  RESTR = Application.Substitute(RESTR, "\n", Chr$(20))
  RESTR = Application.Substitute(RESTR, "\d", Chr$(21))
  RESTR = Application.Substitute(RESTR, "\D", Chr$(22))
  RESTR = Application.Substitute(RESTR, "\w", Chr$(23))
  RESTR = Application.Substitute(RESTR, "\W", Chr$(24))
  RESTR = Application.Substitute(RESTR, "\s", Chr$(25))
  RESTR = Application.Substitute(RESTR, "\S", Chr$(26))
  RESTR = Application.Substitute(RESTR, ".", Chr$(27))

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = False
     .Global = True
  End With
  
  RE9.Pattern = "(\\)([0-7]{3})"
  If RE9.Test(RESTR) = True Then
     W_CNV = RE9.Replace(RESTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 3 Then
           AR_CNV(J) = Chr$("&O" & Left(AR_CNV(J), 3)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 3)
        End If
     Next J
     RESTR = Join(AR_CNV, "")
  End If
  
  RE9.Pattern = "(\\x)([0-9A-Fa-f]{2})"
  If RE9.Test(RESTR) = True Then
     W_CNV = RE9.Replace(RESTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 2 Then
           AR_CNV(J) = Chr$("&H" & Left(AR_CNV(J), 2)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 2)
        End If
     Next J
     RESTR = Join(AR_CNV, "")
  End If
  
  RE9.Pattern = "(\\u)([0-9A-Fa-f]{4})"
  If RE9.Test(RESTR) = True Then
     W_CNV = RE9.Replace(RESTR, vbTab & "$2")
     AR_CNV = Split(W_CNV, vbTab)
     For J = 0 To UBound(AR_CNV)
        If Len(AR_CNV(J)) >= 4 Then
           AR_CNV(J) = ChrW$("&H" & Left(AR_CNV(J), 4)) & Right$(AR_CNV(J), Len(AR_CNV(J)) - 4)
        End If
     Next J
     RESTR = Join(AR_CNV, "")
  End If

  RE9.Pattern = "(\\\d+)"
  If RE9.Test(RESTR) = True Then
     W_CNV = RE9.Replace(RESTR, vbTab & "$1" & vbTab)
     AR_CNV = Split(W_CNV, vbTab)
     Erase AR_CNV3
     B3 = 0
     RE9.Pattern = "^(\\\d+)$"
     For I = 0 To UBound(AR_CNV)
        If RE9.Test(AR_CNV(I)) = True Then
           B3 = B3 + 1
           ReDim Preserve AR_CNV3(B3)
           AR_CNV3(B3) = AR_CNV(I)
        End If
     Next I
     RE9.Pattern = "(\\\d+)"
     RESTR = RE9.Replace(RESTR, vbTab)
     B3 = 0
  End If

  Set RE9 = Nothing

  For I = 1 To Len(RESTR)
     If Mid$(RESTR, I, 1) = "[" And _
        SW_CL = False Then
        SW_CL = True
        SW_LTE = True
        SI = I + 1
     End If
     If SW_CL = True Then
        If Mid$(RESTR, I, 1) = "]" Then
           If C > CBK Then
              C = C + 1
              Cells(R, C).Value = "+"
           End If
           W_STR = Mid$(RESTR, SI, I - SI)
           Call REOUT_CL(W_STR, R, C)
           W_STR = ""
           SW_CL = False
           SW_LTE = False
           GoTo L_NEXT
        End If
     Else
        If Mid$(RESTR, I, 1) = "{" Then
           SW_RP = True
           SW_LTE = True
           SI = I + 1
        End If
        If SW_RP = True Then
           If Mid$(RESTR, I, 1) = "}" Then
              W_STR = Mid$(RESTR, SI, I - SI)
              If I < Len(RESTR) Then
                 If Mid$(RESTR, I + 1, 1) = "?" Then
                    W_STR = W_STR & "?"
                    I = I + 1
                 End If
              End If
              Call REOUT_RP(W_STR, R, C)
              W_STR = ""
              SW_RP = False
              SW_LTE = False
              GoTo L_NEXT
           End If
        Else
           If SW_RP2 = True Then
              If I < Len(RESTR) Then
                 If Mid$(RESTR, I + 1, 1) = "?" Then
                    Call REOUT_RP(Mid$(RESTR, I, 2), R, C)
                    I = I + 1
                 Else
                    Call REOUT_RP(Mid$(RESTR, I, 1), R, C)
                 End If
              Else
                 Call REOUT_RP(Mid$(RESTR, I, 1), R, C)
              End If
              SW_LTE = False
           Else
              If Mid$(RESTR, I, 1) = "*" Or _
                 Mid$(RESTR, I, 1) = "+" Or _
                 Mid$(RESTR, I, 1) = "?" Then
                 SW_RP2 = True
                 SW_LTE = True
                 I = I - 1
              End If
           End If
        End If
     End If
        
     If SW_LTE = False Then
        If SW_RP2 = True Then
           SW_RP2 = False
        Else
           W_STR = W_STR & Mid$(RESTR, I, 1)
        End If
     Else
        If W_STR <> "" Then
           If (SW_RP = True Or SW_RP2 = True) Then
              If Len(W_STR) > 1 Then
                 If C > CBK Then
                    C = C + 1
                    Cells(R, C).Value = "+"
                 End If
                 Call REOUT_LT(Left$(W_STR, Len(W_STR) - 1), R, C)
              End If
              If C > CBK Then
                 C = C + 1
                 Cells(R, C).Value = "+"
              End If
              Call REOUT_LT(Right$(W_STR, 1), R, C)
           Else
              If C > CBK Then
                 C = C + 1
                 Cells(R, C).Value = "+"
              End If
              Call REOUT_LT(W_STR, R, C)
           End If
           W_STR = ""
        End If
     End If
  
L_NEXT:
  Next I

  If SW_LTE = False Then
     If W_STR <> "" Then
        If C > CBK Then
           C = C + 1
           Cells(R, C).Value = "+"
        End If
        Call REOUT_LT(W_STR, R, C)
     End If
  End If

End Sub

Private Sub REOUT_CL(ByVal RESTR As String, ByRef R As Long, ByRef C As Long)

  Dim I As Long
  Dim W_STR As String
  Dim W_LF As String
  Dim SW_NOT As Boolean
  Dim EI As Long
  Dim EI1 As Long
  Dim EI2 As Long

  
  SW_NOT = False

  RESTR = Application.Substitute(RESTR, "\n", Chr$(20))
  RESTR = Application.Substitute(RESTR, "\d", Chr$(21))
  RESTR = Application.Substitute(RESTR, "\D", Chr$(22))
  RESTR = Application.Substitute(RESTR, "\w", Chr$(23))
  RESTR = Application.Substitute(RESTR, "\W", Chr$(24))
  RESTR = Application.Substitute(RESTR, "\s", Chr$(25))
  RESTR = Application.Substitute(RESTR, "\S", Chr$(26))
  RESTR = Application.Substitute(RESTR, ".", Chr$(27))

  If Left$(RESTR, 1) = "^" Then
     SW_NOT = True
     RESTR = Right$(RESTR, Len(RESTR) - 1)
  End If
  
  For I = 1 To Len(RESTR)
     If I < Len(RESTR) - 1 Then
        If Mid$(RESTR, I + 1, 1) = "-" Then
           If W_STR = "" Then
              W_LF = ""
           ElseIf Right$(W_STR, 1) = vbLf Then
              W_LF = ""
           Else
              W_LF = vbLf
           End If
           W_STR = W_STR & W_LF & Chr$(34) & Mid$(RESTR, I, 1) & Chr$(34) & "-" & Chr$(34) & Mid$(RESTR, I + 2, 1) & Chr$(34) & "," & vbLf
           I = I + 2
        Else
           W_STR = W_STR & Chr$(34) & Mid$(RESTR, I, 1) & Chr$(34) & ","
        End If
     Else
        W_STR = W_STR & Chr$(34) & Mid$(RESTR, I, 1) & Chr$(34) & ","
     End If
  Next

  If Right$(W_STR, 1) = vbLf Then
     W_STR = Left$(W_STR, Len(W_STR) - 1)
  End If
  W_STR = Left$(W_STR, Len(W_STR) - 1)

  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(20) & Chr$(34), "LF")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(21) & Chr$(34), "Num")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(22) & Chr$(34), "NonNum")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(23) & Chr$(34), "Word")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(24) & Chr$(34), "NonWord")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(25) & Chr$(34), "Space")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(26) & Chr$(34), "NonSpace")
  W_STR = Application.Substitute(W_STR, Chr$(34) & Chr$(27) & Chr$(34), "Any")

  C = C + 1
  Cells(R, C).Value = REOUT_LT2(W_STR)
  W_STR = W_STR & ","
  For I = 1 To Len(W_STR)
     If Mid$(W_STR, I, 1) = Chr$(34) Then
        EI = 0
        EI1 = InStr(I, W_STR, Chr$(34) & "-")
        EI2 = InStr(I, W_STR, Chr$(34) & ",")
        If EI1 > 0 And EI2 > 0 Then
           EI = Application.Min(EI1, EI2)
        ElseIf EI1 > 0 And EI2 = 0 Then
           EI = EI1
        ElseIf EI1 = 0 And EI2 > 0 Then
           EI = EI2
        End If
        Cells(R, C).Characters(I, EI - I + 1).Font.ColorIndex = 5
        I = EI + 1
     ElseIf Mid$(W_STR, I, 1) = vbLf Then
     Else
        EI = InStr(I + 1, W_STR, ",")
        Cells(R, C).Characters(I, EI - I).Font.ColorIndex = 3
        I = EI
     End If
  Next I

  If SW_NOT = True Then
     Cells(R - 1, C).Value = "None Of"
  Else
     Cells(R - 1, C).Value = "One Of"
  End If

  With Cells(R - 1, C)
     .HorizontalAlignment = xlLeft
     .Cells.VerticalAlignment = xlBottom
     .Font.Subscript = True
  End With

End Sub

Private Sub REOUT_RP(ByVal RESTR As String, ByRef R As Long, ByRef C As Long)

  Dim SW_SHORT As Boolean
  Dim W_STR As String
  Dim I As Long
  Dim AR_STR As Variant

  
  SW_SHORT = False
    
  If Len(RESTR) > 1 Then
     If Right$(RESTR, 1) = "?" Then
        SW_SHORT = True
        RESTR = Left$(RESTR, Len(RESTR) - 1)
     End If
  End If

  W_STR = "Repeat "
  
  If RESTR = "*" Then
     W_STR = W_STR & "0-"
  ElseIf RESTR = "+" Then
     W_STR = W_STR & "1-"
  ElseIf RESTR = "?" Then
     W_STR = W_STR & "0-1"
  Else
     AR_STR = Split(RESTR, ",")
     W_STR = W_STR & AR_STR(0)
     If UBound(AR_STR) > 0 Then
        W_STR = W_STR & "-" & AR_STR(1)
     End If
  End If

  If SW_SHORT = True Then
     W_STR = W_STR & " Shortest"
  End If

  Cells(R + 1, C).Value = W_STR
  
  With Cells(R + 1, C)
     .HorizontalAlignment = xlRight
     .Cells.VerticalAlignment = xlTop
     .Font.Superscript = True
  End With

End Sub

Private Sub REOUT_LT(ByVal RESTR As String, ByRef R As Long, ByRef C As Long)

  Dim I As Long
  Dim SW_LT As Boolean
  Dim W_LT As String
  Dim SW_LTA As Boolean
  Dim W_STR As String
  Dim CBK As Long
  
  Dim RE9 As Object
  Dim GP1S As String
  Dim AR_STR As Variant
  
  
  CBK = C
  
  RESTR = Application.Substitute(RESTR, Chr$(20), "\n")
  RESTR = Application.Substitute(RESTR, Chr$(21), "\d")
  RESTR = Application.Substitute(RESTR, Chr$(22), "\D")
  RESTR = Application.Substitute(RESTR, Chr$(23), "\w")
  RESTR = Application.Substitute(RESTR, Chr$(24), "\W")
  RESTR = Application.Substitute(RESTR, Chr$(25), "\s")
  RESTR = Application.Substitute(RESTR, Chr$(26), "\S")
  RESTR = Application.Substitute(RESTR, Chr$(27), ".")

  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .Pattern = "^\\(\d+).*$"
     .IgnoreCase = False
     .Global = False
  End With

  AR_STR = Split(RESTR, vbTab)
  For I = 0 To UBound(AR_STR)
     If I > 0 Then
       B3 = B3 + 1
       RESTR = RESTR & AR_CNV3(B3) & AR_STR(I)
     Else
       RESTR = AR_STR(I)
     End If
  Next I
  
  For I = 1 To Len(RESTR)
     If SW_LT = True Then
        SW_LT = False
        GoTo L_NEXT
     End If
     
     If Mid$(RESTR, I, 2) = "\n" Then
        W_LT = "LF"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\d" Then
        W_LT = "Num"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\D" Then
        W_LT = "NonNum"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\w" Then
        W_LT = "Word"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\W" Then
        W_LT = "NonWord"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\s" Then
        W_LT = "Space"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\S" Then
        W_LT = "NonSpace"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 1) = "." Then
        W_LT = "Any"
        SW_LT = True
        I = I - 1
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 1) = "^" Then
        W_LT = "Start"
        SW_LT = True
        I = I - 1
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 1) = "$" Then
        W_LT = "End"
        SW_LT = True
        I = I - 1
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\b" Then
        W_LT = "WordBound"
        SW_LT = True
        GoTo L_AFT
     End If
     If Mid$(RESTR, I, 2) = "\B" Then
        W_LT = "NonWordBound"
        SW_LT = True
        GoTo L_AFT
     End If
               
     If RE9.Test(Right$(RESTR, Len(RESTR) - I + 1)) = True Then
        GP1S = RE9.Replace(Right$(RESTR, Len(RESTR) - I + 1), "$1")
        If CLng(Val(GP1S)) <= GP Then
           W_LT = "BackRef" & GP1S
           SW_LT = True
           GoTo L_AFT
        End If
     End If

L_AFT:
     If SW_LT = True Then
        If W_STR = "" Then
           If CBK < C Then
              C = C + 1
              Cells(R, C).Value = "+"
           End If
           C = C + 1
           Cells(R, C).Value = W_LT
           If W_LT = "Start" Or W_LT = "End" Or _
              W_LT = "WordBound" Or W_LT = "NonWordBound" Then
              Cells(R, C).Font.ColorIndex = 10
           Else
              Cells(R, C).Font.ColorIndex = 3
           End If
        Else
           If CBK < C Then
              C = C + 1
              Cells(R, C).Value = "+"
           End If
           W_STR = W_STR & Chr$(34)
           C = C + 1
           Cells(R, C).Value = REOUT_LT2(W_STR)
           Cells(R, C).Font.ColorIndex = 5
           C = C + 1
           Cells(R, C).Value = "+"
           C = C + 1
           Cells(R, C).Value = W_LT
           If W_LT = "Start" Or W_LT = "End" Or _
              W_LT = "WordBound" Or W_LT = "NonWordBound" Then
              Cells(R, C).Font.ColorIndex = 10
           Else
              Cells(R, C).Font.ColorIndex = 3
           End If
        End If
        W_STR = ""
        SW_LTA = True
     Else
        If SW_LTA = True Then
           SW_LTA = False
        End If
        If W_STR = "" Then
           W_STR = Chr$(34)
        End If
        W_STR = W_STR & Mid$(RESTR, I, 1)
     End If

L_NEXT:
  Next I

  Set RE9 = Nothing

  If SW_LTA = False Then
     W_STR = W_STR & Chr$(34)
     
     If CBK < C Then
        C = C + 1
        Cells(R, C).Value = "+"
     End If
     C = C + 1
     Cells(R, C).Value = REOUT_LT2(W_STR)
     Cells(R, C).Font.ColorIndex = 5
  End If

End Sub

Private Function REOUT_LT2(ByVal RESTR As String) As String

  RESTR = Application.Substitute(RESTR, Chr$(1), "\")
  RESTR = Application.Substitute(RESTR, Chr$(2), "(")
  RESTR = Application.Substitute(RESTR, Chr$(3), ")")
  RESTR = Application.Substitute(RESTR, Chr$(4), "[")
  RESTR = Application.Substitute(RESTR, Chr$(5), "]")
  RESTR = Application.Substitute(RESTR, Chr$(6), "{")
  RESTR = Application.Substitute(RESTR, Chr$(7), "}")
  RESTR = Application.Substitute(RESTR, Chr$(14), ".")
  RESTR = Application.Substitute(RESTR, Chr$(15), "*")
  RESTR = Application.Substitute(RESTR, Chr$(16), "+")
  RESTR = Application.Substitute(RESTR, Chr$(17), "?")
  RESTR = Application.Substitute(RESTR, Chr$(18), "|")
  RESTR = Application.Substitute(RESTR, Chr$(28), "^")
  RESTR = Application.Substitute(RESTR, Chr$(29), "$")

  REOUT_LT2 = RESTR

End Function
Attribute VB_Name = "M12NETRE"
Option Explicit
Option Private Module

Sub NRINST(ByVal W_PATH As String)

  Dim NRE As Object

  
  On Error GoTo L_ERR

  Call NRUNREG

#If Win64 Then
  Application.RegisterXLL Replace(W_PATH, ThisWorkbook.Name, "") & "NetRE64.xll"
#Else
  Application.RegisterXLL Replace(W_PATH, ThisWorkbook.Name, "") & "\NetRE.xll"
#End If
  
  Set NRE = CreateObject("NetRE")
  NRE.NetReInst W_PATH
  
  On Error GoTo 0
  Exit Sub

L_ERR:

End Sub

Sub NRTASK(NRE As Object, ByVal W_PATH As String, ByVal SW_NEW As Boolean)

  On Error GoTo L_ERR

  If NRE Is Nothing Then
     Set NRE = CreateObject("NetRE")
  End If
  NRE.NetReTask W_PATH, SW_NEW
  
  On Error GoTo 0
  Exit Sub

L_ERR:

End Sub

Function NRVER() As String

  Dim NRE As Object
  

  NRVER = ""
  On Error GoTo L_ERR
  Set NRE = CreateObject("NetRE")
  NRVER = NRE.OngReVer
  Set NRE = Nothing
  On Error GoTo 0
  Exit Function

L_ERR:

End Function

Function NRCHK(ByVal W_PAT As String, ByVal SW_IC As Boolean) As Object

  Dim W_RET As Boolean
  Dim NRE As Object
  

  Set NRCHK = Nothing

  On Error GoTo L_ERR
  Set NRE = CreateObject("NetRE")
  NRE.Pattern = W_PAT
  NRE.IgnoreCase = SW_IC
  If SW_ORE = True Then
     W_RET = NRE.OngReTest(" ")
  Else
     W_RET = NRE.NetReTest(" ")
  End If
  Set NRCHK = NRE
  On Error GoTo 0
  Exit Function

L_ERR:

End Function

Sub NRREG()

#If Win64 Then
  Application.RegisterXLL ThisWorkbook.path & "\NetRE64.xll"
#Else
  Application.RegisterXLL ThisWorkbook.path & "\NetRE.xll"
#End If

End Sub

Sub NRUNREG()

#If Win64 Then
  ExecuteExcel4Macro "UNREGISTER(""NetRE64.xll"")"
#Else
  ExecuteExcel4Macro "UNREGISTER(""NetRE.xll"")"
#End If

End Sub

Function NRTEST(NRE As Object, W_TARGET As String) As Boolean

  NRTEST = False

  On Error Resume Next
  If SW_ORE = True Then
     NRTEST = NRE.OngReTest(W_TARGET)
  Else
     NRTEST = NRE.NetReTest(W_TARGET)
  End If
  On Error GoTo 0

End Function

Function NREXE(NRE As Object, ByVal W_TARGET As String) As String

  NREXE = ""

  On Error Resume Next
  If SW_ORE = True Then
     NREXE = NRE.OngReExe(W_TARGET)
  Else
     NREXE = NRE.NetReExe(W_TARGET)
  End If
  On Error GoTo 0

End Function

Function NRREP(NRE As Object, ByVal W_TARGET As String, ByVal W_REP As String) As String

  NRREP = W_TARGET

  On Error Resume Next
  If SW_ORE = True Then
     NRREP = NRE.OngReReplace(W_TARGET, W_REP)
  Else
     NRREP = NRE.NetReReplace(W_TARGET, W_REP)
  End If
  On Error GoTo 0

End Function

Function NRRES(NRE As Object, ByVal W_TARGET As String, ByVal W_REP As String) As String

  NRRES = ""

  On Error Resume Next
  If SW_ORE = True Then
     NRRES = NRE.OngReResult(W_TARGET, W_REP)
  Else
     NRRES = NRE.NetReResult(W_TARGET, W_REP)
  End If
  On Error GoTo 0

End Function

Function NRTEST2(NRE As Object, ByVal W_TARGET As String, ByVal W_IDX1 As Long, ByVal W_IDX2 As Long) As Boolean

  NRTEST2 = False

  On Error Resume Next
  If SW_ORE = True Then
     NRTEST2 = NRE.OngReTest2(W_TARGET, W_IDX1, W_IDX2)
  Else
     NRTEST2 = NRE.NetReTest2(W_TARGET, W_IDX1, W_IDX2)
  End If
  On Error GoTo 0

End Function

Function NREXE2(NRE As Object, ByVal W_TARGET As String, ByVal W_IDX1 As Long, ByVal W_IDX2 As Long) As String

  NREXE2 = ""

  On Error Resume Next
  If SW_ORE = True Then
     NREXE2 = NRE.OngReExe2(W_TARGET, W_IDX1, W_IDX2)
  Else
     NREXE2 = NRE.NetReExe2(W_TARGET, W_IDX1, W_IDX2)
  End If
  On Error GoTo 0

End Function
Attribute VB_Name = "M13SUGGEST"
Option Explicit
Option Private Module
Option Base 1

Public W_SGFW As String
Public W_SGWD As String

Public W_SGBN As String
Public W_SGSN As String
Public W_SGR As Long
Public W_SGC As Long
Public W_SGKW As String
Public W_SGFM As String

'|fffd||151|O|fffd||282||303|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetForegroundWindow Lib "user32.dll" () As Long
#End If


'Z|fffd|I|fffd|[|fffd|_|fffd|[|fffd||303|g|fffd|b|fffd|v|fffd||292|u|fffd||242||fffd||fffd||fffd|q|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetTopWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
#Else
Private Declare Function GetTopWindow Lib "user32.dll" (ByVal hwnd As Long) As Long
#End If

'|fffd|w|fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||313||fffd||fffd||343|R|fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function ImmGetContext Lib "imm32.dll" (ByVal hwnd As LongPtr) As LongPtr
#Else
Private Declare Function ImmGetContext Lib "IMM32" (ByVal hwnd As Long) As Long
#End If

'|fffd|w|fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||313||fffd||fffd||343|R|fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function ImmReleaseContext Lib "imm32.dll" (ByVal hwnd As LongPtr, ByVal hIMC As LongPtr) As Long
#Else
Private Declare Function ImmReleaseContext Lib "IMM32" (ByVal hwnd As Long, ByVal hIMC As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function ImmGetCompositionString Lib "IMM32" Alias "ImmGetCompositionStringW" _
    (ByVal hIMC As LongPtr, ByVal dwIndex As Long, lpBuf As Any, ByVal dwBufLen As Long) As Long
#Else
Private Declare Function ImmGetCompositionString Lib "IMM32" Alias "ImmGetCompositionStringW" _
    (ByVal hIMC As Long, ByVal dwIndex As Long, lpBuf As Any, ByVal dwBufLen As Long) As Long
#End If
Private Const GCS_COMPCLAUSE = &H20

#If Win64 Then
Private Declare PtrSafe Function ImmSetCompositionString Lib "imm32.dll" Alias "ImmSetCompositionStringA" _
    (ByVal hIMC As LongPtr, ByVal dwIndex As Long, lpComp As Any, ByVal dw As Long, lpRead As Any, ByVal dw2 As Long) As Long
#Else
Private Declare Function ImmSetCompositionString Lib "imm32.dll" Alias "ImmSetCompositionStringA" _
    (ByVal hIMC As Long, ByVal dwIndex As Long, lpComp As Any, ByVal dw As Long, lpRead As Any, ByVal dw2 As Long) As Long
#End If
Private Const SCS_SETSTR = &H9

#If Win64 Then
Private Declare PtrSafe Function ImmNotifyIME Lib "imm32.dll" _
    (ByVal hIMC As LongPtr, ByVal dwAction As Long, ByVal dwIndex As Long, ByVal dwValue As Long) As Long
#Else
Private Declare Function ImmNotifyIME Lib "imm32.dll" _
    (ByVal hIMC As Long, ByVal dwAction As Long, ByVal dwIndex As Long, ByVal dwValue As Long) As Long
#End If
Private Const NI_COMPOSITIONSTR = &H15
Private Const CPS_CONVERT = 2

#If Win64 Then
Private Declare PtrSafe Function ImmSetOpenStatus Lib "imm32.dll" (ByVal hIMC As LongPtr, ByVal B As Long) As Long
#Else
Private Declare Function ImmSetOpenStatus Lib "imm32.dll" (ByVal hIMC As Long, ByVal B As Long) As Long
#End If

Sub KEEP_FIND_INFO()

  If W_SGFW = "" Then
     W_SGBN = ""
     W_SGSN = ""
     W_SGR = 0
     W_SGC = 0
     W_SGKW = ""
     W_SGFM = ""
     Exit Sub
  Else
     W_SGBN = ActiveWorkbook.Name
     W_SGSN = ActiveWorkbook.ActiveSheet.Name
     W_SGR = ActiveCell.Row
     W_SGC = ActiveCell.Column
     W_SGKW = W_SGFW
     W_SGFM = ""
     On Error Resume Next
     W_SGFM = ActiveCell.Formula
     If W_SGFM = "" Then
        W_SGFM = ActiveCell.Value
     End If
     On Error GoTo 0
  End If

  If W_SGFM = "" Then
     W_SGBN = ""
     W_SGSN = ""
     W_SGR = 0
     W_SGC = 0
     W_SGKW = ""
     W_SGFM = ""
  End If

End Sub

Sub MAKE_SGST()

  Dim W_FM As String
  Dim W_SGST As String
  Dim SW_SGST As Boolean
  Dim AR_LINE() As String
  Dim I As Long
  Dim J As Long
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_MAXLN As Long
  Dim W_WORD As String
  Dim SW_FIND1 As Boolean
  Dim SW_FIND2 As Boolean
  Dim AR_WK As Variant
  Dim W_STR As String
  
  
  If TypeName(ActiveWorkbook.ActiveSheet) <> "Worksheet" Then
     Exit Sub
  End If
  
  W_FM = ""
  On Error Resume Next
  W_FM = ActiveCell.Formula
  If W_FM = "" Then
     W_FM = ActiveCell.Value
  End If
  On Error GoTo 0
  
  If ActiveWorkbook.Name = W_SGBN And _
     ActiveWorkbook.ActiveSheet.Name = W_SGSN And _
     ActiveCell.Row = W_SGR And _
     ActiveCell.Column = W_SGC And _
     W_FM = W_SGFM Then
  Else
     W_SGBN = ""
     W_SGSN = ""
     W_SGR = 0
     W_SGC = 0
     W_SGKW = ""
     W_SGFM = ""
     Exit Sub
  End If

  If W_FM = "" Then
     Exit Sub
  End If

  W_SGST = ThisWorkbook.path & "\sug.txt"
  I = 0
  Erase AR_LINE
  SW_SGST = False
  If Dir(W_SGST) <> "" Then
     Open W_SGST For Input As #1
     Do While Not EOF(1)
        I = I + 1
        ReDim Preserve AR_LINE(I)
        Line Input #1, AR_LINE(I)
        SW_SGST = True
     Loop
     Close #1
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
     If SW_ENGLISH = True Then
        .Pattern = "[^\s""""#$%&'()=~|`{+*}<>?\^\\@\[;:\],./]+"
     Else
         .Pattern = "[|fffd||fffd||fffd||302||fffd||fffd||242||582||182||fffd||fffd||fffd|]"
        If .Test(W_SGFM) = True Then
           W_STR = JCNV(W_SGFM)
           If W_STR = "" Then
              W_STR = W_SGFM
           End If
        Else
           W_STR = W_SGFM
        End If
        .Pattern = "[^\s|fffd|@|fffd|i|fffd|j|fffd|o|fffd|p|fffd|u|fffd|v|fffd||fffd||fffd||fffd||fffd|e|fffd|f|fffd|A|fffd|B|fffd|C|fffd|D|fffd|H|fffd|I|fffd|F|fffd|G""""#$%&'()=~|`{+*}<>?\^\\@\[;:\],./]+"
     End If
  End With
  Set MATCHES = RE.Execute(W_STR)
  
  W_MAXLN = 0
  For J = 0 To MATCHES.count - 1
     If MATCHES.Item(J).Length > W_MAXLN Then
        If InStr(MATCHES.Item(J).Value, W_SGKW) > 0 And _
           SW_ENGLISH = True Then
        ElseIf MATCHES.Item(J).Value = W_SGKW Then
        Else
           W_MAXLN = MATCHES.Item(J).Length
           W_WORD = MATCHES.Item(J).Value
        End If
     End If
  Next J
  
  Set RE = Nothing
  Set MATCHES = Nothing
  
  If W_MAXLN >= 2 Then
     If SW_SGST = True Then
        SW_FIND1 = False
        SW_FIND2 = False
        For I = 1 To UBound(AR_LINE)
           AR_WK = Split(AR_LINE(I), vbTab)
           If AR_WK(0) = W_SGKW Then
              For J = 1 To UBound(AR_WK) - 1 Step 2
                 If AR_WK(J) = W_WORD Then
                    AR_WK(J + 1) = CLng(AR_WK(J + 1)) + 1
                    SW_FIND2 = True
                    Exit For
                 End If
              Next J
              AR_LINE(I) = Join$(AR_WK, vbTab)
              If SW_FIND2 = False Then
                 AR_LINE(I) = AR_LINE(I) & vbTab & W_WORD & vbTab & "1"
              End If
              SW_FIND1 = True
              Exit For
           End If
        Next I
        If SW_FIND1 = False Then
           ReDim Preserve AR_LINE(UBound(AR_LINE) + 1)
           AR_LINE(UBound(AR_LINE)) = W_SGKW & vbTab & W_WORD & vbTab & "1"
        End If
     Else
        ReDim AR_LINE(1)
        AR_LINE(1) = W_SGKW & vbTab & W_WORD & vbTab & "1"
     End If
  
     Open W_SGST For Output As #1
     For I = 1 To UBound(AR_LINE)
        Print #1, AR_LINE(I)
     Next I
     Close #1
  End If
  
End Sub

Function JCNV(ByVal W_BSTR As String) As String

#If Win64 Then
  Dim hwnd As LongPtr
  Dim hIMC As LongPtr
#Else
  Dim hwnd As Long
  Dim hIMC As Long
#End If

  Dim W_BK As String
  Dim W_BYTE() As Byte
  Dim W_BUFLN As Long
  Dim W_BUF() As Long
  Dim I As Long
  Dim W_BUFS() As String
  Dim RE As Object
  Dim RE2 As Object

  
  On Error Resume Next
  
  UserForm1.TextBox24.Enabled = True
  UserForm1.TextBox24.Value = W_BSTR
  UserForm1.CommandButton9.SetFocus
  UserForm1.TextBox24.SelStart = 0
  UserForm1.TextBox24.SelLength = Len(UserForm1.TextBox24.Value)
  UserForm1.TextBox24.SetFocus

  hwnd = GetForegroundWindow()
  hwnd = GetTopWindow(hwnd)
  
  hIMC = ImmGetContext(hwnd)

  W_RET = ImmSetOpenStatus(hIMC, 1)

  W_BYTE = StrConv(W_BSTR, vbFromUnicode)
  W_RET = ImmSetCompositionString(hIMC, SCS_SETSTR, W_BYTE(0), UBound(W_BYTE), ByVal 0, 0)
  W_RET = ImmNotifyIME(hIMC, NI_COMPOSITIONSTR, CPS_CONVERT, 0)
  DoEvents
  W_BUFLN = ImmGetCompositionString(hIMC, GCS_COMPCLAUSE, Null, 0)
  ReDim W_BUF(W_BUFLN / 4)
  W_RET = ImmGetCompositionString(hIMC, GCS_COMPCLAUSE, W_BUF(1), W_BUFLN)
  W_RET = ImmReleaseContext(hwnd, hIMC)
  
  UserForm1.TextBox24.Value = ""
  UserForm1.TextBox24.Enabled = False
  
  If W_BUFLN = 0 Then
     Exit Function
  End If
  
  ReDim W_BUFS(UBound(W_BUF))
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
     .Pattern = "^(.*?)([|fffd||fffd||fffd||302||fffd||fffd||242||582||182||fffd||fffd||fffd|])$"
  End With
  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .IgnoreCase = True
     .Global = True
     .Pattern = "^([|fffd||fffd||fffd||302||fffd||fffd||242||582||182||fffd||fffd||fffd|])(.*?)$"
  End With
  
  For I = 1 To UBound(W_BUF)
     If I < UBound(W_BUF) Then
        W_BUFS(I) = Mid$(W_BSTR, W_BUF(I) + 1, W_BUF(I + 1) - W_BUF(I))
     Else
        W_BUFS(I) = Mid$(W_BSTR, W_BUF(I) + 1, Len(W_BSTR) - W_BUF(I))
     End If
     If RE.Test(W_BUFS(I)) = True Then
        W_BUFS(I) = RE.Replace(W_BUFS(I), "$1 ")
     End If
     If RE2.Test(W_BUFS(I)) = True Then
        W_BUFS(I) = RE2.Replace(W_BUFS(I), " $2")
     End If
  Next I
  
  Set RE = Nothing
  
  JCNV = Join(W_BUFS, "")

  On Error GoTo 0

End Function

Sub SET_SGST_WORD()

  Dim W_SGST As String
  Dim I As Long
  Dim J As Long
  Dim SW_SGST As Boolean
  Dim AR_LINE() As String
  Dim W_MAXN As Long
  Dim JBK As Long
  Dim AR_WK As Variant
  

  W_SGWD = vbTab

  W_SGST = ThisWorkbook.path & "\sug.txt"
  I = 0
  Erase AR_LINE
  SW_SGST = False
  If Dir(W_SGST) <> "" Then
     Open W_SGST For Input As #1
     Do While Not EOF(1)
        I = I + 1
        ReDim Preserve AR_LINE(I)
        Line Input #1, AR_LINE(I)
        SW_SGST = True
     Loop
     Close #1
  End If

  If SW_SGST = True Then
     W_MAXN = 0
     JBK = 0
     
     For I = 1 To UBound(AR_LINE)
        AR_WK = Split(AR_LINE(I), vbTab)
        If AR_WK(0) = W_SGFW Then
           For J = 2 To UBound(AR_WK) Step 2
              If W_MAXN < CLng(AR_WK(J)) Then
                 W_MAXN = CLng(AR_WK(J))
                 JBK = J
              End If
           Next J
           If JBK > 0 Then
              W_SGWD = AR_WK(JBK - 1)
              Exit Sub
           End If
           Exit For
        End If
     Next I
  End If

End Sub
Attribute VB_Name = "M14DIFF"
Option Explicit
Option Base 1
Option Private Module

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|R|fffd|s|fffd|[
#If Win64 Then
  Private Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#Else
  Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#End If

#If Win64 Then
  Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
     (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
  Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
     (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
  Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
     (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
  Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
     (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

#If Win64 Then
  Private Declare PtrSafe Function CallWindowProc Lib "user32.dll" Alias "CallWindowProcA" _
     (ByVal lpPrevWndFunc As LongPtr, ByVal hwnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
#Else
  Private Declare Function CallWindowProc Lib "user32.dll" Alias "CallWindowProcA" _
     (ByVal lpPrevWndFunc As Long, ByVal hwnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
#End If

#If Win64 Then
  Private Declare PtrSafe Sub DragAcceptFiles Lib "shell32.dll" (ByVal hwnd As LongPtr, ByVal fAccept As Long)
#Else
  Private Declare Sub DragAcceptFiles Lib "shell32.dll" (ByVal hwnd As Long, ByVal fAccept As Long)
#End If

#If Win64 Then
  Private Declare PtrSafe Function DragQueryFile Lib "shell32.dll" Alias "DragQueryFileA" _
     (ByVal hDrop As LongPtr, ByVal UINT As Long, ByVal lpStr As String, ByVal ch As Long) As Long
#Else
  Private Declare Function DragQueryFile Lib "shell32.dll" Alias "DragQueryFileA" _
     (ByVal hDrop As Long, ByVal UINT As Long, ByVal lpStr As String, ByVal ch As Long) As Long
#End If

#If Win64 Then
  Private Declare PtrSafe Sub DragFinish Lib "shell32.dll" (ByVal hDrop As LongPtr)
#Else
  Private Declare Sub DragFinish Lib "shell32.dll" (ByVal hDrop As Long)
#End If

Private Const GWL_WNDPROC = -4
Private Const WM_DROPFILES = &H233


Dim DIC2 As Object

Dim W_ED1 As Long
Dim W_ED2 As Long

Dim AR_LR1() As Long
Dim AR_LR2() As Long
Dim AR_LSR() As Long
Dim AR_LK() As String
Dim AR_RK() As String
Dim AR_LK2() As String
Dim AR_RK2() As String
Dim AR_RKS() As Long

Dim SW_END As Boolean

Dim AR_1ST() As String
Dim AR_2ND() As String

Dim W_STC As Long
Dim W_EDC As Long
Dim SW_BL1EX As Boolean

Sub ST_SUB_CLS()
    
  If SW_DDSC = False Then
     ghWnd = FindWindow(vbNullString, UserForm1.Caption)
     Call DragAcceptFiles(ghWnd, True)
#If Win64 Then
     W_PREVWNDPROC = SetWindowLongPtr(ghWnd, GWL_WNDPROC, AddressOf WindowProc)
#Else
     W_PREVWNDPROC = SetWindowLong(ghWnd, GWL_WNDPROC, AddressOf WindowProc)
#End If
     SW_DDSC = True
  End If

End Sub

Sub ED_SUB_CLS()

#If Win64 Then
  Dim W_RET_SWL As LongPtr
#Else
  Dim W_RET_SWL As Long
#End If

  If SW_DDSC = True Then
#If Win64 Then
     W_RET_SWL = SetWindowLongPtr(ghWnd, GWL_WNDPROC, W_PREVWNDPROC)
#Else
     W_RET_SWL = SetWindowLong(ghWnd, GWL_WNDPROC, W_PREVWNDPROC)
#End If
     Call DragAcceptFiles(ghWnd, False)
     SW_DDSC = False
     ghWnd = 0
  End If

End Sub

#If Win64 Then
Function WindowProc(ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

  Dim I As Long
  Dim W_LEN As Long
  Dim W_FCNT As Long
  Dim AR_FILES() As String
  Dim BUF As String * 256

  Dim W_HIT As LongPtr
    
  Const WM_NCHITTEST = &H84
  Const HTBORDER = 18
  Const HTBOTTOMRIGHT = 17
  
  
  If uMsg = WM_NCHITTEST Then
     W_HIT = CallWindowProc(W_PREVWNDPROC, hwnd, uMsg, wParam, lParam)
     Select Case W_HIT
     Case HTBORDER, HTBOTTOMRIGHT
        Call ED_SUB_CLS
     Case Else
        WindowProc = W_HIT
     End Select
     Exit Function
  End If
  
  If uMsg = WM_DROPFILES Then
     W_FCNT = DragQueryFile(wParam, -1&, vbNullString, 0)
     ReDim AR_FILES(W_FCNT)
     For I = 1 To W_FCNT
        BUF = String(256, Chr(0))
        W_LEN = DragQueryFile(wParam, I - 1, BUF, 256)
        AR_FILES(I) = Left$(BUF, InStr(1, BUF, Chr(0)) - 1)
     Next
     If W_FCNT >= 2 Then
        UserForm1.TextBox37.Value = AR_FILES(1)
        UserForm1.TextBox38.Value = AR_FILES(2)
     Else
        If SW_ENGLISH = True Then
           W_RET = MsgBox("Set to 1st file.", vbInformation + vbOKCancel)
        Else
           W_RET = MsgBox("1|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           UserForm1.TextBox37.Value = AR_FILES(1)
        Else
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Set to 2nd file.", vbInformation + vbOKCancel)
           Else
              W_RET = MsgBox("2|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
           End If
           If W_RET = vbOK Then
              UserForm1.TextBox38.Value = AR_FILES(1)
           End If
        End If
     End If
     Call DragFinish(wParam)
  End If
    
  WindowProc = CallWindowProc(W_PREVWNDPROC, hwnd, uMsg, wParam, lParam)

End Function
#Else
Function WindowProc(ByVal hwnd As Long, ByVal uMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long

  Dim I As Long
  Dim W_LEN As Long
  Dim W_FCNT As Long
  Dim AR_FILES() As String
  Dim BUF As String * 256
    
  Dim W_HIT As Long
    
  Const WM_NCHITTEST = &H84
  Const HTBORDER = 18
  Const HTBOTTOMRIGHT = 17
  
  
  If uMsg = WM_NCHITTEST Then
     W_HIT = CallWindowProc(W_PREVWNDPROC, hwnd, uMsg, wParam, lParam)
     Select Case W_HIT
     Case HTBORDER, HTBOTTOMRIGHT
        Call ED_SUB_CLS
     Case Else
        WindowProc = W_HIT
     End Select
     Exit Function
  End If
    
  If uMsg = WM_DROPFILES Then
     W_FCNT = DragQueryFile(wParam, -1&, vbNullString, 0)
     ReDim AR_FILES(W_FCNT)
     For I = 1 To W_FCNT
        BUF = String(256, Chr(0))
        W_LEN = DragQueryFile(wParam, I - 1, BUF, 256)
        AR_FILES(I) = Left$(BUF, InStr(1, BUF, Chr(0)) - 1)
     Next
     If W_FCNT >= 2 Then
        UserForm1.TextBox37.Value = AR_FILES(1)
        UserForm1.TextBox38.Value = AR_FILES(2)
     Else
        If SW_ENGLISH = True Then
           W_RET = MsgBox("Set to 1st file.", vbInformation + vbOKCancel)
        Else
           W_RET = MsgBox("1|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           UserForm1.TextBox37.Value = AR_FILES(1)
        Else
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Set to 2nd file.", vbInformation + vbOKCancel)
           Else
              W_RET = MsgBox("2|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
           End If
           If W_RET = vbOK Then
              UserForm1.TextBox38.Value = AR_FILES(1)
           End If
        End If
     End If
     Call DragFinish(wParam)
  End If
    
  WindowProc = CallWindowProc(W_PREVWNDPROC, hwnd, uMsg, wParam, lParam)

End Function
#End If

Sub DIFF(ByVal W_1ST As String, ByVal W_2ND As String)
  
  Dim W_STR As String
  Dim SW_LOOP As Boolean
  
  Dim STS As Long
  Dim STE As Long
  
  Dim I As Long
  Dim W_CNT1P As Long
  Dim W_CNT1M As Long
  Dim W_CNT2P As Long
  Dim W_CNT2M As Long
  Dim SW_1ST As Boolean
  Dim SW_LEND As Boolean
  
  Dim AW_LSR() As Long
  Dim AW_LSR2() As Long
  Dim AW_LR1() As Long
  Dim AW_LR2() As Long
  Dim AW_LK2() As String
  Dim AW_RK2() As String
  
  Dim W_CNT01P As Long
  Dim W_CNT01M As Long
  Dim W_CNT02P As Long
  Dim W_CNT02M As Long
  
  Dim W_AJ As Long
  
  
  W_STC = CLng(UserForm1.TextBox39.Value)
  W_EDC = CLng(UserForm1.TextBox40.Value)
  
  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd||c42c|
  Call MAKE_DIC(W_1ST, W_2ND)
  
  '|fffd|s|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  STS = 0
  STE = 0
  Call DTCT_DIFF(STS, STE)
  
  SW_END = False
  SW_BL1EX = False

  If UBound(AR_LSR) > 20000 Then
     SW_1ST = False
     SW_LEND = True
     GoTo L_SEL
  End If
  
  ReDim AW_LSR(UBound(AR_LSR))
  ReDim AW_LSR2(UBound(AR_LSR))
  ReDim AW_LR1(UBound(AR_LR1))
  ReDim AW_LR2(UBound(AR_LR2))
  ReDim AW_LK2(UBound(AR_LK2))
  ReDim AW_RK2(UBound(AR_RK2))
  
  For I = 1 To UBound(AR_LSR)
     AW_LSR(I) = AR_LSR(I)
     AW_LR1(I) = AR_LR1(I)
     AW_LR2(I) = AR_LR2(I)
     AW_LK2(I) = AR_LK2(I)
  Next I
  For I = 1 To UBound(AR_RK2)
     AW_RK2(I) = AR_RK2(I)
  Next I
  
  '80%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd||fffd|0|fffd|s|fffd|j
  Call DTCT_PSAME(80, True, 0)
  For I = 1 To UBound(AR_LSR)
     If AR_LSR(I) > 0 Then
        W_CNT01P = W_CNT01P + 1
     ElseIf AR_LSR(I) < 0 Then
        W_CNT01M = W_CNT01M + 1
     End If
     AW_LSR2(I) = AR_LSR(I)
     AR_LSR(I) = AW_LSR(I)
  Next I
  
  '80%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd||fffd|200|fffd|s|fffd|j
  Call DTCT_PSAME(80, True, 200, UBound(AR_LSR) - W_CNT01P - W_CNT01M)
  For I = 1 To UBound(AR_LSR)
     If AR_LSR(I) > 0 Then
        W_CNT02P = W_CNT02P + 1
     ElseIf AR_LSR(I) < 0 Then
        W_CNT02M = W_CNT02M + 1
     End If
  Next I
  
  If W_CNT01P + W_CNT01M <= W_CNT02P + W_CNT02M Then
     W_AJ = 200
  Else
     W_AJ = 0
  End If
  
  SW_1ST = True

L_SEL:
  If SW_1ST = True Then
     SW_END = False
     
     If (SW_LEND = False And W_AJ = 0) Then
        For I = 1 To UBound(AR_LSR)
           AR_LSR(I) = AW_LSR2(I)
        Next I
     ElseIf SW_LEND = True Then
        For I = 1 To UBound(AR_LSR)
           AR_LSR(I) = AW_LSR(I)
        Next I
     
        '80%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
        If SW_END = False Then
           Call DTCT_PSAME(80, True, W_AJ)
           For I = 1 To UBound(AR_LSR)
              If AR_LSR(I) <> 0 Then
                 AR_LK2(I) = " "
              End If
           Next I
        End If
     End If
  
     W_STR = Join$(AR_LK2, "")
     If W_STR = String$(Len(W_STR), " ") Then
        SW_END = True
     End If
     
     If SW_LEND = False Then
        For I = 1 To UBound(AR_LSR)
           If AR_LSR(I) > 0 Then
              W_CNT1P = W_CNT1P + 1
           ElseIf AR_LSR(I) < 0 Then
              W_CNT1M = W_CNT1M + 1
           End If
        Next I
        SW_1ST = False
     
        For I = 1 To UBound(AR_LSR)
           AR_LSR(I) = AW_LSR(I)
           AR_LR1(I) = AW_LR1(I)
           AR_LR2(I) = AW_LR2(I)
           AR_LK2(I) = AW_LK2(I)
        Next I
        For I = 1 To UBound(AR_RK2)
           AR_RK2(I) = AW_RK2(I)
        Next I
        GoTo L_SEL
     End If
  Else
     SW_END = False
     
     '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||20a|O|fffd|j
     If STS = 0 And _
        STE = 0 Then
     Else
        SW_LOOP = DTCT_SAME(False, STS, STE)
        If SW_SDCAN = True Then
           SW_SDCAN = False
           Application.ScreenUpdating = True
           Exit Sub
        End If
     End If
  
     W_STR = Join$(AR_LK2, "")
     If W_STR = String$(Len(W_STR), " ") Then
        SW_END = True
     Else
        W_STR = Join$(AR_RK2, "")
        If W_STR = String$(Len(W_STR), ".") Then
           SW_END = True
        End If
     End If
     '|fffd||fffd||70d|s|fffd||fffd||fffd|o
     If SW_END = False Then
        Call DTCT_ASAME
     End If
  
     If SW_LEND = False Then
        For I = 1 To UBound(AR_LSR)
           If AR_LSR(I) > 0 Then
              W_CNT2P = W_CNT2P + 1
           ElseIf AR_LSR(I) < 0 Then
              W_CNT2M = W_CNT2M + 1
           End If
        Next I
     
        If W_CNT1P + W_CNT1M <= W_CNT2P + W_CNT2M Then
        Else
           SW_1ST = True
           SW_LEND = True
        
           For I = 1 To UBound(AR_LSR)
              AR_LSR(I) = AW_LSR(I)
              AR_LR1(I) = AW_LR1(I)
              AR_LR2(I) = AW_LR2(I)
              AR_LK2(I) = AW_LK2(I)
           Next I
           For I = 1 To UBound(AR_RK2)
              AR_RK2(I) = AW_RK2(I)
           Next I
           GoTo L_SEL
        End If
     End If
  End If
  
  '90%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(90, False)
  End If
  
  '75%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(75, False)
  End If
  
  '|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd||fffd|v|fffd||fffd||fffd|o
  If SW_END = False Then
     If SW_LOOP = False Then
        If SW_BL1EX = True Then
           Call DTCT_BSAME
        End If
        SW_END = True
     End If
  End If
  
  SW_END = False
  
  '50%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(50, False)
  End If
  
  '25%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(25, False)
  End If
  
  '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd|j
  If SW_END = False Then
     If SW_BL1EX = True Then
        Call DTCT_BSAME
     End If
  End If

  '|fffd||fffd||fffd||283|Z|fffd|b|fffd|g
  Call SET_RES(W_1ST, W_2ND)

  Set DIC2 = Nothing

  Application.ScreenUpdating = True

End Sub

Private Sub MAKE_DIC(ByVal W_1ST As String, ByVal W_2ND As String)

  Dim DIC1 As Object
  Dim D1 As Variant
  
  Dim R As Long
  Dim D As Long

  Dim W_STR As String
  Dim W_LN As Long

  Dim ADS As Object
  Dim W_LINE As String

    
  R = 0
  Call STREAM_OPEN(ADS, W_1ST)
  Do While Not ADS.EOS
     Call STREAM_READ(ADS, W_LINE)
     R = R + 1
     ReDim Preserve AR_1ST(R)
     AR_1ST(R) = W_LINE
  Loop
  Call STREAM_CLOSE(ADS)
  W_ED1 = R
  
  R = 0
  Call STREAM_OPEN(ADS, W_2ND)
  Do While Not ADS.EOS
     Call STREAM_READ(ADS, W_LINE)
     R = R + 1
     ReDim Preserve AR_2ND(R)
     AR_2ND(R) = W_LINE
  Loop
  Call STREAM_CLOSE(ADS)
  W_ED2 = R
  
  Set DIC1 = CreateObject("Scripting.Dictionary")
  D = 0
  
  W_ED1 = W_ED1 + 1
  
  ReDim AR_LK(W_ED1)
  ReDim AR_LK2(W_ED1)
  ReDim AR_LSR(W_ED1)
  
  For R = 1 To W_ED1
     If R = W_ED1 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_1ST(R)
     ElseIf W_STC = 0 Then
        If Len(AR_1ST(R)) >= W_EDC Then
           W_STR = Left$(AR_1ST(R), W_EDC)
        Else
           W_STR = AR_1ST(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_1ST(R)) + 1 Then
           W_STR = Mid$(AR_1ST(R), W_STC, Len(AR_1ST(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_1ST(R)) + 1 And _
           W_EDC < Len(AR_1ST(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_1ST(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If UserForm1.CheckBox229.Value = True Then
        If Right$(W_STR, 1) = Chr$(2) Then
           W_STR = Left$(W_STR, Len(W_STR) - 1)
           W_STR = Trim$(W_STR)
           W_STR = W_STR & Chr$(2)
        Else
           W_STR = Trim$(W_STR)
        End If
     End If
     
     If UserForm1.CheckBox200.Value = True Then
        If Len(W_STR) > 1 Then
           If W_STR = String$(Len(W_STR) - 1, " ") & Chr$(2) Then
              W_STR = " " & Chr$(2)
           End If
        End If
     End If
     
     If R = W_ED1 Then
        D = D + 1
        DIC1.Add Chr$(1), D
        AR_LK(R) = D
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_LK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_LK(R) = D
     End If
     AR_LK2(R) = AR_LK(R)
  Next R

  W_ED2 = W_ED2 + 1
  
  ReDim AR_RK(W_ED2)
  ReDim AR_RK2(W_ED2)
  ReDim AR_RKS(W_ED2)
  
  ReDim AR_LR1(W_ED1)
  ReDim AR_LR2(W_ED1)
  For R = 1 To W_ED1
     AR_LR1(R) = 1
     AR_LR2(R) = W_ED2
  Next R
  
  W_LN = 1
  
  For R = 1 To W_ED2
     If R = W_ED2 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_2ND(R)
     ElseIf W_STC = 0 Then
        If Len(AR_2ND(R)) >= W_EDC Then
           W_STR = Left$(AR_2ND(R), W_EDC)
        Else
           W_STR = AR_2ND(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_2ND(R)) + 1 Then
           W_STR = Mid$(AR_2ND(R), W_STC, Len(AR_2ND(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_2ND(R)) + 1 And _
           W_EDC < Len(AR_2ND(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_2ND(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If UserForm1.CheckBox229.Value = True Then
        If Right$(W_STR, 1) = Chr$(2) Then
           W_STR = Left$(W_STR, Len(W_STR) - 1)
           W_STR = Trim$(W_STR)
           W_STR = W_STR & Chr$(2)
        Else
           W_STR = Trim$(W_STR)
        End If
     End If
     
     If UserForm1.CheckBox200.Value = True Then
        If Len(W_STR) > 1 Then
           If W_STR = String$(Len(W_STR) - 1, " ") & Chr$(2) Then
              W_STR = " " & Chr$(2)
           End If
        End If
     End If
     
     If R = W_ED2 Then
        AR_RK(R) = DIC1(Chr$(1))
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_RK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_RK(R) = D
     End If
     AR_RKS(R) = W_LN
     AR_RK2(R) = AR_RK(R)
     W_LN = W_LN + Len(AR_RK(R)) + 1
  Next R
  
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  For Each D1 In DIC1
     DIC2.Add CStr(DIC1(D1)), D1
  Next
  
  Set DIC1 = Nothing

  AR_LK2(W_ED1) = " "
  AR_RK2(W_ED2) = "."
  AR_LSR(W_ED1) = W_ED2

End Sub

Private Sub STREAM_OPEN(ADS As Object, ByVal W_PATH As String)

  Const adCRLF = -1
  Const adLF = 10
  Const adCR = 13

  Set ADS = CreateObject("ADODB.Stream")
  ADS.Open
  If UserForm1.OptionButton29.Value = True Then
     ADS.Charset = "Shift_JIS"
  Else
     ADS.Charset = "UTF-8"
  End If
  If UserForm1.OptionButton31.Value = True Then
     ADS.LineSeparator = adCRLF
  ElseIf UserForm1.OptionButton32.Value = True Then
     ADS.LineSeparator = adCR
  Else
     ADS.LineSeparator = adLF
  End If
  ADS.LoadFromFile W_PATH
    
End Sub

Private Sub STREAM_READ(ADS As Object, W_LINE As String)

  Const adReadLine = -2
   
  W_LINE = ADS.ReadText(adReadLine)
  If InStr(W_LINE, vbTab) > 0 Then
     W_LINE = Replace(W_LINE, vbTab, String$(CLng(UserForm1.TextBox41.Value), " "))
  End If
  W_LINE = W_LINE & Chr$(2)

End Sub

Private Sub STREAM_CLOSE(ADS As Object)
   
  ADS.Close
  Set ADS = Nothing
  
End Sub

Private Sub DTCT_DIFF(STS As Long, STE As Long)

  Dim W_STRRK As String
  Dim I As Long


  W_STRRK = Join$(AR_RK2, vbTab)
  
  For I = 1 To UBound(AR_LK2)
     If InStr(W_STRRK, AR_LK2(I)) = 0 Then
        AR_LK2(I) = ","
     Else
        If STS = 0 Then
           STS = I
        End If
        STE = I
     End If
  Next I

End Sub

Private Function DTCT_SAME(ByVal SW_L1 As Boolean, ByVal STS As Long, ByVal STE As Long) As Boolean

  Dim W_STRLK As String
  Dim W_STRRK As String
  
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim L As Long

  Dim SI As Long
  Dim EI As Long
  
  Dim W_ST1 As Long
  Dim W_ST2 As Long
  Dim W_LN As Long
  Dim W_LN2 As Long
  
  Dim W_MAXLN As Long
  Dim W_MAXST1 As Long
  Dim W_MAXST2 As Long
  
  Dim W_SRCH As String
  Dim W_SRCH2 As String
  Dim SRCHJ As Long
  Dim SRCHJ2 As Long
  
  Dim WJB As Long
  Dim WJ As Long
  Dim WJ2 As Long
  Dim AR_WK As Variant
  Dim W_STR As String

  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim W_IND As Long
  Dim W_IND1 As Long
  Dim W_MAXSTR1 As String
  Dim W_MAXI As Long
  Dim W_MAXSRCHJ As Long
  Dim W_STRLKBK As String

  Dim RE As Object
  Dim MATCHES As Object

  Dim SW_REV As Boolean
  Dim W_LKB As String
  Dim W_RKB As String
  Dim W_STRLK2 As String

  Dim W_STN As Long
  Dim W_STNBK As Long
  Dim W_STNBK0 As Long
  Dim W_MAXLN2 As Long
  Dim SW_END As Boolean


  DTCT_SAME = False

  If STS = 1 And _
     STE = UBound(AR_LK2) Then
     W_STRLK = vbTab & Join$(AR_LK2, vbTab) & vbTab
  Else
     W_STRLK = vbTab
     For I = STS To STE
        W_STRLK = W_STRLK & AR_LK2(I) & vbTab
     Next I
  End If
  
  W_STRLK2 = W_STRLK
  W_STRRK = vbTab & Join$(AR_RK2, vbTab) & vbTab
  
  Set RE = CreateObject("VBScript.RegExp")
  RE.Pattern = "\t\d"
  RE.Global = False
  
  SI = 1
  EI = InStrRev(Left$(W_STRLK, Len(W_STRLK) - 1), vbTab)
  
  If SI > EI Then
     Exit Function
  End If
  
  W_MAXLN = 0
  
  For I = SI To EI
     W_SRCH2 = ""
     
     If Mid$(W_STRLK, I, 1) <> vbTab Then
        I = InStr(I, W_STRLK, vbTab) - 1
        GoTo L_NEXTI
     End If
     
     W_STR = Left$(W_STRLK, I)
     AR_WK = Split(W_STR, vbTab)
     W_ST1 = UBound(AR_WK)
     
     WJ = InStr(I + 1, W_STRLK, vbTab)
     If WJ > 0 Then
        WJ2 = InStr(WJ + 1, W_STRLK, vbTab)
        If WJ2 > 0 Then
           WJ = WJ2
        End If
     End If
     
     W_SRCH = Mid$(W_STRLK, I, WJ - I + 1)
     If W_SRCH <> "" Then
        For K = I To I + Len(W_SRCH) - 1
           If Mid$(W_STRLK, K, 1) <> vbTab Then
              Mid$(W_STRLK, K, 1) = ","
           End If
        Next K
     End If

     If InStr(W_SRCH, " ") > 0 Then
        GoTo L_NEXTI
     End If

     W_STN = AR_RKS(AR_LR1(STS + W_ST1 - 1))

     SW_END = False
     W_MAXLN2 = 0
     W_STNBK = 0

L_ADJ3:
     SRCHJ = InStr(W_STN, W_STRRK, W_SRCH)
     If SRCHJ = 0 Then
        If W_MAXLN2 > 0 Then
           W_STN = W_STNBK
           SW_END = True
           If W_STNBK = W_STNBK0 Then
              GoTo L_ADJ1
           Else
              GoTo L_ADJ3
           End If
        Else
           AR_LK2(STS + W_ST1 - 1) = String$(Len(AR_LK2(STS + W_ST1 - 1)), ",")
           GoTo L_NEXTI
        End If
     End If
        
     W_STR = Left$(W_STRRK, SRCHJ)
     AR_WK = Split(W_STR, vbTab)
     W_ST2 = UBound(AR_WK)
        
     W_SRCH2 = W_SRCH
     SRCHJ2 = SRCHJ
     W_LN = 0
     WJ = I
     WJ = InStr(WJ + 1, W_STRLK, vbTab)
     If UBound(Split(W_SRCH, vbTab)) > 2 Then
        WJ = InStr(WJ + 1, W_STRLK, vbTab)
     End If
     
     W_STR = W_SRCH
     
     Do While SRCHJ2 = SRCHJ
        SRCHJ2 = InStr(SRCHJ2, W_STRRK, W_STR)
        If SRCHJ2 = SRCHJ Then
           If W_ST2 >= AR_LR1(STS + W_ST1 - 1) And _
              W_ST2 + W_LN + W_LN2 - 1 <= AR_LR2(STS + W_ST1 - 1) Then
              W_SRCH2 = W_STR
              W_LN = W_LN + 1
           End If
           WJB = WJ
           WJ = InStr(WJB + 1, W_STRLK, vbTab)
           If WJ > 0 Then
              If Mid$(W_STRLK, WJB + 1, 1) = "," Then
                 Exit Do
              End If
              W_STR = W_SRCH2 & Mid$(W_STRLK, WJB + 1, WJ - WJB)
           Else
              Exit Do
           End If
                      
           If SW_L1 = True Then
              W_STR = vbCrLf
           End If
        End If
     Loop
        
L_ADJ1:
     If SW_L1 = False Then
        W_STR1 = Right$(W_STR, Len(W_STR) - Len(W_SRCH2) + 1)
        W_STNBK0 = W_STN
        W_STN = SRCHJ + Len(W_SRCH2) - 1
        If SW_END = False Then
           If Len(W_SRCH2) > W_MAXLN2 Then
              W_MAXLN2 = Len(W_SRCH2)
              W_STNBK = W_STNBK0
           End If
           GoTo L_ADJ3
        Else
           W_STNBK = 0
        End If
     End If

     If W_LN <= W_MAXLN Then
        GoTo L_NEXTI
     End If

     If W_LN > 1 Then
        W_STR2 = ""
        W_STR3 = ""

        WJB = SRCHJ + Len(W_SRCH2) - 1
     ElseIf W_LN = 1 Then
        '|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd||302||748||fffd|v|fffd|`|fffd|F|fffd|b|fffd|N
        W_STR = DIC2(AR_LK(STS + W_ST1 - 1))
        If W_STR = String$(Len(W_STR), " ") Then
           SW_BL1EX = True
           AR_LK2(STS + W_ST1 - 1) = String$(Len(AR_LK2(STS + W_ST1 - 1)), ",")
           GoTo L_NEXTI
        Else
           GoTo L_NEXTI
        End If
     End If
        
     If W_MAXLN < W_LN Then
        W_MAXLN = W_LN
        W_MAXST1 = W_ST1
        W_MAXST2 = W_ST2
     End If

     If SW_L1 = True Then
        Exit For
     End If

L_NEXTI:
     
     If W_MAXLN > 0 Then
        If STE + 1 - W_ST1 - W_LN <= W_MAXLN Then
           Exit For
        End If
     End If
     
     If W_SRCH2 <> "" Then
        If I > 0 Then
           For K = I To I + Len(W_SRCH2) - 1
              If Mid$(W_STRLK, K, 1) <> vbTab Then
                 Mid$(W_STRLK, K, 1) = ","
              End If
           Next K
        End If
     End If

     If RE.Test(W_STRLK) = True Then
        Set MATCHES = RE.Execute(W_STRLK)
        WJ = MATCHES.Item(0).FirstIndex
        If I < WJ Then
           I = WJ
        End If
        Set MATCHES = Nothing
     Else
        Exit For
     End If
  Next I

  If W_MAXLN > 0 Then
     '|fffd||fffd|v|fffd|O
     For K = STS + W_MAXST1 - 2 To STS Step -1
        If AR_LR2(K) > 0 Then
           AR_LR2(K) = W_MAXST2 - 1
        Else
           Exit For
        End If
     Next K
                 
     '|fffd||fffd|v
     L = 0
     For K = STS + W_MAXST1 - 1 To STS + W_MAXST1 + W_MAXLN - 2
        L = L + 1
        AR_LSR(K) = W_MAXST2 + L - 1
        AR_LR1(K) = 0
        AR_LR2(K) = 0
        AR_LK2(K) = String$(Len(AR_LK2(K)), " ")
        AR_RK2(W_MAXST2 + L - 1) = String$(Len(AR_RK2(W_MAXST2 + L - 1)), ".")
     Next K
                       
     '|fffd||fffd|v|fffd||fffd|
     For K = STS + W_MAXST1 + W_MAXLN - 1 To STE
        If AR_LR1(K) > 0 Then
           AR_LR1(K) = W_MAXST2 + W_MAXLN
        Else
           Exit For
        End If
     Next K
  
     If STS <= STS + W_MAXST1 - 2 Then
        For I = STS To STS + W_MAXST1 - 2
           If AR_LK2(I) = String$(Len(AR_LK2(I)), " ") Or _
              AR_LK2(I) = String$(Len(AR_LK2(I)), ",") Then
           ElseIf AR_LK2(I + 1) = String$(Len(AR_LK2(I + 1)), " ") Or _
              AR_LK2(I + 1) = String$(Len(AR_LK2(I + 1)), ",") Then
           Else
              If (STS + W_MAXST1 - 2) - I > 1 Then
                 Call DTCT_SAME(SW_L1, I, STS + W_MAXST1 - 2)
                 Exit For
              End If
           End If
        Next I
     End If

     If STS + W_MAXST1 + W_MAXLN - 1 <= STE Then
        For I = STE To STS + W_MAXST1 + W_MAXLN - 1 Step -1
           If AR_LK2(I) = String$(Len(AR_LK2(I)), " ") Or _
              AR_LK2(I) = String$(Len(AR_LK2(I)), ",") Then
           ElseIf AR_LK2(I - 1) = String$(Len(AR_LK2(I - 1)), " ") Or _
              AR_LK2(I - 1) = String$(Len(AR_LK2(I - 1)), ",") Then
           Else
              If I - (STS + W_MAXST1 + W_MAXLN - 1) > 1 Then
                 Call DTCT_SAME(SW_L1, STS + W_MAXST1 + W_MAXLN - 1, I)
                 Exit For
              End If
           End If
        Next I
     End If
  
     DTCT_SAME = True
  End If

  Set RE = Nothing

  DoEvents

End Function

Private Sub DTCT_ASAME()

  Dim I As Long
  Dim J As Long

  Dim W_ST As Long
  Dim W_ED As Long
  Dim W_LK As String
  Dim W_RK As String

  Dim SW_END2 As Boolean
  Dim WJ As Long
  
  Dim W_LK2 As String
  Dim W_RK2 As String
  
  Dim W_ED2 As Long
  
  
  WJ = 0
  W_ST = 0
  SW_END2 = True
  
  For I = 1 To W_ED1
     If W_ST > 0 And _
        AR_LSR(I) = 0 Then
     ElseIf W_ST <> 0 And _
        AR_LSR(I) > 0 Then
        W_ST = 0
     ElseIf I = 1 Then
        If AR_LSR(I) = 0 Then
           W_ST = 1
        End If
     ElseIf AR_LSR(I - 1) <> 0 And _
            AR_LSR(I) = 0 Then
        W_ST = AR_LSR(I - 1)
        If W_ST < 0 Then
           W_ST = (-1) * W_ST
        End If
        W_ST = W_ST + 1
     End If
   
     If W_ST > 0 Then
        If WJ >= I Then
        Else
           WJ = 0
           W_ED = 0
        
           For J = I To W_ED1
              If J = W_ED1 Then
                 WJ = J
                 W_ED = W_ED2 - 1
              ElseIf AR_LSR(J) = 0 And _
                     AR_LSR(J + 1) <> 0 Then
                 WJ = J
                 W_ED = AR_LSR(J + 1)
                 If W_ED < 0 Then
                    W_ED = (-1) * W_ED
                 End If
                 W_ED = W_ED - 1
                 Exit For
              End If
           Next J
        End If
     End If
  
     If W_ST > 0 And _
        W_ED > 0 And _
        W_ST <= W_ED Then
        SW_END2 = False
        W_LK = Trim$(DIC2(AR_LK(I)))
        W_LK2 = W_LK
        Do While InStr(W_LK2, "  ") > 0
           W_LK2 = Replace(W_LK2, "  ", " ")
        Loop
        
        If W_LK <> "" Then
           For J = W_ST To W_ED
              W_RK = Trim$(DIC2(AR_RK(J)))
              If W_RK <> "" Then
                 If InStr(W_RK, W_LK) > 0 Then
                    If Len(W_LK) / Len(W_RK) >= 0.25 And _
                       Len(W_LK) >= 2 Then
                       If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                          AR_LSR(I) = J
                       Else
                          AR_LSR(I) = (-1) * J
                       End If
                       W_ST = 0
                       Exit For
                    End If
                 End If
                 If InStr(W_LK, W_RK) > 0 Then
                    If Len(W_RK) / Len(W_LK) >= 0.25 And _
                       Len(W_RK) >= 2 Then
                       If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                          AR_LSR(I) = J
                       Else
                          AR_LSR(I) = (-1) * J
                       End If
                       W_ST = 0
                       Exit For
                    End If
                 End If
              
                 W_RK2 = W_RK
                 Do While InStr(W_RK2, "  ") > 0
                    W_RK2 = Replace(W_RK2, "  ", " ")
                 Loop
                 If InStr(W_RK2, W_LK2) > 0 Then
                    If Len(W_LK2) / Len(W_RK2) >= 0.25 And _
                       Len(W_LK2) >= 2 Then
                       If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                          AR_LSR(I) = J
                       Else
                          AR_LSR(I) = (-1) * J
                       End If
                       W_ST = 0
                       Exit For
                    End If
                 End If
                 If InStr(W_LK2, W_RK2) > 0 Then
                    If Len(W_RK2) / Len(W_LK2) >= 0.25 And _
                       Len(W_RK2) >= 2 Then
                       If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                          AR_LSR(I) = J
                       Else
                          AR_LSR(I) = (-1) * J
                       End If
                       W_ST = 0
                       Exit For
                    End If
                 End If
              End If
           Next J
        Else
           For J = W_ST To W_ED
              W_RK = Trim$(DIC2(AR_RK(J)))
              If W_RK = "" Then
                 If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                    AR_LSR(I) = J
                 Else
                    AR_LSR(I) = (-1) * J
                 End If
                 W_ST = 0
                 Exit For
              End If
           Next J
        End If
     End If
  Next I

  If SW_END2 = True Then
     SW_END = True
  End If

End Sub

Private Sub DTCT_PSAME(ByVal W_RATE As Long, ByVal SW_BEF As Boolean, Optional ByVal W_AJ As Long, Optional ByVal W_LMT As Long)

  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim L As Long

  Dim W_ST As Long
  Dim W_ED As Long
  Dim W_LK As String
  Dim W_RK As String
  Dim W_MIN As Long
  Dim W_SRCH As String
  Dim W_MIN2 As Long
  
  Dim SW_END2 As Boolean
  Dim WJ As Long

  Dim W_LK3 As String
  Dim W_MIN3 As Long
  Dim W_RK2 As String
  Dim W_MIN4 As Long
  
  Dim W_ST3 As Long
  Dim W_ED3 As Long
  
  Dim W_ED4 As Long
  Dim W_MINW As Long
  
  Dim W_ZCNT As Long
  
  
  WJ = 0
  W_ST = 0
  SW_END2 = True
  
  For I = 1 To W_ED1
     If W_ST > 0 And _
        AR_LSR(I) = 0 Then
     ElseIf W_ST > 0 And _
        AR_LSR(I) <> 0 Then
        W_ST = 0
     ElseIf I = 1 Then
        If AR_LSR(I) = 0 Then
           W_ST = 1
        End If
     ElseIf AR_LSR(I - 1) <> 0 And _
            AR_LSR(I) = 0 Then
        W_ST = AR_LSR(I - 1)
        If W_ST < 0 Then
           W_ST = (-1) * W_ST
        End If
        W_ST = W_ST + 1
     End If
   
     If W_ST > 0 Then
        If WJ >= I Then
        Else
           WJ = 0
           W_ED = 0
        
           For J = I To W_ED1
              If J = W_ED1 Then
                 WJ = J
                 W_ED = W_ED2 - 1
              ElseIf AR_LSR(J) = 0 And _
                     AR_LSR(J + 1) <> 0 Then
                 WJ = J
                 W_ED = AR_LSR(J + 1)
                 If W_ED < 0 Then
                    W_ED = (-1) * W_ED
                 End If
                 W_ED = W_ED - 1
                 Exit For
              End If
           Next J
        End If
     End If
  
     If AR_LSR(I) <> 0 Then
        GoTo L_NEXT
     End If
     
     If W_ST > 0 And _
        W_ED > 0 And _
        W_ST <= W_ED Then
        SW_END2 = False
        W_LK = DIC2(AR_LK(I))
        W_LK3 = Trim$(W_LK)
        
        If (W_LK <> "" And _
            W_LK <> " ") Or _
           W_LK3 <> "" Then
           W_MIN = Int(Len(W_LK) * (W_RATE / 100))
           If W_MIN < Len(W_LK) * (W_RATE / 100) Then
              W_MIN = W_MIN + 1
           End If
           W_MIN3 = Int(Len(W_LK3) * (W_RATE / 100))
           If W_MIN3 < Len(W_LK3) * (W_RATE / 100) Then
              W_MIN3 = W_MIN3 + 1
           End If

           W_ST3 = W_ST
L_LPS1:
           If SW_BEF = True Then
              If W_ED4 > 0 And _
                 W_ED4 < W_ED Then
                 W_ED3 = W_ED4
                 W_ED4 = 0
              Else
                 W_ED3 = W_ST
              End If
           Else
              W_ED3 = W_ED
           End If
           
           For J = W_ST To W_ED3
              W_RK = DIC2(AR_RK(J))
              W_RK2 = Trim$(W_RK)
              W_MIN2 = Int(Len(W_RK) * (W_RATE / 100))
              If W_MIN2 < Len(W_RK) * (W_RATE / 100) Then
                 W_MIN2 = W_MIN2 + 1
              End If
              W_MIN4 = Int(Len(W_RK2) * (W_RATE / 100))
              If W_MIN4 < Len(W_RK2) * (W_RATE / 100) Then
                 W_MIN4 = W_MIN4 + 1
              End If

              If Len(W_LK) < Len(W_RK) Then
                 W_MINW = W_MIN2
              Else
                 W_MINW = W_MIN
              End If
                 
              If W_RK <> "" And _
                 W_RK <> " " Then
                 For K = Len(W_LK) To W_MINW Step -1
                    For L = 1 To Len(W_LK) - W_MINW + 1
                       If L + K > Len(W_LK) + 1 Then
                          Exit For
                       Else
                          If W_RATE >= 50 Then
                             W_SRCH = Mid$(W_LK, L, K)
                          Else
                             W_SRCH = Trim$(Mid$(W_LK, L, K))
                          End If
                          If W_SRCH <> "" And _
                             Len(W_SRCH) >= W_MINW Then
                             If InStr(W_RK, W_SRCH) > 0 Then
                                If Len(W_LK) < Len(W_RK) Then
                                   If Len(W_SRCH) >= W_MIN2 Then
                                      AR_LSR(I) = (-1) * J
                                      W_ST = 0
                                      Exit For
                                   End If
                                Else
                                   If Len(W_SRCH) >= W_MIN Then
                                      If W_LK = W_RK Then
                                         AR_LSR(I) = J
                                      Else
                                         AR_LSR(I) = (-1) * J
                                      End If
                                      W_ST = 0
                                      Exit For
                                   End If
                                End If
                             End If
                          End If
                       End If
                    Next L
                    If AR_LSR(I) <> 0 Then
                       Exit For
                    End If
                 Next K
                 If AR_LSR(I) <> 0 Then
                    Exit For
                 End If
              End If
           
              If Len(W_LK3) < Len(W_RK2) Then
                 W_MINW = W_MIN4
              Else
                 W_MINW = W_MIN3
              End If
                 
              If W_RK2 <> "" Then
                 For K = Len(W_LK3) To W_MINW Step -1
                    For L = 1 To Len(W_LK3) - W_MINW + 1
                       If L + K > Len(W_LK3) + 1 Then
                          Exit For
                       Else
                          If W_RATE >= 50 Then
                             W_SRCH = Mid$(W_LK3, L, K)
                          Else
                             W_SRCH = Trim$(Mid$(W_LK3, L, K))
                          End If
                          If W_SRCH <> "" And _
                             Len(W_SRCH) >= W_MINW Then
                             If InStr(W_RK2, W_SRCH) > 0 Then
                                If Len(W_LK3) < Len(W_RK2) Then
                                   If Len(W_SRCH) >= W_MIN4 Then
                                      AR_LSR(I) = (-1) * J
                                      W_ST = 0
                                      Exit For
                                   End If
                                Else
                                   If Len(W_SRCH) >= W_MIN3 Then
                                      If W_LK = W_RK Then
                                         AR_LSR(I) = J
                                      Else
                                         AR_LSR(I) = (-1) * J
                                      End If
                                      W_ST = 0
                                      Exit For
                                   End If
                                End If
                             End If
                          End If
                       End If
                    Next L
                    If AR_LSR(I) <> 0 Then
                       Exit For
                    End If
                 Next K
                 If AR_LSR(I) <> 0 Then
                    Exit For
                 End If
              End If
           Next J
        
           If SW_BEF = True Then
              If AR_LSR(I) = 0 Then
                 If W_ST < W_ED And _
                    W_ST < W_ST3 + W_AJ Then
                    W_ST = W_ST + 1
                    GoTo L_LPS1
                 Else
                    W_ED4 = W_ED3 + 1
                 End If
              End If
           End If
        Else
           W_ST3 = W_ST
L_LPS2:
           If SW_BEF = True Then
              If W_ED4 > 0 And _
                 W_ED4 < W_ED Then
                 W_ED3 = W_ED4
                 W_ED4 = 0
              Else
                 W_ED3 = W_ST
              End If
           Else
              W_ED3 = W_ED
           End If
           
           For J = W_ST To W_ED3
              W_RK = DIC2(AR_RK(J))
              W_RK2 = Trim$(W_RK)
              If W_RK2 = "" Then
                 If DIC2(AR_LK(I)) = DIC2(AR_RK(J)) Then
                    AR_LSR(I) = J
                 Else
                    AR_LSR(I) = (-1) * J
                 End If
                 W_ST = 0
                 Exit For
              End If
           Next J
        
           If SW_BEF = True Then
              If AR_LSR(I) = 0 Then
                 If W_ST < W_ED And _
                    W_ST < W_ST3 + W_AJ Then
                    W_ST = W_ST + 1
                    GoTo L_LPS2
                 Else
                    W_ED4 = W_ED3 + 1
                 End If
              End If
           End If
        End If
     End If
     
L_NEXT:
     If W_LMT > 0 Then
        If AR_LSR(I) = 0 Then
           W_ZCNT = W_ZCNT + 1
           If W_ZCNT > W_LMT Then
              Exit Sub
           End If
        End If
     End If
     
     DoEvents
     If SW_SDCAN = True Then
        Exit Sub
     End If
  Next I

  If SW_END2 = True Then
     SW_END = True
  End If

End Sub

Private Sub DTCT_BSAME()

  Dim I As Long
  Dim J As Long

  Dim W_ST As Long
  Dim W_ED As Long
  Dim W_LK As String
  Dim W_RK As String

  Dim SW_END2 As Boolean
  Dim WJ As Long
  
  
  WJ = 0
  W_ST = 0
  SW_END2 = True
  
  For I = 1 To W_ED1
     If W_ST > 0 And _
        AR_LSR(I) = 0 Then
     ElseIf W_ST > 0 And _
        AR_LSR(I) <> 0 Then
        W_ST = 0
     ElseIf I = 1 Then
        If AR_LSR(I) = 0 Then
           W_ST = 1
        End If
     ElseIf AR_LSR(I - 1) <> 0 And _
            AR_LSR(I) = 0 Then
        W_ST = AR_LSR(I - 1)
        If W_ST < 0 Then
           W_ST = (-1) * W_ST
        End If
        W_ST = W_ST + 1
     End If
   
     If W_ST > 0 Then
        If WJ >= I Then
        Else
           WJ = 0
           W_ED = 0
        
           For J = I To W_ED1
              If J = W_ED1 Then
                 WJ = J
                 W_ED = W_ED2 - 1
              ElseIf AR_LSR(J) = 0 And _
                     AR_LSR(J + 1) <> 0 Then
                 WJ = J
                 W_ED = AR_LSR(J + 1)
                 If W_ED < 0 Then
                    W_ED = (-1) * W_ED
                 End If
                 W_ED = W_ED - 1
                 Exit For
              End If
           Next J
        End If
     End If
  
     If W_ST > 0 And _
        W_ED > 0 And _
        W_ST <= W_ED Then
        SW_END2 = False
        W_LK = DIC2(AR_LK(I))
        If W_LK = String$(Len(W_LK), " ") Then
           For J = W_ST To W_ED
              W_RK = DIC2(AR_RK(J))
              If W_RK = W_LK Then
                 AR_LSR(I) = J
                 W_ST = 0
                 Exit For
              End If
           Next J
        End If
     End If
  Next I

  If SW_END2 = True Then
     SW_END = True
  End If

End Sub

Private Sub SET_RES(ByVal W_1ST As String, ByVal W_2ND As String)

  Dim WB As Workbook
  Dim WS As Worksheet
  
  Dim SW_MINUS As Boolean
  Dim AR_RES As Variant

  Dim R1 As Long
  Dim R2 As Long
  Dim S As Long
  Dim RL As Long
  Dim RR As Long
  Dim SW_SKIP1 As Boolean
  Dim SW_SKIP2 As Boolean
  Dim RLB As Long
  Dim RLA As Long

  Dim R As Long
  Dim W_MAXR As Long

  Dim W_LST1 As Long
  Dim W_LED1 As Long
  Dim W_LST2 As Long
  Dim W_LED2 As Long

  Dim W_COM As String
  Dim W_COMWK As String

  Dim W_NAME As String


  Set WB = Workbooks.Add
  Set WS = WB.Worksheets(1)
  
  With WS.Range(WS.Columns(1), WS.Columns(5))
     .Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     .Font.Size = 9
  End With
  With WS.Columns(2)
     .NumberFormatLocal = "@"
     .ShrinkToFit = True
     .ColumnWidth = 75
  End With
  With WS.Columns(4)
     .NumberFormatLocal = "@"
     .ShrinkToFit = True
     .ColumnWidth = 75
  End With
  WS.Rows.RowHeight = 11.25
  
  AR_RES = WS.Range(WS.Cells(1, 1), WS.Cells(UBound(AR_LK) + UBound(AR_RK) + 1, 5)).Value
  
  AR_RES(1, 2) = W_1ST
  AR_RES(1, 4) = W_2ND
  AR_RES(1, 5) = "Diff"
  
  R1 = 1
  R2 = 1
  
  RR = 1
  SW_SKIP1 = False
  SW_SKIP2 = False
  RLB = 0
  
  For RL = 1 To W_ED1
     SW_MINUS = False
     If AR_LSR(RL) < 0 Then
        SW_MINUS = True
        AR_LSR(RL) = (-1) * AR_LSR(RL)
     End If
     
     If AR_LSR(RL) = 0 And _
        SW_SKIP2 = False Then
        SW_SKIP1 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR(RL) > RL And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR(RL) > RR And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     End If
     
     If AR_LSR(RL) = 0 Then
     Else
        RLA = RL
        
        If SW_SKIP1 = True Then
           RL = RLB
           For S = RLB To RLA - 1
              R1 = R1 + 1
              AR_RES(R1, 1) = S
              AR_RES(R1, 2) = "'" & Left$(AR_1ST(S), Len(AR_1ST(S)) - 1)
              WS.Cells(R1, 2).Interior.ColorIndex = CLng(W_DF1STTAG)
              WS.Cells(R1, 4).Interior.ColorIndex = CLng(W_DFNOLTAG)
              AR_RES(R1, 5) = "Delete"
              R2 = R2 + 1
              RL = RL + 1
           Next S
           
           For S = RR To AR_LSR(RLA) - 1
              R2 = R2 + 1
              AR_RES(R2, 3) = S
              AR_RES(R2, 4) = "'" & Left$(AR_2ND(S), Len(AR_2ND(S)) - 1)
              WS.Cells(R2, 4).Interior.ColorIndex = CLng(W_DF2NDTAG)
              WS.Cells(R2, 2).Interior.ColorIndex = CLng(W_DFNOLTAG)
              AR_RES(R2, 5) = "Add"
              R1 = R1 + 1
              RR = RR + 1
           Next S
        End If

        If SW_SKIP2 = True Then
           RL = RLB
           For S = RR To AR_LSR(RLB) - 1
              R2 = R2 + 1
              AR_RES(R2, 3) = S
              AR_RES(R2, 4) = "'" & Left$(AR_2ND(S), Len(AR_2ND(S)) - 1)
              WS.Cells(R2, 4).Interior.ColorIndex = CLng(W_DF2NDTAG)
              WS.Cells(R2, 2).Interior.ColorIndex = CLng(W_DFNOLTAG)
              AR_RES(R2, 5) = "Add"
              R1 = R1 + 1
              RR = RR + 1
           Next S
        End If
        
        If RL = W_ED1 Then
           Exit For
        End If

        R1 = R1 + 1
        AR_RES(R1, 1) = RL
        AR_RES(R1, 2) = "'" & Left$(AR_1ST(RL), Len(AR_1ST(RL)) - 1)
        R2 = R2 + 1
        AR_RES(R2, 3) = AR_LSR(RL)
        AR_RES(R2, 4) = "'" & Left$(AR_2ND(AR_LSR(RL)), Len(AR_2ND(AR_LSR(RL))) - 1)
        If SW_MINUS = True Then
           WS.Cells(R1, 2).Interior.ColorIndex = CLng(W_DF1STTAG)
           WS.Cells(R2, 4).Interior.ColorIndex = CLng(W_DF2NDTAG)
           AR_RES(R1, 5) = "Change"
        End If
        RR = AR_LSR(RL) + 1
        SW_SKIP1 = False
        SW_SKIP2 = False
        RLB = 0
     End If
  Next RL

  WS.Range(WS.Cells(1, 1), WS.Cells(UBound(AR_LK) + UBound(AR_RK) + 1, 5)).Value = AR_RES
  
  W_MAXR = Application.Max(R1, R2)
  
  For R = 1 To W_MAXR
     If AR_RES(R, 5) = "Change" Then
        If W_STC = 0 Then
           W_LST1 = 2
           W_LST2 = 2
        Else
           If W_STC <= Len(AR_RES(R, 2)) Then
              W_LST1 = W_STC + 1
           Else
              W_LST1 = Len(AR_RES(R, 2))
           End If
           If W_STC <= Len(AR_RES(R, 4)) Then
              W_LST2 = W_STC + 1
           Else
              W_LST2 = Len(AR_RES(R, 4))
           End If
        End If
        
        If W_EDC = 0 Then
           W_LED1 = Len(AR_RES(R, 2))
           W_LED2 = Len(AR_RES(R, 4))
        Else
           If W_EDC <= Len(AR_RES(R, 2)) Then
              W_LED1 = W_EDC
           Else
              W_LED1 = Len(AR_RES(R, 2))
           End If
           If W_EDC <= Len(AR_RES(R, 4)) Then
              W_LED2 = W_EDC
           Else
              W_LED2 = Len(AR_RES(R, 4))
           End If
        End If
        
        If Trim$(Mid$(AR_RES(R, 2), W_LST1, W_LED1 - W_LST1 + 1)) = Trim$(Mid$(AR_RES(R, 4), W_LST2, W_LED2 - W_LST2 + 1)) Then
        Else
           WS.Cells(R, 2).Characters(W_LST1 - 1, W_LED1 - W_LST1 + 1).Font.ColorIndex = CLng(W_DFINLTAG)
           WS.Cells(R, 4).Characters(W_LST2 - 1, W_LED2 - W_LST2 + 1).Font.ColorIndex = CLng(W_DFINLTAG)
        
           Call COMP_LINE(AR_RES(R, 2), AR_RES(R, 4), R, W_LST1, W_LED1, W_LST2, W_LED2, 2, WS)
        End If
     End If
  Next R
  
  ActiveSheet.UsedRange
  WS.Range(WS.Columns(1), WS.Columns(5)).AutoFilter
  WS.Columns(1).AutoFit
  WS.Columns(3).AutoFit
  WS.Columns(5).AutoFit
  WS.Rows(2).Select
  ActiveWindow.FreezePanes = True
  WS.Cells(1, 1).Select
  ActiveSheet.UsedRange
  With WS.PageSetup
     .PrintTitleRows = "$1:$1"
     .CenterFooter = "&P/&N"
     .Orientation = xlLandscape
     .Zoom = False
     .FitToPagesWide = 1
     .FitToPagesTall = False
  End With

  W_NAME = Right$(W_2ND, Len(W_2ND) - InStrRev(W_2ND, "\"))
  If InStr(W_NAME, ".") > 0 Then
     W_NAME = Left$(W_NAME, InStrRev(W_NAME, ".") - 1)
  End If

  On Error Resume Next
  If Len(W_NAME) > 31 Then
     WS.Name = Left$(W_NAME, 31)
  Else
     WS.Name = W_NAME
  End If
  On Error GoTo 0

  Set WS = Nothing
  Set WB = Nothing

End Sub

Private Sub COMP_LINE(ByVal W_LTEXT As String, ByVal W_RTEXT As String, ByVal R As Long, ByVal LS As Long, ByVal LE As Long, ByVal RS As Long, ByVal RE As Long, ByVal AN As Long, WS As Worksheet)

  Dim LI As Long
  Dim RI As Long
  Dim A As Long
  Dim A_MAX As Long
  Dim LI_BK As Long
  Dim RI_BK As Long
  
  
  A_MAX = 0
  
  For LI = LS To LE
     If LE + 1 - LI < A_MAX Then
        Exit For
     End If
     
     If Mid$(W_LTEXT, LI, 1) = " " Or _
        Mid$(W_LTEXT, LI, 1) = ChrW(&H3000) Then
     ElseIf InStr(RS, W_RTEXT, Mid$(W_LTEXT, LI, AN)) > 0 Then
        RI = InStr(RS, W_RTEXT, Mid$(W_LTEXT, LI, AN))
        If RI <= RE Then
           For A = AN To Len(W_LTEXT) - LI + 1
              If Mid$(W_RTEXT, RI + A, 1) = Mid$(W_LTEXT, LI + A, 1) Then
              Else
                 Exit For
              End If
           Next A
                     
           If A_MAX < A Then
              A_MAX = A
              LI_BK = LI
              RI_BK = RI
           End If
        
           LI = LI + A - 1
        End If
     End If
  Next LI
           
  If A_MAX = 0 Then
     Exit Sub
  ElseIf A_MAX >= AN Then
     WS.Cells(R, 2).Characters(LI_BK - 1, A_MAX).Font.ColorIndex = 1
     WS.Cells(R, 4).Characters(RI_BK - 1, A_MAX).Font.ColorIndex = 1
     Mid$(W_LTEXT, LI_BK, A_MAX) = String$(A_MAX, " ")
     Mid$(W_RTEXT, RI_BK, A_MAX) = String$(A_MAX, " ")
     
     If LS <= LI_BK - 1 And _
        RS <= RI_BK - 1 Then
        Call COMP_LINE(W_LTEXT, W_RTEXT, R, LS, LI_BK - 1, RS, RI_BK - 1, AN, WS)
     End If
     If LI_BK <= LE And _
        RI_BK <= RE Then
        Call COMP_LINE(W_LTEXT, W_RTEXT, R, LI_BK, LE, RI_BK, RE, AN, WS)
     End If
  ElseIf AN > 1 Then
     AN = 1
     Call COMP_LINE(W_LTEXT, W_RTEXT, R, LS, LE, RS, RE, AN, WS)
  End If

End Sub

Function XlDiff(ByVal OldXlPath As String, ByVal NewXlPath As String, Optional ByVal AdjustColumn As Boolean) As Long

  Dim FSO As Object
  
  
  XlDiff = 0

  Set FSO = CreateObject("Scripting.FileSystemObject")

  If OldXlPath = "" Then
     XlDiff = 1
  ElseIf FSO.FileExists(OldXlPath) = False Then
     XlDiff = 2
  End If

  If NewXlPath = "" Then
     XlDiff = 3
  ElseIf FSO.FileExists(OldXlPath) = False Then
     XlDiff = 4
  End If

  On Error GoTo L_ERR
  Call XL_DIFF(OldXlPath, NewXlPath, AdjustColumn)
  On Error GoTo 0

  Exit Function

L_ERR:
  
  XlDiff = 9

End Function

Sub XL_DIFF(ByVal W_1ST As String, ByVal W_2ND As String, ByVal SW_CLM As Boolean)
  
  Dim WB1 As Workbook
  Dim WB2 As Workbook
  Dim WB3 As Workbook
  Dim S1 As Long
  Dim S2 As Long
  Dim S3 As Long
  Dim SW_ONLY As Boolean
  Dim SW_WD As Boolean
  Dim W_AC As Long
  
  Dim SW_SAME As Boolean
  
  Dim W_DFCNT As Long
  
  Dim B As Long
  Dim SW_OP1 As Boolean
  Dim SW_OP2 As Boolean
  
  
  W_STC = 0
  W_EDC = 0
  
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  W_AC = Application.Calculation
  
  Set WB1 = Nothing
  Set WB2 = Nothing
  
  SW_OP1 = False
  SW_OP2 = False
  
  For B = 1 To Workbooks.count
     If Workbooks(B).path & "\" & Workbooks(B).Name = W_1ST Then
        Set WB1 = Workbooks(B)
        SW_OP1 = True
     ElseIf Workbooks(B).path & "\" & Workbooks(B).Name = W_2ND Then
        Set WB2 = Workbooks(B)
        SW_OP2 = True
     End If
     If WB1 Is Nothing Or _
        WB2 Is Nothing Then
     Else
        Exit For
     End If
  Next B
  
  If WB1 Is Nothing Then
     On Error Resume Next
     Set WB1 = Workbooks.Open(Filename:=W_1ST, UpdateLinks:=0, Password:="", ReadOnly:=True)
     On Error GoTo 0
  End If
  If WB2 Is Nothing Then
     On Error Resume Next
     Set WB2 = Workbooks.Open(Filename:=W_2ND, UpdateLinks:=0, Password:="", ReadOnly:=True)
     On Error GoTo 0
  End If
  
  Application.Calculation = xlCalculationManual
  
  SW_SAME = False
  If Dir(ThisWorkbook.path & "\_DF1") <> "" Then
     On Error Resume Next
     Kill ThisWorkbook.path & "\_DF1"
     On Error GoTo 0
  End If
  
  If Not WB1 Is Nothing And _
     WB2 Is Nothing Then
     If SW_OP1 = False Then
        Application.DisplayAlerts = False
        WB1.SaveCopyAs ThisWorkbook.path & "\_DF1"
        Application.DisplayAlerts = True
        WB1.Close False
        On Error Resume Next
        Set WB1 = Workbooks.Open(Filename:=ThisWorkbook.path & "\_DF1", UpdateLinks:=0, Password:="", ReadOnly:=True)
        Set WB2 = Workbooks.Open(Filename:=W_2ND, UpdateLinks:=0, Password:="", ReadOnly:=True)
        On Error GoTo 0
     Else
        On Error Resume Next
        W_RET = CopyFile(W_2ND, ThisWorkbook.path & "\_DF2", 0)
        Set WB2 = Workbooks.Open(Filename:=ThisWorkbook.path & "\_DF2", UpdateLinks:=0, Password:="", ReadOnly:=True)
        On Error GoTo 0
     End If
     SW_SAME = True
  End If
  
  If WB1 Is Nothing Or _
     WB2 Is Nothing Then
     If WB1 Is Nothing Then
     Else
        If SW_OP1 = False Then
           WB1.Close False
        End If
     End If
     If WB2 Is Nothing Then
     Else
        If SW_OP2 = False Then
           WB2.Close False
        End If
     End If
     Application.Calculation = W_AC
     Application.EnableEvents = True
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
  WB1.Windows(1).Visible = False
  WB2.Windows(1).Visible = False
  
  Set WB3 = Workbooks.Add
  For S3 = WB3.Worksheets.count To 2 Step -1
     Application.DisplayAlerts = False
     WB3.Worksheets(S3).Delete
     Application.DisplayAlerts = True
  Next S3
  WB3.Worksheets(1).Name = Chr$(1)
  W_DFCNT = 0
  
  '|fffd|}|fffd|b|fffd|`
  For S1 = 1 To WB1.Worksheets.count
     For S2 = 1 To WB2.Worksheets.count
        If WB2.Worksheets(S2).Name = WB1.Worksheets(S1).Name Then
           W_DFCNT = W_DFCNT + 1
                      
           Application.DisplayAlerts = False
           WB2.Worksheets(S2).Copy After:=WB3.Worksheets(WB3.Worksheets.count)
           Application.DisplayAlerts = True
           
           WB3.Worksheets.Add After:=WB3.Worksheets(WB3.Worksheets.count)
           WB3.Worksheets(WB3.Worksheets.count).Name = "Diff" & W_DFCNT
           If Val(Application.Version) >= 10 Then
              Call STCI2002(WB3.Worksheets(WB3.Worksheets.count), 3)
           End If
           SW_WD = WS_DIFF(WB1.Worksheets(S1), WB2.Worksheets(S2), WB3.Worksheets(WB3.Worksheets.count), WB3.Worksheets(WB3.Worksheets.count - 1), W_1ST, W_2ND, SW_CLM)
           DoEvents
           If SW_SDCAN = True Then
              SW_SDCAN = False
              GoTo L_CLOSE
           End If
           If SW_WD = False Then
              Application.DisplayAlerts = False
              WB3.Worksheets(WB3.Worksheets.count).Delete
              Application.DisplayAlerts = True
              W_DFCNT = W_DFCNT - 1
           Else
              Call STCI2002(WB3.Worksheets(WB3.Worksheets.count - 1), 3)
           End If
           
           Exit For
        End If
     Next S2
  Next S1
  
  '|fffd|I|fffd||fffd||fffd||fffd||fffd|[|fffd|P
  For S1 = 1 To WB1.Worksheets.count
     SW_ONLY = True
     For S2 = 1 To WB2.Worksheets.count
        If WB2.Worksheets(S2).Name = WB1.Worksheets(S1).Name Then
           SW_ONLY = False
           Exit For
        End If
     Next S2
     If SW_ONLY = True Then
        Application.DisplayAlerts = False
        WB1.Worksheets(S1).Copy After:=WB3.Worksheets(WB3.Worksheets.count)
        Application.DisplayAlerts = True
        If Val(Application.Version) >= 10 Then
           Call STCI2002(WB3.Worksheets(WB3.Worksheets.count), 6)
        End If
     End If
     DoEvents
     If SW_SDCAN = True Then
        SW_SDCAN = False
        GoTo L_CLOSE
     End If
  Next S1
  
  '|fffd|I|fffd||fffd||fffd||fffd||fffd|[|fffd|Q
  For S2 = 1 To WB2.Worksheets.count
     SW_ONLY = True
     For S1 = 1 To WB1.Worksheets.count
        If WB1.Worksheets(S1).Name = WB2.Worksheets(S2).Name Then
           SW_ONLY = False
           Exit For
        End If
     Next S1
     If SW_ONLY = True Then
        Application.DisplayAlerts = False
        WB2.Worksheets(S2).Copy After:=WB3.Worksheets(WB3.Worksheets.count)
        Application.DisplayAlerts = True
        If Val(Application.Version) >= 10 Then
           Call STCI2002(WB3.Worksheets(WB3.Worksheets.count), 8)
        End If
     End If
     DoEvents
     If SW_SDCAN = True Then
        SW_SDCAN = False
        GoTo L_CLOSE
     End If
  Next S2
  
L_CLOSE:
  
  Application.DisplayAlerts = False
  WB3.Worksheets(1).Delete
  Application.DisplayAlerts = True
  WB3.Activate
  WB3.Worksheets(1).Select
  Set WB3 = Nothing
  If SW_OP1 = False Then
     WB1.Close False
  Else
     WB1.Windows(1).Visible = True
  End If
  Set WB1 = Nothing
  If SW_OP2 = False Then
     WB2.Close False
  Else
     WB2.Windows(1).Visible = True
  End If
  Set WB2 = Nothing
  
  If SW_SAME = True Then
     If SW_OP1 = False Then
        If Dir(ThisWorkbook.path & "\_DF1") <> "" Then
           On Error Resume Next
           Kill ThisWorkbook.path & "\_DF1"
           On Error GoTo 0
        End If
     Else
        If Dir(ThisWorkbook.path & "\_DF2") <> "" Then
           On Error Resume Next
           Kill ThisWorkbook.path & "\_DF2"
           On Error GoTo 0
        End If
     End If
  End If
  
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

End Sub

Private Function WS_DIFF(WS1 As Worksheet, WS2 As Worksheet, WS3 As Worksheet, WS4 As Worksheet, ByVal W_1ST As String, ByVal W_2ND As String, ByVal SW_CLM As Boolean) As Boolean

  Dim SW_LOOP As Boolean
  
  Dim STS As Long
  Dim STE As Long
  
  
  With WS3.Cells
     If SW_ENGLISH = True Then
        .Font.Name = "Courier New"
        .Font.Size = 8
     Else
        .Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
        .Font.Size = 9
     End If
  End With

  Call MAKE_DIC_XL1(WS1, WS2)

  '|fffd|s|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  STS = 0
  STE = 0
  Call DTCT_DIFF(STS, STE)
  
  SW_END = False
  SW_BL1EX = False
  
  '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||20a|O|fffd|j
  If STS = 0 And _
     STE = 0 Then
  Else
     SW_LOOP = DTCT_SAME(False, STS, STE)
     If SW_SDCAN = True Then
        Exit Function
     End If
  End If
  
  Call MAKE_DIC_XL1T(WS1, WS2)
  
  '90%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(90, False)
  End If
  
  '75%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(75, False)
  End If
  
  '|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd||fffd|v|fffd||fffd||fffd|o
  If SW_END = False Then
     If SW_LOOP = False Then
        If SW_BL1EX = True Then
           Call DTCT_BSAME
        End If
        SW_END = True
     End If
  End If
  
  SW_END = False
  
  '50%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(50, False)
  End If
  
  '25%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(25, False)
  End If
  
  '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd|j
  If SW_END = False Then
     If SW_BL1EX = True Then
        Call DTCT_BSAME
     End If
  End If
  
  Set DIC2 = Nothing
  
  '|fffd||fffd||fffd||283|Z|fffd|b|fffd|g
  WS_DIFF = SET_RES_XL1(WS1, WS2, WS3, WS4, W_1ST, W_2ND, SW_CLM)
  
End Function

Private Sub MAKE_DIC_XL1(WS1 As Worksheet, WS2 As Worksheet)

  Dim DIC1 As Object
  Dim D1 As Variant
  
  Dim R As Long
  Dim C As Long
  Dim D As Long

  Dim W_STR As String
  Dim W_LN As Long
  
  Dim W_MAXC As Long


  W_MAXC = Application.Max(WS1.UsedRange.Columns(WS1.UsedRange.Columns.count).Column, WS2.UsedRange.Columns(WS2.UsedRange.Columns.count).Column)

  W_ED1 = WS1.UsedRange.Rows(WS1.UsedRange.Rows.count).Row
  ReDim AR_1ST(W_ED1)
  For R = 1 To WS1.UsedRange.Rows(WS1.UsedRange.Rows.count).Row
     AR_1ST(R) = ""
     For C = 1 To W_MAXC
        W_STR = ""
        On Error Resume Next
        W_STR = WS1.Cells(R, C).Value
        On Error GoTo 0
        AR_1ST(R) = AR_1ST(R) & W_STR & Chr$(2)
     Next C
  Next R
  
  W_ED2 = WS2.UsedRange.Rows(WS2.UsedRange.Rows.count).Row
  ReDim AR_2ND(W_ED2)
  For R = 1 To WS2.UsedRange.Rows(WS2.UsedRange.Rows.count).Row
     AR_2ND(R) = ""
     For C = 1 To W_MAXC
        W_STR = ""
        On Error Resume Next
        W_STR = WS2.Cells(R, C).Value
        On Error GoTo 0
        AR_2ND(R) = AR_2ND(R) & W_STR & Chr$(2)
     Next C
  Next R
  
  Set DIC1 = CreateObject("Scripting.Dictionary")
  D = 0
  
  W_ED1 = W_ED1 + 1
  
  ReDim AR_LK(W_ED1)
  ReDim AR_LK2(W_ED1)
  ReDim AR_LSR(W_ED1)
  
  For R = 1 To W_ED1
     If R = W_ED1 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_1ST(R)
     ElseIf W_STC = 0 Then
        If Len(AR_1ST(R)) >= W_EDC Then
           W_STR = Left$(AR_1ST(R), W_EDC)
        Else
           W_STR = AR_1ST(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_1ST(R)) + 1 Then
           W_STR = Mid$(AR_1ST(R), W_STC, Len(AR_1ST(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_1ST(R)) + 1 And _
           W_EDC < Len(AR_1ST(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_1ST(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If R = W_ED1 Then
        D = D + 1
        DIC1.Add Chr$(1), D
        AR_LK(R) = D
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_LK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_LK(R) = D
     End If
     AR_LK2(R) = AR_LK(R)
  Next R

  W_ED2 = W_ED2 + 1
  
  ReDim AR_RK(W_ED2)
  ReDim AR_RK2(W_ED2)
  ReDim AR_RKS(W_ED2)
  
  ReDim AR_LR1(W_ED1)
  ReDim AR_LR2(W_ED1)
  For R = 1 To W_ED1
     AR_LR1(R) = 1
     AR_LR2(R) = W_ED2
  Next R
  
  W_LN = 1
  
  For R = 1 To W_ED2
     If R = W_ED2 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_2ND(R)
     ElseIf W_STC = 0 Then
        If Len(AR_2ND(R)) >= W_EDC Then
           W_STR = Left$(AR_2ND(R), W_EDC)
        Else
           W_STR = AR_2ND(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_2ND(R)) + 1 Then
           W_STR = Mid$(AR_2ND(R), W_STC, Len(AR_2ND(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_2ND(R)) + 1 And _
           W_EDC < Len(AR_2ND(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_2ND(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If R = W_ED2 Then
        AR_RK(R) = DIC1(Chr$(1))
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_RK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_RK(R) = D
     End If
     AR_RKS(R) = W_LN
     AR_RK2(R) = AR_RK(R)
     W_LN = W_LN + Len(AR_RK(R)) + 1
  Next R
  
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  For Each D1 In DIC1
     DIC2.Add CStr(DIC1(D1)), D1
  
     W_STR = LTrim$(D1)
  Next
  
  Set DIC1 = Nothing

  AR_LK2(W_ED1) = " "
  AR_RK2(W_ED2) = "."
  AR_LSR(W_ED1) = W_ED2

End Sub

Private Sub MAKE_DIC_XL1T(WS1 As Worksheet, WS2 As Worksheet)

  Dim DIC1 As Object
  Dim D1 As Variant
  
  Dim R As Long
  Dim C As Long
  Dim D As Long

  Dim W_STR As String
  
  Dim AR_WK As Variant
  Dim I As Long
  Dim AR_1STT() As String
  Dim AR_2NDT() As String
  Dim W_ED1T As Long
  Dim W_ED2T As Long


  W_ED1T = W_ED1 - 1
  W_ED2T = W_ED2 - 1

  ReDim AR_1STT(W_ED1T)
  For R = 1 To W_ED1T
     AR_WK = Split(AR_1ST(R), Chr$(2))
     For I = 0 To UBound(AR_WK)
        AR_WK(I) = Trim$(AR_WK(I))
     Next I
     AR_1STT(R) = Join$(AR_WK, Chr$(2))
  Next R
  
  ReDim AR_2NDT(W_ED2T)
  For R = 1 To W_ED2T
     AR_WK = Split(AR_2ND(R), Chr$(2))
     For I = 0 To UBound(AR_WK)
        AR_WK(I) = Trim$(AR_WK(I))
     Next I
     AR_2NDT(R) = Join$(AR_WK, Chr$(2))
  Next R
  
  Set DIC1 = CreateObject("Scripting.Dictionary")
  D = 0
  
  W_ED1T = W_ED1T + 1
  
  ReDim AR_LK(W_ED1T)
  
  For R = 1 To W_ED1T
     If R = W_ED1T Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_1STT(R)
     ElseIf W_STC = 0 Then
        If Len(AR_1STT(R)) >= W_EDC Then
           W_STR = Left$(AR_1STT(R), W_EDC)
        Else
           W_STR = AR_1STT(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_1STT(R)) + 1 Then
           W_STR = Mid$(AR_1STT(R), W_STC, Len(AR_1STT(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_1STT(R)) + 1 And _
           W_EDC < Len(AR_1STT(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_1STT(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If R = W_ED1T Then
        D = D + 1
        DIC1.Add Chr$(1), D
        AR_LK(R) = D
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_LK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_LK(R) = D
     End If
  Next R

  W_ED2T = W_ED2T + 1
  
  ReDim AR_RK(W_ED2T)
  
  For R = 1 To W_ED2T
     If R = W_ED2T Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_2NDT(R)
     ElseIf W_STC = 0 Then
        If Len(AR_2NDT(R)) >= W_EDC Then
           W_STR = Left$(AR_2NDT(R), W_EDC)
        Else
           W_STR = AR_2NDT(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_2NDT(R)) + 1 Then
           W_STR = Mid$(AR_2NDT(R), W_STC, Len(AR_2NDT(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_2NDT(R)) + 1 And _
           W_EDC < Len(AR_2NDT(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_2NDT(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If R = W_ED2T Then
        AR_RK(R) = DIC1(Chr$(1))
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_RK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_RK(R) = D
     End If
  Next R
  
  Set DIC2 = Nothing
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  For Each D1 In DIC1
     DIC2.Add CStr(DIC1(D1)), D1
  Next
  
  Set DIC1 = Nothing

End Sub

Private Function SET_RES_XL1(WS1 As Worksheet, WS2 As Worksheet, WS3 As Worksheet, WS4 As Worksheet, ByVal W_1ST As String, ByVal W_2ND As String, ByVal SW_CLM As Boolean) As Boolean

  Dim AR_LSR1() As Long
  Dim AR_1ST1() As String
  Dim AR_2ND1() As String
  Dim W_ED11 As Long
  Dim R As Long
  Dim R3 As Long
  Dim C3 As Long
  Dim AR_WK As Variant
  Dim AR_WK2 As Variant
  Dim AR_WR1 As Variant
  Dim AR_WR2 As Variant
  Dim J As Long

  Dim SW_MINUS As Boolean
  Dim AR_RES As Variant

  Dim S As Long
  Dim RL As Long
  Dim RR As Long
  Dim SW_SKIP1 As Boolean
  Dim SW_SKIP2 As Boolean
  Dim RLB As Long
  Dim RLA As Long
  
  Dim RNG1 As Range
  Dim RNG2 As Range
  Dim L As Long
  Dim SW_BD As Boolean
  Dim SW_IT As Boolean
  Dim SW_UL As Boolean
  Dim SW_ST As Boolean
  Dim SW_CL As Boolean
  Dim SW_CP As Boolean
  
  Dim SW_GRP As Boolean
  Dim K As Long
  Dim W_LEN As Long
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim SW_MATCH As Boolean
  Dim SHP1 As Shape
  Dim SHP2 As Shape
  Dim SW_DC As Boolean
  
  
  SET_RES_XL1 = False
  
  '|fffd|R|fffd|s|fffd|[
  ReDim AR_LSR1(UBound(AR_LSR))
  For R = 1 To UBound(AR_LSR)
     AR_LSR1(R) = AR_LSR(R)
  Next R
  ReDim AR_1ST1(UBound(AR_1ST))
  For R = 1 To UBound(AR_1ST)
     AR_1ST1(R) = AR_1ST(R)
  Next R
  ReDim AR_2ND1(UBound(AR_2ND))
  For R = 1 To UBound(AR_2ND)
     AR_2ND1(R) = AR_2ND(R)
  Next R
  W_ED11 = W_ED1

  With WS3
     .Cells(1, 1).Value = "1st"
     .Cells(2, 1).Value = "2nd"
     .Cells(4, 1).Value = "1st"
     .Cells(4, 2).Value = "2nd"
     .Cells(4, 3).Value = "Diff"
     .Cells(4, 4).Value = "Memo"
     .Columns(1).AutoFit
     .Columns(2).AutoFit
     .Columns(3).AutoFit
     .Columns(4).AutoFit
     .Columns(5).ColumnWidth = 3
     .Cells(1, 2).Value = W_1ST
     .Cells(2, 2).Value = W_2ND
  End With
  
  R3 = 4
  C3 = 5
  
  RR = 1
  SW_SKIP1 = False
  SW_SKIP2 = False
  RLB = 0
  
  For RL = 1 To W_ED11
     SW_MINUS = False
     If AR_LSR1(RL) < 0 Then
        SW_MINUS = True
        AR_LSR1(RL) = (-1) * AR_LSR1(RL)
     End If
     
     If AR_LSR1(RL) = 0 And _
        SW_SKIP2 = False Then
        SW_SKIP1 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR1(RL) > RL And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR1(RL) > RR And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     End If
     
     If AR_LSR1(RL) = 0 Then
     Else
        RLA = RL
        
        If SW_SKIP1 = True Then
           RL = RLB
           For S = RLB To RLA - 1
              R3 = R3 + 1
              With WS3
                 AR_WK = Split(AR_1ST1(S), Chr$(2))
                 AR_WR1 = .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value
                 
                 SET_RES_XL1 = True
                 AR_WR1(1, 1) = S
                 AR_WR1(1, 3) = "Delete"
                 
                 C3 = 5
                 For J = 0 To UBound(AR_WK) - 1
                    C3 = C3 + 1
                    If AR_WK(J) <> "" Then
                       AR_WR1(1, C3) = "'" & AR_WK(J)
                    End If
                 Next J
              
                 .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value = AR_WR1
                 .Range(.Cells(R3, 6), .Cells(R3, 5 + UBound(AR_WK))).Interior.ColorIndex = CLng(W_DF1STTAG)
              End With
              RL = RL + 1
           Next S
           
           For S = RR To AR_LSR1(RLA) - 1
              R3 = R3 + 1
              With WS3
                 AR_WK = Split(AR_2ND1(S), Chr$(2))
                 AR_WR1 = .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value
                 
                 SET_RES_XL1 = True
                 AR_WR1(1, 2) = S
                 AR_WR1(1, 3) = "Add"
                 
                 C3 = 5
                 For J = 0 To UBound(AR_WK) - 1
                    C3 = C3 + 1
                    If AR_WK(J) <> "" Then
                       AR_WR1(1, C3) = "'" & AR_WK(J)
                    End If
                 Next J
              
                 .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value = AR_WR1
                 .Range(.Cells(R3, 6), .Cells(R3, 5 + UBound(AR_WK))).Interior.ColorIndex = CLng(W_DF2NDTAG)
              End With

              With WS4.Rows(S).EntireRow.Interior
                 .ColorIndex = 6
                 .Pattern = xlGrid
                 .PatternColorIndex = 44
              End With
              
              RR = RR + 1
           Next S
        End If

        If SW_SKIP2 = True Then
           RL = RLB
           For S = RR To AR_LSR1(RLB) - 1
              R3 = R3 + 1
              With WS3
                 AR_WK = Split(AR_2ND1(S), Chr$(2))
                 AR_WR1 = .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value
                 
                 SET_RES_XL1 = True
                 AR_WR1(1, 2) = S
                 AR_WR1(1, 3) = "Add"
                 
                 C3 = 5
                 For J = 0 To UBound(AR_WK) - 1
                    C3 = C3 + 1
                    If AR_WK(J) <> "" Then
                       AR_WR1(1, C3) = "'" & AR_WK(J)
                    End If
                 Next J
                 
                 .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value = AR_WR1
                 .Range(.Cells(R3, 6), .Cells(R3, 5 + UBound(AR_WK))).Interior.ColorIndex = CLng(W_DF2NDTAG)
              End With
              
              With WS4.Rows(S).EntireRow.Interior
                 .ColorIndex = 6
                 .Pattern = xlGrid
                 .PatternColorIndex = 44
              End With
              
              RR = RR + 1
           Next S
        End If
        
        If RL = W_ED11 Then
           Exit For
        End If

        If SW_MINUS = False Then
           AR_WK = Split(AR_1ST1(RL), Chr$(2))
           SW_BD = False
           SW_IT = False
           SW_UL = False
           SW_ST = False
           SW_CL = False
           
           For J = 0 To UBound(AR_WK) - 1
              If AR_WK(J) <> "" Then
                 Set RNG1 = WS1.Cells(RL, J + 1)
                 Set RNG2 = WS2.Cells(AR_LSR1(RL), J + 1)
                 
                 If IsNull(RNG1.Font.Bold) = True And _
                    IsNull(RNG2.Font.Bold) = True Then
                    For L = 1 To Len(AR_WK(J))
                       If RNG1.Characters(L, 1).Font.Bold = RNG2.Characters(L, 1).Font.Bold Then
                       Else
                          SW_BD = True
                          Exit For
                       End If
                    Next L
                 Else
                    If RNG1.Font.Bold = RNG2.Font.Bold Then
                    Else
                       SW_BD = True
                    End If
                 End If
                 If SW_BD = True Then
                    SW_MINUS = True
                    Exit For
                 End If
                 
                 If IsNull(RNG1.Font.Italic) = True And _
                    IsNull(RNG2.Font.Italic) = True Then
                    For L = 1 To Len(AR_WK(J))
                       If RNG1.Characters(L, 1).Font.Italic = RNG2.Characters(L, 1).Font.Italic Then
                       Else
                          SW_IT = True
                          Exit For
                       End If
                    Next L
                 Else
                    If RNG1.Font.Italic = RNG2.Font.Italic Then
                    Else
                       SW_IT = True
                    End If
                 End If
                 If SW_IT = True Then
                    SW_MINUS = True
                    Exit For
                 End If
                 
                 If IsNull(RNG1.Font.Underline) = True And _
                    IsNull(RNG2.Font.Underline) = True Then
                    For L = 1 To Len(AR_WK(J))
                       If RNG1.Characters(L, 1).Font.Underline = RNG2.Characters(L, 1).Font.Underline Then
                       Else
                          SW_UL = True
                          Exit For
                       End If
                    Next L
                 Else
                    If RNG1.Font.Underline = RNG2.Font.Underline Then
                    Else
                       SW_UL = True
                    End If
                 End If
                 If SW_UL = True Then
                    SW_MINUS = True
                    Exit For
                 End If
                 
                 If IsNull(RNG1.Font.Strikethrough) = True And _
                    IsNull(RNG2.Font.Strikethrough) = True Then
                    For L = 1 To Len(AR_WK(J))
                       If RNG1.Characters(L, 1).Font.Strikethrough = RNG2.Characters(L, 1).Font.Strikethrough Then
                       Else
                          SW_ST = True
                          Exit For
                       End If
                    Next L
                 Else
                    If RNG1.Font.Strikethrough = RNG2.Font.Strikethrough Then
                    Else
                       SW_ST = True
                    End If
                 End If
                 If SW_ST = True Then
                    SW_MINUS = True
                    Exit For
                 End If
                 
                 If IsNull(RNG1.Font.Color) = True And _
                    IsNull(RNG2.Font.Color) = True Then
                    For L = 1 To Len(AR_WK(J))
                       If RNG1.Characters(L, 1).Font.Color = RNG2.Characters(L, 1).Font.Color Then
                       Else
                          SW_CL = True
                          Exit For
                       End If
                    Next L
                 Else
                    If RNG1.Font.Color = RNG2.Font.Color Then
                    Else
                       SW_CL = True
                    End If
                 End If
                 If SW_CL = True Then
                    SW_MINUS = True
                    Exit For
                 End If
              
                 Set RNG1 = Nothing
                 Set RNG2 = Nothing
              End If
           Next J
        End If
        
        If SW_MINUS = False Then
           R3 = R3 + 1
           With WS3
              AR_WK = Split(AR_1ST1(RL), Chr$(2))
              AR_WR1 = .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value
              
              AR_WR1(1, 1) = RL
              AR_WR1(1, 2) = AR_LSR1(RL)
              
              C3 = 5
              For J = 0 To UBound(AR_WK) - 1
                 C3 = C3 + 1
                 If AR_WK(J) <> "" Then
                    AR_WR1(1, C3) = "'" & AR_WK(J)
                 End If
              Next J
           
              .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value = AR_WR1
           End With
        Else
           R3 = R3 + 1
           If SW_CLM = False Then
              With WS3
                 AR_WK = Split(AR_1ST1(RL), Chr$(2))
                 AR_WK2 = Split(AR_2ND1(AR_LSR1(RL)), Chr$(2))
                 
                 AR_WR1 = .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value
                 AR_WR2 = .Range(.Cells(R3 + 1, 1), .Cells(R3 + 1, 5 + UBound(AR_WK2))).Value
                 
                 SET_RES_XL1 = True
                 AR_WR1(1, 1) = RL
                 AR_WR1(1, 3) = "Change"
                 AR_WR2(1, 2) = AR_LSR1(RL)
                 AR_WR2(1, 3) = "Change"
                 
                 C3 = 5
                 For J = 0 To UBound(AR_WK) - 1
                    C3 = C3 + 1
                    If AR_WK(J) <> "" Then
                       AR_WR1(1, C3) = "'" & AR_WK(J)
                    End If
                    
                    If AR_WK2(J) <> AR_WK(J) Then
                       If AR_WK2(J) <> "" Then
                          AR_WR2(1, C3) = "'" & AR_WK2(J)
                       End If
                       .Cells(R3, C3).Interior.ColorIndex = CLng(W_DF1STTAG)
                       .Cells(R3 + 1, C3).Interior.ColorIndex = CLng(W_DF2NDTAG)
                    
                       WS4.Cells(AR_LSR1(RL), J + 1).Interior.ColorIndex = 6
                       WS4.Cells(AR_LSR1(RL), J + 1).Interior.Pattern = xlGrid
                       WS4.Cells(AR_LSR1(RL), J + 1).Interior.PatternColorIndex = 44
                    End If
                 Next J
                 
                 .Range(.Cells(R3, 1), .Cells(R3, 5 + UBound(AR_WK))).Value = AR_WR1
                 .Range(.Cells(R3 + 1, 1), .Cells(R3 + 1, 5 + UBound(AR_WK2))).Value = AR_WR2
              
                 If SW_BD = True Or _
                    SW_IT = True Or _
                    SW_UL = True Or _
                    SW_ST = True Or _
                    SW_CL = True Then
                    C3 = 5
                    For J = 0 To UBound(AR_WK) - 1
                       C3 = C3 + 1
                    
                       SW_CP = False
                       Set RNG1 = WS1.Cells(RL, J + 1)
                       Set RNG2 = WS2.Cells(AR_LSR1(RL), J + 1)
                       
                       If IsNull(RNG1.Font.Bold) = True And _
                          IsNull(RNG2.Font.Bold) = True Then
                          For L = 1 To Len(AR_WK(J))
                             If RNG1.Characters(L, 1).Font.Bold = RNG2.Characters(L, 1).Font.Bold Then
                             Else
                                SW_CP = True
                                Exit For
                             End If
                          Next L
                       Else
                          If RNG1.Font.Bold = RNG2.Font.Bold Then
                          Else
                             SW_CP = True
                          End If
                       End If
                       If SW_CP = True Then
                          GoTo L_CP
                       End If
                       
                       If IsNull(RNG1.Font.Italic) = True And _
                          IsNull(RNG2.Font.Italic) = True Then
                          For L = 1 To Len(AR_WK(J))
                             If RNG1.Characters(L, 1).Font.Italic = RNG2.Characters(L, 1).Font.Italic Then
                             Else
                                SW_CP = True
                                Exit For
                             End If
                          Next L
                       Else
                          If RNG1.Font.Italic = RNG2.Font.Italic Then
                          Else
                             SW_CP = True
                          End If
                       End If
                       If SW_CP = True Then
                          GoTo L_CP
                       End If
                       
                       If IsNull(RNG1.Font.Underline) = True And _
                          IsNull(RNG2.Font.Underline) = True Then
                          For L = 1 To Len(AR_WK(J))
                             If RNG1.Characters(L, 1).Font.Underline = RNG2.Characters(L, 1).Font.Underline Then
                             Else
                                SW_CP = True
                                Exit For
                             End If
                          Next L
                       Else
                          If RNG1.Font.Underline = RNG2.Font.Underline Then
                          Else
                             SW_CP = True
                          End If
                       End If
                       If SW_CP = True Then
                          GoTo L_CP
                       End If
                       
                       If IsNull(RNG1.Font.Strikethrough) = True And _
                          IsNull(RNG2.Font.Strikethrough) = True Then
                          For L = 1 To Len(AR_WK(J))
                             If RNG1.Characters(L, 1).Font.Strikethrough = RNG2.Characters(L, 1).Font.Strikethrough Then
                             Else
                                SW_CP = True
                                Exit For
                             End If
                          Next L
                       Else
                          If RNG1.Font.Strikethrough = RNG2.Font.Strikethrough Then
                          Else
                             SW_CP = True
                          End If
                       End If
                       If SW_CP = True Then
                          GoTo L_CP
                       End If
                       
                       If IsNull(RNG1.Font.Color) = True And _
                          IsNull(RNG2.Font.Color) = True Then
                          For L = 1 To Len(AR_WK(J))
                             If RNG1.Characters(L, 1).Font.Color = RNG2.Characters(L, 1).Font.Color Then
                             Else
                                SW_CP = True
                                Exit For
                             End If
                          Next L
                       Else
                          If RNG1.Font.Color = RNG2.Font.Color Then
                          Else
                             SW_CP = True
                          End If
                       End If
                       If SW_CP = True Then
                          GoTo L_CP
                       End If
              
L_CP:
                       If SW_CP = True Then
                          SET_RES_XL1 = True
                          .Cells(R3 + 1, C3).Value = "'" & .Cells(R3, C3).Value
                          
                          For K = 1 To Len(AR_WK(J))
                             .Cells(R3, C3).Characters(K, 1).Font.Bold = RNG1.Characters(K, 1).Font.Bold
                             .Cells(R3, C3).Characters(K, 1).Font.Italic = RNG1.Characters(K, 1).Font.Italic
                             .Cells(R3, C3).Characters(K, 1).Font.Underline = RNG1.Characters(K, 1).Font.Underline
                             .Cells(R3, C3).Characters(K, 1).Font.Strikethrough = RNG1.Characters(K, 1).Font.Strikethrough
                             .Cells(R3, C3).Characters(K, 1).Font.Color = RNG1.Characters(K, 1).Font.Color
                             
                             .Cells(R3 + 1, C3).Characters(K, 1).Font.Bold = RNG2.Characters(K, 1).Font.Bold
                             .Cells(R3 + 1, C3).Characters(K, 1).Font.Italic = RNG2.Characters(K, 1).Font.Italic
                             .Cells(R3 + 1, C3).Characters(K, 1).Font.Underline = RNG2.Characters(K, 1).Font.Underline
                             .Cells(R3 + 1, C3).Characters(K, 1).Font.Strikethrough = RNG2.Characters(K, 1).Font.Strikethrough
                             .Cells(R3 + 1, C3).Characters(K, 1).Font.Color = RNG2.Characters(K, 1).Font.Color
                          Next K
                          
                          .Cells(R3, C3).Interior.ColorIndex = CLng(W_DF1STTAG)
                          .Cells(R3 + 1, C3).Interior.ColorIndex = CLng(W_DF2NDTAG)
                       
                          WS4.Cells(AR_LSR1(RL), J + 1).Interior.ColorIndex = 6
                          WS4.Cells(AR_LSR1(RL), J + 1).Interior.Pattern = xlGrid
                          WS4.Cells(AR_LSR1(RL), J + 1).Interior.PatternColorIndex = 44
                       End If
                       
                       Set RNG1 = Nothing
                       Set RNG2 = Nothing
                    Next J
                 End If
              End With
           Else
              With WS3
                 SET_RES_XL1 = True
                 .Cells(R3, 1).Value = RL
                 .Cells(R3, 3).Value = "Change"
                 .Cells(R3 + 1, 2).Value = AR_LSR1(RL)
                 .Cells(R3 + 1, 3).Value = "Change"
              End With
              
              SW_DC = False
              If SW_BD = True Or _
                 SW_IT = True Or _
                 SW_UL = True Or _
                 SW_ST = True Or _
                 SW_CL = True Then
                 SW_DC = True
              End If
              
              Call WS_LINE_DIFF(AR_1ST1(RL), AR_2ND1(AR_LSR1(RL)), WS1, WS2, WS3, WS4, R3, RL, AR_LSR1(RL))
           End If
           R3 = R3 + 1
        End If
        
        RR = AR_LSR1(RL) + 1
        SW_SKIP1 = False
        SW_SKIP2 = False
        RLB = 0
     End If
  Next RL

  Do
     SW_GRP = False
     For J = 1 To WS1.Shapes.count
        If WS1.Shapes(J).Type = msoGroup Then
           SW_GRP = True
           WS1.Shapes(J).Ungroup
           Exit For
        End If
     Next J
     If SW_GRP = False Then
        Exit Do
     End If
  Loop
  
  Do
     SW_GRP = False
     For J = 1 To WS2.Shapes.count
        If WS2.Shapes(J).Type = msoGroup Then
           SW_GRP = True
           WS2.Shapes(J).Ungroup
           Exit For
        End If
     Next J
     If SW_GRP = False Then
        Exit Do
     End If
  Loop
  
  R3 = R3 + 2
  
  For J = 1 To WS1.Shapes.count
     W_LEN = -1
     On Error Resume Next
     W_LEN = WS1.Shapes(J).TextFrame.Characters.count
     On Error GoTo 0
     If W_LEN = -1 Then
        GoTo L_NEXT1
     End If
     W_STR1 = ""
     If W_LEN > 0 Then
        For K = 0 To Int(W_LEN / 255)
           W_ST = K * 255 + 1
           If (K + 1) * 255 <= W_LEN Then
              W_BYTE = 255
           Else
              W_BYTE = W_LEN - K * 255
           End If
           W_STR1 = W_STR1 & WS1.Shapes(J).TextFrame.Characters(W_ST, W_BYTE).text
           If (K + 1) * 255 = W_LEN Then
              Exit For
           End If
        Next K
     End If
     
     SW_MATCH = False
     For L = 1 To WS2.Shapes.count
        If WS2.Shapes(L).ID = WS1.Shapes(J).ID Then
           SW_MATCH = True
           Exit For
        End If
     Next L
     
     If SW_MATCH = True Then
        W_LEN = -1
        On Error Resume Next
        W_LEN = WS2.Shapes(L).TextFrame.Characters.count
        On Error GoTo 0
        If W_LEN = -1 Then
           GoTo L_NEXT1
        End If
        W_STR2 = ""
        If W_LEN > 0 Then
           For K = 0 To Int(W_LEN / 255)
              W_ST = K * 255 + 1
              If (K + 1) * 255 <= W_LEN Then
                 W_BYTE = 255
              Else
                 W_BYTE = W_LEN - K * 255
              End If
              W_STR2 = W_STR2 & WS2.Shapes(L).TextFrame.Characters(W_ST, W_BYTE).text
              If (K + 1) * 255 = W_LEN Then
                 Exit For
              End If
           Next K
        End If
     
        If W_STR1 = W_STR2 Then
           SW_CP = False
           Set SHP1 = WS1.Shapes(J)
           Set SHP2 = WS2.Shapes(L)
                       
           If SHP1.TextFrame.Characters.Font.Bold = True And _
              SHP2.TextFrame.Characters.Font.Bold = True Then
           Else
              For K = 1 To Len(W_STR1)
                 If SHP1.TextFrame.Characters(K, 1).Font.Bold = SHP2.TextFrame.Characters(K, 1).Font.Bold Then
                 Else
                    SW_CP = True
                    Exit For
                 End If
              Next K
           End If
           If SW_CP = True Then
              GoTo L_CPS
           End If
                       
           If SHP1.TextFrame.Characters.Font.Italic = True And _
              SHP2.TextFrame.Characters.Font.Italic = True Then
           Else
              For K = 1 To Len(W_STR1)
                 If SHP1.TextFrame.Characters(K, 1).Font.Italic = SHP2.TextFrame.Characters(K, 1).Font.Italic Then
                 Else
                    SW_CP = True
                    Exit For
                 End If
              Next K
           End If
           If SW_CP = True Then
              GoTo L_CPS
           End If
                       
           If SHP1.TextFrame.Characters.Font.Underline = True And _
              SHP2.TextFrame.Characters.Font.Underline = True Then
           Else
              For K = 1 To Len(W_STR1)
                 If SHP1.TextFrame.Characters(K, 1).Font.Underline = SHP2.TextFrame.Characters(K, 1).Font.Underline Then
                 Else
                    SW_CP = True
                    Exit For
                 End If
              Next K
           End If
           If SW_CP = True Then
              GoTo L_CPS
           End If
                       
           If SHP1.TextFrame.Characters.Font.Strikethrough = True And _
              SHP2.TextFrame.Characters.Font.Strikethrough = True Then
           Else
              For K = 1 To Len(W_STR1)
                 If SHP1.TextFrame.Characters(K, 1).Font.Strikethrough = SHP2.TextFrame.Characters(K, 1).Font.Strikethrough Then
                 Else
                    SW_CP = True
                    Exit For
                 End If
              Next K
           End If
           If SW_CP = True Then
              GoTo L_CPS
           End If
                       
           If SHP1.TextFrame.Characters.Font.Color = SHP2.TextFrame.Characters.Font.Color Then
           Else
              For K = 1 To Len(W_STR1)
                 If SHP1.TextFrame.Characters(K, 1).Font.Color = SHP2.TextFrame.Characters(K, 1).Font.Color Then
                 Else
                    SW_CP = True
                    Exit For
                 End If
              Next K
           End If
           If SW_CP = True Then
              GoTo L_CPS
           End If
              
L_CPS:
           If SW_CP = True Then
              SET_RES_XL1 = True
              WS3.Cells(R3, 1).Value = WS1.Shapes(J).TopLeftCell.Row
              WS3.Cells(R3, 3).Value = "Change"
              WS3.Cells(R3, 5).Value = "'" & W_STR1
              For K = 1 To Len(W_STR1)
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Bold = SHP1.TextFrame.Characters(K, 1).Font.Bold
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Italic = SHP1.TextFrame.Characters(K, 1).Font.Italic
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Underline = SHP1.TextFrame.Characters(K, 1).Font.Underline
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Strikethrough = SHP1.TextFrame.Characters(K, 1).Font.Strikethrough
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Color = SHP1.TextFrame.Characters(K, 1).Font.Color
              Next K
              WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF1STTAG)
              R3 = R3 + 1
              WS3.Cells(R3, 2).Value = WS2.Shapes(L).TopLeftCell.Row
              WS3.Cells(R3, 3).Value = "Change"
              WS3.Cells(R3, 5).Value = "'" & W_STR2
              For K = 1 To Len(W_STR2)
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Bold = SHP2.TextFrame.Characters(K, 1).Font.Bold
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Italic = SHP2.TextFrame.Characters(K, 1).Font.Italic
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Underline = SHP2.TextFrame.Characters(K, 1).Font.Underline
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Strikethrough = SHP2.TextFrame.Characters(K, 1).Font.Strikethrough
                 WS3.Cells(R3, 5).Characters(K, 1).Font.Color = SHP2.TextFrame.Characters(K, 1).Font.Color
              Next K
              WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF2NDTAG)
              
              With WS4.Shapes(L).Fill
                 .ForeColor.SchemeColor = 51
                 .Patterned msoPatternLargeGrid
              End With
              
              R3 = R3 + 1
           Else
              WS3.Cells(R3, 1).Value = WS1.Shapes(J).TopLeftCell.Row
              WS3.Cells(R3, 2).Value = WS2.Shapes(L).TopLeftCell.Row
              WS3.Cells(R3, 5).Value = "'" & W_STR1
              R3 = R3 + 1
           End If
           
           Set SHP1 = Nothing
           Set SHP2 = Nothing
        Else
           SET_RES_XL1 = True
           WS3.Cells(R3, 1).Value = WS1.Shapes(J).TopLeftCell.Row
           WS3.Cells(R3, 3).Value = "Change"
           WS3.Cells(R3, 5).Value = "'" & W_STR1
           WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF1STTAG)
           R3 = R3 + 1
           WS3.Cells(R3, 2).Value = WS2.Shapes(L).TopLeftCell.Row
           WS3.Cells(R3, 3).Value = "Change"
           WS3.Cells(R3, 5).Value = "'" & W_STR2
           WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF2NDTAG)
           
           With WS4.Shapes(L).Fill
              .ForeColor.SchemeColor = 51
              .Patterned msoPatternLargeGrid
           End With
           
           R3 = R3 + 1
        End If
     Else
        SET_RES_XL1 = True
        WS3.Cells(R3, 1).Value = WS1.Shapes(J).TopLeftCell.Row
        WS3.Cells(R3, 3).Value = "Delete"
        WS3.Cells(R3, 5).Value = "'" & W_STR1
        WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF1STTAG)
        R3 = R3 + 1
     End If
L_NEXT1:
  Next J

  For J = 1 To WS2.Shapes.count
     W_LEN = -1
     On Error Resume Next
     W_LEN = WS2.Shapes(J).TextFrame.Characters.count
     On Error GoTo 0
     If W_LEN = -1 Then
        GoTo L_NEXT2
     End If
     W_STR2 = ""
     If W_LEN > 0 Then
        For K = 0 To Int(W_LEN / 255)
           W_ST = K * 255 + 1
           If (K + 1) * 255 <= W_LEN Then
              W_BYTE = 255
           Else
              W_BYTE = W_LEN - K * 255
           End If
           W_STR2 = W_STR2 & WS2.Shapes(J).TextFrame.Characters(W_ST, W_BYTE).text
           If (K + 1) * 255 = W_LEN Then
              Exit For
           End If
        Next K
     End If
     
     SW_MATCH = False
     For L = 1 To WS1.Shapes.count
        If WS1.Shapes(L).ID = WS2.Shapes(J).ID Then
           SW_MATCH = True
           Exit For
        End If
     Next L
     
     If SW_MATCH = True Then
     Else
        SET_RES_XL1 = True
        WS3.Cells(R3, 2).Value = WS2.Shapes(J).TopLeftCell.Row
        WS3.Cells(R3, 3).Value = "Add"
        WS3.Cells(R3, 5).Value = "'" & W_STR2
        WS3.Cells(R3, 5).Interior.ColorIndex = CLng(W_DF2NDTAG)
        
        With WS4.Shapes(J).Fill
           .ForeColor.SchemeColor = 51
           .Patterned msoPatternLargeGrid
        End With
        
        R3 = R3 + 1
     End If
L_NEXT2:
  Next J

  WS3.Rows(4).AutoFilter
  WS3.Activate
  WS3.Rows(5).Select
  ActiveWindow.FreezePanes = True
  WS3.Cells(1, 1).Select
  ActiveSheet.UsedRange

End Function

Private Sub WS_LINE_DIFF(ByVal W_STR1 As String, ByVal W_STR2 As String, WS1 As Worksheet, WS2 As Worksheet, WS3 As Worksheet, WS4 As Worksheet, ByVal R3 As Long, ByVal WS1R As Long, ByVal WS2R As Long)

  Dim W_STR As String
  Dim W_STRSTC As String
  Dim W_STREDC As String
  Dim RE As Object
  Dim W_DFT As String
  Dim SW_LOOP As Boolean
  
  Dim STS As Long
  Dim STE As Long
  
  
  Call MAKE_DIC_XL2(W_STR1, W_STR2)

  '|fffd|s|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  STS = 0
  STE = 0
  Call DTCT_DIFF(STS, STE)
  
  SW_END = False
  SW_BL1EX = False

  '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||20a|O|fffd|j
  If STS = 0 And _
     STE = 0 Then
  Else
     SW_LOOP = DTCT_SAME(False, STS, STE)
     If SW_SDCAN = True Then
        SW_SDCAN = False
        Application.ScreenUpdating = True
        Exit Sub
     End If
  End If
  
  W_STR = Join$(AR_LK2, "")
  If W_STR = String$(Len(W_STR), " ") Then
     SW_END = True
  Else
     W_STR = Join$(AR_RK2, "")
     If W_STR = String$(Len(W_STR), ".") Then
        SW_END = True
     End If
  End If
  
  If SW_END = False Then
     If SW_LOOP = False Then
        If SW_BL1EX = True Then
           Call DTCT_BSAME
        End If
        SW_END = True
     End If
  End If
  
  '|fffd||fffd||70d|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_ASAME
  End If
  
  '90%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(90, False)
  End If
  
  '75%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(75, False)
  End If
  
  '50%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(50, False)
  End If
  
  '25%|fffd||fffd|v|fffd|s|fffd||fffd||fffd|o
  If SW_END = False Then
     Call DTCT_PSAME(25, False)
  End If
  
  '|fffd||fffd|v|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|o|fffd|i|fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd|P|fffd|s|fffd|u|fffd||fffd||fffd|b|fffd|N|fffd|j
  If SW_END = False Then
     If SW_BL1EX = True Then
        Call DTCT_BSAME
     End If
  End If

  Set DIC2 = Nothing

  '|fffd||fffd||fffd||283|Z|fffd|b|fffd|g
  Call SET_RES_XL2(WS1, WS2, WS3, WS4, R3, WS1R, WS2R)

End Sub

Private Sub MAKE_DIC_XL2(ByVal W_STR1 As String, W_STR2 As String)

  Dim DIC1 As Object
  Dim D1 As Variant
  
  Dim R As Long
  Dim C As Long
  Dim D As Long

  Dim W_STR As String
  Dim W_LN As Long

  Dim AR_WK As Variant


  AR_WK = Split(W_STR1, Chr$(2))
  W_ED1 = UBound(AR_WK)
  ReDim AR_1ST(W_ED1)
  For R = 1 To W_ED1
     AR_1ST(R) = AR_WK(R - 1)
  Next R
  
  AR_WK = Split(W_STR2, Chr$(2))
  W_ED2 = UBound(AR_WK)
  ReDim AR_2ND(W_ED2)
  For R = 1 To W_ED2
     AR_2ND(R) = AR_WK(R - 1)
  Next R
  
  Set DIC1 = CreateObject("Scripting.Dictionary")
  D = 0
  
  W_ED1 = W_ED1 + 1
  
  ReDim AR_LK(W_ED1)
  ReDim AR_LK2(W_ED1)
  ReDim AR_LSR(W_ED1)
  
  For R = 1 To W_ED1
     If R = W_ED1 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_1ST(R)
     ElseIf W_STC = 0 Then
        If Len(AR_1ST(R)) >= W_EDC Then
           W_STR = Left$(AR_1ST(R), W_EDC)
        Else
           W_STR = AR_1ST(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_1ST(R)) + 1 Then
           W_STR = Mid$(AR_1ST(R), W_STC, Len(AR_1ST(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_1ST(R)) + 1 And _
           W_EDC < Len(AR_1ST(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_1ST(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If W_STR = String$(Len(W_STR), " ") Then
        W_STR = " "
     End If
     
     If R = W_ED1 Then
        D = D + 1
        DIC1.Add Chr$(1), D
        AR_LK(R) = D
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_LK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_LK(R) = D
     End If
     AR_LK2(R) = AR_LK(R)
  Next R

  W_ED2 = W_ED2 + 1
  
  ReDim AR_RK(W_ED2)
  ReDim AR_RK2(W_ED2)
  ReDim AR_RKS(W_ED2)
  
  ReDim AR_LR1(W_ED1)
  ReDim AR_LR2(W_ED1)
  For R = 1 To W_ED1
     AR_LR1(R) = 1
     AR_LR2(R) = W_ED2
  Next R
  
  W_LN = 1
  
  For R = 1 To W_ED2
     If R = W_ED2 Then
        W_STR = ""
     ElseIf W_STC = 0 And _
        W_EDC = 0 Then
        W_STR = AR_2ND(R)
     ElseIf W_STC = 0 Then
        If Len(AR_2ND(R)) >= W_EDC Then
           W_STR = Left$(AR_2ND(R), W_EDC)
        Else
           W_STR = AR_2ND(R)
        End If
     ElseIf W_EDC = 0 Then
        If W_STC < Len(AR_2ND(R)) + 1 Then
           W_STR = Mid$(AR_2ND(R), W_STC, Len(AR_2ND(R)) - W_STC + 1)
        Else
           W_STR = ""
        End If
     Else
        If W_STC < Len(AR_2ND(R)) + 1 And _
           W_EDC < Len(AR_2ND(R)) + 1 And _
           W_EDC - W_STC + 1 > 0 Then
           W_STR = Mid$(AR_2ND(R), W_STC, W_EDC - W_STC + 1)
        Else
           W_STR = ""
        End If
     End If
     
     If W_STR = String$(Len(W_STR), " ") Then
        W_STR = " "
     End If
     
     If R = W_ED2 Then
        AR_RK(R) = DIC1(Chr$(1))
     ElseIf DIC1.Exists(W_STR) = True Then
        AR_RK(R) = DIC1(W_STR)
     Else
        D = D + 1
        DIC1.Add W_STR, D
        AR_RK(R) = D
     End If
     AR_RKS(R) = W_LN
     AR_RK2(R) = AR_RK(R)
     W_LN = W_LN + Len(AR_RK(R)) + 1
  Next R
  
  Set DIC2 = CreateObject("Scripting.Dictionary")
  
  For Each D1 In DIC1
     DIC2.Add CStr(DIC1(D1)), D1
  
     W_STR = LTrim$(D1)
  Next
  
  Set DIC1 = Nothing

  AR_LK2(W_ED1) = " "
  AR_RK2(W_ED2) = "."
  AR_LSR(W_ED1) = W_ED2

End Sub

Private Sub SET_RES_XL2(WS1 As Worksheet, WS2 As Worksheet, WS3 As Worksheet, WS4 As Worksheet, ByVal R3 As Long, ByVal WS1R As Long, ByVal WS2R As Long)

  Dim R As Long
  Dim C1 As Long
  Dim C2 As Long
  Dim AR_WK As Variant
  Dim J As Long

  Dim SW_MINUS As Boolean
  Dim AR_RES As Variant

  Dim S As Long
  Dim RL As Long
  Dim RR As Long
  Dim SW_SKIP1 As Boolean
  Dim SW_SKIP2 As Boolean
  Dim RLB As Long
  Dim RLA As Long
  
  Dim RNG1 As Range
  Dim RNG2 As Range
  Dim K As Long
  Dim SW_BD As Boolean
  Dim SW_IT As Boolean
  Dim SW_UL As Boolean
  Dim SW_ST As Boolean
  Dim SW_CL As Boolean
  
  
  C1 = 5
  C2 = 5
  
  RR = 1
  SW_SKIP1 = False
  SW_SKIP2 = False
  RLB = 0
  
  For RL = 1 To W_ED1
     SW_MINUS = False
     If AR_LSR(RL) < 0 Then
        SW_MINUS = True
        AR_LSR(RL) = (-1) * AR_LSR(RL)
     End If
     
     If AR_LSR(RL) = 0 And _
        SW_SKIP2 = False Then
        SW_SKIP1 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR(RL) > RL And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     ElseIf AR_LSR(RL) > RR And _
        SW_SKIP1 = False And _
        SW_SKIP2 = False Then
        
        SW_SKIP2 = True
        If RLB = 0 Then
           RLB = RL
        End If
     End If
     
     If AR_LSR(RL) = 0 Then
     Else
        RLA = RL
        
        If SW_SKIP1 = True Then
           RL = RLB
           For S = RLB To RLA - 1
              C1 = C1 + 1
              With WS3
                 If AR_1ST(S) <> "" Then
                    .Cells(R3, C1).Value = "'" & AR_1ST(S)
                 End If
                 .Cells(R3, C1).Interior.ColorIndex = CLng(W_DF1STTAG)
              End With
              C2 = C2 + 1
              RL = RL + 1
           Next S
           
           For S = RR To AR_LSR(RLA) - 1
              C2 = C2 + 1
              With WS3
                 If AR_2ND(S) <> "" Then
                    .Cells(R3 + 1, C2).Value = "'" & AR_2ND(S)
                 End If
                 .Cells(R3 + 1, C2).Interior.ColorIndex = CLng(W_DF2NDTAG)
              End With
              
              With WS4.Cells(WS2R, S).Interior
                 .ColorIndex = 6
                 .Pattern = xlGrid
                 .PatternColorIndex = 44
              End With
              
              C1 = C1 + 1
              RR = RR + 1
           Next S
        End If

        If SW_SKIP2 = True Then
           RL = RLB
           For S = RR To AR_LSR(RLB) - 1
              C2 = C2 + 1
              With WS3
                 If AR_2ND(S) <> "" Then
                    .Cells(R3 + 1, C2).Value = "'" & AR_2ND(S)
                 End If
                 .Cells(R3 + 1, C2).Interior.ColorIndex = CLng(W_DF2NDTAG)
              End With
              
              With WS4.Cells(WS2R, S).Interior
                 .ColorIndex = 6
                 .Pattern = xlGrid
                 .PatternColorIndex = 44
              End With
              
              C1 = C1 + 1
              RR = RR + 1
           Next S
        End If
        
        If RL = W_ED1 Then
           Exit For
        End If

        If SW_MINUS = False Then
           SW_BD = False
           SW_IT = False
           SW_UL = False
           SW_ST = False
           SW_CL = False
           
           Set RNG1 = WS1.Cells(WS1R, RL)
           Set RNG2 = WS2.Cells(WS2R, AR_LSR(RL))
                 
           If IsNull(RNG1.Font.Bold) = True And _
              IsNull(RNG2.Font.Bold) = True Then
              For K = 1 To Len(AR_1ST(RL))
                 If RNG1.Characters(K, 1).Font.Bold = RNG2.Characters(K, 1).Font.Bold Then
                 Else
                    SW_BD = True
                    Exit For
                 End If
              Next K
           Else
              If RNG1.Font.Bold = RNG2.Font.Bold Then
              Else
                 SW_BD = True
              End If
           End If
           If SW_BD = True Then
              SW_MINUS = True
              GoTo L_SET
           End If
                 
           If IsNull(RNG1.Font.Italic) = True And _
              IsNull(RNG2.Font.Italic) = True Then
              For K = 1 To Len(AR_1ST(RL))
                 If RNG1.Characters(K, 1).Font.Italic = RNG2.Characters(K, 1).Font.Italic Then
                 Else
                    SW_IT = True
                    Exit For
                 End If
              Next K
           Else
              If RNG1.Font.Italic = RNG2.Font.Italic Then
              Else
                 SW_IT = True
              End If
           End If
           If SW_IT = True Then
              SW_MINUS = True
              GoTo L_SET
           End If
          
           If IsNull(RNG1.Font.Underline) = True And _
              IsNull(RNG2.Font.Underline) = True Then
              For K = 1 To Len(AR_1ST(RL))
                 If RNG1.Characters(K, 1).Font.Underline = RNG2.Characters(K, 1).Font.Underline Then
                 Else
                    SW_UL = True
                    Exit For
                 End If
              Next K
           Else
              If RNG1.Font.Underline = RNG2.Font.Underline Then
              Else
                 SW_UL = True
              End If
           End If
           If SW_UL = True Then
              SW_MINUS = True
              GoTo L_SET
           End If
          
           If IsNull(RNG1.Font.Strikethrough) = True And _
              IsNull(RNG2.Font.Strikethrough) = True Then
              For K = 1 To Len(AR_1ST(RL))
                 If RNG1.Characters(K, 1).Font.Strikethrough = RNG2.Characters(K, 1).Font.Strikethrough Then
                 Else
                    SW_ST = True
                    Exit For
                 End If
              Next K
           Else
              If RNG1.Font.Strikethrough = RNG2.Font.Strikethrough Then
              Else
                 SW_ST = True
              End If
           End If
           If SW_ST = True Then
              SW_MINUS = True
              GoTo L_SET
           End If
          
           If IsNull(RNG1.Font.Color) = True And _
              IsNull(RNG2.Font.Color) = True Then
              For K = 1 To Len(AR_1ST(RL))
                 If RNG1.Characters(K, 1).Font.Color = RNG2.Characters(K, 1).Font.Color Then
                 Else
                    SW_CL = True
                    Exit For
                 End If
              Next K
           Else
              If RNG1.Font.Color = RNG2.Font.Color Then
              Else
                 SW_CL = True
              End If
           End If
           If SW_CL = True Then
              SW_MINUS = True
              GoTo L_SET
           End If
       
           Set RNG1 = Nothing
           Set RNG2 = Nothing
        End If

L_SET:
        If SW_MINUS = False Then
           C1 = C1 + 1
           With WS3
              If AR_1ST(RL) <> "" Then
                 .Cells(R3, C1).Value = "'" & AR_1ST(RL)
              End If
           End With
           C2 = C2 + 1
        Else
           With WS3
              C1 = C1 + 1
              If AR_1ST(RL) <> "" Then
                 .Cells(R3, C1).Value = "'" & AR_1ST(RL)
              End If
              C2 = C2 + 1
              If AR_2ND(AR_LSR(RL)) <> "" Then
                 .Cells(R3 + 1, C2).Value = "'" & AR_2ND(AR_LSR(RL))
              End If
              
              If SW_BD = True Or _
                 SW_IT = True Or _
                 SW_UL = True Or _
                 SW_ST = True Or _
                 SW_CL = True Then
                 Set RNG1 = WS1.Cells(WS1R, RL)
                 Set RNG2 = WS2.Cells(WS2R, AR_LSR(RL))
                          
                 For K = 1 To Len(AR_1ST(RL))
                    .Cells(R3, C1).Characters(K, 1).Font.Bold = RNG1.Characters(K, 1).Font.Bold
                    .Cells(R3, C1).Characters(K, 1).Font.Italic = RNG1.Characters(K, 1).Font.Italic
                    .Cells(R3, C1).Characters(K, 1).Font.Underline = RNG1.Characters(K, 1).Font.Underline
                    .Cells(R3, C1).Characters(K, 1).Font.Strikethrough = RNG1.Characters(K, 1).Font.Strikethrough
                    .Cells(R3, C1).Characters(K, 1).Font.Color = RNG1.Characters(K, 1).Font.Color
                 Next K
                 For K = 1 To Len(AR_2ND(AR_LSR(RL)))
                    .Cells(R3 + 1, C2).Characters(K, 1).Font.Bold = RNG2.Characters(K, 1).Font.Bold
                    .Cells(R3 + 1, C2).Characters(K, 1).Font.Italic = RNG2.Characters(K, 1).Font.Italic
                    .Cells(R3 + 1, C2).Characters(K, 1).Font.Underline = RNG2.Characters(K, 1).Font.Underline
                    .Cells(R3 + 1, C2).Characters(K, 1).Font.Strikethrough = RNG2.Characters(K, 1).Font.Strikethrough
                    .Cells(R3 + 1, C2).Characters(K, 1).Font.Color = RNG2.Characters(K, 1).Font.Color
                 Next K
              End If
              
              .Cells(R3, C1).Interior.ColorIndex = CLng(W_DF1STTAG)
              .Cells(R3 + 1, C2).Interior.ColorIndex = CLng(W_DF2NDTAG)
           End With
        
           With WS4.Cells(WS2R, AR_LSR(RL)).Interior
              .ColorIndex = 6
              .Pattern = xlGrid
              .PatternColorIndex = 44
           End With
        End If
        
        RR = AR_LSR(RL) + 1
        SW_SKIP1 = False
        SW_SKIP2 = False
        RLB = 0
     End If
  Next RL

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Option Compare Text
'|fffd||598|A|fffd|t|fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||143|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
#If Win64 Then
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#Else
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function IsUserAnAdmin Lib "shell32.dll" Alias "#680" () As Boolean
#Else
Private Declare Function IsUserAnAdmin Lib "shell32.dll" Alias "#680" () As Boolean
#End If

#If Win64 Then
Private Declare PtrSafe Function DwmIsCompositionEnabled Lib "dwmapi" (ByRef pfEnabled As Long) As Long
#Else
Private Declare Function DwmIsCompositionEnabled Lib "dwmapi" (ByRef pfEnabled As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Private Type SYSTEM_INFO
  wProcessorArchitecture As Integer
  wReserved As Integer
  dwPageSize As Long
  lpMinimumApplicationAddress As LongPtr
  lpMaximumApplicationAddress As LongPtr
  dwActiveProcessorMask As LongPtr
  dwNumberOfProcessors As Long
  dwProcessorType As Long
  dwAllocationGranularity As Long
  wProcessorLevel As Integer
  wProcessorRevision As Integer
End Type
#Else
Private Declare Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Private Type SYSTEM_INFO
  dwOemId As Long
  dwPageSize As Long
  lpMinimumApplicationAddress As Long
  lpMaximumApplicationAddress As Long
  dwActiveProcessorMask As Long
  dwNumberOfProcessors As Long
  dwProcessorType As Long
  dwAllocationGranularity As Long
  wProcessorLevel As Integer
  wProcessorRevision As Integer
End Type
#End If

Dim SW_AI As Boolean

Private Sub Workbook_Open()
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OSV As String
  Dim I As Long
  Dim W_README As String
  Dim W_GREP As String
  
  Dim W_LONG As Long
  Dim SW_AERO As Boolean
  
  Dim FSO As Object
  Dim MSOPATH As String
  Dim XL2010V As String
  
  Dim P As Long
  Dim XL1 As Application
  
  Dim SYSTEM As SYSTEM_INFO
  Dim SW_UPD As Boolean
  
  
  Call INST_CHK_RTN

  '|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
  If Dir(W_DIR & "\e") <> "" Then
     SW_ENGLISH = True
  Else
     If Dir(W_DIR2 & "\e") <> "" Then
        SW_ENGLISH = True
     End If
  End If
  
  If Dir(W_DIR & "\inst") <> "" Then
     Call INST_AFT_RTN
  Else
     If Dir(W_DIR2 & "\inst") <> "" Then
        W_ADPATH = W_ADPATH2
        W_DIR = W_DIR2
        Call INST_AFT_RTN
     End If
  End If
  
  SW_UPD = False
  
  '|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd|
  If Dir(ThisWorkbook.path & "\auto.vbs") <> "" Then
     Kill ThisWorkbook.path & "\auto.vbs"
     SW_UPD = True
     SW_INST = True
  End If
  
  '|fffd|X|fffd|V|fffd||fffd|
  If Dir(ThisWorkbook.path & "\upd.vbs") <> "" Then
     Kill ThisWorkbook.path & "\upd.vbs"
     SW_UPD = True
     SW_INST = True
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\midx*.vbs") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\midx*.vbs")
        On Error GoTo 0
     End If
     If Dir(ThisWorkbook.path & "\sidx*.vbs") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\sidx*.vbs")
        On Error GoTo 0
     End If
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\grep*.vbs")
        On Error GoTo 0
     End If
     If Dir(ThisWorkbook.path & "\idx*.vbs") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\idx*.vbs")
        On Error GoTo 0
     End If
     If Dir(ThisWorkbook.path & "\bgf*.*") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\bgf*.*")
        On Error GoTo 0
     End If
     If Dir(ThisWorkbook.path & "\pwc*.vbs") <> "" Then
        On Error Resume Next
        Kill (ThisWorkbook.path & "\pwc*.vbs")
        On Error GoTo 0
     End If
  End If
  Set XL1 = Nothing
  
  'Excel2013|fffd||20d|~
  If Val(Application.Version) >= 15 Then
     If Dir(ThisWorkbook.path & "\grep1.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep2.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep3.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep4.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep5.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep6.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep7.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep8.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grep9.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grepA.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grepB.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\grepD.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\midx0.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\midx.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\sidx0.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\sidx.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\idx.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\bgf.vbs") <> "" Or _
        Dir(ThisWorkbook.path & "\pwc.vbs") <> "" Then
        Call EXCEL2013APPHIDE
        SW_INST = True
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h
  If Application.Visible = False Then
     SW_INST = True
  End If
  
  '|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd|
  If SW_INST = True Or _
     SW_AI = True Then
     
     W_EXCNT = 0
     If ThisWorkbook.ReadOnly = True Then
        Call CNT_READ_RTN
     End If
     W_EXCNT = W_EXCNT + 1
     Call CNT_WRITE_RTN
        
     Call SETTING_DFT
     If Application.Visible = False Then
        SW_MM = False
     End If
     
     If Dir(W_INI) <> "" Then
        SW_OPEN = True
        Call INI_READ_RTN
     Else
     '|fffd||fffd||fffd||fffd|N|fffd||fffd|
        If Dir(W_DIR & "\e") <> "" Then
           Kill W_DIR & "\e"
        Else
           If Dir(W_DIR2 & "\e") <> "" Then
              Kill W_DIR2 & "\e"
           End If
        End If
            
        If SW_ENGLISH = True Then
           W_RET = MsgBox(" Is function that use internet on?" & vbCrLf & _
                          "(You can change the setting later.)", vbYesNo + vbInformation, "Regular Expression Find")
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||290|M|fffd|n|fffd||30b|@|fffd|\|fffd||fffd|S|fffd||117|L|fffd||fffd||fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf & _
                          "|fffd|i|fffd||752||fffd||34c||fffd||155||3cd|X|fffd||142||fffd||fffd||702||fffd||fffd|B|fffd|j", vbYesNo + vbInformation, "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|")
        End If
            
        If W_RET = vbYes Then
           SW_NETALLOFF = False
        Else
           SW_NETALLOFF = True
        End If
     
        'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
        Set Locator = CreateObject("WbemScripting.SWbemLocator")
        Set Service = Locator.ConnectServer
        Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
        For Each os In OsSet
           W_OSV = os.Version
        Next os
        Set Service = Nothing
        Set OsSet = Nothing
        Set Locator = Nothing
     
        If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Then
        Else
           SW_MEIRYO = True
        End If
        
        If Dir(ThisWorkbook.path & "\inst.vbs") <> "" Then
           Kill ThisWorkbook.path & "\inst.vbs"
        End If
     
        If ThisWorkbook.path = W_DIR Or _
           ThisWorkbook.path = W_DIR2 Then
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Has completed install." & vbCrLf & _
                             "Show Regular Expression Find dialog by Ctrl+Shift+R." & vbCrLf & vbCrLf & _
                             ThisWorkbook.path & vbCrLf & vbCrLf & _
                             "Because copied to, you may delete files that you executed.", _
                             vbInformation)
           Else
              W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "Ctrl+Shift+R|fffd||150||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf & _
                             ThisWorkbook.path & vbCrLf & vbCrLf & _
                             "|fffd||243|R|fffd|s|fffd|[|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||34d||d3dc||fffd||fffd||fffd||102||fffd||fffd|\|fffd||fffd||fffd||702||fffd||fffd||fffd|B", _
                             vbInformation)
           End If
        Else
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Has completed install." & vbCrLf & _
                             "Show Regular Expression Find dialog by Ctrl+Shift+R.", _
                             vbInformation)
           Else
              W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "Ctrl+Shift+R|fffd||150||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", _
                             vbInformation)
           End If
        End If
     
        Call INI_WRITE_RTN
        
        SW_INST = True
     End If
        
     W_STRVER = ""
     If SW_UPDCHK = False And _
        SW_NETALLOFF = False Then
        Call VER_GET_RTN1
     End If
        
     Call OPEN_SETTING
             
     'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     For Each os In OsSet
        W_OSV = os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
     
     On Error Resume Next
     DwmIsCompositionEnabled W_LONG
     SW_AERO = CBool(W_LONG)
     On Error GoTo 0
     
     If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Or _
        SW_AERO = False Then
        W_TP0 = 5
     Else
        W_TP0 = 1
     End If
     
     W_MAXP = 5
     
     If Application.Visible = False Then
        W_GREP = ThisWorkbook.path & "\bgf.vbs"
        If Dir(W_GREP) <> "" Then
           Kill W_GREP
           W_GREP = ThisWorkbook.path & "\bgf2.vbs"
           Open W_GREP For Output As #1
           Close #1
           Call HIDE_BGF
        End If
        
        W_GREP = ThisWorkbook.path & "\idx.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_IDX
           Kill W_GREP
              
           Call CNT_READ_RTN
           W_EXCNT = W_EXCNT - 1
           Call CNT_WRITE_RTN
           
           Application.Quit
        End If
        
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grep5_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREP5:
              On Error GoTo L_GREP5_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP1(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P

        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grep6_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREP6:
              On Error GoTo L_GREP6_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP2(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P

        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grep7_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREP7:
              On Error GoTo L_GREP7_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP3(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P

        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grep8_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREP8:
              On Error GoTo L_GREP8_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP4(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
     
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grep9_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREP9:
              On Error GoTo L_GREP9_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP5(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
     
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\grepA_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
L_GREPA:
              On Error GoTo L_GREPA_ERR
              Kill W_GREP
              On Error GoTo 0
              Call HS_GREP6(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
     
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\midx_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
              On Error Resume Next
              Kill W_GREP
              On Error GoTo 0
              Call HS_MIDX(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
     
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\sidx_" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
              On Error Resume Next
              Kill W_GREP
              On Error GoTo 0
              Call HS_SIDX(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
     
        For P = 1 To W_MAXP
           W_GREP = ThisWorkbook.path & "\pwc" & P & ".vbs"
           If Dir(W_GREP) <> "" Then
              On Error Resume Next
              Kill W_GREP
              On Error GoTo 0
              Call PWC(P)
              
              Call CNT_READ_RTN
              W_EXCNT = W_EXCNT - 1
              Call CNT_WRITE_RTN
              
              Application.Quit
           End If
        Next P
        
        W_GREP = ThisWorkbook.path & "\grep1.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP1
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\grep2.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP2
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\grep3.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP3
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\grep4.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP4
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\grepB.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP5
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\grepD.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_GREP6
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\midx0.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_MIDX
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
        W_GREP = ThisWorkbook.path & "\sidx0.vbs"
        If Dir(W_GREP) <> "" Then
           Call HIDE_SIDX
           On Error Resume Next
           Kill W_GREP
           On Error GoTo 0
           Exit Sub
        End If
     End If

     If Val(Application.Version) >= 15 Then
        If Application.Visible = True And _
           SW_UPD = False Then
           If SW_BAR = True Then
              Call BAR15_TM_STR
           End If
        End If
     End If
     
     If SW_AI = False Then
        If SW_STOPBGF2 = False Then
           Call BGFK_TM_STR
        End If
     End If
     
     If SW_STOPBGIU = False Then
        Call GetSystemInfo(SYSTEM)
        If SYSTEM.dwNumberOfProcessors > 1 And _
           SW_HSGREP = True And _
           SW_UPD = False Then
           Call IXUK_TM_STR
        End If
     End If
  '|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd|
  Else
     Call SETTING_DFT
           
     If Dir(W_INI) <> "" Then
        SW_OPEN = True
        Call INI_READ_RTN
        SW_TEMP = True
        Call OPEN_SETTING
     Else
        W_RET = MsgBox("Language? Yes then English, No then Japanese.", vbYesNo + vbInformation)
        If W_RET = vbYes Then
           SW_ENGLISH = True
        Else
           SW_ENGLISH = False
        End If
     
        'readme|fffd|`|fffd|F|fffd|b|fffd|N
        W_README = ThisWorkbook.path & "\readme.txt"
  
        If Dir(W_README) = "" Then
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Try Regular Expression Find.", vbOKCancel + vbInformation)
           Else
              W_RET = MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
           End If
           If W_RET = vbOK Then
              SW_TRY = True
       
              Call SETTING_DFT
     
              'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
              Set Locator = CreateObject("WbemScripting.SWbemLocator")
              Set Service = Locator.ConnectServer
              Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
              For Each os In OsSet
                 W_OSV = os.Version
              Next os
              Set Service = Nothing
              Set OsSet = Nothing
              Set Locator = Nothing
     
              If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Then
              Else
                 SW_MEIRYO = True
              End If
     
              If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Or _
                 SW_AERO = False Then
                 W_TP0 = 5
              Else
                 W_TP0 = 1
              End If
     
              Call SHOWF_RTN
              Exit Sub
           Else
              ThisWorkbook.Close
           End If
        End If
          
        If Val(Application.Version) = 14 Then
           XL2010V = ""
           Set FSO = CreateObject("Scripting.FileSystemObject")
           MSOPATH = Replace(Application.path, "Microsoft Office", "Common Files\microsoft shared") & "\MSO.dll"
           On Error Resume Next
           XL2010V = FSO.GetFileVersion(MSOPATH)
           On Error GoTo 0
           Set FSO = Nothing
  
           If XL2010V <> "" Then
              If XL2010V < "14.0.7015.1000" Then
                 If SW_ENGLISH = True Then
                    W_RET = MsgBox(W_DIR2 & vbCrLf & vbCrLf & _
                                   "is set trusted locations? No, then you can't install. " & vbCrLf & _
                                   "Continue?", vbOKCancel + vbInformation)
                 Else
                    W_RET = MsgBox(W_DIR2 & vbCrLf & vbCrLf & _
                                   "|fffd||fffd|M|fffd||fffd||fffd||142||fffd||fffd||fffd||a3ca||fffd||250||752||80b5||fffd||102||fffd||fffd||202||fffd||fffd||183|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                   "|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbOKCancel + vbInformation)
                 End If
                 If W_RET = vbOK Then
                 Else
                    ThisWorkbook.Close
                 End If
              End If
           End If
        End If
     
        'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
        Set Locator = CreateObject("WbemScripting.SWbemLocator")
        Set Service = Locator.ConnectServer
        Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
        For Each os In OsSet
           W_OSV = os.Version
        Next os
        Set Service = Nothing
        Set OsSet = Nothing
        Set Locator = Nothing
     
        If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) >= 6 Then
           If IsUserAnAdmin() Then
              If SW_ENGLISH = True Then
                 W_RET = MsgBox("Executed by admin authority. Continue?", vbOKCancel + vbInformation)
              Else
                 W_RET = MsgBox("|fffd||1d7||fffd||fffd||48c||fffd||fffd||fffd||fffd||14e||fffd||fffd|s|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbOKCancel + vbInformation)
              End If
              If W_RET = vbOK Then
              Else
                 ThisWorkbook.Close
              End If
           End If
        End If
     
        If SW_ENGLISH = True Then
           W_RET = MsgBox("Install Regular Expression Find.", vbOKCancel + vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
        End If
        If W_RET = vbOK Then
           INST_RTN
        Else
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Use temporarily without install.", vbOKCancel + vbInformation)
           Else
              W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||a39e||fffd|I|fffd||24e|g|fffd|p|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
           End If
           If W_RET = vbOK Then
              SW_TEMP = True
              Call SETTING_DFT
           
              '|fffd||fffd||fffd||fffd|N|fffd||fffd|
              If SW_ENGLISH = True Then
                 W_RET = MsgBox(" Is function that use internet on?" & vbCrLf & _
                                "(You can change the setting later.)", vbYesNo + vbInformation, "Regular Expression Find")
              Else
                 W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd||290|M|fffd|n|fffd||30b|@|fffd|\|fffd||fffd|S|fffd||117|L|fffd||fffd||fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf & _
                                "|fffd|i|fffd||752||fffd||34c||fffd||155||3cd|X|fffd||142||fffd||fffd||702||fffd||fffd|B|fffd|j", vbYesNo + vbInformation, "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|")
              End If
            
              If W_RET = vbYes Then
                 SW_NETALLOFF = False
              Else
                 SW_NETALLOFF = True
              End If
     
              If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Then
              Else
                 SW_MEIRYO = True
              End If
     
              If CLng(Left$(W_OSV, InStr(W_OSV, ".") - 1)) < 6 Or _
                 SW_AERO = False Then
                 W_TP0 = 5
              Else
                 W_TP0 = 1
              End If
        
              Call OPEN_SETTING
           Else
              ThisWorkbook.Close
           End If
        End If
     End If
  End If

  Exit Sub
  
L_GREP5_ERR:
  Resume L_GREP5
  
L_GREP6_ERR:
  Resume L_GREP6

L_GREP7_ERR:
  Resume L_GREP7
  
L_GREP8_ERR:
  Resume L_GREP8

L_GREP9_ERR:
  Resume L_GREP9

L_GREPA_ERR:
  Resume L_GREPA
  
End Sub

Private Sub OPEN_SETTING()

  If W_KEYF <> "" Then
     W_ONKEYF = SET_ONKEY(SW_SHIFTF, SW_CTRLF, SW_ALTF, W_KEYF, False)
     Application.OnKey W_ONKEYF, "SHOWF_RTN"
  Else
     W_ONKEYF = SET_ONKEY(SW_SHIFTF, SW_CTRLF, SW_ALTF, W_KEYF, True)
     Application.OnKey W_ONKEYF, "SHOWF_RTN"
  End If
  If W_KEYR <> "" Then
     W_ONKEYR = SET_ONKEY(SW_SHIFTR, SW_CTRLR, SW_ALTR, W_KEYR, False)
     Application.OnKey W_ONKEYR, "SHOWR_RTN"
  End If

  If Val(Application.Version) >= 15 Then
  Else
     Call RMENU_DEL
     Call RMENU_ADD
  End If

  SW_AUTOUPD = False

  Application.ScreenUpdating = False
  On Error Resume Next
  AppActivate (Application.Caption)
  On Error GoTo 0
  Application.ScreenUpdating = True

  If Val(Application.Version) >= 15 Then
     Call RMENU_DEL
     Call RMENU_ADD
  End If

End Sub

Private Sub Workbook_AddinInstall()
 
  If SW_AUTOUPD = False Then
     W_NAME = Left$(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
     W_INI = ThisWorkbook.path & "\" & W_NAME & ".ini"
     If Dir(W_INI) <> "" Then
        Call INI_READ_RTN
        If SW_BAR = True Then
           Call MK_BAR
        End If
     End If
  End If

  SW_AI = True

  Call REGISTER

  Call CB_DEL

End Sub

Private Sub Workbook_AddinUninstall()
   
  Call CB_DEL
  
  If Dir(ThisWorkbook.path & "\inst.vbs") <> "" Then
     Exit Sub
  End If
  
  Call INI_WRITE_RTN

#If Win64 Then
#Else
  Call UNREGISTER2
  SW_AU = True
#End If

  Call NRUNREG

  Call RMENU_DEL
  If SW_AUTOUPD = False Then
     Call RMV_BAR
  End If

  If W_ONKEYF <> "" Then
     Application.OnKey W_ONKEYF
  End If
  If W_ONKEYR <> "" Then
     Application.OnKey W_ONKEYR
  End If

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)

  Dim XL1 As Object
  Dim W_IDXC As String
  Dim B As Long
  Dim W_CNT As Long
  Dim NRE As Object
  
  
  SW_WBC = True
   
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Exit Sub
  ElseIf W_PNO > 0 Then
     Exit Sub
  End If
   
  If Dir(ThisWorkbook.path & "\pwc*.vbs") <> "" Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Analyzing password. Stop?", vbYesNo + vbQuestion)
     Else
        W_RET = MsgBox("|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||352||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
     End If
     If W_RET = vbYes Then
        Open ThisWorkbook.path & "\pwcC.vbs" For Output As #1
        Close #1
     Else
        Cancel = True
        Exit Sub
     End If
  End If
   
  On Error GoTo L_ERR
  Set XL1 = GetObject(, "Excel.Application")
  On Error GoTo 0
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\bgf2.vbs") <> "" Then
        W_IDXC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_IDXC For Output As #1
        Close #1
     End If
     
     If Dir(ThisWorkbook.path & "\idx.vbs") <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
     End If
  ElseIf Application.Visible = True Then
     On Error GoTo L_ERR
     W_CNT = 0
     Do While Not (XL1 Is Application)
        If XL1.Visible = True Then
           Exit Do
        End If
        If W_CNT > 10 Then
           Exit Do
        End If
        For B = XL1.Workbooks.count To 1 Step -1
           XL1.Workbooks(B).Close False
        Next B
        XL1.Quit
        DoEvents
        Set XL1 = Nothing
        Set XL1 = GetObject(, "Excel.Application")
        DoEvents
        W_CNT = W_CNT + 1
     Loop
     On Error GoTo 0
  End If
  Set XL1 = Nothing
  
  Call CB_DEL
  Call RMENU_DEL
  Call NRUNREG
  
  If Dir(ThisWorkbook.path & "\inst.vbs") <> "" Then
     Exit Sub
  End If
  
  If Dir(W_DIR & "\inst.vbs") <> "" Then
     Exit Sub
  End If
  
  If SW_INST = True Or _
     SW_TEMP = True Or _
     SW_AI = True Then
     Call CNT_READ_RTN
     
     If Application.Visible = True Then
        Call INI_WRITE_RTN
     End If
     
     W_EXCNT = W_EXCNT - 1
     Call CNT_WRITE_RTN
     
     Call KILL_XLB
     
     '|fffd||fffd||fffd||fffd||fffd|X|fffd|V
     If SW_AUTOUPD = True Then
        Call ResetHook
        Call AUTO_WRITE_RTN
        Call NRTASK(NRE, ThisWorkbook.path & "\auto.xla", False)
        Exit Sub
     End If
     
     On Error GoTo L_ERR
     Set XL1 = GetObject(, "Excel.Application")
     On Error GoTo 0
     If XL1 Is Application Then
        On Error Resume Next
        Kill ThisWorkbook.path & "\*.bak"
        On Error GoTo 0
        If SW_ENGLISH = True Then
           On Error Resume Next
           Kill ThisWorkbook.path & "\[Simulation].*"
           On Error GoTo 0
        Else
           On Error Resume Next
           Kill ThisWorkbook.path & "\|fffd|y|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|z.*"
           On Error GoTo 0
        End If
     End If
     Set XL1 = Nothing
     
     '|fffd||d3dc|
     If SW_UNINST = True And _
        SW_TEMP = False Then
        Call ResetHook
        ThisWorkbook.Saved = True
        If ThisWorkbook.ReadOnly = False Then
           ThisWorkbook.ChangeFileAccess Mode:=xlReadOnly
        End If
        Call NRUNREG
        On Error Resume Next
        Kill ThisWorkbook.path & "\*.*"
        On Error GoTo 0
        If Dir(ThisWorkbook.path & "\*.*") = "" Then
           On Error Resume Next
           RmDir ThisWorkbook.path
           On Error GoTo 0
        End If
        W_ADPATH = Left$(ThisWorkbook.path, InStrRev(ThisWorkbook.path, "\"))
        W_NAME = Right$(ThisWorkbook.path, Len(ThisWorkbook.path) - InStrRev(ThisWorkbook.path, "\"))
        
        If Dir(ThisWorkbook.path, vbDirectory) = "" Then
        Else
           If SW_ENGLISH = True Then
              W_RET = MsgBox("There were files that couldn't be deleted.'" & vbCrLf & _
                             "After finishing Excel please delete manually " & vbCrLf & _
                             W_NAME & vbCrLf & _
                             "folder in" & vbCrLf & _
                             Left$(W_ADPATH, Len(W_ADPATH) - 1) & vbCrLf & _
                             "(Click OK, then open the folder.)", vbExclamation)
           Else
              W_RET = MsgBox("|fffd||d3dc||fffd||142||fffd||fffd||202||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||fffd||fffd||8414||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|AExcel|fffd|I|fffd||fffd||fffd||fffd||241|A" & vbCrLf & _
                             Left$(W_ADPATH, Len(W_ADPATH) - 1) & vbCrLf & _
                             "|fffd||fffd|" & vbCrLf & _
                             W_NAME & vbCrLf & _
                             "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||84ee||fffd||14d||d3dc||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd|iOK|fffd||fffd||fffd||fffd||fffd||fffd||fffd||183|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd|J|fffd||fffd||fffd||702||fffd||fffd|B|fffd|j", vbExclamation)
           End If
           '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd|
           W_RET = Shell("explorer.exe " & W_ADPATH, vbNormalFocus)
        End If
     Else
        If SW_VBE = True Then
           Call VBE_OC
        End If
     End If
  End If

L_ERR:

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{69128ABF-CB66-40DA-B009-1A9905FFF2E6}{039F77F6-8E39-4976-823F-BA153EC17697}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Base 1
Option Compare Text
Dim C As Long
Dim AR_CELL As Variant
Dim RE As Object
Dim RE2 As Object
Dim SS As Long
Dim W_1STSR As Long
Dim W_1STSC As Long
Dim AR_SELS() As Long
Dim IDX As Long
Dim W_1STFIDX As Long
Dim W_1STFS As Long
Dim W_1STFR As Long
Dim W_1STFC As Long
Dim SW_ERR_FRML As Boolean
Dim W_1STRIDX As Long
Dim W_1STRS As Long
Dim W_1STRR As Long
Dim W_1STRC As Long
Dim AR_AFC() As Long
Dim AR_AFA() As String
Dim SW_SEL As Boolean
Dim W_MAXFML As Long
Dim SW_LGCHG As Boolean
Dim W_CNTSA As Long

Dim W_REPSTRCNV As String
Dim IDXBK As Long
Dim AFSBK As Long
Dim IDXBK2 As Long
Dim AFSBK2 As Long
Dim ASNMBK As String
Dim SW_ACDRCL As Boolean

Dim W_FFILE As String
Dim W_FFILE2 As String
Dim W_FFILE3 As String
Dim W_UZPATH As String
Dim SW_STOP As Boolean
Dim SW_PR As Boolean
Dim W_SPFND As Long
Dim W_SPFND2 As Long

Dim W_FNDSTR2 As String
Dim W_CHTCNT As Long

Dim W_CLCLR As String
Dim W_CLTXTBK As String
Dim W_J As Long
Dim AR_LEN0() As Long
Dim AR_POS() As Long
Dim AR_LEN() As Long

Dim W_UNION As Range
Dim SW_CAN As Boolean
Dim W_CAN As Long

Dim W_O As Long
Dim W_1STO As Long

Dim W_NMLCHK As String
Dim W_CLCNT As Long
Dim W_FCNT As Long

Dim SW_UF3 As Boolean

Dim SW_CBO As Boolean

Dim W_MP1 As String
Dim SW_1STMP1 As Boolean

Dim SW_UF1INI As Boolean

Dim W_SVRP As Long
Dim W_SVCP As Long

Dim W_ERRM As Long

Dim SW_TBC As Boolean
Dim SW_ATBC As Boolean

Dim SW_NR As Boolean
Dim SW_NR2 As Boolean
Dim NRE As Object
Dim NRE2 As Object

Dim AR_IDX() As String
Dim W_IDX_N As Long
Dim AR_IDX2() As String
Dim W_IDX2_N As Long

Dim SW_MU As Boolean

Dim W_NMLCHK_BK As String
Dim SW_NRML_BK As Boolean
Dim SW_SIM2 As Boolean

'|fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|f|fffd|B|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||310||752||fffd|i|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||389||fffd||fffd|j
#If Win64 Then
Private Declare PtrSafe Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryA" _
   (ByVal lpPathName As String) As Long
#Else
Private Declare Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryA" _
   (ByVal lpPathName As String) As Long
#End If

'|fffd||598|A|fffd|t|fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||143|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s
#If Win64 Then
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#Else
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" ( _
   ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, _
   ByVal lpParameters As String, ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
#End If

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|R|fffd|s|fffd|[
#If Win64 Then
Private Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" _
   (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
   ByVal bFailIfExists As Long) As Long
#Else
Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _
   (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
   ByVal bFailIfExists As Long) As Long
#End If
'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If
'|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||30e|Q|fffd||181|v|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
#If Win64 Then
Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As LongPtr
Private Type BROWSEINFO
   hwndOwner       As LongPtr  '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As LongPtr  '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#Else
Private Declare Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As Long
Private Type BROWSEINFO
   hwndOwner       As Long     '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As Long     '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#End If
'ID|fffd|l|fffd|p|fffd|X|fffd||3ca||fffd|
#If Win64 Then
Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
#Else
Private Declare Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As Long, ByVal pszPath As String) As Long
#End If

'|fffd|^|fffd|X|fffd|N|fffd||303||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As LongPtr)
#Else
Private Declare Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As Long)
#End If
#If Win64 Then
''Private Declare PtrSafe Function GetWindowLong Lib "USER32" Alias "GetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long) As Long
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If
Private Const GWL_EXSTYLE = (-20)

#If Win64 Then
''Private Declare PtrSafe Function SetWindowLong Lib "USER32" Alias "SetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If
#If Win64 Then
Private Declare PtrSafe Function DrawMenuBar Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
Private Declare Function DrawMenuBar Lib "user32" (ByVal hwnd As Long) As Long
#End If

'|fffd|L|fffd|[|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Integer
#Else
Private Declare Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Long
#End If
Private Const VK_CONTROL = &H11
Private Const VK_RCONTROL = &HA3
Private Const VK_PRIOR = &H21
Private Const VK_NEXT = &H22
Private Const VK_SPACE = &H20
Private Const VK_CONVERT = &H1C
Private Const VK_RIGHT = &H27
Private Const VK_LEFT = &H25
Private Const VK_DOWN = &H28
Private Const VK_TAB = &H9
Private Const VK_SHIFT = &H10

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#Else
Private Declare Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As Long, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#End If

Private Const LWA_COLORKEY = 1
Private Const LWA_ALPHA = 2
Private Const WS_EX_LAYERED = &H80000

#If Win64 Then
Private Declare PtrSafe Function DwmIsCompositionEnabled Lib "dwmapi" (ByRef pfEnabled As Long) As Long
#Else
Private Declare Function DwmIsCompositionEnabled Lib "dwmapi" (ByRef pfEnabled As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function IsIconic Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
Private Declare Function IsIconic Lib "user32" (ByVal hwnd As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindow Lib "user32" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If
Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const SW_SHOWMAXIMIZED = 3

'|fffd|X|fffd||fffd||fffd|[|fffd|v
#If Win64 Then
Private Declare PtrSafe Sub Sleep Lib "KERNEL32.dll" (ByVal dwMilliseconds As Long)
#Else
Private Declare Sub Sleep Lib "KERNEL32.dll" (ByVal dwMilliseconds As Long)
#End If

#If Win64 Then
Private Declare PtrSafe Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
#Else
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
#End If
Const WM_SETICON = &H80
Const ICON_SMALL = 0&
Const ICON_BIG = 1&
Const WM_NCLBUTTONDOWN = &HA1
Const HTCAPTION = 2

#If Win64 Then
Private Declare PtrSafe Sub ReleaseCapture Lib "user32.dll" ()
#Else
Private Declare Sub ReleaseCapture Lib "user32.dll" ()
#End If

#If Win64 Then
Private Declare PtrSafe Function ExtractIcon Lib "shell32.dll" Alias "ExtractIconA" _
   (ByVal hInst As LongPtr, ByVal lpszExeFileName As String, ByVal nIconIndex As Long) As LongPtr
#Else
Private Declare Function ExtractIcon Lib "shell32.dll" Alias "ExtractIconA" _
   (ByVal hInst As Long, ByVal lpszExeFileName As String, ByVal nIconIndex As Long) As Long
#End If

  '|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd|C|fffd|x|fffd||fffd||fffd|g
#If Win64 Then
  Private Declare PtrSafe Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As LongPtr)
#Else
  Private Declare Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
#End If
  Private Const KEYEVENTF_KEYUP = &H2
  Private Const VK_RETURN = 13
  
#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Private Type SYSTEM_INFO
  wProcessorArchitecture As Integer
  wReserved As Integer
  dwPageSize As Long
  lpMinimumApplicationAddress As LongPtr
  lpMaximumApplicationAddress As LongPtr
  dwActiveProcessorMask As LongPtr
  dwNumberOfProcessors As Long
  dwProcessorType As Long
  dwAllocationGranularity As Long
  wProcessorLevel As Integer
  wProcessorRevision As Integer
End Type
#Else
Private Declare Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Private Type SYSTEM_INFO
  dwOemId As Long
  dwPageSize As Long
  lpMinimumApplicationAddress As Long
  lpMaximumApplicationAddress As Long
  dwActiveProcessorMask As Long
  dwNumberOfProcessors As Long
  dwProcessorType As Long
  dwAllocationGranularity As Long
  wProcessorLevel As Integer
  wProcessorRevision As Integer
End Type
#End If

Private Sub UserForm_Initialize()

  Dim W_N As Long
  Dim W_ICOPATH As String

#If Win64 Then
  Dim W_ICO As LongPtr
#Else
  Dim W_ICO As Long
#End If
  
  Dim W_VER As String
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  Dim I As Long
  Dim SW_APH As Boolean
    
  Dim W_ATEXTBK As String
  Dim SYSTEM As SYSTEM_INFO
    
  Dim FSO As Object
  Dim FL As Object
  Dim W_SIZE As Long
  Dim W_ONG As String
    
  
  SW_UF1INI = True
    
  SW_1STTP = SW_TRNSP
  
  If W_BGCLRL = "" Then
     Call SETTING_DFT
  End If
  
  Me.CheckBox85.Value = SW_SAVEPOS
  If Me.CheckBox85.Value = True Then
     Me.StartUpPosition = 0
     Me.Top = W_TOP
     Me.Left = W_LEFT
  End If
  Me.CheckBox86.Value = SW_WAO
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  W_ADJ = Me.Height - Me.InsideHeight - 21
  
  'Idx
  If Dir(W_INI) <> "" Then
     If Dir(ThisWorkbook.path & "\0.idx") <> "" And _
        Dir(ThisWorkbook.path & "\1.idx") <> "" And _
        Dir(ThisWorkbook.path & "\2.idx") <> "" And _
        Dir(ThisWorkbook.path & "\3.idx") <> "" And _
        Dir(ThisWorkbook.path & "\4.idx") <> "" And _
        Dir(ThisWorkbook.path & "\5.idx") <> "" Then
        Set FSO = CreateObject("Scripting.FileSystemObject")
        With FSO.GetFolder(ThisWorkbook.path)
           For Each FL In .Files
              If FL.Name Like "?.idx" Then
                 If FL.Name = "0.idx" Then
                    Me.TextBox44.Value = FL.DateLastModified
                 End If
                 W_SIZE = W_SIZE + FL.Size
              End If
           Next
        End With
        Me.TextBox45.Value = CLng(W_SIZE / 1024 / 1024) & "MB"
        Set FSO = Nothing
        
        If W_IDXDIR = "" Then
           Call INI_READ_RTN
        End If
        Me.TextBox43.Value = W_IDXDIR
        Me.CheckBox204.Value = SW_IDXSUB
        Me.CheckBox205.Value = SW_IDXVAL
        Me.CommandButton278.Enabled = True
        Me.CommandButton280.Enabled = True
     End If
  End If
  
  Me.Height = 246.5 + W_ADJ
  Call SET_REFCOMBO
  If W_FTEXT <> "" And _
     W_FTEXT <> AR_FTEXT(1) Then
     Me.ComboBox1.Value = W_FTEXT
     Me.ComboBox3.Value = W_FTEXT
     Me.ComboBox4.Value = W_FTEXT
     Me.ComboBox5.Value = W_FTEXT
     Me.ComboBox6.Value = W_FTEXT
     Me.ComboBox8.Value = W_FTEXT
     Me.ComboBox12.Value = W_FTEXT
     Me.ComboBox15.Value = W_FTEXT
     Me.ComboBox16.Value = W_FTEXT
     Me.ComboBox22.Value = W_FTEXT
     Me.ComboBox24.Value = W_FTEXT
     Me.ComboBox26.Value = W_FTEXT
     Me.ComboBox27.Value = W_FTEXT
     Me.ComboBox29.Value = W_FTEXT
     Me.ComboBox31.Value = W_FTEXT
     Me.ComboBox61.Value = W_FTEXT
     Me.TextBox74.Value = W_FTEXT
  End If
  Call SET_REPCOMBO
  If W_RTEXT <> "" And _
     W_RTEXT <> AR_RTEXT(1) Then
     Me.ComboBox2.Value = W_RTEXT
     Me.ComboBox7.Value = W_RTEXT
     Me.ComboBox9.Value = W_RTEXT
     Me.ComboBox13.Value = W_RTEXT
     Me.ComboBox14.Value = W_RTEXT
     Me.ComboBox17.Value = W_RTEXT
     Me.ComboBox21.Value = W_RTEXT
     Me.ComboBox25.Value = W_RTEXT
     Me.ComboBox28.Value = W_RTEXT
     Me.ComboBox30.Value = W_RTEXT
  End If
  Me.CheckBox1.Value = SW_UPLOW
  Me.CheckBox2.Value = SW_STRVAL
  Me.CheckBox3.Value = SW_VALUE
  Me.CheckBox7.Value = SW_BOOK
  Me.CheckBox22.Value = SW_INCSRH
  Me.CheckBox208.Value = SW_GOAR
  Me.CheckBox32.Value = SW_DISCRLF
  Me.CheckBox74.Value = SW_NOTSF
  Me.CheckBox92.Value = SW_NOTSG
  Me.CheckBox206.Value = SW_AFS
  Me.CheckBox207.Value = SW_GFS
  Me.CheckBox12.Value = SW_ASK
  Me.CheckBox54.Value = SW_BLSHT
  Me.CheckBox55.Value = SW_HDSHT
  Me.OptionButton4.Value = SW_SHTNM
  Me.OptionButton5.Value = SW_LHD
  Me.OptionButton6.Value = SW_CHD
  Me.OptionButton7.Value = SW_RHD
  Me.OptionButton8.Value = SW_LFT
  Me.OptionButton9.Value = SW_CFT
  Me.OptionButton10.Value = SW_RFT
  Me.CheckBox59.Value = SW_HFT
  Me.CheckBox68.Value = SW_SWRC
  Me.CheckBox78.Value = SW_NEWS
  
  W_N = 0
  On Error Resume Next
  W_N = UBound(AR_RENP)
  On Error GoTo 0
  Err.Clear
  If W_N > 0 Then
     Me.CommandButton77.Enabled = True
  Else
     Me.CommandButton77.Enabled = False
  End If
  
  Me.TextBox1.Value = W_FRC
  Me.TextBox2.Value = W_TOC
  Me.TextBox3.Value = W_GREPFL
  Call SET_DIRCOMBO
  If W_DTEXT <> "" And _
     W_DTEXT <> AR_DTEXT(1) Then
     Me.ComboBox18.Value = W_DTEXT
     Me.ComboBox19.Value = W_DTEXT
     Me.ComboBox20.Value = W_DTEXT
     Me.ComboBox23.Value = W_DTEXT
     Me.ComboBox60.Value = W_DTEXT
     Me.ComboBox62.Value = W_DTEXT
  End If
  If W_GREPTH <> "" Then
     Me.TextBox67.Value = Replace(W_GREPTH, vbTab, vbCrLf)
  End If
  
  Me.CheckBox16.Value = SW_GREPSUB
  Me.CheckBox60.Value = SW_UZ
  Me.CheckBox62.Value = SW_GOF
  Me.CheckBox75.Value = SW_OFFSET
  Me.CheckBox202.Value = SW_UPDOWN
  Me.TextBox25.Value = W_OFFSETR
  Me.TextBox26.Value = W_OFFSETC
  If Val(Application.Version) >= 12 Then
     Me.TextBox1.MaxLength = 3
     Me.TextBox2.MaxLength = 3
     Me.Label19.Caption = ".xls?"
     Me.Label28.Caption = ".xls?"
     Me.Label38.Caption = ".xls?"
     Me.Label316.Caption = ".xls?"
  Else
     Me.TextBox1.MaxLength = 2
     Me.TextBox2.MaxLength = 2
     Me.Label19.Caption = ".xls"
     Me.Label28.Caption = ".xls"
     Me.Label38.Caption = ".xls"
     Me.Label316.Caption = ".xls"
  End If
  Me.CheckBox27.Value = SW_GREPBKUP
  Me.TextBox7.Value = Application.Substitute(W_OBJSTR, Chr$(1), vbCrLf)
  Me.TextBox11.Value = W_OSTR
  Me.TextBox12.Value = W_ASTR1
  Me.TextBox13.Value = W_ESTR1
  Me.TextBox14.Value = W_ASTR2
  Me.TextBox15.Value = W_ESTR2
  Me.TextBox16.Value = W_ASTR3
  Me.TextBox17.Value = W_ESTR3
  Me.TextBox18.Value = W_ASTR4
'  Me.CheckBox41.Value = SW_SEND
  Me.CheckBox42.Value = SW_LOCAL
  Me.TextBox10.Value = W_LCLFL
  Me.CheckBox34.Value = SW_ACTVCELL
    
  If Val(Application.Version) >= 9 Then
     Me.CheckBox37.Enabled = True
     Me.CommandButton38.Enabled = True
  Else
     Me.CheckBox37.Enabled = False
     Me.CommandButton38.Enabled = False
  End If
  Me.CheckBox37.Value = SW_WRDCMPL
  Me.CheckBox33.Value = SW_ERRREP
  Me.CheckBox43.Value = SW_TRNSP
  Me.CheckBox73.Value = SW_ATCLR
  Me.CheckBox44.Value = SW_UPDCHK
  Me.CheckBox88.Value = SW_NETALLOFF
  Me.CheckBox48.Value = SW_FCGUIDE
  Me.CheckBox49.Value = SW_ENGLISH
  
  Me.TextBox37.Value = W_SDF1
  Me.TextBox38.Value = W_SDF2
  Me.TextBox39.Value = W_SDST
  Me.TextBox40.Value = W_SDED
  Me.TextBox41.Value = W_SDTC
  Me.OptionButton29.Value = SW_SDSJIS
  Me.OptionButton28.Value = SW_SDUTF8
  Me.OptionButton31.Value = SW_SDCRLF
  Me.OptionButton32.Value = SW_SDCR
  Me.OptionButton30.Value = SW_SDLF
  Me.CheckBox200.Value = SW_SDIS
  Me.CheckBox229.Value = SW_SDTR
  Me.CheckBox201.Value = SW_SDCC
  
  Call CTRLTIP
  
  If Val(Application.Version) >= 14 Then
     Me.CommandButton106.Enabled = True
  Else
     Me.CommandButton106.Enabled = False
  End If
  
  Me.CheckBox50.Value = SW_VBE
  Me.CheckBox56.Value = SW_MEIRYO
  SW_BARUPD = False
  Me.CheckBox65.Value = SW_BAR
  SW_BARUPD = True
  Me.OptionButton11.Value = SW_DRAT
  Me.OptionButton12.Value = SW_DRRW
  Me.OptionButton13.Value = SW_DRCL
  Me.OptionButton14.Value = SW_SACE
  Me.OptionButton15.Value = SW_SARW
  Me.OptionButton16.Value = SW_SACL
  Me.CheckBox69.Value = SW_TOC
  Me.CheckBox71.Value = SW_EXC
  Me.CheckBox209.Value = SW_DESCC
  Me.CheckBox72.Value = SW_PCMPL
  Me.CheckBox84.Value = SW_HDNM
  Me.OptionButton17.Value = SW_SCALL
  Me.OptionButton18.Value = SW_SCBK
  Me.OptionButton19.Value = SW_SCSHT
  Me.OptionButton20.Value = SW_TRGTNM
  Me.OptionButton21.Value = SW_TRGTRT
  
  Me.OptionButton22.Value = SW_FLDD
  Me.OptionButton23.Value = SW_FLDR
  Me.OptionButton24.Value = SW_FLDU
  Me.OptionButton25.Value = SW_FLDL
  Me.OptionButton26.Value = SW_FLIC
  Me.OptionButton27.Value = SW_FLDC
  
  SW_ANM = True
  Me.ToggleButton17.Value = SW_STOPBGF2
  SW_ANM = False
  Me.ToggleButton15.Value = SW_STOPBGF
  Me.ToggleButton16.Value = SW_STOPBGIU
  Call BGF2_CHK
  
  SW_HIDE = True
  Me.CheckBox81.Value = SW_MM
  SW_HIDE = False
  
  If SW_TRY = True Then
     Me.CommandButton8.Enabled = False
'     Me.CheckBox41.Value = True
'     Me.CheckBox41.Enabled = False
     Me.CheckBox44.Value = True
     Me.CheckBox44.Enabled = False
     Me.CheckBox88.Value = True
     Me.CheckBox88.Enabled = False
     Me.CheckBox48.Value = True
     Me.CheckBox48.Enabled = False
     Me.CheckBox50.Value = False
     Me.CheckBox50.Enabled = False
     Me.CheckBox65.Value = False
     Me.CheckBox65.Enabled = False
  End If
  
  '|fffd||fffd||fffd||fffd|
  Me.CheckBox172.Value = SW_DCB
  Me.CheckBox173.Value = SW_DCI
  Me.CheckBox174.Value = SW_DCU
  Me.CheckBox175.Value = SW_DCK
  Me.CheckBox176.Value = SW_DCC
  On Error Resume Next
  Me.CheckBox176.ForeColor = W_DCCLR
  On Error GoTo 0
  Me.CommandButton246.Tag = W_DCTAG
  Me.CheckBox177.Value = SW_DCB2
  Me.CheckBox178.Value = SW_DCI2
  Me.CheckBox179.Value = SW_DCU2
  Me.CheckBox180.Value = SW_DCK2
  Me.CheckBox181.Value = SW_DCC2
  On Error Resume Next
  Me.CheckBox181.ForeColor = W_DCCLR2
  On Error GoTo 0
  Me.CommandButton247.Tag = W_DCTAG2
  Me.CheckBox182.Value = SW_DCB3
  Me.CheckBox183.Value = SW_DCI3
  Me.CheckBox184.Value = SW_DCU3
  Me.CheckBox185.Value = SW_DCK3
  Me.CheckBox171.Value = SW_CLRKEEP

  '|fffd||fffd||fffd||fffd|
  Me.CheckBox210.Value = SW_ACF
  Me.CheckBox211.Value = SW_AC1
  Me.CheckBox212.Value = SW_AC2
  Me.CheckBox213.Value = SW_AC3
  Me.CheckBox214.Value = SW_AC4
  Me.CheckBox216.Value = SW_AC6
  Me.CheckBox217.Value = SW_AC7
  Me.CheckBox218.Value = SW_AC8
  Me.CheckBox219.Value = SW_AC9
  Me.TextBox70.Value = W_AC1T
  Me.TextBox71.Value = W_AC2T
  Me.TextBox72.Value = W_AC3T
  Me.TextBox73.Value = W_AC4T
  Me.TextBox75.Value = W_AC6T
  Me.TextBox76.Value = W_AC7T
  Me.TextBox77.Value = W_AC8T
  Me.TextBox78.Value = W_AC9T
  Me.CheckBox220.Value = SW_AC1D
  Me.CheckBox221.Value = SW_AC2D
  Me.CheckBox222.Value = SW_AC3D
  Me.CheckBox223.Value = SW_AC4D
  Me.CheckBox225.Value = SW_AC6D
  Me.CheckBox226.Value = SW_AC7D
  Me.CheckBox227.Value = SW_AC8D
  Me.CheckBox228.Value = SW_AC9D
  
  '|fffd|{|fffd||fffd||fffd||fffd|
  Me.CheckBox186.Value = SW_ADDDENY
  
  Me.ComboBox59.Value = W_ATEXT
  If W_ATEXT <> AR_ATEXT(1) Then
     W_ATEXTBK = W_ATEXT
     Call SET_REFCOMBO2
     Me.ComboBox59.ListIndex = -1
     Me.ComboBox59.Value = W_ATEXTBK
  Else
     Call SET_REFCOMBO2
  End If
  
  '|fffd|V|fffd|F|fffd|C|fffd|v
  Me.OptionButton1.Value = SW_ALLSHP
  Me.OptionButton2.Value = SW_COMONLY
  Me.OptionButton3.Value = SW_NOTCOM
  Me.CheckBox189.Value = SW_SHPUR
  Me.CheckBox188.Value = SW_INCSA
  
  'Grep
  Me.CheckBox190.Value = SW_HSGREP
  Me.CheckBox194.Value = SW_PRGRSS
  Me.CheckBox195.Value = SW_GHO
  Me.CheckBox203.Value = SW_GHL
  Me.TextBox32.Value = W_PASSLIST
  
'  Call GetSystemInfo(SYSTEM)
'  If SYSTEM.dwNumberOfProcessors > 1 And _
'     SW_TRY = False Then
'     Me.CheckBox190.Enabled = True
'  Else
'     Me.CheckBox190.Enabled = False
'     Me.CheckBox190.Value = False
'  End If
  
  '|fffd|{|fffd||fffd||fffd||fffd|
  Me.TextBox33.Value = W_PROMTH
  Me.TextBox34.Value = W_VALARG
  Me.TextBox35.Value = W_PROMTH2
  Me.TextBox4.Value = W_VALARG2
  Me.TextBox36.Value = W_PROMTH3
  Me.TextBox6.Value = W_VALARG3
  Me.CheckBox197.Value = SW_ACEXE
  Me.CheckBox198.Value = SW_ACEXE2
  Me.CheckBox199.Value = SW_ACEXE3
  Me.CommandButton248.Enabled = Not SW_NETALLOFF
  Me.CommandButton250.Enabled = Not SW_NETALLOFF
  Me.CommandButton252.Enabled = Not SW_NETALLOFF
  
  'Diff
  On Error Resume Next
  Me.Label325.BackColor = W_DF1STCLR
  On Error GoTo 0
  Me.CommandButton283.Tag = W_DF1STTAG
  On Error Resume Next
  Me.Label326.BackColor = W_DF2NDCLR
  On Error GoTo 0
  Me.CommandButton284.Tag = W_DF2NDTAG
  On Error Resume Next
  Me.Label327.BackColor = W_DFNOLCLR
  On Error GoTo 0
  Me.CommandButton285.Tag = W_DFNOLTAG
  On Error Resume Next
  Me.Label328.ForeColor = W_DFINLCLR
  On Error GoTo 0
  Me.CommandButton286.Tag = W_DFINLTAG
  
  '|fffd||78b|`|fffd||a3ab||fffd||fffd||fffd||752||fffd|
  If SW_ENGLISH = False Then
     If DIC_S1 Is Nothing Or _
        DIC_S2 Is Nothing Then
        Call MAKE_DIC_S
     End If
  End If
  
  '|fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||752||fffd|
  Call RCLICK_MENU_MAKE
  
  If Me.CheckBox34.Value = True Then
     If WINDOWCHK = True Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              Me.ComboBox1.Value = ActiveCell.Value
           End If
        End If
     End If
  End If
  
'  Call AD_RTN
  If SW_TRY = False And _
     SW_TEMP = False Then
     Call VER_GET_RTN2
  End If
  
  If Me.CheckBox48.Value = True And _
     Me.CheckBox78.Value = True Then
     Call GET_NEWS_RTN
  End If
  
  If Me.Label41.Visible = False Then
     If Me.CheckBox48.Value = False Then
        Me.Label58.Visible = True
        Me.Label59.Visible = True
        Me.Label60.Visible = True
        Me.Label61.Visible = True
        Me.SpinButton1.Visible = True
        Me.SpinButton1.Max = 11
        Me.SpinButton1.Value = Me.SpinButton1.Max
     ElseIf Me.CheckBox78.Value = True Then
        Me.Label119.Visible = True
        Me.Label120.Visible = True
        Me.SpinButton1.Visible = True
        Me.SpinButton1.Max = 8
        Me.SpinButton1.Value = Me.SpinButton1.Min
        Me.SpinButton1.Value = Me.SpinButton1.Max
     End If
  End If
  
  Me.CommandButton81.Visible = False
  Me.CommandButton82.Visible = False
  
  Me.CommandButton46.Tag = W_BGCLRT
  Set W_LABEL = Nothing
  Set W_BUTTON = Nothing
  Call BGCLR_SET
  Unload UserForm4
  
  SW_RMENU = False
  
  Call TAB_ORDER
  
  Me.MultiPage1.Pages("Page1").Visible = AR_PAGES(1)
  Me.MultiPage1.Pages("Page2").Visible = AR_PAGES(2)
  Me.MultiPage1.Pages("Page3").Visible = AR_PAGES(3)
  Me.MultiPage1.Pages("Page4").Visible = AR_PAGES(4)
  Me.MultiPage1.Pages("Page5").Visible = AR_PAGES(5)
  Me.MultiPage1.Pages("Page6").Visible = AR_PAGES(6)
  Me.MultiPage1.Pages("Page7").Visible = AR_PAGES(7)
  Me.MultiPage1.Pages("Page8").Visible = AR_PAGES(8)
  Me.MultiPage1.Pages("Page9").Visible = AR_PAGES(9)
  Me.MultiPage1.Pages("Page10").Visible = AR_PAGES(10)
  Me.MultiPage1.Pages("Page11").Visible = AR_PAGES(11)
  Me.MultiPage1.Pages("Page12").Visible = AR_PAGES(12)
  Me.MultiPage1.Pages("Page13").Visible = AR_PAGES(13)
  Me.MultiPage1.Pages("Page14").Visible = AR_PAGES(14)
  Me.MultiPage1.Pages("Page15").Visible = AR_PAGES(15)
  Me.MultiPage1.Pages("Page16").Visible = AR_PAGES(16)
  Me.MultiPage1.Pages("Page17").Visible = AR_PAGES(17)
  Me.MultiPage1.Pages("Page18").Visible = AR_PAGES(18)
  Me.MultiPage1.Pages("Page19").Visible = AR_PAGES(19)
  Me.MultiPage1.Pages("Page20").Visible = AR_PAGES(20)
    
  SW_APH = True
  For I = 0 To Me.MultiPage1.Pages.count - 1
     If Me.MultiPage1.Pages(I).Visible = True Then
        SW_APH = False
        Exit For
     End If
  Next I
  If SW_APH = True Then
     AR_PAGES(1) = True
     Me.MultiPage1.Pages("Page1").Visible = AR_PAGES(1)
  End If
    
  Me.MultiPage1.Value = 0
  Call MultiPage1_Change
'  Me.MultiPage1.Value = Me.MultiPage1.Pages.count - 1

  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     On Error Resume Next
     W_ICOPATH = ThisWorkbook.path & "\excelre.ico"
     SavePicture Me.Image1.Picture, W_ICOPATH
     W_ICO = ExtractIcon(0, W_ICOPATH, 0)
     Call SendMessage(GetActiveWindow, WM_SETICON, ICON_SMALL, ByVal W_ICO)
     Kill W_ICOPATH
     On Error GoTo 0
  End If

  SW_P8V = Me.MultiPage1.Pages("Page8").Visible
  SW_P11V = Me.MultiPage1.Pages("Page11").Visible
  SW_P10V = Me.MultiPage1.Pages("Page10").Visible
  SW_P13V = Me.MultiPage1.Pages("Page13").Visible
  
  SW_P17V = Me.MultiPage1.Pages("Page17").Visible
  SW_P18V = Me.MultiPage1.Pages("Page18").Visible
  SW_P12V = Me.MultiPage1.Pages("Page12").Visible
  SW_P14V = Me.MultiPage1.Pages("Page14").Visible
  SW_P16V = Me.MultiPage1.Pages("Page16").Visible
  SW_P15V = Me.MultiPage1.Pages("Page15").Visible
  SW_P4V = Me.MultiPage1.Pages("Page4").Visible
  
  Me.ToggleButton1.Value = SW_MINIW
  Me.ToggleButton2.Value = SW_MINIW2

  Me.ToggleButton6.Value = SW_SMPL
  Me.ToggleButton7.Value = SW_SMPN
  Me.ToggleButton8.Value = SW_SMPP
  Me.ToggleButton9.Value = SW_SMPA

  Me.ToggleButton11.Value = SW_GREPALL

  W_VER = ""
  On Error Resume Next
  W_VER = Application.VBE.Version
  On Error GoTo 0
  If W_VER = "" Then
     Me.MultiPage1.Pages("Page17").Enabled = False
  End If
  
  Me.CheckBox41.Value = True
  Me.CheckBox41.Enabled = False
  
  If SW_TEMP = True Then
     If SW_ENGLISH = True Then
        Me.CommandButton8.Caption = "Exit"
     Else
        Me.CommandButton8.Caption = "|fffd|I|fffd||fffd|"
     End If
  End If
  
  Call UF_SHOW0
  Call UF_SHOW2

  SW_1STTP = False
  
  SW_1STMP1 = True

  SW_UF1INI = False

  If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name <> "Page17" Then
     SW_ANM = False
  End If
 
  W_ONG = ThisWorkbook.path & "\bregonig.dll"
  If Dir(W_ONG) <> "" Then
     Me.Label353 = NRVER
  End If
 
End Sub

Private Sub MAKE_DIC_S()

  Dim W_THSRS As String
  Dim W_LINE As String
  Dim AR_WK As Variant
  Dim W_NO As String
  Dim W_STR As String
    
  
  W_THSRS = ThisWorkbook.path & "\thsrs.dat"
  
  If Dir(W_THSRS) = "" Then
     Exit Sub
  End If
  
  Set DIC_S1 = CreateObject("Scripting.Dictionary")
  Set DIC_S2 = CreateObject("Scripting.Dictionary")
  
  W_NO = ""
    
  Open W_THSRS For Input As #1
  
  Do While Not EOF(1)
     Line Input #1, W_LINE
     If W_LINE <> "" Then
        AR_WK = Split(W_LINE, vbTab)
        
        If DIC_S1.Exists(AR_WK(0)) = False Then
           DIC_S1.Add AR_WK(0), AR_WK(1)
        End If
     
        If W_NO = AR_WK(1) Then
           W_STR = W_STR & "|" & AR_WK(0)
        Else
           If W_NO <> "" Then
              W_STR = W_STR & ")"
              If DIC_S2.Exists(W_NO) = False Then
                 DIC_S2.Add W_NO, W_STR
              End If
           End If

           W_NO = AR_WK(1)
           W_STR = "(?:" & AR_WK(0)
        End If
    End If
  Loop

  If W_NO <> "" Then
     W_STR = W_STR & ")"
     If DIC_S2.Exists(W_NO) = False Then
        DIC_S1.Add W_NO, W_STR
     End If
  End If

  Close #1

End Sub

Private Sub CommandButton158_Click()
'|fffd||752||fffd|N|fffd||fffd||fffd|A

  Dim W_PATH As String
  
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Initialize settings.", vbInformation + vbOKCancel)
  Else
     W_RET = MsgBox("|fffd||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
  End If
  
  If W_RET = vbCancel Then
     Exit Sub
  End If
  
  Call CommandButton17_Click
  Call CommandButton18_Click
  Call CommandButton73_Click
  
  Call CommandButton287_Click

  Me.ComboBox1.Value = ""
  Me.ComboBox2.Value = ""
  Me.CheckBox1.Value = False
  Me.CheckBox2.Value = False
  Me.CheckBox3.Value = False
  Me.CheckBox7.Value = False
  Me.CheckBox22.Value = False
  Me.CheckBox208.Value = False
  Me.CheckBox32.Value = False
  Me.CheckBox74.Value = False
  Me.CheckBox92.Value = False
  Me.CheckBox206.Value = True
  Me.CheckBox207.Value = False
  Me.CheckBox12.Value = False
  Me.CheckBox54.Value = False
  Me.CheckBox55.Value = False
  Me.OptionButton4.Value = True
  Me.OptionButton5.Value = False
  Me.OptionButton6.Value = False
  Me.OptionButton7.Value = False
  Me.OptionButton8.Value = False
  Me.OptionButton9.Value = False
  Me.OptionButton10.Value = False
  Me.CheckBox59.Value = False
  Me.CheckBox68.Value = False
  Me.TextBox1.Value = ""
  Me.TextBox2.Value = ""
  Me.TextBox3.Value = ""
  Me.ComboBox18.Value = ""
  Me.CheckBox16.Value = False
  Me.CheckBox60.Value = False
  Me.CheckBox62.Value = False
  Me.CheckBox75.Value = False
  Me.CheckBox202.Value = False
  Me.TextBox25.Value = ""
  Me.TextBox26.Value = ""
  Me.CheckBox27.Value = False
  Me.TextBox7.Value = ""
  Me.TextBox11.Value = ""
  Me.TextBox12.Value = ""
  Me.TextBox13.Value = ""
  Me.TextBox14.Value = ""
  Me.TextBox15.Value = ""
  Me.TextBox16.Value = ""
  Me.TextBox17.Value = ""
  Me.TextBox18.Value = ""
  Me.TextBox10.Value = ""
  Me.CheckBox42.Value = False
  Me.CheckBox34.Value = False
  Me.CheckBox37.Value = False
  Me.CheckBox33.Value = False
  Me.CheckBox43.Value = False
  Me.CheckBox73.Value = False
  Me.CommandButton46.Tag = ""
  Me.CheckBox44.Value = False
  Me.CheckBox88.Value = False
  Me.CheckBox48.Value = False
  Me.CheckBox50.Value = False
  Me.CheckBox65.Value = False
  Me.OptionButton11.Value = True
  Me.OptionButton12.Value = False
  Me.OptionButton13.Value = False
  Me.OptionButton14.Value = True
  Me.OptionButton15.Value = False
  Me.OptionButton16.Value = False
  Me.CheckBox69.Value = False
  Me.CheckBox71.Value = False
  Me.CheckBox209.Value = False
  Me.CheckBox210.Value = False
  Me.CheckBox211.Value = False
  Me.CheckBox212.Value = False
  Me.CheckBox213.Value = False
  Me.CheckBox214.Value = False
  Me.CheckBox216.Value = False
  Me.CheckBox217.Value = False
  Me.CheckBox218.Value = False
  Me.CheckBox219.Value = False
  Me.TextBox70.Value = ""
  Me.TextBox71.Value = ""
  Me.TextBox72.Value = ""
  Me.TextBox73.Value = ""
  Me.TextBox74.Value = ""
  Me.TextBox75.Value = ""
  Me.TextBox76.Value = ""
  Me.TextBox77.Value = ""
  Me.TextBox78.Value = ""
  Me.CheckBox220.Value = False
  Me.CheckBox221.Value = False
  Me.CheckBox222.Value = False
  Me.CheckBox223.Value = False
  Me.CheckBox225.Value = False
  Me.CheckBox226.Value = False
  Me.CheckBox227.Value = False
  Me.CheckBox228.Value = False
  Me.CheckBox72.Value = False
  Me.CheckBox84.Value = False
  Me.OptionButton17.Value = True
  Me.OptionButton18.Value = False
  Me.OptionButton19.Value = False
  Me.OptionButton20.Value = True
  Me.OptionButton21.Value = False
  
  Me.OptionButton22.Value = True
  Me.OptionButton23.Value = False
  Me.OptionButton24.Value = False
  Me.OptionButton25.Value = False
  Me.OptionButton26.Value = True
  Me.OptionButton27.Value = False
  
  Me.CheckBox78.Value = False
  Me.ToggleButton1.Value = True
  Me.ToggleButton2.Value = True
  Me.CheckBox85.Value = False
  Me.CheckBox86.Value = False

  Me.ToggleButton5.Value = False
  Me.ToggleButton7.Value = True
  Me.ToggleButton8.Value = False
  Me.ToggleButton9.Value = False
  Me.ToggleButton11.Value = False
  
  Me.TextBox37.Value = ""
  Me.TextBox38.Value = ""
  Me.TextBox39.Value = "0"
  Me.TextBox40.Value = "0"
  Me.TextBox41.Value = "4"
  Me.OptionButton29.Value = True
  Me.OptionButton28.Value = False
  Me.OptionButton31.Value = True
  Me.OptionButton32.Value = False
  Me.OptionButton30.Value = False
  Me.CheckBox200.Value = True
  Me.CheckBox229.Value = False
  Me.CheckBox201.Value = False
  
  Me.CheckBox81.Value = False
  
  Me.TextBox67.Value = ""
  Me.TextBox68.Value = ""
  Me.TextBox69.Value = ""
  
  If W_ONKEYF <> "" Then
     Application.OnKey W_ONKEYF
  End If
  SW_SHIFTF = True
  SW_CTRLF = True
  SW_ALTF = False
  W_KEYF = "r"
  W_ONKEYF = SET_ONKEY(SW_SHIFTF, SW_CTRLF, SW_ALTF, W_KEYF, False)
  Application.OnKey W_ONKEYF, "SHOWF_RTN"
  
  If W_ONKEYR <> "" Then
     Application.OnKey W_ONKEYR
  End If
  SW_SHIFTR = False
  SW_CTRLR = False
  SW_ALTR = False
  W_KEYR = ""
  W_ONKEYR = ""
  
  W_FSV01 = ""
  W_FSV02 = ""
  W_FSV03 = ""
  W_FSV04 = ""
  W_FSV05 = ""
  W_FSV06 = ""
  W_FSV07 = ""
  W_FSV08 = ""
  W_FSV09 = ""
  W_FSV10 = ""
  W_RSV01 = ""
  W_RSV02 = ""
  W_RSV03 = ""
  W_RSV04 = ""
  W_RSV05 = ""
  W_RSV06 = ""
  W_RSV07 = ""
  W_RSV08 = ""
  W_RSV09 = ""
  W_RSV10 = ""
  
  SW_DCB = False
  SW_DCI = False
  SW_DCU = False
  SW_DCK = False
  SW_DCC = False
  SW_DCB2 = False
  SW_DCI2 = False
  SW_DCU2 = False
  SW_DCK2 = False
  SW_DCC2 = False
  SW_DCB3 = False
  SW_DCI3 = False
  SW_DCU3 = False
  SW_DCK3 = False
  SW_CLRKEEP = False
  
  SW_ACF = False
  SW_AC1 = False
  SW_AC2 = False
  SW_AC3 = False
  SW_AC4 = False
  SW_AC6 = False
  SW_AC7 = False
  SW_AC8 = False
  SW_AC9 = False
  W_AC1T = ""
  W_AC2T = ""
  W_AC3T = ""
  W_AC4T = ""
  W_AC6T = ""
  W_AC7T = ""
  W_AC8T = ""
  W_AC9T = ""
  SW_AC1D = False
  SW_AC2D = False
  SW_AC3D = False
  SW_AC4D = False
  SW_AC6D = False
  SW_AC7D = False
  SW_AC8D = False
  SW_AC9D = False
  
  SW_ADDDENY = False
  
  SW_SHPUR = False
  
  W_BMB01 = ""
  W_BMB02 = ""
  W_BMB03 = ""
  W_BMB04 = ""
  W_BMB05 = ""
  W_BMB06 = ""
  W_BMB07 = ""
  W_BMB08 = ""
  W_BMB09 = ""
  W_BMB10 = ""
  W_BMS01 = ""
  W_BMS02 = ""
  W_BMS03 = ""
  W_BMS04 = ""
  W_BMS05 = ""
  W_BMS06 = ""
  W_BMS07 = ""
  W_BMS08 = ""
  W_BMS09 = ""
  W_BMS10 = ""
  W_BMC01 = ""
  W_BMC02 = ""
  W_BMC03 = ""
  W_BMC04 = ""
  W_BMC05 = ""
  W_BMC06 = ""
  W_BMC07 = ""
  W_BMC08 = ""
  W_BMC09 = ""
  W_BMC10 = ""
  
  SW_PRGRSS = False
  W_PASSLIST = ""
  
  W_PROMTH = ""
  W_VALARG = ""
  W_PROMTH2 = ""
  W_VALARG2 = ""
  W_PROMTH3 = ""
  W_VALARG3 = ""
  SW_ACEXE = False
  SW_ACEXE2 = False
  SW_ACEXE3 = False
  
  W_SDF1 = ""
  W_SDF2 = ""
  SW_SDSJIS = True
  SW_SDUTF8 = False
  SW_SDCRLF = True
  SW_SDCR = False
  SW_SDLF = False
  W_SDST = 0
  W_SDED = 0
  W_SDTC = 4
  SW_SDIS = True
  SW_SDTR = False
  SW_SDCC = False
  
  W_PRDIC = ""
  
  W_BGIMG = ""
  
  SW_NRE = False
  
  Call TAB_DEFAULT
  Call TAB_ORDER
  
  '|fffd||752||fffd||6d1||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  W_PATH = ThisWorkbook.path & "\excelre.ini"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  
  Call SETTING_DFT
  Call INI_WRITE_RTN
  
  Me.CheckBox65.Value = SW_BAR
  
  '|fffd||22ae||fffd||fffd||fffd||fffd|
  W_PATH = ThisWorkbook.path & "\dic.txt"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If

  '|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g
  W_PATH = ThisWorkbook.path & "\sug.txt"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If

  '|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
  W_PATH = ThisWorkbook.path & "\exp.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If

  '|fffd|V|fffd|F|fffd|C|fffd|v|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
  W_PATH = ThisWorkbook.path & "\exp_s.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If

  '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd|
  W_PATH = ThisWorkbook.path & "\BGF1.txt"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  
  '|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd|
  W_PATH = ThisWorkbook.path & "\BGF2.txt"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If

  '|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
  W_PATH = ThisWorkbook.path & "\0.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_PATH = ThisWorkbook.path & "\1.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_PATH = ThisWorkbook.path & "\2.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_PATH = ThisWorkbook.path & "\3.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_PATH = ThisWorkbook.path & "\4.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_PATH = ThisWorkbook.path & "\5.idx"
  If Dir(W_PATH) <> "" Then
     On Error Resume Next
     Kill W_PATH
     On Error GoTo 0
  End If
  W_IDXDIR = ""
  SW_IDXSUB = False
  SW_IDXVAL = False
  Me.TextBox43.Value = ""
  Me.TextBox44.Value = ""
  Me.TextBox45.Value = ""
  Me.CheckBox204.Value = False
  Me.CheckBox205.Value = False
  Me.CommandButton278.Enabled = False
  Me.CommandButton280.Enabled = False

  Me.ToggleButton15.Value = False
  Me.ToggleButton17.Value = True
  Me.ToggleButton16.Value = True

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Sub BGF_KICK(ByVal SW_SS As Boolean)
'|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd|
  
  Dim W_BGF As String
  Dim XL1 As Object


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "BGF"
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
  Else
     Set XL1 = Nothing
     W_CLKBTN = ""
     Exit Sub
  End If
  
  W_BGF = ThisWorkbook.path & "\bgf.vbs"
  If Dir(W_BGF) = "" Then
     If SW_SS = True Then
        Call SAVE_SETTING
     End If
     Call INI_WRITE_RTN
     Call GREP_WRITE_RTN(W_BGF)
     Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
     W_CLKBTN = ""
     Exit Sub
  End If

  Exit Sub

LABEL_REP:
''  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub BGF_EXE(W_CAN As Long)

  Dim XL1 As Object
  Dim AWB As Workbook
  Dim AWS As Worksheet
  Dim UR As Range
  Dim I As Long
  Dim W_FLNM As String
  Dim W_SHNM As String
  Dim W_DT As String
  Dim W_BGF1 As String
  Dim W_BGF2 As String
  Dim W_STR As String
  
  
  On Error GoTo L_ERR
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     Set XL1 = Nothing
     Exit Sub
  End If
  
  Set AWB = Nothing
  On Error Resume Next
  Set AWB = XL1.ActiveWorkbook
  On Error GoTo L_ERR

  If AWB Is Nothing Then
     Set XL1 = Nothing
     Exit Sub
  End If

  If TypeName(AWB.ActiveSheet) <> "Worksheet" Then
     Set AWB = Nothing
     Set XL1 = Nothing
     Exit Sub
  End If
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Set AWS = AWB.ActiveSheet
  Set UR = AWS.UsedRange
  If IsEmpty(UR.Address(True, True, xlR1C1)) = True Then
     Set UR = Nothing
     Set AWS = Nothing
     Set AWB = Nothing
     Set XL1 = Nothing
     Exit Sub
  End If

  Me.CheckBox1.Value = False
  Me.CheckBox2.Value = False
  Me.CheckBox3.Value = False
  Me.CheckBox7.Value = False
  Me.CheckBox22.Value = False
  Me.CheckBox208.Value = False
  Me.CheckBox32.Value = False
  Me.OptionButton11.Value = True
  Me.CheckBox34.Value = False
  Me.CheckBox37.Value = False
  Me.CheckBox72.Value = False
  Me.CheckBox74.Value = False
  Me.CheckBox92.Value = False
  Me.CheckBox206.Value = False
  Me.CheckBox172.Value = False
  Me.CheckBox173.Value = False
  Me.CheckBox174.Value = False
  Me.CheckBox175.Value = False
  Me.CheckBox176.Value = False
  Me.CheckBox171.Value = False
  Me.CheckBox177.Value = False
  Me.CheckBox178.Value = False
  Me.CheckBox179.Value = False
  Me.CheckBox180.Value = False
  Me.CheckBox181.Value = False
  Me.ComboBox59.Value = ""
  Me.CheckBox186.Value = False
  Me.CheckBox197.Value = False
  Me.CheckBox198.Value = False
  Me.CheckBox199.Value = False
  
  AFN = 0
  W_FLNM = AWB.Name
  W_SHNM = AWS.Name
  
  If SW_ENGLISH = True Then
     XL1.StatusBar = "Executing background find."
  Else
     XL1.StatusBar = "|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
  End If
  
  For I = 1 To UBound(AR_FTEXT)
     If AR_FTEXT(I) <> "" Then
        Me.ComboBox1.Value = AR_FTEXT(I)
        Call BGF_FIND(AWS, UR)
        If W_CAN <> 0 Then
           Exit For
        End If
     End If
  Next I
  
  XL1.StatusBar = False
  
  Set UR = Nothing
  Set AWS = Nothing
  Set AWB = Nothing
  Set XL1 = Nothing

  If W_CAN <> 0 Then
     Exit Sub
  End If

  If AFN > 0 Then
     ReDim Preserve AR_AFN(AFN)
     ReDim Preserve AR_AFA(AFN)
     ReDim Preserve AR_AFV(AFN)
     
     W_BGF1 = ThisWorkbook.path & "\BGF1.txt"
     Open W_BGF1 For Output As #1
     For I = 1 To AFN
        W_STR = AR_AFN(I) & vbTab & AR_AFA(I) & vbTab & AR_AFV(I)
        Print #1, W_STR
     Next I
     Close #1
  
     W_BGF2 = ThisWorkbook.path & "\BGF2.txt"
     Open W_BGF2 For Output As #1
     W_DT = Year(Date) & "/" & Month(Date) & "/" & Day(Date) & " " & Hour(time) & ":" & Minute(time) & ":" & Second(time)
     W_STR = W_DT & vbTab & W_FLNM & vbTab & W_SHNM
     Print #1, W_STR
     Close #1
  End If

  Exit Sub
  
L_ERR:
  W_CAN = 2

End Sub

Private Sub BGF_FIND(AWS As Worksheet, UR As Range)

  Dim W_FNDSTR As String
  Dim SW_NRML As Boolean
  Dim W_URCNT As Variant

  Dim W_FW As String
  Dim W_MC As Boolean
  Dim W_MB As Boolean

  Dim RNG As Range
  Dim AD1ST As String
  Dim SW_HIT As Boolean

  
  SW_NRML = False
  W_NMLCHK = ""
  SW_NR = False
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
     .IgnoreCase = True
     .Global = True
  End With
  If RE.Test(Me.ComboBox1.Value) = False Then
     SW_NRML = True
  End If
  Set RE = Nothing
        
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = Me.ComboBox1.Value
        .IgnoreCase = True
        .Global = True
     End With
  Else
     W_NMLCHK = NRML_CHK(Me.ComboBox1.Value, 1, False)
  End If
  
  If SW_NRML = False Then
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
     W_FNDSTR = FNDSTRCNV3(Me.ComboBox1.Value)
  
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR
        .IgnoreCase = True
        .Global = True
     End With
     
     If SW_NRE = True Then
        SW_NR = True
     Else
        On Error GoTo LABEL_ERR
        RE.Test (" ")
        On Error GoTo 0
        Set RE = Nothing
     End If
     If SW_NR = True Then
        Set NRE = NRCHK(W_FNDSTR, True)
        If NRE Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  End If
  
  If SW_NRML = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR
        .IgnoreCase = True
        .Global = True
     End With
  End If
  
  If SW_NRML = True Or _
     W_NMLCHK <> "" Then
     W_URCNT = CELL_CNT(UR)

     If W_NMLCHK <> "" Then
        W_FW = W_NMLCHK
     Else
        W_FW = Replace(Me.ComboBox1.Value, "~", "~~")
     End If

     W_MC = False
     If W_FW Like "*[A-Z]*" Then
     Else
        W_MC = True
     End If

     W_MB = True
     If W_FW = String$(Len(W_FW), "?") Then
        W_MB = False
     End If

     With AWS
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(UR, W_FW, UR.Cells(W_URCNT), xlFormulas, xlByRows, xlNext, W_MC, W_MB)
        Else
           Set RNG = FIND2002(UR, W_FW, UR.Cells(W_URCNT), xlFormulas, xlByRows, xlNext, W_MC, W_MB)
        End If

        Do While Not RNG Is Nothing
           W_CAN = BGF_CANCHK
           If W_CAN <> 0 Then
              Exit Do
           End If

           If RNG.Address = AD1ST Then
              Exit Do
           End If

           If AD1ST = "" Then
              AD1ST = RNG.Address
           End If

           SW_HIT = False
           If W_NMLCHK <> "" Then
              SW_HIT = NRML_RE(3, RNG)
           Else
              SW_HIT = NRML_INSTR(3, RNG)
           End If

           If SW_HIT = True Then
              Call SET_BGF_FIND(RNG)
           End If

           If Val(Application.Version) < 10 Then
              Set RNG = FIND2000(UR, W_FW, RNG, xlFormulas, xlByRows, xlNext, W_MC, W_MB)
           Else
              Set RNG = FIND2002(UR, W_FW, RNG, xlFormulas, xlByRows, xlNext, W_MC, W_MB)
           End If
        Loop
     End With
  Else
'''     For Each RNG In UR
'''        W_CAN = BGF_CANCHK
'''        If W_CAN <> 0 Then
'''           Exit For
'''        End If
'''
'''        If RNG.SpecialCells(xlCellTypeBlanks) Is RNG Then
'''        Else
'''           SW_HIT = NRML_RE(RNG)
'''           If SW_HIT = True Then
'''              Call SET_BGF_FIND(RNG)
'''           End If
'''        End If
'''     Next
  End If
     
  Set NRE = Nothing
  Set RE = Nothing
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
End Sub

Private Sub SET_BGF_FIND(RNG As Range)

  If AFN Mod 10000 = 0 Then
     ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFA((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
  End If
     
  AFN = AFN + 1
    
  AR_AFN(AFN) = Me.ComboBox1.Value
  AR_AFA(AFN) = RNG.Address
  AR_AFV(AFN) = RNG.Formula

End Sub

Function BGF_CANCHK() As Long

  Dim W_BGFC As String

  BGF_CANCHK = 0
  
  W_BGFC = ThisWorkbook.path & "\BGFC.vbs"
  If Dir(W_BGFC) <> "" Then
     On Error Resume Next
     Kill W_BGFC
     On Error GoTo 0
     BGF_CANCHK = 1
     Exit Function
  End If

  W_BGFC = ThisWorkbook.path & "\BGFC2.vbs"
  If Dir(W_BGFC) <> "" Then
     BGF_CANCHK = 2
     Exit Function
  End If

End Function

Private Sub BGF2_CHK()

  Dim W_BGF2 As String
  Dim W_STR As String
  Dim AR_WK As Variant
  Dim SW_HIT As Boolean
  Dim I As Long

  
  Me.CommandButton254.Visible = False

  W_BGF2 = ThisWorkbook.path & "\BGF2.txt"
  If Dir(W_BGF2) <> "" Then
     Open W_BGF2 For Input As #1
     Line Input #1, W_STR
     Close #1
     AR_WK = Split(W_STR, vbTab)
     SW_HIT = False
  
     For I = 1 To Workbooks.count
        If Workbooks(I).Name = AR_WK(1) Then
           SW_HIT = True
           Exit For
        End If
     Next I
  
     If SW_HIT = True Then
        If SW_ENGLISH = True Then
           Me.CommandButton254.ControlTipText = "Searched " & AR_WK(1) & " in the background at " & AR_WK(0)
        Else
           Me.CommandButton254.ControlTipText = AR_WK(1) & "|fffd||fffd|" & AR_WK(0) & "|fffd||243|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||14c||fffd||fffd||fffd|"
        End If
        Me.CommandButton254.Visible = True
     End If
  End If

End Sub

Private Sub CommandButton254_Click()
'|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

  Dim W_BGF1 As String
  Dim W_BGF2 As String
  Dim W_STR As String
  Dim AR_WK As Variant
  Dim W_BKNM As String
  Dim W_SHNM As String
  Dim W_FW As String
  Dim I As Long
  Dim P As Long

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim W_LONG As Long
  Dim SW_AERO As Boolean


  W_BGF2 = ThisWorkbook.path & "\BGF2.txt"
  If Dir(W_BGF2) <> "" Then
     Open W_BGF2 For Input As #1
     Line Input #1, W_STR
     Close #1
     AR_WK = Split(W_STR, vbTab)
     W_BKNM = AR_WK(1)
     W_SHNM = AR_WK(2)
  Else
     Exit Sub
  End If
  
  W_BGF1 = ThisWorkbook.path & "\BGF1.txt"
  If Dir(W_BGF1) <> "" Then
     P = -1
     
     Open W_BGF1 For Input As #1
     Do While Not EOF(1)
        Line Input #1, W_STR
        AR_WK = Split(W_STR, vbTab)
        If W_FW <> AR_WK(0) Then
           Call FW_BRK(W_FW, W_SHNM, I, P, W_BKNM, AR_WK)
        End If
        I = I + 1
        ReDim Preserve AR_AFA(I)
        AR_AFA(I) = AR_WK(1)
        ReDim Preserve AR_AFV(I)
        AR_AFV(I) = AR_WK(2)
     Loop
     Close #1
     
     Call FW_BRK(W_FW, W_SHNM, I, P, W_BKNM, AR_WK)
  
     If Me.ToggleButton1.Value = False Then
        If Me.Height <= 349.5 Then
           Call SET_LISTBOX_DFT
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = False Then
        If Me.Height <= 283.5 Then
           Call SET_LISTBOX_DFT
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = True Then
        If Me.Height <= 263.5 Then
           Call SET_LISTBOX_DFT
        End If
     End If
  
     On Error Resume Next
     DwmIsCompositionEnabled W_LONG
     SW_AERO = CBool(W_LONG)
     On Error GoTo 0
  
     If Me.ToggleButton14.Value = True Then
        Me.MultiPage4.Visible = True
        If SW_AERO = True And _
           Me.MultiPage2.Visible = False Then
           Me.Width = Me.Width + 8
        End If
     End If
  
     Me.MultiPage5.Visible = False
     Me.MultiPage2.Visible = True
  
     If Me.ToggleButton1.Value = False Then
        If Me.Height <= 246.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 349.5
        ElseIf Me.Height <= 349.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 349.5
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = False Then
        If Me.Height <= 180.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 283.5
        ElseIf Me.Height <= 283.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 283.5
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = True Then
        If Me.Height <= 160.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 263.5
        ElseIf Me.Height <= 263.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 263.5
           Call SET_LISTBOX_DFT
        End If
     End If
  
     'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
     If SW_NRC = False Then
        Set Locator = CreateObject("WbemScripting.SWbemLocator")
        Set Service = Locator.ConnectServer
        Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
        W_OS = ""
        For Each os In OsSet
           W_OS = W_OS & os.Caption & " " & os.Version
        Next os
        Set Service = Nothing
        Set OsSet = Nothing
        Set Locator = Nothing
     End If
  
     hwnd = GetActiveWindow
#If Win64 Then
     SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
     SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If

     DrawMenuBar hwnd
  
     W_ADJ = Me.Height - Me.InsideHeight - 29
     Me.Height = Me.Height + W_ADJ
  
     W_ADJ = Me.Width - Me.InsideWidth - 12
     Me.Width = Me.Width + W_ADJ
  
     Me.Repaint
  Else
     Exit Sub
  End If
  
End Sub

Private Sub FW_BRK(ByRef W_FW As String, ByVal W_SHNM As String, ByRef I As Long, ByRef P As Long, ByVal W_BKNM As String, ByVal AR_WK As Variant)

  Dim AR_LIST() As String
  Dim J As Long
  
  
  If W_FW <> "" Then
     ReDim AR_LIST(0 To I - 1, 0 To 3)
     For J = 1 To I
        AR_LIST(J - 1, 0) = "Sel"
        AR_LIST(J - 1, 1) = W_SHNM
        AR_LIST(J - 1, 2) = AR_AFA(J)
        AR_LIST(J - 1, 3) = AR_AFV(J)
     Next J
     
     P = P + 1
     Select Case P
     Case 0
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox1, Me.Label10, Me.Label11, Me.Label12, Me.Label9, Me.CommandButton52, Me.CommandButton53, Me.CommandButton107, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton127)
        Call SET_BTN(True, Me.CommandButton137)
        Call SET_BTN(True, Me.CommandButton148)
        Call SET_BTN(True, Me.CommandButton159)
     Case 1
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox2, Me.Label64, Me.Label65, Me.Label66, Me.Label67, Me.CommandButton55, Me.CommandButton56, Me.CommandButton108, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton128)
        Call SET_BTN(True, Me.CommandButton138)
        Call SET_BTN(True, Me.CommandButton149)
        Call SET_BTN(True, Me.CommandButton160)
     Case 2
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox3, Me.Label68, Me.Label69, Me.Label70, Me.Label71, Me.CommandButton57, Me.CommandButton58, Me.CommandButton109, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton129)
        Call SET_BTN(True, Me.CommandButton139)
        Call SET_BTN(True, Me.CommandButton150)
        Call SET_BTN(True, Me.CommandButton161)
     Case 3
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox4, Me.Label72, Me.Label73, Me.Label74, Me.Label75, Me.CommandButton59, Me.CommandButton60, Me.CommandButton110, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton130)
        Call SET_BTN(True, Me.CommandButton140)
        Call SET_BTN(True, Me.CommandButton151)
        Call SET_BTN(True, Me.CommandButton162)
     Case 4
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox5, Me.Label76, Me.Label77, Me.Label78, Me.Label79, Me.CommandButton61, Me.CommandButton62, Me.CommandButton111, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton131)
        Call SET_BTN(True, Me.CommandButton141)
        Call SET_BTN(True, Me.CommandButton152)
        Call SET_BTN(True, Me.CommandButton163)
     Case 5
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox6, Me.Label80, Me.Label81, Me.Label82, Me.Label83, Me.CommandButton63, Me.CommandButton64, Me.CommandButton112, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton132)
        Call SET_BTN(True, Me.CommandButton142)
        Call SET_BTN(True, Me.CommandButton153)
        Call SET_BTN(True, Me.CommandButton164)
     Case 6
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox7, Me.Label84, Me.Label85, Me.Label86, Me.Label87, Me.CommandButton65, Me.CommandButton66, Me.CommandButton113, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton133)
        Call SET_BTN(True, Me.CommandButton143)
        Call SET_BTN(True, Me.CommandButton154)
        Call SET_BTN(True, Me.CommandButton165)
     Case 7
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox8, Me.Label88, Me.Label89, Me.Label90, Me.Label91, Me.CommandButton67, Me.CommandButton68, Me.CommandButton114, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton134)
        Call SET_BTN(True, Me.CommandButton144)
        Call SET_BTN(True, Me.CommandButton155)
        Call SET_BTN(True, Me.CommandButton166)
     Case 8
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox9, Me.Label92, Me.Label93, Me.Label94, Me.Label95, Me.CommandButton69, Me.CommandButton70, Me.CommandButton115, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton135)
        Call SET_BTN(True, Me.CommandButton145)
        Call SET_BTN(True, Me.CommandButton156)
        Call SET_BTN(True, Me.CommandButton167)
     Case 9
        Call SET_LISTBOX_B(AR_LIST, Me.ListBox10, Me.Label96, Me.Label97, Me.Label98, Me.Label99, Me.CommandButton71, Me.CommandButton72, Me.CommandButton116, W_BKNM, I)
        Call SET_BTN(True, Me.CommandButton136)
        Call SET_BTN(True, Me.CommandButton146)
        Call SET_BTN(True, Me.CommandButton157)
        Call SET_BTN(True, Me.CommandButton168)
     End Select
  
     Me.MultiPage2.Pages(P).ControlTipText = W_FW
     Me.MultiPage2.Pages(P).Tag = ""
  End If
  
  W_FW = AR_WK(0)
  I = 0

End Sub

Private Sub SET_LISTBOX_B(AR_LIST, W_LISTBOX As Object, W_LABEL1 As Object, W_LABEL2 As Object, W_LABEL3 As Object, W_LABEL4 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object, _
                          ByVal W_BKNM As String, ByVal W_CNT As Long)

  SW_SEL = False
  With W_LISTBOX
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "25;100;50;300"
     .Tag = W_BKNM
     .ListIndex = 0
     .Visible = True
     .MultiSelect = 2
     .Selected(0) = True
'     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     W_LABEL3.Caption = "Formula"
     W_LABEL4.Caption = W_CNT & " cell(s) found"
  Else
     W_LABEL3.Caption = "|fffd||fffd||fffd||fffd|"
     W_LABEL4.Caption = W_CNT & "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  W_LABEL1.Tag = False
  W_LABEL2.Tag = False
  W_LABEL3.Tag = False
  W_LABEL1.Left = 30
  W_LABEL2.Left = 132
  W_LABEL3.Left = 180
  W_LABEL1.Visible = True
  W_LABEL2.Visible = True
  W_LABEL3.Visible = True
  W_BUTTON1.Visible = True
  W_BUTTON1.Enabled = True
  W_BUTTON2.Visible = True
  W_BUTTON3.Visible = False

End Sub

Sub IDX_UPD_KICK()
'IDX|fffd|X|fffd|V
  
  Dim W_IDX As String
  Dim XL1 As Object
  Dim SW_SHP As Boolean


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Idx"
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
  Else
     Set XL1 = Nothing
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If SW_NOTSF = True Then
  '|fffd|W|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|
     SW_SHP = False
  Else
     SW_SHP = SW_HISHP
  End If
  
  Call READ_IDX(SW_SHP)
  If W_IDX_N = 0 Then
     W_CLKBTN = ""
     SW_HISHP = Not SW_HISHP
     Exit Sub
  End If

  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) = "" Then
     Call INI_WRITE_RTN
     Call GREP_WRITE_RTN(W_IDX)
     SW_HISHP = Not SW_HISHP
     Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
     W_CLKBTN = ""
     Exit Sub
  End If

  Exit Sub

LABEL_REP:
''  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub IDX_UPD(ByVal SW_SHP As Boolean)

  Dim DWB As Workbook
  Dim FSO As Object
  Dim I As Long
  Dim AR_WK As Variant
  Dim AR_WK2() As String
  Dim J As Long
  Dim WB As Workbook
  Dim WS As Worksheet
  Dim S As Long
  Dim SW_DEL As Boolean
  Dim K As Long
  Dim W_KEYWD As String
  Dim AR_KEYWD As Variant
  Dim L As Long
  Dim M As Long
  Dim SW_ADD As Boolean
  Dim W_IDX As String
  Dim SW_EXIST As Boolean
  Dim SW_CAN As Boolean
  Dim SW_WRITE As Boolean
  Dim XL1 As Object


  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     Set XL1 = Nothing
     Exit Sub
  End If

  If SW_ENGLISH = True Then
     XL1.StatusBar = "Executing background index update."
  Else
     XL1.StatusBar = "|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
  End If

  Application.ScreenUpdating = False
  Application.DisplayAlerts = False
  Application.EnableEvents = False
  Set DWB = Nothing
  Set DWB = Workbooks.Add
  Application.Calculation = xlCalculationManual
  Windows(DWB.Name).Visible = False

  Call READ_IDX(SW_SHP)
  Set FSO = CreateObject("Scripting.FileSystemObject")
  SW_CAN = False

  For I = 1 To W_IDX_N
     SW_WRITE = False
     AR_WK = Split(AR_IDX(I), Chr$(1))
     If FSO.FileExists(AR_WK(0)) = False Then
        SW_WRITE = True
        AR_IDX(I) = ""
        GoTo L_WRITE
     End If
     
     ReDim AR_WK2(2)
     AR_WK2(1) = AR_WK(0)
     AR_WK2(2) = AR_WK(1)
     K = 2
     
     If FSO.GetFile(AR_WK(0)).DateLastModified <> AR_WK(1) Then
        AR_WK2(2) = FSO.GetFile(AR_WK(0)).DateLastModified
        Set WB = Workbooks.Open(AR_WK(0), 0, False, , "")
        
        For J = 2 To UBound(AR_WK) - 1
           SW_DEL = False
           For M = 2 To J - 1
              If InStr(AR_WK(J), AR_WK(M)) > 0 Then
                 SW_DEL = True
                 Exit For
              End If
           Next M
           
           If SW_DEL = False Then
              For S = 1 To WB.Sheets.count
                 SW_CAN = IDX_CANCHK
                 If SW_CAN = True Then
                    Exit For
                 End If
                 
                 If SW_SHP = False Then
                    If TypeName(WB.Sheets(S)) = "Worksheet" Then
                       Set WS = WB.Sheets(S)
                       SW_EXIST = IDX_EXIST(WS, AR_WK(J))
                       Set WS = Nothing
                    Else
                       SW_EXIST = False
                    End If
                 Else
                    SW_EXIST = IDX_S_EXIST(WB.Sheets(S), AR_WK(J))
                 End If
                 If SW_EXIST = True Then
                    SW_DEL = True
                    Exit For
                 End If
              Next S
           End If
           
           If SW_CAN = False Then
              SW_CAN = IDX_CANCHK
           End If
           If SW_CAN = True Then
              Exit For
           End If
           
           If SW_DEL = False Then
              K = K + 1
              ReDim Preserve AR_WK2(K)
              AR_WK2(K) = AR_WK(J)
           End If
        Next J
     End If

     If SW_CAN = False Then
        SW_CAN = IDX_CANCHK
     End If
     If SW_CAN = True Then
        Exit For
     End If

     For J = 1 To UBound(AR_FTEXT)
        If AR_FTEXT(J) <> "" Then
           W_KEYWD = GET_KEYWD(AR_FTEXT(J))
           If W_KEYWD <> "" Then
              AR_KEYWD = Split(W_KEYWD, vbTab)
              For L = 0 To UBound(AR_KEYWD)
                 SW_ADD = True
                 For M = 2 To UBound(AR_WK) - 1
                    If InStr(AR_KEYWD(L), AR_WK(M)) > 0 Then
                       SW_ADD = False
                       Exit For
                    End If
                 Next M

                 If SW_ADD = True Then
                    If WB Is Nothing Then
                       Set WB = Workbooks.Open(AR_WK(0), 0, False, , "")
                    End If
           
                    For S = 1 To WB.Sheets.count
                       SW_CAN = IDX_CANCHK
                       If SW_CAN = True Then
                          Exit For
                       End If
                       
                       If SW_SHP = False Then
                          If TypeName(WB.Sheets(S)) = "Worksheet" Then
                             Set WS = WB.Sheets(S)
                             SW_EXIST = IDX_EXIST(WS, AR_KEYWD(L))
                             Set WS = Nothing
                          Else
                             SW_EXIST = False
                          End If
                       Else
                          SW_EXIST = IDX_S_EXIST(WB.Sheets(S), AR_KEYWD(L))
                       End If
                       If SW_EXIST = True Then
                          SW_ADD = False
                          Exit For
                       End If
                    Next S
                 End If
                
                 If SW_CAN = False Then
                    SW_CAN = IDX_CANCHK
                 End If
                 If SW_CAN = True Then
                    Exit For
                 End If
                
                 If SW_ADD = True Then
                    K = K + 1
                    ReDim Preserve AR_WK2(K)
                    AR_WK2(K) = AR_KEYWD(L)
                 End If
              Next L
           
              If SW_CAN = False Then
                 SW_CAN = IDX_CANCHK
              End If
              If SW_CAN = True Then
                 Exit For
              End If
           End If
        End If
     Next J

     If WB Is Nothing Then
     Else
        WB.Close False
        Set WB = Nothing
     End If

     If SW_CAN = False Then
        SW_CAN = IDX_CANCHK
     End If
     If SW_CAN = True Then
        Exit For
     End If

     If K > 2 Then
        If AR_IDX(I) <> Join$(AR_WK2, Chr$(1)) & Chr$(1) Then
           SW_WRITE = True
           AR_IDX(I) = Join$(AR_WK2, Chr$(1)) & Chr$(1)
        End If
     Else
        SW_WRITE = True
        AR_IDX(I) = ""
     End If

L_WRITE:
     If SW_WRITE = True Then
        If SW_SHP = False Then
           W_IDX = ThisWorkbook.path & "\exp.idx"
        Else
           W_IDX = ThisWorkbook.path & "\exp_s.idx"
        End If
     
        Open W_IDX For Output As #1
  
        For J = 1 To W_IDX_N
           If AR_IDX(J) <> "" Then
              Print #1, AR_IDX(J)
           End If
        Next J

        Close #1
     End If
  Next I

  Set FSO = Nothing

  DWB.Close False
  Set DWB = Nothing
  Application.EnableEvents = True
  Application.DisplayAlerts = True
  Application.ScreenUpdating = True

  XL1.StatusBar = False
  Set XL1 = Nothing

End Sub

Private Function IDX_CANCHK() As Boolean

  Dim W_IDXC As String

  IDX_CANCHK = False
  
  W_IDXC = ThisWorkbook.path & "\idxC.vbs"
  If Dir(W_IDXC) <> "" Then
     On Error Resume Next
     Kill W_IDXC
     On Error GoTo 0
     IDX_CANCHK = True
  End If

End Function

Private Function GET_KEYWD(ByVal W_FTEXT As String) As String

  GET_KEYWD = ""
     
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
     .IgnoreCase = True
     .Global = True
  End With
  If RE.Test(W_FTEXT) = False Then
     GET_KEYWD = W_FTEXT
     Set RE = Nothing
     Exit Function
  End If
  Set RE = Nothing

  GET_KEYWD = NRML_CHK(W_FTEXT, 1, True)

End Function

Private Function IDX_EXIST(WS As Worksheet, ByVal W_KEYWD As String) As Boolean

  Dim W_FW As String
  Dim W_MC As Boolean
  Dim RNG As Range


  IDX_EXIST = False

  W_FW = W_KEYWD
  If InStr(W_FW, "~") > 0 Then
     W_FW = Replace(W_FW, "~~", Chr$(1))
     W_FW = Replace(W_FW, "~*", Chr$(2))
     W_FW = Replace(W_FW, "~?", Chr$(3))
     W_FW = Replace(W_FW, "~", "~~")
     W_FW = Replace(W_FW, Chr$(3), "~?")
     W_FW = Replace(W_FW, Chr$(2), "~*")
     W_FW = Replace(W_FW, Chr$(1), "~~")
  End If
  W_MC = False
  If W_FW Like "*[A-Z]*" Then
  Else
     W_MC = True
  End If

  Set RNG = Nothing
  If Val(Application.Version) < 10 Then
     Set RNG = FIND2000(WS.Cells, W_FW, WS.Cells(1, 1), xlFormulas, xlByRows, xlNext, W_MC, True)
  Else
     Set RNG = FIND2002(WS.Cells, W_FW, WS.Cells(1, 1), xlFormulas, xlByRows, xlNext, W_MC, True)
  End If
                  
  If RNG Is Nothing Then
  Else
     IDX_EXIST = True
     Set RNG = Nothing
  End If

End Function

Private Function IDX_S_EXIST(SH As Object, ByVal W_KEYWD As String) As Boolean

  Dim W_FW As String
  Dim S As Long
  Dim SHP As Shape
  Dim W_SA As Long
  Dim W_SPLEN As Long
  Dim W_SPTXT As String
  Dim N As Long
  Dim W_ST As Long
  Dim W_BYTE As Long


  IDX_S_EXIST = False

  W_FW = W_KEYWD
  If InStr(W_FW, "~") > 0 Then
     W_FW = Replace(W_FW, "~?", "?")
     W_FW = Replace(W_FW, "~*", "*")
     W_FW = Replace(W_FW, "~~", "~")
  End If
  
  If SH.ProtectContents = False Then
     Exit Function
  End If
  
  For S = 1 To SH.Shapes.count
     If IDX_CANCHK = True Then
        Exit Function
     End If
     
     If SH.Shapes(S).Type = msoGroup Then
        Call SHP_UNGRP(SH.Shapes(S))
     End If
  Next S

  For S = 1 To SH.Shapes.count
     If IDX_CANCHK = True Then
        Exit Function
     End If
     
     Set SHP = SH.Shapes(S)
     If Val(Application.Version) >= 12 Then
        W_SA = SA_EXIST(SHP, W_FW)
        If W_SA = 0 Then
        ElseIf W_SA = 1 Then
           GoTo L_NEXT
        Else
           Set SHP = Nothing
           IDX_S_EXIST = True
           Exit Function
        End If
     End If
  
     W_SPLEN = 0
     On Error Resume Next
     W_SPLEN = SHP.TextFrame.Characters.count
     On Error GoTo 0
     If W_SPLEN = 0 Then
        GoTo L_NEXT
     End If
  
     W_SPTXT = ""
     For N = 0 To Int(W_SPLEN / 255)
        W_ST = N * 255 + 1
        If (N + 1) * 255 <= W_SPLEN Then
           W_BYTE = 255
        Else
           W_BYTE = W_SPLEN - N * 255
        End If
        W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
        If (N + 1) * 255 = W_SPLEN Then
           Exit For
        End If
     Next N

     If InStr(W_SPTXT, W_FW) > 0 Then
        Set SHP = Nothing
        IDX_S_EXIST = True
        Exit Function
     End If

L_NEXT:
     Set SHP = Nothing
  Next S

End Function

Private Sub SHP_UNGRP(SHP As Shape)

  Dim SHPS As Shapes
  Dim S As Shape

  Set SHPS = SHP.Ungroup
  For Each S In SHPS
     If S.Type = msoGroup Then
        Call SHP_UNGRP(S)
     End If
  Next S

End Sub

Private Sub SHP_UNGRPW(SHP As Object)

  Dim SHPS As Object
  Dim S As Object

  On Error GoTo L_ERR
  Set SHPS = SHP.Ungroup
  On Error GoTo 0
  For Each S In SHPS
     If S.Type = msoGroup Then
        Call SHP_UNGRPW(S)
     End If
  Next S
  
  Exit Sub

L_ERR:

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox1)

End Sub

Private Sub CheckBox2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox2)

End Sub

Private Sub CheckBox3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox3)

End Sub

Private Sub CheckBox7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox7)

End Sub

Private Sub CheckBox22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox22)

End Sub

Private Sub CheckBox208_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox208)

End Sub

Private Sub CheckBox32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox32)

End Sub

Private Sub OptionButton14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton14)

End Sub

Private Sub OptionButton15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton15)

End Sub

Private Sub OptionButton16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton16)

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton12)

End Sub

Private Sub CommandButton37_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton37)

End Sub

Private Sub CommandButton45_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton45)

End Sub

Private Sub CommandButton78_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton78)

End Sub

Private Sub CommandButton81_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton81)

End Sub

Private Sub CommandButton85_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton85)

End Sub

Private Sub CommandButton87_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton87)

End Sub

Private Sub CommandButton88_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton88)

End Sub

Private Sub CommandButton104_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton104)

End Sub

Private Sub CommandButton261_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton261)

End Sub

Private Sub CommandButton262_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton262)

End Sub

'|fffd|u|fffd||fffd|
Private Sub CheckBox12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox12)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub CommandButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton5)

End Sub

Private Sub CommandButton15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton15)

End Sub

Private Sub CommandButton54_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton54)

End Sub

Private Sub CommandButton79_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton79)

End Sub

Private Sub CommandButton82_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton82)

End Sub

Private Sub CommandButton91_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton91)

End Sub

Private Sub CommandButton124_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton124)

End Sub

'|fffd|V|fffd|F|fffd|C|fffd|v
Private Sub CommandButton267_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton267)

End Sub

Private Sub CommandButton86_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton86)

End Sub

Private Sub CommandButton25_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton25)

End Sub

Private Sub CommandButton22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton22)

End Sub

Private Sub CommandButton169_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton169)

End Sub

'VBE
Private Sub CommandButton103_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton103)

End Sub

Private Sub CommandButton101_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton101)

End Sub

Private Sub CommandButton102_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton102)

End Sub

Private Sub CommandButton100_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton100)

End Sub

Private Sub CommandButton98_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton98)

End Sub

Private Sub CommandButton99_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton99)

End Sub

'|fffd|t|fffd|B|fffd||fffd|
Private Sub OptionButton22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton22)

End Sub

Private Sub OptionButton23_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton23)

End Sub

Private Sub OptionButton24_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton24)

End Sub

Private Sub OptionButton25_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton25)

End Sub

Private Sub OptionButton26_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton26)

End Sub

Private Sub OptionButton27_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton27)

End Sub

Private Sub CommandButton118_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton118)

End Sub

'|fffd|V|fffd|[|fffd|g
Private Sub CheckBox54_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox54)

End Sub

Private Sub CheckBox55_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox55)

End Sub

Private Sub OptionButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton4)

End Sub

Private Sub OptionButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton5)

End Sub

Private Sub OptionButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton6)

End Sub

Private Sub OptionButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton7)

End Sub

Private Sub OptionButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton8)

End Sub

Private Sub OptionButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton9)

End Sub

Private Sub OptionButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton10)

End Sub

Private Sub CommandButton51_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton51)

End Sub

Private Sub CommandButton272_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton272)

End Sub

Private Sub CommandButton273_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton273)

End Sub

Private Sub CommandButton274_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton274)

End Sub

'Idx
Private Sub CommandButton275_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton275)

End Sub

Private Sub CommandButton276_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton276)

End Sub

Private Sub CommandButton278_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton278)

End Sub

Private Sub CommandButton279_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton279)

End Sub

Private Sub CommandButton280_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton280)

End Sub

'|fffd||fffd||fffd|l|fffd|[|fffd||fffd|
Private Sub CheckBox59_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox59)

End Sub

Private Sub CommandButton77_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton77)

End Sub

Private Sub CommandButton75_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton75)

End Sub

Private Sub CommandButton290_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton290)

End Sub

Private Sub CommandButton76_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton76)

End Sub

Private Sub CommandButton74_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton74)

End Sub

Private Sub CommandButton266_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton266)

End Sub

'|fffd||fffd||fffd|O
Private Sub CheckBox84_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox84)

End Sub

Private Sub OptionButton17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton17)

End Sub

Private Sub OptionButton18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton18)

End Sub

Private Sub OptionButton19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton19)

End Sub

Private Sub OptionButton20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton20)

End Sub

Private Sub OptionButton21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton21)

End Sub

Private Sub CommandButton89_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton89)

End Sub

Private Sub CommandButton90_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton90)

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox68_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox68)

End Sub

Private Sub CommandButton84_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton84)

End Sub

Private Sub CommandButton80_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton80)

End Sub

'|fffd||fffd||fffd|o
Private Sub CommandButton16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton16)

End Sub

'Grep
Private Sub CheckBox62_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox62)

End Sub

Private Sub CheckBox75_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox75)

End Sub

Private Sub CheckBox202_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox202)

End Sub

Private Sub CheckBox16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox16)

End Sub

Private Sub CheckBox60_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox60)

End Sub

Private Sub CommandButton21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton21)

End Sub

Private Sub CommandButton20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton20)

End Sub

Private Sub CommandButton303_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton303)

End Sub

Private Sub CommandButton19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton19)

End Sub

Private Sub CommandButton263_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton263)

End Sub

'Grep|fffd|u|fffd||fffd|
Private Sub CheckBox63_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox63)

End Sub

Private Sub CheckBox27_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox27)

End Sub

Private Sub CommandButton32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton32)

End Sub

Private Sub CommandButton31_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton31)

End Sub

Private Sub CommandButton30_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton30)

End Sub

Private Sub CommandButton264_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton264)

End Sub

Private Sub ToggleButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton3)

End Sub

'|fffd|V|fffd|F|fffd|C|fffd|vGrep
Private Sub CheckBox64_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox64)

End Sub

Private Sub CommandButton41_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton41)

End Sub

Private Sub CommandButton42_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton42)

End Sub

Private Sub CommandButton39_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton39)

End Sub

Private Sub CommandButton40_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton40)

End Sub

Private Sub CommandButton270_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton270)

End Sub

Private Sub CommandButton265_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton265)

End Sub

Private Sub CommandButton271_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton271)

End Sub

Private Sub ToggleButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton4)

End Sub

'Diff
Private Sub OptionButton29_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton29)

End Sub

Private Sub OptionButton28_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton28)

End Sub

Private Sub OptionButton31_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton31)

End Sub

Private Sub OptionButton32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton32)

End Sub

Private Sub OptionButton30_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton30)

End Sub

Private Sub CheckBox200_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox200)

End Sub

Private Sub CheckBox229_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox229)

End Sub

Private Sub CheckBox201_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox201)

End Sub

Private Sub CommandButton257_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton257)

End Sub

Private Sub CommandButton258_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton258)

End Sub

Private Sub CommandButton288_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton288)

End Sub

Private Sub CommandButton289_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton289)

End Sub

Private Sub CommandButton259_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton259)

End Sub

Private Sub CommandButton260_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton260)

End Sub

'|fffd|`|fffd|F|fffd|b|fffd|N
Private Sub CommandButton35_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton35)

End Sub

Private Sub CommandButton36_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton36)

End Sub

Private Sub CommandButton34_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton34)

End Sub

Private Sub CommandButton33_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton33)

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CommandButton50_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton50)

End Sub

Private Sub CommandButton48_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton48)

End Sub

Private Sub CommandButton49_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton49)

End Sub

'|fffd||fffd||fffd|L
Private Sub CheckBox41_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox41)

End Sub

Private Sub CheckBox42_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox42)

End Sub

Private Sub CommandButton44_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton44)

End Sub

Private Sub CommandButton43_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton43)

End Sub

'|fffd||752||fffd|
'|fffd|\|fffd||fffd|
Private Sub CheckBox48_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox48)

End Sub

Private Sub CheckBox78_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox78)

End Sub

Private Sub CheckBox71_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox71)

End Sub

Private Sub CheckBox209_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox209)

End Sub

Private Sub CheckBox210_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox210)

End Sub

Private Sub CheckBox211_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox211)

End Sub

Private Sub CheckBox212_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox212)

End Sub

Private Sub CheckBox213_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox213)

End Sub

Private Sub CheckBox214_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox214)

End Sub

Private Sub CheckBox216_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox216)

End Sub

Private Sub CheckBox217_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox217)

End Sub

Private Sub CheckBox218_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox218)

End Sub

Private Sub CheckBox219_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox219)

End Sub

Private Sub CheckBox220_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox220)

End Sub

Private Sub CheckBox221_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox221)

End Sub

Private Sub CheckBox222_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox222)

End Sub

Private Sub CheckBox223_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox223)

End Sub

Private Sub CheckBox225_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox225)

End Sub

Private Sub CheckBox226_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox226)

End Sub

Private Sub CheckBox227_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox227)

End Sub

Private Sub CheckBox228_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox228)

End Sub

Private Sub CheckBox85_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox85)

End Sub

Private Sub CheckBox50_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox50)

End Sub

Private Sub CheckBox65_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox65)

End Sub

Private Sub CheckBox49_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox49)

End Sub

Private Sub CheckBox56_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox56)

End Sub

Private Sub CheckBox43_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox43)

End Sub

Private Sub CheckBox73_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox73)

End Sub

Private Sub CheckBox69_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox69)

End Sub

Private Sub CommandButton46_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton46)

End Sub

Private Sub CommandButton47_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton47)

End Sub

Private Sub CommandButton83_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton83)

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox34_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox34)

End Sub

Private Sub CheckBox37_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox37)

End Sub

Private Sub CheckBox72_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox72)

End Sub

Private Sub CheckBox74_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox74)

End Sub

Private Sub CheckBox92_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox92)

End Sub

Private Sub CheckBox206_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox206)

End Sub

Private Sub CheckBox207_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox207)

End Sub

Private Sub OptionButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton11)

End Sub

Private Sub OptionButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton12)

End Sub

Private Sub OptionButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton13)

End Sub

Private Sub CommandButton126_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton126)

End Sub

Private Sub CommandButton38_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton38)

End Sub

Private Sub CommandButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton6)

End Sub

Private Sub CommandButton73_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton73)

End Sub

Private Sub CommandButton17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton17)

End Sub

Private Sub CommandButton18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton18)

End Sub

'|fffd|\|fffd||fffd|2
Private Sub CheckBox81_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox81)

End Sub

Private Sub CheckBox86_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox86)

End Sub

'|fffd|l|fffd|b|fffd|g
Private Sub CheckBox88_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox88)

End Sub

Private Sub CheckBox33_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox33)

End Sub

Private Sub CheckBox44_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox44)

End Sub

Private Sub CommandButton14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton14)

End Sub

'|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
Private Sub CommandButton158_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton158)

End Sub

Private Sub CommandButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton7)

End Sub

Private Sub CommandButton92_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton92)

End Sub

Private Sub CommandButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton8)

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CommandButton281_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton281)

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub CommandButton105_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton105)

End Sub

Private Sub CommandButton106_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton106)

End Sub

Private Sub CommandButton117_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton117)

End Sub

Private Sub CommandButton119_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton119)

End Sub

Private Sub CommandButton269_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton269)

End Sub

Private Sub CommandButton123_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton123)

End Sub

Private Sub CommandButton125_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton125)

End Sub

Private Sub CommandButton254_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton254)

End Sub

Private Sub CommandButton255_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton255)

End Sub

Private Sub CommandButton120_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton120)

End Sub

Private Sub CommandButton121_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton121)

End Sub

Private Sub CommandButton122_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton122)

End Sub

Private Sub CommandButton94_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton94)

End Sub

Private Sub CommandButton95_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton95)

End Sub

Private Sub CommandButton96_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton96)

End Sub

Private Sub CommandButton97_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton97)

End Sub

Private Sub ToggleButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton1)

End Sub

Private Sub ToggleButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton2)

End Sub

Private Sub ToggleButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton5)

End Sub

Private Sub ToggleButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton6)

End Sub

Private Sub ToggleButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton7)

End Sub

Private Sub ToggleButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton8)

End Sub

Private Sub ToggleButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton9)

End Sub

Private Sub ToggleButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton10)

End Sub

Private Sub ToggleButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton11)

End Sub

Private Sub ToggleButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton12)

End Sub

Private Sub ToggleButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton13)

End Sub

Private Sub ToggleButton14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton14)

End Sub

Private Sub ToggleButton15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton15)

End Sub

Private Sub ToggleButton16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton16)

End Sub

Private Sub ToggleButton17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton17)

End Sub

Private Sub ToggleButton18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton18)

End Sub

Private Sub ToggleButton19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton19)

End Sub

Private Sub ToggleButton20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton20)

End Sub

Private Sub ToggleButton21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton21)

End Sub

'|fffd|}|fffd||fffd||fffd|`|fffd|y|fffd|[|fffd|W2
Private Sub CommandButton52_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton52)

End Sub

Private Sub CommandButton55_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton55)

End Sub

Private Sub CommandButton57_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton57)

End Sub

Private Sub CommandButton59_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton59)

End Sub

Private Sub CommandButton61_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton61)

End Sub

Private Sub CommandButton63_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton63)

End Sub

Private Sub CommandButton65_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton65)

End Sub

Private Sub CommandButton67_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton67)

End Sub

Private Sub CommandButton69_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton69)

End Sub

Private Sub CommandButton71_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton71)

End Sub

Private Sub CommandButton53_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton53)

End Sub

Private Sub CommandButton56_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton56)

End Sub

Private Sub CommandButton58_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton58)

End Sub

Private Sub CommandButton60_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton60)

End Sub

Private Sub CommandButton62_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton62)

End Sub

Private Sub CommandButton64_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton64)

End Sub

Private Sub CommandButton66_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton66)

End Sub

Private Sub CommandButton68_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton68)

End Sub

Private Sub CommandButton70_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton70)

End Sub

Private Sub CommandButton72_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton72)

End Sub

Private Sub CommandButton107_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton107)

End Sub

Private Sub CommandButton108_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton108)

End Sub

Private Sub CommandButton109_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton109)

End Sub

Private Sub CommandButton110_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton110)

End Sub

Private Sub CommandButton111_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton111)

End Sub

Private Sub CommandButton112_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton112)

End Sub

Private Sub CommandButton113_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton113)

End Sub

Private Sub CommandButton114_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton114)

End Sub

Private Sub CommandButton115_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton115)

End Sub

Private Sub CommandButton116_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton116)

End Sub

Private Sub CommandButton127_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton127)

End Sub

Private Sub CommandButton128_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton128)

End Sub

Private Sub CommandButton129_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton129)

End Sub

Private Sub CommandButton130_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton130)

End Sub

Private Sub CommandButton131_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton131)

End Sub

Private Sub CommandButton132_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton132)

End Sub

Private Sub CommandButton133_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton133)

End Sub

Private Sub CommandButton134_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton134)

End Sub

Private Sub CommandButton135_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton135)

End Sub

Private Sub CommandButton136_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton136)

End Sub

Private Sub CommandButton137_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton137)

End Sub

Private Sub CommandButton138_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton138)

End Sub

Private Sub CommandButton139_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton139)

End Sub

Private Sub CommandButton140_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton140)

End Sub

Private Sub CommandButton141_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton141)

End Sub

Private Sub CommandButton142_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton142)

End Sub

Private Sub CommandButton143_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton143)

End Sub

Private Sub CommandButton144_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton144)

End Sub

Private Sub CommandButton145_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton145)

End Sub

Private Sub CommandButton146_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton146)

End Sub

Private Sub CommandButton147_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton147)

End Sub

Private Sub CommandButton268_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton268)

End Sub

Private Sub CommandButton148_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton148)

End Sub

Private Sub CommandButton149_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton149)

End Sub

Private Sub CommandButton150_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton150)

End Sub

Private Sub CommandButton151_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton151)

End Sub

Private Sub CommandButton152_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton152)

End Sub

Private Sub CommandButton153_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton153)

End Sub

Private Sub CommandButton154_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton154)

End Sub

Private Sub CommandButton155_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton155)

End Sub

Private Sub CommandButton156_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton156)

End Sub

Private Sub CommandButton157_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton157)

End Sub

Private Sub CommandButton159_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton159)

End Sub

Private Sub CommandButton160_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton160)

End Sub

Private Sub CommandButton161_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton161)

End Sub

Private Sub CommandButton162_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton162)

End Sub

Private Sub CommandButton163_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton163)

End Sub

Private Sub CommandButton164_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton164)

End Sub

Private Sub CommandButton165_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton165)

End Sub

Private Sub CommandButton166_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton166)

End Sub

Private Sub CommandButton167_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton167)

End Sub

Private Sub CommandButton168_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton168)

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox172_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox172)

End Sub

Private Sub CheckBox173_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox173)

End Sub

Private Sub CheckBox174_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox174)

End Sub

Private Sub CheckBox175_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox175)

End Sub

Private Sub CheckBox176_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox176)

End Sub

Private Sub CheckBox177_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox177)

End Sub

Private Sub CheckBox178_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox178)

End Sub

Private Sub CheckBox179_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox179)

End Sub

Private Sub CheckBox180_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox180)

End Sub

Private Sub CheckBox181_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox181)

End Sub

Private Sub CheckBox182_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox182)

End Sub

Private Sub CheckBox183_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox183)

End Sub

Private Sub CheckBox184_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox184)

End Sub

Private Sub CheckBox185_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox185)

End Sub

Private Sub CheckBox171_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox171)

End Sub

Private Sub CommandButton246_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton246)

End Sub

Private Sub CommandButton301_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton301)

End Sub

Private Sub CommandButton247_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton247)

End Sub

Private Sub CommandButton302_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton302)

End Sub

'|fffd|{|fffd||fffd||fffd||fffd|
Private Sub CheckBox186_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox186)

End Sub

'|fffd|V|fffd|F|fffd|C|fffd|v
Private Sub OptionButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton1)

End Sub

Private Sub OptionButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton2)

End Sub

Private Sub OptionButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton3)

End Sub

Private Sub CheckBox189_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox189)

End Sub

Private Sub CheckBox188_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox188)

End Sub

'Grep
Private Sub CheckBox190_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox190)

End Sub

Private Sub CheckBox194_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox194)

End Sub

Private Sub CheckBox195_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox195)

End Sub

Private Sub CheckBox203_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox203)

End Sub

'|fffd|{|fffd||fffd||fffd||fffd|
Private Sub CheckBox197_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox197)

End Sub

Private Sub CheckBox198_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox198)

End Sub

Private Sub CheckBox199_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox199)

End Sub

Private Sub CommandButton248_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton248)

End Sub

Private Sub CommandButton249_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton249)

End Sub

Private Sub CommandButton250_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton250)

End Sub

Private Sub CommandButton251_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton251)

End Sub

Private Sub CommandButton252_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton252)

End Sub

Private Sub CommandButton253_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton253)

End Sub

Private Sub CommandButton283_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton283)

End Sub

Private Sub CommandButton284_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton284)

End Sub

Private Sub CommandButton285_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton285)

End Sub

Private Sub CommandButton286_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton286)

End Sub

Private Sub CommandButton287_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton287)

End Sub

Private Sub CommandButton291_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton291)

End Sub

Private Sub CommandButton292_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton292)

End Sub

Private Sub CommandButton293_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton293)

End Sub

Private Sub CommandButton294_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton294)

End Sub

Private Sub CommandButton295_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton295)

End Sub

Private Sub CommandButton296_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton296)

End Sub

Private Sub CommandButton297_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton297)

End Sub

Private Sub CommandButton298_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton298)

End Sub

Private Sub CommandButton299_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton299)

End Sub

Private Sub CommandButton300_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton300)

End Sub

Private Sub ToggleButton1_Enter()

  Me.ToggleButton1.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton1.BackColor = &H8000000F

End Sub

Private Sub ToggleButton2_Enter()

  Me.ToggleButton2.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton2.BackColor = &H8000000F

End Sub

Private Sub ToggleButton3_Enter()

  Me.ToggleButton3.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton3.BackColor = &H8000000F

End Sub

Private Sub ToggleButton4_Enter()

  Me.ToggleButton4.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton4.BackColor = &H8000000F

End Sub

Private Sub ToggleButton5_Enter()

  Me.ToggleButton5.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton5.BackColor = &H8000000F

End Sub

Private Sub ToggleButton6_Enter()

  Me.ToggleButton6.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton6.BackColor = &H8000000F

End Sub

Private Sub ToggleButton7_Enter()

  Me.ToggleButton7.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton7.BackColor = &H8000000F

End Sub

Private Sub ToggleButton8_Enter()

  Me.ToggleButton8.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton8.BackColor = &H8000000F

End Sub

Private Sub ToggleButton9_Enter()

  Me.ToggleButton9.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton9.BackColor = &H8000000F

End Sub

Private Sub ToggleButton10_Enter()

  Me.ToggleButton10.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton10.BackColor = &H8000000F

End Sub

Private Sub ToggleButton11_Enter()

  Me.ToggleButton11.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton11_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton11.BackColor = &H8000000F

End Sub

Private Sub ToggleButton12_Enter()

  Me.ToggleButton12.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton12.BackColor = &H8000000F

End Sub

Private Sub ToggleButton13_Enter()

  Me.ToggleButton13.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton13_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton13.BackColor = &H8000000F

End Sub

Private Sub ToggleButton14_Enter()

  Me.ToggleButton14.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton14.BackColor = &H8000000F

End Sub

Private Sub ToggleButton15_Enter()

  Me.ToggleButton15.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton15.BackColor = &H8000000F

End Sub

Private Sub ToggleButton16_Enter()

  Me.ToggleButton16.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton16.BackColor = &H8000000F

End Sub

Private Sub ToggleButton17_Enter()

  Me.ToggleButton17.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton17.BackColor = &H8000000F

End Sub

Private Sub ToggleButton18_Enter()

  Me.ToggleButton18.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton18.BackColor = &H8000000F

End Sub

Private Sub ToggleButton19_Enter()

  Me.ToggleButton19.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton19_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton19.BackColor = &H8000000F

End Sub

Private Sub ToggleButton20_Enter()

  Me.ToggleButton20.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton20_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton20.BackColor = &H8000000F

End Sub

Private Sub ToggleButton21_Enter()

  Me.ToggleButton21.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton21_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton21.BackColor = &H8000000F

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton5_Enter()

  Me.CommandButton5.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton5.BackColor = &H8000000F

End Sub

Private Sub CommandButton6_Enter()

  Me.CommandButton6.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton6.BackColor = &H8000000F

End Sub

Private Sub CommandButton7_Enter()

  Me.CommandButton7.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton7.BackColor = &H8000000F

End Sub

Private Sub CommandButton8_Enter()

  Me.CommandButton8.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton8.BackColor = &H8000000F

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub CommandButton12_Enter()

  Me.CommandButton12.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton12.BackColor = &H8000000F

End Sub

Private Sub CommandButton14_Enter()

  Me.CommandButton14.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton14.BackColor = &H8000000F

End Sub

Private Sub CommandButton15_Enter()

  Me.CommandButton15.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton15.BackColor = &H8000000F

End Sub

Private Sub CommandButton16_Enter()

  Me.CommandButton16.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton16.BackColor = &H8000000F

End Sub

Private Sub CommandButton17_Enter()

  Me.CommandButton17.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton17.BackColor = &H8000000F

End Sub

Private Sub CommandButton18_Enter()

  Me.CommandButton18.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton18.BackColor = &H8000000F

End Sub

Private Sub CommandButton19_Enter()

  Me.CommandButton19.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton19_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton19.BackColor = &H8000000F

End Sub

Private Sub CommandButton263_Enter()

  Me.CommandButton263.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton263_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton263.BackColor = &H8000000F

End Sub

Private Sub CommandButton20_Enter()

  Me.CommandButton20.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton20_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton20.BackColor = &H8000000F

End Sub

Private Sub CommandButton303_Enter()

  Me.CommandButton303.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton303_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton303.BackColor = &H8000000F

End Sub

Private Sub CommandButton21_Enter()

  Me.CommandButton21.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton21_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton21.BackColor = &H8000000F

End Sub

Private Sub CommandButton22_Enter()

  Me.CommandButton22.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton22_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton22.BackColor = &H8000000F

End Sub

Private Sub CommandButton25_Enter()

  Me.CommandButton25.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton25_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton25.BackColor = &H8000000F

End Sub

Private Sub CommandButton30_Enter()

  Me.CommandButton30.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton30_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton30.BackColor = &H8000000F

End Sub

Private Sub CommandButton264_Enter()

  Me.CommandButton264.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton264_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton264.BackColor = &H8000000F

End Sub

Private Sub CommandButton31_Enter()

  Me.CommandButton31.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton31_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton31.BackColor = &H8000000F

End Sub

Private Sub CommandButton32_Enter()

  Me.CommandButton32.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton32_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton32.BackColor = &H8000000F

End Sub

Private Sub CommandButton33_Enter()

  Me.CommandButton33.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton33_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton33.BackColor = &H8000000F

End Sub

Private Sub CommandButton34_Enter()

  Me.CommandButton34.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton34_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton34.BackColor = &H8000000F

End Sub

Private Sub CommandButton35_Enter()

  Me.CommandButton35.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton35_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton35.BackColor = &H8000000F

End Sub

Private Sub CommandButton36_Enter()

  Me.CommandButton36.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton36_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton36.BackColor = &H8000000F

End Sub

Private Sub CommandButton37_Enter()

  Me.CommandButton37.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton37_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton37.BackColor = &H8000000F

End Sub

Private Sub CommandButton38_Enter()

  Me.CommandButton38.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton38_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton38.BackColor = &H8000000F

End Sub

Private Sub CommandButton39_Enter()

  Me.CommandButton39.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton39_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton39.BackColor = &H8000000F

End Sub

Private Sub CommandButton40_Enter()

  Me.CommandButton40.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton40_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton40.BackColor = &H8000000F

End Sub

Private Sub CommandButton270_Enter()

  Me.CommandButton270.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton270_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton270.BackColor = &H8000000F

End Sub

Private Sub CommandButton265_Enter()

  Me.CommandButton265.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton265_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton265.BackColor = &H8000000F

End Sub

Private Sub CommandButton271_Enter()

  Me.CommandButton271.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton271_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton271.BackColor = &H8000000F

End Sub

Private Sub CommandButton41_Enter()

  Me.CommandButton41.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton41_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton41.BackColor = &H8000000F

End Sub

Private Sub CommandButton42_Enter()

  Me.CommandButton42.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton42_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton42.BackColor = &H8000000F

End Sub

Private Sub CommandButton43_Enter()

  Me.CommandButton43.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton43_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton43.BackColor = &H8000000F

End Sub

Private Sub CommandButton44_Enter()

  Me.CommandButton44.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton44_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton44.BackColor = &H8000000F

End Sub

Private Sub CommandButton45_Enter()

  Me.CommandButton45.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton45_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton45.BackColor = &H8000000F

End Sub

Private Sub CommandButton46_Enter()

  Me.CommandButton46.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton46_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton46.BackColor = &H8000000F

End Sub

Private Sub CommandButton47_Enter()

  Me.CommandButton47.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton47_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton47.BackColor = &H8000000F

End Sub

Private Sub CommandButton48_Enter()

  Me.CommandButton48.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton48_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton48.BackColor = &H8000000F

End Sub

Private Sub CommandButton49_Enter()

  Me.CommandButton49.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton49_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton49.BackColor = &H8000000F

End Sub

Private Sub CommandButton50_Enter()

  Me.CommandButton50.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton50_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton50.BackColor = &H8000000F

End Sub

Private Sub CommandButton51_Enter()

  Me.CommandButton51.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton51_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton51.BackColor = &H8000000F

End Sub

Private Sub CommandButton272_Enter()

  Me.CommandButton272.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton272_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton272.BackColor = &H8000000F

End Sub

Private Sub CommandButton273_Enter()

  Me.CommandButton273.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton273_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton273.BackColor = &H8000000F

End Sub

Private Sub CommandButton274_Enter()

  Me.CommandButton274.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton274_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton274.BackColor = &H8000000F

End Sub

Private Sub CommandButton275_Enter()

  Me.CommandButton275.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton275_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton275.BackColor = &H8000000F

End Sub

Private Sub CommandButton276_Enter()

  Me.CommandButton276.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton276_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton276.BackColor = &H8000000F

End Sub

Private Sub CommandButton278_Enter()

  Me.CommandButton278.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton278_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton278.BackColor = &H8000000F

End Sub

Private Sub CommandButton279_Enter()

  Me.CommandButton279.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton279_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton279.BackColor = &H8000000F

End Sub

Private Sub CommandButton280_Enter()

  Me.CommandButton280.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton280_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton280.BackColor = &H8000000F

End Sub

Private Sub CommandButton281_Enter()

  Me.CommandButton281.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton281_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton281.BackColor = &H8000000F

End Sub

Private Sub CommandButton52_Enter()

  Me.CommandButton52.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton52_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton52.BackColor = &H8000000F

End Sub

Private Sub CommandButton53_Enter()

  Me.CommandButton53.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton53_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton53.BackColor = &H8000000F

End Sub

Private Sub CommandButton54_Enter()

  Me.CommandButton54.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton54_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton54.BackColor = &H8000000F

End Sub

Private Sub CommandButton55_Enter()

  Me.CommandButton55.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton55_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton55.BackColor = &H8000000F

End Sub

Private Sub CommandButton56_Enter()

  Me.CommandButton56.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton56_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton56.BackColor = &H8000000F

End Sub

Private Sub CommandButton57_Enter()

  Me.CommandButton57.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton57_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton57.BackColor = &H8000000F

End Sub

Private Sub CommandButton58_Enter()

  Me.CommandButton58.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton58_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton58.BackColor = &H8000000F

End Sub

Private Sub CommandButton59_Enter()

  Me.CommandButton59.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton59_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton59.BackColor = &H8000000F

End Sub

Private Sub CommandButton60_Enter()

  Me.CommandButton60.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton60_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton60.BackColor = &H8000000F

End Sub

Private Sub CommandButton61_Enter()

  Me.CommandButton61.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton61_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton61.BackColor = &H8000000F

End Sub

Private Sub CommandButton62_Enter()

  Me.CommandButton62.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton62_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton62.BackColor = &H8000000F

End Sub

Private Sub CommandButton63_Enter()

  Me.CommandButton63.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton63_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton63.BackColor = &H8000000F

End Sub

Private Sub CommandButton64_Enter()

  Me.CommandButton64.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton64_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton64.BackColor = &H8000000F

End Sub

Private Sub CommandButton65_Enter()

  Me.CommandButton65.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton65_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton65.BackColor = &H8000000F

End Sub

Private Sub CommandButton66_Enter()

  Me.CommandButton66.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton66_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton66.BackColor = &H8000000F

End Sub

Private Sub CommandButton67_Enter()

  Me.CommandButton67.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton67_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton67.BackColor = &H8000000F

End Sub

Private Sub CommandButton68_Enter()

  Me.CommandButton68.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton68_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton68.BackColor = &H8000000F

End Sub

Private Sub CommandButton69_Enter()

  Me.CommandButton69.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton69_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton69.BackColor = &H8000000F

End Sub

Private Sub CommandButton70_Enter()

  Me.CommandButton70.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton70_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton70.BackColor = &H8000000F

End Sub

Private Sub CommandButton71_Enter()

  Me.CommandButton71.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton71_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton71.BackColor = &H8000000F

End Sub

Private Sub CommandButton72_Enter()

  Me.CommandButton72.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton72_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton72.BackColor = &H8000000F

End Sub

Private Sub CommandButton73_Enter()

  Me.CommandButton73.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton73_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton73.BackColor = &H8000000F

End Sub

Private Sub CommandButton74_Enter()

  Me.CommandButton74.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton74_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton74.BackColor = &H8000000F

End Sub

Private Sub CommandButton266_Enter()

  Me.CommandButton266.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton266_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton266.BackColor = &H8000000F

End Sub

Private Sub CommandButton75_Enter()

  Me.CommandButton75.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton75_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton75.BackColor = &H8000000F

End Sub

Private Sub CommandButton290_Enter()

  Me.CommandButton290.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton290_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton290.BackColor = &H8000000F

End Sub

Private Sub CommandButton76_Enter()

  Me.CommandButton76.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton76_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton76.BackColor = &H8000000F

End Sub

Private Sub CommandButton77_Enter()

  Me.CommandButton77.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton77_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton77.BackColor = &H8000000F

End Sub

Private Sub CommandButton78_Enter()

  Me.CommandButton78.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton78_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton78.BackColor = &H8000000F

End Sub

Private Sub CommandButton79_Enter()

  Me.CommandButton79.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton79_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton79.BackColor = &H8000000F

End Sub

Private Sub CommandButton80_Enter()

  Me.CommandButton80.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton80_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton80.BackColor = &H8000000F

End Sub

Private Sub CommandButton81_Enter()

  Me.CommandButton81.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton81_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton81.BackColor = &H8000000F

End Sub

Private Sub CommandButton82_Enter()

  Me.CommandButton82.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton82_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton82.BackColor = &H8000000F

End Sub

Private Sub CommandButton83_Enter()

  Me.CommandButton83.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton83_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton83.BackColor = &H8000000F

End Sub

Private Sub CommandButton84_Enter()

  Me.CommandButton84.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton84_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton84.BackColor = &H8000000F

End Sub

Private Sub CommandButton85_Enter()

  Me.CommandButton85.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton85_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton85.BackColor = &H8000000F

End Sub

Private Sub CommandButton267_Enter()

  Me.CommandButton267.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton267_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton267.BackColor = &H8000000F

End Sub

Private Sub CommandButton86_Enter()

  Me.CommandButton86.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton86_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton86.BackColor = &H8000000F

End Sub

Private Sub CommandButton87_Enter()

  Me.CommandButton87.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton87_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton87.BackColor = &H8000000F

End Sub

Private Sub CommandButton88_Enter()

  Me.CommandButton88.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton88_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton88.BackColor = &H8000000F

End Sub

Private Sub CommandButton89_Enter()

  Me.CommandButton89.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton89_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton89.BackColor = &H8000000F

End Sub

Private Sub CommandButton90_Enter()

  Me.CommandButton90.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton90_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton90.BackColor = &H8000000F

End Sub

Private Sub CommandButton91_Enter()

  Me.CommandButton91.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton91_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton91.BackColor = &H8000000F

End Sub

Private Sub CommandButton92_Enter()

  Me.CommandButton92.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton92_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton92.BackColor = &H8000000F

End Sub

Private Sub CommandButton94_Enter()

  Me.CommandButton94.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton94_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton94.BackColor = &H8000000F

End Sub

Private Sub CommandButton95_Enter()

  Me.CommandButton95.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton95_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton95.BackColor = &H8000000F

End Sub

Private Sub CommandButton96_Enter()

  Me.CommandButton96.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton96_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton96.BackColor = &H8000000F

End Sub

Private Sub CommandButton97_Enter()

  Me.CommandButton97.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton97_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton97.BackColor = &H8000000F

End Sub

Private Sub CommandButton98_Enter()

  Me.CommandButton98.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton98_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton98.BackColor = &H8000000F

End Sub

Private Sub CommandButton99_Enter()

  Me.CommandButton99.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton99_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton99.BackColor = &H8000000F

End Sub

Private Sub CommandButton100_Enter()

  Me.CommandButton100.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton100_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton100.BackColor = &H8000000F

End Sub

Private Sub CommandButton101_Enter()

  Me.CommandButton101.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton101_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton101.BackColor = &H8000000F

End Sub

Private Sub CommandButton102_Enter()

  Me.CommandButton102.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton102_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton102.BackColor = &H8000000F

End Sub

Private Sub CommandButton103_Enter()

  Me.CommandButton103.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton103_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton103.BackColor = &H8000000F

End Sub

Private Sub CommandButton104_Enter()

  Me.CommandButton104.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton104_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton104.BackColor = &H8000000F

End Sub

Private Sub CommandButton261_Enter()

  Me.CommandButton261.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton261_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton261.BackColor = &H8000000F

End Sub

Private Sub CommandButton262_Enter()

  Me.CommandButton262.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton262_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton262.BackColor = &H8000000F

End Sub

Private Sub CommandButton105_Enter()

  Me.CommandButton105.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton105_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton105.BackColor = &H8000000F

End Sub

Private Sub CommandButton106_Enter()

  Me.CommandButton106.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton106_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton106.BackColor = &H8000000F

End Sub

Private Sub CommandButton107_Enter()

  Me.CommandButton107.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton107_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton107.BackColor = &H8000000F

End Sub

Private Sub CommandButton108_Enter()

  Me.CommandButton108.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton108_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton108.BackColor = &H8000000F

End Sub

Private Sub CommandButton109_Enter()

  Me.CommandButton109.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton109_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton109.BackColor = &H8000000F

End Sub

Private Sub CommandButton110_Enter()

  Me.CommandButton110.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton110_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton110.BackColor = &H8000000F

End Sub

Private Sub CommandButton111_Enter()

  Me.CommandButton111.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton111_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton111.BackColor = &H8000000F

End Sub

Private Sub CommandButton112_Enter()

  Me.CommandButton112.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton112_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton112.BackColor = &H8000000F

End Sub

Private Sub CommandButton113_Enter()

  Me.CommandButton113.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton113_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton113.BackColor = &H8000000F

End Sub

Private Sub CommandButton114_Enter()

  Me.CommandButton114.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton114_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton114.BackColor = &H8000000F

End Sub

Private Sub CommandButton115_Enter()

  Me.CommandButton115.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton115_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton115.BackColor = &H8000000F

End Sub

Private Sub CommandButton116_Enter()

  Me.CommandButton116.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton116_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton116.BackColor = &H8000000F

End Sub

Private Sub CommandButton117_Enter()

  Me.CommandButton117.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton117_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton117.BackColor = &H8000000F

End Sub

Private Sub CommandButton118_Enter()

  Me.CommandButton118.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton118_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton118.BackColor = &H8000000F

End Sub

Private Sub CommandButton119_Enter()

  Me.CommandButton119.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton119_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton119.BackColor = &H8000000F

End Sub

Private Sub CommandButton269_Enter()

  Me.CommandButton269.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton269_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton269.BackColor = &H8000000F

End Sub

Private Sub CommandButton120_Enter()

  Me.CommandButton120.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton120_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton120.BackColor = &H8000000F

End Sub

Private Sub CommandButton121_Enter()

  Me.CommandButton121.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton121_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton121.BackColor = &H8000000F

End Sub

Private Sub CommandButton122_Enter()

  Me.CommandButton122.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton122_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton122.BackColor = &H8000000F

End Sub

Private Sub CommandButton123_Enter()

  Me.CommandButton123.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton123_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton123.BackColor = &H8000000F

End Sub

Private Sub CommandButton124_Enter()

  Me.CommandButton124.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton124_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton124.BackColor = &H8000000F

End Sub

Private Sub CommandButton125_Enter()

  Me.CommandButton125.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton125_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton125.BackColor = &H8000000F

End Sub

Private Sub CommandButton254_Enter()

  Me.CommandButton254.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton254_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton254.BackColor = &H8000000F

End Sub

Private Sub CommandButton255_Enter()

  Me.CommandButton255.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton255_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton255.BackColor = &H8000000F

End Sub

Private Sub CommandButton257_Enter()

  Me.CommandButton257.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton257_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton257.BackColor = &H8000000F

End Sub

Private Sub CommandButton258_Enter()

  Me.CommandButton258.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton258_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton258.BackColor = &H8000000F

End Sub

Private Sub CommandButton288_Enter()

  Me.CommandButton288.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton288_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton288.BackColor = &H8000000F

End Sub

Private Sub CommandButton289_Enter()

  Me.CommandButton289.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton289_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton289.BackColor = &H8000000F

End Sub

Private Sub CommandButton259_Enter()

  Me.CommandButton259.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton259_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton259.BackColor = &H8000000F

End Sub

Private Sub CommandButton260_Enter()

  Me.CommandButton260.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton260_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton260.BackColor = &H8000000F

End Sub

Private Sub CommandButton126_Enter()

  Me.CommandButton126.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton126_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton126.BackColor = &H8000000F

End Sub

Private Sub CommandButton127_Enter()

  Me.CommandButton127.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton127_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton127.BackColor = &H8000000F

End Sub

Private Sub CommandButton128_Enter()

  Me.CommandButton128.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton128_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton128.BackColor = &H8000000F

End Sub

Private Sub CommandButton129_Enter()

  Me.CommandButton129.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton129_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton129.BackColor = &H8000000F

End Sub

Private Sub CommandButton130_Enter()

  Me.CommandButton130.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton130_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton130.BackColor = &H8000000F

End Sub

Private Sub CommandButton131_Enter()

  Me.CommandButton131.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton131_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton131.BackColor = &H8000000F

End Sub

Private Sub CommandButton132_Enter()

  Me.CommandButton132.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton132_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton132.BackColor = &H8000000F

End Sub

Private Sub CommandButton133_Enter()

  Me.CommandButton133.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton133_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton133.BackColor = &H8000000F

End Sub

Private Sub CommandButton134_Enter()

  Me.CommandButton134.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton134_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton134.BackColor = &H8000000F

End Sub

Private Sub CommandButton135_Enter()

  Me.CommandButton135.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton135_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton135.BackColor = &H8000000F

End Sub

Private Sub CommandButton136_Enter()

  Me.CommandButton136.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton136_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton136.BackColor = &H8000000F

End Sub

Private Sub CommandButton137_Enter()

  Me.CommandButton137.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton137_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton137.BackColor = &H8000000F

End Sub

Private Sub CommandButton138_Enter()

  Me.CommandButton138.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton138_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton138.BackColor = &H8000000F

End Sub

Private Sub CommandButton139_Enter()

  Me.CommandButton139.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton139_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton139.BackColor = &H8000000F

End Sub

Private Sub CommandButton140_Enter()

  Me.CommandButton140.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton140_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton140.BackColor = &H8000000F

End Sub

Private Sub CommandButton141_Enter()

  Me.CommandButton141.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton141_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton141.BackColor = &H8000000F

End Sub

Private Sub CommandButton142_Enter()

  Me.CommandButton142.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton142_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton142.BackColor = &H8000000F

End Sub

Private Sub CommandButton143_Enter()

  Me.CommandButton143.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton143_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton143.BackColor = &H8000000F

End Sub

Private Sub CommandButton144_Enter()

  Me.CommandButton144.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton144_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton144.BackColor = &H8000000F

End Sub

Private Sub CommandButton145_Enter()

  Me.CommandButton145.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton145_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton145.BackColor = &H8000000F

End Sub

Private Sub CommandButton146_Enter()

  Me.CommandButton146.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton146_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton146.BackColor = &H8000000F

End Sub

Private Sub CommandButton147_Enter()

  Me.CommandButton147.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton147_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton147.BackColor = &H8000000F

End Sub

Private Sub CommandButton268_Enter()

  Me.CommandButton268.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton268_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton268.BackColor = &H8000000F

End Sub

Private Sub CommandButton148_Enter()

  Me.CommandButton148.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton148_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton148.BackColor = &H8000000F

End Sub

Private Sub CommandButton149_Enter()

  Me.CommandButton149.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton149_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton149.BackColor = &H8000000F

End Sub

Private Sub CommandButton150_Enter()

  Me.CommandButton150.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton150_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton150.BackColor = &H8000000F

End Sub

Private Sub CommandButton151_Enter()

  Me.CommandButton151.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton151_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton151.BackColor = &H8000000F

End Sub

Private Sub CommandButton152_Enter()

  Me.CommandButton152.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton152_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton152.BackColor = &H8000000F

End Sub

Private Sub CommandButton153_Enter()

  Me.CommandButton153.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton153_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton153.BackColor = &H8000000F

End Sub

Private Sub CommandButton154_Enter()

  Me.CommandButton154.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton154_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton154.BackColor = &H8000000F

End Sub

Private Sub CommandButton155_Enter()

  Me.CommandButton155.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton155_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton155.BackColor = &H8000000F

End Sub

Private Sub CommandButton156_Enter()

  Me.CommandButton156.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton156_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton156.BackColor = &H8000000F

End Sub

Private Sub CommandButton157_Enter()

  Me.CommandButton157.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton157_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton157.BackColor = &H8000000F

End Sub

Private Sub CommandButton158_Enter()

  Me.CommandButton158.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton158_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton158.BackColor = &H8000000F

End Sub

Private Sub CommandButton159_Enter()

  Me.CommandButton159.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton159_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton159.BackColor = &H8000000F

End Sub

Private Sub CommandButton160_Enter()

  Me.CommandButton160.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton160_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton160.BackColor = &H8000000F

End Sub

Private Sub CommandButton161_Enter()

  Me.CommandButton161.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton161_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton161.BackColor = &H8000000F

End Sub

Private Sub CommandButton162_Enter()

  Me.CommandButton162.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton162_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton162.BackColor = &H8000000F

End Sub

Private Sub CommandButton163_Enter()

  Me.CommandButton163.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton163_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton163.BackColor = &H8000000F

End Sub

Private Sub CommandButton164_Enter()

  Me.CommandButton164.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton164_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton164.BackColor = &H8000000F

End Sub

Private Sub CommandButton165_Enter()

  Me.CommandButton165.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton165_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton165.BackColor = &H8000000F

End Sub

Private Sub CommandButton166_Enter()

  Me.CommandButton166.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton166_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton166.BackColor = &H8000000F

End Sub

Private Sub CommandButton167_Enter()

  Me.CommandButton167.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton167_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton167.BackColor = &H8000000F

End Sub

Private Sub CommandButton168_Enter()

  Me.CommandButton168.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton168_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton168.BackColor = &H8000000F

End Sub

Private Sub CommandButton169_Enter()

  Me.CommandButton169.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton169_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton169.BackColor = &H8000000F

End Sub

Private Sub CommandButton246_Enter()

  Me.CommandButton246.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton246_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton246.BackColor = &H8000000F

End Sub

Private Sub CommandButton301_Enter()

  Me.CommandButton301.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton301_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton301.BackColor = &H8000000F

End Sub

Private Sub CommandButton247_Enter()

  Me.CommandButton247.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton247_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton247.BackColor = &H8000000F

End Sub

Private Sub CommandButton302_Enter()

  Me.CommandButton302.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton302_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton302.BackColor = &H8000000F

End Sub

Private Sub CommandButton248_Enter()

  Me.CommandButton248.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton248_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton248.BackColor = &H8000000F

End Sub

Private Sub CommandButton249_Enter()

  Me.CommandButton249.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton249_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton249.BackColor = &H8000000F

End Sub

Private Sub CommandButton250_Enter()

  Me.CommandButton250.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton250_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton250.BackColor = &H8000000F

End Sub

Private Sub CommandButton251_Enter()

  Me.CommandButton251.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton251_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton251.BackColor = &H8000000F

End Sub

Private Sub CommandButton252_Enter()

  Me.CommandButton252.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton252_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton252.BackColor = &H8000000F

End Sub

Private Sub CommandButton253_Enter()

  Me.CommandButton253.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton253_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton253.BackColor = &H8000000F

End Sub

Private Sub CommandButton283_Enter()

  Me.CommandButton283.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton283_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton283.BackColor = &H8000000F

End Sub

Private Sub CommandButton284_Enter()

  Me.CommandButton284.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton284_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton284.BackColor = &H8000000F

End Sub

Private Sub CommandButton285_Enter()

  Me.CommandButton285.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton285_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton285.BackColor = &H8000000F

End Sub

Private Sub CommandButton286_Enter()

  Me.CommandButton286.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton286_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton286.BackColor = &H8000000F

End Sub

Private Sub CommandButton287_Enter()

  Me.CommandButton287.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton287_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton287.BackColor = &H8000000F

End Sub

Private Sub CommandButton291_Enter()

  Me.CommandButton291.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton291_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton291.BackColor = &H8000000F

End Sub

Private Sub CommandButton292_Enter()

  Me.CommandButton292.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton292_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton292.BackColor = &H8000000F

End Sub

Private Sub CommandButton293_Enter()

  Me.CommandButton293.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton293_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton293.BackColor = &H8000000F

End Sub

Private Sub CommandButton294_Enter()

  Me.CommandButton294.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton294_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton294.BackColor = &H8000000F

End Sub

Private Sub CommandButton295_Enter()

  Me.CommandButton295.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton295_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton295.BackColor = &H8000000F

End Sub

Private Sub CommandButton296_Enter()

  Me.CommandButton296.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton296_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton296.BackColor = &H8000000F

End Sub

Private Sub CommandButton297_Enter()

  Me.CommandButton297.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton297_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton297.BackColor = &H8000000F

End Sub

Private Sub CommandButton298_Enter()

  Me.CommandButton298.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton298_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton298.BackColor = &H8000000F

End Sub

Private Sub CommandButton299_Enter()

  Me.CommandButton299.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton299_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton299.BackColor = &H8000000F

End Sub

Private Sub CommandButton300_Enter()

  Me.CommandButton300.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton300_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton300.BackColor = &H8000000F

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox172_Change()
'|fffd||fffd||fffd||fffd|

  SW_DCB = Me.CheckBox172.Value

End Sub

Private Sub CheckBox173_Change()
'|fffd||391||fffd|

  SW_DCI = Me.CheckBox173.Value

End Sub

Private Sub CheckBox174_Change()
'|fffd||fffd||fffd||fffd|

  SW_DCU = Me.CheckBox174.Value

End Sub

Private Sub CheckBox175_Change()
'|fffd||fffd||fffd||fffd||fffd|

  SW_DCK = Me.CheckBox175.Value

End Sub

Private Sub CheckBox176_Change()
'|fffd||fffd||fffd||fffd||fffd|F

  Me.CommandButton246.Enabled = Me.CheckBox176.Value
  Me.CommandButton301.Enabled = Me.CheckBox176.Value
  SW_DCC = Me.CheckBox176.Value

End Sub

Private Sub CommandButton246_Click()
'|fffd||fffd||fffd||fffd||fffd|F|fffd|I|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.CheckBox176
  Set W_BUTTON = Me.CommandButton246
  SW_BGCLR = 0

  Me.CheckBox176.Tag = "SEL"
  If Val(Application.Version) >= 12 Then
     Call SHOW_MODELESS(UserForm15)
     UserForm14.Show
  End If
  If Me.CheckBox176.Tag <> "" Then
     Call SHOW_MODELESS(UserForm15)
     UserForm4.Show
  End If
  Me.CheckBox176.Tag = ""
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DCCLR = Me.CheckBox176.ForeColor
  W_DCTAG = Me.CommandButton246.Tag

End Sub

Private Sub CommandButton301_Click()
'|fffd||fffd||fffd||fffd||fffd|F|fffd|Q|fffd||fffd|

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "C1"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  On Error GoTo LABEL_REP

  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsNull(ActiveCell.Font.Color) = False Then
           Me.CheckBox176.ForeColor = ActiveCell.Font.Color
           W_DCCLR = Me.CheckBox176.ForeColor
           Me.CommandButton246.Tag = -1
           W_DCTAG = Me.CommandButton246.Tag
        Else
           Me.CheckBox176.ForeColor = ActiveCell.Characters(1, 1).Font.Color
           W_DCCLR = Me.CheckBox176.ForeColor
           Me.CommandButton246.Tag = -1
           W_DCTAG = Me.CommandButton246.Tag
        End If
     End If
  End If
        
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CheckBox177_Change()
'|fffd||fffd||fffd||fffd|

  Me.CheckBox182.Enabled = Me.CheckBox177.Value
  SW_DCB2 = Me.CheckBox177.Value

End Sub

Private Sub CheckBox182_Change()
'|fffd||fffd||fffd||fffd|

  SW_DCB3 = Me.CheckBox182.Value

End Sub

Private Sub CheckBox178_Change()
'|fffd||391||fffd|

  Me.CheckBox183.Enabled = Me.CheckBox178.Value
  SW_DCI2 = Me.CheckBox178.Value

End Sub

Private Sub CheckBox183_Change()
'|fffd||391||fffd|

  SW_DCI3 = Me.CheckBox183.Value

End Sub

Private Sub CheckBox179_Change()
'|fffd||fffd||fffd||fffd|

  Me.CheckBox184.Enabled = Me.CheckBox179.Value
  SW_DCU2 = Me.CheckBox179.Value

End Sub

Private Sub CheckBox184_Change()
'|fffd||fffd||fffd||fffd|

  SW_DCU3 = Me.CheckBox184.Value

End Sub

Private Sub CheckBox180_Change()
'|fffd||fffd||fffd||fffd||fffd|

  Me.CheckBox185.Enabled = Me.CheckBox180.Value
  SW_DCK2 = Me.CheckBox180.Value

End Sub

Private Sub CheckBox185_Change()
'|fffd||fffd||fffd||fffd||fffd|

  SW_DCK3 = Me.CheckBox185.Value

End Sub

Private Sub CheckBox181_Change()
'|fffd||fffd||fffd||fffd||fffd|F

  Me.CommandButton247.Enabled = Me.CheckBox181.Value
  Me.CommandButton302.Enabled = Me.CheckBox181.Value
  SW_DCC2 = Me.CheckBox181.Value

End Sub

Private Sub CommandButton247_Click()
'|fffd||fffd||fffd||fffd||fffd|F|fffd|I|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.CheckBox181
  Set W_BUTTON = Me.CommandButton247
  SW_BGCLR = 0
  
  Me.CheckBox181.Tag = "SEL"
  If Val(Application.Version) >= 12 Then
     Call SHOW_MODELESS(UserForm15)
     UserForm14.Show
  End If
  If Me.CheckBox181.Tag <> "" Then
     Call SHOW_MODELESS(UserForm15)
     UserForm4.Show
  End If
  Me.CheckBox181.Tag = ""
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DCCLR2 = Me.CheckBox181.ForeColor
  W_DCTAG2 = Me.CommandButton247.Tag

End Sub

Private Sub CommandButton302_Click()
'|fffd||fffd||fffd||fffd||fffd|F|fffd|Q|fffd||fffd|

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "C2"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  On Error GoTo LABEL_REP

  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsNull(ActiveCell.Font.Color) = False Then
           Me.CheckBox181.ForeColor = ActiveCell.Font.Color
           W_DCCLR2 = Me.CheckBox181.ForeColor
           Me.CommandButton247.Tag = -1
           W_DCTAG2 = Me.CommandButton247.Tag
        Else
           Me.CheckBox181.ForeColor = ActiveCell.Characters(1, 1).Font.Color
           W_DCCLR2 = Me.CheckBox181.ForeColor
           Me.CommandButton247.Tag = -1
           W_DCTAG2 = Me.CommandButton247.Tag
        End If
     End If
  End If
        
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CheckBox171_Change()
'|fffd||fffd||fffd||fffd||fffd||6ce||fffd|

  Me.Label288.Enabled = Me.CheckBox171.Value
  Me.CheckBox177.Enabled = Me.CheckBox171.Value
  Me.CheckBox178.Enabled = Me.CheckBox171.Value
  Me.CheckBox179.Enabled = Me.CheckBox171.Value
  Me.CheckBox180.Enabled = Me.CheckBox171.Value
  Me.CheckBox181.Enabled = Me.CheckBox171.Value
  
  If Me.CheckBox171.Value = False Then
     Me.CheckBox182.Enabled = False
     Me.CheckBox183.Enabled = False
     Me.CheckBox184.Enabled = False
     Me.CheckBox185.Enabled = False
     Me.CommandButton247.Enabled = False
     Me.CommandButton302.Enabled = False
  Else
     Me.CheckBox182.Enabled = Me.CheckBox177.Value
     Me.CheckBox183.Enabled = Me.CheckBox178.Value
     Me.CheckBox184.Enabled = Me.CheckBox179.Value
     Me.CheckBox185.Enabled = Me.CheckBox180.Value
     Me.CommandButton247.Enabled = Me.CheckBox181.Value
     Me.CommandButton302.Enabled = Me.CheckBox181.Value
  End If
  
  SW_CLRKEEP = Me.CheckBox171.Value

End Sub

'|fffd||fffd||fffd||fffd|
Private Sub CheckBox210_Change()
'|fffd||fffd||fffd||343|Z|fffd||fffd||fffd||fffd||fffd||fffd|

  SW_ACF = Me.CheckBox210.Value
  Me.Label339.Enabled = SW_ACF
  Me.Label340.Enabled = SW_ACF
  Me.Label341.Enabled = SW_ACF
  Me.Label352.Enabled = SW_ACF
  Me.Frame1.Enabled = SW_ACF

End Sub

Private Sub CheckBox211_Change()
'|fffd|L|fffd||fffd|1

  SW_AC1 = Me.CheckBox211.Value

End Sub

Private Sub CheckBox212_Change()
'|fffd|L|fffd||fffd|2

  SW_AC2 = Me.CheckBox212.Value

End Sub

Private Sub CheckBox213_Change()
'|fffd|L|fffd||fffd|3

  SW_AC3 = Me.CheckBox213.Value

End Sub

Private Sub CheckBox214_Change()
'|fffd|L|fffd||fffd|4

  SW_AC4 = Me.CheckBox214.Value

End Sub

Private Sub CheckBox216_Change()
'|fffd|L|fffd||fffd|6

  SW_AC6 = Me.CheckBox216.Value

End Sub

Private Sub CheckBox217_Change()
'|fffd|L|fffd||fffd|7

  SW_AC7 = Me.CheckBox217.Value

End Sub

Private Sub CheckBox218_Change()
'|fffd|L|fffd||fffd|8

  SW_AC8 = Me.CheckBox218.Value

End Sub

Private Sub CheckBox219_Change()
'|fffd|L|fffd||fffd|9

  SW_AC9 = Me.CheckBox219.Value

End Sub

Private Sub TextBox70_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox70
     Application.CommandBars("EREPU4").ShowPopup
  End If

End Sub

Private Sub TextBox70_Enter()

  If SW_ORE = True Then
     Me.TextBox70.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox70.BackColor = &HC0FFC0
  Else
     Me.TextBox70.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox70_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox70.BackColor = &H80000005

End Sub

Private Sub TextBox70_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox70.Value) <> 0 Then
        Set W_BOXD = Me.TextBox70
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox70.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox70
        Call PCMPL(W_AC1T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox70.SelStart = Len(Me.TextBox70.Value) And _
        Len(Me.TextBox70.Value) <> 0 Then
        Set W_BOX = Me.TextBox70
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox70.Value, vbCrLf) > 0 Then
     Me.TextBox70.Value = Application.Substitute(Me.TextBox70.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox70.Value, vbTab) > 0 Then
     Me.TextBox70.Value = Application.Substitute(Me.TextBox70.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If
  
  W_AC1T = Me.TextBox70.Value

End Sub

Private Sub TextBox71_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox71
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox71_Enter()

  If SW_ORE = True Then
     Me.TextBox71.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox71.BackColor = &HC0FFC0
  Else
     Me.TextBox71.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox71_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox71.BackColor = &H80000005

End Sub

Private Sub TextBox71_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox71.Value) <> 0 Then
        Set W_BOXD = Me.TextBox71
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox71.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox71
        Call PCMPL(W_AC2T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox71.SelStart = Len(Me.TextBox71.Value) And _
        Len(Me.TextBox71.Value) <> 0 Then
        Set W_BOX = Me.TextBox71
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox71.Value, vbCrLf) > 0 Then
     Me.TextBox71.Value = Application.Substitute(Me.TextBox71.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox71.Value, vbTab) > 0 Then
     Me.TextBox71.Value = Application.Substitute(Me.TextBox71.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC2T = Me.TextBox71.Value

End Sub

Private Sub TextBox72_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox72
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox72_Enter()

  If SW_ORE = True Then
     Me.TextBox72.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox72.BackColor = &HC0FFC0
  Else
     Me.TextBox72.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox72_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox72.BackColor = &H80000005

End Sub

Private Sub TextBox72_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox72.Value) <> 0 Then
        Set W_BOXD = Me.TextBox72
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox72.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox72
        Call PCMPL(W_AC3T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox72.SelStart = Len(Me.TextBox72.Value) And _
        Len(Me.TextBox72.Value) <> 0 Then
        Set W_BOX = Me.TextBox72
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox72.Value, vbCrLf) > 0 Then
     Me.TextBox72.Value = Application.Substitute(Me.TextBox72.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox72.Value, vbTab) > 0 Then
     Me.TextBox72.Value = Application.Substitute(Me.TextBox72.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC3T = Me.TextBox72.Value

End Sub

Private Sub TextBox73_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox73
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox73_Enter()

  If SW_ORE = True Then
     Me.TextBox73.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox73.BackColor = &HC0FFC0
  Else
     Me.TextBox73.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox73_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox73.BackColor = &H80000005

End Sub

Private Sub TextBox73_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox70.Value) <> 0 Then
        Set W_BOXD = Me.TextBox73
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox73.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox73
        Call PCMPL(W_AC4T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox73.SelStart = Len(Me.TextBox73.Value) And _
        Len(Me.TextBox73.Value) <> 0 Then
        Set W_BOX = Me.TextBox73
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox73.Value, vbCrLf) > 0 Then
     Me.TextBox73.Value = Application.Substitute(Me.TextBox73.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox73.Value, vbTab) > 0 Then
     Me.TextBox73.Value = Application.Substitute(Me.TextBox73.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC4T = Me.TextBox73.Value

End Sub

Private Sub TextBox75_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox75
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox75_Enter()

  If SW_ORE = True Then
     Me.TextBox75.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox75.BackColor = &HC0FFC0
  Else
     Me.TextBox75.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox75_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox75.BackColor = &H80000005

End Sub

Private Sub TextBox75_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox70.Value) <> 0 Then
        Set W_BOXD = Me.TextBox75
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox75.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox75
        Call PCMPL(W_AC6T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox75.SelStart = Len(Me.TextBox75.Value) And _
        Len(Me.TextBox75.Value) <> 0 Then
        Set W_BOX = Me.TextBox75
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox75.Value, vbCrLf) > 0 Then
     Me.TextBox75.Value = Application.Substitute(Me.TextBox75.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox75.Value, vbTab) > 0 Then
     Me.TextBox75.Value = Application.Substitute(Me.TextBox75.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC6T = Me.TextBox75.Value

End Sub

Private Sub TextBox76_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox76
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox76_Enter()

  If SW_ORE = True Then
     Me.TextBox76.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox76.BackColor = &HC0FFC0
  Else
     Me.TextBox76.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox76_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox76.BackColor = &H80000005

End Sub

Private Sub TextBox76_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox76.Value) <> 0 Then
        Set W_BOXD = Me.TextBox76
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox76.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox76
        Call PCMPL(W_AC7T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox76.SelStart = Len(Me.TextBox76.Value) And _
        Len(Me.TextBox76.Value) <> 0 Then
        Set W_BOX = Me.TextBox76
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox76.Value, vbCrLf) > 0 Then
     Me.TextBox76.Value = Application.Substitute(Me.TextBox76.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox76.Value, vbTab) > 0 Then
     Me.TextBox76.Value = Application.Substitute(Me.TextBox76.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC7T = Me.TextBox76.Value

End Sub

Private Sub TextBox77_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox77
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox77_Enter()

  If SW_ORE = True Then
     Me.TextBox77.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox77.BackColor = &HC0FFC0
  Else
     Me.TextBox77.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox77_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox77.BackColor = &H80000005

End Sub

Private Sub TextBox77_Change()

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox77.Value) <> 0 Then
        Set W_BOXD = Me.TextBox77
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox77.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox77
        Call PCMPL(W_AC8T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox77.SelStart = Len(Me.TextBox77.Value) And _
        Len(Me.TextBox77.Value) <> 0 Then
        Set W_BOX = Me.TextBox77
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox77.Value, vbCrLf) > 0 Then
     Me.TextBox77.Value = Application.Substitute(Me.TextBox77.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox77.Value, vbTab) > 0 Then
     Me.TextBox77.Value = Application.Substitute(Me.TextBox77.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC8T = Me.TextBox77.Value

End Sub

Private Sub TextBox78_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox78
     Application.CommandBars("EREPU14").ShowPopup
  End If

End Sub

Private Sub TextBox78_Enter()

  If SW_ORE = True Then
     Me.TextBox78.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox78.BackColor = &HC0FFC0
  Else
     Me.TextBox78.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox78_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox78.BackColor = &H80000005

End Sub

Private Sub TextBox78_Change()
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.TextBox78.Value) <> 0 Then
        Set W_BOXD = Me.TextBox78
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False Then
     If Len(Me.TextBox78.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.TextBox78
        Call PCMPL(W_AC9T)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.TextBox78.SelStart = Len(Me.TextBox78.Value) And _
        Len(Me.TextBox78.Value) <> 0 Then
        Set W_BOX = Me.TextBox78
        Call TM_STR
     End If
  End If

  If InStr(Me.TextBox78.Value, vbCrLf) > 0 Then
     Me.TextBox78.Value = Application.Substitute(Me.TextBox78.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox78.Value, vbTab) > 0 Then
     Me.TextBox78.Value = Application.Substitute(Me.TextBox78.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

  W_AC9T = Me.TextBox78.Value

End Sub

Private Sub CheckBox220_Change()
'|fffd||6d2||fffd|1

  SW_AC1D = Me.CheckBox220.Value

End Sub

Private Sub CheckBox221_Change()
'|fffd||6d2||fffd|2

  SW_AC2D = Me.CheckBox221.Value

End Sub

Private Sub CheckBox222_Change()
'|fffd||6d2||fffd|3

  SW_AC3D = Me.CheckBox222.Value

End Sub

Private Sub CheckBox223_Change()
'|fffd||6d2||fffd|4

  SW_AC4D = Me.CheckBox223.Value

End Sub

Private Sub CheckBox225_Change()
'|fffd||6d2||fffd|6

  SW_AC6D = Me.CheckBox225.Value

End Sub

Private Sub CheckBox226_Change()
'|fffd||6d2||fffd|7

  SW_AC7D = Me.CheckBox226.Value

End Sub

Private Sub CheckBox227_Change()
'|fffd||6d2||fffd|8

  SW_AC8D = Me.CheckBox227.Value

End Sub

Private Sub CheckBox228_Change()
'|fffd||6d2||fffd|9

  SW_AC9D = Me.CheckBox228.Value

End Sub

'|fffd|{|fffd||fffd||fffd||fffd|
Private Sub ComboBox59_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox59_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox59.ListIndex
        Me.ComboBox59.DropDown
        Me.ComboBox59.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox59
     Application.CommandBars("EREPU7").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox59_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox59.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox59.BackColor = &HC0FFC0
  Else
     Me.ComboBox59.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox59_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox59.BackColor = &H80000005

End Sub

Private Sub ComboBox59_Change()
'|fffd||1c9||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox59.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox59
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False Then
     If Len(Me.ComboBox59.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox59
        Call PCMPL(W_ATEXT)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox59.SelStart = Len(Me.ComboBox59.Value) And _
        Len(Me.ComboBox59.Value) <> 0 Then
        Set W_BOX = Me.ComboBox59
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox59.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox59.Value, vbCrLf) > 0 Then
     Me.ComboBox59.Value = Application.Substitute(Me.ComboBox59.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox59.Value, vbTab) > 0 Then
     Me.ComboBox59.Value = Application.Substitute(Me.ComboBox59.Value, vbTab, "")
  End If
  
  If SW_PCST = False Then
     W_PCCNT = 0
  End If
  W_ATEXT = Me.ComboBox59.Value
  
End Sub

Private Sub CheckBox186_Change()
'|fffd||6d2||fffd|

  SW_ADDDENY = Me.CheckBox186.Value

End Sub

'|fffd|V|fffd|F|fffd|C|fffd|v
Private Sub OptionButton1_Change()
'|fffd|S|fffd||fffd|
  
  SW_ALLSHP = Me.OptionButton1.Value

End Sub

Private Sub OptionButton2_Change()
'|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||fffd|
  
  SW_COMONLY = Me.OptionButton2.Value

End Sub

Private Sub OptionButton3_Change()
'|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||20a|O
  
  SW_NOTCOM = Me.OptionButton3.Value

End Sub

Private Sub CheckBox189_Change()
'|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||103|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|

  SW_SHPUR = Me.CheckBox189.Value

End Sub

Private Sub CheckBox188_Change()
'|fffd|X|fffd|}|fffd|[|fffd|g|fffd|A|fffd|[|fffd|g|fffd||702||fffd|

  SW_INCSA = Me.CheckBox188.Value

End Sub

'Grep
Private Sub TextBox32_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox32
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub CheckBox190_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h

  SW_HSGREP = Me.CheckBox190.Value

End Sub

Private Sub TextBox32_Enter()

  Me.TextBox32.BackColor = &HC0FFFF

End Sub

Private Sub TextBox32_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox32.BackColor = &H80000005

End Sub

Private Sub TextBox32_Change()

  W_PASSLIST = Me.TextBox32.Value

End Sub

Private Sub CheckBox194_Change()
'|fffd|i|fffd||fffd|

  SW_PRGRSS = Me.CheckBox194.Value

End Sub

Private Sub CheckBox195_Change()
'|fffd|o|fffd||7c3|I|fffd|t

  SW_GHO = Me.CheckBox195.Value

End Sub

Private Sub CheckBox203_Change()
'|fffd|n|fffd|C|fffd||fffd||fffd|C|fffd|g

  SW_GHL = Me.CheckBox203.Value

End Sub

'|fffd|{|fffd||fffd||fffd||fffd|
Private Sub TextBox33_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox33
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox34_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox34
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox35_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox35
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox4_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox4
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox36_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox36
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox6_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox6
     Application.CommandBars("EREPU3").ShowPopup
  End If

End Sub

Private Sub TextBox33_Enter()

  Me.TextBox33.BackColor = &HC0FFFF

End Sub

Private Sub TextBox33_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox33.BackColor = &H80000005

End Sub

Private Sub TextBox34_Enter()

  Me.TextBox34.BackColor = &HC0FFFF

End Sub

Private Sub TextBox34_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox34.BackColor = &H80000005

End Sub

Private Sub TextBox35_Enter()

  Me.TextBox35.BackColor = &HC0FFFF

End Sub

Private Sub TextBox35_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox35.BackColor = &H80000005

End Sub

Private Sub TextBox4_Enter()

  Me.TextBox4.BackColor = &HC0FFFF

End Sub

Private Sub TextBox4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox4.BackColor = &H80000005

End Sub

Private Sub TextBox36_Enter()

  Me.TextBox36.BackColor = &HC0FFFF

End Sub

Private Sub TextBox36_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox36.BackColor = &H80000005

End Sub

Private Sub TextBox6_Enter()

  Me.TextBox6.BackColor = &HC0FFFF

End Sub

Private Sub TextBox6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox6.BackColor = &H80000005

End Sub

Private Sub TextBox33_Change()

  W_PROMTH = Me.TextBox33.Value
  If Right$(W_PROMTH, 11) = ".COLORINDEX" Or _
     Right$(W_PROMTH, 12) = ".SCHEMECOLOR" Then
     Me.CommandButton249.Enabled = True
  Else
     Me.CommandButton249.Enabled = False
  End If

End Sub

Private Sub TextBox34_Change()

  W_VALARG = Me.TextBox34.Value

End Sub

Private Sub TextBox35_Change()

  W_PROMTH2 = Me.TextBox35.Value
  If Right$(W_PROMTH2, 11) = ".COLORINDEX" Or _
     Right$(W_PROMTH2, 12) = ".SCHEMECOLOR" Then
     Me.CommandButton251.Enabled = True
  Else
     Me.CommandButton251.Enabled = False
  End If

End Sub

Private Sub TextBox4_Change()

  W_VALARG2 = Me.TextBox4.Value

End Sub

Private Sub TextBox36_Change()

  W_PROMTH3 = Me.TextBox36.Value
  If Right$(W_PROMTH3, 11) = ".COLORINDEX" Or _
     Right$(W_PROMTH3, 12) = ".SCHEMECOLOR" Then
     Me.CommandButton253.Enabled = True
  Else
     Me.CommandButton253.Enabled = False
  End If

End Sub

Private Sub TextBox6_Change()

  W_VALARG3 = Me.TextBox6.Value

End Sub

Private Sub CommandButton283_Click()
'Diff1st|fffd|w|fffd|i|fffd|F|fffd|I|fffd||fffd|
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.Label325
  Set W_BUTTON = Me.CommandButton283
  SW_BGCLR = 1
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DF1STCLR = Me.Label325.BackColor
  W_DF1STTAG = Me.CommandButton283.Tag

End Sub

Private Sub CommandButton284_Click()
'Diff2nd|fffd|w|fffd|i|fffd|F|fffd|I|fffd||fffd|
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.Label326
  Set W_BUTTON = Me.CommandButton284
  SW_BGCLR = 1
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DF2NDCLR = Me.Label326.BackColor
  W_DF2NDTAG = Me.CommandButton284.Tag

End Sub

Private Sub CommandButton285_Click()
'Diff|fffd|s|fffd||202||fffd||fffd|w|fffd|i|fffd|F|fffd|I|fffd||fffd|
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.Label327
  Set W_BUTTON = Me.CommandButton285
  SW_BGCLR = 1
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DFNOLCLR = Me.Label327.BackColor
  W_DFNOLTAG = Me.CommandButton285.Tag

End Sub

Private Sub CommandButton286_Click()
'Diff|fffd|s|fffd||fffd||fffd||fffd||fffd||655||fffd||fffd||fffd||fffd|F|fffd|I|fffd||fffd|
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Set W_LABEL = Me.Label328
  Set W_BUTTON = Me.CommandButton286
  SW_BGCLR = 0
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_DFINLCLR = Me.Label328.ForeColor
  W_DFINLTAG = Me.CommandButton286.Tag

End Sub

Sub CommandButton287_Click()
'Diff|fffd|F|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g
  
  W_DF1STCLR = &HFFFF&
  W_DF1STTAG = 6
  W_DF2NDCLR = &HFFFF00
  W_DF2NDTAG = 8
  W_DFNOLCLR = &HC0C0C0
  W_DFNOLTAG = 15
  W_DFINLCLR = &HFF&
  W_DFINLTAG = 3

  On Error Resume Next
  Me.Label325.BackColor = W_DF1STCLR
  On Error GoTo 0
  Me.CommandButton283.Tag = W_DF1STTAG
  On Error Resume Next
  Me.Label326.BackColor = W_DF2NDCLR
  On Error GoTo 0
  Me.CommandButton284.Tag = W_DF2NDTAG
  On Error Resume Next
  Me.Label327.BackColor = W_DFNOLCLR
  On Error GoTo 0
  Me.CommandButton285.Tag = W_DFNOLTAG
  On Error Resume Next
  Me.Label328.ForeColor = W_DFINLCLR
  On Error GoTo 0
  Me.CommandButton286.Tag = W_DFINLTAG

End Sub

Private Sub CommandButton257_Click()
'|fffd|Q|fffd||fffd|

  Dim W_CURDIRSV As String
  Dim W_CURDIR As String
  Dim W_FILE As Variant


  If Me.TextBox37.Value <> "" Then
     If Dir(Me.TextBox37.Value) <> "" Then
        W_CURDIR = Left$(Me.TextBox37.Value, InStrRev(Me.TextBox37.Value, "\"))
        W_CURDIRSV = CurDir
        On Error Resume Next
        SetCurrentDirectory W_CURDIR
        On Error GoTo 0
     End If
  End If
  
  '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
  If SW_ENGLISH = True Then
     W_FILE = Application.GetOpenFilename("Text Files (*.txt),*.txt,Excel Files (*.xls?),*.xls?,All Files (*.*), *.*", , "Select 1st file")
  Else
     W_FILE = Application.GetOpenFilename("|fffd|e|fffd|L|fffd|X|fffd|g |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.txt),*.txt,Excel |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.xls?),*.xls?,|fffd||fffd||fffd||5c2||102||303|t|fffd|@|fffd|C|fffd||fffd| (*.*), *.*", , "1|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||30e|w|fffd||fffd|")
  End If
  
  If W_CURDIRSV <> "" Then
     On Error Resume Next
     SetCurrentDirectory W_CURDIRSV
     On Error GoTo 0
  End If
  
  If VarType(W_FILE) = vbBoolean Then
     Exit Sub
  End If
      
  Me.TextBox37.Value = W_FILE

End Sub

Private Sub CommandButton258_Click()
'|fffd|Q|fffd||fffd|

  Dim W_CURDIRSV As String
  Dim W_CURDIR As String
  Dim W_FILE As Variant


  If Me.TextBox38.Value <> "" Then
     If Dir(Me.TextBox38.Value) <> "" Then
        W_CURDIR = Left$(Me.TextBox38.Value, InStrRev(Me.TextBox38.Value, "\"))
        W_CURDIRSV = CurDir
        On Error Resume Next
        SetCurrentDirectory W_CURDIR
        On Error GoTo 0
     End If
  End If
  
  '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
  If SW_ENGLISH = True Then
     W_FILE = Application.GetOpenFilename("Text Files (*.txt),*.txt,Excel Files (*.xls?),*.xls?,All Files (*.*), *.*", , "Select 2nd file")
  Else
     W_FILE = Application.GetOpenFilename("|fffd|e|fffd|L|fffd|X|fffd|g |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.txt),*.txt,Excel |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.xls?),*.xls?,|fffd||fffd||fffd||5c2||102||303|t|fffd|@|fffd|C|fffd||fffd| (*.*), *.*", , "2|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||30e|w|fffd||fffd|")
  End If
  
  If W_CURDIRSV <> "" Then
     On Error Resume Next
     SetCurrentDirectory W_CURDIRSV
     On Error GoTo 0
  End If
  
  If VarType(W_FILE) = vbBoolean Then
     Exit Sub
  End If
      
  Me.TextBox38.Value = W_FILE

End Sub

Private Sub CommandButton288_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select 1st folder"    '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "1|fffd||516||683|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.TextBox37.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.TextBox37.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.TextBox37.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton289_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select 2nd folder"    '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "2|fffd||516||683|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.TextBox38.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.TextBox38.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.TextBox38.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton259_Click()
'|fffd||fffd|r

  Dim RE As Object
  Dim SW_DIR1 As Boolean
  Dim SW_DIR2 As Boolean
  Dim W_1ST As String
  Dim W_2ND As String

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Smart Diff"
  
  If Me.TextBox37.Value = "" Or _
     Me.TextBox38.Value = "" Then
     Exit Sub
  End If
  
  If Dir(Me.TextBox37.Value) <> "" Then
     SW_DIR1 = False
  ElseIf Dir(Me.TextBox37.Value, vbDirectory) <> "" Then
     SW_DIR1 = True
     W_1ST = Me.TextBox37.Value
     If Right$(W_1ST, 1) = "\" Then
        W_1ST = Left$(W_1ST, Len(W_1ST) - 1)
     End If
  Else
     If SW_ENGLISH = True Then
        W_RET = MsgBox("1st file doesn't exist.", vbExclamation)
     Else
        W_RET = MsgBox("1|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox37.SetFocus
     Exit Sub
  End If

  If Dir(Me.TextBox38.Value) <> "" Then
     SW_DIR2 = False
  ElseIf Dir(Me.TextBox38.Value, vbDirectory) <> "" Then
     SW_DIR2 = True
     W_2ND = Me.TextBox38.Value
     If Right$(W_2ND, 1) = "\" Then
        W_2ND = Left$(W_2ND, Len(W_2ND) - 1)
     End If
  Else
     If SW_ENGLISH = True Then
        W_RET = MsgBox("2nd file doesn't exist.", vbExclamation)
     Else
        W_RET = MsgBox("2|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox38.SetFocus
     Exit Sub
  End If

  If SW_DIR1 = SW_DIR2 Then
  Else
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Kinds of 1st and 2nd are not same.", vbExclamation)
     Else
        W_RET = MsgBox("1|fffd||516||682||fffd|2|fffd||516||682||30e||fffd||782||fffd||fffd||fffd|v|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox37.SetFocus
     Exit Sub
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "^\d+$"
     .IgnoreCase = True
     .Global = True
  End With

  If RE.Test(Me.TextBox39.Value) = False Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Start column isn't numeric.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox39.SetFocus
     Set RE = Nothing
     Exit Sub
  End If

  If RE.Test(Me.TextBox40.Value) = False Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("End column isn't numeric.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox40.SetFocus
     Set RE = Nothing
     Exit Sub
  End If

  If CLng(Me.TextBox39.Value) <> 0 And _
     CLng(Me.TextBox40.Value) <> 0 Then
     If CLng(Me.TextBox39.Value) > CLng(Me.TextBox40.Value) Then
        If SW_ENGLISH = True Then
           W_RET = MsgBox("Start column and end column are reversed.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|]|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox39.SetFocus
        Set RE = Nothing
        Exit Sub
     End If
  End If
  
  If RE.Test(Me.TextBox41.Value) = False Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Tab width isn't numeric.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|^|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox41.SetFocus
     Set RE = Nothing
     Exit Sub
  End If

  Set RE = Nothing

  SW_SDCAN = False
  Me.CommandButton259.Enabled = False
  Me.CommandButton260.Enabled = True
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  'DIFF D&D
  Call ED_SUB_CLS

  If SW_DIR1 = False Then
     If (Me.TextBox37.Value Like "*.xls" And _
         Me.TextBox38.Value Like "*.xls") Or _
        (Me.TextBox37.Value Like "*.xls?" And _
         Me.TextBox38.Value Like "*.xls?") Then
        Call XL_DIFF(Me.TextBox37.Value, Me.TextBox38.Value, UserForm1.CheckBox201.Value)
     Else
        Call DIFF(Me.TextBox37.Value, Me.TextBox38.Value)
     End If
  Else
     Call DIR_DIFF(W_1ST, W_2ND, True)
  End If

  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If

  'DIFF D&D
  If ghWnd = 0 Then
     Call ST_SUB_CLS
  End If

  Me.CommandButton259.Enabled = True
  Me.CommandButton260.Enabled = False
  SW_SDCAN = False

  If SW_DIR1 = True Then
     If UserForm1.ListBox12.Visible = True Then
        hwnd = GetActiveWindow
#If Win64 Then
        SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
        SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If
        DrawMenuBar hwnd
        UserForm1.Repaint
     End If
  End If

  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub DIR_DIFF(ByVal W_1ST As String, ByVal W_2ND As String, ByVal SW_BTN As Boolean)

  Dim W_1STDIR As String
  Dim W_2NDDIR As String
  Dim I1 As Long
  Dim I2 As Long
  Dim SW_EOD1 As Boolean
  Dim SW_EOD2 As Boolean
  Dim W_KEY1 As String
  Dim W_KEY2 As String
  Dim SW_DIR1 As Boolean
  Dim SW_DIR2 As Boolean
  Dim W_NAME1 As String
  Dim W_NAME2 As String
  Dim W_SIZE1 As Long
  Dim W_SIZE2 As Long
  Dim AR_LISTWK() As String
  Dim I As Long
  Dim W_DIFF As String
  Dim J As Long
  Dim AR_WK As Variant
  Dim AR_LIST() As String
  
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim W_LISTBOX As Object
  Dim W_TXTBOX1 As Object
  Dim W_TXTBOX2 As Object
  Dim W_PAGE As Long


  W_1STDIR = GET_DIR(W_1ST)
  W_2NDDIR = GET_DIR(W_2ND)
  I1 = -1
  I2 = -1
  I = 0
  Call GET_REC(W_1STDIR, I1, SW_EOD1, W_KEY1, SW_DIR1, W_NAME1, W_SIZE1)
  Call GET_REC(W_2NDDIR, I2, SW_EOD2, W_KEY2, SW_DIR2, W_NAME2, W_SIZE2)
   
  Do While SW_EOD1 = False Or SW_EOD2 = False
     I = I + 1
     ReDim Preserve AR_LISTWK(I)
     
     If W_KEY1 = W_KEY2 And _
        SW_EOD1 = False And _
        SW_EOD2 = False Then
        If SW_DIR1 = True Then
           W_DIFF = "Dir"
        Else
           If W_SIZE1 <> W_SIZE2 Then
              W_DIFF = "*"
           Else
              If JDG_DIFF(W_1ST & "\" & W_NAME1, W_2ND & "\" & W_NAME2) = True Then
                 W_DIFF = "*"
              Else
                 W_DIFF = ""
              End If
           End If
        End If
        AR_LISTWK(I) = W_DIFF & vbTab & W_NAME1 & vbTab & W_NAME2 & vbTab
   
        Call GET_REC(W_1STDIR, I1, SW_EOD1, W_KEY1, SW_DIR1, W_NAME1, W_SIZE1)
        Call GET_REC(W_2NDDIR, I2, SW_EOD2, W_KEY2, SW_DIR2, W_NAME2, W_SIZE2)
     ElseIf W_KEY1 < W_KEY2 And _
            SW_EOD1 = False Then
        If SW_DIR1 = True Then
           W_DIFF = "Dir"
        Else
           W_DIFF = ""
        End If
        AR_LISTWK(I) = W_DIFF & vbTab & W_NAME1 & vbTab & "" & vbTab
   
        Call GET_REC(W_1STDIR, I1, SW_EOD1, W_KEY1, SW_DIR1, W_NAME1, W_SIZE1)
     ElseIf W_KEY1 > W_KEY2 And _
            SW_EOD2 = False Then
        If SW_DIR2 = True Then
           W_DIFF = "Dir"
        Else
           W_DIFF = ""
        End If
        AR_LISTWK(I) = W_DIFF & vbTab & "" & vbTab & W_NAME2 & vbTab
   
        Call GET_REC(W_2NDDIR, I2, SW_EOD2, W_KEY2, SW_DIR2, W_NAME2, W_SIZE2)
     End If
  Loop

  If I > 0 Then
     ReDim AR_LIST(0 To I - 1, 0 To 2)
     For J = 1 To I
        AR_WK = Split(AR_LISTWK(J), vbTab)
        AR_LIST(J - 1, 0) = AR_WK(0)
        AR_LIST(J - 1, 1) = AR_WK(1)
        AR_LIST(J - 1, 2) = AR_WK(2)
     Next J

     If SW_BTN = True Then
        Me.TextBox47.Value = W_1ST
        Me.TextBox48.Value = W_2ND
        With Me.ListBox12
           .list = AR_LIST
           .Enabled = True
           .ListIndex = 0
           .Visible = True
           .MultiSelect = 0
           .Selected(0) = True
        End With
        Me.MultiPage5.Value = 0
        Me.ListBox13.Visible = False
        Me.ListBox14.Visible = False
        Me.ListBox15.Visible = False
        Me.ListBox16.Visible = False
        Me.ListBox17.Visible = False
        Me.ListBox18.Visible = False
        Me.ListBox19.Visible = False
        Me.ListBox20.Visible = False
        Me.ListBox21.Visible = False
     Else
        W_PAGE = 0
        If Me.ListBox13.Visible = False Then
           Set W_LISTBOX = Me.ListBox13
           Set W_TXTBOX1 = Me.TextBox49
           Set W_TXTBOX2 = Me.TextBox50
           W_PAGE = 1
        ElseIf Me.ListBox14.Visible = False Then
           Set W_LISTBOX = Me.ListBox14
           Set W_TXTBOX1 = Me.TextBox51
           Set W_TXTBOX2 = Me.TextBox52
           W_PAGE = 2
        ElseIf Me.ListBox15.Visible = False Then
           Set W_LISTBOX = Me.ListBox15
           Set W_TXTBOX1 = Me.TextBox53
           Set W_TXTBOX2 = Me.TextBox54
           W_PAGE = 3
        ElseIf Me.ListBox16.Visible = False Then
           Set W_LISTBOX = Me.ListBox16
           Set W_TXTBOX1 = Me.TextBox55
           Set W_TXTBOX2 = Me.TextBox56
           W_PAGE = 4
        ElseIf Me.ListBox17.Visible = False Then
           Set W_LISTBOX = Me.ListBox17
           Set W_TXTBOX1 = Me.TextBox57
           Set W_TXTBOX2 = Me.TextBox58
           W_PAGE = 5
        ElseIf Me.ListBox18.Visible = False Then
           Set W_LISTBOX = Me.ListBox18
           Set W_TXTBOX1 = Me.TextBox59
           Set W_TXTBOX2 = Me.TextBox60
           W_PAGE = 6
        ElseIf Me.ListBox19.Visible = False Then
           Set W_LISTBOX = Me.ListBox19
           Set W_TXTBOX1 = Me.TextBox61
           Set W_TXTBOX2 = Me.TextBox62
           W_PAGE = 7
        ElseIf Me.ListBox20.Visible = False Then
           Set W_LISTBOX = Me.ListBox20
           Set W_TXTBOX1 = Me.TextBox63
           Set W_TXTBOX2 = Me.TextBox64
           W_PAGE = 8
        ElseIf Me.ListBox21.Visible = False Then
           Set W_LISTBOX = Me.ListBox21
           Set W_TXTBOX1 = Me.TextBox65
           Set W_TXTBOX2 = Me.TextBox66
           W_PAGE = 9
        End If
        If W_PAGE > 0 Then
           W_TXTBOX1.Value = W_1ST
           W_TXTBOX2.Value = W_2ND
           With W_LISTBOX
              .list = AR_LIST
              .Enabled = True
              .ListIndex = 0
              .Visible = True
              .MultiSelect = 0
              .Selected(0) = True
           End With
           Me.MultiPage5.Value = W_PAGE
           Set W_LISTBOX = Nothing
           Set W_TXTBOX1 = Nothing
           Set W_TXTBOX2 = Nothing
        End If
     End If

     Me.MultiPage2.Visible = False
     Me.MultiPage5.Visible = True
  
     If Me.ToggleButton1.Value = False Then
        If Me.Height <= 246.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 349.5
        ElseIf Me.Height <= 349.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 349.5
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = False Then
        If Me.Height <= 180.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 283.5
        ElseIf Me.Height <= 283.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 283.5
        End If
     End If
  
     If Me.ToggleButton1.Value = True And _
        Me.ToggleButton2.Value = True Then
        If Me.Height <= 160.5 Then
           hwnd = FindWindow(vbNullString, Me.Caption)
           If IsIconic(hwnd) = 1 Then
              ShowWindow hwnd, SW_SHOWNORMAL
           End If
           Me.Height = 263.5
        ElseIf Me.Height <= 263.5 Then
           Me.Height = Me.Height - 0.1
           Me.Height = 263.5
           Call SET_LISTBOX_DFT
        End If
     End If
  End If

End Sub

Private Function GET_DIR(ByVal W_DIR As String) As String

  Dim FSO As Object
  Dim I As Long
  Dim SF As Variant
  Dim FL As Variant

  Dim WWB As Workbook
  Dim WWS As Worksheet
  Dim AR_WK As Variant
  Dim J As Long


  GET_DIR = ""

  Set FSO = CreateObject("Scripting.FileSystemObject")
  With FSO.GetFolder(W_DIR)
     If .SubFolders.count + .Files.count > 0 Then
        ReDim AR_DIR(.SubFolders.count + .Files.count)
        I = 0
        For Each SF In .SubFolders
           I = I + 1
           AR_DIR(I) = "D" & vbTab & SF.Name & vbTab & "0"
        Next
        For Each FL In .Files
           I = I + 1
           AR_DIR(I) = "F" & vbTab & FL.Name & vbTab & FL.Size
        Next
        
        Set WWB = Workbooks.Add
        Set WWS = WWB.Worksheets(1)
        WWS.Cells.NumberFormatLocal = "@"
        For J = 1 To I
           AR_WK = Split(AR_DIR(J), vbTab)
           WWS.Cells(J, 1).Value = AR_WK(0) & vbTab & AR_WK(1)
           WWS.Cells(J, 2).Value = AR_WK(2)
        Next J
        WWS.Range(WWS.Cells(1, 1), WWS.Cells(I, 2)).Sort Key1:=WWS.Cells(1, 1), Orientation:=xlTopToBottom
        For J = 1 To I
           AR_DIR(J) = WWS.Cells(J, 1).Value & vbTab & WWS.Cells(J, 2).Value
        Next J
        Set WWS = Nothing
        WWB.Close False
        Set WWB = Nothing
        
        GET_DIR = Join$(AR_DIR, vbLf)
     End If
  End With
  Set FSO = Nothing

End Function

Private Function GET_REC(ByVal W_AR As String, ByRef W_IX As Long, ByRef SW_EOD As Boolean, ByRef W_KEY As String, ByRef SW_DIR As Boolean, ByRef W_NAME As String, ByRef W_SIZE As Long)

  Dim AR_REC As Variant
  Dim W_REC As String
  Dim AR_WK As Variant


  If W_AR = "" Then
     SW_EOD = True
     W_KEY = Chr$(255)
  Else
     AR_REC = Split(W_AR, vbLf)
     W_IX = W_IX + 1
     If W_IX <= UBound(AR_REC) Then
        W_REC = AR_REC(W_IX)
        AR_WK = Split(W_REC, vbTab)
        W_KEY = AR_WK(0) & vbTab & AR_WK(1)
        If AR_WK(0) = "D" Then
           SW_DIR = True
        Else
           SW_DIR = False
        End If
        W_NAME = AR_WK(1)
        W_SIZE = AR_WK(2)
     Else
        SW_EOD = True
        W_KEY = Chr$(255)
     End If
  End If

End Function

Private Function JDG_DIFF(ByVal W_1ST As String, ByVal W_2ND As String) As Boolean

  Dim W_STR1 As String
  Dim W_STR2 As String
  
  
  JDG_DIFF = False
  
  W_STR1 = GET_STRBIN(W_1ST)
  W_STR2 = GET_STRBIN(W_2ND)
  
  If W_STR1 = W_STR2 Then
  Else
     JDG_DIFF = True
  End If

End Function

Private Function GET_STRBIN(ByVal W_PATH As String) As String

  Dim AR_BIN() As Byte
    
  GET_STRBIN = ""
    
  Open W_PATH For Binary As #1
  ReDim AR_BIN(LOF(1) + 1)
  Get #1, , AR_BIN
  Close #1
  GET_STRBIN = AR_BIN

End Function

Private Sub ListBox12_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox12, Me.TextBox47.Value, Me.TextBox48.Value)
  
End Sub

Private Sub ListBox13_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox13, Me.TextBox49.Value, Me.TextBox50.Value)
  
End Sub

Private Sub ListBox14_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox14, Me.TextBox51.Value, Me.TextBox52.Value)
  
End Sub

Private Sub ListBox15_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox15, Me.TextBox53.Value, Me.TextBox54.Value)
  
End Sub

Private Sub ListBox16_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox16, Me.TextBox55.Value, Me.TextBox56.Value)
  
End Sub

Private Sub ListBox17_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox17, Me.TextBox57.Value, Me.TextBox58.Value)
  
End Sub

Private Sub ListBox18_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox18, Me.TextBox59.Value, Me.TextBox60.Value)
  
End Sub

Private Sub ListBox19_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox19, Me.TextBox61.Value, Me.TextBox62.Value)
  
End Sub

Private Sub ListBox20_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox20, Me.TextBox63.Value, Me.TextBox64.Value)
  
End Sub

Private Sub ListBox21_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|t|fffd|H|fffd||fffd||fffd|_Diff|fffd||fffd||fffd|X|fffd|g
    
  Call LIST_DIFF(Me.ListBox21, Me.TextBox65.Value, Me.TextBox66.Value)
  
End Sub

Private Sub LIST_DIFF(W_LISTBOX As Object, ByVal W_DIR1 As String, ByVal W_DIR2 As String)

  Dim W_1ST As String
  Dim W_2ND As String
 
 
  'DIFF D&D
  Call ED_SUB_CLS
 
  With W_LISTBOX
     W_LI = .ListIndex

     If .list(W_LI, 0) = "" Then
        Exit Sub
     End If

     W_1ST = W_DIR1 & "\" & .list(W_LI, 1)
     W_2ND = W_DIR2 & "\" & .list(W_LI, 2)

     If .list(W_LI, 0) = "Dir" Then
        If .list(W_LI, 1) <> "" And _
           .list(W_LI, 2) <> "" Then
           Call DIR_DIFF(W_1ST, W_2ND, False)
        End If
     Else
        If (W_1ST Like "*.xls" And _
            W_2ND Like "*.xls") Or _
           (W_1ST Like "*.xls?" And _
            W_2ND Like "*.xls?") Then
           Call XL_DIFF(W_1ST, W_2ND, UserForm1.CheckBox201.Value)
        Else
           Call DIFF(W_1ST, W_2ND)
        End If
     End If
  End With

  'DIFF D&D
  If ghWnd = 0 Then
     Call ST_SUB_CLS
  End If

End Sub

Private Sub CommandButton291_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox12, Me.TextBox47.Value, Me.TextBox48.Value)

End Sub

Private Sub CommandButton292_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox13, Me.TextBox49.Value, Me.TextBox50.Value)

End Sub

Private Sub CommandButton293_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox14, Me.TextBox51.Value, Me.TextBox52.Value)

End Sub

Private Sub CommandButton294_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox15, Me.TextBox53.Value, Me.TextBox54.Value)

End Sub

Private Sub CommandButton295_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox16, Me.TextBox55.Value, Me.TextBox56.Value)

End Sub

Private Sub CommandButton296_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox17, Me.TextBox57.Value, Me.TextBox58.Value)

End Sub

Private Sub CommandButton297_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox18, Me.TextBox59.Value, Me.TextBox60.Value)

End Sub

Private Sub CommandButton298_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox19, Me.TextBox61.Value, Me.TextBox62.Value)

End Sub

Private Sub CommandButton299_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox20, Me.TextBox63.Value, Me.TextBox64.Value)

End Sub

Private Sub CommandButton300_Click()
'|fffd||fffd||fffd||5c2||fffd|Diff
  
  Call LIST_DIFF_ALL(Me.ListBox21, Me.TextBox65.Value, Me.TextBox66.Value)

End Sub

Private Sub LIST_DIFF_ALL(W_LISTBOX As Object, ByVal W_DIR1 As String, ByVal W_DIR2 As String)

  Dim I As Long
  Dim W_1ST As String
  Dim W_2ND As String
 
  
  'DIFF D&D
  Call ED_SUB_CLS
 
  With W_LISTBOX
     For I = 0 To W_LISTBOX.ListCount - 1
        If W_LISTBOX.list(I, 0) = "*" Then
           W_1ST = W_DIR1 & "\" & .list(I, 1)
           W_2ND = W_DIR2 & "\" & .list(I, 2)

           If (W_1ST Like "*.xls" And _
               W_2ND Like "*.xls") Or _
              (W_1ST Like "*.xls?" And _
               W_2ND Like "*.xls?") Then
              Call XL_DIFF(W_1ST, W_2ND, UserForm1.CheckBox201.Value)
           Else
              Call DIFF(W_1ST, W_2ND)
           End If
        End If
     Next I
  End With

  'DIFF D&D
  If ghWnd = 0 Then
     Call ST_SUB_CLS
  End If

End Sub

Private Sub CommandButton260_Click()
'|fffd||fffd||fffd|~

  SW_SDCAN = True

End Sub

Private Sub CommandButton248_Click()
'|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd|I|fffd||fffd|

  Dim I As Long


  Erase AR_MTHD

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page1" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page2" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page7" Then
     Call METHOD_RTN(1, I)
  Else
     Call METHOD_RTN(2, I)
  End If

  If I > 0 Then
     Me.MultiPage4.Pages("PAGE5").Tag = "1"
     Call SHOW_MODELESS(UserForm15)
     UserForm17.Show
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton249_Click()
'|fffd|F|fffd|I|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Len(Me.TextBox34.Value) > 1 Then
     If IsNumeric(Right(Me.TextBox34.Value, Len(Me.TextBox34.Value) - 1)) = True Then
        If Right$(W_PROMTH, 11) = ".COLORINDEX" Then
           Me.CommandButton249.Tag = Right(Me.TextBox34.Value, Len(Me.TextBox34.Value) - 1)
        Else
           Me.CommandButton249.Tag = CLng(Right(Me.TextBox34.Value, Len(Me.TextBox34.Value) - 1)) - 7
        End If
     Else
        Me.CommandButton249.Tag = 0
     End If
  Else
     Me.CommandButton249.Tag = 0
  End If
  Set W_LABEL = Me.CommandButton249
  Set W_BUTTON = Me.CommandButton249
  SW_BGCLR = 0
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  Me.CommandButton249.ForeColor = &H80000012
  If Right$(W_PROMTH, 11) = ".COLORINDEX" Then
     Me.TextBox34.Value = "=" & Me.CommandButton249.Tag
  Else
     Me.TextBox34.Value = "=" & Me.CommandButton249.Tag + 7
  End If
  Me.CommandButton249.Tag = ""

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton250_Click()
'|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd|I|fffd||fffd|

  Dim I As Long


  Erase AR_MTHD

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page1" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page2" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page7" Then
     Call METHOD_RTN(1, I)
  Else
     Call METHOD_RTN(2, I)
  End If

  If I > 0 Then
     Me.MultiPage4.Pages("PAGE5").Tag = "2"
     Call SHOW_MODELESS(UserForm15)
     UserForm17.Show
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton251_Click()
'|fffd|F|fffd|I|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Len(Me.TextBox4.Value) > 1 Then
     If IsNumeric(Right(Me.TextBox4.Value, Len(Me.TextBox4.Value) - 1)) = True Then
        If Right$(W_PROMTH2, 11) = ".COLORINDEX" Then
           Me.CommandButton251.Tag = Right(Me.TextBox4.Value, Len(Me.TextBox4.Value) - 1)
        Else
           Me.CommandButton251.Tag = CLng(Right(Me.TextBox4.Value, Len(Me.TextBox4.Value) - 1)) - 7
        End If
     Else
        Me.CommandButton251.Tag = 0
     End If
  Else
     Me.CommandButton251.Tag = 0
  End If
  Set W_LABEL = Me.CommandButton251
  Set W_BUTTON = Me.CommandButton251
  SW_BGCLR = 0
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  Me.CommandButton251.ForeColor = &H80000012
  If Right$(W_PROMTH2, 11) = ".COLORINDEX" Then
     Me.TextBox4.Value = "=" & Me.CommandButton251.Tag
  Else
     Me.TextBox4.Value = "=" & Me.CommandButton251.Tag + 7
  End If
  Me.CommandButton251.Tag = ""

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton252_Click()
'|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd|I|fffd||fffd|

  Dim I As Long


  Erase AR_MTHD

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page1" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page2" Or _
     UserForm1.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page7" Then
     Call METHOD_RTN(1, I)
  Else
     Call METHOD_RTN(2, I)
  End If

  If I > 0 Then
     Me.MultiPage4.Pages("PAGE5").Tag = "3"
     Call SHOW_MODELESS(UserForm15)
     UserForm17.Show
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton253_Click()
'|fffd|F|fffd|I|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Len(Me.TextBox6.Value) > 1 Then
     If IsNumeric(Right(Me.TextBox6.Value, Len(Me.TextBox6.Value) - 1)) = True Then
        If Right$(W_PROMTH3, 11) = ".COLORINDEX" Then
           Me.CommandButton253.Tag = Right(Me.TextBox6.Value, Len(Me.TextBox6.Value) - 1)
        Else
           Me.CommandButton253.Tag = CLng(Right(Me.TextBox6.Value, Len(Me.TextBox6.Value) - 1)) - 7
        End If
     Else
        Me.CommandButton253.Tag = 0
     End If
  Else
     Me.CommandButton253.Tag = 0
  End If
  Set W_LABEL = Me.CommandButton253
  Set W_BUTTON = Me.CommandButton253
  SW_BGCLR = 0
  Call SHOW_MODELESS(UserForm15)
  UserForm4.Show
  Me.CommandButton253.ForeColor = &H80000012
  If Right$(W_PROMTH3, 11) = ".COLORINDEX" Then
     Me.TextBox6.Value = "=" & Me.CommandButton253.Tag
  Else
     Me.TextBox6.Value = "=" & Me.CommandButton253.Tag + 7
  End If
  Me.CommandButton253.Tag = ""

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CheckBox197_Change()
'|fffd||fffd||fffd|s

  SW_ACEXE = Me.CheckBox197.Value

End Sub

Private Sub CheckBox198_Change()
'|fffd||fffd||fffd|s

  SW_ACEXE2 = Me.CheckBox198.Value

End Sub

Private Sub CheckBox199_Change()
'|fffd||fffd||fffd|s

  SW_ACEXE3 = Me.CheckBox199.Value

End Sub

Private Sub CTRLTIP()

  If Me.CheckBox49.Value = True Then
     Me.ComboBox31.ControlTipText = "Find what"
     Me.ComboBox30.ControlTipText = "Replace with"
     Me.ToggleButton7.ControlTipText = "Next"
     Me.ToggleButton8.ControlTipText = "Prev"
     Me.ToggleButton9.ControlTipText = "All"
     Me.CommandButton120.ControlTipText = "Find"
     Me.CommandButton121.ControlTipText = "Replace"
     Me.CommandButton122.ControlTipText = "Close"
     Me.ComboBox2.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox7.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox28.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox17.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox21.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox25.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox9.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox14.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.ComboBox13.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Me.CommandButton281.ControlTipText = "Card UI"
     Me.CommandButton269.ControlTipText = "Synonym (Japanese only)"
     Me.CommandButton119.ControlTipText = "RegEx input sheet"
     Me.CommandButton117.ControlTipText = "RegEx convert"
     Me.CommandButton106.ControlTipText = "Print check"
     Me.CommandButton105.ControlTipText = "RegEx railroad diagram"
     Me.ToggleButton14.ControlTipText = "Settings per tab"
     Me.ToggleButton15.ControlTipText = "Pause background find"
     Me.ToggleButton17.ControlTipText = "Stop background find"
     Me.ToggleButton16.ControlTipText = "Stop background index update"
     Me.ToggleButton5.ControlTipText = "Simple mode"
     Me.ToggleButton6.ControlTipText = "Normal mode"
     Me.CommandButton123.ControlTipText = "Other tabs"
     Me.CommandButton124.ControlTipText = "Proofreading"
     Me.CommandButton125.ControlTipText = "RegEx game"
     Me.CommandButton255.ControlTipText = "Orthographic variants check"
     Me.CommandButton147.ControlTipText = "Send message"
     Me.CommandButton268.ControlTipText = "Analyze password"
     Me.CommandButton169.ControlTipText = "Back shapes"
     Me.ToggleButton11.ControlTipText = "Also target shape"
     
     If Me.ToggleButton1.Value = True Then
        Me.ToggleButton1.ControlTipText = "Full window mode"
     Else
        Me.ToggleButton1.ControlTipText = "Mini window mode"
     End If
  
     If Me.ToggleButton2.Value = True Then
        Me.ToggleButton2.ControlTipText = "Mini window mode"
     Else
        Me.ToggleButton2.ControlTipText = "Mini window mode 2"
     End If
  
     If Me.ToggleButton3.Value = True Then
        Me.ToggleButton3.ControlTipText = "Show buttons"
     Else
        Me.ToggleButton3.ControlTipText = "Show folder"
     End If
  
     If Me.ToggleButton4.Value = True Then
        Me.ToggleButton4.ControlTipText = "Show buttons"
     Else
        Me.ToggleButton4.ControlTipText = "Show folder"
     End If
  
     Me.CommandButton52.ControlTipText = "Select all"
     Me.CommandButton55.ControlTipText = "Select all"
     Me.CommandButton57.ControlTipText = "Select all"
     Me.CommandButton59.ControlTipText = "Select all"
     Me.CommandButton61.ControlTipText = "Select all"
     Me.CommandButton63.ControlTipText = "Select all"
     Me.CommandButton65.ControlTipText = "Select all"
     Me.CommandButton67.ControlTipText = "Select all"
     Me.CommandButton69.ControlTipText = "Select all"
     Me.CommandButton71.ControlTipText = "Select all"
     Me.CommandButton53.ControlTipText = "Release all"
     Me.CommandButton56.ControlTipText = "Release all"
     Me.CommandButton58.ControlTipText = "Release all"
     Me.CommandButton60.ControlTipText = "Release all"
     Me.CommandButton62.ControlTipText = "Release all"
     Me.CommandButton64.ControlTipText = "Release all"
     Me.CommandButton66.ControlTipText = "Release all"
     Me.CommandButton68.ControlTipText = "Release all"
     Me.CommandButton70.ControlTipText = "Release all"
     Me.CommandButton72.ControlTipText = "Release all"
     Me.CommandButton107.ControlTipText = "Select all"
     Me.CommandButton108.ControlTipText = "Select all"
     Me.CommandButton109.ControlTipText = "Select all"
     Me.CommandButton110.ControlTipText = "Select all"
     Me.CommandButton111.ControlTipText = "Select all"
     Me.CommandButton112.ControlTipText = "Select all"
     Me.CommandButton113.ControlTipText = "Select all"
     Me.CommandButton114.ControlTipText = "Select all"
     Me.CommandButton115.ControlTipText = "Select all"
     Me.CommandButton116.ControlTipText = "Select all"
     Me.CommandButton127.ControlTipText = "Minimap"
     Me.CommandButton128.ControlTipText = "Minimap"
     Me.CommandButton129.ControlTipText = "Minimap"
     Me.CommandButton130.ControlTipText = "Minimap"
     Me.CommandButton131.ControlTipText = "Minimap"
     Me.CommandButton132.ControlTipText = "Minimap"
     Me.CommandButton133.ControlTipText = "Minimap"
     Me.CommandButton134.ControlTipText = "Minimap"
     Me.CommandButton135.ControlTipText = "Minimap"
     Me.CommandButton136.ControlTipText = "Minimap"
     Me.CommandButton137.ControlTipText = "Filter"
     Me.CommandButton138.ControlTipText = "Filter"
     Me.CommandButton139.ControlTipText = "Filter"
     Me.CommandButton140.ControlTipText = "Filter"
     Me.CommandButton141.ControlTipText = "Filter"
     Me.CommandButton142.ControlTipText = "Filter"
     Me.CommandButton143.ControlTipText = "Filter"
     Me.CommandButton144.ControlTipText = "Filter"
     Me.CommandButton145.ControlTipText = "Filter"
     Me.CommandButton146.ControlTipText = "Filter"
     Me.CommandButton148.ControlTipText = "Export"
     Me.CommandButton149.ControlTipText = "Export"
     Me.CommandButton150.ControlTipText = "Export"
     Me.CommandButton151.ControlTipText = "Export"
     Me.CommandButton152.ControlTipText = "Export"
     Me.CommandButton153.ControlTipText = "Export"
     Me.CommandButton154.ControlTipText = "Export"
     Me.CommandButton155.ControlTipText = "Export"
     Me.CommandButton156.ControlTipText = "Export"
     Me.CommandButton157.ControlTipText = "Export"
     Me.CommandButton159.ControlTipText = "RegExp Assemble"
     Me.CommandButton160.ControlTipText = "RegExp Assemble"
     Me.CommandButton161.ControlTipText = "RegExp Assemble"
     Me.CommandButton162.ControlTipText = "RegExp Assemble"
     Me.CommandButton163.ControlTipText = "RegExp Assemble"
     Me.CommandButton164.ControlTipText = "RegExp Assemble"
     Me.CommandButton165.ControlTipText = "RegExp Assemble"
     Me.CommandButton166.ControlTipText = "RegExp Assemble"
     Me.CommandButton167.ControlTipText = "RegExp Assemble"
     Me.CommandButton168.ControlTipText = "RegExp Assemble"
  
     Me.CommandButton257.ControlTipText = "1st file"
     Me.CommandButton258.ControlTipText = "2nd file"
     Me.CommandButton288.ControlTipText = "1st folder"
     Me.CommandButton289.ControlTipText = "2nd folder"
  
     Me.CommandButton291.ControlTipText = "Diff all"
     Me.CommandButton292.ControlTipText = "Diff all"
     Me.CommandButton293.ControlTipText = "Diff all"
     Me.CommandButton294.ControlTipText = "Diff all"
     Me.CommandButton295.ControlTipText = "Diff all"
     Me.CommandButton296.ControlTipText = "Diff all"
     Me.CommandButton297.ControlTipText = "Diff all"
     Me.CommandButton298.ControlTipText = "Diff all"
     Me.CommandButton299.ControlTipText = "Diff all"
     Me.CommandButton300.ControlTipText = "Diff all"

     Me.ToggleButton19.ControlTipText = "Thread"
     Me.ToggleButton20.ControlTipText = "Thread"
     Me.ToggleButton21.ControlTipText = "Thread"
     Me.TextBox67.ControlTipText = "Enter pattern with newline separated."
     Me.TextBox68.ControlTipText = "Enter pattern with newline separated."
     Me.TextBox69.ControlTipText = "Enter pattern with newline separated."
  Else
     Me.ComboBox31.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.ComboBox30.ControlTipText = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|"
     Me.ToggleButton7.ControlTipText = "|fffd||fffd|"
     Me.ToggleButton8.ControlTipText = "|fffd|O"
     Me.ToggleButton9.ControlTipText = "|fffd||fffd||fffd||5c2||fffd|"
     Me.CommandButton120.ControlTipText = "|fffd||fffd||fffd||fffd|"
     Me.CommandButton121.ControlTipText = "|fffd|u|fffd||fffd|"
     Me.CommandButton122.ControlTipText = "|fffd||82||fffd||fffd||fffd|"
     Me.ComboBox2.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox7.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox28.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox17.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox21.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox25.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox9.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox14.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.ComboBox13.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.CommandButton281.ControlTipText = "|fffd|J|fffd|[|fffd|hUI"
     Me.CommandButton269.ControlTipText = "|fffd||78b|`|fffd||fffd|"
     Me.CommandButton119.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||343|V|fffd|[|fffd|g"
     Me.CommandButton117.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||3ca||fffd|"
     Me.CommandButton106.ControlTipText = "|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N"
     Me.CommandButton105.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|}|fffd||fffd|"
     Me.ToggleButton14.ControlTipText = "|fffd|^|fffd|u|fffd||290||752||fffd|"
     Me.ToggleButton15.ControlTipText = "|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||a39e||fffd||fffd|~"
     Me.ToggleButton17.ControlTipText = "|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|~"
     Me.ToggleButton16.ControlTipText = "|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|X|fffd|V|fffd||fffd|~"
     Me.ToggleButton5.ControlTipText = "|fffd||208||543||fffd||fffd|[|fffd|h"
     Me.ToggleButton6.ControlTipText = "|fffd||28f||d0c2||fffd|[|fffd|h"
     Me.CommandButton123.ControlTipText = "|fffd||fffd||fffd||311||fffd||fffd||303|^|fffd|u"
     Me.CommandButton124.ControlTipText = "|fffd|Z|fffd||fffd|"
     Me.CommandButton125.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|Q|fffd|[|fffd||fffd|"
     Me.CommandButton255.ControlTipText = "|fffd|\|fffd|L|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N"
     Me.CommandButton147.ControlTipText = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|M"
     Me.CommandButton268.ControlTipText = "|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|"
     Me.CommandButton169.ControlTipText = "|fffd|w|fffd||283|V|fffd|F|fffd|C|fffd|v"
     Me.ToggleButton11.ControlTipText = "|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||38f||fffd|"
  
     If Me.ToggleButton1.Value = True Then
        Me.ToggleButton1.ControlTipText = "|fffd|t|fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     Else
        Me.ToggleButton1.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     End If
  
     If Me.ToggleButton2.Value = True Then
        Me.ToggleButton2.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     Else
        Me.ToggleButton2.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h|fffd|Q"
     End If
  
     If Me.ToggleButton3.Value = True Then
        Me.ToggleButton3.ControlTipText = "|fffd|{|fffd|^|fffd||fffd||fffd|\|fffd||fffd|"
     Else
        Me.ToggleButton3.ControlTipText = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|\|fffd||fffd|"
     End If
  
     If Me.ToggleButton4.Value = True Then
        Me.ToggleButton4.ControlTipText = "|fffd|{|fffd|^|fffd||fffd||fffd|\|fffd||fffd|"
     Else
        Me.ToggleButton4.ControlTipText = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|\|fffd||fffd|"
     End If
  
     Me.CommandButton52.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton55.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton57.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton59.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton61.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton63.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton65.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton67.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton69.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton71.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton53.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton56.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton58.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton60.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton62.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton64.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton66.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton68.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton70.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton72.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
     Me.CommandButton107.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton108.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton109.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton110.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton111.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton112.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton113.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton114.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton115.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton116.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton127.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton128.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton129.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton130.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton131.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton132.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton133.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton134.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton135.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton136.ControlTipText = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v"
     Me.CommandButton137.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton138.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton139.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton140.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton141.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton142.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton143.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton144.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton145.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton146.ControlTipText = "|fffd|t|fffd|B|fffd||fffd||fffd|^"
     Me.CommandButton148.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton149.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton150.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton151.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton152.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton153.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton154.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton155.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton156.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton157.ControlTipText = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g"
     Me.CommandButton159.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton160.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton161.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton162.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton163.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton164.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton165.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton166.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton167.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton168.ControlTipText = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     
     Me.CommandButton257.ControlTipText = "1|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd|"
     Me.CommandButton258.ControlTipText = "2|fffd||516||683|t|fffd|@|fffd|C|fffd||fffd|"
     Me.CommandButton288.ControlTipText = "1|fffd||516||683|t|fffd|H|fffd||fffd||fffd|_"
     Me.CommandButton289.ControlTipText = "2|fffd||516||683|t|fffd|H|fffd||fffd||fffd|_"
  
     Me.CommandButton291.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton292.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton293.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton294.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton295.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton296.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton297.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton298.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton299.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"
     Me.CommandButton300.ControlTipText = "|fffd||fffd||fffd||5c2||114||fffd|r"

     Me.ToggleButton19.ControlTipText = "|fffd|X|fffd||fffd||fffd|b|fffd|h"
     Me.ToggleButton20.ControlTipText = "|fffd|X|fffd||fffd||fffd|b|fffd|h"
     Me.ToggleButton21.ControlTipText = "|fffd|X|fffd||fffd||fffd|b|fffd|h"
     Me.TextBox67.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     Me.TextBox68.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     Me.TextBox69.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
  End If

End Sub

Private Sub CommandButton94_Click()
'|fffd||fffd||fffd||fffd|
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  
  Me.TextBox28.Value = ""
  Me.TextBox29.Value = ""
  
  
  If Me.ToggleButton18.Value = True Then
     Call RAN_RTN
  ElseIf Me.ToggleButton10.Value = False Then
     If Me.ToggleButton12.Value = False Then
        Call RAF_RTN
     Else
        Call RAA_RTN
     End If
  Else
     Call RAR_RTN
  End If
  
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Set RA = Nothing
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub RAN_RTN()
'|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||348||341|j

  Dim RA As Object
  Dim W_MIN As String
  Dim W_MAX As String
  Dim RE As Object
  Dim R As Long
  Dim I As Long
  Dim W_PRE As String
  Dim J As Long
  Dim W_STR As String
  Dim W_STR2 As String
  Dim W_GEN As String
  Dim K As Long
  
  
  W_CLKBTN = "AssembleN"
  On Error GoTo LABEL_REP
  
  W_MIN = Me.TextBox27.Value
  W_MAX = Me.TextBox30.Value
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "^[0-9]+$"
     .IgnoreCase = False
     .Global = True
  End With

  If RE.Test(W_MIN) = False Then
     Set RE = Nothing
     Exit Sub
  End If

  If RE.Test(W_MAX) = False Then
     Set RE = Nothing
     Exit Sub
  End If
  
  Set RE = Nothing
  
  If CLng(W_MIN) > CLng(W_MAX) Then
     Exit Sub
  End If
  
  Set RA = New C05RA
  
  If Len(W_MAX) > Len(W_MIN) Then
     W_MIN = String$(Len(W_MAX) - Len(W_MIN), " ") & W_MIN
  End If

  R = 0
  W_PRE = ""

  For I = 1 To Len(W_MIN)
     If Left$(W_MIN, I) <> Left$(W_MAX, I) Then
        I = I - 1
        Exit For
     End If
  Next I

  If I > 0 Then
     W_PRE = Left$(W_MIN, I)
     W_MIN = Right$(W_MIN, Len(W_MIN) - I)
     W_MAX = Right$(W_MAX, Len(W_MAX) - I)
  End If

  If Len(W_MIN) = 0 Then
     RA.Add W_PRE
     Me.TextBox28.Value = "^" & RA.RE & "$"
     Set RA = Nothing
     Exit Sub
  ElseIf Len(W_MIN) = 1 Then
     If W_MIN = W_MAX Then
        RA.Add W_PRE & W_MAX
     Else
        RA.Add = W_PRE & "[" & W_MIN & "-" & W_MAX & "]"
     End If
     Me.TextBox28.Value = "^" & RA.RE & "$"
     Set RA = Nothing
     Exit Sub
  End If
  
  For I = 1 To Len(W_MIN)
     If Len(W_MIN) - I <= 0 Then
        Exit For
     ElseIf Mid$(W_MIN, Len(W_MIN) - I, 1) = " " Then
        Exit For
     End If
     W_GEN = LTrim$(Left$(W_MIN, Len(W_MIN) - I))
     If Mid$(W_MIN, Len(W_MIN) - I + 1, 1) = "9" Then
        W_GEN = W_GEN & "9"
     Else
        W_GEN = W_GEN & "[" & Mid$(W_MIN, Len(W_MIN) - I + 1, 1) & "-9]"
     End If
     For J = Len(W_MIN) - I + 2 To Len(W_MIN)
        W_GEN = W_GEN & "[0-9]"
     Next J
     RA.Add W_PRE & W_GEN
  Next I

  If Left$(W_MIN, 1) = " " Then
     W_STR = Mid$(W_MIN, Len(W_MIN) - I + 1, 1)
     If Len(W_MIN) - I + 1 = Len(W_MIN) Then
     ElseIf W_STR <> "9" Then
        W_STR = CStr(CLng(W_STR) + 1)
     End If
     W_GEN = LTrim$(Left$(W_MIN, Len(W_MIN) - I - 1))
     If W_STR = "9" Then
        W_GEN = W_GEN & 9
     Else
        W_GEN = W_GEN & "[" & W_STR & "-9]"
     End If
     For J = Len(W_MIN) - I + 2 To Len(W_MIN)
        W_GEN = W_GEN & "[0-9]"
     Next J
     RA.Add W_PRE & W_GEN
  End If

  I = I + 1

  For K = I To Len(W_MIN) - 1
     If Replace(Mid$(W_MIN, Len(W_MIN) - I + 1, 1), " ", "1") = "9" Then
        W_GEN = "9"
     Else
        W_GEN = "[" & Replace(Mid$(W_MIN, Len(W_MIN) - I + 1, 1), " ", "1") & "-9]"
     End If
     For J = Len(W_MIN) - K + 2 To Len(W_MIN)
        W_GEN = W_GEN & "[0-9]"
     Next J
     RA.Add W_PRE & W_GEN
  Next K

  If Left$(W_MIN, 1) = " " Then
     W_STR = Left$(W_MAX, 1)
     If W_STR <> "1" Then
        W_STR = CStr(CLng(W_STR) - 1)
        If Replace(Mid$(W_MIN, Len(W_MIN) - I + 1, 1), " ", "1") = W_STR Then
           W_GEN = W_STR
        Else
           W_GEN = "[" & Replace(Mid$(W_MIN, Len(W_MIN) - I + 1, 1), " ", "1") & "-" & W_STR & "]"
        End If
        For J = 2 To Len(W_MIN)
           W_GEN = W_GEN & "[0-9]"
        Next J
        RA.Add W_PRE & W_GEN
     End If
  Else
     W_STR = Left$(W_MIN, 1)
     If W_STR <> "9" Then
        W_STR = CStr(CLng(W_STR) + 1)
        W_STR2 = Left$(W_MAX, 1)
        If W_STR2 <> "1" Then
           W_STR2 = CStr(CLng(W_STR2) - 1)
           If W_STR = W_STR2 Then
              W_GEN = W_STR2
           Else
              W_GEN = "[" & W_STR & "-" & W_STR2 & "]"
           End If
           For J = 2 To Len(W_MIN)
              W_GEN = W_GEN & "[0-9]"
           Next J
           RA.Add W_PRE & W_GEN
        End If
     End If
  End If

  For I = 2 To Len(W_MAX)
     W_GEN = Left$(W_MAX, I - 1)
     W_STR = Mid$(W_MAX, I, 1)
     If I = Len(W_MAX) Then
        If W_STR = "0" Then
           W_GEN = W_GEN & "0"
        Else
           W_GEN = W_GEN & "[0-" & W_STR & "]"
        End If
        RA.Add W_PRE & W_GEN
     ElseIf W_STR <> "0" Then
        W_STR = CStr(CLng(W_STR) - 1)
        If W_STR = "0" Then
           W_GEN = W_GEN & "0"
        Else
           W_GEN = W_GEN & "[0-" & W_STR & "]"
        End If
        For J = I + 1 To Len(W_MAX)
           W_GEN = W_GEN & "[0-9]"
        Next J
        RA.Add W_PRE & W_GEN
     End If
  Next I
  
  Me.TextBox28.Value = "^" & RA.RE & "$"
  Set RA = Nothing
  
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub RAF_RTN()
'|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j

  Dim RA As Object
  Dim AR_PTN As Variant
  Dim I As Long
  Dim W_ERRM As String
  
  
  W_CLKBTN = "AssembleF"
  
  If Me.TextBox27.Value <> "" Then
     W_EVAR = Me.TextBox27.Value
     Set RA = New C05RA
           
     If Val(Application.Version) >= 9 Then
        AR_PTN = SPLIT2000(Me.TextBox27.Value, vbCrLf)
     Else
        AR_PTN = SPLIT97(Me.TextBox27.Value, vbCrLf)
     End If
 
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .IgnoreCase = False
        .Global = True
     End With
     W_ERRM = ""
     
     For I = 0 To UBound(AR_PTN)
        If AR_PTN(I) <> "" Then
           RE.Pattern = AR_PTN(I)
           On Error GoTo LABEL_ERR
           RE.Test (" ")
           On Error GoTo 0
           
           If W_ERRM = "" Then
              RA.Add AR_PTN(I)
           End If
        End If
     Next I
  
     Set RE = Nothing
     If W_ERRM = "" Then
        Me.TextBox28.Value = RA.RE
     Else
        MsgBox W_ERRM
     End If
     Set RA = Nothing
  End If
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  If W_ERRM = "" Then
     If Me.CheckBox49.Value = True Then
        W_ERRM = "Error exists in following pattern. Check."
     Else
        W_ERRM = "|fffd||209||fffd||fffd||303|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     End If
     W_ERRM = W_ERRM & vbCrLf
  End If
  W_ERRM = W_ERRM & vbCrLf & AR_PTN(I)
  Resume Next

End Sub

Private Function RAF1(ByVal W_MCSTR As String) As String

  Dim AR_PTN As Variant
  Dim I As Long
  Dim RA As Object

  
  RAF1 = ""

  AR_PTN = Split(W_MCSTR, vbCrLf)
  If UBound(AR_PTN) < 1 Then
     Exit Function
  End If

  Set RA = New C05RA
  For I = 0 To UBound(AR_PTN)
     If AR_PTN(I) <> "" Then
        RA.Add AR_PTN(I)
     End If
  Next I
  RAF1 = RA.RE
  Set RA = Nothing

End Function

Private Sub RAA_RTN()
'|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||6c1|j

  Dim W_ERRM As String
  Dim W_PAT As String


  W_CLKBTN = "AssembleA"

  If Me.TextBox27.Value = "" Then
     Exit Sub
  End If

  W_EVAR = Me.TextBox27.Value
  
  W_PAT = RAA1(Me.TextBox27.Value, W_ERRM)
  If W_ERRM <> "" Then
     MsgBox W_ERRM
     Exit Sub
  End If
  
  If Me.ToggleButton13.Value = False Then
     Me.TextBox28.Value = W_PAT
     Exit Sub
  End If
  
  If W_PAT = "" Then
     Exit Sub
  End If
  
  If Me.TextBox30.Value = "" Then
     Exit Sub
  End If
  
  W_PAT = RAA2(W_PAT, Me.TextBox30.Value, W_ERRM)
  If W_ERRM <> "" Then
     MsgBox W_ERRM
     Exit Sub
  End If
  
  If W_PAT <> "" Then
     Me.TextBox28.Value = W_PAT
  End If

End Sub

Private Function RAA1(ByVal W_MCSTR As String, W_ERRM As String) As String
'|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||6c2|P|fffd|j

  Dim AR_PTN As Variant
  Dim I As Long
  Dim J As Long
  Dim AR_BEF() As String
  Dim AR_BEFW() As String

  Dim W_ER As Long
  Dim R As Long
  
  Dim W_BEF1 As String
  Dim H As Long
  Dim K As Long
  Dim RE As Object
  Dim SW_ALLOK As Boolean
  Dim W_ST As Long
  Dim W_LN As Long

  Dim AR_CBEF1() As String
  Dim AR_CBEF2() As String
  Dim W_TABCNT As Long
  Dim AR_WK As Variant
  Dim W_KEY As String
  
  Dim W_PAT As String
  Dim W_PAT1 As String
  Dim W_PAT2 As String
  Dim W_PAT3 As String
  Dim W_PAT0 As String
  Dim W_PATT As String
  Dim W_PATB As String
  Dim W_REP As String
  
  Dim AR_BEFL() As Long
  Dim AR_BEFL0() As Long
  Dim C As Long
  Dim W_BLST As Long
  Dim W_BLLN As Long
  Dim AR_BL() As String
  Dim L As Long
  Dim AR_WK2 As Variant
  
  Dim SW_STRCT As Boolean
  Dim W_STRCT As Long
  Dim SW_SKIP As Boolean

  Dim SW_DIFF As Boolean
  Dim W_DIFF As Long
  Dim J2 As Long
  Dim W_KEY2 As String
  Dim W_DIFF2 As Long

  Dim W_SM As Long
  Dim MATCHES As Object


  RAA1 = ""
  
  AR_PTN = Split(W_MCSTR, vbCrLf)
  If UBound(AR_PTN) < 1 Then
     Exit Function
  End If

  J = 0
  Erase AR_BEF
  Erase AR_BEFW
  W_ERRM = ""
  
  For I = 0 To UBound(AR_PTN)
     If Len(AR_PTN(I)) > 0 Then
        J = J + 1
        ReDim Preserve AR_BEF(J)
        AR_BEF(J) = AR_PTN(I)
        ReDim Preserve AR_BEFW(J)
        AR_BEFW(J) = AR_PTN(I)
     End If
  Next I

  If J < 2 Then
     If Me.CheckBox49.Value = True Then
        W_ERRM = "There are no multiple valid rows."
     Else
        W_ERRM = "|fffd|L|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
     End If
     Exit Function
  End If

  W_ER = J
  ReDim AR_BEFL(W_ER)
  ReDim AR_BEFL0(W_ER)

  On Error GoTo LABEL_ERR
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
  End With

  ReDim AR_CBEF1(Len(AR_BEF(1)))
  ReDim AR_CBEF2(Len(AR_BEF(1)))
  
  C = 0
  
L_RESTART:
  
  W_BEF1 = AR_BEF(1)
  For I = 1 To Len(W_BEF1)
     AR_CBEF1(I) = Chr$(31)
     AR_CBEF2(I) = Mid$(W_BEF1, I, 1)
  Next I
  
  SW_STRCT = True
  
  AR_WK = Split(W_BEF1, vbTab)
  
L_2ND:
  
  H = 0
  W_BLST = 0
  W_BLLN = 0
  
  Do While H <= UBound(AR_WK)
     W_BEF1 = AR_WK(H)
     SW_ALLOK = False
     For R = 1 To UBound(AR_BEFL)
        AR_BEFL(R) = 0
        AR_BEFL0(R) = 0
     Next R
  
     For I = Len(W_BEF1) To 1 Step -1
        SW_DIFF = False
        W_DIFF = -1
        
        For J = 1 To Len(W_BEF1)
           If J + I - 1 > Len(W_BEF1) Then
              Exit For
           End If
        
           For L = J To J + I - 1
              If AR_CBEF1(L) <> Chr$(31) Then
                 GoTo L_NEXTJ
              End If
           Next L
        
           If J > AR_BEFL(1) Then
              W_KEY = Mid$(W_BEF1, J, I)
              SW_ALLOK = True
              For R = 1 To UBound(AR_BEF)
                 If InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) = 0 Then
                    SW_ALLOK = False
                    Exit For
                 ElseIf SW_STRCT = True Then
                    If R = 1 Then
                       W_STRCT = InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY)
                    
                       W_PATT = ""
                       For L = 1 To UBound(AR_CBEF1)
                          If AR_CBEF1(L) <> Chr$(31) Then
                             W_PATT = W_PATT & AR_CBEF1(L)
                          Else
                             W_PATT = W_PATT & "(.*)"
                             For K = L + 1 To UBound(AR_CBEF1)
                                If AR_CBEF1(K) <> Chr$(31) Then
                                   Exit For
                                End If
                             Next K
                             L = K - 1
                          End If
                       Next L
                       RE.Pattern = W_PATT
                       
                       W_SM = -1
                       Set MATCHES = RE.Execute(AR_BEF(R))
                       For L = 0 To MATCHES(0).Submatches.count - 1
                          If InStr(MATCHES(0).Submatches(L), W_KEY) > 0 Then
                             W_SM = L
                             Exit For
                          End If
                       Next L
                       Set MATCHES = Nothing
                    Else
                       Set MATCHES = RE.Execute(AR_BEF(R))
                       If InStr(MATCHES(0).Submatches(W_SM), W_KEY) = 0 Then
                          Set MATCHES = Nothing
                          SW_ALLOK = False
                          Exit For
                       End If
                       Set MATCHES = Nothing
                       
                       If InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) <> W_STRCT Then
                          If InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) - W_STRCT > 0 Then
                             SW_DIFF = True
                             If W_DIFF < InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) - W_STRCT Then
                                W_DIFF = InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) - W_STRCT
                             End If
                          Else
                             SW_ALLOK = False
                             Exit For
                          End If
                       End If
                    End If
                 End If
              Next R
              
              If SW_ALLOK = True And _
                 SW_STRCT = True And _
                 SW_DIFF = True And _
                 W_DIFF > -1 Then
                 W_DIFF2 = -1
                 For J2 = J + 1 To Len(W_BEF1)
                    If J2 + I - 1 > Len(W_BEF1) Then
                       Exit For
                    End If
        
                    If J2 > AR_BEFL(1) Then
                       W_KEY2 = Mid$(W_BEF1, J2, I)
                       SW_ALLOK = True
                       For R = 1 To UBound(AR_BEF)
                          If InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY2) = 0 Then
                             Exit For
                          Else
                             If R = 1 Then
                                W_STRCT = InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY2)
                             Else
                                If W_DIFF2 < InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY2) - W_STRCT And _
                                   InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY2) - W_STRCT >= 0 Then
                                   W_DIFF2 = InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY2) - W_STRCT
                                End If
                             End If
                          End If
                       Next R
              
                       If W_DIFF > W_DIFF2 And _
                          W_DIFF2 >= 0 Then
                          SW_ALLOK = False
                          Exit For
                       End If
                    End If
                 Next J2
              End If
              
              If SW_ALLOK = True Then
                 For R = 1 To UBound(AR_BEFL)
                    AR_BEFL0(R) = AR_BEFL(R)
                    AR_BEFL(R) = InStr(AR_BEFL(R) + 1, AR_BEFW(R), W_KEY) + I - 1
                 Next R
                 
                 W_TABCNT = 0
                 For K = 1 To UBound(AR_CBEF2)
                    If W_TABCNT = H Then
                       Exit For
                    End If
                    If AR_CBEF2(K) = vbTab Then
                       W_TABCNT = W_TABCNT + 1
                    End If
                 Next K
                 W_ST = K
                 
                 For L = 1 To C
                    AR_WK2 = Split(AR_BL(L), ",")
                    If W_ST + J - 1 = CLng(AR_WK2(0)) And _
                       I = CLng(AR_WK2(1)) Then
                       SW_ALLOK = False
                       Exit For
                    End If
                 Next L
                 
                 If SW_ALLOK = False Then
                    Exit For
                 End If
                 
                 W_BLST = W_ST + J - 1
                 W_BLLN = I
                 
                 SW_SKIP = False
                                  
                 If SW_STRCT = False And _
                    I = 1 Then
                    For K = J To J + I - 1
                       If K = J And _
                          W_ST + K - 2 > 0 Then
                          If AR_CBEF1(W_ST + K - 2) <> Chr$(31) Then
                             SW_SKIP = True
                             Exit For
                          End If
                       End If
                       If K = J + I - 1 And _
                          W_ST + K <= UBound(AR_CBEF1) Then
                          If AR_CBEF1(W_ST + K) <> Chr$(31) Then
                             SW_SKIP = True
                             Exit For
                          End If
                       End If
                    Next K
                 End If
                 
                 If SW_SKIP = False Then
                    For K = J To J + I - 1
                       AR_CBEF1(W_ST + K - 1) = Mid$(AR_BEF(1), W_ST + K - 1, 1)
'''                       AR_CBEF2(W_ST + K - 1) = vbTab
                       If K = J And _
                          W_ST + K - 2 > 0 Then
                          If AR_CBEF1(W_ST + K - 2) <> Chr$(31) Then
                             AR_CBEF1(W_ST + K - 1) = ".*?" & AR_CBEF1(W_ST + K - 1)
                          End If
                       End If
                       If K = J + I - 1 And _
                          W_ST + K <= UBound(AR_CBEF1) Then
                          If AR_CBEF1(W_ST + K) <> Chr$(31) Then
                             AR_CBEF1(W_ST + K - 1) = AR_CBEF1(W_ST + K - 1) & ".*?"
                          End If
                       End If
                    Next K
                 Else
                    SW_ALLOK = False
                 End If
              
'''                 If SW_ALLOK = True Then
'''                    For R = 1 To UBound(AR_BEFL)
'''                       Mid$(AR_BEFW(R), InStr(AR_BEFL0(R) + 1, AR_BEFW(R), W_KEY), I) = String$(I, vbTab)
'''                    Next R
'''                 End If
                 
                 J = J + I - 1
              End If
           End If
L_NEXTJ:
        Next J
  
        If SW_ALLOK = True Then
           Exit For
        End If
     Next I
  
     If SW_ALLOK = True Then
        AR_WK = Split(Join$(AR_CBEF2, ""), vbTab)
        H = -1
     End If
     H = H + 1
  Loop

  If SW_STRCT = True Then
     SW_STRCT = False
     GoTo L_2ND
  End If
  
  W_PAT = Join$(AR_CBEF1, "")
  
  W_PAT = Replace(W_PAT, ".*?", vbLf)
  
  W_PAT = Replace(W_PAT, "\", Chr$(1))
  W_PAT = Replace(W_PAT, "(", Chr$(2))
  W_PAT = Replace(W_PAT, ")", Chr$(3))
  W_PAT = Replace(W_PAT, "[", Chr$(4))
  W_PAT = Replace(W_PAT, "]", Chr$(5))
  W_PAT = Replace(W_PAT, "{", Chr$(6))
  W_PAT = Replace(W_PAT, "}", Chr$(7))
  W_PAT = Replace(W_PAT, ".", Chr$(14))
  W_PAT = Replace(W_PAT, "*", Chr$(15))
  W_PAT = Replace(W_PAT, "+", Chr$(16))
  W_PAT = Replace(W_PAT, "?", Chr$(17))
  W_PAT = Replace(W_PAT, "|", Chr$(18))
  W_PAT = Replace(W_PAT, "^", Chr$(28))
  W_PAT = Replace(W_PAT, "$", Chr$(29))
  
  If InStr(W_PAT, Chr$(31)) = 0 Then
     W_PAT = Replace(W_PAT, Chr$(1), "\\")
     W_PAT = Replace(W_PAT, Chr$(2), "\(")
     W_PAT = Replace(W_PAT, Chr$(3), "\)")
     W_PAT = Replace(W_PAT, Chr$(4), "\[")
     W_PAT = Replace(W_PAT, Chr$(5), "\]")
     W_PAT = Replace(W_PAT, Chr$(6), "\{")
     W_PAT = Replace(W_PAT, Chr$(7), "\}")
     W_PAT = Replace(W_PAT, Chr$(14), "\.")
     W_PAT = Replace(W_PAT, Chr$(15), "\*")
     W_PAT = Replace(W_PAT, Chr$(16), "\+")
     W_PAT = Replace(W_PAT, Chr$(17), "\?")
     W_PAT = Replace(W_PAT, Chr$(18), "\|")
     W_PAT = Replace(W_PAT, Chr$(28), "\^")
     W_PAT = Replace(W_PAT, Chr$(29), "\$")
     
     W_PAT = Replace(W_PAT, vbLf, ".*?")
     
     For I = 1 To 4
        Select Case I
        Case 1
           RE.Pattern = "^" & W_PAT & "$"
        Case 2
           RE.Pattern = "^.*?" & W_PAT & "$"
        Case 3
           RE.Pattern = "^" & W_PAT & ".*?$"
        Case 4
           RE.Pattern = "^.*?" & W_PAT & ".*?$"
        End Select
     
        SW_ALLOK = True
           
        For R = 1 To UBound(AR_BEF)
           If RE.Test(AR_BEF(R)) = False Then
              SW_ALLOK = False
              Exit For
           End If
        Next R
       
        If SW_ALLOK = True Then
           W_PAT = Mid$(RE.Pattern, 2, Len(RE.Pattern) - 2)
           Exit For
        End If
     Next I
  End If
  
  Do While InStr(W_PAT, Chr$(31)) > 0
     W_ST = InStr(W_PAT, Chr$(31))
     W_LN = 1
     For K = W_ST + 1 To Len(W_PAT)
        If Mid$(W_PAT, K, 1) = Chr$(31) Then
           W_LN = W_LN + 1
        Else
           Exit For
        End If
     Next K
  
     W_PAT1 = ""
     W_PAT2 = ""
     W_PAT3 = ""
     If W_ST - 1 > 0 Then
        W_PAT1 = Left$(W_PAT, W_ST - 1)
     End If
     W_PAT2 = Chr$(127)
     If Len(W_PAT) - W_ST - W_LN + 1 > 0 Then
        W_PAT3 = Right$(W_PAT, Len(W_PAT) - W_ST - W_LN + 1)
     End If
     W_PAT0 = W_PAT1 & W_PAT2 & W_PAT3
  
     For I = 1 To 6
        Select Case I
        Case 1
           If W_LN = 1 Then
              W_REP = "\d"
           Else
              W_REP = "\d{" & W_LN & "}"
           End If
        Case 2
           W_REP = "\d*?"
        Case 3
           If W_LN = 1 Then
              W_REP = "\w"
           Else
              W_REP = "\w{" & W_LN & "}"
           End If
        Case 4
           W_REP = "\w*?"
        Case 5
           If W_LN = 1 Then
              W_REP = "."
           Else
              W_REP = ".{" & W_LN & "}"
           End If
        Case 6
           W_REP = ".*?"
        End Select
        W_PATT = Replace(W_PAT0, Chr$(127), W_REP)
        
        W_PATT = Replace(W_PATT, Chr$(1), "\\")
        W_PATT = Replace(W_PATT, Chr$(2), "\(")
        W_PATT = Replace(W_PATT, Chr$(3), "\)")
        W_PATT = Replace(W_PATT, Chr$(4), "\[")
        W_PATT = Replace(W_PATT, Chr$(5), "\]")
        W_PATT = Replace(W_PATT, Chr$(6), "\{")
        W_PATT = Replace(W_PATT, Chr$(7), "\}")
        W_PATT = Replace(W_PATT, Chr$(14), "\.")
        W_PATT = Replace(W_PATT, Chr$(15), "\*")
        W_PATT = Replace(W_PATT, Chr$(16), "\+")
        W_PATT = Replace(W_PATT, Chr$(17), "\?")
        W_PATT = Replace(W_PATT, Chr$(18), "\|")
        W_PATT = Replace(W_PATT, Chr$(28), "\^")
        W_PATT = Replace(W_PATT, Chr$(29), "\$")
        
        W_PATT = Replace(W_PATT, vbLf, ".*?")
        
        W_PATB = W_PATT
          
        Do While InStr(W_PATT, Chr$(31) & Chr$(31)) > 0
           W_PATT = Replace(W_PATT, Chr$(31) & Chr$(31), Chr$(31))
        Loop
        W_PATT = Replace(W_PATT, Chr$(31), ".*?")
          
        RE.Pattern = "^" & W_PATT & "$"
        SW_ALLOK = True
           
        For R = 1 To UBound(AR_BEF)
           If RE.Test(AR_BEF(R)) = False Then
              SW_ALLOK = False
              Exit For
           End If
        Next R
          
        If SW_ALLOK = True Then
           Exit For
        End If
     Next I
  
     W_PAT = W_PATB
  Loop
  
  If SW_ALLOK = True Then
     RAA1 = W_PAT
  Else
     If W_BLST > 0 And _
        W_BLLN > 0 Then
        C = C + 1
        ReDim Preserve AR_BL(C)
        AR_BL(C) = W_BLST & "," & W_BLLN
        GoTo L_RESTART
     End If
  End If

  Set RE = Nothing
  
  Exit Function
  
LABEL_ERR:
  
  On Error GoTo 0
  If Me.CheckBox49.Value = True Then
     W_ERRM = "RegEx Assemble failed."
  Else
     W_ERRM = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
  End If

End Function

Private Function RAA2(ByVal W_PAT As String, ByVal W_NMCSTR As String, W_ERRM As String) As String
'|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||6c2|Q|fffd|j

  Dim AR_PTN As Variant
  Dim I As Long
  Dim J As Long

  Dim R As Long
  
  Dim RE As Object
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_LN As Long

  Dim AR_NBEF() As String
  Dim W_ER2 As Long
  Dim W_MAXB As Long
  Dim RA As Object
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim R1 As Long
  Dim R2 As Long
  Dim R3 As Long
  Dim AR_STR1() As String
  Dim AR_STR2() As String
  Dim AR_STR3() As String
  Dim SW_HIT As Boolean


  RAA2 = ""
  
  On Error GoTo LABEL_ERR
  
  AR_PTN = Split(W_NMCSTR, vbCrLf)
  If UBound(AR_PTN) < 0 Then
     Exit Function
  End If

  J = 0
  Erase AR_NBEF
  
  For I = 0 To UBound(AR_PTN)
     If Len(AR_PTN(I)) > 0 Then
        J = J + 1
        ReDim Preserve AR_NBEF(J)
        AR_NBEF(J) = AR_PTN(I)
     End If
  Next I

  W_MAXB = 0
  On Error Resume Next
  W_MAXB = UBound(AR_NBEF)
  On Error GoTo LABEL_ERR
  
  If W_MAXB = 0 Then
     Exit Function
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_PAT
     .IgnoreCase = True
     .Global = False
  End With
     
  R1 = 0
  R2 = 0
  R3 = 0
  Erase AR_STR1
  Erase AR_STR2
  Erase AR_STR3
  SW_HIT = False

  For R = 1 To W_MAXB
     If RE.Test(AR_NBEF(R)) = True Then
        SW_HIT = True
        Set MATCHES = RE.Execute(AR_NBEF(R))
        W_ST = MATCHES.Item(0).FirstIndex + 1
        W_LN = MATCHES.Item(0).Length
        W_STR3 = MATCHES.Item(0)
        Set MATCHES = Nothing
        W_STR1 = ""
        If W_ST - 1 > 0 Then
           W_STR1 = Left$(AR_NBEF(R), W_ST - 1)
        End If
        W_STR2 = ""
        If Len(AR_NBEF(R)) - W_ST - W_LN + 1 > 0 Then
           W_STR2 = Right$(AR_NBEF(R), Len(AR_NBEF(R)) - W_ST - W_LN + 1)
        End If
        If W_STR1 <> "" Then
           R1 = R1 + 1
           ReDim Preserve AR_STR1(R1)
           AR_STR1(R1) = W_STR1
        End If
        If W_STR2 <> "" Then
           R2 = R2 + 1
           ReDim Preserve AR_STR2(R2)
           AR_STR2(R2) = W_STR2
        End If
        If W_STR1 = "" And _
           W_STR2 = "" Then
           R3 = R3 + 1
           ReDim Preserve AR_STR3(R3)
           AR_STR3(R3) = W_STR3
        End If
     End If
  Next R

  Set RE = Nothing
  
  W_STR1 = ""
  W_STR2 = ""
  W_STR3 = ""

  If R1 > 0 Then
     Set RA = New C05RA
     For R = 1 To R1
        RA.Add AR_STR1(R)
     Next R
     W_STR1 = RA.RE
     Set RA = Nothing
  End If
     
  If R2 > 0 Then
     Set RA = New C05RA
     For R = 1 To R2
        RA.Add AR_STR2(R)
     Next R
     W_STR2 = RA.RE
     Set RA = Nothing
  End If

  If R3 > 0 Then
     Set RA = New C05RA
     For R = 1 To R3
        RA.Add AR_STR3(R)
     Next R
     W_STR3 = RA.RE
     Set RA = Nothing
  End If

  If W_STR1 <> "" Then
     W_STR1 = "(?<!" & W_STR1 & ")"
  End If

  If W_STR2 <> "" Then
     W_STR2 = "(?!" & W_STR2 & ")"
  End If

  If W_STR3 <> "" Then
     W_STR3 = "(?!" & W_STR3 & ")"
  End If

  If SW_HIT = False Then
     RAA2 = W_PAT
  Else
     If W_STR1 <> "" Or _
        W_STR2 <> "" Or _
        W_STR3 <> "" Then
        RAA2 = W_STR1 & W_STR3 & W_PAT & W_STR2
     End If
  End If

  Exit Function
  
LABEL_ERR:
  
  On Error GoTo 0
  If Me.CheckBox49.Value = True Then
     W_ERRM = "RegEx Assemble failed."
  Else
     W_ERRM = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
  End If

End Function

Private Sub RAR_RTN()
'|fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j

  Dim AR_PTN As Variant
  Dim I As Long
  Dim AR_WK As Variant
  Dim J As Long
  Dim AR_BEF() As String
  Dim AR_AFT() As String
  Dim W_ERRM As String

  Dim W_ER As Long
  Dim R As Long
  Dim W_BEF As String
  Dim W_AFT As String
  Dim W_AFT1 As String
  Dim H As Long
  Dim K As Long
  Dim W_FW As String
  Dim W_RP As String
  Dim RE As Object
  Dim MATCHES As Object
  Dim SW_ALLOK As Boolean
  Dim SW_OK As Boolean
  Dim RE2 As Object
  Dim AR_BEFW() As String
  Dim AR_AFTW() As String
  Dim W_ST2 As Long
  Dim W_STR As String

  Dim AR_CBEF1() As String
  Dim AR_CBEF2() As String
  Dim FI As Long
  Dim LN As Long
  Dim M As Long
  Dim CNT As Long
  
  Dim AR_CAFT1() As String
  Dim AR_CAFT2() As String
  Dim AR_CAFT3() As Long

  Dim FI2 As Long
  Dim LN2 As Long


  W_CLKBTN = "AssembleR"

  If Me.TextBox27.Value = "" Then
     Exit Sub
  End If

  W_EVAR = Me.TextBox27.Value
  AR_PTN = Split(Me.TextBox27.Value, vbCrLf)
  If UBound(AR_PTN) < 1 Then
     Exit Sub
  End If

  J = 0
  Erase AR_BEF
  Erase AR_AFT
  W_ERRM = ""
  
  For I = 0 To UBound(AR_PTN)
     If InStr(AR_PTN(I), vbTab) > 0 Then
        AR_WK = Split(AR_PTN(I), vbTab)
        If Len(AR_WK(0)) > 0 And _
           Len(AR_WK(1)) > 0 Then
           J = J + 1
           ReDim Preserve AR_BEF(J)
           AR_BEF(J) = AR_WK(0)
           ReDim Preserve AR_AFT(J)
           AR_AFT(J) = AR_WK(1)
           If J > 1 Then
              If Len(AR_BEF(J)) <> Len(AR_BEF(1)) Then
                 If Me.CheckBox49.Value = True Then
                    W_ERRM = "Length of find what differs."
                 Else
                    W_ERRM = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|O|fffd|X|fffd||fffd||fffd||fffd||fffd||10b5||fffd||102||fffd||fffd||702||fffd||fffd|B"
                 End If
              End If
              If Len(AR_AFT(J)) <> Len(AR_AFT(1)) Then
                 If W_ERRM <> "" Then
                    W_ERRM = W_ERRM & vbCrLf
                 End If
                 If Me.CheckBox49.Value = True Then
                    W_ERRM = W_ERRM & "Length of replace with differs."
                 Else
                    W_ERRM = W_ERRM & "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|O|fffd|X|fffd||fffd||fffd||fffd||fffd||10b5||fffd||102||fffd||fffd||702||fffd||fffd|B"
                 End If
              End If
              If W_ERRM <> "" Then
                 MsgBox W_ERRM
                 Exit Sub
              End If
           End If
        End If
     End If
  Next I

  If J < 2 Then
     If Me.CheckBox49.Value = True Then
        W_ERRM = "There are no multiple valid rows."
     Else
        W_ERRM = "|fffd|L|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
     End If
     MsgBox W_ERRM
     Exit Sub
  End If

  W_ER = J
  ReDim AR_BEFW(W_ER)
  ReDim AR_AFTW(W_ER)

  On Error GoTo LABEL_ERR
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
  End With

  Set RE2 = CreateObject("VBScript.RegExp")
  With RE2
     .IgnoreCase = True
     .Global = True
  End With
  
  For H = 1 To UBound(AR_BEF)
     For R = 1 To W_ER
        AR_BEFW(R) = AR_BEF(R)
        AR_AFTW(R) = AR_AFT(R)
     Next R
     
     W_BEF = AR_BEF(H)
     W_AFT1 = AR_AFT(H)
  
     ReDim AR_CBEF1(Len(AR_BEF(H)))
     ReDim AR_CBEF2(Len(AR_BEF(H)))
     ReDim AR_CAFT1(Len(AR_AFT(H)))
     ReDim AR_CAFT2(Len(AR_AFT(H)))
     ReDim AR_CAFT3(Len(AR_AFT(H)))
  
     For K = 1 To Len(W_AFT1)
        AR_CAFT1(K) = Mid$(W_AFT1, K, 1)
        AR_CAFT2(K) = Mid$(W_AFT1, K, 1)
     Next K
  
     For I = Len(W_AFT1) To 1 Step -1
        SW_OK = False
             
        For J = 1 To Len(W_AFT1)
           W_AFT = ""
           On Error Resume Next
           W_AFT = Mid$(W_AFT1, J, I)
           On Error GoTo LABEL_ERR
           If I > Len(W_AFT) Then
              W_AFT = ""
           End If
   
           If W_AFT <> "" And _
              InStr(W_BEF, W_AFT) > 0 Then
              W_STR = Join$(AR_CAFT1, "")
                    
              Do While InStr(W_STR, W_AFT) > 0
                 RE.Pattern = W_AFT
                 
                 Set MATCHES = RE.Execute(W_BEF)
                 FI = MATCHES.Item(0).FirstIndex + 1
                 LN = MATCHES.Item(0).Length

                 AR_CBEF1(FI) = "(.{" & LN & "})"
                 For K = FI To FI + LN - 1
                    AR_CBEF2(K) = "*"
                 Next K
                             
                 For K = 1 To UBound(AR_CBEF1)
                    If Left$(AR_CBEF1(K), 1) = "(" Then
                    Else
                       AR_CBEF1(K) = ""
                    End If
                 Next K
                 
                 For K = 1 To UBound(AR_CBEF2)
                    If AR_CBEF2(K) = "" Then
                       CNT = 0
                       For M = K To UBound(AR_CBEF2)
                          If AR_CBEF2(M) = "" Then
                             CNT = CNT + 1
                          Else
                             Exit For
                          End If
                       Next M
                       AR_CBEF1(K) = ".{" & CNT & "}"
                       K = M
                    End If
                 Next K
                                  
                 W_FW = Join$(AR_CBEF1, "")
                 Set MATCHES = Nothing

                 W_STR = Join$(AR_CAFT1, "")
                 
                 Set MATCHES = RE.Execute(W_STR)
                 FI2 = MATCHES.Item(0).FirstIndex + 1
                 LN2 = MATCHES.Item(0).Length
                 
                 For K = FI2 To FI2 + LN2 - 1
                    AR_CAFT1(K) = vbTab
                    AR_CAFT3(K) = -1
                 Next K
                
                 AR_CAFT2(FI2) = "$N"
                 AR_CAFT3(FI2) = FI
                
                 For K = 1 To UBound(AR_CAFT2)
                    If Len(AR_CAFT2(K)) > 1 Then
                       CNT = 0
                       For M = 1 To UBound(AR_CAFT3)
                          If AR_CAFT3(K) > AR_CAFT3(M) And _
                             AR_CAFT3(M) > 0 Then
                             CNT = CNT + 1
                          End If
                       Next M
                       CNT = CNT + 1
                       AR_CAFT2(K) = "$" & CNT
                    Else
                       If AR_CAFT3(K) <> 0 Then
                          AR_CAFT1(K) = vbTab
                          AR_CAFT2(K) = ""
                       End If
                    End If
                 Next K
                                  
                 W_RP = Join$(AR_CAFT2, "")
                 Set MATCHES = Nothing
                 
                 RE2.Pattern = W_FW
                 SW_ALLOK = True
                 SW_OK = True
                                         
                 Set MATCHES = RE.Execute(AR_AFTW(H))
                 W_ST2 = MATCHES.Item(0).FirstIndex + 1
                 Set MATCHES = Nothing
                                         
                 For R = 1 To W_ER
                    If RE2.Test(AR_BEF(R)) = False Then
                       SW_ALLOK = False
                       Exit For
                    End If
                     
                    If AR_AFT(R) <> RE2.Replace(AR_BEF(R), W_RP) Then
                       SW_ALLOK = False
                    End If
                 
                    If SW_ALLOK = False Then
                       If Mid$(AR_BEFW(R), InStr(W_BEF, W_AFT), I) <> Mid$(AR_AFTW(R), W_ST2, I) Then
                          SW_OK = False
                          Exit For
                       End If
                    End If
                 Next R
              
                 If SW_ALLOK = True Then
                    Exit Do
                 End If
              
                 If SW_OK = True Then
                 Else
                    W_RP = ""
                    Exit Do
                 End If
              
                 W_STR = Join$(AR_CAFT1, "")
              Loop
           
              If SW_ALLOK = True Then
                 Exit For
              End If
           
              If SW_OK = True Then
                 For R = 1 To W_ER
                    Mid$(AR_BEFW(R), InStr(W_BEF, W_AFT), I) = String$(I, vbTab)
                    Mid$(AR_AFTW(R), W_ST2, I) = String$(I, vbTab)
                 Next R
                 
                 Mid$(W_BEF, InStr(W_BEF, W_AFT), I) = String$(I, vbTab)
              End If
           Else
              W_AFT = ""
           End If
        Next J
   
        If SW_ALLOK = True Then
           Exit For
        End If
     Next I

     If SW_ALLOK = True Then
        Exit For
     End If
  Next H

  Set RE2 = Nothing
  Set RE = Nothing

  If SW_ALLOK = True Then
     Me.TextBox28.Value = W_FW
     Me.TextBox29.Value = W_RP
  End If

  Exit Sub
  
LABEL_ERR:
  
  On Error GoTo 0
  If Me.CheckBox49.Value = True Then
     W_ERRM = "RegEx Assemble failed."
  Else
     W_ERRM = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
  End If
  MsgBox W_ERRM

End Sub

Private Sub CommandButton95_Click()
'|fffd||fffd||fffd||fffd|

  If Me.TextBox28.Value = "" Then
     Exit Sub
  End If

  Me.ComboBox1.Value = Me.TextBox28.Value
  If Me.ToggleButton10.Value = True Then
     Me.ComboBox2.Value = Me.TextBox29.Value
  End If
  
  Me.Label138.Visible = False
  Me.Label139.Visible = False
  Me.TextBox27.Visible = False
  Me.TextBox28.Visible = False
  Me.TextBox29.Visible = False
  Me.TextBox30.Visible = False
  Me.CommandButton94.Visible = False
  Me.CommandButton95.Visible = False
  Me.CommandButton96.Visible = False
  Me.CommandButton97.Visible = False
  Me.ToggleButton10.Visible = False
  Me.ToggleButton12.Visible = False
  Me.ToggleButton13.Visible = False
  Me.ToggleButton18.Visible = False
  Me.MultiPage1.TabStop = True
  If Me.ToggleButton2 = True Then
     Me.MultiPage1.Height = 100
  ElseIf Me.ToggleButton1 = True Then
     Me.MultiPage1.Height = 120
  Else
     Me.MultiPage1.Height = 186
  End If

End Sub

Private Sub CommandButton96_Click()
'|fffd|l
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Value"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  On Error GoTo LABEL_REP
  
  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              W_EVAR = ActiveCell.Value
              Me.TextBox27.Value = Me.TextBox27.Value & ActiveCell.Value & vbCrLf
           End If
        End If
     End If
  End If
  Me.TextBox27.SetFocus
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton97_Click()
'|fffd|N|fffd||fffd||fffd|A

  Me.TextBox27.Value = ""
  Me.TextBox28.Value = ""
  Me.TextBox29.Value = ""
  Me.TextBox30.Value = ""

End Sub

Private Sub UserForm_Activate()
  
  Call SET_PAGE

  If SW_1STMP1 = True Then
     W_MP1 = ""
     SW_1STMP1 = False
  End If

  'Excel2013|fffd||20d|~
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If

End Sub

Private Sub ToggleButton1_Change()

  Dim SW_PGCNG As Boolean
  
  
  SW_TBC = True
  
  If Me.ToggleButton1.Value = True Then
     Me.ToggleButton1.Picture = Me.Image33.Picture
     Me.ToggleButton2.Visible = True
     
     Me.CheckBox22.Visible = False
     Me.CheckBox208.Visible = False
     Me.Label143.Visible = False
     Me.OptionButton14.Visible = False
     Me.OptionButton15.Visible = False
     Me.OptionButton16.Visible = False
     Me.ToggleButton2.Top = Me.ToggleButton2.Top - 66
     Me.CommandButton261.Top = Me.CommandButton261.Top - 66
     Me.CommandButton262.Top = Me.CommandButton262.Top - 66
     Me.CommandButton104.Top = Me.CommandButton104.Top - 66
     Me.CommandButton88.Top = Me.CommandButton88.Top - 66
     Me.CommandButton87.Top = Me.CommandButton87.Top - 66
     Me.CommandButton85.Top = Me.CommandButton85.Top - 66
     Me.CommandButton78.Top = Me.CommandButton78.Top - 66
     Me.CommandButton45.Top = Me.CommandButton45.Top - 66
     Me.CommandButton37.Top = Me.CommandButton37.Top - 66
     Me.CommandButton81.Top = Me.CommandButton81.Top - 66
     Me.CommandButton1.Top = Me.CommandButton1.Top - 66
     Me.CommandButton2.Top = Me.CommandButton2.Top - 66
     Me.CommandButton12.Top = Me.CommandButton12.Top - 66
     Me.CommandButton125.Top = Me.CommandButton125.Top - 66
     Me.CommandButton255.Top = Me.CommandButton255.Top - 66
     Me.ToggleButton15.Top = Me.ToggleButton15.Top - 66
     Me.ToggleButton17.Top = Me.ToggleButton17.Top - 66
     Me.CommandButton254.Top = Me.CommandButton254.Top - 66
  
     Me.CommandButton91.Top = Me.CommandButton91.Top - 66
     Me.CommandButton79.Top = Me.CommandButton79.Top - 66
     Me.CommandButton54.Top = Me.CommandButton54.Top - 66
     Me.CommandButton15.Top = Me.CommandButton15.Top - 66
     Me.CommandButton82.Top = Me.CommandButton82.Top - 66
     Me.CommandButton3.Top = Me.CommandButton3.Top - 66
     Me.CommandButton4.Top = Me.CommandButton4.Top - 66
     Me.CommandButton5.Top = Me.CommandButton5.Top - 66
     Me.CommandButton124.Top = Me.CommandButton124.Top - 66
       
     Me.CommandButton267.Top = Me.CommandButton267.Top - 66
     Me.CommandButton86.Top = Me.CommandButton86.Top - 66
     Me.CommandButton25.Top = Me.CommandButton25.Top - 66
     Me.CommandButton22.Top = Me.CommandButton22.Top - 66
     Me.CommandButton169.Top = Me.CommandButton169.Top - 66
  
     Me.CommandButton103.Top = Me.CommandButton103.Top - 66
     Me.CommandButton101.Top = Me.CommandButton101.Top - 66
     Me.CommandButton102.Top = Me.CommandButton102.Top - 66
     Me.CommandButton100.Top = Me.CommandButton100.Top - 66
     Me.CommandButton98.Top = Me.CommandButton98.Top - 66
     Me.CommandButton99.Top = Me.CommandButton99.Top - 66
  
     Me.CommandButton118.Top = Me.CommandButton118.Top - 66
     
     Me.TextBox42.Visible = False
     Me.CheckBox54.Visible = False
     Me.CheckBox55.Visible = False
     Me.OptionButton4.Visible = False
     Me.OptionButton5.Visible = False
     Me.OptionButton6.Visible = False
     Me.OptionButton7.Visible = False
     Me.OptionButton8.Visible = False
     Me.OptionButton9.Visible = False
     Me.OptionButton10.Visible = False
     Me.Label314.Visible = False
     Me.Label316.Visible = False
     Me.Label146.Visible = False
     Me.Label315.Top = Me.Label315.Top - 24
     Me.ComboBox60.Top = Me.ComboBox60.Top - 24
     Me.CommandButton270.Top = Me.CommandButton270.Top - 24
     Me.CommandButton271.Top = Me.CommandButton271.Top - 24
     Me.CommandButton51.Top = Me.CommandButton51.Top - 66
     Me.CommandButton272.Top = Me.CommandButton272.Top - 66
     Me.CommandButton273.Top = Me.CommandButton273.Top - 66
     Me.CommandButton274.Top = Me.CommandButton274.Top - 66
  
     Me.CheckBox59.Visible = False
     Me.CommandButton77.Top = Me.CommandButton77.Top - 66
     Me.CommandButton75.Top = Me.CommandButton75.Top - 66
     Me.CommandButton290.Top = Me.CommandButton290.Top - 66
     Me.CommandButton76.Top = Me.CommandButton76.Top - 66
  
     Me.CheckBox84.Visible = False
     Me.Label147.Visible = False
     Me.Label148.Visible = False
     Me.OptionButton17.Visible = False
     Me.OptionButton18.Visible = False
     Me.OptionButton19.Visible = False
     Me.OptionButton20.Visible = False
     Me.OptionButton21.Visible = False
     Me.CommandButton89.Top = Me.CommandButton89.Top - 66
     Me.CommandButton90.Top = Me.CommandButton90.Top - 66
  
     Me.CheckBox68.Visible = False
     Me.TextBox19.Top = Me.TextBox19.Top - 59
     Me.TextBox20.Top = Me.TextBox20.Top - 59
     Me.TextBox21.Top = Me.TextBox21.Top - 59
     Me.TextBox22.Top = Me.TextBox22.Top - 59
     Me.CommandButton84.Top = Me.CommandButton84.Top - 66
     Me.CommandButton80.Top = Me.CommandButton80.Top - 66
  
     Me.CommandButton16.Top = Me.CommandButton16.Top - 66
  
     Me.Label320.Visible = False
     Me.TextBox43.Visible = False
     Me.CheckBox204.Visible = False
     Me.CheckBox205.Visible = False
     Me.CommandButton278.Top = Me.CommandButton278.Top - 66
     Me.CommandButton279.Top = Me.CommandButton279.Top - 66
     Me.CommandButton280.Top = Me.CommandButton280.Top - 66
     
     Me.Label17.Visible = False
     Me.Label19.Visible = False
     Me.TextBox3.Visible = False
     Me.CheckBox62.Visible = False
     Me.Label18.Top = Me.Label18.Top - 24
     Me.ComboBox18.Top = Me.ComboBox18.Top - 24
     Me.CommandButton19.Top = Me.CommandButton19.Top - 24
     Me.CommandButton263.Top = Me.CommandButton263.Top - 24
     Me.CheckBox75.Visible = False
     Me.CheckBox202.Visible = False
     Me.Label104.Visible = False
     Me.Label105.Visible = False
     Me.TextBox25.Visible = False
     Me.TextBox26.Visible = False
     Me.CommandButton21.Top = Me.CommandButton21.Top - 66
     Me.CommandButton20.Top = Me.CommandButton20.Top - 66
     Me.CommandButton303.Top = Me.CommandButton303.Top - 66
     Me.ToggleButton11.Top = Me.ToggleButton11.Top - 66
     Me.ToggleButton16.Top = Me.ToggleButton16.Top - 66
  
     Me.Label26.Visible = False
     Me.Label28.Visible = False
     Me.TextBox5.Visible = False
     Me.CheckBox63.Visible = False
     Me.Label27.Top = Me.Label27.Top - 24
     Me.ComboBox19.Top = Me.ComboBox19.Top - 24
     Me.CommandButton30.Top = Me.CommandButton30.Top - 24
     Me.CommandButton264.Top = Me.CommandButton264.Top - 24
     Me.CommandButton32.Top = Me.CommandButton32.Top - 66
     Me.CommandButton31.Top = Me.CommandButton31.Top - 66
  
     Me.Label36.Visible = False
     Me.Label38.Visible = False
     Me.TextBox8.Visible = False
     Me.CheckBox64.Visible = False
     Me.Label37.Top = Me.Label37.Top - 24
     Me.ComboBox20.Top = Me.ComboBox20.Top - 24
     Me.CommandButton40.Top = Me.CommandButton40.Top - 24
     Me.CommandButton265.Top = Me.CommandButton265.Top - 24
     Me.CommandButton41.Top = Me.CommandButton41.Top - 66
     Me.CommandButton42.Top = Me.CommandButton42.Top - 66
     Me.CommandButton39.Top = Me.CommandButton39.Top - 66
  
     Me.Label311.Visible = False
     Me.Label304.Visible = False
     Me.Label306.Visible = False
     Me.TextBox41.Visible = False
     Me.OptionButton29.Visible = False
     Me.OptionButton28.Visible = False
     Me.OptionButton31.Visible = False
     Me.OptionButton32.Visible = False
     Me.OptionButton30.Visible = False
     Me.CheckBox200.Visible = False
     Me.CheckBox229.Visible = False
     Me.CheckBox201.Visible = False
     Me.CommandButton259.Top = Me.CommandButton259.Top - 66
     Me.CommandButton260.Top = Me.CommandButton260.Top - 66
  
     SW_PGCNG = False
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page8" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page11" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page10" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page13" Then
        If Me.TextBox27.Visible = True Then
           SW_PGCNG = True
           Call MP1_CL(Me.MultiPage1.Value)
        End If
        Call TAB_DEFAULT
        Call TAB_ORDER
        SW_TO = True
        Me.MultiPage1.Value = MP1_CHG
        SW_TO = False
     End If
     
     SW_P8V = Me.MultiPage1.Pages("Page8").Visible
     Me.MultiPage1.Pages("Page8").Visible = False
  
     SW_P11V = Me.MultiPage1.Pages("Page11").Visible
     Me.MultiPage1.Pages("Page11").Visible = False

     SW_P10V = Me.MultiPage1.Pages("Page10").Visible
     Me.MultiPage1.Pages("Page10").Visible = False
  
     SW_P13V = Me.MultiPage1.Pages("Page13").Visible
     Me.MultiPage1.Pages("Page13").Visible = False
  
     Call MultiPage1_Change
  
     Me.CommandButton147.Top = Me.CommandButton147.Top - 66
     Me.CommandButton268.Top = Me.CommandButton268.Top - 66
     Me.CommandButton158.Top = Me.CommandButton158.Top - 66
     Me.CommandButton7.Top = Me.CommandButton7.Top - 66
     Me.CommandButton92.Top = Me.CommandButton92.Top - 66
     Me.CommandButton8.Top = Me.CommandButton8.Top - 66
  
     If Me.MultiPage1.Height > 17 Then
        If SW_PGCNG = False Then
           Me.MultiPage1.Height = Me.MultiPage1.Height - 66
        ElseIf SW_UF1INI = True Then
           Me.MultiPage1.Height = Me.MultiPage1.Height - 66
        End If
     End If
     
     Me.TextBox27.Height = Me.TextBox27.Height - 66
     Me.TextBox28.Top = Me.TextBox28.Top - 66
     Me.TextBox29.Top = Me.TextBox29.Top - 66
     Me.TextBox30.Top = Me.TextBox30.Top - 66
     Me.CommandButton94.Top = Me.CommandButton94.Top - 66
     Me.CommandButton95.Top = Me.CommandButton95.Top - 66
     Me.CommandButton96.Top = Me.CommandButton96.Top - 66
     Me.CommandButton97.Top = Me.CommandButton97.Top - 66
     
     Me.Image28.Top = Me.Image28.Top - 66
     Me.Image29.Top = Me.Image29.Top - 66
     Me.Image30.Top = Me.Image30.Top - 66
     Me.Image31.Top = Me.Image31.Top - 66
     Me.Label41.Top = Me.Label41.Top - 66
     Me.Label42.Top = Me.Label42.Top - 66
     Me.Label58.Top = Me.Label58.Top - 66
     Me.Label59.Top = Me.Label59.Top - 66
     Me.Label60.Top = Me.Label60.Top - 66
     Me.Label61.Top = Me.Label61.Top - 66
     Me.Label117.Top = Me.Label117.Top - 66
     Me.Label118.Top = Me.Label118.Top - 66
     Me.Label119.Top = Me.Label119.Top - 66
     Me.Label120.Top = Me.Label120.Top - 66
     Me.Label150.Top = Me.Label150.Top - 66
     Me.Label151.Top = Me.Label151.Top - 66
     Me.TextBox23.Top = Me.TextBox23.Top - 66
     Me.TextBox24.Top = Me.TextBox24.Top - 66
     Me.SpinButton1.Top = Me.SpinButton1.Top - 66
     Me.CommandButton105.Top = Me.CommandButton105.Top - 66
     Me.CommandButton106.Top = Me.CommandButton106.Top - 66
     Me.CommandButton117.Top = Me.CommandButton117.Top - 66
     Me.CommandButton119.Top = Me.CommandButton119.Top - 66
     Me.CommandButton269.Top = Me.CommandButton269.Top - 66
     Me.ToggleButton1.Top = Me.ToggleButton1.Top - 66
     Me.ToggleButton5.Top = Me.ToggleButton5.Top - 66
     Me.ToggleButton14.Top = Me.ToggleButton14.Top - 66
     Me.CommandButton123.Top = Me.CommandButton123.Top - 66
     Me.CommandButton281.Top = Me.CommandButton281.Top - 66
     Me.CommandButton9.Top = Me.CommandButton9.Top - 66
     Me.MultiPage2.Top = Me.MultiPage2.Top - 66
     Me.MultiPage5.Top = Me.MultiPage5.Top - 66
     Me.Height = Me.Height - 66
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton1.ControlTipText = "Full window mode"
     Else
        Me.ToggleButton1.ControlTipText = "|fffd|t|fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     End If
  Else
     Me.ToggleButton1.Picture = Me.Image32.Picture
     Me.ToggleButton2.Visible = False
     
     Me.CheckBox22.Visible = True
     Me.CheckBox208.Visible = True
     Me.Label143.Visible = True
     Me.OptionButton14.Visible = True
     Me.OptionButton15.Visible = True
     Me.OptionButton16.Visible = True
     Me.ToggleButton2.Top = Me.ToggleButton2.Top + 66
     Me.CommandButton261.Top = Me.CommandButton261.Top + 66
     Me.CommandButton262.Top = Me.CommandButton262.Top + 66
     Me.CommandButton104.Top = Me.CommandButton104.Top + 66
     Me.CommandButton88.Top = Me.CommandButton88.Top + 66
     Me.CommandButton87.Top = Me.CommandButton87.Top + 66
     Me.CommandButton85.Top = Me.CommandButton85.Top + 66
     Me.CommandButton78.Top = Me.CommandButton78.Top + 66
     Me.CommandButton45.Top = Me.CommandButton45.Top + 66
     Me.CommandButton37.Top = Me.CommandButton37.Top + 66
     Me.CommandButton81.Top = Me.CommandButton81.Top + 66
     Me.CommandButton1.Top = Me.CommandButton1.Top + 66
     Me.CommandButton2.Top = Me.CommandButton2.Top + 66
     Me.CommandButton12.Top = Me.CommandButton12.Top + 66
     Me.CommandButton125.Top = Me.CommandButton125.Top + 66
     Me.CommandButton255.Top = Me.CommandButton255.Top + 66
     Me.ToggleButton15.Top = Me.ToggleButton15.Top + 66
     Me.ToggleButton17.Top = Me.ToggleButton17.Top + 66
     Me.CommandButton254.Top = Me.CommandButton254.Top + 66

     Me.CommandButton91.Top = Me.CommandButton91.Top + 66
     Me.CommandButton79.Top = Me.CommandButton79.Top + 66
     Me.CommandButton54.Top = Me.CommandButton54.Top + 66
     Me.CommandButton15.Top = Me.CommandButton15.Top + 66
     Me.CommandButton82.Top = Me.CommandButton82.Top + 66
     Me.CommandButton3.Top = Me.CommandButton3.Top + 66
     Me.CommandButton4.Top = Me.CommandButton4.Top + 66
     Me.CommandButton5.Top = Me.CommandButton5.Top + 66
     Me.CommandButton124.Top = Me.CommandButton124.Top + 66

     Me.CommandButton267.Top = Me.CommandButton267.Top + 66
     Me.CommandButton86.Top = Me.CommandButton86.Top + 66
     Me.CommandButton25.Top = Me.CommandButton25.Top + 66
     Me.CommandButton22.Top = Me.CommandButton22.Top + 66
     Me.CommandButton169.Top = Me.CommandButton169.Top + 66
     
     Me.CommandButton103.Top = Me.CommandButton103.Top + 66
     Me.CommandButton101.Top = Me.CommandButton101.Top + 66
     Me.CommandButton102.Top = Me.CommandButton102.Top + 66
     Me.CommandButton100.Top = Me.CommandButton100.Top + 66
     Me.CommandButton98.Top = Me.CommandButton98.Top + 66
     Me.CommandButton99.Top = Me.CommandButton99.Top + 66

     Me.CommandButton118.Top = Me.CommandButton118.Top + 66

     Me.TextBox42.Visible = True
     Me.CheckBox54.Visible = True
     Me.CheckBox55.Visible = True
     Me.OptionButton4.Visible = True
     Me.OptionButton5.Visible = True
     Me.OptionButton6.Visible = True
     Me.OptionButton7.Visible = True
     Me.OptionButton8.Visible = True
     Me.OptionButton9.Visible = True
     Me.OptionButton10.Visible = True
     Me.Label314.Visible = True
     Me.Label316.Visible = True
     Me.Label146.Visible = True
     Me.Label315.Top = Me.Label315.Top + 24
     Me.ComboBox60.Top = Me.ComboBox60.Top + 24
     Me.CommandButton270.Top = Me.CommandButton270.Top + 24
     Me.CommandButton271.Top = Me.CommandButton271.Top + 24
     Me.CommandButton51.Top = Me.CommandButton51.Top + 66
     Me.CommandButton272.Top = Me.CommandButton272.Top + 66
     Me.CommandButton273.Top = Me.CommandButton273.Top + 66
     Me.CommandButton274.Top = Me.CommandButton274.Top + 66

     Me.CheckBox59.Visible = True
     Me.CommandButton77.Top = Me.CommandButton77.Top + 66
     Me.CommandButton75.Top = Me.CommandButton75.Top + 66
     Me.CommandButton290.Top = Me.CommandButton290.Top + 66
     Me.CommandButton76.Top = Me.CommandButton76.Top + 66

     Me.CheckBox84.Visible = True
     Me.Label147.Visible = True
     Me.Label148.Visible = True
     Me.OptionButton17.Visible = True
     Me.OptionButton18.Visible = True
     Me.OptionButton19.Visible = True
     Me.OptionButton20.Visible = True
     Me.OptionButton21.Visible = True
     Me.CommandButton89.Top = Me.CommandButton89.Top + 66
     Me.CommandButton90.Top = Me.CommandButton90.Top + 66

     Me.CheckBox68.Visible = True
     Me.TextBox19.Top = Me.TextBox19.Top + 59
     Me.TextBox20.Top = Me.TextBox20.Top + 59
     Me.TextBox21.Top = Me.TextBox21.Top + 59
     Me.TextBox22.Top = Me.TextBox22.Top + 59
     Me.CommandButton84.Top = Me.CommandButton84.Top + 66
     Me.CommandButton80.Top = Me.CommandButton80.Top + 66

     Me.CommandButton16.Top = Me.CommandButton16.Top + 66

     Me.Label320.Visible = True
     Me.TextBox43.Visible = True
     Me.CheckBox204.Visible = True
     Me.CheckBox205.Visible = True
     Me.CommandButton278.Top = Me.CommandButton278.Top + 66
     Me.CommandButton279.Top = Me.CommandButton279.Top + 66
     Me.CommandButton280.Top = Me.CommandButton280.Top + 66

     Me.Label17.Visible = True
     Me.Label19.Visible = True
     Me.TextBox3.Visible = True
     Me.CheckBox62.Visible = True
     Me.Label18.Top = Me.Label18.Top + 24
     Me.ComboBox18.Top = Me.ComboBox18.Top + 24
     Me.CommandButton19.Top = Me.CommandButton19.Top + 24
     Me.CommandButton263.Top = Me.CommandButton263.Top + 24
     Me.CheckBox75.Visible = True
     Me.CheckBox202.Visible = True
     Me.Label104.Visible = True
     Me.Label105.Visible = True
     Me.TextBox25.Visible = True
     Me.TextBox26.Visible = True
     Me.CommandButton21.Top = Me.CommandButton21.Top + 66
     Me.CommandButton20.Top = Me.CommandButton20.Top + 66
     Me.CommandButton303.Top = Me.CommandButton303.Top + 66
     Me.ToggleButton11.Top = Me.ToggleButton11.Top + 66
     Me.ToggleButton16.Top = Me.ToggleButton16.Top + 66

     Me.Label26.Visible = True
     Me.Label28.Visible = True
     Me.TextBox5.Visible = True
     Me.CheckBox63.Visible = True
     Me.Label27.Top = Me.Label27.Top + 24
     Me.ComboBox19.Top = Me.ComboBox19.Top + 24
     Me.CommandButton30.Top = Me.CommandButton30.Top + 24
     Me.CommandButton264.Top = Me.CommandButton264.Top + 24
     Me.CommandButton32.Top = Me.CommandButton32.Top + 66
     Me.CommandButton31.Top = Me.CommandButton31.Top + 66

     Me.Label36.Visible = True
     Me.Label38.Visible = True
     Me.TextBox8.Visible = True
     Me.CheckBox64.Visible = True
     Me.Label37.Top = Me.Label37.Top + 24
     Me.ComboBox20.Top = Me.ComboBox20.Top + 24
     Me.CommandButton40.Top = Me.CommandButton40.Top + 24
     Me.CommandButton265.Top = Me.CommandButton265.Top + 24
     Me.CommandButton41.Top = Me.CommandButton41.Top + 66
     Me.CommandButton42.Top = Me.CommandButton42.Top + 66
     Me.CommandButton39.Top = Me.CommandButton39.Top + 66

     Me.Label311.Visible = True
     Me.Label304.Visible = True
     Me.Label306.Visible = True
     Me.TextBox41.Visible = True
     Me.OptionButton29.Visible = True
     Me.OptionButton28.Visible = True
     Me.OptionButton31.Visible = True
     Me.OptionButton32.Visible = True
     Me.OptionButton30.Visible = True
     Me.CheckBox200.Visible = True
     Me.CheckBox229.Visible = True
     Me.CheckBox201.Visible = True
     Me.CommandButton259.Top = Me.CommandButton259.Top + 66
     Me.CommandButton260.Top = Me.CommandButton260.Top + 66

     Me.MultiPage1.Pages("Page8").Visible = SW_P8V

     Me.MultiPage1.Pages("Page11").Visible = SW_P11V

     Me.MultiPage1.Pages("Page10").Visible = SW_P10V

     Me.MultiPage1.Pages("Page13").Visible = SW_P13V

     Me.CommandButton147.Top = Me.CommandButton147.Top + 66
     Me.CommandButton268.Top = Me.CommandButton268.Top + 66
     Me.CommandButton158.Top = Me.CommandButton158.Top + 66
     Me.CommandButton7.Top = Me.CommandButton7.Top + 66
     Me.CommandButton92.Top = Me.CommandButton92.Top + 66
     Me.CommandButton8.Top = Me.CommandButton8.Top + 66

     If Me.MultiPage1.Height > 17 Then
        Me.MultiPage1.Height = Me.MultiPage1.Height + 66
     End If
     
     Me.TextBox27.Height = Me.TextBox27.Height + 66
     Me.TextBox28.Top = Me.TextBox28.Top + 66
     Me.TextBox29.Top = Me.TextBox29.Top + 66
     Me.TextBox30.Top = Me.TextBox30.Top + 66
     Me.CommandButton94.Top = Me.CommandButton94.Top + 66
     Me.CommandButton95.Top = Me.CommandButton95.Top + 66
     Me.CommandButton96.Top = Me.CommandButton96.Top + 66
     Me.CommandButton97.Top = Me.CommandButton97.Top + 66
     
     Me.Image28.Top = Me.Image28.Top + 66
     Me.Image29.Top = Me.Image29.Top + 66
     Me.Image30.Top = Me.Image30.Top + 66
     Me.Image31.Top = Me.Image31.Top + 66
     Me.Label41.Top = Me.Label41.Top + 66
     Me.Label42.Top = Me.Label42.Top + 66
     Me.Label58.Top = Me.Label58.Top + 66
     Me.Label59.Top = Me.Label59.Top + 66
     Me.Label60.Top = Me.Label60.Top + 66
     Me.Label61.Top = Me.Label61.Top + 66
     Me.Label117.Top = Me.Label117.Top + 66
     Me.Label118.Top = Me.Label118.Top + 66
     Me.Label119.Top = Me.Label119.Top + 66
     Me.Label120.Top = Me.Label120.Top + 66
     Me.Label150.Top = Me.Label150.Top + 66
     Me.Label151.Top = Me.Label151.Top + 66
     Me.TextBox23.Top = Me.TextBox23.Top + 66
     Me.TextBox24.Top = Me.TextBox24.Top + 66
     Me.SpinButton1.Top = Me.SpinButton1.Top + 66
     Me.CommandButton105.Top = Me.CommandButton105.Top + 66
     Me.CommandButton106.Top = Me.CommandButton106.Top + 66
     Me.CommandButton117.Top = Me.CommandButton117.Top + 66
     Me.CommandButton119.Top = Me.CommandButton119.Top + 66
     Me.CommandButton269.Top = Me.CommandButton269.Top + 66
     Me.ToggleButton1.Top = Me.ToggleButton1.Top + 66
     Me.ToggleButton5.Top = Me.ToggleButton5.Top + 66
     Me.ToggleButton14.Top = Me.ToggleButton14.Top + 66
     Me.CommandButton123.Top = Me.CommandButton123.Top + 66
     Me.CommandButton281.Top = Me.CommandButton281.Top + 66
     Me.CommandButton9.Top = Me.CommandButton9.Top + 66
     Me.MultiPage2.Top = Me.MultiPage2.Top + 66
     Me.MultiPage5.Top = Me.MultiPage5.Top + 66
     Me.Height = Me.Height + 66
     
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton1.ControlTipText = "Mini window mode"
     Else
        Me.ToggleButton1.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     End If
  End If

  SW_TBC = False

End Sub

Private Sub ToggleButton2_Change()

  Dim SW_PGCNG As Boolean

  SW_TBC = True

  If Me.ToggleButton2.Value = True Then
     Me.ToggleButton2.Picture = Me.Image33.Picture
     Me.ToggleButton1.Visible = False
     
     Me.CommandButton88.Visible = False
     Me.CommandButton87.Visible = False
     Me.CommandButton78.Visible = False
     Me.CommandButton37.Visible = False
     Me.ToggleButton2.Top = Me.ToggleButton2.Top - 20
     Me.CommandButton261.Top = Me.CommandButton261.Top - 20
     Me.CommandButton262.Top = Me.CommandButton262.Top - 20
     Me.CommandButton104.Top = Me.CommandButton104.Top - 20
     Me.CommandButton85.Top = Me.CommandButton85.Top - 20
     Me.CommandButton45.Top = Me.CommandButton45.Top - 20
     Me.CommandButton81.Top = Me.CommandButton81.Top - 20
     Me.CommandButton1.Top = Me.CommandButton1.Top - 20
     Me.CommandButton2.Top = Me.CommandButton2.Top - 20
     Me.CommandButton12.Top = Me.CommandButton12.Top - 20
     Me.CommandButton125.Top = Me.CommandButton125.Top - 20
     Me.CommandButton255.Top = Me.CommandButton255.Top - 20
     Me.ToggleButton15.Top = Me.ToggleButton15.Top - 20
     Me.ToggleButton17.Top = Me.ToggleButton17.Top - 20
     Me.CommandButton254.Top = Me.CommandButton254.Top - 20
  
     Me.CommandButton91.Visible = False
     Me.CommandButton79.Visible = False
     Me.CommandButton54.Visible = False
     Me.CommandButton15.Top = Me.CommandButton15.Top - 20
     Me.CommandButton82.Top = Me.CommandButton82.Top - 20
     Me.CommandButton3.Top = Me.CommandButton3.Top - 20
     Me.CommandButton4.Top = Me.CommandButton4.Top - 20
     Me.CommandButton5.Top = Me.CommandButton5.Top - 20
     Me.CommandButton124.Top = Me.CommandButton124.Top - 20
       
     Me.CommandButton267.Top = Me.CommandButton267.Top - 20
     Me.CommandButton86.Top = Me.CommandButton86.Top - 20
     Me.CommandButton25.Top = Me.CommandButton25.Top - 20
     Me.CommandButton22.Top = Me.CommandButton22.Top - 20
     Me.CommandButton169.Top = Me.CommandButton169.Top - 20
          
     Me.CommandButton31.Top = Me.CommandButton31.Top - 20
     Me.CommandButton32.Top = Me.CommandButton32.Top - 20
     Me.CommandButton31.Visible = False
     Me.CommandButton32.Visible = False
     Me.ToggleButton3.Top = Me.ToggleButton3.Top - 86
     Me.ToggleButton3.Visible = True
     Me.ToggleButton3.Value = True

     Me.CommandButton39.Top = Me.CommandButton39.Top - 20
     Me.CommandButton41.Top = Me.CommandButton41.Top - 20
     Me.CommandButton42.Top = Me.CommandButton42.Top - 20
     Me.CommandButton39.Visible = False
     Me.CommandButton41.Visible = False
     Me.CommandButton42.Visible = False
     Me.ToggleButton4.Top = Me.ToggleButton4.Top - 86
     Me.ToggleButton4.Visible = True
     Me.ToggleButton4.Value = True
     
     Me.Label307.Visible = False
     Me.Label312.Visible = False
     Me.Label313.Visible = False
     Me.TextBox39.Visible = False
     Me.TextBox40.Visible = False
     Me.CommandButton259.Top = Me.CommandButton259.Top - 20
     Me.CommandButton260.Top = Me.CommandButton260.Top - 20
     
     Me.Label321.Visible = False
     Me.Label322.Visible = False
     Me.TextBox44.Visible = False
     Me.TextBox45.Visible = False
     Me.CommandButton278.Top = Me.CommandButton278.Top - 20
     Me.CommandButton279.Top = Me.CommandButton279.Top - 20
     Me.CommandButton280.Top = Me.CommandButton280.Top - 20
     
     Me.CommandButton21.Top = Me.CommandButton21.Top - 20
     Me.CommandButton20.Top = Me.CommandButton20.Top - 20
     Me.CommandButton303.Top = Me.CommandButton303.Top - 20
     Me.ToggleButton11.Top = Me.ToggleButton11.Top - 20
     Me.ToggleButton16.Top = Me.ToggleButton16.Top - 20
     Me.Label353.Visible = False
     
     SW_PGCNG = False
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page14" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page16" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page17" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page18" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page15" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Then
        If Me.TextBox27.Visible = True Then
           SW_PGCNG = True
           Call MP1_CL(Me.MultiPage1.Value)
        End If
        Call TAB_DEFAULT
        Call TAB_ORDER
        SW_TO = True
        Me.MultiPage1.Value = MP1_CHG
        SW_TO = False
     End If
     
     SW_P17V = Me.MultiPage1.Pages("Page17").Visible
     Me.MultiPage1.Pages("Page17").Visible = False
     
     SW_P18V = Me.MultiPage1.Pages("Page18").Visible
     Me.MultiPage1.Pages("Page18").Visible = False
     
     SW_P12V = Me.MultiPage1.Pages("Page12").Visible
     Me.MultiPage1.Pages("Page12").Visible = False
     
     SW_P14V = Me.MultiPage1.Pages("Page14").Visible
     Me.MultiPage1.Pages("Page14").Visible = False
     
     SW_P16V = Me.MultiPage1.Pages("Page16").Visible
     Me.MultiPage1.Pages("Page16").Visible = False
     
     SW_P15V = Me.MultiPage1.Pages("Page15").Visible
     Me.MultiPage1.Pages("Page15").Visible = False
     
     SW_P4V = Me.MultiPage1.Pages("Page4").Visible
     Me.MultiPage1.Pages("Page4").Visible = False
     
     Call MultiPage1_Change
     
     Me.Label3.Top = Me.Label3.Top - 5
     Me.Label172.Top = Me.Label172.Top - 5
     Me.Label299.Top = Me.Label299.Top - 5
     Me.Label4.Top = Me.Label4.Top - 5
     Me.Label5.Top = Me.Label5.Top - 5
     Me.Label6.Top = Me.Label6.Top - 5
     Me.Label7.Top = Me.Label7.Top - 5
     Me.CommandButton147.Top = Me.CommandButton147.Top - 20
     Me.CommandButton268.Top = Me.CommandButton268.Top - 20
     Me.CommandButton158.Top = Me.CommandButton158.Top - 20
     Me.CommandButton7.Top = Me.CommandButton7.Top - 20
     Me.CommandButton92.Top = Me.CommandButton92.Top - 20
     Me.CommandButton8.Top = Me.CommandButton8.Top - 20
  
     If Me.MultiPage1.Height > 17 Then
        If SW_PGCNG = False Then
           Me.MultiPage1.Height = Me.MultiPage1.Height - 20
        ElseIf SW_UF1INI = True Then
           Me.MultiPage1.Height = Me.MultiPage1.Height - 20
        End If
     End If
     
     Me.TextBox27.Height = Me.TextBox27.Height - 20
     Me.TextBox28.Top = Me.TextBox28.Top - 20
     Me.TextBox29.Top = Me.TextBox29.Top - 20
     Me.TextBox30.Top = Me.TextBox30.Top - 20
     Me.CommandButton94.Top = Me.CommandButton94.Top - 20
     Me.CommandButton95.Top = Me.CommandButton95.Top - 20
     Me.CommandButton96.Top = Me.CommandButton96.Top - 20
     Me.CommandButton97.Top = Me.CommandButton97.Top - 20
     
     Me.Image28.Top = Me.Image28.Top - 20
     Me.Image29.Top = Me.Image29.Top - 20
     Me.Image30.Top = Me.Image30.Top - 20
     Me.Image31.Top = Me.Image31.Top - 20
     Me.Label41.Top = Me.Label41.Top - 20
     Me.Label42.Top = Me.Label42.Top - 20
     Me.Label58.Top = Me.Label58.Top - 20
     Me.Label59.Top = Me.Label59.Top - 20
     Me.Label60.Top = Me.Label60.Top - 20
     Me.Label61.Top = Me.Label61.Top - 20
     Me.Label117.Top = Me.Label117.Top - 20
     Me.Label118.Top = Me.Label118.Top - 20
     Me.Label119.Top = Me.Label119.Top - 20
     Me.Label120.Top = Me.Label120.Top - 20
     Me.Label150.Top = Me.Label150.Top - 20
     Me.Label151.Top = Me.Label151.Top - 20
     Me.TextBox23.Top = Me.TextBox23.Top - 20
     Me.TextBox24.Top = Me.TextBox24.Top - 20
     Me.SpinButton1.Top = Me.SpinButton1.Top - 20
     Me.CommandButton105.Top = Me.CommandButton105.Top - 20
     Me.CommandButton106.Top = Me.CommandButton106.Top - 20
     Me.CommandButton117.Top = Me.CommandButton117.Top - 20
     Me.CommandButton119.Top = Me.CommandButton119.Top - 20
     Me.CommandButton269.Top = Me.CommandButton269.Top - 20
     Me.ToggleButton5.Top = Me.ToggleButton5.Top - 20
     Me.ToggleButton14.Top = Me.ToggleButton14.Top - 20
     Me.CommandButton123.Top = Me.CommandButton123.Top - 20
     Me.CommandButton123.Visible = True
     Me.CommandButton281.Top = Me.CommandButton281.Top - 20
     Me.CommandButton9.Top = Me.CommandButton9.Top - 20
     Me.MultiPage2.Top = Me.MultiPage2.Top - 20
     Me.MultiPage5.Top = Me.MultiPage5.Top - 20
     Me.Height = Me.Height - 20
     
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton2.ControlTipText = "Mini window mode"
     Else
        Me.ToggleButton2.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h"
     End If
  Else
     Me.ToggleButton2.Picture = Me.Image32.Picture
     Me.ToggleButton1.Visible = True
     
     Me.CommandButton88.Visible = True
     Me.CommandButton87.Visible = True
     Me.CommandButton78.Visible = True
     Me.CommandButton37.Visible = True
     Me.ToggleButton2.Top = Me.ToggleButton2.Top + 20
     Me.CommandButton261.Top = Me.CommandButton261.Top + 20
     Me.CommandButton262.Top = Me.CommandButton262.Top + 20
     Me.CommandButton104.Top = Me.CommandButton104.Top + 20
     Me.CommandButton85.Top = Me.CommandButton85.Top + 20
     Me.CommandButton45.Top = Me.CommandButton45.Top + 20
     Me.CommandButton81.Top = Me.CommandButton81.Top + 20
     Me.CommandButton1.Top = Me.CommandButton1.Top + 20
     Me.CommandButton2.Top = Me.CommandButton2.Top + 20
     Me.CommandButton12.Top = Me.CommandButton12.Top + 20
     Me.CommandButton125.Top = Me.CommandButton125.Top + 20
     Me.CommandButton255.Top = Me.CommandButton255.Top + 20
     Me.ToggleButton15.Top = Me.ToggleButton15.Top + 20
     Me.ToggleButton17.Top = Me.ToggleButton17.Top + 20
     Me.CommandButton254.Top = Me.CommandButton254.Top + 20
  
     Me.CommandButton91.Visible = True
     Me.CommandButton79.Visible = True
     Me.CommandButton54.Visible = True
     Me.CommandButton15.Top = Me.CommandButton15.Top + 20
     Me.CommandButton82.Top = Me.CommandButton82.Top + 20
     Me.CommandButton3.Top = Me.CommandButton3.Top + 20
     Me.CommandButton4.Top = Me.CommandButton4.Top + 20
     Me.CommandButton5.Top = Me.CommandButton5.Top + 20
     Me.CommandButton124.Top = Me.CommandButton124.Top + 20
       
     Me.CommandButton267.Top = Me.CommandButton267.Top + 20
     Me.CommandButton86.Top = Me.CommandButton86.Top + 20
     Me.CommandButton25.Top = Me.CommandButton25.Top + 20
     Me.CommandButton22.Top = Me.CommandButton22.Top + 20
     Me.CommandButton169.Top = Me.CommandButton169.Top + 20
          
     Me.CommandButton31.Top = Me.CommandButton31.Top + 20
     Me.CommandButton32.Top = Me.CommandButton32.Top + 20
     Me.Label27.Visible = True
     Me.ComboBox19.Visible = True
     Me.CommandButton30.Visible = True
     Me.CommandButton264.Visible = True
     Me.CommandButton31.Visible = True
     Me.CommandButton32.Visible = True
     Me.ToggleButton3.Top = Me.ToggleButton3.Top + 86
     Me.ToggleButton3.Visible = False

     Me.CommandButton39.Top = Me.CommandButton39.Top + 20
     Me.CommandButton41.Top = Me.CommandButton41.Top + 20
     Me.CommandButton42.Top = Me.CommandButton42.Top + 20
     Me.Label37.Visible = True
     Me.ComboBox20.Visible = True
     Me.CommandButton40.Visible = True
     Me.CommandButton265.Visible = True
     Me.CommandButton39.Visible = True
     Me.CommandButton41.Visible = True
     Me.CommandButton42.Visible = True
     Me.ToggleButton4.Top = Me.ToggleButton4.Top + 86
     Me.ToggleButton4.Visible = False
          
     Me.Label307.Visible = True
     Me.Label312.Visible = True
     Me.Label313.Visible = True
     Me.TextBox39.Visible = True
     Me.TextBox40.Visible = True
     Me.CommandButton259.Top = Me.CommandButton259.Top + 20
     Me.CommandButton260.Top = Me.CommandButton260.Top + 20
          
     Me.Label321.Visible = True
     Me.Label322.Visible = True
     Me.TextBox44.Visible = True
     Me.TextBox45.Visible = True
     Me.CommandButton278.Top = Me.CommandButton278.Top + 20
     Me.CommandButton279.Top = Me.CommandButton279.Top + 20
     Me.CommandButton280.Top = Me.CommandButton280.Top + 20
     
     Me.CommandButton21.Top = Me.CommandButton21.Top + 20
     Me.CommandButton20.Top = Me.CommandButton20.Top + 20
     Me.CommandButton303.Top = Me.CommandButton303.Top + 20
     Me.ToggleButton11.Top = Me.ToggleButton11.Top + 20
     Me.ToggleButton16.Top = Me.ToggleButton16.Top + 20
     Me.Label353.Visible = True
     
     Me.MultiPage1.Pages("Page17").Visible = SW_P17V
     Me.MultiPage1.Pages("Page18").Visible = SW_P18V
     Me.MultiPage1.Pages("Page12").Visible = SW_P12V
     Me.MultiPage1.Pages("Page14").Visible = SW_P14V
     Me.MultiPage1.Pages("Page16").Visible = SW_P16V
     Me.MultiPage1.Pages("Page15").Visible = SW_P15V
     Me.MultiPage1.Pages("Page4").Visible = SW_P4V
  
     Me.Label3.Top = Me.Label3.Top + 5
     Me.Label172.Top = Me.Label172.Top + 5
     Me.Label299.Top = Me.Label299.Top + 5
     Me.Label4.Top = Me.Label4.Top + 5
     Me.Label5.Top = Me.Label5.Top + 5
     Me.Label6.Top = Me.Label6.Top + 5
     Me.Label7.Top = Me.Label7.Top + 5
     Me.CommandButton147.Top = Me.CommandButton147.Top + 20
     Me.CommandButton268.Top = Me.CommandButton268.Top + 20
     Me.CommandButton158.Top = Me.CommandButton158.Top + 20
     Me.CommandButton7.Top = Me.CommandButton7.Top + 20
     Me.CommandButton92.Top = Me.CommandButton92.Top + 20
     Me.CommandButton8.Top = Me.CommandButton8.Top + 20
  
     If Me.MultiPage1.Height > 17 Then
        Me.MultiPage1.Height = Me.MultiPage1.Height + 20
     End If
  
     Me.TextBox27.Height = Me.TextBox27.Height + 20
     Me.TextBox28.Top = Me.TextBox28.Top + 20
     Me.TextBox29.Top = Me.TextBox29.Top + 20
     Me.TextBox30.Top = Me.TextBox30.Top + 20
     Me.CommandButton94.Top = Me.CommandButton94.Top + 20
     Me.CommandButton95.Top = Me.CommandButton95.Top + 20
     Me.CommandButton96.Top = Me.CommandButton96.Top + 20
     Me.CommandButton97.Top = Me.CommandButton97.Top + 20
  
     Me.Image28.Top = Me.Image28.Top + 20
     Me.Image29.Top = Me.Image29.Top + 20
     Me.Image30.Top = Me.Image30.Top + 20
     Me.Image31.Top = Me.Image31.Top + 20
     Me.Label41.Top = Me.Label41.Top + 20
     Me.Label42.Top = Me.Label42.Top + 20
     Me.Label58.Top = Me.Label58.Top + 20
     Me.Label59.Top = Me.Label59.Top + 20
     Me.Label60.Top = Me.Label60.Top + 20
     Me.Label61.Top = Me.Label61.Top + 20
     Me.Label117.Top = Me.Label117.Top + 20
     Me.Label118.Top = Me.Label118.Top + 20
     Me.Label119.Top = Me.Label119.Top + 20
     Me.Label120.Top = Me.Label120.Top + 20
     Me.Label150.Top = Me.Label150.Top + 20
     Me.Label151.Top = Me.Label151.Top + 20
     Me.TextBox23.Top = Me.TextBox23.Top + 20
     Me.TextBox24.Top = Me.TextBox24.Top + 20
     Me.SpinButton1.Top = Me.SpinButton1.Top + 20
     Me.CommandButton105.Top = Me.CommandButton105.Top + 20
     Me.CommandButton106.Top = Me.CommandButton106.Top + 20
     Me.CommandButton117.Top = Me.CommandButton117.Top + 20
     Me.CommandButton119.Top = Me.CommandButton119.Top + 20
     Me.CommandButton269.Top = Me.CommandButton269.Top + 20
     Me.ToggleButton5.Top = Me.ToggleButton5.Top + 20
     Me.ToggleButton14.Top = Me.ToggleButton14.Top + 20
     Me.CommandButton123.Top = Me.CommandButton123.Top + 20
     Me.CommandButton123.Visible = False
     Me.CommandButton281.Top = Me.CommandButton281.Top + 20
     Me.CommandButton9.Top = Me.CommandButton9.Top + 20
     Me.MultiPage2.Top = Me.MultiPage2.Top + 20
     Me.MultiPage5.Top = Me.MultiPage5.Top + 20
     Me.Height = Me.Height + 20
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton2.ControlTipText = "Mini window mode 2"
     Else
        Me.ToggleButton2.ControlTipText = "|fffd|~|fffd|j|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd|[|fffd|h|fffd|Q"
     End If
  End If

  SW_TBC = False

End Sub

Private Sub ToggleButton3_Change()


  If Me.ToggleButton3.Value = True Then
     Me.ToggleButton3.Picture = Me.Image33.Picture
     
     Me.Label27.Visible = True
     Me.ComboBox19.Visible = True
     Me.CommandButton30.Visible = True
     Me.CommandButton264.Visible = True
     Me.CommandButton31.Visible = False
     Me.CommandButton32.Visible = False
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton3.ControlTipText = "Show buttons"
     Else
        Me.ToggleButton3.ControlTipText = "|fffd|{|fffd|^|fffd||fffd||fffd|\|fffd||fffd|"
     End If
  Else
     Me.ToggleButton3.Picture = Me.Image32.Picture
  
     Me.Label27.Visible = False
     Me.ComboBox19.Visible = False
     Me.CommandButton30.Visible = False
     Me.CommandButton264.Visible = False
     Me.CommandButton31.Visible = True
     Me.CommandButton32.Visible = True
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton3.ControlTipText = "Show folder"
     Else
        Me.ToggleButton3.ControlTipText = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|\|fffd||fffd|"
     End If
  End If

End Sub

Private Sub ToggleButton4_Change()


  If Me.ToggleButton4.Value = True Then
     Me.ToggleButton4.Picture = Me.Image33.Picture
     
     Me.Label37.Visible = True
     Me.ComboBox20.Visible = True
     Me.CommandButton40.Visible = True
     Me.CommandButton265.Visible = True
     Me.CommandButton39.Visible = False
     Me.CommandButton41.Visible = False
     Me.CommandButton42.Visible = False
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton4.ControlTipText = "Show buttons"
     Else
        Me.ToggleButton4.ControlTipText = "|fffd|{|fffd|^|fffd||fffd||fffd|\|fffd||fffd|"
     End If
  Else
     Me.ToggleButton4.Picture = Me.Image32.Picture
  
     Me.Label37.Visible = False
     Me.ComboBox20.Visible = False
     Me.CommandButton40.Visible = False
     Me.CommandButton265.Visible = False
     Me.CommandButton39.Visible = True
     Me.CommandButton41.Visible = True
     Me.CommandButton42.Visible = True
  
     If Me.CheckBox49.Value = True Then
        Me.ToggleButton4.ControlTipText = "Show folder"
     Else
        Me.ToggleButton4.ControlTipText = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|\|fffd||fffd|"
     End If
  End If

End Sub

Private Sub ToggleButton5_Change()

  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  Dim W_ADJ As Double

  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const WS_CAPTION = &HC00000
  Const GWL_STYLE = (-16)

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If


  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  If Me.ToggleButton5.Value = True Then
     If Me.ComboBox31.Value = "" Then
        Me.Label301.Visible = True
     End If
     If Me.ComboBox30.Value = "" Then
        Me.Label302.Visible = True
     End If
     Me.ComboBox31.Visible = True
     Me.ComboBox30.Visible = True
     Me.CommandButton120.Visible = True
     Me.CommandButton120.Default = True
     Me.CommandButton121.Visible = True
     Me.CommandButton122.Visible = True
     Me.CommandButton122.Cancel = True
     Me.ToggleButton7.Visible = True
     Me.ToggleButton8.Visible = True
     Me.ToggleButton9.Visible = True
     
     Me.ToggleButton6.Visible = True

     Me.MultiPage1.Visible = False

     Me.ToggleButton2.Enabled = False
     Me.ToggleButton1.Enabled = False

     Me.CommandButton123.Visible = False
     Me.ToggleButton5.Visible = False
     
     Me.CommandButton9.Visible = False
     Me.CommandButton269.Visible = False
     Me.CommandButton119.Visible = False
     Me.CommandButton117.Visible = False
     Me.CommandButton106.Visible = False
     Me.CommandButton105.Visible = False
     Me.ToggleButton14.Visible = False

     Me.Height = 65
     Me.Width = 247
     
     Me.Label138.Visible = False
     Me.Label139.Visible = False
     Me.TextBox27.Visible = False
     Me.TextBox28.Visible = False
     Me.TextBox29.Visible = False
     Me.TextBox30.Visible = False
     Me.ToggleButton10.Visible = False
     Me.ToggleButton12.Visible = False
     Me.ToggleButton13.Visible = False
     Me.ToggleButton18.Visible = False
     Me.CommandButton94.Visible = False
     Me.CommandButton95.Visible = False
     Me.CommandButton96.Visible = False
     Me.CommandButton97.Visible = False
     Me.TextBox27.ControlTipText = ""
     Me.TextBox28.ControlTipText = ""
     Me.TextBox29.ControlTipText = ""
     Me.TextBox30.ControlTipText = ""
     Me.ToggleButton10.ControlTipText = ""
     Me.ToggleButton12.ControlTipText = ""
     Me.ToggleButton13.ControlTipText = ""
  
     If Me.MultiPage2.Visible = True Then
        Me.MultiPage2.Visible = False
  
        hwnd = GetActiveWindow
#If Win64 Then
        SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Xor WS_THICKFRAME Xor WS_MINIMIZEBOX
#Else
        SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Xor WS_THICKFRAME Xor WS_MINIMIZEBOX
#End If
        DrawMenuBar hwnd
     End If
  
     hwnd = GetActiveWindow
#If Win64 Then
     SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Xor WS_CAPTION
#Else
     SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Xor WS_CAPTION
#End If
     DrawMenuBar hwnd
  
     Me.BackColor = &H404040
  
     Me.ComboBox31.SetFocus
  Else
     Me.Label301.Visible = False
     Me.Label302.Visible = False
     Me.ComboBox31.Visible = False
     Me.ComboBox30.Visible = False
     Me.CommandButton120.Visible = False
     Me.CommandButton120.Default = False
     Me.CommandButton121.Visible = False
     Me.CommandButton122.Visible = False
     Me.ToggleButton7.Visible = False
     Me.ToggleButton8.Visible = False
     Me.ToggleButton9.Visible = False
     
     Me.ToggleButton6.Visible = False
     Me.ToggleButton5.Visible = True
       
     Me.MultiPage1.Visible = True
     
     Me.MultiPage1.TabStop = True
     If Me.ToggleButton2 = True Then
        Me.MultiPage1.Height = 100
        Me.CommandButton123.Visible = True
     ElseIf Me.ToggleButton1 = True Then
        Me.MultiPage1.Height = 120
     Else
        Me.MultiPage1.Height = 186
     End If
     
     Me.ToggleButton2.Enabled = True
     Me.ToggleButton1.Enabled = True
     
     Me.CommandButton9.Visible = True
     Me.CommandButton9.Cancel = True
     Me.CommandButton269.Visible = True
     Me.CommandButton119.Visible = True
     Me.CommandButton117.Visible = True
     Me.CommandButton106.Visible = True
     Me.CommandButton105.Visible = True
     Me.ToggleButton14.Visible = True
  
     hwnd = GetActiveWindow
#If Win64 Then
     SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_CAPTION
#Else
     SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_CAPTION
#End If
     DrawMenuBar hwnd
  
     Me.BackColor = W_BGCLR
  
     SW_UF3 = True
     If Me.ToggleButton1 = False Then
        Me.Height = 246.5 + W_ADJ
     ElseIf Me.ToggleButton2 = False Then
        Me.Height = 246.5 + W_ADJ - 66
     Else
        Me.Height = 246.5 + W_ADJ - 66 - 20
     End If
     W_ADJ = Me.Width - Me.InsideWidth - 4.5
     Me.Width = 342 + W_ADJ
     W_ADJ = Me.Height - Me.InsideHeight - 21
     Me.Height = Me.Height + W_ADJ
     SW_UF3 = False
  
     Call MultiPage1_Change
  End If

  Me.ToggleButton6.Value = Me.ToggleButton5.Value

End Sub

Private Sub ToggleButton14_Change()

  Dim W_LONG As Long
  Dim SW_AERO As Boolean
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  On Error Resume Next
  DwmIsCompositionEnabled W_LONG
  SW_AERO = CBool(W_LONG)
  On Error GoTo 0
  
  If Me.ToggleButton14.Value = True Then
     Me.CheckBox81.Tag = ""
     Me.CheckBox81.Value = False
     SW_MM = False
     
     Me.MultiPage4.Visible = True
     W_ADJ = Me.Width - Me.InsideWidth - 4.5
     Me.Width = 735 + W_ADJ
  Else
     Me.MultiPage4.Visible = False
     W_ADJ = Me.Width - Me.InsideWidth - 4.5
     Me.Width = 342 + W_ADJ
  End If

End Sub

Private Sub ToggleButton15_Change()
  
  Dim W_BGFC As String
  
  
  If Me.ToggleButton15.Enabled = False Then
     Exit Sub
  End If
  
  W_BGFC = ThisWorkbook.path & "\bgfC2.vbs"
  
  If Me.ToggleButton15.Value = False Then
     If Dir(W_BGFC) <> "" Then
        On Error Resume Next
        Kill W_BGFC
        On Error GoTo 0
     End If
  Else
     Open W_BGFC For Output As #1
     Close #1
  End If
  
End Sub

Private Sub ToggleButton16_Change()

  Dim W_IDX As String
  Dim W_IDXC As String
  
  
  If Me.ToggleButton16.Value = True Then
     W_IDX = ThisWorkbook.path & "\idx.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
     End If
  End If
  
End Sub

Private Sub ToggleButton17_Change()

  Dim W_BGF As String
  Dim W_BGFC As String
  Dim I As Long
  
  
  If Me.ToggleButton17.Value = True Then
     Me.ToggleButton15.Enabled = False
  
     W_BGF = ThisWorkbook.path & "\bgf2.vbs"
     If Dir(W_BGF) <> "" Then
        W_BGFC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_BGFC For Output As #1
        Close #1
     End If
  Else
     If SW_ANM = False Then
        If Application.Visible = True Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Release stop background find?", vbYesNo + vbQuestion)
           Else
              W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
           End If
           If W_RET = vbNo Then
              Me.ToggleButton17.Value = True
              Exit Sub
           End If
        End If
     
        Call BGF_KICK(True)
        W_BGF = ThisWorkbook.path & "\bgf.vbs"
        For I = 1 To 100
           If Dir(W_BGF) = "" Then
              Exit For
           Else
              Sleep (250)
              DoEvents
           End If
        Next I
     End If
     
     Me.ToggleButton15.Enabled = True
  End If
  
End Sub

Private Sub CommandButton123_Click()
  
  UserForm18.Show

End Sub

Private Sub CommandButton281_Click()
'|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SAVE_SETTING
  Me.Hide
  SW_CLASSIC = False
  SW_CLASSIC2 = False
  Call SHOW_MODELESS(UserForm13)

End Sub

Private Sub CommandButton124_Click()
'|fffd|Z|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page2"
  UserForm19.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton125_Click()
'|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|Q|fffd|[|fffd||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page1"
  UserForm20.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton255_Click()
'|fffd|\|fffd|L|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N

  Dim AWB As Workbook
  Dim AWS As Worksheet
  Dim UR As Range
  Dim W_SC As String
  Dim RE9 As Object

  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Swing check"
  
  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If
  
  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
     .IgnoreCase = True
     .Global = True
  End With
  If RE9.Test(Me.ComboBox1.Value) = True Then
     Set RE9 = Nothing
     Exit Sub
  End If
  Set RE9 = Nothing
  
  Set AWB = Nothing
  On Error Resume Next
  Set AWB = ActiveWorkbook
  On Error GoTo LABEL_REP

  If AWB Is Nothing Then
     Exit Sub
  End If

  If TypeName(AWB.ActiveSheet) <> "Worksheet" Then
     Set AWB = Nothing
     Exit Sub
  End If
  
  Set AWS = AWB.ActiveSheet
  Set UR = AWS.UsedRange
  If IsEmpty(UR.Address(True, True, xlR1C1)) = True Then
     Set UR = Nothing
     Set AWS = Nothing
     Set AWB = Nothing
     Exit Sub
  End If
  
  Set UR = Nothing
  Set AWS = Nothing
  Set AWB = Nothing
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  W_SC = SWING_CHK(Me.ComboBox1.Value)
  
  If W_SC <> "" Then
     Call SHOW_MODELESS(UserForm15)
     W_PAGEN = "Page1"
     Me.CommandButton255.Tag = W_SC
     UserForm8.Show
     Me.CommandButton255.Tag = ""
  End If
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton147_Click()
'|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|M

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page3"
  UserForm21.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton268_Click()
'|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|

  Dim W_FILE As Variant
  Dim I As Long
  Dim WB As Workbook

  Dim W_FILEC As String
  Dim W_LNC As String


  If Dir(ThisWorkbook.path & "\pwc*.vbs") <> "" Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Analyzing password. Stop?", vbYesNo + vbQuestion)
     Else
        W_RET = MsgBox("|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||352||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
     End If
     If W_RET = vbYes Then
        Open ThisWorkbook.path & "\pwcC.vbs" For Output As #1
        Close #1
     End If
  Else
     If Val(Application.Version) >= 15 Then
        Call KILLTM_UF
     End If
     If SW_ENGLISH = True Then
        W_FILE = Application.GetOpenFilename("Excel Files (*.xls?),*.xls?", , "Select analyze target")
     Else
        W_FILE = Application.GetOpenFilename("Excel |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.xls?),*.xls?", , "|fffd||fffd||351||38f||6ce|w|fffd||fffd|")
     End If
     If VarType(W_FILE) = vbBoolean Then
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
     
     On Error GoTo LABEL_ERR
     Set WB = Workbooks.Open(Filename:=W_FILE, UpdateLinks:=0, Password:="", ReadOnly:=True)
     On Error GoTo 0
     WB.Close False
     Set WB = Nothing
     If SW_ENGLISH = True Then
        W_RET = MsgBox("The file doesn't have password.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||142||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
     
LABEL_START:
     
     On Error GoTo 0
     
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Limit to numeric character?", vbYesNo + vbQuestion)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24c||fffd||fffd||80b5||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
     End If
     If W_RET = vbYes Then
        SW_PWCLN = True
     Else
        SW_PWCLN = False
     End If
     
     SW_PWCRS = False
     If Dir(ThisWorkbook.path & "\pwcC1.dat") <> "" Then
        Open ThisWorkbook.path & "\pwcC1.dat" For Input As #1
        Line Input #1, W_FILEC
        Line Input #1, W_LNC
        Close #1
        If W_FILEC = W_FILE And _
           CBool(W_LNC) = SW_PWCLN Then
           If SW_ENGLISH = True Then
              W_RET = MsgBox("Resume?", vbYesNo + vbQuestion)
           Else
              W_RET = MsgBox("|fffd||10a|J|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
           End If
           If W_RET = vbYes Then
              SW_PWCRS = True
           End If
        End If
     End If
     
     W_PWCTF = W_FILE
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     W_PWCTF = ""
     W_MAXP = 5
     For I = 1 To W_MAXP
        W_FILE = ThisWorkbook.path & "\pwc" & I & ".vbs"
        Call GREP_WRITE_RTN(W_FILE)
        Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
     Next I
     W_FILE = ThisWorkbook.path & "\pwc.vbs"
     Open W_FILE For Output As #1
     Close #1
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Started analyzing.", vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||342||fffd||fffd|J|fffd|n|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
  End If

  Exit Sub

LABEL_ERR:
  Err.Clear
  Resume LABEL_START

End Sub

Private Sub CommandButton169_Click()
'|fffd|w|fffd||283|V|fffd|F|fffd|C|fffd|v

  Dim SR As ShapeRange
  Dim W_L As Double
  Dim W_R As Double
  Dim W_T As Double
  Dim W_B As Double
  Dim W_Z As Long
  Dim Z As Long
  Dim SHP As Shape
  Dim W_L1 As Double
  Dim W_R1 As Double
  Dim W_T1 As Double
  Dim W_B1 As Double

  Dim W_SPLEN As Long
  Dim W_SPTXT As String
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim K As Long


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Back shapes"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Set SR = Nothing
  On Error Resume Next
  Set SR = Selection.ShapeRange
  On Error GoTo LABEL_REP
  If SR Is Nothing Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If SR.count <> 1 Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False

  W_L = SR.Left
  W_R = SR.Left + SR.Width
  W_T = SR.Top
  W_B = SR.Top + SR.Height
  W_Z = SR.ZOrderPosition

  Set SR = Nothing

  W_CNTFA = 0
  AFN = 0
  
  For Z = 1 To ActiveWorkbook.ActiveSheet.Shapes.count
     Set SHP = ActiveWorkbook.ActiveSheet.Shapes(Z)
     
     If SHP.ZOrderPosition < W_Z Then
        W_L1 = SHP.Left
        W_R1 = SHP.Left + SHP.Width
        W_T1 = SHP.Top
        W_B1 = SHP.Top + SHP.Height

        If W_L1 >= W_L And _
           W_R1 <= W_R And _
           W_T1 >= W_T And _
           W_B1 <= W_B Then
           W_CNTFA = W_CNTFA + 1
        
           If AFN Mod 10000 = 0 Then
              ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
              ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
              ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
              ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
           End If
     
           AFN = AFN + 1
           AR_AFS(AFN) = ActiveWorkbook.ActiveSheet.Index
           AR_AFN(AFN) = SHP.Name
           AR_AFR(AFN) = SHP.ID
        
           W_SPLEN = -1
           On Error Resume Next
           W_SPLEN = SHP.TextFrame.Characters.count
           On Error GoTo LABEL_REP
           W_SPTXT = ""
           If W_SPLEN > 0 Then
              For K = 0 To Int(W_SPLEN / 255)
                 W_ST = K * 255 + 1
                 If (K + 1) * 255 <= W_SPLEN Then
                    W_BYTE = 255
                 Else
                    W_BYTE = W_SPLEN - K * 255
                 End If
                 W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
                 If (K + 1) * 255 = W_SPLEN Then
                    Exit For
                 End If
              Next K
           End If
           AR_AFV(AFN) = W_SPTXT
        End If
     End If
  Next Z

  Application.ScreenUpdating = True

  If W_CNTFA = 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
  Else
     Call ALL_FIND_S
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(6)
  End If
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub ToggleButton6_Change()

  Me.ToggleButton5.Value = Me.ToggleButton6.Value

End Sub

Private Sub ToggleButton7_Change()

  If SW_ATBC = True Then
     Exit Sub
  End If

  If Me.ToggleButton7.Value = False Then
     Me.ToggleButton7.Value = True
  Else
     SW_ATBC = True
     Me.ToggleButton8.Value = False
     Me.ToggleButton9.Value = False
     SW_ATBC = False
  End If

End Sub

Private Sub ToggleButton8_Change()

  If SW_ATBC = True Then
     Exit Sub
  End If

  If Me.ToggleButton8.Value = False Then
     Me.ToggleButton8.Value = True
  Else
     SW_ATBC = True
     Me.ToggleButton9.Value = False
     Me.ToggleButton7.Value = False
     SW_ATBC = False
  End If

End Sub

Private Sub ToggleButton9_Change()

  If SW_ATBC = True Then
     Exit Sub
  End If

  If Me.ToggleButton9.Value = False Then
     Me.ToggleButton9.Value = True
  Else
     SW_ATBC = True
     Me.ToggleButton7.Value = False
     Me.ToggleButton8.Value = False
     SW_ATBC = False
  End If

End Sub

Private Sub ToggleButton10_Change()

  If Me.ToggleButton10.Value = False Then
     Me.TextBox29.Visible = False
     Me.TextBox28.Top = Me.TextBox28.Top + 18
     Me.TextBox27.Height = Me.TextBox27.Height + 17
     Me.TextBox27.TabKeyBehavior = False
     Me.ToggleButton12.Visible = True
     Me.ToggleButton13.Visible = Me.ToggleButton12.Value
     Me.ToggleButton18.Visible = True
     If SW_ENGLISH = True Then
        Me.TextBox27.ControlTipText = "Enter pattern with newline separated."
     Else
        Me.TextBox27.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     End If
  Else
     Me.TextBox29.Visible = True
     Me.TextBox28.Top = Me.TextBox28.Top - 18
     Me.TextBox27.Height = Me.TextBox27.Height - 17
     Me.TextBox27.TabKeyBehavior = True
     Me.ToggleButton12.Visible = False
     Me.ToggleButton13.Visible = False
     Me.ToggleButton18.Visible = False
     If SW_ENGLISH = True Then
        Me.TextBox27.ControlTipText = "Enter pattern with newline separated. (Delimiter of replace before and after is Tab.)"
     Else
        Me.TextBox27.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|i|fffd|u|fffd||fffd||fffd|O|fffd||fffd||fffd|Tab|fffd||fffd||602||fffd|j"
     End If
  End If

End Sub

Private Sub ToggleButton18_Change()
  
  If Me.ToggleButton18.Value = False Then
     Me.TextBox27.Height = Me.TextBox27.Height + 25
     Me.TextBox27.MultiLine = True
     Me.TextBox30.Visible = False
     Me.TextBox30.MultiLine = True
     Me.ToggleButton10.Visible = True
     Me.ToggleButton12.Visible = True
     If SW_ENGLISH = True Then
        Me.TextBox27.ControlTipText = "Enter pattern with newline separated."
        Me.TextBox30.ControlTipText = "Enter not match pattern with newline separated."
     Else
        Me.TextBox27.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        Me.TextBox30.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     End If
  Else
     Me.TextBox27.Height = Me.TextBox27.Height - 25
     Me.TextBox27.MultiLine = False
     Me.TextBox30.Visible = True
     Me.TextBox30.MultiLine = False
     Me.ToggleButton10.Visible = False
     Me.ToggleButton12.Visible = False
     If SW_ENGLISH = True Then
        Me.TextBox27.ControlTipText = "Enter min value"
        Me.TextBox30.ControlTipText = "Enter max value"
     Else
        Me.TextBox27.ControlTipText = "|fffd||14f||fffd||fffd|l|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        Me.TextBox30.ControlTipText = "|fffd||151||fffd|l|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     End If
  End If

End Sub

Private Sub ToggleButton12_Change()

  If Me.ToggleButton12.Value = True Then
     Me.ToggleButton10.Visible = False
     Me.ToggleButton13.Visible = True
     If Me.ToggleButton13.Value = True Then
        Me.TextBox27.Height = Me.TextBox27.Height - 25
        Me.TextBox30.Visible = True
     End If
     Me.ToggleButton18.Visible = False
  Else
     Me.ToggleButton10.Visible = True
     Me.ToggleButton13.Visible = False
     If Me.ToggleButton13.Value = True Then
        Me.TextBox27.Height = Me.TextBox27.Height + 25
     End If
     Me.ToggleButton18.Visible = True
     Me.TextBox30.Visible = False
  End If

End Sub

Private Sub ToggleButton13_Change()

  If Me.ToggleButton13.Value = True Then
     Me.TextBox27.Height = Me.TextBox27.Height - 25
     Me.TextBox30.Visible = True
  Else
     Me.TextBox27.Height = Me.TextBox27.Height + 25
     Me.TextBox30.Visible = False
  End If

End Sub

Private Function MP1_CHG() As Long

  Dim I As Long
  
  Dim VP_1ST As Long
  Dim VP_LAST As Long
  
  VP_1ST = -1
  VP_LAST = -1
  
  For I = 0 To Me.MultiPage1.Pages.count - 1
     If Me.MultiPage1.Pages(I).Visible = True Then
        If VP_1ST = -1 Then
           VP_1ST = I
        End If
        VP_LAST = I
     End If
  Next I

  If VP_LAST <> Me.MultiPage1.Value Then
     MP1_CHG = VP_LAST
  ElseIf VP_1ST <> Me.MultiPage1.Value Then
     MP1_CHG = VP_1ST
  Else
     MP1_CHG = -1
  End If

End Function

Private Sub ComboBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox1)

End Sub

Private Sub ComboBox2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox2)

End Sub

Private Sub ComboBox3_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox3)

End Sub

Private Sub ComboBox4_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox4)

End Sub

Private Sub ComboBox5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox5)

End Sub

Private Sub ComboBox6_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox6)

End Sub

Private Sub ComboBox7_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox7)

End Sub

Private Sub ComboBox8_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox8)

End Sub

Private Sub ComboBox9_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox9)

End Sub

Private Sub ComboBox12_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox12)

End Sub

Private Sub ComboBox13_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox13)

End Sub

Private Sub ComboBox14_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox14)

End Sub

Private Sub ComboBox15_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox15)

End Sub

Private Sub ComboBox16_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox16)

End Sub

Private Sub ComboBox17_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox17)

End Sub

Private Sub ComboBox22_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox22)

End Sub

Private Sub ComboBox21_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox21)

End Sub

Private Sub ComboBox23_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox23)

End Sub

Private Sub ComboBox24_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox24)

End Sub

Private Sub ComboBox25_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox25)

End Sub

Private Sub ComboBox26_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox26)

End Sub

Private Sub ComboBox27_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox27)

End Sub

Private Sub ComboBox28_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox28)

End Sub

Private Sub ComboBox29_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox29)

End Sub

Private Sub ComboBox61_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox61)

End Sub

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox1)

End Sub

Private Sub TextBox2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox2)

End Sub

Private Sub TextBox3_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox3)

End Sub

Private Sub ComboBox18_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox18)

End Sub

Private Sub TextBox5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox5)

End Sub

Private Sub ComboBox19_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox19)

End Sub

Private Sub TextBox7_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox7)

End Sub

Private Sub TextBox8_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox8)

End Sub

Private Sub ComboBox20_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox20)

End Sub

Private Sub ComboBox60_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox60)

End Sub

Private Sub ComboBox62_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.ComboBox62)

End Sub

Private Sub TextBox37_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox37)

End Sub

Private Sub TextBox38_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox38)

End Sub

Private Sub TextBox39_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox39)

End Sub

Private Sub TextBox40_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox40)

End Sub

Private Sub TextBox41_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox41)

End Sub

Private Sub TextBox42_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox42)

End Sub

Private Sub TextBox10_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox10)

End Sub

Private Sub TextBox11_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox11)

End Sub

Private Sub TextBox12_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox12)

End Sub

Private Sub TextBox13_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox13)

End Sub

Private Sub TextBox14_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox14)

End Sub

Private Sub TextBox15_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox15)

End Sub

Private Sub TextBox16_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox16)

End Sub

Private Sub TextBox17_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox17)

End Sub

Private Sub TextBox18_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  Call KEY_DOWN_RTN(Me.TextBox18)

End Sub

Private Sub PREV_PAGE_RTN()

  If Me.MultiPage1.Tag = "P" Then
     Exit Sub
  End If
  
  SW_1STMP1 = True
  W_PAGE = Me.MultiPage1.Value - 1
  If W_PAGE < 0 Then
     W_PAGE = Me.MultiPage1.Pages.count - 1
  End If
  Me.MultiPage1.Value = W_PAGE

End Sub

Private Sub NEXT_PAGE_RTN()

  If Me.MultiPage1.Tag = "P" Then
     Exit Sub
  End If

  SW_1STMP1 = True
  W_PAGE = Me.MultiPage1.Value + 1
  If W_PAGE > Me.MultiPage1.Pages.count - 1 Then
     W_PAGE = 0
  End If
  Me.MultiPage1.Value = W_PAGE

End Sub

Private Sub KEY_DOWN_RTN(W_CONTROL As Control)

  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN
     Exit Sub
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN
     Exit Sub
  End If

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(W_CONTROL)
     Exit Sub
  End If

  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_RIGHT) <> 0 Then
     Me.ToggleButton14.Value = True
     Exit Sub
  End If

  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_LEFT) <> 0 Then
     Me.ToggleButton14.Value = False
     Exit Sub
  End If
  
End Sub

Private Sub MultiPage2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

End Sub

Private Sub ListBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox1, Me.CommandButton52)
  End If

End Sub

Private Sub ListBox2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox2, Me.CommandButton55)
  End If

End Sub

Private Sub ListBox3_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox3, Me.CommandButton57)
  End If

End Sub

Private Sub ListBox4_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox4, Me.CommandButton59)
  End If

End Sub

Private Sub ListBox5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox5, Me.CommandButton61)
  End If

End Sub

Private Sub ListBox6_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox6, Me.CommandButton63)
  End If

End Sub

Private Sub ListBox7_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox7, Me.CommandButton65)
  End If

End Sub

Private Sub ListBox8_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox8, Me.CommandButton67)
  End If

End Sub

Private Sub ListBox9_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox9, Me.CommandButton69)
  End If

End Sub

Private Sub ListBox10_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_PRIOR) <> 0 Then
     Call PREV_PAGE_RTN2
  End If
  
  If GetAsyncKeyState(VK_CONTROL) <> 0 And _
     GetAsyncKeyState(VK_NEXT) <> 0 Then
     Call NEXT_PAGE_RTN2
  End If

  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL(Me.ListBox10, Me.CommandButton71)
  End If

End Sub

Private Sub PREV_PAGE_RTN2()

  Dim W_PAGE2 As Long
  
  W_PAGE2 = Me.MultiPage2.Value - 1
  If W_PAGE2 < 0 Then
     W_PAGE2 = Me.MultiPage2.Pages.count - 1
  End If
  Me.MultiPage2.Value = W_PAGE2

End Sub

Private Sub NEXT_PAGE_RTN2()

  Dim W_PAGE2 As Long
  
  W_PAGE2 = Me.MultiPage2.Value + 1
  If W_PAGE2 > Me.MultiPage2.Pages.count - 1 Then
     W_PAGE2 = 0
  End If
  Me.MultiPage2.Value = W_PAGE2

End Sub

Private Sub MultiPage1_MouseUp(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If
  
  If Button = 2 Then
     If SW_NRC = False Then
        On Error Resume Next
        Application.CommandBars("EREPU9").ShowPopup
        On Error GoTo 0
     Else
        SW_NRC = False
     End If
     Exit Sub
  End If

  If Button = 1 Then
     If Y <= 0 Then
        If X <= MultiPage1.Width - 26.5 Then
           Call MP1_CL(Me.MultiPage1.Value)
        End If
     End If
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub MP1_CL(ByVal Index As Long)

  Dim AL As Object

  Dim W_MP1H As Long


  On Error GoTo LABEL_ERROR
  Set AL = CreateObject("System.Collections.ArrayList")
  On Error GoTo 0
  Set AL = Nothing

  If Me.MultiPage1.Height = 17 Then
     Me.Label138.Visible = False
     Me.Label139.Visible = False
     Me.TextBox27.Visible = False
     Me.TextBox28.Visible = False
     Me.TextBox29.Visible = False
     Me.TextBox30.Visible = False
     Me.ToggleButton10.Visible = False
     Me.ToggleButton12.Visible = False
     Me.ToggleButton13.Visible = False
     Me.ToggleButton18.Visible = False
     Me.CommandButton94.Visible = False
     Me.CommandButton95.Visible = False
     Me.CommandButton96.Visible = False
     Me.CommandButton97.Visible = False
     Me.MultiPage1.TabStop = True
     
     If Me.ToggleButton2 = True Then
        W_MP1H = 100
     ElseIf Me.ToggleButton1 = True Then
        W_MP1H = 120
     Else
        W_MP1H = 186
     End If
     
     If Me.CheckBox86.Value = False Then
        Do While Me.MultiPage1.Height < W_MP1H
           Me.MultiPage1.Height = Me.MultiPage1.Height + 3
           DoEvents
        Loop
     End If
     Me.MultiPage1.Height = W_MP1H
     
     Me.TextBox27.ControlTipText = ""
     Me.TextBox28.ControlTipText = ""
     Me.TextBox29.ControlTipText = ""
     Me.TextBox30.ControlTipText = ""
     Me.ToggleButton10.ControlTipText = ""
     Me.ToggleButton12.ControlTipText = ""
     Me.ToggleButton13.ControlTipText = ""
     Me.ToggleButton18.ControlTipText = ""
  Else
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name <> W_MP1 Then
        If Me.CheckBox86.Value = False Then
           Do While Me.MultiPage1.Height > 17
              Me.MultiPage1.Height = Me.MultiPage1.Height - 3
              DoEvents
           Loop
        End If
        
        Me.MultiPage1.Height = 17
        Me.Label138.Visible = True
        Me.Label139.Visible = True
        Me.TextBox27.Visible = True
        Me.TextBox28.Visible = True
        If Me.ToggleButton10.Value = True Then
           Me.TextBox27.TabKeyBehavior = True
           Me.TextBox29.Visible = True
           Me.ToggleButton12.Visible = False
           Me.ToggleButton13.Visible = False
           Me.TextBox30.Visible = False
        Else
           Me.TextBox27.TabKeyBehavior = False
           Me.TextBox29.Visible = False
           Me.ToggleButton12.Visible = True
           Me.ToggleButton13.Visible = Me.ToggleButton12.Value
           Me.TextBox30.Visible = Me.ToggleButton13.Value
        End If
        If Me.ToggleButton12.Value = True Then
           Me.ToggleButton10.Visible = False
        Else
           Me.ToggleButton10.Visible = True
           Me.ToggleButton18.Visible = True
        End If
        Me.CommandButton94.Visible = True
        Me.CommandButton95.Visible = True
        Me.CommandButton96.Visible = True
        Me.CommandButton97.Visible = True
        Me.MultiPage1.TabStop = False
        Me.TextBox27.SetFocus
        If SW_ENGLISH = True Then
           If Me.ToggleButton10.Value = False Then
              Me.TextBox27.ControlTipText = "Enter pattern with newline separated."
           Else
              Me.TextBox27.ControlTipText = "Enter pattern with newline separated. (Delimiter of replace before and after is Tab.)"
           End If
           Me.TextBox28.ControlTipText = "Find what is output here."
           Me.TextBox29.ControlTipText = "Replace with is output here."
           Me.TextBox30.ControlTipText = "Enter not match pattern with newline separated."
           Me.ToggleButton10.ControlTipText = "Capture reference replace mode"
           Me.ToggleButton12.ControlTipText = "Abstract mode"
           Me.ToggleButton13.ControlTipText = "Abstract mode 2"
           Me.ToggleButton18.ControlTipText = "Number range mode"
        Else
           If Me.ToggleButton10.Value = False Then
              Me.TextBox27.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
           Else
              Me.TextBox27.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|i|fffd|u|fffd||fffd||fffd|O|fffd||fffd||fffd|Tab|fffd||fffd||602||fffd|j"
           End If
           Me.TextBox28.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||42a8f|o|fffd||342||fffd||fffd||fffd||702||fffd||fffd|B"
           Me.TextBox29.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||252|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||42a8f|o|fffd||342||fffd||fffd||fffd||702||fffd||fffd|B"
           Me.TextBox30.ControlTipText = "|fffd||fffd||fffd|s|fffd||fffd||602||fffd||143|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
           Me.ToggleButton10.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||192|u|fffd||fffd||fffd||fffd||fffd|[|fffd|h"
           Me.ToggleButton12.ControlTipText = "|fffd||fffd||fffd||6c3||fffd||fffd|[|fffd|h"
           Me.ToggleButton13.ControlTipText = "|fffd||fffd||fffd||6c3||fffd||fffd|[|fffd|h|fffd|Q"
           Me.ToggleButton18.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||348||343||fffd||fffd|[|fffd|h"
        End If
     Else
        W_MP1 = ""
     End If
  End If

  Exit Sub

LABEL_ERROR:
  
  Set AL = Nothing

End Sub

Private Sub ComboBox1_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox1.ListIndex
        Me.ComboBox1.DropDown
        Me.ComboBox1.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox1
     Application.CommandBars("EREPU4").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox1
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox2_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox2.ListIndex
        Me.ComboBox2.DropDown
        Me.ComboBox2.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox2
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox3_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox3_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox3.ListIndex
        Me.ComboBox3.DropDown
        Me.ComboBox3.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox3
     Application.CommandBars("EREPU4").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox3.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox3
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox4_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox4_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox4.ListIndex
        Me.ComboBox4.DropDown
        Me.ComboBox4.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox4
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox4.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox4
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox5_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox5_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox5.ListIndex
        Me.ComboBox5.DropDown
        Me.ComboBox5.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox5
     Application.CommandBars("EREPU4").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox5.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox5
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox6_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox6_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox6.ListIndex
        Me.ComboBox6.DropDown
        Me.ComboBox6.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox6
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox6.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox6
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox7_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox7_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox7.ListIndex
        Me.ComboBox7.DropDown
        Me.ComboBox7.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox7
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox8_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox8_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox8.ListIndex
        Me.ComboBox8.DropDown
        Me.ComboBox8.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox8
     Application.CommandBars("EREPU4").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox8.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox8
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox9_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox9_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox9.ListIndex
        Me.ComboBox9.DropDown
        Me.ComboBox9.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox9
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox12_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox12_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox12.ListIndex
        Me.ComboBox12.DropDown
        Me.ComboBox12.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox12
     Application.CommandBars("EREPU4").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox12.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox12
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox13_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox13_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox13.ListIndex
        Me.ComboBox13.DropDown
        Me.ComboBox13.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox13
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox14_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox14_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox14.ListIndex
        Me.ComboBox14.DropDown
        Me.ComboBox14.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox14
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox15_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox15_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox15.ListIndex
        Me.ComboBox15.DropDown
        Me.ComboBox15.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox15
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox15.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox15
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox16_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox16_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox16.ListIndex
        Me.ComboBox16.DropDown
        Me.ComboBox16.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox16
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox16.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox16
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox17_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox17_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox17.ListIndex
        Me.ComboBox17.DropDown
        Me.ComboBox17.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox17
     Application.CommandBars("EREPU5").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox22_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox22_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox22.ListIndex
        Me.ComboBox22.DropDown
        Me.ComboBox22.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox22
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox22.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox22
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox21_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox21_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox21.ListIndex
        Me.ComboBox21.DropDown
        Me.ComboBox21.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox21
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox24_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox24_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox24.ListIndex
        Me.ComboBox24.DropDown
        Me.ComboBox24.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox24
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox24.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox24
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox26_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox26_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox26.ListIndex
        Me.ComboBox26.DropDown
        Me.ComboBox26.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox26
     Application.CommandBars("EREPU1").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox26.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox26
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox25_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox25_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox25.ListIndex
        Me.ComboBox25.DropDown
        Me.ComboBox25.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox25
     Application.CommandBars("EREPU2").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox27_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox27_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox27.ListIndex
        Me.ComboBox27.DropDown
        Me.ComboBox27.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox27
     On Error Resume Next
     Application.CommandBars("EREPU1").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox27.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox27
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox28_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox28_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox28.ListIndex
        Me.ComboBox28.DropDown
        Me.ComboBox28.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox28
     On Error Resume Next
     Application.CommandBars("EREPU2").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox29_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox29_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox29.ListIndex
        Me.ComboBox29.DropDown
        Me.ComboBox29.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox29
     On Error Resume Next
     Application.CommandBars("EREPU1").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox29.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox29
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox30_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox30_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox30.ListIndex
        Me.ComboBox30.DropDown
        Me.ComboBox30.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox30
     On Error Resume Next
     Application.CommandBars("EREPU2").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox31_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox31_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox31.ListIndex
        Me.ComboBox31.DropDown
        Me.ComboBox31.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox31
     On Error Resume Next
     Application.CommandBars("EREPU1").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox61_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox61_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox61.ListIndex
        Me.ComboBox61.DropDown
        Me.ComboBox61.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox61
     On Error Resume Next
     Application.CommandBars("EREPU1").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox61.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox61
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub TextBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox1
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox2
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox3_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox3
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub ComboBox18_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox18_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox18.ListIndex
        Me.ComboBox18.DropDown
        Me.ComboBox18.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox18
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub TextBox5_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox5
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub ComboBox19_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox19_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox19.ListIndex
        Me.ComboBox19.DropDown
        Me.ComboBox19.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox19
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub TextBox7_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox7
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox8_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox8
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub ComboBox20_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox20_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox20.ListIndex
        Me.ComboBox20.DropDown
        Me.ComboBox20.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox20
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox60_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox60_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox60.ListIndex
        Me.ComboBox60.DropDown
        Me.ComboBox60.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox60
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox62_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox62_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox62.ListIndex
        Me.ComboBox62.DropDown
        Me.ComboBox62.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox62
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub TextBox37_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox37
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox38_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox38
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox39_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox39
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox40_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox40
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox41_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox41
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox42_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox42
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub ComboBox23_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox23_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox23.ListIndex
        Me.ComboBox23.DropDown
        Me.ComboBox23.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox23
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub TextBox10_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox10
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox11_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox11
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox12_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox12
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox13_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox13
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox14_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox14
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox15_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox15
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox16_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox16
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox17_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox17
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox18_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox18
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox27_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox27
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox30_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox30
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Sub MultiPage1_Change()
  
  Dim W_UF1L As Double
  Dim W_UF1T As Double
  
  Dim W_MV As Long
  
  Dim W_MP1H As Long
  
  
#If Win64 Then
  Dim hwnd As LongPtr
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd As Long
  Dim hwnd01 As Long
#End If
  
  Dim W_MP4 As Long
  

  If SW_TO = True Then
     Exit Sub
  End If
  
  If Me.MultiPage1.Height = 17 Then
     
     If Me.ToggleButton2 = True Then
        W_MP1H = 100
     ElseIf Me.ToggleButton1 = True Then
        W_MP1H = 120
     Else
        W_MP1H = 186
     End If
     
     If Me.CheckBox86.Value = False Then
        Do While Me.MultiPage1.Height < W_MP1H
           Me.MultiPage1.Height = Me.MultiPage1.Height + 3
           DoEvents
        Loop
     End If
     Me.MultiPage1.Height = W_MP1H
     
     
     Me.Label138.Visible = False
     Me.Label139.Visible = False
     Me.TextBox27.Visible = False
     Me.TextBox28.Visible = False
     Me.TextBox29.Visible = False
     Me.TextBox30.Visible = False
     Me.ToggleButton10.Visible = False
     Me.ToggleButton12.Visible = False
     Me.ToggleButton13.Visible = False
     Me.ToggleButton18.Visible = False
     Me.CommandButton94.Visible = False
     Me.CommandButton95.Visible = False
     Me.CommandButton96.Visible = False
     Me.CommandButton97.Visible = False
     Me.MultiPage1.TabStop = True
     Me.TextBox27.ControlTipText = ""
     Me.TextBox28.ControlTipText = ""
     Me.TextBox29.ControlTipText = ""
     Me.TextBox30.ControlTipText = ""
     Me.ToggleButton10.ControlTipText = ""
     Me.ToggleButton12.ControlTipText = ""
     Me.ToggleButton13.ControlTipText = ""
     Me.ToggleButton18.ControlTipText = ""
     DoEvents
  End If
  If Me.MultiPage1.Height > 17 Then
     W_MP1 = Me.MultiPage1.Pages(Me.MultiPage1.Value).Name
  End If
  
  SW_EX = False
  Call TMR_END
  
  Call COMBO_FOCUS
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Then
     If Me.CheckBox22.Value = True Then
        SW_IS = True
     End If
  Else
     SW_IS = False
  End If
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name <> "Page10" And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name <> "Page13" And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name <> "Page19" And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name <> "Page3" Then
     If Me.CheckBox37.Value = True Then
        SW_DIC = True
     End If
     If Me.CheckBox71.Value = False Then
        SW_EX = True
     End If
     If Me.CheckBox209.Value = False Then
        SW_DESC = True
     End If
  Else
     SW_DESC = False
     SW_DIC = False
     SW_EX = False
  End If
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page14" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page16" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page17" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page8" Then
     If SW_ENGLISH = True Then
        Me.MultiPage1.ControlTipText = "You can do capture reference by $1, $2, and so on."
     Else
        Me.MultiPage1.ControlTipText = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||182||fffd|$1|fffd|A$2|fffd||202||1c2||14d|s|fffd||fffd||fffd||702||fffd||fffd|B"
     End If
  Else
     Me.MultiPage1.ControlTipText = ""
  End If
  
  If Me.ListBox1.Visible = True Then
     Me.CommandButton54.Enabled = True
  End If
  
  Select Case Me.MultiPage1.Pages(Me.MultiPage1.Value).Name
  Case "Page1"
     Me.CommandButton2.Default = True
  Case "Page2"
     Me.CommandButton4.Default = True
  Case "Page6"
     Me.CommandButton22.Default = True
  Case "Page12"
     Me.CommandButton51.Default = True
  Case "Page14"
     Me.CommandButton76.Default = True
  Case "Page15"
     Me.CommandButton80.Default = True
  Case "Page16"
     Me.CommandButton90.Default = True
  Case "Page17"
     Me.CommandButton99.Default = True
  Case "Page18"
     Me.CommandButton118.Default = True
  Case "Page4"
     Me.CommandButton16.Default = True
  Case "Page20"
     Me.CommandButton279.Default = True
  Case "Page5"
     Me.CommandButton20.Default = True
  Case "Page7"
     Me.CommandButton31.Default = True
  Case "Page9"
     Me.CommandButton39.Default = True
  Case "Page19"
     Me.CommandButton259.Default = True
  Case "Page8"
     Me.CommandButton33.Default = True
  Case "Page11"
     Me.CommandButton48.Default = True
  Case "Page10"
     Me.CommandButton44.Default = True
  Case "Page13"
     Me.CommandButton6.Default = True
     If AR_FTEXT(1) = "" And _
        AR_ATEXT(1) = "" Then
        Me.CommandButton17.Enabled = False
     Else
        Me.CommandButton17.Enabled = True
     End If
     If AR_RTEXT(1) = "" Then
        Me.CommandButton18.Enabled = False
     Else
        Me.CommandButton18.Enabled = True
     End If
     If AR_DTEXT(1) = "" Then
        Me.CommandButton73.Enabled = False
     Else
        Me.CommandButton73.Enabled = True
     End If
  End Select

  W_PAGEN = Me.MultiPage1.Pages(Me.MultiPage1.Value).Name

  W_MP4 = Me.MultiPage4.Value
  
  Me.MultiPage4.Pages("Page1").Enabled = False
  Me.MultiPage4.Pages("Page2").Enabled = False
  Me.MultiPage4.Pages("Page3").Enabled = False
  Me.MultiPage4.Pages("Page4").Enabled = False
  Me.MultiPage4.Pages("Page5").Enabled = False
  Me.MultiPage4.Pages("Page6").Enabled = False
  Me.MultiPage4.Pages("Page7").Enabled = False
  Me.MultiPage4.Pages("Page8").Enabled = False
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page17" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page14" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page16" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page15" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page8" Then
     Me.MultiPage4.Pages("Page6").Enabled = True
     Me.CheckBox1.Enabled = True
     Me.CheckBox2.Enabled = False
     Me.CheckBox3.Enabled = False
     Me.CheckBox7.Enabled = False
     Me.CheckBox32.Enabled = False
     Me.CheckBox12.Enabled = False
     Me.CheckBox16.Enabled = False
     Me.CheckBox60.Enabled = False
     Me.CheckBox206.Enabled = False
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Then
        Me.CheckBox2.Enabled = True
        Me.CheckBox3.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Then
        Me.CheckBox3.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page17" Then
        Me.CheckBox7.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page8" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Then
        Me.CheckBox32.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Then
        Me.CheckBox12.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page14" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
        Me.CheckBox16.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
        Me.CheckBox60.Enabled = Me.CheckBox16.Value
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Then
        Me.CheckBox206.Enabled = True
     End If
  End If
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
     Me.MultiPage4.Pages("Page1").Enabled = True
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Then
        Me.CheckBox171.Enabled = False
        Me.Label288.Enabled = False
        Me.CheckBox177.Enabled = False
        Me.CheckBox178.Enabled = False
        Me.CheckBox179.Enabled = False
        Me.CheckBox180.Enabled = False
        Me.CheckBox181.Enabled = False
        
        Me.CheckBox182.Enabled = False
        Me.CheckBox183.Enabled = False
        Me.CheckBox184.Enabled = False
        Me.CheckBox185.Enabled = False
        Me.CommandButton247.Enabled = False
        Me.CommandButton302.Enabled = False
     Else
        Me.CheckBox171.Enabled = True
        If Me.CheckBox171.Value = True Then
           Me.Label288.Enabled = True
           Me.CheckBox177.Enabled = True
           Me.CheckBox178.Enabled = True
           Me.CheckBox179.Enabled = True
           Me.CheckBox180.Enabled = True
           Me.CheckBox181.Enabled = True
           
           Me.CheckBox182.Enabled = Me.CheckBox177.Value
           Me.CheckBox183.Enabled = Me.CheckBox178.Value
           Me.CheckBox184.Enabled = Me.CheckBox179.Value
           Me.CheckBox185.Enabled = Me.CheckBox180.Value
           Me.CommandButton247.Enabled = Me.CheckBox181.Value
           Me.CommandButton302.Enabled = Me.CheckBox181.Value
        Else
           Me.CheckBox182.Enabled = False
           Me.CheckBox183.Enabled = False
           Me.CheckBox184.Enabled = False
           Me.CheckBox185.Enabled = False
           Me.CommandButton247.Enabled = False
           Me.CommandButton302.Enabled = False
        End If
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
        Me.Label287.Enabled = False
        Me.CheckBox172.Enabled = False
        Me.CheckBox173.Enabled = False
        Me.CheckBox174.Enabled = False
        Me.CheckBox175.Enabled = False
        Me.CheckBox176.Enabled = False
        Me.CommandButton246.Enabled = False
        Me.CommandButton301.Enabled = False
     Else
        Me.Label287.Enabled = True
        Me.CheckBox172.Enabled = True
        Me.CheckBox173.Enabled = True
        Me.CheckBox174.Enabled = True
        Me.CheckBox175.Enabled = True
        Me.CheckBox176.Enabled = True
        Me.CommandButton246.Enabled = Me.CheckBox176.Value
        Me.CommandButton301.Enabled = Me.CheckBox176.Value
     End If
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Then
     Me.MultiPage4.Pages("Page2").Enabled = True
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
     Me.MultiPage4.Pages("Page3").Enabled = True
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Then
     Me.MultiPage4.Pages("Page4").Enabled = True
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Then
        Me.CheckBox27.Enabled = False
     Else
        Me.CheckBox27.Enabled = True
     End If
     If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Or _
        Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Then
        Me.CheckBox207.Enabled = True
     Else
        Me.CheckBox207.Enabled = False
     End If
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
     Me.MultiPage4.Pages("Page5").Enabled = True
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page19" Then
     Me.MultiPage4.Pages("Page7").Enabled = True
  End If
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Then
     Me.MultiPage4.Pages("Page8").Enabled = True
  End If
  If W_MP4 = -1 Then
     Me.MultiPage4.Value = 0
  ElseIf Me.MultiPage4.Pages(W_MP4).Enabled = False Then
     Me.MultiPage4.Value = 0
  Else
     Me.MultiPage4.Value = W_MP4
  End If
  
  If Me.Visible = True Then
     If W_CLKBTN = "RMENU_FA_RTN" Then
     Else
        If Me.CommandButton9.Visible = True And _
           Me.CommandButton9.Enabled = True Then
           Me.CommandButton9.SetFocus
        End If
        Call COMBO_FOCUS
     End If
  End If

  'VBE
  If Me.Visible = True Then
     If Me.MultiPage1.Pages("Page17").Enabled = True Then
        On Error GoTo LABEL_ERR
        If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page17" Then
           Application.VBE.MainWindow.Visible = True
           If Val(Application.Version) >= 15 Then
              Call KILLTM_UF
           End If
           hwnd = FindWindow(vbNullString, Application.VBE.MainWindow.Caption)
           hwnd01 = FindWindow(vbNullString, Me.Caption)

#If Win64 Then
           Call SetWindowLongPtr(hwnd01, -8, hwnd)
#Else
           Call SetWindowLong(hwnd01, -8, hwnd)
#End If
           Call SetWindowPos(hwnd01, 0, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd|O
        Else

           hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
           hwnd = FindWindow(vbNullString, ActiveWindow.Parent.Parent.Caption)
#If Win64 Then
           Call SetWindowLongPtr(hwnd01, -8, hwnd)
#Else
           Call SetWindowLong(hwnd01, -8, hwnd)
#End If
           Call SetWindowPos(hwnd01, 0, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd|O
           W_AAC = ActiveWindow.Parent.Parent.Caption

           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
        End If
        On Error GoTo 0
     Else
        SW_ANM = False
        Call KILLTM_UF2
        If W_OPAGE = "Page17" Then
           Application.WindowState = xlMaximized
           hwnd = FindWindow(vbNullString, Application.VBE.MainWindow.Caption)
           ShowWindow hwnd, SW_SHOWMINIMIZED
           AppActivate Application.Caption
        End If
        
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
     End If
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     Else
        Call ED_SUB_CLS
     End If
  End If

  W_OPAGE = Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_ANM = False
  Call KILLTM_UF2
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  Exit Sub

End Sub

Private Sub ComboBox1_Enter()

  If Me.CheckBox22.Value = True Then
     SW_IS = True
  End If

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox1.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox1.BackColor = &HC0FFC0
  Else
     Me.ComboBox1.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_IS = False
  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  
  Call TM_END
  Call TMR_END

  Me.ComboBox1.BackColor = &H80000005

End Sub

Private Sub ComboBox1_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox1
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox1_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

  '|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd|T|fffd|[|fffd|`
  If SW_IS = True Then
     If Len(Me.ComboBox1.Value) >= Len(W_CB1) Then
        Call FINDPN(True, 0)
     Else
        Call FINDPN(False, 0)
     End If
  End If

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox1
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page1" Then
     If Len(Me.ComboBox1.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox1
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox1.SelStart = Len(Me.ComboBox1.Value) And _
        Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOX = Me.ComboBox1
        Call TM_STR
     End If
  End If

  If SW_EX = True Then
     Call TMR_END
     If Me.ComboBox1.SelStart = Len(Me.ComboBox1.Value) And _
        Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOX = Me.ComboBox1
        Call TMR_STR
     Else
        Call TMR_END
     End If
  End If

  If W_RETXT <> "" Then
     Me.ComboBox1.SelStart = W_SELSTART
     W_RETXT = ""
  End If

  If InStr(Me.ComboBox1.Value, vbCrLf) > 0 Then
     Me.ComboBox1.Value = Application.Substitute(Me.ComboBox1.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox1.Value, vbTab) > 0 Then
     Me.ComboBox1.Value = Application.Substitute(Me.ComboBox1.Value, vbTab, "")
  End If

  Me.ComboBox3.Value = Me.ComboBox1.Value
  Me.ComboBox4.Value = Me.ComboBox1.Value
  Me.ComboBox5.Value = Me.ComboBox1.Value
  Me.ComboBox6.Value = Me.ComboBox1.Value
  Me.ComboBox8.Value = Me.ComboBox1.Value
  Me.ComboBox12.Value = Me.ComboBox1.Value
  Me.ComboBox15.Value = Me.ComboBox1.Value
  Me.ComboBox16.Value = Me.ComboBox1.Value
  Me.ComboBox22.Value = Me.ComboBox1.Value
  Me.ComboBox24.Value = Me.ComboBox1.Value
  Me.ComboBox26.Value = Me.ComboBox1.Value
  Me.ComboBox27.Value = Me.ComboBox1.Value
  Me.ComboBox29.Value = Me.ComboBox1.Value
  Me.ComboBox31.Value = Me.ComboBox1.Value
  Me.ComboBox61.Value = Me.ComboBox1.Value
  Me.TextBox74.Value = Me.ComboBox1.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If
  W_CB1 = Me.ComboBox1.Value

End Sub

Private Sub ComboBox3_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox3.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox3.BackColor = &HC0FFC0
  Else
     Me.ComboBox3.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox3.BackColor = &H80000005

End Sub

Private Sub ComboBox3_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox3.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox3
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox3_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|u|fffd||fffd||fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox3.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox3
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page2" Then
     If Len(Me.ComboBox3.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox3
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox3.SelStart = Len(Me.ComboBox3.Value) And _
        Len(Me.ComboBox3.Value) <> 0 Then
        Set W_BOX = Me.ComboBox3
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox3.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox3.Value, vbCrLf) > 0 Then
     Me.ComboBox3.Value = Application.Substitute(Me.ComboBox3.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox3.Value, vbTab) > 0 Then
     Me.ComboBox3.Value = Application.Substitute(Me.ComboBox3.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox3.Value
  Me.ComboBox4.Value = Me.ComboBox3.Value
  Me.ComboBox5.Value = Me.ComboBox3.Value
  Me.ComboBox6.Value = Me.ComboBox3.Value
  Me.ComboBox8.Value = Me.ComboBox3.Value
  Me.ComboBox12.Value = Me.ComboBox3.Value
  Me.ComboBox15.Value = Me.ComboBox3.Value
  Me.ComboBox16.Value = Me.ComboBox3.Value
  Me.ComboBox22.Value = Me.ComboBox3.Value
  Me.ComboBox24.Value = Me.ComboBox3.Value
  Me.ComboBox26.Value = Me.ComboBox3.Value
  Me.ComboBox27.Value = Me.ComboBox3.Value
  Me.ComboBox29.Value = Me.ComboBox3.Value
  Me.ComboBox31.Value = Me.ComboBox3.Value
  Me.ComboBox61.Value = Me.ComboBox3.Value
  Me.TextBox74.Value = Me.ComboBox3.Value
  
  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox4_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox4.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox4.BackColor = &HC0FFC0
  Else
     Me.ComboBox4.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox4.BackColor = &H80000005

End Sub

Private Sub ComboBox4_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox4.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox4
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox4_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|o|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox4.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox4
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page4" Then
     If Len(Me.ComboBox4.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox4
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox4.SelStart = Len(Me.ComboBox4.Value) And _
        Len(Me.ComboBox4.Value) <> 0 Then
        Set W_BOX = Me.ComboBox4
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox4.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox4.Value, vbCrLf) > 0 Then
     Me.ComboBox4.Value = Application.Substitute(Me.ComboBox4.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox4.Value, vbTab) > 0 Then
     Me.ComboBox4.Value = Application.Substitute(Me.ComboBox4.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox4.Value
  Me.ComboBox3.Value = Me.ComboBox4.Value
  Me.ComboBox5.Value = Me.ComboBox4.Value
  Me.ComboBox6.Value = Me.ComboBox4.Value
  Me.ComboBox8.Value = Me.ComboBox4.Value
  Me.ComboBox12.Value = Me.ComboBox4.Value
  Me.ComboBox15.Value = Me.ComboBox4.Value
  Me.ComboBox16.Value = Me.ComboBox4.Value
  Me.ComboBox22.Value = Me.ComboBox4.Value
  Me.ComboBox24.Value = Me.ComboBox4.Value
  Me.ComboBox26.Value = Me.ComboBox4.Value
  Me.ComboBox27.Value = Me.ComboBox4.Value
  Me.ComboBox29.Value = Me.ComboBox4.Value
  Me.ComboBox31.Value = Me.ComboBox4.Value
  Me.ComboBox61.Value = Me.ComboBox4.Value
  Me.TextBox74.Value = Me.ComboBox4.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox5_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox5.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox5.BackColor = &HC0FFC0
  Else
     Me.ComboBox5.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox5.BackColor = &H80000005

End Sub

Private Sub ComboBox5_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox5.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox5
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox5_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iGREP|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox5.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox5
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Then
     If Len(Me.ComboBox5.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox5
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox5.SelStart = Len(Me.ComboBox5.Value) And _
        Len(Me.ComboBox5.Value) <> 0 Then
        Set W_BOX = Me.ComboBox5
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox5.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox5.Value, vbCrLf) > 0 Then
     Me.ComboBox5.Value = Application.Substitute(Me.ComboBox5.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox5.Value, vbTab) > 0 Then
     Me.ComboBox5.Value = Application.Substitute(Me.ComboBox5.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox5.Value
  Me.ComboBox3.Value = Me.ComboBox5.Value
  Me.ComboBox4.Value = Me.ComboBox5.Value
  Me.ComboBox6.Value = Me.ComboBox5.Value
  Me.ComboBox8.Value = Me.ComboBox5.Value
  Me.ComboBox12.Value = Me.ComboBox5.Value
  Me.ComboBox15.Value = Me.ComboBox5.Value
  Me.ComboBox16.Value = Me.ComboBox5.Value
  Me.ComboBox22.Value = Me.ComboBox5.Value
  Me.ComboBox24.Value = Me.ComboBox5.Value
  Me.ComboBox26.Value = Me.ComboBox5.Value
  Me.ComboBox27.Value = Me.ComboBox5.Value
  Me.ComboBox29.Value = Me.ComboBox5.Value
  Me.ComboBox31.Value = Me.ComboBox5.Value
  Me.ComboBox61.Value = Me.ComboBox5.Value
  Me.TextBox74.Value = Me.ComboBox5.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox6_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox6.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox6.BackColor = &HC0FFC0
  Else
     Me.ComboBox6.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox6.BackColor = &H80000005

End Sub

Private Sub ComboBox6_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox6.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox6
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox6_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|v|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox6.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox6
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page6" Then
     If Len(Me.ComboBox6.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox6
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox6.SelStart = Len(Me.ComboBox6.Value) And _
        Len(Me.ComboBox6.Value) <> 0 Then
        Set W_BOX = Me.ComboBox6
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox6.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox6.Value, vbCrLf) > 0 Then
     Me.ComboBox6.Value = Application.Substitute(Me.ComboBox6.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox6.Value, vbTab) > 0 Then
     Me.ComboBox6.Value = Application.Substitute(Me.ComboBox6.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox6.Value
  Me.ComboBox3.Value = Me.ComboBox6.Value
  Me.ComboBox4.Value = Me.ComboBox6.Value
  Me.ComboBox5.Value = Me.ComboBox6.Value
  Me.ComboBox8.Value = Me.ComboBox6.Value
  Me.ComboBox12.Value = Me.ComboBox6.Value
  Me.ComboBox15.Value = Me.ComboBox6.Value
  Me.ComboBox16.Value = Me.ComboBox6.Value
  Me.ComboBox22.Value = Me.ComboBox6.Value
  Me.ComboBox24.Value = Me.ComboBox6.Value
  Me.ComboBox26.Value = Me.ComboBox6.Value
  Me.ComboBox27.Value = Me.ComboBox6.Value
  Me.ComboBox29.Value = Me.ComboBox6.Value
  Me.ComboBox31.Value = Me.ComboBox6.Value
  Me.ComboBox61.Value = Me.ComboBox6.Value
  Me.TextBox74.Value = Me.ComboBox6.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox8_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox8.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox8.BackColor = &HC0FFC0
  Else
     Me.ComboBox8.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox8.BackColor = &H80000005

End Sub

Private Sub ComboBox8_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox8.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox8
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox8_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iGREP|fffd|u|fffd||fffd||fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox8.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox8
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page7" Then
     If Len(Me.ComboBox8.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox8
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox8.SelStart = Len(Me.ComboBox8.Value) And _
        Len(Me.ComboBox8.Value) <> 0 Then
        Set W_BOX = Me.ComboBox8
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox8.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox8.Value, vbCrLf) > 0 Then
     Me.ComboBox8.Value = Application.Substitute(Me.ComboBox8.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox8.Value, vbTab) > 0 Then
     Me.ComboBox8.Value = Application.Substitute(Me.ComboBox8.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox8.Value
  Me.ComboBox3.Value = Me.ComboBox8.Value
  Me.ComboBox4.Value = Me.ComboBox8.Value
  Me.ComboBox5.Value = Me.ComboBox8.Value
  Me.ComboBox6.Value = Me.ComboBox8.Value
  Me.ComboBox12.Value = Me.ComboBox8.Value
  Me.ComboBox15.Value = Me.ComboBox8.Value
  Me.ComboBox16.Value = Me.ComboBox8.Value
  Me.ComboBox22.Value = Me.ComboBox8.Value
  Me.ComboBox24.Value = Me.ComboBox8.Value
  Me.ComboBox26.Value = Me.ComboBox8.Value
  Me.ComboBox27.Value = Me.ComboBox8.Value
  Me.ComboBox29.Value = Me.ComboBox8.Value
  Me.ComboBox31.Value = Me.ComboBox8.Value
  Me.ComboBox61.Value = Me.ComboBox8.Value
  Me.TextBox74.Value = Me.ComboBox8.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox12_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox12.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox12.BackColor = &HC0FFC0
  Else
     Me.ComboBox12.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox12.BackColor = &H80000005

End Sub

Private Sub ComboBox12_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox12.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox12
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox12_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|`|fffd|F|fffd|b|fffd|N|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox12.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox12
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page8" Then
     If Len(Me.ComboBox12.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox12
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox12.SelStart = Len(Me.ComboBox12.Value) And _
        Len(Me.ComboBox12.Value) <> 0 Then
        Set W_BOX = Me.ComboBox12
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox12.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox12.Value, vbCrLf) > 0 Then
     Me.ComboBox12.Value = Application.Substitute(Me.ComboBox12.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox12.Value, vbTab) > 0 Then
     Me.ComboBox12.Value = Application.Substitute(Me.ComboBox12.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox12.Value
  Me.ComboBox3.Value = Me.ComboBox12.Value
  Me.ComboBox4.Value = Me.ComboBox12.Value
  Me.ComboBox5.Value = Me.ComboBox12.Value
  Me.ComboBox6.Value = Me.ComboBox12.Value
  Me.ComboBox8.Value = Me.ComboBox12.Value
  Me.ComboBox15.Value = Me.ComboBox12.Value
  Me.ComboBox16.Value = Me.ComboBox12.Value
  Me.ComboBox22.Value = Me.ComboBox12.Value
  Me.ComboBox24.Value = Me.ComboBox12.Value
  Me.ComboBox26.Value = Me.ComboBox12.Value
  Me.ComboBox27.Value = Me.ComboBox12.Value
  Me.ComboBox29.Value = Me.ComboBox12.Value
  Me.ComboBox31.Value = Me.ComboBox12.Value
  Me.ComboBox61.Value = Me.ComboBox12.Value
  Me.TextBox74.Value = Me.ComboBox12.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox15_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox15.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox15.BackColor = &HC0FFC0
  Else
     Me.ComboBox15.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox15.BackColor = &H80000005

End Sub

Private Sub ComboBox15_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox15.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox15
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox15_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|vGrep|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox15.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox15
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
     If Len(Me.ComboBox15.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox15
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox15.SelStart = Len(Me.ComboBox15.Value) And _
        Len(Me.ComboBox15.Value) <> 0 Then
        Set W_BOX = Me.ComboBox15
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox15.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox15.Value, vbCrLf) > 0 Then
     Me.ComboBox15.Value = Application.Substitute(Me.ComboBox15.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox15.Value, vbTab) > 0 Then
     Me.ComboBox15.Value = Application.Substitute(Me.ComboBox15.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox15.Value
  Me.ComboBox3.Value = Me.ComboBox15.Value
  Me.ComboBox4.Value = Me.ComboBox15.Value
  Me.ComboBox5.Value = Me.ComboBox15.Value
  Me.ComboBox6.Value = Me.ComboBox15.Value
  Me.ComboBox8.Value = Me.ComboBox15.Value
  Me.ComboBox12.Value = Me.ComboBox15.Value
  Me.ComboBox16.Value = Me.ComboBox15.Value
  Me.ComboBox22.Value = Me.ComboBox15.Value
  Me.ComboBox24.Value = Me.ComboBox15.Value
  Me.ComboBox26.Value = Me.ComboBox15.Value
  Me.ComboBox27.Value = Me.ComboBox15.Value
  Me.ComboBox29.Value = Me.ComboBox15.Value
  Me.ComboBox31.Value = Me.ComboBox15.Value
  Me.ComboBox61.Value = Me.ComboBox15.Value
  Me.TextBox74.Value = Me.ComboBox15.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox16_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox16.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox16.BackColor = &HC0FFC0
  Else
     Me.ComboBox16.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox16.BackColor = &H80000005

End Sub

Private Sub ComboBox16_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox16.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox16
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox16_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|[|fffd|g|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox16.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox16
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page12" Then
     If Len(Me.ComboBox16.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox16
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox16.SelStart = Len(Me.ComboBox16.Value) And _
        Len(Me.ComboBox16.Value) <> 0 Then
        Set W_BOX = Me.ComboBox16
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox16.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox16.Value, vbCrLf) > 0 Then
     Me.ComboBox16.Value = Application.Substitute(Me.ComboBox16.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox16.Value, vbTab) > 0 Then
     Me.ComboBox16.Value = Application.Substitute(Me.ComboBox16.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox16.Value
  Me.ComboBox3.Value = Me.ComboBox16.Value
  Me.ComboBox4.Value = Me.ComboBox16.Value
  Me.ComboBox5.Value = Me.ComboBox16.Value
  Me.ComboBox6.Value = Me.ComboBox16.Value
  Me.ComboBox8.Value = Me.ComboBox16.Value
  Me.ComboBox12.Value = Me.ComboBox16.Value
  Me.ComboBox15.Value = Me.ComboBox16.Value
  Me.ComboBox22.Value = Me.ComboBox16.Value
  Me.ComboBox24.Value = Me.ComboBox16.Value
  Me.ComboBox26.Value = Me.ComboBox16.Value
  Me.ComboBox27.Value = Me.ComboBox16.Value
  Me.ComboBox29.Value = Me.ComboBox16.Value
  Me.ComboBox31.Value = Me.ComboBox16.Value
  Me.ComboBox61.Value = Me.ComboBox16.Value
  Me.TextBox74.Value = Me.ComboBox16.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox22_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox22.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox22.BackColor = &HC0FFC0
  Else
     Me.ComboBox22.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox22_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox22.BackColor = &H80000005

End Sub

Private Sub ComboBox22_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox22.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox22
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox22_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox22.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox22
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page14" Then
     If Len(Me.ComboBox22.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox22
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox22.SelStart = Len(Me.ComboBox22.Value) And _
        Len(Me.ComboBox22.Value) <> 0 Then
        Set W_BOX = Me.ComboBox22
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox22.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox22.Value, vbCrLf) > 0 Then
     Me.ComboBox22.Value = Application.Substitute(Me.ComboBox22.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox22.Value, vbTab) > 0 Then
     Me.ComboBox22.Value = Application.Substitute(Me.ComboBox22.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox22.Value
  Me.ComboBox3.Value = Me.ComboBox22.Value
  Me.ComboBox4.Value = Me.ComboBox22.Value
  Me.ComboBox5.Value = Me.ComboBox22.Value
  Me.ComboBox6.Value = Me.ComboBox22.Value
  Me.ComboBox8.Value = Me.ComboBox22.Value
  Me.ComboBox12.Value = Me.ComboBox22.Value
  Me.ComboBox15.Value = Me.ComboBox22.Value
  Me.ComboBox16.Value = Me.ComboBox22.Value
  Me.ComboBox24.Value = Me.ComboBox22.Value
  Me.ComboBox26.Value = Me.ComboBox22.Value
  Me.ComboBox27.Value = Me.ComboBox22.Value
  Me.ComboBox29.Value = Me.ComboBox22.Value
  Me.ComboBox31.Value = Me.ComboBox22.Value
  Me.ComboBox61.Value = Me.ComboBox22.Value
  Me.TextBox74.Value = Me.ComboBox22.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox24_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox24.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox24.BackColor = &HC0FFC0
  Else
     Me.ComboBox24.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox24_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox24.BackColor = &H80000005

End Sub

Private Sub ComboBox24_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox24.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox24
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox24_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox24.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox24
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page15" Then
     If Len(Me.ComboBox24.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox24
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox24.SelStart = Len(Me.ComboBox24.Value) And _
        Len(Me.ComboBox24.Value) <> 0 Then
        Set W_BOX = Me.ComboBox24
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox24.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox24.Value, vbCrLf) > 0 Then
     Me.ComboBox24.Value = Application.Substitute(Me.ComboBox24.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox24.Value, vbTab) > 0 Then
     Me.ComboBox24.Value = Application.Substitute(Me.ComboBox24.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox24.Value
  Me.ComboBox3.Value = Me.ComboBox24.Value
  Me.ComboBox4.Value = Me.ComboBox24.Value
  Me.ComboBox5.Value = Me.ComboBox24.Value
  Me.ComboBox6.Value = Me.ComboBox24.Value
  Me.ComboBox8.Value = Me.ComboBox24.Value
  Me.ComboBox12.Value = Me.ComboBox24.Value
  Me.ComboBox15.Value = Me.ComboBox24.Value
  Me.ComboBox16.Value = Me.ComboBox24.Value
  Me.ComboBox22.Value = Me.ComboBox24.Value
  Me.ComboBox26.Value = Me.ComboBox24.Value
  Me.ComboBox27.Value = Me.ComboBox24.Value
  Me.ComboBox29.Value = Me.ComboBox24.Value
  Me.ComboBox31.Value = Me.ComboBox24.Value
  Me.ComboBox61.Value = Me.ComboBox24.Value
  Me.TextBox74.Value = Me.ComboBox24.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox26_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox26.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox26.BackColor = &HC0FFC0
  Else
     Me.ComboBox26.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox26_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox26.BackColor = &H80000005

End Sub

Private Sub ComboBox26_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox26.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox26
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox26_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|O|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox26.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox26
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page16" Then
     If Len(Me.ComboBox26.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox26
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox26.SelStart = Len(Me.ComboBox26.Value) And _
        Len(Me.ComboBox26.Value) <> 0 Then
        Set W_BOX = Me.ComboBox26
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox26.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox26.Value, vbCrLf) > 0 Then
     Me.ComboBox26.Value = Application.Substitute(Me.ComboBox26.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox26.Value, vbTab) > 0 Then
     Me.ComboBox26.Value = Application.Substitute(Me.ComboBox26.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox26.Value
  Me.ComboBox3.Value = Me.ComboBox26.Value
  Me.ComboBox4.Value = Me.ComboBox26.Value
  Me.ComboBox5.Value = Me.ComboBox26.Value
  Me.ComboBox6.Value = Me.ComboBox26.Value
  Me.ComboBox8.Value = Me.ComboBox26.Value
  Me.ComboBox12.Value = Me.ComboBox26.Value
  Me.ComboBox15.Value = Me.ComboBox26.Value
  Me.ComboBox16.Value = Me.ComboBox26.Value
  Me.ComboBox22.Value = Me.ComboBox26.Value
  Me.ComboBox24.Value = Me.ComboBox26.Value
  Me.ComboBox27.Value = Me.ComboBox26.Value
  Me.ComboBox29.Value = Me.ComboBox26.Value
  Me.ComboBox31.Value = Me.ComboBox26.Value
  Me.ComboBox61.Value = Me.ComboBox26.Value
  Me.TextBox74.Value = Me.ComboBox26.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox27_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox27.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox27.BackColor = &HC0FFC0
  Else
     Me.ComboBox27.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox27_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox27.BackColor = &H80000005

End Sub

Private Sub ComboBox27_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox27.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox27
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox27_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iVBE|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox27.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox27
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page17" Then
     If Len(Me.ComboBox27.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox27
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox27.SelStart = Len(Me.ComboBox27.Value) And _
        Len(Me.ComboBox27.Value) <> 0 Then
        Set W_BOX = Me.ComboBox27
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox27.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox27.Value, vbCrLf) > 0 Then
     Me.ComboBox27.Value = Application.Substitute(Me.ComboBox27.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox27.Value, vbTab) > 0 Then
     Me.ComboBox27.Value = Application.Substitute(Me.ComboBox27.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox27.Value
  Me.ComboBox3.Value = Me.ComboBox27.Value
  Me.ComboBox4.Value = Me.ComboBox27.Value
  Me.ComboBox5.Value = Me.ComboBox27.Value
  Me.ComboBox6.Value = Me.ComboBox27.Value
  Me.ComboBox8.Value = Me.ComboBox27.Value
  Me.ComboBox12.Value = Me.ComboBox27.Value
  Me.ComboBox15.Value = Me.ComboBox27.Value
  Me.ComboBox16.Value = Me.ComboBox27.Value
  Me.ComboBox22.Value = Me.ComboBox27.Value
  Me.ComboBox24.Value = Me.ComboBox27.Value
  Me.ComboBox26.Value = Me.ComboBox27.Value
  Me.ComboBox29.Value = Me.ComboBox27.Value
  Me.ComboBox31.Value = Me.ComboBox27.Value
  Me.ComboBox61.Value = Me.ComboBox27.Value
  Me.TextBox74.Value = Me.ComboBox27.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox29_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  Me.ComboBox29.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox29_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox29.BackColor = &H80000005

End Sub

Private Sub ComboBox29_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox29.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox29
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox29_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|t|fffd|B|fffd||fffd||fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox29.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox29
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page18" Then
     If Len(Me.ComboBox29.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox29
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox29.SelStart = Len(Me.ComboBox29.Value) And _
        Len(Me.ComboBox29.Value) <> 0 Then
        Set W_BOX = Me.ComboBox29
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox29.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox29.Value, vbCrLf) > 0 Then
     Me.ComboBox29.Value = Application.Substitute(Me.ComboBox29.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox29.Value, vbTab) > 0 Then
     Me.ComboBox29.Value = Application.Substitute(Me.ComboBox29.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox29.Value
  Me.ComboBox3.Value = Me.ComboBox29.Value
  Me.ComboBox4.Value = Me.ComboBox29.Value
  Me.ComboBox5.Value = Me.ComboBox29.Value
  Me.ComboBox6.Value = Me.ComboBox29.Value
  Me.ComboBox8.Value = Me.ComboBox29.Value
  Me.ComboBox12.Value = Me.ComboBox29.Value
  Me.ComboBox15.Value = Me.ComboBox29.Value
  Me.ComboBox16.Value = Me.ComboBox29.Value
  Me.ComboBox22.Value = Me.ComboBox29.Value
  Me.ComboBox24.Value = Me.ComboBox29.Value
  Me.ComboBox26.Value = Me.ComboBox29.Value
  Me.ComboBox27.Value = Me.ComboBox29.Value
  Me.ComboBox31.Value = Me.ComboBox29.Value
  Me.ComboBox61.Value = Me.ComboBox29.Value
  Me.TextBox74.Value = Me.ComboBox29.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox31_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If SW_ORE = True Then
     Me.ComboBox31.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox31.BackColor = &HC0FFC0
  Else
     Me.ComboBox31.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox31_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  Call TM_END
  Call TMR_END

  Me.ComboBox31.BackColor = &H80000005

End Sub

Private Sub ComboBox31_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||208||543||fffd||fffd|[|fffd|h|fffd|j
  
  If Me.ComboBox31.Value = "" Then
     Me.Label301.Visible = True
  Else
     If Me.Label301.Visible = True Then
        Me.Label301.Visible = False
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.ToggleButton5.Value = True Then
     If Len(Me.ComboBox31.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox31
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox31.SelStart = Len(Me.ComboBox31.Value) And _
        Len(Me.ComboBox31.Value) <> 0 Then
        Set W_BOX = Me.ComboBox31
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox31.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox31.Value, vbCrLf) > 0 Then
     Me.ComboBox31.Value = Application.Substitute(Me.ComboBox31.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox31.Value, vbTab) > 0 Then
     Me.ComboBox31.Value = Application.Substitute(Me.ComboBox31.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox31.Value
  Me.ComboBox3.Value = Me.ComboBox31.Value
  Me.ComboBox4.Value = Me.ComboBox31.Value
  Me.ComboBox5.Value = Me.ComboBox31.Value
  Me.ComboBox6.Value = Me.ComboBox31.Value
  Me.ComboBox8.Value = Me.ComboBox31.Value
  Me.ComboBox12.Value = Me.ComboBox31.Value
  Me.ComboBox15.Value = Me.ComboBox31.Value
  Me.ComboBox16.Value = Me.ComboBox31.Value
  Me.ComboBox22.Value = Me.ComboBox31.Value
  Me.ComboBox24.Value = Me.ComboBox31.Value
  Me.ComboBox26.Value = Me.ComboBox31.Value
  Me.ComboBox27.Value = Me.ComboBox31.Value
  Me.ComboBox29.Value = Me.ComboBox31.Value
  Me.ComboBox61.Value = Me.ComboBox31.Value
  Me.TextBox74.Value = Me.ComboBox31.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub ComboBox61_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If
  
  If Me.CheckBox71.Value = False Then
     SW_EX = True
  End If

  If Me.CheckBox209.Value = False Then
     SW_DESC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox61.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox61.BackColor = &HC0FFC0
  Else
     Me.ComboBox61.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox61_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  SW_EX = False
  SW_DESC = False
  Call TMD_END
  Call TM_END
  Call TMR_END

  Me.ComboBox61.BackColor = &H80000005

End Sub

Private Sub ComboBox61_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox61.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox61
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If

End Sub

Private Sub ComboBox61_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iIdx|fffd|j
  
  If SW_DESC = True Then
     Call TMD_END
     If Len(Me.ComboBox61.Value) <> 0 Then
        Set W_BOXD = Me.ComboBox61
        Call TMD_STR
     Else
        Call TMD_END
     End If
  End If
  
  If Me.CheckBox72.Value = False And _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page20" Then
     If Len(Me.ComboBox61.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox61
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox61.SelStart = Len(Me.ComboBox61.Value) And _
        Len(Me.ComboBox61.Value) <> 0 Then
        Set W_BOX = Me.ComboBox61
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox61.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox61.Value, vbCrLf) > 0 Then
     Me.ComboBox61.Value = Application.Substitute(Me.ComboBox61.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox61.Value, vbTab) > 0 Then
     Me.ComboBox61.Value = Application.Substitute(Me.ComboBox61.Value, vbTab, "")
  End If
  
  Me.ComboBox1.Value = Me.ComboBox61.Value
  Me.ComboBox3.Value = Me.ComboBox61.Value
  Me.ComboBox4.Value = Me.ComboBox61.Value
  Me.ComboBox5.Value = Me.ComboBox61.Value
  Me.ComboBox6.Value = Me.ComboBox61.Value
  Me.ComboBox8.Value = Me.ComboBox61.Value
  Me.ComboBox12.Value = Me.ComboBox61.Value
  Me.ComboBox15.Value = Me.ComboBox61.Value
  Me.ComboBox16.Value = Me.ComboBox61.Value
  Me.ComboBox22.Value = Me.ComboBox61.Value
  Me.ComboBox24.Value = Me.ComboBox61.Value
  Me.ComboBox26.Value = Me.ComboBox61.Value
  Me.ComboBox27.Value = Me.ComboBox61.Value
  Me.ComboBox29.Value = Me.ComboBox61.Value
  Me.ComboBox31.Value = Me.ComboBox61.Value
  Me.TextBox74.Value = Me.ComboBox61.Value

  If SW_PCST = False Then
     W_PCCNT = 0
  End If

End Sub

Private Sub Label301_Click()

  Me.CommandButton120.SetFocus
  Me.ComboBox31.SetFocus

End Sub

Private Sub Label301_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox31.ListIndex
        Me.ComboBox31.DropDown
        Me.ComboBox31.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox31
     On Error Resume Next
     Application.CommandBars("EREPU1").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox31_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If Me.ComboBox31.Value = "" Then
     Me.Label301.Visible = True
  Else
     If Me.Label301.Visible = True Then
        Me.Label301.Visible = False
     End If
  End If

End Sub

Private Sub ComboBox2_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox2.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox2.BackColor = &HC0FFC0
  Else
     Me.ComboBox2.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox2.BackColor = &H80000005

End Sub

Private Sub ComboBox2_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox2.SelStart = Len(Me.ComboBox2.Value) And _
        Len(Me.ComboBox2.Value) <> 0 Then
        Set W_BOX = Me.ComboBox2
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox2.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox2.Value, vbCrLf) > 0 Then
     Me.ComboBox2.Value = Application.Substitute(Me.ComboBox2.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox2.Value, vbTab) > 0 Then
     Me.ComboBox2.Value = Application.Substitute(Me.ComboBox2.Value, vbTab, "")
  End If
  
  Me.ComboBox7.Value = Me.ComboBox2.Value
  Me.ComboBox9.Value = Me.ComboBox2.Value
  Me.ComboBox13.Value = Me.ComboBox2.Value
  Me.ComboBox14.Value = Me.ComboBox2.Value
  Me.ComboBox17.Value = Me.ComboBox2.Value
  Me.ComboBox21.Value = Me.ComboBox2.Value
  Me.ComboBox25.Value = Me.ComboBox2.Value
  Me.ComboBox28.Value = Me.ComboBox2.Value
  Me.ComboBox30.Value = Me.ComboBox2.Value

End Sub

Private Sub ComboBox7_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox7.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox7.BackColor = &HC0FFC0
  Else
     Me.ComboBox7.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox7.BackColor = &H80000005

End Sub

Private Sub ComboBox7_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|v|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox7.SelStart = Len(Me.ComboBox7.Value) And _
        Len(Me.ComboBox7.Value) <> 0 Then
        Set W_BOX = Me.ComboBox7
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox7.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox7.Value, vbCrLf) > 0 Then
     Me.ComboBox7.Value = Application.Substitute(Me.ComboBox7.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox7.Value, vbTab) > 0 Then
     Me.ComboBox7.Value = Application.Substitute(Me.ComboBox7.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox7.Value
  Me.ComboBox9.Value = Me.ComboBox7.Value
  Me.ComboBox13.Value = Me.ComboBox7.Value
  Me.ComboBox14.Value = Me.ComboBox7.Value
  Me.ComboBox17.Value = Me.ComboBox7.Value
  Me.ComboBox21.Value = Me.ComboBox7.Value
  Me.ComboBox25.Value = Me.ComboBox7.Value
  Me.ComboBox28.Value = Me.ComboBox7.Value
  Me.ComboBox30.Value = Me.ComboBox7.Value

End Sub

Private Sub ComboBox9_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox9.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox9.BackColor = &HC0FFC0
  Else
     Me.ComboBox9.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox9.BackColor = &H80000005

End Sub

Private Sub ComboBox9_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iGREP|fffd|u|fffd||fffd||fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox9.SelStart = Len(Me.ComboBox9.Value) And _
        Len(Me.ComboBox9.Value) <> 0 Then
        Set W_BOX = Me.ComboBox9
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox9.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox9.Value, vbCrLf) > 0 Then
     Me.ComboBox9.Value = Application.Substitute(Me.ComboBox9.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox9.Value, vbTab) > 0 Then
     Me.ComboBox9.Value = Application.Substitute(Me.ComboBox9.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox9.Value
  Me.ComboBox7.Value = Me.ComboBox9.Value
  Me.ComboBox13.Value = Me.ComboBox9.Value
  Me.ComboBox14.Value = Me.ComboBox9.Value
  Me.ComboBox17.Value = Me.ComboBox9.Value
  Me.ComboBox21.Value = Me.ComboBox9.Value
  Me.ComboBox25.Value = Me.ComboBox9.Value
  Me.ComboBox28.Value = Me.ComboBox9.Value
  Me.ComboBox30.Value = Me.ComboBox9.Value

End Sub

Private Sub ComboBox13_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox13.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox13.BackColor = &HC0FFC0
  Else
     Me.ComboBox13.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox13_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox13.BackColor = &H80000005

End Sub

Private Sub ComboBox13_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|`|fffd|F|fffd|b|fffd|N|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox13.SelStart = Len(Me.ComboBox13.Value) And _
        Len(Me.ComboBox13.Value) <> 0 Then
        Set W_BOX = Me.ComboBox13
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox13.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox13.Value, vbCrLf) > 0 Then
     Me.ComboBox13.Value = Application.Substitute(Me.ComboBox13.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox13.Value, vbTab) > 0 Then
     Me.ComboBox13.Value = Application.Substitute(Me.ComboBox13.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox13.Value
  Me.ComboBox7.Value = Me.ComboBox13.Value
  Me.ComboBox9.Value = Me.ComboBox13.Value
  Me.ComboBox14.Value = Me.ComboBox13.Value
  Me.ComboBox17.Value = Me.ComboBox13.Value
  Me.ComboBox21.Value = Me.ComboBox13.Value
  Me.ComboBox25.Value = Me.ComboBox13.Value
  Me.ComboBox28.Value = Me.ComboBox13.Value
  Me.ComboBox30.Value = Me.ComboBox13.Value

End Sub

Private Sub ComboBox14_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox14.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox14.BackColor = &HC0FFC0
  Else
     Me.ComboBox14.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox14.BackColor = &H80000005

End Sub

Private Sub ComboBox14_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|vGrep|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox14.SelStart = Len(Me.ComboBox14.Value) And _
        Len(Me.ComboBox14.Value) <> 0 Then
        Set W_BOX = Me.ComboBox14
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox14.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox14.Value, vbCrLf) > 0 Then
     Me.ComboBox14.Value = Application.Substitute(Me.ComboBox14.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox14.Value, vbTab) > 0 Then
     Me.ComboBox14.Value = Application.Substitute(Me.ComboBox14.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox14.Value
  Me.ComboBox7.Value = Me.ComboBox14.Value
  Me.ComboBox9.Value = Me.ComboBox14.Value
  Me.ComboBox13.Value = Me.ComboBox14.Value
  Me.ComboBox17.Value = Me.ComboBox14.Value
  Me.ComboBox21.Value = Me.ComboBox14.Value
  Me.ComboBox25.Value = Me.ComboBox14.Value
  Me.ComboBox28.Value = Me.ComboBox14.Value
  Me.ComboBox30.Value = Me.ComboBox14.Value

End Sub

Private Sub ComboBox17_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox17.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox17.BackColor = &HC0FFC0
  Else
     Me.ComboBox17.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox17.BackColor = &H80000005

End Sub

Private Sub ComboBox17_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|V|fffd|[|fffd|g|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox17.SelStart = Len(Me.ComboBox17.Value) And _
        Len(Me.ComboBox17.Value) <> 0 Then
        Set W_BOX = Me.ComboBox17
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox17.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox17.Value, vbCrLf) > 0 Then
     Me.ComboBox17.Value = Application.Substitute(Me.ComboBox17.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox17.Value, vbTab) > 0 Then
     Me.ComboBox17.Value = Application.Substitute(Me.ComboBox17.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox17.Value
  Me.ComboBox7.Value = Me.ComboBox17.Value
  Me.ComboBox9.Value = Me.ComboBox17.Value
  Me.ComboBox13.Value = Me.ComboBox17.Value
  Me.ComboBox14.Value = Me.ComboBox17.Value
  Me.ComboBox21.Value = Me.ComboBox17.Value
  Me.ComboBox25.Value = Me.ComboBox17.Value
  Me.ComboBox28.Value = Me.ComboBox17.Value
  Me.ComboBox30.Value = Me.ComboBox17.Value

End Sub

Private Sub ComboBox21_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox21.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox21.BackColor = &HC0FFC0
  Else
     Me.ComboBox21.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox21_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox21.BackColor = &H80000005

End Sub

Private Sub ComboBox21_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox21.SelStart = Len(Me.ComboBox21.Value) And _
        Len(Me.ComboBox21.Value) <> 0 Then
        Set W_BOX = Me.ComboBox21
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox21.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox21.Value, vbCrLf) > 0 Then
     Me.ComboBox21.Value = Application.Substitute(Me.ComboBox21.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox21.Value, vbTab) > 0 Then
     Me.ComboBox21.Value = Application.Substitute(Me.ComboBox21.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox21.Value
  Me.ComboBox7.Value = Me.ComboBox21.Value
  Me.ComboBox9.Value = Me.ComboBox21.Value
  Me.ComboBox13.Value = Me.ComboBox21.Value
  Me.ComboBox14.Value = Me.ComboBox21.Value
  Me.ComboBox17.Value = Me.ComboBox21.Value
  Me.ComboBox25.Value = Me.ComboBox21.Value
  Me.ComboBox28.Value = Me.ComboBox21.Value
  Me.ComboBox30.Value = Me.ComboBox21.Value

End Sub

Private Sub ComboBox25_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox25.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox25.BackColor = &HC0FFC0
  Else
     Me.ComboBox25.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox25_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox25.BackColor = &H80000005

End Sub

Private Sub ComboBox25_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|O|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox25.SelStart = Len(Me.ComboBox25.Value) And _
        Len(Me.ComboBox25.Value) <> 0 Then
        Set W_BOX = Me.ComboBox25
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox25.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox25.Value, vbCrLf) > 0 Then
     Me.ComboBox25.Value = Application.Substitute(Me.ComboBox25.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox25.Value, vbTab) > 0 Then
     Me.ComboBox25.Value = Application.Substitute(Me.ComboBox25.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox25.Value
  Me.ComboBox7.Value = Me.ComboBox25.Value
  Me.ComboBox9.Value = Me.ComboBox25.Value
  Me.ComboBox13.Value = Me.ComboBox25.Value
  Me.ComboBox14.Value = Me.ComboBox25.Value
  Me.ComboBox17.Value = Me.ComboBox25.Value
  Me.ComboBox21.Value = Me.ComboBox25.Value
  Me.ComboBox28.Value = Me.ComboBox25.Value
  Me.ComboBox30.Value = Me.ComboBox25.Value

End Sub

Private Sub ComboBox28_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox28.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox28.BackColor = &HC0FFC0
  Else
     Me.ComboBox28.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox28_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox28.BackColor = &H80000005

End Sub

Private Sub ComboBox28_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|iVBE|fffd|j
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox28.SelStart = Len(Me.ComboBox28.Value) And _
        Len(Me.ComboBox28.Value) <> 0 Then
        Set W_BOX = Me.ComboBox28
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox28.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox28.Value, vbCrLf) > 0 Then
     Me.ComboBox28.Value = Application.Substitute(Me.ComboBox28.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox28.Value, vbTab) > 0 Then
     Me.ComboBox28.Value = Application.Substitute(Me.ComboBox28.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox28.Value
  Me.ComboBox7.Value = Me.ComboBox28.Value
  Me.ComboBox9.Value = Me.ComboBox28.Value
  Me.ComboBox13.Value = Me.ComboBox28.Value
  Me.ComboBox14.Value = Me.ComboBox28.Value
  Me.ComboBox17.Value = Me.ComboBox28.Value
  Me.ComboBox21.Value = Me.ComboBox28.Value
  Me.ComboBox25.Value = Me.ComboBox28.Value
  Me.ComboBox30.Value = Me.ComboBox28.Value

End Sub

Private Sub ComboBox30_Enter()

  If Me.CheckBox37.Value = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox30.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox30.BackColor = &HC0FFC0
  Else
     Me.ComboBox30.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox30_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox30.BackColor = &H80000005

End Sub

Private Sub Label302_Click()

  Me.CommandButton120.SetFocus
  Me.ComboBox30.SetFocus

End Sub

Private Sub Label302_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox30.ListIndex
        Me.ComboBox30.DropDown
        Me.ComboBox30.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox30
     On Error Resume Next
     Application.CommandBars("EREPU2").ShowPopup
     On Error GoTo 0
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub ComboBox30_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||208||543||fffd||fffd|[|fffd|h|fffd|j
  
  If Me.ComboBox30.Value = "" Then
     Me.Label302.Visible = True
  Else
     If Me.Label302.Visible = True Then
        Me.Label302.Visible = False
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox30.SelStart = Len(Me.ComboBox30.Value) And _
        Len(Me.ComboBox30.Value) <> 0 Then
        Set W_BOX = Me.ComboBox30
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox30.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox30.Value, vbCrLf) > 0 Then
     Me.ComboBox30.Value = Application.Substitute(Me.ComboBox30.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox30.Value, vbTab) > 0 Then
     Me.ComboBox30.Value = Application.Substitute(Me.ComboBox30.Value, vbTab, "")
  End If
  
  Me.ComboBox2.Value = Me.ComboBox30.Value
  Me.ComboBox7.Value = Me.ComboBox30.Value
  Me.ComboBox9.Value = Me.ComboBox30.Value
  Me.ComboBox13.Value = Me.ComboBox30.Value
  Me.ComboBox14.Value = Me.ComboBox30.Value
  Me.ComboBox17.Value = Me.ComboBox30.Value
  Me.ComboBox21.Value = Me.ComboBox30.Value
  Me.ComboBox25.Value = Me.ComboBox30.Value
  Me.ComboBox28.Value = Me.ComboBox30.Value

End Sub

Private Sub ComboBox30_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If Me.ComboBox30.Value = "" Then
     Me.Label302.Visible = True
  Else
     If Me.Label302.Visible = True Then
        Me.Label302.Visible = False
     End If
  End If

End Sub

Private Sub TextBox3_Enter()

  Me.TextBox3.BackColor = &HC0FFFF

End Sub

Private Sub TextBox3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox3.BackColor = &H80000005

End Sub

Private Sub TextBox3_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|iGREP|fffd|j
  
  If InStr(Me.TextBox3.Value, vbCrLf) > 0 Then
     Me.TextBox3.Value = Application.Substitute(Me.TextBox3.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox3.Value, vbTab) > 0 Then
     Me.TextBox3.Value = Application.Substitute(Me.TextBox3.Value, vbTab, "")
  End If

  Me.TextBox5.Value = Me.TextBox3.Value
  Me.TextBox8.Value = Me.TextBox3.Value
  Me.TextBox42.Value = Me.TextBox3.Value

End Sub

Private Sub TextBox5_Enter()

  Me.TextBox5.BackColor = &HC0FFFF

End Sub

Private Sub TextBox5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox5.BackColor = &H80000005

End Sub

Private Sub TextBox5_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|iGREP|fffd|u|fffd||fffd||fffd|j

  If InStr(Me.TextBox5.Value, vbCrLf) > 0 Then
     Me.TextBox5.Value = Application.Substitute(Me.TextBox5.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox5.Value, vbTab) > 0 Then
     Me.TextBox5.Value = Application.Substitute(Me.TextBox5.Value, vbTab, "")
  End If

  Me.TextBox3.Value = Me.TextBox5.Value
  Me.TextBox8.Value = Me.TextBox5.Value
  Me.TextBox42.Value = Me.TextBox5.Value

End Sub

Private Sub TextBox8_Enter()

  Me.TextBox8.BackColor = &HC0FFFF

End Sub

Private Sub TextBox8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox8.BackColor = &H80000005

End Sub

Private Sub TextBox8_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|v|fffd|j
  
  If InStr(Me.TextBox8.Value, vbCrLf) > 0 Then
     Me.TextBox8.Value = Application.Substitute(Me.TextBox8.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox8.Value, vbTab) > 0 Then
     Me.TextBox8.Value = Application.Substitute(Me.TextBox8.Value, vbTab, "")
  End If

  Me.TextBox3.Value = Me.TextBox8.Value
  Me.TextBox5.Value = Me.TextBox8.Value
  Me.TextBox42.Value = Me.TextBox8.Value

End Sub

Private Sub TextBox42_Enter()

  Me.TextBox42.BackColor = &HC0FFFF

End Sub

Private Sub TextBox42_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox42.BackColor = &H80000005

End Sub

Private Sub TextBox42_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|v|fffd|j
  
  If InStr(Me.TextBox42.Value, vbCrLf) > 0 Then
     Me.TextBox42.Value = Application.Substitute(Me.TextBox42.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox42.Value, vbTab) > 0 Then
     Me.TextBox42.Value = Application.Substitute(Me.TextBox42.Value, vbTab, "")
  End If

  Me.TextBox3.Value = Me.TextBox42.Value
  Me.TextBox5.Value = Me.TextBox42.Value
  Me.TextBox8.Value = Me.TextBox42.Value

End Sub

Private Sub ComboBox18_Enter()

  Me.ComboBox18.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox18.BackColor = &H80000005

End Sub

Private Sub ComboBox18_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|iGREP|fffd|j

  If InStr(Me.ComboBox18.Value, vbCrLf) > 0 Then
     Me.ComboBox18.Value = Application.Substitute(Me.ComboBox18.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox18.Value, vbTab) > 0 Then
     Me.ComboBox18.Value = Application.Substitute(Me.ComboBox18.Value, vbTab, "")
  End If

  Me.ComboBox19.Value = Me.ComboBox18.Value
  Me.ComboBox20.Value = Me.ComboBox18.Value
  Me.ComboBox23.Value = Me.ComboBox18.Value
  Me.ComboBox60.Value = Me.ComboBox18.Value
  Me.ComboBox62.Value = Me.ComboBox18.Value

End Sub

Private Sub ComboBox19_Enter()

  Me.ComboBox19.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox19_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox19.BackColor = &H80000005

End Sub

Private Sub ComboBox19_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|iGREP|fffd|u|fffd||fffd||fffd|j

  If InStr(Me.ComboBox19.Value, vbCrLf) > 0 Then
     Me.ComboBox19.Value = Application.Substitute(Me.ComboBox19.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox19.Value, vbTab) > 0 Then
     Me.ComboBox19.Value = Application.Substitute(Me.ComboBox19.Value, vbTab, "")
  End If

  Me.ComboBox18.Value = Me.ComboBox19.Value
  Me.ComboBox20.Value = Me.ComboBox19.Value
  Me.ComboBox23.Value = Me.ComboBox19.Value
  Me.ComboBox60.Value = Me.ComboBox19.Value
  Me.ComboBox62.Value = Me.ComboBox19.Value

End Sub

Private Sub ComboBox20_Enter()

  Me.ComboBox20.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox20_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox20.BackColor = &H80000005

End Sub

Private Sub ComboBox20_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|iGREP|fffd|j

  If InStr(Me.ComboBox20.Value, vbCrLf) > 0 Then
     Me.ComboBox20.Value = Application.Substitute(Me.ComboBox20.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox20.Value, vbTab) > 0 Then
     Me.ComboBox20.Value = Application.Substitute(Me.ComboBox20.Value, vbTab, "")
  End If

  Me.ComboBox18.Value = Me.ComboBox20.Value
  Me.ComboBox19.Value = Me.ComboBox20.Value
  Me.ComboBox23.Value = Me.ComboBox20.Value
  Me.ComboBox60.Value = Me.ComboBox20.Value
  Me.ComboBox62.Value = Me.ComboBox20.Value

End Sub

Private Sub ComboBox60_Enter()

  Me.ComboBox60.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox60_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox60.BackColor = &H80000005

End Sub

Private Sub ComboBox60_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|iGREP|fffd|j

  If InStr(Me.ComboBox60.Value, vbCrLf) > 0 Then
     Me.ComboBox60.Value = Application.Substitute(Me.ComboBox60.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox60.Value, vbTab) > 0 Then
     Me.ComboBox60.Value = Application.Substitute(Me.ComboBox60.Value, vbTab, "")
  End If

  Me.ComboBox18.Value = Me.ComboBox60.Value
  Me.ComboBox19.Value = Me.ComboBox60.Value
  Me.ComboBox20.Value = Me.ComboBox60.Value
  Me.ComboBox23.Value = Me.ComboBox60.Value
  Me.ComboBox62.Value = Me.ComboBox60.Value

End Sub

Private Sub ComboBox62_Enter()

  Me.ComboBox62.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox62_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox62.BackColor = &H80000005

End Sub

Private Sub ComboBox62_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|iGREP|fffd|j

  If InStr(Me.ComboBox62.Value, vbCrLf) > 0 Then
     Me.ComboBox62.Value = Application.Substitute(Me.ComboBox62.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox62.Value, vbTab) > 0 Then
     Me.ComboBox62.Value = Application.Substitute(Me.ComboBox62.Value, vbTab, "")
  End If

  Me.ComboBox18.Value = Me.ComboBox62.Value
  Me.ComboBox19.Value = Me.ComboBox62.Value
  Me.ComboBox20.Value = Me.ComboBox62.Value
  Me.ComboBox23.Value = Me.ComboBox62.Value
  Me.ComboBox60.Value = Me.ComboBox62.Value

End Sub

Private Sub TextBox37_Enter()

  Me.TextBox37.BackColor = &HC0FFFF

End Sub

Private Sub TextBox37_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox37.BackColor = &H80000005

End Sub

Private Sub TextBox37_Change()
  
  If InStr(Me.TextBox37.Value, vbCrLf) > 0 Then
     Me.TextBox37.Value = Application.Substitute(Me.TextBox37.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox37.Value, vbTab) > 0 Then
     Me.TextBox37.Value = Application.Substitute(Me.TextBox37.Value, vbTab, "")
  End If

End Sub

Private Sub TextBox38_Enter()

  Me.TextBox38.BackColor = &HC0FFFF

End Sub

Private Sub TextBox38_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox38.BackColor = &H80000005

End Sub

Private Sub TextBox38_Change()
  
  If InStr(Me.TextBox38.Value, vbCrLf) > 0 Then
     Me.TextBox38.Value = Application.Substitute(Me.TextBox38.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox38.Value, vbTab) > 0 Then
     Me.TextBox38.Value = Application.Substitute(Me.TextBox38.Value, vbTab, "")
  End If

End Sub

Private Sub TextBox39_Enter()

  Me.TextBox39.BackColor = &HC0FFFF

End Sub

Private Sub TextBox39_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox39.BackColor = &H80000005

End Sub

Private Sub TextBox39_Change()
  
  If InStr(Me.TextBox39.Value, vbCrLf) > 0 Then
     Me.TextBox39.Value = Application.Substitute(Me.TextBox39.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox39.Value, vbTab) > 0 Then
     Me.TextBox39.Value = Application.Substitute(Me.TextBox39.Value, vbTab, "")
  End If

End Sub

Private Sub TextBox40_Enter()

  Me.TextBox40.BackColor = &HC0FFFF

End Sub

Private Sub TextBox40_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox40.BackColor = &H80000005

End Sub

Private Sub TextBox40_Change()
  
  If InStr(Me.TextBox40.Value, vbCrLf) > 0 Then
     Me.TextBox40.Value = Application.Substitute(Me.TextBox40.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox40.Value, vbTab) > 0 Then
     Me.TextBox40.Value = Application.Substitute(Me.TextBox40.Value, vbTab, "")
  End If

End Sub

Private Sub TextBox41_Enter()

  Me.TextBox41.BackColor = &HC0FFFF

End Sub

Private Sub TextBox41_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox41.BackColor = &H80000005

End Sub

Private Sub TextBox41_Change()
  
  If InStr(Me.TextBox41.Value, vbCrLf) > 0 Then
     Me.TextBox41.Value = Application.Substitute(Me.TextBox41.Value, vbCrLf, "")
  End If
  If InStr(Me.TextBox41.Value, vbTab) > 0 Then
     Me.TextBox41.Value = Application.Substitute(Me.TextBox41.Value, vbTab, "")
  End If

End Sub

Private Sub ComboBox23_Enter()

  Me.ComboBox23.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox23_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox23.BackColor = &H80000005

End Sub

Private Sub ComboBox23_Change()
'|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|i|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd|j

  If InStr(Me.ComboBox23.Value, vbCrLf) > 0 Then
     Me.ComboBox23.Value = Application.Substitute(Me.ComboBox23.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox23.Value, vbTab) > 0 Then
     Me.ComboBox23.Value = Application.Substitute(Me.ComboBox23.Value, vbTab, "")
  End If

  Me.ComboBox18.Value = Me.ComboBox23.Value
  Me.ComboBox19.Value = Me.ComboBox23.Value
  Me.ComboBox20.Value = Me.ComboBox23.Value
  Me.ComboBox60.Value = Me.ComboBox23.Value
  Me.ComboBox62.Value = Me.ComboBox23.Value

End Sub

Private Sub TextBox1_Enter()

  Me.TextBox1.BackColor = &HC0FFFF

End Sub

Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox1.BackColor = &H80000005

End Sub

Private Sub TextBox2_Enter()

  Me.TextBox2.BackColor = &HC0FFFF

End Sub

Private Sub TextBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox2.BackColor = &H80000005

End Sub

Private Sub TextBox7_Enter()

  Me.TextBox7.BackColor = &HC0FFFF

End Sub

Private Sub TextBox7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox7.BackColor = &H80000005

End Sub

Private Sub TextBox11_Enter()

  Me.TextBox11.BackColor = &HC0FFFF

End Sub

Private Sub TextBox11_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox11.BackColor = &H80000005

End Sub

Private Sub TextBox12_Enter()

  Me.TextBox12.BackColor = &HC0FFFF

End Sub

Private Sub TextBox12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox12.BackColor = &H80000005

End Sub

Private Sub TextBox13_Enter()

  Me.TextBox13.BackColor = &HC0FFFF

End Sub

Private Sub TextBox13_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox13.BackColor = &H80000005

End Sub

Private Sub TextBox14_Enter()

  Me.TextBox14.BackColor = &HC0FFFF

End Sub

Private Sub TextBox14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox14.BackColor = &H80000005

End Sub

Private Sub TextBox15_Enter()

  Me.TextBox15.BackColor = &HC0FFFF

End Sub

Private Sub TextBox15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox15.BackColor = &H80000005

End Sub

Private Sub TextBox16_Enter()

  Me.TextBox16.BackColor = &HC0FFFF

End Sub

Private Sub TextBox16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox16.BackColor = &H80000005

End Sub

Private Sub TextBox17_Enter()

  Me.TextBox17.BackColor = &HC0FFFF

End Sub

Private Sub TextBox17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox17.BackColor = &H80000005

End Sub

Private Sub TextBox18_Enter()

  Me.TextBox18.BackColor = &HC0FFFF

End Sub

Private Sub TextBox18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox18.BackColor = &H80000005

End Sub

Private Sub TextBox25_Enter()

  Me.TextBox25.BackColor = &HC0FFFF

End Sub

Private Sub TextBox25_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox25.BackColor = &H80000005

End Sub

Private Sub TextBox26_Enter()

  Me.TextBox26.BackColor = &HC0FFFF

End Sub

Private Sub TextBox26_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox26.BackColor = &H80000005

End Sub

Private Sub TextBox27_Enter()

  Me.TextBox27.BackColor = &HC0FFFF

End Sub

Private Sub TextBox27_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox27.BackColor = &H80000005

End Sub

Private Sub TextBox30_Enter()

  Me.TextBox30.BackColor = &HC0FFFF

End Sub

Private Sub TextBox30_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox30.BackColor = &H80000005

End Sub

Private Sub TextBox10_Enter()

  Me.TextBox10.BackColor = &HC0FFFF

End Sub

Private Sub TextBox10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox10.BackColor = &H80000005

End Sub

Private Sub CheckBox16_Change()
'|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|iGREP|fffd|j
  
  If Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page5" Or _
     Me.MultiPage1.Pages(Me.MultiPage1.Value).Name = "Page9" Then
     Me.CheckBox60.Enabled = Me.CheckBox16.Value
  End If

End Sub

Private Sub CheckBox62_Change()
'|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|iGREP|fffd|j
  
  Me.CheckBox63.Value = Me.CheckBox62.Value
  Me.CheckBox64.Value = Me.CheckBox62.Value
  Me.TextBox3.Enabled = Not Me.CheckBox62.Value
  Me.ComboBox18.Enabled = Not Me.CheckBox62.Value
  Me.CommandButton19.Enabled = Not Me.CheckBox62.Value
  Me.CommandButton263.Enabled = Not Me.CheckBox62.Value

End Sub

Private Sub CheckBox63_Change()
'|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|iGREP|fffd|j
  
  Me.CheckBox62.Value = Me.CheckBox63.Value
  Me.CheckBox64.Value = Me.CheckBox63.Value
  Me.TextBox5.Enabled = Not Me.CheckBox63.Value
  Me.ComboBox19.Enabled = Not Me.CheckBox63.Value
  Me.CommandButton30.Enabled = Not Me.CheckBox63.Value
  Me.CommandButton264.Enabled = Not Me.CheckBox63.Value

End Sub

Private Sub CheckBox64_Change()
'|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|i|fffd|V|fffd|F|fffd|C|fffd|vGREP|fffd|j
  
  Me.CheckBox62.Value = Me.CheckBox64.Value
  Me.CheckBox63.Value = Me.CheckBox64.Value
  Me.TextBox8.Enabled = Not Me.CheckBox64.Value
  Me.ComboBox20.Enabled = Not Me.CheckBox64.Value
  Me.CommandButton40.Enabled = Not Me.CheckBox64.Value
  Me.CommandButton265.Enabled = Not Me.CheckBox64.Value

End Sub

Private Sub CheckBox42_Change()
'|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|g|fffd|p

  Me.TextBox10.Enabled = Me.CheckBox42.Value
  Me.CommandButton43.Enabled = Me.CheckBox42.Value
  
End Sub

Private Sub CheckBox75_Change()
'|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g

  Me.Label104.Enabled = Me.CheckBox75.Value
  Me.Label105.Enabled = Me.CheckBox75.Value
  Me.TextBox25.Enabled = Me.CheckBox75.Value
  Me.TextBox26.Enabled = Me.CheckBox75.Value
  
End Sub

Private Sub CheckBox81_Change()
'|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v
  
  Dim W_ADJ As Double


  If Me.CheckBox81.Value = True Then
     Call MM_INIT
     Me.ListBox11.Visible = True
     Me.Label300.Visible = True
     Me.Image34.Visible = True
     W_ADJ = Me.Width - Me.InsideWidth - 4.5
     Me.Width = 490 + W_ADJ
     Set XL2 = New C03Excel
     Set XL2.APP = Application
  Else
     Set XL2.APP = Nothing
     Set XL2 = Nothing
     Me.ListBox11.Visible = False
     Me.Label300.Visible = False
     Me.Image34.Visible = False
     W_ADJ = Me.Width - Me.InsideWidth - 4.5
     Me.Width = 342 + W_ADJ
  End If

End Sub

Private Sub MM_INIT()

  Dim I As Long


  If Me.CheckBox49.Value = True Then
     Me.ListBox11.Font.Name = "Courier New"
     Me.Label300.Font.Name = "Courier New"
  Else
     Me.ListBox11.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label300.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  End If

  I = InStr(UserForm1.MultiPage2.Tag, vbTab)
  
  If I > 0 Then
     Me.ListBox11.Tag = Left$(Me.MultiPage2.Tag, I - 1)
     Me.Label300.Tag = Right$(Me.MultiPage2.Tag, Len(Me.MultiPage2.Tag) - I)
  Else
     Me.ListBox11.Tag = ""
     Me.Label300.Tag = ""
  End If
  
  Call MAP_RESET

End Sub

Private Sub ListBox11_Change()

  Dim W_CLWDT As Long
  Dim I As Long
  Dim W_CNT As Long
  Dim W_TI As Long
  Dim W_ISTBK As Long

  If SW_MU = True Then
     SW_MU = False
     Me.ListBox11.Selected(Me.ListBox11.ListIndex) = Not Me.ListBox11.Selected(Me.ListBox11.ListIndex)
     Me.ListBox11.Selected(W_IST) = True
     Me.ListBox11.ListIndex = W_IST
     Exit Sub
  End If
  
  If SW_EF = True Then
     Exit Sub
  End If
  
  If SW_LC = True Then
     SW_LC = False

     W_CNT = ActiveSheet.UsedRange.Rows.count
     W_ISTBK = W_IST
     W_IST = Me.ListBox11.ListIndex

     For I = W_ISTBK To W_IED
        SW_EF = True
        Me.ListBox11.Selected(I) = False
        SW_EF = False
     Next I

     ActiveWindow.ScrollRow = ActiveSheet.UsedRange.Rows(W_IST + 1).Row + ActiveSheet.UsedRange.Rows(1).Row - 1
     W_IED = Application.Min(ActiveWindow.VisibleRange.Rows(ActiveWindow.VisibleRange.Rows.count).Row, W_CNT) - 1

     For I = W_IST To W_IED
        If ActiveSheet.Rows(I + 1).EntireRow.Hidden = False Then
           SW_EF = True
           Me.ListBox11.Selected(I) = True
           SW_EF = False
        End If
     Next I
     ListBox11.TopIndex = Application.Max(W_IST - 10, 0)
  End If

End Sub

Private Sub ListBox11_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_MU = False
  SW_LC = True
  SW_EF = False

End Sub

Private Sub ListBox11_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_EF = True
  If Me.ListBox11.RowSource <> "" Then
     Me.ListBox11.Selected(Me.ListBox11.ListIndex) = Not Me.ListBox11.Selected(Me.ListBox11.ListIndex)
     Me.ListBox11.Selected(W_IST) = True
     Me.ListBox11.ListIndex = W_IST
  End If
  SW_MU = True

End Sub

Private Sub CheckBox88_Change()
'|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd||5c2||103|I|fffd|t

  Me.CommandButton44.Enabled = Not Me.CheckBox88.Value
  Me.CommandButton14.Enabled = Not Me.CheckBox88.Value
  Me.CommandButton147.Enabled = Not Me.CheckBox88.Value
  
  Me.CommandButton248.Enabled = Not Me.CheckBox88.Value
  Me.CommandButton250.Enabled = Not Me.CheckBox88.Value
  Me.CommandButton252.Enabled = Not Me.CheckBox88.Value
  
  SW_NETALLOFF = Me.CheckBox88.Value
  
End Sub

Private Sub CommandButton37_Click()
'|fffd||fffd||fffd||fffd||fffd||6d1||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page1"
  UserForm5.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton91_Click()
'|fffd|u|fffd||fffd||fffd||6d1||fffd|

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page2"
  UserForm5.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton87_Click()
'|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page1"
  UserForm12.Show

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub TextBox12_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox13_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox14_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox15_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox16_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox17_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub TextBox18_Change()

  Me.Label57.Caption = Me.TextBox12.Value & Me.TextBox13.Value & Me.TextBox14.Value & Me.TextBox15.Value & _
                       Me.TextBox16.Value & Me.TextBox17.Value & Me.TextBox18.Value

End Sub

Private Sub CommandButton83_Click()
'|fffd|^|fffd|u|fffd||fffd||fffd||fffd||fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g

  Call TAB_DEFAULT
  Call TAB_ORDER

End Sub

Private Sub CommandButton99_Click()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Find next"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  ACP.CodeModule.Parent.Activate
   
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     SW_FIND = False
     
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = 1
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     For L = SL2 To EL2
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
        
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
        
        If SW_TEST = True Then
           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
           End If
                      
           For I = 0 To MAXI
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
              End If
              
              If SCNT = 0 And L = SL Then
                 If EC < W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If EC >= W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              Else
                 SW_FIND = True
                 Exit For
              End If
           Next I
        
           Set MATCHES = Nothing
           If SW_FIND = True Then
              Exit For
           End If
        End If
     Next L
  
     If SW_FIND = True Then
        Exit Do
     Else
        If SCNT > 0 And S = SS Then
           Exit Do
        Else
           If Me.CheckBox7.Value = True Then
              S = S + 1
              If S > Application.VBE.VBProjects(V).VBComponents.count Then
                 S = 1
              End If
           End If
           SCNT = SCNT + 1
        End If
     End If
  Loop

  Set NRE = Nothing
  Set RE = Nothing

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If

  If SW_FIND = True Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.Show
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.SetSelection L, W_FI + 1, L, W_FI + 1 + W_LN
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton98_Click()
'|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Find prev"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  ACP.CodeModule.Parent.Activate
  
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     SW_FIND = False
     
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = 1
     End If
     
     For L = SL2 To EL2 Step -1
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
        
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
        
        If SW_TEST = True Then
           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
           End If
           
           For I = MAXI To 0 Step -1
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
              End If
              
              If SCNT = 0 And L = SL Then
                 If SC > W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If SC <= W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              Else
                 SW_FIND = True
                 Exit For
              End If
           Next I
        
           Set MATCHES = Nothing
           If SW_FIND = True Then
              Exit For
           End If
        End If
     Next L
  
     If SW_FIND = True Then
        Exit Do
     Else
        If SCNT > 0 And S = SS Then
           Exit Do
        Else
           If Me.CheckBox7.Value = True Then
              S = S - 1
              If S < 1 Then
                 S = Application.VBE.VBProjects(V).VBComponents.count
              End If
           End If
           SCNT = SCNT + 1
        End If
     End If
  Loop
  
  Set NRE = Nothing
  Set RE = Nothing
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If

  If SW_FIND = True Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.Show
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.SetSelection L, W_FI + 1, L, W_FI + 1 + W_LN
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton100_Click()
'|fffd|S|fffd||10c||fffd||fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Find all"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  ACP.CodeModule.Parent.Activate
  
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  AFN = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = 1
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     For L = SL2 To EL2
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
        
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
        
        If SW_TEST = True Then
           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
           End If
                      
           For I = 0 To MAXI
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
                 W_VL = MATCHES.Item(I).Value
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
                 W_VL = Mid$(W_STR, W_FI + 1, W_LN)
              End If
              
              SW_FIND = False
              If SCNT = 0 And L = SL Then
                 If EC < W_FI + 1 Then
                    SW_FIND = True
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If EC >= W_FI + 1 Then
                    SW_FIND = True
                 End If
              Else
                 SW_FIND = True
              End If
              If SW_FIND = True Then
                 If AFN Mod 10000 = 0 Then
                    ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
                    ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
                    ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
                 End If
     
                 AFN = AFN + 1
                 AR_AFS(AFN) = S
                 AR_AFN(AFN) = L & ":" & W_FI + 1 & ":" & W_FI + 1 + W_LN
                 AR_AFV(AFN) = W_VL
              End If
           Next I
           Set MATCHES = Nothing
        End If
     Next L
  
     If SCNT > 0 And S = SS Then
        Exit Do
     Else
        If Me.CheckBox7.Value = True Then
           S = S + 1
           If S > Application.VBE.VBProjects(V).VBComponents.count Then
              S = 1
           End If
        End If
        SCNT = SCNT + 1
     End If
  Loop

  Set NRE = Nothing
  Set RE = Nothing

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If
  
  If AFN > 0 Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     Call ALL_FIND_V(ACP, V)
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR0:
  On Error GoTo 0
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton102_Click()
'|fffd||fffd||fffd||fffd|u|fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Replace next"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox28.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox28)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox28
        Call MK_DIC
     End If
  End If
  
  ACP.CodeModule.Parent.Activate
  
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     SW_FIND = False
     
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = 1
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     For L = SL2 To EL2
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
         
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
        
        If SW_TEST = True Then
           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
              RE.Global = False
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
              AR_RES = Split(NRRES(NRE, W_STR, Me.ComboBox28.Value), Chr$(1))
              If UBound(AR_RES) = -1 Then
                 ReDim AR_RES(0 To MAXI)
              End If
           End If
                      
           For I = 0 To MAXI
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
                 W_VL = MATCHES.Item(I).Value
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
                 W_VL = Mid$(W_STR, W_FI + 1, W_LN)
                 W_RS = AR_RES(I)
              End If
              
              If SCNT = 0 And L = SL Then
                 If EC < W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If EC >= W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              Else
                 SW_FIND = True
                 Exit For
              End If
           Next I
              
           Set MATCHES = Nothing
           If SW_FIND = True Then
              Exit For
           End If
        End If
     Next L
  
     If SW_FIND = True Then
        Exit Do
     Else
        If SCNT > 0 And S = SS Then
           Exit Do
        Else
           If Me.CheckBox7.Value = True Then
              S = S + 1
              If S > Application.VBE.VBProjects(V).VBComponents.count Then
                 S = 1
              End If
           End If
           SCNT = SCNT + 1
        End If
     End If
  Loop

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If

  If SW_FIND = True Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.Show
     W_STR1 = Left$(W_STR, W_FI)
     W_STR2 = W_VL
     W_STR3 = Right$(W_STR, Len(W_STR) - W_FI - W_LN)
     If SW_NR = False Then
        W_STR2 = RE.Replace(W_STR2 & W_STR3, Me.ComboBox28.Value)
        W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
     Else
        W_STR2 = W_RS
     End If
     W_STR = W_STR1 & W_STR2 & W_STR3
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.ReplaceLine L, W_STR
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.SetSelection L, W_FI + 1, L, W_FI + 1 + Len(W_STR2)
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Set NRE = Nothing
  Set RE = Nothing
  
  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton101_Click()
'|fffd|O|fffd||fffd|u|fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Replace prev"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox28.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox28)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox28
        Call MK_DIC
     End If
  End If
  
  ACP.CodeModule.Parent.Activate
  
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     SW_FIND = False
     
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = 1
     End If
     
     For L = SL2 To EL2 Step -1
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
        
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
        
        If SW_TEST = True Then
           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
              RE.Global = False
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
              AR_RES = Split(NRRES(NRE, W_STR, Me.ComboBox28.Value), Chr$(1))
              If UBound(AR_RES) = -1 Then
                 ReDim AR_RES(0 To MAXI)
              End If
           End If
           
           For I = MAXI To 0 Step -1
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
                 W_VL = MATCHES.Item(I).Value
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
                 W_VL = Mid$(W_STR, W_FI + 1, W_LN)
                 W_RS = AR_RES(I)
              End If
              
              If SCNT = 0 And L = SL Then
                 If SC > W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If SC <= W_FI + 1 Then
                    SW_FIND = True
                    Exit For
                 End If
              Else
                 SW_FIND = True
                 Exit For
              End If
           Next I
        
           Set MATCHES = Nothing
           If SW_FIND = True Then
              Exit For
           End If
        End If
     Next L
  
     If SW_FIND = True Then
        Exit Do
     Else
        If SCNT > 0 And S = SS Then
           Exit Do
        Else
           If Me.CheckBox7.Value = True Then
              S = S - 1
              If S < 1 Then
                 S = Application.VBE.VBProjects(V).VBComponents.count
              End If
           End If
           SCNT = SCNT + 1
        End If
     End If
  Loop
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If

  If SW_FIND = True Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.Show
     W_STR1 = Left$(W_STR, W_FI)
     W_STR2 = W_VL
     W_STR3 = Right$(W_STR, Len(W_STR) - W_FI - W_LN)
     If SW_NR = False Then
        W_STR2 = RE.Replace(W_STR2 & W_STR3, Me.ComboBox28.Value)
        W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
     Else
        W_STR2 = W_RS
     End If
     W_STR = W_STR1 & W_STR2 & W_STR3
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.ReplaceLine L, W_STR
     Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.SetSelection L, W_FI + 1, L, W_FI + 1 + Len(W_STR2)
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Set NRE = Nothing
  Set RE = Nothing

  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton103_Click()
'|fffd|S|fffd||112|u|fffd||fffd|(VBE)

  Dim SL As Long
  Dim SC As Long
  Dim EL As Long
  Dim EC As Long

  Dim L As Long
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim SW_TEST As Boolean
  Dim SW_FIND As Boolean

  Dim RE As Object
  Dim MATCHES As Object

  Dim S As Long
  Dim SS As Long
  Dim SCNT As Long
  Dim SL2 As Long
  Dim EL2 As Long
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  
#If Win64 Then
  Dim hwnd01 As LongPtr
#Else
  Dim hwnd01 As Long
#End If
  
  Dim AR_STR As Variant
  Dim MAXI As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  
  Dim ACP As Object
  Dim V As Long
  
  
  On Error Resume Next
  Set ACP = Application.VBE.ActiveCodePane
  On Error GoTo LABEL_REP
  If ACP Is Nothing Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Find all"

  hwnd01 = FindWindow(vbNullString, UserForm1.Caption)
  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox27.Value = "" Then
     Call COMBO_FOCUS
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox27.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox27)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox27
     Call MK_DIC
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox28.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox28)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox28
        Call MK_DIC
     End If
  End If
  
  ACP.CodeModule.Parent.Activate
  
  SS = 0
  On Error Resume Next
  For V = 1 To Application.VBE.VBProjects.count
     For S = 1 To Application.VBE.VBProjects(V).VBComponents.count
        If Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane Is ACP Then
           SS = S
           Exit For
        End If
     Next S
     If SS > 0 Then
        Exit For
     End If
  Next V
  On Error GoTo LABEL_REP
  
  S = SS
  SCNT = 0
  AFN = 0
  ACP.GetSelection SL, SC, EL, EC
  
  Do
     If SCNT = 0 Then
        SL2 = SL
     Else
        SL2 = 1
     End If
     
     If SCNT > 0 And S = SS Then
        EL2 = SL
     Else
        EL2 = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CountOfLines
     End If
     
     For L = SL2 To EL2
        W_STR = Application.VBE.VBProjects(V).VBComponents(S).CodeModule.Lines(L, 1)
        SW_TEST = False
        If SW_NR = False Then
           SW_TEST = RE.Test(W_STR)
        Else
           SW_TEST = NRTEST(NRE, W_STR)
        End If
           
        If SW_TEST = True Then
           If SW_NR = False Then
              RE.Global = False
              Set MATCHES = RE.Execute(W_STR)
              MAXI = MATCHES.count - 1
           Else
              AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
              MAXI = UBound(AR_STR)
              AR_RES = Split(NRRES(NRE, W_STR, Me.ComboBox28.Value), Chr$(1))
              If UBound(AR_RES) = -1 Then
                 ReDim AR_RES(0 To MAXI)
              End If
           End If
                      
           For I = 0 To MAXI
              If SW_NR = False Then
                 W_FI = MATCHES.Item(I).FirstIndex
                 W_LN = MATCHES.Item(I).Length
                 W_VL = MATCHES.Item(I).Value
              Else
                 AR_WK = Split(AR_STR(I), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LN = CLng(AR_WK(1))
                 W_VL = Mid$(W_STR, W_FI + 1, W_LN)
                 W_RS = AR_RES(I)
              End If
              
              SW_FIND = False
              If SCNT = 0 And L = SL Then
                 If EC < W_FI + 1 Then
                    SW_FIND = True
                 End If
              ElseIf SCNT > 0 And S = SS And L = SL Then
                 If EC >= W_FI + 1 Then
                    SW_FIND = True
                 End If
              Else
                 SW_FIND = True
              End If
              If SW_FIND = True Then
                 AFN = AFN + 1
                 Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.Show
                 W_STR1 = Left$(W_STR, W_FI)
                 W_STR2 = W_VL
                 W_STR3 = Right$(W_STR, Len(W_STR) - W_FI - W_LN)
                 If SW_NR = False Then
                    W_STR2 = RE.Replace(W_STR2 & W_STR3, Me.ComboBox28.Value)
                    W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
                 Else
                    W_STR2 = W_RS
                 End If
                 W_STR = W_STR1 & W_STR2 & W_STR3
                 Application.VBE.VBProjects(V).VBComponents(S).CodeModule.ReplaceLine L, W_STR
                 Application.VBE.VBProjects(V).VBComponents(S).CodeModule.CodePane.SetSelection L, W_FI + 1, L, W_FI + 1 + Len(W_STR2)
              
                 SW_TEST = False
                 If SW_NR = False Then
                    SW_TEST = RE.Test(W_STR)
                 Else
                    SW_TEST = NRTEST(NRE, W_STR)
                 End If
                 If SW_TEST = True Then
                    L = L - 1
                    Exit For
                 End If
              End If
           Next I
           
           Set MATCHES = Nothing
        End If
     Next L
  
     If SCNT > 0 And S = SS Then
        Exit Do
     Else
        If Me.CheckBox7.Value = True Then
           S = S + 1
           If S > Application.VBE.VBProjects(V).VBComponents.count Then
              S = 1
           End If
        End If
        SCNT = SCNT + 1
     End If
  Loop

  Set NRE = Nothing
  Set RE = Nothing

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(17)
  End If
  
  If AFN > 0 Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
  
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed " & AFN & " searches and replacements.", vbInformation)
     Else
        W_RET = MsgBox(AFN & " |fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  Else
     SW_ANM = False
     Call KILLTM_UF2
     
     Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
     
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Search string is not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  
     Call SETTM_UF2
     SW_ANM = True
  End If

  Call COMBO_FOCUS

  AppActivate Application.VBE.MainWindow.Caption
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  SW_ANM = False
  Call KILLTM_UF2
  
  Call SetWindowPos(hwnd01, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
  Call SetWindowPos(hwnd01, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1)  '|fffd||fffd||fffd|
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Call SETTM_UF2
  SW_ANM = True
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton84_Click()
'|fffd|v|fffd||fffd||fffd|r|fffd||fffd||fffd|[
  
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  Dim W_STR As String
  Dim AR_STR As Variant
  Dim R2 As Long
  Dim SW_OUT As Boolean
  Dim SW_SPLT As Boolean
  Dim AR_TBOX As Variant
  
  Dim SW_WK As Boolean
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Preview"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd|b|fffd|N
  If TypeName(ActiveSheet) <> "Worksheet" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target isn't worksheet.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||38f||6c2||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveSheet.ProtectContents = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Sheet is protected.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|I|fffd||fffd||348||343|`|fffd|F|fffd|b|fffd|N
  If InStr(Selection.Address(True, True, xlR1C1), ",") = 0 Then
     Call RANGE_GET(Selection.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
     If W_SC <> W_EC Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Selected range is improper.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|I|fffd||fffd||348||342||fffd||fffd|s|fffd|K|fffd||602||142||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Selected range is improper.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|I|fffd||fffd||348||342||fffd||fffd|s|fffd|K|fffd||602||142||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox24.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox24.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Application.ScreenUpdating = False
  Me.TextBox19.Value = ""
  Me.TextBox20.Value = ""
  Me.TextBox21.Value = ""
  Me.TextBox22.Value = ""
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox24)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox24
     Call MK_DIC
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  SW_SPLT = False
  SW_OUT = False
  W_ER = Application.Min(W_ER, W_SR + 2)
  
  AR_TBOX = Array(Me.TextBox20, Me.TextBox21, Me.TextBox22)
  
  With ActiveSheet
     For R = W_SR To W_ER
        W_STR = .Cells(R, W_SC).Value
        If R > W_SR Then
           Me.TextBox19.Value = Me.TextBox19.Value & vbCrLf
        End If
        Me.TextBox19.Value = Me.TextBox19.Value & W_STR
        
        If SW_NR = False Then
           SW_WK = RE.Test(W_STR)
        Else
           SW_WK = NRTEST(NRE, W_STR)
        End If
        
        If SW_WK = True Then
           SW_SPLT = True
           
           If SW_NR = False Then
              W_STR = RE.Replace(W_STR, Chr$(1))
           Else
              W_STR = NRREP(NRE, W_STR, Chr$(1))
           End If
           
           If Val(Application.Version) >= 9 Then
              AR_STR = SPLIT2000(W_STR, Chr$(1))
           Else
              AR_STR = SPLIT97(W_STR, Chr$(1))
           End If
           If Me.CheckBox68.Value = True Then
              C = W_SC + 1 + R - W_SR
              If C > Columns.count Then
                 SW_OUT = True
                 Exit For
              End If
           End If
           For I = 0 To UBound(AR_STR)
              If Me.CheckBox68.Value = False Then
                 J = I + 1
                 If R > W_SR Then
                    AR_TBOX(J).Value = AR_TBOX(J).Value & vbCrLf
                 End If
              Else
                 J = R - W_SR + 1
                 If I > 0 Then
                    AR_TBOX(J).Value = AR_TBOX(J).Value & vbCrLf
                 End If
              End If
              AR_TBOX(J).Value = AR_TBOX(J).Value & AR_STR(I)
              If I = 2 Then
                 Exit For
              End If
           Next I
        End If
     Next R
  End With

  Set RE = Nothing
  Set NRE = Nothing
  
  Application.ScreenUpdating = True
  If SW_SPLT = False Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(15)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton80_Click()
'|fffd||fffd||fffd||fffd|
  
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  Dim W_STR As String
  Dim AR_STR As Variant
  Dim R2 As Long
  Dim SW_OUT As Boolean
  Dim SW_SPLT As Boolean
  
  Dim SW_WK As Boolean
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Split"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd|b|fffd|N
  If TypeName(ActiveSheet) <> "Worksheet" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target isn't worksheet.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||38f||6c2||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveSheet.ProtectContents = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Sheet is protected.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|I|fffd||fffd||348||343|`|fffd|F|fffd|b|fffd|N
  If InStr(Selection.Address(True, True, xlR1C1), ",") = 0 Then
     Call RANGE_GET(Selection.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
     If W_SC <> W_EC Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Selected range is improper.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|I|fffd||fffd||348||342||fffd||fffd|s|fffd|K|fffd||602||142||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Selected range is improper.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|I|fffd||fffd||348||342||fffd||fffd|s|fffd|K|fffd||602||142||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox24.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox24.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox24)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox24
     Call MK_DIC
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  SW_SPLT = False
  SW_OUT = False
  With ActiveSheet
     For R = W_SR To W_ER
        W_STR = .Cells(R, W_SC).Value
        
        If SW_NR = False Then
           SW_WK = RE.Test(W_STR)
        Else
           SW_WK = NRTEST(NRE, W_STR)
        End If
        
        If SW_WK = True Then
           SW_SPLT = True
           
           If SW_NR = False Then
              W_STR = RE.Replace(W_STR, Chr$(1))
           Else
              W_STR = NRREP(NRE, W_STR, Chr$(1))
           End If
           
           If Val(Application.Version) >= 9 Then
              AR_STR = SPLIT2000(W_STR, Chr$(1))
           Else
              AR_STR = SPLIT97(W_STR, Chr$(1))
           End If
           If Me.CheckBox68.Value = True Then
              C = W_SC + 1 + R - W_SR
              If C > Columns.count Then
                 SW_OUT = True
                 Exit For
              End If
           End If
           For I = 0 To UBound(AR_STR)
              If Me.CheckBox68.Value = False Then
                 C = W_SC + 1 + I
                 If C > Columns.count Then
                    SW_OUT = True
                    Exit For
                 End If
                .Cells(R, C).Value = AR_STR(I)
              Else
                 R2 = W_SR + I
                 If R2 > Rows.count Then
                    SW_OUT = True
                    Exit For
                 End If
                .Cells(R2, C).Value = AR_STR(I)
              End If
           Next I
        End If
     Next R
  End With

  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True
  If SW_SPLT = False Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If SW_OUT = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed split." & vbCrLf & _
                          "Items that couldn't be split exist because out of worksheet range.", vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||314||348||34a|O|fffd||302||fffd||fffd||7d5||fffd||fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd| ", vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed split.", vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(15)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton118_Click()
'|fffd|t|fffd|B|fffd||fffd|
  
  Dim W_FNDSTR As String
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim L As Long
  Dim MATCHES As Object
  Dim W_STR As String
  Dim W_N As Long
  Dim AR_IDX() As Long
  Dim AR_STR() As String
  Dim SW_LAST As Boolean
  Dim SW_OUT As Boolean
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Fill"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|`|fffd|F|fffd|b|fffd|N
  If TypeName(ActiveSheet) <> "Worksheet" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target isn't worksheet.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||38f||6c2||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveSheet.ProtectContents = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Sheet is protected.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox29.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  W_FNDSTR = Me.ComboBox29.Value
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\\", Chr$(1))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\[", Chr$(4))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\]", Chr$(5))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\{", Chr$(6))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\}", Chr$(7))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\.", Chr$(14))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\*", Chr$(15))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\+", Chr$(16))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\?", Chr$(17))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\^", Chr$(28))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\$", Chr$(29))
  W_FNDSTR = Replace(W_FNDSTR, "\d", "[0-9]", , , vbBinaryCompare)
  
  If InStr(W_FNDSTR, "*") > 0 Or _
     InStr(W_FNDSTR, "+") > 0 Or _
     InStr(W_FNDSTR, "?") > 0 Or _
     InStr(W_FNDSTR, ".") > 0 Or _
     InStr(W_FNDSTR, "|") > 0 Or _
     InStr(W_FNDSTR, "\") > 0 Or _
     InStr(W_FNDSTR, "^") > 0 Or _
     InStr(W_FNDSTR, "$") > 0 Or _
     InStr(W_FNDSTR, "(") > 0 Or _
     InStr(W_FNDSTR, ")") > 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Error exists in generate pattern. Check.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "\{(.*?)\}"
     .IgnoreCase = False
     .Global = True
  End With
    
  Set MATCHES = RE.Execute(W_FNDSTR)
  For I = 0 To MATCHES.count - 1
     If MATCHES.Item(I).Submatches(0) = "" Or _
        IsNumeric(MATCHES.Item(I).Submatches(0)) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Error exists in generate pattern. Check.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Set MATCHES = Nothing
        Set RE = Nothing
        W_CLKBTN = ""
        Exit Sub
     End If
  Next I
  Set MATCHES = Nothing
  
  RE.Pattern = "\[\^.+?\]"
  If RE.Test(W_FNDSTR) = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Error exists in generate pattern. Check.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Set RE = Nothing
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set RE = Nothing
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = Me.ComboBox29.Value        '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = False                   '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  On Error GoTo LABEL_ERR
  RE.Test (" ")
  On Error GoTo 0
  Set RE = Nothing
  
  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox29)
     
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox29
     Call MK_DIC
  End If
  
  Erase AR_IDX
  Erase AR_STR
  K = 0
  SW_LAST = True
  
  For I = 1 To Len(W_FNDSTR)
     If Mid$(W_FNDSTR, I, 1) = "[" Then
        J = InStr(I + 1, W_FNDSTR, "]")
        W_STR = Mid$(W_FNDSTR, I + 1, J - I - 1)
        K = K + 1
        ReDim Preserve AR_IDX(K)
        ReDim Preserve AR_STR(K)
        AR_STR(K) = CLSCNV(W_STR)
        If Me.OptionButton26.Value = True Then
           AR_IDX(K) = 1
        Else
           AR_IDX(K) = Len(AR_STR(K))
        End If
        SW_LAST = False
        I = J
     ElseIf Mid$(W_FNDSTR, I, 1) = "{" Then
        J = InStr(I + 1, W_FNDSTR, "}")
        W_N = CLng(Mid$(W_FNDSTR, I + 1, J - I - 1))
        For L = 2 To W_N
           K = K + 1
           ReDim Preserve AR_IDX(K)
           ReDim Preserve AR_STR(K)
           AR_STR(K) = AR_STR(K - 1)
           AR_IDX(K) = AR_IDX(K - 1)
        Next L
        I = J
     Else
        K = K + 1
        ReDim Preserve AR_IDX(K)
        ReDim Preserve AR_STR(K)
        AR_STR(K) = Mid$(W_FNDSTR, I, 1)
     End If
  Next I
  
  R = ActiveCell.Row
  C = ActiveCell.Column
  SW_OUT = False
  
  Do
     W_STR = ""
     For K = 1 To UBound(AR_STR)
        If Len(AR_STR(K)) > 1 Then
           W_STR = W_STR & Mid$(AR_STR(K), AR_IDX(K), 1)
        Else
           W_STR = W_STR & AR_STR(K)
        End If
     Next K
     
     W_STR = Application.Substitute(W_STR, Chr$(1), "\")
     W_STR = Application.Substitute(W_STR, Chr$(2), "(")
     W_STR = Application.Substitute(W_STR, Chr$(3), ")")
     W_STR = Application.Substitute(W_STR, Chr$(4), "[")
     W_STR = Application.Substitute(W_STR, Chr$(5), "]")
     W_STR = Application.Substitute(W_STR, Chr$(6), "{")
     W_STR = Application.Substitute(W_STR, Chr$(7), "}")
     W_STR = Application.Substitute(W_STR, Chr$(14), ".")
     W_STR = Application.Substitute(W_STR, Chr$(15), "*")
     W_STR = Application.Substitute(W_STR, Chr$(16), "+")
     W_STR = Application.Substitute(W_STR, Chr$(17), "?")
     W_STR = Application.Substitute(W_STR, Chr$(18), "|")
     W_STR = Application.Substitute(W_STR, Chr$(28), "^")
     W_STR = Application.Substitute(W_STR, Chr$(29), "$")
     
     Cells(R, C).Value = W_STR
     
     If SW_LAST = True Then
        Exit Do
     End If
     
     If Me.OptionButton22.Value = True Then
        R = R + 1
        If R > Rows.count Then
           SW_OUT = True
           Exit Do
        End If
     ElseIf Me.OptionButton23.Value = True Then
        C = C + 1
        If C > Columns.count Then
           SW_OUT = True
           Exit Do
        End If
     ElseIf Me.OptionButton24.Value = True Then
        R = R - 1
        If R < 1 Then
           SW_OUT = True
           Exit Do
        End If
     Else
        C = C - 1
        If C < 1 Then
           SW_OUT = True
           Exit Do
        End If
     End If
     
     For K = UBound(AR_STR) To 1 Step -1
        If Len(AR_STR(K)) > 1 Then
           If Me.OptionButton26.Value = True Then
              AR_IDX(K) = AR_IDX(K) + 1
              If AR_IDX(K) > Len(AR_STR(K)) Then
                 AR_IDX(K) = 1
              Else
                 Exit For
              End If
           Else
              AR_IDX(K) = AR_IDX(K) - 1
              If AR_IDX(K) < 1 Then
                 AR_IDX(K) = Len(AR_STR(K))
              Else
                 Exit For
              End If
           End If
        End If
     Next K
  
     SW_LAST = True
     For K = 1 To UBound(AR_STR)
        If Len(AR_STR(K)) > 1 Then
           If Me.OptionButton26.Value = True Then
              If AR_IDX(K) = Len(AR_STR(K)) Then
              Else
                 SW_LAST = False
                 Exit For
              End If
           Else
              If AR_IDX(K) = 1 Then
              Else
                 SW_LAST = False
                 Exit For
              End If
           End If
        End If
     Next K
  Loop
  
  Application.ScreenUpdating = True
     
  If Me.CheckBox41.Value = False And _
     Me.CheckBox88.Value = False Then
     Call HISTORY_RTN
  End If
  If SW_OUT = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed fill." & vbCrLf & _
                       "Items that couldn't be filled exist because out of worksheet range.", vbInformation)
     Else
        W_RET = MsgBox("|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||314||348||34a|O|fffd||302||fffd||fffd||7c3|t|fffd|B|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||682||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd| ", vbInformation)
     End If
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed fill.", vbInformation)
     Else
        W_RET = MsgBox("|fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(18)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in generate pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton74_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|
  
  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox23.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox23.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox23.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton266_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox23.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox23.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox23.Value = Left$(Me.ComboBox23.Value, I)
        If Right$(Me.ComboBox23.Value, 1) = ":" Then
           Me.ComboBox23.Value = Me.ComboBox23.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox23.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub CommandButton76_Click()
'|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Find"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox22.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox22.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox23.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        Me.ComboBox23.SetFocus
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox23.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           Me.ComboBox23.SetFocus
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  Application.ScreenUpdating = False
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_DIRCOMBO(Me.ComboBox23)
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox22)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox22
     Call MK_DIC
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Workbooks.Add
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
  
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox22.Value
     If Me.CheckBox49.Value = True Then
        .Cells(2, 2).Value = "Target folder"
     Else
        .Cells(2, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
     End If
     .Cells(2, 3).Value = Me.ComboBox23.Value
     .Columns(2).AutoFit
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "Path"
        .Cells(5, 3).Value = "File"
     Else
        .Cells(5, 2).Value = "|fffd|p|fffd|X"
        .Cells(5, 3).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
     End If
     .Range(.Cells(5, 1), .Cells(5, 3)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 3)).Interior.ColorIndex = 6
  End With
  FR = 5
  Call RENAME(Me.ComboBox23.Value, 0)

  Set NRE = Nothing
  Set RE = Nothing
  
  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(2, 3)).Value
      .Range(.Cells(1, 3), .Cells(2, 3)).ClearContents
      .Columns(1).AutoFit
      .Columns(3).AutoFit
      .Range(.Cells(1, 3), .Cells(2, 3)).Value = W_COLB
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If

  Application.ScreenUpdating = True
  
  If FR = 5 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search.", vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(14)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton75_Click()
'|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd|u|fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox22.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox22.Value)
  
  '|fffd|u|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_REPSTRCNV = REPSTRCNV(Me.ComboBox21.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox23.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        Me.ComboBox23.SetFocus
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox23.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           Me.ComboBox23.SetFocus
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  If Me.CheckBox49.Value = True Then
     If MsgBox("Will do rename.", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If MsgBox("|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  Application.ScreenUpdating = False
  
  Me.CommandButton77.Enabled = False
  Erase AR_RENP
  Erase AR_RENF
                       
  W_CNTRA = 0
  W_CNTRA2 = 0
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_DIRCOMBO(Me.ComboBox23)
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox22)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox22
     Call MK_DIC
  End If

  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox21.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox21)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox21
        Call MK_DIC
     End If
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Workbooks.Add
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
  
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Replace with"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox22.Value
     .Cells(2, 3).Value = "'" & Me.ComboBox21.Value
     If Me.CheckBox49.Value = True Then
        .Cells(3, 2).Value = "Target folder"
     Else
        .Cells(3, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
     End If
     .Cells(3, 3).Value = Me.ComboBox23.Value
     .Columns(2).AutoFit
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "Path"
        .Cells(5, 3).Value = "File(Before)"
        .Cells(5, 4).Value = "File(After)"
     Else
        .Cells(5, 2).Value = "|fffd|p|fffd|X"
        .Cells(5, 3).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|(|fffd|O)"
        .Cells(5, 4).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|(|fffd||fffd|)"
     End If
     .Range(.Cells(5, 1), .Cells(5, 4)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 4)).Interior.ColorIndex = 6
  End With
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  Call RENAME(Me.ComboBox23.Value, 1)

  Set NRE = Nothing
  Set RE = Nothing
  
  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
      .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
      .Columns(1).AutoFit
      .Columns(3).AutoFit
      .Columns(4).AutoFit
      .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If

  Application.ScreenUpdating = True
  If FR = 5 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If W_CNTRA2 > 0 Then
        Me.CommandButton77.Enabled = True
     End If
     If W_CNTRA = W_CNTRA2 Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed rename.", vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed rename." & vbCrLf & _
                          "Files that can't be renamed exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|", vbExclamation)
        End If
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(14)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton290_Click()
'|fffd||fffd||fffd|l|fffd|[|fffd||fffd||fffd||d3dc|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox22.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox22.Value)
  
  '|fffd|u|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_REPSTRCNV = REPSTRCNV(Me.ComboBox21.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox23.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     Me.ComboBox23.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox23.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        Me.ComboBox23.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  If Me.CheckBox49.Value = True Then
     If MsgBox("Will do delete.", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If MsgBox("|fffd||d3dc||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  Application.ScreenUpdating = False
  
  Me.CommandButton77.Enabled = False
  Erase AR_RENP
  Erase AR_RENF
                       
  W_CNTRA = 0
  W_CNTRA2 = 0
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_DIRCOMBO(Me.ComboBox23)
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox22)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox22
     Call MK_DIC
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Workbooks.Add
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
  
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Replace with"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox22.Value
     .Cells(2, 3).Value = "'" & Me.ComboBox21.Value
     If Me.CheckBox49.Value = True Then
        .Cells(3, 2).Value = "Target folder"
     Else
        .Cells(3, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
     End If
     .Cells(3, 3).Value = Me.ComboBox23.Value
     .Columns(2).AutoFit
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "Path"
        .Cells(5, 3).Value = "File(Before)"
        .Cells(5, 4).Value = "File(After)"
     Else
        .Cells(5, 2).Value = "|fffd|p|fffd|X"
        .Cells(5, 3).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|(|fffd|O)"
        .Cells(5, 4).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|(|fffd||fffd|)"
     End If
     .Range(.Cells(5, 1), .Cells(5, 4)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 4)).Interior.ColorIndex = 6
  End With
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  Call RENAME(Me.ComboBox23.Value, 2)

  Set NRE = Nothing
  Set RE = Nothing
  
  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
      .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
      .Columns(1).AutoFit
      .Columns(3).AutoFit
      .Columns(4).AutoFit
      .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If

  Application.ScreenUpdating = True
  If FR = 5 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If W_CNTRA = W_CNTRA2 Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed delete.", vbInformation)
        Else
           W_RET = MsgBox("|fffd||d3dc||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed delete." & vbCrLf & _
                          "Files that can't be delete exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||d3dc||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||d3dc||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|", vbExclamation)
        End If
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(14)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton77_Click()
'|fffd||fffd||fffd||256||7c2||fffd|
  
  Dim I As Long
  Dim FSO As Object

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Undo"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Application.ScreenUpdating = False
  
  W_CNTRA = UBound(AR_RENP)
  W_CNTRA2 = 0

  For I = 1 To UBound(AR_RENP)
     On Error Resume Next
     Set FSO = CreateObject("Scripting.FileSystemObject")
     FSO.GetFile(AR_RENP(I)).Name = AR_RENF(I)
     Set FSO = Nothing
     If Err.Number = 0 Then
        W_CNTRA2 = W_CNTRA2 + 1
     Else
        Err.Clear
     End If
     On Error GoTo LABEL_REP
  Next I
  
  Erase AR_RENP
  Erase AR_RENF
  UserForm1.CommandButton77.Enabled = False
  
  Application.ScreenUpdating = True
  
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox(W_CNTRA2 & " of " & W_CNTRA & " item(s) were undone.", vbInformation)
  Else
     W_RET = MsgBox(W_CNTRA & " |fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton90_Click()
'|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim AB As String
  Dim SW_FIND As Boolean
  Dim W_TEST As String
  Dim N As Name


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Find"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox26.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox26.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox26)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox26
     Call MK_DIC
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  AB = ActiveWorkbook.Name
  
  Workbooks.Add
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Scope"
        .Cells(3, 2).Value = "Target"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd||348||fffd|"
        .Cells(3, 2).Value = "|fffd||38f||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox26.Value
     If Me.OptionButton17.Value = True Then
        .Cells(2, 3).Value = Me.OptionButton17.Caption
     ElseIf Me.OptionButton18.Value = True Then
        .Cells(2, 3).Value = Me.OptionButton18.Caption
     Else
        .Cells(2, 3).Value = Me.OptionButton19.Caption
     End If
     If Me.OptionButton20.Value = True Then
        .Cells(3, 3).Value = Me.OptionButton20.Caption
     Else
        .Cells(3, 3).Value = Me.OptionButton21.Caption
     End If
     .Columns(2).AutoFit
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "Hidden"
        .Cells(5, 3).Value = "Name"
        .Cells(5, 4).Value = "Refers to"
     Else
        .Cells(5, 2).Value = "|fffd||fffd|\|fffd||fffd|"
        .Cells(5, 3).Value = "|fffd||fffd||fffd|O"
        .Cells(5, 4).Value = "|fffd|Q|fffd||194||348||fffd|"
     End If
     .Range(.Cells(5, 1), .Cells(5, 4)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 4)).Interior.ColorIndex = 6
  End With
  FR = 5
  
  For Each N In Workbooks(AB).Names
     SW_FIND = True
     If Me.OptionButton17.Value = True Then
     ElseIf Me.OptionButton18.Value = True Then
        If InStr(N.Name, "!") > 0 Then
           SW_FIND = False
        End If
     ElseIf Me.OptionButton19.Value = True Then
        If InStr(N.Name, "!") > 0 Then
           If Left$(N.Name, InStr(N.Name, "!") - 1) <> Workbooks(AB).ActiveSheet.Name Then
              SW_FIND = False
           End If
        Else
           SW_FIND = False
        End If
     End If
  
     If SW_FIND = True Then
        If Me.CheckBox84.Value = False Then
           If N.Visible = False Then
              SW_FIND = False
           End If
        End If
     End If
  
     If SW_FIND = True Then
        If Me.OptionButton20.Value = True Then
           W_TEST = N.Name
        Else
           W_TEST = N.RefersTo
        End If
        
        If SW_NR = False Then
           SW_FIND = RE.Test(W_TEST)
        Else
           SW_FIND = NRTEST(NRE, W_TEST)
        End If
     End If
  
     If SW_FIND = True Then
        FR = FR + 1
        With Workbooks(W_FRB).Worksheets(1)
           .Cells(FR, 1).Value = FR - 5
           If N.Visible = False Then
              .Cells(FR, 2).Value = "1"
           End If
           .Cells(FR, 3).Value = N.Name
           .Cells(FR, 4).Value = "'" & N.RefersTo
           .Range(.Cells(FR, 1), .Cells(FR, 4)).Borders.LineStyle = True
        End With
     End If
  Next
  
  Set NRE = Nothing
  Set RE = Nothing
  
  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
      .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
      .Columns(1).AutoFit
      .Columns(3).AutoFit
      .Columns(4).AutoFit
      .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
  End With

  Application.ScreenUpdating = True
  If FR = 5 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search.", vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(16)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton89_Click()
'|fffd||fffd||fffd|O|fffd|u|fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim AB As String
  Dim SW_FIND As Boolean
  Dim SW_ERR As Boolean
  Dim W_TEST As String
  Dim W_TESTA As String
  Dim N As Name


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox26.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox26.Value)
  
  '|fffd|u|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_REPSTRCNV = REPSTRCNV(Me.ComboBox25.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR1
     End If
  End If

  If Me.ComboBox25.Value = "" Then
     If Me.CheckBox49.Value = True Then
        If MsgBox("Will do delete.", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     Else
        If MsgBox("|fffd||d3dc||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  Else
     If Me.CheckBox49.Value = True Then
        If MsgBox("Will do replace.", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     Else
        If MsgBox("|fffd|u|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox26)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox26
     Call MK_DIC
  End If

  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox25.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox25)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox25
        Call MK_DIC
     End If
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  AB = ActiveWorkbook.Name
  
  Workbooks.Add
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Replace with"
        .Cells(3, 2).Value = "Scope"
        .Cells(4, 2).Value = "Target"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(3, 2).Value = "|fffd||348||fffd|"
        .Cells(4, 2).Value = "|fffd||38f||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox26.Value
     .Cells(2, 3).Value = "'" & Me.ComboBox25.Value
     If Me.OptionButton17.Value = True Then
        .Cells(3, 3).Value = Me.OptionButton17.Caption
     ElseIf Me.OptionButton18.Value = True Then
        .Cells(3, 3).Value = Me.OptionButton18.Caption
     Else
        .Cells(3, 3).Value = Me.OptionButton19.Caption
     End If
     If Me.OptionButton20.Value = True Then
        .Cells(4, 3).Value = Me.OptionButton20.Caption
     Else
        .Cells(4, 3).Value = Me.OptionButton21.Caption
     End If
     .Columns(2).AutoFit
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "Hidden"
        .Cells(5, 3).Value = "Name"
        .Cells(5, 4).Value = "Refers to"
        .Cells(5, 5).Value = "After"
     Else
        .Cells(5, 2).Value = "|fffd||fffd|\|fffd||fffd|"
        .Cells(5, 3).Value = "|fffd||fffd||fffd|O"
        .Cells(5, 4).Value = "|fffd|Q|fffd||194||348||fffd|"
        .Cells(5, 5).Value = "|fffd|u|fffd||fffd||fffd||fffd|"
     End If
     .Range(.Cells(5, 1), .Cells(5, 5)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 5)).Interior.ColorIndex = 6
  End With
  FR = 5
  SW_ERR = False
  
  For Each N In Workbooks(AB).Names
     SW_FIND = True
     If Me.OptionButton17.Value = True Then
     ElseIf Me.OptionButton18.Value = True Then
        If InStr(N.Name, "!") > 0 Then
           SW_FIND = False
        End If
     ElseIf Me.OptionButton19.Value = True Then
        If InStr(N.Name, "!") > 0 Then
           If Left$(N.Name, InStr(N.Name, "!") - 1) <> Workbooks(AB).ActiveSheet.Name Then
              SW_FIND = False
           End If
        Else
           SW_FIND = False
        End If
     End If
  
     If SW_FIND = True Then
        If Me.CheckBox84.Value = False Then
           If N.Visible = False Then
              SW_FIND = False
           End If
        End If
     End If
  
     If SW_FIND = True Then
        If Me.OptionButton20.Value = True Then
           W_TEST = N.Name
        Else
           W_TEST = N.RefersTo
        End If
        
        If SW_NR = False Then
           SW_FIND = RE.Test(W_TEST)
        Else
           SW_FIND = NRTEST(NRE, W_TEST)
        End If
     End If
  
     If SW_FIND = True Then
        FR = FR + 1
        With Workbooks(W_FRB).Worksheets(1)
           .Cells(FR, 1).Value = FR - 5
           If N.Visible = False Then
              .Cells(FR, 2).Value = "1"
           End If
           .Cells(FR, 3).Value = N.Name
           .Cells(FR, 4).Value = "'" & N.RefersTo
           .Range(.Cells(FR, 1), .Cells(FR, 5)).Borders.LineStyle = True
        End With
     
        If Me.ComboBox21.Value = "" Then
           On Error GoTo LABEL_ERR2
           N.Delete
           On Error GoTo LABEL_REP
        Else
           W_TESTA = W_TEST
           
           If SW_NR = False Then
              W_TESTA = RE.Replace(W_TESTA, W_REPSTRCNV)
           Else
              W_TESTA = NRREP(NRE, W_TESTA, W_REPSTRCNV)
           End If
              
           If Me.OptionButton20.Value = True Then
              If InStr(W_TESTA, "!") > 0 Then
                 W_TESTA = Right$(W_TESTA, Len(W_TESTA) - InStr(W_TESTA, "!"))
              End If
              On Error GoTo LABEL_ERR2
              N.Name = W_TESTA
              On Error GoTo LABEL_REP
           Else
              On Error GoTo LABEL_ERR2
              N.RefersTo = W_TESTA
              On Error GoTo LABEL_REP
           End If
           If Me.OptionButton20.Value = True Then
              Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = "'" & N.Name
           Else
              Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = "'" & N.RefersTo
           End If
        End If
     End If
  Next
  
  Set NRE = Nothing
  Set RE = Nothing
  
  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(4, 3)).Value
      .Range(.Cells(1, 3), .Cells(4, 3)).ClearContents
      .Columns(1).AutoFit
      .Columns(3).AutoFit
      .Columns(4).AutoFit
      .Columns(5).AutoFit
      .Range(.Cells(1, 3), .Cells(4, 3)).Value = W_COLB
  End With

  Application.ScreenUpdating = True
  If FR = 5 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If Me.ComboBox25.Value = "" Then
        If SW_ERR = False Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Has completed delete.", vbInformation)
           Else
              W_RET = MsgBox("|fffd||d3dc||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
           End If
        Else
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Has completed delete." & vbCrLf & _
                             "Names that can't be delete exist.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd||d3dc||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||d3dc||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|", vbExclamation)
           End If
        End If
     Else
        If SW_ERR = False Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Has completed replace.", vbInformation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
           End If
        Else
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Has completed replace." & vbCrLf & _
                             "Names that can't be renamed exist.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|", vbExclamation)
           End If
        End If
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(16)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR1:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR2:
  Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Interior.ColorIndex = 3
  SW_ERR = True
  Resume Next
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton50_Click()
'|fffd||fffd||fffd||fffd|
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page11"
  UserForm7.Show
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton48_Click()
'|fffd||fffd||fffd||fffd|

  Dim W_E1S As Long
  Dim W_E1L As Long
  Dim W_E2S As Long
  Dim W_E2L As Long
  Dim W_E3S As Long
  Dim W_E3L As Long
  Dim W_EWS As Long
  Dim W_EWL As Long

  Dim W_FSTR1 As String
  Dim W_FSTR2 As String
  Dim W_FSTR3 As String
  Dim W_FSTR4 As String
  Dim W_FSTR5 As String
  Dim W_FSTR6 As String
  Dim W_FSTR7 As String
  
  Dim W_RSTR1 As String
  Dim W_RSTR2 As String
  Dim W_RSTR3 As String
  
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Make"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  W_E1S = 0
  W_E1L = 0
  W_E2S = 0
  W_E2L = 0
  W_E3S = 0
  W_E3L = 0
  
  '|fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.TextBox11.Value = "" Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Object string is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||38f||6d5||fffd||fffd||fffd||fffd||42a96||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox11.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  If Me.TextBox13.Value = "" And Me.TextBox15.Value = "" And Me.TextBox17.Value = "" Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("All extract string is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||42a91|S|fffd||116||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox13.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If Me.TextBox13.Value <> "" Then
     If InStr(Me.TextBox11.Value, Me.TextBox13.Value) > 0 Then
        W_E1S = InStr(Me.TextBox11.Value, Me.TextBox13.Value)
        W_E1L = Len(Me.TextBox13.Value)
     Else
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Ext1 isn't included in object string.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|o1|fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||24a||702||702||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox13.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If Me.TextBox15.Value <> "" Then
     If InStr(Me.TextBox11.Value, Me.TextBox15.Value) > 0 Then
        W_E2S = InStr(Me.TextBox11.Value, Me.TextBox15.Value)
        W_E2L = Len(Me.TextBox15.Value)
     Else
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Ext2 isn't included in object string.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|o2|fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||24a||702||702||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox15.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If Me.TextBox17.Value <> "" Then
     If InStr(Me.TextBox11.Value, Me.TextBox17.Value) > 0 Then
        W_E3S = InStr(Me.TextBox11.Value, Me.TextBox17.Value)
        W_E3L = Len(Me.TextBox17.Value)
     Else
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Ext3 isn't included in object string.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|o3|fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||24a||702||702||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox17.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  '|fffd||fffd||fffd|o|fffd|\|fffd|[|fffd|g
  If Me.TextBox13.Value <> "" And Me.TextBox15.Value <> "" And Me.TextBox17.Value <> "" Then
     If W_E1S > W_E2S Then
        W_EWS = W_E2S
        W_EWL = W_E2L
        W_E2S = W_E1S
        W_E2L = W_E1L
        W_E1S = W_EWS
        W_E1L = W_EWL
        If W_E1S > W_E3S Then
           W_EWS = W_E3S
           W_EWL = W_E3L
           W_E3S = W_E2S
           W_E3L = W_E2L
           W_E2S = W_E1S
           W_E2L = W_E1L
           W_E1S = W_EWS
           W_E1L = W_EWL
        End If
     End If
     If W_E2S > W_E3S Then
        W_EWS = W_E3S
        W_EWL = W_E3L
        W_E3S = W_E2S
        W_E3L = W_E2L
        W_E2S = W_EWS
        W_E2L = W_EWL
        If W_E1S > W_E2S Then
           W_EWS = W_E2S
           W_EWL = W_E2L
           W_E2S = W_E1S
           W_E2L = W_E1L
           W_E1S = W_EWS
           W_E1L = W_EWL
        End If
     End If
  ElseIf Me.TextBox13.Value <> "" And Me.TextBox15.Value <> "" Then
     If W_E1S > W_E2S Then
        W_EWS = W_E2S
        W_EWL = W_E2L
        W_E2S = W_E1S
        W_E2L = W_E1L
        W_E1S = W_EWS
        W_E1L = W_EWL
     End If
  ElseIf Me.TextBox15.Value <> "" And Me.TextBox17.Value <> "" Then
     If W_E2S > W_E3S Then
        W_E1S = W_E3S
        W_E1L = W_E3L
        W_E2S = W_E1S
        W_E2L = W_E1L
        W_E3S = 0
        W_E3L = 0
     Else
        W_E1S = W_E2S
        W_E1L = W_E2L
        W_E2S = W_E3S
        W_E2L = W_E3L
        W_E3S = 0
        W_E3L = 0
     End If
  ElseIf Me.TextBox13.Value <> "" And Me.TextBox17.Value <> "" Then
     If W_E1S > W_E3S Then
        W_E2S = W_E1S
        W_E2L = W_E1L
        W_E1S = W_E3S
        W_E1L = W_E3L
        W_E3S = 0
        W_E3L = 0
     Else
        W_E2S = W_E3S
        W_E2L = W_E3L
        W_E3S = 0
        W_E3L = 0
     End If
  ElseIf Me.TextBox13.Value <> "" Then
  ElseIf Me.TextBox15.Value <> "" Then
     W_E1S = W_E2S
     W_E1L = W_E2L
     W_E2S = 0
     W_E2L = 0
  ElseIf Me.TextBox17.Value <> "" Then
     W_E1S = W_E3S
     W_E1L = W_E3L
     W_E3S = 0
     W_E3L = 0
  End If

  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d90||fffd|
  W_FSTR1 = ""
  If W_E1S > 1 Then
     If W_E1S = 2 Then
        W_FSTR1 = "."
     Else
        W_FSTR1 = ".{" & W_E1S - 1 & "}"
     End If
  End If
  
  If W_E1L = 1 Then
     W_FSTR2 = "(.)"
  Else
     W_FSTR2 = "(.{" & W_E1L & "})"
  End If
  
  W_FSTR3 = ""
  W_FSTR4 = ""
  If W_E2S > W_E1S Then
     If W_E2S > W_E1S + W_E1L Then
        If W_E2S - (W_E1S + W_E1L) = 1 Then
           W_FSTR3 = "."
        Else
           W_FSTR3 = ".{" & W_E2S - (W_E1S + W_E1L) & "}"
        End If
     End If
     If W_E2L = 1 Then
        W_FSTR4 = "(.)"
     Else
        W_FSTR4 = "(.{" & W_E2L & "})"
     End If
  Else
     If W_E2S = 0 Then
        If W_E1S + W_E1L - 1 < Len(Me.TextBox11.Value) Then
           If Len(Me.TextBox11.Value) = W_E1S + W_E1L Then
              W_FSTR3 = "."
           Else
              W_FSTR3 = ".{" & Len(Me.TextBox11.Value) - (W_E1S + W_E1L - 1) & "}"
           End If
        End If
     End If
  End If
  
  W_FSTR5 = ""
  W_FSTR6 = ""
  If W_E3S > W_E2S Then
     If W_E3S > W_E2S + W_E2L Then
        If W_E3S - (W_E2S + W_E2L) = 1 Then
           W_FSTR5 = "."
        Else
           W_FSTR5 = ".{" & W_E3S - (W_E2S + W_E2L) & "}"
        End If
     End If
     If W_E3L = 1 Then
        W_FSTR6 = "(.)"
     Else
        W_FSTR6 = "(.{" & W_E3L & "})"
     End If
  Else
     If W_E2S <> 0 Then
        If W_E3S = 0 Then
           If W_E2S + W_E2L - 1 < Len(Me.TextBox11.Value) Then
              If Len(Me.TextBox11.Value) = W_E2S + W_E2L Then
                 W_FSTR5 = "."
              Else
                 W_FSTR5 = ".{" & Len(Me.TextBox11.Value) - (W_E2S + W_E2L - 1) & "}"
              End If
           End If
        End If
     End If
  End If
  
  W_FSTR7 = ""
  If W_E2S <> 0 And W_E3S <> 0 Then
     If W_E3S + W_E3L - 1 < Len(Me.TextBox11.Value) Then
        If Len(Me.TextBox11.Value) = W_E3S + W_E3L Then
           W_FSTR7 = "."
        Else
           W_FSTR7 = ".{" & Len(Me.TextBox11.Value) - (W_E3S + W_E3L - 1) & "}"
        End If
     End If
  End If
  
  Me.Label53.Caption = "^" & W_FSTR1 & W_FSTR2 & W_FSTR3 & W_FSTR4 & W_FSTR5 & W_FSTR6 & W_FSTR7 & "$"

  '|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d90||fffd|
  W_STR1 = ""
  W_STR2 = ""
  W_STR3 = ""
  If W_E1S > 0 Then
     W_STR1 = Mid$(Me.TextBox11.Value, W_E1S, W_E1L)
  End If
  If W_E2S > 0 Then
     W_STR2 = Mid$(Me.TextBox11.Value, W_E2S, W_E2L)
  End If
  If W_E3S > 0 Then
     W_STR3 = Mid$(Me.TextBox11.Value, W_E3S, W_E3L)
  End If
  
  W_RSTR1 = ""
  If Me.TextBox13.Value <> "" Then
     If Me.TextBox13.Value = W_STR1 Then
        W_RSTR1 = "$1"
     ElseIf Me.TextBox13.Value = W_STR2 Then
        W_RSTR1 = "$2"
     ElseIf Me.TextBox13.Value = W_STR3 Then
        W_RSTR1 = "$3"
     End If
  End If
     
  W_RSTR2 = ""
  If Me.TextBox15.Value <> "" Then
     If Me.TextBox15.Value = W_STR1 Then
        W_RSTR2 = "$1"
     ElseIf Me.TextBox15.Value = W_STR2 Then
        W_RSTR2 = "$2"
     ElseIf Me.TextBox15.Value = W_STR3 Then
        W_RSTR2 = "$3"
     End If
  End If
     
  W_RSTR3 = ""
  If Me.TextBox17.Value <> "" Then
     If Me.TextBox17.Value = W_STR1 Then
        W_RSTR3 = "$1"
     ElseIf Me.TextBox17.Value = W_STR2 Then
        W_RSTR3 = "$2"
     ElseIf Me.TextBox17.Value = W_STR3 Then
        W_RSTR3 = "$3"
     End If
  End If
     
  Me.Label55.Caption = Application.Substitute(Me.TextBox12.Value, "$", "$$") & _
                       W_RSTR1 & _
                       Application.Substitute(Me.TextBox14.Value, "$", "$$") & _
                       W_RSTR2 & _
                       Application.Substitute(Me.TextBox16.Value, "$", "$$") & _
                       W_RSTR3 & _
                       Application.Substitute(Me.TextBox18.Value, "$", "$$")

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton49_Click()
'|fffd||fffd||fffd||fffd|

  Me.ComboBox3.Value = Me.Label53.Caption
  Me.ComboBox2.Value = Me.Label55.Caption
  W_PAGEN = "Page2"
  Call SET_PAGE

End Sub

Private Sub CommandButton78_Click()
'|fffd|J|fffd|n|fffd||292|u

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Start pos"
  Call BAR_ST_POS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton79_Click()
'|fffd|J|fffd|n|fffd||292|u

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Start pos"
  Call BAR_ST_POS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = True
  W_TMMS = 450
  Call TMNP_STR(2)

End Sub

Private Sub CommandButton1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = False
  Call TMNP_END

End Sub

Private Sub CommandButton1_Click()
'|fffd|O|fffd||fffd||fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Find prev"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(False, 0)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton2_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = True
  W_TMMS = 450
  Call TMNP_STR(1)

End Sub

Private Sub CommandButton2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = False
  Call TMNP_END

End Sub

Private Sub CommandButton2_Click()
'|fffd||fffd||fffd||fffd||fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Find next"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 0)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton12_Click()
'|fffd|S|fffd||fffd||fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Find all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 3)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton12.Visible = True
  Me.CommandButton81.Visible = False
  Me.CommandButton1.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton37.Enabled = True
  Me.CommandButton78.Enabled = True
  Me.CommandButton85.Enabled = True
  Me.CommandButton87.Enabled = True
  Me.CommandButton88.Enabled = True
  Me.CommandButton104.Enabled = True
  Me.CommandButton261.Enabled = True
  Me.CommandButton262.Enabled = True
  Me.CommandButton45.Visible = True
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton81_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  SW_STOP = True
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton120_Click()
'|fffd||208||543||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  If Me.ToggleButton7.Value = True Then
     W_CLKBTN = "Find next S"
  ElseIf Me.ToggleButton8.Value = True Then
     W_CLKBTN = "Find prev S"
  ElseIf Me.ToggleButton9.Value = True Then
     W_CLKBTN = "Find all S"
  End If
     
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
     
  If Me.ToggleButton7.Value = True Then
     Call FINDPN(True, 0)
  ElseIf Me.ToggleButton8.Value = True Then
     Call FINDPN(False, 0)
  ElseIf Me.ToggleButton9.Value = True Then
     Call FINDPN(True, 3)
  End If
     
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton85_Click()
'|fffd|S|fffd|I|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Select all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 6)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton12.Visible = True
  Me.CommandButton81.Visible = False
  Me.CommandButton1.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton37.Enabled = True
  Me.CommandButton78.Enabled = True
  Me.CommandButton87.Enabled = True
  Me.CommandButton45.Visible = True
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton88_Click()
'|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Outline"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 7)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton12.Visible = True
  Me.CommandButton81.Visible = False
  Me.CommandButton1.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton37.Enabled = True
  Me.CommandButton78.Enabled = True
  Me.CommandButton85.Enabled = True
  Me.CommandButton87.Enabled = True
  Me.CommandButton45.Visible = True
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton104_Click()
'|fffd||fffd||fffd||5c2||115|\|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Show all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 8)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton12.Visible = True
  Me.CommandButton81.Visible = False
  Me.CommandButton1.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton37.Enabled = True
  Me.CommandButton78.Enabled = True
  Me.CommandButton85.Enabled = True
  Me.CommandButton87.Enabled = True
  Me.CommandButton45.Visible = True
  Me.CommandButton261.Enabled = True
  Me.CommandButton262.Enabled = True
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton261_Click()
'|fffd||fffd||fffd||5c2||103|}|fffd|[|fffd|N

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Mark all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 9)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton12.Visible = True
  Me.CommandButton81.Visible = False
  Me.CommandButton1.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton37.Enabled = True
  Me.CommandButton78.Enabled = True
  Me.CommandButton85.Enabled = True
  Me.CommandButton87.Enabled = True
  Me.CommandButton45.Visible = True
  Me.CommandButton262.Enabled = True
  Me.CommandButton104.Enabled = True
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton262_Click()
'|fffd|}|fffd|[|fffd|N|fffd||fffd||fffd||fffd|

  Dim WB As Workbook
  Dim WS As Worksheet
  Dim S As Long
  Dim C As Variant
  Dim W_CNT As Long

  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Release mark"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = True Then
     W_CNT = 0
     Set WB = ActiveWorkbook
     
     For S = 1 To WB.Worksheets.count
        Set WS = WB.Worksheets(S)
        For Each C In WS.UsedRange
           If C.Interior.ColorIndex = 6 And _
              C.Interior.Pattern = xlGrid And _
              C.Interior.PatternColorIndex = 44 Then
              C.Interior.ColorIndex = xlNone
              W_CNT = W_CNT + 1
           End If
        Next
        Set WS = Nothing
     Next S
  
     Set WB = Nothing
  End If
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton3_Click()
'|fffd|O|fffd|u|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Replace prev"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(False, 1)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton4_Click()
'|fffd||fffd||fffd|u|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Replace next"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 1)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton5_Click()

  If SW_ANM = True Then
     Exit Sub
  End If
  
  On Error Resume Next
  Application.CommandBars("EREPU12").ShowPopup
  On Error GoTo 0

End Sub

Sub CommandButton5_Click1()
'|fffd|S|fffd|u|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Replace all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call FINDPN(True, 2)
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton5.Visible = True
  Me.CommandButton82.Visible = False
  Me.CommandButton3.Enabled = True
  Me.CommandButton4.Enabled = True
  Me.CommandButton15.Visible = True
  Me.CommandButton79.Enabled = True
  Me.CommandButton91.Enabled = True
  If Me.ToggleButton2.Value = False Then
     Me.CommandButton54.Visible = True
  End If
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton5_Click2()
'|fffd|S|fffd|u|fffd||fffd||fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|

  Dim W_EXT As String
  Dim W_FLNM As String
  Dim WB As Workbook


  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Simulation"
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If ActiveWorkbook.HasPassword = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't do simulation of this file.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||343|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If ActiveWorkbook.path = "" Then
     If Val(Application.Version) >= 12 Then
        W_EXT = ".xlsx"
     Else
        W_EXT = ".xls"
     End If
  Else
     W_EXT = Right$(ActiveWorkbook.Name, Len(ActiveWorkbook.Name) - InStrRev(ActiveWorkbook.Name, ".") + 1)
  End If
  
  If Me.CheckBox49.Value = True Then
     W_FLNM = ThisWorkbook.path & "\[Simulation]" & W_EXT
  Else
     W_FLNM = ThisWorkbook.path & "\|fffd|y|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|z" & W_EXT
  End If
  
  If Dir(W_FLNM) <> "" Then
     On Error Resume Next
     Kill W_FLNM
     On Error GoTo 0
  End If
  
  If Dir(W_FLNM) <> "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Simulation result file is opened.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||283|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  
  ActiveWorkbook.SaveCopyAs W_FLNM
  
  Set WB = Workbooks.Open(W_FLNM, False)
  WB.Activate
  
  Call FINDPN(True, 2, , , True)
  
  Application.ScreenUpdating = True
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Me.CommandButton5.Visible = True
  Me.CommandButton82.Visible = False
  Me.CommandButton3.Enabled = True
  Me.CommandButton4.Enabled = True
  Me.CommandButton15.Visible = True
  Me.CommandButton79.Enabled = True
  Me.CommandButton91.Enabled = True
  If Me.ToggleButton2.Value = False Then
     Me.CommandButton54.Visible = True
  End If
  Me.CommandButton9.Enabled = True
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton82_Click()
'|fffd|S|fffd|u|fffd||fffd||fffd||fffd||fffd|~
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  SW_STOP = True
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton121_Click()
'|fffd||208||543||fffd||fffd|[|fffd|h|fffd|u|fffd||fffd|

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  If Me.ToggleButton7.Value = True Then
     W_CLKBTN = "Replace next S"
  ElseIf Me.ToggleButton8.Value = True Then
     W_CLKBTN = "Replace prev S"
  ElseIf Me.ToggleButton9.Value = True Then
     W_CLKBTN = "Replace all S"
  End If
     
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
     
  If Me.ToggleButton7.Value = True Then
     Call FINDPN(True, 1)
  ElseIf Me.ToggleButton8.Value = True Then
     Call FINDPN(False, 1)
  ElseIf Me.ToggleButton9.Value = True Then
     Call FINDPN(True, 2)
  End If
     
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton122_Click()
'|fffd||208||543||fffd||fffd|[|fffd|h|fffd||82||fffd||fffd||fffd|
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Close S"
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Unload Me
  If SW_TRY = True Then
     ThisWorkbook.Close
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton54_Click()
'|fffd|I|fffd||fffd|u|fffd||fffd|
  
  Dim W_LISTBOX As Object
  Dim W_LABEL1 As Object
  Dim W_LABEL2 As Object
  Dim W_LABEL3 As Object
  Dim W_BUTTON As Object
  Dim SW_CB3 As Boolean
  Dim I As Long
  Dim SW_BOOK As Boolean
  Dim W_AS As Long
  Dim W_AR As Long
  Dim W_AC As Long
  Dim SW_1ST As Long
  Dim W_FNDSTR As String
  Dim SW_RE2 As Boolean
  Dim J As Long
  Dim W_CELL As String
  Dim SW_VALCHG As Boolean
  Dim SW_TEST As Boolean
  Dim W_CNTRA3 As Long

  Dim SW_WK As Boolean


  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Replace sel"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Select Case Me.MultiPage2.Value
  Case 0
     Set W_LISTBOX = Me.ListBox1
     Set W_LABEL1 = Me.Label10
     Set W_LABEL2 = Me.Label11
     Set W_LABEL3 = Me.Label12
     Set W_BUTTON = Me.CommandButton52
  Case 1
     Set W_LISTBOX = Me.ListBox2
     Set W_LABEL1 = Me.Label64
     Set W_LABEL2 = Me.Label65
     Set W_LABEL3 = Me.Label66
     Set W_BUTTON = Me.CommandButton55
  Case 2
     Set W_LISTBOX = Me.ListBox3
     Set W_LABEL1 = Me.Label68
     Set W_LABEL2 = Me.Label69
     Set W_LABEL3 = Me.Label70
     Set W_BUTTON = Me.CommandButton57
  Case 3
     Set W_LISTBOX = Me.ListBox4
     Set W_LABEL1 = Me.Label72
     Set W_LABEL2 = Me.Label73
     Set W_LABEL3 = Me.Label74
     Set W_BUTTON = Me.CommandButton59
  Case 4
     Set W_LISTBOX = Me.ListBox5
     Set W_LABEL1 = Me.Label76
     Set W_LABEL2 = Me.Label77
     Set W_LABEL3 = Me.Label78
     Set W_BUTTON = Me.CommandButton61
  Case 5
     Set W_LISTBOX = Me.ListBox6
     Set W_LABEL1 = Me.Label80
     Set W_LABEL2 = Me.Label81
     Set W_LABEL3 = Me.Label82
     Set W_BUTTON = Me.CommandButton63
  Case 6
     Set W_LISTBOX = Me.ListBox7
     Set W_LABEL1 = Me.Label84
     Set W_LABEL2 = Me.Label85
     Set W_LABEL3 = Me.Label86
     Set W_BUTTON = Me.CommandButton65
  Case 7
     Set W_LISTBOX = Me.ListBox8
     Set W_LABEL1 = Me.Label88
     Set W_LABEL2 = Me.Label89
     Set W_LABEL3 = Me.Label90
     Set W_BUTTON = Me.CommandButton67
  Case 8
     Set W_LISTBOX = Me.ListBox9
     Set W_LABEL1 = Me.Label92
     Set W_LABEL2 = Me.Label93
     Set W_LABEL3 = Me.Label94
     Set W_BUTTON = Me.CommandButton69
  Case 9
     Set W_LISTBOX = Me.ListBox10
     Set W_LABEL1 = Me.Label96
     Set W_LABEL2 = Me.Label97
     Set W_LABEL3 = Me.Label98
     Set W_BUTTON = Me.CommandButton71
  End Select

  If W_LISTBOX.Visible = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  If W_BUTTON.Visible = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Set W_BUTTON = Nothing
  SW_NR = False
  SW_NR2 = False

  SW_BOOK = False
  For I = 1 To Workbooks.count
     If Workbooks(I).Name = W_LISTBOX.Tag Then
        Workbooks(I).Activate
        SW_BOOK = True
        Exit For
     End If
  Next I
   
  If SW_BOOK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
   
  '|fffd|O|fffd||fffd||fffd|t|fffd|V|fffd|[|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
  W_CHTCNT = 0
  For I = 1 To Sheets.count
     If TypeName(Sheets(I)) <> "Worksheet" Then
        W_CHTCNT = W_CHTCNT + 1
     End If
     If Sheets(I).Name = ActiveSheet.Name Then
        Exit For
     End If
  Next I
     
  W_AS = ActiveSheet.Index - W_CHTCNT
  W_AR = ActiveCell.Row
  W_AC = ActiveCell.Column
  Cells(W_AR, W_AC).Select
  I = W_AS
  SW_1ST = 1
  Do
    If I = W_AS And _
       SW_1ST = 0 Then
       Exit Do
    End If
    If Worksheets(I).Visible = True Then
       J = J + 1
       ReDim Preserve AR_SELS(J)
       AR_SELS(J) = I
    End If
    SW_1ST = 0
    I = I + 1
    If I > Worksheets.count Then
       I = 1
    End If
  Loop
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText)
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = Not W_LABEL1.Tag
     .Global = True
  End With
  SW_RE2 = False
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR1
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not W_LABEL1.Tag)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  If Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag <> "" Then
     W_FNDSTR2 = FNDSTRCNV3(Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag)
     Set RE2 = CreateObject("VBScript.RegExp")
     With RE2
        .Pattern = W_FNDSTR2
        .IgnoreCase = Not W_LABEL1.Tag
        .Global = True
     End With
     SW_RE2 = True
     If SW_NRE = True Then
        SW_NR2 = True
     Else
        On Error GoTo LABEL_ERR1
        RE2.Test (" ")
        On Error GoTo LABEL_REP
     End If
     If SW_NR2 = True Then
        Set NRE2 = NRCHK(W_FNDSTR2, Not W_LABEL1.Tag)
        If NRE2 Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  End If
  
  Application.ScreenUpdating = False
  W_CNTRA = 0
  W_CNTRA2 = 0
  W_CNTRA3 = 0
  SW_CB3 = Me.CheckBox3.Value
  Me.CheckBox3.Value = W_LABEL3.Tag
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox2.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox2)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox2
        Call MK_DIC
     End If
  End If
  
  '|fffd|u|fffd||fffd|
  For I = 0 To W_LISTBOX.ListCount - 1
     If W_LISTBOX.list(I, 0) = "Sel" Then
        With Workbooks(W_LISTBOX.Tag).Worksheets(W_LISTBOX.list(I, 1))
           .Select
           SW_VALCHG = False
           If W_LABEL3.Tag = True Then
              W_CELL = .Range(W_LISTBOX.list(I, 2)).Value
           Else
              On Error GoTo LABEL_ERR
              W_CELL = .Range(W_LISTBOX.list(I, 2)).Formula

              If SW_VALCHG = True Then
LABEL_ERR:
                 SW_VALCHG = True
                 W_CELL = .Range(W_LISTBOX.list(I, 2)).Value
              End If
              On Error GoTo LABEL_REP
           End If
           W_EVAR = W_CELL
           
           For J = 1 To Workbooks(W_LISTBOX.Tag).Worksheets.count
              If Workbooks(W_LISTBOX.Tag).Worksheets(J).Name = .Name Then
                 IDX = J
                 Exit For
              End If
           Next J
           R = .Range(W_LISTBOX.list(I, 2)).Row
           C = .Range(W_LISTBOX.list(I, 2)).Column

           If W_CELL <> "" Then
              SW_TEST = False
              
              W_SPFND = SP_FND(W_CELL, 1)
              If W_SPFND = 0 Then
                 If SW_NR = False Then
                    SW_WK = RE.Test(W_CELL)
                 Else
                    SW_WK = NRTEST(NRE, W_CELL)
                 End If
                 
                 If SW_WK = True Then
                    If Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag <> "" And _
                       W_FNDSTR2 <> "" Then
                       W_SPFND2 = SP_FND(W_CELL, 2)
                       If W_SPFND2 = 0 Then
                          If SW_NR2 = False Then
                             SW_WK = RE2.Test(W_CELL)
                          Else
                             SW_WK = NRTEST(NRE2, W_CELL)
                          End If
                          
                          If SW_WK = Not W_LABEL2.Tag Then
                             SW_TEST = True
                          End If
                       Else
                          If W_LABEL2.Tag = False Then
                             If W_SPFND2 = 2 Then
                                SW_TEST = True
                             End If
                          Else
                             If W_SPFND2 = 1 Then
                                SW_TEST = True
                             End If
                          End If
                       End If
                    Else
                       SW_TEST = True
                    End If
                 End If
              ElseIf W_SPFND = 2 Then
                 If Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag <> "" And _
                    W_FNDSTR2 <> "" Then
                    W_SPFND2 = SP_FND(W_CELL, 2)
                    If W_SPFND2 = 0 Then
                       If SW_NR2 = False Then
                          SW_WK = RE2.Test(W_CELL)
                       Else
                          SW_WK = NRTEST(NRE2, W_CELL)
                       End If
                       
                       If SW_WK = Not W_LABEL2.Tag Then
                          SW_TEST = True
                       End If
                    Else
                       If W_LABEL2.Tag = False Then
                          If W_SPFND2 = 2 Then
                             SW_TEST = True
                          End If
                       Else
                          If W_SPFND2 = 1 Then
                             SW_TEST = True
                          End If
                       End If
                    End If
                 Else
                    SW_TEST = True
                 End If
              End If
              
              If SW_TEST = True Then
                 Call STORE_REP(2, SW_VALCHG)
                 
                 SW_ACDRCL = False
                 AR_CELL = RANGEARRAY(Range(Cells(R, 1), Cells(R, C)))
                 
                 Call SP_REP(SW_VALCHG, 2, W_SPFND)
                 If SW_SPREP = False Then
                    SW_ERR_FRML = True
                    If W_LABEL3.Tag = True Or _
                       SW_VALCHG = True Then
                       On Error Resume Next
                       If SW_NR = False Then
                          .Range(W_LISTBOX.list(I, 2)).Value = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                       Else
                          .Range(W_LISTBOX.list(I, 2)).Value = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                       End If
                       If Err.Number = 0 Then
                          Call STORE_REP2
                          Call STORE_REP3
                       End If
                       On Error GoTo LABEL_REP
                    Else
                       On Error Resume Next
                       If .Range(W_LISTBOX.list(I, 2)).HasArray = True Then
                          If SW_NR = False Then
                             .Range(W_LISTBOX.list(I, 2)).FormulaArray = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                          Else
                             .Range(W_LISTBOX.list(I, 2)).FormulaArray = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                          End If
                       Else
                          If SW_NR = False Then
                             .Range(W_LISTBOX.list(I, 2)).Formula = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                          Else
                             .Range(W_LISTBOX.list(I, 2)).Formula = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                          End If
                       End If
                       If Err.Number = 0 Then
                          Call STORE_REP2
                          Call STORE_REP3
                       End If
                       On Error GoTo LABEL_REP
                    End If
                 Else
                    Call STORE_REP2
                    Call STORE_REP3
                 End If
              Else
                 W_CNTRA3 = W_CNTRA3 + 1
              End If
           End If
        End With
     End If
  Next I

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  Me.CheckBox3.Value = SW_CB3
  Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
  
  If W_REPBOOK <> "" And _
     W_CNTRA > 0 Then
     Set OWB = New C01OtherWorkbook
  End If
  
  Application.ScreenUpdating = True
  
  If W_CNTRA + W_CNTRA3 = W_CNTRA2 Then
     If W_CNTRA2 <> 0 Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has made " & W_CNTRA & " replacements.", vbInformation)
        Else
           W_RET = MsgBox(W_CNTRA & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  Else
     If W_CNTRA2 <> 0 Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has made " & W_CNTRA2 & " of " & W_CNTRA + W_CNTRA3 & " replacements.", vbInformation)
        Else
           W_RET = MsgBox(W_CNTRA + W_CNTRA3 & " |fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(2)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR1:
  On Error GoTo 0
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  If SW_TM = True Then
     SW_TM = False
     Call TMNP_END
     W_TMMS = 0
  End If
  Set RE = Nothing
  Set RE2 = Nothing
  Erase AR_SELS
  Me.CheckBox3.Value = SW_CB3
  Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
  If SW_IS = False Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Error exists in find pattern. Check.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
     End If
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton15_Click()
'|fffd||fffd||fffd||256||7c2||fffd|

  Dim SW_EXST As Boolean
  Dim W_FLNM As String


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Undo"

  If ActiveWorkbook.path <> "" And _
     ActiveWorkbook.HasPassword = False And _
     ActiveWorkbook.ReadOnly = False And _
     ActiveWorkbook.FileFormat <> xlCSV And _
     ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
     SW_EXST = False
     W_FLNM = Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_*.bak")
     Do While W_FLNM <> ""
        If Len(W_FLNM) = Len(ActiveWorkbook.Name) + Len("_yyyymmdd_hhmmss_N.bak") Then
           SW_EXST = True
           Exit Do
        End If
        W_FLNM = Dir()
     Loop
     If SW_EXST = True Then
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If

        Call SHOW_MODELESS(UserForm15)
        W_PAGEN = "Page2"
        UserForm9.Show
  
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("No undoable data.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
     End If
     Exit Sub
  Else
     If ActiveWorkbook.Name <> W_REPBOOK Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("No undoable data.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
        Exit Sub
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call UNDO_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton45_Click()
'|fffd||fffd||fffd||256||7c2||fffd|

  Dim SW_EXST As Boolean
  Dim W_FLNM As String

  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Undo"

  If ActiveWorkbook.path <> "" And _
     ActiveWorkbook.HasPassword = False And _
     ActiveWorkbook.ReadOnly = False And _
     ActiveWorkbook.FileFormat <> xlCSV And _
     ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
     SW_EXST = False
     W_FLNM = Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_*.bak")
     Do While W_FLNM <> ""
        If Len(W_FLNM) = Len(ActiveWorkbook.Name) + Len("_yyyymmdd_hhmmss_N.bak") Then
           SW_EXST = True
           Exit Do
        End If
        W_FLNM = Dir()
     Loop
     If SW_EXST = True Then
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If

        Call SHOW_MODELESS(UserForm15)
        W_PAGEN = "Page1"
        UserForm9.Show
  
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("No undoable data.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
     End If
     Exit Sub
  Else
     If ActiveWorkbook.Name <> W_FNDBOOK Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("No undoable data.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
        Exit Sub
     End If
  End If

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call UNDO2_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton267_Click()
'|fffd||fffd||fffd||256||7c2||fffd|

  Dim SW_EXST As Boolean
  Dim W_FLNM As String


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Undo"
  
  If ActiveWorkbook.path <> "" And _
     ActiveWorkbook.HasPassword = False And _
     ActiveWorkbook.ReadOnly = False And _
     ActiveWorkbook.FileFormat <> xlCSV And _
     ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
     SW_EXST = False
     W_FLNM = Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_*.bak")
     Do While W_FLNM <> ""
        If Len(W_FLNM) = Len(ActiveWorkbook.Name) + Len("_yyyymmdd_hhmmss_N.bak") Then
           SW_EXST = True
           Exit Do
        End If
        W_FLNM = Dir()
     Loop
     If SW_EXST = True Then
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If

        Call SHOW_MODELESS(UserForm15)
        W_PAGEN = "Page6"
        UserForm9.Show
  
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("No undoable data.")
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
        End If
     End If
     Exit Sub
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No undoable data.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B")
     End If
     Exit Sub
  End If
  
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox1, Me.CommandButton52)
  
End Sub

Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox2, Me.CommandButton55)
  
End Sub
Private Sub ListBox3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox3, Me.CommandButton57)
  
End Sub
Private Sub ListBox4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox4, Me.CommandButton59)
  
End Sub
Private Sub ListBox5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox5, Me.CommandButton61)
  
End Sub
Private Sub ListBox6_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox6, Me.CommandButton63)
  
End Sub
Private Sub ListBox7_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox7, Me.CommandButton65)
  
End Sub
Private Sub ListBox8_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox8, Me.CommandButton67)
  
End Sub
Private Sub ListBox9_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox9, Me.CommandButton69)
  
End Sub
Private Sub ListBox10_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g
  
  Call LIST_SEL(Me.ListBox10, Me.CommandButton71)
  
End Sub

Private Sub LIST_SEL(W_LISTBOX As Object, W_BTN1 As Object)

  Dim AR_LIST() As String
  Dim I As Long
  Dim W_LI As Long
  
  
  If InStr(W_LISTBOX.Tag, "\") > 0 Then
     Exit Sub
  Else
     If W_BTN1.Enabled = True And _
        W_BTN1.Visible = True Then
     Else
        Exit Sub
     End If
  End If
  
  ReDim AR_LIST(0 To W_LISTBOX.ListCount - 1, 0 To 3)
  
  With W_LISTBOX
     W_LI = .ListIndex
     For I = 0 To .ListCount - 1
        If .Selected(I) = True Then
           If .list(I, 0) = "Sel" Then
              AR_LIST(I, 0) = ""
           Else
              AR_LIST(I, 0) = "Sel"
           End If
        Else
           AR_LIST(I, 0) = .list(I, 0)
        End If
        AR_LIST(I, 1) = .list(I, 1)
        AR_LIST(I, 2) = .list(I, 2)
        AR_LIST(I, 3) = .list(I, 3)
     Next I
     .Clear
     .list = AR_LIST
     .ListIndex = W_LI
     Erase AR_LIST
     .SetFocus
  End With

End Sub

Private Sub CommandButton52_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox1, True)

End Sub

Private Sub CommandButton53_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox1, False)

End Sub

Private Sub CommandButton55_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox2, True)

End Sub

Private Sub CommandButton56_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox2, False)

End Sub

Private Sub CommandButton57_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox3, True)

End Sub

Private Sub CommandButton58_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox3, False)

End Sub

Private Sub CommandButton59_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox4, True)

End Sub

Private Sub CommandButton60_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox4, False)

End Sub

Private Sub CommandButton61_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox5, True)

End Sub

Private Sub CommandButton62_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox5, False)

End Sub

Private Sub CommandButton63_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox6, True)

End Sub

Private Sub CommandButton64_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox6, False)

End Sub

Private Sub CommandButton65_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox7, True)

End Sub

Private Sub CommandButton66_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox7, False)

End Sub

Private Sub CommandButton67_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox8, True)

End Sub

Private Sub CommandButton68_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox8, False)

End Sub

Private Sub CommandButton69_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox9, True)

End Sub

Private Sub CommandButton70_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox9, False)

End Sub

Private Sub CommandButton71_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(Me.ListBox10, True)

End Sub

Private Sub CommandButton72_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(Me.ListBox10, False)

End Sub

Private Sub LIST_SET_ALL(W_LISTBOX As Object, SW_ASEL As Boolean)

  Dim AR_LIST() As String
  Dim I As Long
  Dim W_LI As Long
  
  ReDim AR_LIST(0 To W_LISTBOX.ListCount - 1, 0 To 3)
  
  With W_LISTBOX
     W_LI = .ListIndex
     For I = 0 To .ListCount - 1
        If SW_ASEL = True Then
           AR_LIST(I, 0) = "Sel"
        Else
           AR_LIST(I, 0) = ""
        End If
        AR_LIST(I, 1) = .list(I, 1)
        AR_LIST(I, 2) = .list(I, 2)
        AR_LIST(I, 3) = .list(I, 3)
     Next I
     .Clear
     .list = AR_LIST
     .ListIndex = W_LI
     Erase AR_LIST
     .SetFocus
  End With

End Sub

Private Sub CommandButton127_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox1)

End Sub

Private Sub CommandButton128_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox2)

End Sub

Private Sub CommandButton129_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox3)

End Sub

Private Sub CommandButton130_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox4)

End Sub

Private Sub CommandButton131_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox5)

End Sub

Private Sub CommandButton132_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox6)

End Sub

Private Sub CommandButton133_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox7)

End Sub

Private Sub CommandButton134_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox8)

End Sub

Private Sub CommandButton135_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox9)

End Sub

Private Sub CommandButton136_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v

  Call OPEN_MM(Me.ListBox10)

End Sub

Private Sub OPEN_MM(W_LISTBOX As Object)
'|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v|fffd|I|fffd|[|fffd|v|fffd||fffd|

  Dim I As Long
  Dim AR_WK() As String
  Dim J As Long


  If Me.CheckBox81.Tag = W_LISTBOX.Name Then
     Me.CheckBox81.Tag = ""
     Me.CheckBox81.Value = False
     SW_MM = False
  Else
     Me.ToggleButton14.Value = False
     
     With W_LISTBOX
        ReDim AR_WK(.ListCount)
        For I = 0 To .ListCount - 1
           J = InStr(2, .list(I, 2), "$") + 1
           AR_WK(I + 1) = .list(I, 1) & vbCrLf & Right$(.list(I, 2), Len(.list(I, 2)) - J + 1)
        Next I
     End With
     Me.MultiPage2.Tag = W_LISTBOX.Tag & vbTab & Join$(AR_WK, ",")
     If Me.CheckBox81.Value = True Then
        Me.CheckBox81.Value = False
     End If
     Me.CheckBox81.Tag = W_LISTBOX.Name
     Me.CheckBox81.Value = True
  End If

End Sub

Private Sub CommandButton137_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox1, Me.Label9)

End Sub

Private Sub CommandButton138_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox2, Me.Label67)

End Sub

Private Sub CommandButton139_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox3, Me.Label71)

End Sub

Private Sub CommandButton140_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox4, Me.Label75)

End Sub

Private Sub CommandButton141_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox5, Me.Label79)

End Sub

Private Sub CommandButton142_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox6, Me.Label83)

End Sub

Private Sub CommandButton143_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox7, Me.Label87)

End Sub

Private Sub CommandButton144_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox8, Me.Label91)

End Sub

Private Sub CommandButton145_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox9, Me.Label95)

End Sub

Private Sub CommandButton146_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Call FILTER_LIST(Me.ListBox10, Me.Label99)

End Sub

Private Sub FILTER_LIST(W_LISTBOX As Object, W_LABEL As Object)
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|t|fffd|B|fffd||fffd||fffd|^

  Dim I As Long
  Dim J As Long
  Dim SW_HIT As Boolean
  Dim AR_WK() As String
  Dim AR_LIST() As String
  
  
  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Filter"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = Me.ComboBox1.Value
     .IgnoreCase = Not Me.CheckBox1.Value
     .Global = True
  End With
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(Me.ComboBox1.Value, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  ReDim AR_WK(0 To W_LISTBOX.ListCount - 1, 0 To 3)
  J = -1
  
  For I = 0 To W_LISTBOX.ListCount - 1
     SW_HIT = False
     If SW_NR = False Then
        SW_HIT = RE.Test(W_LISTBOX.list(I, 3))
     Else
        SW_HIT = NRTEST(NRE, W_LISTBOX.list(I, 3))
     End If
     If SW_HIT = True Then
        J = J + 1
        AR_WK(J, 0) = "Sel"
        AR_WK(J, 1) = W_LISTBOX.list(I, 1)
        AR_WK(J, 2) = W_LISTBOX.list(I, 2)
        AR_WK(J, 3) = W_LISTBOX.list(I, 3)
     End If
  Next I
  
  If J >= 0 Then
     ReDim AR_LIST(0 To J, 0 To 3)
     For I = 0 To J
        AR_LIST(I, 0) = AR_WK(I, 0)
        AR_LIST(I, 1) = AR_WK(I, 1)
        AR_LIST(I, 2) = AR_WK(I, 2)
        AR_LIST(I, 3) = AR_WK(I, 3)
     Next I
     Erase AR_WK
     With W_LISTBOX
       .Clear
       .list = AR_LIST
       .ListIndex = 0
       Erase AR_LIST
       .SetFocus
     End With
     If Me.CheckBox49.Value = True Then
        W_LABEL.Caption = J + 1 & " item(s) refined."
     Else
        W_LABEL.Caption = J + 1 & "|fffd||fffd||fffd||24d|i|fffd||835e||fffd||742||702||fffd||fffd||fffd||fffd|B"
     End If
  End If

  Set RE = Nothing
  Set NRE = Nothing

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  Set NRE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Set RE = Nothing
  Set NRE = Nothing
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton148_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton149_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton150_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton151_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton152_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton153_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton154_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton155_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton156_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub CommandButton157_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|o|fffd||fffd|

  Call LIST_OUT

End Sub

Private Sub LIST_OUT()

  Dim W_LISTBOX As Object
  Dim W_LABEL1 As Object
  Dim W_LABEL2 As Object
  Dim W_LABEL3 As Object
  Dim W_BUTTON As Object
  
  Dim WB As Workbook
  Dim I As Long
  Dim ADDR As String

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Export"

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Application.ScreenUpdating = False

  Select Case Me.MultiPage2.Value
  Case 0
     Set W_LISTBOX = Me.ListBox1
     Set W_LABEL1 = Me.Label10
     Set W_LABEL2 = Me.Label11
     Set W_LABEL3 = Me.Label12
     Set W_BUTTON = Me.CommandButton52
  Case 1
     Set W_LISTBOX = Me.ListBox2
     Set W_LABEL1 = Me.Label64
     Set W_LABEL2 = Me.Label65
     Set W_LABEL3 = Me.Label66
     Set W_BUTTON = Me.CommandButton55
  Case 2
     Set W_LISTBOX = Me.ListBox3
     Set W_LABEL1 = Me.Label68
     Set W_LABEL2 = Me.Label69
     Set W_LABEL3 = Me.Label70
     Set W_BUTTON = Me.CommandButton57
  Case 3
     Set W_LISTBOX = Me.ListBox4
     Set W_LABEL1 = Me.Label72
     Set W_LABEL2 = Me.Label73
     Set W_LABEL3 = Me.Label74
     Set W_BUTTON = Me.CommandButton59
  Case 4
     Set W_LISTBOX = Me.ListBox5
     Set W_LABEL1 = Me.Label76
     Set W_LABEL2 = Me.Label77
     Set W_LABEL3 = Me.Label78
     Set W_BUTTON = Me.CommandButton61
  Case 5
     Set W_LISTBOX = Me.ListBox6
     Set W_LABEL1 = Me.Label80
     Set W_LABEL2 = Me.Label81
     Set W_LABEL3 = Me.Label82
     Set W_BUTTON = Me.CommandButton63
  Case 6
     Set W_LISTBOX = Me.ListBox7
     Set W_LABEL1 = Me.Label84
     Set W_LABEL2 = Me.Label85
     Set W_LABEL3 = Me.Label86
     Set W_BUTTON = Me.CommandButton65
  Case 7
     Set W_LISTBOX = Me.ListBox8
     Set W_LABEL1 = Me.Label88
     Set W_LABEL2 = Me.Label89
     Set W_LABEL3 = Me.Label90
     Set W_BUTTON = Me.CommandButton67
  Case 8
     Set W_LISTBOX = Me.ListBox9
     Set W_LABEL1 = Me.Label92
     Set W_LABEL2 = Me.Label93
     Set W_LABEL3 = Me.Label94
     Set W_BUTTON = Me.CommandButton69
  Case 9
     Set W_LISTBOX = Me.ListBox10
     Set W_LABEL1 = Me.Label96
     Set W_LABEL2 = Me.Label97
     Set W_LABEL3 = Me.Label98
     Set W_BUTTON = Me.CommandButton71
  End Select

  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Set WB = Workbooks.Add
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If

  With WB.Worksheets(1)
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Target file"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
     End If
     .Columns(2).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     .Cells(5, 2).Value = W_LABEL1.Caption
     .Cells(5, 3).Value = W_LABEL2.Caption
     .Cells(5, 4).Value = W_LABEL3.Caption
        
     Application.DisplayAlerts = False
     
     For I = 0 To W_LISTBOX.ListCount - 1
        .Cells(6 + I, 1).Value = I + 1
        .Cells(6 + I, 2).Value = W_LISTBOX.list(I, 1)
        .Cells(6 + I, 3).Value = W_LISTBOX.list(I, 2)
        .Cells(6 + I, 4).Value = W_LISTBOX.list(I, 3)
        ADDR = "'[" & W_LISTBOX.Tag & "]" & W_LISTBOX.list(I, 1) & "'!" & W_LISTBOX.list(I, 2)
        .Hyperlinks.Add .Cells(6 + I, 4), "", ADDR
     Next I
     
     Application.DisplayAlerts = True
     
     .Columns(1).AutoFit
     .Columns(2).AutoFit
     .Columns(3).AutoFit
     .Columns(4).AutoFit
     .Cells(1, 3).Value = "'" & Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText
     .Cells(2, 3).Value = W_LISTBOX.Tag
     .Range(.Cells(5, 1), .Cells(5, 4)).Interior.ColorIndex = 6
     .Range(.Cells(5, 1), .Cells(5 + W_LISTBOX.ListCount, 4)).Borders.LineStyle = True
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  Application.ScreenUpdating = True

  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton159_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton160_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton161_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton162_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton163_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton164_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton165_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton166_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton167_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub CommandButton168_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|

  Call LIST_RAA

End Sub

Private Sub LIST_RAA()

  Dim RE As Object
  Dim W_FWB As String
  Dim SW_NRML As Boolean
  Dim W_LISTBOX As Object
  Dim W_LABEL1 As Object
  Dim I As Long
  Dim MATCHES As Object
  Dim W_STR As String
  Dim R1 As Long
  Dim R2 As Long
  Dim W_RAA1 As String
  Dim W_RAA2 As String
  Dim W_PAT As String
  Dim W_ERRM As String

  Dim SW_TEST As Boolean
  Dim AR_STR As Variant
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long

  Dim SW_SAME As Boolean
  Dim W_STRBK As String


  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "FARAA"

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  W_FWB = Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
     .IgnoreCase = True
     .Global = True
  End With
  If RE.Test(W_FWB) = False Then
     SW_NRML = True
  End If
  Set RE = Nothing
  
  Select Case Me.MultiPage2.Value
  Case 0
     Set W_LISTBOX = Me.ListBox1
     Set W_LABEL1 = Me.Label10
  Case 1
     Set W_LISTBOX = Me.ListBox2
     Set W_LABEL1 = Me.Label64
  Case 2
     Set W_LISTBOX = Me.ListBox3
     Set W_LABEL1 = Me.Label68
  Case 3
     Set W_LISTBOX = Me.ListBox4
     Set W_LABEL1 = Me.Label72
  Case 4
     Set W_LISTBOX = Me.ListBox5
     Set W_LABEL1 = Me.Label76
  Case 5
     Set W_LISTBOX = Me.ListBox6
     Set W_LABEL1 = Me.Label80
  Case 6
     Set W_LISTBOX = Me.ListBox7
     Set W_LABEL1 = Me.Label84
  Case 7
     Set W_LISTBOX = Me.ListBox8
     Set W_LABEL1 = Me.Label88
  Case 8
     Set W_LISTBOX = Me.ListBox9
     Set W_LABEL1 = Me.Label92
  Case 9
     Set W_LISTBOX = Me.ListBox10
     Set W_LABEL1 = Me.Label96
  End Select

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FWB
     .IgnoreCase = Not W_LABEL1.Tag
     .Global = False
  End With

  SW_NR = False
  
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  If SW_NR = True Then
     Set NRE = NRCHK(W_FWB, Not W_LABEL1.Tag)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  R1 = 0
  W_RAA1 = ""
  R2 = 0
  W_RAA2 = ""
  
  SW_SAME = True
  W_STRBK = ""

  For I = 0 To W_LISTBOX.ListCount - 1
     If SW_NR = False Then
        SW_TEST = RE.Test(W_LISTBOX.list(I, 3))
     Else
        SW_TEST = NRTEST(NRE, W_LISTBOX.list(I, 3))
     End If
     
     If SW_TEST = True Then
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_LISTBOX.list(I, 3))
           W_STR = MATCHES.Item(0)
           Set MATCHES = Nothing
        Else
           AR_STR = Split(NREXE(NRE, W_LISTBOX.list(I, 3)), vbCrLf)
           AR_WK = Split(AR_STR(0), vbTab)
           W_FI = CLng(AR_WK(0))
           W_LN = CLng(AR_WK(1))
           W_STR = Mid$(W_LISTBOX.list(I, 3), W_FI + 1, W_LN)
        End If
        
        If W_LISTBOX.list(I, 0) = "Sel" Then
           R1 = R1 + 1
           W_RAA1 = W_RAA1 & W_STR & vbCrLf
           
           If W_STRBK <> "" Then
              If W_STR <> W_STRBK Then
                 SW_SAME = False
              End If
           End If
           W_STRBK = W_STR
        Else
           R2 = R2 + 1
           W_RAA2 = W_RAA2 & W_LISTBOX.list(I, 3) & vbCrLf
        End If
     Else
        R1 = 0
        R2 = 0
        Exit For
     End If
  Next I

  Set NRE = Nothing
  Set RE = Nothing

  If R1 < 1 Or _
     R2 < 1 Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  If SW_NRML = False Then
     If SW_SAME = True Then
        SW_NRML = True
     End If
  End If

  If W_RAA1 = "" Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If

  If SW_NRML = True Then
     If W_RAA2 = "" Then
        W_CLKBTN = ""
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
  End If

  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Will do RegExp Assemble.", vbOKCancel)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
  End If
  
  If W_RET = vbCancel Then
     W_CLKBTN = ""
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If

  W_EVAR = W_RAA1
  
  If SW_NRML = True Then
     W_PAT = RAA1(W_RAA1, W_ERRM)
     If W_ERRM <> "" Then
        MsgBox W_ERRM
        W_CLKBTN = ""
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
  
     If W_PAT = "" Then
        W_CLKBTN = ""
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
  
     W_PAT = RAA2(W_PAT, W_RAA2, W_ERRM)
     If W_ERRM <> "" Then
        MsgBox W_ERRM
        W_CLKBTN = ""
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
  Else
     W_PAT = RAF1(W_RAA1)
  End If
  
  If W_PAT <> "" Then
     Me.ComboBox1.Value = W_PAT
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  
  Call SETTM_UF2
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton107_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox1)

End Sub

Private Sub CommandButton108_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox2)

End Sub

Private Sub CommandButton109_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox3)

End Sub

Private Sub CommandButton110_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox4)

End Sub

Private Sub CommandButton111_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox5)

End Sub

Private Sub CommandButton112_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox6)

End Sub

Private Sub CommandButton113_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox7)

End Sub

Private Sub CommandButton114_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox8)

End Sub

Private Sub CommandButton115_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox9)

End Sub

Private Sub CommandButton116_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SEL_ALL(Me.ListBox10)

End Sub

Private Sub LIST_SEL_ALL(W_LISTBOX As Object)

  Dim I As Long
  Dim RNG As Range
  
  On Error Resume Next
  Workbooks(W_LISTBOX.Tag).Activate
  Set W_UNION = Nothing
  
  For I = 0 To W_LISTBOX.ListCount - 1
     With W_LISTBOX
        Set RNG = Worksheets(.list(I, 1)).Range(.list(I, 2))
     End With
     If W_UNION Is Nothing Then
        Set W_UNION = RNG
     Else
        Set W_UNION = Union(W_UNION, RNG)
     End If
     Set RNG = Nothing
  Next I
  
  W_UNION.Select
  Set W_UNION = Nothing
  On Error GoTo 0

End Sub

Private Sub ListBox1_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox1
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton52.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              
              Call SET_POS(True)
              If .ListIndex > 0 Then
                 If Me.CheckBox74.Value = False And _
                    Me.CheckBox92.Value = False Then
                    If W_SGFW <> "" Then
                       Call KEEP_FIND_INFO
                    End If
                 End If
              End If
           Else
              Call LIST_SHP_SEL(Me.ListBox1)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox2_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox2
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton55.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox2)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox3_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox3
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton57.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox3)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox4_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox4
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton59.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox4)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox5_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox5
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton61.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox5)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox6_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox6
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton63.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox6)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox7_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox7
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton65.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox7)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox8_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long

  If SW_SEL = True Then
     With Me.ListBox8
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton67.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox8)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox9_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox9
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton69.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox9)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox10_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  Dim W_NAME As String
  Dim W_AR As Variant

  Dim I As Long


  If SW_SEL = True Then
     With Me.ListBox10
        On Error Resume Next
        If InStr(.Tag, "\") > 0 Then
           W_NAME = Right$(.Tag, Len(.Tag) - InStrRev(.Tag, "\"))
           Workbooks(W_NAME).VBProject.VBComponents(.list(.ListIndex, 1)).CodeModule.CodePane.Show
           W_AR = Split(.list(.ListIndex, 2), ":")
           Application.VBE.ActiveCodePane.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
           AppActivate (Me.Caption)
           AppActivate Application.VBE.MainWindow.Caption
        Else
           Workbooks(.Tag).Activate
           If Me.CommandButton71.Enabled = True Then
              Set W_UNION = Nothing
              For I = 0 To .ListCount - 1
                 If .Selected(I) = True Then
                   If W_UNION Is Nothing Then
                      Worksheets(.list(I, 1)).Select
                      Set W_UNION = Range(.list(I, 2))
                   Else
                      If .list(I, 1) = W_UNION.Parent.Name Then
                         Set W_UNION = Union(W_UNION, Range(.list(I, 2)))
                      End If
                   End If
                 End If
              Next I
              W_UNION.Select
              Call SET_POS(True)
           Else
              Call LIST_SHP_SEL(Me.ListBox10)
           End If
        End If
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub LIST_SHP_SEL(W_LISTBOX As Object)

  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim W_CNT As Long

  W_CNT = 0
  With W_LISTBOX
     For I = 0 To .ListCount - 1
        If .Selected(I) = True Then
          If W_CNT = 0 Then
             Sheets(.list(I, 1)).Select
   
             If Sheets(.list(I, 1)).Shapes(.list(I, 2)).ID = CLng(.list(I, 0)) Then
                Sheets(.list(I, 1)).Shapes(.list(I, 2)).Select
                If InStr(.list(I, 2), Chr$(0)) > 0 Then
                   J = CLng(Right$(.list(I, 2), Len(.list(I, 2)) - InStr(.list(I, 2), Chr$(0))))
                   Call SEL_SA(Me.ListBox1, I, J)
                End If
                W_CNT = W_CNT + 1
             Else
                For K = 1 To Sheets(.list(I, 1)).Shapes.count
                   If Sheets(.list(I, 1)).Shapes(K).ID = CLng(.list(I, 0)) Then
                      Sheets(.list(I, 1)).Shapes(K).Select
                      If InStr(.list(I, 2), Chr$(0)) > 0 Then
                         J = CLng(Right$(.list(I, 2), Len(.list(I, 2)) - InStr(.list(I, 2), Chr$(0))))
                         Call SEL_SA(Me.ListBox1, I, J)
                      End If
                      W_CNT = W_CNT + 1
                      Exit For
                   End If
                Next K
             End If
          Else
             If .list(I, 1) = ActiveSheet.Name Then
                If Sheets(.list(I, 1)).Shapes(.list(I, 2)).ID = CLng(.list(I, 0)) Then
                   Sheets(.list(I, 1)).Shapes(.list(I, 2)).Select Replace:=False
                Else
                   For K = 1 To Sheets(.list(I, 1)).Shapes.count
                      If Sheets(.list(I, 1)).Shapes(K).ID = CLng(.list(I, 0)) Then
                         Sheets(.list(I, 1)).Shapes(K).Select Replace:=False
                         W_CNT = W_CNT + 1
                         Exit For
                      End If
                   Next K
                End If
             End If
          End If
        End If
     Next I
  End With

  AppActivate (Me.Caption)

End Sub

Sub CommandButton22_Click()
'|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd|

  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Find all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Call C22_SHP_F
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub C22_SHP_F(Optional ByVal W_FW As String, Optional ByVal SW_SIM As Boolean)

  Dim S As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim W_FNDSTR As String
  
  Dim SS As Long
  Dim SW_SELS As Boolean
  
  Dim W_IDX As Long
  Dim W_ID As Long
  Dim W_NM As String
  Dim W_NM2 As String
  Dim N As Long
  
  Dim W_SHPCNT As Long
  
  Dim W_SW_CNV As String
  
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  If W_FW = "" Then
     W_FW = Me.ComboBox6.Value
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox6.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|L|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.MultiUserEditing = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't shape find in share workbook.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|L|fffd|u|fffd|b|fffd|N|fffd||343|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  SW_NR = False
  
  W_NMLCHK = NRML_CHK(W_FW, 1, False)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(W_FW)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo 0
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False And _
        S <> ActiveSheet.Index Then
        GoTo LABEL_NEXT1
     End If
     If Sheets(S).ProtectContents = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Protected worksheet exists.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
        Sheets(S).Select
        Call COMBO_FOCUS
        Exit Sub
     End If
LABEL_NEXT1:
  Next S

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox6)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox6
     Call MK_DIC
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_CNTFA = 0
  AFN = 0
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False Then
        SW_SELS = False
        For SS = 1 To ActiveWindow.SelectedSheets.count
           If S = ActiveWindow.SelectedSheets(SS).Index Then
              SW_SELS = True
              Exit For
           End If
        Next SS
        If SW_SELS = False Then
           GoTo LABEL_NEXT2
        End If
     End If
     
     With Sheets(S)
        W_SHPCNT = .Shapes.count
        For I = 1 To .Shapes.count
           If I > .Shapes.count Then
              Exit For
           End If
           Call SHP_FIND(.Shapes(I), W_SHPCNT, S, W_ID, SW_SIM)
        Next I
     End With
LABEL_NEXT2:
  Next S

  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True

  If W_CNTFA = 0 Then
     If Me.CheckBox206.Value = True And _
        W_NMLCHK <> "" Then
        If W_FW = Me.ComboBox6.Value And _
           SW_SIM = False Then
           W_NMLCHK_BK = W_NMLCHK
           
           W_SW_CNV = SWING_CNV(W_NMLCHK)
           W_SW_CNV = Replace(Me.ComboBox6.Value, W_NMLCHK, W_SW_CNV)
           
           If W_SW_CNV <> Me.ComboBox6.Value Then
              If Me.CheckBox49.Value = True Then
                 W_RET = MsgBox("No data found." & vbCrLf & _
                                "Will do fuzzy search.", vbOKCancel)
              Else
                 W_RET = MsgBox("|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                "|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
              End If
              If W_RET = vbOK Then
                 Call C22_SHP_F(W_SW_CNV)
              End If
              Exit Sub
           Else
              If Len(W_NMLCHK_BK) >= 4 Then
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Can't find a match." & vbCrLf & _
                                   "Will do similar search.", vbOKCancel)
                 Else
                    W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                   "|fffd||78e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
                 End If
                 If W_RET = vbOK Then
                    Call C22_SHP_F(W_SW_CNV, True)
                 End If
                 Exit Sub
              End If
           End If
        ElseIf SW_SIM = False Then
           If Len(W_NMLCHK_BK) >= 4 Then
              If Me.CheckBox49.Value = True Then
                 W_RET = MsgBox("Can't find a match." & vbCrLf & _
                                "Will do similar search.", vbOKCancel)
              Else
                 W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                "|fffd||78e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
              End If
              If W_RET = vbOK Then
                 Call C22_SHP_F(W_SW_CNV, True)
              End If
              Exit Sub
           End If
        End If
     End If
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
  Else
     Call ALL_FIND_S
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(6)
  End If
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

End Sub

Private Sub SHP_FIND(SHP As Shape, W_SHPCNT As Long, ByVal S As Long, W_ID As Long, Optional ByVal SW_SIM As Boolean)

  Dim W_SPLEN As Long
  Dim W_SPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long
  
  Dim W_STR As String
  Dim SW_FIND As Boolean
   
  Dim W_SHPNM As String
  Dim SC1 As Long
  Dim SC2 As Long
  Dim AR_SHP() As Shape
  Dim AR_ID() As Long
  Dim AR_IDA() As Long
  Dim SW_FINDID As Boolean
  Dim AR_IDX() As Variant
   
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
   
  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String
   
  Dim W_FW As String
  Dim RE9 As Object
  Dim MATCHES9 As Object
  Dim W_LTXT As String
  Dim W_RTXT As String
   
  Dim W_SPTXTBK As String
  Dim W_TEXT As String
  Dim L As Long
  Dim W_CNT As Long
   
  
  If SHP.Type = msoGroup Then
     If Val(Application.Version) >= 12 Then
        For I = 1 To SHP.GroupItems.count
           Call SHP_FIND(SHP.GroupItems(I), W_SHPCNT, S, W_ID)
        Next I
     Else
        If SW_SHPUR = False Then
           Exit Sub
        End If
        
        W_SHPNM = SHP.Name
        SC1 = ActiveSheet.Shapes.count
        ReDim AR_IDA(SC1)
        For I = 1 To SC1
           AR_IDA(I) = ActiveSheet.Shapes(I).ID
        Next I
        SHP.Ungroup
        SC2 = ActiveSheet.Shapes.count
        ReDim AR_SHP(SC2 - SC1 + 1)
        ReDim AR_ID(SC2 - SC1 + 1)
        K = 0
        For I = 1 To SC2
           SW_FINDID = False
           For J = 1 To UBound(AR_IDA)
              If ActiveSheet.Shapes(I).ID = AR_IDA(J) Then
                 SW_FINDID = True
                 Exit For
              End If
           Next J
           If SW_FINDID = False Then
              K = K + 1
              AR_ID(K) = ActiveSheet.Shapes(I).ID
              Set AR_SHP(K) = ActiveSheet.Shapes(I)
              If K = UBound(AR_ID) Then
                 Exit For
              End If
           End If
        Next I
        Erase AR_IDA
        
        For I = 1 To UBound(AR_SHP)
           Call SHP_FIND(AR_SHP(I), W_SHPCNT, S, AR_ID(I))
           Set AR_SHP(I) = Nothing
        Next I
        
        Erase AR_SHP
        ReDim AR_IDX(SC2 - SC1 + 1)
        
        K = 0
        For I = 1 To ActiveSheet.Shapes.count
           For J = K + 1 To UBound(AR_ID)
              If ActiveSheet.Shapes(I).ID = AR_ID(J) Then
                 K = K + 1
                 AR_IDX(K) = I
                 Exit For
              End If
           Next J
           If K = UBound(AR_ID) Then
              Exit For
           End If
        Next I
        With ActiveSheet.Shapes.Range(AR_IDX()).Group
           On Error Resume Next
           .Name = W_SHPNM
           On Error GoTo 0
           W_ID = .ID
        End With
        Erase AR_ID
        Erase AR_IDX
     End If
     Exit Sub
  End If
  If SW_ALLSHP = True Then
  ElseIf SW_COMONLY = True Then
     If SHP.Type <> msoComment Then
        Exit Sub
     End If
  ElseIf SW_NOTCOM = True Then
     If SHP.Type = msoComment Then
        Exit Sub
     End If
  End If
  
  If Val(Application.Version) >= 12 And _
     SW_INCSA = True Then
     If SA_FIND(SHP, RE, NRE, SW_NR, 1, False, "", 0, S) = True Then
        Exit Sub
     End If
  End If
  
  W_SPLEN = -1
  On Error Resume Next
  W_SPLEN = SHP.TextFrame.Characters.count
  On Error GoTo 0
  If W_SPLEN = -1 Then
     Exit Sub
  End If
  W_SPTXT = ""
  If W_SPLEN > 0 Then
     For K = 0 To Int(W_SPLEN / 255)
        W_ST = K * 255 + 1
        If (K + 1) * 255 <= W_SPLEN Then
           W_BYTE = 255
        Else
           W_BYTE = W_SPLEN - K * 255
        End If
        W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
        If (K + 1) * 255 = W_SPLEN Then
           Exit For
        End If
     Next K
  End If
  If Me.CheckBox32.Value = True Then
     W_SPTXTBK = W_SPTXT
     W_SPTXT = Replace(W_SPTXT, vbLf, "")
  End If
  W_EVAR = W_SPTXT
  
  If SW_SIM = True Then
     W_FW = Left$(W_NMLCHK_BK, 1) & String$(Len(W_NMLCHK_BK) - 1, "?")
     Set RE9 = CreateObject("VBScript.RegExp")
     With RE9
        .Pattern = Replace(W_FW, "?", ".")
        .IgnoreCase = True
        .Global = True
     End With
     If RE9.Test(W_SPTXT) = True Then
        W_LTXT = W_NMLCHK_BK
        Set MATCHES9 = RE9.Execute(W_SPTXT)
        For I = 0 To MATCHES9.count - 1
           W_RTXT = MATCHES9.Item(I).Value
           If COMP_LINE_RATE(W_LTXT, W_RTXT, 1, Len(W_LTXT), 1, Len(W_RTXT), 2) >= 75 Then
              W_SPTXT = Left$(W_SPTXT, MATCHES9.Item(I).FirstIndex) & W_NMLCHK_BK & Right$(W_SPTXT, Len(W_SPTXT) - MATCHES9.Item(I).FirstIndex - MATCHES9.Item(I).Length)
           End If
        Next I
        Set MATCHES9 = Nothing
     End If
     Set RE9 = Nothing
  End If
  
  If SW_NR = False Then
     SW_WK = RE.Test(W_SPTXT)
  Else
     SW_WK = NRTEST(NRE, W_SPTXT)
  End If
  
  If SW_WK = False Then
     Exit Sub
  End If

  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_SPTXT)
     MAXJ = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_SPTXT), vbCrLf)
     MAXJ = UBound(AR_STR)
  End If
  
  W_ST = 1
  For J = 0 To MAXJ
     If SW_NR = False Then
        W_FI = MATCHES.Item(J).FirstIndex
        W_LN = MATCHES.Item(J).Length
        W_VL = MATCHES.Item(J).Value
     Else
        AR_WK = Split(AR_STR(J), vbTab)
        W_FI = CLng(AR_WK(0))
        W_LN = CLng(AR_WK(1))
        W_VL = Mid$(W_SPTXT, W_FI + 1, W_LN)
     End If
     
     SW_FIND = True
     If SW_FIND = True Then
        W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
        W_LEN = W_LN
        If AFN Mod 10000 = 0 Then
           ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
           ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
           ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
           ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
        End If
     
        AFN = AFN + 1
        AR_AFS(AFN) = S
        AR_AFN(AFN) = SHP.Name
        
        If W_LEN > 0 Then
           If Me.CheckBox32.Value = True Then
              If W_POS > 1 Then
                 W_TEXT = Left$(W_SPTXTBK, W_POS - 1)
                 W_POS = W_POS + Len(W_TEXT) - Len(Replace(W_TEXT, vbLf, ""))
              End If
              L = 0
              W_CNT = 0
              Do While W_CNT < W_LEN
                 L = L + 1
                 If Mid$(W_SPTXTBK, L, 1) <> vbLf Then
                    W_CNT = W_CNT + 1
                 End If
              Loop
              W_LEN = W_LEN + L - W_CNT
           End If
           
           AR_AFV(AFN) = SHP.TextFrame.Characters(W_POS, W_LEN).text
        End If
        
        AR_AFR(AFN) = SHP.ID
        
        If SW_CLRKEEP = True And _
           (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) Then
           If W_CNTFA = 0 Then
              If ActiveWorkbook.path <> "" And _
                 ActiveWorkbook.HasPassword = False And _
                 ActiveWorkbook.ReadOnly = False And _
                 ActiveWorkbook.FileFormat <> xlCSV And _
                 ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
                 DT = Date
                 TM = time
                 On Error GoTo L_BK_END
                 If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                    On Error Resume Next
                    W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                     ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                    On Error GoTo 0
                    W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                    If RPDIC.Exists(W_CNV) = False Then
                       RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                    End If
                 End If
                 ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
                 W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
                 If RPDIC.Exists(W_CNV) = False Then
                    RPDIC.Add W_CNV, "SF" & vbTab & Me.ComboBox6.Value & vbTab & ""
                 End If
              End If
L_BK_END:
              On Error GoTo 0
           End If
        End If
        
        If SW_CLRKEEP = True And _
           (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) And _
           W_LEN > 0 Then
            With SHP.TextFrame.Characters(W_POS, W_LEN).Font
               If SW_DCB2 = True Then
                  .Bold = SW_DCB3
               End If
               If SW_DCI2 = True Then
                  .Italic = SW_DCI3
               End If
               If SW_DCU2 = True Then
                  If SW_DCU3 = True Then
                     .Underline = 2
                  Else
                     .Underline = -4142
                  End If
               End If
               If SW_DCK2 = True Then
                  .Strikethrough = SW_DCK3
               End If
               If SW_DCC2 = True Then
                  .Color = CLng(W_DCCLR2)
               End If
            End With
        End If
        W_ST = W_POS + W_LEN
        W_CNTFA = W_CNTFA + 1
     Else
        W_ST = W_ST + W_LN
     End If
  Next J
  Set MATCHES = Nothing

  If SW_ACEXE = True And _
     W_PROMTH <> "" Then
     Call ADDCMD_EXEC(SHP, 1)
  End If
  If W_SHPCNT = Sheets(S).Shapes.count Then
     If SW_ACEXE2 = True And _
        W_PROMTH2 <> "" Then
        Call ADDCMD_EXEC(SHP, 2)
     End If
  End If
  If W_SHPCNT = Sheets(S).Shapes.count Then
     If SW_ACEXE3 = True And _
        W_PROMTH3 <> "" Then
        Call ADDCMD_EXEC(SHP, 3)
     End If
  End If
  If W_SHPCNT > Sheets(S).Shapes.count Then
     I = I - 1
     W_SHPCNT = W_SHPCNT - 1
  End If

End Sub

Private Sub CommandButton25_Click()

  If SW_ANM = True Then
     Exit Sub
  End If
  
  On Error Resume Next
  Application.CommandBars("EREPU13").ShowPopup
  On Error GoTo 0

End Sub

Sub CommandButton25_Click1(Optional ByVal SW_SML As Boolean)
'|fffd|V|fffd|F|fffd|C|fffd|v|fffd|u|fffd||fffd|

  Dim S As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim W_FNDSTR As String

  Dim SS As Long
  Dim SW_SELS As Boolean
  
  Dim W_IDX As Long
  Dim W_ID As Long
  Dim W_NM As String
  Dim W_NM2 As String
  Dim N As Long
  
  Dim W_SHPCNT As Long
  
  Dim W_SML As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox6.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|L|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.MultiUserEditing = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't shape replace in share workbook.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|L|fffd|u|fffd|b|fffd|N|fffd||343|V|fffd|F|fffd|C|fffd|v|fffd|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox6.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False And _
        S <> ActiveSheet.Index Then
        GoTo LABEL_NEXT1
     End If
     If Sheets(S).ProtectContents = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Protected worksheet exists.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
        Sheets(S).Select
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
LABEL_NEXT1:
  Next S

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox6)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox6
     Call MK_DIC
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox7.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox7)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox7
        Call MK_DIC
     End If
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_ASK = Me.CheckBox12.Value
  
  W_CNTFA = 0
  W_CNTRA = 0
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False Then
        SW_SELS = False
        For SS = 1 To ActiveWindow.SelectedSheets.count
           If S = ActiveWindow.SelectedSheets(SS).Index Then
              SW_SELS = True
              Exit For
           End If
        Next SS
        If SW_SELS = False Then
           GoTo LABEL_NEXT2
        End If
     End If
     
     With Sheets(S)
        W_SHPCNT = .Shapes.count
        W_RET = 0
        For I = 1 To .Shapes.count
           If I > .Shapes.count Then
              Exit For
           End If
           Call SHP_REP(.Shapes(I), W_SHPCNT, S, W_ID, SW_SML)
           If W_RET = vbCancel Then
              GoTo LABEL_CANCEL
           End If
        Next I
     End With
LABEL_NEXT2:
  Next S

LABEL_CANCEL:
  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True

  If W_CNTFA = 0 Then
     If W_RET <> vbCancel Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't find any data to replace." & vbCrLf & _
                          "Check if your search formatting and criteria are defined correctly." & vbCrLf & _
                          "If you are sure that matching data exists in this workbook," & vbCrLf & _
                          "it may be on a protected sheet." & vbCrLf & _
                          "Can't replace data on a protected worksheet.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||38f||6c2||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||303|u|fffd|b|fffd|N|fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||70a9||fffd||fffd||fffd||7d5||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||341|A" & vbCrLf & _
                          "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||352|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
     End If
     If SW_SML = True Then
        ActiveWorkbook.Close False
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If SW_SML = True Then
        If Me.CheckBox49.Value = True Then
           W_SML = " simulation"
        Else
           W_SML = "|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|"
        End If
     Else
        W_SML = ""
     End If
     If W_CNTFA = W_CNTRA Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and has made " & W_CNTFA & " replacements" & W_SML & ".", vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd| " & W_CNTFA & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed " & W_CNTFA & " searches and has made " & W_CNTRA & " replacements" & W_SML & ".", vbInformation)
        Else
           W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(6)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton25_Click2()
'|fffd|S|fffd|u|fffd||fffd||fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|

  Dim W_EXT As String
  Dim W_FLNM As String
  Dim WB As Workbook


  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Simulation"
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If ActiveWorkbook.HasPassword = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't do simulation of this file.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||343|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If ActiveWorkbook.path = "" Then
     If Val(Application.Version) >= 12 Then
        W_EXT = ".xlsx"
     Else
        W_EXT = ".xls"
     End If
  Else
     W_EXT = Right$(ActiveWorkbook.Name, Len(ActiveWorkbook.Name) - InStrRev(ActiveWorkbook.Name, ".") + 1)
  End If
  
  If Me.CheckBox49.Value = True Then
     W_FLNM = ThisWorkbook.path & "\[Simulation]" & W_EXT
  Else
     W_FLNM = ThisWorkbook.path & "\|fffd|y|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|z" & W_EXT
  End If
  
  If Dir(W_FLNM) <> "" Then
     On Error Resume Next
     Kill W_FLNM
     On Error GoTo 0
  End If
  
  If Dir(W_FLNM) <> "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Simulation result file is opened.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||283|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  
  ActiveWorkbook.SaveCopyAs W_FLNM
  
  Set WB = Workbooks.Open(W_FLNM, False)
  WB.Activate
  
  Call CommandButton25_Click1(True)
  
  Application.ScreenUpdating = True
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub SHP_REP(SHP As Shape, W_SHPCNT As Long, ByVal S As Long, W_ID As Long, Optional ByVal SW_SML As Boolean)

  Dim W_SPLEN As Long
  Dim W_SPTXT As String
  Dim W_REPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long

  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String

  Dim W_FCIX As Long
  Dim W_SPCLR As String
  Dim AR_WK() As Variant
  Dim W_BOOL As Variant
  Dim W_SPDCB As String
  Dim W_SPDCI As String
  Dim W_SPDCU As String
  Dim W_SPDCK As String
  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant

  Dim W_SPTXTBK As String
  
  Dim W_STR As String
  Dim SW_FIND As Boolean
  
  Dim W_SHPNM As String
  Dim SC1 As Long
  Dim SC2 As Long
  Dim AR_SHP() As Shape
  Dim AR_ID() As Long
  Dim AR_IDA() As Long
  Dim SW_FINDID As Boolean
  Dim AR_IDX() As Variant

  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK2 As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String

  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String


  If SHP.Type = msoGroup Then
     If Val(Application.Version) >= 12 Then
        For I = 1 To SHP.GroupItems.count
           Call SHP_REP(SHP.GroupItems(I), W_SHPCNT, S, W_ID, SW_SML)
           If W_RET = vbCancel Then
              Exit Sub
           End If
        Next I
     Else
        If SW_SHPUR = False Then
           Exit Sub
        End If
        
        W_SHPNM = SHP.Name
        SC1 = ActiveSheet.Shapes.count
        ReDim AR_IDA(SC1)
        For I = 1 To SC1
           AR_IDA(I) = ActiveSheet.Shapes(I).ID
        Next I
        SHP.Ungroup
        SC2 = ActiveSheet.Shapes.count
        ReDim AR_SHP(SC2 - SC1 + 1)
        ReDim AR_ID(SC2 - SC1 + 1)
        K = 0
        For I = 1 To SC2
           SW_FINDID = False
           For J = 1 To UBound(AR_IDA)
              If ActiveSheet.Shapes(I).ID = AR_IDA(J) Then
                 SW_FINDID = True
                 Exit For
              End If
           Next J
           If SW_FINDID = False Then
              K = K + 1
              AR_ID(K) = ActiveSheet.Shapes(I).ID
              Set AR_SHP(K) = ActiveSheet.Shapes(I)
              If K = UBound(AR_ID) Then
                 Exit For
              End If
           End If
        Next I
        Erase AR_IDA
        
        For I = 1 To UBound(AR_SHP)
           Call SHP_REP(AR_SHP(I), W_SHPCNT, S, AR_ID(I), SW_SML)
           Set AR_SHP(I) = Nothing
        Next I
        
        Erase AR_SHP
        ReDim AR_IDX(SC2 - SC1 + 1)
        
        K = 0
        For I = 1 To ActiveSheet.Shapes.count
           For J = K + 1 To UBound(AR_ID)
              If ActiveSheet.Shapes(I).ID = AR_ID(J) Then
                 K = K + 1
                 AR_IDX(K) = I
                 Exit For
              End If
           Next J
           If K = UBound(AR_ID) Then
              Exit For
           End If
        Next I
        With ActiveSheet.Shapes.Range(AR_IDX()).Group
           On Error Resume Next
           .Name = W_SHPNM
           On Error GoTo 0
           W_ID = .ID
        End With
        Erase AR_ID
        Erase AR_IDX
     
     End If
     Exit Sub
  End If
  If SW_ALLSHP = True Then
  ElseIf SW_COMONLY = True Then
     If SHP.Type <> msoComment Then
        Exit Sub
     End If
  ElseIf SW_NOTCOM = True Then
     If SHP.Type = msoComment Then
        Exit Sub
     End If
  End If
  
  If Val(Application.Version) >= 12 And _
     SW_INCSA = True Then
     If SA_FIND(SHP, RE, NRE, SW_NR, 3, False, "", 0, S, SW_SML) = True Then
        If W_ASK = True And SW_SML = False Then
           If W_RET = vbCancel Then
              Exit Sub
           End If
        End If
        Exit Sub
     End If
  End If
  
  W_SPLEN = -1
  On Error Resume Next
  W_SPLEN = SHP.TextFrame.Characters.count
  On Error GoTo 0
  If W_SPLEN = -1 Then
     Exit Sub
  End If
  W_SPTXT = ""
  If W_SPLEN > 0 Then
     For K = 0 To Int(W_SPLEN / 255)
        W_ST = K * 255 + 1
        If (K + 1) * 255 <= W_SPLEN Then
           W_BYTE = 255
        Else
           W_BYTE = W_SPLEN - K * 255
        End If
        W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
        If (K + 1) * 255 = W_SPLEN Then
           Exit For
        End If
     Next K
  End If
  W_EVAR = W_SPTXT
  
  If SW_NR = False Then
     SW_WK = RE.Test(W_SPTXT)
  Else
     SW_WK = NRTEST(NRE, W_SPTXT)
  End If
  
  If SW_WK = False Then
     Exit Sub
  End If
  
  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_SPTXT)
     MAXJ = MATCHES.count - 1
     RE.Global = False
  Else
     AR_STR = Split(NREXE(NRE, W_SPTXT), vbCrLf)
     MAXJ = UBound(AR_STR)
     AR_RES = Split(NRRES(NRE, W_SPTXT, REPSTRCNV(Me.ComboBox7.Value)), Chr$(1))
     If UBound(AR_RES) = -1 Then
        ReDim AR_RES(0 To MAXJ)
     End If
  End If
  
  With SHP.TextFrame
     '|fffd|F|fffd||6d1||fffd|
     If Val(Application.Version) >= 12 Then
        W_FCIX = 99
        W_POS = 1
        W_SPCLR = ""
        For K = 1 To Len(W_SPTXT)
           If .Characters(K, 1).Font.Color <> W_FCIX Then
              If W_FCIX <> 99 Then
                 W_LEN = K - W_POS
                 If W_SPCLR = "" Then
                    W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                 Else
                    W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                 End If
              End If
              W_POS = K
              W_FCIX = .Characters(K, 1).Font.Color
           End If
           If K = Len(W_SPTXT) Then
              W_LEN = K - W_POS + 1
              If W_SPCLR = "" Then
                 W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
              Else
                 W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
              End If
           End If
        Next K
     Else
        If IsNull(.Characters.Font.ColorIndex) = True Then
           W_FCIX = 99
           W_POS = 1
           W_SPCLR = ""
           For K = 1 To Len(W_SPTXT)
              If .Characters(K, 1).Font.ColorIndex <> W_FCIX Then
                 If W_FCIX <> 99 Then
                    W_LEN = K - W_POS
                    If W_SPCLR = "" Then
                       W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                    Else
                       W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                    End If
                 End If
                 W_POS = K
                 W_FCIX = .Characters(K, 1).Font.ColorIndex
              End If
              If K = Len(W_SPTXT) Then
                 W_LEN = K - W_POS + 1
                 If W_SPCLR = "" Then
                    W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                 Else
                    W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                 End If
              End If
           Next K
        Else
           W_SPCLR = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.ColorIndex
        End If
     End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
     If IsNull(.Characters.Font.Bold) = True Then
        ReDim AR_WK(Len(W_SPTXT))
        For K = 1 To Len(W_SPTXT)
           AR_WK(K) = .Characters(K, 1).Font.Bold
        Next K
        W_BOOL = AR_WK(1)
        W_POS = 1
        W_SPDCB = ""
        For K = 1 To Len(W_SPTXT)
           If AR_WK(K) <> W_BOOL Then
              W_LEN = K - W_POS
              If W_SPDCB = "" Then
                 W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
              W_POS = K
              W_BOOL = AR_WK(K)
           End If
           If K = Len(W_SPTXT) Then
              W_LEN = K - W_POS + 1
              If W_SPDCB = "" Then
                 W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
           End If
        Next K
     Else
        W_SPDCB = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Bold
     End If
     '|fffd||391||315||6d1||fffd|
     If IsNull(.Characters.Font.Italic) = True Then
        ReDim AR_WK(Len(W_SPTXT))
        For K = 1 To Len(W_SPTXT)
           AR_WK(K) = .Characters(K, 1).Font.Italic
        Next K
        W_BOOL = AR_WK(1)
        W_POS = 1
        W_SPDCI = ""
        For K = 1 To Len(W_SPTXT)
           If AR_WK(K) <> W_BOOL Then
              W_LEN = K - W_POS
              If W_SPDCI = "" Then
                 W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
              W_POS = K
              W_BOOL = AR_WK(K)
           End If
           If K = Len(W_SPTXT) Then
              W_LEN = K - W_POS + 1
              If W_SPDCI = "" Then
                 W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
           End If
        Next K
     Else
        W_SPDCI = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Italic
     End If
     '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
     If IsNull(.Characters.Font.Underline) = True Then
        ReDim AR_WK(Len(W_SPTXT))
        For K = 1 To Len(W_SPTXT)
           AR_WK(K) = .Characters(K, 1).Font.Underline
        Next K
        W_BOOL = AR_WK(1)
        W_POS = 1
        W_SPDCU = ""
        For K = 1 To Len(W_SPTXT)
           If AR_WK(K) <> W_BOOL Then
              W_LEN = K - W_POS
              If W_SPDCU = "" Then
                 W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
              W_POS = K
              W_BOOL = AR_WK(K)
           End If
           If K = Len(W_SPTXT) Then
              W_LEN = K - W_POS + 1
              If W_SPDCU = "" Then
                 W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
           End If
        Next K
     Else
        W_SPDCU = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Underline
     End If
     '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
     If IsNull(.Characters.Font.Strikethrough) = True Then
        ReDim AR_WK(Len(W_SPTXT))
        For K = 1 To Len(W_SPTXT)
           AR_WK(K) = .Characters(K, 1).Font.Strikethrough
        Next K
        W_BOOL = AR_WK(1)
        W_POS = 1
        W_SPDCK = ""
        For K = 1 To Len(W_SPTXT)
           If AR_WK(K) <> W_BOOL Then
              W_LEN = K - W_POS
              If W_SPDCK = "" Then
                 W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
              W_POS = K
              W_BOOL = AR_WK(K)
           End If
           If K = Len(W_SPTXT) Then
              W_LEN = K - W_POS + 1
              If W_SPDCK = "" Then
                 W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
              Else
                 W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
              End If
           End If
        Next K
     Else
        W_SPDCK = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Strikethrough
     End If
  End With
  
  If W_CNTFA = 0 Then
     If ActiveWorkbook.path <> "" And _
        ActiveWorkbook.HasPassword = False And _
        ActiveWorkbook.ReadOnly = False And _
        ActiveWorkbook.FileFormat <> xlCSV And _
        ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
        DT = Date
        TM = time
        On Error GoTo L_BK_END
        If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
           On Error Resume Next
           W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                            ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
           On Error GoTo 0
           W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
           If RPDIC.Exists(W_CNV) = False Then
              RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
           End If
        End If
        ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
        W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
        If RPDIC.Exists(W_CNV) = False Then
           RPDIC.Add W_CNV, "SR" & vbTab & Me.ComboBox6.Value & vbTab & Me.ComboBox7.Value
        End If
     End If
L_BK_END:
     On Error GoTo 0
  End If
  
  '|fffd|m|fffd|F
  W_RET = vbYes
  If W_ASK = True And SW_SML = False Then
     '|fffd||fffd||fffd||fffd||fffd||3cd|X
     W_ST = 1
     For J = 0 To MAXJ
        If SW_NR = False Then
           W_FI = MATCHES.Item(J).FirstIndex
           W_LN = MATCHES.Item(J).Length
           W_VL = MATCHES.Item(J).Value
        Else
           AR_WK2 = Split(AR_STR(J), vbTab)
           W_FI = CLng(AR_WK2(0))
           W_LN = CLng(AR_WK2(1))
           W_VL = Mid$(W_SPTXT, W_FI + 1, W_LN)
           W_RS = AR_RES(J)
        End If
        
        SW_FIND = True
        If SW_FIND = True Then
           W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
           W_LEN = W_LN
           If SW_CLRKEEP = True And _
              (SW_DCB2 = True Or _
               SW_DCI2 = True Or _
               SW_DCU2 = True Or _
               SW_DCK2 = True Or _
               SW_DCC2 = True) Then
               With SHP.TextFrame.Characters(W_POS, W_LEN).Font
                  If SW_DCB2 = True Then
                     .Bold = SW_DCB3
                  End If
                  If SW_DCI2 = True Then
                     .Italic = SW_DCI3
                  End If
                  If SW_DCU2 = True Then
                     If SW_DCU3 = True Then
                        .Underline = 2
                     Else
                        .Underline = -4142
                     End If
                  End If
                  If SW_DCK2 = True Then
                     .Strikethrough = SW_DCK3
                  End If
                  If SW_DCC2 = True Then
                     .Color = CLng(W_DCCLR2)
                  End If
               End With
           End If
           W_ST = W_POS + W_LEN
        Else
           W_ST = W_ST + W_LN
        End If
     Next J
     
     Sheets(S).Select
     If SHP.Type = msoComment And _
        SHP.Visible = msoFalse Then
        SHP.Parent.Comments(1).Parent.Cells(1).Select
     Else
        SHP.Select
     End If
     Call REP_ASK(2)
     
     If SW_CLRKEEP = True And _
        (SW_DCB2 = True Or _
         SW_DCI2 = True Or _
         SW_DCU2 = True Or _
         SW_DCK2 = True Or _
         SW_DCC2 = True) Then
        '|fffd|F|fffd||7c2||fffd|
        If SW_DCC2 = True Then
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(W_SPCLR, ",")
           Else
              AR_ITEM = SPLIT97(W_SPCLR, ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              If Val(Application.Version) >= 12 Then
                 SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Color = CLng(AR_ITEM2(2))
              Else
                 SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.ColorIndex = CLng(AR_ITEM2(2))
              End If
           Next J
        End If
        '|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        If SW_DCB2 = True Then
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(W_SPDCB, ",")
           Else
              AR_ITEM = SPLIT97(W_SPDCB, ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Bold = CBool(AR_ITEM2(2))
           Next J
        End If
        '|fffd||391||316||7c2||fffd|
        If SW_DCI2 = True Then
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(W_SPDCI, ",")
           Else
              AR_ITEM = SPLIT97(W_SPDCI, ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Italic = CBool(AR_ITEM2(2))
           Next J
        End If
        '|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        If SW_DCU2 = True Then
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(W_SPDCU, ",")
           Else
              AR_ITEM = SPLIT97(W_SPDCU, ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Underline = CLng(AR_ITEM2(2))
           Next J
        End If
        '|fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        If SW_DCK2 = True Then
           If Val(Application.Version) >= 9 Then
              AR_ITEM = SPLIT2000(W_SPDCK, ",")
           Else
              AR_ITEM = SPLIT97(W_SPDCK, ",")
           End If
           For J = 0 To UBound(AR_ITEM)
              If Val(Application.Version) >= 9 Then
                 AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
              Else
                 AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
              End If
              SHP.TextFrame.Characters(CLng(AR_ITEM2(0)), CLng(AR_ITEM2(1))).Font.Strikethrough = CBool(AR_ITEM2(2))
           Next J
        End If
     End If
     
     If W_RET = vbCancel Then
        W_CNTFA = W_CNTFA + 1
        Exit Sub
     End If
     If W_RET = vbNo Then
        W_CNTFA = W_CNTFA + 1
        Exit Sub
     End If
  End If
  
  W_SPTXTBK = W_SPTXT
  W_ST = 1
  W_J = 0
  Erase AR_LEN0
  Erase AR_POS
  Erase AR_LEN
  For J = 0 To MAXJ
     If SW_NR = False Then
        W_FI = MATCHES.Item(J).FirstIndex
        W_LN = MATCHES.Item(J).Length
        W_VL = MATCHES.Item(J).Value
     Else
        AR_WK2 = Split(AR_STR(J), vbTab)
        W_FI = CLng(AR_WK2(0))
        W_LN = CLng(AR_WK2(1))
        W_VL = Mid$(W_SPTXTBK, W_FI + 1, W_LN)
        W_RS = AR_RES(J)
     End If
     
     SW_FIND = True
     If SW_FIND = True Then
        If RE.Pattern = "$" Then
           W_POS = Len(W_SPTXT) + 1
        Else
           If W_LN = 0 Then
              If J > 0 Then
                 W_ST = W_ST + 1
              End If
           End If
           W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
        End If
        W_LEN = W_LN
        W_CNTFA = W_CNTFA + 1
        W_J = W_J + 1
        ReDim Preserve AR_LEN0(W_J)
        AR_LEN0(W_J) = W_LEN
        ReDim Preserve AR_POS(W_J)
        AR_POS(W_J) = W_POS
        If W_POS - 1 > 0 Then
           If RE.Pattern = "$" Then
              W_STR1 = W_SPTXT
           Else
              W_STR1 = Left$(W_SPTXT, W_POS - 1)
           End If
        Else
           W_STR1 = ""
        End If
        If W_LEN = 0 Then
           W_STR2 = ""
        Else
           W_STR2 = Mid$(W_SPTXT, W_POS, W_LEN)
        End If
        If Len(W_SPTXT) - W_POS - W_LEN + 1 > 0 Then
           If RE.Pattern = "$" Then
              W_STR3 = ""
           Else
              W_STR3 = Right$(W_SPTXT, Len(W_SPTXT) - W_POS - W_LEN + 1)
           End If
        Else
           W_STR3 = ""
        End If
        
        SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
        If SW_SPREP = True Then
           W_STR2 = W_REPTXT
        Else
           If SW_NR = False Then
              W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(Me.ComboBox7.Value))
              W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
           Else
              W_STR2 = W_RS
           End If
           
           W_LEN = Len(W_STR2)
        End If
        ReDim Preserve AR_LEN(W_J)
        AR_LEN(W_J) = W_LEN
        W_SPTXT = W_STR1 & W_STR2 & W_STR3
        W_ST = W_POS + W_LEN
        W_CNTRA = W_CNTRA + 1
     Else
        W_ST = W_ST + W_LN
     End If
  Next J
  W_REPTXT = W_STR1 & W_STR2 & W_STR3
  Set MATCHES = Nothing
  RE.Global = True
  
  '|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
  On Error Resume Next
  If SHP.DrawingObject.Formula <> "" Then
     SHP.DrawingObject.Formula = ""
  End If
  On Error GoTo 0
  Do While SHP.TextFrame.Characters.count > 0 And _
           SHP.TextFrame.Characters.text <> vbLf
     If SHP.TextFrame.Characters.count > 255 Then
        W_BYTE = 255
     Else
        W_BYTE = SHP.TextFrame.Characters.count
     End If
     SHP.TextFrame.Characters(1, W_BYTE).text = ""
  Loop
  
  '|fffd|u|fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
  If Val(Application.Version) >= 12 Then
     SHP.TextFrame.Characters.text = W_REPTXT
  Else
     For K = 0 To Int(Len(W_REPTXT) / 255)
        W_ST = K * 255 + 1
        If (K + 1) * 255 <= Len(W_REPTXT) Then
           W_BYTE = 255
        Else
           W_BYTE = Len(W_REPTXT) - K * 255
        End If
           SHP.TextFrame.Characters(W_ST, W_BYTE).text = Mid$(W_REPTXT, W_ST, W_BYTE)
        If (K + 1) * 255 = Len(W_REPTXT) Then
           Exit For
        End If
     Next K
  End If
  
  If SW_CLRKEEP = True And _
     W_SPTXTBK <> "" Then
     Call KEEP_DC_SP(SHP, 1, W_SPDCB, SW_DCB2)
     Call KEEP_DC_SP(SHP, 2, W_SPDCI, SW_DCI2)
     Call KEEP_DC_SP(SHP, 3, W_SPDCU, SW_DCU2)
     Call KEEP_DC_SP(SHP, 4, W_SPDCK, SW_DCK2)
     Call KEEP_DC_SP(SHP, 5, W_SPCLR, SW_DCC2)
  End If
  
  Erase AR_POS
  Erase AR_LEN
  Erase AR_LEN0
  
  If SW_ACEXE = True And _
     W_PROMTH <> "" Then
     Call ADDCMD_EXEC(SHP, 1)
  End If
  If W_SHPCNT = Sheets(S).Shapes.count Then
     If SW_ACEXE2 = True And _
        W_PROMTH2 <> "" Then
        Call ADDCMD_EXEC(SHP, 2)
     End If
  End If
  If W_SHPCNT = Sheets(S).Shapes.count Then
     If SW_ACEXE3 = True And _
        W_PROMTH3 <> "" Then
        Call ADDCMD_EXEC(SHP, 3)
     End If
  End If

  If SW_SML = True Then
     With SHP.Fill
        .ForeColor.SchemeColor = 51
        .Patterned msoPatternLargeGrid
     End With
  End If
  
  If W_SHPCNT > Sheets(S).Shapes.count Then
     I = I - 1
     W_SHPCNT = W_SHPCNT - 1
  End If

End Sub

Sub CommandButton86_Click()
'|fffd|V|fffd|F|fffd|C|fffd|v|fffd|S|fffd|I|fffd||fffd|
  
  Dim S As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim W_FNDSTR As String
  
  Dim SS As Long
  Dim SW_SELS As Boolean

  Dim W_IDX As Long
  Dim W_ID As Long
  Dim W_NM As String
  Dim W_NM2 As String
  Dim N As Long


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Select all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox6.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|L|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.MultiUserEditing = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't shape select in share workbook.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|L|fffd|u|fffd|b|fffd|N|fffd||343|V|fffd|F|fffd|C|fffd|v|fffd|I|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If ActiveWindow.SelectedSheets.count > 1 Or _
     Me.CheckBox7.Value = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do all select for multiple worksheets", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox6.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False And _
        S <> ActiveSheet.Index Then
        GoTo LABEL_NEXT1
     End If
     If Sheets(S).ProtectContents = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Protected worksheet exists.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
        Sheets(S).Select
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
LABEL_NEXT1:
  Next S

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox6)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox6
     Call MK_DIC
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_CNTFA = 0
  
  For S = 1 To Sheets.count
     If Me.CheckBox7.Value = False Then
        SW_SELS = False
        For SS = 1 To ActiveWindow.SelectedSheets.count
           If S = ActiveWindow.SelectedSheets(SS).Index Then
              SW_SELS = True
              Exit For
           End If
        Next SS
        If SW_SELS = False Then
           GoTo LABEL_NEXT2
        End If
     End If
     
     With Sheets(S)
        For I = 1 To .Shapes.count
           Call SHP_SEL(.Shapes(I), S, True, W_ID)
        Next I
     End With
LABEL_NEXT2:
  Next S

  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True

  If W_CNTFA = 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox(W_CNTFA & " item(s) found.", vbInformation)
     Else
        W_RET = MsgBox(W_CNTFA & "|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(6)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub SHP_SEL(SHP As Shape, ByVal S As Long, ByVal SW_1ST As Boolean, W_ID As Long)

  Dim W_SPLEN As Long
  Dim W_SPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim I As Long
  Dim J As Long
  Dim K As Long
  
  Dim W_STR As String
  Dim SW_FIND As Boolean
  
  Dim W_CNTFABK As Long
  
  Dim W_SHPNM As String
  Dim SC1 As Long
  Dim SC2 As Long
  Dim AR_SHP() As Shape
  Dim AR_ID() As Long
  Dim AR_IDA() As Long
  Dim SW_FINDID As Boolean
  Dim AR_IDX() As Variant
  
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String


  If SHP.Type = msoGroup Then
     If SW_1ST = True Then
        W_CNTFABK = W_CNTFA
     End If

     If Val(Application.Version) >= 12 Then
        For I = 1 To SHP.GroupItems.count
           Call SHP_SEL(SHP.GroupItems(I), S, False, W_ID)
        Next I
     Else
        If SW_SHPUR = False Then
           Exit Sub
        End If
        
        W_SHPNM = SHP.Name
        SC1 = ActiveSheet.Shapes.count
        ReDim AR_IDA(SC1)
        For I = 1 To SC1
           AR_IDA(I) = ActiveSheet.Shapes(I).ID
        Next I
        SHP.Ungroup
        SC2 = ActiveSheet.Shapes.count
        ReDim AR_SHP(SC2 - SC1 + 1)
        ReDim AR_ID(SC2 - SC1 + 1)
        K = 0
        For I = 1 To SC2
           SW_FINDID = False
           For J = 1 To UBound(AR_IDA)
              If ActiveSheet.Shapes(I).ID = AR_IDA(J) Then
                 SW_FINDID = True
                 Exit For
              End If
           Next J
           If SW_FINDID = False Then
              K = K + 1
              AR_ID(K) = ActiveSheet.Shapes(I).ID
              Set AR_SHP(K) = ActiveSheet.Shapes(I)
              If K = UBound(AR_ID) Then
                 Exit For
              End If
           End If
        Next I
        Erase AR_IDA
        
        For I = 1 To UBound(AR_SHP)
           Call SHP_SEL(AR_SHP(I), S, False, AR_ID(I))
           Set AR_SHP(I) = Nothing
        Next I
        
        Erase AR_SHP
        ReDim AR_IDX(SC2 - SC1 + 1)
        
        K = 0
        For I = 1 To ActiveSheet.Shapes.count
           For J = K + 1 To UBound(AR_ID)
              If ActiveSheet.Shapes(I).ID = AR_ID(J) Then
                 K = K + 1
                 AR_IDX(K) = I
                 Exit For
              End If
           Next J
           If K = UBound(AR_ID) Then
              Exit For
           End If
        Next I
        With ActiveSheet.Shapes.Range(AR_IDX()).Group
           On Error Resume Next
           .Name = W_SHPNM
           On Error GoTo 0
           W_ID = .ID
        End With
        For I = 1 To ActiveSheet.Shapes.count
           If ActiveSheet.Shapes(I).ID = W_ID Then
              Set SHP = ActiveSheet.Shapes(I)
              Exit For
           End If
        Next I
        Erase AR_ID
        Erase AR_IDX
     End If
     
     If W_CNTFA > W_CNTFABK Then
        If SW_1ST = True Then
           W_CNTFA = W_CNTFABK
           If SHP.Type = msoComment And _
              SHP.Visible = msoFalse Then
           Else
              W_CNTFA = W_CNTFA + 1
              If W_CNTFA = 1 Then
                 SHP.Select
              Else
                 SHP.Select Replace:=False
              End If
           End If
        End If
     End If
     Exit Sub
  End If
  If SW_ALLSHP = True Then
  ElseIf SW_COMONLY = True Then
     If SHP.Type <> msoComment Then
        Exit Sub
     End If
  ElseIf SW_NOTCOM = True Then
     If SHP.Type = msoComment Then
        Exit Sub
     End If
  End If
  
  If Val(Application.Version) >= 12 And _
     SW_INCSA = True Then
     If SW_1ST = True Then
        W_CNTFABK = W_CNTFA
     End If
     If SA_FIND(SHP, RE, NRE, SW_NR, 2, False, "", 0, S) = True Then
        If W_CNTFA > W_CNTFABK Then
           If SW_1ST = True Then
              W_CNTFA = W_CNTFABK
              If SHP.Type = msoComment And _
                 SHP.Visible = msoFalse Then
              Else
                 W_CNTFA = W_CNTFA + 1
                 If W_CNTFA = 1 Then
                    SHP.Select
                 Else
                    SHP.Select Replace:=False
                 End If
              End If
           End If
        End If
        Exit Sub
     End If
  End If
  
  W_SPLEN = -1
  On Error Resume Next
  W_SPLEN = SHP.TextFrame.Characters.count
  On Error GoTo 0
  If W_SPLEN = -1 Then
     Exit Sub
  End If
  W_SPTXT = ""
  If W_SPLEN > 0 Then
     For K = 0 To Int(W_SPLEN / 255)
        W_ST = K * 255 + 1
        If (K + 1) * 255 <= W_SPLEN Then
           W_BYTE = 255
        Else
           W_BYTE = W_SPLEN - K * 255
        End If
        W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
        If (K + 1) * 255 = W_SPLEN Then
           Exit For
        End If
     Next K
  End If
  If Me.CheckBox32.Value = True Then
     W_SPTXT = Replace(W_SPTXT, vbLf, "")
  End If
  W_EVAR = W_SPTXT
  
  If SW_NR = False Then
     SW_WK = RE.Test(W_SPTXT)
  Else
     SW_WK = NRTEST(NRE, W_SPTXT)
  End If
  
  If SW_WK = False Then
     Exit Sub
  End If

  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_SPTXT)
     MAXJ = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_SPTXT), vbCrLf)
     MAXJ = UBound(AR_STR)
  End If
  
  W_ST = 1
  SW_FIND = False
  For J = 0 To MAXJ
     If SW_NR = False Then
        W_FI = MATCHES.Item(J).FirstIndex
        W_LN = MATCHES.Item(J).Length
        W_VL = MATCHES.Item(J).Value
     Else
        AR_WK = Split(AR_STR(J), vbTab)
        W_FI = CLng(AR_WK(0))
        W_LN = CLng(AR_WK(1))
        W_VL = Mid$(W_SPTXT, W_FI + 1, W_LN)
     End If
     
     SW_FIND = True
     If SW_FIND = True Then
        Exit For
     Else
        W_ST = W_ST + W_LN
     End If
  Next J
  Set MATCHES = Nothing
  If SW_FIND = True Then
     If SHP.Type = msoComment And _
        SHP.Visible = msoFalse Then
     Else
        W_CNTFA = W_CNTFA + 1
        If SW_1ST = True Then
           If W_CNTFA = 1 Then
              SHP.Select
           Else
              SHP.Select Replace:=False
           End If
        End If
     End If
  End If

End Sub

Private Sub KEEP_DC_SP(ByRef S As Object, ByVal W_DC As Long, ByVal W_SP As String, ByVal SW_DCCHG As Boolean)

  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  
  Dim AR_POS2() As Long
  Dim AR_LEN2() As Long
  Dim AR_CI2() As Variant
  Dim W_SPTXTBK As String

  Dim J As Long
  Dim K As Long
  Dim L As Long

  '|fffd||fffd||fffd||fffd||fffd|F|fffd||3cd|X
  If Val(Application.Version) >= 9 Then
     AR_ITEM = SPLIT2000(W_SP, ",")
  Else
     AR_ITEM = SPLIT97(W_SP, ",")
  End If
  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_CI2
  For J = 0 To UBound(AR_ITEM)
     If Val(Application.Version) >= 9 Then
        AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
     Else
        AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
     End If
     ReDim Preserve AR_POS2(J + 1)
     AR_POS2(J + 1) = CLng(AR_ITEM2(0))
     ReDim Preserve AR_LEN2(J + 1)
     AR_LEN2(J + 1) = CLng(AR_ITEM2(1))
     ReDim Preserve AR_CI2(J + 1)
     If W_DC = 3 Then
        If AR_ITEM2(2) = "False" Or AR_ITEM2(2) = "-4142" Then
           AR_CI2(J + 1) = -4142
        Else
           AR_CI2(J + 1) = 2
        End If
     ElseIf W_DC = 5 Then
        AR_CI2(J + 1) = CLng(AR_ITEM2(2))
        If AR_CI2(J + 1) = 74 Then
           AR_CI2(J + 1) = -4105
        End If
     Else
        AR_CI2(J + 1) = CBool(AR_ITEM2(2))
     End If
  Next J
           
  K = 1
  For J = 1 To W_J
     '|fffd|u|fffd||fffd||fffd|O|fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        Do While AR_POS2(K) <= AR_POS(J)
           If AR_POS2(K) < AR_POS(J) Then
              If AR_POS2(K) + AR_LEN2(K) - 1 >= AR_POS(J) Then
                 If AR_POS2(K) + AR_LEN2(K) > AR_POS(J) + AR_LEN0(J) Then
                    If AR_LEN0(J) = 0 Then
                    Else
                       ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                       ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                       ReDim Preserve AR_CI2(UBound(AR_CI2) + 1)
                       If UBound(AR_POS2) > K + 1 Then
                          For L = UBound(AR_POS2) To K + 2 Step -1
                             AR_POS2(L) = AR_POS2(L - 1)
                             AR_LEN2(L) = AR_LEN2(L - 1)
                             AR_CI2(L) = AR_CI2(L - 1)
                          Next L
                       End If
                       AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                       If UBound(AR_POS2) > K + 1 Then
                          AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                       Else
                          AR_LEN2(K + 1) = Len(W_SPTXTBK) + 1 - AR_POS2(K + 1)
                       End If
                       AR_CI2(K + 1) = AR_CI2(K)
                    End If
                 End If
                 AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
              End If
           Else
              If AR_LEN2(K) = AR_LEN0(J) Then
                 AR_LEN2(K) = AR_LEN(J)
              Else
                 If AR_LEN0(J) = 0 Then
                 Else
                    ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                    ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                    ReDim Preserve AR_CI2(UBound(AR_CI2) + 1)
                    If UBound(AR_POS2) > K + 1 Then
                       For L = UBound(AR_POS2) To K + 2 Step -1
                          AR_POS2(L) = AR_POS2(L - 1)
                          AR_LEN2(L) = AR_LEN2(L - 1)
                          AR_CI2(L) = AR_CI2(L - 1)
                       Next L
                    End If
                    AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                    If UBound(AR_POS2) > K + 1 Then
                       AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                    Else
                       AR_LEN2(K + 1) = Len(W_CLTXTBK) + 1 - AR_POS2(K + 1)
                    End If
                    AR_CI2(K + 1) = AR_CI2(K)
                 End If
                 If AR_LEN(J) = AR_LEN0(J) Then
                    AR_LEN2(K) = AR_LEN(J)
                 Else
                    AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
                 End If
              End If
           End If
           If AR_LEN2(K) > 0 Then
              Select Case W_DC
              Case 1
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
              Case 2
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
              Case 3
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Underline = AR_CI2(K)
              Case 4
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
              Case 5
                 If Val(Application.Version) >= 12 Then
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Color = AR_CI2(K)
                 Else
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.ColorIndex = AR_CI2(K)
                 End If
              End Select
           End If
           K = K + 1
           If K > UBound(AR_POS2) Then
              Exit Do
           End If
        Loop
     End If
     
     '|fffd|u|fffd||fffd||fffd|F|fffd||3cd|X
     If AR_LEN(J) > 0 And _
        SW_DCCHG = True Then
        Select Case W_DC
        Case 1
           S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Bold = SW_DCB3
        Case 2
           S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Italic = SW_DCI3
        Case 3
           If SW_DCU3 = True Then
              S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Underline = 2
           Else
              S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Underline = -4142
           End If
        Case 4
           S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Strikethrough = SW_DCK3
        Case 5
           S.TextFrame.Characters(AR_POS(J), AR_LEN(J)).Font.Color = CLng(W_DCCLR2)
        End Select
     End If
     For L = K To UBound(AR_POS2)
        AR_POS2(L) = AR_POS2(L) + AR_LEN(J) - AR_LEN0(J)
     Next L
     
     '|fffd|u|fffd||fffd||fffd||fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        If J + 1 <= W_J Then
           Do While AR_POS2(K) < AR_POS(J + 1)
              Select Case W_DC
              Case 1
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
              Case 2
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
              Case 3
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Underline = AR_CI2(K)
              Case 4
                 S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
              Case 5
                 If Val(Application.Version) >= 12 Then
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Color = AR_CI2(K)
                 Else
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.ColorIndex = AR_CI2(K)
                 End If
              End Select
              K = K + 1
              If K > UBound(AR_POS2) Then
                 Exit Do
              End If
           Loop
        Else
           Do While K <= UBound(AR_POS2)
              If AR_LEN2(K) > 0 Then
                 Select Case W_DC
                 Case 1
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Bold = AR_CI2(K)
                 Case 2
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Italic = AR_CI2(K)
                 Case 3
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Underline = AR_CI2(K)
                 Case 4
                    S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Strikethrough = AR_CI2(K)
                 Case 5
                    If Val(Application.Version) >= 12 Then
                       S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.Color = AR_CI2(K)
                    Else
                       S.TextFrame.Characters(AR_POS2(K), AR_LEN2(K)).Font.ColorIndex = AR_CI2(K)
                    End If
                 End Select
              End If
              K = K + 1
           Loop
        End If
     End If
  Next J
  
  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_CI2

End Sub

Private Sub CommandButton51_Click()
'|fffd|V|fffd|[|fffd|g|fffd|u|fffd||fffd|
  
  Dim W_FNDTXT As String
  Dim W_REPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim S As Long
  Dim I As Long
  Dim J As Long
  Dim W_FNDSTR As String

  Dim SW_TRGT As Boolean
  Dim SW_HIDE As Boolean
  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long

  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_J As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String

  Dim W_STR As String
  Dim SW_FIND As Boolean
  Dim SW_FINDA As Boolean
  
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  Dim W_FNDTXTBK As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace all"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox16.Value = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd||fffd||fffd|L|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.MultiUserEditing = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't sheet replace in share workbook.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|L|fffd|u|fffd|b|fffd|N|fffd||343|V|fffd|[|fffd|g|fffd|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox6.Value)
  If W_FNDSTR = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  For S = 1 To Sheets.count
     If Sheets(S).ProtectContents = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Protected worksheet exists.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
        Sheets(S).Select
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
LABEL_NEXT1:
  Next S

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox16.Value <> "" Then
     Call UPD_REFCOMBO(Me.ComboBox16)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox16
        Call MK_DIC
     End If
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox17.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox17)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox17
        Call MK_DIC
     End If
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_CNTFA = 0
  W_CNTRA = 0
  For S = 1 To Sheets.count
     With Sheets(S)
        SW_TRGT = True
        SW_HIDE = False
        If .Visible = xlHidden Or _
           .Visible = xlVeryHidden Then
           If Me.CheckBox55.Value = True Then
              SW_HIDE = True
           Else
              SW_TRGT = False
           End If
        End If
        If SW_TRGT = True Then
           If TypeName(Sheets(S)) <> "Worksheet" Then
           Else
              Call RANGE_GET(.UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
              If W_USR = 1 And _
                 W_USC = 1 And _
                 W_UER = 1 And _
                 W_UEC = 1 And _
                 .Cells(1, 1).Value = "" Then
                 If Me.CheckBox54.Value = False Then
                    SW_TRGT = False
                 End If
              End If
           End If
        End If
        If SW_TRGT = False Then
           GoTo LABEL_NEXT
        End If
        
        If Me.OptionButton4.Value = True Then
           W_FNDTXT = .Name
        ElseIf Me.OptionButton5.Value = True Then
           W_FNDTXT = .PageSetup.LeftHeader
        ElseIf Me.OptionButton6.Value = True Then
           W_FNDTXT = .PageSetup.CenterHeader
        ElseIf Me.OptionButton7.Value = True Then
           W_FNDTXT = .PageSetup.RightHeader
        ElseIf Me.OptionButton8.Value = True Then
           W_FNDTXT = .PageSetup.LeftFooter
        ElseIf Me.OptionButton9.Value = True Then
           W_FNDTXT = .PageSetup.CenterFooter
        ElseIf Me.OptionButton10.Value = True Then
           W_FNDTXT = .PageSetup.RightFooter
        End If
        
        If W_FNDSTR = "" Then
           If W_FNDTXT <> "" Then
           Else
              W_CNTFA = W_CNTFA + 1
              W_REPTXT = REPSTRCNV(Me.ComboBox17.Value)
              On Error Resume Next
              If Me.OptionButton5.Value = True Then
                 .PageSetup.LeftHeader = W_REPTXT
              ElseIf Me.OptionButton6.Value = True Then
                 .PageSetup.CenterHeader = W_REPTXT
              ElseIf Me.OptionButton7.Value = True Then
                 .PageSetup.RightHeader = W_REPTXT
              ElseIf Me.OptionButton8.Value = True Then
                 .PageSetup.LeftFooter = W_REPTXT
              ElseIf Me.OptionButton9.Value = True Then
                 .PageSetup.CenterFooter = W_REPTXT
              ElseIf Me.OptionButton10.Value = True Then
                 .PageSetup.RightFooter = W_REPTXT
              End If
              If Err.Number = 0 Then
                 W_CNTRA = W_CNTRA + 1
              End If
              On Error GoTo LABEL_REP
           End If
           GoTo LABEL_NEXT
        End If
        
        If SW_NR = False Then
           SW_WK = RE.Test(W_FNDTXT)
        Else
           SW_WK = NRTEST(NRE, W_FNDTXT)
        End If
        
        If SW_WK = False Then
           GoTo LABEL_NEXT
        End If
           
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_FNDTXT)
           MAXJ = MATCHES.count - 1
           RE.Global = False
        Else
           AR_STR = Split(NREXE(NRE, W_FNDTXT), vbCrLf)
           MAXJ = UBound(AR_STR)
           AR_RES = Split(NRRES(NRE, W_FNDTXT, REPSTRCNV(Me.ComboBox17.Value)), Chr$(1))
           If UBound(AR_RES) = -1 Then
              ReDim AR_RES(0 To MAXJ)
           End If
        End If
           
        W_ST = 1
        W_J = 0
        SW_FINDA = False
        W_FNDTXTBK = W_FNDTXT
        For J = 0 To MAXJ
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
              W_VL = MATCHES.Item(J).Value
           Else
              AR_WK = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK(0))
              W_LN = CLng(AR_WK(1))
              W_VL = Mid$(W_FNDTXTBK, W_FI + 1, W_LN)
              W_RS = AR_RES(J)
           End If
           
           SW_FIND = True
           
           If SW_FIND = True Then
              SW_FINDA = True
              If RE.Pattern = "$" Then
                 W_POS = Len(W_FNDTXT) + 1
              Else
                 If Len(W_LN) = 0 Then
                    If J > 0 Then
                       W_ST = W_ST + 1
                    End If
                 End If
                 W_POS = InStr(W_ST, W_FNDTXT, W_VL, vbBinaryCompare)
              End If
              W_LEN = W_LN
              W_J = W_J + 1
              If W_POS - 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR1 = W_FNDTXT
                 Else
                    W_STR1 = Left$(W_FNDTXT, W_POS - 1)
                 End If
              Else
                 W_STR1 = ""
              End If
              If W_LEN = 0 Then
                 W_STR2 = ""
              Else
                 W_STR2 = Mid$(W_FNDTXT, W_POS, W_LEN)
              End If
              If Len(W_FNDTXT) - W_POS - W_LEN + 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR3 = ""
                 Else
                    W_STR3 = Right$(W_FNDTXT, Len(W_FNDTXT) - W_POS - W_LEN + 1)
                 End If
              Else
                 W_STR3 = ""
              End If
              
              SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
              If SW_SPREP = True Then
                 W_STR2 = W_REPTXT
              Else
                 If SW_NR = False Then
                    W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(Me.ComboBox17.Value))
                    W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
                 Else
                    W_STR2 = W_RS
                 End If
                 W_LEN = Len(W_STR2)
              End If
              W_FNDTXT = W_STR1 & W_STR2 & W_STR3
              W_ST = W_POS + W_LEN
           Else
              W_ST = W_ST + W_LN
           End If
        Next J
        If SW_FINDA = True Then
           W_CNTFA = W_CNTFA + 1
        End If
        W_REPTXT = W_STR1 & W_STR2 & W_STR3
        Set MATCHES = Nothing
        RE.Global = True
           
        On Error Resume Next
        If Me.OptionButton4.Value = True Then
           .Name = W_REPTXT
        ElseIf Me.OptionButton5.Value = True Then
           .PageSetup.LeftHeader = W_REPTXT
        ElseIf Me.OptionButton6.Value = True Then
           .PageSetup.CenterHeader = W_REPTXT
        ElseIf Me.OptionButton7.Value = True Then
           .PageSetup.RightHeader = W_REPTXT
        ElseIf Me.OptionButton8.Value = True Then
           .PageSetup.LeftFooter = W_REPTXT
        ElseIf Me.OptionButton9.Value = True Then
           .PageSetup.CenterFooter = W_REPTXT
        ElseIf Me.OptionButton10.Value = True Then
           .PageSetup.RightFooter = W_REPTXT
        End If
        If Err.Number = 0 Then
            W_CNTRA = W_CNTRA + 1
        End If
        On Error GoTo LABEL_REP

     End With
LABEL_NEXT:
  Next S

  Set NRE = Nothing
  Set RE = Nothing

  If W_CNTFA = 0 Then
     If W_RET <> vbCancel Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't find any data to replace." & vbCrLf & _
                          "Check if your search formatting and criteria are defined correctly." & vbCrLf & _
                          "If you are sure that matching data exists in this workbook," & vbCrLf & _
                          "it may be on a protected sheet." & vbCrLf & _
                          "Can't replace data on a protected worksheet.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||38f||6c2||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||303|u|fffd|b|fffd|N|fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||70a9||fffd||fffd||fffd||7d5||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||341|A" & vbCrLf & _
                          "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||352|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If W_CNTRA = W_CNTFA Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and has made " & W_CNTFA & " replacements.", vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd| " & W_CNTFA & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed " & W_CNTFA & " searches and has made " & W_CNTRA & " replacements." & vbCrLf & _
                          "Targets that can't be replaced because of error after replace exist.", vbExclamation)
         Else
           W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd|u|fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
         End If
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(12)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton272_Click()
'|fffd|V|fffd|[|fffd|gGrep|fffd|u|fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim W_GREP As String

  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date

  Dim SW_NRML As Boolean
  Dim W_FW As String

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Grep replace"
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox16.Value = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox16.Value)
  If W_FNDSTR = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.TextBox42.Value = "" Then
     W_FFILE = "*" & Me.Label316.Caption
     W_FFILE2 = "*.xls"
  Else
     W_FFILE = Me.TextBox42.Value & Me.Label316.Caption
     W_FFILE2 = Me.TextBox42.Value & ".xls"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox60.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If Me.ComboBox60.Visible = True Then
        Me.ComboBox60.SetFocus
     End If
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox60.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If Me.ComboBox60.Visible = True Then
           Me.ComboBox60.SetFocus
        End If
        If Val(Application.Version) >= 15 And _
           Application.Visible = True Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           Me.ComboBox16.SetFocus
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = True Then
     If Me.CheckBox49.Value = True Then
        If MsgBox("Will do sheet grep replace.", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     Else
        If MsgBox("|fffd|V|fffd|[|fffd|gGrep|fffd|u|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     End If
  End If

  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Application.ScreenUpdating = False
  
  STIME = time
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_DIRCOMBO(Me.ComboBox20)
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox16)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox16
     Call MK_DIC
  End If

  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REPCOMBO(Me.ComboBox17)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.ComboBox17.Value <> "" Then
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox17
        Call MK_DIC
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grepB.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  Else
     Me.CommandButton270.Enabled = False
     Me.CommandButton271.Enabled = False
     Me.CommandButton51.Enabled = False
     Me.CommandButton272.Enabled = False
     Me.CommandButton274.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton273.Enabled = True
     Me.CommandButton273.SetFocus
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S1
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 90
        .Range(.Columns(2), .Columns(4)).WrapText = True
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Replace with"
           .Cells(3, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(3, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox16.Value
        .Cells(2, 3).Value = "'" & Me.ComboBox17.Value
        If Me.TextBox42.Value = "" Then
           .Cells(3, 3).Value = "*" & Me.Label316.Caption
        Else
           .Cells(3, 3).Value = "'" & Me.TextBox42.Value & Me.Label316.Caption
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(4, 2).Value = "Target folder"
           .Cells(5, 2).Value = "Target"
        Else
           .Cells(4, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
           .Cells(5, 2).Value = "|fffd||38f||fffd|"
        End If
        .Cells(4, 3).Value = Me.ComboBox60.Value
        If Me.OptionButton4.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton4.Caption
        ElseIf Me.OptionButton5.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton5.Caption
        ElseIf Me.OptionButton6.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton6.Caption
        ElseIf Me.OptionButton7.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton7.Caption
        ElseIf Me.OptionButton8.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton8.Caption
        ElseIf Me.OptionButton9.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton9.Caption
        ElseIf Me.OptionButton10.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton10.Caption
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(7, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(7, 2).Value = "File"
           .Cells(7, 3).Value = "Sheet"
           .Cells(7, 4).Value = "Value"
        Else
           .Cells(7, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(7, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(7, 4).Value = "|fffd|l"
        End If
        .Range(.Cells(7, 1), .Cells(7, 4)).Borders.LineStyle = True
        .Range(.Cells(7, 1), .Cells(7, 4)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 7
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  SW_PRA = False
  W_CNTFA = 0
  W_CNTRA = 0
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox60.Value)
     End If
  Else
     Call FCNT(Me.ComboBox60.Value)
  End If
  
  W_MAXP = 5
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox60.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grep9_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\grep9.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
     End If
     
     Call SHT_GREP(Me.ComboBox60.Value, True, W_FNDSTR)
     
L_AFT_G:
     
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  Else
     Me.CommandButton270.Enabled = True
     Me.CommandButton271.Enabled = True
     Me.CommandButton51.Enabled = True
     Me.CommandButton272.Enabled = True
     Me.CommandButton274.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton273.Enabled = False
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  Set NRE = Nothing
  Set RE = Nothing
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(5, 3)).Value
         .Range(.Cells(1, 3), .Cells(5, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(5, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
               If InStr(AR_OPE(I), vbTab) > 0 Then
                  .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
               Else
                  .Cells(FR, 1).Value = AR_OPE(I)
               End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
        .Cells(1, 1).Value = W_CNTRA
        .Cells(1, 2).Value = W_CNTFA
        .Cells(1, 3).Value = SW_PRA
     End With
     Set XL1 = Nothing
     
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If

  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           W_CNTRA = W_CNTRA + .Worksheets(I + 1).Cells(1, 1).Value
           W_CNTFA = W_CNTFA + .Worksheets(I + 1).Cells(1, 2).Value
           If SW_PRA = False Then
              SW_PRA = .Worksheets(I + 1).Cells(1, 3).Value
           End If
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 4))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 4), .Cells(FR + FR2 - 1, 4)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 4)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 7
                    ADDR2 = ""
                    On Error Resume Next
                    ADDR1 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Hyperlinks(1).Address
                    ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Hyperlinks(1).SubAddress
                    .Hyperlinks.Add .Cells(J, 4), ADDR1, ADDR2
                    On Error GoTo 0
                    .Cells(J, 4).Interior.ColorIndex = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Interior.ColorIndex
                 Next J
              End With
           End If
        Next I
     
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 7 Then
           .Range(.Cells(8, 2), .Cells(FR, 6)).Sort Key1:=.Cells(8, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(5, 3)).Value
        .Range(.Cells(1, 3), .Cells(5, 3)).ClearContents
        .Columns(1).AutoFit
        .Range(.Cells(7, 1), .Cells(FR, 4)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(5, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
     Application.WindowState = xlNormal
  End If
 
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption
  
  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 7 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If W_CNTRA = W_CNTFA Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                          vbCrLf & _
                          "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "File: " & W_FCNT, vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          vbCrLf & _
                          "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                          "Sheets that can't be replaced exist." & vbCrLf & _
                          vbCrLf & _
                          "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "File: " & W_FCNT, vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|" & vbCrLf & _
                          vbCrLf & _
                          "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
        End If
     End If
     If SW_PRA = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Sheets that can't be serarched because of protection exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7cc||fffd||fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
     End If
  End If

  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If

  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(12)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton9.Enabled = True
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton274_Click()
'|fffd|V|fffd|[|fffd|gGrep
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim W_GREP As String

  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date

  Dim SW_NRML As Boolean
  Dim W_FW As String

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Grep replace"
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox16.Value = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox16.Value)
  If W_FNDSTR = "" Then
     If Me.OptionButton4.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Can't empty ""Find what"" when select ""Sheet name"".", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.TextBox42.Value = "" Then
     W_FFILE = "*" & Me.Label316.Caption
     W_FFILE2 = "*.xls"
  Else
     W_FFILE = Me.TextBox42.Value & Me.Label316.Caption
     W_FFILE2 = Me.TextBox42.Value & ".xls"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox60.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If Me.ComboBox60.Visible = True Then
        Me.ComboBox60.SetFocus
     End If
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox60.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If Me.ComboBox60.Visible = True Then
           Me.ComboBox60.SetFocus
        End If
        If Val(Application.Version) >= 15 And _
           Application.Visible = True Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           Me.ComboBox16.SetFocus
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing

  Application.ScreenUpdating = False
  
  STIME = time
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_DIRCOMBO(Me.ComboBox20)
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox16)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox16
     Call MK_DIC
  End If

  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grepD.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  Else
     Me.CommandButton270.Enabled = False
     Me.CommandButton271.Enabled = False
     Me.CommandButton51.Enabled = False
     Me.CommandButton272.Enabled = False
     Me.CommandButton274.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton273.Enabled = True
     Me.CommandButton273.SetFocus
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S1
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 90
        .Range(.Columns(2), .Columns(4)).WrapText = True
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Replace with"
           .Cells(3, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(3, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox16.Value
        .Cells(2, 3).Value = "'" & Me.ComboBox17.Value
        If Me.TextBox42.Value = "" Then
           .Cells(3, 3).Value = "*" & Me.Label316.Caption
        Else
           .Cells(3, 3).Value = "'" & Me.TextBox42.Value & Me.Label316.Caption
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(4, 2).Value = "Target folder"
           .Cells(5, 2).Value = "Target"
        Else
           .Cells(4, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
           .Cells(5, 2).Value = "|fffd||38f||fffd|"
        End If
        .Cells(4, 3).Value = Me.ComboBox60.Value
        If Me.OptionButton4.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton4.Caption
        ElseIf Me.OptionButton5.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton5.Caption
        ElseIf Me.OptionButton6.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton6.Caption
        ElseIf Me.OptionButton7.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton7.Caption
        ElseIf Me.OptionButton8.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton8.Caption
        ElseIf Me.OptionButton9.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton9.Caption
        ElseIf Me.OptionButton10.Value = True Then
           .Cells(5, 3).Value = Me.OptionButton10.Caption
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(7, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(7, 2).Value = "File"
           .Cells(7, 3).Value = "Sheet"
           .Cells(7, 4).Value = "Value"
        Else
           .Cells(7, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(7, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(7, 4).Value = "|fffd|l"
        End If
        .Range(.Cells(7, 1), .Cells(7, 4)).Borders.LineStyle = True
        .Range(.Cells(7, 1), .Cells(7, 4)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 7
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  SW_PRA = False
  W_CNTFA = 0
  W_CNTRA = 0
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox60.Value)
     End If
  Else
     Call FCNT(Me.ComboBox60.Value)
  End If
  
  W_MAXP = 5
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox60.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grepA_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\grepA.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
     End If
     
     Call SHT_GREP(Me.ComboBox60.Value, False, W_FNDSTR)
     
L_AFT_G:
     
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  Else
     Me.CommandButton270.Enabled = True
     Me.CommandButton271.Enabled = True
     Me.CommandButton51.Enabled = True
     Me.CommandButton272.Enabled = True
     Me.CommandButton274.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton273.Enabled = False
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  Set NRE = Nothing
  Set RE = Nothing
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(5, 3)).Value
         .Range(.Cells(1, 3), .Cells(5, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(5, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
               If InStr(AR_OPE(I), vbTab) > 0 Then
                  .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
               Else
                  .Cells(FR, 1).Value = AR_OPE(I)
               End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
        .Cells(1, 1).Value = W_CNTRA
        .Cells(1, 2).Value = W_CNTFA
        .Cells(1, 3).Value = SW_PRA
     End With
     Set XL1 = Nothing
     
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If

  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           W_CNTRA = W_CNTRA + .Worksheets(I + 1).Cells(1, 1).Value
           W_CNTFA = W_CNTFA + .Worksheets(I + 1).Cells(1, 2).Value
           If SW_PRA = False Then
              SW_PRA = .Worksheets(I + 1).Cells(1, 3).Value
           End If
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 4))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 4), .Cells(FR + FR2 - 1, 4)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 4)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 7
                    ADDR2 = ""
                    On Error Resume Next
                    ADDR1 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Hyperlinks(1).Address
                    ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Hyperlinks(1).SubAddress
                    .Hyperlinks.Add .Cells(J, 4), ADDR1, ADDR2
                    On Error GoTo 0
                    .Cells(J, 4).Interior.ColorIndex = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Interior.ColorIndex
                 Next J
              End With
           End If
        Next I
     
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 7 Then
           .Range(.Cells(8, 2), .Cells(FR, 6)).Sort Key1:=.Cells(8, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(5, 3)).Value
        .Range(.Cells(1, 3), .Cells(5, 3)).ClearContents
        .Columns(1).AutoFit
        .Range(.Cells(7, 1), .Cells(FR, 4)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(5, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
     Application.WindowState = xlNormal
  End If
 
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption
  
  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 7 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If

  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(12)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton9.Enabled = True
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton39_Click()
'|fffd|V|fffd|F|fffd|C|fffd|vGrep
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim W_GREP As String
  
  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date

  Dim SW_NRML As Boolean
  Dim W_FW As String

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean

  Dim W_CELL As String
  Dim MATCHES As Object
  Dim MAXJ As Long
  Dim AR_STR As Variant
  Dim W_ST As Long
  Dim SW_FIND As Boolean
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim AR_WK2 As Variant
  Dim W_STR As String
  Dim SW_1ST As Boolean

  Dim W_CELLBK As String
  Dim W_TEXT As String
  Dim L As Long
  Dim W_CNT As Long

  Dim W_SW_CNV As String
     
  Dim T As Long
  Dim SW_TH1ST As Boolean
  Dim AR_WK As Variant
  Dim W_PSTR As String
     

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Grep"
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If W_GREPTH <> "" Then
  ElseIf Me.ComboBox15.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If W_GREPTH <> "" Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf Application.Visible = True Then
        AR_WK = Split(W_GREPTH, vbTab)
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .IgnoreCase = Not Me.CheckBox1.Value
           .Global = True
        End With
        
        For T = 0 To UBound(AR_WK)
           If AR_WK(T) <> "" Then
              RE.Pattern = AR_WK(T)
              W_PSTR = ""
              On Error Resume Next
              W_PSTR = CStr(RE.Test(" "))
              On Error GoTo LABEL_REP
              If W_PSTR = "" Then
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Error exists in find pattern in thread. Check.")
                 Else
                    W_RET = MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||30c||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
                 End If
                 Set RE = Nothing
                 Call COMBO_FOCUS
                 If Val(Application.Version) >= 15 Then
                    Call SETTM_UF
                 End If
                 W_CLKBTN = ""
                 Exit Sub
              End If
           End If
        Next T
        Set RE = Nothing
        
        If Me.CheckBox49.Value = True Then
           If MsgBox("Thread is input.", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        Else
           If MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        End If
        T = 0
        SW_TH1ST = True
     ElseIf SW_HSGREP = True And _
        W_PNO = 0 Then
        T = 0
        AR_WK = Split(W_GREPTH, vbTab)
        SW_TH1ST = True
     End If
  End If

L_GREPTHS:
  
  If W_GREPTH <> "" Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf T > UBound(AR_WK) Then
        GoTo L_GREPTHE
     Else
        If AR_WK(T) = "" Then
           T = T + 1
           GoTo L_GREPTHS
        Else
           Me.ComboBox15.Value = AR_WK(T)
        End If
     End If
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox15.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox64.Value = True Then
  ElseIf Me.TextBox8.Value = "" Then
     W_FFILE = "*" & Me.Label38.Caption
     W_FFILE2 = "*.xls"
     W_FFILE3 = "*.zip"
  Else
     W_FFILE = Me.TextBox8.Value & Me.Label38.Caption
     W_FFILE2 = Me.TextBox8.Value & ".xls"
     W_FFILE3 = "*.zip"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.CheckBox64.Value = True Then
  ElseIf Me.ComboBox20.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If Me.ComboBox20.Visible = True Then
        If SW_CLASSIC2 = True Then
           Me.ComboBox20.SetFocus
        End If
     End If
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox20.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If Me.ComboBox20.Visible = True Then
           If SW_CLASSIC2 = True Then
              Me.ComboBox20.SetFocus
           End If
        End If
        If Val(Application.Version) >= 15 And _
           Application.Visible = True Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  '|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox64.Value = True Then
     If WINDOWCHK = False Then
        Call COMBO_FOCUS
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     If Me.CheckBox64.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for open files." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||251||382||fffd||fffd||102||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox15.SetFocus
           End If
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     If Me.CheckBox16.Value = True And _
        Me.CheckBox60.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for ZIP archive search." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("ZIP|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox15.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox15.SetFocus
           End If
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If

  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Application.ScreenUpdating = False
  
  If W_GREPTH <> "" And _
     SW_TH1ST = False Then
  Else
     STIME = time
  End If
  
  If SW_HSGREP = True Then
     SW_NRML = False
     W_NMLCHK = ""
     
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(Me.ComboBox15.Value) = False Then
        SW_NRML = True
     End If
     Set RE = Nothing
  
     If SW_NRML = False Then
        W_NMLCHK = NRML_CHK(Me.ComboBox15.Value, 1, True)
     End If
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox64.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox20)
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox15)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox15
     Call MK_DIC
  End If

  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If

  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grep3.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  ElseIf W_GREPTH <> "" And SW_TH1ST = False Then
  Else
     Me.CommandButton40.Enabled = False
     Me.CommandButton265.Enabled = False
     Me.CommandButton39.Enabled = False
     Me.CommandButton42.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton41.Enabled = True
     Me.ToggleButton20.Enabled = False
     If SW_CLASSIC2 = True Then
        Me.CommandButton41.SetFocus
     End If
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S1
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 15
        .Columns(5).ColumnWidth = 90
        .Range(.Columns(2), .Columns(5)).WrapText = True
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox15.Value
        If Me.CheckBox64.Value = True Then
        ElseIf Me.TextBox3.Value = "" Then
           .Cells(2, 3).Value = "*" & Me.Label38.Caption
        Else
           .Cells(2, 3).Value = "'" & Me.TextBox8.Value & Me.Label38.Caption
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(3, 2).Value = "Target Folder"
        Else
           .Cells(3, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
        End If
        If Me.CheckBox64.Value = False Then
           .Cells(3, 3).Value = Me.ComboBox20.Value
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(5, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(5, 2).Value = "File"
           .Cells(5, 3).Value = "Sheet"
           .Cells(5, 4).Value = "Name"
           .Cells(5, 5).Value = "Value"
        Else
           .Cells(5, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(5, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(5, 4).Value = "|fffd||fffd||fffd|O"
           .Cells(5, 5).Value = "|fffd|l"
        End If
        .Range(.Cells(5, 1), .Cells(5, 5)).Borders.LineStyle = True
        .Range(.Cells(5, 1), .Cells(5, 5)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox20.Value)
     End If
  Else
     Call FCNT(Me.ComboBox20.Value)
  End If
  
  W_MAXP = 5
  
  If Me.CheckBox207.Value = True Then
     W_SW_CNV = Me.ComboBox15.Value
     If SW_NRML = True Then
        W_SW_CNV = SWING_CNV(Me.ComboBox15.Value)
     ElseIf W_NMLCHK <> "" Then
        W_SW_CNV = SWING_CNV(W_NMLCHK)
        W_SW_CNV = Replace(Me.ComboBox15.Value, W_NMLCHK, W_SW_CNV)
     End If
     If W_SW_CNV <> Me.ComboBox15.Value Then
        SW_NR = False
  
        SW_NRML = False
        W_NMLCHK = ""
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_SW_CNV) = False Then
           SW_NRML = True
        End If
        Set RE = Nothing
        
        If SW_NRML = True Then
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_SW_CNV
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        Else
           W_NMLCHK = NRML_CHK(W_SW_CNV, 1, True)
        End If
  
        If SW_NRML = False Then
           '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
           W_FNDSTR = FNDSTRCNV3(W_SW_CNV)
   
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_FNDSTR
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        End If
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox20.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grep7_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\grep7.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
        If SW_NRML = False And _
           W_NMLCHK = "" Then
        ElseIf SW_ALLSHP = False Then
        ElseIf SW_INCSA = False Then
        Else
           If W_NMLCHK <> "" Then
              W_FW = W_NMLCHK
           Else
              W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
           End If
           If W_FW Like "*[A-Z]*" And _
              Me.CheckBox1.Value = True Then
           Else
              Call READ_IDX(True)
           End If
        End If
     End If
     
     Call SHP_GREP(Me.ComboBox20.Value, False, False, SW_NRML)

L_AFT_G:
     
     If W_ZPATH <> "" Then
        Set FSO = CreateObject("Scripting.FileSystemObject")
        If FSO.FolderExists(W_UZPATH) Then
           FSO.DeleteFolder W_UZPATH, True
        End If
        Set FSO = Nothing
        W_ZPATH = ""
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  ElseIf W_GREPTH <> "" Then
     If T < UBound(AR_WK) Then
     Else
        Me.CommandButton40.Enabled = True
        Me.CommandButton265.Enabled = True
        Me.CommandButton39.Enabled = True
        Me.CommandButton42.Enabled = True
        Me.CommandButton9.Enabled = True
        Me.CommandButton41.Enabled = False
        Me.ToggleButton20.Enabled = True
        Me.MultiPage1.Pages("Page1").Enabled = True
        Me.MultiPage1.Pages("Page2").Enabled = True
        Me.MultiPage1.Pages("Page3").Enabled = True
        Me.MultiPage1.Pages("Page4").Enabled = True
        Me.MultiPage1.Pages("Page5").Enabled = True
        Me.MultiPage1.Pages("Page6").Enabled = True
        Me.MultiPage1.Pages("Page7").Enabled = True
        Me.MultiPage1.Pages("Page8").Enabled = True
        Me.MultiPage1.Pages("Page9").Enabled = True
        Me.MultiPage1.Pages("Page10").Enabled = True
        Me.MultiPage1.Pages("Page11").Enabled = True
        Me.MultiPage1.Pages("Page12").Enabled = True
        Me.MultiPage1.Pages("Page13").Enabled = True
        Me.MultiPage1.Pages("Page14").Enabled = True
        Me.MultiPage1.Pages("Page15").Enabled = True
        Me.MultiPage1.Pages("Page16").Enabled = True
        Me.MultiPage1.Pages("Page17").Enabled = True
        Me.MultiPage1.Pages("Page18").Enabled = True
        Me.MultiPage1.Pages("Page19").Enabled = True
        Me.MultiPage1.Pages("Page20").Enabled = True
        Me.MultiPage1.Tag = ""
     End If
  Else
     Me.CommandButton40.Enabled = True
     Me.CommandButton265.Enabled = True
     Me.CommandButton39.Enabled = True
     Me.CommandButton42.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton41.Enabled = False
     Me.ToggleButton20.Enabled = True
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
         .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
               If InStr(AR_OPE(I), vbTab) > 0 Then
                  .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
               Else
                  .Cells(FR, 1).Value = AR_OPE(I)
               End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set NRE = Nothing
     Set RE = Nothing
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If
  
  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Set NRE = Nothing
     Set RE = Nothing
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 5))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 5), .Cells(FR + FR2 - 1, 5)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 5)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 5
                    ADDR2 = ""
                    On Error Resume Next
                    ADDR1 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).Address
                    ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).SubAddress
                    .Hyperlinks.Add .Cells(J, 5), ADDR1, ADDR2
                    On Error GoTo 0
                 Next J
              End With
           End If
        Next I
        
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 5 Then
           .Range(.Cells(6, 2), .Cells(FR, 6)).Sort Key1:=.Cells(6, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
        .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
        .Columns(1).AutoFit
        .Range(.Cells(5, 1), .Cells(FR, 5)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     If SW_NRML = False And _
        W_NMLCHK = "" Then
     ElseIf SW_ALLSHP = False Then
     ElseIf SW_INCSA = False Then
     Else
        If W_NMLCHK <> "" Then
           W_FW = W_NMLCHK
        Else
           W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
        End If
        If W_FW Like "*[A-Z]*" And _
           Me.CheckBox1.Value = True Then
        Else
           Call READ_IDX(True)
           Call WRITE_IDX(SW_NRML, True)
        End If
     End If
     
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
  End If
 
  If SW_GHL = True Then
     For R = 6 To FR
        W_CELL = Workbooks(W_FRB).Worksheets(1).Cells(R, 5).Value
        If Me.CheckBox32.Value = True Then
           W_CELLBK = W_CELL
           W_CELL = Replace(W_CELL, vbLf, "")
        End If
        
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_CELL)
           MAXJ = MATCHES.count - 1
        Else
           AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
           MAXJ = UBound(AR_STR)
        End If
  
        W_ST = 1
        For J = 0 To MAXJ
           SW_FIND = True
           If SW_FIND = True Then
              If SW_NR = False Then
                 W_POS = MATCHES.Item(J).FirstIndex + 1
                 W_LEN = MATCHES.Item(J).Length
              Else
                 AR_WK2 = Split(AR_STR(J), vbTab)
                 W_POS = CLng(AR_WK2(0)) + 1
                 W_LEN = CLng(AR_WK2(1))
              End If
                          
              If Me.CheckBox32.Value = True Then
                 If W_POS > 1 Then
                    W_TEXT = Left$(W_CELLBK, W_POS - 1)
                    W_POS = W_POS + Len(W_TEXT) - Len(Replace(W_TEXT, vbLf, ""))
                 End If
                 L = 0
                 W_CNT = 0
                 Do While W_CNT < W_LEN
                    L = L + 1
                    If Mid$(W_CELLBK, L, 1) <> vbLf Then
                       W_CNT = W_CNT + 1
                    End If
                 Loop
                 W_LEN = W_LEN + L - W_CNT
              End If
                          
              With Workbooks(W_FRB).Worksheets(1).Cells(R, 5).Characters(W_POS, W_LEN).Font
                 .ColorIndex = 3
              End With
              W_ST = W_POS + W_LEN
           Else
              If SW_NR = False Then
                 W_ST = W_ST + MATCHES.Item(J).Length
              Else
                 AR_WK2 = Split(AR_STR(J), vbTab)
                 W_ST = W_ST + CLng(AR_WK2(1))
              End If
           End If
        Next J
        Set MATCHES = Nothing
     Next R
  End If

  If SW_HSGREP = True And _
     W_PNO = 0 Then
     Application.WindowState = xlNormal
  End If

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
 
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     If SW_HSGREP = True And _
        W_PNO = 0 Then
        If W_GREPTH <> "" Then
           If T < UBound(AR_WK) Then
           Else
              Call GREP2013E1
           End If
        Else
           Call GREP2013E1
        End If
     Else
        Call GREP2013E1
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If
  
  If SW_HGERR = False Then
     If W_GREPTH <> "" Then
        If T < UBound(AR_WK) Then
           T = T + 1
           SW_TH1ST = False
           GoTo L_GREPTHS
        End If
     End If
  End If

L_GREPTHE:

  If W_GREPTH <> "" Then
     If T < UBound(AR_WK) Then
     Else
        Me.CommandButton40.Enabled = True
        Me.CommandButton265.Enabled = True
        Me.CommandButton39.Enabled = True
        Me.CommandButton42.Enabled = True
        Me.CommandButton9.Enabled = True
        Me.CommandButton41.Enabled = False
        Me.ToggleButton20.Enabled = True
        Me.MultiPage1.Pages("Page1").Enabled = True
        Me.MultiPage1.Pages("Page2").Enabled = True
        Me.MultiPage1.Pages("Page3").Enabled = True
        Me.MultiPage1.Pages("Page4").Enabled = True
        Me.MultiPage1.Pages("Page5").Enabled = True
        Me.MultiPage1.Pages("Page6").Enabled = True
        Me.MultiPage1.Pages("Page7").Enabled = True
        Me.MultiPage1.Pages("Page8").Enabled = True
        Me.MultiPage1.Pages("Page9").Enabled = True
        Me.MultiPage1.Pages("Page10").Enabled = True
        Me.MultiPage1.Pages("Page11").Enabled = True
        Me.MultiPage1.Pages("Page12").Enabled = True
        Me.MultiPage1.Pages("Page13").Enabled = True
        Me.MultiPage1.Pages("Page14").Enabled = True
        Me.MultiPage1.Pages("Page15").Enabled = True
        Me.MultiPage1.Pages("Page16").Enabled = True
        Me.MultiPage1.Pages("Page17").Enabled = True
        Me.MultiPage1.Pages("Page18").Enabled = True
        Me.MultiPage1.Pages("Page19").Enabled = True
        Me.MultiPage1.Pages("Page20").Enabled = True
        Me.MultiPage1.Tag = ""
     End If
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption
  
  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 5 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
     If SW_PRA = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Sheets that can't be serarched because of protection exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7cc||fffd||fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If
  
  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(9)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
     
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton40.Enabled = True
  Me.CommandButton265.Enabled = True
  Me.CommandButton39.Enabled = True
  Me.CommandButton42.Enabled = True
  Me.CommandButton9.Enabled = True
  Me.CommandButton41.Enabled = False
  Me.ToggleButton20.Enabled = True
  Me.Label293.Width = 0
  Me.Label293.Caption = ""
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub ToggleButton20_Change()

  If Me.ToggleButton20.Value = True Then
     Me.TextBox68.Visible = True
     Me.TextBox68.SetFocus
  End If

End Sub

Private Sub TextBox68_Change()

  Me.TextBox67.Value = Me.TextBox68.Value
  Me.TextBox69.Value = Me.TextBox68.Value
  W_GREPTH = Replace(Me.TextBox68.Value, vbCrLf, vbTab)

End Sub

Private Sub TextBox68_Enter()

  Me.TextBox68.BackColor = &HC0FFFF

End Sub

Private Sub TextBox68_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox68.BackColor = &H80000005
  Me.TextBox68.Visible = False
  Me.ToggleButton20.Value = False

End Sub

Sub CommandButton42_Click()
'|fffd|V|fffd|F|fffd|C|fffd|vGrep|fffd|u|fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim W_GREP As String

  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date

  Dim SW_NRML As Boolean
  Dim W_FW As String

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Grep replace"
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox15.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox15.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox64.Value = True Then
  ElseIf Me.TextBox8.Value = "" Then
     W_FFILE = "*" & Me.Label38.Caption
     W_FFILE2 = "*.xls"
  Else
     W_FFILE = Me.TextBox8.Value & Me.Label38.Caption
     W_FFILE2 = Me.TextBox8.Value & ".xls"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.CheckBox64.Value = True Then
  ElseIf Me.ComboBox20.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        If Me.ComboBox20.Visible = True Then
           Me.ComboBox20.SetFocus
        End If
     End If
     If Val(Application.Version) >= 15 And _
        Application.Visible = True Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox20.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           If Me.ComboBox20.Visible = True Then
              Me.ComboBox20.SetFocus
           End If
        End If
        If Val(Application.Version) >= 15 And _
           Application.Visible = True Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  '|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox64.Value = True Then
     If WINDOWCHK = False Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 And _
           Application.Visible = True Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     If Me.CheckBox63.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for open files." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||251||382||fffd||fffd||102||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox15.SetFocus
           End If
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox15.SetFocus
           End If
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  W_GREP = ThisWorkbook.path & "\grep4.vbs"
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = True Then
     If Me.CheckBox49.Value = True Then
        If MsgBox("Will do shape grep replace.", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     Else
        If MsgBox("|fffd|V|fffd|F|fffd|C|fffd|vGrep|fffd|u|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 And _
              Application.Visible = True Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     End If
  End If

  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Application.ScreenUpdating = False
  
  STIME = time
  
  If SW_HSGREP = True Then
     SW_NRML = False
     W_NMLCHK = ""
     
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(Me.ComboBox5.Value) = False Then
        SW_NRML = True
     End If
     Set RE = Nothing
  
     If SW_NRML = False Then
        W_NMLCHK = NRML_CHK(Me.ComboBox1.Value, 1, True)
     End If
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox64.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox20)
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox15)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox15
     Call MK_DIC
  End If

  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox14.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox14)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox14
        Call MK_DIC
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grep4.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
   
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  Else
     Me.CommandButton40.Enabled = False
     Me.CommandButton265.Enabled = False
     Me.CommandButton39.Enabled = False
     Me.CommandButton42.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton41.Enabled = True
     If SW_CLASSIC2 = True Then
        Me.CommandButton41.SetFocus
     End If
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S1
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 15
        .Columns(5).ColumnWidth = 90
        .Range(.Columns(2), .Columns(5)).WrapText = True
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Replace with"
           .Cells(3, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(3, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox15.Value
        .Cells(2, 3).Value = "'" & Me.ComboBox14.Value
        If Me.CheckBox64.Value = True Then
        ElseIf Me.TextBox3.Value = "" Then
           .Cells(3, 3).Value = "*" & Me.Label38.Caption
        Else
           .Cells(3, 3).Value = "'" & Me.TextBox8.Value & Me.Label38.Caption
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(4, 2).Value = "Target folder"
        Else
           .Cells(4, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
        End If
        If Me.CheckBox64.Value = False Then
           .Cells(4, 3).Value = Me.ComboBox20.Value
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(6, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(6, 2).Value = "File"
           .Cells(6, 3).Value = "Sheet"
           .Cells(6, 4).Value = "Name"
           .Cells(6, 5).Value = "Value"
        Else
           .Cells(6, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(6, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(6, 4).Value = "|fffd||fffd||fffd|O"
           .Cells(6, 5).Value = "|fffd|l"
        End If
        .Range(.Cells(6, 1), .Cells(6, 5)).Borders.LineStyle = True
        .Range(.Cells(6, 1), .Cells(6, 5)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 6
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  SW_PRA = False
  W_CNTFA = 0
  W_CNTRA = 0
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox20.Value)
     End If
  Else
     Call FCNT(Me.ComboBox20.Value)
  End If
  
  W_MAXP = 5
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox20.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grep8_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\grep8.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
        If SW_NRML = False And _
           W_NMLCHK = "" Then
        ElseIf SW_ALLSHP = False Then
        ElseIf SW_INCSA = False Then
        ElseIf Val(Application.Version) < 12 And _
               SW_SHPUR = False Then
        Else
           If W_NMLCHK <> "" Then
              W_FW = W_NMLCHK
           Else
              W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
           End If
           If W_FW Like "*[A-Z]*" And _
              Me.CheckBox1.Value = True Then
           Else
              Call READ_IDX(True)
           End If
        End If
     End If
     
     Call SHP_GREP(Me.ComboBox20.Value, True, False, SW_NRML)
     
L_AFT_G:
     
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  Else
     Me.CommandButton40.Enabled = True
     Me.CommandButton265.Enabled = True
     Me.CommandButton39.Enabled = True
     Me.CommandButton42.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton41.Enabled = False
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  Set NRE = Nothing
  Set RE = Nothing
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(4, 3)).Value
         .Range(.Cells(1, 3), .Cells(4, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(4, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
               If InStr(AR_OPE(I), vbTab) > 0 Then
                  .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
               Else
                  .Cells(FR, 1).Value = AR_OPE(I)
               End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
        .Cells(1, 1).Value = W_CNTRA
        .Cells(1, 2).Value = W_CNTFA
        .Cells(1, 3).Value = SW_PRA
     End With
     Set XL1 = Nothing
     
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If

  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           W_CNTRA = W_CNTRA + .Worksheets(I + 1).Cells(1, 1).Value
           W_CNTFA = W_CNTFA + .Worksheets(I + 1).Cells(1, 2).Value
           If SW_PRA = False Then
              SW_PRA = .Worksheets(I + 1).Cells(1, 3).Value
           End If
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 5))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 5), .Cells(FR + FR2 - 1, 5)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 5)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 6
                    ADDR2 = ""
                    On Error Resume Next
                    ADDR1 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).Address
                    ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).SubAddress
                    .Hyperlinks.Add .Cells(J, 5), ADDR1, ADDR2
                    On Error GoTo 0
                    .Cells(J, 5).Interior.ColorIndex = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Interior.ColorIndex
                 Next J
              End With
           End If
        Next I
     
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 6 Then
           .Range(.Cells(7, 2), .Cells(FR, 6)).Sort Key1:=.Cells(7, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(4, 3)).Value
        .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
        .Columns(1).AutoFit
         .Rows.AutoFit
        .Range(.Cells(6, 1), .Cells(FR, 5)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(4, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     If SW_NRML = False And _
        W_NMLCHK = "" Then
     ElseIf SW_ALLSHP = False Then
     ElseIf SW_INCSA = False Then
     ElseIf Val(Application.Version) < 12 And _
            SW_SHPUR = False Then
     Else
        If W_NMLCHK <> "" Then
           W_FW = W_NMLCHK
        Else
           W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
        End If
        If W_FW Like "*[A-Z]*" And _
           Me.CheckBox1.Value = True Then
        Else
           Call READ_IDX(True)
           Call WRITE_IDX(SW_NRML, True)
        End If
     End If
  
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
     Application.WindowState = xlNormal
  End If
 
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption
  
  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 6 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If W_CNTRA = W_CNTFA Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                          "Shapes that can't be replaced exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|", vbExclamation)
        End If
     End If
     If SW_PRA = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Sheets that can't be serarched because of protection exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7cc||fffd||fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
     End If
  End If

  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If

  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(9)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton9.Enabled = True
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton41_Click()
'|fffd|V|fffd|F|fffd|C|fffd|vGrep|fffd||fffd||fffd|~
  
  Dim W_GREPC As String
  
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     Open W_GREPC For Output As #1
     Close #1
  Else
     SW_STOP = True
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton273_Click()
'|fffd|V|fffd|[|fffd|gGrep|fffd||fffd||fffd|~
  
  Dim W_GREPC As String
  
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     Open W_GREPC For Output As #1
     Close #1
  Else
     SW_STOP = True
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton40_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox20.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox20.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox20.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton270_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox20.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox60.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox60.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton265_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox20.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox20.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox20.Value = Left$(Me.ComboBox20.Value, I)
        If Right$(Me.ComboBox20.Value, 1) = ":" Then
           Me.ComboBox20.Value = Me.ComboBox20.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox20.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton271_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox60.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox60.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox60.Value = Left$(Me.ComboBox60.Value, I)
        If Right$(Me.ComboBox60.Value, 1) = ":" Then
           Me.ComboBox60.Value = Me.ComboBox60.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox60.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton16_Click()
'|fffd||fffd||fffd|o

  Dim W_FROMC As Long
  Dim W_FROMCA1 As String
  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long
  Dim W_ABOOK As String
  Dim W_AC As Long
  Dim AR_C1 As Variant
  Dim AR_C2 As Variant
  Dim W_MAXR As Long
  Dim W_MAXR2 As Long
  Dim W_CNTEX As Long
  Dim I As Long
  Dim J As Long
  Dim SW_EGOTO As Boolean
  Dim SW_CVALCHG As Boolean
  
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  
  Dim W_STR As String
  Dim W_FNDSTR As String
  
  Dim W_STR2 As String
  Dim SW_FIND As Boolean
  
  Dim SW_RE2 As Boolean
  
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Extract"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If WINDOWCHK = False Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  If TypeName(ActiveSheet) <> "Worksheet" Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox4.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  SW_NR2 = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox4.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                       '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  SW_RE2 = False
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  If W_ATEXT <> "" Then
     W_FNDSTR2 = FNDSTRCNV3(W_ATEXT)
     
     If W_FNDSTR2 <> "" Then
        Set RE2 = CreateObject("VBScript.RegExp")
        With RE2
           .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
        End With
        SW_RE2 = True
        If SW_NRE = True Then
           SW_NR2 = True
        Else
           On Error GoTo LABEL_ERR
           RE2.Test (" ")
           On Error GoTo LABEL_REP
        End If
        Set RE2 = Nothing
        If SW_NR2 = True Then
           Set NRE2 = NRCHK(W_FNDSTR2, Not Me.CheckBox1.Value)
           If NRE2 Is Nothing Then
              GoTo LABEL_ERR2
           End If
        End If
     End If
  End If
  
  '|fffd||fffd||fffd|o|fffd||fffd||fffd||50b8d||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  If Me.TextBox1.Value <> "" Then
     If COLUMN_CHK(Me.TextBox1.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Column from isn't correct.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|o|fffd||fffd||fffd||42a90||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox1.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     Else
        W_FROMC = Range(Me.TextBox1.Value & "1").Column
     End If
  Else
     W_FROMC = ActiveCell.Column
  End If
  
  '|fffd||fffd||fffd|o|fffd||fffd||50b8d||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  If COLUMN_CHK(Me.TextBox2.Value) = False Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Column to isn't correct.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|o|fffd||fffd||42a90||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.TextBox2.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||fffd||fffd|L|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.MultiUserEditing = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't extract in share workbook.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|L|fffd|u|fffd|b|fffd|N|fffd||352||fffd||fffd|o|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveSheet.ProtectContents = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Sheet is protected.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Call RANGE_GET(ActiveSheet.UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
  If W_FROMC > W_UEC Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox4)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox4
     Call MK_DIC
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|2
  If W_ATEXT <> "" And _
     W_FNDSTR2 <> "" Then
     Call UPD_REFCOMBO2
     
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox59
        Call MK_DIC
     End If
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                       '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  If W_ATEXT <> "" And _
     W_FNDSTR2 <> "" Then
     Set RE2 = CreateObject("VBScript.RegExp")
     With RE2
        .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  End If
  
  W_ABOOK = ActiveWorkbook.Name
  
  If IsOF(Cells(Rows.count, W_FROMC)) = True Then
     W_MAXR = Rows.count
  ElseIf IsError(Cells(Rows.count, W_FROMC).Value) = True Then
     W_MAXR = Rows.count
  ElseIf Cells(Rows.count, W_FROMC).Value <> "" Then
     W_MAXR = Rows.count
  Else
     W_MAXR = Cells(Rows.count, W_FROMC).End(xlUp).Row
     If W_MAXR = 1 Then
        W_MAXR = 2
     End If
  End If
  SW_CVALCHG = False
  If Me.CheckBox3.Value = False Then
     On Error GoTo LABEL_ERR_FRML
     AR_C1 = Range(Cells(1, W_FROMC), Cells(W_MAXR, W_FROMC)).Formula
     On Error GoTo LABEL_REP
     SW_EGOTO = False
     If SW_EGOTO = True Then
LABEL_ERR_FRML:
        On Error GoTo LABEL_REP
        SW_CVALCHG = True
        AR_C1 = Range(Cells(1, W_FROMC), Cells(W_MAXR, W_FROMC)).Value
     End If
  Else
     AR_C1 = Range(Cells(1, W_FROMC), Cells(W_MAXR, W_FROMC)).Value
  End If
  
  Workbooks.Add
  AR_C2 = Range(Cells(1, 1), Cells(W_MAXR, 1))
  If Me.CheckBox3.Value = False And _
     SW_CVALCHG = True Then
     For R = 1 To W_MAXR
        With Workbooks(W_ABOOK).ActiveSheet
           If IsOF(.Cells(R, W_FROMC)) = True Then
           ElseIf IsError(.Cells(R, W_FROMC).Value) = True Then
           Else
              If Len(.Cells(R, W_FROMC).Value) > W_MAXFML Then
              Else
                 If .Cells(R, W_FROMC).FormulaHidden = False Then
                    AR_C1(R, 1) = .Cells(R, W_FROMC).Formula
                 End If
              End If
           End If
        End With
        Cells(R, 1).Value = AR_C1(R, 1)
     Next R
  Else
     Range(Cells(1, 1), Cells(W_MAXR, 1)) = AR_C1
  End If
  If IsOF(Cells(W_MAXR, 1)) = True Then
     W_MAXR2 = W_MAXR
  ElseIf IsError(Cells(W_MAXR, 1).Value) = True Then
     W_MAXR2 = W_MAXR
  Else
     If Me.CheckBox3.Value = True Or _
        SW_CVALCHG = True Or _
        Cells(W_MAXR, 1).FormulaHidden = True Then
        W_STR = Cells(W_MAXR, 1).Value
     Else
        W_STR = Cells(W_MAXR, 1).Formula
     End If
     If W_STR <> "" Then
        W_MAXR2 = W_MAXR
     Else
        W_MAXR2 = Cells(W_MAXR, 1).End(xlUp).Row
     End If
  End If
  Workbooks(Workbooks.count).Saved = True
  Workbooks(Workbooks.count).Close
  Workbooks(W_ABOOK).Activate
  
  W_CNTEX = 0
  For R = 1 To W_MAXR2
     SW_FIND = False
     If IsError(AR_C1(R, 1)) = True Then
     ElseIf AR_C1(R, 1) <> "" Then
        W_EVAR = AR_C1(R, 1)
        If Me.CheckBox2.Value = True Then
           If IsOF(Cells(R, W_FROMC)) = True Then
           ElseIf VarType(Cells(R, W_FROMC).Value) = vbString Then
              If SW_NR = False Then
                 SW_FIND = RE.Test(AR_C1(R, 1))
              Else
                 SW_FIND = NRTEST(NRE, CStr(AR_C1(R, 1)))
              End If
              
              If SW_FIND = True Then
                 If W_ATEXT <> "" And _
                    W_FNDSTR2 <> "" Then
                    If SW_NR2 = False Then
                       SW_WK = RE2.Test(AR_C1(R, 1))
                    Else
                       SW_WK = NRTEST(NRE2, CStr(AR_C1(R, 1)))
                    End If
                    
                    If SW_WK = Not SW_ADDDENY Then
                       SW_FIND = True
                    Else
                       SW_FIND = False
                    End If
                 End If
              End If
           
              If SW_FIND = True And _
                 (SW_DCB = True Or _
                  SW_DCI = True Or _
                  SW_DCU = True Or _
                  SW_DCK = True Or _
                  SW_DCC = True) Then
                 ReDim Preserve AR_SELS(1)
                 AR_SELS(1) = ActiveSheet.Index
                 IDX = 1
                 C = W_FROMC
                 SW_FIND = DC_FIND(AR_C1(R, 1))
              End If
                 
              If SW_FIND = True Then
                 AR_C2(R, 1) = 1
                 W_CNTEX = W_CNTEX + 1
                 ReDim Preserve AR_SELS(1)
                 AR_SELS(1) = ActiveSheet.Index
                 IDX = 1
                 C = W_FROMC
                 
                 If (SW_DCB2 = True Or _
                     SW_DCI2 = True Or _
                     SW_DCU2 = True Or _
                     SW_DCK2 = True Or _
                     SW_DCC2 = True) And _
                    IsOF(Worksheets(AR_SELS(IDX)).Cells(R, C)) = False Then
                    If IsError(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = False Then
                       On Error Resume Next
                       If Worksheets(AR_SELS(IDX)).Cells(R, C).Value = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Or _
                          CStr(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Then
                          On Error GoTo 0
                    
                          If SW_NR = False Then
                             Set MATCHES = RE.Execute(AR_C1(R, 1))
                             MAXJ = MATCHES.count - 1
                          Else
                             AR_STR = Split(NREXE(NRE, AR_C1(R, 1)), vbCrLf)
                             MAXJ = UBound(AR_STR)
                          End If
                    
                          W_ST = 1
                          For J = 0 To MAXJ
                             If SW_NR = False Then
                                W_FI = MATCHES.Item(J).FirstIndex
                                W_LN = MATCHES.Item(J).Length
                                W_VL = MATCHES.Item(J).Value
                             Else
                                AR_WK = Split(AR_STR(J), vbTab)
                                W_FI = CLng(AR_WK(0))
                                W_LN = CLng(AR_WK(1))
                                W_VL = Mid$(AR_C1(R, 1), W_FI + 1, W_LN)
                             End If
                             
                             SW_FIND = True
                             If SW_FIND = True Then
                                W_POS = W_FI + 1
                                W_LEN = W_LN
                                With Worksheets(AR_SELS(IDX)).Cells(R, C).Characters(W_POS, W_LEN).Font
                                   If SW_DCB2 = True Then
                                      .Bold = SW_DCB3
                                   End If
                                   If SW_DCI2 = True Then
                                      .Italic = SW_DCI3
                                   End If
                                   If SW_DCU2 = True Then
                                      If SW_DCU3 = True Then
                                         .Underline = 2
                                      Else
                                         .Underline = -4142
                                      End If
                                   End If
                                   If SW_DCK2 = True Then
                                      .Strikethrough = SW_DCK3
                                   End If
                                   If SW_DCC2 = True Then
                                      .Color = CLng(W_DCCLR2)
                                   End If
                                End With
                                W_ST = W_POS + W_LEN
                             Else
                                W_ST = W_ST + W_LN
                             End If
                          Next J
                          Set MATCHES = Nothing
                       End If
                       On Error GoTo 0
                    Else
                       With Worksheets(AR_SELS(IDX)).Cells(R, C).Font
                          If SW_DCB2 = True Then
                            .Bold = SW_DCB3
                          End If
                          If SW_DCI2 = True Then
                             .Italic = SW_DCI3
                          End If
                          If SW_DCU2 = True Then
                             If SW_DCU3 = True Then
                               .Underline = 2
                             Else
                              .Underline = -4142
                             End If
                          End If
                          If SW_DCK2 = True Then
                             .Strikethrough = SW_DCK3
                          End If
                          If SW_DCC2 = True Then
                             .Color = CLng(W_DCCLR2)
                          End If
                       End With
                    End If
                 End If
              End If
           End If
        Else
           If SW_NR = False Then
              SW_FIND = RE.Test(CStr(AR_C1(R, 1)))
           Else
              SW_FIND = NRTEST(NRE, CStr(AR_C1(R, 1)))
           End If
           
           If SW_FIND = True Then
              If W_ATEXT <> "" And _
                 W_FNDSTR2 <> "" Then
                 If SW_NR2 = False Then
                    SW_WK = RE2.Test(CStr(AR_C1(R, 1)))
                 Else
                    SW_WK = NRTEST(NRE2, CStr(AR_C1(R, 1)))
                 End If
                 
                 If SW_WK = Not SW_ADDDENY Then
                    SW_FIND = True
                 Else
                    SW_FIND = False
                 End If
              End If
           End If
           
           If SW_FIND = True And _
              (SW_DCB = True Or _
               SW_DCI = True Or _
               SW_DCU = True Or _
               SW_DCK = True Or _
               SW_DCC = True) Then
              ReDim Preserve AR_SELS(1)
              AR_SELS(1) = ActiveSheet.Index
              IDX = 1
              C = W_FROMC
              SW_FIND = DC_FIND(AR_C1(R, 1))
           End If
              
           If SW_FIND = True Then
              AR_C2(R, 1) = 1
              W_CNTEX = W_CNTEX + 1
              ReDim Preserve AR_SELS(1)
              AR_SELS(1) = ActiveSheet.Index
              IDX = 1
              C = W_FROMC
              
              If (SW_DCB2 = True Or _
                  SW_DCI2 = True Or _
                  SW_DCU2 = True Or _
                  SW_DCK2 = True Or _
                  SW_DCC2 = True) And _
                 IsOF(Worksheets(AR_SELS(IDX)).Cells(R, C)) = False Then
                 If IsError(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = False Then
                    On Error Resume Next
                    If Worksheets(AR_SELS(IDX)).Cells(R, C).Value = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Or _
                       CStr(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Then
                       On Error GoTo 0
                   
                       If SW_NR = False Then
                          Set MATCHES = RE.Execute(AR_C1(R, 1))
                          MAXJ = MATCHES.count - 1
                       Else
                          AR_STR = Split(NREXE(NRE, AR_C1(R, 1)), vbCrLf)
                          MAXJ = UBound(AR_STR)
                       End If
                       
                       W_ST = 1
                       For J = 0 To MAXJ
                          SW_FIND = True
                          If SW_FIND = True Then
                             W_POS = W_FI + 1
                             W_LEN = W_LN
                             With Worksheets(AR_SELS(IDX)).Cells(R, C).Characters(W_POS, W_LEN).Font
                                If SW_DCB2 = True Then
                                   .Bold = SW_DCB3
                                End If
                                If SW_DCI2 = True Then
                                   .Italic = SW_DCI3
                                End If
                                If SW_DCU2 = True Then
                                   If SW_DCU3 = True Then
                                      .Underline = 2
                                   Else
                                      .Underline = -4142
                                   End If
                                End If
                                If SW_DCK2 = True Then
                                   .Strikethrough = SW_DCK3
                                End If
                                If SW_DCC2 = True Then
                                   .Color = CLng(W_DCCLR2)
                                End If
                             End With
                             W_ST = W_POS + W_LEN
                          Else
                             W_ST = W_ST + W_LN
                          End If
                       Next J
                       Set MATCHES = Nothing
                    End If
                    On Error GoTo 0
                 Else
                    With Worksheets(AR_SELS(IDX)).Cells(R, C).Font
                       If SW_DCB2 = True Then
                         .Bold = SW_DCB3
                       End If
                       If SW_DCI2 = True Then
                          .Italic = SW_DCI3
                       End If
                       If SW_DCU2 = True Then
                          If SW_DCU3 = True Then
                             .Underline = 2
                          Else
                             .Underline = -4142
                          End If
                       End If
                       If SW_DCK2 = True Then
                          .Strikethrough = SW_DCK3
                       End If
                       If SW_DCC2 = True Then
                          .Color = CLng(W_DCCLR2)
                       End If
                    End With
                 End If
              End If
           End If
        End If
     End If
  Next R

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  If W_CNTEX > 0 Then
     Columns(Me.TextBox2.Value).MergeCells = False
     Columns(Me.TextBox2.Value).Clear
     If ActiveSheet.FilterMode = True Then
        For R = 1 To W_MAXR
           Range(Me.TextBox2.Value & CStr(R)).Value = AR_C2(R, 1)
        Next R
     Else
        Range(Me.TextBox2.Value & "1:" & Me.TextBox2.Value & CStr(W_MAXR)) = AR_C2
     End If
     
     With Range(Me.TextBox2.Value & "1")
        .ClearComments
        With .AddComment
           .Visible = False
           W_FROMCA1 = Application.ConvertFormula("C" & W_FROMC, xlR1C1, xlA1)
           W_FROMCA1 = Mid$(W_FROMCA1, 2, InStr(W_FROMCA1, ":") - 2)
           If W_ATEXT <> "" And _
              W_FNDSTR2 <> "" Then
              .text W_FROMCA1 & vbCrLf & Me.ComboBox4.Value & vbCrLf & W_ATEXT
           Else
              .text W_FROMCA1 & vbCrLf & Me.ComboBox4.Value
           End If
        End With
     End With
  End If
  
  Application.ScreenUpdating = True
  If W_CNTEX > 0 Then
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed extaraction.", vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
     End If
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No match data.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(4)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton19_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox18.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox18.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox18.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton263_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox18.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox18.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox18.Value = Left$(Me.ComboBox18.Value, I)
        If Right$(Me.ComboBox18.Value, 1) = ":" Then
           Me.ComboBox18.Value = Me.ComboBox18.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox18.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton275_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox62.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox62.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox62.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton276_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox62.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox62.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox62.Value = Left$(Me.ComboBox62.Value, I)
        If Right$(Me.ComboBox62.Value, 1) = ":" Then
           Me.ComboBox62.Value = Me.ComboBox62.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox62.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton278_Click()
'Idx|fffd||d3dc|

    
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "IdxDelete"
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Will delete index.", vbOKCancel + vbInformation)
  Else
     W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
  End If
  If W_RET = vbCancel Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If Dir(ThisWorkbook.path & "\0.idx") <> "" And _
     Dir(ThisWorkbook.path & "\1.idx") <> "" And _
     Dir(ThisWorkbook.path & "\2.idx") <> "" And _
     Dir(ThisWorkbook.path & "\3.idx") <> "" And _
     Dir(ThisWorkbook.path & "\4.idx") <> "" And _
     Dir(ThisWorkbook.path & "\5.idx") <> "" Then
     If Dir(ThisWorkbook.path & "\0.idx") <> "" Then
        Kill ThisWorkbook.path & "\0.idx"
     End If
     If Dir(ThisWorkbook.path & "\1.idx") <> "" Then
        Kill ThisWorkbook.path & "\1.idx"
     End If
     If Dir(ThisWorkbook.path & "\2.idx") <> "" Then
        Kill ThisWorkbook.path & "\2.idx"
     End If
     If Dir(ThisWorkbook.path & "\3.idx") <> "" Then
        Kill ThisWorkbook.path & "\3.idx"
     End If
     If Dir(ThisWorkbook.path & "\4.idx") <> "" Then
        Kill ThisWorkbook.path & "\4.idx"
     End If
     If Dir(ThisWorkbook.path & "\5.idx") <> "" Then
        Kill ThisWorkbook.path & "\5.idx"
     End If
     
     Me.TextBox43.Value = ""
     Me.TextBox44.Value = ""
     Me.TextBox45.Value = ""
     Me.CheckBox204.Value = False
     Me.CheckBox205.Value = False
     Me.CommandButton278.Enabled = False
     Me.CommandButton280.Enabled = False
     
     W_IDXDIR = ""
     SW_IDXSUB = False
     SW_IDXVAL = False
  End If
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Has deleted index.", vbOKCancel + vbInformation)
  Else
     W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbOKCancel + vbInformation)
  End If
  
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub CommandButton279_Click()
'Idx|fffd||c42c|
  
  Dim I As Long
  Dim J As Long
  Dim FSO As Object

  Dim W_GREP As String
  
  Dim XL1 As Object

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date
  
  Dim W_IDX As String
  Dim W_IDXC As String
  
  Dim SW_XL4 As Boolean
  
  Dim W_IF As String
  Dim W_IFF As Long
  Dim R As Long
  Dim W_MAXR As Long
  Dim AR_WK As Variant
  Dim W_LINE As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "IdxMake"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  W_FFILE = "*" & Me.Label19.Caption
  W_FFILE2 = "*.xls"
  
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox62.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     Me.ComboBox62.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox62.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        Me.ComboBox62.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  If W_PNO = 0 And _
     Application.Visible = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't make index because not the first Excel.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||143|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||c42c||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.ComboBox61.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set XL1 = Nothing
  End If
  
  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\midx.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Making index. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||c42c||fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_IDXC = ThisWorkbook.path & "\midxC.vbs"
           Open W_IDXC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\fidx.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Searching index. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_IDXC = ThisWorkbook.path & "\fidxC.vbs"
           Open W_IDXC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Will make index.", vbOKCancel + vbInformation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
     End If
     If W_RET = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Application.ScreenUpdating = False

  STIME = time
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox62.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox18)
  End If
  
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     Set XL1 = Nothing
     W_GREP = ThisWorkbook.path & "\midx0.vbs"
     If Dir(W_GREP) = "" Then
        Call SAVE_SETTING
        Call INI_WRITE_RTN
        Call GREP_WRITE_RTN(W_GREP)
        Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Application.ScreenUpdating = True
        SW_HIDE = True
        Unload Me
        SW_HIDE = False
        W_IDXDIR = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  SW_STOP = False
  If W_PNO > 0 Then
     SW_FRB = True
  End If
  
  If W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call UF_TM
        Call GREP2013S1
        Call UF_TM
     End If
     
     Workbooks.Add
     W_FRB = Workbooks(Workbooks.count).Name
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
  End If
  
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If W_PNO = 0 Then
     Call FCNT(Me.ComboBox62.Value)
  End If
  
  W_MAXP = 5
  
  If W_PNO = 0 Then
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox62.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\midx_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\midx.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
     End If
     
     Call MIDX
     
L_AFT_G:
     
  End If
  
  If W_PNO > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If
  
  If W_PNO > 0 Then
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If
  
  If W_PNO = 0 Then
     W_IF = ThisWorkbook.path & "\0" & ".idx"
     W_IFF = 2
     Open W_IF For Output As #W_IFF
     With Workbooks(W_FRB).Worksheets(W_MAXP + 3)
        If .Cells(1, 1).Value <> "" Then
           If .Cells(2, 1).Value = "" Then
              W_MAXR = 1
           Else
              W_MAXR = .Cells(1, 1).End(xlDown).Row
           End If
           AR_WK = .Range(.Cells(1, 1), .Cells(W_MAXR, 4)).Value
        
           For R = 1 To W_MAXR
              W_LINE = AR_WK(R, 1) & vbTab & AR_WK(R, 2) & vbTab & AR_WK(R, 3) & vbTab & AR_WK(R, 4)
              Print #W_IFF, W_LINE
           Next R
        End If
     End With
     Close #W_IFF
     
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
  End If
  
  If W_PNO = 0 Then
     Application.WindowState = xlNormal
  End If

  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  If W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  Application.ScreenUpdating = True
  AppActivate Application.Caption

  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  Else
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed making index." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||c42c||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(20)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
        
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  
  W_IDXDIR = Me.ComboBox62.Value
  SW_IDXSUB = Me.CheckBox16.Value
  SW_IDXVAL = Me.CheckBox3.Value
  Call SAVE_SETTING
  Call INI_WRITE_RTN
  
  W_CLKBTN = ""
  Workbooks(1).Saved = True
  Application.Quit
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub MIDX()

  Dim AR_PATH() As String
  Dim I As Long
  Dim K As Long
  Dim J As Long
  Dim L As Long
  Dim M As Long
  Dim N As Long
    
  Dim SW_AOP As Boolean
  Dim W_BNAME As String
  
  Dim FSO As Object
  Dim FL As Object
  
  Dim W_SVIDX As Long
  Dim SW_ASE As Boolean
  
  Dim XL1 As Object
  Dim WB As Workbook
  
  Dim AR_PASS As Variant
  Dim SW_PASS As Boolean
  Dim AR_WK As Variant
  
  Dim SW_REPEAT As Boolean
  Dim SW_LEFT As Boolean
  
  Dim W_IF As String
  Dim W_IFF As Long
  Dim CL As Variant
  Dim W_STR As String
  Dim W_FRBPATH As String
  Dim SW_GRPEX As Boolean
  Dim SHP As Shape
  Dim W_SPLEN As Long
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim W_SPTXT As String
  Dim W_TXT As String
  Dim W_PATHBK As String
  Dim W_SHTBK As String
  
    
  W_PATHBK = ""
  W_SHTBK = ""
  W_IF = ThisWorkbook.path & "\" & W_PNO & ".idx"
  W_IFF = 2
  Open W_IF For Output As #W_IFF
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  Set XL1 = XL2ND
  XL1.ScreenUpdating = False
  XL1.EnableEvents = False
  On Error Resume Next
  XL1.Calculation = xlCalculationManual
  On Error GoTo 0
  W_FRB = W_FRBS
  With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
     If .Cells(1, 1).Value <> "" Then
        If .Cells(2, 1).Value = "" Then
           ReDim AR_PATH(2)
           AR_PATH(2) = .Cells(1, 1).Value
        Else
           AR_WK = .Range(.Cells(1, 1), .Cells(.Cells(1, 1).End(xlDown).Row, 1)).Value
           ReDim Preserve AR_PATH(UBound(AR_WK, 1) + 1)
           For I = 2 To UBound(AR_PATH)
              AR_PATH(I) = AR_WK(I - 1, 1)
           Next I
        End If
     End If
  End With
  
  Set FSO = Nothing
     
L_START:
  SW_LEFT = False
     
  For I = 2 To UBound(AR_PATH)
     If SW_REPEAT = False Then
        If I Mod W_MAXP = W_MAXP - W_PNO Then
           With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
              If .Cells(I - 1, 4).Value = "" Then
                 .Cells(I - 1, 4).Value = W_PNO
                 SW_LEFT = True
              Else
                 GoTo LABEL_NEXT
              End If
           End With
        Else
           GoTo LABEL_NEXT
        End If
     Else
        With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
           If .Cells(I - 1, 4).Value = "" Then
              .Cells(I - 1, 4).Value = W_PNO
              SW_LEFT = True
           Else
              GoTo LABEL_NEXT
           End If
        End With
     End If
     
     'OPEN
     SW_AOP = False
                
     L = 1
     Do While InStr(L, AR_PATH(I), "\") > 0
       L = InStr(L, AR_PATH(I), "\") + 1
     Loop
     L = L - 1
     W_BNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
                
     For L = 1 To Workbooks.count
        If Workbooks(L).Name = W_BNAME Then
           SW_AOP = True
           Exit For
        End If
     Next L
     If SW_AOP = True Then
        SW_OPE = True
        W_OPE = W_OPE + 1
        GoTo LABEL_NEXT
     End If
        
     Application.DisplayAlerts = False

     SW_PASS = False
     L = -1
              
     On Error GoTo LABEL_ERROR
     Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="", ReadOnly:=True)
              
LABEL_PASS:
     If SW_PASS = True Then
        L = L + 1
        Do While AR_PASS(L) = "" And _
                 L < UBound(AR_PASS)
           L = L + 1
        Loop
        Err.Clear
        Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L), ReadOnly:=True)
     End If
              
     On Error GoTo 0
     Application.DisplayAlerts = True

     If Val(Application.Version) >= 15 Then
        Application.ScreenUpdating = False
     End If
              
     WB.Windows(1).Visible = False
     WB.Activate
        
     On Error GoTo LABEL_ERROR
     SW_ASE = True
     W_SVIDX = WB.ActiveSheet.Index
     SW_ASE = False
     On Error GoTo 0
        
     If WB.Worksheets.count = 0 Then
        GoTo LABEL_CLOSE
     End If
        
     For K = 1 To WB.Sheets.count
        W_FRBPATH = WB.path & "\" & WB.Name

        If TypeName(WB.Sheets(K)) = "Worksheet" Then
           On Error GoTo LABEL_ERROR
           WB.Sheets(K).Activate
           On Error GoTo 0
           ActiveSheet.UsedRange
  
           For Each CL In ActiveSheet.UsedRange
              W_STR = ""
              On Error Resume Next
              W_STR = CL.Value2
              W_STR = CL.Value
              If Me.CheckBox3.Value = False Then
                 If CL.HasFormula = True And _
                    CL.FormulaHidden = False Then
                    W_STR = CL.Formula
                 End If
              End If
              On Error GoTo 0
     
              If W_STR <> "" Then
                 Call PIDX(W_IFF, _
                           W_FRBPATH, _
                           WB.Sheets(K).Name, _
                           "", _
                           Replace(Application.ConvertFormula("R" & CL.Row & "C" & CL.Column, xlR1C1, xlA1), "$", ""), _
                           Replace(Replace(W_STR, vbLf, Chr$(3)), vbCr, Chr$(2)), _
                           W_PATHBK, _
                           W_SHTBK)
              End If
           Next
        End If
         
        If WB.MultiUserEditing = False Then
           With WB.Sheets(K)
              SW_GRPEX = True
              Do While SW_GRPEX = True
                 SW_GRPEX = False
                 For M = 1 To .Shapes.count
                    On Error Resume Next
                    Set SHP = .Shapes(M)
                    On Error GoTo 0
                    If SHP Is Nothing Then
                       GoTo LABEL_NEXT_S
                    Else
                       Set SHP = Nothing
                    End If
                    If .Shapes(M).Type = msoGroup Then
                       SW_GRPEX = True
                       Exit For
                    End If
                 Next M
                 If SW_GRPEX = False Then
                    Exit Do
                 End If
                 For M = 1 To .Shapes.count
                    If .Shapes(M).Type = msoGroup Then
                       .Shapes(M).Ungroup
                    End If
                 Next M
              Loop
              
              For M = 1 To .Shapes.count
                 If SA_GETTXT(.Shapes(M), W_TXT) = True Then
                    AR_WK = Split(W_TXT, Chr$(2))
                    For N = 0 To UBound(AR_WK)
                       If AR_WK(N) <> "" Then
                          R = 0
                          C = 0
                          On Error Resume Next
                          R = .Shapes(M).TopLeftCell.Row
                          C = .Shapes(M).TopLeftCell.Column
                          On Error GoTo 0
                          W_STR = ""
                          If R > 0 And C > 0 Then
                             W_STR = Replace(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
                          End If
                          Call PIDX(W_IFF, _
                                    W_FRBPATH, _
                                    WB.Sheets(K).Name, _
                                    .Shapes(M).Name, _
                                    W_STR, _
                                    Replace(Replace(AR_WK(N), vbLf, Chr$(3)), vbCr, Chr$(2)), _
                                    W_PATHBK, _
                                    W_SHTBK)
                       End If
                    Next N
                 Else
                    W_SPLEN = 0
                    Set SHP = .Shapes(M)
                    On Error Resume Next
                    W_SPLEN = SHP.TextFrame.Characters.count
                    On Error GoTo 0
                    Set SHP = Nothing
                    If W_SPLEN > 0 Then
                       W_SPTXT = ""
                       For N = 0 To Int(W_SPLEN / 255)
                          W_ST = N * 255 + 1
                          If (N + 1) * 255 <= W_SPLEN Then
                             W_BYTE = 255
                          Else
                             W_BYTE = W_SPLEN - N * 255
                          End If
                          W_SPTXT = W_SPTXT & .Shapes(M).TextFrame.Characters(W_ST, W_BYTE).text
                          If (N + 1) * 255 = W_SPLEN Then
                             Exit For
                          End If
                       Next N
                       If W_SPTXT <> "" Then
                          R = 0
                          C = 0
                          On Error Resume Next
                          R = .Shapes(M).TopLeftCell.Row
                          C = .Shapes(M).TopLeftCell.Column
                          On Error GoTo 0
                          W_STR = ""
                          If R > 0 And C > 0 Then
                             W_STR = Replace(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
                          End If
                          Call PIDX(W_IFF, _
                                    W_FRBPATH, _
                                    WB.Sheets(K).Name, _
                                    .Shapes(M).Name, _
                                    W_STR, _
                                    Replace(Replace(W_SPTXT, vbLf, Chr$(3)), vbCr, Chr$(2)), _
                                    W_PATHBK, _
                                    W_SHTBK)
                       End If
                    End If
                 End If
              Next M
           End With
        End If

LABEL_NEXT_S:
     Next K
        
LABEL_CLOSE:
     WB.Saved = True
     WB.Close SaveChanges:=False
     Set WB = Nothing

LABEL_NEXT:
  
  Next I
   
  If SW_STOP = True Then
     Set XL1 = Nothing
     GoTo L_END
  ElseIf SW_LEFT = False Then
     Set XL1 = Nothing
     GoTo L_END
  Else
     SW_REPEAT = True
     GoTo L_START
  End If
   
L_END:
  
  Set XL1 = Nothing
  Set WB = Nothing
  Erase AR_PATH
  Close #W_IFF
  Exit Sub

LABEL_ERROR:
  If Err.Number = -2147319765 Then
     On Error GoTo 0
     SW_OPE = True
     W_OPE = W_OPE + 1
     If SW_ASE = True Then
        Resume LABEL_CLOSE
     Else
        Resume LABEL_NEXT_S
     End If
  End If
  
  If Err.Number = 1004 Then
     If W_PASSLIST <> "" Then
        If L = -1 Then
           If Val(Application.Version) >= 9 Then
              AR_PASS = SPLIT2000(W_PASSLIST, vbCrLf)
           Else
              AR_PASS = SPLIT97(W_PASSLIST, vbCrLf)
           End If
        End If
        If L < UBound(AR_PASS) Then
           SW_PASS = True
           Resume LABEL_PASS
        End If
     End If
  End If
  
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  W_FCNT = W_FCNT - 1
  Resume LABEL_NEXT

End Sub

Private Sub PIDX(ByVal W_IFF As Long, ByVal W_PATH As String, ByVal W_SHT As String, ByVal W_NM As String, ByVal W_AD As String, ByVal W_STR As String, W_PATHBK As String, W_SHTBK As String)

                   
  If W_PATH <> W_PATHBK Then
     Print #W_IFF, "1" & W_PATH
     W_PATHBK = W_PATH
     W_SHTBK = ""
  End If
                 
  If W_SHT <> W_SHTBK Then
     Print #W_IFF, "2" & W_SHT
     W_SHTBK = W_SHT
  End If
                                  
  If W_NM <> "" Then
     Print #W_IFF, "3" & W_NM
  End If
                 
  Print #W_IFF, "4" & W_AD
                 
  Print #W_IFF, "5" & W_STR

End Sub

Sub CommandButton280_Click()
'Idx|fffd||fffd||fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim FSO As Object

  Dim W_GREP As String
  
  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String
  Dim RNG As Range

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date
  
  Dim W_IDX As String
  Dim W_IDXC As String
  
  Dim SW_XL4 As Boolean
  
  Dim R As Long
  Dim W_MAXR As Long
  
  Dim SW_NRML As Boolean
  Dim W_FNDSTR As String
  Dim SW_RE2 As Boolean
  Dim W_COLB As Variant
  
  Dim W_SW_CNV As String
     
  Dim T As Long
  Dim SW_TH1ST As Boolean
  Dim AR_WK As Variant
  Dim W_PSTR As String
     
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "IdxSearch"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If W_GREPTH <> "" Then
  ElseIf Me.ComboBox61.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If W_GREPTH <> "" Then
     If W_PNO > 0 Then
     ElseIf Application.Visible = True Then
        AR_WK = Split(W_GREPTH, vbTab)
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .IgnoreCase = Not Me.CheckBox1.Value
           .Global = True
        End With
        
        For T = 0 To UBound(AR_WK)
           If AR_WK(T) <> "" Then
              RE.Pattern = AR_WK(T)
              W_PSTR = ""
              On Error Resume Next
              W_PSTR = CStr(RE.Test(" "))
              On Error GoTo LABEL_REP
              If W_PSTR = "" Then
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Error exists in find pattern in thread. Check.")
                 Else
                    W_RET = MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||30c||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
                 End If
                 Set RE = Nothing
                 Call COMBO_FOCUS
                 If Val(Application.Version) >= 15 Then
                    Call SETTM_UF
                 End If
                 W_CLKBTN = ""
                 Exit Sub
              End If
           End If
        Next T
        Set RE = Nothing
        
        If Me.CheckBox49.Value = True Then
           If MsgBox("Thread is input.", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        Else
           If MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        End If
        T = 0
        SW_TH1ST = True
     ElseIf W_PNO = 0 Then
        T = 0
        AR_WK = Split(W_GREPTH, vbTab)
        SW_TH1ST = True
     End If
  End If

L_GREPTHS:
  
  If W_GREPTH <> "" Then
     If W_PNO > 0 Then
     ElseIf T > UBound(AR_WK) Then
        GoTo L_GREPTHE
     Else
        If AR_WK(T) = "" Then
           T = T + 1
           GoTo L_GREPTHS
        Else
           Me.ComboBox5.Value = AR_WK(T)
        End If
     End If
  End If
  
  SW_NR = False
  SW_NR2 = False
  
  SW_NRML = False
  W_NMLCHK = ""
     
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
     .IgnoreCase = True
     .Global = True
  End With
  If RE.Test(Me.ComboBox61.Value) = False Then
     SW_NRML = True
  End If
  Set RE = Nothing
        
  If SW_NRML = True Then
     If W_ATEXT <> "" Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_ATEXT) = True Then
           SW_NRML = False
        End If
        Set RE = Nothing
     End If
  End If
        
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = Me.ComboBox5.Value         '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  Else
     W_NMLCHK = NRML_CHK(Me.ComboBox1.Value, 1, True)
  End If
  
  If SW_NRML = False Then
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
     W_FNDSTR = FNDSTRCNV3(Me.ComboBox61.Value)
  
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     SW_RE2 = False
     If SW_NRE = True Then
        SW_NR = True
     Else
        On Error GoTo LABEL_ERR
        RE.Test (" ")
        On Error GoTo LABEL_REP
     End If
     Set RE = Nothing
     If SW_NR = True Then
        Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
        If NRE Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  End If
  
  If W_PNO = 0 And _
     Application.Visible = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't search index because not the first Excel.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||143|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.ComboBox61.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set XL1 = Nothing
  End If
  
  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\midx.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Making index. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||c42c||fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_IDXC = ThisWorkbook.path & "\midxC.vbs"
           Open W_IDXC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\fidx.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Searching index. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_IDXC = ThisWorkbook.path & "\fidxC.vbs"
           Open W_IDXC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Will search index.", vbOKCancel + vbInformation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
     End If
     If W_RET = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Application.ScreenUpdating = False

  If W_GREPTH <> "" And _
     SW_TH1ST = False Then
  Else
     STIME = time
  End If
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox61)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox61
     Call MK_DIC
  End If

  If SW_NRML = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|2
  If (W_ATEXT <> "" And _
      W_FNDSTR2 <> "") Or _
     (W_ATEXT <> "" And _
      SW_NRML = True) Then
     Call UPD_REFCOMBO2
     
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox59
        Call MK_DIC
     End If
  
     If SW_NRML = False Then
        Set RE2 = CreateObject("VBScript.RegExp")
        With RE2
           .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
        End With
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     Set XL1 = Nothing
     W_GREP = ThisWorkbook.path & "\sidx0.vbs"
     If Dir(W_GREP) = "" Then
        Call SAVE_SETTING
        Call INI_WRITE_RTN
        Call GREP_WRITE_RTN(W_GREP)
        Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Application.ScreenUpdating = True
        SW_HIDE = True
        Unload Me
        SW_HIDE = False
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  SW_STOP = False
  
  If W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call UF_TM
        Call GREP2013S1
        Call UF_TM
     End If
     
     Workbooks.Add
     W_FRB = Workbooks(Workbooks.count).Name
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
  
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 15
        .Columns(5).ColumnWidth = 15
        .Columns(6).ColumnWidth = 90
        .Range(.Columns(2), .Columns(6)).WrapText = True
        
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox61.Value
        If Me.CheckBox49.Value = True Then
           .Cells(2, 2).Value = "Target folder"
        Else
           .Cells(2, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
        End If
        .Cells(2, 3).Value = Me.TextBox43.Value
        .Columns(3).NumberFormatLocal = "@"
        .Cells(5, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(5, 2).Value = "File"
           .Cells(5, 3).Value = "Sheet"
           .Cells(5, 4).Value = "Name"
           .Cells(5, 5).Value = "Cell"
           If Me.CheckBox205.Value = True Then
              .Cells(5, 6).Value = "Value"
           Else
              .Cells(5, 6).Value = "Formula"
           End If
        Else
           .Cells(5, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(5, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(5, 4).Value = "|fffd||fffd||fffd|O"
           .Cells(5, 5).Value = "|fffd|Z|fffd||fffd|"
           If Me.CheckBox205.Value = True Then
              .Cells(5, 6).Value = "|fffd|l"
           Else
              .Cells(5, 6).Value = "|fffd||fffd||fffd||fffd|"
           End If
        End If
        .Range(.Cells(5, 1), .Cells(5, 6)).Borders.LineStyle = True
        .Range(.Cells(5, 1), .Cells(5, 6)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_MAXP = 5
  
  If Me.CheckBox207.Value = True Then
     W_SW_CNV = Me.ComboBox61.Value
     If SW_NRML = True Then
        W_SW_CNV = SWING_CNV(Me.ComboBox61.Value)
     ElseIf W_NMLCHK <> "" Then
        W_SW_CNV = SWING_CNV(W_NMLCHK)
        W_SW_CNV = Replace(Me.ComboBox61.Value, W_NMLCHK, W_SW_CNV)
     End If
     If W_SW_CNV <> Me.ComboBox61.Value Then
        SW_NR = False
  
        SW_NRML = False
        W_NMLCHK = ""
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_SW_CNV) = False Then
           SW_NRML = True
        End If
        Set RE = Nothing
        
        If SW_NRML = True Then
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_SW_CNV
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        Else
           W_NMLCHK = NRML_CHK(W_SW_CNV, 1, True)
        End If
  
        If SW_NRML = False Then
           '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
           W_FNDSTR = FNDSTRCNV3(W_SW_CNV)
   
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_FNDSTR
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        End If
     End If
  End If
  
  If W_PNO = 0 Then
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\sidx_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\sidx.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
     End If
     
     Call SIDX(SW_NRML)
     
L_AFT_G:
     
  End If
  
  If W_PNO > 0 Then
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set NRE = Nothing
     Set NRE2 = Nothing
     Set RE = Nothing
     Set RE2 = Nothing
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If
  
  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Set NRE = Nothing
     Set NRE2 = Nothing
     Set RE = Nothing
     Set RE2 = Nothing
     Exit Sub
  End If
  
  If W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 6))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 6), .Cells(FR + FR2 - 1, 6)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 6)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 5
                    On Error Resume Next
                    ADDR1 = Me.TextBox43.Value & "\" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 2).Value
                    ADDR2 = "'" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 3).Value & "'!" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Value
                    .Hyperlinks.Add .Cells(J, 5), ADDR1, ADDR2
                    On Error GoTo 0
                 Next J
              End With
           End If
        Next I
        
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 5 Then
           .Range(.Cells(6, 2), .Cells(FR, 6)).Sort Key1:=.Cells(6, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
        .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
        .Columns(1).AutoFit
        .Range(.Cells(5, 1), .Cells(FR, 6)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
  End If
  
  If W_PNO = 0 Then
     Application.WindowState = xlNormal
  End If

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing

  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     If W_PNO = 0 Then
        If W_GREPTH <> "" Then
           If T < UBound(AR_WK) Then
           Else
              Call GREP2013E1
           End If
        Else
           Call GREP2013E1
        End If
     Else
        Call GREP2013E1
     End If
  End If
  
  If W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If SW_HGERR = False Then
     If W_GREPTH <> "" Then
        If T < UBound(AR_WK) Then
           T = T + 1
           SW_TH1ST = False
           GoTo L_GREPTHS
        End If
     End If
  End If

L_GREPTHE:

  Application.ScreenUpdating = True
  AppActivate Application.Caption

  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 5 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00"), vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00"), vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed index search." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00"), vbInformation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00"), vbInformation)
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If
  
  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(20)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
        
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  If Application.Visible = False Then
  ElseIf W_GREPTH <> "" And T > 0 Then
  ElseIf Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf W_GREPTH <> "" And T > 0 Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub SIDX(ByVal SW_NRML As Boolean)

  Dim W_IF As String
  Dim W_IFF As Long
  Dim W_LINE As String
  Dim W_SPFND As Long
  Dim W_SPFND2 As Long
  Dim SW_WK As Boolean
  Dim SW_TEST As Boolean

  Dim XL1 As Object
  Dim W_OBJ As Object
  Dim W_FRBPATH As String

  Dim AR_STR As Variant
  Dim I As Long

  Dim W_KBN As String
  Dim W_PATH As String
  Dim W_SHT As String
  Dim W_NM As String
  Dim W_AD As String
  Dim W_CELL As String
  Dim W_FW As String
  Dim SW_CRLF As Boolean
  Dim W_CELL2 As String
      
    
  SW_CRLF = False
  If SW_NRML = True Then
     W_FW = Me.ComboBox61.Value
  Else
     W_FW = FNDSTRCNV3(Me.ComboBox61.Value)
  End If
  W_FW = Replace(W_FW, "\\", Chr$(4))
  If InStr(1, W_FW, "\r", vbBinaryCompare) > 0 Or _
     InStr(1, W_FW, "\n", vbBinaryCompare) > 0 Then
     SW_CRLF = True
  End If
    
  FR = 1
  W_IF = ThisWorkbook.path & "\" & W_PNO & ".idx"
  W_IFF = FreeFile()
  Open W_IF For Input As #W_IFF

  Do While Not EOF(W_IFF)
     Line Input #W_IFF, W_LINE

     W_KBN = Left$(W_LINE, 1)
     W_LINE = Right$(W_LINE, Len(W_LINE) - 1)

     Select Case W_KBN
     Case "1"
        W_PATH = W_LINE
     Case "2"
        W_SHT = W_LINE
     Case "3"
        W_NM = W_LINE
     Case "4"
        W_AD = W_LINE
     Case "5"
        If Me.CheckBox32.Value = True Then
           W_CELL = Replace(Replace(W_LINE, Chr$(2), ""), Chr$(3), "")
           W_CELL2 = Replace(Replace(W_LINE, Chr$(2), vbCr), Chr$(3), vbLf)
        ElseIf SW_CRLF = True Then
           W_CELL = Replace(Replace(W_LINE, Chr$(2), vbCr), Chr$(3), vbLf)
           W_CELL2 = W_CELL
        Else
           W_CELL = W_LINE
        End If
  
        SW_TEST = False
  
        If SW_NRML = True Then
           If Me.CheckBox1.Value = False Then
              If InStr(1, W_CELL, Me.ComboBox61.Value, vbTextCompare) > 0 Then
                 SW_TEST = True
              End If
           Else
              If InStr(1, W_CELL, Me.ComboBox61.Value, vbBinaryCompare) > 0 Then
                 SW_TEST = True
              End If
           End If
        Else
           SW_WK = True
        
           If SW_WK = True Then
              W_SPFND = SP_FND(W_CELL, 1)
              If W_SPFND = 0 Then
                 If SW_NR = False Then
                    SW_WK = RE.Test(W_CELL)
                 Else
                    SW_WK = NRTEST(NRE, CStr(W_CELL))
                 End If
                 
                 If SW_WK = True Then
                    If W_ATEXT <> "" And _
                       W_FNDSTR2 <> "" Then
                       W_SPFND2 = SP_FND(W_CELL, 2)
                       If W_SPFND2 = 0 Then
                          If SW_NR2 = False Then
                             SW_WK = RE2.Test(W_CELL)
                          Else
                             SW_WK = NRTEST(NRE2, CStr(W_CELL))
                          End If
                          
                          If SW_WK = Not SW_ADDDENY Then
                             SW_TEST = True
                          End If
                       Else
                          If SW_ADDDENY = False Then
                             If W_SPFND2 = 2 Then
                                SW_TEST = True
                             End If
                          Else
                             If W_SPFND2 = 1 Then
                                SW_TEST = True
                             End If
                          End If
                       End If
                    Else
                       SW_TEST = True
                    End If
                 End If
              ElseIf W_SPFND = 2 Then
                 If W_ATEXT <> "" And _
                    W_FNDSTR2 <> "" Then
                    W_SPFND2 = SP_FND(W_CELL, 2)
                    If W_SPFND2 = 0 Then
                       If SW_NR2 = False Then
                          SW_WK = RE2.Test(W_CELL)
                       Else
                          SW_WK = NRTEST(NRE2, CStr(W_CELL))
                       End If
                       
                       If SW_WK = Not SW_ADDDENY Then
                          SW_TEST = True
                       End If
                    Else
                       If SW_ADDDENY = False Then
                          If W_SPFND2 = 2 Then
                             SW_TEST = True
                          End If
                       Else
                          If W_SPFND2 = 1 Then
                             SW_TEST = True
                          End If
                       End If
                    End If
                 Else
                    SW_TEST = True
                 End If
              End If
           End If
        End If
  
        If SW_TEST = True Then
           Set XL1 = XL2ND
           W_FRB = W_FRBS
           FR = FR + 1
           Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
  
           If Me.CheckBox32.Value = True Then
           ElseIf SW_CRLF = False Then
              W_CELL2 = Replace(Replace(W_CELL, Chr$(2), vbCr), Chr$(3), vbLf)
           End If
           
           With W_OBJ
              .Cells(FR, 1).Value = FR - 2
              .Cells(FR, 2).Value = Right$(W_PATH, Len(W_PATH) - Len(Me.TextBox43.Value) - 1)
              .Cells(FR, 3).Value = W_SHT
              .Cells(FR, 4).Value = W_NM
              .Cells(FR, 5).Value = W_AD
              .Cells(FR, 6).Value = W_CELL2
           End With
     
           Set W_OBJ = Nothing
           Set XL1 = Nothing
        End If
        W_NM = ""
     End Select
  Loop

  Close #1

End Sub

Private Sub ToggleButton21_Change()

  If Me.ToggleButton21.Value = True Then
     Me.TextBox69.Visible = True
     Me.TextBox69.SetFocus
  End If

End Sub

Private Sub TextBox69_Change()

  Me.TextBox67.Value = Me.TextBox69.Value
  Me.TextBox68.Value = Me.TextBox69.Value
  W_GREPTH = Replace(Me.TextBox69.Value, vbCrLf, vbTab)

End Sub

Private Sub TextBox69_Enter()

  Me.TextBox69.BackColor = &HC0FFFF

End Sub

Private Sub TextBox69_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox69.BackColor = &H80000005
  Me.TextBox69.Visible = False
  Me.ToggleButton21.Value = False

End Sub

Sub CommandButton303_Click()
'Word

  Dim I As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object

  Dim XL1 As Object
  Dim W_AC As Long
  Dim W_GREPC As String

  Dim STIME As Date
  Dim NTIME As Date

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean
  Dim WD As Object
  Dim SW_HSGREPBK As Boolean


  On Error GoTo LABEL_REP

  W_EVAR = ""
  W_CLKBTN = "Word"
  SW_HSGREPBK = SW_HSGREP
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  On Error Resume Next
  Set WD = CreateObject("Word.Application")
  On Error GoTo LABEL_REP
  If WD Is Nothing Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     WD.Quit
     Set WD = Nothing
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox5.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  SW_NR = False

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox5.Value)

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.TextBox3.Value = "" Then
     If Val(Application.Version) >= 12 Then
        W_FFILE = "*.doc?"
     Else
        W_FFILE = "*.doc"
     End If
     W_FFILE2 = "*.rtf"
  Else
     If Val(Application.Version) >= 12 Then
        W_FFILE = Me.TextBox3.Value & ".doc?"
     Else
        W_FFILE = Me.TextBox3.Value & ".doc"
     End If
     W_FFILE2 = Me.TextBox3.Value & ".rtf"
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.ComboBox18.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        Me.ComboBox18.SetFocus
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox18.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           Me.ComboBox18.SetFocus
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If

  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing

  SW_HSGREP = False
  Application.ScreenUpdating = False

  STIME = time

  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox62.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox18)
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox5)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox5
     Call MK_DIC
  End If

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR
     .IgnoreCase = Not Me.CheckBox1.Value
     .Global = True
  End With
   
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  SW_STOP = False
  Me.CommandButton19.Enabled = False
  Me.CommandButton263.Enabled = False
  Me.CommandButton20.Enabled = False
  Me.CommandButton303.Enabled = False
  Me.CommandButton9.Enabled = False
  Me.CommandButton21.Enabled = True
  Me.ToggleButton19.Enabled = False
  If SW_CLASSIC2 = True Then
     Me.CommandButton21.SetFocus
  End If
  Me.MultiPage1.Pages("Page1").Enabled = False
  Me.MultiPage1.Pages("Page2").Enabled = False
  Me.MultiPage1.Pages("Page3").Enabled = False
  Me.MultiPage1.Pages("Page4").Enabled = False
  Me.MultiPage1.Pages("Page6").Enabled = False
  Me.MultiPage1.Pages("Page7").Enabled = False
  Me.MultiPage1.Pages("Page8").Enabled = False
  Me.MultiPage1.Pages("Page9").Enabled = False
  Me.MultiPage1.Pages("Page10").Enabled = False
  Me.MultiPage1.Pages("Page11").Enabled = False
  Me.MultiPage1.Pages("Page12").Enabled = False
  Me.MultiPage1.Pages("Page13").Enabled = False
  Me.MultiPage1.Pages("Page14").Enabled = False
  Me.MultiPage1.Pages("Page15").Enabled = False
  Me.MultiPage1.Pages("Page16").Enabled = False
  Me.MultiPage1.Pages("Page17").Enabled = False
  Me.MultiPage1.Pages("Page18").Enabled = False
  Me.MultiPage1.Pages("Page19").Enabled = False
  Me.MultiPage1.Pages("Page20").Enabled = False
  Me.MultiPage1.Tag = "P"
  
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Workbooks.Add
  
  W_AC = Application.Calculation
  Application.Calculation = xlCalculationManual
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
  
  W_FRB = Workbooks(Workbooks.count).Name
  
  With Workbooks(W_FRB).Worksheets(1)
     .Columns(2).ColumnWidth = 30
     .Columns(3).ColumnWidth = 30
     .Columns(4).ColumnWidth = 15
     .Columns(5).ColumnWidth = 90
     If Me.CheckBox75.Value = True Then
        .Columns(6).ColumnWidth = 90
        .Range(.Columns(2), .Columns(6)).WrapText = True
     Else
        .Range(.Columns(2), .Columns(5)).WrapText = True
     End If
     
     If Me.CheckBox49.Value = True Then
        .Cells(1, 2).Value = "Find what"
        .Cells(2, 2).Value = "Target file"
     Else
        .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        .Cells(2, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
     End If
     .Cells(1, 3).Value = "'" & Me.ComboBox5.Value
     .Cells(2, 3).Value = W_FFILE & " or " & W_FFILE2
     If Me.CheckBox49.Value = True Then
        .Cells(3, 2).Value = "Target folder"
     Else
        .Cells(3, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
     End If
     If Me.CheckBox62.Value = True Then
     Else
        .Cells(3, 3).Value = Me.ComboBox18.Value
     End If
     .Columns(3).NumberFormatLocal = "@"
     .Cells(5, 1).Value = "No."
     If Me.CheckBox49.Value = True Then
        .Cells(5, 2).Value = "File"
        .Cells(5, 3).Value = "Shape"
        .Cells(5, 4).Value = "Page"
        .Cells(5, 5).Value = "Value"
     Else
        .Cells(5, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        .Cells(5, 3).Value = "|fffd|V|fffd|F|fffd|C|fffd|v"
        .Cells(5, 4).Value = "|fffd|y|fffd|[|fffd|W"
        .Cells(5, 5).Value = "|fffd|l"
     End If
     .Range(.Cells(5, 1), .Cells(5, 5)).Borders.LineStyle = True
     .Range(.Cells(5, 1), .Cells(5, 5)).Interior.ColorIndex = 6
  End With

  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  
  W_FCNT = 0
  W_CLCNT = 0
  Call FCNT(Me.ComboBox18.Value)
  
  Application.EnableEvents = False
  
  Call GREPW(Me.ComboBox18.Value)
     
  Me.CommandButton19.Enabled = True
  Me.CommandButton263.Enabled = True
  Me.CommandButton20.Enabled = True
  Me.CommandButton303.Enabled = True
  Me.CommandButton9.Enabled = True
  Me.CommandButton21.Enabled = False
  Me.ToggleButton19.Enabled = True
  Me.MultiPage1.Pages("Page1").Enabled = True
  Me.MultiPage1.Pages("Page2").Enabled = True
  Me.MultiPage1.Pages("Page3").Enabled = True
  Me.MultiPage1.Pages("Page4").Enabled = True
  Me.MultiPage1.Pages("Page5").Enabled = True
  Me.MultiPage1.Pages("Page6").Enabled = True
  Me.MultiPage1.Pages("Page7").Enabled = True
  Me.MultiPage1.Pages("Page8").Enabled = True
  Me.MultiPage1.Pages("Page9").Enabled = True
  Me.MultiPage1.Pages("Page10").Enabled = True
  Me.MultiPage1.Pages("Page11").Enabled = True
  Me.MultiPage1.Pages("Page12").Enabled = True
  Me.MultiPage1.Pages("Page13").Enabled = True
  Me.MultiPage1.Pages("Page14").Enabled = True
  Me.MultiPage1.Pages("Page15").Enabled = True
  Me.MultiPage1.Pages("Page16").Enabled = True
  Me.MultiPage1.Pages("Page17").Enabled = True
  Me.MultiPage1.Pages("Page18").Enabled = True
  Me.MultiPage1.Pages("Page19").Enabled = True
  Me.MultiPage1.Pages("Page20").Enabled = True
  Me.MultiPage1.Tag = ""

  With Workbooks(W_FRB).Worksheets(1)
      W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
      .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
      .Columns(1).AutoFit
      .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
      If SW_OPE = True Then
         FR = FR + 2
         If Me.CheckBox49.Value = True Then
            .Cells(FR, 1).Value = "Files that can't open"
         Else
            .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
         End If
         For I = 1 To W_OPE
            FR = FR + 1
             If InStr(AR_OPE(I), vbTab) > 0 Then
                .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
             Else
                .Cells(FR, 1).Value = AR_OPE(I)
             End If
         Next I
      End If
  End With
  
  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     SW_HSGREP = SW_HSGREPBK
     Set NRE = Nothing
     Set NRE2 = Nothing
     Set RE = Nothing
     Set RE2 = Nothing
     Exit Sub
  End If
 
  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption

  If FR = 5 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  End If
  
  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(5)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
        
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  SW_HSGREP = SW_HSGREPBK
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton19.Enabled = True
  Me.CommandButton263.Enabled = True
  Me.CommandButton20.Enabled = True
  Me.CommandButton303.Enabled = True
  Me.CommandButton9.Enabled = True
  Me.CommandButton21.Enabled = False
  Me.ToggleButton19.Enabled = True
  Me.Label293.Width = 0
  Me.Label293.Caption = ""
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  SW_HSGREP = SW_HSGREPBK

End Sub

Sub CommandButton20_Click()
'Grep
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim SW_RE2 As Boolean
  Dim REC As Object

  Dim SW_NRML As Boolean

  Dim W_GREP As String
  
  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date
  Dim W_FW As String
  
  Dim W_IDX As String
  Dim W_IDXC As String
  
  Dim RNG As Range
  
  Dim SW_XL4 As Boolean
  
  Dim W_SCT As String
  Dim W_R As Long
  Dim W_COM As String
  Dim AR_COM As Variant
  Dim W_STC As Long
  Dim W_LNC As Long
  Dim W_RBK As Long
  
  Dim W_CELL As String
  Dim MATCHES As Object
  Dim MAXJ As Long
  Dim AR_STR As Variant
  Dim W_ST As Long
  Dim SW_FIND As Boolean
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim AR_WK2 As Variant
  Dim W_STR As String
  Dim SW_1ST As Boolean
  
  Dim W_SW_CNV As String
  
  Dim T As Long
  Dim SW_TH1ST As Boolean
  Dim AR_WK As Variant
  Dim W_PSTR As String
  
  Dim W_STM As String
  
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Execute"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If W_GREPTH <> "" Then
  ElseIf Me.ComboBox5.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If W_GREPTH <> "" Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf Application.Visible = True Then
        AR_WK = Split(W_GREPTH, vbTab)
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .IgnoreCase = Not Me.CheckBox1.Value
           .Global = True
        End With
        
        For T = 0 To UBound(AR_WK)
           If AR_WK(T) <> "" Then
              RE.Pattern = AR_WK(T)
              W_PSTR = ""
              On Error Resume Next
              W_PSTR = CStr(RE.Test(" "))
              On Error GoTo LABEL_REP
              If W_PSTR = "" Then
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Error exists in find pattern in thread. Check.")
                 Else
                    W_RET = MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||30c||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
                 End If
                 Set RE = Nothing
                 Call COMBO_FOCUS
                 If Val(Application.Version) >= 15 Then
                    Call SETTM_UF
                 End If
                 W_CLKBTN = ""
                 Exit Sub
              End If
           End If
        Next T
        Set RE = Nothing
        
        If Me.CheckBox49.Value = True Then
           If MsgBox("Thread is input.", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        Else
           If MsgBox("|fffd|X|fffd||fffd||fffd|b|fffd|h|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
              Call COMBO_FOCUS
              If Val(Application.Version) >= 15 Then
                 Call SETTM_UF
              End If
              W_CLKBTN = ""
              Exit Sub
           End If
        End If
        T = 0
        SW_TH1ST = True
     ElseIf SW_HSGREP = True And _
        W_PNO = 0 Then
        T = 0
        AR_WK = Split(W_GREPTH, vbTab)
        SW_TH1ST = True
     End If
  End If

L_GREPTHS:
  
  If W_GREPTH <> "" Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf T > UBound(AR_WK) Then
        GoTo L_GREPTHE
     Else
        If AR_WK(T) = "" Then
           T = T + 1
           GoTo L_GREPTHS
        Else
           Me.ComboBox5.Value = AR_WK(T)
        End If
     End If
  End If
  
  SW_NR = False
  SW_NR2 = False
  
  SW_NRML = False
  W_NMLCHK = ""
  If Me.CheckBox74.Value = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(Me.ComboBox5.Value) = False Then
        SW_NRML = True
     End If
     Set RE = Nothing
  End If
        
  If SW_NRML = True Then
     If W_ATEXT <> "" Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_ATEXT) = True Then
           SW_NRML = False
        End If
        Set RE = Nothing
     End If
  End If
        
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = Me.ComboBox5.Value         '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  Else
     If Me.CheckBox74.Value = False Then
        W_NMLCHK = NRML_CHK(Me.ComboBox1.Value, 1, True)
     End If
  End If
  
  If SW_NRML = False Then
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
     W_FNDSTR = FNDSTRCNV3(Me.ComboBox5.Value)
  
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     SW_RE2 = False
     If SW_NRE = True Then
        SW_NR = True
     Else
        On Error GoTo LABEL_ERR
        RE.Test (" ")
        On Error GoTo LABEL_REP
     End If
     Set RE = Nothing
     If SW_NR = True Then
        Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
        If NRE Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox62.Value = True Then
  ElseIf Me.TextBox3.Value = "" Then
     W_FFILE = "*" & Me.Label19.Caption
     W_FFILE2 = "*.xls"
     W_FFILE3 = "*.zip"
  Else
     W_FFILE = Me.TextBox3.Value & Me.Label19.Caption
     W_FFILE2 = Me.TextBox3.Value & ".xls"
     W_FFILE3 = "*.zip"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.CheckBox62.Value = True Then
  ElseIf Me.ComboBox18.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        Me.ComboBox18.SetFocus
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox18.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           Me.ComboBox18.SetFocus
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  '|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox62.Value = True Then
     If WINDOWCHK = False Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g
  If Me.CheckBox75.Value = True Then
     Set REC = CreateObject("VBScript.RegExp")
     With REC
        .Pattern = "^-?\d+$"                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = True                    '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     If REC.Test(Me.TextBox25.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Row of offset is invalid.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||30d|s|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B", vbExclamation)
        End If
        Set REC = Nothing
        If SW_CLASSIC2 = True Then
           If Me.TextBox25.Visible = True Then
              Me.TextBox25.SetFocus
           End If
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     If REC.Test(Me.TextBox26.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Column of offset is invalid.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||317||42a95|s|fffd||fffd||fffd||142||fffd||fffd|B", vbExclamation)
        End If
        Set REC = Nothing
        If SW_CLASSIC2 = True Then
           If Me.TextBox26.Visible = True Then
              Me.TextBox26.SetFocus
           End If
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set REC = Nothing
  End If
  
  If SW_NRML = False Then
     If W_ATEXT <> "" Then
        W_FNDSTR2 = FNDSTRCNV3(W_ATEXT)
     
        If W_FNDSTR2 <> "" Then
           Set RE2 = CreateObject("VBScript.RegExp")
           With RE2
              .Pattern = W_FNDSTR2                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
              .IgnoreCase = Not Me.CheckBox1.Value   '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
              .Global = True                         '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
           End With
           SW_RE2 = True
           If SW_NRE = True Then
              SW_NR2 = True
           Else
              On Error GoTo LABEL_ERR
              RE2.Test (" ")
              On Error GoTo 0
           End If
           Set RE2 = Nothing
           If SW_NR2 = True Then
              Set NRE2 = NRCHK(W_FNDSTR2, Not Me.CheckBox1.Value)
              If NRE2 Is Nothing Then
                 GoTo LABEL_ERR2
              End If
           End If
        End If
     End If
  End If
  
  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     If Me.CheckBox62.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for open files." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||251||382||fffd||fffd||102||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox5.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     If Me.CheckBox16.Value = True And _
        Me.CheckBox60.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for ZIP archive search." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("ZIP|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox5.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox5.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  Application.ScreenUpdating = False

  If W_GREPTH <> "" And _
     SW_TH1ST = False Then
  Else
     STIME = time
  End If
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox62.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox18)
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox5)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox5
     Call MK_DIC
  End If

  If SW_NRML = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|2
  If (W_ATEXT <> "" And _
      W_FNDSTR2 <> "") Or _
     (W_ATEXT <> "" And _
      SW_NRML = True) Then
     Call UPD_REFCOMBO2
     
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox59
        Call MK_DIC
     End If
  
     If SW_NRML = False Then
        Set RE2 = CreateObject("VBScript.RegExp")
        With RE2
           .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
        End With
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If
  
  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grep1.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  ElseIf W_GREPTH <> "" And SW_TH1ST = False Then
  Else
     Me.CommandButton19.Enabled = False
     Me.CommandButton263.Enabled = False
     Me.CommandButton20.Enabled = False
     Me.CommandButton303.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton21.Enabled = True
     Me.ToggleButton19.Enabled = False
     If SW_CLASSIC2 = True Then
        Me.CommandButton21.SetFocus
     End If
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call UF_TM
        Call GREP2013S1
        Call UF_TM
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf W_GREPTH <> "" And T > 0 Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 15
        .Columns(5).ColumnWidth = 90
        If Me.CheckBox75.Value = True Then
           .Columns(6).ColumnWidth = 90
           .Range(.Columns(2), .Columns(6)).WrapText = True
        Else
           .Range(.Columns(2), .Columns(5)).WrapText = True
        End If
        
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox5.Value
        If Me.CheckBox62.Value = True Then
        ElseIf Me.TextBox3.Value = "" Then
           .Cells(2, 3).Value = "*" & Me.Label19.Caption
        Else
           .Cells(2, 3).Value = "'" & Me.TextBox3.Value & Me.Label19.Caption
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(3, 2).Value = "Target folder"
        Else
           .Cells(3, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
        End If
        If Me.CheckBox62.Value = True Then
        Else
           .Cells(3, 3).Value = Me.ComboBox18.Value
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(5, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(5, 2).Value = "File"
           .Cells(5, 3).Value = "Sheet"
           .Cells(5, 4).Value = "Cell"
           If Me.CheckBox3.Value = True Then
              .Cells(5, 5).Value = "Value"
           Else
              .Cells(5, 5).Value = "Formula"
           End If
        Else
           .Cells(5, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(5, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(5, 4).Value = "|fffd|Z|fffd||fffd|"
           If Me.CheckBox3.Value = True Then
              .Cells(5, 5).Value = "|fffd|l"
           Else
              .Cells(5, 5).Value = "|fffd||fffd||fffd||fffd|"
           End If
        End If
        If Me.CheckBox75.Value = True Then
           If Me.CheckBox49.Value = True Then
              .Cells(5, 6).Value = "Offset(" & Me.TextBox25.Value & "," & Me.TextBox26.Value & ")"
           Else
              .Cells(5, 6).Value = "|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g(" & Me.TextBox25.Value & "," & Me.TextBox26.Value & ")"
           End If
           .Range(.Cells(5, 1), .Cells(5, 6)).Borders.LineStyle = True
           .Range(.Cells(5, 1), .Cells(5, 6)).Interior.ColorIndex = 6
        Else
           .Range(.Cells(5, 1), .Cells(5, 5)).Borders.LineStyle = True
           .Range(.Cells(5, 1), .Cells(5, 5)).Interior.ColorIndex = 6
        End If
     End With
  End If
  
  FR = 5
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox18.Value)
     End If
  Else
     Call FCNT(Me.ComboBox18.Value)
  End If
  
  W_MAXP = 5
  
  If Me.CheckBox207.Value = True Then
     W_SW_CNV = Me.ComboBox5.Value
     If SW_NRML = True Then
        W_SW_CNV = SWING_CNV(Me.ComboBox5.Value)
     ElseIf W_NMLCHK <> "" Then
        W_SW_CNV = SWING_CNV(W_NMLCHK)
        W_SW_CNV = Replace(Me.ComboBox5.Value, W_NMLCHK, W_SW_CNV)
     End If
     If W_SW_CNV <> Me.ComboBox5.Value Then
        SW_NR = False
  
        SW_NRML = False
        W_NMLCHK = ""
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_SW_CNV) = False Then
           SW_NRML = True
        End If
        Set RE = Nothing
        
        If SW_NRML = True Then
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_SW_CNV
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        Else
           W_NMLCHK = NRML_CHK(W_SW_CNV, 1, True)
        End If
  
        If SW_NRML = False Then
           '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
           W_FNDSTR = FNDSTRCNV3(W_SW_CNV)
   
           Set RE = CreateObject("VBScript.RegExp")
           With RE
             .Pattern = W_FNDSTR
             .IgnoreCase = Not Me.CheckBox1.Value
             .Global = True
           End With
        End If
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox18.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grep5_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     
     W_GREP = ThisWorkbook.path & "\grep5.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
     
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
        If SW_NRML = False And _
           W_NMLCHK = "" Then
        ElseIf Me.CheckBox3.Value = True Then
        ElseIf Me.CheckBox32.Value = True Then
        Else
           If W_NMLCHK <> "" Then
              W_FW = W_NMLCHK
           Else
              W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
           End If
           If W_FW Like "*[A-Z]*" And _
              Me.CheckBox1.Value = True Then
           Else
              Call READ_IDX(False)
           End If
        End If
        
        If Me.ToggleButton11.Value = False Then
        ElseIf SW_NRML = False And _
           W_NMLCHK = "" Then
        ElseIf SW_ALLSHP = False Then
        ElseIf SW_INCSA = False Then
        Else
           If W_NMLCHK <> "" Then
              W_FW = W_NMLCHK
           Else
              W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
           End If
           If W_FW Like "*[A-Z]*" And _
              Me.CheckBox1.Value = True Then
           Else
              Call READ_IDX2
           End If
        End If
     End If
     
     Call GREP(Me.ComboBox18.Value, False, False, SW_NRML)
     
L_AFT_G:
     
     If W_ZPATH <> "" Then
        Set FSO = CreateObject("Scripting.FileSystemObject")
        If FSO.FolderExists(W_UZPATH) Then
           FSO.DeleteFolder W_UZPATH, True
        End If
        Set FSO = Nothing
        W_ZPATH = ""
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  ElseIf W_GREPTH <> "" Then
     If T < UBound(AR_WK) Then
     Else
        Me.CommandButton19.Enabled = True
        Me.CommandButton263.Enabled = True
        Me.CommandButton20.Enabled = True
        Me.CommandButton303.Enabled = True
        Me.CommandButton9.Enabled = True
        Me.CommandButton21.Enabled = False
        Me.ToggleButton19.Enabled = True
        Me.MultiPage1.Pages("Page1").Enabled = True
        Me.MultiPage1.Pages("Page2").Enabled = True
        Me.MultiPage1.Pages("Page3").Enabled = True
        Me.MultiPage1.Pages("Page4").Enabled = True
        Me.MultiPage1.Pages("Page5").Enabled = True
        Me.MultiPage1.Pages("Page6").Enabled = True
        Me.MultiPage1.Pages("Page7").Enabled = True
        Me.MultiPage1.Pages("Page8").Enabled = True
        Me.MultiPage1.Pages("Page9").Enabled = True
        Me.MultiPage1.Pages("Page10").Enabled = True
        Me.MultiPage1.Pages("Page11").Enabled = True
        Me.MultiPage1.Pages("Page12").Enabled = True
        Me.MultiPage1.Pages("Page13").Enabled = True
        Me.MultiPage1.Pages("Page14").Enabled = True
        Me.MultiPage1.Pages("Page15").Enabled = True
        Me.MultiPage1.Pages("Page16").Enabled = True
        Me.MultiPage1.Pages("Page17").Enabled = True
        Me.MultiPage1.Pages("Page18").Enabled = True
        Me.MultiPage1.Pages("Page19").Enabled = True
        Me.MultiPage1.Pages("Page20").Enabled = True
        Me.MultiPage1.Tag = ""
     End If
  Else
     Me.CommandButton19.Enabled = True
     Me.CommandButton263.Enabled = True
     Me.CommandButton20.Enabled = True
     Me.CommandButton303.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton21.Enabled = False
     Me.ToggleButton19.Enabled = True
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
         .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
                If InStr(AR_OPE(I), vbTab) > 0 Then
                   .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
                Else
                   .Cells(FR, 1).Value = AR_OPE(I)
                End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set NRE = Nothing
     Set NRE2 = Nothing
     Set RE = Nothing
     Set RE2 = Nothing
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If
  
  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Set NRE = Nothing
     Set NRE2 = Nothing
     Set RE = Nothing
     Set RE2 = Nothing
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 6))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 5), .Cells(FR + FR2 - 1, 5)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 6)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 5
                    On Error Resume Next
                    If Me.ToggleButton11.Value = False Then
                       ADDR1 = Me.ComboBox18.Value & "\" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 2).Value
                       ADDR2 = "'" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 3).Value & "'!" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Value
                    Else
                       ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Value
                       Set RNG = Nothing
                       On Error Resume Next
                       Set RNG = Range(ADDR2)
                       On Error GoTo 0
                       If RNG Is Nothing Then
                          ADDR1 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).Address
                          ADDR2 = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Hyperlinks(1).SubAddress
                       Else
                          Set RNG = Nothing
                          ADDR1 = Me.ComboBox18.Value & "\" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 2).Value
                          ADDR2 = "'" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 3).Value & "'!" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Value
                       End If
                    End If
                    .Hyperlinks.Add .Cells(J, 5), ADDR1, ADDR2
                    On Error GoTo 0
                 
                    If Me.CheckBox202.Value = True Then
                       W_SCT = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 7).Value
                       If W_SCT <> "" Then
                          W_COM = ""
                          AR_COM = Split(W_SCT, Chr$(1))
                          For W_R = 1 To CLng(AR_COM(0)) - 1
                             W_COM = W_COM & AR_COM(W_R) & vbCrLf
                          Next W_R
                          W_RBK = W_R
                          W_STC = Len(W_COM) + 1
                          W_LNC = Len(AR_COM(W_RBK))
                          For W_R = W_RBK To UBound(AR_COM)
                             W_COM = W_COM & AR_COM(W_R) & vbCrLf
                          Next W_R
                          W_COM = Left$(W_COM, Len(W_COM) - 1)
                          With .Cells(J, 5)
                             .AddComment
                             .Comment.text text:=W_COM
                             .Comment.Shape.TextFrame.Characters(W_STC, W_LNC).Font.Bold = True
                             .Comment.Shape.TextFrame.AutoSize = True
                          End With
                       End If
                    End If
                 Next J
              End With
           End If
        Next I
        
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 5 Then
           .Range(.Cells(6, 2), .Cells(FR, 6)).Sort Key1:=.Cells(6, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(3, 3)).Value
        .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
        .Columns(1).AutoFit
        If Me.CheckBox75.Value = True Then
           .Range(.Cells(5, 1), .Cells(FR, 6)).Borders.LineStyle = True
        Else
           .Range(.Cells(5, 1), .Cells(FR, 5)).Borders.LineStyle = True
        End If
        .Range(.Cells(1, 3), .Cells(3, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     If SW_NRML = False And _
        W_NMLCHK = "" Then
     ElseIf Me.CheckBox3.Value = True Then
     ElseIf Me.CheckBox32.Value = True Then
     Else
        If W_NMLCHK <> "" Then
           W_FW = W_NMLCHK
        Else
           W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
        End If
        If W_FW Like "*[A-Z]*" And _
           Me.CheckBox1.Value = True Then
        Else
           Call READ_IDX(False)
           Call WRITE_IDX(SW_NRML, False)
        End If
     End If
  
     If Me.ToggleButton11.Value = False Then
     ElseIf SW_NRML = False And _
        W_NMLCHK = "" Then
     ElseIf SW_ALLSHP = False Then
     ElseIf SW_INCSA = False Then
     Else
        If W_NMLCHK <> "" Then
           W_FW = W_NMLCHK
        Else
           W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
        End If
        If W_FW Like "*[A-Z]*" And _
           Me.CheckBox1.Value = True Then
        Else
           Call READ_IDX2
           Call WRITE_IDX2(SW_NRML)
        End If
     End If
  
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
  End If
  
  If SW_GHL = True Then
     For R = 6 To FR
        W_CELL = Workbooks(W_FRB).Worksheets(1).Cells(R, 5).Value
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_CELL)
           MAXJ = MATCHES.count - 1
        Else
           AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
           MAXJ = UBound(AR_STR)
        End If
  
        W_ST = 1
        For J = 0 To MAXJ
           SW_FIND = True
           If SW_FIND = True Then
              If SW_NR = False Then
                 W_POS = MATCHES.Item(J).FirstIndex + 1
                 W_LEN = MATCHES.Item(J).Length
              Else
                 AR_WK2 = Split(AR_STR(J), vbTab)
                 W_POS = CLng(AR_WK2(0)) + 1
                 W_LEN = CLng(AR_WK2(1))
              End If
              With Workbooks(W_FRB).Worksheets(1).Cells(R, 5).Characters(W_POS, W_LEN).Font
                 .ColorIndex = 3
              End With
              W_ST = W_POS + W_LEN
           Else
              If SW_NR = False Then
                 W_ST = W_ST + MATCHES.Item(J).Length
              Else
                 AR_WK2 = Split(AR_STR(J), vbTab)
                 W_ST = W_ST + CLng(AR_WK2(1))
              End If
           End If
        Next J
        Set MATCHES = Nothing
     Next R
  End If

  If SW_HSGREP = True And _
     W_PNO = 0 Then
     Application.WindowState = xlNormal
  End If

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  SW_INV = False
  
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     If SW_HSGREP = True And _
        W_PNO = 0 Then
        If W_GREPTH <> "" Then
           If T < UBound(AR_WK) Then
           Else
              Call GREP2013E1
           End If
        Else
           Call GREP2013E1
        End If
     Else
        Call GREP2013E1
     End If
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If

  If SW_HGERR = False Then
     If W_GREPTH <> "" Then
        If T < UBound(AR_WK) Then
           T = T + 1
           SW_TH1ST = False
           GoTo L_GREPTHS
        End If
     End If
  End If

L_GREPTHE:

  If W_GREPTH <> "" Then
     If T < UBound(AR_WK) Then
     Else
        Me.CommandButton19.Enabled = True
        Me.CommandButton263.Enabled = True
        Me.CommandButton20.Enabled = True
        Me.CommandButton303.Enabled = True
        Me.CommandButton9.Enabled = True
        Me.CommandButton21.Enabled = False
        Me.ToggleButton19.Enabled = True
        Me.MultiPage1.Pages("Page1").Enabled = True
        Me.MultiPage1.Pages("Page2").Enabled = True
        Me.MultiPage1.Pages("Page3").Enabled = True
        Me.MultiPage1.Pages("Page4").Enabled = True
        Me.MultiPage1.Pages("Page5").Enabled = True
        Me.MultiPage1.Pages("Page6").Enabled = True
        Me.MultiPage1.Pages("Page7").Enabled = True
        Me.MultiPage1.Pages("Page8").Enabled = True
        Me.MultiPage1.Pages("Page9").Enabled = True
        Me.MultiPage1.Pages("Page10").Enabled = True
        Me.MultiPage1.Pages("Page11").Enabled = True
        Me.MultiPage1.Pages("Page12").Enabled = True
        Me.MultiPage1.Pages("Page13").Enabled = True
        Me.MultiPage1.Pages("Page14").Enabled = True
        Me.MultiPage1.Pages("Page15").Enabled = True
        Me.MultiPage1.Pages("Page16").Enabled = True
        Me.MultiPage1.Pages("Page17").Enabled = True
        Me.MultiPage1.Pages("Page18").Enabled = True
        Me.MultiPage1.Pages("Page19").Enabled = True
        Me.MultiPage1.Pages("Page20").Enabled = True
        Me.MultiPage1.Tag = ""
     End If
  End If

  Application.ScreenUpdating = True
  AppActivate Application.Caption

  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 5 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Has completed search." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If
  
  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(5)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
        
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  If Application.Visible = False Then
  ElseIf W_GREPTH <> "" And T > 0 Then
  ElseIf Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf W_GREPTH <> "" And T > 0 Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton19.Enabled = True
  Me.CommandButton263.Enabled = True
  Me.CommandButton20.Enabled = True
  Me.CommandButton303.Enabled = True
  Me.CommandButton9.Enabled = True
  Me.CommandButton21.Enabled = False
  Me.ToggleButton19.Enabled = True
  Me.Label293.Width = 0
  Me.Label293.Caption = ""
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub EX_ON()

  Dim W_EX As String

  W_EX = ThisWorkbook.path & "\grep5.ex"

  Do While Dir(W_EX) <> ""
  Loop

  Open W_EX For Output As #1
  Close #1

End Sub

Private Sub EX_OFF()

  Dim W_EX As String

  W_EX = ThisWorkbook.path & "\grep5.ex"
  Kill (W_EX)

End Sub

Private Sub CommandButton21_Click()
'Grep|fffd||fffd||fffd|~
  
  Dim W_GREPC As String
  
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  If W_CLKBTN = "Word" Then
     SW_STOP = True
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     Open W_GREPC For Output As #1
     Close #1
  Else
     SW_STOP = True
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub ToggleButton19_Change()

  If Me.ToggleButton19.Value = True Then
     Me.TextBox67.Visible = True
     Me.TextBox67.SetFocus
  End If

End Sub

Private Sub TextBox67_Change()

  Me.TextBox68.Value = Me.TextBox67.Value
  Me.TextBox69.Value = Me.TextBox67.Value
  W_GREPTH = Replace(Me.TextBox67.Value, vbCrLf, vbTab)

End Sub

Private Sub TextBox67_Enter()

  Me.TextBox67.BackColor = &HC0FFFF

End Sub

Private Sub TextBox67_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox67.BackColor = &H80000005
  Me.TextBox67.Visible = False
  Me.ToggleButton19.Value = False

End Sub

Private Sub CommandButton30_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|Q|fffd||fffd|

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "..."
    
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If Me.CheckBox49.Value = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox19.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox19.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox19.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton264_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|

  Dim I As Long
    
    
  On Error GoTo LABEL_REP
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  W_EVAR = ""
  W_CLKBTN = "Up"
    
  If InStr(Me.ComboBox19.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox19.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox19.Value = Left$(Me.ComboBox19.Value, I)
        If Right$(Me.ComboBox19.Value, 1) = ":" Then
           Me.ComboBox19.Value = Me.ComboBox19.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox19.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub CommandButton31_Click()
'Grep|fffd|u|fffd||fffd|
  
  Dim I As Long
  Dim J As Long
  Dim W_COLB As Variant
  Dim W_FNDSTR As String
  Dim FSO As Object
  Dim SW_RE2 As Boolean

  Dim SW_NRML As Boolean
  Dim W_GREP As String

  Dim XL1 As Object
  Dim FR2 As Long
  Dim W_RNG As Variant
  Dim ADDR1 As String
  Dim ADDR2 As String

  Dim W_AC As Long
  Dim SW_INV As Boolean

  Dim SW_CHGHG As Boolean

  Dim SW_HGERR As Boolean
  Dim W_ENO As Long

  Dim W_GREPC As String

  Dim DWB As Workbook
  Dim SW_FRB As Boolean

  Dim STIME As Date
  Dim NTIME As Date
  Dim W_FW As String

  Dim W_IDX As String
  Dim W_IDXC As String

  Dim SW_XL4 As Boolean


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Execute"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox8.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  SW_NR2 = False
  
  SW_NRML = False
  W_NMLCHK = ""
  If Me.CheckBox74.Value = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(Me.ComboBox8.Value) = False Then
        SW_NRML = True
     End If
     Set RE = Nothing
  End If
        
  If SW_NRML = True Then
     If W_ATEXT <> "" Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_ATEXT) = True Then
           SW_NRML = False
        End If
        Set RE = Nothing
     End If
  End If
        
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$\\\[\]]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(Me.ComboBox9.Value) = True Then
        SW_NRML = False
     End If
     Set RE = Nothing
  End If
  
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = Me.ComboBox8.Value         '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  Else
     If Me.CheckBox74.Value = False Then
        W_NMLCHK = NRML_CHK(Me.ComboBox1.Value, 1, True)
     End If
  End If
  
  If SW_NRML = False Then
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
     W_FNDSTR = FNDSTRCNV3(Me.ComboBox8.Value)
  
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     SW_RE2 = False
     If SW_NRE = True Then
        SW_NR = True
     Else
        On Error GoTo LABEL_ERR
        RE.Test (" ")
        On Error GoTo LABEL_REP
     End If
     Set RE = Nothing
     If SW_NR = True Then
        Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
        If NRE Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox63.Value = True Then
  ElseIf Me.TextBox5.Value = "" Then
     W_FFILE = "*" & Me.Label28.Caption
     W_FFILE2 = "*.xls"
  Else
     W_FFILE = Me.TextBox5.Value & Me.Label28.Caption
     W_FFILE2 = Me.TextBox5.Value & ".xls"
  End If
   
  '|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_
  If Me.CheckBox63.Value = True Then
  ElseIf Me.ComboBox19.Value = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Target folder is empty.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
     End If
     If SW_CLASSIC2 = True Then
        If Me.ComboBox19.Visible = True Then
           Me.ComboBox19.SetFocus
        End If
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  Else
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FolderExists(Me.ComboBox19.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Target folder dosen't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Set FSO = Nothing
        If SW_CLASSIC2 = True Then
           If Me.ComboBox19.Visible = True Then
              Me.ComboBox19.SetFocus
           End If
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     Set FSO = Nothing
  End If

  '|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
  If Me.CheckBox63.Value = True Then
     If WINDOWCHK = False Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  If SW_NRML = False Then
     If W_ATEXT <> "" Then
        W_FNDSTR2 = FNDSTRCNV3(W_ATEXT)
     
        If W_FNDSTR2 <> "" Then
           Set RE2 = CreateObject("VBScript.RegExp")
           With RE2
              .Pattern = W_FNDSTR2                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
              .IgnoreCase = Not Me.CheckBox1.Value   '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
              .Global = True                         '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
           End With
           SW_RE2 = True
           If SW_NRE = True Then
              SW_NR2 = True
           Else
              On Error GoTo LABEL_ERR
              RE2.Test (" ")
              On Error GoTo 0
           End If
           Set RE2 = Nothing
           If SW_NR2 = True Then
              Set NRE2 = NRCHK(W_FNDSTR2, Not Me.CheckBox1.Value)
              If NRE2 Is Nothing Then
                 GoTo LABEL_ERR2
              End If
           End If
        End If
     End If
  End If
  
  SW_CHGHG = False
  
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Application.Visible = True Then
     If Me.CheckBox63.Value = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep for open files." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||251||382||fffd||fffd||102||34d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox8.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
     Else
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("You can't do high speed grep because not the first Excel." & vbCrLf & _
                          "Will continue with normal mode.", vbExclamation + vbOKCancel)
        Else
           W_RET = MsgBox("|fffd||14f||fffd||fffd||fffd|Excel|fffd||142||202||fffd||fffd||302||14d||fffd||fffd||fffd|Grep|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||28f||d0c2||fffd|[|fffd|h|fffd||151||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
        End If
        If W_RET = vbOK Then
           SW_CHGHG = True
           SW_HSGREP = False
        Else
           If SW_CLASSIC2 = True Then
              Me.ComboBox8.SetFocus
           End If
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  Set XL1 = GetObject(, "Excel.Application")
  If XL1 Is Application Then
     If Dir(ThisWorkbook.path & "\grep*.vbs") <> "" Then
        Set XL1 = Nothing
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Executing Grep. Stop?", vbYesNo + vbQuestion)
        Else
           W_RET = MsgBox("Grep|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
        End If
        If W_RET = vbYes Then
           W_GREPC = ThisWorkbook.path & "\grepC.vbs"
           Open W_GREPC For Output As #1
           Close #1
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  Set XL1 = Nothing
  
  W_GREP = ThisWorkbook.path & "\grep2.vbs"
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = True Then
     If Me.CheckBox49.Value = True Then
        If MsgBox("Will do grep replace.", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     Else
        If MsgBox("Grep|fffd|u|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
           Call COMBO_FOCUS
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           If SW_CHGHG = True Then
              SW_HSGREP = True
           End If
           Exit Sub
        End If
     End If
  End If

  W_IDX = ThisWorkbook.path & "\bgf2.vbs"
  If Dir(W_IDX) = "" Then
  Else
     W_IDX = ThisWorkbook.path & "\bgfC2.vbs"
     If Dir(W_IDX) = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Background find will be off.", vbOKCancel)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
        End If
        If W_RET = vbOK Then
           Me.ToggleButton15.Value = True
        Else
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Exit Sub
        End If
     End If
  End If
  
  W_IDX = ThisWorkbook.path & "\idx.vbs"
  If Dir(W_IDX) <> "" Then
     W_IDXC = ThisWorkbook.path & "\idxC.vbs"
     Open W_IDXC For Output As #1
     Close #1
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                       "After a while, please execute again.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Application.ScreenUpdating = False
  
  STIME = time
  
  W_CNTRA = 0
  W_CNTRA2 = 0
  SW_PRA = False
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  '|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.CheckBox63.Value = False Then
     Call UPD_DIRCOMBO(Me.ComboBox19)
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox8)

  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox8
     Call MK_DIC
  End If

  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox9.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox9)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox9
        Call MK_DIC
     End If
  End If

  If SW_NRML = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  End If

  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|2
  If (W_ATEXT <> "" And _
      W_FNDSTR2 <> "") Or _
     (W_ATEXT <> "" And _
      SW_NRML = True) Then
     Call UPD_REFCOMBO2
     
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox59
        Call MK_DIC
     End If
  
     If SW_NRML = False Then
        Set RE2 = CreateObject("VBScript.RegExp")
        With RE2
           .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
        End With
     End If
  End If

  If Val(Application.Version) >= 15 Then
     If Me.CheckBox65.Value = True Then
        If XL4 Is Nothing Then
        Else
           SW_XL4 = True
           Unload UserForm10
        End If
     End If
  End If

  If SW_HSGREP = True Then
     Set XL1 = GetObject(, "Excel.Application")
     If XL1 Is Application Then
        Set XL1 = Nothing
        W_GREP = ThisWorkbook.path & "\grep2.vbs"
        If Dir(W_GREP) = "" Then
           Call SAVE_SETTING
           Call INI_WRITE_RTN
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
           If Val(Application.Version) >= 15 Then
              Call SETTM_UF
           End If
           W_CLKBTN = ""
           Application.ScreenUpdating = True
           SW_HIDE = True
           Unload Me
           SW_HIDE = False
           Exit Sub
        End If
     End If
     Set XL1 = Nothing
  End If
  
  SW_STOP = False
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_FRB = True
  ElseIf Application.Visible = False Then
  Else
     Me.CommandButton30.Enabled = False
     Me.CommandButton264.Enabled = False
     Me.CommandButton31.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton32.Enabled = True
     If SW_CLASSIC2 = True Then
        Me.CommandButton32.SetFocus
     End If
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S1
     End If
     
     Workbooks.Add
     
     W_AC = Application.Calculation
     Application.Calculation = xlCalculationManual
     
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     
     W_FRB = Workbooks(Workbooks.count).Name
     With Workbooks(W_FRB).Worksheets(1)
        .Columns(2).ColumnWidth = 30
        .Columns(3).ColumnWidth = 30
        .Columns(4).ColumnWidth = 15
        .Columns(5).ColumnWidth = 90
        .Range(.Columns(2), .Columns(5)).WrapText = True
        If Me.CheckBox49.Value = True Then
           .Cells(1, 2).Value = "Find what"
           .Cells(2, 2).Value = "Replace with"
           .Cells(3, 2).Value = "Target file"
        Else
           .Cells(1, 2).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(2, 2).Value = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
           .Cells(3, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
        .Cells(1, 3).Value = "'" & Me.ComboBox8.Value
        .Cells(2, 3).Value = "'" & Me.ComboBox9.Value
        If Me.CheckBox63.Value = False Then
           If Me.TextBox5.Value = "" Then
              .Cells(3, 3).Value = "*" & Me.Label28.Caption
           Else
              .Cells(3, 3).Value = "'" & Me.TextBox5.Value & Me.Label28.Caption
           End If
        End If
        If Me.CheckBox49.Value = True Then
           .Cells(4, 2).Value = "Target folder"
        Else
           .Cells(4, 2).Value = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
        End If
        If Me.CheckBox63.Value = False Then
           .Cells(4, 3).Value = Me.ComboBox19.Value
        End If
        .Columns(3).NumberFormatLocal = "@"
        .Cells(6, 1).Value = "No."
        If Me.CheckBox49.Value = True Then
           .Cells(6, 2).Value = "File"
           .Cells(6, 3).Value = "Sheet"
           .Cells(6, 4).Value = "Cell"
           If Me.CheckBox3.Value = True Then
              .Cells(6, 5).Value = "Value"
           Else
              .Cells(6, 5).Value = "Formula"
           End If
        Else
           .Cells(6, 2).Value = "|fffd|t|fffd|@|fffd|C|fffd||fffd|"
           .Cells(6, 3).Value = "|fffd|V|fffd|[|fffd|g"
           .Cells(6, 4).Value = "|fffd|Z|fffd||fffd|"
           If Me.CheckBox3.Value = True Then
              .Cells(6, 5).Value = "|fffd|l"
           Else
              .Cells(6, 5).Value = "|fffd||fffd||fffd||fffd|"
           End If
        End If
        .Range(.Cells(6, 1), .Cells(6, 5)).Borders.LineStyle = True
        .Range(.Cells(6, 1), .Cells(6, 5)).Interior.ColorIndex = 6
     End With
  End If
  
  FR = 6
  Erase AR_OPE
  W_OPE = 0
  SW_OPE = False
  W_ZPATH = ""
  W_UZPATH = ""
  
  W_FCNT = 0
  W_CLCNT = 0
  If SW_HSGREP = True Then
     If W_PNO = 0 Then
        Call FCNT(Me.ComboBox18.Value)
     End If
  Else
     Call FCNT(Me.ComboBox19.Value)
  End If
  
  W_MAXP = 5
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     
     With Workbooks(W_FRB)
        Do While .Worksheets.count < W_MAXP + 3
           .Worksheets.Add After:=.Worksheets(.Worksheets.count)
        Loop
        Call FGET(Me.ComboBox19.Value)
     End With
     
     W_FRBS = W_FRB
     Call SAVE_SETTING
     Call INI_WRITE_RTN
     For I = 1 To W_MAXP
        W_GREP = ThisWorkbook.path & "\grep6_" & I & ".vbs"
        If Dir(W_GREP) = "" Then
           Call GREP_WRITE_RTN(W_GREP)
           Call NRTASK(NRE, ThisWorkbook.path & "\" & ThisWorkbook.Name, True)
        Else
           I = I - 1
        End If
     Next I
     W_GREP = ThisWorkbook.path & "\grep6.vbs"
     Open W_GREP For Output As #1
     Close #1
     Application.Visible = True
     Application.WindowState = xlMinimized
     Application.ScreenUpdating = False
     If Val(Application.Version) < 10 Then
        Application.Visible = False
     Else
        Call EXCELAPPHIDE
     End If
     
     Do While Dir(W_GREP) <> ""
        DoEvents
     Loop
  
     Application.Visible = True
  Else
     Application.EnableEvents = False
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set DWB = Nothing
        Set DWB = Workbooks.Add
        Application.Calculation = xlCalculationManual
        Windows(DWB.Name).Visible = False
        If SW_NRML = False And _
           W_NMLCHK = "" Then
        ElseIf Me.CheckBox3.Value = True Then
        Else
           If W_NMLCHK <> "" Then
              W_FW = W_NMLCHK
           Else
              W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
           End If
           If W_FW Like "*[A-Z]*" And _
              Me.CheckBox1.Value = True Then
           Else
              Call READ_IDX(False)
           End If
        End If
     End If
     
     Call GREP(Me.ComboBox19.Value, True, False, SW_NRML)
     
L_AFT_G:
     
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
  Else
     Me.CommandButton30.Enabled = True
     Me.CommandButton264.Enabled = True
     Me.CommandButton31.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton32.Enabled = False
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If

  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  Erase AR_REP
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_HSGREP = True And _
     W_PNO = 0 Then
  Else
     With Workbooks(W_FRB).Worksheets(1)
         W_COLB = .Range(.Cells(1, 3), .Cells(4, 3)).Value
         .Range(.Cells(1, 3), .Cells(4, 3)).ClearContents
         .Columns(1).AutoFit
         .Range(.Cells(1, 3), .Cells(4, 3)).Value = W_COLB
         If SW_OPE = True Then
            FR = FR + 2
            If Me.CheckBox49.Value = True Then
               .Cells(FR, 1).Value = "Files that can't open"
            Else
               .Cells(FR, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
            End If
            For I = 1 To W_OPE
               FR = FR + 1
               If InStr(AR_OPE(I), vbTab) > 0 Then
                  .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
               Else
                  .Cells(FR, 1).Value = AR_OPE(I)
               End If
            Next I
         End If
     End With
  End If

  If SW_HSGREP = True And _
     W_PNO > 0 And _
     W_OPE > 0 And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        If .Cells(1, 1).Value = "" Then
           If Me.CheckBox49.Value = True Then
              .Cells(1, 1).Value = "Files that can't open"
           Else
              .Cells(1, 1).Value = "|fffd|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
           End If
        End If
        For I = 1 To W_OPE
           FR = .Cells(.Rows.count, 1).End(xlUp).Row
           FR = FR + 1
           If InStr(AR_OPE(I), vbTab) > 0 Then
              .Cells(FR, 1).Value = Left$(AR_OPE(I), InStr(AR_OPE(I), vbTab) - 1) & "!Worksheets(" & Right$(AR_OPE(I), Len(AR_OPE(I)) - InStr(AR_OPE(I), vbTab)) & ")"
           Else
              .Cells(FR, 1).Value = AR_OPE(I)
           End If
        Next I
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 And _
     SW_HGERR = True And _
     SW_FRB = True Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 2)
        .Cells(1, 2).Value = "E"
        .Cells(1, 3).Value = W_ENO
        .Cells(1, 4).Value = W_EVAR
     End With
     Set XL1 = Nothing
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_FRB = W_FRBS
     Set XL1 = XL2ND
     With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
        .Cells(1, 1).Value = W_CNTRA
        .Cells(1, 2).Value = W_CNTRA2
        .Cells(1, 3).Value = SW_PRA
     End With
     Set XL1 = Nothing
     
     DWB.Close False
     Set DWB = Nothing
     Application.EnableEvents = True
     Set XL2ND = Nothing
     DoEvents
     Exit Sub
  End If

  If SW_STOP = True Then
     Application.ScreenUpdating = True
     Call COMBO_FOCUS
     If Application.Visible = False Then
     ElseIf Application.WindowState = xlMinimized Then
     ElseIf Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     If SW_CHGHG = True Then
        SW_HSGREP = True
     End If
     Exit Sub
  End If
 
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     With Workbooks(W_FRB)
        With .Worksheets(W_MAXP + 2)
           If .Cells(1, 2).Value = "E" Then
              SW_HGERR = True
              W_ENO = .Cells(1, 3).Value
              W_EVAR = .Cells(1, 4).Value
           End If
        End With
        
        .Worksheets(1).Activate
        Application.WindowState = xlNormal
        
        For I = 1 To W_MAXP
           W_CNTRA = W_CNTRA + .Worksheets(I + 1).Cells(1, 1).Value
           W_CNTRA2 = W_CNTRA2 + .Worksheets(I + 1).Cells(1, 2).Value
           If SW_PRA = False Then
              SW_PRA = .Worksheets(I + 1).Cells(1, 3).Value
           End If
           If .Worksheets(I + 1).Cells(2, 2).Value <> "" Then
              With .Worksheets(I + 1)
                 FR2 = .Cells(.Rows.count, 2).End(xlUp).Row
                 W_RNG = .Range(.Cells(2, 2), .Cells(FR2, 6))
              End With
              With .Worksheets(1)
                 FR = .Cells(.Rows.count, 2).End(xlUp).Row
                 .Range(.Cells(FR + 1, 5), .Cells(FR + FR2 - 1, 5)).NumberFormatLocal = "@"
                 .Range(.Cells(FR + 1, 2), .Cells(FR + FR2 - 1, 6)) = W_RNG
              End With
              With .ActiveSheet
                 For J = FR + 1 To FR + FR2 - 1
                    .Cells(J, 1).Value = J - 6
                    On Error Resume Next
                    ADDR1 = Me.ComboBox19.Value & "\" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 2).Value
                    ADDR2 = "'" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 3).Value & "'!" & Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 4).Value
                    .Hyperlinks.Add .Cells(J, 5), ADDR1, ADDR2
                    On Error GoTo 0
                    .Cells(J, 5).Interior.ColorIndex = Workbooks(W_FRB).Worksheets(I + 1).Cells(J - FR + 1, 5).Interior.ColorIndex
                 Next J
              End With
           End If
        Next I
     
        Application.WindowState = xlMinimized
     End With
     
     With Workbooks(W_FRB).Worksheets(1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
        If FR > 6 Then
           .Range(.Cells(7, 2), .Cells(FR, 6)).Sort Key1:=.Cells(7, 2), Orientation:=xlTopToBottom
        End If
     End With
  
     With Workbooks(W_FRB).Worksheets(1)
        W_COLB = .Range(.Cells(1, 3), .Cells(4, 3)).Value
        .Range(.Cells(1, 3), .Cells(3, 3)).ClearContents
        .Columns(1).AutoFit
        .Range(.Cells(6, 1), .Cells(FR, 5)).Borders.LineStyle = True
        .Range(.Cells(1, 3), .Cells(4, 3)).Value = W_COLB
     End With
  
     With Workbooks(W_FRB)
        If .Worksheets(W_MAXP + 2).Cells(1, 1).Value <> "" Then
           FR2 = .Worksheets(W_MAXP + 2).Cells(.Worksheets(W_MAXP + 2).Rows.count, 1).End(xlUp).Row
           For I = 1 To FR2
              .Worksheets(1).Cells(FR + 1 + I, 1).Value = .Worksheets(W_MAXP + 2).Cells(I, 1).Value
           Next I
        End If
     End With
  
     If SW_NRML = False And _
        W_NMLCHK = "" Then
     ElseIf Me.CheckBox3.Value = True Then
     Else
        If W_NMLCHK <> "" Then
           W_FW = W_NMLCHK
        Else
           W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
        End If
        If W_FW Like "*[A-Z]*" And _
           Me.CheckBox1.Value = True Then
        Else
           Call READ_IDX(False)
           Call WRITE_IDX(SW_NRML, False)
        End If
     End If
     
     With Workbooks(W_FRB)
        Application.DisplayAlerts = False
        Do While .Worksheets.count > 1
           .Worksheets(.Worksheets.count).Delete
        Loop
        Application.DisplayAlerts = True
     End With
  
     Workbooks(W_FRB).Windows(1).Visible = True
     Application.WindowState = xlNormal
  End If
  
  Workbooks(W_FRB).Activate
  Application.Calculation = W_AC
  Application.EnableEvents = True
  Application.ScreenUpdating = True

  SW_INV = False
  If Application.Visible = False Then
     SW_INV = True
     Application.Visible = True
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     If Dir(W_GREPC) <> "" Then
        W_GREPC = ThisWorkbook.path & "\grep*.vbs"
        On Error Resume Next
        Kill (W_GREPC)
        On Error GoTo 0
        
        Application.ScreenUpdating = True
        Call COMBO_FOCUS
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013E2
           Call SETTM_UF
           Call GREP2013E3
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  If SW_CHGHG = True Then
     SW_HSGREP = True
  End If
  
  Application.ScreenUpdating = True
  AppActivate Application.Caption
  
  If SW_HGERR = True Then
     On Error GoTo LABEL_REP
     Error (W_ENO)
  ElseIf FR = 6 Then
     NTIME = time
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("No data found." & vbCrLf & _
                       vbCrLf & _
                       "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "File: " & W_FCNT, vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||42a8c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                       vbCrLf & _
                       "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                       "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
     End If
  Else
     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
     NTIME = time
     If W_CNTRA = W_CNTRA2 Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                          vbCrLf & _
                          "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "File: " & W_FCNT, vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          vbCrLf & _
                          "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
        End If
     Else
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Has completed search and replacement." & vbCrLf & _
                          "Cells that can't be replaced because of formula error after replace exist." & vbCrLf & _
                          vbCrLf & _
                          "Elapsed time: " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "File: " & W_FCNT, vbInformation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|" & vbCrLf & _
                          vbCrLf & _
                          "|fffd|o|fffd||7ce||fffd||fffd||501|F " & Format(Minute(NTIME - STIME), "00") & "'" & Format(Second(NTIME - STIME), "00") & vbCrLf & _
                          "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|F " & W_FCNT, vbInformation)
        End If
     End If
     If SW_PRA = True Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Sheets that can't be replaced because of protection exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||6cc||c0b3||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
        End If
     End If
  End If
  
  If SW_INV = True Then
     Application.Visible = False
     SW_INV = False
  End If
  
  If Me.CheckBox60.Value = False And _
     Me.CheckBox62.Value = False And _
     SW_PRGRSS = True Then
     Me.Label293.Width = 0
     Me.Label293.Caption = ""
  End If

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(7)
  End If
  
  Call COMBO_FOCUS
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  
     If Me.CheckBox65.Value = True Then
        If SW_XL4 = True Then
           UserForm10.Show vbModeless
        End If
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  Set RE2 = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     W_ENO = Err.Number
     Err.Clear
     SW_HGERR = True
     W_FRB = W_FRBS
     SW_FRB = False
     Set XL1 = XL2ND
     For I = 1 To XL1.Workbooks.count
        If XL1.Workbooks(I).Name = W_FRB Then
           SW_FRB = True
           Exit For
        End If
     Next
     Set XL1 = Nothing
     
     Resume L_AFT_G
  End If
  
  If Application.Visible = False Then
  ElseIf Application.WindowState = xlMinimized Then
     Application.WindowState = xlNormal
  ElseIf Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  Call REPORT_RTN
  Me.CommandButton30.Enabled = True
  Me.CommandButton264.Enabled = True
  Me.CommandButton31.Enabled = True
  Me.CommandButton9.Enabled = True
  Me.CommandButton32.Enabled = False
  If Application.Visible = False Then
  ElseIf Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton32_Click()
'Grep|fffd|u|fffd||fffd||fffd||fffd||fffd|~
  
  Dim W_GREPC As String
  
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Cancel"
  If SW_HSGREP = True And _
     W_PNO = 0 Then
     W_GREPC = ThisWorkbook.path & "\grepC.vbs"
     Open W_GREPC For Output As #1
     Close #1
  Else
     SW_STOP = True
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton33_Click()
'|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|

  Dim W_OBJSTR1 As String
  Dim W_OBJSTR2 As Variant
  Dim MATCHES As Object
  Dim W_L32C As String
  Dim W_L33C As String
  Dim W_ST As Long
  Dim W_ED As Long
  Dim W_STR As String
  Dim W_POS As Long
  Dim W_POS2 As Long
  Dim W_LEN As Long
  Dim W_LF As Long
  Dim I As Long
  Dim J As Long
  Dim SW_1ST As Boolean
  Dim W_SPACE As Long
  Dim W_FNDSTR As String

  Dim W_STR2 As String
  Dim SW_FIND As Boolean
  Dim W_ST2 As Long

  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String


  On Error GoTo LABEL_REP
  
  W_EVAR = Me.TextBox7.Value
  W_CLKBTN = "Find"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox12.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||38f||6d5||fffd||fffd||fffd||fffd||56893||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.TextBox7.Value = "" Then
     Me.TextBox7.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox12.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If
  
  '|fffd||fffd||fffd||283|N|fffd||fffd||fffd|A
  Me.Label32.Caption = ""
  Me.Label33.Caption = ""

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox12)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox12
     Call MK_DIC
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_OBJSTR1 = Application.Substitute(Me.TextBox7.Value, vbCr, "")
  If Me.CheckBox32.Value = True Then
     W_OBJSTR2 = Application.Substitute(W_OBJSTR1, vbLf, "")
  Else
     W_OBJSTR2 = W_OBJSTR1
  End If
  If IsNumeric(W_OBJSTR2) = True Then
     W_OBJSTR2 = CDbl(W_OBJSTR2)
  End If
   
  W_SPFND = SP_FND(W_OBJSTR2, 1)
  
  Select Case W_SPFND
  Case 0
     If SW_NR = False Then
        SW_WK = RE.Test(W_OBJSTR2)
     Else
        SW_WK = NRTEST(NRE, CStr(W_OBJSTR2))
     End If
     
     If SW_WK = True Then
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_OBJSTR2)
           MAXJ = MATCHES.count - 1
        Else
           AR_STR = Split(NREXE(NRE, W_OBJSTR2), vbCrLf)
           MAXJ = UBound(AR_STR)
        End If
        
        W_ST = 1
        W_ST2 = 1
        W_ED = 0
        W_L32C = W_OBJSTR1
        W_L33C = W_OBJSTR1
        
        For J = 0 To MAXJ
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
              W_VL = MATCHES.Item(J).Value
           Else
              AR_WK = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK(0))
              W_LN = CLng(AR_WK(1))
              W_VL = Mid$(W_OBJSTR2, W_FI + 1, W_LN)
           End If
           
           SW_FIND = True
           If SW_FIND = True Then
              W_LF = 0
              W_POS = InStr(W_ST, W_OBJSTR2, W_VL, vbBinaryCompare)
              W_POS2 = W_POS
              If Me.CheckBox32.Value = True Then
                 If W_POS > 1 Then
                    W_STR = Left$(W_OBJSTR1, W_POS - 1)
                    For I = 1 To Len(W_STR)
                       If Mid$(W_STR, I, 1) = vbLf Then
                          W_LF = W_LF + 1
                       End If
                    Next I
                 End If
                 W_POS = W_POS + W_LF
              End If
              W_LEN = W_LN
        
              If Me.CheckBox32.Value = True Then
                 W_STR = Mid$(W_OBJSTR1, W_POS, W_LEN)
                 If InStr(W_STR, vbLf) > 0 Then
                    SW_1ST = True
                    W_LF = 0
                    Do While (Right$(W_STR, 1) = vbLf Or _
                       SW_1ST = True) And _
                       W_LEN <= Len(W_OBJSTR1) - W_POS
                       SW_1ST = False
                       For I = 1 To Len(W_STR)
                          If Mid$(W_STR, I, 1) = vbLf Then
                             W_LF = W_LF + 1
                          End If
                       Next I
                       W_LEN = W_LEN + W_LF
                       W_STR = Mid$(W_OBJSTR1, W_POS, W_LEN)
                    Loop
                 End If
              End If
        
              For I = 1 To Len(W_L33C)
                 If I > W_ED Then
                    If I < W_POS Then
                       If Mid$(W_L33C, I, 1) <> vbLf Then
                          W_SPACE = LenB(StrConv(Mid$(W_L33C, I, 1), vbFromUnicode))
                          If W_SPACE = 1 Then
                             Mid$(W_L33C, I, 1) = String$(1, " ")
                          Else
                             Mid$(W_L33C, I, 1) = String$(1, "|fffd|@")
                          End If
                       End If
                    Else
                       If Mid$(W_L33C, I, 1) <> vbLf Then
                          W_SPACE = LenB(StrConv(Mid$(W_L33C, I, 1), vbFromUnicode))
                          If W_SPACE = 1 Then
                             Mid$(W_L32C, I, 1) = String$(1, " ")
                          Else
                             Mid$(W_L32C, I, 1) = String$(1, "|fffd|@")
                          End If
                       End If
                       If I = W_POS + W_LEN - 1 Then
                          W_ED = I
                          Exit For
                       End If
                    End If
                 End If
              Next I
              W_ST = W_POS2 + W_LN
              W_ST2 = W_POS + W_LEN
           Else
              W_ST = W_ST + W_LN
           End If
        Next J
        Set MATCHES = Nothing
        W_L33C = Left$(W_L33C, W_ST2 - 1)
        Me.Label32.Caption = W_L32C
        Me.Label33.Caption = W_L33C
     Else
        Me.Label32.Caption = W_OBJSTR1
     End If
  Case 1
     Me.Label32.Caption = W_OBJSTR1
  Case 2
     Me.Label33.Caption = W_OBJSTR1
  End Select

  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(8)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton34_Click()
'|fffd|`|fffd|F|fffd|b|fffd|N|fffd|u|fffd||fffd|

  Dim W_REPTXT As String
  Dim I As Long
  Dim J As Long
  Dim W_OBJSTR1 As Variant
  Dim W_OBJSTR1BK As Variant
  Dim W_FNDSTR As String

  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_SPACE As Long

  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim W_STR1A As String

  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK2 As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String


  On Error GoTo LABEL_REP
  
  W_EVAR = Me.TextBox7.Value
  W_CLKBTN = "Replace"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.ComboBox12.Value = "" Then
     Call COMBO_FOCUS
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd||38f||6d5||fffd||fffd||fffd||fffd||56893||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If Me.TextBox7.Value = "" Then
     Me.TextBox7.SetFocus
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  SW_NR = False
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV3(Me.ComboBox12.Value)
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  If SW_NRE = True Then
     SW_NR = True
  Else
     On Error GoTo LABEL_ERR
     RE.Test (" ")
     On Error GoTo LABEL_REP
  End If
  Set RE = Nothing
  If SW_NR = True Then
     Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
     If NRE Is Nothing Then
        GoTo LABEL_ERR2
     End If
  End If

  '|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||355|s|fffd||fffd|
  If Me.CheckBox32.Value = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("""Cross lines"" isn't effective at replace." & vbCrLf & _
                       "Continue?", vbQuestion + vbOKCancel)
     Else
        W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||fffd||341|u|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|v|fffd||354||fffd||fffd|f|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                       "|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
     End If
     If W_RET = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
  
  '|fffd||fffd||fffd||283|N|fffd||fffd||fffd|A
  Me.Label32.Caption = ""
  Me.Label33.Caption = ""

  Application.ScreenUpdating = False
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  Call UPD_REFCOMBO(Me.ComboBox12)
  
  '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
  If Me.CheckBox37.Value = True Then
     Set W_BOX = Me.ComboBox12
     Call MK_DIC
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If Me.ComboBox13.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox13)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox13
        Call MK_DIC
     End If
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  
  W_OBJSTR1 = Application.Substitute(Me.TextBox7.Value, vbCr, "")
  If IsNumeric(W_OBJSTR1) = True Then
     W_OBJSTR1 = CDbl(W_OBJSTR1)
  End If
  
  W_SPFND = SP_FND(W_OBJSTR1, 1)
  Select Case W_SPFND
  Case 0
     If SW_NR = False Then
        SW_WK = RE.Test(W_OBJSTR1)
     Else
        SW_WK = NRTEST(NRE, CStr(W_OBJSTR1))
     End If
     
     If SW_WK = True Then
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_OBJSTR1)
           MAXJ = MATCHES.count - 1
           RE.Global = False
        Else
           AR_STR = Split(NREXE(NRE, W_OBJSTR1), vbCrLf)
           MAXJ = UBound(AR_STR)
           AR_RES = Split(NRRES(NRE, W_OBJSTR1, REPSTRCNV(Me.ComboBox13.Value)), Chr$(1))
           If UBound(AR_RES) = -1 Then
              ReDim AR_RES(0 To MAXJ)
           End If
           W_OBJSTR1BK = W_OBJSTR1
        End If
  
        W_ST = 1
        For J = 0 To MAXJ
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
              W_VL = MATCHES.Item(J).Value
           Else
              AR_WK2 = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK2(0))
              W_LN = CLng(AR_WK2(1))
              W_VL = Mid$(W_OBJSTR1BK, W_FI + 1, W_LN)
              W_RS = AR_RES(J)
           End If
              
           If RE.Pattern = "$" Then
              W_POS = Len(W_OBJSTR1) + 1
           Else
              If W_LN = 0 Then
                 If J > 0 Then
                    W_ST = W_ST + 1
                 End If
              End If
              W_POS = InStr(W_ST, W_OBJSTR1, W_VL, vbBinaryCompare)
           End If
           W_LEN = W_LN
           If W_POS - 1 > 0 Then
              If RE.Pattern = "$" Then
                 W_STR1 = W_OBJSTR1
              Else
                 W_STR1 = Left$(W_OBJSTR1, W_POS - 1)
              End If
           Else
              W_STR1 = ""
           End If
           If W_LEN = 0 Then
              W_STR2 = ""
           Else
              W_STR2 = Mid$(W_OBJSTR1, W_POS, W_LEN)
           End If
           If Len(W_OBJSTR1) - W_POS - W_LEN + 1 > 0 Then
              If RE.Pattern = "$" Then
                 W_STR3 = ""
              Else
                 W_STR3 = Right$(W_OBJSTR1, Len(W_OBJSTR1) - W_POS - W_LEN + 1)
              End If
           Else
              W_STR3 = ""
           End If
                 
           SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
           If SW_SPREP = True Then
              W_STR2 = W_REPTXT
           Else
              If SW_NR = False Then
                 W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(Me.ComboBox13.Value))
                 W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
              Else
                 W_STR2 = W_RS
              End If
                  
              W_LEN = Len(W_STR2)
           End If
           
           W_STR1A = Right$(W_STR1, Len(W_STR1) - W_ST + 1)
           Me.Label32.Caption = Me.Label32.Caption & W_STR1A
           For I = 1 To Len(W_STR1A)
              W_SPACE = LenB(StrConv(Mid$(W_STR1A, I, 1), vbFromUnicode))
              If W_SPACE = 1 Then
                 If Mid$(W_STR1A, I, 1) = vbLf Then
                    Me.Label33.Caption = Me.Label33.Caption & vbLf
                 Else
                    Me.Label33.Caption = Me.Label33.Caption & String$(1, " ")
                 End If
              Else
                 Me.Label33.Caption = Me.Label33.Caption & String$(1, "|fffd|@")
              End If
           Next I
           Me.Label33.Caption = Me.Label33.Caption & W_STR2
           For I = 1 To Len(W_STR2)
              W_SPACE = LenB(StrConv(Mid$(W_STR2, I, 1), vbFromUnicode))
              If W_SPACE = 1 Then
                 If Mid$(W_STR2, I, 1) = vbLf Then
                    Me.Label32.Caption = Me.Label32.Caption & vbLf
                 Else
                    Me.Label32.Caption = Me.Label32.Caption & String$(1, " ")
                 End If
              Else
                 Me.Label32.Caption = Me.Label32.Caption & String$(1, "|fffd|@")
              End If
           Next I

           W_OBJSTR1 = W_STR1 & W_STR2 & W_STR3
           W_ST = W_POS + W_LEN
        Next J
        
        Me.Label32.Caption = Me.Label32.Caption & W_STR3
     Else
        Me.Label32.Caption = W_OBJSTR1
     End If
  Case 1
     Me.Label32.Caption = W_OBJSTR1
  Case 2
     Me.Label33.Caption = Me.ComboBox13.Value
  End Select
  
  Set NRE = Nothing
  Set RE = Nothing
  
  Application.ScreenUpdating = True

  If Me.CheckBox69.Value = True Then
     Call TAB_ORDER_CHG(8)
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_ERR2:
  On Error GoTo LABEL_REP
  Set RE = Nothing
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton35_Click()
'|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "F"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  On Error GoTo LABEL_REP

  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              W_EVAR = ActiveCell.Value
              Me.TextBox7.Value = ActiveCell.Value
           End If
        End If
        
        If ActiveCell.FormulaHidden = False Then
           If ActiveCell.HasFormula = True Then
              W_EVAR = ActiveCell.Formula
              Me.TextBox7.Value = ActiveCell.Formula
           End If
        End If
     End If
  End If
  Me.TextBox7.SetFocus
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton36_Click()
'|fffd|`|fffd|F|fffd|b|fffd|N|fffd|l

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "V"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  On Error GoTo LABEL_REP
  
  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        If IsOF(ActiveCell) = True Then
        ElseIf IsError(ActiveCell.Value) = False Then
           If ActiveCell.Value <> "" Then
              W_EVAR = ActiveCell.Value
              Me.TextBox7.Value = ActiveCell.Value
           End If
        End If
     End If
  End If
  Me.TextBox7.SetFocus
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton43_Click()
'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||fffd|

  Dim W_LOCALF As Variant
   
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
   
  '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
  If Me.CheckBox49.Value = True Then
     W_LOCALF = Application.GetOpenFilename("Text Files (*.txt),*.txt,All Files (*.*), *.*", , "Select local share data file")
  Else
     W_LOCALF = Application.GetOpenFilename("|fffd|e|fffd|L|fffd|X|fffd|g |fffd|t|fffd|@|fffd|C|fffd||fffd| (*.txt),*.txt,|fffd||fffd||fffd||5c2||102||303|t|fffd|@|fffd|C|fffd||fffd| (*.*), *.*", , "|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||fffd||fffd|L|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e|w|fffd||fffd|")
  End If
  If VarType(W_LOCALF) = vbBoolean Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
      
  Me.TextBox10.Value = W_LOCALF

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub CommandButton44_Click()
'|fffd|W|fffd|J

  Dim I As Long
  Dim J As Long
  Dim FSO As Object


  Erase AR_SHRF
  Erase AR_SHRR

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Me.CheckBox42.Value = False Then
     Call SHARE1_RTN(I, J)
  Else
     If Me.TextBox10.Value = "" Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Local share data file is empty.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||fffd||fffd|L|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox10.SetFocus
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
     Set FSO = CreateObject("Scripting.FileSystemObject")
     If FSO.FileExists(Me.TextBox10.Value) = False Then
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Local share data file doesn't exist.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||fffd||fffd|L|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
        End If
        Me.TextBox10.SetFocus
        Set FSO = Nothing
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        Exit Sub
     End If
     Set FSO = Nothing
     
     Call SHARE2_RTN(I, J)
  End If

  If I > 0 Or _
     J > 0 Then
     Call SHOW_MODELESS(UserForm15)
     W_PAGEN = "Page10"
     UserForm6.Show
  End If

  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If

End Sub

Private Sub Label5_Click()
'|fffd||fffd||fffd|[|fffd||fffd|

  W_RET = ShellExecute(0, "open", Me.Label5.Tag, vbNull, vbNull, 1)

End Sub

Private Sub Label7_Click()
'|fffd|z|fffd|[|fffd||fffd||fffd|y|fffd|[|fffd|W

  W_RET = ShellExecute(0, "open", Me.Label7.Caption, vbNull, vbNull, 1)

End Sub

Sub Label41_Click()
'|fffd||fffd||fffd||fffd||fffd|X|fffd|V

  Dim W_IDX As String
  Dim W_IDXC As String


  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  Call CNT_READ_RTN
  If W_EXCNT > 1 Then
     W_IDX = ThisWorkbook.path & "\bgf2.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating background find." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     
     W_IDX = ThisWorkbook.path & "\idx.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
        
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't auto update when multiple excels are started.", vbExclamation)
     Else
        W_RET = MsgBox("Excel|fffd||15850||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||182||fffd||fffd||34e||fffd||fffd||fffd||fffd|X|fffd|V|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  SW_AUTOUPD = True
  Call UNINST2_RTN

End Sub

Sub Label42_Click()
'|fffd||fffd||fffd||fffd||fffd|X|fffd|V

  Dim W_IDX As String
  Dim W_IDXC As String


  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call CNT_READ_RTN
  If W_EXCNT > 1 Then
     W_IDX = ThisWorkbook.path & "\bgf2.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating background find." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     
     W_IDX = ThisWorkbook.path & "\idx.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
        
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't auto update when multiple excels are started.", vbExclamation)
     Else
        W_RET = MsgBox("Excel|fffd||15850||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||182||fffd||fffd||34e||fffd||fffd||fffd||fffd|X|fffd|V|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If

  SW_AUTOUPD = True
  Call UNINST2_RTN

End Sub

Private Sub CheckBox48_Change()
'|fffd||590||fffd||fffd|K|fffd|C|fffd|h

  If Me.Label41.Visible = False Then
     If Me.CheckBox48.Value = False Then
        Me.Label119.Visible = False
        Me.Label120.Visible = False
        Me.Label58.Visible = True
        Me.Label59.Visible = True
        Me.Label60.Visible = True
        Me.Label61.Visible = True
        Me.SpinButton1.Visible = True
        Me.SpinButton1.Max = 11
        Me.SpinButton1.Value = Me.SpinButton1.Max
     Else
        Me.Label58.Visible = False
        Me.Label59.Visible = False
        Me.Label60.Visible = False
        Me.Label61.Visible = False
        If Me.CheckBox78.Value = True Then
           Me.Label119.Visible = True
           Me.Label120.Visible = True
           Me.SpinButton1.Visible = True
           Me.SpinButton1.Max = 8
           Me.SpinButton1.Value = Me.SpinButton1.Min
           Me.SpinButton1.Value = Me.SpinButton1.Max
        Else
           Me.SpinButton1.Visible = False
        End If
     End If
  End If
  Me.CheckBox78.Enabled = Me.CheckBox48.Value

End Sub

Private Sub CheckBox78_Change()
'|fffd||590||fffd||fffd|K|fffd|C|fffd|h

  If Me.Label41.Visible = False Then
     If Me.CheckBox48.Value = False Then
        Me.Label119.Visible = False
        Me.Label120.Visible = False
        Me.Label58.Visible = True
        Me.Label59.Visible = True
        Me.Label60.Visible = True
        Me.Label61.Visible = True
        Me.SpinButton1.Visible = True
        Me.SpinButton1.Max = 11
        Me.SpinButton1.Value = Me.SpinButton1.Max
     Else
        Me.Label58.Visible = False
        Me.Label59.Visible = False
        Me.Label60.Visible = False
        Me.Label61.Visible = False
        If Me.CheckBox78.Value = True Then
           Me.Label119.Visible = True
           Me.Label120.Visible = True
           Me.SpinButton1.Visible = True
           Me.SpinButton1.Max = 8
           Me.SpinButton1.Value = Me.SpinButton1.Min
           Me.SpinButton1.Value = Me.SpinButton1.Max
        Else
           Me.Label119.Visible = False
           Me.Label120.Visible = False
           Me.SpinButton1.Visible = False
        End If
     End If
  End If

End Sub

Private Sub SpinButton1_Change()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Dim AR_FCID As Variant
  Dim AR_FCDS As Variant

  If Me.CheckBox48.Value = True And _
     Me.CheckBox78.Value = True Then
     If AR_NEWS(1) = "" Then
        GET_NEWS_RTN
     End If
     Me.Label119.Caption = AR_NEWS(Me.SpinButton1.Value)
     Me.Label119.Tag = AR_URL(Me.SpinButton1.Value)
  Else
     AR_FCID = Array("RERND", _
                     "REMATCH", _
                     "REHLOOKUP", _
                     "REVLOOKUP", _
                     "RECNTIF", _
                     "RESPLIT", _
                     "REREPL", _
                     "RECNT", _
                     "REEXE2", _
                     "REEXE", _
                     "RETEST")
  
     If Me.CheckBox49.Value = True Then
        AR_FCDS = Array(":Gen random string", _
                        ":Regex MATCH", _
                        ":Regex HLOOKUP", _
                        ":Regex VLOOKUP", _
                        ":Regex COUNTIF", _
                        ":Get split string", _
                        ":Replace", _
                        ":Get match count", _
                        ":Get sub match string", _
                        ":Get match string", _
                        ":Inspect string")
     Else
        AR_FCDS = Array("|fffd|F|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d90||fffd|", _
                        "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|MATCH", _
                        "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|HLOOKUP", _
                        "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|VLOOKUP", _
                        "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|COUNTIF", _
                        "|fffd|F|fffd||fffd||fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd||64fe|", _
                        "|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd|", _
                        "|fffd|F|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||64fe|", _
                        "|fffd|F|fffd|T|fffd|u|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||64fe|", _
                        "|fffd|F|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||64fe|", _
                        "|fffd|F|fffd||fffd||fffd||fffd||fffd||4c7cd||fffd|")
     End If
     Me.Label60.Caption = AR_FCID(Me.SpinButton1.Value)
     Me.Label61.Caption = AR_FCDS(Me.SpinButton1.Value)
  End If

End Sub

Private Sub Label58_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label59_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label60_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label61_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub FC_INS()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Dim SW_BLNK As Boolean
  Dim W_BKF As String
  Dim W_BKV As String
  Dim W_INS As String
  Dim CTB As Range
  
  
  If W_CLKBTN <> "" Then
     Exit Sub
  End If

  If WINDOWCHK = True Then
     SW_BLNK = False
     W_BKF = ""
     W_BKV = ""
     Set CTB = Nothing
     On Error Resume Next
     Set CTB = ActiveCell.SpecialCells(xlCellTypeBlanks)
     On Error GoTo LABEL_ERR
     If CTB Is Nothing Then
        SW_BLNK = True
     ElseIf CTB Is ActiveCell Then
        SW_BLNK = True
     Else
        If ActiveCell.HasFormula = True Then
           W_BKF = ActiveCell.Formula
        End If
        W_BKV = ActiveCell.Value
     End If
     Set CTB = Nothing
     ActiveCell.Formula = "=" & Me.Label60.Caption & "()"
     W_INS = ActiveCell.Formula
     Application.Dialogs(xlDialogFunctionWizard).Show
     If ActiveCell.Formula = W_INS Then
        If SW_BLNK = True Then
           ActiveCell.ClearContents
        Else
           If W_BKF <> "" Then
              ActiveCell.Formula = W_BKF
           Else
              ActiveCell.Value = W_BKV
           End If
        End If
     End If
     On Error GoTo 0
  End If

LABEL_ERR:

End Sub

Private Sub Label119_Click()
'|fffd|j|fffd||fffd||fffd|[|fffd|X

  W_RET = ShellExecute(0, "open", Me.Label119.Tag, vbNull, vbNull, 1)

End Sub

Private Sub Label120_Click()
'|fffd|j|fffd||fffd||fffd|[|fffd|X
  
  W_RET = ShellExecute(0, "open", Me.Label119.Tag, vbNull, vbNull, 1)

End Sub

Private Sub Label150_Click()
'|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g

  Dim AR_WK As Variant
  
  
  AR_WK = Split(Me.Label150.Tag, vbTab)
  
  On Error Resume Next
  Workbooks(AR_WK(0)).Activate
  Worksheets(AR_WK(1)).Select
  Cells(CLng(AR_WK(2)), CLng(AR_WK(3))).Select
  Call SET_POS(True)
  On Error GoTo 0

End Sub

Private Sub CheckBox43_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd|

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  Dim W_TPS As Long

  W_TPS = W_TP1
  
  If Me.CheckBox43.Value = True Then
     If SW_1STTP = True Then
        W_TPS = 999
     End If
     W_TP1 = 200
  Else
     W_TP1 = 255
  End If

  If W_TP1 <> W_TPS Then
     hwnd = FindWindow(vbNullString, Me.Caption)
#If Win64 Then
     Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
     Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
     On Error Resume Next
     Call SetLayeredWindowAttributes(hwnd, 0, W_TP1, LWA_ALPHA)
     On Error GoTo 0
  End If

End Sub

Private Sub CommandButton46_Click()
'|fffd|w|fffd|i|fffd|F|fffd|I|fffd||fffd|

  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "..."
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page13"
  Set W_LABEL = Me.Label43
  Set W_BUTTON = Me.CommandButton46
  SW_BGCLR = 2
  UserForm4.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton47_Click()
'|fffd|w|fffd|i|fffd|F|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Default"
  W_BGCLR = &H8000000F
  W_BGCLRL = "1"
  W_BGCLRT = 0
  Me.CommandButton46.Tag = 0
  Set W_BUTTON = Nothing
  Call BGCLR_SET
  Unload UserForm4
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CheckBox49_Change()
'English
  
  Dim W_SPB As Long
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  
  SW_ENGLISH = Me.CheckBox49.Value
'  Call UNREGISTER2
  If SW_TRY = False Then
     Call REGISTER
    
     If SW_RMENU = False Then
        Call RMENU_DEL
        Call RMENU_ADD
     End If
  
     If Me.CheckBox65.Value = True Then
        If Val(Application.Version) >= 15 Then
           If XL4 Is Nothing Then
           Else
              Unload UserForm10
              UserForm10.Show vbModeless
           End If
        Else
           Call RMV_BAR
           Call MK_BAR
        End If
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||752||fffd|
  Call CTRLTIP
  
  Call BGF2_CHK
  
  If Me.CheckBox49.Value = True Then
     Me.Caption = "Regular Expression Find"
     
     Me.MultiPage1.Pages("Page1").Caption = "Find"
     Me.MultiPage1.Pages("Page2").Caption = "Replace"
     Me.MultiPage1.Pages("Page6").Caption = "Shape"
     Me.MultiPage1.Pages("Page12").Caption = "Sheet"
     Me.MultiPage1.Pages("Page14").Caption = "Rename"
     Me.MultiPage1.Pages("Page15").Caption = "Split"
     Me.MultiPage1.Pages("Page16").Caption = "Name"
     Me.MultiPage1.Pages("Page18").Caption = "Fill"
     Me.MultiPage1.Pages("Page4").Caption = "Extract"
     Me.MultiPage1.Pages("Page5").Caption = "Grep"
     Me.MultiPage1.Pages("Page7").Caption = "Grep Replace"
     Me.MultiPage1.Pages("Page9").Caption = "Grep Shapes"
     Me.MultiPage1.Pages("Page8").Caption = "Check"
     Me.MultiPage1.Pages("Page11").Caption = "Make"
     Me.MultiPage1.Pages("Page10").Caption = "Share"
     Me.MultiPage1.Pages("Page13").Caption = "Setting"
     Me.MultiPage1.Pages("Page3").Caption = "Version"

     Me.MultiPage2.Pages(0).Caption = "Rslt1"
     Me.MultiPage2.Pages(1).Caption = "Rslt2"
     Me.MultiPage2.Pages(2).Caption = "Rslt3"
     Me.MultiPage2.Pages(3).Caption = "Rslt4"
     Me.MultiPage2.Pages(4).Caption = "Rslt5"
     Me.MultiPage2.Pages(5).Caption = "Rslt6"
     Me.MultiPage2.Pages(6).Caption = "Rslt7"
     Me.MultiPage2.Pages(7).Caption = "Rslt8"
     Me.MultiPage2.Pages(8).Caption = "Rslt9"
     Me.MultiPage2.Pages(9).Caption = "Rslt10"

     Me.MultiPage3.Pages(0).Caption = "Display 1"
     Me.MultiPage3.Pages(1).Caption = "Display 2"
     Me.MultiPage3.Pages(2).Caption = "Action"
     Me.MultiPage3.Pages(3).Caption = "Network"
     Me.MultiPage3.Pages(4).Caption = "Gesture"
     Me.MultiPage3.Pages(5).Caption = "Key"
     
     Me.MultiPage4.Pages("Page1").Caption = "Decoration"
     Me.MultiPage4.Pages("Page2").Caption = "+ Cond"
     Me.MultiPage4.Pages("Page3").Caption = "Shape"
     Me.MultiPage4.Pages("Page4").Caption = "Grep"
     Me.MultiPage4.Pages("Page5").Caption = "+ Cmd"
     Me.MultiPage4.Pages("Page6").Caption = "Common"
     Me.MultiPage4.Pages("Page8").Caption = "Around"
     
     Me.MultiPage5.Pages(0).Caption = "Rslt1"
     Me.MultiPage5.Pages(1).Caption = "Rslt2"
     Me.MultiPage5.Pages(2).Caption = "Rslt3"
     Me.MultiPage5.Pages(3).Caption = "Rslt4"
     Me.MultiPage5.Pages(4).Caption = "Rslt5"
     Me.MultiPage5.Pages(5).Caption = "Rslt6"
     Me.MultiPage5.Pages(6).Caption = "Rslt7"
     Me.MultiPage5.Pages(7).Caption = "Rslt8"
     Me.MultiPage5.Pages(8).Caption = "Rslt9"
     Me.MultiPage5.Pages(9).Caption = "Rslt10"
     
     Me.Label41.Caption = W_VERE
     Me.Label42.Caption = "Click here, execute auto update."
     
     Me.Label58.Caption = "[RegEx Function]"
     Me.Label59.Caption = "Click here to insert this func into the current cell."
     
     W_SPB = Me.SpinButton1.Value
     If W_SPB = Me.SpinButton1.Max Then
        Me.SpinButton1.Value = Me.SpinButton1.Min
     Else
        Me.SpinButton1.Value = Me.SpinButton1.Max
     End If
     Me.SpinButton1.Value = W_SPB
     
     Me.Label10.Caption = "Sheet"
     Me.Label11.Caption = "Cell"
     If Me.Label12.Caption = "|fffd|l" Then
        Me.Label12.Caption = "Value"
     Else
        Me.Label12.Caption = "Formula"
     End If
     Me.Label9.Caption = Application.Substitute(Me.Label9.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label64.Caption = "Sheet"
     Me.Label65.Caption = "Cell"
     If Me.Label66.Caption = "|fffd|l" Then
        Me.Label66.Caption = "Value"
     Else
        Me.Label66.Caption = "Formula"
     End If
     Me.Label67.Caption = Application.Substitute(Me.Label67.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label68.Caption = "Sheet"
     Me.Label69.Caption = "Cell"
     If Me.Label70.Caption = "|fffd|l" Then
        Me.Label70.Caption = "Value"
     Else
        Me.Label70.Caption = "Formula"
     End If
     Me.Label71.Caption = Application.Substitute(Me.Label71.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label72.Caption = "Sheet"
     Me.Label73.Caption = "Cell"
     If Me.Label74.Caption = "|fffd|l" Then
        Me.Label74.Caption = "Value"
     Else
        Me.Label74.Caption = "Formula"
     End If
     Me.Label75.Caption = Application.Substitute(Me.Label75.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label76.Caption = "Sheet"
     Me.Label77.Caption = "Cell"
     If Me.Label78.Caption = "|fffd|l" Then
        Me.Label78.Caption = "Value"
     Else
        Me.Label78.Caption = "Formula"
     End If
     Me.Label79.Caption = Application.Substitute(Me.Label79.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label80.Caption = "Sheet"
     Me.Label81.Caption = "Cell"
     If Me.Label82.Caption = "|fffd|l" Then
        Me.Label82.Caption = "Value"
     Else
        Me.Label82.Caption = "Formula"
     End If
     Me.Label83.Caption = Application.Substitute(Me.Label83.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label84.Caption = "Sheet"
     Me.Label85.Caption = "Cell"
     If Me.Label86.Caption = "|fffd|l" Then
        Me.Label86.Caption = "Value"
     Else
        Me.Label86.Caption = "Formula"
     End If
     Me.Label87.Caption = Application.Substitute(Me.Label87.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label88.Caption = "Sheet"
     Me.Label89.Caption = "Cell"
     If Me.Label90.Caption = "|fffd|l" Then
        Me.Label90.Caption = "Value"
     Else
        Me.Label90.Caption = "Formula"
     End If
     Me.Label91.Caption = Application.Substitute(Me.Label91.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label92.Caption = "Sheet"
     Me.Label93.Caption = "Cell"
     If Me.Label94.Caption = "|fffd|l" Then
        Me.Label94.Caption = "Value"
     Else
        Me.Label94.Caption = "Formula"
     End If
     Me.Label95.Caption = Application.Substitute(Me.Label95.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     Me.Label96.Caption = "Sheet"
     Me.Label97.Caption = "Cell"
     If Me.Label98.Caption = "|fffd|l" Then
        Me.Label98.Caption = "Value"
     Else
        Me.Label98.Caption = "Formula"
     End If
     Me.Label99.Caption = Application.Substitute(Me.Label99.Caption, "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|", " cell(s) found")
     
     Me.Label138.Caption = "RegEx Assemble"
     Me.Label139.Caption = "Click tabs, back to normal tab mode."
     Me.CommandButton94.Caption = "Assemble"
     Me.CommandButton95.Caption = "Input"
     Me.CommandButton96.Caption = "Value"
     Me.CommandButton97.Caption = "Clear"
     Me.Label301.Caption = "Find what"
     Me.Label302.Caption = "Replace with"
     
     Me.CommandButton9.Caption = "Close"

     'Find
     Me.Label1.Caption = "Find what:"
     Me.CheckBox1.Caption = "Case senstive"
     Me.CheckBox2.Caption = "Only string values"
     Me.CheckBox3.Caption = "Find values"
     Me.CheckBox7.Caption = "Find whole workbook"
     Me.CheckBox22.Caption = "Incremental search"
     Me.CheckBox208.Caption = "Go around"
     Me.CheckBox32.Caption = "Cross lines"
     Me.CheckBox74.Caption = "Not use standard find"
     Me.CheckBox92.Caption = "Not use suggest"
     Me.CheckBox206.Caption = "Auto additional search"
     Me.Label143.Caption = "Select all, Outline, Show all"
     Me.OptionButton14.Caption = "Cell"
     Me.OptionButton15.Caption = "Row"
     Me.OptionButton16.Caption = "Column"
     Me.CommandButton45.Caption = "Undo"
     Me.CommandButton78.Caption = "Start pos"
     Me.CommandButton37.Caption = "Save patterns"
     Me.CommandButton12.Caption = "Find all"
     Me.CommandButton1.Caption = "Find prev"
     Me.CommandButton2.Caption = "Find next"
     Me.CommandButton81.Caption = "Cancel"
     Me.CommandButton85.Caption = "Select all"
     Me.CommandButton87.Caption = "Bookmark"
     Me.CommandButton88.Caption = "Outline"
     Me.CommandButton104.Caption = "Show all"
     Me.CommandButton261.Caption = "Mark all"
     Me.CommandButton262.Caption = "Release mark"

     'Replace
     Me.Label8.Caption = "Find what:"
     Me.Label2.Caption = "Replace with:"
     Me.CheckBox12.Caption = "Confirm when replace"
     Me.CommandButton91.Caption = "Save patterns"
     Me.CommandButton79.Caption = "Start pos"
     Me.CommandButton54.Caption = "Replace sel"
     Me.CommandButton15.Caption = "Undo"
     Me.CommandButton5.Caption = "Replace all"
     Me.CommandButton3.Caption = "Replace prev"
     Me.CommandButton4.Caption = "Replace next"
     Me.CommandButton82.Caption = "Cancel"
     
     'Shape
     Me.Label20.Caption = "Find what:"
     Me.Label22.Caption = "Replace with:"
     Me.CommandButton267.Caption = "Undo"
     Me.CommandButton86.Caption = "Select all"
     Me.CommandButton25.Caption = "Replace all"
     Me.CommandButton22.Caption = "Find all"
     
     'VBE
     Me.Label141.Caption = "Find what:"
     Me.Label140.Caption = "Replace with:"
     Me.CommandButton103.Caption = "Replace all"
     Me.CommandButton101.Caption = "Replace prev"
     Me.CommandButton102.Caption = "Replace next"
     Me.CommandButton100.Caption = "Find all"
     Me.CommandButton98.Caption = "Find prev"
     Me.CommandButton99.Caption = "Find next"
     
     'Fill
     Me.Label142.Caption = "Generate pattern"
     Me.Label144.Caption = "Direction"
     Me.OptionButton22.Caption = "Down"
     Me.OptionButton23.Caption = "Right"
     Me.OptionButton24.Caption = "Up"
     Me.OptionButton25.Caption = "Left"
     Me.Label145.Caption = "Increase or decrease"
     Me.OptionButton26.Caption = "Inc"
     Me.OptionButton27.Caption = "Dec"
     Me.CommandButton118.Caption = "Fill"
     
     'Sheet
     Me.Label62.Caption = "Find what:"
     Me.Label63.Caption = "Replace with:"
     Me.Label314.Caption = "Target file:"
     Me.Label315.Caption = "Target folder:"
     Me.CheckBox54.Caption = "Target blank sheet"
     Me.CheckBox55.Caption = "Target hide sheet"
     Me.Label146.Caption = "Target"
     Me.OptionButton4.Caption = "Sheet name"
     Me.OptionButton5.Caption = "Left header"
     Me.OptionButton6.Caption = "Center header"
     Me.OptionButton7.Caption = "Right header"
     Me.OptionButton8.Caption = "Left footer"
     Me.OptionButton9.Caption = "Center footer"
     Me.OptionButton10.Caption = "Right footer"
     Me.CommandButton51.Caption = "Replace all"
     Me.CommandButton272.Caption = "Grep replace"
     Me.CommandButton273.Caption = "Cancel"
     
     'Rename
     Me.Label101.Caption = "Find what:"
     Me.Label100.Caption = "Replace with:"
     Me.Label102.Caption = "Target folder:"
     Me.CheckBox59.Caption = "Hidden files too"
     Me.CommandButton77.Caption = "Undo"
     Me.CommandButton75.Caption = "Replace"
     Me.CommandButton290.Caption = "Delete"
     Me.CommandButton76.Caption = "Find"
 
     'Name
     Me.Label134.Caption = "Find what:"
     Me.Label133.Caption = "Replace with:"
     Me.CheckBox84.Caption = "Hidden names too"
     Me.Label147.Caption = "Scope"
     Me.OptionButton17.Caption = "All"
     Me.OptionButton18.Caption = "Book"
     Me.OptionButton19.Caption = "Current sheet"
     Me.Label148.Caption = "Target"
     Me.OptionButton20.Caption = "Name"
     Me.OptionButton21.Caption = "Refers to"
     Me.CommandButton89.Caption = "Replace"
     Me.CommandButton90.Caption = "Find"
 
     'Split
     Me.Label103.Caption = "Find what:"
     Me.CheckBox68.Caption = "Switch row and column"
     Me.CommandButton84.Caption = "Preview"
     Me.CommandButton80.Caption = "Split"
     
     'Extarct
     Me.Label13.Caption = "Find what:"
     Me.Label14.Caption = "Column from:"
     Me.Label15.Caption = "Column to:"
     Me.CommandButton16.Caption = "Extract"

     'Idx
     Me.Label318.Caption = "Find what:"
     Me.Label319.Caption = "Target folder:"
     Me.Label320.Caption = "Target folder"
     Me.Label321.Caption = "Making datetime"
     Me.Label322.Caption = "Size"
     Me.CheckBox204.Caption = "Include subfolder"
     Me.CheckBox205.Caption = "Find values"
     Me.CommandButton278.Caption = "Delete"
     Me.CommandButton279.Caption = "Make"
     Me.CommandButton280.Caption = "Find"

     'Grep
     Me.Label16.Caption = "Find what:"
     Me.Label17.Caption = "Target file:"
     Me.CheckBox62.Caption = "Open file"
     Me.Label18.Caption = "Target folder:"
     Me.CheckBox16.Caption = "Include subfolder"
     Me.CheckBox60.Caption = "Include ZIP archives"
     Me.CheckBox75.Caption = "Offset"
     Me.CheckBox202.Caption = "Display up and down"
     Me.Label104.Caption = "Row"
     Me.Label105.Caption = "Column"
     Me.CommandButton21.Caption = "Cancel"
     Me.CommandButton20.Caption = "Execute"
     Me.CommandButton303.Caption = "Word doc"

     'Grep Replace
     Me.Label25.Caption = "Find what:"
     Me.Label29.Caption = "Replace with:"
     Me.Label26.Caption = "Target file:"
     Me.CheckBox63.Caption = "Open file"
     Me.Label27.Caption = "Target folder:"
     Me.CheckBox27.Caption = "Create backup"
     Me.CommandButton32.Caption = "Cancel"
     Me.CommandButton31.Caption = "Execute"

     'Grep Shapes
     Me.Label39.Caption = "Find what:"
     Me.Label40.Caption = "Replace with:"
     Me.Label36.Caption = "Target file:"
     Me.CheckBox64.Caption = "Open file"
     Me.Label37.Caption = "Target folder:"
     Me.CommandButton41.Caption = "Cancel"
     Me.CommandButton42.Caption = "Grep replace"
     Me.CommandButton39.Caption = "Grep"

     'Diff
     Me.Label303.Caption = "1st file (old)"
     Me.Label305.Caption = "2nd file (new)"
     Me.Label307.Caption = "Column range"
     Me.Label313.Caption = "(0:unspecified)"
     Me.Label311.Caption = "Tab width"
     Me.Label304.Caption = "Charset"
     Me.Label306.Caption = "New line"
     Me.CheckBox200.Caption = "Ignore spaces in blank line"
     Me.CheckBox229.Caption = "Compare trim spaces"
     Me.CheckBox201.Caption = "Column compare in sheet"
     Me.CommandButton259.Caption = "Compare"
     Me.CommandButton260.Caption = "Cancel"
     
     'Check
     Me.Label30.Caption = "Find what:"
     Me.Label31.Caption = "Replace with:"
     Me.Label34.Caption = "Object string:"
     Me.Label35.Caption = "Result:"
     Me.CommandButton35.Caption = "F"
     Me.CommandButton36.Caption = "V"
     Me.CommandButton34.Caption = "Replace"
     Me.CommandButton33.Caption = "Find"

     'Make
     Me.Label44.Caption = "Target string:"
     Me.Label45.Caption = "Add1:"
     Me.Label46.Caption = "Ext1:"
     Me.Label47.Caption = "Add2:"
     Me.Label48.Caption = "Ext2:"
     Me.Label49.Caption = "Add3:"
     Me.Label50.Caption = "Ext3:"
     Me.Label51.Caption = "Add4:"
     Me.Label56.Caption = "After replace:"
     Me.Label52.Caption = "Find what:"
     Me.Label54.Caption = "Replace with:"
     Me.CommandButton50.Caption = "Description"
     Me.CommandButton48.Caption = "Make"
     Me.CommandButton49.Caption = "Input"

     'Share
     Me.CheckBox41.Caption = "Not send ""find what"", and so on"
     Me.CheckBox42.Caption = "Use local share data"
     Me.CommandButton44.Caption = "Extend"

     'Setting
     Me.CheckBox34.Caption = "Set current cell on ""find what"" at start up"
     Me.CheckBox37.Caption = "Word complement"
     Me.CheckBox33.Caption = "Not send error report"
     Me.CheckBox43.Caption = "Half clear"
     Me.Label43.Caption = "Color"
     Me.CheckBox73.Caption = "Auto clear"
     Me.CheckBox44.Caption = "Not check update at start up"
     Me.CheckBox88.Caption = "Net all off"
     Me.CheckBox48.Caption = "No function guide"
     Me.CheckBox85.Caption = "Remember window position"
     Me.CheckBox50.Caption = "Open VBE at close"
     Me.CheckBox56.Caption = "Segoe UI"
     Me.CheckBox65.Caption = "Quick search toolbar"
     Me.CommandButton47.Caption = "Default"
     Me.CommandButton6.Caption = "Key change"
     Me.CommandButton73.Caption = "Folder clear"
     Me.CommandButton17.Caption = "Find clear"
     Me.CommandButton18.Caption = "Replace clear"
     Me.CommandButton38.Caption = "Dictionary"
     Me.CommandButton126.Caption = "Suggest clear"
     Me.CommandButton158.Caption = "Setting clear"
     Me.CommandButton7.Caption = "Help"
     Me.CommandButton92.Caption = "Update"
     Me.CommandButton14.Caption = "Check upd"
     Me.CommandButton8.Caption = "Uninstall"
     If SW_TEMP = True Then
        Me.CommandButton8.Caption = "Exit"
     End If
     
     Me.CheckBox78.Caption = "News (Japanese only)"
     Me.CheckBox81.Caption = "Minimap"
     Me.CheckBox86.Caption = "Window animation off"
     Me.Label107.Caption = "Tab forward"
     Me.Label108.Caption = "Tab back"
     Me.Label109.Caption = "Tab hide"
     Me.Label110.Caption = "Show all tabs"
     Me.Label111.Caption = "Tab default"
     Me.Label112.Caption = "Close"
     Me.Label113.Caption = "Hide settings per tab"
     Me.Label114.Caption = "Show Settings per tab"
     Me.Label115.Caption = "Change half clear"
     Me.Label116.Caption = "Help"
     
     Me.Label127.Caption = "Next tab"
     Me.Label128.Caption = "Previous tab"
     Me.Label129.Caption = "Show settings per tab"
     Me.Label130.Caption = "Hide settings per tab"
     
     'Version
     Me.Label3.Caption = "Regular Expression Find  Version  5.50"
     Me.Label149.Caption = "Search direction"
     Me.OptionButton11.Caption = "Auto"
     Me.OptionButton12.Caption = "Row"
     Me.OptionButton13.Caption = "Column"
     Me.CheckBox71.Caption = "No result example"
     Me.CheckBox209.Caption = "No input description"
     Me.CheckBox72.Caption = "No parentheses complement"
     Me.CheckBox69.Caption = "Change tab order"
     Me.CommandButton83.Caption = "Default"
  
     Me.Label287.Caption = "Target"
     Me.CheckBox172.Caption = "Bold"
     Me.CheckBox173.Caption = "Italic"
     Me.CheckBox174.Caption = "Underline"
     Me.CheckBox175.Caption = "Strikethrough"
     Me.CheckBox176.Caption = "Color"
     Me.Label288.Caption = "Change"
     Me.CheckBox177.Caption = "Bold"
     Me.CheckBox178.Caption = "Italic"
     Me.CheckBox179.Caption = "Underline"
     Me.CheckBox180.Caption = "Strikethrough"
     Me.CheckBox181.Caption = "Color"
     Me.CheckBox171.Caption = "Keep decoration"
  
     Me.CheckBox210.Caption = "Use condition of around cells"
     Me.Label339.Caption = "Pos"
     Me.Label340.Caption = "With"
     Me.Label341.Caption = "Condition"
     Me.Label352.Caption = "Deny"
     
     Me.CheckBox186.Caption = "Deny"
  
     Me.Label289.Caption = "Target"
     Me.OptionButton1.Caption = "All"
     Me.OptionButton2.Caption = "Only comment"
     Me.OptionButton3.Caption = "Except comment"
     Me.CheckBox189.Caption = "Ungroup and regroup (before Excel 2003)"
     Me.CheckBox188.Caption = "Include SmartArt"
  
     Me.CheckBox190.Caption = "High speed mode"
     Me.CheckBox194.Caption = "Progress"
     Me.CheckBox195.Caption = "History off"
     Me.CheckBox203.Caption = "Highlight"
     Me.Label294.Caption = "Password list"
     Me.CheckBox207.Caption = "Fuzzy search"
  
     Me.Label295.Caption = "Exec"
     Me.Label296.Caption = "Property, method"
     Me.Label297.Caption = "Value, argument"
  
     Me.Label324.Caption = "Color"
     Me.Label325.Caption = "Diff(1st)"
     Me.Label326.Caption = "Diff(2nd)"
     Me.Label327.Caption = "Diff(no line)"
     Me.Label328.Caption = "Diff in line"
     Me.CommandButton287.Caption = "Default"
  Else
     Me.Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     
     Me.MultiPage1.Pages("Page1").Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage1.Pages("Page2").Caption = "|fffd|u|fffd||fffd|"
     Me.MultiPage1.Pages("Page6").Caption = "|fffd|V|fffd|F|fffd|C|fffd|v"
     Me.MultiPage1.Pages("Page12").Caption = "|fffd|V|fffd|[|fffd|g"
     Me.MultiPage1.Pages("Page14").Caption = "|fffd||fffd||fffd|l|fffd|[|fffd||fffd|"
     Me.MultiPage1.Pages("Page15").Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage1.Pages("Page16").Caption = "|fffd||fffd||fffd|O"
     Me.MultiPage1.Pages("Page18").Caption = "|fffd|t|fffd|B|fffd||fffd|"
     Me.MultiPage1.Pages("Page4").Caption = "|fffd||fffd||fffd|o"
     Me.MultiPage1.Pages("Page5").Caption = "Grep"
     Me.MultiPage1.Pages("Page7").Caption = "Grep|fffd|u|fffd||fffd|"
     Me.MultiPage1.Pages("Page9").Caption = "|fffd|V|fffd|F|fffd|C|fffd|vGrep"
     Me.MultiPage1.Pages("Page8").Caption = "|fffd|`|fffd|F|fffd|b|fffd|N"
     Me.MultiPage1.Pages("Page11").Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage1.Pages("Page10").Caption = "|fffd||fffd||fffd|L"
     Me.MultiPage1.Pages("Page13").Caption = "|fffd||752||fffd|"
     Me.MultiPage1.Pages("Page3").Caption = "|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|"

     Me.MultiPage2.Pages(0).Caption = "|fffd||fffd||fffd||fffd|1"
     Me.MultiPage2.Pages(1).Caption = "|fffd||fffd||fffd||fffd|2"
     Me.MultiPage2.Pages(2).Caption = "|fffd||fffd||fffd||fffd|3"
     Me.MultiPage2.Pages(3).Caption = "|fffd||fffd||fffd||fffd|4"
     Me.MultiPage2.Pages(4).Caption = "|fffd||fffd||fffd||fffd|5"
     Me.MultiPage2.Pages(5).Caption = "|fffd||fffd||fffd||fffd|6"
     Me.MultiPage2.Pages(6).Caption = "|fffd||fffd||fffd||fffd|7"
     Me.MultiPage2.Pages(7).Caption = "|fffd||fffd||fffd||fffd|8"
     Me.MultiPage2.Pages(8).Caption = "|fffd||fffd||fffd||fffd|9"
     Me.MultiPage2.Pages(9).Caption = "|fffd||fffd||fffd||fffd|10"

     Me.MultiPage3.Pages(0).Caption = "|fffd|\|fffd||fffd|1"
     Me.MultiPage3.Pages(1).Caption = "|fffd|\|fffd||fffd|2"
     Me.MultiPage3.Pages(2).Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage3.Pages(3).Caption = "|fffd|l|fffd|b|fffd|g"
     Me.MultiPage3.Pages(4).Caption = "|fffd|W|fffd|F|fffd|X|fffd|`|fffd||fffd||fffd|["
     Me.MultiPage3.Pages(5).Caption = "|fffd|L|fffd|["
     
     Me.MultiPage4.Pages("Page1").Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage4.Pages("Page2").Caption = "|fffd|{|fffd||fffd||fffd||fffd|"
     Me.MultiPage4.Pages("Page3").Caption = "|fffd|V|fffd|F|fffd|C|fffd|v"
     Me.MultiPage4.Pages("Page4").Caption = "Grep"
     Me.MultiPage4.Pages("Page5").Caption = "|fffd|{|fffd||fffd||fffd||fffd|"
     Me.MultiPage4.Pages("Page6").Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage4.Pages("Page8").Caption = "|fffd||fffd||fffd||fffd|"
     
     Me.MultiPage5.Pages(0).Caption = "|fffd||fffd||fffd||fffd|1"
     Me.MultiPage5.Pages(1).Caption = "|fffd||fffd||fffd||fffd|2"
     Me.MultiPage5.Pages(2).Caption = "|fffd||fffd||fffd||fffd|3"
     Me.MultiPage5.Pages(3).Caption = "|fffd||fffd||fffd||fffd|4"
     Me.MultiPage5.Pages(4).Caption = "|fffd||fffd||fffd||fffd|5"
     Me.MultiPage5.Pages(5).Caption = "|fffd||fffd||fffd||fffd|6"
     Me.MultiPage5.Pages(6).Caption = "|fffd||fffd||fffd||fffd|7"
     Me.MultiPage5.Pages(7).Caption = "|fffd||fffd||fffd||fffd|8"
     Me.MultiPage5.Pages(8).Caption = "|fffd||fffd||fffd||fffd|9"
     Me.MultiPage5.Pages(9).Caption = "|fffd||fffd||fffd||fffd|10"
     
     Me.Label41.Caption = W_VERJ
     Me.Label42.Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||18e||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B"
     
     Me.Label58.Caption = "|fffd|y|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||590||fffd||fffd|z"
     Me.Label59.Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||18c||fffd||fffd||742||303|Z|fffd||fffd||fffd||242||fffd||fffd||30a||590||fffd||fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
     W_SPB = Me.SpinButton1.Value
     If W_SPB = Me.SpinButton1.Max Then
        Me.SpinButton1.Value = Me.SpinButton1.Min
     Else
        Me.SpinButton1.Value = Me.SpinButton1.Max
     End If
     Me.SpinButton1.Value = W_SPB
     
     Me.Label10.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label11.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label12.Caption = "Value" Then
        Me.Label12.Caption = "|fffd|l"
     Else
        Me.Label12.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label9.Caption = Application.Substitute(Me.Label9.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label64.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label65.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label66.Caption = "Value" Then
        Me.Label66.Caption = "|fffd|l"
     Else
        Me.Label66.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label67.Caption = Application.Substitute(Me.Label67.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label68.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label69.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label70.Caption = "Value" Then
        Me.Label70.Caption = "|fffd|l"
     Else
        Me.Label70.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label71.Caption = Application.Substitute(Me.Label71.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label72.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label73.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label74.Caption = "Value" Then
        Me.Label74.Caption = "|fffd|l"
     Else
        Me.Label74.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label75.Caption = Application.Substitute(Me.Label75.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label76.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label77.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label78.Caption = "Value" Then
        Me.Label78.Caption = "|fffd|l"
     Else
        Me.Label78.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label79.Caption = Application.Substitute(Me.Label79.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label80.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label81.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label82.Caption = "Value" Then
        Me.Label82.Caption = "|fffd|l"
     Else
        Me.Label82.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label83.Caption = Application.Substitute(Me.Label83.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label84.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label85.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label86.Caption = "Value" Then
        Me.Label86.Caption = "|fffd|l"
     Else
        Me.Label86.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label87.Caption = Application.Substitute(Me.Label87.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label88.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label89.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label90.Caption = "Value" Then
        Me.Label90.Caption = "|fffd|l"
     Else
        Me.Label90.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label91.Caption = Application.Substitute(Me.Label91.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label92.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label93.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label94.Caption = "Value" Then
        Me.Label94.Caption = "|fffd|l"
     Else
        Me.Label94.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label95.Caption = Application.Substitute(Me.Label95.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     Me.Label96.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label97.Caption = "|fffd|Z|fffd||fffd|"
     If Me.Label98.Caption = "Value" Then
        Me.Label98.Caption = "|fffd|l"
     Else
        Me.Label98.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label99.Caption = Application.Substitute(Me.Label99.Caption, " cell(s) found", "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|")
     
     Me.Label138.Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label139.Caption = "|fffd|^|fffd|u|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||152||28f||fffd||303|^|fffd|u|fffd||fffd||fffd|[|fffd|h|fffd||256||7c2||fffd||702||fffd|"
     Me.CommandButton94.Caption = "|fffd||fffd||fffd||fffd|(A)"
     Me.CommandButton95.Caption = "|fffd||fffd||fffd||fffd|(I)"
     Me.CommandButton96.Caption = "|fffd|l(V)"
     Me.CommandButton97.Caption = "|fffd|N|fffd||fffd||fffd|A(C)"
     Me.Label301.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.Label302.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|"
     
     Me.CommandButton9.Caption = "|fffd||82||fffd||fffd||fffd|"

     '|fffd||fffd||fffd||fffd|
     Me.Label1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.CheckBox1.Caption = "|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd||fffd|(C)"
     Me.CheckBox2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||312|l|fffd||302||751||38f||6c2||182||fffd||fffd||fffd|(S)"
     Me.CheckBox3.Caption = "|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(V)"
     Me.CheckBox7.Caption = "|fffd|u|fffd|b|fffd|N|fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|(B)"
     Me.CheckBox22.Caption = "|fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd|T|fffd|[|fffd|`(I)"
     Me.CheckBox208.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(A)"
     Me.CheckBox32.Caption = "|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|(L)"
     Me.CheckBox74.Caption = "|fffd|W|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|(U)"
     Me.CheckBox92.Caption = "|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|(S)"
     Me.CheckBox206.Caption = "|fffd||fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|(A)"
     Me.Label143.Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd|A|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd|A|fffd||fffd||fffd||5c2||115|\|fffd||fffd|"
     Me.OptionButton14.Caption = "|fffd|Z|fffd||fffd|"
     Me.OptionButton15.Caption = "|fffd|s"
     Me.OptionButton16.Caption = "|fffd||fffd|"
     Me.CommandButton78.Caption = "|fffd|J|fffd|n|fffd||292|u(O)"
     Me.CommandButton45.Caption = "|fffd||fffd||fffd||256||7c2||fffd|(U)"
     Me.CommandButton37.Caption = "|fffd||fffd||fffd||fffd||fffd||6d1||fffd|(T)"
     Me.CommandButton12.Caption = "|fffd||fffd||fffd||5c2||10c||fffd||fffd||fffd|(A)"
     Me.CommandButton1.Caption = "|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|(P)"
     Me.CommandButton2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(F)"
     Me.CommandButton81.Caption = "|fffd||fffd||fffd|~(C)"
     Me.CommandButton85.Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|(E)"
     Me.CommandButton87.Caption = "|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N(K)"
     Me.CommandButton88.Caption = "|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd|(O)"
     Me.CommandButton104.Caption = "|fffd||fffd||fffd||5c2||115|\|fffd||fffd|(H)"
     Me.CommandButton261.Caption = "|fffd||fffd||fffd||5c2||103|}|fffd|[|fffd|N(M)"
     Me.CommandButton262.Caption = "|fffd|}|fffd|[|fffd|N|fffd||fffd||fffd||fffd|(R)"

     '|fffd|u|fffd||fffd|
     Me.Label8.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label2.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.CheckBox12.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||24a|m|fffd|F(K)"
     Me.CommandButton91.Caption = "|fffd|u|fffd||fffd||fffd||6d1||fffd|(T)"
     Me.CommandButton79.Caption = "|fffd|J|fffd|n|fffd||292|u(O)"
     Me.CommandButton54.Caption = "|fffd|I|fffd||fffd|u|fffd||fffd|(S)"
     Me.CommandButton15.Caption = "|fffd||fffd||fffd||256||7c2||fffd|(U)"
     Me.CommandButton5.Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|(A)"
     Me.CommandButton3.Caption = "|fffd|O|fffd||fffd|u|fffd||fffd|(P)"
     Me.CommandButton4.Caption = "|fffd||fffd||fffd||fffd|u|fffd||fffd|(R)"
     Me.CommandButton82.Caption = "|fffd||fffd||fffd|~(C)"
     
     '|fffd|V|fffd|F|fffd|C|fffd|v
     Me.Label20.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label22.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.CommandButton267.Caption = "|fffd||fffd||fffd||256||7c2||fffd|(U)"
     Me.CommandButton86.Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|(E)"
     Me.CommandButton25.Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|(P)"
     Me.CommandButton22.Caption = "|fffd||fffd||fffd||5c2||10c||fffd||fffd||fffd|(I)"
     
     'VBE
     Me.Label141.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label140.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.CommandButton103.Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|(L)"
     Me.CommandButton101.Caption = "|fffd|O|fffd||fffd|u|fffd||fffd|(V)"
     Me.CommandButton102.Caption = "|fffd||fffd||fffd||fffd|u|fffd||fffd|(R)"
     Me.CommandButton100.Caption = "|fffd||fffd||fffd||5c2||10c||fffd||fffd||fffd|(A)"
     Me.CommandButton98.Caption = "|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|(P)"
     Me.CommandButton99.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(F)"
     
     '|fffd|t|fffd|B|fffd||fffd|
     Me.Label142.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(G)"
     Me.Label144.Caption = "|fffd||fffd||fffd||fffd|"
     Me.OptionButton22.Caption = "|fffd||fffd|"
     Me.OptionButton23.Caption = "|fffd|E"
     Me.OptionButton24.Caption = "|fffd||fffd|"
     Me.OptionButton25.Caption = "|fffd||fffd|"
     Me.Label145.Caption = "|fffd||fffd||fffd||fffd|"
     Me.OptionButton26.Caption = "|fffd||fffd||fffd||fffd|"
     Me.OptionButton27.Caption = "|fffd||fffd||fffd||fffd|"
     Me.CommandButton118.Caption = "|fffd|t|fffd|B|fffd||fffd|(F)"
     
     '|fffd|V|fffd|[|fffd|g
     Me.Label62.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label63.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.Label314.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(F)"
     Me.Label315.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.CheckBox54.Caption = "|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|(B)"
     Me.CheckBox55.Caption = "|fffd||fffd|\|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||38f||fffd|(H)"
     Me.Label146.Caption = "|fffd||38f||fffd|"
     Me.OptionButton4.Caption = "|fffd|V|fffd|[|fffd|g|fffd||fffd|"
     Me.OptionButton5.Caption = "|fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|["
     Me.OptionButton6.Caption = "|fffd||fffd||fffd||fffd||fffd|w|fffd|b|fffd|_|fffd|["
     Me.OptionButton7.Caption = "|fffd|E|fffd|w|fffd|b|fffd|_|fffd|["
     Me.OptionButton8.Caption = "|fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|["
     Me.OptionButton9.Caption = "|fffd||fffd||fffd||fffd||fffd|t|fffd|b|fffd|^|fffd|["
     Me.OptionButton10.Caption = "|fffd|E|fffd|t|fffd|b|fffd|^|fffd|["
     Me.CommandButton51.Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|(P)"
     Me.CommandButton272.Caption = "Grep|fffd|u|fffd||fffd|"
     Me.CommandButton273.Caption = "|fffd||fffd||fffd|~(C)"
 
     '|fffd||fffd||fffd|l|fffd|[|fffd||fffd|
     Me.Label101.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label100.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.Label102.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.CheckBox59.Caption = "|fffd|B|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||38f||fffd|(H)"
     Me.CommandButton77.Caption = "|fffd||fffd||fffd||256||7c2||fffd|(U)"
     Me.CommandButton75.Caption = "|fffd|u|fffd||fffd|(P)"
     Me.CommandButton290.Caption = "|fffd||d3dc|(D)"
     Me.CommandButton76.Caption = "|fffd||fffd||fffd||fffd|(F)"
 
     '|fffd||fffd||fffd|O
     Me.Label134.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label133.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.CheckBox84.Caption = "|fffd||fffd|\|fffd||fffd||fffd||316||fffd||fffd|O|fffd||fffd||fffd||38f||fffd|(H)"
     Me.Label147.Caption = "|fffd||348||fffd|"
     Me.OptionButton17.Caption = "|fffd|S|fffd||fffd|"
     Me.OptionButton18.Caption = "|fffd|u|fffd|b|fffd|N"
     Me.OptionButton19.Caption = "|fffd||fffd||fffd||742||303|V|fffd|[|fffd|g"
     Me.Label148.Caption = "|fffd||38f||fffd|"
     Me.OptionButton20.Caption = "|fffd||fffd||fffd|O"
     Me.OptionButton21.Caption = "|fffd|Q|fffd||194||348||fffd|"
     Me.CommandButton89.Caption = "|fffd|u|fffd||fffd|(P)"
     Me.CommandButton90.Caption = "|fffd||fffd||fffd||fffd|(F)"
     
     '|fffd||fffd||fffd||fffd|
     Me.Label103.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.CheckBox68.Caption = "|fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||582||fffd||fffd||fffd|(W)"
     Me.CommandButton84.Caption = "|fffd|v|fffd||fffd||fffd|r|fffd||fffd||fffd|[(P)"
     Me.CommandButton80.Caption = "|fffd||fffd||fffd||fffd|(S)"
     
     '|fffd||fffd||fffd|o
     Me.Label13.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label14.Caption = "|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|(F)"
     Me.Label15.Caption = "|fffd||fffd||fffd|o|fffd||fffd||fffd|(T)"
     Me.CommandButton16.Caption = "|fffd||fffd||fffd|o(E)"

     'Idx
     Me.Label318.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label319.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.Label320.Caption = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_"
     Me.Label321.Caption = "|fffd||c42c||fffd||fffd||fffd||fffd|"
     Me.Label322.Caption = "|fffd|T|fffd|C|fffd|Y"
     Me.CheckBox204.Caption = "|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||38f||fffd|"
     Me.CheckBox205.Caption = "|fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton278.Caption = "|fffd||d3dc|(D)"
     Me.CommandButton279.Caption = "|fffd||c42c|(M)"
     Me.CommandButton280.Caption = "|fffd||fffd||fffd||fffd|(F)"

     'Grep
     Me.Label16.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label17.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(F)"
     Me.CheckBox62.Caption = "|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(O)"
     Me.Label18.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.CheckBox16.Caption = "|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|(B)"
     Me.CheckBox60.Caption = "ZIP|fffd||fffd||fffd||253||fffd||fffd||fffd||fffd||fffd|"
     Me.CheckBox75.Caption = "|fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g(T)"
     Me.CheckBox202.Caption = "|fffd||327a||fffd|\|fffd||fffd|(U)"
     Me.Label104.Caption = "|fffd|s(R)"
     Me.Label105.Caption = "|fffd||fffd|(C)"
     Me.CommandButton21.Caption = "|fffd||fffd||fffd|~(C)"
     Me.CommandButton20.Caption = "|fffd||fffd||fffd|s(G)"
     Me.CommandButton303.Caption = "Word|fffd||fffd||fffd||fffd|"

     'Grep|fffd|u|fffd||fffd|
     Me.Label25.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label29.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.Label26.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(F)"
     Me.CheckBox63.Caption = "|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(O)"
     Me.Label27.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.CheckBox27.Caption = "|fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||c42c|(K)"
     Me.CommandButton32.Caption = "|fffd||fffd||fffd|~(C)"
     Me.CommandButton31.Caption = "|fffd||fffd||fffd|s(G)"

     '|fffd|V|fffd|F|fffd|C|fffd|vGrep
     Me.Label39.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label40.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.Label36.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(F)"
     Me.CheckBox64.Caption = "|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|(O)"
     Me.Label37.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_(R)"
     Me.CommandButton41.Caption = "|fffd||fffd||fffd|~(C)"
     Me.CommandButton42.Caption = "Grep|fffd|u|fffd||fffd|"
     Me.CommandButton39.Caption = "Grep"

     'Diff
     Me.Label303.Caption = "1|fffd||516||682||303|t|fffd|@|fffd|C|fffd||fffd||fffd|i|fffd||fffd||fffd|j"
     Me.Label305.Caption = "2|fffd||516||682||303|t|fffd|@|fffd|C|fffd||fffd||fffd|i|fffd|V|fffd|j"
     Me.Label307.Caption = "|fffd||fffd||fffd||348||fffd|"
     Me.Label313.Caption = "|fffd|i0|fffd||34e|w|fffd||fffd||202||fffd||fffd|j"
     Me.Label311.Caption = "|fffd|^|fffd|u|fffd||fffd|"
     Me.Label304.Caption = "|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h"
     Me.Label306.Caption = "|fffd||fffd||fffd|s"
     Me.CheckBox200.Caption = "|fffd||d448d|s|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|(I)"
     Me.CheckBox229.Caption = "|fffd|s|fffd||fffd||fffd|O|fffd||fffd|X|fffd|y|fffd|[|fffd|X|fffd||16cce||fffd|(T)"
     Me.CheckBox201.Caption = "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|r(L)"
     Me.CommandButton259.Caption = "|fffd||fffd|r(P)"
     Me.CommandButton260.Caption = "|fffd||fffd||fffd|~(C)"

     '|fffd|`|fffd|F|fffd|b|fffd|N
     Me.Label30.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|(N)"
     Me.Label31.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|(E)"
     Me.Label34.Caption = "|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|(O)"
     Me.Label35.Caption = "|fffd||fffd||fffd||fffd|"
     Me.CommandButton35.Caption = "|fffd||fffd|"
     Me.CommandButton36.Caption = "|fffd|l"
     Me.CommandButton34.Caption = "|fffd|u|fffd||fffd|(R)"
     Me.CommandButton33.Caption = "|fffd||fffd||fffd||fffd|(F)"

     '|fffd||fffd||fffd||fffd|
     Me.Label44.Caption = "|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|(T)"
     Me.Label45.Caption = "|fffd||1c9||fffd|1"
     Me.Label46.Caption = "|fffd||fffd||fffd|o1"
     Me.Label47.Caption = "|fffd||1c9||fffd|2"
     Me.Label48.Caption = "|fffd||fffd||fffd|o2"
     Me.Label49.Caption = "|fffd||1c9||fffd|3"
     Me.Label50.Caption = "|fffd||fffd||fffd|o3"
     Me.Label51.Caption = "|fffd||1c9||fffd|4"
     Me.Label56.Caption = "|fffd|u|fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|"
     Me.Label52.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label54.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton50.Caption = "|fffd||fffd||fffd||fffd|(D)"
     Me.CommandButton48.Caption = "|fffd||fffd||fffd||fffd|(M)"
     Me.CommandButton49.Caption = "|fffd||fffd||fffd||fffd|(I)"

     '|fffd||fffd||fffd|L
     Me.CheckBox41.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53642||311||fffd||fffd|M|fffd||fffd||fffd|s|fffd||fffd||202||fffd|(S)"
     Me.CheckBox42.Caption = "|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||30b||fffd||fffd|L|fffd|f|fffd|[|fffd|^|fffd||17617|p(L)"
     Me.CommandButton44.Caption = "|fffd|W|fffd|J(E)"

     '|fffd||752||fffd|
     Me.CheckBox34.Caption = "|fffd|N|fffd||fffd||fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd||24c||fffd||fffd||742||303|Z|fffd||fffd||fffd||fffd||752||fffd|(A)"
     Me.CheckBox37.Caption = "|fffd|P|fffd||fffd||22ae|(W)"
     Me.CheckBox33.Caption = "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||115d0|M|fffd||fffd||fffd||202||fffd|(E)"
     Me.CheckBox43.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|(T)"
     Me.Label43.Caption = "|fffd|w|fffd|i|fffd|F"
     Me.CheckBox73.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(A)"
     Me.CheckBox44.Caption = "|fffd|N|fffd||fffd||fffd||fffd||fffd||24d|X|fffd|V|fffd|m|fffd|F|fffd||fffd||fffd|s|fffd||fffd||202||fffd|(V)"
     Me.CheckBox88.Caption = "|fffd|l|fffd|b|fffd|g|fffd||fffd||fffd||5c2||103|I|fffd|t(A)"
     Me.CheckBox48.Caption = "|fffd||590||fffd||fffd|K|fffd|C|fffd|h|fffd||fffd|\|fffd||fffd|(G)"
     Me.CheckBox85.Caption = "|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||292|u|fffd|L|fffd||fffd|(W)"
     Me.CheckBox50.Caption = "|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|VBE|fffd||fffd||fffd|J|fffd||fffd|"
     Me.CheckBox56.Caption = "Meiryo UI"
     Me.CheckBox65.Caption = "|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[(Q)"
     Me.CommandButton47.Caption = "|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g(D)"
     Me.CommandButton6.Caption = "|fffd|L|fffd|[|fffd||3cd|X(K)"
     Me.CommandButton73.Caption = "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|N|fffd||fffd||fffd|A(C)"
     Me.CommandButton17.Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A(F)"
     Me.CommandButton18.Caption = "|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|A(R)"
     Me.CommandButton38.Caption = "|fffd||22ae||fffd||fffd||fffd||fffd|(I)"
     Me.CommandButton126.Caption = "|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|A"
     Me.CommandButton158.Caption = "|fffd||752||fffd|N|fffd||fffd||fffd|A(C)"
     Me.CommandButton7.Caption = "|fffd|w|fffd||fffd||fffd|v(H)"
     Me.CommandButton92.Caption = "|fffd|X|fffd|V(U)"
     Me.CommandButton14.Caption = "|fffd|X|fffd|V|fffd|m|fffd|F(U)"
     Me.CommandButton8.Caption = "|fffd||d3dc|(D)"
     If SW_TEMP = True Then
        Me.CommandButton8.Caption = "|fffd|I|fffd||fffd|"
     End If
  
     Me.CheckBox78.Caption = "|fffd|j|fffd||fffd||fffd|[|fffd|X|fffd|\|fffd||fffd|(N)"
     Me.CheckBox81.Caption = "|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v(M)"
     Me.CheckBox86.Caption = "|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|A|fffd|j|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd|I|fffd|t(W)"
     Me.Label107.Caption = "|fffd|^|fffd|u|fffd|O|fffd||fffd|"
     Me.Label108.Caption = "|fffd|^|fffd|u|fffd||fffd||fffd|"
     Me.Label109.Caption = "|fffd|^|fffd|u|fffd||fffd|\|fffd||fffd|"
     Me.Label110.Caption = "|fffd|^|fffd|u|fffd|S|fffd|\|fffd||fffd|"
     Me.Label111.Caption = "|fffd|^|fffd|u|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g"
     Me.Label112.Caption = "|fffd||82||fffd||fffd||fffd|"
     Me.Label113.Caption = "|fffd|^|fffd|u|fffd||290||752||fffd||fffd|\|fffd||fffd|"
     Me.Label114.Caption = "|fffd|^|fffd|u|fffd||290||752||fffd|\|fffd||fffd|"
     Me.Label115.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||611||fffd|"
     Me.Label116.Caption = "|fffd|w|fffd||fffd||fffd|v"
  
     Me.Label127.Caption = "|fffd||fffd||fffd||303|^|fffd|u"
     Me.Label128.Caption = "|fffd|O|fffd||303|^|fffd|u"
     Me.Label129.Caption = "|fffd|^|fffd|u|fffd||290||752||fffd|\|fffd||fffd|"
     Me.Label130.Caption = "|fffd|^|fffd|u|fffd||290||752||fffd||fffd|\|fffd||fffd|"
     
     '|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
     Me.Label3.Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|  Version  5.50"
     Me.Label149.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.OptionButton11.Caption = "|fffd||fffd||fffd||fffd|"
     Me.OptionButton12.Caption = "|fffd|s"
     Me.OptionButton13.Caption = "|fffd||fffd|"
     Me.CheckBox71.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|(X)"
     Me.CheckBox209.Caption = "|fffd||fffd||fffd||350||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd|(D)"
     Me.CheckBox72.Caption = "|fffd||fffd||fffd||282||315||22ae||fffd||fffd||fffd|s|fffd||fffd||202||fffd|(P)"
     Me.CheckBox69.Caption = "|fffd|^|fffd|u|fffd||fffd||fffd||fffd||fffd||3cd|X(T)"
     Me.CommandButton83.Caption = "|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g(D)"
  
     Me.Label287.Caption = "|fffd||38f||fffd|"
     Me.CheckBox172.Caption = "|fffd||fffd||fffd||fffd|(B)"
     Me.CheckBox173.Caption = "|fffd||391||fffd|(I)"
     Me.CheckBox174.Caption = "|fffd||fffd||fffd||fffd|(U)"
     Me.CheckBox175.Caption = "|fffd||fffd||fffd||fffd||fffd|(K)"
     Me.CheckBox176.Caption = "|fffd||fffd||fffd||fffd||fffd|F(C)"
     Me.Label288.Caption = "|fffd||3cd|X"
     Me.CheckBox177.Caption = "|fffd||fffd||fffd||fffd|(B)"
     Me.CheckBox178.Caption = "|fffd||391||fffd|(I)"
     Me.CheckBox179.Caption = "|fffd||fffd||fffd||fffd|(U)"
     Me.CheckBox180.Caption = "|fffd||fffd||fffd||fffd||fffd|(K)"
     Me.CheckBox181.Caption = "|fffd||fffd||fffd||fffd||fffd|F(C)"
     Me.CheckBox171.Caption = "|fffd||fffd||fffd||fffd||fffd||6ce||fffd|(D)"
  
     Me.CheckBox210.Caption = "|fffd||fffd||fffd||343|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|(A)"
     Me.Label339.Caption = "|fffd||292|u"
     Me.Label340.Caption = "|fffd|L|fffd||fffd|"
     Me.Label341.Caption = "|fffd||fffd||fffd||fffd|"
     Me.Label352.Caption = "|fffd||6d2||fffd|"
  
     Me.CheckBox186.Caption = "|fffd||6d2||fffd|(D)"
  
     Me.Label289.Caption = "|fffd||38f||fffd|"
     Me.OptionButton1.Caption = "|fffd|S|fffd||fffd|"
     Me.OptionButton2.Caption = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||fffd|"
     Me.OptionButton3.Caption = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||20a|O"
     Me.CheckBox189.Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||103|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|iExcel2003|fffd||211|O|fffd|j(G)"
     Me.CheckBox188.Caption = "SmartArt|fffd||702||fffd|"
  
     Me.CheckBox190.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h(H)"
     Me.CheckBox194.Caption = "|fffd|i|fffd||fffd|(P)"
     Me.CheckBox195.Caption = "|fffd|o|fffd||7c3|I|fffd|t(F)"
     Me.CheckBox203.Caption = "|fffd|n|fffd|C|fffd||fffd||fffd|C|fffd|g(L)"
     Me.Label294.Caption = "|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|X|fffd|g(P)"
     Me.CheckBox207.Caption = "|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|(Z)"
  
     Me.Label295.Caption = "|fffd||fffd||fffd|s"
     Me.Label296.Caption = "|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|A|fffd||fffd||fffd|\|fffd|b|fffd|h"
     Me.Label297.Caption = "|fffd|l|fffd|A|fffd||fffd||fffd||fffd|"
  
     Me.Label324.Caption = "|fffd|F"
     Me.Label325.Caption = "|fffd||fffd||fffd||fffd|(1|fffd||516||fffd|)"
     Me.Label326.Caption = "|fffd||fffd||fffd||fffd|(2|fffd||516||fffd|)"
     Me.Label327.Caption = "|fffd||fffd||fffd||fffd|(|fffd|s|fffd||202||fffd|)"
     Me.Label328.Caption = "|fffd|s|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton287.Caption = "|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g(D)"
  End If

  Call FONT_CHG

  SW_LGCHG = True
  Call RCLICK_MENU_MAKE
  SW_LGCHG = False

  If Me.ListBox1.Visible = True Then
     hwnd = GetActiveWindow
#If Win64 Then
     SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
     SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If
     DrawMenuBar hwnd
  End If

End Sub

Private Sub CheckBox56_Change()
'Meiryo UI
  
  Dim SW_LOAD As Boolean
  Dim I As Long
  
  SW_MEIRYO = Me.CheckBox56.Value
 
  Call FONT_CHG

End Sub

Private Sub CheckBox65_Change()
'|fffd|N|fffd|C|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|[

  If Val(Application.Version) >= 15 Then
     If SW_BARUPD = True Then
        Call RMV_BAR
     End If
     If Application.Visible = False Then
     ElseIf SW_HSGREP = True And _
        W_PNO > 0 Then
     Else
        If Me.Visible = True Then
           If Me.CheckBox65.Value = True Then
              UserForm10.Show vbModeless
           Else
              Unload UserForm10
           End If
        End If
     End If
  Else
     If SW_BARUPD = True Then
        Call RMV_BAR
        If Me.CheckBox65.Value = True Then
           Call MK_BAR
        End If
     End If
  End If

End Sub

Private Sub CheckBox50_Change()
'VBE
  
  SW_VBE = Me.CheckBox50.Value

End Sub

Private Sub CommandButton6_Click()
'|fffd|L|fffd|[|fffd||3cd|X
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Key change"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  Call SHOW_MODELESS(UserForm15)
  W_PAGEN = "Page13"
  UserForm2.Show
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Sub CommandButton73_Click()
'|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|N|fffd||fffd||fffd|A

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Folder clear"

  Erase AR_DTEXT
  Call SET_DIRCOMBO
  Me.ComboBox18.Value = ""
  Me.ComboBox19.Value = ""
  Me.ComboBox20.Value = ""
  Me.ComboBox23.Value = ""
  Me.ComboBox60.Value = ""
  Me.ComboBox62.Value = ""
  Me.CommandButton73.Enabled = False
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub CommandButton17_Click()
'|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Find clear"

  Erase AR_FTEXT
  Call SET_REFCOMBO
  Me.ComboBox1.Value = ""
  Me.ComboBox3.Value = ""
  Me.ComboBox4.Value = ""
  Me.ComboBox5.Value = ""
  Me.ComboBox6.Value = ""
  Me.ComboBox8.Value = ""
  Me.ComboBox12.Value = ""
  Me.ComboBox15.Value = ""
  Me.ComboBox16.Value = ""
  Me.ComboBox22.Value = ""
  Me.ComboBox24.Value = ""
  Me.ComboBox26.Value = ""
  Me.ComboBox27.Value = ""
  Me.ComboBox29.Value = ""
  Me.ComboBox31.Value = ""
  Me.ComboBox61.Value = ""
  Erase AR_ATEXT
  W_ATEXT = ""
  Call SET_REFCOMBO2
  Me.ComboBox59.Value = ""
  Me.CommandButton17.Enabled = False
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Sub CommandButton18_Click()
'|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|A

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Replace clear"

  Erase AR_RTEXT
  Call SET_REPCOMBO
  Me.ComboBox2.Value = ""
  Me.ComboBox7.Value = ""
  Me.ComboBox9.Value = ""
  Me.ComboBox13.Value = ""
  Me.ComboBox14.Value = ""
  Me.ComboBox17.Value = ""
  Me.ComboBox21.Value = ""
  Me.ComboBox25.Value = ""
  Me.ComboBox28.Value = ""
  Me.ComboBox30.Value = ""
  Me.CommandButton18.Enabled = False
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton38_Click()
'|fffd||22ae||fffd||fffd||fffd||fffd|

  Dim W_DICF As String
 
  On Error GoTo LABEL_REP
 
  W_EVAR = ""
  W_CLKBTN = "Dictionary"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  W_DICF = ThisWorkbook.path & "\dic.txt"
  If Dir(W_DICF) = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Complement dictionary file doesn't exist.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||22ae||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
  Else
     W_RET = ShellExecute(0, "open", W_DICF, vbNull, vbNull, 1)
  End If
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton126_Click()
'|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g|fffd|N|fffd||fffd||fffd|A

  Dim W_DICF As String
 
  On Error GoTo LABEL_REP
 
  W_EVAR = ""
  W_CLKBTN = "Suggest clear"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Initialize suggest.", vbInformation + vbOKCancel)
  Else
     W_RET = MsgBox("|fffd|T|fffd|W|fffd|F|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbInformation + vbOKCancel)
  End If
  
  If W_RET = vbOK Then
     W_DICF = ThisWorkbook.path & "\sug.txt"
     If Dir(W_DICF) <> "" Then
        Kill W_DICF
     End If
  End If
  
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton7_Click()
'|fffd|w|fffd||fffd||fffd|v

  On Error GoTo LABEL_REP
 
  W_EVAR = ""
  W_CLKBTN = "Help"
  Call HELP_RTN
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton14_Click()
'|fffd|X|fffd|V|fffd|m|fffd|F
  
  Dim W_STR As String
  Dim W_LVER As Integer
  Dim W_MVER As Integer

  On Error GoTo LABEL_REP

  W_EVAR = ""
  W_CLKBTN = "Check upd"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  W_STR = VER_GET
  If W_STR = "" Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't get version info.")
     Else
        W_RET = MsgBox("|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B")
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  W_LVER = CDbl(W_STR) * 100
  W_MVER = CDbl(Right$(UserForm1.Label3.Caption, 4)) * 100

  If W_MVER >= W_LVER Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("This version is current version.", vbInformation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||34d||150|V|fffd||142||142||fffd||fffd|B", vbInformation)
     End If
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Update version exists." & vbCrLf & _
                       "Open web site.", vbExclamation + vbOKCancel)
     Else
        W_RET = MsgBox("|fffd|X|fffd|V|fffd||142||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd|E|fffd|F|fffd|u|fffd|T|fffd|C|fffd|g|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation + vbOKCancel)
     End If
     If W_RET = vbOK Then
        W_RET = ShellExecute(0, "open", Me.Label7.Caption, vbNull, vbNull, 1)
     End If
  End If
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton8_Click()
'|fffd||d3dc|
  Dim W_IDX As String
  Dim W_IDXC As String


  On Error GoTo LABEL_REP

  W_EVAR = ""
  W_CLKBTN = "Uninstall"
  
  If SW_TEMP = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Release open settings.", vbOKCancel + vbInformation)
     Else
        W_RET = MsgBox("|fffd|N|fffd||fffd||fffd||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
     End If
     If W_RET = vbOK Then
        If W_ONKEYF <> "" Then
           Application.OnKey W_ONKEYF
        End If
        If W_ONKEYR <> "" Then
           Application.OnKey W_ONKEYR
        End If
     
        Call RMENU_DEL
        If SW_AUTOUPD = False Then
           Call RMV_BAR
        End If
     End If
     
     SW_UNINST = True
     ThisWorkbook.Close
     Exit Sub
  End If
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call CNT_READ_RTN
  If W_EXCNT > 1 Then
     W_IDX = ThisWorkbook.path & "\bgf2.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating background find." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     
     W_IDX = ThisWorkbook.path & "\idx.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
        
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't unistall when multiple excels are started.", vbExclamation)
     Else
        W_RET = MsgBox("Excel|fffd||15850||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||182||fffd||fffd||343|A|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Unistall regular expression find.", vbOKCancel + vbInformation)
     SW_ENGLISH = True
  Else
     W_RET = MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
     SW_ENGLISH = False
  End If
  If W_RET = vbOK Then
     Call UNINST_RTN
  Else
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton92_Click()
'|fffd|X|fffd|V

  Dim W_UPDF As Variant
  Dim W_IDX As String
  Dim W_IDXC As String


  On Error GoTo LABEL_REP

  W_EVAR = ""
  W_CLKBTN = "Update"
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  Call CNT_READ_RTN
  If W_EXCNT > 1 Then
     W_IDX = ThisWorkbook.path & "\bgf2.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\bgfC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating background find." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|o|fffd|b|fffd|N|fffd|O|fffd||fffd||fffd|E|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
     
     W_IDX = ThisWorkbook.path & "\idx.vbs"
     If Dir(W_IDX) <> "" Then
        W_IDXC = ThisWorkbook.path & "\idxC.vbs"
        Open W_IDXC For Output As #1
        Close #1
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox("Terminating index auto maintenance." & vbCrLf & _
                          "After a while, please execute again.", vbExclamation)
        Else
           W_RET = MsgBox("|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                          "|fffd||fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd|A|fffd||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
        End If
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
        
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't update when multiple excels are started.", vbExclamation)
     Else
        W_RET = MsgBox("Excel|fffd||15850||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||182||fffd||fffd||34d|X|fffd|V|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Update regular expression find." & vbCrLf & _
                    "You need to download newer version.", vbOKCancel + vbInformation)
     SW_ENGLISH = True
  Else
     W_RET = MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd|V|fffd||fffd||fffd||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation)
     SW_ENGLISH = False
  End If
  If W_RET = vbOK Then
  Else
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
  If Me.CheckBox49.Value = True Then
     W_UPDF = Application.GetOpenFilename("Excel 97-2003 add-in (*.xla),*.xla", , "Select update add-in")
  Else
     W_UPDF = Application.GetOpenFilename("Excel 97-2003 |fffd|A|fffd|h|fffd|C|fffd||fffd| (*.xla),*.xla", , "|fffd|X|fffd|V|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||30e|w|fffd||fffd|")
  End If
  If VarType(W_UPDF) = vbBoolean Then
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     Exit Sub
  End If
  
  If Right$(W_UPDF, 11) = "\update.xla" Then
  Else
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Not update add-in.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|X|fffd|V|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     If Val(Application.Version) >= 15 Then
        Call SETTM_UF
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  Call UPD_WRITE_RTN(W_UPDF)
  Call NRTASK(NRE, W_UPDF, False)
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton93_Click()

  If SW_ANM = True Then
     Exit Sub
  End If
  
  On Error Resume Next
  Application.CommandBars("EREPU8").ShowPopup
  On Error GoTo 0

End Sub

Private Sub CommandButton269_Click()
'|fffd||78b|`|fffd||fffd|

  Dim RE As Object
  Dim W_STR As String
  Dim MATCHES As Object
  Dim I As Long
  Dim W_NO As String
  Dim W_REP As String
  Dim W_ST As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Synonym"

  If SW_ANM = True Then
     Exit Sub
  End If
  
  If SW_ENGLISH = True Then
     Exit Sub
  End If

  If DIC_S1 Is Nothing Or _
     DIC_S2 Is Nothing Then
     Exit Sub
  End If

  W_REP = Me.ComboBox1.Value

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = True
     .Global = True
     .Pattern = "[|fffd||fffd||fffd||302||fffd||fffd||242||582||182||fffd||fffd||fffd|]"
     If .Test(W_REP) = True Then
        W_STR = JCNV(W_REP)
        If W_STR = "" Then
           W_STR = W_REP
        End If
     Else
        W_STR = W_REP
     End If
     .Pattern = "[^\s|fffd|@|fffd|i|fffd|j|fffd|o|fffd|p|fffd|u|fffd|v|fffd||fffd||fffd||fffd||fffd|e|fffd|f|fffd|A|fffd|B|fffd|C|fffd|D|fffd|H|fffd|I|fffd|F|fffd|G""""#$%&'()=~|`{+*}<>?\^\\@\[;:\],./]+"
  End With
  
  Set MATCHES = RE.Execute(W_STR)
  W_ST = 1
  
  For I = 0 To MATCHES.count - 1
     If DIC_S1.Exists(MATCHES.Item(I).Value) = True Then
        W_NO = DIC_S1(MATCHES.Item(I).Value)
        If DIC_S2.Exists(W_NO) = True Then
           W_ST = InStr(W_ST, W_REP, MATCHES.Item(I).Value)
           If W_ST > 1 Then
              W_STR1 = Left$(W_REP, W_ST - 1)
           Else
              W_STR1 = ""
           End If
           W_STR2 = Mid$(W_REP, W_ST, MATCHES.Item(I).Length)
           If Len(W_REP) - (W_ST + MATCHES.Item(I).Length) + 1 > 0 Then
              W_STR3 = Right$(W_REP, Len(W_REP) - (W_ST + MATCHES.Item(I).Length) + 1)
           Else
              W_STR3 = ""
           End If
           W_STR2 = DIC_S2(W_NO)
           W_REP = W_STR1 & W_STR2 & W_STR3
           W_ST = W_ST + Len(DIC_S2(W_NO))
        End If
     End If
  Next I

  Set MATCHES = Nothing
  Set RE = Nothing
  
  Me.ComboBox1.Value = W_REP

  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub CommandButton119_Click()

  If SW_ANM = True Then
     Exit Sub
  End If
  
  On Error Resume Next
  Application.CommandBars("EREPU10").ShowPopup
  On Error GoTo 0

End Sub

Private Sub CommandButton105_Click()
'|fffd|}|fffd||fffd|

  Dim W_FNDSTR As String

  Dim RE9 As Object

  Dim W_LV1 As Long
  Dim I As Long
  Dim MAXR As Long
  Dim MAXC As Long
  Dim W_FNDSTR2 As String

  Dim AR_WK As Variant
  Dim W_PREFND As String


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Railroad"

  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If

  W_FNDSTR = Me.ComboBox1.Value
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\\", Chr$(1))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\[", Chr$(4))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\]", Chr$(5))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\{", Chr$(6))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\}", Chr$(7))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\.", Chr$(14))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\*", Chr$(15))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\+", Chr$(16))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\?", Chr$(17))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\^", Chr$(28))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\$", Chr$(29))
  
  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
  W_FNDSTR = FNDSTRCNV(W_FNDSTR)
  If W_FNDSTR = "" Then
     GoTo LABEL_ERR
  End If
  
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\\", Chr$(1))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\[", Chr$(4))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\]", Chr$(5))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\{", Chr$(6))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\}", Chr$(7))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\.", Chr$(14))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\*", Chr$(15))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\+", Chr$(16))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\?", Chr$(17))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\^", Chr$(28))
  W_FNDSTR = Application.Substitute(W_FNDSTR, "\$", Chr$(29))
  
  Set RE9 = CreateObject("VBScript.RegExp")
  With RE9
     .IgnoreCase = True
     .Global = True
  End With
  RE9.Pattern = "(\[[^\(\]]*?)(\(+?)([^\(\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\(", Chr$(2))
  End If
  RE9.Pattern = "(\[[^\|\]]*?)(\|+?)([^\|\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\|", Chr$(18))
  End If
  RE9.Pattern = "(\[[^\)\]]*?)(\)+?)([^\)\]]*?\])"
  If RE9.Test(W_FNDSTR) = True Then
     W_FNDSTR = RE9.Replace(W_FNDSTR, "$1\$2$3")
     W_FNDSTR = Application.Substitute(W_FNDSTR, "\)", Chr$(3))
  End If
  Set RE9 = Nothing
  
  W_FNDSTR2 = FNDSTRCNV2(W_FNDSTR, W_PREFND, SW_ERRFLG)
  If SW_ERRFLG = True Then
     GoTo LABEL_ERR
  End If

  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
     .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
     .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
  End With
  On Error GoTo LABEL_ERR
  RE.Test (" ")
  If W_PREFND <> "" Then
     AR_WK = Split(W_PREFND, Chr$(127))
     For I = 0 To UBound(AR_WK)
        RE.Pattern = Mid$(AR_WK(I), 5, Len(AR_WK(I)) - 5)
        RE.Test (" ")
     Next I
  End If
  On Error GoTo LABEL_REP
  Set RE = Nothing
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Me.CheckBox49.Value = True Then
     If MsgBox("Will show regular expression railroad diagram.", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|}|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If
    
  Application.ScreenUpdating = False
    
  If Val(Application.Version) >= 15 Then
     Call UF_TM
     Call GREP2013S1
     Call UF_TM
  End If
  
  Workbooks.Add
  
  If Val(Application.Version) >= 15 Then
     Call GREP2013S2
  End If
  
  W_FRB = Workbooks(Workbooks.count).Name
  With Workbooks(W_FRB).Worksheets(1)
     .Cells.NumberFormatLocal = "@"
     .Cells.HorizontalAlignment = xlCenter
     .Cells.VerticalAlignment = xlCenter
     .Columns.ColumnWidth = 2
  End With

  R = 5
  C = 2
  W_LV1 = -1
  MAXR = 0
  MAXC = C

  Call RE_SPLIT(W_FNDSTR, W_LV1, R, C, MAXR, MAXC)

  With Workbooks(W_FRB).Worksheets(1)
     For C = .UsedRange.Columns(1).Column To .UsedRange.Columns(.UsedRange.Columns.count).Column
        If .Cells(1, C).End(xlDown).Row < Rows.count Then
           .Columns(C).ColumnWidth = 100
        End If
     Next C
     For C = .UsedRange.Columns(.UsedRange.Columns.count).Column To .UsedRange.Columns(1).Column Step -1
        If .Cells(1, C).End(xlDown).Row = Rows.count Then
           .Columns(C).Delete
        End If
     Next C
     .Columns.AutoFit
     .Rows.AutoFit
     .Cells(1, 1).Value = Me.ComboBox1.Value
     .Cells(1, 1).HorizontalAlignment = xlLeft
  End With

  If Val(Application.Version) >= 15 Then
     Call GREP2013E1
  End If
  
  Application.ScreenUpdating = True

  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call GREP2013E2
     Call SETTM_UF
     Call GREP2013E3
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  Call COMBO_FOCUS
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton106_Click()
'|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N

  Dim ACTS As Worksheet
  Dim NWB As Workbook
  Dim NWB2 As Workbook
  Dim CW As Double
  Dim RH As Double

  Dim I As Long
  Dim C2 As Long
  Dim AR_CELL As Variant
  Dim AR_CELL2 As Variant

  Dim TRNG As Range
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long

  Dim SHP As Shape
  Dim FTPW As Long

  Dim W_VSC As Long
  Dim CW2 As Double
  Dim RH2 As Double
  Dim S As Long
  Dim CWA As Double
  Dim RHA As Double

  Dim CW2WK As Double
  Dim CWWK As Double

  Dim P As Long
  Dim CWK As Long
  Dim VPBLC As Long
  Dim VPBCNT As Long
  Dim SW_AFCHK As Boolean
  
  Dim FSO As Object
  Dim W_TEMP As String
  Dim W_ZDIR As String
  Dim SA As Object
  Dim FILE As Object
  Dim DEST As Object
  Dim W_DOC As String
  Dim W_PAGES As String
  Dim W_FRAGS As String
  Dim W_VAL As String
  Dim W_CVAL As String
  Dim AR_WK As Variant
  
  Dim W_RED() As Long
  Dim W_GRN() As Long
  Dim W_BLU() As Long
  Dim DIC() As Object
  Dim W_APAGE As Long
  Dim W_MAXP As Long

  Dim W_STR As String
  Dim W_TSR As Long
  Dim W_TER As Long
  Dim W_TSC As Long
  Dim W_TEC As Long

  Dim W_FCNT() As Long
  Dim SW_ERR As Boolean
  Dim W_BEC As Long

  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long

  Dim CW2_1 As Double


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "PrintCheck"

  If WINDOWCHK = False Then
     Exit Sub
  End If
  If TypeName(ActiveSheet) <> "Worksheet" Then
     Exit Sub
  End If
  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     Exit Sub
  End If
  
  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If
  
  If Me.CheckBox49.Value = True Then
     If MsgBox("Will do print check.", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If MsgBox("|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  '|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveWorkbook.HasPassword = True Or _
     ActiveWorkbook.FileFormat = xlCSV Or _
     ActiveWorkbook.FileFormat = xlCurrentPlatformText Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot print check this worksheet.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||348||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     W_CLKBTN = ""
     Exit Sub
  End If
  
  '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
  If ActiveSheet.ProtectContents = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot use this command on a protected sheet." & vbCrLf & _
                       "To use this command, you must first unprotect the sheet." & _
                       "You may be prompted for a password.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||101|A|fffd||fffd||fffd||303|R|fffd|}|fffd||fffd||fffd|h|fffd||34e|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                       "|fffd||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||341|A[|fffd|c|fffd|[|fffd||fffd|] |fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd| [|fffd||6cc||fffd|] |fffd||fffd||fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|A" & _
                       "[|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||309||fffd||fffd||fffd|] |fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                       "|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||313||fffd||fffd||342||fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
     End If
     W_CLKBTN = ""
     Exit Sub
  End If

  Application.ScreenUpdating = False
  Application.EnableEvents = False
  W_AC1 = Application.Calculation
  Application.Calculation = xlCalculationManual

  AFN = 0
  Set ACTS = ActiveSheet
  
  On Error Resume Next
  Kill ThisWorkbook.path & "\_PC1"
  Kill ThisWorkbook.path & "\_PC2"
  On Error GoTo LABEL_REP
  
  Application.DisplayAlerts = False
  ACTS.Parent.SaveCopyAs ThisWorkbook.path & "\_PC1"
  Set NWB = Workbooks.Open(ThisWorkbook.path & "\_PC1", False, True)
  Application.DisplayAlerts = True
  NWB.Worksheets(ACTS.Name).UsedRange.Rows.Delete
  NWB.Worksheets(ACTS.Name).UsedRange.Columns.Delete
  
  If ACTS.PageSetup.PrintArea = "" Then
     Call RANGE_GET(ACTS.UsedRange.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
  Else
     Call RANGE_GET(ACTS.Range(ACTS.PageSetup.PrintArea).Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
     If InStr(ACTS.Range(ACTS.PageSetup.PrintArea).Address(True, True, xlR1C1), "R") = 0 Then
        Call RANGE_GET(ACTS.UsedRange.Address(True, True, xlR1C1), W_SR, W_USC, W_ER, W_UEC)
     End If
     If InStr(ACTS.Range(ACTS.PageSetup.PrintArea).Address(True, True, xlR1C1), "C") = 0 Then
        Call RANGE_GET(ACTS.UsedRange.Address(True, True, xlR1C1), W_USR, W_SC, W_UER, W_EC)
     End If
  End If
  
  ActiveWindow.View = xlPageBreakPreview
  
  For Each SHP In NWB.Worksheets(ACTS.Name).Shapes
     SHP.Delete
  Next
  
  Application.DisplayAlerts = False
  ACTS.Parent.SaveCopyAs ThisWorkbook.path & "\_PC2"
  Set NWB2 = Workbooks.Open(ThisWorkbook.path & "\_PC2", False, True)
  Application.DisplayAlerts = True
  
  NWB.Worksheets(ACTS.Name).PageSetup.PrintArea = ""
  
  SW_ERR = False
  
  With NWB2.Worksheets(ACTS.Name)
     .Range(.Cells(W_SR, W_SC), .Cells(W_ER, W_EC)).Font.Color = RGB(0, 0, 0)
     Application.DisplayAlerts = False
     ActiveWindow.View = xlPageBreakPreview
     Application.DisplayAlerts = True
     W_MAXP = GET_PAGE(.Cells(W_ER, W_EC))
     ReDim W_RED(W_MAXP)
     ReDim W_GRN(W_MAXP)
     ReDim W_BLU(W_MAXP)
     ReDim W_FCNT(W_MAXP)
     
     If ACTS.PageSetup.PrintTitleRows <> "" Then
        W_STR = .PageSetup.PrintTitleRows
        W_STR = Left$(W_STR, InStr(W_STR, ":") - 1)
        W_STR = Right$(W_STR, Len(W_STR) - 1)
        W_TSR = CLng(W_STR)
        W_STR = .PageSetup.PrintTitleRows
        W_STR = Right$(W_STR, Len(W_STR) - InStr(W_STR, ":") - 1)
        W_TER = CLng(W_STR)
  
        For R = W_TSR To W_TER
           If .Rows(R).EntireRow.Hidden = False Then
              For C = W_SC To W_EC
                 If .Columns(C).EntireColumn.Hidden = True Then
                 ElseIf .Cells(R, C).ShrinkToFit = True Then
                 ElseIf .Cells(R, C).text <> "" Then
                    If .Cells(R, C).WrapText = True Then
                       If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                          For P = 1 To W_MAXP
                             W_BLU(P) = W_BLU(P) + 1
                             If W_BLU(P) > 255 Then
                                W_GRN(P) = W_GRN(P) + 1
                                W_BLU(P) = 0
                             End If
                             If W_GRN(P) > 255 Then
                                W_RED(P) = W_RED(P) + 1
                                W_GRN(P) = 0
                             End If
                             If W_RED(P) > 255 Then
                                W_RED(P) = 0
                                W_GRN(P) = 0
                                W_BLU(P) = 0
                             End If
                          Next P
                          If W_FCNT(1) >= 512 Then
                             SW_ERR = True
                             GoTo L_END
                          Else
                             .Cells(R, C).Font.Color = RGB(W_RED(1), W_GRN(1), W_BLU(1))
                             W_FCNT(1) = W_FCNT(1) + 1
                          End If
                       End If
                    ElseIf ((IsNumeric(.Cells(R, C).Value) = True Or _
                         IsDate(.Cells(R, C).Value) = True) And _
                        .Cells(R, C).NumberFormatLocal <> "") Then
                        If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                          CW = 0
                          If .Cells(R, C).MergeCells = True Then
                             For I = 1 To .Cells(R, C).MergeArea.Columns.count
                                CW = CW + .Cells(R, C).MergeArea.Columns(I).ColumnWidth
                                If I < .Cells(R, C).MergeArea.Columns.count Then
                                   CW = CW + 0.66
                                End If
                             Next I
                          Else
                             CW = .Columns(C).ColumnWidth
                          End If
                                              
                          NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth = CW
                          NWB.Worksheets(ACTS.Name).Cells(1, 1).Value = .Cells(R, C).text
                          Call SET_FONT(NWB.Worksheets(ACTS.Name).Cells(1, 1), NWB2.Worksheets(ACTS.Name))
                          NWB.Worksheets(ACTS.Name).Columns(1).AutoFit
                          If NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth > CW Then
                             For P = 1 To W_MAXP
                                W_BLU(P) = W_BLU(P) + 1
                                If W_BLU(P) > 255 Then
                                   W_GRN(P) = W_GRN(P) + 1
                                   W_BLU(P) = 0
                                End If
                                If W_GRN(P) > 255 Then
                                   W_RED(P) = W_RED(P) + 1
                                   W_GRN(P) = 0
                                End If
                                If W_RED(P) > 255 Then
                                   W_RED(P) = 0
                                   W_GRN(P) = 0
                                   W_BLU(P) = 0
                                End If
                             Next P
                             If W_FCNT(1) >= 512 Then
                                SW_ERR = True
                                GoTo L_END
                             Else
                                .Cells(R, C).Font.Color = RGB(W_RED(1), W_GRN(1), W_BLU(1))
                                W_FCNT(1) = W_FCNT(1) + 1
                             End If
                          End If
                       End If
                    End If
                 End If
              Next C
           End If
        Next R
     End If
     
     If ACTS.PageSetup.PrintTitleColumns <> "" Then
        W_STR = .PageSetup.PrintTitleColumns
        W_STR = Left$(W_STR, InStr(W_STR, ":") - 1)
        W_STR = Right$(W_STR, Len(W_STR) - 1)
        W_TSC = CLng(W_STR)
        W_STR = .PageSetup.PrintTitleColumns
        W_STR = Right$(W_STR, Len(W_STR) - InStr(W_STR, ":") - 1)
        W_TEC = CLng(W_STR)
  
        For R = W_SR To W_ER
           If .Rows(R).EntireRow.Hidden = False Then
              For C = W_TSC To W_TEC
                 If .Columns(C).EntireColumn.Hidden = True Then
                 ElseIf .Cells(R, C).ShrinkToFit = True Then
                 ElseIf .Cells(R, C).text <> "" Then
                    If .Cells(R, C).WrapText = True Then
                       If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                          For P = 1 To W_MAXP
                             W_BLU(P) = W_BLU(P) + 1
                             If W_BLU(P) > 255 Then
                                W_GRN(P) = W_GRN(P) + 1
                                W_BLU(P) = 0
                             End If
                             If W_GRN(P) > 255 Then
                                W_RED(P) = W_RED(P) + 1
                                W_GRN(P) = 0
                             End If
                             If W_RED(P) > 255 Then
                                W_RED(P) = 0
                                W_GRN(P) = 0
                                W_BLU(P) = 0
                             End If
                          Next P
                          If W_FCNT(1) >= 512 Then
                             SW_ERR = True
                             GoTo L_END
                          Else
                             .Cells(R, C).Font.Color = RGB(W_RED(1), W_GRN(1), W_BLU(1))
                             W_FCNT(1) = W_FCNT(1) + 1
                          End If
                       End If
                    ElseIf ((IsNumeric(.Cells(R, C).Value) = True Or _
                         IsDate(.Cells(R, C).Value) = True) And _
                        .Cells(R, C).NumberFormatLocal <> "") Then
                        If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                          CW = 0
                          If .Cells(R, C).MergeCells = True Then
                             For I = 1 To .Cells(R, C).MergeArea.Columns.count
                                CW = CW + .Cells(R, C).MergeArea.Columns(I).ColumnWidth
                                If I < .Cells(R, C).MergeArea.Columns.count Then
                                   CW = CW + 0.66
                                End If
                             Next I
                          Else
                             CW = .Columns(C).ColumnWidth
                          End If
                                              
                          NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth = CW
                          NWB.Worksheets(ACTS.Name).Cells(1, 1).Value = .Cells(R, C).text
                          Call SET_FONT(NWB.Worksheets(ACTS.Name).Cells(1, 1), NWB2.Worksheets(ACTS.Name))
                          NWB.Worksheets(ACTS.Name).Columns(1).AutoFit
                          If NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth > CW Then
                             For P = 1 To W_MAXP
                                W_BLU(P) = W_BLU(P) + 1
                                If W_BLU(P) > 255 Then
                                   W_GRN(P) = W_GRN(P) + 1
                                   W_BLU(P) = 0
                                End If
                                If W_GRN(P) > 255 Then
                                   W_RED(P) = W_RED(P) + 1
                                   W_GRN(P) = 0
                                End If
                                If W_RED(P) > 255 Then
                                   W_RED(P) = 0
                                   W_GRN(P) = 0
                                   W_BLU(P) = 0
                                End If
                             Next P
                             If W_FCNT(1) >= 512 Then
                                SW_ERR = True
                                GoTo L_END
                             Else
                                .Cells(R, C).Font.Color = RGB(W_RED(1), W_GRN(1), W_BLU(1))
                                W_FCNT(1) = W_FCNT(1) + 1
                             End If
                          End If
                       End If
                    End If
                 End If
              Next C
           End If
        Next R
     End If
     
     For R = W_SR To W_ER
        If .Rows(R).EntireRow.Hidden = False Then
           For C = W_SC To W_EC
              If .Columns(C).EntireColumn.Hidden = True Then
              ElseIf .Cells(R, C).ShrinkToFit = True Then
              ElseIf .Cells(R, C).text <> "" Then
                 If .Cells(R, C).WrapText = True Then
                    If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                       P = GET_PAGE(.Cells(R, C))
                       W_BLU(P) = W_BLU(P) + 1
                       If W_BLU(P) > 255 Then
                          W_GRN(P) = W_GRN(P) + 1
                          W_BLU(P) = 0
                       End If
                       If W_GRN(P) > 255 Then
                          W_RED(P) = W_RED(P) + 1
                          W_GRN(P) = 0
                       End If
                       If W_RED(P) > 255 Then
                          W_RED(P) = 0
                          W_GRN(P) = 0
                          W_BLU(P) = 0
                       End If
                       If W_FCNT(P) >= 512 Then
                          SW_ERR = True
                          GoTo L_END
                       Else
                          .Cells(R, C).Font.Color = RGB(W_RED(P), W_GRN(P), W_BLU(P))
                          W_FCNT(P) = W_FCNT(P) + 1
                       End If
                    End If
                 ElseIf ((IsNumeric(.Cells(R, C).Value) = True Or _
                      IsDate(.Cells(R, C).Value) = True) And _
                     .Cells(R, C).NumberFormatLocal <> "") Then
                     If .Cells(R, C).Characters(1, 1).Font.Color = RGB(0, 0, 0) Then
                       CW = 0
                       If .Cells(R, C).MergeCells = True Then
                          For I = 1 To .Cells(R, C).MergeArea.Columns.count
                             CW = CW + .Cells(R, C).MergeArea.Columns(I).ColumnWidth
                             If I < .Cells(R, C).MergeArea.Columns.count Then
                                CW = CW + 0.66
                             End If
                          Next I
                       Else
                          CW = .Columns(C).ColumnWidth
                       End If
                                              
                       NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth = CW
                       NWB.Worksheets(ACTS.Name).Cells(1, 1).Value = .Cells(R, C).text
                       Call SET_FONT(NWB.Worksheets(ACTS.Name).Cells(1, 1), NWB2.Worksheets(ACTS.Name))
                       NWB.Worksheets(ACTS.Name).Columns(1).AutoFit
                       If NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth > CW Then
                          P = GET_PAGE(.Cells(R, C))
                          W_BLU(P) = W_BLU(P) + 1
                          If W_BLU(P) > 255 Then
                             W_GRN(P) = W_GRN(P) + 1
                             W_BLU(P) = 0
                          End If
                          If W_GRN(P) > 255 Then
                             W_RED(P) = W_RED(P) + 1
                             W_GRN(P) = 0
                          End If
                          If W_RED(P) > 255 Then
                             W_RED(P) = 0
                             W_GRN(P) = 0
                             W_BLU(P) = 0
                          End If
                          If W_FCNT(P) >= 512 Then
                             SW_ERR = True
                             GoTo L_END
                          Else
                             .Cells(R, C).Font.Color = RGB(W_RED(P), W_GRN(P), W_BLU(P))
                             W_FCNT(P) = W_FCNT(P) + 1
                          End If
                       End If
                    End If
                 End If
              End If
           Next C
        End If
     Next R
  End With
   
  On Error Resume Next
  'Type:=1(xlTypeXPS)
  NWB2.Worksheets(ACTS.Name).ExportAsFixedFormat Type:=1, Filename:=ThisWorkbook.path & "\PCHK.xps", _
     Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
  On Error GoTo LABEL_REP
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  If FSO.FileExists(ThisWorkbook.path & "\PCHK.xps") = False Then
     SW_ERR = True
     GoTo L_END
  End If
  
  On Error Resume Next
  Kill ThisWorkbook.path & "\PCHK.zip"
  On Error GoTo LABEL_REP
     
  FSO.GetFile(ThisWorkbook.path & "\PCHK.xps").Name = "PCHK.zip"
  W_TEMP = FSO.GetSpecialFolder(2)
  W_ZDIR = W_TEMP & "\PCHK"
  If FSO.FolderExists(W_ZDIR) Then
     FSO.DeleteFolder W_ZDIR, True
  End If
  Do While FSO.FolderExists(W_ZDIR)
     DoEvents
  Loop
  FSO.CreateFolder W_ZDIR
  Set FSO = Nothing
  
  W_ZDIR = W_ZDIR & "\"
  Set SA = CreateObject("Shell.Application")
  Set FILE = SA.NameSpace(CVar(ThisWorkbook.path & "\PCHK.zip"))
  Set DEST = SA.NameSpace(CVar(W_ZDIR))
  DEST.CopyHere FILE.Items, 1028
  Set FILE = Nothing
  Set DEST = Nothing
  Set SA = Nothing
  W_DOC = W_ZDIR & "Documents\1\"
  W_PAGES = W_DOC & "Pages\"
  W_FRAGS = W_DOC & "Structure\Fragments\"
  
  On Error Resume Next
  Kill ThisWorkbook.path & "\PCHK.zip"
  On Error GoTo LABEL_REP
  
  W_APAGE = Application.ExecuteExcel4Macro("GET.DOCUMENT(50)")
  ReDim DIC(W_MAXP)
  For P = 1 To W_MAXP
     Set DIC(P) = MAKE_CDIC(P, W_PAGES, W_FRAGS)
  Next P
  NWB.Activate
  NWB.Worksheets(ACTS.Name).Activate
  
  NWB.Worksheets(ACTS.Name).Cells(1, 1).Value = ""
  NWB.Worksheets(ACTS.Name).Columns.ColumnWidth = 1
  NWB.Worksheets(ACTS.Name).Rows.RowHeight = 1
  
  FTPW = 0
  If VarType(ACTS.PageSetup.Zoom) = vbBoolean Then
     FTPW = ACTS.PageSetup.FitToPagesWide
  End If
  
  W_BEC = W_EC
  If FTPW = 1 Then
     NWB.Worksheets(ACTS.Name).PageSetup.Zoom = 100
  ElseIf ACTS.VPageBreaks.count = 0 Then
     With NWB.Worksheets(ACTS.Name)
        For C = 1 To ACTS.Columns.count
           .Columns(C).ColumnWidth = ACTS.Columns(C).ColumnWidth
           .Cells(1, C).Value = "."
           If C > W_EC Then
              If NWB.Worksheets(ACTS.Name).VPageBreaks.count > 1 Then
                 Exit For
              End If
           End If
        Next C
        W_BEC = NWB.Worksheets(ACTS.Name).VPageBreaks(1).Location.Column - 1
        .Rows(1).ClearContents
     End With
  Else
     W_BEC = Application.Max(W_BEC, ACTS.VPageBreaks(1).Location.Column - 1)
  End If
  
  If ActiveWindow.View <> xlNormalView Then
     ActiveWindow.View = xlNormalView
  End If
  
  NWB.Worksheets(ACTS.Name).ResetAllPageBreaks
  NWB.Worksheets(ACTS.Name).VPageBreaks.Add Before:=NWB.Worksheets(ACTS.Name).Cells(1, 2)
  
  S = ACTS.Index
  VPBCNT = ACTS.VPageBreaks.count
  CW2WK = 0
  CWWK = 0
  CWK = 0
  
  For C = W_SC To W_EC
     If ACTS.Columns(C).EntireColumn.Hidden = True Then
        GoTo L_NEXT2
     End If
     
     CW = ACTS.Columns(C).ColumnWidth
     
     AR_CELL = RANGEARRAY2(ACTS.Range(ACTS.Cells(1, C), ACTS.Cells(W_ER, C)))
     
     For R = W_SR To W_ER
        If ACTS.Rows(R).EntireRow.Hidden = True Then
           GoTo L_NEXT
        End If
        
        If IsError(AR_CELL(R, 1)) = True Then
           AR_CELL(R, 1) = ACTS.Cells(R, C).text
        End If
        If Len(AR_CELL(R, 1)) = 0 Then
        ElseIf Left$(AR_CELL(R, 1), 1) = "=" Then
           AR_CELL(R, 1) = "'" & AR_CELL(R, 1)
        End If
        
        If CStr(AR_CELL(R, 1)) = "" Then
        ElseIf Trim$(AR_CELL(R, 1)) = "" Then
        Else
           If ACTS.Cells(R, C).ShrinkToFit = False Then
              With NWB.Worksheets(ACTS.Name)
                 If Right$(AR_CELL(R, 1), 1) = vbLf Then
                    Do While Right$(AR_CELL(R, 1), 1) = vbLf
                       AR_CELL(R, 1) = Left$(AR_CELL(R, 1), Len(AR_CELL(R, 1)) - 1)
                    Loop
                 End If
                 .Rows(1).RowHeight = 1
                 .Cells(1, 1).Value = AR_CELL(R, 1)
                 Call SET_FONT(NWB.Worksheets(ACTS.Name).Cells(1, 1), ACTS)
                 If ACTS.Cells(R, C).HorizontalAlignment = xlRight Or _
                    ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                    ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                    .Cells(1, 1).HorizontalAlignment = xlGeneral
                 End If
                 
                 If ACTS.Cells(R, C).MergeCells = True Then
                    If FTPW <> 1 Then
                       For I = 1 To ACTS.VPageBreaks.count
                          If I = 1 Then
                             W_VSC = 0
                          Else
                             W_VSC = ACTS.VPageBreaks(I - 1).Location.Column
                          End If
                          If ACTS.Cells(R, C).MergeArea.Columns(1).Column >= W_VSC And _
                             C <= ACTS.VPageBreaks(I).Location.Column Then
                             If ACTS.Cells(R, C).MergeArea.Columns(ACTS.Cells(R, C).MergeArea.Columns.count).Column > ACTS.VPageBreaks(I).Location.Column Then
                                Call PCHECK(S, R, C, AR_CELL(R, 1))
                                GoTo L_NEXT
                             Else
                                Exit For
                             End If
                          End If
                       Next I
                    End If
                    
                    CW2 = 0
                    For I = 1 To ACTS.Cells(R, C).MergeArea.Columns.count
                       CW2 = CW2 + ACTS.Cells(R, C).MergeArea.Columns(I).ColumnWidth
                       If I < ACTS.Cells(R, C).MergeArea.Columns.count Then
                          CW2 = CW2 + 0.66
                       End If
                    Next I
                    .Columns(1).ColumnWidth = Application.Min(CW2, 255)
                    
                    RH2 = 0
                    For I = 1 To ACTS.Cells(R, C).MergeArea.Rows.count
                       RH2 = RH2 + ACTS.Cells(R, C).MergeArea.Rows(I).RowHeight
                       If I < ACTS.Cells(R, C).MergeArea.Rows.count Then
                          RH2 = RH2 + 0.66
                       End If
                    Next I
                    .Rows(1).RowHeight = Application.Min(RH2, 409.5)
                 Else
                    If .Columns(1).ColumnWidth <> CW Then
                       .Columns(1).ColumnWidth = CW
                    End If
                    RH2 = ACTS.Cells(R, C).Rows.RowHeight
                 End If
   
                 If ACTS.Cells(R, C).WrapText = True Then
                    .Rows(1).AutoFit
                    RHA = .Rows(1).RowHeight
                    P = GET_PAGE(NWB2.Worksheets(ACTS.Name).Cells(R, C))
                    W_VAL = GET_VAL(DIC(P), NWB2.Worksheets(ACTS.Name).Cells(R, C).Characters(1, 1).Font.Color)
                    If W_VAL <> "" Then
                       W_CVAL = ACTS.Cells(R, C).text
                       If InStr(W_CVAL, vbLf) > 0 Then
                          AR_WK = Split(W_CVAL, vbLf)
                          For I = 0 To UBound(AR_WK)
                             AR_WK(I) = Replace(AR_WK(I), ChrW$(12288), "  ", , vbBinaryCompare)
                             AR_WK(I) = RTrim$(AR_WK(I))
                          Next I
                          W_CVAL = Join$(AR_WK, vbLf)
                       Else
                          W_CVAL = Replace(W_CVAL, ChrW$(12288), "  ", , vbBinaryCompare)
                          W_CVAL = RTrim$(W_CVAL)
                       End If
                       If InStr(W_VAL, vbLf) > 0 Then
                          AR_WK = Split(W_VAL, vbLf)
                          For I = 0 To UBound(AR_WK)
                             AR_WK(I) = Replace(AR_WK(I), ChrW$(12288), "  ", , vbBinaryCompare)
                             AR_WK(I) = RTrim$(AR_WK(I))
                          Next I
                          W_VAL = Join$(AR_WK, vbLf)
                       Else
                          W_VAL = Replace(W_VAL, ChrW$(12288), "  ", , vbBinaryCompare)
                          W_VAL = RTrim$(W_VAL)
                       End If
                       If Replace(W_VAL, vbLf, "") = Replace(W_CVAL, vbLf, "") Then
                          .Cells(1, 1).Value = W_VAL
                          .Rows(1).AutoFit
                          RHA = .Rows(1).RowHeight
                          If InStr(W_CVAL, vbLf) = 0 Then
                          ElseIf RHA <= RH2 Then
                          Else
                             Call PCHECK(S, R, C, AR_CELL(R, 1))
                          End If
                       Else
                          Call PCHECK(S, R, C, AR_CELL(R, 1))
                       End If
                    End If
                 Else
                    AR_CELL(R, 1) = Replace(AR_CELL(R, 1), ChrW$(12288), "  ", , vbBinaryCompare)
                    .Cells(1, 1).Value = RTrim$(AR_CELL(R, 1))
                    
                    If Application.ExecuteExcel4Macro("GET.DOCUMENT(50)") > 1 Then
                       If ACTS.Cells(R, C).HorizontalAlignment = xlGeneral Or _
                          ACTS.Cells(R, C).HorizontalAlignment = xlLeft Or _
                          ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                          ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                          If FTPW = 1 And _
                             C = W_EC Then
                             GoTo L_NEXT
                          End If
                       
                          AR_CELL2 = RANGEARRAY3(ACTS.Range(ACTS.Cells(R, C + 1), ACTS.Cells(R, W_BEC)))
                          If IsError(AR_CELL2(1, 1)) = True Then
                             AR_CELL2(1, 1) = ACTS.Cells(R, C + 1).text
                          End If
                          If AR_CELL2(1, 1) <> "" Or AR_CELL2(2, 1) <> "" Or ACTS.Cells(R, C).MergeCells = True Then
                             Call PCHECK(S, R, C, AR_CELL(R, 1))
                             GoTo L_NEXT
                          End If
                       
                          If C <> CWK Then
                             If FTPW = 1 Then
                                VPBLC = W_EC
                             Else
                                For P = 1 To VPBCNT
                                   If C < ACTS.VPageBreaks(P).Location.Column Then
                                      Exit For
                                   End If
                                Next P
                                CWK = C
                                If P <= VPBCNT Then
                                   VPBLC = ACTS.VPageBreaks(P).Location.Column - 1
                                End If
                             End If
                          End If
                       
                          If P <= VPBCNT Then
                             If C = VPBLC Then
                                Call PCHECK(S, R, C, AR_CELL(R, 1))
                                GoTo L_NEXT
                             Else
                                CW2 = CW
                          
                                For C2 = C + 1 To VPBLC
                                   If C2 > W_EC Then
                                      CW2 = CW2 + ACTS.Columns(C2).ColumnWidth
                                   ElseIf IsError(AR_CELL2(1, C2 - C)) = True Then
                                      Exit For
                                   ElseIf AR_CELL2(1, C2 - C) = "" And AR_CELL2(2, C2 - C) = "" And ACTS.Cells(R, C2).Borders(xlEdgeLeft).LineStyle = xlNone Then
                                      CW2 = CW2 + ACTS.Columns(C2).ColumnWidth
                                   Else
                                      Exit For
                                   End If
                                   If C2 < VPBLC Then
                                      CW2 = CW2 + 0.66
                                   End If
                                Next
   
                                C2 = C2 - 1
                                
                                If ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                                   ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                                   CW2_1 = CW2
                                Else
                                   If CW2 = CW2WK Then
                                      .Columns(1).ColumnWidth = CWWK
                                   Else
                                      .Columns(1).ColumnWidth = Application.Min(CW2, 255)
                                      CW2WK = CW2
                                      CWWK = .Columns(1).ColumnWidth
                                   End If
                                End If
                             End If
                          Else
                             CW2 = CW
                          
                             For C2 = C + 1 To W_BEC
                                If IsError(AR_CELL2(1, C2 - C)) = True Then
                                   Exit For
                                ElseIf AR_CELL2(1, C2 - C) = "" And AR_CELL2(2, C2 - C) = "" And ACTS.Cells(R, C2).Borders(xlEdgeLeft).LineStyle = xlNone Then
                                   CW2 = CW2 + ACTS.Columns(C2).ColumnWidth
                                Else
                                   Exit For
                                End If
                                If C2 < W_BEC Then
                                   CW2 = CW2 + 0.66
                                End If
                             Next
   
                             C2 = C2 - 1
                          
                             If C2 = W_EC And FTPW = 1 Then
                                GoTo L_NEXT
                             End If
                          
                             If ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                                ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                                CW2_1 = CW2
                             Else
                                If CW2 = CW2WK Then
                                   .Columns(1).ColumnWidth = CWWK
                                Else
                                   .Columns(1).ColumnWidth = Application.Min(CW2, 255)
                                   CW2WK = CW2
                                   CWWK = .Columns(1).ColumnWidth
                                End If
                             End If
                          End If
                       End If
                    
                       If ACTS.Cells(R, C).HorizontalAlignment = xlRight Or _
                          ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                          ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                          If C = 1 Then
                             Call PCHECK(S, R, C, AR_CELL(R, 1))
                             GoTo L_NEXT
                          End If
                          
                          AR_CELL2 = RANGEARRAY3(ACTS.Range(ACTS.Cells(R, 1), ACTS.Cells(R, C - 1)))
                          If IsError(AR_CELL2(1, C - 1)) = True Then
                             AR_CELL2(1, C - 1) = ACTS.Cells(R, C - 1).text
                          End If
                          If AR_CELL2(1, C - 1) <> "" Or AR_CELL2(2, C - 1) <> "" Or ACTS.Cells(R, C).MergeCells = True Then
                             Call PCHECK(S, R, C, AR_CELL(R, 1))
                             GoTo L_NEXT
                          End If
                       
                          If C <> CWK Then
                             If FTPW = 1 Then
                                VPBLC = W_SC
                             Else
                                VPBLC = W_SC
                                For P = 1 To VPBCNT
                                   If C < ACTS.VPageBreaks(P).Location.Column Then
                                      Exit For
                                   Else
                                      VPBLC = ACTS.VPageBreaks(P).Location.Column
                                   End If
                                Next P
                                CWK = C
                             End If
                          End If
                       
                          If C = VPBLC Then
                             Call PCHECK(S, R, C, AR_CELL(R, 1))
                             GoTo L_NEXT
                          Else
                             CW2 = CW
                          
                             For C2 = C - 1 To VPBLC Step -1
                                If AR_CELL2(1, C2) = "" And AR_CELL2(2, C2) = "" And ACTS.Cells(R, C2).Borders(xlEdgeRight).LineStyle = xlNone Then
                                   CW2 = CW2 + ACTS.Columns(C2).ColumnWidth
                                Else
                                   Exit For
                                End If
                                If C2 > VPBLC Then
                                   CW2 = CW2 + 0.66
                                End If
                             Next
   
                             C2 = C2 + 1
                                
                             If ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                                ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                                CW2 = CW2_1 + CW2
                             End If
                                
                             If CW2 = CW2WK Then
                                .Columns(1).ColumnWidth = CWWK
                             Else
                                .Columns(1).ColumnWidth = Application.Min(CW2, 255)
                                CW2WK = CW2
                                CWWK = .Columns(1).ColumnWidth
                             End If
                          End If
                       End If
                             
                       If Application.ExecuteExcel4Macro("GET.DOCUMENT(50)") > 1 Then
                          Call PCHECK(S, R, C, AR_CELL(R, 1))
                       End If
                    Else
                       If (IsNumeric(ACTS.Cells(R, C).Value) = True Or _
                           IsDate(ACTS.Cells(R, C).Value) = True) And _
                          ACTS.Cells(R, C).text <> "" Then
                          SW_AFCHK = False
                          If ACTS.Cells(R, C).MergeCells = False Then
                             If ACTS.Cells(R, C).HorizontalAlignment = xlLeft Or _
                                ACTS.Cells(R, C).HorizontalAlignment = xlGeneral Then
                                If C = W_EC Then
                                   SW_AFCHK = True
                                ElseIf C < ACTS.Columns.count Then
                                   If ACTS.Cells(R, C + 1).Value <> "" Then
                                      SW_AFCHK = True
                                   End If
                                End If
                             ElseIf ACTS.Cells(R, C).HorizontalAlignment = xlRight Then
                                If C = W_SC Then
                                   SW_AFCHK = True
                                ElseIf C > 1 Then
                                   If ACTS.Cells(R, C - 1).Value <> "" Then
                                      SW_AFCHK = True
                                   End If
                                End If
                             ElseIf ACTS.Cells(R, C).HorizontalAlignment = xlCenter Or _
                                    ACTS.Cells(R, C).HorizontalAlignment = xlCenterAcrossSelection Then
                                SW_AFCHK = True
                             End If
                          Else
                             SW_AFCHK = True
                          End If
                          If SW_AFCHK = True Then
                             If ACTS.Cells(R, C).NumberFormatLocal <> "" Then
                                CW = NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth
                                NWB.Worksheets(ACTS.Name).Columns(1).AutoFit
                                If NWB.Worksheets(ACTS.Name).Columns(1).ColumnWidth > CW Then
                                   P = GET_PAGE(NWB2.Worksheets(ACTS.Name).Cells(R, C))
                                   W_VAL = GET_VAL(DIC(P), NWB2.Worksheets(ACTS.Name).Cells(R, C).Characters(1, 1).Font.Color)
                                   W_CVAL = ACTS.Cells(R, C).text
                                   If ACTS.Cells(R, C).HorizontalAlignment = xlDistributed Then
                                      W_VAL = Replace(W_VAL, vbLf, "")
                                      W_CVAL = Replace(W_CVAL, " ", "")
                                   End If
                                   If W_VAL <> "" Then
                                      If W_VAL <> W_CVAL Then
                                         Call PCHECK(S, R, C, AR_CELL(R, 1))
                                      End If
                                   End If
                                End If
                             End If
                          End If
                       End If
                    End If
                 End If
              End With
           End If
        End If
  
L_NEXT:
     Next R
L_NEXT2:
  Next C

L_END:
  NWB2.Close False
  Set NWB2 = Nothing
  NWB.Close False
  Set NWB = Nothing
  
  On Error Resume Next
  Kill ThisWorkbook.path & "\_PC1"
  Kill ThisWorkbook.path & "\_PC2"
  On Error GoTo LABEL_REP
  
  Set TRNG = Nothing
  Set ACTS = Nothing
  
  Application.Calculation = W_AC1
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  
  If SW_ERR = True Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Can't check this sheet.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||303|V|fffd|[|fffd|g|fffd||343|`|fffd|F|fffd|b|fffd|N|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
  ElseIf AFN = 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Cells where string is cut off are not found.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||602||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
  Else
     Call ALL_FIND_P
  End If
  
  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  
  If NWB2 Is Nothing Then
  Else
     NWB2.Close False
     Set NWB2 = Nothing
  End If
  If NWB Is Nothing Then
  Else
     NWB.Close False
     Set NWB = Nothing
  End If
  
  Set TRNG = Nothing
  Set ACTS = Nothing
  
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub SET_FONT(RNG As Range, WS As Worksheet)

  Dim I As Long
  
  
  With RNG
     If .WrapText = WS.Cells(R, C).WrapText And _
        .HorizontalAlignment = WS.Cells(R, C).HorizontalAlignment And _
        .VerticalAlignment = WS.Cells(R, C).VerticalAlignment And _
        .IndentLevel = WS.Cells(R, C).IndentLevel And _
        .Orientation = WS.Cells(R, C).Orientation And _
        .NumberFormatLocal = WS.Cells(R, C).NumberFormatLocal Then
     Else
        .WrapText = WS.Cells(R, C).WrapText
        .HorizontalAlignment = WS.Cells(R, C).HorizontalAlignment
        .VerticalAlignment = WS.Cells(R, C).VerticalAlignment
        .IndentLevel = WS.Cells(R, C).IndentLevel
        .Orientation = WS.Cells(R, C).Orientation
        .NumberFormatLocal = WS.Cells(R, C).NumberFormatLocal
     End If
     If IsNull(WS.Cells(R, C).Font.Name) = False And _
        IsNull(WS.Cells(R, C).Font.Size) = False And _
        IsNull(WS.Cells(R, C).Font.Bold) = False And _
        IsNull(WS.Cells(R, C).Font.Italic) = False And _
        IsNull(WS.Cells(R, C).Font.Superscript) = False And _
        IsNull(WS.Cells(R, C).Font.Subscript) = False Then
        With .Font
           If .Name = WS.Cells(R, C).Font.Name And _
              .Size = WS.Cells(R, C).Font.Size And _
              .Bold = WS.Cells(R, C).Font.Bold And _
              .Italic = WS.Cells(R, C).Font.Italic And _
              .Superscript = WS.Cells(R, C).Font.Superscript And _
              .Subscript = WS.Cells(R, C).Font.Subscript Then
           Else
              .Name = WS.Cells(R, C).Font.Name
              .Size = WS.Cells(R, C).Font.Size
              .Bold = WS.Cells(R, C).Font.Bold
              .Italic = WS.Cells(R, C).Font.Italic
              .Superscript = WS.Cells(R, C).Font.Superscript
              .Subscript = WS.Cells(R, C).Font.Subscript
           End If
        End With
      Else
        With .Font
           .Name = WS.Cells(R, C).Characters(I, 1).Font.Name
           .Size = WS.Cells(R, C).Characters(I, 1).Font.Size
           .Bold = WS.Cells(R, C).Characters(I, 1).Font.Bold
           .Italic = WS.Cells(R, C).Characters(I, 1).Font.Italic
           .Superscript = WS.Cells(R, C).Characters(I, 1).Font.Superscript
           .Subscript = WS.Cells(R, C).Characters(I, 1).Font.Subscript
        End With
        For I = 2 To Len(.Value)
           If WS.Cells(R, C).Characters(I, 1).Font.Name = WS.Cells(R, C).Characters(1, 1).Font.Name And _
              WS.Cells(R, C).Characters(I, 1).Font.Size = WS.Cells(R, C).Characters(1, 1).Font.Size And _
              WS.Cells(R, C).Characters(I, 1).Font.Bold = WS.Cells(R, C).Characters(1, 1).Font.Bold And _
              WS.Cells(R, C).Characters(I, 1).Font.Italic = WS.Cells(R, C).Characters(1, 1).Font.Italic And _
              WS.Cells(R, C).Characters(I, 1).Font.Superscript = WS.Cells(R, C).Characters(1, 1).Font.Superscript And _
              WS.Cells(R, C).Characters(I, 1).Font.Subscript = WS.Cells(R, C).Characters(1, 1).Font.Subscript Then
           Else
              With .Characters(I, 1).Font
                 .Name = WS.Cells(R, C).Characters(I, 1).Font.Name
                 .Size = WS.Cells(R, C).Characters(I, 1).Font.Size
                 .Bold = WS.Cells(R, C).Characters(I, 1).Font.Bold
                 .Italic = WS.Cells(R, C).Characters(I, 1).Font.Italic
                 .Superscript = WS.Cells(R, C).Characters(I, 1).Font.Superscript
                 .Subscript = WS.Cells(R, C).Characters(I, 1).Font.Subscript
              End With
           End If
        Next I
     End If
  End With

End Sub

Private Function GET_PAGE(RNG As Range) As Long

  Dim WS As Worksheet
  Dim FTPW As Long
  Dim FTPT As Long
  Dim HCNT As Long
  Dim VCNT As Long
  Dim I As Long
  
  
  GET_PAGE = 0
  
  Set WS = RNG.Parent
  FTPW = 0
  FTPT = 0

  If VarType(WS.PageSetup.Zoom) = vbBoolean Then
     FTPW = WS.PageSetup.FitToPagesWide
     FTPT = WS.PageSetup.FitToPagesTall
  End If

  HCNT = 0
  If FTPT = 1 Then
  Else
     For I = 1 To WS.HPageBreaks.count
        If WS.HPageBreaks(I).Location.Row <= RNG.Row Then
           HCNT = HCNT + 1
        Else
           Exit For
        End If
     Next I
  End If
    
  VCNT = 0
  If FTPW = 1 Then
  Else
     For I = 1 To WS.VPageBreaks.count
        If WS.VPageBreaks(I).Location.Column <= RNG.Column Then
           VCNT = VCNT + 1
        Else
           Exit For
        End If
     Next I
  End If
    
  If WS.PageSetup.Order = xlDownThenOver Then
     GET_PAGE = VCNT * (WS.HPageBreaks.count + 1) + HCNT + 1
  Else
     GET_PAGE = HCNT * (WS.VPageBreaks.count + 1) + VCNT + 1
  End If

End Function

Private Function MAKE_CDIC(ByVal P As Long, ByVal W_PAGES As String, ByVal W_FRAGS As String) As Object

  Dim ADS As Object
  Dim INAREA As String
  Dim CNT As Long
  Dim AR_NAME() As String
  Dim I As Long
  Dim DIC1 As Object
  Dim DIC2 As Object
  Dim W_KEY As String
  Dim W_DATA As String
  Dim MAXI As Long

  Dim W_STR As String
  Dim FSO As Object

  Dim W_RED As Long
  Dim W_GRN As Long
  Dim W_BLU As Long

  Dim W_OY As String
  Dim AR_WK As Variant

  Const adCRLF = -1
  Const adReadLine = -2


  Set MAKE_CDIC = CreateObject("Scripting.Dictionary")
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  If FSO.FileExists(W_PAGES & P & ".fpage") = False Or _
     FSO.FileExists(W_FRAGS & P & ".frag") = False Then
     Exit Function
  End If
  
  Set DIC1 = CreateObject("Scripting.Dictionary")
  Set DIC2 = CreateObject("Scripting.Dictionary")

  Set ADS = CreateObject("ADODB.Stream")
  ADS.Open
  ADS.Charset = "Unicode"
  ADS.LineSeparator = adCRLF
  ADS.LoadFromFile W_PAGES & P & ".fpage"
  Do While Not ADS.EOS
     INAREA = ADS.ReadText(adReadLine)
     If InStr(INAREA, "<Glyphs Name=") > 0 Then
        W_KEY = Mid$(Trim$(INAREA), 15, InStr(15, Trim$(INAREA), Chr$(34)) - 15)
        I = InStr(Trim$(INAREA), " Fill=" & Chr$(34) & "#FF") + 10
        W_STR = Mid$(Trim$(INAREA), I, InStr(I, Trim$(INAREA), Chr$(34)) - I)
        W_RED = CLng("&H" & Mid$(W_STR, 1, 2))
        W_GRN = CLng("&H" & Mid$(W_STR, 3, 2))
        W_BLU = CLng("&H" & Mid$(W_STR, 5, 2))
        W_DATA = CStr(RGB(W_RED, W_GRN, W_BLU))
        DIC1.Add W_KEY, W_DATA
     End If
     If InStr(INAREA, "OriginY=") > 0 Then
        W_OY = Mid$(Trim$(INAREA), 10, InStr(10, Trim$(INAREA), Chr$(34)) - 10)
     End If
     If InStr(INAREA, " UnicodeString=") > 0 Then
        I = InStr(Trim$(INAREA), " UnicodeString=") + 16
        W_DATA = Mid$(Trim$(INAREA), I, InStr(I, Trim$(INAREA), Chr$(34)) - I) & vbCrLf & W_OY
        DIC2.Add W_KEY, W_DATA
     End If
  Loop
  ADS.Close
  Set ADS = Nothing

  Set ADS = CreateObject("ADODB.Stream")
  ADS.Open
  ADS.Charset = "Unicode"
  ADS.LineSeparator = adCRLF
  ADS.LoadFromFile W_FRAGS & P & ".frag"
  Do While Not ADS.EOS
     INAREA = ADS.ReadText(adReadLine)
     If Trim$(INAREA) = "<TableCellStructure>" Then
        I = 0
        Erase AR_NAME
     End If
     If InStr(INAREA, "<NamedElement NameReference=") > 0 Then
        I = I + 1
        ReDim Preserve AR_NAME(I)
        AR_NAME(I) = Mid$(Trim$(INAREA), 30, InStr(30, Trim$(INAREA), Chr$(34)) - 30)
     End If
     If Trim$(INAREA) = "</TableCellStructure>" Then
        MAXI = I
        W_KEY = ""
        W_DATA = ""
        For I = 1 To MAXI
           If I = 1 Then
              If DIC1.Exists(AR_NAME(I)) = True Then
                 W_KEY = DIC1(AR_NAME(I))
              End If
           End If
           If DIC2.Exists(AR_NAME(I)) = True Then
              AR_WK = Split(DIC2(AR_NAME(I)), vbCrLf)
              If I = 1 Then
                 W_DATA = AR_WK(0)
                 W_OY = AR_WK(1)
              Else
                 If AR_WK(1) = W_OY Then
                    W_DATA = W_DATA & AR_WK(0)
                 Else
                    W_DATA = W_DATA & vbLf & AR_WK(0)
                    W_OY = AR_WK(1)
                 End If
              End If
           End If
        Next I
        If W_KEY <> "" Then
           If MAKE_CDIC.Exists(W_KEY) = False Then
              MAKE_CDIC.Add W_KEY, W_DATA
           End If
        End If
     End If
  Loop
  ADS.Close
  Set ADS = Nothing

  Set DIC1 = Nothing
  Set DIC2 = Nothing

  Set FSO = Nothing

End Function

Private Function GET_VAL(DIC As Object, ByVal CLR As Long) As String

  
  GET_VAL = ""

  If DIC.Exists(CStr(CLR)) = True Then
     GET_VAL = DIC(CStr(CLR))
     GET_VAL = Replace(GET_VAL, "&gt;", ">")
     GET_VAL = Replace(GET_VAL, "&lt;", "<")
     GET_VAL = Replace(GET_VAL, "&amp;", "&")
     GET_VAL = Replace(GET_VAL, "&quot;", Chr$(34))
     GET_VAL = Replace(GET_VAL, "&nbsp;", " ")
  End If

End Function

Private Sub PCHECK(ByVal S As Long, ByVal R As Long, ByVal C As Long, ByVal W_VAL As Variant)

  If AFN Mod 10000 = 0 Then
     ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFC((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
  End If
     
  AFN = AFN + 1
     
  AR_AFS(AFN) = S
  AR_AFR(AFN) = R
  AR_AFC(AFN) = C
  AR_AFV(AFN) = W_VAL

End Sub

Private Sub CommandButton117_Click()
'|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||3ca||fffd|


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Convert"

  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
  End If

  If Me.CheckBox49.Value = True Then
     If MsgBox("Will convert to regular expression.", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  Else
     If MsgBox("|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel + vbInformation) = vbCancel Then
        Call COMBO_FOCUS
        If Val(Application.Version) >= 15 Then
           Call SETTM_UF
        End If
        W_CLKBTN = ""
        Exit Sub
     End If
  End If

  Me.ComboBox1.Value = RE_CNV(Me.ComboBox1.Value)

  Call COMBO_FOCUS
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  If Val(Application.Version) >= 15 Then
     Call SETTM_UF
  End If
  W_CLKBTN = ""

End Sub

Private Sub CommandButton9_Click()
'|fffd||82||fffd||fffd||fffd|
  
  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "Close"
  
  'VBE
  If Me.Visible = True Then
     If Me.MultiPage1.Pages("Page17").Enabled = True Then
        On Error Resume Next
        If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page17" Then
           SW_ANM = False
           Call KILLTM_UF2
        End If
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If
        On Error GoTo 0
     Else
        SW_ANM = False
        Call KILLTM_UF2
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If
     End If
  End If
  
  If SW_ANM = True Then
     Exit Sub
  End If
  
  Unload Me
  If SW_TRY = True Then
     ThisWorkbook.Close
  End If
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub UserForm_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If

  If Me.ToggleButton5.Value = True Then
     If Button = 1 Then
        hwnd = GetActiveWindow
        ReleaseCapture
        Call SendMessage(hwnd, WM_NCLBUTTONDOWN, HTCAPTION, 0&)
     End If
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If SW_ANM = True Then
     Exit Sub
  End If

  If W_CLKBTN <> "" Then
     Exit Sub
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If

  Call MM_COM(Me)

  Call UF_SHOW0
  Call UF_SHOW2

  If Val(Application.Version) >= 15 Then
     If UserForm1.Tag = "T" Then
        Call SetWindowPos(FindWindow(vbNullString, Me.Caption), -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd||fffd||fffd|
        UserForm1.Tag = ""
     End If
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub MultiPage1_MouseMove(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If
  
  If SW_ANM = True Then
     Call MM_COM(Me.MultiPage1)
     Exit Sub
  End If

  Call MM_COM(Me.MultiPage1)

  If Val(Application.Version) >= 15 Then
     If UserForm1.Tag = "T" Then
        Call SetWindowPos(FindWindow(vbNullString, Me.Caption), -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1 Or &H400) '|fffd||fffd||fffd||fffd|
        UserForm1.Tag = ""
     End If
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub MultiPage2_MouseMove(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If SW_ANM = True Then
     Exit Sub
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If

  Call MM_COM(Me.MultiPage2)

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub MultiPage3_MouseMove(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If SW_ANM = True Then
     Exit Sub
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If

  Call MM_COM(Me.MultiPage3)

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Private Sub MultiPage4_MouseMove(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If SW_ANM = True Then
     Exit Sub
  End If

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If

  Call MM_COM(Me.MultiPage4)

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

End Sub

Sub UF_SHOW2()

  Dim AC As Object
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Exit Sub
  End If
  If SW_HSGREP = True And _
     W_PNO = 0 And _
     Me.CommandButton9.Enabled = False Then
     Exit Sub
  End If
  
  On Error Resume Next
  AppActivate Me.Caption
  On Error GoTo 0
  Select Case Me.ActiveControl.Name
  Case "MultiPage1"
     Set AC = Me.MultiPage1.Pages(Me.MultiPage1.Value).ActiveControl
     If AC.Name = "MultiPage3" Then
        Set AC = AC.Pages(AC.Value).ActiveControl
     End If
  Case "MultiPage2"
     Set AC = Me.MultiPage2.Pages(Me.MultiPage2.Value).ActiveControl
  Case Else
     Set AC = Me.ActiveControl
  End Select
  If AC Is Nothing Then
     Set AC = Me.ActiveControl
  End If
  If Me.CommandButton9.Visible = True And _
     Me.CommandButton9.Enabled = True Then
     Me.CommandButton9.SetFocus
  End If
  On Error Resume Next
  AC.SetFocus
  On Error GoTo 0
  Set AC = Nothing
  
  If Me.MultiPage1.Enabled = False Then
     Me.MultiPage1.Enabled = True
  End If

End Sub

Private Sub UserForm_Resize()
'|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  
  Dim W_LONG As Long
  Dim SW_AERO As Boolean
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim CW As Long
  
  If Me.ToggleButton5.Value = True Then
     Exit Sub
  End If
  
  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        Call ED_SUB_CLS
     End If
  End If
  
  If SW_TBC = True Then
     On Error Resume Next
     DwmIsCompositionEnabled W_LONG
     SW_AERO = CBool(W_LONG)
     On Error GoTo 0
     
     GoTo L_MM
  End If
  
  If SW_UF3 = True Then
     Exit Sub
  End If
  
  On Error Resume Next
  DwmIsCompositionEnabled W_LONG
  SW_AERO = CBool(W_LONG)
  On Error GoTo 0
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  '|fffd||14f||fffd||fffd||fffd|
  hwnd = FindWindow(vbNullString, Me.Caption)
  
  W_ADJ = Me.Height - Me.InsideHeight - 21
  
  If Me.Height < 246.5 And _
     Me.ToggleButton1.Value = False Then
     Me.Height = 246.5 + W_ADJ
  End If
  If Me.Height < 180.5 And _
     Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     Me.Height = 180.5 + W_ADJ
  End If
  If Me.Height < 160.5 And _
     Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     On Error Resume Next
     Me.Height = 160.5 + W_ADJ
     On Error GoTo 0
  End If
  
  W_ADJ = Me.Width - Me.InsideWidth - 4.5
  If Me.Width < 342 + W_ADJ Then
     Me.Width = 342 + W_ADJ
  End If
  
  If Me.Height > 246.5 + 12 And _
     Me.ToggleButton1.Value = False Then
     If SW_AERO = True And _
        Me.ListBox1.Visible = True Then
        Me.MultiPage2.Height = Me.Height - 247.5
        Me.Label9.Top = Me.MultiPage2.Height - 35
        Me.Image2.Top = Me.MultiPage2.Height - 36
        Me.Label67.Top = Me.MultiPage2.Height - 35
        Me.Image3.Top = Me.MultiPage2.Height - 36
        Me.Label71.Top = Me.MultiPage2.Height - 35
        Me.Image4.Top = Me.MultiPage2.Height - 36
        Me.Label75.Top = Me.MultiPage2.Height - 35
        Me.Image5.Top = Me.MultiPage2.Height - 36
        Me.Label79.Top = Me.MultiPage2.Height - 35
        Me.Image6.Top = Me.MultiPage2.Height - 36
        Me.Label83.Top = Me.MultiPage2.Height - 35
        Me.Image7.Top = Me.MultiPage2.Height - 36
        Me.Label87.Top = Me.MultiPage2.Height - 35
        Me.Image8.Top = Me.MultiPage2.Height - 36
        Me.Label91.Top = Me.MultiPage2.Height - 35
        Me.Image9.Top = Me.MultiPage2.Height - 36
        Me.Label95.Top = Me.MultiPage2.Height - 35
        Me.Image10.Top = Me.MultiPage2.Height - 36
        Me.Label99.Top = Me.MultiPage2.Height - 35
        Me.Image11.Top = Me.MultiPage2.Height - 36
     Else
        Me.MultiPage2.Height = Me.Height - 247
        If InStr(W_OS, "XP") > 0 Then
           Me.Label9.Top = Me.MultiPage2.Height - 33
           Me.Image2.Top = Me.MultiPage2.Height - 33
           Me.Label67.Top = Me.MultiPage2.Height - 33
           Me.Image3.Top = Me.MultiPage2.Height - 33
           Me.Label71.Top = Me.MultiPage2.Height - 33
           Me.Image4.Top = Me.MultiPage2.Height - 33
           Me.Label75.Top = Me.MultiPage2.Height - 33
           Me.Image5.Top = Me.MultiPage2.Height - 33
           Me.Label79.Top = Me.MultiPage2.Height - 33
           Me.Image6.Top = Me.MultiPage2.Height - 33
           Me.Label83.Top = Me.MultiPage2.Height - 33
           Me.Image7.Top = Me.MultiPage2.Height - 33
           Me.Label87.Top = Me.MultiPage2.Height - 33
           Me.Image8.Top = Me.MultiPage2.Height - 33
           Me.Label91.Top = Me.MultiPage2.Height - 33
           Me.Image9.Top = Me.MultiPage2.Height - 33
           Me.Label95.Top = Me.MultiPage2.Height - 33
           Me.Image10.Top = Me.MultiPage2.Height - 33
           Me.Label99.Top = Me.MultiPage2.Height - 33
           Me.Image11.Top = Me.MultiPage2.Height - 33
        Else
           Me.Label9.Top = Me.MultiPage2.Height - 30
           Me.Image2.Top = Me.MultiPage2.Height - 30
           Me.Label67.Top = Me.MultiPage2.Height - 30
           Me.Image3.Top = Me.MultiPage2.Height - 30
           Me.Label71.Top = Me.MultiPage2.Height - 30
           Me.Image4.Top = Me.MultiPage2.Height - 30
           Me.Label75.Top = Me.MultiPage2.Height - 30
           Me.Image5.Top = Me.MultiPage2.Height - 30
           Me.Label79.Top = Me.MultiPage2.Height - 30
           Me.Image6.Top = Me.MultiPage2.Height - 30
           Me.Label83.Top = Me.MultiPage2.Height - 30
           Me.Image7.Top = Me.MultiPage2.Height - 30
           Me.Label87.Top = Me.MultiPage2.Height - 30
           Me.Image8.Top = Me.MultiPage2.Height - 30
           Me.Label91.Top = Me.MultiPage2.Height - 30
           Me.Image9.Top = Me.MultiPage2.Height - 30
           Me.Label95.Top = Me.MultiPage2.Height - 30
           Me.Image10.Top = Me.MultiPage2.Height - 30
           Me.Label99.Top = Me.MultiPage2.Height - 30
           Me.Image11.Top = Me.MultiPage2.Height - 30
        End If
     End If
     If SW_AERO = True And _
        Me.MultiPage5.Visible = True Then
        Me.MultiPage5.Height = Me.Height - 247.5
        Me.Image35.Top = Me.MultiPage5.Height - 36
        Me.Image36.Top = Me.MultiPage5.Height - 36
        Me.Image37.Top = Me.MultiPage5.Height - 36
        Me.Image38.Top = Me.MultiPage5.Height - 36
        Me.Image39.Top = Me.MultiPage5.Height - 36
        Me.Image40.Top = Me.MultiPage5.Height - 36
        Me.Image41.Top = Me.MultiPage5.Height - 36
        Me.Image42.Top = Me.MultiPage5.Height - 36
        Me.Image43.Top = Me.MultiPage5.Height - 36
        Me.Image44.Top = Me.MultiPage5.Height - 36
     Else
        Me.MultiPage5.Height = Me.Height - 247
        If InStr(W_OS, "XP") > 0 Then
           Me.Image35.Top = Me.MultiPage5.Height - 33
           Me.Image36.Top = Me.MultiPage5.Height - 33
           Me.Image37.Top = Me.MultiPage5.Height - 33
           Me.Image38.Top = Me.MultiPage5.Height - 33
           Me.Image39.Top = Me.MultiPage5.Height - 33
           Me.Image40.Top = Me.MultiPage5.Height - 33
           Me.Image41.Top = Me.MultiPage5.Height - 33
           Me.Image42.Top = Me.MultiPage5.Height - 33
           Me.Image43.Top = Me.MultiPage5.Height - 33
           Me.Image44.Top = Me.MultiPage5.Height - 33
        Else
           Me.Image35.Top = Me.MultiPage5.Height - 30
           Me.Image36.Top = Me.MultiPage5.Height - 30
           Me.Image37.Top = Me.MultiPage5.Height - 30
           Me.Image38.Top = Me.MultiPage5.Height - 30
           Me.Image39.Top = Me.MultiPage5.Height - 30
           Me.Image40.Top = Me.MultiPage5.Height - 30
           Me.Image41.Top = Me.MultiPage5.Height - 30
           Me.Image42.Top = Me.MultiPage5.Height - 30
           Me.Image43.Top = Me.MultiPage5.Height - 30
           Me.Image44.Top = Me.MultiPage5.Height - 30
        End If
     End If
  End If
  
  If Me.Height > 180.5 + 12 And _
     Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If SW_AERO = True And _
        Me.ListBox1.Visible = True Then
        Me.MultiPage2.Height = Me.Height - 181.5
        Me.Label9.Top = Me.MultiPage2.Height - 35
        Me.Image2.Top = Me.MultiPage2.Height - 36
        Me.Label67.Top = Me.MultiPage2.Height - 35
        Me.Image3.Top = Me.MultiPage2.Height - 36
        Me.Label71.Top = Me.MultiPage2.Height - 35
        Me.Image4.Top = Me.MultiPage2.Height - 36
        Me.Label75.Top = Me.MultiPage2.Height - 35
        Me.Image5.Top = Me.MultiPage2.Height - 36
        Me.Label79.Top = Me.MultiPage2.Height - 35
        Me.Image6.Top = Me.MultiPage2.Height - 36
        Me.Label83.Top = Me.MultiPage2.Height - 35
        Me.Image7.Top = Me.MultiPage2.Height - 36
        Me.Label87.Top = Me.MultiPage2.Height - 35
        Me.Image8.Top = Me.MultiPage2.Height - 36
        Me.Label91.Top = Me.MultiPage2.Height - 35
        Me.Image9.Top = Me.MultiPage2.Height - 36
        Me.Label95.Top = Me.MultiPage2.Height - 35
        Me.Image10.Top = Me.MultiPage2.Height - 36
        Me.Label99.Top = Me.MultiPage2.Height - 35
        Me.Image11.Top = Me.MultiPage2.Height - 36
     Else
        Me.MultiPage2.Height = Me.Height - 181
        If InStr(W_OS, "XP") > 0 Then
           Me.Label9.Top = Me.MultiPage2.Height - 33
           Me.Image2.Top = Me.MultiPage2.Height - 33
           Me.Label67.Top = Me.MultiPage2.Height - 33
           Me.Image3.Top = Me.MultiPage2.Height - 33
           Me.Label71.Top = Me.MultiPage2.Height - 33
           Me.Image4.Top = Me.MultiPage2.Height - 33
           Me.Label75.Top = Me.MultiPage2.Height - 33
           Me.Image5.Top = Me.MultiPage2.Height - 33
           Me.Label79.Top = Me.MultiPage2.Height - 33
           Me.Image6.Top = Me.MultiPage2.Height - 33
           Me.Label83.Top = Me.MultiPage2.Height - 33
           Me.Image7.Top = Me.MultiPage2.Height - 33
           Me.Label87.Top = Me.MultiPage2.Height - 33
           Me.Image8.Top = Me.MultiPage2.Height - 33
           Me.Label91.Top = Me.MultiPage2.Height - 33
           Me.Image9.Top = Me.MultiPage2.Height - 33
           Me.Label95.Top = Me.MultiPage2.Height - 33
           Me.Image10.Top = Me.MultiPage2.Height - 33
           Me.Label99.Top = Me.MultiPage2.Height - 33
           Me.Image11.Top = Me.MultiPage2.Height - 33
        Else
           Me.Label9.Top = Me.MultiPage2.Height - 30
           Me.Image2.Top = Me.MultiPage2.Height - 30
           Me.Label67.Top = Me.MultiPage2.Height - 30
           Me.Image3.Top = Me.MultiPage2.Height - 30
           Me.Label71.Top = Me.MultiPage2.Height - 30
           Me.Image4.Top = Me.MultiPage2.Height - 30
           Me.Label75.Top = Me.MultiPage2.Height - 30
           Me.Image5.Top = Me.MultiPage2.Height - 30
           Me.Label79.Top = Me.MultiPage2.Height - 30
           Me.Image6.Top = Me.MultiPage2.Height - 30
           Me.Label83.Top = Me.MultiPage2.Height - 30
           Me.Image7.Top = Me.MultiPage2.Height - 30
           Me.Label87.Top = Me.MultiPage2.Height - 30
           Me.Image8.Top = Me.MultiPage2.Height - 30
           Me.Label91.Top = Me.MultiPage2.Height - 30
           Me.Image9.Top = Me.MultiPage2.Height - 30
           Me.Label95.Top = Me.MultiPage2.Height - 30
           Me.Image10.Top = Me.MultiPage2.Height - 30
           Me.Label99.Top = Me.MultiPage2.Height - 30
           Me.Image11.Top = Me.MultiPage2.Height - 30
        End If
     End If
     If SW_AERO = True And _
        Me.MultiPage5.Visible = True Then
        Me.MultiPage5.Height = Me.Height - 181.5
        Me.Image35.Top = Me.MultiPage5.Height - 36
        Me.Image36.Top = Me.MultiPage5.Height - 36
        Me.Image37.Top = Me.MultiPage5.Height - 36
        Me.Image38.Top = Me.MultiPage5.Height - 36
        Me.Image39.Top = Me.MultiPage5.Height - 36
        Me.Image40.Top = Me.MultiPage5.Height - 36
        Me.Image41.Top = Me.MultiPage5.Height - 36
        Me.Image42.Top = Me.MultiPage5.Height - 36
        Me.Image43.Top = Me.MultiPage5.Height - 36
        Me.Image44.Top = Me.MultiPage5.Height - 36
     Else
        Me.MultiPage5.Height = Me.Height - 181
        If InStr(W_OS, "XP") > 0 Then
           Me.Image35.Top = Me.MultiPage5.Height - 33
           Me.Image36.Top = Me.MultiPage5.Height - 33
           Me.Image37.Top = Me.MultiPage5.Height - 33
           Me.Image38.Top = Me.MultiPage5.Height - 33
           Me.Image39.Top = Me.MultiPage5.Height - 33
           Me.Image40.Top = Me.MultiPage5.Height - 33
           Me.Image41.Top = Me.MultiPage5.Height - 33
           Me.Image42.Top = Me.MultiPage5.Height - 33
           Me.Image43.Top = Me.MultiPage5.Height - 33
           Me.Image44.Top = Me.MultiPage5.Height - 33
        Else
           Me.Image35.Top = Me.MultiPage5.Height - 30
           Me.Image36.Top = Me.MultiPage5.Height - 30
           Me.Image37.Top = Me.MultiPage5.Height - 30
           Me.Image38.Top = Me.MultiPage5.Height - 30
           Me.Image39.Top = Me.MultiPage5.Height - 30
           Me.Image40.Top = Me.MultiPage5.Height - 30
           Me.Image41.Top = Me.MultiPage5.Height - 30
           Me.Image42.Top = Me.MultiPage5.Height - 30
           Me.Image43.Top = Me.MultiPage5.Height - 30
           Me.Image44.Top = Me.MultiPage5.Height - 30
        End If
     End If
  End If
  
  If Me.Height > 160.5 + 12 And _
     Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If SW_AERO = True And _
        Me.ListBox1.Visible = True Then
        Me.MultiPage2.Height = Me.Height - 161.5
        Me.Label9.Top = Me.MultiPage2.Height - 35
        Me.Image2.Top = Me.MultiPage2.Height - 36
        Me.Label67.Top = Me.MultiPage2.Height - 35
        Me.Image3.Top = Me.MultiPage2.Height - 36
        Me.Label71.Top = Me.MultiPage2.Height - 35
        Me.Image4.Top = Me.MultiPage2.Height - 36
        Me.Label75.Top = Me.MultiPage2.Height - 35
        Me.Image5.Top = Me.MultiPage2.Height - 36
        Me.Label79.Top = Me.MultiPage2.Height - 35
        Me.Image6.Top = Me.MultiPage2.Height - 36
        Me.Label83.Top = Me.MultiPage2.Height - 35
        Me.Image7.Top = Me.MultiPage2.Height - 36
        Me.Label87.Top = Me.MultiPage2.Height - 35
        Me.Image8.Top = Me.MultiPage2.Height - 36
        Me.Label91.Top = Me.MultiPage2.Height - 35
        Me.Image9.Top = Me.MultiPage2.Height - 36
        Me.Label95.Top = Me.MultiPage2.Height - 35
        Me.Image10.Top = Me.MultiPage2.Height - 36
        Me.Label99.Top = Me.MultiPage2.Height - 35
        Me.Image11.Top = Me.MultiPage2.Height - 36
     Else
        Me.MultiPage2.Height = Me.Height - 161
        If InStr(W_OS, "XP") > 0 Then
           Me.Label9.Top = Me.MultiPage2.Height - 33
           Me.Image2.Top = Me.MultiPage2.Height - 33
           Me.Label67.Top = Me.MultiPage2.Height - 33
           Me.Image3.Top = Me.MultiPage2.Height - 33
           Me.Label71.Top = Me.MultiPage2.Height - 33
           Me.Image4.Top = Me.MultiPage2.Height - 33
           Me.Label75.Top = Me.MultiPage2.Height - 33
           Me.Image5.Top = Me.MultiPage2.Height - 33
           Me.Label79.Top = Me.MultiPage2.Height - 33
           Me.Image6.Top = Me.MultiPage2.Height - 33
           Me.Label83.Top = Me.MultiPage2.Height - 33
           Me.Image7.Top = Me.MultiPage2.Height - 33
           Me.Label87.Top = Me.MultiPage2.Height - 33
           Me.Image8.Top = Me.MultiPage2.Height - 33
           Me.Label91.Top = Me.MultiPage2.Height - 33
           Me.Image9.Top = Me.MultiPage2.Height - 33
           Me.Label95.Top = Me.MultiPage2.Height - 33
           Me.Image10.Top = Me.MultiPage2.Height - 33
           Me.Label99.Top = Me.MultiPage2.Height - 33
           Me.Image11.Top = Me.MultiPage2.Height - 33
        Else
           Me.Label9.Top = Me.MultiPage2.Height - 30
           Me.Image2.Top = Me.MultiPage2.Height - 30
           Me.Label67.Top = Me.MultiPage2.Height - 30
           Me.Image3.Top = Me.MultiPage2.Height - 30
           Me.Label71.Top = Me.MultiPage2.Height - 30
           Me.Image4.Top = Me.MultiPage2.Height - 30
           Me.Label75.Top = Me.MultiPage2.Height - 30
           Me.Image5.Top = Me.MultiPage2.Height - 30
           Me.Label79.Top = Me.MultiPage2.Height - 30
           Me.Image6.Top = Me.MultiPage2.Height - 30
           Me.Label83.Top = Me.MultiPage2.Height - 30
           Me.Image7.Top = Me.MultiPage2.Height - 30
           Me.Label87.Top = Me.MultiPage2.Height - 30
           Me.Image8.Top = Me.MultiPage2.Height - 30
           Me.Label91.Top = Me.MultiPage2.Height - 30
           Me.Image9.Top = Me.MultiPage2.Height - 30
           Me.Label95.Top = Me.MultiPage2.Height - 30
           Me.Image10.Top = Me.MultiPage2.Height - 30
           Me.Label99.Top = Me.MultiPage2.Height - 30
           Me.Image11.Top = Me.MultiPage2.Height - 30
        End If
     End If
     If SW_AERO = True And _
        Me.MultiPage5.Visible = True Then
        Me.MultiPage5.Height = Me.Height - 161.5
        Me.Image35.Top = Me.MultiPage5.Height - 36
        Me.Image36.Top = Me.MultiPage5.Height - 36
        Me.Image37.Top = Me.MultiPage5.Height - 36
        Me.Image38.Top = Me.MultiPage5.Height - 36
        Me.Image39.Top = Me.MultiPage5.Height - 36
        Me.Image40.Top = Me.MultiPage5.Height - 36
        Me.Image41.Top = Me.MultiPage5.Height - 36
        Me.Image42.Top = Me.MultiPage5.Height - 36
        Me.Image43.Top = Me.MultiPage5.Height - 36
        Me.Image44.Top = Me.MultiPage5.Height - 36
     Else
        Me.MultiPage5.Height = Me.Height - 161
        If InStr(W_OS, "XP") > 0 Then
           Me.Image35.Top = Me.MultiPage5.Height - 33
           Me.Image36.Top = Me.MultiPage5.Height - 33
           Me.Image37.Top = Me.MultiPage5.Height - 33
           Me.Image38.Top = Me.MultiPage5.Height - 33
           Me.Image39.Top = Me.MultiPage5.Height - 33
           Me.Image40.Top = Me.MultiPage5.Height - 33
           Me.Image41.Top = Me.MultiPage5.Height - 33
           Me.Image42.Top = Me.MultiPage5.Height - 33
           Me.Image43.Top = Me.MultiPage5.Height - 33
           Me.Image44.Top = Me.MultiPage5.Height - 33
        Else
           Me.Image35.Top = Me.MultiPage5.Height - 30
           Me.Image36.Top = Me.MultiPage5.Height - 30
           Me.Image37.Top = Me.MultiPage5.Height - 30
           Me.Image38.Top = Me.MultiPage5.Height - 30
           Me.Image39.Top = Me.MultiPage5.Height - 30
           Me.Image40.Top = Me.MultiPage5.Height - 30
           Me.Image41.Top = Me.MultiPage5.Height - 30
           Me.Image42.Top = Me.MultiPage5.Height - 30
           Me.Image43.Top = Me.MultiPage5.Height - 30
           Me.Image44.Top = Me.MultiPage5.Height - 30
        End If
     End If
  End If
  
  If Me.MultiPage2.Height > 51.65 Then
     Me.ListBox1.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox2.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox3.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox4.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox5.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox6.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox7.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox8.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox9.Height = Me.MultiPage2.Height - 51.65
     Me.ListBox10.Height = Me.MultiPage2.Height - 51.65
  End If
  
  If Me.MultiPage5.Height > 51.65 Then
     Me.ListBox12.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox13.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox14.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox15.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox16.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox17.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox18.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox19.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox20.Height = Me.MultiPage5.Height - 51.65
     Me.ListBox21.Height = Me.MultiPage5.Height - 51.65
  End If
  
  If (SW_AERO = True And _
      Me.ListBox1.Visible = True) Or _
     (InStr(W_OS, "Windows 10") > 0 And _
      Val(Application.Version) >= 16) Then
     Me.MultiPage2.Width = Me.Width
     
     Me.Label9.Width = Me.MultiPage2.Width - 7
     Me.Image2.Left = Me.MultiPage2.Width - 24
     Me.ListBox1.Width = Me.Width - 10.5
     Me.Label67.Width = Me.MultiPage2.Width - 7
     Me.Image3.Left = Me.MultiPage2.Width - 24
     Me.ListBox2.Width = Me.Width - 10.5
     Me.Label71.Width = Me.MultiPage2.Width - 7
     Me.Image4.Left = Me.MultiPage2.Width - 24
     Me.ListBox3.Width = Me.Width - 10.5
     Me.Label75.Width = Me.MultiPage2.Width - 7
     Me.Image5.Left = Me.MultiPage2.Width - 24
     Me.ListBox4.Width = Me.Width - 10.5
     Me.Label79.Width = Me.MultiPage2.Width - 7
     Me.Image6.Left = Me.MultiPage2.Width - 24
     Me.ListBox5.Width = Me.Width - 10.5
     Me.Label83.Width = Me.MultiPage2.Width - 7
     Me.Image7.Left = Me.MultiPage2.Width - 24
     Me.ListBox6.Width = Me.Width - 10.5
     Me.Label87.Width = Me.MultiPage2.Width - 7
     Me.Image8.Left = Me.MultiPage2.Width - 24
     Me.ListBox7.Width = Me.Width - 10.5
     Me.Label91.Width = Me.MultiPage2.Width - 7
     Me.Image9.Left = Me.MultiPage2.Width - 24
     Me.ListBox8.Width = Me.Width - 10.5
     Me.Label95.Width = Me.MultiPage2.Width - 7
     Me.Image10.Left = Me.MultiPage2.Width - 24
     Me.ListBox9.Width = Me.Width - 10.5
     Me.Label99.Width = Me.MultiPage2.Width - 7
     Me.Image11.Left = Me.MultiPage2.Width - 24
     Me.ListBox10.Width = Me.Width - 10.5
  Else
     Me.MultiPage2.Width = Me.Width
     
     Me.Label9.Width = Me.MultiPage2.Width
     Me.Image2.Left = Me.MultiPage2.Width - 17
     Me.ListBox1.Width = Me.Width - 3.5
     Me.Label67.Width = Me.MultiPage2.Width
     Me.Image3.Left = Me.MultiPage2.Width - 17
     Me.ListBox2.Width = Me.Width - 3.5
     Me.Label71.Width = Me.MultiPage2.Width
     Me.Image4.Left = Me.MultiPage2.Width - 17
     Me.ListBox3.Width = Me.Width - 3.5
     Me.Label75.Width = Me.MultiPage2.Width
     Me.Image5.Left = Me.MultiPage2.Width - 17
     Me.ListBox4.Width = Me.Width - 3.5
     Me.Label79.Width = Me.MultiPage2.Width
     Me.Image6.Left = Me.MultiPage2.Width - 17
     Me.ListBox5.Width = Me.Width - 3.5
     Me.Label83.Width = Me.MultiPage2.Width
     Me.Image7.Left = Me.MultiPage2.Width - 17
     Me.ListBox6.Width = Me.Width - 3.5
     Me.Label87.Width = Me.MultiPage2.Width
     Me.Image8.Left = Me.MultiPage2.Width - 17
     Me.ListBox7.Width = Me.Width - 3.5
     Me.Label91.Width = Me.MultiPage2.Width
     Me.Image9.Left = Me.MultiPage2.Width - 17
     Me.ListBox8.Width = Me.Width - 3.5
     Me.Label95.Width = Me.MultiPage2.Width
     Me.Image10.Left = Me.MultiPage2.Width - 17
     Me.ListBox9.Width = Me.Width - 3.5
     Me.Label99.Width = Me.MultiPage2.Width
     Me.Image11.Left = Me.MultiPage2.Width - 17
     Me.ListBox10.Width = Me.Width - 3.5
  End If

  If (SW_AERO = True And _
      Me.MultiPage5.Visible = True) Or _
     (InStr(W_OS, "Windows 10") > 0 And _
      Val(Application.Version) >= 16) Then
     Me.MultiPage5.Width = Me.Width
     Me.Image35.Left = Me.MultiPage5.Width - 24
     Me.ListBox12.Width = Me.Width - 10.5
     Me.Image36.Left = Me.MultiPage5.Width - 24
     Me.ListBox13.Width = Me.Width - 10.5
     Me.Image37.Left = Me.MultiPage5.Width - 24
     Me.ListBox14.Width = Me.Width - 10.5
     Me.Image38.Left = Me.MultiPage5.Width - 24
     Me.ListBox15.Width = Me.Width - 10.5
     Me.Image39.Left = Me.MultiPage5.Width - 24
     Me.ListBox16.Width = Me.Width - 10.5
     Me.Image40.Left = Me.MultiPage5.Width - 24
     Me.ListBox17.Width = Me.Width - 10.5
     Me.Image41.Left = Me.MultiPage5.Width - 24
     Me.ListBox18.Width = Me.Width - 10.5
     Me.Image42.Left = Me.MultiPage5.Width - 24
     Me.ListBox19.Width = Me.Width - 10.5
     Me.Image43.Left = Me.MultiPage5.Width - 24
     Me.ListBox20.Width = Me.Width - 10.5
     Me.Image44.Left = Me.MultiPage5.Width - 24
     Me.ListBox21.Width = Me.Width - 10.5
  Else
     Me.MultiPage5.Width = Me.Width
     Me.Image35.Left = Me.MultiPage5.Width - 17
     Me.ListBox12.Width = Me.Width - 3.5
     Me.Image36.Left = Me.MultiPage5.Width - 17
     Me.ListBox13.Width = Me.Width - 3.5
     Me.Image37.Left = Me.MultiPage5.Width - 17
     Me.ListBox14.Width = Me.Width - 3.5
     Me.Image38.Left = Me.MultiPage5.Width - 17
     Me.ListBox15.Width = Me.Width - 3.5
     Me.Image39.Left = Me.MultiPage5.Width - 17
     Me.ListBox16.Width = Me.Width - 3.5
     Me.Image40.Left = Me.MultiPage5.Width - 17
     Me.ListBox17.Width = Me.Width - 3.5
     Me.Image41.Left = Me.MultiPage5.Width - 17
     Me.ListBox18.Width = Me.Width - 3.5
     Me.Image42.Left = Me.MultiPage5.Width - 17
     Me.ListBox19.Width = Me.Width - 3.5
     Me.Image43.Left = Me.MultiPage5.Width - 17
     Me.ListBox20.Width = Me.Width - 3.5
     Me.Image44.Left = Me.MultiPage5.Width - 17
     Me.ListBox21.Width = Me.Width - 3.5
  End If
  CW = CInt((Me.ListBox12.Width - 30) / 2)
  Me.ListBox12.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox47.Width = CW - 10
  Me.TextBox48.Left = Me.TextBox47.Left + Me.TextBox47.Width + 10
  Me.TextBox48.Width = CW - 10
  Me.ListBox13.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox49.Width = CW - 10
  Me.TextBox50.Left = Me.TextBox49.Left + Me.TextBox49.Width + 10
  Me.TextBox50.Width = CW - 10
  Me.ListBox14.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox51.Width = CW - 10
  Me.TextBox52.Left = Me.TextBox51.Left + Me.TextBox51.Width + 10
  Me.TextBox52.Width = CW - 10
  Me.ListBox15.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox53.Width = CW - 10
  Me.TextBox54.Left = Me.TextBox53.Left + Me.TextBox53.Width + 10
  Me.TextBox54.Width = CW - 10
  Me.ListBox16.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox55.Width = CW - 10
  Me.TextBox56.Left = Me.TextBox55.Left + Me.TextBox55.Width + 10
  Me.TextBox56.Width = CW - 10
  Me.ListBox17.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox57.Width = CW - 10
  Me.TextBox58.Left = Me.TextBox57.Left + Me.TextBox57.Width + 10
  Me.TextBox58.Width = CW - 10
  Me.ListBox18.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox59.Width = CW - 10
  Me.TextBox60.Left = Me.TextBox59.Left + Me.TextBox59.Width + 10
  Me.TextBox60.Width = CW - 10
  Me.ListBox19.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox61.Width = CW - 10
  Me.TextBox62.Left = Me.TextBox61.Left + Me.TextBox61.Width + 10
  Me.TextBox62.Width = CW - 10
  Me.ListBox20.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox63.Width = CW - 10
  Me.TextBox64.Left = Me.TextBox63.Left + Me.TextBox63.Width + 10
  Me.TextBox64.Width = CW - 10
  Me.ListBox21.ColumnWidths = "30;" & CW & ";" & CW
  Me.TextBox65.Width = CW - 10
  Me.TextBox66.Left = Me.TextBox65.Left + Me.TextBox65.Width + 10
  Me.TextBox66.Width = CW - 10

  Me.ComboBox1.ColumnWidths = Me.ComboBox1.Width - 20 & ";" & 15
  Me.ComboBox2.ColumnWidths = Me.ComboBox2.Width - 20 & ";" & 15
  Me.ComboBox3.ColumnWidths = Me.ComboBox3.Width - 20 & ";" & 15
  Me.ComboBox4.ColumnWidths = Me.ComboBox4.Width - 20 & ";" & 15
  Me.ComboBox5.ColumnWidths = Me.ComboBox5.Width - 20 & ";" & 15
  Me.ComboBox6.ColumnWidths = Me.ComboBox6.Width - 20 & ";" & 15
  Me.ComboBox7.ColumnWidths = Me.ComboBox7.Width - 20 & ";" & 15
  Me.ComboBox8.ColumnWidths = Me.ComboBox8.Width - 20 & ";" & 15
  Me.ComboBox9.ColumnWidths = Me.ComboBox9.Width - 20 & ";" & 15
  Me.ComboBox12.ColumnWidths = Me.ComboBox12.Width - 20 & ";" & 15
  Me.ComboBox13.ColumnWidths = Me.ComboBox13.Width - 20 & ";" & 15
  Me.ComboBox14.ColumnWidths = Me.ComboBox14.Width - 20 & ";" & 15
  Me.ComboBox15.ColumnWidths = Me.ComboBox15.Width - 20 & ";" & 15
  Me.ComboBox16.ColumnWidths = Me.ComboBox16.Width - 20 & ";" & 15
  Me.ComboBox17.ColumnWidths = Me.ComboBox17.Width - 20 & ";" & 15
  Me.ComboBox22.ColumnWidths = Me.ComboBox22.Width - 20 & ";" & 15
  Me.ComboBox21.ColumnWidths = Me.ComboBox21.Width - 20 & ";" & 15
  Me.ComboBox24.ColumnWidths = Me.ComboBox24.Width - 20 & ";" & 15
  Me.ComboBox26.ColumnWidths = Me.ComboBox26.Width - 20 & ";" & 15
  Me.ComboBox25.ColumnWidths = Me.ComboBox25.Width - 20 & ";" & 15
  Me.ComboBox27.ColumnWidths = Me.ComboBox27.Width - 20 & ";" & 15
  Me.ComboBox28.ColumnWidths = Me.ComboBox28.Width - 20 & ";" & 15
  Me.ComboBox29.ColumnWidths = Me.ComboBox29.Width - 20 & ";" & 15
  Me.ComboBox30.ColumnWidths = Me.ComboBox30.Width - 20 & ";" & 15
  Me.ComboBox31.ColumnWidths = Me.ComboBox31.Width - 20 & ";" & 15
  Me.ComboBox61.ColumnWidths = Me.ComboBox61.Width - 20 & ";" & 15

  Me.ComboBox18.ColumnWidths = Me.ComboBox18.Width - 20 & ";" & 15
  Me.ComboBox19.ColumnWidths = Me.ComboBox19.Width - 20 & ";" & 15
  Me.ComboBox20.ColumnWidths = Me.ComboBox20.Width - 20 & ";" & 15
  Me.ComboBox23.ColumnWidths = Me.ComboBox23.Width - 20 & ";" & 15
  Me.ComboBox60.ColumnWidths = Me.ComboBox60.Width - 20 & ";" & 15
  Me.ComboBox62.ColumnWidths = Me.ComboBox62.Width - 20 & ";" & 15

  'DIFF D&D
  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page19" Then
        If ghWnd = 0 Then
           Call ST_SUB_CLS
        End If
     End If
  End If

L_MM:
  '|fffd|~|fffd|j|fffd|}|fffd|b|fffd|v
  If Me.ListBox11.Visible = False Then
     Exit Sub
  End If
  
  If IsIconic(hwnd) = 1 Then
     Exit Sub
  End If
  
  Me.ListBox11.Height = Me.Height - 25
  
  If (SW_AERO = True And _
      Me.ListBox1.Visible = True) Or _
     (InStr(W_OS, "Windows 10") > 0 And _
      Val(Application.Version) >= 16) Then
     If SW_TBC = False Then
        Me.MultiPage2.Width = 338
        Me.ListBox11.Width = Application.Max(Me.Width - Me.ListBox11.Left - 22, 0)
        Me.Image34.Left = Me.ListBox11.Left + Me.ListBox11.Width
     End If
     Me.Image34.Top = Me.Height - 40
  Else
     If SW_TBC = False Then
        Me.ListBox11.Width = Me.Width - Me.ListBox11.Left - 12
        Me.Image34.Left = Me.ListBox11.Left + Me.ListBox11.Width - 3
     End If
     Me.Image34.Top = Me.Height - 30
  End If
  If SW_TBC = False Then
     Me.Label300.Left = Me.ListBox11.Left + Me.ListBox11.Width
  End If
  Me.Label300.Height = Me.Height - 63

  Call SET_MARK

  If SW_TBC = False Then
     Me.MultiPage2.Width = 338
     
     Me.Label9.Width = Me.MultiPage2.Width
     Me.ListBox1.Width = Me.MultiPage2.Width
     Me.Label67.Width = Me.MultiPage2.Width
     Me.ListBox2.Width = Me.MultiPage2.Width
     Me.Label71.Width = Me.MultiPage2.Width
     Me.ListBox3.Width = Me.MultiPage2.Width
     Me.Label75.Width = Me.MultiPage2.Width
     Me.ListBox4.Width = Me.MultiPage2.Width
     Me.Label79.Width = Me.MultiPage2.Width
     Me.ListBox5.Width = Me.MultiPage2.Width
     Me.Label83.Width = Me.MultiPage2.Width
     Me.ListBox6.Width = Me.MultiPage2.Width
     Me.Label87.Width = Me.MultiPage2.Width
     Me.ListBox7.Width = Me.MultiPage2.Width
     Me.Label91.Width = Me.MultiPage2.Width
     Me.ListBox8.Width = Me.MultiPage2.Width
     Me.Label95.Width = Me.MultiPage2.Width
     Me.ListBox9.Width = Me.MultiPage2.Width
     Me.Label99.Width = Me.MultiPage2.Width
     Me.ListBox10.Width = Me.MultiPage2.Width
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  'VBE
  If Me.Visible = True Then
     If Me.MultiPage1.Pages("Page17").Enabled = True Then
        On Error Resume Next
        If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page17" Then
           SW_ANM = False
           Call KILLTM_UF2
        End If
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If
        On Error GoTo 0
     Else
        SW_ANM = False
        Call KILLTM_UF2
        If Val(Application.Version) >= 15 Then
           Call KILLTM_UF
        End If
     End If
  End If
  
  'DIFF D&D
  If Me.Visible = True Then
     Call ED_SUB_CLS
  End If
  
  If SW_ANM = True Then
     Cancel = True
     Exit Sub
  End If
  
  If Me.CommandButton9.Enabled = False Then
     If SW_ENGLISH = True Then
        W_RET = MsgBox("Can't close during Find all, Replace all, Grep. Please close after cancel.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||5c2||10c||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||5c2||112|u|fffd||fffd||fffd|AGrep|fffd||fffd||fffd||355||82||fffd||fffd||90b1||fffd||182||342||142||fffd||fffd||702||fffd||fffd||fffd|B|fffd||fffd||fffd|~|fffd||fffd||fffd||102||fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
     End If
     Cancel = True
     Exit Sub
  End If

  If Me.Visible = True Then
     If Me.MultiPage1.Pages(UserForm1.MultiPage1.Value).Name = "Page1" Then
        If Me.CheckBox74.Value = False And _
           Me.CheckBox92.Value = False Then
           If W_SGKW <> "" Then
              If WINDOWCHK = True Then
                 Call MAKE_SGST
              End If
           End If
        End If
     End If
  End If

  W_SGFW = ""
  W_SGWD = ""
  W_SGBN = ""
  W_SGSN = ""
  W_SGR = 0
  W_SGC = 0
  W_SGKW = ""
  W_SGFM = ""


  If Me.CheckBox85.Value = True Then
     W_TOP = Me.Top
     W_LEFT = Me.Left
  End If

  Call CB_DEL

End Sub

Private Sub UserForm_Terminate()
   
  Call ResetHook
   
  Call KILLTM_UF2
  
  'Excel2013|fffd||20d|~
  If Val(Application.Version) >= 15 And _
     Application.Visible = True Then
     Call KILLTM_UF
     On Error Resume Next
     AppActivate ActiveWindow.Caption
     On Error GoTo 0
  End If
   
  SW_CLASSIC2 = False
  
  Call SAVE_SETTING
  
  Unload UserForm11

  Call CB_DEL

End Sub

Private Sub SAVE_SETTING()

  W_FTEXT = Me.ComboBox1.Value
  W_RTEXT = Me.ComboBox2.Value
  SW_UPLOW = Me.CheckBox1.Value
  SW_STRVAL = Me.CheckBox2.Value
  SW_VALUE = Me.CheckBox3.Value
  SW_BOOK = Me.CheckBox7.Value
  SW_INCSRH = Me.CheckBox22.Value
  SW_GOAR = Me.CheckBox208.Value
  SW_DISCRLF = Me.CheckBox32.Value
  SW_NOTSF = Me.CheckBox74.Value
  SW_NOTSG = Me.CheckBox92.Value
  SW_AFS = Me.CheckBox206.Value
  SW_GFS = Me.CheckBox207.Value
  SW_ASK = Me.CheckBox12.Value
  SW_BLSHT = Me.CheckBox54.Value
  SW_HDSHT = Me.CheckBox55.Value
  SW_SHTNM = Me.OptionButton4.Value
  SW_LHD = Me.OptionButton5.Value
  SW_CHD = Me.OptionButton6.Value
  SW_RHD = Me.OptionButton7.Value
  SW_LFT = Me.OptionButton8.Value
  SW_CFT = Me.OptionButton9.Value
  SW_RFT = Me.OptionButton10.Value
  SW_HFT = Me.CheckBox59.Value
  SW_SWRC = Me.CheckBox68.Value
  W_FRC = Me.TextBox1.Value
  W_TOC = Me.TextBox2.Value
  W_GREPFL = Me.TextBox3.Value
  W_DTEXT = Me.ComboBox18.Value
  W_GREPTH = Replace(Me.TextBox67.Value, vbCrLf, vbTab)
  SW_GREPSUB = Me.CheckBox16.Value
  SW_UZ = Me.CheckBox60.Value
  SW_GOF = Me.CheckBox62.Value
  SW_OFFSET = Me.CheckBox75.Value
  SW_UPDOWN = Me.CheckBox202.Value
  W_OFFSETR = Me.TextBox25.Value
  W_OFFSETC = Me.TextBox26.Value
  SW_GREPBKUP = Me.CheckBox27.Value
  W_OBJSTR = Application.Substitute(Me.TextBox7.Value, vbCrLf, Chr$(1))
  W_OSTR = Me.TextBox11.Value
  W_ASTR1 = Me.TextBox12.Value
  W_ESTR1 = Me.TextBox13.Value
  W_ASTR2 = Me.TextBox14.Value
  W_ESTR2 = Me.TextBox15.Value
  W_ASTR3 = Me.TextBox16.Value
  W_ESTR3 = Me.TextBox17.Value
  W_ASTR4 = Me.TextBox18.Value
  W_LCLFL = Me.TextBox10.Value
  SW_SEND = Me.CheckBox41.Value
  SW_LOCAL = Me.CheckBox42.Value
  SW_ACTVCELL = Me.CheckBox34.Value
  SW_WRDCMPL = Me.CheckBox37.Value
  SW_ERRREP = Me.CheckBox33.Value
  SW_TRNSP = Me.CheckBox43.Value
  SW_ATCLR = Me.CheckBox73.Value
  W_BGCLRT = Me.CommandButton46.Tag
  SW_UPDCHK = Me.CheckBox44.Value
  SW_NETALLOFF = Me.CheckBox88.Value
  SW_FCGUIDE = Me.CheckBox48.Value
  SW_ENGLISH = Me.CheckBox49.Value
  
  W_SDF1 = Me.TextBox37.Value
  W_SDF2 = Me.TextBox38.Value
  W_SDST = Me.TextBox39.Value
  W_SDED = Me.TextBox40.Value
  W_SDTC = Me.TextBox41.Value
  SW_SDSJIS = Me.OptionButton29.Value
  SW_SDUTF8 = Me.OptionButton28.Value
  SW_SDCRLF = Me.OptionButton31.Value
  SW_SDCR = Me.OptionButton32.Value
  SW_SDLF = Me.OptionButton30.Value
  SW_SDIS = Me.CheckBox200.Value
  SW_SDTR = Me.CheckBox229.Value
  SW_SDCC = Me.CheckBox201.Value
  
  SW_VBE = Me.CheckBox50.Value
  SW_MEIRYO = Me.CheckBox56.Value
  SW_BAR = Me.CheckBox65.Value
  SW_DRAT = Me.OptionButton11.Value
  SW_DRRW = Me.OptionButton12.Value
  SW_DRCL = Me.OptionButton13.Value
  SW_SACE = Me.OptionButton14.Value
  SW_SARW = Me.OptionButton15.Value
  SW_SACL = Me.OptionButton16.Value
  SW_TOC = Me.CheckBox69.Value
  SW_MM = False
  SW_EXC = Me.CheckBox71.Value
  SW_DESCC = Me.CheckBox209.Value
  SW_PCMPL = Me.CheckBox72.Value
  SW_HDNM = Me.CheckBox84.Value
  SW_SCALL = Me.OptionButton17.Value
  SW_SCBK = Me.OptionButton18.Value
  SW_SCSHT = Me.OptionButton19.Value
  SW_TRGTNM = Me.OptionButton20.Value
  SW_TRGTRT = Me.OptionButton21.Value
  
  SW_FLDD = Me.OptionButton22.Value
  SW_FLDR = Me.OptionButton23.Value
  SW_FLDU = Me.OptionButton24.Value
  SW_FLDL = Me.OptionButton25.Value
  SW_FLIC = Me.OptionButton26.Value
  SW_FLDC = Me.OptionButton27.Value
  
  SW_NEWS = Me.CheckBox78.Value
  SW_MINIW = Me.ToggleButton1.Value
  SW_MINIW2 = Me.ToggleButton2.Value
  SW_SAVEPOS = Me.CheckBox85.Value
  SW_WAO = Me.CheckBox86.Value

  SW_SMPL = Me.ToggleButton5.Value
  SW_SMPN = Me.ToggleButton7.Value
  SW_SMPP = Me.ToggleButton8.Value
  SW_SMPA = Me.ToggleButton9.Value
  SW_GREPALL = Me.ToggleButton11.Value

  SW_STOPBGF = Me.ToggleButton15.Value
  SW_STOPBGF2 = Me.ToggleButton17.Value
  SW_STOPBGIU = Me.ToggleButton16.Value

  AR_PAGES(1) = Me.MultiPage1.Pages("Page1").Visible
  AR_PAGES(2) = Me.MultiPage1.Pages("Page2").Visible
  AR_PAGES(3) = Me.MultiPage1.Pages("Page3").Visible
  AR_PAGES(4) = SW_P4V
  AR_PAGES(20) = Me.MultiPage1.Pages("Page20").Visible
  AR_PAGES(5) = Me.MultiPage1.Pages("Page5").Visible
  AR_PAGES(6) = Me.MultiPage1.Pages("Page6").Visible
  AR_PAGES(7) = Me.MultiPage1.Pages("Page7").Visible
  AR_PAGES(8) = SW_P8V
  AR_PAGES(9) = Me.MultiPage1.Pages("Page9").Visible
  AR_PAGES(19) = Me.MultiPage1.Pages("Page19").Visible
  AR_PAGES(10) = SW_P10V
  AR_PAGES(11) = SW_P11V
  AR_PAGES(17) = SW_P17V
  AR_PAGES(18) = SW_P18V
  AR_PAGES(12) = SW_P12V
  AR_PAGES(13) = SW_P13V
  AR_PAGES(14) = SW_P14V
  AR_PAGES(15) = SW_P15V
  AR_PAGES(16) = SW_P16V

End Sub

Private Sub RENAME(ByVal W_DIR As String, ByVal SW_GREPREP As Long)

  Dim AR_PATH() As String
  Dim I As Long
  Dim L As Long
    
  Dim SW_TEST As Boolean
  Dim W_PATH As String
  Dim W_FILE As String
  Dim W_FILE2 As String
  
  Dim FSO As Object
  Dim FL As Object
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  With FSO.GetFolder(W_DIR)
     For Each FL In .SubFolders
        I = I + 1
        ReDim Preserve AR_PATH(I)
        AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
     Next
  
     For Each FL In .Files
        If Me.CheckBox59.Value = False Then
           If FL.Attributes And 2 Then
           Else
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & FL.Name
           End If
        Else
           I = I + 1
           ReDim Preserve AR_PATH(I)
           AR_PATH(I) = W_DIR & "\" & FL.Name
        End If
     Next
  End With
  
  Set FSO = Nothing
     
  For I = 2 To UBound(AR_PATH)
     If Right$(AR_PATH(I), 1) = "\" Then
        If Me.CheckBox16.Value = True Then
           Call RENAME(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1), SW_GREPREP)
        End If
     Else
        L = 1
        Do While InStr(L, AR_PATH(I), "\") > 0
           L = InStr(L, AR_PATH(I), "\") + 1
        Loop
        L = L - 1
        W_PATH = Left(AR_PATH(I), L - 1)
        W_FILE = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
                
        SW_TEST = False
                
        If SW_NR = False Then
           SW_TEST = RE.Test(W_FILE)
        Else
           SW_TEST = NRTEST(NRE, W_FILE)
        End If
        
        If SW_TEST = True Then
           W_CNTRA = W_CNTRA + 1
           FR = FR + 1
           With Workbooks(W_FRB).Worksheets(1)
              .Cells(FR, 1).Value = FR - 5
              .Cells(FR, 2).Value = W_PATH
              .Cells(FR, 3).Value = W_FILE
              Select Case SW_GREPREP
              Case 0
                 On Error Resume Next
                 ActiveSheet.Hyperlinks.Add .Cells(FR, 3), W_PATH & "\" & W_FILE
                 On Error GoTo 0
                 .Range(.Cells(FR, 1), .Cells(FR, 3)).Borders.LineStyle = True
              Case 1
                 If SW_NR = False Then
                    W_FILE2 = RE.Replace(W_FILE, W_REPSTRCNV)
                 Else
                    W_FILE2 = NRREP(NRE, W_FILE, W_REPSTRCNV)
                 End If
              
                 On Error Resume Next
                 Set FSO = CreateObject("Scripting.FileSystemObject")
                 FSO.GetFile(AR_PATH(I)).Name = W_FILE2
                 Set FSO = Nothing
                 If Err.Number = 0 Then
                    W_CNTRA2 = W_CNTRA2 + 1
                    .Cells(FR, 4).Value = W_FILE2
                    On Error Resume Next
                    ActiveSheet.Hyperlinks.Add .Cells(FR, 4), W_PATH & "\" & W_FILE2
                    On Error GoTo 0
                    ReDim Preserve AR_RENP(W_CNTRA2)
                    ReDim Preserve AR_RENF(W_CNTRA2)
                    AR_RENP(W_CNTRA2) = W_PATH & "\" & W_FILE2
                    AR_RENF(W_CNTRA2) = W_FILE
                 Else
                    Err.Clear
                    .Cells(FR, 4).Value = "-"
                    .Cells(FR, 4).Interior.ColorIndex = 3
                    On Error Resume Next
                    ActiveSheet.Hyperlinks.Add .Cells(FR, 3), W_PATH & "\" & W_FILE2
                    On Error GoTo 0
                 End If
                 On Error GoTo 0
                 .Range(.Cells(FR, 1), .Cells(FR, 4)).Borders.LineStyle = True
              Case 2
                 On Error Resume Next
                 Set FSO = CreateObject("Scripting.FileSystemObject")
                 FSO.DeleteFile AR_PATH(I)
                 Set FSO = Nothing
                 If Err.Number = 0 Then
                    W_CNTRA2 = W_CNTRA2 + 1
                    .Cells(FR, 4).Value = "-"
                 Else
                    Err.Clear
                    .Cells(FR, 4).Value = W_FILE
                    .Cells(FR, 4).Interior.ColorIndex = 3
                    On Error Resume Next
                    ActiveSheet.Hyperlinks.Add .Cells(FR, 4), W_PATH & "\" & W_FILE2
                    On Error GoTo 0
                 End If
                 On Error GoTo 0
                 .Range(.Cells(FR, 1), .Cells(FR, 4)).Borders.LineStyle = True
              End Select
           End With
       End If

LABEL_NEXT:
        
     End If
  Next I
   
  Erase AR_PATH
  Exit Sub

LABEL_ERROR:
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox23.Value) - 1)
  Resume LABEL_NEXT

End Sub

Sub SHT_GREP(ByVal W_DIR As String, ByVal SW_GREPREP As Boolean, ByVal W_FNDSTR As String)

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim L As Long
    
  Dim SW_1ST As Long
  Dim SW_AOP As Boolean
  Dim W_BNAME As String
  Dim W_BKNAME As String
  Dim W_CNTRABK As Long
  
  Dim FSO As Object
  Dim FL As Object
  
  Dim W_SVIDX As Long
  Dim SW_ASE As Boolean
  Dim XL1 As Object
  
  Dim AR_PASS As Variant
  Dim SW_PASS As Boolean
  
  Dim WB As Workbook
  Dim W_GREPC As String
  
  Dim SW_REPEAT As Boolean
  Dim SW_LEFT As Boolean
  
  Dim SW_TRGT As Boolean
  Dim SW_HIDE As Boolean
  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long

  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_J As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  
  Dim W_FNDTXT As String
  Dim W_REPTXT As String
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim SW_FIND As Boolean
  Dim SW_FINDA As Boolean
  
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String
  Dim W_FNDTXTBK As String
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Set XL1 = XL2ND
     XL1.ScreenUpdating = False
     XL1.EnableEvents = False
     On Error Resume Next
     XL1.Calculation = xlCalculationManual
     On Error GoTo 0
     W_FRB = W_FRBS
     With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
        If .Cells(1, 1).Value <> "" Then
           If .Cells(2, 1).Value = "" Then
              ReDim AR_PATH(2)
              AR_PATH(2) = .Cells(1, 1).Value
           Else
              AR_WK = .Range(.Cells(1, 1), .Cells(.Cells(1, 1).End(xlDown).Row, 1)).Value
              ReDim Preserve AR_PATH(UBound(AR_WK, 1) + 1)
              For I = 2 To UBound(AR_PATH)
                 AR_PATH(I) = AR_WK(I - 1, 1)
              Next I
           End If
        End If
     End With
  Else
     With FSO.GetFolder(W_DIR)
        For Each FL In .SubFolders
           I = I + 1
           ReDim Preserve AR_PATH(I)
           AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
        Next
  
        For Each FL In .Files
           W_FLNM = FL.Name
           If W_FLNM Like W_FFILE Or _
              W_FLNM Like W_FFILE2 Or _
              W_FLNM Like W_FFILE3 Then
              If Left$(W_FLNM, 2) = "~$" Then
              Else
                 If W_FLNM Like W_FFILE3 Then
                 Else
                    I = I + 1
                    ReDim Preserve AR_PATH(I)
                    AR_PATH(I) = W_DIR & "\" & W_FLNM
                 End If
              End If
           End If
        Next
     End With
  End If
  
  Set FSO = Nothing
     
L_START:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_LEFT = False
  End If
     
  For I = 2 To UBound(AR_PATH)
     If SW_HSGREP = True And _
        W_PNO > 0 And _
        W_DIR = Me.ComboBox60.Value Then
        If SW_REPEAT = False Then
           If I Mod W_MAXP = W_MAXP - W_PNO Then
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 If .Cells(I - 1, 4).Value = "" Then
                    .Cells(I - 1, 4).Value = W_PNO
                    SW_LEFT = True
                 Else
                    GoTo LABEL_NEXT
                 End If
              End With
           Else
              GoTo LABEL_NEXT
           End If
        Else
           With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
              If .Cells(I - 1, 4).Value = "" Then
                 .Cells(I - 1, 4).Value = W_PNO
                 SW_LEFT = True
              Else
                 GoTo LABEL_NEXT
              End If
           End With
        End If
     End If
     
     If Right$(AR_PATH(I), 1) = "\" Then
        If Me.CheckBox16.Value = True Then
           Call SHT_GREP(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1), SW_GREPREP, W_FNDSTR)
        End If
     Else
        'OPEN
        SW_AOP = False
                
        L = 1
        Do While InStr(L, AR_PATH(I), "\") > 0
          L = InStr(L, AR_PATH(I), "\") + 1
        Loop
        L = L - 1
        W_BNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
                
        For L = 1 To Workbooks.count
           If Workbooks(L).Name = W_BNAME Then
              SW_AOP = True
              Exit For
           End If
        Next L
        If SW_AOP = True Then
           SW_OPE = True
           W_OPE = W_OPE + 1
           ReDim Preserve AR_OPE(W_OPE)
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox60.Value) - 1)
           GoTo LABEL_NEXT
        End If
        
        Application.DisplayAlerts = False
           
        SW_PASS = False
        L = -1
           
        On Error GoTo LABEL_ERROR
        If SW_GREPREP = False Then
           Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="", ReadOnly:=True)
        Else
           Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="")
        End If

LABEL_PASS:
        If SW_PASS = True Then
           L = L + 1
           Do While AR_PASS(L) = "" And _
                    L < UBound(AR_PASS)
              L = L + 1
           Loop
           Err.Clear
           If SW_GREPREP = False Then
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L), ReadOnly:=True)
           Else
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L))
           End If
        End If
                          
        On Error GoTo 0
        Application.DisplayAlerts = True
           
        If Val(Application.Version) >= 15 Then
           Application.ScreenUpdating = False
        End If
           
        WB.Windows(1).Visible = False
        WB.Activate
        
        On Error GoTo LABEL_ERROR
        SW_ASE = True
        W_SVIDX = ActiveSheet.Index
        SW_ASE = False
        On Error GoTo 0
        
        If ActiveWorkbook.MultiUserEditing = True Then
           ActiveWorkbook.Saved = True
           ActiveWorkbook.Close SaveChanges:=False
           If SW_PRGRSS = True Then
              W_CLCNT = W_CLCNT + 1
              If SW_HSGREP = True And _
                 W_PNO > 0 Then
                 W_FRB = W_FRBS
                 With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
                   .Cells(1, 4).Value = W_CLCNT
                 End With
              Else
                 Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
                 Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
              End If
           End If
           GoTo LABEL_ERROR2
        End If
        
        W_CNTRABK = W_CNTRA
        
        For K = 1 To WB.Sheets.count
           '|fffd||fffd|~
           DoEvents
           
           If SW_HSGREP = True And _
              W_PNO > 0 Then
              W_GREPC = ThisWorkbook.path & "\grepC.vbs"
              If Dir(W_GREPC) <> "" Then
                 SW_STOP = True
              End If
           End If
           If SW_STOP = True Then
              Exit For
           End If
           
           On Error GoTo LABEL_ERROR
           With WB.Sheets(K)
              SW_TRGT = True
              SW_HIDE = False
              If .Visible = xlHidden Or _
                 .Visible = xlVeryHidden Then
                 If Me.CheckBox55.Value = True Then
                    SW_HIDE = True
                 Else
                    SW_TRGT = False
                 End If
              End If
              If SW_TRGT = True Then
                 If TypeName(WB.Sheets(K)) <> "Worksheet" Then
                 Else
                    Call RANGE_GET(.UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
                    If W_USR = 1 And _
                       W_USC = 1 And _
                       W_UER = 1 And _
                       W_UEC = 1 And _
                       .Cells(1, 1).Value = "" Then
                       If Me.CheckBox54.Value = False Then
                          SW_TRGT = False
                       End If
                    End If
                 End If
              End If
              If SW_TRGT = False Then
                 GoTo LABEL_NEXT2
              End If
              
              If Me.OptionButton4.Value = True Then
                 W_FNDTXT = .Name
              ElseIf Me.OptionButton5.Value = True Then
                 W_FNDTXT = .PageSetup.LeftHeader
              ElseIf Me.OptionButton6.Value = True Then
                 W_FNDTXT = .PageSetup.CenterHeader
              ElseIf Me.OptionButton7.Value = True Then
                 W_FNDTXT = .PageSetup.RightHeader
              ElseIf Me.OptionButton8.Value = True Then
                 W_FNDTXT = .PageSetup.LeftFooter
              ElseIf Me.OptionButton9.Value = True Then
                 W_FNDTXT = .PageSetup.CenterFooter
              ElseIf Me.OptionButton10.Value = True Then
                 W_FNDTXT = .PageSetup.RightFooter
              End If
              
              SW_PR = False
              If W_FNDSTR = "" Then
                 If W_FNDTXT <> "" Then
                 Else
                    W_CNTFA = W_CNTFA + 1
                    If SW_GREPREP = True Then
                       If .ProtectContents = True Or _
                          WB.ReadOnly = True Then
                          Call SHT_GREP_R(K, W_FNDTXT, "", 0, SW_GREPREP)
                       Else
                          W_REPTXT = REPSTRCNV(Me.ComboBox17.Value)
                          On Error Resume Next
                          If Me.OptionButton5.Value = True Then
                             .PageSetup.LeftHeader = W_REPTXT
                          ElseIf Me.OptionButton6.Value = True Then
                             .PageSetup.CenterHeader = W_REPTXT
                          ElseIf Me.OptionButton7.Value = True Then
                             .PageSetup.RightHeader = W_REPTXT
                          ElseIf Me.OptionButton8.Value = True Then
                             .PageSetup.LeftFooter = W_REPTXT
                          ElseIf Me.OptionButton9.Value = True Then
                             .PageSetup.CenterFooter = W_REPTXT
                          ElseIf Me.OptionButton10.Value = True Then
                             .PageSetup.RightFooter = W_REPTXT
                          End If
                          Call SHT_GREP_R(K, W_FNDTXT, W_REPTXT, Err.Number, SW_GREPREP)
                          If Err.Number = 0 Then
                             W_CNTRA = W_CNTRA + 1
                          End If
                          On Error GoTo 0
                       End If
                    Else
                       Call SHT_GREP_R(K, W_FNDTXT, "", 0, SW_GREPREP)
                    End If
                 End If
                 GoTo LABEL_NEXT2
              End If
              
              If SW_NR = False Then
                 SW_WK = RE.Test(W_FNDTXT)
              Else
                 SW_WK = NRTEST(NRE, W_FNDTXT)
              End If
        
              If SW_WK = False Then
                 GoTo LABEL_NEXT2
              End If
           
              If SW_GREPREP = False Then
                 Call SHT_GREP_R(K, W_FNDTXT, "", 0, SW_GREPREP)
                 GoTo LABEL_NEXT2
              End If
              
              If SW_NR = False Then
                 Set MATCHES = RE.Execute(W_FNDTXT)
                 MAXJ = MATCHES.count - 1
                 RE.Global = False
              Else
                 AR_STR = Split(NREXE(NRE, W_FNDTXT), vbCrLf)
                 MAXJ = UBound(AR_STR)
                 AR_RES = Split(NRRES(NRE, W_FNDTXT, REPSTRCNV(Me.ComboBox17.Value)), Chr$(1))
                 If UBound(AR_RES) = -1 Then
                    ReDim AR_RES(0 To MAXJ)
                 End If
              End If
              
              W_ST = 1
              W_J = 0
              SW_FINDA = False
              W_FNDTXTBK = W_FNDTXT
              For J = 0 To MAXJ
                 If SW_NR = False Then
                    W_FI = MATCHES.Item(J).FirstIndex
                    W_LN = MATCHES.Item(J).Length
                    W_VL = MATCHES.Item(J).Value
                 Else
                    AR_WK = Split(AR_STR(J), vbTab)
                    W_FI = CLng(AR_WK(0))
                    W_LN = CLng(AR_WK(1))
                    W_VL = Mid$(W_FNDTXTBK, W_FI + 1, W_LN)
                    W_RS = AR_RES(J)
                 End If
           
                 SW_FIND = True
           
                 If SW_FIND = True Then
                    SW_FINDA = True
                    If RE.Pattern = "$" Then
                       W_POS = Len(W_FNDTXT) + 1
                    Else
                       If Len(W_LN) = 0 Then
                          If J > 0 Then
                             W_ST = W_ST + 1
                          End If
                       End If
                       W_POS = InStr(W_ST, W_FNDTXT, W_VL, vbBinaryCompare)
                    End If
                    W_LEN = W_LN
                    W_J = W_J + 1
                    If W_POS - 1 > 0 Then
                       If RE.Pattern = "$" Then
                          W_STR1 = W_FNDTXT
                       Else
                          W_STR1 = Left$(W_FNDTXT, W_POS - 1)
                       End If
                    Else
                       W_STR1 = ""
                    End If
                    If W_LEN = 0 Then
                       W_STR2 = ""
                    Else
                       W_STR2 = Mid$(W_FNDTXT, W_POS, W_LEN)
                    End If
                    If Len(W_FNDTXT) - W_POS - W_LEN + 1 > 0 Then
                       If RE.Pattern = "$" Then
                          W_STR3 = ""
                       Else
                          W_STR3 = Right$(W_FNDTXT, Len(W_FNDTXT) - W_POS - W_LEN + 1)
                       End If
                    Else
                       W_STR3 = ""
                    End If
              
                    SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
                    If SW_SPREP = True Then
                       W_STR2 = W_REPTXT
                    Else
                       If SW_NR = False Then
                          W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(Me.ComboBox17.Value))
                          W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
                       Else
                          W_STR2 = W_RS
                       End If
                       W_LEN = Len(W_STR2)
                    End If
                    W_FNDTXT = W_STR1 & W_STR2 & W_STR3
                    W_ST = W_POS + W_LEN
                 Else
                    W_ST = W_ST + W_LN
                 End If
              Next J
              If SW_FINDA = True Then
                 W_CNTFA = W_CNTFA + 1
              End If
              W_REPTXT = W_STR1 & W_STR2 & W_STR3
              Set MATCHES = Nothing
              RE.Global = True
              
              If .ProtectContents = True Or _
                 WB.ReadOnly = True Then
                 Call SHT_GREP_R(K, W_FNDTXTBK, "", 0, SW_GREPREP)
              Else
                 On Error Resume Next
                 If Me.OptionButton4.Value = True Then
                    .Name = W_REPTXT
                 ElseIf Me.OptionButton5.Value = True Then
                    .PageSetup.LeftHeader = W_REPTXT
                 ElseIf Me.OptionButton6.Value = True Then
                    .PageSetup.CenterHeader = W_REPTXT
                 ElseIf Me.OptionButton7.Value = True Then
                    .PageSetup.RightHeader = W_REPTXT
                 ElseIf Me.OptionButton8.Value = True Then
                    .PageSetup.LeftFooter = W_REPTXT
                 ElseIf Me.OptionButton9.Value = True Then
                    .PageSetup.CenterFooter = W_REPTXT
                 ElseIf Me.OptionButton10.Value = True Then
                    .PageSetup.RightFooter = W_REPTXT
                 End If
                 Call SHT_GREP_R(K, W_FNDTXTBK, W_REPTXT, Err.Number, SW_GREPREP)
                 If Err.Number = 0 Then
                    W_CNTRA = W_CNTRA + 1
                 End If
                 On Error GoTo 0
              End If
           End With

LABEL_NEXT2:
        Next K
  
        'CLOSE
LABEL_CLOSE:
        If SW_GREPREP = True Then
           WB.Activate
           WB.Sheets(W_SVIDX).Select
        End If

LABEL_CLOSE2:
        If SW_GREPREP = True And _
           W_CNTRA > W_CNTRABK Then
           '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|R|fffd|s|fffd|[
           If Me.CheckBox27.Value = True Then
              For L = 1 To Len(W_BNAME)
                 W_BKNAME = Left$(W_BNAME, Len(W_BNAME) - L)
                 If Right$(W_BKNAME, 1) = "." Then
                    Exit For
                 End If
              Next L
              W_BKNAME = W_BKNAME & "bak"
              W_RET = CopyFile(AR_PATH(I), W_DIR & "\" & W_BKNAME, 0)
           End If
           Application.DisplayAlerts = False
           WB.Save
           Application.DisplayAlerts = True
        End If
        WB.Saved = True
        WB.Close SaveChanges:=False
        If SW_HSGREP = True And _
           W_PNO > 0 Then
        Else
           If SW_PRGRSS = True Then
              W_CLCNT = W_CLCNT + 1
              Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
              Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
           End If
        End If
  
        If SW_STOP = True Then
           Erase AR_PATH
           Exit For
        End If
     
LABEL_NEXT:
     
     End If
  Next I
   
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     If SW_STOP = True Then
        Set XL1 = Nothing
        GoTo L_END
     ElseIf SW_LEFT = False Then
        Set XL1 = Nothing
        GoTo L_END
     Else
        SW_REPEAT = True
        GoTo L_START
     End If
  End If
   
L_END:
   
  Set WB = Nothing
  Erase AR_PATH
  Exit Sub

LABEL_ERROR:
  If Err.Number = -2147319765 Then
     On Error GoTo 0
     SW_OPE = True
     W_OPE = W_OPE + 1
     ReDim Preserve AR_OPE(W_OPE)
     If SW_ASE = True Then
        AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox60.Value) - 1)
        Resume LABEL_CLOSE2
     Else
        AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox60.Value) - 1) & vbTab & K
        Resume LABEL_NEXT2
     End If
  End If
  
  If Err.Number = 1004 Then
     If W_PASSLIST <> "" Then
        If L = -1 Then
           If Val(Application.Version) >= 9 Then
              AR_PASS = SPLIT2000(W_PASSLIST, vbCrLf)
           Else
              AR_PASS = SPLIT97(W_PASSLIST, vbCrLf)
           End If
        End If
        If L < UBound(AR_PASS) Then
           SW_PASS = True
           Resume LABEL_PASS
        End If
     End If
  End If
  
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  W_FCNT = W_FCNT - 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox60.Value) - 1)
  Resume LABEL_NEXT
  Exit Sub

LABEL_ERROR2:
  SW_OPE = True
  W_OPE = W_OPE + 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox60.Value) - 1)
  GoTo LABEL_NEXT
  Exit Sub
  
LABEL_ERROR3:
  On Error GoTo 0
  SW_ERRFLG = True
  Exit Sub

End Sub

Sub SHT_GREP_R(ByVal K As Long, ByVal W_FNDTXT As String, ByVal W_REPTXT As String, ByVal W_ERRNO As Long, ByVal SW_GREPREP As Boolean)

  Dim XL1 As Object
  Dim W_FRBPATH As String
  Dim WB As Workbook
  Dim W_OBJ As Object
  Dim ADDR As String
  
  
  If Val(Application.Version) >= 15 Then
     Application.ScreenUpdating = False
  End If
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Set XL1 = XL2ND
     W_FRB = W_FRBS
     With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
        FR = .Cells(.Rows.count, 2).End(xlUp).Row
     End With
  End If
  
  FR = FR + 1
  W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
  Set WB = Workbooks(Workbooks.count)
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
  Else
     Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
  End If
  
  W_OBJ.Cells(FR, 1).Value = FR - 7
  W_OBJ.Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox20.Value) - 1)
  W_OBJ.Cells(FR, 3).Value = WB.Sheets(K).Name
  If SW_GREPREP = False Then
     W_OBJ.Cells(FR, 4).Value = W_FNDTXT
  ElseIf ActiveWorkbook.ReadOnly = True Or _
     WB.Sheets(K).ProtectContents = True Or _
     W_ERRNO <> 0 Then
     W_OBJ.Cells(FR, 4).Value = W_FNDTXT
     W_OBJ.Cells(FR, 4).Interior.ColorIndex = 3
  Else
     W_OBJ.Cells(FR, 4).Value = W_REPTXT
  End If
  If TypeName(WB.Sheets(K)) = "Worksheet" Then
     ADDR = "'" & WB.Sheets(K).Name & "'!" & Cells(1, 1).Address
     On Error Resume Next
     W_OBJ.Parent.ActiveSheet.Hyperlinks.Add W_OBJ.Cells(FR, 4), W_FRBPATH, ADDR
     On Error GoTo 0
  Else
     ADDR = ""
     On Error Resume Next
     W_OBJ.Parent.ActiveSheet.Hyperlinks.Add W_OBJ.Cells(FR, 4), W_FRBPATH, ADDR
     On Error GoTo 0
  End If
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  Else
     W_OBJ.Range(W_OBJ.Cells(FR, 1), W_OBJ.Cells(FR, 4)).Borders.LineStyle = True
  End If
  
  Set W_OBJ = Nothing
  Set XL1 = Nothing
  
  Set WB = Nothing
  
  If SW_HSGREP = True And _
     W_PNO > 0 Then
  ElseIf SW_GHO = False Then
     Workbooks(W_FRB).Activate
     If Application.Visible = False Then
     ElseIf Val(Application.Version) >= 15 Then
        Call GREP2013S2
     End If
     Application.ScreenUpdating = True
     Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
     If Val(Application.Version) >= 15 Then
     Else
        Application.ScreenUpdating = False
     End If
     Workbooks(Workbooks.count).Activate
  End If

End Sub

Sub SHP_GREP(ByVal W_DIR As String, ByVal SW_GREPREP As Boolean, ByVal SW_UNZIP As Boolean, ByVal SW_NRML As Boolean)

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  Dim K As Long
  Dim L As Long
  Dim M As Long
  Dim N As Long
  Dim O As Long
  Dim P As Long
    
  Dim SW_1ST As Long
  Dim SW_SHPGRP As Boolean
  Dim SHP As Object
  Dim SW_AOP As Boolean
  Dim W_BNAME As String
  Dim W_BKNAME As String
  Dim W_CNTRABK As Long
  
  Dim FSO As Object
  Dim FL As Object
  
  Dim W_CNTFA2 As Long
  
  Dim W_TEMP As String
  Dim W_ZNAME As String
  Dim W_ZDIR As String
  Dim SA As Object
  Dim FILE As Object
  Dim DEST As Object
  Dim SW_ZIP As Boolean
  
  Dim W_SVIDX As Long
  
  Dim W_IGNAME As String
  Dim SW_ASE As Boolean
  
  Dim XL1 As Object
  
  Dim AR_PASS As Variant
  Dim SW_PASS As Boolean
  
  Dim W_SHPCNT As Long
  
  Dim WB As Workbook
  Dim W_ID As Long
  Dim AR_WK As Variant
  
  Dim W_GREPC As String
  
  Dim SW_REPEAT As Boolean
  Dim SW_LEFT As Boolean
  
  Dim SW_ALLNE As Boolean
  Dim W_TS As String
  Dim W_IDXDO As String
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  If Me.CheckBox64.Value = False Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        XL1.ScreenUpdating = False
        XL1.EnableEvents = False
        On Error Resume Next
        XL1.Calculation = xlCalculationManual
        On Error GoTo 0
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
           If .Cells(1, 1).Value <> "" Then
              If .Cells(2, 1).Value = "" Then
                 ReDim AR_PATH(2)
                 AR_PATH(2) = .Cells(1, 1).Value
              Else
                 AR_WK = .Range(.Cells(1, 1), .Cells(.Cells(1, 1).End(xlDown).Row, 1)).Value
                 ReDim Preserve AR_PATH(UBound(AR_WK, 1) + 1)
                 For I = 2 To UBound(AR_PATH)
                    AR_PATH(I) = AR_WK(I - 1, 1)
                 Next I
              End If
           End If
        End With
     Else
        With FSO.GetFolder(W_DIR)
           For Each FL In .SubFolders
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
           Next
  
           For Each FL In .Files
              W_FLNM = FL.Name
              If W_FLNM Like W_FFILE Or _
                 W_FLNM Like W_FFILE2 Or _
                 W_FLNM Like W_FFILE3 Then
                 If Left$(W_FLNM, 2) = "~$" Then
                 Else
                    If W_FLNM Like W_FFILE3 Then
                       If SW_UNZIP = False And _
                          SW_GREPREP = False And _
                          Me.CheckBox60.Value = True Then
                          I = I + 1
                          ReDim Preserve AR_PATH(I)
                          AR_PATH(I) = W_DIR & "\" & W_FLNM & "\"
                       End If
                    Else
                       I = I + 1
                       ReDim Preserve AR_PATH(I)
                       AR_PATH(I) = W_DIR & "\" & W_FLNM
                    End If
                 End If
              End If
           Next
        End With
     End If
  Else
     For Each FL In Workbooks
        If FL.Name <> Workbooks(W_FRB).Name Then
           I = I + 1
           ReDim Preserve AR_PATH(I)
           AR_PATH(I) = FL.path & "\" & FL.Name
        End If
     Next
  End If
  
  W_TEMP = FSO.GetSpecialFolder(2)
  
  Set FSO = Nothing
     
L_START:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_LEFT = False
  End If
     
  For I = 2 To UBound(AR_PATH)
     If SW_HSGREP = True And _
        W_PNO > 0 And _
        W_DIR = Me.ComboBox20.Value Then
        If SW_REPEAT = False Then
           If I Mod W_MAXP = W_MAXP - W_PNO Then
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 If .Cells(I - 1, 4).Value = "" Then
                    .Cells(I - 1, 4).Value = W_PNO
                    If SW_NRML = False And _
                       W_NMLCHK = "" Then
                    Else
                       W_TS = .Cells(I - 1, 3).Value
                    End If
                    SW_LEFT = True
                 Else
                    GoTo LABEL_NEXT
                 End If
              End With
           Else
              GoTo LABEL_NEXT
           End If
        Else
           With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
              If .Cells(I - 1, 4).Value = "" Then
                 .Cells(I - 1, 4).Value = W_PNO
                 If SW_NRML = False And _
                    W_NMLCHK = "" Then
                 Else
                    W_TS = .Cells(I - 1, 3).Value
                 End If
                 SW_LEFT = True
              Else
                 GoTo LABEL_NEXT
              End If
           End With
        End If
     End If
     
     If SW_UNZIP = False Then
        SW_ZIP = False
        If W_ZPATH <> "" Then
           Set FSO = CreateObject("Scripting.FileSystemObject")
           If FSO.FolderExists(W_UZPATH) Then
              FSO.DeleteFolder W_UZPATH, True
           End If
           Set FSO = Nothing
        End If
        W_ZPATH = ""
     Else
        SW_ZIP = True
     End If
     
     If Right$(AR_PATH(I), 1) = "\" Then
        If Right$(AR_PATH(I), 5) = ".zip\" Then
           AR_PATH(I) = Left$(AR_PATH(I), Len(AR_PATH(I)) - 1)
           L = 1
           Do While InStr(L, AR_PATH(I), "\") > 0
              L = InStr(L, AR_PATH(I), "\") + 1
           Loop
           L = L - 1
           W_ZNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
           W_ZNAME = Left$(W_ZNAME, Len(W_ZNAME))
           W_ZDIR = W_TEMP & "\" & W_ZNAME
           
           Set FSO = CreateObject("Scripting.FileSystemObject")
           If FSO.FolderExists(W_ZDIR) Then
              FSO.DeleteFolder W_ZDIR, True
           End If
           FSO.CreateFolder W_ZDIR
           Set FSO = Nothing
           
           W_ZDIR = W_ZDIR & "\"
           Set SA = CreateObject("Shell.Application")
           Set FILE = SA.NameSpace(CVar(AR_PATH(I)))
           Set DEST = SA.NameSpace(CVar(W_ZDIR))
           DEST.CopyHere FILE.Items, 1028
           Set FILE = Nothing
           Set DEST = Nothing
           Set SA = Nothing
           
           W_UZPATH = Left$(W_ZDIR, Len(W_ZDIR) - 1)
           W_ZPATH = AR_PATH(I)
           AR_PATH(I) = W_ZDIR
           SW_ZIP = True
        End If
        
        If Me.CheckBox16.Value = True Then
           Call SHP_GREP(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1), SW_GREPREP, SW_ZIP, SW_NRML)
        End If
     Else
        If SW_HSGREP = True And _
           W_PNO > 0 Then
           If SW_NRML = False And _
              W_NMLCHK = "" Then
           Else
              W_IDXDO = JUDGE_IDX(AR_PATH(I), W_TS, SW_NRML)
              If W_IDXDO = "N" Then
                 With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                    .Cells(I - 1, 5).Value = "N"
                 End With
                 GoTo LABEL_NEXT
              End If
           End If
        End If
        
        'OPEN
        SW_AOP = False
                
        L = 1
        Do While InStr(L, AR_PATH(I), "\") > 0
          L = InStr(L, AR_PATH(I), "\") + 1
        Loop
        L = L - 1
        W_BNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
                
        If Me.CheckBox64.Value = False Then
           For L = 1 To Workbooks.count
              If Workbooks(L).Name = W_BNAME Then
                 SW_AOP = True
                 Exit For
              End If
           Next L
           If SW_AOP = True Then
              SW_OPE = True
              W_OPE = W_OPE + 1
              ReDim Preserve AR_OPE(W_OPE)
              AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
              GoTo LABEL_NEXT
           End If
        
           Application.DisplayAlerts = False
           
           SW_PASS = False
           L = -1
           
           On Error GoTo LABEL_ERROR
           If SW_GREPREP = False Then
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="", ReadOnly:=True)
           Else
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="")
           End If

LABEL_PASS:
           If SW_PASS = True Then
              L = L + 1
              Do While AR_PASS(L) = "" And _
                       L < UBound(AR_PASS)
                 L = L + 1
              Loop
              Err.Clear
              If SW_GREPREP = False Then
                 Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L), ReadOnly:=True)
              Else
                 Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L))
              End If
           End If
                          
           On Error GoTo 0
           Application.DisplayAlerts = True
           
           If Val(Application.Version) >= 15 Then
              Application.ScreenUpdating = False
           End If
           
           WB.Windows(1).Visible = False
           WB.Activate
        Else
           W_GBNAME = W_BNAME
           Set WB = Workbooks(W_BNAME)
           WB.Activate
        End If
        
        On Error GoTo LABEL_ERROR
        SW_ASE = True
        W_SVIDX = ActiveSheet.Index
        SW_ASE = False
        On Error GoTo 0
        
        If ActiveWorkbook.MultiUserEditing = True Then
           ActiveWorkbook.Saved = True
           ActiveWorkbook.Close SaveChanges:=False
           If Me.CheckBox60.Value = False And _
              Me.CheckBox62.Value = False And _
              SW_PRGRSS = True Then
              W_CLCNT = W_CLCNT + 1
              If SW_HSGREP = True And _
                 W_PNO > 0 Then
                 W_FRB = W_FRBS
                 With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
                   .Cells(1, 4).Value = W_CLCNT
                 End With
              Else
                 Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
                 Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
              End If
           End If
           GoTo LABEL_ERROR2
        End If
        
        W_CNTFA2 = 0
        W_CNTRABK = W_CNTRA
        SW_ALLNE = False
        
        For K = 1 To WB.Sheets.count
           On Error GoTo LABEL_ERROR
           With WB.Sheets(K)
              If .Visible = True Then
                 On Error GoTo 0
                 .Activate
                 .Select
                 If .ProtectContents = False Then
                    W_SHPCNT = .Shapes.count
              
                    For M = 1 To .Shapes.count
                       '|fffd||fffd|~
                       DoEvents
                       If SW_STOP = True Then
                          Exit For
                       End If
                       
                       Call SHP_GREP_FR(.Shapes(M), W_SHPCNT, W_CNTFA2, K, SW_GREPREP, W_ID)
                       
                       If SW_STOP = True Then
                          Exit For
                       End If
                    Next M
                 Else
                    SW_PRA = True
                 End If
              End If
              On Error GoTo 0
           End With
           
           If SW_HSGREP = True And _
              W_PNO > 0 Then
              W_GREPC = ThisWorkbook.path & "\grepC.vbs"
              If Dir(W_GREPC) <> "" Then
                 SW_STOP = True
              End If
           End If
           
           If SW_STOP = True Then
              Exit For
           End If

LABEL_NEXT2:
        Next K
  
        'CLOSE
LABEL_CLOSE:
        If SW_GREPREP = True Then
           WB.Activate
           WB.Sheets(W_SVIDX).Select
        End If

LABEL_CLOSE2:
        If Me.CheckBox64.Value = False Then
           If SW_GREPREP = True And _
              W_CNTRA > W_CNTRABK Then
              '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|R|fffd|s|fffd|[
              If Me.CheckBox27.Value = True Then
                 For L = 1 To Len(W_BNAME)
                    W_BKNAME = Left$(W_BNAME, Len(W_BNAME) - L)
                    If Right$(W_BKNAME, 1) = "." Then
                       Exit For
                    End If
                 Next L
                 W_BKNAME = W_BKNAME & "bak"
                 W_RET = CopyFile(AR_PATH(I), W_DIR & "\" & W_BKNAME, 0)
              End If
              Application.DisplayAlerts = False
              WB.Save
              Application.DisplayAlerts = True
           End If
           WB.Saved = True
           WB.Close SaveChanges:=False
           If SW_HSGREP = True And _
              W_PNO > 0 Then
           Else
              If Me.CheckBox60.Value = False And _
                 Me.CheckBox62.Value = False And _
                 SW_PRGRSS = True Then
                 W_CLCNT = W_CLCNT + 1
                 Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
                 Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
              End If
           End If
        
        End If
  
        If SW_STOP = True Then
           Erase AR_PATH
           Exit For
        ElseIf SW_HSGREP = True And _
               W_PNO > 0 Then
           If SW_NRML = False And _
              W_NMLCHK = "" Then
           Else
              If W_CNTFA2 = 0 Then
                 SW_ALLNE = True
              End If
              Select Case W_IDXDO
              Case "U"
                 If SW_ALLNE = False Then
                    W_IDXDO = "N"
                 End If
              Case "D"
                 If SW_ALLNE = True Then
                    W_IDXDO = "R"
                 End If
              Case "A"
                 If SW_ALLNE = False Then
                    W_IDXDO = "N"
                 End If
              End Select
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 .Cells(I - 1, 5).Value = W_IDXDO
              End With
           End If
        End If
     
LABEL_NEXT:
     
     End If
  Next I
   
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     If SW_STOP = True Then
        Set XL1 = Nothing
        GoTo L_END
     ElseIf SW_LEFT = False Then
        Set XL1 = Nothing
        GoTo L_END
     Else
        SW_REPEAT = True
        GoTo L_START
     End If
  End If
   
L_END:
   
  Set WB = Nothing
  Erase AR_PATH
  Exit Sub

LABEL_ERROR:
  If Err.Number = -2147319765 Then
     On Error GoTo 0
     SW_OPE = True
     W_OPE = W_OPE + 1
     ReDim Preserve AR_OPE(W_OPE)
     If SW_ASE = True Then
        If SW_GREPREP = False Then
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
        Else
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox19.Value) - 1)
        End If
        Resume LABEL_CLOSE2
     Else
        If SW_GREPREP = False Then
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1) & vbTab & K
        Else
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox19.Value) - 1) & vbTab & K
        End If
        Resume LABEL_NEXT2
     End If
  End If
  
  If Err.Number = 1004 Then
     If W_PASSLIST <> "" Then
        If L = -1 Then
           If Val(Application.Version) >= 9 Then
              AR_PASS = SPLIT2000(W_PASSLIST, vbCrLf)
           Else
              AR_PASS = SPLIT97(W_PASSLIST, vbCrLf)
           End If
        End If
        If L < UBound(AR_PASS) Then
           SW_PASS = True
           Resume LABEL_PASS
        End If
     End If
  End If
  
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  W_FCNT = W_FCNT - 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox20.Value) - 1)
  Resume LABEL_NEXT
  Exit Sub

LABEL_ERROR2:
  SW_OPE = True
  W_OPE = W_OPE + 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox20.Value) - 1)
  GoTo LABEL_NEXT
  Exit Sub
  
LABEL_ERROR3:
  On Error GoTo 0
  SW_ERRFLG = True
  Exit Sub

End Sub

Private Sub SHP_GREP_FR(SHP As Shape, W_SHPCNT As Long, W_CNTFA2 As Long, ByVal S As Long, ByVal SW_GREPREP As Boolean, W_ID As Long)

  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim M As Long
  Dim N As Long
    
  Dim W_SPLEN As Long
  Dim W_ST As Long
  Dim W_BYTE As Long
  Dim W_SPTXT As String
  Dim W_REPTXT As String
  Dim W_FRBPATH As String
  Dim ADDR As String
  
  Dim MATCHES As Object
  Dim W_STR As String
  Dim SW_FIND As Boolean
  
  Dim W_TEMP As String
  Dim W_PATH As String
  
  Dim W_FCIX As Long
  Dim W_SPCLR As String
  Dim AR_WK() As Variant
  Dim W_BOOL As Variant
  Dim W_SPDCB As String
  Dim W_SPDCI As String
  Dim W_SPDCU As String
  Dim W_SPDCK As String
  
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  
  Dim XL1 As Object
  Dim W_OBJ As Object
  Dim WB As Workbook

  Dim W_SHPNM As String
  Dim SC1 As Long
  Dim SC2 As Long
  Dim AR_SHP() As Shape
  Dim AR_ID() As Long
  Dim AR_IDA() As Long
  Dim SW_FINDID As Boolean
  Dim AR_IDX() As Variant

  Dim AR_STR As Variant
  Dim MAXN As Long
  Dim AR_WK2 As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_RS As String

  Dim W_SPTXTBK As String


  If SHP.Type = msoGroup Then
     If Val(Application.Version) >= 12 Then
        For I = 1 To SHP.GroupItems.count
           Call SHP_GREP_FR(SHP.GroupItems(I), W_SHPCNT, W_CNTFA2, S, SW_GREPREP, W_ID)
        Next I
     Else
        If SW_GREPREP = True And _
           SW_SHPUR = False Then
           Exit Sub
        End If
        
        W_SHPNM = SHP.Name
        SC1 = ActiveSheet.Shapes.count
        ReDim AR_IDA(SC1)
        For I = 1 To SC1
           AR_IDA(I) = ActiveSheet.Shapes(I).ID
        Next I
        SHP.Ungroup
        SC2 = ActiveSheet.Shapes.count
        ReDim AR_SHP(SC2 - SC1 + 1)
        ReDim AR_ID(SC2 - SC1 + 1)
        K = 0
        For I = 1 To SC2
           SW_FINDID = False
           For J = 1 To UBound(AR_IDA)
              If ActiveSheet.Shapes(I).ID = AR_IDA(J) Then
                 SW_FINDID = True
                 Exit For
              End If
           Next J
           If SW_FINDID = False Then
              K = K + 1
              AR_ID(K) = ActiveSheet.Shapes(I).ID
              Set AR_SHP(K) = ActiveSheet.Shapes(I)
              If K = UBound(AR_ID) Then
                 Exit For
              End If
           End If
        Next I
        Erase AR_IDA
        
        For I = 1 To UBound(AR_SHP)
           Call SHP_GREP_FR(AR_SHP(I), W_SHPCNT, W_CNTFA2, S, SW_GREPREP, AR_ID(I))
           Set AR_SHP(I) = Nothing
        Next I
        
        Erase AR_SHP
        ReDim AR_IDX(SC2 - SC1 + 1)
        
        K = 0
        For I = 1 To ActiveSheet.Shapes.count
           For J = K + 1 To UBound(AR_ID)
              If ActiveSheet.Shapes(I).ID = AR_ID(J) Then
                 K = K + 1
                 AR_IDX(K) = I
                 Exit For
              End If
           Next J
           If K = UBound(AR_ID) Then
              Exit For
           End If
        Next I
        With ActiveSheet.Shapes.Range(AR_IDX()).Group
           On Error Resume Next
           .Name = W_SHPNM
           On Error GoTo 0
           W_ID = .ID
        End With
        Erase AR_ID
        Erase AR_IDX
     End If
     Exit Sub
  End If

  If SW_ALLSHP = True Then
  ElseIf SW_COMONLY = True Then
     If SHP.Type <> msoComment Then
        Exit Sub
     End If
  ElseIf SW_NOTCOM = True Then
     If SHP.Type = msoComment Then
        Exit Sub
     End If
  End If

  If Val(Application.Version) >= 12 And _
     SW_INCSA = True Then
     If SW_GREPREP = False Then
        If SA_FIND(SHP, RE, NRE, SW_NR, 1, True, W_TEMP, W_CNTFA2, S) = True Then
           Exit Sub
        End If
     Else
        If SA_FIND(SHP, RE, NRE, SW_NR, 3, True, W_TEMP, W_CNTFA2, S) = True Then
           Exit Sub
        End If
     End If
  End If
  
  W_SPLEN = 0
  On Error Resume Next
  W_SPLEN = SHP.TextFrame.Characters.count
  On Error GoTo 0
  If W_SPLEN = 0 Then
     Exit Sub
  End If
  
  W_SPTXT = ""
  For N = 0 To Int(W_SPLEN / 255)
     W_ST = N * 255 + 1
     If (N + 1) * 255 <= W_SPLEN Then
        W_BYTE = 255
     Else
        W_BYTE = W_SPLEN - N * 255
     End If
     W_SPTXT = W_SPTXT & SHP.TextFrame.Characters(W_ST, W_BYTE).text
     If (N + 1) * 255 = W_SPLEN Then
        Exit For
     End If
  Next N
  If SW_GREPREP = False And _
     Me.CheckBox32.Value = True Then
     W_SPTXTBK = W_SPTXT
     W_SPTXT = Replace(W_SPTXT, vbLf, "")
  End If
  
  W_EVAR = W_SPTXT
  SW_FIND = False
  
  If SW_NR = False Then
     SW_FIND = RE.Test(W_SPTXT)
  Else
     SW_FIND = NRTEST(NRE, W_SPTXT)
  End If
  
  If SW_FIND = True Then
     If SW_GREPREP = True And _
        ActiveWorkbook.ReadOnly = False Then
        If SW_CLRKEEP = True Then
           With SHP.TextFrame
              '|fffd|F|fffd||6d1||fffd|
              If Val(Application.Version) >= 12 Then
                 W_FCIX = 99
                 W_POS = 1
                 W_SPCLR = ""
                 For N = 1 To Len(W_SPTXT)
                    If .Characters(N, 1).Font.Color <> W_FCIX Then
                       If W_FCIX <> 99 Then
                          W_LEN = N - W_POS
                          If W_SPCLR = "" Then
                             W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                          Else
                             W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                          End If
                       End If
                       W_POS = N
                       W_FCIX = .Characters(N, 1).Font.Color
                    End If
                    If N = Len(W_SPTXT) Then
                       W_LEN = N - W_POS + 1
                       If W_SPCLR = "" Then
                          W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                       Else
                          W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                       End If
                    End If
                 Next N
              Else
                 If IsNull(.Characters.Font.ColorIndex) = True Then
                    W_FCIX = 99
                    W_POS = 1
                    W_SPCLR = ""
                    For N = 1 To Len(W_SPTXT)
                       If .Characters(N, 1).Font.ColorIndex <> W_FCIX Then
                          If W_FCIX <> 99 Then
                             W_LEN = N - W_POS
                             If W_SPCLR = "" Then
                                W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                             Else
                                W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                             End If
                          End If
                          W_POS = N
                          W_FCIX = .Characters(N, 1).Font.ColorIndex
                       End If
                       If N = Len(W_SPTXT) Then
                          W_LEN = N - W_POS + 1
                          If W_SPCLR = "" Then
                             W_SPCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                          Else
                             W_SPCLR = W_SPCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                          End If
                       End If
                    Next N
                 Else
                    W_SPCLR = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.ColorIndex
                 End If
              End If
              '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
              If IsNull(.Characters.Font.Bold) = True Then
                 ReDim AR_WK(Len(W_SPTXT))
                 For N = 1 To Len(W_SPTXT)
                    AR_WK(N) = .Characters(N, 1).Font.Bold
                 Next N
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_SPDCB = ""
                 For N = 1 To Len(W_SPTXT)
                    If AR_WK(N) <> W_BOOL Then
                       W_LEN = N - W_POS
                       If W_SPDCB = "" Then
                          W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = N
                       W_BOOL = AR_WK(N)
                    End If
                    If N = Len(W_SPTXT) Then
                       W_LEN = N - W_POS + 1
                       If W_SPDCB = "" Then
                          W_SPDCB = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCB = W_SPDCB & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next N
              Else
                 W_SPDCB = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Bold
              End If
              '|fffd||391||315||6d1||fffd|
              If IsNull(.Characters.Font.Italic) = True Then
                 ReDim AR_WK(Len(W_SPTXT))
                 For N = 1 To Len(W_SPTXT)
                    AR_WK(N) = .Characters(N, 1).Font.Italic
                 Next N
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_SPDCI = ""
                 For N = 1 To Len(W_SPTXT)
                    If AR_WK(N) <> W_BOOL Then
                       W_LEN = N - W_POS
                       If W_SPDCI = "" Then
                          W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = N
                       W_BOOL = AR_WK(N)
                    End If
                    If N = Len(W_SPTXT) Then
                       W_LEN = N - W_POS + 1
                       If W_SPDCI = "" Then
                          W_SPDCI = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCI = W_SPDCI & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next N
              Else
                 W_SPDCI = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Italic
              End If
              '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
              If IsNull(.Characters.Font.Underline) = True Then
                 ReDim AR_WK(Len(W_SPTXT))
                 For N = 1 To Len(W_SPTXT)
                    AR_WK(N) = .Characters(N, 1).Font.Underline
                 Next N
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_SPDCU = ""
                 For N = 1 To Len(W_SPTXT)
                    If AR_WK(N) <> W_BOOL Then
                       W_LEN = N - W_POS
                       If W_SPDCU = "" Then
                          W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = N
                       W_BOOL = AR_WK(N)
                    End If
                    If N = Len(W_SPTXT) Then
                       W_LEN = N - W_POS + 1
                       If W_SPDCU = "" Then
                          W_SPDCU = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCU = W_SPDCU & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next N
              Else
                 W_SPDCU = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Underline
              End If
              '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
              If IsNull(.Characters.Font.Strikethrough) = True Then
                 ReDim AR_WK(Len(W_SPTXT))
                 For N = 1 To Len(W_SPTXT)
                    AR_WK(N) = .Characters(N, 1).Font.Strikethrough
                 Next N
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_SPDCK = ""
                 For N = 1 To Len(W_SPTXT)
                    If AR_WK(N) <> W_BOOL Then
                       W_LEN = N - W_POS
                       If W_SPDCK = "" Then
                          W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = N
                       W_BOOL = AR_WK(N)
                    End If
                    If N = Len(W_SPTXT) Then
                       W_LEN = N - W_POS + 1
                       If W_SPDCK = "" Then
                          W_SPDCK = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_SPDCK = W_SPDCK & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next N
              Else
                 W_SPDCK = 1 & ":" & Len(W_SPTXT) & ":" & .Characters.Font.Strikethrough
              End If
           End With
        End If
        
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_SPTXT)
           MAXN = MATCHES.count - 1
           RE.Global = False
        Else
           AR_STR = Split(NREXE(NRE, W_SPTXT), vbCrLf)
           MAXN = UBound(AR_STR)
           AR_RES = Split(NRRES(NRE, W_SPTXT, REPSTRCNV(Me.ComboBox14.Value)), Chr$(1))
           If UBound(AR_RES) = -1 Then
              ReDim AR_RES(0 To MAXN)
           End If
        End If
        
        W_ST = 1
        W_J = 0
        Erase AR_LEN0
        Erase AR_POS
        Erase AR_LEN
        For N = 0 To MAXN
           If SW_NR = False Then
              W_FI = MATCHES.Item(N).FirstIndex
              W_LN = MATCHES.Item(N).Length
              W_VL = MATCHES.Item(N).Value
           Else
              AR_WK2 = Split(AR_STR(N), vbTab)
              W_FI = CLng(AR_WK2(0))
              W_LN = CLng(AR_WK2(1))
              W_VL = Mid$(W_SPTXT, W_FI + 1, W_LN)
              W_RS = AR_RES(N)
           End If
           
           SW_FIND = True
           If SW_FIND = True Then
              If RE.Pattern = "$" Then
                 W_POS = Len(W_SPTXT) + 1
              Else
                 If W_LN = 0 Then
                    If N > 0 Then
                       W_ST = W_ST + 1
                    End If
                 End If
                 W_POS = InStr(W_ST, W_SPTXT, W_VL, vbBinaryCompare)
              End If
              W_LEN = W_LN
              W_J = W_J + 1
              ReDim Preserve AR_LEN0(W_J)
              AR_LEN0(W_J) = W_LEN
              ReDim Preserve AR_POS(W_J)
              AR_POS(W_J) = W_POS
              If W_POS - 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR1 = W_SPTXT
                 Else
                    W_STR1 = Left$(W_SPTXT, W_POS - 1)
                 End If
              Else
                 W_STR1 = ""
              End If
              If W_LEN = 0 Then
                 W_STR2 = ""
              Else
                 W_STR2 = Mid$(W_SPTXT, W_POS, W_LEN)
              End If
              If Len(W_SPTXT) - W_POS - W_LEN + 1 > 0 Then
                 If RE.Pattern = "$" Then
                    W_STR3 = ""
                 Else
                    W_STR3 = Right$(W_SPTXT, Len(W_SPTXT) - W_POS - W_LEN + 1)
                 End If
              Else
                 W_STR3 = ""
              End If
              
              SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
              If SW_SPREP = True Then
                 W_STR2 = W_REPTXT
              Else
                 If SW_NR = False Then
                    W_STR2 = RE.Replace(W_STR2 & W_STR3, REPSTRCNV(Me.ComboBox14.Value))
                    W_STR2 = Left$(W_STR2, Len(W_STR2) - Len(W_STR3))
                 Else
                    W_STR2 = W_RS
                 End If
                 
                 W_LEN = Len(W_STR2)
              End If
              ReDim Preserve AR_LEN(W_J)
              AR_LEN(W_J) = W_LEN
              W_SPTXT = W_STR1 & W_STR2 & W_STR3
              W_ST = W_POS + W_LEN
           Else
              W_ST = W_ST + W_LN
           End If
        Next N
        W_REPTXT = W_STR1 & W_STR2 & W_STR3
        Set MATCHES = Nothing
        RE.Global = True
        
        '|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A
        On Error Resume Next
        If SHP.DrawingObject.Formula <> "" Then
           SHP.DrawingObject.Formula = ""
        End If
        On Error GoTo 0
        Do While SHP.TextFrame.Characters.count > 0 And _
                 SHP.TextFrame.Characters.text <> vbLf
           If SHP.TextFrame.Characters.count > 255 Then
              W_BYTE = 255
           Else
              W_BYTE = SHP.TextFrame.Characters.count
           End If
           SHP.TextFrame.Characters(1, W_BYTE).text = ""
        Loop
           
        '|fffd|u|fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
        If Val(Application.Version) >= 12 Then
           SHP.TextFrame.Characters.text = W_REPTXT
        Else
           For N = 0 To Int(Len(W_REPTXT) / 255)
              W_ST = N * 255 + 1
              If (N + 1) * 255 <= Len(W_REPTXT) Then
                 W_BYTE = 255
              Else
                 W_BYTE = Len(W_REPTXT) - N * 255
              End If
              SHP.TextFrame.Characters(W_ST, W_BYTE).text = Mid$(W_REPTXT, W_ST, W_BYTE)
              If (N + 1) * 255 = Len(W_REPTXT) Then
                 Exit For
              End If
           Next N
        End If
           
        If SW_CLRKEEP = True Then
           Call KEEP_DC_SP(SHP, 1, W_SPDCB, SW_DCB2)
           Call KEEP_DC_SP(SHP, 2, W_SPDCI, SW_DCI2)
           Call KEEP_DC_SP(SHP, 3, W_SPDCU, SW_DCU2)
           Call KEEP_DC_SP(SHP, 4, W_SPDCK, SW_DCK2)
           Call KEEP_DC_SP(SHP, 5, W_SPCLR, SW_DCC2)
        End If
     End If
     
     If Val(Application.Version) >= 15 Then
        If SW_GHO = False Then
           Application.ScreenUpdating = False
        End If
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
           FR = .Cells(.Rows.count, 2).End(xlUp).Row
        End With
     End If
     
     FR = FR + 1
     If W_ZPATH = "" Then
        If Me.CheckBox64.Value = False Then
           W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
           Set WB = Workbooks(Workbooks.count)
        Else
           If Workbooks(W_GBNAME).path = "" Then
              W_FRBPATH = Workbooks(W_GBNAME).Name
           Else
              W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
           End If
           Set WB = Workbooks(W_GBNAME)
        End If
     Else
        W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
        W_PATH = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(W_TEMP) - 1)
        W_PATH = Right$(W_PATH, Len(W_PATH) - InStr(W_PATH, "\"))
        W_FRBPATH = W_ZPATH & "\" & W_PATH
        Set WB = Workbooks(Workbooks.count)
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
     Else
        Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
     End If
     
     If SW_GREPREP = True Then
        W_OBJ.Cells(FR, 1).Value = FR - 6
     Else
        W_OBJ.Cells(FR, 1).Value = FR - 5
     End If
     If Me.CheckBox64.Value = False Then
        W_OBJ.Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox20.Value) - 1)
     Else
        W_OBJ.Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
     End If
     W_OBJ.Cells(FR, 3).Value = WB.Sheets(S).Name
     W_OBJ.Cells(FR, 4).Value = SHP.Name
     If SW_GREPREP = False Then
        If Me.CheckBox32.Value = True Then
           W_SPTXT = W_SPTXTBK
        End If
        W_OBJ.Cells(FR, 5).Value = W_SPTXT
     Else
        If ActiveWorkbook.ReadOnly = True Then
           W_OBJ.Cells(FR, 5).Value = W_SPTXT
           W_OBJ.Cells(FR, 5).Interior.ColorIndex = 3
        Else
           W_OBJ.Cells(FR, 5).Value = W_REPTXT
        End If
     End If
     If W_ZPATH = "" Then
        If InStr(W_FRBPATH, "\") > 0 Then
           If TypeName(WB.Sheets(S)) = "Worksheet" Then
              ADDR = "'" & WB.Sheets(S).Name & "'!" & Range(SHP.TopLeftCell, SHP.BottomRightCell).Address
              On Error Resume Next
              W_OBJ.Parent.ActiveSheet.Hyperlinks.Add W_OBJ.Cells(FR, 5), W_FRBPATH, ADDR
              On Error GoTo 0
           Else
              On Error Resume Next
              W_OBJ.Parent.ActiveSheet.Hyperlinks.Add W_OBJ.Cells(FR, 5), W_FRBPATH
              On Error GoTo 0
           End If
        Else
           If TypeName(WB.Sheets(S)) = "Worksheet" Then
              ADDR = "'[" & W_FRBPATH & "]" & WB.Sheets(S).Name & "'!" & Range(SHP.TopLeftCell, SHP.BottomRightCell).Address
              On Error Resume Next
              W_OBJ.Parent.ActiveSheet.Hyperlinks.Add W_OBJ.Cells(FR, 5), "", ADDR
              On Error GoTo 0
           End If
        End If
     End If
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     Else
        W_OBJ.Range(W_OBJ.Cells(FR, 1), W_OBJ.Cells(FR, 5)).Borders.LineStyle = True
     End If
     
     Set W_OBJ = Nothing
     Set XL1 = Nothing
     
     If SW_ACEXE = True And _
        W_PROMTH <> "" Then
        Call ADDCMD_EXEC(SHP, 1)
     End If
     If W_SHPCNT = WB.Sheets(S).Shapes.count Then
        If SW_ACEXE2 = True And _
           W_PROMTH2 <> "" Then
           Call ADDCMD_EXEC(SHP, 2)
        End If
     End If
     If W_SHPCNT = WB.Sheets(S).Shapes.count Then
        If SW_ACEXE3 = True And _
           W_PROMTH3 <> "" Then
           Call ADDCMD_EXEC(SHP, 3)
        End If
     End If
     If W_SHPCNT > WB.Sheets(S).Shapes.count Then
        M = M - 1
        W_SHPCNT = W_SHPCNT - 1
     End If
     
     Set WB = Nothing
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf SW_GHO = False Then
        Workbooks(W_FRB).Activate
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013S2
        End If
        Application.ScreenUpdating = True
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
        If Val(Application.Version) >= 15 Then
        Else
           Application.ScreenUpdating = False
        End If
        If Me.CheckBox64.Value = False Then
           Workbooks(Workbooks.count).Activate
        Else
           Workbooks(W_GBNAME).Activate
        End If
     End If
                            
     W_CNTFA = W_CNTFA + 1
     W_CNTFA2 = W_CNTFA2 + 1
     If SW_GREPREP = True Then
        W_CNTRA = W_CNTRA + 1
     End If
  End If

End Sub

Private Sub READ_IDX(ByVal SW_SHP As Boolean)

  Dim W_IDX As String
  Dim W_STR As String
  Dim I As Long
  
  
  Erase AR_IDX
  If SW_SHP = False Then
     W_IDX = ThisWorkbook.path & "\exp.idx"
  Else
     W_IDX = ThisWorkbook.path & "\exp_s.idx"
  End If
  I = 0
  
  If Dir(W_IDX) <> "" Then
     Open W_IDX For Input As #1
  
     Do While Not EOF(1)
        Line Input #1, W_STR
        I = I + 1
        ReDim Preserve AR_IDX(I)
        AR_IDX(I) = W_STR
     Loop

     Close #1
  End If
  
  W_IDX_N = I

End Sub

Private Sub READ_IDX2()

  Dim W_IDX As String
  Dim W_STR As String
  Dim I As Long
  
  
  Erase AR_IDX2
  W_IDX = ThisWorkbook.path & "\exp_s.idx"
  I = 0
  
  If Dir(W_IDX) <> "" Then
     Open W_IDX For Input As #1
  
     Do While Not EOF(1)
        Line Input #1, W_STR
        I = I + 1
        ReDim Preserve AR_IDX2(I)
        AR_IDX2(I) = W_STR
     Loop

     Close #1
  End If
  
  W_IDX2_N = I

End Sub

Private Function JUDGE_IDX(ByVal W_PATH As String, ByVal W_TS As String, ByVal SW_NRML As Boolean) As String

  Dim I As Long
  Dim SW_IDXEX As Boolean
  Dim W_KEYWD As String
  Dim AR_WK As Variant
  Dim AR_KEY As Variant
  Dim J As Long
  Dim K As Long
  Dim SW_HITA As Boolean
  Dim SW_HIT As Boolean
 

  JUDGE_IDX = ""

  If W_IDX_N > 0 Then
     If W_IDX_N <= 65536 Then
        I = 0
        On Error Resume Next
        I = Application.Match(W_PATH & Chr$(1) & "*", AR_IDX, 0)
        On Error GoTo 0
     Else
        SW_IDXEX = False
        For I = 1 To UBound(AR_IDX)
           If Left$(AR_IDX(I), Len(W_PATH) + 1) = W_PATH & Chr$(1) Then
              SW_IDXEX = True
              Exit For
           End If
        Next I
        If SW_IDXEX = False Then
           I = 0
        End If
     End If
  
     If I > 0 Then
        AR_WK = Split(AR_IDX(I), Chr$(1))
        If AR_WK(1) = W_TS Then
           If SW_NRML = True Then
              W_KEYWD = Me.ComboBox1.Value
           Else
              W_KEYWD = W_NMLCHK
           End If
           AR_KEY = Split(W_KEYWD, vbTab)
           
           SW_HITA = True
           For J = 0 To UBound(AR_KEY)
              SW_HIT = False
              For K = 2 To UBound(AR_WK) - 1
                 If InStr(AR_KEY(J), AR_WK(K)) > 0 Then
                    SW_HIT = True
                    Exit For
                 End If
              Next K
              If SW_HIT = False Then
                 SW_HITA = False
                 Exit For
              End If
           Next J
           
           If SW_HITA = True Then
              JUDGE_IDX = "N"
           Else
              JUDGE_IDX = "U"
           End If
        Else
           JUDGE_IDX = "D"
        End If
     Else
        JUDGE_IDX = "A"
     End If
  Else
     JUDGE_IDX = "A"
  End If

End Function

Private Function JUDGE_IDX2(ByVal W_PATH As String, ByVal W_TS As String, ByVal SW_NRML As Boolean) As String

  Dim I As Long
  Dim SW_IDXEX As Boolean
  Dim W_KEYWD As String
  Dim AR_WK As Variant
  Dim AR_KEY As Variant
  Dim J As Long
  Dim K As Long
  Dim SW_HITA As Boolean
  Dim SW_HIT As Boolean
 

  JUDGE_IDX2 = ""

  If W_IDX2_N > 0 Then
     If W_IDX2_N <= 65536 Then
        I = 0
        On Error Resume Next
        I = Application.Match(W_PATH & Chr$(1) & "*", AR_IDX2, 0)
        On Error GoTo 0
     Else
        SW_IDXEX = False
        For I = 1 To UBound(AR_IDX2)
           If Left$(AR_IDX2(I), Len(W_PATH) + 1) = W_PATH & Chr$(1) Then
              SW_IDXEX = True
              Exit For
           End If
        Next I
        If SW_IDXEX = False Then
           I = 0
        End If
     End If
  
     If I > 0 Then
        AR_WK = Split(AR_IDX2(I), Chr$(1))
        If AR_WK(1) = W_TS Then
           If SW_NRML = True Then
              W_KEYWD = Me.ComboBox1.Value
           Else
              W_KEYWD = W_NMLCHK
           End If
           AR_KEY = Split(W_KEYWD, vbTab)
           
           SW_HITA = True
           For J = 0 To UBound(AR_KEY)
              SW_HIT = False
              For K = 2 To UBound(AR_WK) - 1
                 If InStr(AR_KEY(J), AR_WK(K)) > 0 Then
                    SW_HIT = True
                    Exit For
                 End If
              Next K
              If SW_HIT = False Then
                 SW_HITA = False
                 Exit For
              End If
           Next J
           
           If SW_HITA = True Then
              JUDGE_IDX2 = "N"
           Else
              JUDGE_IDX2 = "U"
           End If
        Else
           JUDGE_IDX2 = "D"
        End If
     Else
        JUDGE_IDX2 = "A"
     End If
  Else
     JUDGE_IDX2 = "A"
  End If

End Function

Private Sub WRITE_IDX(ByVal SW_NRML As Boolean, ByVal SW_SHP As Boolean)

  Dim W_MAXR As Long
  Dim W_PATH As String
  Dim W_TS As String
  Dim W_IDXDO As String
  Dim W_KEYWD As String
  Dim I As Long
  Dim SW_IDXEX As Boolean
  Dim AR_WK As Variant
  Dim W_IDX As String
  Dim W_STR As String
  Dim AR_KEY As Variant
  Dim J As Long
  Dim K As Long
  Dim SW_HIT As Boolean


  If SW_NRML = True Then
     W_KEYWD = Me.ComboBox1.Value
  Else
     W_KEYWD = W_NMLCHK
  End If

  AR_KEY = Split(W_KEYWD, vbTab)

  With Workbooks(W_FRB).Worksheets(W_MAXP + 3)
     If .Cells(1, 1).Value = "" Then
        W_MAXR = 0
     Else
        If .Cells(2, 1).Value = "" Then
           W_MAXR = 1
        Else
           W_MAXR = .Cells(1, 1).End(xlDown).Row
        End If
     End If

     For R = 1 To W_MAXR
        W_PATH = .Cells(R, 1).Value
        W_TS = .Cells(R, 3).Value
        W_IDXDO = .Cells(R, 5).Value
        If W_IDXDO = "A" Then
           W_IDX_N = W_IDX_N + 1
           ReDim Preserve AR_IDX(W_IDX_N)
           AR_IDX(W_IDX_N) = W_PATH & Chr$(1) & W_TS & Chr$(1)
           For J = 0 To UBound(AR_KEY)
              AR_IDX(W_IDX_N) = AR_IDX(W_IDX_N) & AR_KEY(J) & Chr$(1)
           Next J
        Else
           If W_IDX_N <= 65536 Then
              I = 0
              On Error Resume Next
              I = Application.Match(W_PATH & Chr$(1) & "*", AR_IDX, 0)
              On Error GoTo 0
           Else
              SW_IDXEX = False
              For I = 1 To UBound(AR_IDX)
                 If Left$(AR_IDX(I), Len(W_PATH) + 1) = W_PATH & Chr$(1) Then
                    SW_IDXEX = True
                    Exit For
                 End If
              Next I
              If SW_IDXEX = False Then
                 I = 0
              End If
           End If
           
           If I > 0 Then
              Select Case W_IDXDO
              Case "D"
                 AR_IDX(I) = ""
              Case "R"
                 AR_IDX(I) = W_PATH & Chr$(1) & W_TS & Chr$(1)
                 For J = 0 To UBound(AR_KEY)
                    AR_IDX(I) = AR_IDX(I) & AR_KEY(J) & Chr$(1)
                 Next J
              Case "U"
                 AR_WK = Split(AR_IDX(I), Chr$(1))
                 For J = 0 To UBound(AR_KEY)
                    SW_HIT = False
                    For K = 2 To UBound(AR_WK) - 1
                       If InStr(AR_WK(K), AR_KEY(J)) > 0 Then
                          If Len(AR_KEY(J)) < Len(AR_WK(K)) Then
                             AR_WK(K) = AR_KEY(J)
                          End If
                          SW_HIT = True
                          Exit For
                       End If
                    Next K
                    If SW_HIT = False Then
                       AR_WK(UBound(AR_WK)) = AR_KEY(J)
                       AR_IDX(I) = Join$(AR_WK, Chr$(1)) & Chr$(1)
                       AR_WK = Split(AR_IDX(I), Chr$(1))
                    End If
                 Next J
                 AR_IDX(I) = Join$(AR_WK, Chr$(1))
              End Select
           End If
        End If
     Next R
  End With
  
  If SW_SHP = False Then
     W_IDX = ThisWorkbook.path & "\exp.idx"
  Else
     W_IDX = ThisWorkbook.path & "\exp_s.idx"
  End If
  Open W_IDX For Output As #1
  
  For I = 1 To W_IDX_N
     If AR_IDX(I) <> "" Then
        Print #1, AR_IDX(I)
     End If
  Next I

  Close #1
  Erase AR_IDX

End Sub

Private Sub WRITE_IDX2(ByVal SW_NRML As Boolean)

  Dim W_MAXR As Long
  Dim W_PATH As String
  Dim W_TS As String
  Dim W_IDXDO As String
  Dim W_KEYWD As String
  Dim I As Long
  Dim SW_IDXEX As Boolean
  Dim AR_WK As Variant
  Dim W_IDX As String
  Dim W_STR As String
  Dim AR_KEY As Variant
  Dim J As Long
  Dim K As Long
  Dim SW_HIT As Boolean


  If SW_NRML = True Then
     W_KEYWD = Me.ComboBox1.Value
  Else
     W_KEYWD = W_NMLCHK
  End If

  AR_KEY = Split(W_KEYWD, vbTab)

  With Workbooks(W_FRB).Worksheets(W_MAXP + 3)
     If .Cells(1, 1).Value = "" Then
        W_MAXR = 0
     Else
        If .Cells(2, 1).Value = "" Then
           W_MAXR = 1
        Else
           W_MAXR = .Cells(1, 1).End(xlDown).Row
        End If
     End If

     For R = 1 To W_MAXR
        W_PATH = .Cells(R, 1).Value
        W_TS = .Cells(R, 3).Value
        W_IDXDO = .Cells(R, 6).Value
        If W_IDXDO = "A" Then
           W_IDX2_N = W_IDX2_N + 1
           ReDim Preserve AR_IDX2(W_IDX2_N)
           AR_IDX2(W_IDX2_N) = W_PATH & Chr$(1) & W_TS & Chr$(1)
           For J = 0 To UBound(AR_KEY)
              AR_IDX2(W_IDX2_N) = AR_IDX2(W_IDX2_N) & AR_KEY(J) & Chr$(1)
           Next J
        Else
           If W_IDX2_N <= 65536 Then
              I = 0
              On Error Resume Next
              I = Application.Match(W_PATH & Chr$(1) & "*", AR_IDX2, 0)
              On Error GoTo 0
           Else
              SW_IDXEX = False
              For I = 1 To UBound(AR_IDX2)
                 If Left$(AR_IDX2(I), Len(W_PATH) + 1) = W_PATH & Chr$(1) Then
                    SW_IDXEX = True
                    Exit For
                 End If
              Next I
              If SW_IDXEX = False Then
                 I = 0
              End If
           End If
           
           If I > 0 Then
              Select Case W_IDXDO
              Case "D"
                 AR_IDX2(I) = ""
              Case "R"
                 AR_IDX2(I) = W_PATH & Chr$(1) & W_TS & Chr$(1)
                 For J = 0 To UBound(AR_KEY)
                    AR_IDX2(I) = AR_IDX2(I) & AR_KEY(J) & Chr$(1)
                 Next J
              Case "U"
                 AR_WK = Split(AR_IDX2(I), Chr$(1))
                 For J = 0 To UBound(AR_KEY)
                    SW_HIT = False
                    For K = 2 To UBound(AR_WK) - 1
                       If InStr(AR_WK(K), AR_KEY(J)) > 0 Then
                          If Len(AR_KEY(J)) < Len(AR_WK(K)) Then
                             AR_WK(K) = AR_KEY(J)
                          End If
                          SW_HIT = True
                          Exit For
                       End If
                    Next K
                    If SW_HIT = False Then
                       AR_WK(UBound(AR_WK)) = AR_KEY(J)
                       AR_IDX2(I) = Join$(AR_WK, Chr$(1)) & Chr$(1)
                       AR_WK = Split(AR_IDX2(I), Chr$(1))
                    End If
                 Next J
                 AR_IDX2(I) = Join$(AR_WK, Chr$(1))
              End Select
           End If
        End If
     Next R
  End With
  
  W_IDX = ThisWorkbook.path & "\exp_s.idx"
  Open W_IDX For Output As #1
  
  For I = 1 To W_IDX2_N
     If AR_IDX2(I) <> "" Then
        Print #1, AR_IDX2(I)
     End If
  Next I

  Close #1
  Erase AR_IDX2

End Sub

Sub GREPW(ByVal W_DIR As String)

  Dim WD As Object
  Dim DC As Object

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  Dim K As Long
  Dim J As Long
  Dim L As Long
  Dim T As Long
    
  Dim FSO As Object
  Dim FL As Object
  
  Dim AR_PASS As Variant
  Dim SW_PASS As Boolean
  Dim AR_WK As Variant
  
  Dim SW_AOP As Boolean
  Dim W_STR As String
  Dim SW_TEST As Boolean
  Dim MAXJ As Long
  Dim MATCHES As Object
  Dim AR_STR As Variant
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_VAL As String

  Dim W_PC As Long

  Dim W_STR0 As String
  Dim W_ST1 As Long
  Dim W_STR1 As String
  Dim W_ED2 As Long
  Dim W_STR2 As String
  Dim W_LN1 As Long
  Dim W_LN2 As Long


  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  With FSO.GetFolder(W_DIR)
     For Each FL In .SubFolders
        I = I + 1
        ReDim Preserve AR_PATH(I)
        AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
     Next
  
     For Each FL In .Files
        W_FLNM = FL.Name
        If W_FLNM Like W_FFILE Or _
           W_FLNM Like W_FFILE2 Then
           If Left$(W_FLNM, 2) = "~$" Then
           Else
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & W_FLNM
           End If
        End If
     Next
  End With
  
  Set FSO = Nothing
     
  For I = 2 To UBound(AR_PATH)
     If Right$(AR_PATH(I), 1) = "\" Then
        If Me.CheckBox16.Value = True Then
           Call GREPW(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1))
        End If
     Else
        'OPEN
        SW_AOP = False
                
        Application.DisplayAlerts = False

        SW_PASS = False
        L = -1
              
        On Error GoTo LABEL_ERROR
        If WD Is Nothing Then
           Set WD = CreateObject("Word.Application")
        End If
           
        WD.DisplayAlerts = False
           
        Set DC = WD.Documents.Open(Filename:=AR_PATH(I), PasswordDocument:="", ReadOnly:=True)

LABEL_PASS:
        If SW_PASS = True Then
           L = L + 1
           Do While AR_PASS(L) = "" And _
                    L < UBound(AR_PASS)
              L = L + 1
           Loop
           Err.Clear
           Set DC = WD.Documents.Open(Filename:=AR_PATH(I), PasswordDocument:=AR_PASS(L), ReadOnly:=True)
        End If
              
        On Error GoTo 0
        WD.DisplayAlerts = True
        Application.DisplayAlerts = True

        If Val(Application.Version) >= 15 Then
           Application.ScreenUpdating = False
        End If
              
        With DC
           For K = 1 To .Paragraphs.count
              If .Paragraphs(K).Range.text <> "" Then
                 W_STR = .Paragraphs(K).Range.text
                 
                 If SW_NR = False Then
                    SW_TEST = RE.Test(W_STR)
                 Else
                    SW_TEST = NRTEST(NRE, W_STR)
                 End If
        
                 If SW_TEST = True Then
                    If SW_NR = False Then
                       Set MATCHES = RE.Execute(W_STR)
                       MAXJ = MATCHES.count - 1
                    Else
                       AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
                       MAXJ = UBound(AR_STR)
                    End If
                      
                    For J = 0 To MAXJ
                       '|fffd||fffd|~
                       DoEvents
                       If SW_STOP = True Then
                          Exit For
                       End If
                       
                       If SW_NR = False Then
                          W_POS = MATCHES.Item(J).FirstIndex
                          W_LEN = MATCHES.Item(J).Length
                          W_VAL = MATCHES.Item(J).Value
                       Else
                          AR_WK = Split(AR_STR(J), vbTab)
                          W_POS = CLng(AR_WK(0))
                          W_LEN = CLng(AR_WK(1))
                          W_VAL = Mid$(W_STR, W_POS + 1, W_LEN)
                       End If
                       
                       FR = FR + 1
                       Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Value = FR - 5
                       Workbooks(W_FRB).Worksheets(1).Cells(FR, 2).Value = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
                       Workbooks(W_FRB).Worksheets(1).Hyperlinks.Add Workbooks(W_FRB).Worksheets(1).Cells(FR, 2), AR_PATH(I)
                       Workbooks(W_FRB).Worksheets(1).Cells(FR, 4).Value = .Range(.Paragraphs(K).Range.Start + W_POS, .Paragraphs(K).Range.Start + W_POS + W_LEN).Information(3)
                       
                       If W_POS > 0 Then
                          If .Paragraphs(K).Range.Start + W_POS - 5 < .Paragraphs(K).Range.Start Then
                             W_ST1 = .Paragraphs(K).Range.Start
                          Else
                             W_ST1 = .Paragraphs(K).Range.Start + W_POS - 5
                          End If
                          W_STR1 = .Range(W_ST1, .Paragraphs(K).Range.Start + W_POS).text
                       Else
                          W_STR1 = ""
                       End If
                       If .Paragraphs(K).Range.Start + W_POS + W_LEN < .Paragraphs(K).Range.End Then
                          If .Paragraphs(K).Range.Start + W_POS + W_LEN + 5 < .Paragraphs(K).Range.End Then
                             W_ED2 = .Paragraphs(K).Range.Start + W_POS + W_LEN + 5
                          Else
                             W_ED2 = .Paragraphs(K).Range.End
                          End If
                          W_STR2 = .Range(.Paragraphs(K).Range.Start + W_POS + W_LEN, W_ED2).text
                       Else
                          W_STR2 = ""
                       End If
                       Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = W_STR1 & W_VAL & W_STR2
                       Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Characters(Len(W_STR1) + 1, W_LEN).Font.ColorIndex = 3
                       Workbooks(W_FRB).Worksheets(1).Range(Workbooks(W_FRB).Worksheets(1).Cells(FR, 1), Workbooks(W_FRB).Worksheets(1).Cells(FR, 5)).Borders.LineStyle = True
                    Next J
                    Set MATCHES = Nothing
                 End If
              End If
              DoEvents
              If SW_STOP = True Then
                 Exit For
              End If
           Next K
           DoEvents
           If SW_STOP = True Then
              GoTo L_CLOSE
           End If
        
           If Me.ToggleButton11.Value = False Then
              GoTo L_CLOSE
           End If
        
           For T = 1 To .Shapes.count
              If .Shapes(T).Type = msoGroup Then
                 Call SHP_UNGRPW(.Shapes(T))
              End If
           Next T
        
           For T = 1 To .Shapes.count
              If .Shapes(T).Type = msoGroup Then
                  GoTo L_NEXT
              End If
              W_PC = 0
              On Error Resume Next
              W_PC = .Shapes(T).TextFrame.TextRange.Paragraphs.count
              On Error GoTo 0
              If W_PC = 0 Then
                 GoTo L_NEXT
              End If
              If .Shapes(T).TextFrame.TextRange.text <> "" Then
                 W_STR0 = .Shapes(T).TextFrame.TextRange.text
                 For K = 1 To .Shapes(T).TextFrame.TextRange.Paragraphs.count
                    If .Shapes(T).TextFrame.TextRange.Paragraphs(K).Range.text <> "" Then
                       W_STR = .Shapes(T).TextFrame.TextRange.Paragraphs(K).Range.text
                       
                       If SW_NR = False Then
                          SW_TEST = RE.Test(W_STR)
                       Else
                          SW_TEST = NRTEST(NRE, W_STR)
                       End If
          
                       If SW_TEST = True Then
                          If SW_NR = False Then
                             Set MATCHES = RE.Execute(W_STR)
                             MAXJ = MATCHES.count - 1
                          Else
                             AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
                             MAXJ = UBound(AR_STR)
                          End If
                      
                          For J = 0 To MAXJ
                            '|fffd||fffd|~
                             DoEvents
                             If SW_STOP = True Then
                                Exit For
                             End If
                             
                             If SW_NR = False Then
                                W_POS = MATCHES.Item(J).FirstIndex
                                W_LEN = MATCHES.Item(J).Length
                                W_VAL = MATCHES.Item(J).Value
                             Else
                                AR_WK = Split(AR_STR(J), vbTab)
                                W_POS = CLng(AR_WK(0))
                                W_LEN = CLng(AR_WK(1))
                                W_VAL = Mid$(W_STR, W_POS + 1, W_LEN)
                             End If
                       
                             FR = FR + 1
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Value = FR - 5
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 2).Value = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
                             Workbooks(W_FRB).Worksheets(1).Hyperlinks.Add Workbooks(W_FRB).Worksheets(1).Cells(FR, 2), AR_PATH(I)
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 3).Value = .Shapes(T).Name
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 4).Value = .Shapes(T).TextFrame.TextRange.Information(3)
                             
                             With .Shapes(T).TextFrame.TextRange
                                If W_POS > 0 Then
                                   If .Paragraphs(K).Range.Start + W_POS - 5 < .Paragraphs(K).Range.Start Then
                                      W_ST1 = .Paragraphs(K).Range.Start + 1
                                      W_LN1 = W_POS
                                   Else
                                      W_ST1 = .Paragraphs(K).Range.Start + W_POS - 4
                                      W_LN1 = 5
                                   End If
                                   W_STR1 = Mid$(W_STR0, W_ST1, W_LN1)
                                Else
                                   W_STR1 = ""
                                End If
                                If .Paragraphs(K).Range.Start + W_POS + W_LEN < .Paragraphs(K).Range.End Then
                                   If .Paragraphs(K).Range.Start + W_POS + W_LEN + 5 < .Paragraphs(K).Range.End Then
                                      W_LN2 = 5
                                   Else
                                      W_LN2 = .Paragraphs(K).Range.End - .Paragraphs(K).Range.Start - W_POS - W_LEN
                                   End If
                                   W_STR2 = Mid$(W_STR0, .Paragraphs(K).Range.Start + W_POS + W_LEN + 1, W_LN2)
                                Else
                                   W_STR2 = ""
                                End If
                             End With
                             
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Value = W_STR1 & W_VAL & W_STR2
                             Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Characters(Len(W_STR1) + 1, W_LEN).Font.ColorIndex = 3
                             Workbooks(W_FRB).Worksheets(1).Range(Workbooks(W_FRB).Worksheets(1).Cells(FR, 1), Workbooks(W_FRB).Worksheets(1).Cells(FR, 5)).Borders.LineStyle = True
                          Next J
                          Set MATCHES = Nothing
                          DoEvents
                          If SW_STOP = True Then
                             Exit For
                          End If
                       End If
                    End If
                 Next K
                 DoEvents
                 If SW_STOP = True Then
                    Exit For
                 End If
              End If
L_NEXT:
           Next T
        End With
        
L_CLOSE:
        'CLOSE
        DC.Close False
        Set DC = Nothing
     End If
     DoEvents
     If SW_STOP = True Then
        Exit For
     End If

LABEL_NEXT:
  
  Next I

  If WD Is Nothing Then
  Else
     WD.Quit
  End If
  Set WD = Nothing

  Exit Sub

LABEL_ERROR:
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  W_FCNT = W_FCNT - 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
  Resume LABEL_NEXT

End Sub

Sub GREP(ByVal W_DIR As String, ByVal SW_GREPREP As Boolean, ByVal SW_UNZIP As Boolean, ByVal SW_NRML As Boolean)

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  Dim K As Long
  Dim J As Long
  Dim L As Long
    
  Dim SW_1ST As Long
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  Dim SW_FIND As Boolean
  Dim SW_AOP As Boolean
  Dim W_BNAME As String
  Dim W_BKNAME As String
  Dim W_CNTRA2BK As Long
  
  Dim FSO As Object
  Dim FL As Object
  
  Dim W_TEMP As String
  Dim W_ZNAME As String
  Dim W_ZDIR As String
  Dim SA As Object
  Dim FILE As Object
  Dim DEST As Object
  Dim SW_ZIP As Boolean
  
  Dim W_SVIDX As Long
  
  Dim W_IGNAME As String
  Dim SW_ASE As Boolean
  
  Dim XL1 As Object
  Dim WB As Workbook
  
  Dim W_GREPC As String
  Dim W_CELN As Variant
  
  
  Dim AR_PASS As Variant
  Dim SW_PASS As Boolean
  Dim AR_WK As Variant
  
  Dim SW_REPEAT As Boolean
  Dim SW_LEFT As Boolean
  
  Dim SW_ALLNE As Boolean
  Dim W_TS As String
  Dim W_IDXDO As String
  
  Dim SW_ALLNE2 As Boolean
  Dim W_IDXDO2 As String
  
  Dim W_CNTFA2 As Long
  Dim W_CNTRABK As Long
  Dim W_SHPCNT As Long
  Dim M As Long
  Dim W_ID As Long
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  If Me.CheckBox62.Value = False Then
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        XL1.ScreenUpdating = False
        XL1.EnableEvents = False
        On Error Resume Next
        XL1.Calculation = xlCalculationManual
        On Error GoTo 0
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
           If .Cells(1, 1).Value <> "" Then
              If .Cells(2, 1).Value = "" Then
                 ReDim AR_PATH(2)
                 AR_PATH(2) = .Cells(1, 1).Value
              Else
                 AR_WK = .Range(.Cells(1, 1), .Cells(.Cells(1, 1).End(xlDown).Row, 1)).Value
                 ReDim Preserve AR_PATH(UBound(AR_WK, 1) + 1)
                 For I = 2 To UBound(AR_PATH)
                    AR_PATH(I) = AR_WK(I - 1, 1)
                 Next I
              End If
           End If
        End With
     Else
        With FSO.GetFolder(W_DIR)
           For Each FL In .SubFolders
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
           Next
  
           For Each FL In .Files
              W_FLNM = FL.Name
              If W_FLNM Like W_FFILE Or _
                 W_FLNM Like W_FFILE2 Or _
                 W_FLNM Like W_FFILE3 Then
                 If Left$(W_FLNM, 2) = "~$" Then
                 Else
                    If W_FLNM Like W_FFILE3 Then
                       If SW_UNZIP = False And _
                          SW_GREPREP = False And _
                          Me.CheckBox60.Value = True Then
                          I = I + 1
                          ReDim Preserve AR_PATH(I)
                          AR_PATH(I) = W_DIR & "\" & W_FLNM & "\"
                       End If
                    Else
                       I = I + 1
                       ReDim Preserve AR_PATH(I)
                       AR_PATH(I) = W_DIR & "\" & W_FLNM
                    End If
                 End If
              End If
           Next
        End With
     End If
  Else
     For Each FL In Workbooks
        If FL.Name <> Workbooks(W_FRB).Name Then
           I = I + 1
           ReDim Preserve AR_PATH(I)
           AR_PATH(I) = FL.path & "\" & FL.Name
        End If
     Next
  End If
  
  W_TEMP = FSO.GetSpecialFolder(2)
  
  Set FSO = Nothing
     
L_START:
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     SW_LEFT = False
  End If
     
  For I = 2 To UBound(AR_PATH)
     If SW_HSGREP = True And _
        W_PNO > 0 And _
        W_DIR = Me.ComboBox18.Value Then
        If SW_REPEAT = False Then
           If I Mod W_MAXP = W_MAXP - W_PNO Then
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 If .Cells(I - 1, 4).Value = "" Then
                    .Cells(I - 1, 4).Value = W_PNO
                    If SW_NRML = False And _
                       W_NMLCHK = "" Then
                    Else
                       W_TS = .Cells(I - 1, 3).Value
                    End If
                    SW_LEFT = True
                 Else
                    GoTo LABEL_NEXT
                 End If
              End With
           Else
              GoTo LABEL_NEXT
           End If
        Else
           With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
              If .Cells(I - 1, 4).Value = "" Then
                 .Cells(I - 1, 4).Value = W_PNO
                 If SW_NRML = False And _
                    W_NMLCHK = "" Then
                 Else
                    W_TS = .Cells(I - 1, 3).Value
                 End If
                 SW_LEFT = True
              Else
                 GoTo LABEL_NEXT
              End If
           End With
        End If
     End If
     
     If SW_UNZIP = False Then
        SW_ZIP = False
        If W_ZPATH <> "" Then
           Set FSO = CreateObject("Scripting.FileSystemObject")
           If FSO.FolderExists(W_UZPATH) Then
              FSO.DeleteFolder W_UZPATH, True
           End If
           Set FSO = Nothing
        End If
        W_ZPATH = ""
     Else
        SW_ZIP = True
     End If
     If Right$(AR_PATH(I), 1) = "\" Then
        If Right$(AR_PATH(I), 5) = ".zip\" Then
           AR_PATH(I) = Left$(AR_PATH(I), Len(AR_PATH(I)) - 1)
           L = 1
           Do While InStr(L, AR_PATH(I), "\") > 0
              L = InStr(L, AR_PATH(I), "\") + 1
           Loop
           L = L - 1
           W_ZNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
           W_ZNAME = Left$(W_ZNAME, Len(W_ZNAME))
           W_ZDIR = W_TEMP & "\" & W_ZNAME
           
           Set FSO = CreateObject("Scripting.FileSystemObject")
           If FSO.FolderExists(W_ZDIR) Then
              FSO.DeleteFolder W_ZDIR, True
           End If
           FSO.CreateFolder W_ZDIR
           Set FSO = Nothing
           
           W_ZDIR = W_ZDIR & "\"
           Set SA = CreateObject("Shell.Application")
           Set FILE = SA.NameSpace(CVar(AR_PATH(I)))
           Set DEST = SA.NameSpace(CVar(W_ZDIR))
           DEST.CopyHere FILE.Items, 1028
           Set FILE = Nothing
           Set DEST = Nothing
           Set SA = Nothing
           
           W_UZPATH = Left$(W_ZDIR, Len(W_ZDIR) - 1)
           W_ZPATH = AR_PATH(I)
           AR_PATH(I) = W_ZDIR
           SW_ZIP = True
        End If
        
        If Me.CheckBox16.Value = True Then
           Call GREP(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1), SW_GREPREP, SW_ZIP, SW_NRML)
        End If
     Else
        If SW_HSGREP = True And _
           W_PNO > 0 Then
           If SW_NRML = False And _
              W_NMLCHK = "" Then
           ElseIf Me.CheckBox3.Value = True Then
           ElseIf Me.CheckBox32.Value = True And _
                  SW_GREPREP = False Then
           Else
              W_IDXDO = JUDGE_IDX(AR_PATH(I), W_TS, SW_NRML)
              If W_IDXDO = "N" Then
                 With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                    .Cells(I - 1, 5).Value = "N"
                 End With
                 If Me.ToggleButton11.Value = False Then
                    GoTo LABEL_NEXT
                 End If
              End If
           End If
           
           If Me.ToggleButton11.Value = True Then
              If SW_NRML = False And _
                 W_NMLCHK = "" Then
              Else
                 W_IDXDO2 = JUDGE_IDX2(AR_PATH(I), W_TS, SW_NRML)
                 If W_IDXDO2 = "N" Then
                    With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                       .Cells(I - 1, 6).Value = "N"
                    End With
                 End If
              End If
        
              If W_IDXDO = "N" And _
                 W_IDXDO2 = "N" Then
                 GoTo LABEL_NEXT
              End If
           End If
        End If
        
        'OPEN
        SW_AOP = False
                
        L = 1
        Do While InStr(L, AR_PATH(I), "\") > 0
          L = InStr(L, AR_PATH(I), "\") + 1
        Loop
        L = L - 1
        W_BNAME = Right$(AR_PATH(I), Len(AR_PATH(I)) - L)
                
        If Me.CheckBox62.Value = False Then
           For L = 1 To Workbooks.count
              If Workbooks(L).Name = W_BNAME Then
                 SW_AOP = True
                 Exit For
              End If
           Next L
           If SW_AOP = True Then
              SW_OPE = True
              W_OPE = W_OPE + 1
              ReDim Preserve AR_OPE(W_OPE)
              AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
              GoTo LABEL_NEXT
           End If
        
           Application.DisplayAlerts = False

           SW_PASS = False
           L = -1
              
           On Error GoTo LABEL_ERROR
           If SW_GREPREP = False Then
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="", ReadOnly:=True)
           Else
              Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:="")
           End If
              
LABEL_PASS:
           If SW_PASS = True Then
              L = L + 1
              Do While AR_PASS(L) = "" And _
                       L < UBound(AR_PASS)
                 L = L + 1
              Loop
              Err.Clear
              If SW_GREPREP = False Then
                 Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L), ReadOnly:=True)
              Else
                 Set WB = Workbooks.Open(Filename:=AR_PATH(I), UpdateLinks:=0, Password:=AR_PASS(L))
              End If
           End If
              
           On Error GoTo 0
           Application.DisplayAlerts = True

           If Val(Application.Version) >= 15 Then
              Application.ScreenUpdating = False
           End If
              
           WB.Windows(1).Visible = False
           WB.Activate
        Else
           W_GBNAME = W_BNAME
           Set WB = Workbooks(W_BNAME)
           WB.Activate
        End If
        
        On Error GoTo LABEL_ERROR
        SW_ASE = True
        W_SVIDX = WB.ActiveSheet.Index
        SW_ASE = False
        On Error GoTo 0
        
        If WB.Worksheets.count = 0 Then
           GoTo LABEL_CLOSE
        End If
        
        W_CNTFA = 0
        W_CNTRA2BK = W_CNTRA2
        SW_1ST = 1
        For K = 1 To WB.Worksheets.count
           On Error GoTo LABEL_ERROR
           If WB.Worksheets(K).Visible = True Then
              On Error GoTo 0
              If SW_1ST = 1 Then
                 WB.Activate
                 WB.Worksheets(K).Activate
                 SW_1ST = 0
                 J = 0
                 Erase AR_SELS
              End If
              J = J + 1
              ReDim Preserve AR_SELS(J)
              AR_SELS(J) = K
           End If
           On Error GoTo 0
LABEL_NEXT_S:
        Next K
        
        SW_1ST = 1
        W_1STFS = 99
        AFN = 0
        SW_ALLNE = True
        
        For IDX = 1 To UBound(AR_SELS)
           WB.Activate
           WB.Worksheets(AR_SELS(IDX)).Activate
           
           WB.ActiveSheet.UsedRange
           W_CELN = 0
           On Error Resume Next
           W_CELN = CELL_CNT(WB.ActiveSheet.UsedRange)
           On Error GoTo 0

           If W_CELN = 1 Then
              W_CELN = 0
              On Error Resume Next
              W_CELN = CELL_CNT(WB.ActiveSheet.UsedRange.SpecialCells(xlCellTypeBlanks))
              On Error GoTo 0
              If W_CELN = 1 Then
                 GoTo L_NEXTS
              End If
           End If

           Call RANGE_GET(WB.ActiveSheet.UsedRange.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
           
           If SW_GREPREP = False Then
              If SW_NRML = False And _
                 W_NMLCHK = "" Then
                 SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 4, WB)
              ElseIf InStr(W_NMLCHK, vbTab) > 0 Then
                 If WB.ActiveSheet.FilterMode = True Then
                    On Error Resume Next
                    WB.ActiveSheet.ShowAllData
                    On Error GoTo 0
                 End If
                 If NRML_EXIST(WB.Worksheets(AR_SELS(IDX)), 4) = True Then
                    SW_ALLNE = False
                    SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 4, WB)
                 Else
                    GoTo L_NEXTS
                 End If
              Else
                 If WB.ActiveSheet.FilterMode = True Then
                    On Error Resume Next
                    WB.ActiveSheet.ShowAllData
                    On Error GoTo 0
                 End If
                 If NRML_EXIST2(WB.Worksheets(AR_SELS(IDX)), 4) = True Then
                    SW_ALLNE = False
                    Call NRML_FIND(True, 4, False, 1, 1, True)
                 Else
                    GoTo L_NEXTS
                 End If
              End If
           Else
              SW_PR = False
              If WB.Worksheets(AR_SELS(IDX)).ProtectContents = True Or _
                 WB.ReadOnly = True Then
                 SW_PRA = True
                 SW_PR = True
                 If (SW_NRML = False And _
                     W_NMLCHK = "") Or _
                    WB.Worksheets(AR_SELS(IDX)).ProtectContents = True Then
                    SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 4, WB)
                 ElseIf InStr(W_NMLCHK, vbTab) > 0 Then
                    If WB.ActiveSheet.FilterMode = True Then
                       On Error Resume Next
                       WB.ActiveSheet.ShowAllData
                       On Error GoTo 0
                    End If
                    If NRML_EXIST(WB.Worksheets(AR_SELS(IDX)), 5) = True Then
                       SW_ALLNE = False
                       SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 4, WB)
                    Else
                       GoTo L_NEXTS
                    End If
                 Else
                    If WB.ActiveSheet.FilterMode = True Then
                       On Error Resume Next
                       WB.ActiveSheet.ShowAllData
                       On Error GoTo 0
                    End If
                    If NRML_EXIST2(WB.Worksheets(AR_SELS(IDX)), 5) = True Then
                       SW_ALLNE = False
                       Call NRML_FIND(True, 4, False, 1, 1, True)
                    Else
                       GoTo L_NEXTS
                    End If
                 End If
              Else
                 If (SW_NRML = False And _
                     W_NMLCHK = "") Or _
                    WB.ActiveSheet.FilterMode = True Then
                    SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 5, WB)
                 ElseIf InStr(W_NMLCHK, vbTab) > 0 Then
                    If NRML_EXIST(WB.Worksheets(AR_SELS(IDX)), 5) = True Then
                       SW_ALLNE = False
                       SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, 5, WB)
                    Else
                       GoTo L_NEXTS
                    End If
                 Else
                    If NRML_EXIST2(WB.Worksheets(AR_SELS(IDX)), 5) = True Then
                       SW_ALLNE = False
                       Call NRML_FIND(True, 5, False, 1, 1, True)
                    Else
                       GoTo L_NEXTS
                    End If
                 End If
              End If
           End If
           
           If Val(Application.Version) >= 15 Then
              If SW_GHO = False Then
                 Application.ScreenUpdating = False
              End If
           End If
          
L_NEXTS:
           If SW_HSGREP = True And _
              W_PNO > 0 Then
              W_GREPC = ThisWorkbook.path & "\grepC.vbs"
              If Dir(W_GREPC) <> "" Then
                 SW_STOP = True
              End If
           Else
              DoEvents
           End If
           
           If SW_STOP = True Then
              Exit For
           End If
        Next IDX
  
        If Me.ToggleButton11.Value = False Then
           GoTo LABEL_CLOSE2
        End If
        
        On Error GoTo LABEL_ERROR
        SW_ASE = True
        W_SVIDX = ActiveSheet.Index
        SW_ASE = False
        On Error GoTo 0
        
        If ActiveWorkbook.MultiUserEditing = True Then
           ActiveWorkbook.Saved = True
           ActiveWorkbook.Close SaveChanges:=False
           If Me.CheckBox60.Value = False And _
              Me.CheckBox62.Value = False And _
              SW_PRGRSS = True Then
              W_CLCNT = W_CLCNT + 1
              If SW_HSGREP = True And _
                 W_PNO > 0 Then
                 W_FRB = W_FRBS
                 With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
                   .Cells(1, 4).Value = W_CLCNT
                 End With
              Else
                 Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
                 Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
              End If
           End If
           GoTo LABEL_ERROR3
        End If
        
        W_CNTFA2 = 0
        W_CNTRABK = W_CNTRA
        SW_ALLNE2 = False
        
        For K = 1 To WB.Sheets.count
           On Error GoTo LABEL_ERROR
           With WB.Sheets(K)
              If .Visible = True Then
                 On Error GoTo 0
                 .Activate
                 .Select
                 If .ProtectContents = False Then
                    W_SHPCNT = .Shapes.count
              
                    For M = 1 To .Shapes.count
                       '|fffd||fffd|~
                       DoEvents
                       If SW_STOP = True Then
                          Exit For
                       End If
                       
                       Call SHP_GREP_FR(.Shapes(M), W_SHPCNT, W_CNTFA2, K, SW_GREPREP, W_ID)
                       
                       If SW_STOP = True Then
                          Exit For
                       End If
                    Next M
                 Else
                    SW_PRA = True
                 End If
              End If
              On Error GoTo 0
           End With
           
           If SW_HSGREP = True And _
              W_PNO > 0 Then
              W_GREPC = ThisWorkbook.path & "\grepC.vbs"
              If Dir(W_GREPC) <> "" Then
                 SW_STOP = True
              End If
           End If
           
           If SW_STOP = True Then
              Exit For
           End If

LABEL_NEXT2:
        Next K
  
LABEL_CLOSE2:
        'CLOSE
        If SW_GREPREP = True Then
           WB.Activate
           Sheets(W_SVIDX).Select
        End If
        
        If Me.CheckBox62.Value = False Then
           If SW_GREPREP = True And _
              W_CNTRA2 > W_CNTRA2BK Then
              '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|R|fffd|s|fffd|[
              If Me.CheckBox27.Value = True Then
                 For L = 1 To Len(W_BNAME)
                    W_BKNAME = Left$(W_BNAME, Len(W_BNAME) - L)
                    If Right$(W_BKNAME, 1) = "." Then
                       Exit For
                    End If
                 Next L
                 W_BKNAME = W_BKNAME & "bak"
                 W_RET = CopyFile(AR_PATH(I), W_DIR & "\" & W_BKNAME, 0)
              End If
              Application.DisplayAlerts = False
              WB.Save
              Application.DisplayAlerts = True
           End If
        End If
        
LABEL_CLOSE:
        If Me.CheckBox62.Value = False Then
           WB.Saved = True
           WB.Close SaveChanges:=False
           Set WB = Nothing
           If SW_HSGREP = True And _
              W_PNO > 0 Then
           Else
              If Me.CheckBox60.Value = False And _
                 Me.CheckBox62.Value = False And _
                 SW_PRGRSS = True Then
                 W_CLCNT = W_CLCNT + 1
                 Me.Label293.Width = CDbl(Me.Label292.Width * W_CLCNT / W_FCNT)
                 Me.Label293.Caption = Int(100 * W_CLCNT / W_FCNT) & "%"
              End If
           End If
        End If
  
        If SW_STOP = True Then
           Erase AR_PATH
           Exit For
        ElseIf SW_HSGREP = True And _
               W_PNO > 0 Then
           If SW_NRML = False And _
              W_NMLCHK = "" Then
           Else
              Select Case W_IDXDO
              Case "U"
                 If SW_ALLNE = False Then
                    W_IDXDO = "N"
                 End If
              Case "D"
                 If SW_ALLNE = True Then
                    W_IDXDO = "R"
                 End If
              Case "A"
                 If SW_ALLNE = False Then
                    W_IDXDO = "N"
                 End If
              End Select
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 .Cells(I - 1, 5).Value = W_IDXDO
              End With
           End If
        
           If Me.ToggleButton11.Value = True Then
              If W_CNTFA2 = 0 Then
                 SW_ALLNE2 = True
              End If
              Select Case W_IDXDO2
              Case "U"
                 If SW_ALLNE2 = False Then
                    W_IDXDO2 = "N"
                 End If
              Case "D"
                 If SW_ALLNE2 = True Then
                    W_IDXDO2 = "R"
                 End If
              Case "A"
                 If SW_ALLNE2 = False Then
                    W_IDXDO2 = "N"
                 End If
              End Select
              With XL1.Workbooks(W_FRB).Worksheets(W_MAXP + 3)
                 .Cells(I - 1, 6).Value = W_IDXDO2
              End With
           End If
        End If
     End If

LABEL_NEXT:
  
  Next I
   
  If SW_HSGREP = True And _
     W_PNO > 0 Then
     If SW_STOP = True Then
        Set XL1 = Nothing
        GoTo L_END
     ElseIf SW_LEFT = False Then
        Set XL1 = Nothing
        GoTo L_END
     Else
        SW_REPEAT = True
        GoTo L_START
     End If
  End If
   
L_END:
  
  Set XL1 = Nothing
  Set WB = Nothing
  Erase AR_PATH
  Exit Sub

LABEL_ERROR:
  If Err.Number = -2147319765 Then
     On Error GoTo 0
     SW_OPE = True
     W_OPE = W_OPE + 1
     ReDim Preserve AR_OPE(W_OPE)
     If SW_ASE = True Then
        If SW_GREPREP = False Then
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
        Else
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox19.Value) - 1)
        End If
        Resume LABEL_CLOSE
     Else
        If SW_GREPREP = False Then
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1) & vbTab & K
        Else
           AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox19.Value) - 1) & vbTab & K
        End If
        Resume LABEL_NEXT_S
     End If
  End If
  
  If Err.Number = 1004 Then
     If W_PASSLIST <> "" Then
        If L = -1 Then
           If Val(Application.Version) >= 9 Then
              AR_PASS = SPLIT2000(W_PASSLIST, vbCrLf)
           Else
              AR_PASS = SPLIT97(W_PASSLIST, vbCrLf)
           End If
        End If
        If L < UBound(AR_PASS) Then
           SW_PASS = True
           Resume LABEL_PASS
        End If
     End If
  End If
  
  On Error GoTo 0
  SW_OPE = True
  W_OPE = W_OPE + 1
  W_FCNT = W_FCNT - 1
  ReDim Preserve AR_OPE(W_OPE)
  If SW_GREPREP = False Then
     AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox18.Value) - 1)
  Else
     AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox19.Value) - 1)
  End If
  Resume LABEL_NEXT

LABEL_ERROR2:
  On Error GoTo 0
  SW_ERRFLG = True
  Exit Sub

LABEL_ERROR3:
  SW_OPE = True
  W_OPE = W_OPE + 1
  ReDim Preserve AR_OPE(W_OPE)
  AR_OPE(W_OPE) = Right$(AR_PATH(I), Len(AR_PATH(I)) - Len(Me.ComboBox20.Value) - 1)
  GoTo LABEL_NEXT
  Exit Sub

End Sub

Sub FCNT(ByVal W_DIR As String)

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  
  Dim FSO As Object
  Dim FL As Object
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  With FSO.GetFolder(W_DIR)
     For Each FL In .SubFolders
        I = I + 1
        ReDim Preserve AR_PATH(I)
        AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
     Next
  
     For Each FL In .Files
        W_FLNM = FL.Name
        If W_FLNM Like W_FFILE Or _
           W_FLNM Like W_FFILE2 Then
           If Left$(W_FLNM, 2) = "~$" Then
           Else
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & W_FLNM
           End If
        End If
     Next
  End With
  
  For I = 2 To UBound(AR_PATH)
     If Right$(AR_PATH(I), 1) = "\" Then
        If Me.CheckBox16.Value = True Then
           Call FCNT(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1))
        End If
     Else
        W_FCNT = W_FCNT + 1
     End If
  Next I
   
  Erase AR_PATH

End Sub

Sub FGET(ByVal W_DIR As String)

  R = 0
  
  Call FGET2(W_DIR)

  If R > 0 Then
     With Workbooks(W_FRB).Worksheets(W_MAXP + 3)
        .Range(.Cells(1, 1), .Cells(R, 4)).Sort Key1:=.Cells(1, 4), Order1:=xlAscending, Key2:=.Cells(1, 2), Order2:=xlDescending, Orientation:=xlTopToBottom
        .Range(.Cells(1, 4), .Cells(R, 4)).ClearContents
     End With
  End If

End Sub

Sub FGET2(ByVal W_DIR As String)

  Dim W_FLNM As String
  Dim AR_PATH() As String
  Dim I As Long
  
  Dim FSO As Object
  Dim FL As Object
  Dim AR_WK As Variant
  
  
  '|fffd||38f||6c3|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||64fe|
  Erase AR_PATH
  ReDim Preserve AR_PATH(1)
  I = 1
  
  Set FSO = CreateObject("Scripting.FileSystemObject")
  
  With FSO.GetFolder(W_DIR)
     For Each FL In .SubFolders
        I = I + 1
        ReDim Preserve AR_PATH(I)
        AR_PATH(I) = W_DIR & "\" & FL.Name & "\"
     Next
  
     For Each FL In .Files
        W_FLNM = FL.Name
        If W_FLNM Like W_FFILE Or _
           W_FLNM Like W_FFILE2 Then
           If Left$(W_FLNM, 2) = "~$" Then
           Else
              I = I + 1
              ReDim Preserve AR_PATH(I)
              AR_PATH(I) = W_DIR & "\" & W_FLNM & vbTab & FL.Size & vbTab & FL.DateLastModified
           End If
        End If
     Next
  End With
  
  Set FSO = Nothing
  
  For I = 2 To UBound(AR_PATH)
     If Right$(AR_PATH(I), 1) = "\" Then
        If Me.CheckBox16.Value = True Then
           Call FGET2(Left$(AR_PATH(I), Len(AR_PATH(I)) - 1))
        End If
     Else
        R = R + 1
        AR_WK = Split(AR_PATH(I), vbTab)
        With Workbooks(W_FRB).Worksheets(W_MAXP + 3)
           .Cells(R, 1).Value = AR_WK(0)
           .Cells(R, 2).Value = AR_WK(1)
           .Cells(R, 3).Value = AR_WK(2)
           If Right$(AR_WK(0), 4) = ".xls" Then
              .Cells(R, 4).Value = 3
           ElseIf Right$(AR_WK(0), 5) = ".xlsm" Then
              .Cells(R, 4).Value = 1
           Else
              .Cells(R, 4).Value = 2
           End If
        End With
     End If
  Next I
   
  Erase AR_PATH

End Sub

Sub FINDPN(ByVal SW_NEXT As Boolean, ByVal SW_FRA As Long, Optional ByVal W_FW As String, Optional ByVal SW_SIM As Boolean, Optional ByVal SW_SML As Boolean)
'SW_FRA 0|fffd|F|fffd||fffd||fffd||fffd||fffd|A1|fffd|F|fffd|u|fffd||fffd||fffd|A2|fffd|F|fffd|S|fffd|u|fffd||fffd||fffd|A3|fffd|F|fffd|S|fffd||fffd||fffd||fffd||fffd|A6|fffd|F|fffd|S|fffd|I|fffd||fffd||fffd|A7|fffd|F|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd|A8|fffd|F|fffd|S|fffd|\|fffd||fffd||fffd|A9|fffd|F|fffd|S|fffd|}|fffd|[|fffd|N

  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_ER As Long
  Dim W_EC As Long
  Dim I As Long
  Dim J As Long
  Dim W_CELL As Variant
  Dim SW_FIND As Boolean
  Dim SW_AFIND As Boolean
  Dim SW_LABELN As Boolean
  Dim AR_RANGE As Variant
  Dim SW_1ST As Long
  Dim W_SI As Long
  Dim SIDX As Long
  Dim W_AS As Long
  Dim W_AR As Long
  Dim W_AC As Long
  Dim SW_RE2 As Boolean
  Dim W_ADDR As String
  Dim W_FNDSTR As String
  Dim K As Long
  Dim SW_WSSEL As Boolean

  Dim SW_NRML As Boolean
  Dim SW_CNTN As Boolean
  Dim W_SVIDX As Long
  Dim SW_LAST As Boolean
  Dim W_SVR As Long
  Dim W_SVC As Long
  Dim W_SVR1 As Long
  Dim W_SVC1 As Long

  Dim W_OB11 As Boolean
  Dim W_OB12 As Boolean
  Dim W_OB13 As Boolean

  Dim SW_NXSHT As Boolean
  Dim W_SELCNT As Long

  Dim AR_SELS2() As Long
  Dim L As Long
  Dim M As Long
  
  Dim W_URCNT As Variant

  Dim W_SW_CNV As String

  Dim W_SML As String

  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim SW_FEND As Boolean
  '|fffd||fffd||fffd||fffd|J|fffd|n|fffd||292|u
  Dim W_RSS As Long
  Dim W_RSR As Long
  Dim W_RSC As Long
  '|fffd||fffd||fffd||4c2c9||288||292|u
  Dim W_RRS As Long
  Dim W_RRR As Long
  Dim W_RRC As Long


  If WINDOWCHK = False Then
     Exit Sub
  End If
  If TypeName(ActiveSheet) <> "Worksheet" Then
     If Me.CheckBox7.Value = True Then
        SW_WSSEL = False
        For K = ActiveSheet.Index + 1 To Sheets.count
           If TypeName(Sheets(K)) = "Worksheet" Then
              Sheets(K).Select
              SW_WSSEL = True
              Exit For
           End If
        Next K
        If SW_WSSEL = False Then
           Exit Sub
        End If
     Else
        Exit Sub
     End If
  End If
  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     Exit Sub
  End If
  
  Application.ScreenUpdating = False
  
  If W_FW = "" Then
     W_FW = Me.ComboBox1.Value
  End If
  
  If Val(Application.Version) >= 12 Then
     W_MAXFML = 8192
  Else
     W_MAXFML = 1024
  End If
  
  W_ASK = Me.CheckBox12.Value
  
  '|fffd|u|fffd|b|fffd|N|fffd|S|fffd||30c||fffd||fffd||fffd|
  If Me.CheckBox7.Value = True Then
     '|fffd|O|fffd||fffd||fffd|t|fffd|V|fffd|[|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
     W_CHTCNT = 0
     For K = 1 To Sheets.count
        If TypeName(Sheets(K)) <> "Worksheet" Then
           W_CHTCNT = W_CHTCNT + 1
        End If
        If Sheets(K).Name = ActiveSheet.Name Then
           Exit For
        End If
     Next K
     
     W_AS = ActiveSheet.Index - W_CHTCNT
     W_AR = ActiveCell.Row
     W_AC = ActiveCell.Column
     Cells(W_AR, W_AC).Select
     If Cells(W_AR, W_AC).MergeCells = True Then
        For I = 1 To ActiveSheet.UsedRange.Cells.count
           If Cells(I).MergeCells = False Then
              Cells(I).Select
              W_AR = ActiveCell.Row
              W_AC = ActiveCell.Column
              Exit For
           End If
        Next I
     End If
     I = W_AS
     SW_1ST = 1
     Do
       If I = W_AS And _
          SW_1ST = 0 Then
          Exit Do
       End If
       If Worksheets(I).Visible = True Then
          J = J + 1
          ReDim Preserve AR_SELS(J)
          AR_SELS(J) = I
       End If
       SW_1ST = 0
       I = I + 1
       If I > Worksheets.count Then
          I = 1
       End If
     Loop
     Worksheets(AR_SELS).Select
     Erase AR_SELS
  End If
  
  J = 0
  For I = 1 To ActiveWindow.SelectedSheets.count
     If TypeName(ActiveWindow.SelectedSheets(I)) = "Worksheet" Then
        '|fffd|O|fffd||fffd||fffd|t|fffd|V|fffd|[|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
        W_CHTCNT = 0
        For K = 1 To Sheets.count
           If TypeName(Sheets(K)) <> "Worksheet" Then
              W_CHTCNT = W_CHTCNT + 1
           End If
           If Sheets(K).Name = ActiveWindow.SelectedSheets(I).Name Then
              Exit For
           End If
        Next K
     
        J = J + 1
        ReDim Preserve AR_SELS(J)
        AR_SELS(J) = ActiveWindow.SelectedSheets(I).Index - W_CHTCNT
        '|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd|`|fffd|F|fffd|b|fffd|N
        If IsError(Worksheets(AR_SELS(J)).ProtectContents) = True Then
        ElseIf (SW_FRA = 1 Or _
            SW_FRA = 2 Or _
            SW_FRA = 7 Or _
            SW_FRA = 8 Or _
            SW_FRA = 9 Or _
            ((SW_FRA = 0 Or _
              SW_FRA = 3) And _
            SW_CLRKEEP = True And _
            (SW_DCB2 = True Or _
             SW_DCI2 = True Or _
             SW_DCU2 = True Or _
             SW_DCK2 = True Or _
             SW_DCC2 = True))) And _
           Worksheets(AR_SELS(J)).ProtectContents = True Then
           If Me.CheckBox7.Value = True Then
              Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
           End If
           Erase AR_SELS
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("You cannot use this command on a protected sheet." & vbCrLf & _
                             "To use this command, you must first unprotect the sheet." & _
                             "You may be prompted for a password.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||101|A|fffd||fffd||fffd||303|R|fffd|}|fffd||fffd||fffd|h|fffd||34e|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||341|A[|fffd|c|fffd|[|fffd||fffd|] |fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd| [|fffd||6cc||fffd|] |fffd||fffd||fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|A" & _
                             "[|fffd|V|fffd|[|fffd|g|fffd||6cc||fffd||309||fffd||fffd||fffd|] |fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                             "|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||313||fffd||fffd||342||fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
           End If
           Call COMBO_FOCUS
           Exit Sub
        End If
     End If
  Next I
  
  If IsError(ActiveSheet.ProtectContents) = True Then
  Else
     On Error GoTo LABEL_ERR3
     ActiveSheet.Select
     On Error GoTo 0
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
  If W_FW = "" Then
     If SW_TM = True Then
        SW_TM = False
        Call TMNP_END
        W_TMMS = 0
     End If
     If Me.CheckBox7.Value = True Then
        Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  If SW_FRA = 6 And _
     UBound(AR_SELS) > 1 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do select all for multiple worksheets.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||5c2||111|I|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  If SW_FRA = 7 And _
     UBound(AR_SELS) > 1 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do outline for multiple worksheets.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  If SW_FRA = 8 And _
     UBound(AR_SELS) > 1 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do show all for multiple worksheets.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||5c2||115|\|fffd||fffd||fffd||355||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  If SW_FRA = 7 And _
     ActiveSheet.Shapes.count > 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do outline for worksheets with auto shapes.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd||343|I|fffd|[|fffd|g|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  If SW_FRA = 8 And _
     ActiveSheet.Shapes.count > 0 Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("You cannot do show all for worksheets with auto shapes.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||5c2||115|\|fffd||fffd||fffd||343|I|fffd|[|fffd|g|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||251||382||fffd||fffd||10e||fffd||fffd|s|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
     End If
     Call COMBO_FOCUS
     Exit Sub
  End If
  
  SW_NRML = False
  W_NMLCHK = ""
  SW_NR = False
  SW_NR2 = False
  
  If Me.CheckBox74.Value = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
        .IgnoreCase = True
        .Global = True
     End With
     If RE.Test(W_FW) = False Then
        SW_NRML = True
     End If
     Set RE = Nothing
  End If
        
  If SW_NRML = True Then
     If W_ATEXT <> "" Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(W_ATEXT) = True Then
           SW_NRML = False
        End If
        Set RE = Nothing
     End If
  End If
        
  If SW_NRML = True Then
     If SW_FRA = 1 Or SW_FRA = 2 Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$\\\[\]]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(Me.ComboBox2.Value) = True Then
           SW_NRML = False
        End If
        Set RE = Nothing
     End If
  End If
        
  If SW_NRML = True Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FW                       '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  Else
     If Me.CheckBox74.Value = False Then
        W_NMLCHK = NRML_CHK(W_FW, 1, False)
        If SW_SIM = True Then
           W_NMLCHK = Left$(W_NMLCHK, 1) & String$(Len(W_NMLCHK) - 1, "?")
        End If
     End If
  End If
  
  If SW_NRML = False Then
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|C|fffd||fffd|
     W_FNDSTR = FNDSTRCNV3(W_FW)
  
     '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     
     If SW_NRE = True Then
        SW_NR = True
     Else
        On Error GoTo LABEL_ERR
        SW_RE2 = False
        RE.Test (" ")
        On Error GoTo 0
        Set RE = Nothing
     End If
     If SW_NR = True Then
        Set NRE = NRCHK(W_FNDSTR, Not Me.CheckBox1.Value)
        If NRE Is Nothing Then
           GoTo LABEL_ERR2
        End If
     End If
  
     If W_ATEXT <> "" Then
        W_FNDSTR2 = FNDSTRCNV3(W_ATEXT)
     
        If W_FNDSTR2 <> "" Then
           Set RE2 = CreateObject("VBScript.RegExp")
           With RE2
              .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
              .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
              .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
           End With
           If SW_NRE = True Then
              SW_NR2 = True
           Else
              On Error GoTo LABEL_ERR
              SW_RE2 = True
              RE2.Test (" ")
              On Error GoTo 0
              Set RE2 = Nothing
           End If
           If SW_NR2 = True Then
              Set NRE2 = NRCHK(W_FNDSTR2, Not Me.CheckBox1.Value)
              If NRE2 Is Nothing Then
                 GoTo LABEL_ERR2
              End If
           End If
        End If
     End If
  End If
  
  Application.ScreenUpdating = False

  If SW_FRA = 0 And _
     Me.CheckBox208.Value = False Then
     '|fffd||fffd||fffd||fffd|J|fffd|n|fffd||292|u
     W_RSS = ActiveSheet.Index - W_CHTCNT
     W_RSR = ActiveCell.Row
     W_RSC = ActiveCell.Column
  End If

  SW_STOP = False
  
  If SW_FRA = 3 And _
     Me.ToggleButton5 = False Then
     Me.CommandButton12.Visible = False
     Me.CommandButton81.Visible = True
     If Me.Visible = True Then
        Me.CommandButton81.SetFocus
     End If
     Me.CommandButton1.Enabled = False
     Me.CommandButton2.Enabled = False
     Me.CommandButton37.Enabled = False
     Me.CommandButton78.Enabled = False
     Me.CommandButton85.Enabled = False
     Me.CommandButton87.Enabled = False
     Me.CommandButton88.Enabled = False
     Me.CommandButton104.Enabled = False
     Me.CommandButton261.Enabled = False
     Me.CommandButton262.Enabled = False
     Me.CommandButton45.Visible = False
     Me.CommandButton9.Enabled = False
     Me.MultiPage1.Pages("Page2").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  If SW_FRA = 2 Then
     Me.CommandButton5.Visible = False
     Me.CommandButton82.Visible = True
     Me.CommandButton3.Enabled = False
     Me.CommandButton4.Enabled = False
     Me.CommandButton91.Enabled = False
     Me.CommandButton79.Enabled = False
     Me.CommandButton15.Visible = False
     If Me.ToggleButton2.Value = False Then
        Me.CommandButton54.Visible = False
     End If
     Me.CommandButton9.Enabled = False
     Me.MultiPage1.Pages("Page1").Enabled = False
     Me.MultiPage1.Pages("Page3").Enabled = False
     Me.MultiPage1.Pages("Page4").Enabled = False
     Me.MultiPage1.Pages("Page5").Enabled = False
     Me.MultiPage1.Pages("Page6").Enabled = False
     Me.MultiPage1.Pages("Page7").Enabled = False
     Me.MultiPage1.Pages("Page8").Enabled = False
     Me.MultiPage1.Pages("Page9").Enabled = False
     Me.MultiPage1.Pages("Page10").Enabled = False
     Me.MultiPage1.Pages("Page11").Enabled = False
     Me.MultiPage1.Pages("Page12").Enabled = False
     Me.MultiPage1.Pages("Page13").Enabled = False
     Me.MultiPage1.Pages("Page14").Enabled = False
     Me.MultiPage1.Pages("Page15").Enabled = False
     Me.MultiPage1.Pages("Page16").Enabled = False
     Me.MultiPage1.Pages("Page17").Enabled = False
     Me.MultiPage1.Pages("Page18").Enabled = False
     Me.MultiPage1.Pages("Page19").Enabled = False
     Me.MultiPage1.Pages("Page20").Enabled = False
     Me.MultiPage1.Tag = "P"
  End If
  
  W_CNTFA = 0
  W_CNTRA = 0
  W_CNTRA2 = 0
  W_ERRM = 0
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If SW_IS = False Then
     Call UPD_REFCOMBO(Me.ComboBox1)
     
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox1
        Call MK_DIC
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|2
  If (W_ATEXT <> "" And _
      W_FNDSTR2 <> "") Or _
     (W_ATEXT <> "" And _
      SW_NRML = True) Then
     If SW_IS = False Then
        Call UPD_REFCOMBO2
     
        '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
        If Me.CheckBox37.Value = True Then
           Set W_BOX = Me.ComboBox59
           Call MK_DIC
        End If
     End If
  End If
  
  '|fffd|u|fffd||fffd||fffd|R|fffd||fffd||fffd|{|fffd|{|fffd|b|fffd|N|fffd|X|fffd||310||fffd||fffd||fffd|
  If SW_FRA <> 0 And _
     SW_FRA <> 3 And _
     SW_FRA <> 6 And _
     SW_FRA <> 7 And _
     SW_FRA <> 8 And _
     SW_FRA <> 9 And _
     Me.ComboBox2.Value <> "" Then
     Call UPD_REPCOMBO(Me.ComboBox2)
  
     '|fffd|P|fffd||fffd||22ae||fffd||fffd||fffd||fffd||fffd||c42c|
     If Me.CheckBox37.Value = True Then
        Set W_BOX = Me.ComboBox2
        Call MK_DIC
     End If
  End If
  
  Call TMR_END
  
  '|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd||294||fffd|\|fffd||fffd|
  If SW_FRA = 3 And _
     Me.ToggleButton5 = False Then
     Select Case Me.MultiPage2.Value
     Case 0
        Me.CommandButton52.Visible = False
        Me.CommandButton53.Visible = False
        Me.CommandButton107.Visible = False
        Me.CommandButton127.Visible = False
        Me.CommandButton137.Visible = False
        Me.CommandButton148.Visible = False
        Me.CommandButton159.Visible = False
        Me.ListBox1.Enabled = False
        Me.Label10.Visible = False
        Me.Label11.Visible = False
        Me.Label12.Visible = False
        Me.Label12.Visible = False
        Me.Label9.Caption = ""
        Me.ListBox1.Visible = False
     Case 1
        Me.CommandButton55.Visible = False
        Me.CommandButton56.Visible = False
        Me.CommandButton108.Visible = False
        Me.CommandButton128.Visible = False
        Me.CommandButton138.Visible = False
        Me.CommandButton149.Visible = False
        Me.CommandButton160.Visible = False
        Me.ListBox2.Enabled = False
        Me.Label64.Visible = False
        Me.Label65.Visible = False
        Me.Label66.Visible = False
        Me.Label67.Caption = ""
        Me.ListBox2.Visible = False
     Case 2
        Me.CommandButton57.Visible = False
        Me.CommandButton58.Visible = False
        Me.CommandButton109.Visible = False
        Me.CommandButton129.Visible = False
        Me.CommandButton139.Visible = False
        Me.CommandButton150.Visible = False
        Me.CommandButton161.Visible = False
        Me.ListBox3.Enabled = False
        Me.Label68.Visible = False
        Me.Label69.Visible = False
        Me.Label70.Visible = False
        Me.Label71.Caption = ""
        Me.ListBox3.Visible = False
     Case 3
        Me.CommandButton59.Visible = False
        Me.CommandButton60.Visible = False
        Me.CommandButton110.Visible = False
        Me.CommandButton130.Visible = False
        Me.CommandButton140.Visible = False
        Me.CommandButton151.Visible = False
        Me.CommandButton162.Visible = False
        Me.ListBox4.Enabled = False
        Me.Label72.Visible = False
        Me.Label73.Visible = False
        Me.Label74.Visible = False
        Me.Label75.Caption = ""
        Me.ListBox4.Visible = False
     Case 4
        Me.CommandButton61.Visible = False
        Me.CommandButton62.Visible = False
        Me.CommandButton111.Visible = False
        Me.CommandButton131.Visible = False
        Me.CommandButton141.Visible = False
        Me.CommandButton152.Visible = False
        Me.CommandButton163.Visible = False
        Me.ListBox5.Enabled = False
        Me.Label76.Visible = False
        Me.Label77.Visible = False
        Me.Label78.Visible = False
        Me.Label79.Caption = ""
        Me.ListBox5.Visible = False
     Case 5
        Me.CommandButton63.Visible = False
        Me.CommandButton64.Visible = False
        Me.CommandButton112.Visible = False
        Me.CommandButton132.Visible = False
        Me.CommandButton142.Visible = False
        Me.CommandButton153.Visible = False
        Me.CommandButton164.Visible = False
        Me.ListBox6.Enabled = False
        Me.Label80.Visible = False
        Me.Label81.Visible = False
        Me.Label82.Visible = False
        Me.Label83.Caption = ""
        Me.ListBox6.Visible = False
     Case 6
        Me.CommandButton65.Visible = False
        Me.CommandButton66.Visible = False
        Me.CommandButton113.Visible = False
        Me.CommandButton133.Visible = False
        Me.CommandButton143.Visible = False
        Me.CommandButton154.Visible = False
        Me.CommandButton165.Visible = False
        Me.ListBox7.Enabled = False
        Me.Label84.Visible = False
        Me.Label85.Visible = False
        Me.Label86.Visible = False
        Me.Label87.Caption = ""
        Me.ListBox7.Visible = False
     Case 7
        Me.CommandButton67.Visible = False
        Me.CommandButton68.Visible = False
        Me.CommandButton114.Visible = False
        Me.CommandButton134.Visible = False
        Me.CommandButton144.Visible = False
        Me.CommandButton155.Visible = False
        Me.CommandButton166.Visible = False
        Me.ListBox8.Enabled = False
        Me.Label88.Visible = False
        Me.Label89.Visible = False
        Me.Label90.Visible = False
        Me.Label91.Caption = ""
        Me.ListBox8.Visible = False
     Case 8
        Me.CommandButton69.Visible = False
        Me.CommandButton70.Visible = False
        Me.CommandButton115.Visible = False
        Me.CommandButton135.Visible = False
        Me.CommandButton145.Visible = False
        Me.CommandButton156.Visible = False
        Me.CommandButton167.Visible = False
        Me.ListBox9.Enabled = False
        Me.Label92.Visible = False
        Me.Label93.Visible = False
        Me.Label94.Visible = False
        Me.Label95.Caption = ""
        Me.ListBox9.Visible = False
     Case 9
        Me.CommandButton71.Visible = False
        Me.CommandButton72.Visible = False
        Me.CommandButton116.Visible = False
        Me.CommandButton136.Visible = False
        Me.CommandButton146.Visible = False
        Me.CommandButton157.Visible = False
        Me.CommandButton168.Visible = False
        Me.ListBox10.Enabled = False
        Me.Label96.Visible = False
        Me.Label97.Visible = False
        Me.Label98.Visible = False
        Me.Label99.Caption = ""
        Me.ListBox10.Visible = False
     End Select
  End If
  
  If SW_FRA = 3 Then
     Me.Label150.Tag = ""
     Me.Label150.Caption = ""
     Me.Label150.Visible = False
  End If
  
  If SW_FRA = 6 Then
     Set W_UNION = Nothing
  End If
  
  If SW_FRA = 7 Then
     On Error Resume Next
     Rows.Ungroup
     Columns.Ungroup
     Cells.ClearOutline
     With ActiveSheet.Outline
        .AutomaticStyles = False
        .SummaryRow = xlAbove
        .SummaryColumn = xlLeft
     End With
     On Error GoTo 0
     W_1STO = 0
     W_O = 0
     W_OB11 = Me.OptionButton11.Value
     W_OB12 = Me.OptionButton12.Value
     W_OB13 = Me.OptionButton13.Value
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        Me.OptionButton12 = True
     Else
        Me.OptionButton13 = True
     End If
  End If
  
  If SW_FRA = 8 Then
     W_OB11 = Me.OptionButton11.Value
     W_OB12 = Me.OptionButton12.Value
     W_OB13 = Me.OptionButton13.Value
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        Me.OptionButton12 = True
        Rows.Hidden = True
     Else
        Me.OptionButton13 = True
        Columns.Hidden = True
     End If
  End If
  
  If SW_NRML = False Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = W_FNDSTR                   '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
  
     If W_ATEXT <> "" And _
        W_FNDSTR2 <> "" Then
        Set RE2 = CreateObject("VBScript.RegExp")
        With RE2
           .Pattern = W_FNDSTR2                  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = Not Me.CheckBox1.Value  '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                        '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
       End With
     End If
  End If
 
 
 '|fffd|O|fffd||fffd||fffd|t|fffd|V|fffd|[|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
  W_CHTCNT = 0
  For K = 1 To Sheets.count
     If TypeName(Sheets(K)) <> "Worksheet" Then
        W_CHTCNT = W_CHTCNT + 1
     End If
     If Sheets(K).Name = ActiveSheet.Name Then
        Exit For
     End If
  Next K
  
  SS = ActiveWorkbook.ActiveSheet.Index - W_CHTCNT
  For SIDX = 1 To UBound(AR_SELS)
     If AR_SELS(SIDX) = SS Then
        Exit For
     End If
  Next SIDX
  
  W_ACS = ""
  On Error Resume Next
  W_ACS = ActiveWorkbook.Name & vbTab & ActiveSheet.Name & vbTab & ActiveCell.Row & vbTab & ActiveCell.Column
  On Error GoTo 0
  
  IDX = SIDX
  SW_1ST = 1
  SW_LABELN = False
  SW_AFIND = False
  W_1STFS = 0
  W_1STRS = 0
  AFN = 0
  
  W_SVRP = 0
  W_SVCP = 0

  W_SGFW = ""
  W_SGWD = ""
  
  If IsError(ActiveSheet.ProtectContents) = True Then
  Else
     ActiveSheet.Select
  End If
  
  W_ADDR = ""
  On Error Resume Next
  W_ADDR = Selection.Address
  On Error GoTo 0
  If W_ADDR = "" Then
     Cells(1, 1).Select
  End If
  
  If ((InStr(Selection.Address(True, True, xlR1C1), ":") = 0 And _
       (InStr(Selection.Address(True, True, xlR1C1), "R") > 0 And _
        InStr(Selection.Address(True, True, xlR1C1), "C") > 0)) Or _
       Selection.MergeCells = True) And _
     (SW_NRML = True Or _
      W_NMLCHK <> "") Then
     W_SVIDX = IDX
     SW_LAST = False
     SW_CAN = False
     W_1STFR = 0
     W_1STFC = 0
     W_SVR = ActiveCell.Row
     W_SVC = ActiveCell.Column
     W_SVR1 = W_SVR
     W_SVC1 = W_SVC
     SW_NXSHT = False
     
     Do
        If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
        Else
           Worksheets(AR_SELS(IDX)).Activate
        End If
        If SW_NXSHT = True Then
           If SW_NEXT = True Then
              On Error Resume Next
              W_SELCNT = Selection.count
              If W_SELCNT <= 1 Or _
                 Selection.MergeCells = True Then
                 Cells(1, 1).Activate
              Else
                 Selection(1).Activate
              End If
              On Error GoTo 0
           Else
              On Error Resume Next
              W_SELCNT = Selection.count
              If W_SELCNT <= 1 Or _
                 Selection.MergeCells = True Then
                 Cells(Rows.count, Columns.count).Activate
              Else
                 Selection(Selection.count).Activate
              End If
              On Error GoTo 0
           End If
        End If
        
        Call NRML_FIND(SW_NEXT, SW_FRA, SW_LAST, W_SVR1, W_SVC1, SW_NXSHT, SW_SIM, SW_SML)
        
        SW_NXSHT = False
        If W_ERRM = 2 Then
           Exit Do
        End If
        If SW_CAN = True Then
           Exit Do
        End If
        SW_CNTN = False
        If SW_FRA = 0 Then
           If W_CNTFA > 0 Then
              Exit Do
           Else
              If IDX = 1 Then
                 If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                 Else
                    Worksheets(AR_SELS(IDX)).Activate
                    Worksheets(AR_SELS(IDX)).Cells(W_SVR, W_SVC).Activate
                 End If
              End If
              SW_CNTN = True
           End If
        End If
        If SW_FRA = 1 Then
           If W_CNTRA2 > 0 Then
              Exit Do
           Else
              If IDX = 1 Then
                 If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                 Else
                    Worksheets(AR_SELS(IDX)).Activate
                    Worksheets(AR_SELS(IDX)).Cells(W_SVR, W_SVC).Activate
                 End If
              End If
              SW_CNTN = True
           End If
        End If
        If SW_FRA = 2 Or SW_FRA = 3 Or SW_FRA = 6 Or SW_FRA = 7 Or SW_FRA = 8 Or SW_FRA = 9 Then
           SW_CNTN = True
        End If
        If SW_CNTN = True Then
           If SW_NEXT = True Then
              IDX = IDX + 1
              If IDX > UBound(AR_SELS) Then
                 IDX = 1
              End If
              If SW_LAST = False Then
                 W_SVR = ActiveCell.Row
                 W_SVC = ActiveCell.Column
                 If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                 Else
                    Worksheets(AR_SELS(IDX)).Activate
                 End If
                 On Error Resume Next
                 W_SELCNT = Selection.count
                 If W_SELCNT <= 1 Or _
                    Selection.MergeCells = True Then
                    If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                    Else
                       Worksheets(AR_SELS(IDX)).Cells(1, 1).Activate
                    End If
                 Else
                    Selection(1).Activate
                 End If
                 On Error GoTo 0
              End If
           Else
              IDX = IDX - 1
              If IDX < 1 Then
                 IDX = UBound(AR_SELS)
              End If
              If SW_LAST = False Then
                 W_SVR = ActiveCell.Row
                 W_SVC = ActiveCell.Column
                 If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                 Else
                    Worksheets(AR_SELS(IDX)).Activate
                 End If
                 On Error Resume Next
                 W_SELCNT = Selection.count
                 If W_SELCNT <= 1 Or _
                    Selection.MergeCells = True Then
                    If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                    Else
                       Worksheets(AR_SELS(IDX)).Cells(Rows.count, Columns.count).Activate
                    End If
                 Else
                    Selection(Selection.count).Activate
                 End If
                 On Error GoTo 0
              End If
           End If
        End If
        If SW_LAST = True Then
           Exit Do
        End If
        If SW_CNTN = True Then
           If IDX = W_SVIDX Then
              SW_LAST = True
           End If
           SW_NXSHT = True
        End If
     Loop
     
     If W_CNTFA > 0 Then
        SW_AFIND = True
     End If
     Set RE = Nothing
     GoTo LABEL_LOOPE
  End If
  
  W_SVIDX = IDX
  SW_LAST = False
  SW_CAN = False
  W_1STFR = 0
  W_1STFC = 0
  W_SVR = ActiveCell.Row
  W_SVC = ActiveCell.Column
  W_SVR1 = W_SVR
  W_SVC1 = W_SVC
  SW_NXSHT = False
  SW_CNTN = False
  
  Do
     If SW_STOP = True Then
        Exit Do
     End If
     
     If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
     Else
        Worksheets(AR_SELS(IDX)).Select
     End If
     
     '|fffd|O|fffd||fffd||fffd|t|fffd|V|fffd|[|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
     W_CHTCNT = 0
     For K = 1 To Sheets.count
        If TypeName(Sheets(K)) <> "Worksheet" Then
           W_CHTCNT = W_CHTCNT + 1
        End If
        If Sheets(K).Name = ActiveSheet.Name Then
           Exit For
        End If
     Next K
  
     W_ADDR = ""
     On Error Resume Next
     W_ADDR = Selection.Address
     On Error GoTo 0
     If W_ADDR = "" Then
        Cells(1, 1).Select
     End If
     
     If (InStr(Selection.Address(True, True, xlR1C1), ":") = 0 And _
         (InStr(Selection.Address(True, True, xlR1C1), "R") > 0 And _
          InStr(Selection.Address(True, True, xlR1C1), "C") > 0)) Or _
         Selection.MergeCells = True Then
     '|fffd|P|fffd||fffd|Z|fffd||fffd||fffd|I|fffd||fffd|
        Call RANGE_GET(ActiveSheet.UsedRange.Address(True, True, xlR1C1), W_SR, W_SC, W_ER, W_EC)
        If IDX = SIDX And _
           SW_1ST = 0 Then
           SW_1ST = 9
        End If
        If SW_1ST = 2 Then
           SIDX = IDX
        End If
        
        If Rows.count > 65536 Then
           W_URCNT = CELL_CNT(ActiveSheet.UsedRange)
           If W_URCNT > 16777216 Then
              W_NMLCHK = vbTab
              If SW_NXSHT = True Then
                 If SW_NEXT = True Then
                    Cells(1, 1).Select
                 Else
                    Cells(Rows.count, Columns.count).Select
                 End If
                 If IDX = W_SVIDX Then
                    SW_LAST = True
                 End If
              End If
              Call NRML_FIND(SW_NEXT, SW_FRA, SW_LAST, W_SVR1, W_SVC1, SW_NXSHT, SW_SIM, SW_SML)
              SW_NXSHT = False
              If W_ERRM = 2 Then
                 SW_1ST = 99
              End If
              If SW_CAN = True Then
                 SW_1ST = 99
              End If
              SW_CNTN = False
              If W_CNTFA > 0 Then
                 SW_AFIND = True
              End If
              If SW_FRA = 0 Then
                 If W_CNTFA > 0 Then
                    SW_1ST = 9
                 Else
                    If IDX = 1 Then
                       If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                       Else
                          Worksheets(AR_SELS(IDX)).Activate
                          Worksheets(AR_SELS(IDX)).Cells(W_SVR, W_SVC).Activate
                       End If
                    End If
                    SW_CNTN = True
                 End If
              End If
              If SW_FRA = 1 Then
                 If W_CNTRA2 > 0 Then
                    SW_1ST = 9
                 Else
                    If IDX = 1 Then
                       If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                       Else
                          Worksheets(AR_SELS(IDX)).Activate
                          Worksheets(AR_SELS(IDX)).Cells(W_SVR, W_SVC).Activate
                       End If
                    End If
                    SW_CNTN = True
                 End If
              End If
              If SW_FRA = 2 Or SW_FRA = 3 Or SW_FRA = 6 Or SW_FRA = 7 Or SW_FRA = 8 Or SW_FRA = 9 Then
                 SW_CNTN = True
              End If
              If SW_CNTN = True Then
                 If SW_NEXT = True Then
                    IDX = IDX + 1
                    If IDX > UBound(AR_SELS) Then
                       IDX = 1
                    End If
                    If SW_LAST = False Then
                       W_SVR = ActiveCell.Row
                       W_SVC = ActiveCell.Column
                       If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                       Else
                          Worksheets(AR_SELS(IDX)).Activate
                       End If
                       On Error Resume Next
                       W_SELCNT = Selection.count
                       If W_SELCNT <= 1 Or _
                          Selection.MergeCells = True Then
                          If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                          Else
                             Worksheets(AR_SELS(IDX)).Cells(1, 1).Activate
                          End If
                       Else
                          Selection(Selection.count).Activate
                       End If
                       On Error GoTo 0
                    End If
                 Else
                    IDX = IDX - 1
                    If IDX < 1 Then
                       IDX = UBound(AR_SELS)
                    End If
                    If SW_LAST = False Then
                       W_SVR = ActiveCell.Row
                       W_SVC = ActiveCell.Column
                       If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                       Else
                          Worksheets(AR_SELS(IDX)).Activate
                       End If
                       On Error Resume Next
                       W_SELCNT = Selection.count
                       If W_SELCNT <= 1 Or _
                          Selection.MergeCells = True Then
                          If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
                          Else
                             Worksheets(AR_SELS(IDX)).Cells(Rows.count, Columns.count).Activate
                          End If
                       Else
                          Selection(1).Activate
                       End If
                    End If
                 End If
              End If
              If SW_CAN = True Then
                 SW_1ST = 99
              End If
              If SW_LAST = True Then
                 SW_1ST = 9
              End If
              If SW_CNTN = True Then
                 If IDX = W_SVIDX Then
                    SW_LAST = True
                 End If
              End If
              GoTo L_AFT_RE1
           End If
        End If
        
        SW_CNTN = False
        
        If SW_NEXT = True Then
           SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, SW_FRA, ActiveWorkbook, SW_SML)
        Else
           SW_FIND = REFINDP(W_SR, W_SC, W_ER, W_EC, SW_1ST, SW_FRA)
        End If
        
L_AFT_RE1:
        
        If W_ERRM = 2 Then
           Exit Do
        End If
        If SW_1ST = 99 Then
           Exit Do
        End If
        If SW_FIND = True Then
           SW_AFIND = True
           If SW_FRA <> 2 And _
              SW_FRA <> 3 And _
              SW_FRA <> 6 And _
              SW_FRA <> 7 And _
              SW_FRA <> 8 And _
              SW_FRA <> 9 Then
              Exit Do
           End If
        End If
        If IDX = SIDX And _
           SW_1ST = 9 Then
           Exit Do
        End If
     Else
     '|fffd||348||351|I|fffd||fffd|
        If Len(Selection.Address(True, True, xlR1C1)) <= 250 Then
           If Val(Application.Version) >= 9 Then
              AR_RANGE = SPLIT2000(Selection.Address(True, True, xlR1C1), ",")
           Else
              AR_RANGE = SPLIT97(Selection.Address(True, True, xlR1C1), ",")
           End If
        Else
           ReDim AR_RANGE(0 To Selection.Areas.count - 1)
           For I = 1 To Selection.Areas.count
              AR_RANGE(I - 1) = Selection.Areas(I).Address(True, True, xlR1C1)
           Next I
        End If
     
        If IDX = SIDX Then
           If SW_1ST = 1 Then
              For I = 0 To UBound(AR_RANGE)
                 Call RANGE_GET(AR_RANGE(I), W_SR, W_SC, W_ER, W_EC)
                 If ActiveCell.Row >= W_SR And _
                    ActiveCell.Row <= W_ER And _
                    ActiveCell.Column >= W_SC And _
                    ActiveCell.Column <= W_EC Then
                    W_SI = I
                    Exit For
                 End If
              Next I
           ElseIf SW_1ST = 2 Then
              If SW_NEXT = True Then
                 If SW_LABELN = False Then
                    If I > UBound(AR_RANGE) Then
                       SW_LABELN = True
                       GoTo LABEL_NEXT
                    End If
                 Else
                    I = 0
                 End If
              Else
                 If SW_LABELN = False Then
                    If I < 0 Then
                       SW_LABELN = True
                       GoTo LABEL_NEXT
                    End If
                 Else
                    I = UBound(AR_RANGE)
                 End If
              End If
           Else
              If SW_NEXT = True Then
                 I = 0
              Else
                 I = UBound(AR_RANGE)
              End If
           End If
        Else
           If SW_NEXT = True Then
              I = 0
           Else
              I = UBound(AR_RANGE)
           End If
        End If
  
        Do
           If SW_STOP = True Then
              Exit Do
           End If
           
           Call RANGE_GET(AR_RANGE(I), W_SR, W_SC, W_ER, W_EC)
           If IDX = SIDX And _
              I = W_SI And _
              SW_1ST = 0 Then
              SW_1ST = 9
           End If
           
           If SW_NEXT = True Then
              SW_FIND = REFIND(W_SR, W_SC, W_ER, W_EC, SW_1ST, SW_FRA, ActiveWorkbook, SW_SML)
           Else
              SW_FIND = REFINDP(W_SR, W_SC, W_ER, W_EC, SW_1ST, SW_FRA)
           End If
           
           If W_ERRM = 2 Then
              Exit Do
           End If
           If SW_1ST = 99 Then
              Exit Do
           End If
           If SW_FIND = True Then
              SW_AFIND = True
              If SW_FRA <> 2 And _
                 SW_FRA <> 3 And _
                 SW_FRA <> 6 And _
                 SW_FRA <> 7 And _
                 SW_FRA <> 8 And _
                 SW_FRA <> 9 Then
                 Exit Do
              End If
           End If
           If IDX = SIDX And _
              I = W_SI And _
              SW_1ST = 2 And _
              SW_LABELN = True Then
              SW_1ST = 9
           End If
           If IDX = SIDX And _
              I = W_SI And _
              SW_1ST = 9 Then
              Exit Do
           End If
        
           If SW_NEXT = True Then
              I = I + 1
              If I > UBound(AR_RANGE) Then
                 Exit Do
              End If
           Else
              I = I - 1
              If I < 0 Then
                 Exit Do
              End If
           End If
        Loop
     End If
  
LABEL_NEXT:
     If SW_1ST = 99 Then
        Exit Do
     End If
     If SW_FIND = True And _
        SW_FRA <> 2 And _
        SW_FRA <> 3 And _
        SW_FRA <> 6 And _
        SW_FRA <> 7 And _
        SW_FRA <> 8 And _
        SW_FRA <> 9 Then
        Exit Do
     End If
     If SW_1ST = 9 Then
        Exit Do
     End If
  
     If SW_CNTN = False Then
        If SW_NEXT = True Then
           IDX = IDX + 1
           If IDX > UBound(AR_SELS) Then
              IDX = 1
           End If
        Else
           IDX = IDX - 1
           If IDX < 1 Then
              IDX = UBound(AR_SELS)
           End If
        End If
     Else
        SW_1ST = 2
     End If
     
     If SW_1ST = 2 Then
        SW_NXSHT = True
     End If
  Loop
  
LABEL_LOOPE:
  
  If SW_STOP = True Or _
     SW_CAN = True Or _
     W_ERRM = 2 Then
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
     If SW_FRA = 3 Then
        Me.CommandButton12.Visible = True
        Me.CommandButton81.Visible = False
        Me.CommandButton1.Enabled = True
        Me.CommandButton2.Enabled = True
        Me.CommandButton37.Enabled = True
        Me.CommandButton78.Enabled = True
        Me.CommandButton87.Enabled = True
        Me.CommandButton45.Visible = True
        Me.CommandButton9.Enabled = True
        If SW_CLRKEEP = True And _
           (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) And _
           W_CNTFA > 0 Then
           If UserForm1.CheckBox49.Value = True Then
              W_RET = MsgBox("Undo decoration changes?", vbQuestion + vbOKCancel)
           Else
              W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd||1570c||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
           End If
           If W_RET = vbOK Then
              Call UNDO2_RTN
           End If
        End If
     End If
     If SW_FRA = 2 Then
        Me.CommandButton5.Visible = True
        Me.CommandButton82.Visible = False
        Me.CommandButton3.Enabled = True
        Me.CommandButton4.Enabled = True
        Me.CommandButton91.Enabled = True
        Me.CommandButton79.Enabled = True
        Me.CommandButton15.Visible = True
        If Me.ToggleButton2.Value = False Then
           Me.CommandButton54.Visible = True
        End If
        Me.CommandButton9.Enabled = True
        If W_CNTRA > 0 Then
           If UserForm1.CheckBox49.Value = True Then
              W_RET = MsgBox("Undo replacements?", vbQuestion + vbOKCancel)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||1570c||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbQuestion + vbOKCancel)
           End If
           If W_RET = vbOK Then
              Call UNDO_RTN
           End If
        End If
     End If
     Call COMBO_FOCUS
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
  If SW_1ST = 99 Then
     Set RE = Nothing
     Erase AR_SELS
     Call COMBO_FOCUS
     Application.ScreenUpdating = True
     Exit Sub
  End If
  
  SW_FEND = False
  If SW_FRA = 0 And _
     SW_AFIND = True And _
     Me.CheckBox208.Value = False Then
     If W_1RS = 0 And W_1RR = 0 And W_1RC = 0 Then
        SW_PNEXT = SW_NEXT
        '|fffd|O|fffd||fffd|J|fffd|n|fffd||292|u
        W_PSS = W_RSS
        W_PSR = W_RSR
        W_PSC = W_RSC
        '|fffd|O|fffd||4c2c9||288||292|u
        W_PRS = ActiveSheet.Index - W_CHTCNT
        W_PRR = R
        W_PRC = C
        '|fffd||fffd||fffd||4c2c9||288||292|u
        W_1RS = ActiveSheet.Index - W_CHTCNT
        W_1RR = R
        W_1RC = C
     Else
        If SW_NEXT = SW_PNEXT And _
           W_RSS = W_PRS And _
           W_RSR = W_PRR And _
           W_RSC = W_PRC Then
           '|fffd||fffd||fffd||4c2c9||288||292|u
           W_RRS = ActiveSheet.Index - W_CHTCNT
           W_RRR = R
           W_RRC = C
           If W_RRS = W_1RS And _
              W_RRR = W_1RR And _
              W_RRC = W_1RC Then
              SW_FEND = True
              SW_AFIND = False
              W_1RS = 0
              W_1RR = 0
              W_1RC = 0
           Else
              '|fffd|O|fffd||4c2c9||288||292|u
              W_PRS = ActiveSheet.Index - W_CHTCNT
              W_PRR = R
              W_PRC = C
           End If
        Else
           SW_PNEXT = SW_NEXT
           '|fffd|O|fffd||fffd|J|fffd|n|fffd||292|u
           W_PSS = W_RSS
           W_PSR = W_RSR
           W_PSC = W_RSC
           '|fffd|O|fffd||4c2c9||288||292|u
           W_PRS = ActiveSheet.Index - W_CHTCNT
           W_PRR = R
           W_PRC = C
           '|fffd||fffd||fffd||4c2c9||288||292|u
           W_1RS = ActiveSheet.Index - W_CHTCNT
           W_1RR = R
           W_1RC = C
        End If
     End If
  End If
  
  If SW_AFIND = False Then
     If Me.CheckBox7.Value = True Then
        Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
     Else
        IDX = SIDX
        If IsError(Worksheets(SS).ProtectContents) = True Then
        Else
           Worksheets(SS).Select
        End If
        If SW_FEND = True Then
           R = W_RSR
           C = W_RSC
        Else
           R = ActiveCell.Row
           C = ActiveCell.Column
        End If
        Call FIND_ACTV
     End If
  End If
  
  If SW_FRA = 3 And _
     Me.ToggleButton5 = False Then
     Me.CommandButton12.Visible = True
     Me.CommandButton81.Visible = False
     Me.CommandButton1.Enabled = True
     Me.CommandButton2.Enabled = True
     Me.CommandButton37.Enabled = True
     Me.CommandButton78.Enabled = True
     Me.CommandButton85.Enabled = True
     Me.CommandButton87.Enabled = True
     Me.CommandButton88.Enabled = True
     Me.CommandButton104.Enabled = True
     Me.CommandButton261.Enabled = True
     Me.CommandButton262.Enabled = True
     Me.CommandButton45.Visible = True
     Me.CommandButton9.Enabled = True
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If
  If SW_FRA = 2 Then
     Me.CommandButton5.Visible = True
     Me.CommandButton82.Visible = False
     Me.CommandButton3.Enabled = True
     Me.CommandButton4.Enabled = True
     Me.CommandButton91.Enabled = True
     Me.CommandButton79.Enabled = True
     Me.CommandButton15.Visible = True
     If Me.ToggleButton2.Value = False Then
        Me.CommandButton54.Visible = True
     End If
     Me.CommandButton9.Enabled = True
     Me.MultiPage1.Pages("Page1").Enabled = True
     Me.MultiPage1.Pages("Page2").Enabled = True
     Me.MultiPage1.Pages("Page3").Enabled = True
     Me.MultiPage1.Pages("Page4").Enabled = True
     Me.MultiPage1.Pages("Page5").Enabled = True
     Me.MultiPage1.Pages("Page6").Enabled = True
     Me.MultiPage1.Pages("Page7").Enabled = True
     Me.MultiPage1.Pages("Page8").Enabled = True
     Me.MultiPage1.Pages("Page9").Enabled = True
     Me.MultiPage1.Pages("Page10").Enabled = True
     Me.MultiPage1.Pages("Page11").Enabled = True
     Me.MultiPage1.Pages("Page12").Enabled = True
     Me.MultiPage1.Pages("Page13").Enabled = True
     Me.MultiPage1.Pages("Page14").Enabled = True
     Me.MultiPage1.Pages("Page15").Enabled = True
     Me.MultiPage1.Pages("Page16").Enabled = True
     Me.MultiPage1.Pages("Page17").Enabled = True
     Me.MultiPage1.Pages("Page18").Enabled = True
     Me.MultiPage1.Pages("Page19").Enabled = True
     Me.MultiPage1.Pages("Page20").Enabled = True
     Me.MultiPage1.Tag = ""
  End If
  
  If SW_FRA = 7 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        If Me.OptionButton11 = True Or _
           Me.OptionButton12 = True Then
           If W_1STO <= W_O Then
              If W_O < ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row Then
                 Range(Rows(W_O + 1), Rows(ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row)).Rows.Group
              End If
              If W_1STO > 2 Then
                 Range(Rows(1), Rows(W_1STO - 1)).Rows.Group
              End If
           Else
              If W_1STO > 2 Then
                 Range(Rows(W_O + 1), Rows(W_1STO - 1)).Rows.Group
              End If
           End If
           ActiveSheet.Outline.ShowLevels rowLevels:=1
        End If
     Else
        If Me.OptionButton13 = True Then
           If W_1STO <= W_O Then
              If W_O < ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column Then
                 Range(Columns(W_O + 1), Columns(ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column)).Columns.Group
              End If
              If W_1STO > 2 Then
                 Range(Columns(1), Columns(W_1STO - 1)).Columns.Group
              End If
           Else
              If W_1STO > 2 Then
                 Range(Columns(W_O + 1), Columns(W_1STO - 1)).Columns.Group
              End If
           End If
           ActiveSheet.Outline.ShowLevels columnLevels:=1
        End If
     End If
     Me.OptionButton11.Value = W_OB11
     Me.OptionButton12.Value = W_OB12
     Me.OptionButton13.Value = W_OB13
  End If
  
  If SW_FRA = 8 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        If SW_AFIND = False Then
           Rows.Hidden = False
        End If
        ActiveWindow.ScrollRow = 1
     Else
        If SW_AFIND = False Then
           Columns.Hidden = False
        End If
        ActiveWindow.ScrollColumn = 1
     End If
     Me.OptionButton11.Value = W_OB11
     Me.OptionButton12.Value = W_OB12
     Me.OptionButton13.Value = W_OB13
  End If
  
  Application.ScreenUpdating = True
  
  If SW_AFIND = False Then
     Select Case SW_FRA
     Case 0, 3, 6, 7, 8, 9
        If SW_FRA = 7 Then
           Cells.ClearOutline
        End If
        If SW_TM = True Then
           SW_TM = False
           Call TMNP_END
           W_TMMS = 0
        End If
        
        If SW_FEND = True Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Has completed search.")
           Else
              W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
           End If
        End If
           
        If Me.CheckBox206.Value = True And _
           SW_IS = False And _
           SW_FEND = False Then
           If SW_FRA = 0 Or _
              SW_FRA = 3 Then
              If W_FW = Me.ComboBox1.Value And _
                 SW_SIM = False Then
                 W_NMLCHK_BK = W_NMLCHK
                 SW_NRML_BK = SW_NRML
                 
                 W_SW_CNV = Me.ComboBox1.Value
                 If SW_NRML = True Then
                    W_SW_CNV = SWING_CNV(Me.ComboBox1.Value)
                 ElseIf W_NMLCHK <> "" Then
                    W_SW_CNV = SWING_CNV(W_NMLCHK)
                    W_SW_CNV = Replace(Me.ComboBox1.Value, W_NMLCHK, W_SW_CNV)
                 End If
                 
                 If W_SW_CNV <> Me.ComboBox1.Value Then
                    If Me.CheckBox49.Value = True Then
                       W_RET = MsgBox("Can't find a match." & vbCrLf & _
                                      "Will do fuzzy search.", vbOKCancel)
                    Else
                       W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                      "|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
                    End If
                    If W_RET = vbOK Then
                       Call FINDPN(SW_NEXT, SW_FRA, W_SW_CNV)
                    End If
                    Exit Sub
                 Else
                    If Len(W_NMLCHK_BK) >= 4 Or _
                       (SW_NRML_BK = True And _
                        Len(Me.ComboBox1.Value) >= 4) Then
                       If Me.CheckBox49.Value = True Then
                          W_RET = MsgBox("Can't find a match." & vbCrLf & _
                                         "Will do similar search.", vbOKCancel)
                       Else
                          W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                         "|fffd||78e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
                       End If
                       If W_RET = vbOK Then
                          Call FINDPN(SW_NEXT, SW_FRA, "", True)
                       End If
                       Exit Sub
                    End If
                 End If
              ElseIf SW_SIM = False Then
                 If Len(W_NMLCHK_BK) >= 4 Or _
                    (SW_NRML_BK = True And _
                     Len(Me.ComboBox1.Value) >= 4) Then
                    If Me.CheckBox49.Value = True Then
                       W_RET = MsgBox("Can't find a match." & vbCrLf & _
                                      "Will do similar search.", vbOKCancel)
                    Else
                       W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                                      "|fffd||78e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
                    End If
                    If W_RET = vbOK Then
                       Call FINDPN(SW_NEXT, SW_FRA, "", True)
                    End If
                    Exit Sub
                 End If
              End If
           End If
        End If
        
        If SW_IS = False And _
           SW_FEND = False Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Can't find a match." & _
                             "Check if your search formatting and criteria are defined correctly.")
           Else
              W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & _
                             "|fffd|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||a3ca||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
           End If
        End If
     Case 1
        If W_CNTFA = 0 Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("No data found.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
           End If
        Else
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Can't be replaced because of formula error after replace.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
           End If
        End If
     Case 2
        If W_CNTFA = 0 Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Can't find any data to replace." & vbCrLf & _
                             "Check if your search formatting and criteria are defined correctly." & vbCrLf & _
                             "If you are sure that matching data exists in this workbook," & vbCrLf & _
                             "it may be on a protected sheet." & vbCrLf & _
                             "Can't replace data on a protected worksheet.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||38f||6c2||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||fffd||fffd||303|u|fffd|b|fffd|N|fffd||248||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||70a9||fffd||fffd||fffd||7d5||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||341|A" & vbCrLf & _
                             "|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||6cc||c0b3||fffd||fffd||102||202||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                             "|fffd||6cc||c0b3||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||352|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
           End If
        Else
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Can't be replaced because of formula error after replace.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation)
           End If
        End If
        If SW_SML = True Then
           ActiveWorkbook.Close False
        End If
     End Select
     Call COMBO_FOCUS
  Else
     Select Case SW_FRA
     Case 0
        ReDim AR_SELS2(UBound(AR_SELS))
        L = IDX
        M = 0
        Do While M < UBound(AR_SELS2)
           M = M + 1
           AR_SELS2(M) = AR_SELS(L)
           If SW_NEXT = True Then
              L = L + 1
              If L > UBound(AR_SELS) Then
                 L = 1
              End If
           Else
              L = L - 1
              If L < 1 Then
                 L = UBound(AR_SELS)
              End If
           End If
        Loop
        If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
        Else
           Worksheets(AR_SELS(IDX)).Activate
           Worksheets(AR_SELS2).Select
        End If
        
        Cells(W_1STFR, W_1STFC).Activate
     Case 1, 2
        If Me.CheckBox12.Value = True Then
           If W_RET = vbNo Then
              Cells(W_1STFR, W_1STFC).Activate
           End If
        Else
           If SW_SPREP = True Then
              Cells(W_1STFR, W_1STFC).Activate
           Else
              If W_1STRR = 0 Or W_1STRC = 0 Then
                 Cells(W_1STFR, W_1STFC).Activate
              Else
                 Cells(W_1STRR, W_1STRC).Activate
              End If
           End If
        End If
     End Select

     If Me.CheckBox41.Value = False And _
        Me.CheckBox88.Value = False Then
        Call HISTORY_RTN
     End If
       
     If Me.Visible = True And _
        SW_TM = False Then
        Call SET_POS(SW_NEXT)
     End If
     
     If (SW_FRA = 0 Or _
         SW_FRA = 3) And _
        SW_CLRKEEP = True And _
        (SW_DCB2 = True Or _
         SW_DCI2 = True Or _
         SW_DCU2 = True Or _
         SW_DCK2 = True Or _
         SW_DCC2 = True) And _
        W_FNDBOOK <> "" And _
        W_CNTFA > 0 Then
        Set OWB = New C01OtherWorkbook
     End If
     If (SW_FRA = 1 Or _
         SW_FRA = 2) And _
        W_REPBOOK <> "" And _
        W_CNTRA > 0 Then
        ReDim Preserve AR_REP(11, W_CNTRA)
        Set OWB = New C01OtherWorkbook
     End If
     Select Case SW_FRA
     Case 0
        If SW_TM = False Then
           Call COMBO_FOCUS
        End If
     Case 1
        If W_CNTRA <> W_CNTRA2 Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox("Cells that can't be replaced because of formula error after replace exist.", vbExclamation)
           Else
              W_RET = MsgBox("|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
           End If
        End If
        Call COMBO_FOCUS
     Case 2
        If SW_SML = True Then
           If Me.CheckBox49.Value = True Then
              W_SML = " simulation"
           Else
              W_SML = "|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|"
           End If
        Else
           W_SML = ""
        End If
        If W_CNTRA = W_CNTRA2 Then
           If W_CNTRA2 <> 0 Then
              If W_CNTFA = W_CNTRA2 Then
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Has completed search and has made " & W_CNTRA2 & " replacements" & W_SML & ".", vbInformation)
                 Else
                    W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
                 End If
              Else
                 If Me.CheckBox49.Value = True Then
                    W_RET = MsgBox("Has completed " & W_CNTFA & " searches and has made " & W_CNTRA2 & " replacements" & W_SML & ".", vbInformation)
                 Else
                    W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
                 End If
              End If
           End If
        Else
           If W_CNTFA = W_CNTRA2 Then
              If Me.CheckBox49.Value = True Then
                 W_RET = MsgBox("Has completed search and has made " & W_CNTRA2 & " replacements" & W_SML & "." & vbCrLf & _
                                "Cells that can't be replaced because of formula error after replace exist.", vbExclamation)
              Else
                 W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                                "|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
              End If
           Else
              If Me.CheckBox49.Value = True Then
                 W_RET = MsgBox("Has completed " & W_CNTFA & " searches and has made " & W_CNTRA2 & " replacements" & W_SML & "." & vbCrLf & _
                                "Cells that can't be replaced because of formula error after replace exist.", vbExclamation)
              Else
                 W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd|" & W_SML & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & _
                                "|fffd|u|fffd||fffd||fffd||fffd||250||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[|fffd||182||202||90bd||fffd||7d2|u|fffd||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation)
              End If
           End If
        End If
        Call COMBO_FOCUS
     Case 3
        If Me.ToggleButton6.Value = True Then
           Me.ToggleButton6 = False
        End If
        Call ALL_FIND
        If Me.CheckBox74.Value = False And _
           Me.CheckBox92.Value = False Then
           If Me.Label150.Tag <> "" And _
              W_CNTFA > 3 Then
              Me.Label150.Visible = True
           End If
        End If
     Case 6
        W_UNION.Select
        Set W_UNION = Nothing
        If Me.OptionButton14.Value = True Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox(W_CNTFA & " cell(s) were selected.", vbInformation)
           Else
              W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
           End If
        ElseIf Me.OptionButton15.Value = True Then
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox(W_CNTSA & " row(s) were selected.", vbInformation)
           Else
              W_RET = MsgBox(W_CNTSA & " |fffd||fffd||fffd||30d|s|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
           End If
        Else
           If Me.CheckBox49.Value = True Then
              W_RET = MsgBox(W_CNTSA & " column(s) were selected.", vbInformation)
           Else
              W_RET = MsgBox(W_CNTSA & " |fffd||fffd||fffd||317||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
           End If
        End If
        Call COMBO_FOCUS
     Case 9
        If Me.CheckBox49.Value = True Then
           W_RET = MsgBox(W_CNTFA & " cell(s) were marked.", vbInformation)
        Else
           W_RET = MsgBox(W_CNTFA & " |fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd|}|fffd|[|fffd|N|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
        Call COMBO_FOCUS
     End Select
     
     If SW_FRA = 0 Then
        If Me.CheckBox74.Value = False And _
           Me.CheckBox92.Value = False Then
           Call KEEP_FIND_INFO
        End If
     End If
  End If

  If Me.CheckBox69.Value = True Then
     Select Case SW_FRA
     Case 0, 3, 6, 7, 8, 9
        Call TAB_ORDER_CHG(1)
     Case 1, 2
        Call TAB_ORDER_CHG(2)
     End Select
  End If
  
  Set NRE = Nothing
  Set NRE2 = Nothing
  Set RE = Nothing
  Set RE2 = Nothing
  
  Erase AR_SELS
  
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  Set RE2 = Nothing
  If SW_RE2 = False Then
     SW_NR = True
  Else
     SW_NR2 = True
  End If
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  If SW_TM = True Then
     SW_TM = False
     Call TMNP_END
     W_TMMS = 0
  End If
  Set RE = Nothing
  Set RE2 = Nothing
  Erase AR_SELS
  If Me.CheckBox7.Value = True Then
     Call SEL_RCVR_RTN(W_AS, W_AR, W_AC)
  End If
  If SW_IS = False Then
     If Me.CheckBox49.Value = True Then
        W_RET = MsgBox("Error exists in find pattern. Check.")
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
     End If
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  Exit Sub

LABEL_ERR3:
  On Error GoTo 0
  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Fix worksheet name.")
  Else
     W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|m|fffd||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  If SW_RE2 = False Then
     Call COMBO_FOCUS
  Else
     Call COMBO_FOCUS2
  End If
  Exit Sub

End Sub

Private Function NRML_EXIST(WS As Worksheet, ByVal SW_FRA As Long) As Boolean
                 
  Dim AR_STR As Variant
  Dim I As Long
  Dim J As Long
  
  Dim RNG As Range
  Dim W_LI As Variant
  Dim W_FW As String
  Dim W_MC As Boolean
  Dim W_MB As Boolean
  Dim W_FWBK As String
  
                 
  NRML_EXIST = False
                 
  WS.Cells(1, 1).Select
  
  If Me.CheckBox3.Value = True Then
     W_LI = xlValues
  Else
     W_LI = xlFormulas
  End If
  
  AR_STR = Split(W_NMLCHK, vbTab)
  For I = 0 To UBound(AR_STR)
     W_FW = AR_STR(I)
  
     If SW_FRA = 4 Then
        If Me.CheckBox32.Value = True Then
           W_FWBK = W_FW
           W_FW = ""
           For J = 1 To Len(W_FWBK)
              If J = 1 Then
                 W_FW = Mid$(W_FWBK, J, 1)
              Else
                 If Mid$(W_FWBK, J - 1, 2) = "~~" Then
                    W_FW = W_FW & Mid$(W_FWBK, J, 1)
                 Else
                    W_FW = W_FW & "*" & Mid$(W_FWBK, J, 1)
                 End If
              End If
           Next J
        End If
     End If
  
     W_MC = Me.CheckBox1.Value
     If W_FW Like "*[A-Z]*" Then
     Else
        W_MC = True
     End If
     
     W_MB = True
     If W_FW = String$(Len(W_FW), "?") Then
        W_MB = False
     End If
     
     Set RNG = Nothing
     If Val(Application.Version) < 10 Then
        Set RNG = FIND2000(WS.Cells, W_FW, ActiveCell, W_LI, xlByRows, xlNext, W_MC, W_MB)
     Else
        Set RNG = FIND2002(WS.Cells, W_FW, ActiveCell, W_LI, xlByRows, xlNext, W_MC, W_MB)
     End If
                  
     If RNG Is Nothing Then
     Else
        NRML_EXIST = True
        Exit For
     End If
  Next I

  Set WS = Nothing

End Function

Private Function NRML_EXIST2(WS As Worksheet, ByVal SW_FRA As Long) As Boolean
                 
  Dim RNG As Range
  Dim W_LI As Variant
  Dim W_FW As String
  Dim W_MC As Boolean
  Dim W_MB As Boolean
  Dim I As Long
  Dim W_FWBK As String
  
                 
  NRML_EXIST2 = False
                 
  WS.Cells(1, 1).Select
  
  If Me.CheckBox3.Value = True Then
     W_LI = xlValues
  Else
     W_LI = xlFormulas
  End If
  
  If W_NMLCHK <> "" Then
     W_FW = W_NMLCHK
  Else
     W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
  End If
  
  If SW_FRA = 4 Then
     If Me.CheckBox32.Value = True Then
        W_FWBK = W_FW
        W_FW = ""
        For I = 1 To Len(W_FWBK)
           If I = 1 Then
              W_FW = Mid$(W_FWBK, I, 1)
           Else
              If Mid$(W_FWBK, I - 1, 2) = "~~" Then
                 W_FW = W_FW & Mid$(W_FWBK, I, 1)
              Else
                 W_FW = W_FW & "*" & Mid$(W_FWBK, I, 1)
              End If
           End If
        Next I
     End If
  End If
  
  W_MC = Me.CheckBox1.Value
  If W_FW Like "*[A-Z]*" Then
  Else
     W_MC = True
  End If
     
  W_MB = True
  If W_FW = String$(Len(W_FW), "?") Then
     W_MB = False
  End If
     
  Set RNG = Nothing
  If Val(Application.Version) < 10 Then
     Set RNG = FIND2000(WS.Cells, W_FW, ActiveCell, W_LI, xlByRows, xlNext, W_MC, W_MB)
  Else
     Set RNG = FIND2002(WS.Cells, W_FW, ActiveCell, W_LI, xlByRows, xlNext, W_MC, W_MB)
  End If
                  
  If RNG Is Nothing Then
  Else
     NRML_EXIST2 = True
  End If
 
  Set WS = Nothing
 
End Function

Private Sub NRML_FIND(ByVal SW_NEXT As Boolean, ByVal SW_FRA As Long, ByVal SW_LAST As Boolean, ByVal W_SVR1 As Long, ByVal W_SVC1 As Long, ByVal SW_NXSHT As Boolean, Optional ByVal SW_SIM As Boolean, Optional ByVal SW_SML As Boolean)
  
  Dim TRNG As Range
  Dim RNG As Range
  Dim AD1ST As String
  
  Dim W_LI As Variant
  Dim W_SO As Variant
  Dim W_SD As Variant
  Dim W_MC As Boolean
  Dim W_MB As Boolean
  
  Dim SW_LPEND As Boolean
  
  Dim W_FW As String
  Dim SW_HIT As Boolean
  
  Dim W_1STR As Long
  Dim W_1STC As Long
  
  Dim SW_WK As Boolean
  
  Dim W_RNGAD As String
  
  Dim SR As Long
  Dim SC As Long
  Dim ER As Long
  Dim EC As Long

  Dim W_TRCNT As Variant
  Dim W_FWBK As String
  Dim I As Long

  
  SW_SIM2 = SW_SIM
  
  On Error Resume Next
  Set TRNG = Nothing
  If SW_FRA = 4 Or SW_FRA = 5 Then
     Cells(1, 1).Select
  ElseIf (InStr(Selection.Address(True, True, xlR1C1), ":") = 0 And _
      InStr(Selection.Address(True, True, xlR1C1), "R") > 0 And _
      InStr(Selection.Address(True, True, xlR1C1), "C") > 0) Or _
     Selection.MergeCells = True Then
  Else
     Set TRNG = Selection
  End If
  If TRNG Is Nothing Then
     If Intersect(ActiveCell, ActiveSheet.UsedRange) Is Nothing Then
        Set TRNG = Cells
     Else
        Set TRNG = ActiveSheet.UsedRange
     End If
  End If
  
  W_TRCNT = CELL_CNT(TRNG)
  On Error GoTo 0
  
  If Me.CheckBox3.Value = True Then
     W_LI = xlValues
  Else
     W_LI = xlFormulas
  End If
  
  If Me.OptionButton11.Value = True Then
     If SW_FRA = 4 Or SW_FRA = 5 Then
        W_SO = xlByRows
     Else
        Call RANGE_GET(TRNG.Address(True, True, xlR1C1), SR, SC, ER, EC)
        If ER - SR < EC - SC Then
           W_SO = xlByColumns
        Else
           W_SO = xlByRows
        End If
     End If
  ElseIf Me.OptionButton12.Value = True Then
     W_SO = xlByRows
  Else
     W_SO = xlByColumns
  End If
  
  If SW_NEXT = True Then
     W_SD = xlNext
  Else
     W_SD = xlPrevious
  End If
    
  If W_NMLCHK <> "" Then
     If W_NMLCHK = vbTab Then
        W_FW = "?"
     Else
        W_FW = W_NMLCHK
     End If
  Else
     If SW_SIM2 = False Then
        W_FW = Application.Substitute(Me.ComboBox1.Value, "~", "~~")
     Else
        W_FW = Left$(Me.ComboBox1.Value, 1) & String$(Len(Me.ComboBox1.Value) - 1, "?")
        W_FW = Application.Substitute(W_FW, "~", "~~")
     End If
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Or _
     SW_FRA = 4 Then
     If Me.CheckBox32.Value = True Then
        W_FWBK = W_FW
        W_FW = ""
        For I = 1 To Len(W_FWBK)
           If I = 1 Then
              W_FW = Mid$(W_FWBK, I, 1)
           Else
              If Mid$(W_FWBK, I - 1, 2) = "~~" Then
                 W_FW = W_FW & Mid$(W_FWBK, I, 1)
              Else
                 W_FW = W_FW & "*" & Mid$(W_FWBK, I, 1)
              End If
           End If
        Next I
     End If
  End If
  
  W_SGFW = W_FW
  
  W_MC = Me.CheckBox1.Value
  If W_FW Like "*[A-Z]*" Then
  Else
     W_MC = True
  End If
  
  W_MB = True
  If W_FW = String$(Len(W_FW), "?") Then
     W_MB = False
  End If
  
  If ((ActiveCell.Row = 1 And _
       ActiveCell.Column = 1) Or _
      (ActiveCell.Row = Selection(1).Row And _
       ActiveCell.Column = Selection(1).Column And _
       Selection.count > 1)) And _
     SW_NXSHT = True And _
     SW_NEXT = True Then
     If Selection.count = 1 Or _
        Selection.MergeCells = True Then
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(TRNG, W_FW, TRNG.Cells(W_TRCNT), W_LI, W_SO, W_SD, W_MC, W_MB)
        Else
           Set RNG = FIND2002(TRNG, W_FW, TRNG.Cells(W_TRCNT), W_LI, W_SO, W_SD, W_MC, W_MB)
        End If
     Else
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(TRNG, W_FW, ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count), W_LI, W_SO, W_SD, W_MC, W_MB)
        Else
           Set RNG = FIND2002(TRNG, W_FW, ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count), W_LI, W_SO, W_SD, W_MC, W_MB)
        End If
     End If
     
     W_RNGAD = ""
     On Error Resume Next
     W_RNGAD = RNG.Address
     On Error GoTo 0
     If W_RNGAD = AD1ST Then
        Set RNG = Nothing
        Exit Sub
     End If
     
     If Not RNG Is Nothing Then
        If (RNG.Row = 1 And _
            RNG.Column = 1) Or _
           (RNG.Row = Selection(1).Row And _
            RNG.Column = Selection(1).Column And _
            Selection.count > 1) Then
           AD1ST = RNG.Address
           SW_HIT = False
           If W_NMLCHK <> "" Then
              SW_HIT = NRML_RE(SW_FRA, RNG)
              If SW_HIT = True Then
                 If W_ATEXT <> "" And _
                    W_FNDSTR2 <> "" Then
                    If SW_NR2 = False Then
                       SW_WK = RE2.Test(RNG)
                    Else
                       SW_WK = NRTEST(NRE2, CStr(RNG))
                    End If
                    
                    If SW_WK = Not SW_ADDDENY Then
                       SW_HIT = True
                    Else
                       SW_HIT = False
                    End If
                 End If
              End If
           Else
              SW_HIT = NRML_INSTR(SW_FRA, RNG)
           End If
           If SW_HIT = True Then
              Call SET_NRML_FIND(SW_FRA, RNG, SW_SML)
              If W_ERRM = 2 Then
                 Exit Sub
              End If
              If SW_FRA = 0 And W_CNTFA > 0 Then
                 Exit Sub
              ElseIf SW_FRA = 1 And W_CNTFA > 0 And W_CNTRA > 0 And W_CNTRA2 > 0 Then
                 Exit Sub
              ElseIf (SW_FRA = 1 Or SW_FRA = 2) And SW_CAN = True Then
                 Exit Sub
              End If
           Else
              W_1STR = RNG.Row
              W_1STC = RNG.Column
           End If
        End If
     End If
  End If
  
  If ((ActiveCell.Row = Rows.count And _
       ActiveCell.Column = Columns.count) Or _
      (ActiveCell.Row = ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count).Row And _
       ActiveCell.Column = ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count).Column And _
       Selection.count > 1)) And _
     SW_NXSHT = True And _
     SW_NEXT = False Then
     If Selection.count = 1 Or _
        Selection.MergeCells = True Then
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(TRNG, W_FW, TRNG.Cells(1), W_LI, W_SO, W_SD, W_MC, W_MB)
        Else
           Set RNG = FIND2002(TRNG, W_FW, TRNG.Cells(1), W_LI, W_SO, W_SD, W_MC, W_MB)
        End If
     Else
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(TRNG, W_FW, Selection(1), W_LI, W_SO, W_SD, W_MC, W_MB)
        Else
           Set RNG = FIND2002(TRNG, W_FW, Selection(1), W_LI, W_SO, W_SD, W_MC, W_MB)
        End If
     End If

     W_RNGAD = ""
     On Error Resume Next
     W_RNGAD = RNG.Address
     On Error GoTo 0
     If W_RNGAD = AD1ST Then
        Set RNG = Nothing
        Exit Sub
     End If
     
     If Not RNG Is Nothing Then
        If (RNG.Row = Rows.count And _
            RNG.Column = Columns.count) Or _
           (RNG.Row = ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count).Row And _
            RNG.Column = ActiveSheet.UsedRange.Cells(ActiveSheet.UsedRange.Cells.count).Column And _
            Selection.count > 1) Then
           AD1ST = RNG.Address
           SW_HIT = False
           If W_NMLCHK <> "" Then
              SW_HIT = NRML_RE(SW_FRA, RNG)
           Else
              SW_HIT = NRML_INSTR(SW_FRA, RNG)
           End If
           If SW_HIT = True Then
              Call SET_NRML_FIND(SW_FRA, RNG, SW_SML)
              If W_ERRM = 2 Then
                 Exit Sub
              End If
              If SW_FRA = 0 And W_CNTFA > 0 Then
                 Exit Sub
              ElseIf SW_FRA = 1 And W_CNTFA > 0 And W_CNTRA > 0 And W_CNTRA2 > 0 Then
                 Exit Sub
              ElseIf (SW_FRA = 1 Or SW_FRA = 2) And SW_CAN = True Then
                 Exit Sub
              End If
           Else
              W_1STR = RNG.Row
              W_1STC = RNG.Column
           End If
        End If
     End If
  End If
  
  If Val(Application.Version) < 10 Then
     Set RNG = FIND2000(TRNG, W_FW, ActiveCell, W_LI, W_SO, W_SD, W_MC, W_MB)
  Else
     Set RNG = FIND2002(TRNG, W_FW, ActiveCell, W_LI, W_SO, W_SD, W_MC, W_MB)
  End If
  
  Call RNG_JDG(SW_FRA, SW_NEXT, SW_LAST, W_SO, W_SVR1, W_SVC1, RNG)
  
  W_RNGAD = ""
  On Error Resume Next
  W_RNGAD = RNG.Address
  On Error GoTo 0
  If W_RNGAD = AD1ST Then
     Set RNG = Nothing
     Exit Sub
  End If
  
  If Not RNG Is Nothing Then
     If AD1ST = "" Then
        AD1ST = RNG.Address
     End If
     SW_HIT = False
     If W_NMLCHK <> "" Then
        SW_HIT = NRML_RE(SW_FRA, RNG)
        If SW_HIT = True Then
           If W_ATEXT <> "" And _
              W_FNDSTR2 <> "" Then
              If SW_NR2 = False Then
                 SW_WK = RE2.Test(RNG)
              Else
                 SW_WK = NRTEST(NRE2, CStr(RNG))
              End If
              
              If SW_WK = Not SW_ADDDENY Then
                 SW_HIT = True
              Else
                 SW_HIT = False
              End If
           End If
        End If
     Else
        SW_HIT = NRML_INSTR(SW_FRA, RNG)
     End If
     If SW_HIT = True Then
        Call SET_NRML_FIND(SW_FRA, RNG, SW_SML)
        If W_ERRM = 2 Then
           Exit Sub
        End If
     Else
        If ActiveCell.Row = 1 And _
           ActiveCell.Column = 1 And _
           SW_NXSHT = True And _
           SW_NEXT = True Then
        ElseIf ActiveCell.Row = Rows.count And _
           ActiveCell.Column = Columns.count And _
           SW_NXSHT = True And _
           SW_NEXT = False Then
        Else
           W_1STR = RNG.Row
           W_1STC = RNG.Column
        End If
     End If
                 
     If SW_FRA = 0 And W_CNTFA > 0 Then
     ElseIf SW_FRA = 1 And W_CNTFA > 0 And W_CNTRA > 0 And W_CNTRA2 > 0 Then
     ElseIf (SW_FRA = 1 Or SW_FRA = 2) And SW_CAN = True Then
     Else
        If Val(Application.Version) < 10 Then
           Set RNG = FIND2000(TRNG, W_FW, RNG, W_LI, W_SO, W_SD, W_MC, W_MB)
        Else
           Set RNG = FIND2002(TRNG, W_FW, RNG, W_LI, W_SO, W_SD, W_MC, W_MB)
        End If

        W_RNGAD = ""
        On Error Resume Next
        W_RNGAD = RNG.Address
        On Error GoTo 0
        If W_RNGAD = AD1ST Then
           Set RNG = Nothing
           Exit Sub
        End If
        
        Call RNG_JDG(SW_FRA, SW_NEXT, SW_LAST, W_SO, W_SVR1, W_SVC1, RNG)
        If Not RNG Is Nothing Then
           If RNG.Address <> AD1ST Then
              SW_HIT = False
              If W_NMLCHK <> "" Then
                 SW_HIT = NRML_RE(SW_FRA, RNG)
                 If SW_HIT = True Then
                    If W_ATEXT <> "" And _
                       W_FNDSTR2 <> "" Then
                       If SW_NR2 = False Then
                          SW_WK = RE2.Test(RNG)
                       Else
                          SW_WK = NRTEST(NRE2, CStr(RNG))
                       End If
                       
                       If SW_WK = Not SW_ADDDENY Then
                          SW_HIT = True
                       Else
                          SW_HIT = False
                       End If
                    End If
                 End If
              Else
                 SW_HIT = NRML_INSTR(SW_FRA, RNG)
              End If
              If SW_HIT = True Then
                 Call SET_NRML_FIND(SW_FRA, RNG, SW_SML)
                 If W_ERRM = 2 Then
                    Exit Sub
                 End If
              End If
           End If
        
           SW_LPEND = False
           If SW_FRA = 0 And W_CNTFA > 0 Then
              SW_LPEND = True
           End If
           If SW_FRA = 1 And W_CNTFA > 0 And W_CNTRA > 0 And W_CNTRA2 > 0 Then
              SW_LPEND = True
           End If
           If (SW_FRA = 1 Or SW_FRA = 2) And SW_CAN = True Then
              SW_LPEND = True
           End If
        
           Do Until SW_LPEND = True
              If Val(Application.Version) < 10 Then
                 Set RNG = FIND2000(TRNG, W_FW, RNG, W_LI, W_SO, W_SD, W_MC, W_MB)
              Else
                 Set RNG = FIND2002(TRNG, W_FW, RNG, W_LI, W_SO, W_SD, W_MC, W_MB)
              End If

              W_RNGAD = ""
              On Error Resume Next
              W_RNGAD = RNG.Address
              On Error GoTo 0
              If W_RNGAD = AD1ST Then
                 Set RNG = Nothing
                 Exit Sub
              End If
              
              Call RNG_JDG(SW_FRA, SW_NEXT, SW_LAST, W_SO, W_SVR1, W_SVC1, RNG)
              If Not RNG Is Nothing Then
                 If RNG.Address <> AD1ST Then
                    SW_HIT = False
                    If W_NMLCHK <> "" Then
                       SW_HIT = NRML_RE(SW_FRA, RNG)
                       If SW_HIT = True Then
                          If W_ATEXT <> "" And _
                             W_FNDSTR2 <> "" Then
                             If SW_NR2 = False Then
                                SW_WK = RE2.Test(RNG)
                             Else
                                SW_WK = NRTEST(NRE2, CStr(RNG))
                             End If
                             
                             If SW_WK = Not SW_ADDDENY Then
                                SW_HIT = True
                             Else
                                SW_HIT = False
                             End If
                          End If
                       End If
                    Else
                       SW_HIT = NRML_INSTR(SW_FRA, RNG)
                    End If
                    If SW_HIT = True Then
                       Call SET_NRML_FIND(SW_FRA, RNG, SW_SML)
                       If W_ERRM = 2 Then
                          Exit Sub
                       End If
                     
                       If SW_FRA = 0 And W_CNTFA > 0 Then
                          SW_LPEND = True
                       End If
                       If SW_FRA = 1 And W_CNTFA > 0 And W_CNTRA > 0 And W_CNTRA2 > 0 Then
                          SW_LPEND = True
                       End If
                       If (SW_FRA = 1 Or SW_FRA = 2) And SW_CAN = True Then
                          SW_LPEND = True
                       End If
                       If SW_FRA = 2 Or SW_FRA = 3 Or SW_FRA = 4 Or SW_FRA = 5 Then
                          DoEvents
                          If SW_STOP = True Then
                             SW_LPEND = True
                          End If
                       End If
                    Else
                       If RNG.Row = W_1STR And RNG.Column = W_1STC Then
                          SW_LPEND = True
                       End If
                    End If
                 Else
                    SW_LPEND = True
                 End If
              Else
                 SW_LPEND = True
              End If
           Loop
        End If
     End If
     Set RNG = Nothing
  End If
  Set TRNG = Nothing

End Sub

Private Function NRML_RE(ByVal SW_FRA As Long, ByRef RNG As Range) As Boolean

  Dim W_CELL As String
  Dim RE9 As Object
  Dim MATCHES As Object
  Dim I As Long
  Dim W_LTXT As String
  Dim W_RTXT As String
    
    
  NRML_RE = False
  
  If IsOF(RNG) = True Then
  ElseIf IsError(RNG.Value) = True Then
     If Me.CheckBox3.Value = True Or _
        RNG.FormulaHidden = True Then
     Else
        On Error Resume Next
        W_CELL = RNG.Formula
        On Error GoTo 0
     End If
  Else
     If Me.CheckBox3.Value = True Or _
        RNG.FormulaHidden = True Then
        W_CELL = RNG.Value
     Else
        If VarType(RNG.Value) = vbDate Then
           W_CELL = RNG.Value
        Else
           W_CELL = RNG.Value
           On Error Resume Next
           W_CELL = RNG.Formula
           On Error GoTo 0
        End If
     End If
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Or _
     SW_FRA = 4 Then
     If Me.CheckBox32.Value = True Then
        W_CELL = Replace(W_CELL, vbLf, "")
     End If
  End If
  
  If SW_SIM2 = True Then
     Set RE9 = CreateObject("VBScript.RegExp")
     With RE9
        .Pattern = Replace(W_NMLCHK, "?", ".")
        .IgnoreCase = True
        .Global = True
     End With
     If RE9.Test(W_CELL) = True Then
        W_LTXT = W_NMLCHK_BK
        Set MATCHES = RE9.Execute(W_CELL)
        For I = 0 To MATCHES.count - 1
           W_RTXT = MATCHES.Item(I).Value
           If COMP_LINE_RATE(W_LTXT, W_RTXT, 1, Len(W_LTXT), 1, Len(W_RTXT), 2) >= 75 Then
              W_CELL = Left$(W_CELL, MATCHES.Item(I).FirstIndex) & W_NMLCHK_BK & Right$(W_CELL, Len(W_CELL) - MATCHES.Item(I).FirstIndex - MATCHES.Item(I).Length)
           End If
        Next I
        Set MATCHES = Nothing
     End If
     Set RE9 = Nothing
  End If
  
  If SW_NR = False Then
     NRML_RE = RE.Test(W_CELL)
  Else
     NRML_RE = NRTEST(NRE, W_CELL)
  End If

End Function

Private Function NRML_INSTR(ByVal SW_FRA As Long, ByRef RNG As Range) As Boolean

  Dim W_CELL As String
  Dim W_FW As String
  Dim RE9 As Object
  Dim MATCHES As Object
  Dim I As Long
  Dim W_LTXT As String
  Dim W_RTXT As String
  
  
  NRML_INSTR = False
  
  If IsOF(RNG) = True Then
  ElseIf IsError(RNG.Value) = True Then
  Else
     If Me.CheckBox3.Value = True Or _
        RNG.FormulaHidden = True Then
        W_CELL = RNG.Value
     Else
        If VarType(RNG.Value) = vbDate Then
           W_CELL = RNG.Value
        Else
           W_CELL = RNG.Value
           On Error Resume Next
           W_CELL = RNG.Formula
           On Error GoTo 0
        End If
     End If
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Or _
     SW_FRA = 4 Then
     If Me.CheckBox32.Value = True Then
        W_CELL = Replace(W_CELL, vbLf, "")
     End If
  End If
  
  If SW_SIM2 = True Then
     W_FW = Left$(Me.ComboBox1.Value, 1) & String$(Len(Me.ComboBox1.Value) - 1, "?")
     
     Set RE9 = CreateObject("VBScript.RegExp")
     With RE9
        .Pattern = Replace(W_FW, "?", ".")
        .IgnoreCase = True
        .Global = True
     End With
     If RE9.Test(W_CELL) = True Then
        W_LTXT = Me.ComboBox1.Value
        Set MATCHES = RE9.Execute(W_CELL)
        For I = 0 To MATCHES.count - 1
           W_RTXT = MATCHES.Item(I).Value
           If COMP_LINE_RATE(W_LTXT, W_RTXT, 1, Len(W_LTXT), 1, Len(W_RTXT), 2) >= 75 Then
              W_CELL = Left$(W_CELL, MATCHES.Item(I).FirstIndex) & Me.ComboBox1.Value & Right$(W_CELL, Len(W_CELL) - MATCHES.Item(I).FirstIndex - MATCHES.Item(I).Length)
           End If
        Next I
        Set MATCHES = Nothing
     End If
     Set RE9 = Nothing
  End If
  
  If InStr(W_CELL, Me.ComboBox1.Value) > 0 Then
     NRML_INSTR = True
  End If

End Function

Private Sub RNG_JDG(ByVal SW_FRA As Long, ByVal SW_NEXT As Boolean, ByVal SW_LAST As Boolean, ByVal W_SO As Variant, ByVal W_SVR1 As Long, ByVal W_SVC1 As Long, ByRef RNG As Range)

  If Not RNG Is Nothing Then
     If (SW_FRA = 0 Or SW_FRA = 1 Or SW_FRA = 2 Or SW_FRA = 3 Or SW_FRA = 6 Or SW_FRA = 7 Or SW_FRA = 8 Or SW_FRA = 9) And SW_LAST = True Then
        If SW_NEXT = True Then
           If W_SO = xlByColumns Then
              If RNG.Column > W_SVC1 Then
                 Set RNG = Nothing
              ElseIf RNG.Column = W_SVC1 And _
                     RNG.Row > W_SVR1 Then
                 Set RNG = Nothing
              Else
                 If SW_FRA = 2 Then
                    If RNG.Column < W_SVCP Then
                       Set RNG = Nothing
                    ElseIf RNG.Column = W_SVCP And _
                           RNG.Row <= W_SVRP Then
                       Set RNG = Nothing
                    End If
                 End If
              End If
           Else
              If RNG.Row > W_SVR1 Then
                 Set RNG = Nothing
              ElseIf RNG.Row = W_SVR1 And _
                     RNG.Column > W_SVC1 Then
                 Set RNG = Nothing
              Else
                 If SW_FRA = 2 Then
                    If RNG.Row < W_SVRP Then
                       Set RNG = Nothing
                    ElseIf RNG.Row = W_SVRP And _
                           RNG.Column <= W_SVCP Then
                       Set RNG = Nothing
                    End If
                 End If
              End If
           End If
           If SW_FRA = 2 And _
              Not RNG Is Nothing Then
              W_SVRP = RNG.Row
              W_SVCP = RNG.Column
           End If
        Else
           If W_SO = xlByColumns Then
              If RNG.Column < W_SVC1 Then
                 Set RNG = Nothing
              ElseIf RNG.Column = W_SVC1 And _
                     RNG.Row < W_SVR1 Then
                 Set RNG = Nothing
              End If
           Else
              If RNG.Row < W_SVR1 Then
                 Set RNG = Nothing
              ElseIf RNG.Row = W_SVR1 And _
                     RNG.Column < W_SVC1 Then
                 Set RNG = Nothing
              End If
           End If
        End If
     Else
        If SW_NEXT = True Then
           If W_SO = xlByColumns Then
              If RNG.Column < ActiveCell.Column Then
                 Set RNG = Nothing
              ElseIf RNG.Column = ActiveCell.Column And _
                     RNG.Row <= ActiveCell.Row Then
                 Set RNG = Nothing
              End If
           Else
              If RNG.Row < ActiveCell.Row Then
                 Set RNG = Nothing
              ElseIf RNG.Row = ActiveCell.Row And _
                     RNG.Column <= ActiveCell.Column Then
                 Set RNG = Nothing
              End If
           End If
        Else
           If W_SO = xlByColumns Then
              If RNG.Column > ActiveCell.Column Then
                 Set RNG = Nothing
              ElseIf RNG.Column = ActiveCell.Column And _
                     RNG.Row >= ActiveCell.Row Then
                 Set RNG = Nothing
              End If
           Else
              If RNG.Row > ActiveCell.Row Then
                 Set RNG = Nothing
              ElseIf RNG.Row = ActiveCell.Row And _
                     RNG.Column >= ActiveCell.Column Then
                 Set RNG = Nothing
              End If
           End If
        End If
     End If
  End If

End Sub

Private Sub SET_NRML_FIND(ByVal SW_FRA As Long, ByVal RNG As Range, Optional ByVal SW_SML As Boolean)
  
  Dim W_CELL As String
  Dim SW_TEST As Boolean
  
  Dim I As Long
  Dim J As Long
  Dim K As Long
  
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_CHCI As Long
  Dim W_FCIX As Long
  
  Dim W_STR As String
  Dim SW_1ST As Boolean
  
  Dim AR_CCFCI() As Long
  
  Dim AR_WK() As Variant
  Dim W_BOOL As Variant
  Dim W_BLSTR As String

  Dim W_CLTXT As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim W_REPTXT As String

  Dim SW_FIND As Boolean
  Dim SW_VALCL As Boolean
  Dim W_CI As Long
  Dim SW_VALCHG As Boolean

  Dim W_FRBPATH As String
  Dim FSO As Object
  Dim W_TEMP As String
  Dim W_PATH As String
  Dim ADDR As String

  Dim W_CM As Long
    
  Dim XL1 As Object
  Dim W_OBJ As Object
  Dim WB As Workbook
  
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK2 As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  
  Dim W_SCT As String
  Dim W_L As Long
  Dim W_R As Long
  Dim W_SR As Long
  Dim W_ER As Long
  Dim W_CLV As String
  Dim W_COM As String
  Dim AR_COM As Variant
  Dim W_STC As Long
  Dim W_LNC As Long
  Dim W_RBK As Long

  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String

  Dim W_CELLBK As String
  Dim W_TEXT As String
  Dim L As Long
  Dim W_CNT As Long


  W_CELL = ""
  SW_VALCHG = False
  If Me.CheckBox3.Value = True Then
     If IsError(RNG.Value) = True Then
        W_CELL = RNG.text
     Else
        W_CELL = RNG.Value
     End If
  Else
     On Error Resume Next
     W_CELL = RNG.Formula
     On Error GoTo 0
     If W_CELL = "" Then
        W_CELL = RNG.Value
        SW_VALCHG = True
     End If
  End If
  R = RNG.Row
  C = RNG.Column
  If Me.CheckBox1.Value = True Then
     W_CM = vbBinaryCompare
  Else
     W_CM = vbTextCompare
  End If
  
  If (SW_DCB = True Or _
      SW_DCI = True Or _
      SW_DCU = True Or _
      SW_DCK = True Or _
      SW_DCC = True) Then
     SW_TEST = DC_FIND(W_CELL)
  Else
     SW_TEST = True
  End If
  
  If SW_TEST = True Then
     If SW_ACF = True Then
        SW_TEST = AC_FIND(R, C)
     End If
  End If
  
  If SW_TEST = True And _
     W_NMLCHK = "" Then
     If W_ATEXT <> "" Then
        If SW_ADDDENY = False Then
           If InStr(1, W_CELL, W_ATEXT, vbBinaryCompare) > 0 Then
           Else
              SW_TEST = False
           End If
        Else
           If InStr(1, W_CELL, W_ATEXT, vbBinaryCompare) = 0 Then
           Else
              SW_TEST = False
           End If
        End If
     End If
  End If
  
  If SW_TEST = False Then
     Exit Sub
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Then
     If SW_IS = False Then
        If (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) And _
           IsOF(Worksheets(AR_SELS(IDX)).Cells(R, C)) = False Then
           If IsError(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = False Then
              If W_CNTFA = 0 Then
                 If ActiveWorkbook.path <> "" And _
                    ActiveWorkbook.HasPassword = False And _
                    ActiveWorkbook.ReadOnly = False And _
                    ActiveWorkbook.FileFormat <> xlCSV And _
                    ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
                    DT = Date
                    TM = time
                    On Error GoTo L_BK_END2
                    If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                       On Error Resume Next
                       W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                        ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                       On Error GoTo 0
                       W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                       If RPDIC.Exists(W_CNV) = False Then
                          RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                       End If
                    End If
                    ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
                    W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
                    If RPDIC.Exists(W_CNV) = False Then
                       RPDIC.Add W_CNV, "CF" & vbTab & Me.ComboBox1.Value & vbTab & ""
                    End If
                 End If
L_BK_END2:
                 On Error GoTo 0
                    
                 If OWB Is Nothing Then
                 Else
                    SW_UNDO = True
                    If W_FNDBOOK <> "" Then
                       Set OWB = Nothing
                       If W_REPBOOK = W_FNDBOOK Then
                          W_REPBOOK = ""
                       End If
                       W_FNDBOOK = ""
                    End If
                    If W_REPBOOK <> "" Then
                       Set OWB = Nothing
                       W_REPBOOK = ""
                    End If
                    SW_UNDO = False
                 End If
                 W_FNDBOOK = ActiveWorkbook.Name
                 Erase AR_REP
              End If
           End If

           W_LEN = 0
           On Error Resume Next
           W_LEN = Len(Worksheets(AR_SELS(IDX)).Cells(R, C).Value)
           If W_LEN = 0 Then
              On Error GoTo 0
           ElseIf Worksheets(AR_SELS(IDX)).Cells(R, C).Value = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Or _
              CStr(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Then
              On Error GoTo 0
              
              On Error GoTo LABEL_ERR_M
              ReDim Preserve AR_REP(9, W_CNTFA + 1)
              On Error GoTo 0
              
              If IDX <> IDXBK2 Then
                 AFSBK2 = Worksheets(AR_SELS(IDX)).Index
                 ASNMBK = Worksheets(AR_SELS(IDX)).Name
                 IDXBK2 = IDX
              End If
              
              If W_ERRM = 0 Then
                 AR_REP(1, W_CNTFA + 1) = AFSBK2
                 AR_REP(2, W_CNTFA + 1) = ASNMBK
                 AR_REP(3, W_CNTFA + 1) = R
                 AR_REP(4, W_CNTFA + 1) = C
              
                 With Worksheets(AR_SELS(IDX)).Cells(R, C)
                    '|fffd|F|fffd||6d1||fffd|
                    ReDim AR_CCFCI(Len(.Value))
                    If IsNull(.Font.Color) = True Then
                       For K = 1 To UBound(AR_CCFCI)
                          AR_CCFCI(K) = .Characters(K, 1).Font.Color
                       Next K
                       W_FCIX = -1
                       W_POS = 1
                       AR_REP(5, W_CNTFA + 1) = ""
                       For K = 1 To UBound(AR_CCFCI)
                          If AR_CCFCI(K) <> W_FCIX Then
                             If W_FCIX <> -1 Then
                                W_LEN = K - W_POS
                                If AR_REP(5, W_CNTFA + 1) = "" Then
                                   AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                                Else
                                   AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                                End If
                             End If
                             W_POS = K
                             W_FCIX = AR_CCFCI(K)
                          End If
                          If K = UBound(AR_CCFCI) Then
                             W_LEN = K - W_POS + 1
                             If AR_REP(5, W_CNTFA + 1) = "" Then
                                AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                             Else
                                AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                             End If
                          End If
                       Next K
                       Erase AR_CCFCI
                    Else
                       AR_REP(5, W_CNTFA + 1) = 1 & ":" & Len(.Value) & ":" & .Font.Color
                    End If
                 
                    '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                    ReDim AR_WK(Len(.Value))
                    If IsNull(.Font.Bold) = True Then
                       For I = 1 To Len(.Value)
                          AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Bold
                       Next I
        
                       W_BOOL = AR_WK(1)
                       W_POS = 1
                       W_BLSTR = ""
                       For I = 1 To Len(.Value)
                          If AR_WK(I) <> W_BOOL Then
                             W_LEN = I - W_POS
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                             W_POS = I
                             W_BOOL = AR_WK(I)
                          End If
                          If I = Len(.Value) Then
                             W_LEN = I - W_POS + 1
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                          End If
                       Next I
                       Erase AR_WK
                    Else
                       W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Bold
                    End If
                    AR_REP(6, W_CNTFA + 1) = W_BLSTR
     
                    '|fffd||391||315||6d1||fffd|
                    ReDim AR_WK(Len(.Value))
                    If IsNull(.Font.Italic) = True Then
                       For I = 1 To Len(.Value)
                          AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Italic
                       Next I
   
                       W_BOOL = AR_WK(1)
                       W_POS = 1
                       W_BLSTR = ""
                       For I = 1 To Len(.Value)
                          If AR_WK(I) <> W_BOOL Then
                             W_LEN = I - W_POS
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                             W_POS = I
                             W_BOOL = AR_WK(I)
                          End If
                          If I = Len(.Value) Then
                             W_LEN = I - W_POS + 1
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                          End If
                       Next I
                       Erase AR_WK
                    Else
                       W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Italic
                    End If
                    AR_REP(7, W_CNTFA + 1) = W_BLSTR
   
                    '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                    ReDim AR_WK(Len(.Value))
                    If IsNull(.Font.Underline) = True Then
                       For I = 1 To Len(.Value)
                          AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Underline
                       Next I
   
                       W_BOOL = AR_WK(1)
                       W_POS = 1
                       W_BLSTR = ""
                       For I = 1 To Len(.Value)
                          If AR_WK(I) <> W_BOOL Then
                             W_LEN = I - W_POS
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                             W_POS = I
                             W_BOOL = AR_WK(I)
                          End If
                          If I = Len(.Value) Then
                             W_LEN = I - W_POS + 1
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                          End If
                       Next I
                       Erase AR_WK
                    Else
                       W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Underline
                    End If
                    AR_REP(8, W_CNTFA + 1) = W_BLSTR
   
                    '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                    ReDim AR_WK(Len(.Value))
                    If IsNull(.Font.Strikethrough) = True Then
                       For I = 1 To Len(.Value)
                          AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Strikethrough
                       Next I
   
                       W_BOOL = AR_WK(1)
                       W_POS = 1
                       W_BLSTR = ""
                       For I = 1 To Len(.Value)
                          If AR_WK(I) <> W_BOOL Then
                             W_LEN = I - W_POS
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                             W_POS = I
                             W_BOOL = AR_WK(I)
                          End If
                          If I = Len(.Value) Then
                             W_LEN = I - W_POS + 1
                             If W_BLSTR = "" Then
                                W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                             Else
                                W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                             End If
                          End If
                       Next I
                       Erase AR_WK
                    Else
                       W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Strikethrough
                    End If
                    AR_REP(9, W_CNTFA + 1) = W_BLSTR
                 End With
              End If
              
              If Me.CheckBox32.Value = True Then
                 W_CELLBK = W_CELL
                 W_CELL = Replace(W_CELL, vbLf, "")
              End If
              
              If SW_NR = False Then
                 Set MATCHES = RE.Execute(W_CELL)
                 MAXJ = MATCHES.count - 1
              Else
                 AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
                 MAXJ = UBound(AR_STR)
              End If
              
              W_ST = 1
              For J = 0 To MAXJ
                 If SW_NR = False Then
                    W_POS = MATCHES.Item(J).FirstIndex + 1
                    W_LEN = MATCHES.Item(J).Length
                 Else
                    AR_WK2 = Split(AR_STR(J), vbTab)
                    W_POS = CLng(AR_WK2(0)) + 1
                    W_LEN = CLng(AR_WK2(1))
                 End If
                 
                 If Me.CheckBox32.Value = True Then
                    If W_POS > 1 Then
                       W_TEXT = Left$(W_CELLBK, W_POS - 1)
                       W_POS = W_POS + Len(W_TEXT) - Len(Replace(W_TEXT, vbLf, ""))
                    End If
                    L = 0
                    W_CNT = 0
                    Do While W_CNT < W_LEN
                       L = L + 1
                       If Mid$(W_CELLBK, L, 1) <> vbLf Then
                          W_CNT = W_CNT + 1
                       End If
                    Loop
                    W_LEN = W_LEN + L - W_CNT
                 End If
                 
                 With Worksheets(AR_SELS(IDX)).Cells(R, C).Characters(W_POS, W_LEN).Font
                    If SW_DCB2 = True Then
                       .Bold = SW_DCB3
                    End If
                    If SW_DCI2 = True Then
                       .Italic = SW_DCI3
                    End If
                    If SW_DCU2 = True Then
                       If SW_DCU3 = True Then
                          .Underline = 2
                       Else
                          .Underline = -4142
                       End If
                    End If
                    If SW_DCK2 = True Then
                       .Strikethrough = SW_DCK3
                    End If
                    If SW_DCC2 = True Then
                       .Color = CLng(W_DCCLR2)
                    End If
                 End With
                 W_ST = W_POS + W_LEN
              Next J
              Set MATCHES = Nothing
           End If
           On Error GoTo 0
        End If
     End If
  End If
  
  W_CNTFA = W_CNTFA + 1
  If SW_FRA = 0 Then
     W_1STFR = RNG.Row
     W_1STFC = RNG.Column
     GoTo LABEL_ACEXEC
  End If
  
  If SW_FRA = 1 Or SW_FRA = 2 Then
     If W_1STFR = 0 Then
        W_1STFR = RNG.Row
        W_1STFC = RNG.Column
     End If
  End If
  
  If SW_FRA = 6 Then
     If Me.OptionButton14.Value = True Then
        If W_UNION Is Nothing Then
           Set W_UNION = RNG
        Else
           Set W_UNION = Union(W_UNION, RNG)
        End If
     ElseIf Me.OptionButton15.Value = True Then
        If W_UNION Is Nothing Then
           W_CNTSA = 1
           Set W_UNION = Rows(RNG.Row)
        Else
           If Intersect(W_UNION, Rows(RNG.Row)) Is Nothing Then
              W_CNTSA = W_CNTSA + 1
           End If
           Set W_UNION = Union(W_UNION, Rows(RNG.Row))
        End If
     Else
        If W_UNION Is Nothing Then
           W_CNTSA = 1
           Set W_UNION = Columns(RNG.Column)
        Else
           If Intersect(W_UNION, Columns(RNG.Column)) Is Nothing Then
              W_CNTSA = W_CNTSA + 1
           End If
           Set W_UNION = Union(W_UNION, Columns(RNG.Column))
        End If
     End If
  End If
  
  If SW_FRA = 7 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        If Me.OptionButton11 = True Or _
           Me.OptionButton12 = True Then
           If W_O <> 0 Then
              If RNG.Row > W_O Then
                 If RNG.Row > W_O + 1 Then
                    Range(Rows(W_O + 1), Rows(RNG.Row - 1)).Rows.Group
                 End If
              ElseIf RNG.Row < W_O Then
                 If W_O < ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row Then
                    Range(Rows(W_O + 1), Rows(ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row)).Rows.Group
                 End If
                 If RNG.Row > 2 Then
                    Range(Rows(1), Rows(RNG.Row - 1)).Rows.Group
                 End If
              End If
           End If
           If W_1STO = 0 Then
              W_1STO = RNG.Row
           End If
           If W_O <> RNG.Row Then
              W_O = RNG.Row
           End If
        End If
     Else
        If Me.OptionButton13 = True Then
           If W_O <> 0 Then
              If RNG.Column > W_O Then
                 If RNG.Column > W_O + 1 Then
                    Range(Columns(W_O + 1), Columns(RNG.Column - 1)).Columns.Group
                 End If
              ElseIf RNG.Column < W_O Then
                 If W_O < ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column Then
                    Range(Columns(W_O + 1), Columns(ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column)).Columns.Group
                 End If
                 If RNG.Column > 2 Then
                    Range(Columns(1), Rows(RNG.Column - 1)).Columns.Group
                 End If
              End If
           End If
           If W_1STO = 0 Then
              W_1STO = RNG.Column
           End If
           If W_O <> RNG.Column Then
              W_O = RNG.Column
           End If
        End If
     End If
  End If
  
  If SW_FRA = 8 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        Rows(RNG.Row).Hidden = False
     Else
        Columns(RNG.Column).Hidden = False
     End If
  End If
  
  If SW_FRA = 9 Then
     With RNG.Interior
        .ColorIndex = 6
        .Pattern = xlGrid
        .PatternColorIndex = 44
     End With
  End If
  
  If SW_FRA = 3 Then
     If W_1STFS = 0 Then
        W_1STFIDX = IDX
        W_1STFS = Worksheets(AR_SELS(IDX)).Index
        W_1STFR = RNG.Row
        W_1STFC = RNG.Column
        IDXBK = 0
        IDXBK2 = 0
     End If
  
     If AFN Mod 10000 = 0 Then
        ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFC((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
     End If
     
     AFN = AFN + 1
    
     If IDX <> IDXBK Then
        AFSBK = Worksheets(AR_SELS(IDX)).Index
        IDXBK = IDX
     End If
     
     AR_AFS(AFN) = AFSBK
     AR_AFR(AFN) = RNG.Row
     AR_AFC(AFN) = RNG.Column
     If Me.CheckBox3.Value = True Then
        If IsError(RNG.Value) = True Then
           AR_AFV(AFN) = RNG.text
        Else
           AR_AFV(AFN) = RNG.Value
        End If
     Else
        AR_AFV(AFN) = RNG.Formula
     End If
  
     If Me.CheckBox74.Value = False And _
        Me.CheckBox92.Value = False Then
        If Me.Label150.Caption = "" Then
           If W_SGWD = "" Then
              Call SET_SGST_WORD
           End If
           If W_SGWD <> "" And _
              W_SGWD <> vbTab Then
              If InStr(AR_AFV(AFN), W_SGWD) > 0 Then
                 Me.Label150.Tag = ActiveWorkbook.Name & vbTab & ActiveWorkbook.ActiveSheet.Name & vbTab & AR_AFR(AFN) & vbTab & AR_AFC(AFN)
                 If SW_ENGLISH = True Then
                    Me.Label150.Caption = "Maybe"
                 Else
                    Me.Label150.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                 End If
                 Me.Label150.Caption = Me.Label150.Caption & vbCrLf & _
                                       Cells(AR_AFR(AFN), AR_AFC(AFN)).Address & vbCrLf & _
                                       AR_AFV(AFN)
              End If
           End If
        End If
     End If
  End If

  If SW_FRA = 1 Or SW_FRA = 2 Or SW_FRA = 5 Then
     If SW_FRA = 1 Or SW_FRA = 2 Then
        If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
        Else
           Worksheets(AR_SELS(IDX)).Select
           Worksheets(AR_SELS(IDX)).Cells(R, C).Activate
        End If
        If W_ASK = True And SW_SML = False Then
           Call REP_ASK(SW_FRA)
           If W_RET = vbCancel Then
              SW_CAN = True
           End If
           If SW_FRA = 1 And W_RET = vbNo Then
             SW_CAN = True
           End If
        Else
           W_RET = vbYes
        End If
     Else
        W_RET = vbYes
     End If
     If W_RET <> vbYes Then
        Exit Sub
     End If
     
     If W_CNTRA = 0 Then
        Erase AR_REP
     End If
     If W_CNTRA Mod 10000 = 0 Then
        If W_ERRM = 0 Then
           On Error GoTo LABEL_ERR_M
           ReDim Preserve AR_REP(11, (Int(W_CNTRA / 10000) + 1) * 10000)
           On Error GoTo 0
        End If
     End If
  
     W_CNTRA = W_CNTRA + 1
  
     If (SW_FRA = 1 Or SW_FRA = 2) And _
        SW_SML = False Then
        If W_CNTRA = 1 Then
           If ActiveWorkbook.path <> "" And _
              ActiveWorkbook.HasPassword = False And _
              ActiveWorkbook.ReadOnly = False And _
              ActiveWorkbook.FileFormat <> xlCSV And _
              ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
              DT = Date
              TM = time
              On Error GoTo L_BK_END1
              If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                 On Error Resume Next
                 W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                  ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                 On Error GoTo 0
                 W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                 If RPDIC.Exists(W_CNV) = False Then
                    RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                 End If
              End If
              ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
              W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
              If RPDIC.Exists(W_CNV) = False Then
                 RPDIC.Add W_CNV, "CR" & vbTab & Me.ComboBox3.Value & vbTab & Me.ComboBox2.Value
              End If
           End If
L_BK_END1:
           On Error GoTo 0
           
           IDXBK = 0
           If OWB Is Nothing Then
           Else
              SW_UNDO = True
              If W_REPBOOK <> "" Then
                 Set OWB = Nothing
                 If W_FNDBOOK = W_REPBOOK Then
                    W_FNDBOOK = ""
                 End If
                 W_REPBOOK = ""
              End If
              If W_FNDBOOK <> "" Then
                 Set OWB = Nothing
                 W_FNDBOOK = ""
              End If
              SW_UNDO = False
           End If
           W_REPBOOK = ActiveWorkbook.Name
        End If
     End If
  
     If IDX <> IDXBK Then
        AFSBK = Worksheets(AR_SELS(IDX)).Index
        ASNMBK = Worksheets(AR_SELS(IDX)).Name
        IDXBK = IDX
     End If
     
     If W_ERRM = 0 Then
        AR_REP(1, W_CNTRA) = AFSBK
        AR_REP(2, W_CNTRA) = ASNMBK
  
        AR_REP(3, W_CNTRA) = R
        AR_REP(4, W_CNTRA) = C
        If Me.CheckBox3.Value = True Or _
           SW_VALCHG = True Or _
           Cells(R, C).FormulaHidden = True Then
           AR_REP(5, W_CNTRA) = Cells(R, C).Value
           AR_REP(6, W_CNTRA) = True
        Else
           AR_REP(5, W_CNTRA) = Cells(R, C).Formula
           AR_REP(6, W_CNTRA) = False
        End If
        AR_REP(7, W_CNTRA) = ""
        AR_REP(8, W_CNTRA) = ""
        AR_REP(9, W_CNTRA) = ""
        AR_REP(10, W_CNTRA) = ""
        AR_REP(11, W_CNTRA) = ""
     End If

     If SW_CLRKEEP = True Then
        W_CLTXTBK = ""
        SW_VALCL = False
        If IsOF(Cells(R, C)) = True Then
        ElseIf IsError(Cells(R, C).Value) = True Then
        ElseIf Len(Cells(R, C).Value) > W_MAXFML Then
           SW_VALCL = True
        ElseIf Cells(R, C).HasFormula = True Then
        Else
           SW_VALCL = True
        End If
        If SW_VALCL = True Then
           W_CLTXT = Cells(R, C).Value
           W_CLTXTBK = W_CLTXT
       
          '|fffd|F|fffd||6d1||fffd|
           ReDim AR_CCFCI(Len(W_CLTXTBK))
           With Cells(R, C)
              If IsNull(.Font.Color) = True Then
                 For I = 1 To Len(W_CLTXTBK)
                    AR_CCFCI(I) = Cells(R, C).Characters(I, 1).Font.Color
                 Next I
                 W_FCIX = -1
                 W_POS = 1
                 W_CLCLR = ""
                 For I = 1 To Len(W_CLTXTBK)
                    If AR_CCFCI(I) <> W_FCIX Then
                       If W_FCIX <> -1 Then
                          W_LEN = I - W_POS
                          If W_CLCLR = "" Then
                             W_CLCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                          Else
                             W_CLCLR = W_CLCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                          End If
                       End If
                       W_POS = I
                       W_FCIX = AR_CCFCI(I)
                    End If
                    If I = Len(W_CLTXTBK) Then
                       W_LEN = I - W_POS + 1
                       If W_CLCLR = "" Then
                          W_CLCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                       Else
                          W_CLCLR = W_CLCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                       End If
                    End If
                 Next I
                 Erase AR_CCFCI
              Else
                 W_CLCLR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Color
              End If
           End With
           AR_REP(7, W_CNTRA) = W_CLCLR

           If SW_NR = False Then
              Set MATCHES = RE.Execute(W_CLTXT)
              MAXJ = MATCHES.count - 1
           Else
              AR_STR = Split(NREXE(NRE, W_CLTXT), vbCrLf)
              MAXJ = UBound(AR_STR)
           End If
           
           W_ST = 1
           W_J = 0
           Erase AR_LEN0
           Erase AR_POS
           Erase AR_LEN
           If SW_DCC = True Then
              W_CI = CLng(W_DCCLR)
           End If
           For J = 0 To MAXJ
              If SW_NR = False Then
                 W_FI = MATCHES.Item(J).FirstIndex
                 W_LN = MATCHES.Item(J).Length
                 W_VL = MATCHES.Item(J).Value
              Else
                 AR_WK2 = Split(AR_STR(J), vbTab)
                 W_FI = CLng(AR_WK2(0))
                 W_LN = CLng(AR_WK2(1))
                 W_VL = Mid$(W_CLTXTBK, W_FI + 1, W_LN)
              End If
              
              SW_FIND = True
              If (SW_DCB = True Or _
                  SW_DCI = True Or _
                  SW_DCU = True Or _
                  SW_DCK = True Or _
                  SW_DCC = True) And _
                  W_LN > 0 Then
                  With Cells(R, C).Characters(W_FI + 1, W_LN).Font
                     If SW_DCB = True And _
                        SW_FIND = True Then
                        If IsNull(.Bold) = False Then
                           SW_FIND = .Bold
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCI = True And _
                        SW_FIND = True Then
                        If IsNull(.Italic) = False Then
                           SW_FIND = .Italic
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCU = True And _
                        SW_FIND = True Then
                        If IsNull(.Underline) = True Then
                           SW_FIND = False
                        ElseIf .Underline = -4142 Then
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCK = True And _
                        SW_FIND = True Then
                        If IsNull(.Strikethrough) = False Then
                           SW_FIND = .Strikethrough
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCC = True And _
                        SW_FIND = True Then
                        If .Color <> W_CI Then
                           SW_FIND = False
                        End If
                     End If
                  End With
              End If
              
              If SW_FIND = True Then
                 W_POS = InStr(W_ST, W_CLTXT, W_VL, vbBinaryCompare)
                 W_LEN = W_LN
                 
                 W_J = W_J + 1
                 ReDim Preserve AR_LEN0(W_J)
                 AR_LEN0(W_J) = W_LEN
                 ReDim Preserve AR_POS(W_J)
                 AR_POS(W_J) = W_POS
                 If W_POS - 1 > 0 Then
                    W_STR1 = Left$(W_CLTXT, W_POS - 1)
                 Else
                    W_STR1 = ""
                 End If
                 If W_POS > 0 Then
                    W_STR2 = Mid$(W_CLTXT, W_POS, W_LEN)
                 Else
                    W_STR2 = ""
                 End If
                 If Len(W_CLTXT) - W_POS - W_LEN + 1 > 0 Then
                    W_STR3 = Right$(W_CLTXT, Len(W_CLTXT) - W_POS - W_LEN + 1)
                 Else
                    W_STR3 = ""
                 End If
                 
                 SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
                 If SW_SPREP = True Then
                    W_STR2 = W_REPTXT
                 Else
                    If SW_NR = False Then
                       W_STR2 = RE.Replace(W_STR2, REPSTRCNV(Me.ComboBox2.Value))
                    Else
                       W_STR2 = NRREP(NRE, W_STR2, REPSTRCNV(Me.ComboBox2.Value))
                    End If
                    
                    W_LEN = Len(W_STR2)
                 End If
                 ReDim Preserve AR_LEN(W_J)
                 AR_LEN(W_J) = W_LEN
                 W_CLTXT = W_STR1 & W_STR2 & W_STR3
                 W_ST = W_POS + W_LEN
              Else
                 W_ST = W_ST + W_LN
              End If
           Next J
           Set MATCHES = Nothing
        
          '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           ReDim AR_WK(Len(W_CLTXTBK))
           With Cells(R, C)
              If IsNull(.Font.Bold) = True Then
                 For I = 1 To Len(W_CLTXTBK)
                    AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Bold
                 Next I
              
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_BLSTR = ""
                 For I = 1 To Len(W_CLTXTBK)
                    If AR_WK(I) <> W_BOOL Then
                       W_LEN = I - W_POS
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = I
                       W_BOOL = AR_WK(I)
                    End If
                    If I = Len(W_CLTXTBK) Then
                       W_LEN = I - W_POS + 1
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next I
                 Erase AR_WK
              Else
                 W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Bold
              End If
           End With
           AR_REP(8, W_CNTRA) = W_BLSTR
        
          '|fffd||391||315||6d1||fffd|
           ReDim AR_WK(Len(W_CLTXTBK))
           With Cells(R, C)
              If IsNull(.Font.Italic) = True Then
                 For I = 1 To Len(W_CLTXTBK)
                    AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Italic
                 Next I
              
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_BLSTR = ""
                 For I = 1 To Len(W_CLTXTBK)
                    If AR_WK(I) <> W_BOOL Then
                       W_LEN = I - W_POS
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = I
                       W_BOOL = AR_WK(I)
                    End If
                    If I = Len(W_CLTXTBK) Then
                       W_LEN = I - W_POS + 1
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next I
                 Erase AR_WK
              Else
                 W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Italic
              End If
           End With
           AR_REP(9, W_CNTRA) = W_BLSTR
        
          '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           ReDim AR_WK(Len(W_CLTXTBK))
           With Cells(R, C)
              If IsNull(.Font.Underline) = True Then
                 For I = 1 To Len(W_CLTXTBK)
                    AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Underline
                 Next I
              
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_BLSTR = ""
                 For I = 1 To Len(W_CLTXTBK)
                    If AR_WK(I) <> W_BOOL Then
                       W_LEN = I - W_POS
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = I
                       W_BOOL = AR_WK(I)
                    End If
                    If I = Len(W_CLTXTBK) Then
                       W_LEN = I - W_POS + 1
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next I
                 Erase AR_WK
              Else
                 W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Underline
              End If
           End With
           AR_REP(10, W_CNTRA) = W_BLSTR
        
          '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
           ReDim AR_WK(Len(W_CLTXTBK))
           With Cells(R, C)
              If IsNull(.Font.Strikethrough) = True Then
                 For I = 1 To Len(W_CLTXTBK)
                    AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Strikethrough
                 Next I
              
                 W_BOOL = AR_WK(1)
                 W_POS = 1
                 W_BLSTR = ""
                 For I = 1 To Len(W_CLTXTBK)
                    If AR_WK(I) <> W_BOOL Then
                       W_LEN = I - W_POS
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                       W_POS = I
                       W_BOOL = AR_WK(I)
                    End If
                    If I = Len(W_CLTXTBK) Then
                       W_LEN = I - W_POS + 1
                       If W_BLSTR = "" Then
                          W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                       Else
                          W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                       End If
                    End If
                 Next I
                 Erase AR_WK
              Else
                 W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Strikethrough
              End If
           End With
           AR_REP(11, W_CNTRA) = W_BLSTR
        End If
     End If
     
     On Error Resume Next
     If (SW_DCB = True Or _
         SW_DCI = True Or _
         SW_DCU = True Or _
         SW_DCK = True Or _
         SW_DCC = True) Then
        Application.DisplayAlerts = False
        Cells(R, C).Value = DC_REPLACE(W_CELL, Me.ComboBox2.Value)
        Application.DisplayAlerts = True
     Else
        Application.DisplayAlerts = False
        If W_NMLCHK = "" Then
           If Me.CheckBox3.Value = True Then
              Cells(R, C).Value = Replace(W_CELL, Me.ComboBox1.Value, Me.ComboBox2.Value, 1, -1, W_CM)
           Else
              If Cells(R, C).HasArray = True Then
                 Cells(R, C).FormulaArray = Replace(W_CELL, Me.ComboBox1.Value, Me.ComboBox2.Value, 1, -1, W_CM)
              Else
                 Cells(R, C).Formula = Replace(W_CELL, Me.ComboBox1.Value, Me.ComboBox2.Value, 1, -1, W_CM)
              End If
           End If
        Else
           If Me.CheckBox3.Value = True Then
              If SW_NR = False Then
                 Cells(R, C).Value = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
              Else
                 Cells(R, C).Value = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
              End If
           Else
              If Cells(R, C).HasArray = True Then
                 If SW_NR = False Then
                    Cells(R, C).FormulaArray = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                 Else
                    Cells(R, C).FormulaArray = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                 End If
              Else
                 If SW_NR = False Then
                    Cells(R, C).Formula = RE.Replace(W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                 Else
                    Cells(R, C).Formula = NRREP(NRE, W_CELL, REPSTRCNV(Me.ComboBox2.Value))
                 End If
              End If
           End If
        End If
        Application.DisplayAlerts = True
     End If
     If Err.Number = 0 Then
        Call STORE_REP2
        Call STORE_REP3
        If SW_SML = True Then
           Call STORE_REP4
        End If
     End If
     On Error GoTo 0
  End If

  If SW_FRA = 4 Then
     If Val(Application.Version) >= 15 Then
        If SW_GHO = False Then
           Application.ScreenUpdating = False
        End If
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
           FR = .Cells(.Rows.count, 2).End(xlUp).Row
        End With
     End If
     
     FR = FR + 1
     If W_ZPATH = "" Then
        If Me.CheckBox62.Value = False Then
           W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
           Set WB = Workbooks(Workbooks.count)
        Else
           If Workbooks(W_GBNAME).path = "" Then
              W_FRBPATH = Workbooks(W_GBNAME).Name
           Else
              W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
           End If
           Set WB = Workbooks(W_GBNAME)
        End If
     Else
        W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
        Set FSO = CreateObject("Scripting.FileSystemObject")
        W_TEMP = FSO.GetSpecialFolder(2)
        Set FSO = Nothing
        W_PATH = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(W_TEMP) - 1)
        W_PATH = Right$(W_PATH, Len(W_PATH) - InStr(W_PATH, "\"))
        W_FRBPATH = W_ZPATH & "\" & W_PATH
        Set WB = Workbooks(Workbooks.count)
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
     Else
        Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
     End If
     
     With W_OBJ
         If SW_PR = False Then
            .Cells(FR, 1).Value = FR - 5
         Else
            .Cells(FR, 1).Value = FR - 6
         End If

         If Me.CheckBox62.Value = False Then
            .Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox18.Value) - 1)
         Else
            .Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
         End If
         .Cells(FR, 3).Value = WB.Worksheets(AR_SELS(IDX)).Name
         .Cells(FR, 4).Value = Application.Substitute(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
         If Me.CheckBox3.Value = True Or _
            SW_VALCHG = True Then
            .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value
         Else
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).HasFormula = True Then
               .Cells(FR, 5).NumberFormatLocal = "@"
            End If
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).FormulaHidden = False Then
               .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Formula
            End If
         End If

         If Me.CheckBox75.Value = True Then
            On Error Resume Next
            If IsOF(WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value))) = True Then
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value2
            ElseIf IsError(WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value) Then
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).text
            Else
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value
            End If
            On Error GoTo 0
         End If

         If Me.CheckBox202.Value = True Then
            Select Case R
            Case 1
               W_L = 1
            Case 2
               W_L = 2
            Case Rows.count - 1
               W_L = 4
            Case Rows.count
               W_L = 5
            Case Else
               W_L = 3
            End Select
            W_SCT = W_L

            W_SR = Application.Max(R - 2, 1)
            W_ER = Application.Min(R + 2, Rows.count)

            For W_R = W_SR To W_ER
               W_CLV = ""
               On Error Resume Next
               If IsOF(WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C)) = True Then
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value2
               ElseIf IsError(WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value) Then
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).text
               Else
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value
               End If
               On Error GoTo 0
               W_SCT = W_SCT & Chr$(1) & W_CLV
            Next W_R

            If SW_HSGREP = True And _
               W_PNO > 0 Then
            Else
               W_COM = ""
               AR_COM = Split(W_SCT, Chr$(1))
               For W_R = 1 To CLng(AR_COM(0)) - 1
                  W_COM = W_COM & AR_COM(W_R) & vbCrLf
               Next W_R
               W_RBK = W_R
               W_STC = Len(W_COM) + 1
               W_LNC = Len(AR_COM(W_RBK))
               For W_R = W_RBK To UBound(AR_COM)
                  W_COM = W_COM & AR_COM(W_R) & vbCrLf
               Next W_R
               W_COM = Left$(W_COM, Len(W_COM) - 1)
               With .Cells(FR, 5)
                  .AddComment
                  .Comment.text text:=W_COM
                  .Comment.Shape.TextFrame.Characters(W_STC, W_LNC).Font.Bold = True
                  .Comment.Shape.TextFrame.AutoSize = True
              End With
              W_SCT = ""
            End If
         Else
            W_SCT = ""
         End If

         If W_ZPATH = "" Then
            If InStr(W_FRBPATH, "\") > 0 Then
               If SW_HSGREP = True And _
                  W_PNO > 0 Then
                  .Cells(FR, 7).Value = W_SCT
               Else
                  ADDR = "'" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
                  On Error Resume Next
                  W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), W_FRBPATH, ADDR, W_SCT
                  On Error GoTo 0
               End If
            Else
               ADDR = "'[" & W_FRBPATH & "]" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
               On Error Resume Next
               W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), "", ADDR, W_SCT
               On Error GoTo 0
            End If
         End If
         If SW_HSGREP = True And _
            W_PNO > 0 Then
         ElseIf Me.CheckBox75.Value = True Then
            .Range(.Cells(FR, 1), .Cells(FR, 6)).Borders.LineStyle = True
         Else
            .Range(.Cells(FR, 1), .Cells(FR, 5)).Borders.LineStyle = True
         End If
         If SW_PR = True Then
            .Cells(FR, 5).Interior.ColorIndex = 3
         End If
     End With

     Set W_OBJ = Nothing
     Set XL1 = Nothing
     Set WB = Nothing
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf SW_GHO = False Then
        Workbooks(W_FRB).Activate
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013S2
        End If
        Application.ScreenUpdating = True
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
        If Val(Application.Version) >= 15 Then
        Else
           Application.ScreenUpdating = False
        End If
        If Me.CheckBox62.Value = False Then
           Workbooks(Workbooks.count).Activate
        Else
           Workbooks(W_GBNAME).Activate
        End If
     End If
  End If

  If SW_FRA = 5 Then
     If Val(Application.Version) >= 15 Then
        If SW_GHO = False Then
           Application.ScreenUpdating = False
        End If
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
           FR = .Cells(.Rows.count, 2).End(xlUp).Row
        End With
     End If
     
     FR = FR + 1
     If Me.CheckBox63.Value = False Then
        W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
        Set WB = Workbooks(Workbooks.count)
     Else
        If Workbooks(W_GBNAME).path = "" Then
           W_FRBPATH = Workbooks(W_GBNAME).Name
        Else
           W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
        End If
        Set WB = Workbooks(W_GBNAME)
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
     Else
        Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
     End If
     
     With W_OBJ
         .Cells(FR, 1).Value = FR - 6
         If Me.CheckBox63.Value = False Then
            .Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox19.Value) - 1)
         Else
            .Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
         End If
         .Cells(FR, 3).Value = WB.Worksheets(AR_SELS(IDX)).Name
         .Cells(FR, 4).Value = Application.Substitute(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
         If Me.CheckBox3.Value = True Or _
            SW_VALCHG = True Then
            .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value
         Else
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).HasFormula = True Then
               .Cells(FR, 5).NumberFormatLocal = "@"
            End If
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).FormulaHidden = False Then
               .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Formula
            End If
         End If
              
         If InStr(W_FRBPATH, "\") > 0 Then
            If SW_HSGREP = True And _
               W_PNO > 0 Then
            Else
               ADDR = "'" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
               On Error Resume Next
               W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), W_FRBPATH, ADDR
               On Error GoTo 0
            End If
         End If
         If SW_HSGREP = True And _
            W_PNO > 0 Then
         Else
            .Range(.Cells(FR, 1), .Cells(FR, 5)).Borders.LineStyle = True
         End If
     End With
     
     Set W_OBJ = Nothing
     Set XL1 = Nothing
     Set WB = Nothing

     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf SW_GHO = False Then
        Workbooks(W_FRB).Activate
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013S2
        End If
        Application.ScreenUpdating = True
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
        If Val(Application.Version) >= 15 Then
        Else
           Application.ScreenUpdating = False
        End If
        If Me.CheckBox63.Value = False Then
           Workbooks(Workbooks.count).Activate
        Else
           Workbooks(W_GBNAME).Activate
        End If
     End If
  End If

LABEL_ACEXEC:
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Then
     If SW_ACEXE = True And _
        W_PROMTH <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 1)
     End If
     If SW_ACEXE2 = True And _
        W_PROMTH2 <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 2)
     End If
     If SW_ACEXE3 = True And _
        W_PROMTH3 <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 3)
     End If
  End If

  Exit Sub

LABEL_ERR_M:

  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Can't undo, continue?.", vbYesNo + vbQuestion)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||256||7c2||fffd||fffd||702||fffd||fffd||42a91||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
  End If

  If W_RET = vbYes Then
     W_ERRM = 1
     Erase AR_REP
     Set OWB = Nothing
     Resume Next
  Else
     W_ERRM = 2
     Exit Sub
  End If

End Sub

Private Function REFIND(ByVal SR As Long, ByVal SC As Long, ByVal ER As Long, ByVal EC As Long, _
                        SW_1ST As Long, ByVal SW_FRA As Long, WB As Workbook, Optional ByVal SW_SML As Boolean) As Boolean
'SW_FRA 0|fffd|F|fffd||fffd||fffd||fffd||fffd|A1|fffd|F|fffd|u|fffd||fffd||fffd|A2|fffd|F|fffd|S|fffd|u|fffd||fffd||fffd|A3|fffd|F|fffd|S|fffd||fffd||fffd||fffd||fffd|A4|fffd|FGrep|fffd|A5:Grep|fffd|u|fffd||fffd||fffd|A6|fffd|F|fffd|S|fffd|I|fffd||fffd||fffd|A7|fffd|F|fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|C|fffd||fffd||fffd|A8|fffd|F|fffd|S|fffd|\|fffd||fffd||fffd|A9|fffd|F|fffd|S|fffd|}|fffd|[|fffd|N

  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_LASTC As Long
  Dim W_REP As String
  Dim W_NR As Long
  Dim SW_FEXEC As Boolean
  Dim SW_LVALCHG As Boolean
  Dim SW_VALCHG As Boolean
  Dim SW_TEST As Boolean
  Dim W_CELL As Variant
  Dim C2 As Long
  Dim W_BKC As Long
  
  Dim W_LASTR As Long
  Dim R2 As Long
  Dim W_BKR As Long
  Dim W_NC As Long
  
  Dim W_RCNT As Long
  Dim W_CCNT As Long
  Dim W_STOPCNT As Long
  Dim W_V2 As String
  
  Dim SW_WK As Boolean
  
  Dim W_VCCNT As Variant
  Dim SW_RCEND As Boolean
  
  
  REFIND = False
  
  Call RANGE_GET(WB.ActiveSheet.UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
   
  W_VCCNT = 0
  On Error Resume Next
  W_VCCNT = CELL_CNT(WB.ActiveSheet.UsedRange.SpecialCells(xlCellTypeVisible))
  On Error GoTo 0
  If W_VCCNT = CELL_CNT(WB.ActiveSheet.UsedRange) Then
     SW_RCEND = True
  Else
     SW_RCEND = False
  End If
  
  W_RCNT = W_UER
  W_CCNT = W_UEC
   
  If ER < W_USR Or _
     SR > W_UER Or _
     EC < W_USC Or _
     SC > W_UEC Then
     If SW_1ST = 1 Then
        SW_1ST = 2
     End If
     Exit Function
  End If
  
  If SW_FRA = 4 Or SW_FRA = 5 Then
     Cells(1, 1).Select
  End If
  
  If SW_1ST = 1 Then
     If Me.OptionButton11.Value = True Then
        If SW_FRA = 4 Or SW_FRA = 5 Then
           SW_ACDRCL = False
        ElseIf ER - SR < EC - SC Then
           SW_ACDRCL = True
        Else
           SW_ACDRCL = False
        End If
     ElseIf Me.OptionButton12.Value = True Then
        SW_ACDRCL = False
     ElseIf Me.OptionButton13.Value = True Then
        SW_ACDRCL = True
     End If
     
     If SW_FRA = 1 Or _
        SW_FRA = 2 Or _
        SW_FRA = 5 Then
        W_REPSTRCNV = REPSTRCNV(Me.ComboBox2.Value)
     End If

     If SW_ACDRCL = True Then
        If ActiveCell.Row >= SR And _
           ActiveCell.Row <= ER And _
           ActiveCell.Column >= SC And _
           ActiveCell.Column <= EC Then
           W_SC = ActiveCell.Column
           If SW_FRA = 4 Or _
              SW_FRA = 5 Then
              W_SR = ActiveCell.Row
           Else
              If SW_IS = True Then
                 W_SR = ActiveCell.Row
              Else
                 W_SR = ActiveCell.Row + 1
              End If
           End If
           If W_SR > ER Then
              W_SC = W_SC + 1
              W_SR = SR
           End If
           If W_SC > EC Or _
              W_SC > W_UEC Then
              SW_1ST = 2
              Exit Function
           End If
        Else
           If ActiveCell.Column < SC Then
              W_SC = SC
              If W_SC < W_USC Then
                 W_SC = W_USC
              End If
              W_SR = SR
           ElseIf ActiveCell.Column > EC Then
              SW_1ST = 2
              Exit Function
           Else
              If ActiveCell.Row < SR Then
                 W_SC = ActiveCell.Column
                 W_SR = SR
              Else
                 W_SC = ActiveCell.Column + 1
                 W_SR = SR
                 If W_SC > EC Or _
                    W_SC > W_UEC Then
                    SW_1ST = 2
                    Exit Function
                 End If
              End If
           End If
        End If
     Else
        If ActiveCell.Row >= SR And _
           ActiveCell.Row <= ER And _
           ActiveCell.Column >= SC And _
           ActiveCell.Column <= EC Then
           W_SR = ActiveCell.Row
           If SW_FRA = 4 Or _
              SW_FRA = 5 Then
              W_SC = ActiveCell.Column
           Else
              If SW_IS = True Then
                 W_SC = ActiveCell.Column
              Else
                 W_SC = ActiveCell.Column + 1
              End If
           End If
           If W_SC > EC Then
              W_SR = W_SR + 1
              W_SC = SC
           End If
           If W_SR > ER Or _
              W_SR > W_UER Then
              SW_1ST = 2
              Exit Function
           End If
        Else
           If ActiveCell.Row < SR Then
              W_SR = SR
              If W_SR < W_USR Then
                 W_SR = W_USR
              End If
              W_SC = SC
           ElseIf ActiveCell.Row > ER Then
              SW_1ST = 2
              Exit Function
           Else
              If ActiveCell.Column < SC Then
                 W_SR = ActiveCell.Row
                 W_SC = SC
              Else
                 W_SR = ActiveCell.Row + 1
                 W_SC = SC
                 If W_SR > ER Or _
                    W_SR > W_UER Then
                    SW_1ST = 2
                    Exit Function
                 End If
              End If
           End If
        End If
     End If
  ElseIf SW_1ST = 2 Then
     If SW_ACDRCL = True Then
        W_SC = SC
        If W_SC < W_USC Then
           W_SC = W_USC
        End If
        W_SR = SR
     Else
        W_SR = SR
        If W_SR < W_USR Then
           W_SR = W_USR
        End If
        W_SC = SC
     End If
  Else
     If SW_ACDRCL = True Then
        W_SC = SC
        If W_SC < W_USC Then
           W_SC = W_USC
        End If
        W_SR = SR
     Else
        W_SR = SR
        If W_SR < W_USR Then
           W_SR = W_USR
        End If
        W_SC = SC
     End If
  End If
  
  If SW_1ST = 1 Or _
     SW_1ST = 2 Then
     W_1STSR = W_SR
     W_1STSC = W_SC
     SW_1ST = 0
  End If
  
  R = W_SR
  C = W_SC
  
  Do
     SW_LVALCHG = False
     If SW_ACDRCL = True Then
        W_LASTR = 0
        AR_CELL = RANGEARRAY(WB.ActiveSheet.Range(WB.ActiveSheet.Cells(1, C), WB.ActiveSheet.Cells(W_RCNT, C)))
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = WB.ActiveSheet.Cells(R, C).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           WB.ActiveSheet.Cells(R, C).HasFormula = False Then
           If SW_RCEND = True Then
              R = WB.ActiveSheet.Cells(R, C).End(xlDown).Row
           End If
        End If
        If SW_RCEND = True Then
           W_LASTR = LASTR(W_RCNT)
        Else
           W_LASTR = W_RCNT
        End If
        W_LASTC = W_CCNT
     Else
        W_LASTC = 0
        AR_CELL = RANGEARRAY(WB.ActiveSheet.Range(WB.ActiveSheet.Cells(R, 1), WB.ActiveSheet.Cells(R, W_CCNT)))
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = WB.ActiveSheet.Cells(R, C).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           WB.ActiveSheet.Cells(R, C).HasFormula = False Then
           If SW_RCEND = True Then
              C = WB.ActiveSheet.Cells(R, C).End(xlToRight).Column
           End If
        End If
        If SW_RCEND = True Then
           W_LASTC = LASTC(W_CCNT)
        Else
           W_LASTC = W_CCNT
        End If
        W_LASTR = W_RCNT
     End If
     
     If SW_ACDRCL = False Then
        If SW_FRA <> 4 And _
           SW_FRA <> 5 And _
           SW_FRA <> 8 Then
           If WB.Worksheets(AR_SELS(IDX)).FilterMode = True And _
              WB.ActiveSheet.Rows(R).Hidden = True Then
              GoTo LABEL_NEXT2
           End If
        End If
     End If
      
     Do While C <= EC And _
              C <= W_LASTC And _
              C <= W_UEC And _
              C <= W_CCNT And _
              R <= ER And _
              R <= W_LASTR And _
              R <= W_UER And _
              R <= W_RCNT
        '|fffd||fffd|~
        If SW_FRA = 2 Or _
           SW_FRA = 3 Or _
           SW_FRA = 4 Or _
           SW_FRA = 5 Then
           If W_STOPCNT > 100 Then
              W_STOPCNT = 0
              DoEvents
              If SW_STOP = True Then
                 Exit Function
              End If
           Else
              W_STOPCNT = W_STOPCNT + 1
           End If
        End If
        
        If SW_ACDRCL = True Then
           If SW_1ST = 9 And _
              ((R >= W_1STSR And _
                C = W_1STSC) Or _
               C > W_1STSC) Then
              Exit Function
           End If
           If WB.Worksheets(AR_SELS(IDX)).FilterMode = True And _
              WB.ActiveSheet.Rows(R).Hidden = True And _
              SW_FRA <> 4 And _
              SW_FRA <> 5 And _
              SW_FRA <> 8 Then
              GoTo LABEL_NEXT
           End If
           If IsError(AR_CELL(R, 1)) = True Then
              GoTo LABEL_NEXT
           End If
        Else
           If SW_1ST = 9 And _
              ((R = W_1STSR And _
                C >= W_1STSC) Or _
               R > W_1STSR) Then
              Exit Function
           End If
           If IsError(AR_CELL(1, C)) = True Then
              GoTo LABEL_NEXT
           End If
        End If

        SW_FEXEC = False
        SW_VALCHG = False
        
        If SW_ACDRCL = True Then
           If AR_CELL(R, 1) <> "" Then
              SW_FEXEC = True
           Else
              W_BKR = R
              If SW_RCEND = True Then
                 R = WB.ActiveSheet.Cells(R, C).End(xlDown).Row
              End If
              If R = W_BKR Then
                 If R < W_RCNT Then
                    R = R + 1
                 End If
              End If
              If R = W_RCNT Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = WB.ActiveSheet.Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 = "" And _
                    WB.ActiveSheet.Cells(R, C).HasFormula = False Then
                    R = R + 1
                 End If
              End If
           End If
        Else
           If AR_CELL(1, C) <> "" Then
              SW_FEXEC = True
           Else
              W_BKC = C
              If SW_RCEND = True Then
                 C = WB.ActiveSheet.Cells(R, C).End(xlToRight).Column
              End If
              If C = W_BKC Then
                 If C < W_CCNT Then
                    C = C + 1
                 End If
              End If
              If C = W_CCNT Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = WB.ActiveSheet.Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 = "" And _
                    WB.ActiveSheet.Cells(R, C).HasFormula = False Then
                    C = C + 1
                 End If
              End If
           End If
        End If
        
        If SW_FEXEC = True Then
           W_CELL = ""
           If SW_ACDRCL = True Then
              If Me.CheckBox2.Value = True Then
                 If VarType(AR_CELL(R, 1)) = vbString Then
                    If Me.CheckBox32.Value = True And _
                       (SW_FRA = 0 Or _
                       SW_FRA = 3 Or _
                       SW_FRA = 4 Or _
                       SW_FRA = 6 Or _
                       SW_FRA = 7 Or _
                       SW_FRA = 8 Or _
                       SW_FRA = 9) Then
                       W_CELL = Application.Substitute(AR_CELL(R, 1), vbLf, "")
                    Else
                       W_CELL = AR_CELL(R, 1)
                    End If
                 End If
              Else
                 If Me.CheckBox32.Value = True And _
                    (SW_FRA = 0 Or _
                    SW_FRA = 3 Or _
                    SW_FRA = 4 Or _
                    SW_FRA = 6 Or _
                    SW_FRA = 7 Or _
                    SW_FRA = 8 Or _
                    SW_FRA = 9) Then
                    W_CELL = Application.Substitute(CStr(AR_CELL(R, 1)), vbLf, "")
                 Else
                    W_CELL = AR_CELL(R, 1)
                 End If
              End If
           Else
              If Me.CheckBox2.Value = True Then
                 If VarType(AR_CELL(1, C)) = vbString Then
                    If Me.CheckBox32.Value = True And _
                       (SW_FRA = 0 Or _
                       SW_FRA = 3 Or _
                       SW_FRA = 4 Or _
                       SW_FRA = 6 Or _
                       SW_FRA = 7 Or _
                       SW_FRA = 8 Or _
                       SW_FRA = 9) Then
                       W_CELL = Application.Substitute(AR_CELL(1, C), vbLf, "")
                    Else
                       W_CELL = AR_CELL(1, C)
                    End If
                 End If
              Else
                 If Me.CheckBox32.Value = True And _
                    (SW_FRA = 0 Or _
                    SW_FRA = 3 Or _
                    SW_FRA = 4 Or _
                    SW_FRA = 6 Or _
                    SW_FRA = 7 Or _
                    SW_FRA = 8 Or _
                    SW_FRA = 9) Then
                    W_CELL = Application.Substitute(CStr(AR_CELL(1, C)), vbLf, "")
                 Else
                    W_CELL = AR_CELL(1, C)
                 End If
              End If
           End If
           
           W_EVAR = W_CELL
           If W_CELL <> "" Then
              SW_TEST = False
              
              W_SPFND = SP_FND(W_CELL, 1)
              If W_SPFND = 0 Then
                 If SW_NR = False Then
                    SW_WK = RE.Test(W_CELL)
                 Else
                    SW_WK = NRTEST(NRE, CStr(W_CELL))
                 End If
                 
                 If SW_WK = True Then
                    If W_ATEXT <> "" And _
                       W_FNDSTR2 <> "" Then
                       W_SPFND2 = SP_FND(W_CELL, 2)
                       If W_SPFND2 = 0 Then
                          If SW_NR2 = False Then
                             SW_WK = RE2.Test(W_CELL)
                          Else
                             SW_WK = NRTEST(NRE2, CStr(W_CELL))
                          End If
                          
                          If SW_WK = Not SW_ADDDENY Then
                             SW_TEST = True
                          End If
                       Else
                          If SW_ADDDENY = False Then
                             If W_SPFND2 = 2 Then
                                SW_TEST = True
                             End If
                          Else
                             If W_SPFND2 = 1 Then
                                SW_TEST = True
                             End If
                          End If
                       End If
                    Else
                       SW_TEST = True
                    End If
                 End If
              ElseIf W_SPFND = 2 Then
                 If W_ATEXT <> "" And _
                    W_FNDSTR2 <> "" Then
                    W_SPFND2 = SP_FND(W_CELL, 2)
                    If W_SPFND2 = 0 Then
                       If SW_NR2 = False Then
                          SW_WK = RE2.Test(W_CELL)
                       Else
                          SW_WK = NRTEST(NRE2, CStr(W_CELL))
                       End If
                       
                       If SW_WK = Not SW_ADDDENY Then
                          SW_TEST = True
                       End If
                    Else
                       If SW_ADDDENY = False Then
                          If W_SPFND2 = 2 Then
                             SW_TEST = True
                          End If
                       Else
                          If W_SPFND2 = 1 Then
                             SW_TEST = True
                          End If
                       End If
                    End If
                 Else
                    SW_TEST = True
                 End If
              End If
              
              If SW_TEST = True And _
                 (SW_DCB = True Or _
                  SW_DCI = True Or _
                  SW_DCU = True Or _
                  SW_DCK = True Or _
                  SW_DCC = True) Then
                  SW_TEST = DC_FIND(W_CELL)
              End If
              
              If SW_TEST = True Then
                 If SW_ACF = True Then
                    SW_TEST = AC_FIND(R, C)
                 End If
              End If
              
              If SW_TEST = True Then
                 If SW_FRA <> 5 Then
                    Call STORE_FIND(SW_FRA, SW_VALCHG, W_CELL)
                    If W_ERRM = 2 Then
                       Exit Function
                    End If
                 End If
                 If SW_FRA <> 3 And _
                    SW_FRA <> 4 And _
                    SW_FRA <> 5 And _
                    SW_FRA <> 6 And _
                    SW_FRA <> 7 And _
                    SW_FRA <> 8 And _
                    SW_FRA <> 9 Then
                    Call FIND_ACTV
                 End If
                 REFIND = True
                 W_CNTFA = W_CNTFA + 1
                 If SW_FRA <> 0 And _
                    SW_FRA <> 3 And _
                    SW_FRA <> 4 And _
                    SW_FRA <> 6 And _
                    SW_FRA <> 7 And _
                    SW_FRA <> 8 And _
                    SW_FRA <> 9 Then
                    If SW_FRA = 1 Or _
                       SW_FRA = 2 Then
                       If W_ASK = True And SW_SML = False Then
                          Call REP_ASK(SW_FRA)
                          If W_RET = vbCancel Then
                             SW_1ST = 99
                             Exit Function
                          End If
                       Else
                          W_RET = vbYes
                       End If
                    Else
                       W_RET = vbYes
                    End If
                    If W_RET = vbYes Then
                       If SW_FRA = 1 Or _
                          SW_FRA = 2 Or _
                          SW_FRA = 5 Then
                          Call STORE_REP(SW_FRA, SW_VALCHG)
                          If W_ERRM = 2 Then
                             Exit Function
                          End If
                       End If
                       
                       Call SP_REP(SW_VALCHG, SW_FRA, W_SPFND)
                       If SW_SPREP = False Then
                          SW_ERR_FRML = True
                          If SW_FRA = 1 Or _
                             SW_FRA = 2 Then
                             If Me.CheckBox3.Value = True Or _
                                SW_VALCHG = True Then
                                On Error Resume Next
                                Application.DisplayAlerts = False
                                If (SW_DCB = True Or _
                                    SW_DCI = True Or _
                                    SW_DCU = True Or _
                                    SW_DCK = True Or _
                                    SW_DCC = True) Then
                                   WB.ActiveSheet.Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                                Else
                                   If SW_NR = False Then
                                      WB.ActiveSheet.Cells(R, C).Value = RE.Replace(W_CELL, W_REPSTRCNV)
                                   Else
                                      WB.ActiveSheet.Cells(R, C).Value = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                   End If
                                End If
                                Application.DisplayAlerts = True
                                If Err.Number = 0 Then
                                   Call STORE_REP2
                                   Call STORE_REP3
                                   If SW_SML = True Then
                                      Call STORE_REP4
                                   End If
                                End If
                                On Error GoTo 0
                             Else
                                On Error Resume Next
                                Application.DisplayAlerts = False
                                If (SW_DCB = True Or _
                                    SW_DCI = True Or _
                                    SW_DCU = True Or _
                                    SW_DCK = True Or _
                                    SW_DCC = True) Then
                                   WB.ActiveSheet.Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                                Else
                                   If WB.ActiveSheet.Cells(R, C).HasArray = True Then
                                      If SW_NR = False Then
                                         WB.ActiveSheet.Cells(R, C).FormulaArray = RE.Replace(W_CELL, W_REPSTRCNV)
                                      Else
                                         WB.ActiveSheet.Cells(R, C).FormulaArray = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                      End If
                                   Else
                                      If SW_NR = False Then
                                         WB.ActiveSheet.Cells(R, C).Formula = RE.Replace(W_CELL, W_REPSTRCNV)
                                      Else
                                         WB.ActiveSheet.Cells(R, C).Formula = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                      End If
                                   End If
                                End If
                                Application.DisplayAlerts = True
                                If Err.Number = 0 Then
                                   Call STORE_REP2
                                   Call STORE_REP3
                                   If SW_SML = True Then
                                      Call STORE_REP4
                                   End If
                                End If
                                On Error GoTo 0
                             End If
                          Else
                             If Me.CheckBox3.Value = True Or _
                                SW_VALCHG = True Then
                                On Error Resume Next
                                Application.DisplayAlerts = False
                                If (SW_DCB = True Or _
                                    SW_DCI = True Or _
                                    SW_DCU = True Or _
                                    SW_DCK = True Or _
                                    SW_DCC = True) Then
                                   WB.ActiveSheet.Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                                Else
                                   If SW_NR = False Then
                                      WB.ActiveSheet.Cells(R, C).Value = RE.Replace(W_CELL, W_REPSTRCNV)
                                   Else
                                      WB.ActiveSheet.Cells(R, C).Value = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                   End If
                                End If
                                Application.DisplayAlerts = True
                                If Err.Number = 0 Then
                                   Call STORE_REP2
                                   Call STORE_REP3
                                   If SW_SML = True Then
                                      Call STORE_REP4
                                   End If
                                End If
                                On Error GoTo 0
                             Else
                                On Error Resume Next
                                Application.DisplayAlerts = False
                                If (SW_DCB = True Or _
                                    SW_DCI = True Or _
                                    SW_DCU = True Or _
                                    SW_DCK = True Or _
                                    SW_DCC = True) Then
                                   WB.ActiveSheet.Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                                Else
                                   If Cells(R, C).HasArray = True Then
                                      If SW_NR = False Then
                                         WB.ActiveSheet.Cells(R, C).FormulaArray = RE.Replace(W_CELL, W_REPSTRCNV)
                                      Else
                                         WB.ActiveSheet.Cells(R, C).FormulaArray = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                      End If
                                   Else
                                      If SW_NR = False Then
                                         WB.ActiveSheet.Cells(R, C).Formula = RE.Replace(W_CELL, W_REPSTRCNV)
                                      Else
                                         WB.ActiveSheet.Cells(R, C).Formula = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                      End If
                                   End If
                                End If
                                Application.DisplayAlerts = True
                                If Err.Number = 0 Then
                                   Call STORE_REP2
                                   Call STORE_REP3
                                   If SW_SML = True Then
                                      Call STORE_REP4
                                   End If
                                End If
                                On Error GoTo 0
                             End If
                          End If
                       Else
                          W_CNTRA2 = W_CNTRA2 + 1
                       End If
                       If SW_FRA = 5 Then
                          Call STORE_FIND(SW_FRA, SW_VALCHG, W_CELL)
                       End If
                    End If
                 End If
                 
                 If SW_FRA = 1 And _
                    SW_ERR_FRML = True Then
                    SW_ERR_FRML = False
                    REFIND = False
                    GoTo LABEL_NEXT
                 End If
                 If SW_FRA = 2 And _
                    SW_ERR_FRML = True Then
                    If W_CNTRA2 = 0 Then
                       REFIND = False
                    End If
                    SW_ERR_FRML = False
                    GoTo LABEL_NEXT
                 End If
                 If SW_FRA = 5 And _
                    SW_ERR_FRML = True Then
                    If W_CNTRA2 = 0 Then
                       REFIND = False
                    End If
                    Workbooks(W_FRB).Worksheets(1).Cells(FR, 5).Interior.ColorIndex = 3
                    SW_ERR_FRML = False
                    GoTo LABEL_NEXT
                 End If
                 If SW_FRA <> 2 And _
                    SW_FRA <> 3 And _
                    SW_FRA <> 4 And _
                    SW_FRA <> 5 And _
                    SW_FRA <> 6 And _
                    SW_FRA <> 7 And _
                    SW_FRA <> 8 And _
                    SW_FRA <> 9 Then
                    Exit Function
                 End If
              End If
           End If

LABEL_NEXT:
           If SW_ACDRCL = True Then
              R = R + 1
           Else
              C = C + 1
           End If
        End If
     Loop

LABEL_NEXT2:
     If SW_ACDRCL = True Then
        C = C + 1
        R = SR
        If C <= EC And _
           C <= W_UEC Then
           W_NC = W_CCNT
           
           W_V2 = ""
           On Error Resume Next
           W_V2 = WB.ActiveSheet.Cells(R, C).Value2
           On Error GoTo 0
           If W_V2 <> "" Or _
              WB.ActiveSheet.Cells(R, C).HasFormula = True Then
              W_NC = C
           Else
              If SW_RCEND = True Then
                 R = WB.ActiveSheet.Cells(R, C).End(xlDown).Row
              Else
                 R = R + 1
              End If
              If R < ER Then
                 W_NC = C
              ElseIf R = ER Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = WB.ActiveSheet.Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 <> "" Or _
                    WB.ActiveSheet.Cells(R, C).HasFormula = True Then
                    W_NC = C
                 ElseIf SW_RCEND = True Then
                    For R = SR To ER
                       If WB.ActiveSheet.Cells(R, C).End(xlToRight).Column < W_NC Then
                          W_NC = Application.Min(W_NC, WB.ActiveSheet.Cells(R, C).End(xlToRight).Column)
                          If W_NC = C + 1 Then
                             Exit For
                          End If
                       End If
                    Next R
                 Else
                    W_NC = C + 1
                 End If
              ElseIf SW_RCEND = True Then
                 For R = SR To ER
                    If WB.ActiveSheet.Cells(R, C).End(xlToRight).Column < W_NC Then
                       W_NC = Application.Min(W_NC, WB.ActiveSheet.Cells(R, C).End(xlToRight).Column)
                       If W_NC = C + 1 Then
                          Exit For
                       End If
                    End If
                 Next R
              Else
                 W_NC = C + 1
              End If
           End If
           
           C = W_NC
           R = SR
        End If
        If C > EC Or _
           C > W_UEC Then
           Exit Function
        End If
     Else
        R = R + 1
        C = SC
        If R <= ER And _
           R <= W_UER Then
           W_NR = W_RCNT
           
           W_V2 = ""
           On Error Resume Next
           W_V2 = WB.ActiveSheet.Cells(R, C).Value2
           On Error GoTo 0
           If W_V2 <> "" Or _
              WB.ActiveSheet.Cells(R, C).HasFormula = True Then
              W_NR = R
           Else
              If SW_RCEND = True Then
                 C = WB.ActiveSheet.Cells(R, C).End(xlToRight).Column
              Else
                 C = C + 1
              End If
              If C < EC Then
                 W_NR = R
              ElseIf C = EC Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = WB.ActiveSheet.Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 <> "" Or _
                    WB.ActiveSheet.Cells(R, C).HasFormula = True Then
                    W_NR = R
                 ElseIf SW_RCEND = True Then
                    For C = SC To EC
                       If WB.ActiveSheet.Cells(R, C).End(xlDown).Row < W_NR Then
                          W_NR = Application.Min(W_NR, WB.ActiveSheet.Cells(R, C).End(xlDown).Row)
                          If W_NR = R + 1 Then
                             Exit For
                          End If
                       End If
                    Next C
                 Else
                    W_NR = R + 1
                 End If
              ElseIf SW_RCEND = True Then
                 For C = SC To EC
                    If WB.ActiveSheet.Cells(R, C).End(xlDown).Row < W_NR Then
                       W_NR = Application.Min(W_NR, WB.ActiveSheet.Cells(R, C).End(xlDown).Row)
                       If W_NR = R + 1 Then
                          Exit For
                       End If
                    End If
                 Next C
              Else
                 W_NR = R + 1
              End If
           End If
           
           R = W_NR
           C = SC
        End If
        If R > ER Or _
           R > W_UER Then
           Exit Function
        End If
     End If
     If SW_1ST = 9 And _
        R = W_1STSR And _
        C = W_1STSC Then
        Exit Function
     End If
  Loop

End Function

Private Function REFINDP(ByVal SR As Long, ByVal SC As Long, ByVal ER As Long, ByVal EC As Long, _
                        SW_1ST As Long, ByVal SW_FRA As Long) As Boolean
'SW_FRA 0|fffd|F|fffd||fffd||fffd||fffd||fffd|A1|fffd|F|fffd|u|fffd||fffd||fffd|A2|fffd|F|fffd|S|fffd|u|fffd||fffd||fffd|A3|fffd|F|fffd|S|fffd||fffd||fffd||fffd||fffd|A4|fffd|FGrep|fffd|A5|fffd|FGrep|fffd|u|fffd||fffd||fffd|A6|fffd|F|fffd|S|fffd|I|fffd||fffd|
  
  Dim W_USR As Long
  Dim W_USC As Long
  Dim W_UER As Long
  Dim W_UEC As Long
  Dim W_SR As Long
  Dim W_SC As Long
  Dim W_LASTC As Long
  Dim W_REP As String
  Dim W_NR As Long
  Dim SW_FEXEC As Boolean
  Dim SW_LVALCHG As Boolean
  Dim SW_VALCHG As Boolean
  Dim SW_TEST As Boolean
  Dim W_CELL As Variant
  Dim C2 As Long
  Dim W_BKC As Long
  
  Dim W_LASTR As Long
  Dim R2 As Long
  Dim W_BKR As Long
  Dim W_NC As Long
  
  Dim W_RCNT As Long
  Dim W_CCNT As Long
  Dim W_V2 As String
  
  Dim SW_WK As Boolean
  
  Dim W_VCCNT As Variant
  Dim SW_RCEND As Boolean
  
  
  REFINDP = False
  
  Call RANGE_GET(ActiveSheet.UsedRange.Address(True, True, xlR1C1), W_USR, W_USC, W_UER, W_UEC)
   
  W_VCCNT = 0
  On Error Resume Next
  W_VCCNT = CELL_CNT(ActiveSheet.UsedRange.SpecialCells(xlCellTypeVisible))
  On Error GoTo 0
  If W_VCCNT = CELL_CNT(ActiveSheet.UsedRange) Then
     SW_RCEND = True
  Else
     SW_RCEND = False
  End If
  
  W_RCNT = W_UER
  W_CCNT = W_UEC
   
  If ER < W_USR Or _
     SR > W_UER Or _
     EC < W_USC Or _
     SC > W_UEC Then
     If SW_1ST = 1 Then
        SW_1ST = 2
     End If
     Exit Function
  End If
  
  If SW_1ST = 1 Then
     If Me.OptionButton11.Value = True Then
        If ER - SR < EC - SC Then
           SW_ACDRCL = True
        Else
           SW_ACDRCL = False
        End If
     ElseIf Me.OptionButton12.Value = True Then
        SW_ACDRCL = False
     ElseIf Me.OptionButton13.Value = True Then
        SW_ACDRCL = True
     End If
     
     If SW_FRA = 1 Or _
        SW_FRA = 2 Then
        W_REPSTRCNV = REPSTRCNV(Me.ComboBox2.Value)
     End If
     
     If SW_ACDRCL = True Then
        If ActiveCell.Row >= SR And _
           ActiveCell.Row <= ER And _
           ActiveCell.Column >= SC And _
           ActiveCell.Column <= EC Then
           W_SC = ActiveCell.Column
           If SW_IS = True Then
              W_SR = ActiveCell.Row - 1
           Else
              W_SR = ActiveCell.Row - 1
           End If
           If W_SR < SR Then
              W_SC = W_SC - 1
              W_SR = ER
           End If
           If W_SC < SC Or _
              W_SC < W_USC Then
              SW_1ST = 2
              Exit Function
           End If
        Else
           If ActiveCell.Column > EC Then
              W_SC = EC
              If W_SC > W_UEC Then
                 W_SC = W_UEC
              End If
              W_SR = ER
           ElseIf ActiveCell.Column < SC Then
              SW_1ST = 2
              Exit Function
           Else
              If ActiveCell.Row > ER Then
                 W_SC = ActiveCell.Column
                 W_SR = ER
              Else
                 W_SC = ActiveCell.Column - 1
                 W_SR = ER
                 If W_SC < SC Or _
                    W_SC < W_USC Then
                    SW_1ST = 2
                    Exit Function
                 End If
              End If
           End If
        End If
     Else
        If ActiveCell.Row >= SR And _
           ActiveCell.Row <= ER And _
           ActiveCell.Column >= SC And _
           ActiveCell.Column <= EC Then
           W_SR = ActiveCell.Row
           If SW_IS = True Then
              W_SC = ActiveCell.Column - 1
           Else
              W_SC = ActiveCell.Column - 1
           End If
           If W_SC < SC Then
              W_SR = W_SR - 1
              W_SC = EC
           End If
           If W_SR < SR Or _
              W_SR < W_USR Then
              SW_1ST = 2
              Exit Function
           End If
        Else
           If ActiveCell.Row > ER Then
              W_SR = ER
              If W_SR > W_UER Then
                 W_SR = W_UER
              End If
              W_SC = EC
           ElseIf ActiveCell.Row < SR Then
              SW_1ST = 2
              Exit Function
           Else
              If ActiveCell.Column > EC Then
                 W_SR = ActiveCell.Row
                 W_SC = EC
              Else
                 W_SR = ActiveCell.Row - 1
                 W_SC = EC
                 If W_SR < SR Or _
                    W_SR < W_USR Then
                    SW_1ST = 2
                    Exit Function
                 End If
              End If
           End If
        End If
     End If
  ElseIf SW_1ST = 2 Then
     If SW_ACDRCL = True Then
        W_SC = EC
        If W_SC > W_UEC Then
           W_SC = W_UEC
        End If
        W_SR = ER
     Else
        W_SR = ER
        If W_SR > W_UER Then
           W_SR = W_UER
        End If
        W_SC = EC
     End If
  Else
     If SW_ACDRCL = True Then
        W_SC = EC
        If W_SC > W_UEC Then
           W_SC = W_UEC
        End If
        W_SR = ER
     Else
        W_SR = ER
        If W_SR > W_UER Then
           W_SR = W_UER
        End If
        W_SC = EC
     End If
  End If
     
  If SW_1ST = 1 Or _
     SW_1ST = 2 Then
     W_1STSR = W_SR
     W_1STSC = W_SC
     SW_1ST = 0
  End If
  
  R = W_SR
  C = W_SC
  
  Do
     SW_LVALCHG = False
     If SW_ACDRCL = True Then
        AR_CELL = RANGEARRAY(Range(Cells(1, C), Cells(W_RCNT, C)))
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = Cells(R, C).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           Cells(R, C).HasFormula = False Then
           If SW_RCEND = True Then
              R = Cells(R, C).End(xlUp).Row
           End If
        End If
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = Cells(1, C).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           Cells(1, C).HasFormula = False And _
           SW_RCEND = True Then
           W_LASTR = Cells(1, C).End(xlDown).Row
        Else
           W_LASTR = 1
        End If
        
        W_LASTC = 1
     Else
        AR_CELL = RANGEARRAY(Range(Cells(R, 1), Cells(R, W_CCNT)))
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = Cells(R, C).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           Cells(R, C).HasFormula = False And _
           SW_RCEND = True Then
           C = Cells(R, C).End(xlToLeft).Column
        End If
        
        W_V2 = ""
        On Error Resume Next
        W_V2 = Cells(R, 1).Value2
        On Error GoTo 0
        If W_V2 = "" And _
           Cells(R, 1).HasFormula = False And _
           SW_RCEND = True Then
           W_LASTC = Cells(R, 1).End(xlToRight).Column
        Else
           W_LASTC = 1
        End If
        
        W_LASTR = 1
     End If
     
     If SW_ACDRCL = False Then
        If Worksheets(AR_SELS(IDX)).FilterMode = True And _
           Rows(R).Hidden = True Then
           GoTo LABEL_NEXT2
        End If
     End If
     
     Do While C >= SC And _
              C >= W_LASTC And _
              C >= W_USC And _
              C >= 1 And _
              R >= SR And _
              R >= W_LASTR And _
              R >= W_USR And _
              R >= 1
        If SW_ACDRCL = True Then
           If SW_1ST = 9 And _
              ((C = W_1STSC And _
                R <= W_1STSR) Or _
               C < W_1STSC) Then
              Exit Function
           End If
           If Worksheets(AR_SELS(IDX)).FilterMode = True And _
              Rows(R).Hidden = True Then
              GoTo LABEL_NEXT
           End If
           If IsError(AR_CELL(R, 1)) = True Then
              GoTo LABEL_NEXT
           End If
        Else
           If SW_1ST = 9 And _
              ((R = W_1STSR And _
                C <= W_1STSC) Or _
               R < W_1STSR) Then
              Exit Function
           End If
           If IsError(AR_CELL(1, C)) = True Then
              GoTo LABEL_NEXT
           End If
        End If
        
        SW_FEXEC = False
        SW_VALCHG = False
        
        If SW_ACDRCL = True Then
           If AR_CELL(R, 1) <> "" Then
              SW_FEXEC = True
           Else
              W_BKR = R
              If SW_RCEND = True Then
                 R = Cells(R, C).End(xlUp).Row
              End If
              If R = W_BKR Then
                 If R > 1 Then
                    R = R - 1
                 End If
              End If
              If R = 1 Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = Cells(1, C).Value2
                 On Error GoTo 0
                 If W_V2 = "" And _
                    Cells(1, C).HasFormula = False Then
                    R = R - 1
                 End If
              End If
           End If
        Else
           If AR_CELL(1, C) <> "" Then
              SW_FEXEC = True
           Else
              W_BKC = C
              If SW_RCEND = True Then
                 C = Cells(R, C).End(xlToLeft).Column
              End If
              If C = W_BKC Then
                 If C > 1 Then
                    C = C - 1
                 End If
              End If
              If C = 1 Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = Cells(R, 1).Value2
                 On Error GoTo 0
                 If W_V2 = "" And _
                    Cells(R, 1).HasFormula = False Then
                    C = C - 1
                 End If
              End If
           End If
        End If
        
        If SW_FEXEC = True Then
           W_CELL = ""
           If SW_ACDRCL = True Then
              If Me.CheckBox2.Value = True Then
                 If VarType(AR_CELL(R, 1)) = vbString Then
                    If Me.CheckBox32.Value = True And _
                       (SW_FRA = 0 Or _
                       SW_FRA = 3) Then
                       W_CELL = Application.Substitute(AR_CELL(R, 1), vbLf, "")
                    Else
                       W_CELL = AR_CELL(R, 1)
                    End If
                 End If
              Else
                 If Me.CheckBox32.Value = True And _
                    (SW_FRA = 0 Or _
                    SW_FRA = 3) Then
                    W_CELL = Application.Substitute(CStr(AR_CELL(R, 1)), vbLf, "")
                 Else
                    W_CELL = AR_CELL(R, 1)
                 End If
              End If
           Else
              If Me.CheckBox2.Value = True Then
                 If VarType(AR_CELL(1, C)) = vbString Then
                    If Me.CheckBox32.Value = True And _
                       (SW_FRA = 0 Or _
                       SW_FRA = 3) Then
                       W_CELL = Application.Substitute(AR_CELL(1, C), vbLf, "")
                    Else
                       W_CELL = AR_CELL(1, C)
                    End If
                 End If
              Else
                 If Me.CheckBox32.Value = True And _
                    (SW_FRA = 0 Or _
                    SW_FRA = 3) Then
                    W_CELL = Application.Substitute(CStr(AR_CELL(1, C)), vbLf, "")
                 Else
                    W_CELL = AR_CELL(1, C)
                 End If
              End If
           End If
           W_EVAR = W_CELL
           If W_CELL <> "" Then
              SW_TEST = False
              
              W_SPFND = SP_FND(W_CELL, 1)
              If W_SPFND = 0 Then
                 If SW_NR = False Then
                    SW_WK = RE.Test(W_CELL)
                 Else
                    SW_WK = NRTEST(NRE, CStr(W_CELL))
                 End If
                 
                 If SW_WK = True Then
                    If W_ATEXT <> "" And _
                       W_FNDSTR2 <> "" And _
                       (SW_FRA = 0 Or _
                       SW_FRA = 1 Or _
                       SW_FRA = 2 Or _
                       SW_FRA = 3) Then
                       W_SPFND2 = SP_FND(W_CELL, 2)
                       If W_SPFND2 = 0 Then
                          If SW_NR2 = False Then
                             SW_WK = RE2.Test(W_CELL)
                          Else
                             SW_WK = NRTEST(NRE2, CStr(W_CELL))
                          End If
                          
                          If SW_WK = Not SW_ADDDENY Then
                             SW_TEST = True
                          End If
                       Else
                          If SW_ADDDENY = False Then
                             If W_SPFND2 = 2 Then
                                SW_TEST = True
                             End If
                          Else
                             If W_SPFND2 = 1 Then
                                SW_TEST = True
                             End If
                          End If
                       End If
                    Else
                       SW_TEST = True
                    End If
                 End If
              ElseIf W_SPFND = 2 Then
                 If W_ATEXT <> "" And _
                    W_FNDSTR2 <> "" And _
                    (SW_FRA = 0 Or _
                    SW_FRA = 1 Or _
                    SW_FRA = 2 Or _
                    SW_FRA = 3) Then
                    W_SPFND2 = SP_FND(W_CELL, 2)
                    If W_SPFND2 = 0 Then
                       If SW_NR2 = False Then
                          SW_WK = RE2.Test(W_CELL)
                       Else
                          SW_WK = NRTEST(NRE2, CStr(W_CELL))
                       End If
                       
                       If SW_WK = Not SW_ADDDENY Then
                          SW_TEST = True
                       End If
                    Else
                       If SW_ADDDENY = False Then
                          If W_SPFND2 = 2 Then
                             SW_TEST = True
                          End If
                       Else
                          If W_SPFND2 = 1 Then
                             SW_TEST = True
                          End If
                       End If
                    End If
                 Else
                    SW_TEST = True
                 End If
              End If
              
              If SW_TEST = True And _
                 (SW_DCB = True Or _
                  SW_DCI = True Or _
                  SW_DCU = True Or _
                  SW_DCK = True Or _
                  SW_DCC = True) And _
                 (SW_FRA = 0 Or _
                  SW_FRA = 3 Or _
                  SW_FRA = 4) Then
                  SW_TEST = DC_FIND(W_CELL)
              End If
              
              If SW_TEST = True Then
                 Call STORE_FIND(SW_FRA, SW_VALCHG, W_CELL)
                 Call FIND_ACTV
                 REFINDP = True
                 W_CNTFA = W_CNTFA + 1
                 If SW_FRA <> 0 Then
                    If W_ASK = True Then
                       Call REP_ASK(SW_FRA)
                       If W_RET = vbCancel Then
                          SW_1ST = 99
                          Exit Function
                       End If
                    Else
                       W_RET = vbYes
                    End If
                    If W_RET = vbYes Then
                       Call STORE_REP(SW_FRA, SW_VALCHG)
                       Call SP_REP(SW_VALCHG, SW_FRA, W_SPFND)
                       If SW_SPREP = False Then
                          SW_ERR_FRML = True
                          If Me.CheckBox3.Value = True Or _
                             SW_VALCHG = True Then
                             On Error Resume Next
                             Application.DisplayAlerts = False
                             If (SW_DCB = True Or _
                                 SW_DCI = True Or _
                                 SW_DCU = True Or _
                                 SW_DCK = True Or _
                                 SW_DCC = True) Then
                                Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                             Else
                                If SW_NR = False Then
                                   Cells(R, C).Value = RE.Replace(W_CELL, W_REPSTRCNV)
                                Else
                                   Cells(R, C).Value = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                End If
                             End If
                             Application.DisplayAlerts = True
                             If Err.Number = 0 Then
                                Call STORE_REP2
                                Call STORE_REP3
                             End If
                             On Error GoTo 0
                          Else
                             On Error Resume Next
                             Application.DisplayAlerts = False
                             If (SW_DCB = True Or _
                                 SW_DCI = True Or _
                                 SW_DCU = True Or _
                                 SW_DCK = True Or _
                                 SW_DCC = True) Then
                                Cells(R, C).Value = DC_REPLACE(W_CELL, W_REPSTRCNV)
                             Else
                                If Cells(R, C).HasArray = True Then
                                   If SW_NR = False Then
                                      Cells(R, C).FormulaArray = RE.Replace(W_CELL, W_REPSTRCNV)
                                   Else
                                      Cells(R, C).FormulaArray = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                   End If
                                Else
                                   If SW_NR = False Then
                                      Cells(R, C).Formula = RE.Replace(W_CELL, W_REPSTRCNV)
                                   Else
                                      Cells(R, C).Formula = NRREP(NRE, W_CELL, W_REPSTRCNV)
                                   End If
                                End If
                             End If
                             Application.DisplayAlerts = True
                             If Err.Number = 0 Then
                                Call STORE_REP2
                                Call STORE_REP3
                             End If
                             On Error GoTo 0
                          End If
                       Else
                          W_CNTRA2 = W_CNTRA2 + 1
                       End If
                    End If
                 End If
                 If SW_ERR_FRML = True Then
                    SW_ERR_FRML = False
                    REFINDP = False
                    GoTo LABEL_NEXT
                 End If
                 Exit Function
              End If
           End If

LABEL_NEXT:
           If SW_ACDRCL = True Then
              R = R - 1
           Else
              C = C - 1
           End If
        End If
     Loop

LABEL_NEXT2:
     If SW_ACDRCL = True Then
        C = C - 1
        R = ER
        If C >= SC And _
           C >= W_USC Then
           W_NC = 1
           
           W_V2 = ""
           On Error Resume Next
           W_V2 = Cells(R, C).Value2
           On Error GoTo 0
           If W_V2 <> "" Or _
              Cells(R, C).HasFormula = True Then
              W_NC = C
           Else
              If SW_RCEND = True Then
                 R = Cells(R, C).End(xlUp).Row
              Else
                 R = R - 1
              End If
              If R > SR Then
                 W_NC = C
              ElseIf R = SR Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 <> "" Or _
                    Cells(R, C).HasFormula = True Then
                    W_NC = C
                 ElseIf SW_RCEND = True Then
                    For R = ER To SR Step -1
                       If Cells(R, C).End(xlToLeft).Column > W_NC Then
                          W_NC = Application.Max(W_NC, Cells(R, C).End(xlToLeft).Column)
                          If W_NC = C - 1 Then
                             Exit For
                          End If
                       End If
                    Next R
                 Else
                    W_NC = C - 1
                 End If
              ElseIf SW_RCEND = True Then
                 For R = ER To SR Step -1
                    If Cells(R, C).End(xlToLeft).Column > W_NC Then
                       W_NC = Application.Max(W_NC, Cells(R, C).End(xlToLeft).Column)
                       If W_NC = C - 1 Then
                          Exit For
                       End If
                    End If
                 Next R
              Else
                 W_NC = C - 1
              End If
           End If
           
           C = W_NC
           R = ER
        End If
        If C < SC Or _
           C < W_USC Then
           Exit Function
        End If
     Else
        R = R - 1
        C = EC
        If R >= SR And _
           R >= W_USR Then
           W_NR = 1
           
           W_V2 = ""
           On Error Resume Next
           W_V2 = Cells(R, C).Value2
           On Error GoTo 0
           If W_V2 <> "" Or _
              Cells(R, C).HasFormula = True Then
              W_NR = R
           Else
              If SW_RCEND = True Then
                 C = Cells(R, C).End(xlToLeft).Column
              Else
                 C = C - 1
              End If
              If C > SC Then
                 W_NR = R
              ElseIf C = SC Then
                 W_V2 = ""
                 On Error Resume Next
                 W_V2 = Cells(R, C).Value2
                 On Error GoTo 0
                 If W_V2 <> "" Or _
                    Cells(R, C).HasFormula = True Then
                    W_NR = R
                 ElseIf SW_RCEND = True Then
                    For C = EC To SC Step -1
                       If Cells(R, C).End(xlUp).Row > W_NR Then
                          W_NR = Application.Max(W_NR, Cells(R, C).End(xlUp).Row)
                          If W_NR = R - 1 Then
                             Exit For
                          End If
                       End If
                    Next C
                 Else
                    W_NR = R - 1
                 End If
              ElseIf SW_RCEND = True Then
                 For C = EC To SC Step -1
                    If Cells(R, C).End(xlUp).Row > W_NR Then
                       W_NR = Application.Max(W_NR, Cells(R, C).End(xlUp).Row)
                       If W_NR = R - 1 Then
                          Exit For
                       End If
                    End If
                 Next C
              Else
                 W_NR = R - 1
              End If
           End If
           
           R = W_NR
           C = EC
        End If
        If R < SR Or _
           R < W_USR Then
           Exit Function
        End If
     End If
     If SW_1ST = 9 And _
        R = W_1STSR And _
        C = W_1STSC Then
        Exit Function
     End If
  Loop

End Function

Private Function RANGEARRAY(RNG As Range) As Variant

  Dim AR_CELL1 As Variant
  Dim AR_CELL2 As Variant
  Dim AR_CELL3 As Variant
  Dim W_MAX As Long
  Dim I As Long

  Dim SW_E1 As Boolean
  Dim SW_E2 As Boolean


  On Error Resume Next
  AR_CELL1 = RNG.Formula
  AR_CELL2 = RNG.Value
  
  If SW_ACDRCL = True Then
     W_MAX = RNG.Rows.count
     If IsArray(AR_CELL1) = False Or IsArray(AR_CELL2) = False Then
        SW_E1 = False
        SW_E2 = False
        
        If IsArray(AR_CELL1) = False Then
           SW_E1 = True
           ReDim AR_CELL1(1 To W_MAX, 1 To 1)
        End If
        If IsArray(AR_CELL2) = False Then
           SW_E2 = True
           ReDim AR_CELL2(1 To W_MAX, 1 To 1)
        End If
        
        For I = 1 To W_MAX
           If SW_E1 = True Then
              AR_CELL1(I, 1) = RNG.Cells(I, 1).Formula
           End If
           If SW_E2 = True Then
              AR_CELL2(I, 1) = RNG.Cells(I, 1).Value2
              AR_CELL2(I, 1) = RNG.Cells(I, 1).Value
           End If
        Next I
     End If
  
     If Me.CheckBox3.Value = False Then
        AR_CELL3 = AR_CELL1
        For I = 1 To W_MAX
           If AR_CELL3(I, 1) = "" Then
              AR_CELL3(I, 1) = AR_CELL2(I, 1)
           End If
        Next I
     Else
        AR_CELL3 = AR_CELL2
        For I = 1 To W_MAX
           If AR_CELL3(I, 1) = "" Then
              AR_CELL3(I, 1) = AR_CELL1(I, 1)
           End If
        Next I
     End If
  Else
     W_MAX = RNG.Columns.count
     If IsArray(AR_CELL1) = False Or IsArray(AR_CELL2) = False Then
        SW_E1 = False
        SW_E2 = False
        
        If IsArray(AR_CELL1) = False Then
           SW_E1 = True
           ReDim AR_CELL1(1 To 1, 1 To W_MAX)
        End If
        If IsArray(AR_CELL2) = False Then
           SW_E2 = True
           ReDim AR_CELL2(1 To 1, 1 To W_MAX)
        End If
        
        For I = 1 To W_MAX
           If SW_E1 = True Then
              AR_CELL1(1, I) = RNG.Cells(1, I).Formula
           End If
           If SW_E2 = True Then
              AR_CELL2(1, I) = RNG.Cells(1, I).Value2
              AR_CELL2(1, I) = RNG.Cells(1, I).Value
           End If
        Next I
     End If
     If Me.CheckBox3.Value = False Then
        AR_CELL3 = AR_CELL1
        For I = 1 To W_MAX
           If AR_CELL3(1, I) = "" Then
              AR_CELL3(1, I) = AR_CELL2(1, I)
           End If
        Next I
     Else
        AR_CELL3 = AR_CELL2
        For I = 1 To W_MAX
           If AR_CELL3(1, I) = "" Then
              AR_CELL3(1, I) = AR_CELL1(1, I)
           End If
        Next I
     End If
  End If
  On Error GoTo 0
    
  RANGEARRAY = AR_CELL3

End Function

Private Function RANGEARRAY2(RNG As Range) As Variant

  Dim AR_CELL2 As Variant
  Dim W_MAX As Long
  Dim I As Long


  On Error Resume Next
  AR_CELL2 = RNG.Value
  
  If IsArray(AR_CELL2) = False Then
     W_MAX = RNG.Rows.count
     ReDim AR_CELL2(1 To W_MAX, 1 To 1)
     For I = 1 To W_MAX
        If IsArray(AR_CELL2) = False Then
           AR_CELL2(I, 1) = RNG.Cells(I, 1).Value2
           AR_CELL2(I, 1) = RNG.Cells(I, 1).Value
        End If
     Next I
  End If
  
  On Error GoTo 0
    
  RANGEARRAY2 = AR_CELL2

End Function

Private Function RANGEARRAY3(RNG As Range) As Variant

  Dim AR_CELL1 As Variant
  Dim AR_CELL2 As Variant
  Dim AR_CELL3 As Variant
  Dim W_MAX As Long
  Dim I As Long


  On Error Resume Next
  AR_CELL1 = RNG.Formula
  AR_CELL2 = RNG.Value
  
  W_MAX = RNG.Columns.count
  If IsArray(AR_CELL1) = False Or IsArray(AR_CELL2) = False Then
     ReDim AR_CELL1(1 To 1, 1 To W_MAX)
     ReDim AR_CELL2(1 To 1, 1 To W_MAX)
     For I = 1 To W_MAX
        If IsArray(AR_CELL1) = False Then
           AR_CELL1(1, I) = RNG.Cells(1, I).Formula
        End If
        If IsArray(AR_CELL2) = False Then
           AR_CELL2(1, I) = RNG.Cells(1, I).Value2
           AR_CELL2(1, I) = RNG.Cells(1, I).Value
        End If
     Next I
  End If
  
  ReDim AR_CELL3(1 To 2, 1 To W_MAX)
  For I = 1 To W_MAX
     AR_CELL3(1, I) = AR_CELL2(1, I)
     AR_CELL3(2, I) = AR_CELL1(1, I)
  Next I
  On Error GoTo 0
    
  RANGEARRAY3 = AR_CELL3

End Function

Private Function LASTC(ByVal W_CCNT As Long) As Long

  
  LASTC = Cells(R, W_CCNT).End(xlToLeft).Column
  
  On Error Resume Next
  If Cells(R, W_CCNT).Value2 = "" And _
     Cells(R, W_CCNT).HasFormula = False Then
  Else
     LASTC = W_CCNT
  End If
  On Error GoTo 0

End Function

Private Function LASTR(ByVal W_RCNT As Long) As Long

  LASTR = Cells(W_RCNT, C).End(xlUp).Row
  
  On Error Resume Next
  If Cells(W_RCNT, C).Value2 = "" And _
     Cells(W_RCNT, C).HasFormula = False Then
  Else
     LASTR = W_RCNT
  End If
  On Error GoTo 0
  
End Function

Private Sub FIND_ACTV()

  Dim I As Long
  Dim J As Long
  Dim AR_SELS2() As Long
  
  If Me.CheckBox7.Value = True Then
     Worksheets(AR_SELS(IDX)).Select
  Else
     I = IDX
     ReDim Preserve AR_SELS2(UBound(AR_SELS))
     J = 0
     Do
        If J > 0 And _
           I = IDX Then
           Exit Do
        End If
        J = J + 1
        AR_SELS2(J) = AR_SELS(I)
        I = I + 1
        If I > UBound(AR_SELS) Then
           I = 1
        End If
     Loop
     
     If IsError(Worksheets(AR_SELS(IDX)).ProtectContents) = True Then
     Else
        Worksheets(AR_SELS2).Select
        Worksheets(AR_SELS(IDX)).Activate
     End If
  End If
  
  Cells(R, C).Activate
  Erase AR_SELS2

End Sub

Private Function DC_FIND(ByVal W_CELL As String) As Boolean

  Dim MATCHES As Object
  Dim J As Long
  Dim SW_HIT As Boolean
  Dim W_CI As Long
  
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LEN As Long


  DC_FIND = False
  If SW_DCC = True Then
     W_CI = CLng(W_DCCLR)
  End If
  
  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_CELL)
     MAXJ = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
     MAXJ = UBound(AR_STR)
  End If
  
  With Worksheets(AR_SELS(IDX)).Cells(R, C)
     On Error Resume Next
     If .Value = .Formula Or _
        CStr(.Value) = .Formula Then
        On Error GoTo 0
  
        With .Font
           SW_HIT = True
           If SW_DCB = True And _
              IsNull(.Bold) = False And _
              SW_HIT = True Then
              SW_HIT = .Bold
           End If
           If SW_DCI = True And _
              IsNull(.Italic) = False And _
              SW_HIT = True Then
              SW_HIT = .Italic
           End If

           If SW_DCU = True And _
              IsNull(.Underline) = False And _
              SW_HIT = True Then
              If .Underline = -4142 Then
                 SW_HIT = False
              End If
           End If
           If SW_DCK = True And _
              IsNull(.Strikethrough) = False And _
              SW_HIT = True Then
              SW_HIT = .Strikethrough
           End If
           If SW_DCC = True And _
              IsNull(.Color) = False And _
              SW_HIT = True Then
              If .Color = W_CI Then
              Else
                 SW_HIT = False
              End If
           End If
        End With
        
        If SW_HIT = True Then
           For J = 0 To MAXJ
              If SW_NR = False Then
                 W_FI = MATCHES.Item(J).FirstIndex
                 W_LEN = MATCHES.Item(J).Length
              Else
                 AR_WK = Split(AR_STR(J), vbTab)
                 W_FI = CLng(AR_WK(0))
                 W_LEN = CLng(AR_WK(1))
              End If
              
              With .Characters(W_FI + 1, W_LEN).Font
                 SW_HIT = True
                 If SW_DCB = True And _
                    SW_HIT = True Then
                    If IsNull(.Bold) = False Then
                       SW_HIT = .Bold
                    Else
                       SW_HIT = False
                    End If
                 End If
                 If SW_DCI = True And _
                    SW_HIT = True Then
                    If IsNull(.Italic) = False Then
                       SW_HIT = .Italic
                    Else
                       SW_HIT = False
                    End If
                 End If
                 If SW_DCU = True And _
                    SW_HIT = True Then
                    If W_LEN > 0 Then
                       If IsNull(.Underline) = True Then
                          SW_HIT = False
                       ElseIf .Underline = -4142 Then
                          SW_HIT = False
                       End If
                    Else
                       SW_HIT = False
                    End If
                 End If
                 If SW_DCK = True And _
                    SW_HIT = True Then
                    If IsNull(.Strikethrough) = False Then
                       SW_HIT = .Strikethrough
                    Else
                       SW_HIT = False
                    End If
                 End If
                 If SW_DCC = True And _
                    SW_HIT = True Then
                    If W_LEN > 0 Then
                       If .Color = W_CI Then
                       Else
                          SW_HIT = False
                       End If
                    Else
                       SW_HIT = False
                    End If
                 End If
                 If SW_HIT = True Then
                    DC_FIND = True
                    Exit For
                 End If
              End With
           Next J
        End If
     End If
     On Error GoTo 0
  End With

  Set MATCHES = Nothing

End Function

Private Function DC_REPLACE(ByVal W_CELL As String, ByVal W_REPSTRCNV As String) As String
  
  Dim MATCHES As Object
  Dim J As Long
  Dim W_CI As Long
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim SW_HIT As Boolean
  Dim W_LENB As Long
  Dim W_LENA As Long
  Dim W_LENS As Long

  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long

  
  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_CELL)
     MAXJ = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
     MAXJ = UBound(AR_STR)
  End If
  
  If SW_DCC = True Then
     W_CI = CLng(W_DCCLR)
  End If

  With Worksheets(AR_SELS(IDX)).Cells(R, C)
     On Error Resume Next
     If .Value = .Formula Or _
        CStr(.Value) = .Formula Then
        On Error GoTo 0

        W_LENS = 0

        For J = 0 To MAXJ
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
           Else
              AR_WK = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK(0))
              W_LN = CLng(AR_WK(1))
           End If
           
           W_STR1 = Left$(W_CELL, W_FI + W_LENS)
           W_STR2 = Mid$(W_CELL, W_FI + 1 + W_LENS, W_LN)
           If Len(W_CELL) > W_FI + W_LENS + W_LN Then
              W_STR3 = Right$(W_CELL, Len(W_CELL) - (W_FI + W_LENS + W_LN))
           Else
              W_STR3 = ""
           End If

           With .Characters(W_FI + 1, W_LN).Font
              SW_HIT = True

              If SW_DCB = True And _
                 SW_HIT = True Then
                 If IsNull(.Bold) = False Then
                    SW_HIT = .Bold
                 Else
                    SW_HIT = False
                 End If
              End If

              If SW_DCI = True And _
                 SW_HIT = True Then
                 If IsNull(.Italic) = False Then
                    SW_HIT = .Italic
                 Else
                    SW_HIT = False
                 End If
              End If

              If SW_DCU = True And _
                 SW_HIT = True Then
                 If W_LN > 0 Then
                    If IsNull(.Underline) = True Then
                       SW_HIT = False
                    ElseIf .Underline = -4142 Then
                       SW_HIT = False
                    End If
                 Else
                    SW_HIT = False
                 End If
              End If

              If SW_DCK = True And _
                 SW_HIT = True Then
                 If IsNull(.Strikethrough) = False Then
                    SW_HIT = .Strikethrough
                 Else
                    SW_HIT = False
                 End If
              End If

              If SW_DCC = True And _
                 SW_HIT = True Then
                 If .Color = W_CI Then
                 Else
                    SW_HIT = False
                 End If
              End If
           End With

           If SW_HIT = True Then
              W_LENB = Len(W_STR2)
              If SW_NR = False Then
                 W_STR2 = RE.Replace(W_STR2, W_REPSTRCNV)
              Else
                 W_STR2 = NRREP(NRE, W_STR2, W_REPSTRCNV)
              End If
              
              W_LENA = Len(W_STR2)
              W_CELL = W_STR1 & W_STR2 & W_STR3
              W_LENS = W_LENA - W_LENB
           End If
        Next J
     End If
     On Error GoTo 0
  End With

  Set MATCHES = Nothing
  DC_REPLACE = W_CELL

End Function

Private Function AC_FIND(ByVal R As Long, ByVal C As Long) As Boolean

  Dim RNG As Range


  AC_FIND = True

  If SW_AC1 = True Then
     If R > 1 And C > 1 Then
        Set RNG = ActiveSheet.Cells(R - 1, C - 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC1T), SW_AC1D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC2 = True Then
     If R > 1 Then
        Set RNG = ActiveSheet.Cells(R - 1, C)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC2T), SW_AC2D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC3 = True Then
     If R > 1 And C < Columns.count Then
        Set RNG = ActiveSheet.Cells(R - 1, C + 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC3T), SW_AC3D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC4 = True Then
     If C > 1 Then
        Set RNG = ActiveSheet.Cells(R, C - 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC4T), SW_AC4D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC6 = True Then
     If C < Columns.count Then
        Set RNG = ActiveSheet.Cells(R, C + 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC6T), SW_AC6D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If
  
  If SW_AC7 = True Then
     If R < Rows.count And C > 1 Then
        Set RNG = ActiveSheet.Cells(R + 1, C - 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC7T), SW_AC7D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC8 = True Then
     If R < Rows.count Then
        Set RNG = ActiveSheet.Cells(R + 1, C)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC8T), SW_AC8D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

  If SW_AC9 = True Then
     If R < Rows.count And C < Columns.count Then
        Set RNG = ActiveSheet.Cells(R + 1, C + 1)
        AC_FIND = AC_FIND_JDG(RNG, FNDSTRCNV3(W_AC9T), SW_AC9D)
        Set RNG = Nothing
        If AC_FIND = False Then
           Exit Function
        End If
     Else
        AC_FIND = False
        Exit Function
     End If
  End If

End Function

Private Function AC_FIND_JDG(RNG As Range, ByVal W_PAT As String, ByVal SW_DENY As Boolean) As Boolean

  Dim W_CELL As String
  Dim RE1 As Object
  Dim SW_NET As Boolean
        
  
  AC_FIND_JDG = True
        
  If IsOF(RNG) = True Then
  ElseIf IsError(RNG.Value) = True Then
     If Me.CheckBox3.Value = True Or _
        RNG.FormulaHidden = True Then
     Else
        On Error Resume Next
        W_CELL = RNG.Formula
        On Error GoTo 0
     End If
  Else
     If Me.CheckBox3.Value = True Or _
        RNG.FormulaHidden = True Then
        W_CELL = RNG.Value
     Else
        If VarType(RNG.Value) = vbDate Then
           W_CELL = RNG.Value
        Else
           W_CELL = RNG.Value
           On Error Resume Next
           W_CELL = RNG.Formula
           On Error GoTo 0
        End If
     End If
  End If
  
  If Me.CheckBox32.Value = True Then
     W_CELL = Replace(W_CELL, vbLf, "")
  End If
        
  If W_PAT = "" Then
     If SW_DENY = False Then
        If W_CELL = "" Then
        Else
           AC_FIND_JDG = False
        End If
     Else
        If W_CELL = "" Then
           AC_FIND_JDG = False
        End If
     End If
  Else
     If SW_NRE = False Then
        Set RE1 = CreateObject("VBScript.RegExp")
        With RE1
           .Pattern = W_PAT
           .IgnoreCase = Not Me.CheckBox1.Value
           .Global = True
        End With
        On Error GoTo L_ERR1
        RE1.Test (" ")
        On Error GoTo 0
     Else
        SW_NET = True
     End If
     If SW_NET = False Then
        If RE1.Test(W_CELL) = SW_DENY Then
           AC_FIND_JDG = False
        End If
        Set RE1 = Nothing
     Else
        Set NRE = NRCHK(W_PAT, Not Me.CheckBox1.Value)
        If NRE Is Nothing Then
           GoTo L_ERR2
        End If
        If NRTEST(NRE, W_CELL) = SW_DENY Then
           AC_FIND_JDG = False
        End If
        Set NRE = Nothing
     End If
  End If

  Exit Function

L_ERR1:

  Set RE1 = Nothing
  SW_NET = True
  Resume Next

L_ERR2:
  
  AC_FIND_JDG = False
  Exit Function

End Function

Private Sub STORE_FIND(ByVal SW_FRA As Long, ByVal SW_VALCHG As Boolean, ByVal W_CELL As String)

  Dim I As Long
  Dim J As Long
  Dim K As Long
  Dim AR_SELS2() As Long
  Dim W_FRBPATH As String
  Dim ADDR As String
  
  Dim MATCHES As Object
  Dim W_ST As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_CHCI As Long
  Dim W_FCIX As Long
  
  Dim W_STR As String
  Dim SW_1ST As Boolean
  
  Dim AR_CCFCI() As Long
  
  Dim W_STR2 As String
  Dim SW_FIND As Boolean
  
  Dim FSO As Object
  Dim W_TEMP As String
  Dim W_PATH As String
  
  Dim AR_WK() As Variant
  Dim W_BOOL As Variant
  Dim W_BLSTR As String
  
  Dim XL1 As Object
  Dim W_OBJ As Object
  Dim WB As Workbook
  
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK2 As Variant
  
  Dim W_SCT As String
  Dim W_L As Long
  Dim W_R As Long
  Dim W_SR As Long
  Dim W_ER As Long
  Dim W_CLV As String
  Dim W_COM As String
  Dim AR_COM As Variant
  Dim W_STC As Long
  Dim W_LNC As Long
  Dim W_RBK As Long
  
  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String

  Dim W_CELLBK As String
  Dim W_TEXT As String
  Dim L As Long
  Dim W_CNT As Long

  
  If W_1STFS = 0 Then
     W_1STFIDX = IDX
     W_1STFS = Worksheets(AR_SELS(IDX)).Index
     W_1STFR = R
     W_1STFC = C
     IDXBK = 0
     IDXBK2 = 0
  End If
  
  If SW_FRA = 3 Then
     If AFN Mod 10000 = 0 Then
        ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFC((Int(AFN / 10000) + 1) * 10000)
        ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
     End If
     
     AFN = AFN + 1
     
     If IDX <> IDXBK Then
        AFSBK = Worksheets(AR_SELS(IDX)).Index
        IDXBK = IDX
     End If
     AR_AFS(AFN) = AFSBK
     
     AR_AFR(AFN) = R
     AR_AFC(AFN) = C
     If Me.CheckBox32.Value = True Then
        AR_AFV(AFN) = Worksheets(AR_SELS(IDX)).Cells(R, C).Value
     Else
        AR_AFV(AFN) = W_CELL
     End If
  End If

  If SW_FRA = 6 Then
     If Me.OptionButton14.Value = True Then
        If W_UNION Is Nothing Then
           Set W_UNION = Cells(R, C)
        Else
           Set W_UNION = Union(W_UNION, Cells(R, C))
        End If
     ElseIf Me.OptionButton15.Value = True Then
        If W_UNION Is Nothing Then
           W_CNTSA = 1
           Set W_UNION = Rows(R)
        Else
           If Intersect(W_UNION, Rows(R)) Is Nothing Then
              W_CNTSA = W_CNTSA + 1
           End If
           Set W_UNION = Union(W_UNION, Rows(R))
        End If
     Else
        If W_UNION Is Nothing Then
           W_CNTSA = 1
           Set W_UNION = Columns(C)
        Else
           If Intersect(W_UNION, Columns(C)) Is Nothing Then
              W_CNTSA = W_CNTSA + 1
           End If
           Set W_UNION = Union(W_UNION, Columns(C))
        End If
     End If
  End If
  
  If SW_FRA = 7 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        If Me.OptionButton11 = True Or _
           Me.OptionButton12 = True Then
           If W_O <> 0 Then
              If R > W_O Then
                 If R > W_O + 1 Then
                    Range(Rows(W_O + 1), Rows(R - 1)).Rows.Group
                 End If
              ElseIf R < W_O Then
                 If W_O < ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row Then
                    Range(Rows(W_O + 1), Rows(ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.count).Row)).Rows.Group
                 End If
                 If R > 2 Then
                    Range(Rows(1), Rows(R - 1)).Rows.Group
                 End If
              End If
           End If
           If W_1STO = 0 Then
              W_1STO = R
           End If
           If W_O <> R Then
              W_O = R
           End If
        End If
     Else
        If Me.OptionButton13 = True Then
           If W_O <> 0 Then
              If C > W_O Then
                 If C > W_O + 1 Then
                    Range(Columns(W_O + 1), Columns(C - 1)).Columns.Group
                 End If
              ElseIf C < W_O Then
                 If W_O < ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column Then
                    Range(Columns(W_O + 1), Columns(ActiveSheet.UsedRange.Columns(ActiveSheet.UsedRange.Columns.count).Column)).Columns.Group
                 End If
                 If C > 2 Then
                    Range(Columns(1), Columns(C - 1)).Columns.Group
                 End If
              End If
           End If
           If W_1STO = 0 Then
              W_1STO = C
           End If
           If W_O <> C Then
              W_O = C
           End If
        End If
     End If
  End If
  
  If SW_FRA = 8 Then
     If Me.OptionButton14.Value = True Or _
        Me.OptionButton15.Value = True Then
        Rows(R).Hidden = False
     Else
        Columns(C).Hidden = False
     End If
  End If
  
  If SW_FRA = 9 Then
     With Worksheets(AR_SELS(IDX)).Cells(R, C).Interior
        .ColorIndex = 6
        .Pattern = xlGrid
        .PatternColorIndex = 44
     End With
  End If
  
  If SW_FRA = 4 Then
     If Val(Application.Version) >= 15 Then
        If SW_GHO = False Then
           Application.ScreenUpdating = False
        End If
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
'        Set XL1 = GetObject(, "Excel.Application")
        Set XL1 = XL2ND
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
           FR = .Cells(.Rows.count, 2).End(xlUp).Row
        End With
     End If
     
     FR = FR + 1
     If W_ZPATH = "" Then
        If Me.CheckBox62.Value = False Then
           W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
           Set WB = Workbooks(Workbooks.count)
        Else
           If Workbooks(W_GBNAME).path = "" Then
              W_FRBPATH = Workbooks(W_GBNAME).Name
           Else
              W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
           End If
           Set WB = Workbooks(W_GBNAME)
        End If
     Else
        W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
        Set FSO = CreateObject("Scripting.FileSystemObject")
        W_TEMP = FSO.GetSpecialFolder(2)
        Set FSO = Nothing
        W_PATH = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(W_TEMP) - 1)
        W_PATH = Right$(W_PATH, Len(W_PATH) - InStr(W_PATH, "\"))
        W_FRBPATH = W_ZPATH & "\" & W_PATH
        Set WB = Workbooks(Workbooks.count)
     End If
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
     Else
        Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
     End If
     
     With W_OBJ
         If SW_PR = False Then
            .Cells(FR, 1).Value = FR - 5
         Else
            .Cells(FR, 1).Value = FR - 6
         End If
         
         If Me.CheckBox62.Value = False Then
            .Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox18.Value) - 1)
         Else
            .Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
         End If
         .Cells(FR, 3).Value = WB.Worksheets(AR_SELS(IDX)).Name
         .Cells(FR, 4).Value = Application.Substitute(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
         
         If Me.CheckBox3.Value = True Or _
            SW_VALCHG = True Or _
            Len(WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value) > W_MAXFML Then
            .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value
         Else
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).HasFormula = True Then
               .Cells(FR, 5).NumberFormatLocal = "@"
            End If
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).FormulaHidden = False Then
               .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Formula
            End If
         End If

         If Me.CheckBox75.Value = True Then
            On Error Resume Next
            If IsOF(WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value))) = True Then
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value2
            ElseIf IsError(Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value) Then
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).text
            Else
               .Cells(FR, 6).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R + CLng(Me.TextBox25.Value), C + CLng(Me.TextBox26.Value)).Value
            End If
            On Error GoTo 0
         End If
              
         If Me.CheckBox202.Value = True Then
            Select Case R
            Case 1
               W_L = 1
            Case 2
               W_L = 2
            Case Rows.count - 1
               W_L = 4
            Case Rows.count
               W_L = 5
            Case Else
               W_L = 3
            End Select
            W_SCT = W_L
            
            W_SR = Application.Max(R - 2, 1)
            W_ER = Application.Min(R + 2, Rows.count)
            
            For W_R = W_SR To W_ER
               W_CLV = ""
               On Error Resume Next
               If IsOF(WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C)) = True Then
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value2
               ElseIf IsError(WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value) Then
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).text
               Else
                  W_CLV = WB.Worksheets(AR_SELS(IDX)).Cells(W_R, C).Value
               End If
               On Error GoTo 0
               W_SCT = W_SCT & Chr$(1) & W_CLV
            Next W_R
         
            If SW_HSGREP = True And _
               W_PNO > 0 Then
            Else
               W_COM = ""
               AR_COM = Split(W_SCT, Chr$(1))
               For W_R = 1 To CLng(AR_COM(0)) - 1
                  W_COM = W_COM & AR_COM(W_R) & vbCrLf
               Next W_R
               W_RBK = W_R
               W_STC = Len(W_COM) + 1
               W_LNC = Len(AR_COM(W_RBK))
               For W_R = W_RBK To UBound(AR_COM)
                  W_COM = W_COM & AR_COM(W_R) & vbCrLf
               Next W_R
               W_COM = Left$(W_COM, Len(W_COM) - 1)
               With .Cells(FR, 5)
                  .AddComment
                  .Comment.text text:=W_COM
                  .Comment.Shape.TextFrame.Characters(W_STC, W_LNC).Font.Bold = True
                  .Comment.Shape.TextFrame.AutoSize = True
              End With
              W_SCT = ""
            End If
         Else
            W_SCT = ""
         End If
              
         If W_ZPATH = "" Then
            If InStr(W_FRBPATH, "\") > 0 Then
               If SW_HSGREP = True And _
                  W_PNO > 0 Then
                  If Me.CheckBox202.Value = True Then
                     .Cells(FR, 7).Value = W_SCT
                  End If
               Else
                  ADDR = "'" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
                  On Error Resume Next
                  W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), W_FRBPATH, ADDR, W_SCT
                  On Error GoTo 0
               End If
            Else
               ADDR = "'[" & W_FRBPATH & "]" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
               On Error Resume Next
               W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), "", ADDR, W_SCT
               On Error GoTo 0
            End If
         End If
         If SW_HSGREP = True And _
            W_PNO > 0 Then
         ElseIf Me.CheckBox75.Value = True Then
            .Range(.Cells(FR, 1), .Cells(FR, 6)).Borders.LineStyle = True
         Else
            .Range(.Cells(FR, 1), .Cells(FR, 5)).Borders.LineStyle = True
         End If
         If SW_PR = True Then
            .Cells(FR, 5).Interior.ColorIndex = 3
         End If
     End With
     
     Set W_OBJ = Nothing
     Set XL1 = Nothing
     Set WB = Nothing

     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf SW_GHO = False Then
        Workbooks(W_FRB).Activate
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013S2
        End If
        Application.ScreenUpdating = True
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
        If Val(Application.Version) >= 15 Then
        Else
           Application.ScreenUpdating = False
        End If
        If Me.CheckBox62.Value = False Then
           Workbooks(Workbooks.count).Activate
        Else
           Workbooks(W_GBNAME).Activate
        End If
     End If
  End If

  If SW_FRA = 5 Then
     If Val(Application.Version) >= 15 Then
        If SW_GHO = False Then
           Application.ScreenUpdating = False
        End If
     End If
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set XL1 = XL2ND
        W_FRB = W_FRBS
        With XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
           FR = .Cells(.Rows.count, 2).End(xlUp).Row
        End With
     End If
     
     FR = FR + 1
     If Me.CheckBox63.Value = False Then
        W_FRBPATH = Workbooks(Workbooks.count).path & "\" & Workbooks(Workbooks.count).Name
        Set WB = Workbooks(Workbooks.count)
     Else
        If Workbooks(W_GBNAME).path = "" Then
           W_FRBPATH = Workbooks(W_GBNAME).Name
        Else
           W_FRBPATH = Workbooks(W_GBNAME).path & "\" & Workbooks(W_GBNAME).Name
        End If
        Set WB = Workbooks(W_GBNAME)
     End If
     If SW_HSGREP = True And _
        W_PNO > 0 Then
        Set W_OBJ = XL1.Workbooks(W_FRB).Worksheets(W_PNO + 1)
     Else
        Set W_OBJ = Workbooks(W_FRB).Worksheets(1)
     End If
     
     With W_OBJ
         .Cells(FR, 1).Value = FR - 6
         If Me.CheckBox63.Value = False Then
            .Cells(FR, 2).Value = Right$(W_FRBPATH, Len(W_FRBPATH) - Len(Me.ComboBox19.Value) - 1)
         Else
            .Cells(FR, 2).Value = Workbooks(W_GBNAME).Name
         End If
         .Cells(FR, 3).Value = WB.Worksheets(AR_SELS(IDX)).Name
         .Cells(FR, 4).Value = Application.Substitute(Application.ConvertFormula("R" & R & "C" & C, xlR1C1, xlA1), "$", "")
         
         If Me.CheckBox3.Value = True Or _
            SW_VALCHG = True Or _
            Len(WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value) > W_MAXFML Then
            .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Value
         Else
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).HasFormula = True Then
               .Cells(FR, 5).NumberFormatLocal = "@"
            End If
            If WB.Worksheets(AR_SELS(IDX)).Cells(R, C).FormulaHidden = False Then
               .Cells(FR, 5).Value = WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Formula
            End If
         End If
              
         If InStr(W_FRBPATH, "\") > 0 Then
            If SW_HSGREP = True And _
               W_PNO > 0 Then
            Else
               ADDR = "'" & WB.Worksheets(AR_SELS(IDX)).Name & "'!" & WB.Worksheets(AR_SELS(IDX)).Cells(R, C).Address
               On Error Resume Next
               W_OBJ.Parent.ActiveSheet.Hyperlinks.Add .Cells(FR, 5), W_FRBPATH, ADDR
               On Error GoTo 0
            End If
         End If
         If SW_HSGREP = True And _
            W_PNO > 0 Then
         Else
            .Range(.Cells(FR, 1), .Cells(FR, 5)).Borders.LineStyle = True
         End If
     End With
     
     Set W_OBJ = Nothing
     Set XL1 = Nothing
     Set WB = Nothing
     
     If SW_HSGREP = True And _
        W_PNO > 0 Then
     ElseIf SW_GHO = False Then
        Workbooks(W_FRB).Activate
        If Application.Visible = False Then
        ElseIf Val(Application.Version) >= 15 Then
           Call GREP2013S2
        End If
        Application.ScreenUpdating = True
        Workbooks(W_FRB).Worksheets(1).Cells(FR, 1).Activate
        If Val(Application.Version) >= 15 Then
        Else
           Application.ScreenUpdating = False
        End If
        If Me.CheckBox63.Value = False Then
           Workbooks(Workbooks.count).Activate
        Else
           Workbooks(W_GBNAME).Activate
        End If
     End If
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Then
     If SW_IS = False Then
        If (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) And _
           IsOF(Worksheets(AR_SELS(IDX)).Cells(R, C)) = False Then
           If IsError(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = False Then
              If W_CNTFA = 0 Then
                 If ActiveWorkbook.path <> "" And _
                    ActiveWorkbook.HasPassword = False And _
                    ActiveWorkbook.ReadOnly = False And _
                    ActiveWorkbook.FileFormat <> xlCSV And _
                    ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
                    DT = Date
                    TM = time
                    On Error GoTo L_BK_END
                    If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
                       On Error Resume Next
                       W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                                        ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
                       On Error GoTo 0
                       W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
                       If RPDIC.Exists(W_CNV) = False Then
                          RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
                       End If
                    End If
                    ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
                    W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
                    If RPDIC.Exists(W_CNV) = False Then
                       RPDIC.Add W_CNV, "CF" & vbTab & Me.ComboBox1.Value & vbTab & ""
                    End If
                 End If
L_BK_END:
                 On Error GoTo 0
                 
                 If OWB Is Nothing Then
                 Else
                    SW_UNDO = True
                    If W_FNDBOOK <> "" Then
                       Set OWB = Nothing
                       If W_REPBOOK = W_FNDBOOK Then
                          W_REPBOOK = ""
                       End If
                       W_FNDBOOK = ""
                    End If
                    If W_REPBOOK <> "" Then
                       Set OWB = Nothing
                       W_REPBOOK = ""
                    End If
                    SW_UNDO = False
                 End If
                 W_FNDBOOK = ActiveWorkbook.Name
                 Erase AR_REP
              End If
              If W_SPFND = 0 Then
                 On Error Resume Next
                 If Worksheets(AR_SELS(IDX)).Cells(R, C).Value = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Or _
                    CStr(Worksheets(AR_SELS(IDX)).Cells(R, C).Value) = Worksheets(AR_SELS(IDX)).Cells(R, C).Formula Then
                    On Error GoTo 0
                    
                    If (SW_FRA = 0 Or _
                        SW_FRA = 3) Then
                       If W_ERRM = 0 Then
                          On Error GoTo LABEL_ERR_M
                          ReDim Preserve AR_REP(9, W_CNTFA + 1)
                          On Error GoTo 0
                       End If
                       
                       If IDX <> IDXBK2 Then
                          AFSBK2 = Worksheets(AR_SELS(IDX)).Index
                          ASNMBK = Worksheets(AR_SELS(IDX)).Name
                          IDXBK2 = IDX
                       End If
                       
                       If W_ERRM = 0 Then
                          AR_REP(1, W_CNTFA + 1) = AFSBK2
                          AR_REP(2, W_CNTFA + 1) = ASNMBK
                          AR_REP(3, W_CNTFA + 1) = R
                          AR_REP(4, W_CNTFA + 1) = C
                       
                          With Worksheets(AR_SELS(IDX)).Cells(R, C)
                             '|fffd|F|fffd||6d1||fffd|
                             ReDim AR_CCFCI(Len(.Value))
                             If IsNull(.Font.ColorIndex) = True Then
                                For K = 1 To UBound(AR_CCFCI)
                                   AR_CCFCI(K) = .Characters(K, 1).Font.Color
                                Next K
                                W_FCIX = -1
                                W_POS = 1
                                AR_REP(5, W_CNTFA + 1) = ""
                                For K = 1 To UBound(AR_CCFCI)
                                   If AR_CCFCI(K) <> W_FCIX Then
                                      If W_FCIX <> -1 Then
                                         W_LEN = K - W_POS
                                         If AR_REP(5, W_CNTFA + 1) = "" Then
                                            AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                                         Else
                                            AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                                         End If
                                      End If
                                      W_POS = K
                                      W_FCIX = AR_CCFCI(K)
                                   End If
                                   If K = UBound(AR_CCFCI) Then
                                      W_LEN = K - W_POS + 1
                                      If AR_REP(5, W_CNTFA + 1) = "" Then
                                         AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                                      Else
                                         AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                                      End If
                                   End If
                                Next K
                                Erase AR_CCFCI
                             Else
                                AR_REP(5, W_CNTFA + 1) = 1 & ":" & Len(.Value) & ":" & .Font.Color
                             End If
                          
                             '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                             ReDim AR_WK(Len(.Value))
                             If IsNull(.Font.Bold) = True Then
                                For I = 1 To Len(.Value)
                                   AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Bold
                                Next I
                 
                                W_BOOL = AR_WK(1)
                                W_POS = 1
                                W_BLSTR = ""
                                For I = 1 To Len(.Value)
                                   If AR_WK(I) <> W_BOOL Then
                                      W_LEN = I - W_POS
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                      W_POS = I
                                      W_BOOL = AR_WK(I)
                                   End If
                                   If I = Len(.Value) Then
                                      W_LEN = I - W_POS + 1
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                   End If
                                Next I
                                Erase AR_WK
                             Else
                                W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Bold
                             End If
                             AR_REP(6, W_CNTFA + 1) = W_BLSTR
           
                             '|fffd||391||315||6d1||fffd|
                             ReDim AR_WK(Len(.Value))
                             If IsNull(.Font.Italic) = True Then
                                For I = 1 To Len(.Value)
                                   AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Italic
                                Next I
      
                                W_BOOL = AR_WK(1)
                                W_POS = 1
                                W_BLSTR = ""
                                For I = 1 To Len(.Value)
                                   If AR_WK(I) <> W_BOOL Then
                                      W_LEN = I - W_POS
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                      W_POS = I
                                      W_BOOL = AR_WK(I)
                                   End If
                                   If I = Len(.Value) Then
                                      W_LEN = I - W_POS + 1
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                   End If
                                Next I
                                Erase AR_WK
                             Else
                                W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Italic
                             End If
                             AR_REP(7, W_CNTFA + 1) = W_BLSTR
      
                             '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                             ReDim AR_WK(Len(.Value))
                             If IsNull(.Font.Underline) = True Then
                                For I = 1 To Len(.Value)
                                   AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Underline
                                Next I
      
                                W_BOOL = AR_WK(1)
                                W_POS = 1
                                W_BLSTR = ""
                                For I = 1 To Len(.Value)
                                   If AR_WK(I) <> W_BOOL Then
                                      W_LEN = I - W_POS
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                      W_POS = I
                                      W_BOOL = AR_WK(I)
                                   End If
                                   If I = Len(.Value) Then
                                      W_LEN = I - W_POS + 1
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                   End If
                                Next I
                                Erase AR_WK
                             Else
                                W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Underline
                             End If
                             AR_REP(8, W_CNTFA + 1) = W_BLSTR
      
                             '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                             ReDim AR_WK(Len(.Value))
                             If IsNull(.Font.Strikethrough) = True Then
                                For I = 1 To Len(.Value)
                                   AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Strikethrough
                                Next I
      
                                W_BOOL = AR_WK(1)
                                W_POS = 1
                                W_BLSTR = ""
                                For I = 1 To Len(.Value)
                                   If AR_WK(I) <> W_BOOL Then
                                      W_LEN = I - W_POS
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                      W_POS = I
                                      W_BOOL = AR_WK(I)
                                   End If
                                   If I = Len(.Value) Then
                                      W_LEN = I - W_POS + 1
                                      If W_BLSTR = "" Then
                                         W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                      Else
                                         W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                      End If
                                   End If
                                Next I
                                Erase AR_WK
                             Else
                                W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Strikethrough
                             End If
                             AR_REP(9, W_CNTFA + 1) = W_BLSTR
                          End With
                       End If
                    End If
                    
                    If Me.CheckBox32.Value = True Then
                       W_CELLBK = Worksheets(AR_SELS(IDX)).Cells(R, C).Value
                    End If

                    If SW_NR = False Then
                       Set MATCHES = RE.Execute(W_CELL)
                       MAXJ = MATCHES.count - 1
                    Else
                       AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
                       MAXJ = UBound(AR_STR)
                    End If
                    
                    W_ST = 1
                    For J = 0 To MAXJ
                       SW_FIND = True
                       If SW_FIND = True Then
                          If SW_NR = False Then
                             W_POS = MATCHES.Item(J).FirstIndex + 1
                             W_LEN = MATCHES.Item(J).Length
                          Else
                             AR_WK2 = Split(AR_STR(J), vbTab)
                             W_POS = CLng(AR_WK2(0)) + 1
                             W_LEN = CLng(AR_WK2(1))
                          End If
                          
                          If Me.CheckBox32.Value = True Then
                             If W_POS > 1 Then
                                W_TEXT = Left$(W_CELLBK, W_POS - 1)
                                W_POS = W_POS + Len(W_TEXT) - Len(Replace(W_TEXT, vbLf, ""))
                             End If
                             L = 0
                             W_CNT = 0
                             Do While W_CNT < W_LEN
                                L = L + 1
                                If Mid$(W_CELLBK, L, 1) <> vbLf Then
                                   W_CNT = W_CNT + 1
                                End If
                             Loop
                             W_LEN = W_LEN + L - W_CNT
                          End If
                          
                          With Worksheets(AR_SELS(IDX)).Cells(R, C).Characters(W_POS, W_LEN).Font
                             If SW_DCB2 = True Then
                                .Bold = SW_DCB3
                             End If
                             If SW_DCI2 = True Then
                                .Italic = SW_DCI3
                             End If
                             If SW_DCU2 = True Then
                                If SW_DCU3 = True Then
                                   .Underline = 2
                                Else
                                   .Underline = -4142
                                End If
                             End If
                             If SW_DCK2 = True Then
                                .Strikethrough = SW_DCK3
                             End If
                             If SW_DCC2 = True Then
                                .Color = CLng(W_DCCLR2)
                             End If
                          End With
                          W_ST = W_POS + W_LEN
                       Else
                          If SW_NR = False Then
                             W_ST = W_ST + MATCHES.Item(J).Length
                          Else
                             AR_WK2 = Split(AR_STR(J), vbTab)
                             W_ST = W_ST + CLng(AR_WK2(1))
                          End If
                       End If
                    Next J
                    Set MATCHES = Nothing
                 End If
                 On Error GoTo 0
              Else
                 If W_ERRM = 0 Then
                    On Error GoTo LABEL_ERR_M
                    ReDim Preserve AR_REP(9, W_CNTFA + 1)
                    On Error GoTo 0
                 End If
                 
                 If IDX <> IDXBK2 Then
                    AFSBK2 = Worksheets(AR_SELS(IDX)).Index
                    ASNMBK = Worksheets(AR_SELS(IDX)).Name
                    IDXBK2 = IDX
                 End If
                 
                 If W_ERRM = 0 Then
                    AR_REP(1, W_CNTFA + 1) = AFSBK2
                    AR_REP(2, W_CNTFA + 1) = ASNMBK
                    AR_REP(3, W_CNTFA + 1) = R
                    AR_REP(4, W_CNTFA + 1) = C
                    
                    With Worksheets(AR_SELS(IDX)).Cells(R, C)
                       '|fffd|F|fffd||6d1||fffd|
                       ReDim AR_CCFCI(Len(.Value))
                       If IsNull(.Font.ColorIndex) = True Then
                          For K = 1 To UBound(AR_CCFCI)
                             AR_CCFCI(K) = .Characters(K, 1).Font.Color
                          Next K
                          W_FCIX = -1
                          W_POS = 1
                          AR_REP(5, W_CNTFA + 1) = ""
                          For K = 1 To UBound(AR_CCFCI)
                             If AR_CCFCI(K) <> W_FCIX Then
                                If W_FCIX <> -1 Then
                                   W_LEN = K - W_POS
                                   If AR_REP(5, W_CNTFA + 1) = "" Then
                                      AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                                   Else
                                      AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                                   End If
                                End If
                                W_POS = K
                                W_FCIX = AR_CCFCI(K)
                             End If
                             If K = UBound(AR_CCFCI) Then
                                W_LEN = K - W_POS + 1
                                If AR_REP(5, W_CNTFA + 1) = "" Then
                                   AR_REP(5, W_CNTFA + 1) = W_POS & ":" & W_LEN & ":" & W_FCIX
                                Else
                                   AR_REP(5, W_CNTFA + 1) = AR_REP(5, W_CNTFA + 1) & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                                End If
                             End If
                          Next K
                          Erase AR_CCFCI
                       Else
                          AR_REP(5, W_CNTFA + 1) = 1 & ":" & Len(.Value) & ":" & .Font.Color
                       End If
                    
                       '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                       ReDim AR_WK(Len(.Value))
                       If IsNull(.Font.Bold) = True Then
                          For I = 1 To Len(.Value)
                             AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Bold
                          Next I
           
                          W_BOOL = AR_WK(1)
                          W_POS = 1
                          W_BLSTR = ""
                          For I = 1 To Len(.Value)
                             If AR_WK(I) <> W_BOOL Then
                                W_LEN = I - W_POS
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                                W_POS = I
                                W_BOOL = AR_WK(I)
                             End If
                             If I = Len(.Value) Then
                                W_LEN = I - W_POS + 1
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                             End If
                          Next I
                          Erase AR_WK
                       Else
                          W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Bold
                       End If
                       AR_REP(6, W_CNTFA + 1) = W_BLSTR
           
                       '|fffd||391||315||6d1||fffd|
                       ReDim AR_WK(Len(.Value))
                       If IsNull(.Font.Italic) = True Then
                          For I = 1 To Len(.Value)
                             AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Italic
                          Next I
      
                          W_BOOL = AR_WK(1)
                          W_POS = 1
                          W_BLSTR = ""
                          For I = 1 To Len(.Value)
                             If AR_WK(I) <> W_BOOL Then
                                W_LEN = I - W_POS
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                                W_POS = I
                                W_BOOL = AR_WK(I)
                             End If
                             If I = Len(.Value) Then
                                W_LEN = I - W_POS + 1
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                             End If
                          Next I
                          Erase AR_WK
                       Else
                          W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Italic
                       End If
                       AR_REP(7, W_CNTFA + 1) = W_BLSTR
      
                       '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                       ReDim AR_WK(Len(.Value))
                       If IsNull(.Font.Underline) = True Then
                          For I = 1 To Len(.Value)
                             AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Underline
                          Next I
      
                          W_BOOL = AR_WK(1)
                          W_POS = 1
                          W_BLSTR = ""
                          For I = 1 To Len(.Value)
                             If AR_WK(I) <> W_BOOL Then
                                W_LEN = I - W_POS
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                                W_POS = I
                                W_BOOL = AR_WK(I)
                             End If
                             If I = Len(.Value) Then
                                W_LEN = I - W_POS + 1
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                             End If
                          Next I
                          Erase AR_WK
                       Else
                          W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Underline
                       End If
                       AR_REP(8, W_CNTFA + 1) = W_BLSTR
      
                       '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
                       ReDim AR_WK(Len(.Value))
                       If IsNull(.Font.Strikethrough) = True Then
                          For I = 1 To Len(.Value)
                             AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Strikethrough
                          Next I
      
                          W_BOOL = AR_WK(1)
                          W_POS = 1
                          W_BLSTR = ""
                          For I = 1 To Len(.Value)
                             If AR_WK(I) <> W_BOOL Then
                                W_LEN = I - W_POS
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                                W_POS = I
                                W_BOOL = AR_WK(I)
                             End If
                             If I = Len(.Value) Then
                                W_LEN = I - W_POS + 1
                                If W_BLSTR = "" Then
                                   W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                                Else
                                   W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                                End If
                             End If
                          Next I
                          Erase AR_WK
                       Else
                          W_BLSTR = 1 & ":" & Len(.Value) & ":" & .Font.Strikethrough
                       End If
                       AR_REP(9, W_CNTFA + 1) = W_BLSTR
                    End With
                 End If
   
                 With Worksheets(AR_SELS(IDX)).Cells(R, C).Font
                    If SW_DCB2 = True Then
                       .Bold = SW_DCB3
                    End If
                    If SW_DCI2 = True Then
                       .Italic = SW_DCI3
                    End If
                    If SW_DCU2 = True Then
                       If SW_DCU3 = True Then
                          .Underline = 2
                       Else
                          .Underline = -4142
                       End If
                    End If
                    If SW_DCK2 = True Then
                       .Strikethrough = SW_DCK3
                    End If
                    If SW_DCC2 = True Then
                       .Color = CLng(W_DCCLR2)
                    End If
                 End With
              End If
           End If
        End If
     End If
  End If
  
  If SW_FRA = 0 Or _
     SW_FRA = 3 Then
     If SW_ACEXE = True And _
        W_PROMTH <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 1)
     End If
     If SW_ACEXE2 = True And _
        W_PROMTH2 <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 2)
     End If
     If SW_ACEXE3 = True And _
        W_PROMTH3 <> "" Then
        Call ADDCMD_EXEC(Cells(R, C), 3)
     End If
  End If

  Exit Sub

LABEL_ERR_M:

  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Can't undo, continue?.", vbYesNo + vbQuestion)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||256||7c2||fffd||fffd||702||fffd||fffd||42a91||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
  End If

  If W_RET = vbYes Then
     W_ERRM = 1
     Me.CommandButton45.Enabled = False
     Erase AR_REP
     Set OWB = Nothing
     Resume Next
  Else
     W_ERRM = 2
     Exit Sub
  End If

End Sub

Private Sub STORE_REP(ByVal SW_FRA As Long, ByVal SW_VALCHG As Boolean)

  Dim W_CLTXT As String
  Dim I As Long
  Dim W_FCIX As Long
  Dim W_POS As Long
  Dim W_LEN As Long
  Dim W_ST As Long
  Dim J As Long
  Dim MATCHES As Object
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String
  Dim W_REPTXT As String

  Dim AR_CCFCI() As Long

  Dim W_STR As String
  Dim SW_FIND As Boolean
  
  Dim W_CHCI As Long
  
  Dim SW_VALCL As Boolean
  
  Dim AR_WK() As Variant
  Dim W_BOOL As Variant
  Dim W_BLSTR As String
  Dim W_CI As Long
  
  Dim AR_STR As Variant
  Dim MAXJ As Long
  Dim AR_WK2 As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  
  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String
                 
  
  If W_CNTRA = 0 Then
     Erase AR_REP
  End If
  If W_CNTRA Mod 10000 = 0 Then
     If W_ERRM = 0 Then
        On Error GoTo LABEL_ERR_M
        ReDim Preserve AR_REP(11, (Int(W_CNTRA / 10000) + 1) * 10000)
        On Error GoTo 0
     End If
  End If
  
  W_CNTRA = W_CNTRA + 1
  
  If W_CNTRA = 1 Then
     If ActiveWorkbook.path <> "" And _
        ActiveWorkbook.HasPassword = False And _
        ActiveWorkbook.ReadOnly = False And _
        ActiveWorkbook.FileFormat <> xlCSV And _
        ActiveWorkbook.FileFormat <> xlCurrentPlatformText Then
        DT = Date
        TM = time
        On Error GoTo L_BK_END
        If Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_????????_??????_M.bak") = "" Then
           On Error Resume Next
           W_RET = CopyFile(ActiveWorkbook.path & "\" & ActiveWorkbook.Name, _
                            ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak", 0)
           On Error GoTo 0
           W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_M.bak")
           If RPDIC.Exists(W_CNV) = False Then
              RPDIC.Add W_CNV, "SV" & vbTab & "" & vbTab & ""
           End If
        End If
        ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak"
        W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_N.bak")
        If RPDIC.Exists(W_CNV) = False Then
           RPDIC.Add W_CNV, "CR" & vbTab & Me.ComboBox3.Value & vbTab & Me.ComboBox2.Value
        End If
     End If
L_BK_END:
     On Error GoTo 0
     
     IDXBK = 0
     If OWB Is Nothing Then
     Else
        SW_UNDO = True
        If W_REPBOOK <> "" Then
           Set OWB = Nothing
           If W_FNDBOOK = W_REPBOOK Then
              W_FNDBOOK = ""
           End If
           W_REPBOOK = ""
        End If
        If W_FNDBOOK <> "" Then
           Set OWB = Nothing
           W_FNDBOOK = ""
        End If
        SW_UNDO = False
     End If
     W_REPBOOK = ActiveWorkbook.Name
  End If
  
  If IDX <> IDXBK Then
     AFSBK = Worksheets(AR_SELS(IDX)).Index
     ASNMBK = Worksheets(AR_SELS(IDX)).Name
     IDXBK = IDX
  End If
  If W_ERRM = 0 Then
     AR_REP(1, W_CNTRA) = AFSBK
     AR_REP(2, W_CNTRA) = ASNMBK
  
     AR_REP(3, W_CNTRA) = R
     AR_REP(4, W_CNTRA) = C
     If Me.CheckBox3.Value = True Or _
        SW_VALCHG = True Or _
        Cells(R, C).FormulaHidden = True Then
        AR_REP(5, W_CNTRA) = Cells(R, C).Value
        AR_REP(6, W_CNTRA) = True
     ElseIf IsOF(Cells(R, C)) = True Then
     ElseIf IsError(Cells(R, C).Value) = True Then
     ElseIf Len(Cells(R, C).Value) > W_MAXFML Then
        AR_REP(5, W_CNTRA) = Cells(R, C).Value
        AR_REP(6, W_CNTRA) = True
     Else
        AR_REP(5, W_CNTRA) = Cells(R, C).Formula
        AR_REP(6, W_CNTRA) = False
     End If
     AR_REP(7, W_CNTRA) = ""
     AR_REP(8, W_CNTRA) = ""
     AR_REP(9, W_CNTRA) = ""
     AR_REP(10, W_CNTRA) = ""
     AR_REP(11, W_CNTRA) = ""
  End If

  If SW_CLRKEEP = True Then
     W_CLTXTBK = ""
     SW_VALCL = False
     If IsOF(Cells(R, C)) = True Then
     ElseIf IsError(Cells(R, C).Value) = True Then
     ElseIf Len(Cells(R, C).Value) > W_MAXFML Then
        SW_VALCL = True
     ElseIf Cells(R, C).HasFormula = True Then
     Else
        SW_VALCL = True
     End If
     If SW_VALCL = True Then
        W_CLTXT = Cells(R, C).Value
        W_CLTXTBK = W_CLTXT
       
       '|fffd|F|fffd||6d1||fffd|
        ReDim AR_CCFCI(Len(W_CLTXTBK))
        With Cells(R, C)
           If IsNull(.Font.Color) = True Then
              For I = 1 To Len(W_CLTXTBK)
                 AR_CCFCI(I) = Cells(R, C).Characters(I, 1).Font.ColorIndex
              Next I
              W_FCIX = -1
              W_POS = 1
              W_CLCLR = ""
              For I = 1 To Len(W_CLTXTBK)
                 If AR_CCFCI(I) <> W_FCIX Then
                    If W_FCIX <> -1 Then
                       W_LEN = I - W_POS
                       If W_CLCLR = "" Then
                          W_CLCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                       Else
                          W_CLCLR = W_CLCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                       End If
                    End If
                    W_POS = I
                    W_FCIX = AR_CCFCI(I)
                 End If
                 If I = Len(W_CLTXTBK) Then
                    W_LEN = I - W_POS + 1
                    If W_CLCLR = "" Then
                       W_CLCLR = W_POS & ":" & W_LEN & ":" & W_FCIX
                    Else
                       W_CLCLR = W_CLCLR & "," & W_POS & ":" & W_LEN & ":" & W_FCIX
                    End If
                 End If
              Next I
              Erase AR_CCFCI
           Else
              W_CLCLR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Color
           End If
        End With
        AR_REP(7, W_CNTRA) = W_CLCLR
        
        If SW_NR = False Then
           Set MATCHES = RE.Execute(W_CLTXT)
           MAXJ = MATCHES.count - 1
        Else
           AR_STR = Split(NREXE(NRE, W_CLTXT), vbCrLf)
           MAXJ = UBound(AR_STR)
        End If
        
        W_ST = 1
        W_J = 0
        Erase AR_LEN0
        Erase AR_POS
        Erase AR_LEN
        If SW_DCC = True Then
           W_CI = CLng(W_DCCLR)
        End If
        For J = 0 To MAXJ
           SW_FIND = True
           
           If SW_NR = False Then
              W_FI = MATCHES.Item(J).FirstIndex
              W_LN = MATCHES.Item(J).Length
              W_VL = MATCHES.Item(J).Value
           Else
              AR_WK2 = Split(AR_STR(J), vbTab)
              W_FI = CLng(AR_WK2(0))
              W_LN = CLng(AR_WK2(1))
              W_VL = Mid$(W_CLTXTBK, W_FI + 1, W_LN)
           End If
           
           If SW_FIND = True Then
              If (SW_DCB = True Or _
                  SW_DCI = True Or _
                  SW_DCU = True Or _
                  SW_DCK = True Or _
                  SW_DCC = True) And _
                  W_LN > 0 Then
                  With Cells(R, C).Characters(W_FI + 1, W_LN).Font
                     If SW_DCB = True And _
                        SW_FIND = True Then
                        If IsNull(.Bold) = False Then
                           SW_FIND = .Bold
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCI = True And _
                        SW_FIND = True Then
                        If IsNull(.Italic) = False Then
                           SW_FIND = .Italic
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCU = True And _
                        SW_FIND = True Then
                        If IsNull(.Underline) = True Then
                           SW_FIND = False
                        ElseIf .Underline = -4142 Then
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCK = True And _
                        SW_FIND = True Then
                        If IsNull(.Strikethrough) = False Then
                           SW_FIND = .Strikethrough
                        Else
                           SW_FIND = False
                        End If
                     End If
                     If SW_DCC = True And _
                        SW_FIND = True Then
                        If .Color <> W_CI Then
                           SW_FIND = False
                        End If
                     End If
                  End With
              End If
           End If
           
           If SW_FIND = True Then
              If RE.Pattern = "$" Then
                 W_POS = Len(W_CLTXT) + 1
              ElseIf RE.Pattern = "^" Then
                 W_POS = 0
              Else
                 If W_LN = 0 Then
                    If J > 0 Then
                       W_ST = W_ST + 1
                    End If
                 End If
                 W_POS = InStr(W_ST, W_CLTXT, W_VL, vbBinaryCompare)
              End If
           
              W_LEN = W_LN
              W_J = W_J + 1
              ReDim Preserve AR_LEN0(W_J)
              AR_LEN0(W_J) = W_LEN
              ReDim Preserve AR_POS(W_J)
              AR_POS(W_J) = W_POS
              If W_POS - 1 > 0 Then
                 W_STR1 = Left$(W_CLTXT, W_POS - 1)
              Else
                 W_STR1 = ""
              End If
              If W_POS > 0 Then
                 W_STR2 = Mid$(W_CLTXT, W_POS, W_LEN)
              Else
                 W_STR2 = ""
              End If
              If Len(W_CLTXT) - W_POS - W_LEN + 1 > 0 Then
                 W_STR3 = Right$(W_CLTXT, Len(W_CLTXT) - W_POS - W_LEN + 1)
              Else
                 W_STR3 = ""
              End If
              SW_SPREP = SP_REP3(W_STR2, W_REPTXT)
              If SW_SPREP = True Then
                 W_STR2 = W_REPTXT
              Else
                 If SW_NR = False Then
                    W_STR2 = RE.Replace(W_STR2, REPSTRCNV(Me.ComboBox2.Value))
                 Else
                    W_STR2 = NRREP(NRE, W_STR2, REPSTRCNV(Me.ComboBox2.Value))
                 End If
                 W_LEN = Len(W_STR2)
              End If
              ReDim Preserve AR_LEN(W_J)
              AR_LEN(W_J) = W_LEN
              W_CLTXT = W_STR1 & W_STR2 & W_STR3
              W_ST = W_POS + W_LEN
           Else
              W_ST = W_ST + W_LN
           End If
        Next J
        
        Set MATCHES = Nothing
     
       '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
        ReDim AR_WK(Len(W_CLTXTBK))
        With Cells(R, C)
           If IsNull(.Font.Bold) = True Then
              For I = 1 To Len(W_CLTXTBK)
                 AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Bold
              Next I
           
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_BLSTR = ""
              For I = 1 To Len(W_CLTXTBK)
                 If AR_WK(I) <> W_BOOL Then
                    W_LEN = I - W_POS
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = I
                    W_BOOL = AR_WK(I)
                 End If
                 If I = Len(W_CLTXTBK) Then
                    W_LEN = I - W_POS + 1
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next I
              Erase AR_WK
           Else
              W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Bold
           End If
        End With
        AR_REP(8, W_CNTRA) = W_BLSTR
     
       '|fffd||391||315||6d1||fffd|
        ReDim AR_WK(Len(W_CLTXTBK))
        With Cells(R, C)
           If IsNull(.Font.Italic) = True Then
              For I = 1 To Len(W_CLTXTBK)
                 AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Italic
              Next I
           
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_BLSTR = ""
              For I = 1 To Len(W_CLTXTBK)
                 If AR_WK(I) <> W_BOOL Then
                    W_LEN = I - W_POS
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = I
                    W_BOOL = AR_WK(I)
                 End If
                 If I = Len(W_CLTXTBK) Then
                    W_LEN = I - W_POS + 1
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next I
              Erase AR_WK
           Else
              W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Italic
           End If
        End With
        AR_REP(9, W_CNTRA) = W_BLSTR
     
       '|fffd||fffd||fffd||fffd||fffd||6d1||fffd|
        ReDim AR_WK(Len(W_CLTXTBK))
        With Cells(R, C)
           If IsNull(.Font.Underline) = True Then
              For I = 1 To Len(W_CLTXTBK)
                 AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Underline
              Next I
           
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_BLSTR = ""
              For I = 1 To Len(W_CLTXTBK)
                 If AR_WK(I) <> W_BOOL Then
                    W_LEN = I - W_POS
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = I
                    W_BOOL = AR_WK(I)
                 End If
                 If I = Len(W_CLTXTBK) Then
                    W_LEN = I - W_POS + 1
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next I
              Erase AR_WK
           Else
              W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Underline
           End If
        End With
        AR_REP(10, W_CNTRA) = W_BLSTR
     
       '|fffd||fffd||fffd||fffd||fffd||fffd||6d1||fffd|
        ReDim AR_WK(Len(W_CLTXTBK))
        With Cells(R, C)
           If IsNull(.Font.Strikethrough) = True Then
              For I = 1 To Len(W_CLTXTBK)
                 AR_WK(I) = Cells(R, C).Characters(I, 1).Font.Strikethrough
              Next I
           
              W_BOOL = AR_WK(1)
              W_POS = 1
              W_BLSTR = ""
              For I = 1 To Len(W_CLTXTBK)
                 If AR_WK(I) <> W_BOOL Then
                    W_LEN = I - W_POS
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                    W_POS = I
                    W_BOOL = AR_WK(I)
                 End If
                 If I = Len(W_CLTXTBK) Then
                    W_LEN = I - W_POS + 1
                    If W_BLSTR = "" Then
                       W_BLSTR = W_POS & ":" & W_LEN & ":" & W_BOOL
                    Else
                       W_BLSTR = W_BLSTR & "," & W_POS & ":" & W_LEN & ":" & W_BOOL
                    End If
                 End If
              Next I
              Erase AR_WK
           Else
              W_BLSTR = 1 & ":" & Len(W_CLTXTBK) & ":" & .Font.Strikethrough
           End If
        End With
        AR_REP(11, W_CNTRA) = W_BLSTR
     End If
  End If

  Exit Sub

LABEL_ERR_M:

  If Me.CheckBox49.Value = True Then
     W_RET = MsgBox("Can't undo, continue?.", vbYesNo + vbQuestion)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||256||7c2||fffd||fffd||702||fffd||fffd||42a91||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbYesNo + vbQuestion)
  End If

  If W_RET = vbYes Then
     W_ERRM = 1
     Erase AR_REP
     Set OWB = Nothing
     Resume Next
  Else
     W_ERRM = 2
     Exit Sub
  End If

End Sub

Private Sub STORE_REP2()

  Dim J As Long
  
  
  W_CNTRA2 = W_CNTRA2 + 1
  SW_ERR_FRML = False
  
  If W_1STRS = 0 Then
     W_1STRIDX = IDX
     W_1STRS = Worksheets(AR_SELS(IDX)).Index
     W_1STRR = R
     W_1STRC = C
  End If

  If SW_CLRKEEP = True Then
     If W_CLTXTBK <> "" Then
        '|fffd||fffd||fffd||fffd||fffd|F|fffd||3cd|X
        Cells(R, C).Font.ColorIndex = -4105
        Call KEEP_DC(7)
        '|fffd||fffd||fffd||fffd||fffd||3cd|X
        Cells(R, C).Font.Bold = False
        Call KEEP_DC(8)
        '|fffd||391||315||3cd|X
        Cells(R, C).Font.Italic = False
        Call KEEP_DC(9)
        '|fffd||fffd||fffd||fffd||fffd||3cd|X
        Cells(R, C).Font.Underline = -4142
        Call KEEP_DC(10)
        '|fffd||fffd||fffd||fffd||fffd||fffd||3cd|X
        Cells(R, C).Font.Strikethrough = False
        Call KEEP_DC(11)
        
        If (SW_DCB2 = True Or _
            SW_DCI2 = True Or _
            SW_DCU2 = True Or _
            SW_DCK2 = True Or _
            SW_DCC2 = True) Then
            For J = 1 To UBound(AR_POS)
               With Cells(R, C).Characters(AR_POS(J), AR_LEN(J))
                  If SW_DCB2 = True Then
                     .Font.Bold = SW_DCB3
                  End If
                  If SW_DCI2 = True Then
                     .Font.Italic = SW_DCI3
                  End If
                  If SW_DCU2 = True Then
                     If SW_DCU3 = True Then
                        .Font.Underline = 2
                     Else
                        .Font.Underline = -4142
                     End If
                  End If
                  If SW_DCK2 = True Then
                     .Font.Strikethrough = SW_DCK3
                  End If
                  If SW_DCC2 = True Then
                     .Font.Color = CLng(W_DCCLR2)
                  End If
               End With
            Next J
        End If
        
        Erase AR_POS
        Erase AR_LEN
        Erase AR_LEN0
     End If
  End If

End Sub

Private Sub KEEP_DC(ByVal W_NO As Long)

  Dim AR_ITEM As Variant
  Dim AR_ITEM2 As Variant
  Dim AR_POS2() As Long
  Dim AR_LEN2() As Long
  Dim AR_BL2() As Variant
  Dim J As Long
  Dim K As Long
  Dim L As Long
  Dim W_BLSTR As String
  
  W_BLSTR = AR_REP(W_NO, W_CNTRA)
  If Val(Application.Version) >= 9 Then
     AR_ITEM = SPLIT2000(W_BLSTR, ",")
  Else
     AR_ITEM = SPLIT97(W_BLSTR, ",")
  End If
  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_BL2
  For J = 0 To UBound(AR_ITEM)
     If Val(Application.Version) >= 9 Then
        AR_ITEM2 = SPLIT2000(AR_ITEM(J), ":")
     Else
        AR_ITEM2 = SPLIT97(AR_ITEM(J), ":")
     End If
     ReDim Preserve AR_POS2(J + 1)
     AR_POS2(J + 1) = CLng(AR_ITEM2(0))
     ReDim Preserve AR_LEN2(J + 1)
     AR_LEN2(J + 1) = CLng(AR_ITEM2(1))
     ReDim Preserve AR_BL2(J + 1)
     If W_NO = 7 Or _
        W_NO = 10 Then
        AR_BL2(J + 1) = CLng(AR_ITEM2(2))
     Else
        AR_BL2(J + 1) = CBool(AR_ITEM2(2))
     End If
  Next J

  K = 1
  For J = 1 To W_J
     '|fffd|u|fffd||fffd||fffd|O|fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        Do While AR_POS2(K) <= AR_POS(J)
           If AR_POS2(K) < AR_POS(J) Then
              If AR_POS2(K) + AR_LEN2(K) - 1 >= AR_POS(J) Then
'                 If AR_POS2(K) + AR_LEN2(K) >= AR_POS(J) + AR_LEN0(J) Then
                 If AR_POS2(K) + AR_LEN2(K) > AR_POS(J) + AR_LEN0(J) Then
                    If AR_LEN0(J) = 0 Then
                    Else
                       ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                       ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                       ReDim Preserve AR_BL2(UBound(AR_BL2) + 1)
                       If UBound(AR_POS2) > K + 1 Then
                          For L = UBound(AR_POS2) To K + 2 Step -1
                             AR_POS2(L) = AR_POS2(L - 1)
                             AR_LEN2(L) = AR_LEN2(L - 1)
                             AR_BL2(L) = AR_BL2(L - 1)
                          Next L
                       End If
                       AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                       If UBound(AR_POS2) > K + 1 Then
                          AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                       Else
                          AR_LEN2(K + 1) = Len(W_CLTXTBK) + 1 - AR_POS2(K + 1)
                       End If
                       AR_BL2(K + 1) = AR_BL2(K)
                    End If
                 End If
                 AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
              End If
           Else
              If AR_LEN2(K) = AR_LEN0(J) Then
                 AR_LEN2(K) = AR_LEN(J)
              Else
                 If AR_LEN0(J) = 0 Then
                 Else
                    ReDim Preserve AR_POS2(UBound(AR_POS2) + 1)
                    ReDim Preserve AR_LEN2(UBound(AR_LEN2) + 1)
                    ReDim Preserve AR_BL2(UBound(AR_BL2) + 1)
                    If UBound(AR_POS2) > K + 1 Then
                       For L = UBound(AR_POS2) To K + 2 Step -1
                          AR_POS2(L) = AR_POS2(L - 1)
                          AR_LEN2(L) = AR_LEN2(L - 1)
                          AR_BL2(L) = AR_BL2(L - 1)
                       Next L
                    End If
                    AR_POS2(K + 1) = AR_POS(J) + AR_LEN0(J)
                    If UBound(AR_POS2) > K + 1 Then
                       AR_LEN2(K + 1) = AR_POS2(K + 2) - AR_POS2(K + 1)
                    Else
                       AR_LEN2(K + 1) = Len(W_CLTXTBK) + 1 - AR_POS2(K + 1)
                    End If
                    AR_BL2(K + 1) = AR_BL2(K)
                 End If
                 If AR_LEN(J) = AR_LEN0(J) Then
                    AR_LEN2(K) = AR_LEN(J)
                 Else
                    AR_LEN2(K) = AR_POS(J) - AR_POS2(K) + 1
                 End If
              End If
           End If
           
           If AR_LEN2(K) > 0 Then
              With Cells(R, C).Characters(AR_POS2(K), AR_LEN2(K))
                 Select Case W_NO
                 Case 7
                    .Font.Color = AR_BL2(K)
                 Case 8
                    .Font.Bold = AR_BL2(K)
                 Case 9
                    .Font.Italic = AR_BL2(K)
                 Case 10
                    .Font.Underline = AR_BL2(K)
                 Case 11
                    .Font.Strikethrough = AR_BL2(K)
                 End Select
              End With
           End If
           K = K + 1
           If K > UBound(AR_POS2) Then
              Exit Do
           End If
        Loop
     End If

     '|fffd|u|fffd||fffd||fffd||4cf||fffd|
     For L = K To UBound(AR_POS2)
        AR_POS2(L) = AR_POS2(L) + AR_LEN(J) - AR_LEN0(J)
     Next L

     '|fffd|u|fffd||fffd||fffd||fffd||4cf||fffd|
     If K <= UBound(AR_POS2) Then
        If J + 1 <= W_J Then
           Do While AR_POS2(K) <= AR_POS(J + 1)
              With Cells(R, C).Characters(AR_POS2(K), AR_LEN2(K))
                 Select Case W_NO
                 Case 7
                    .Font.Color = AR_BL2(K)
                 Case 8
                    .Font.Bold = AR_BL2(K)
                 Case 9
                    .Font.Italic = AR_BL2(K)
                 Case 10
                    .Font.Underline = AR_BL2(K)
                 Case 11
                    .Font.Strikethrough = AR_BL2(K)
                 End Select
              End With
              K = K + 1
              If K > UBound(AR_POS2) Then
                 Exit Do
              End If
           Loop
        Else
           Do While K <= UBound(AR_POS2)
              With Cells(R, C).Characters(AR_POS2(K), AR_LEN2(K))
                 Select Case W_NO
                 Case 7
                    .Font.Color = AR_BL2(K)
                 Case 8
                    .Font.Bold = AR_BL2(K)
                 Case 9
                    .Font.Italic = AR_BL2(K)
                 Case 10
                    .Font.Underline = AR_BL2(K)
                 Case 11
                    .Font.Strikethrough = AR_BL2(K)
                 End Select
              End With
              K = K + 1
           Loop
        End If
     End If
  Next J

  Erase AR_POS2
  Erase AR_LEN2
  Erase AR_BL2

End Sub

Private Sub STORE_REP3()

  If SW_ACEXE = True And _
     W_PROMTH <> "" Then
     Call ADDCMD_EXEC(Cells(R, C), 1)
  End If
  If SW_ACEXE2 = True And _
     W_PROMTH2 <> "" Then
     Call ADDCMD_EXEC(Cells(R, C), 2)
  End If
  If SW_ACEXE3 = True And _
     W_PROMTH3 <> "" Then
     Call ADDCMD_EXEC(Cells(R, C), 3)
  End If

End Sub

Private Sub STORE_REP4()

  With Cells(R, C).Interior
     .ColorIndex = 6
     .Pattern = xlGrid
     .PatternColorIndex = 44
  End With

End Sub

Private Function SP_FND(ByVal W_CELL As Variant, ByVal W_CMBNO As Long) As Long
  
  Dim W_VAL As Variant
  Dim W_CMB As String
  
  
  SP_FND = 0
  If W_CMBNO = 1 Then
     W_CMB = Me.ComboBox1.Value
  Else
     W_CMB = W_ATEXT
  End If
  
  If Left$(W_CMB, 7) = "[COND>]" And _
     Len(W_CMB) > 7 Then
     SP_FND = 1
     W_VAL = Right$(W_CMB, Len(W_CMB) - 7)
     If IsNumeric(W_VAL) = True Then
        W_VAL = CDbl(W_VAL)
        If IsNumeric(W_CELL) = True Then
           W_CELL = CDbl(W_CELL)
        Else
           SP_FND = 1
           Exit Function
        End If
     End If
     If W_CELL > W_VAL Then
        SP_FND = 2
     End If
  ElseIf Left$(W_CMB, 7) = "[COND<]" And _
     Len(W_CMB) > 7 Then
     SP_FND = 1
     W_VAL = Right$(W_CMB, Len(W_CMB) - 7)
     If IsNumeric(W_VAL) = True Then
        W_VAL = CDbl(W_VAL)
        If IsNumeric(W_CELL) = True Then
           W_CELL = CDbl(W_CELL)
        Else
           SP_FND = 1
           Exit Function
        End If
     End If
     If W_CELL < W_VAL Then
        SP_FND = 2
     End If
  ElseIf Left$(W_CMB, 8) = "[COND>=]" And _
     Len(W_CMB) > 8 Then
     SP_FND = 1
     W_VAL = Right$(W_CMB, Len(W_CMB) - 8)
     If IsNumeric(W_VAL) = True Then
        W_VAL = CDbl(W_VAL)
        If IsNumeric(W_CELL) = True Then
           W_CELL = CDbl(W_CELL)
        Else
           SP_FND = 1
           Exit Function
        End If
     End If
     If W_CELL >= W_VAL Then
        SP_FND = 2
     End If
  ElseIf Left$(W_CMB, 8) = "[COND<=]" And _
     Len(W_CMB) > 8 Then
     SP_FND = 1
     W_VAL = Right$(W_CMB, Len(W_CMB) - 8)
     If IsNumeric(W_VAL) = True Then
        W_VAL = CDbl(W_VAL)
        If IsNumeric(W_CELL) = True Then
           W_CELL = CDbl(W_CELL)
        Else
           SP_FND = 1
           Exit Function
        End If
     End If
     If W_CELL <= W_VAL Then
        SP_FND = 2
     End If
  End If

End Function

Private Sub SP_REP(ByVal SW_VALCHG As Boolean, ByVal SW_FRA As Long, ByVal SW_SPFND As Long)
  
  Dim X As Long
  Dim Y As Long
  Dim Z As Long
  Dim W_STRCONV As Long
  Dim MATCHES As Object
  Dim W_STR As String
  Dim SW_FIND As Boolean
  Dim W_STR2 As String
  Dim W_CELL As Variant
  
  Dim W_Z As Long
  
  Dim AR_STR As Variant
  Dim MAXX As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim W_CELLBK As Variant
  
  
  SW_SPREP = False
  
  If SW_ACDRCL = True Then
     W_CELL = AR_CELL(R, 1)
  Else
     W_CELL = AR_CELL(1, C)
  End If
  
  '|fffd||fffd||fffd||a31f||fffd||fffd|
  If SW_SPFND = 2 Then
     If SW_FRA = 1 Or _
        SW_FRA = 2 Then
        Select Case Me.ComboBox2.Value
        Case "[UPPER]"
           SW_SPREP = True
           W_STRCONV = vbUpperCase
        Case "[LOWER]"
           SW_SPREP = True
           W_STRCONV = vbLowerCase
        Case "[WIDE]"
           SW_SPREP = True
           W_STRCONV = vbWide
        Case "[NARROW]"
           SW_SPREP = True
           W_STRCONV = vbNarrow
        End Select
     Else
        Select Case Me.ComboBox9.Value
        Case "[UPPER]"
           SW_SPREP = True
           W_STRCONV = vbUpperCase
        Case "[LOWER]"
           SW_SPREP = True
           W_STRCONV = vbLowerCase
        Case "[WIDE]"
           SW_SPREP = True
           W_STRCONV = vbWide
        Case "[NARROW]"
           SW_SPREP = True
           W_STRCONV = vbNarrow
        End Select
     End If
     If SW_SPREP = False Then
        W_CELL = Me.ComboBox2.Value
        If SW_FRA = 1 Or _
           SW_FRA = 2 Then
           If Me.CheckBox3.Value = True Or _
              SW_VALCHG = True Then
              Cells(R, C).Value = W_CELL
           Else
              If Cells(R, C).HasArray = True Then
                 Cells(R, C).FormulaArray = W_CELL
              Else
                 Cells(R, C).Formula = W_CELL
              End If
           End If
        Else
           If Me.CheckBox3.Value = True Or _
              SW_VALCHG = True Then
              Cells(R, C).Value = W_CELL
           Else
              If Cells(R, C).HasArray = True Then
                 Cells(R, C).FormulaArray = W_CELL
              Else
                 Cells(R, C).Formula = W_CELL
              End If
           End If
        End If
        SW_SPREP = True
        Exit Sub
     Else
        W_CELL = StrConv(W_CELL, W_STRCONV)
        If SW_FRA = 1 Or _
           SW_FRA = 2 Then
           If Me.CheckBox3.Value = True Or _
              SW_VALCHG = True Then
              Cells(R, C).Value = W_CELL
           Else
              If Cells(R, C).HasArray = True Then
                 Cells(R, C).FormulaArray = W_CELL
              Else
                 Cells(R, C).Formula = W_CELL
              End If
           End If
        Else
           If Me.CheckBox3.Value = True Or _
              SW_VALCHG = True Then
              Cells(R, C).Value = W_CELL
           Else
              If Cells(R, C).HasArray = True Then
                 Cells(R, C).FormulaArray = W_CELL
              Else
                 Cells(R, C).Formula = W_CELL
              End If
           End If
        End If
        SW_SPREP = True
        Exit Sub
     End If
  End If
     
  '|fffd||fffd||fffd||fffd|u|fffd||fffd|
  If SW_FRA = 1 Or _
     SW_FRA = 2 Then
     Select Case Me.ComboBox2.Value
     Case "[UPPER]"
        SW_SPREP = True
        W_STRCONV = vbUpperCase
     Case "[LOWER]"
        SW_SPREP = True
        W_STRCONV = vbLowerCase
     Case "[WIDE]"
        SW_SPREP = True
        W_STRCONV = vbWide
     Case "[NARROW]"
        SW_SPREP = True
        W_STRCONV = vbNarrow
     End Select
  Else
     Select Case Me.ComboBox9.Value
     Case "[UPPER]"
        SW_SPREP = True
        W_STRCONV = vbUpperCase
     Case "[LOWER]"
        SW_SPREP = True
        W_STRCONV = vbLowerCase
     Case "[WIDE]"
        SW_SPREP = True
        W_STRCONV = vbWide
     Case "[NARROW]"
        SW_SPREP = True
        W_STRCONV = vbNarrow
     End Select
  End If
  If SW_SPREP = False Then
     Exit Sub
  End If
  
  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_CELL)
     MAXX = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
     MAXX = UBound(AR_STR)
     W_CELLBK = W_CELL
  End If
  
  Z = 0
  
  For X = 0 To MAXX
     If SW_NR = False Then
        W_FI = MATCHES.Item(X).FirstIndex
        W_LN = MATCHES.Item(X).Length
        W_VL = MATCHES.Item(X)
     Else
        AR_WK = Split(AR_STR(X), vbTab)
        W_FI = CLng(AR_WK(0))
        W_LN = CLng(AR_WK(1))
        W_VL = Mid$(W_CELLBK, W_FI + 1, W_LN)
     End If
     
     Y = W_FI + 1 + Z
     If Y > 1 Then
        W_STR = Left$(W_CELL, Y - 1)
     End If
     SW_FIND = True
     
     If SW_FIND = True Then
        W_STR = W_STR & StrConv(W_VL, W_STRCONV)
     Else
        W_STR = W_STR & W_VL
     End If
     W_Z = Z
     Z = Y + W_LN
     If Len(W_CELL) - (Z - 1) > 0 Then
        W_STR = W_STR & Right$(W_CELL, Len(W_CELL) - (Z - 1))
     End If
     W_CELL = W_STR
     Z = Len(StrConv(W_VL, W_STRCONV)) - W_LN + W_Z
  Next X
  
  Set MATCHES = Nothing

  If SW_FRA = 1 Or _
     SW_FRA = 2 Then
     If Me.CheckBox3.Value = True Or _
        SW_VALCHG = True Then
        Cells(R, C).Value = W_CELL
     Else
        If Cells(R, C).HasArray = True Then
           Cells(R, C).FormulaArray = W_CELL
        Else
           Cells(R, C).Formula = W_CELL
        End If
     End If
  Else
     If Me.CheckBox3.Value = True Or _
        SW_VALCHG = True Then
        Cells(R, C).Value = W_CELL
     Else
        If Cells(R, C).HasArray = True Then
           Cells(R, C).FormulaArray = W_CELL
        Else
           Cells(R, C).Formula = W_CELL
        End If
     End If
  End If

End Sub

Function SP_REP3(ByVal W_SPTXT As String, W_REPTXT As String) As Boolean

  Dim W_STRCONV As Long
  
  
  SP_REP3 = False
  
  Select Case Me.ComboBox7.Value
  Case "[UPPER]"
     SP_REP3 = True
     W_STRCONV = vbUpperCase
  Case "[LOWER]"
     SP_REP3 = True
     W_STRCONV = vbLowerCase
  Case "[WIDE]"
     SP_REP3 = True
     W_STRCONV = vbWide
  Case "[NARROW]"
     SP_REP3 = True
     W_STRCONV = vbNarrow
  End Select

  If SP_REP3 = False Then
     Exit Function
  End If
  
  W_REPTXT = StrConv(W_SPTXT, W_STRCONV)
  
End Function

Private Sub SEL_RCVR_RTN(ByVal W_AS As Long, ByVal W_AR As Long, ByVal W_AC As Long)
  
  Worksheets(W_AS).Select
  Cells(W_AR, W_AC).Select
  Application.ScreenUpdating = True

End Sub

Private Sub ALL_FIND()
  
  Dim AR_LIST() As String
  Dim I As Long
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim W_LONG As Long
  Dim SW_AERO As Boolean
  
  
  ReDim Preserve AR_AFS(AFN)
  ReDim Preserve AR_AFR(AFN)
  ReDim Preserve AR_AFC(AFN)
  ReDim Preserve AR_AFV(AFN)
  
  ReDim AR_LIST(0 To AFN - 1, 0 To 3)
  
  For I = 1 To AFN
     AR_LIST(I - 1, 0) = "Sel"
     If I = 1 Then
        AR_LIST(I - 1, 1) = Sheets(AR_AFS(I)).Name
     Else
        If AR_AFS(I) = AR_AFS(I - 1) Then
           AR_LIST(I - 1, 1) = AR_LIST(I - 2, 1)
        Else
           AR_LIST(I - 1, 1) = Sheets(AR_AFS(I)).Name
        End If
     End If
     AR_LIST(I - 1, 2) = Cells(AR_AFR(I), AR_AFC(I)).Address
     AR_LIST(I - 1, 3) = AR_AFV(I)
  Next I
  
  Erase AR_AFS
  Erase AR_AFR
  Erase AR_AFC
  Erase AR_AFV
  
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 349.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 283.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 263.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  On Error Resume Next
  DwmIsCompositionEnabled W_LONG
  SW_AERO = CBool(W_LONG)
  On Error GoTo 0
  
  If Me.ToggleButton14.Value = True Then
     Me.MultiPage4.Visible = True
     If SW_AERO = True And _
        Me.MultiPage2.Visible = False Then
        Me.Width = Me.Width + 8
     End If
  End If
  
  Me.MultiPage5.Visible = False
  Me.MultiPage2.Visible = True
  Select Case Me.MultiPage2.Value
  Case 0
     Call SET_LISTBOX(AR_LIST, Me.ListBox1, Me.Label10, Me.Label11, Me.Label12, Me.Label9, Me.CommandButton52, Me.CommandButton53, Me.CommandButton107)
     Call SET_BTN(True, Me.CommandButton127)
     Call SET_BTN(True, Me.CommandButton137)
     Call SET_BTN(True, Me.CommandButton148)
     Call SET_BTN(True, Me.CommandButton159)
  Case 1
     Call SET_LISTBOX(AR_LIST, Me.ListBox2, Me.Label64, Me.Label65, Me.Label66, Me.Label67, Me.CommandButton55, Me.CommandButton56, Me.CommandButton108)
     Call SET_BTN(True, Me.CommandButton128)
     Call SET_BTN(True, Me.CommandButton138)
     Call SET_BTN(True, Me.CommandButton149)
     Call SET_BTN(True, Me.CommandButton160)
  Case 2
     Call SET_LISTBOX(AR_LIST, Me.ListBox3, Me.Label68, Me.Label69, Me.Label70, Me.Label71, Me.CommandButton57, Me.CommandButton58, Me.CommandButton109)
     Call SET_BTN(True, Me.CommandButton129)
     Call SET_BTN(True, Me.CommandButton139)
     Call SET_BTN(True, Me.CommandButton150)
     Call SET_BTN(True, Me.CommandButton161)
  Case 3
     Call SET_LISTBOX(AR_LIST, Me.ListBox4, Me.Label72, Me.Label73, Me.Label74, Me.Label75, Me.CommandButton59, Me.CommandButton60, Me.CommandButton110)
     Call SET_BTN(True, Me.CommandButton130)
     Call SET_BTN(True, Me.CommandButton140)
     Call SET_BTN(True, Me.CommandButton151)
     Call SET_BTN(True, Me.CommandButton162)
  Case 4
     Call SET_LISTBOX(AR_LIST, Me.ListBox5, Me.Label76, Me.Label77, Me.Label78, Me.Label79, Me.CommandButton61, Me.CommandButton62, Me.CommandButton111)
     Call SET_BTN(True, Me.CommandButton131)
     Call SET_BTN(True, Me.CommandButton141)
     Call SET_BTN(True, Me.CommandButton152)
     Call SET_BTN(True, Me.CommandButton163)
  Case 5
     Call SET_LISTBOX(AR_LIST, Me.ListBox6, Me.Label80, Me.Label81, Me.Label82, Me.Label83, Me.CommandButton63, Me.CommandButton64, Me.CommandButton112)
     Call SET_BTN(True, Me.CommandButton132)
     Call SET_BTN(True, Me.CommandButton142)
     Call SET_BTN(True, Me.CommandButton153)
     Call SET_BTN(True, Me.CommandButton164)
  Case 6
     Call SET_LISTBOX(AR_LIST, Me.ListBox7, Me.Label84, Me.Label85, Me.Label86, Me.Label87, Me.CommandButton65, Me.CommandButton66, Me.CommandButton113)
     Call SET_BTN(True, Me.CommandButton133)
     Call SET_BTN(True, Me.CommandButton143)
     Call SET_BTN(True, Me.CommandButton154)
     Call SET_BTN(True, Me.CommandButton165)
  Case 7
     Call SET_LISTBOX(AR_LIST, Me.ListBox8, Me.Label88, Me.Label89, Me.Label90, Me.Label91, Me.CommandButton67, Me.CommandButton68, Me.CommandButton114)
     Call SET_BTN(True, Me.CommandButton134)
     Call SET_BTN(True, Me.CommandButton144)
     Call SET_BTN(True, Me.CommandButton155)
     Call SET_BTN(True, Me.CommandButton166)
  Case 8
     Call SET_LISTBOX(AR_LIST, Me.ListBox9, Me.Label92, Me.Label93, Me.Label94, Me.Label95, Me.CommandButton69, Me.CommandButton70, Me.CommandButton115)
     Call SET_BTN(True, Me.CommandButton135)
     Call SET_BTN(True, Me.CommandButton145)
     Call SET_BTN(True, Me.CommandButton156)
     Call SET_BTN(True, Me.CommandButton167)
  Case 9
     Call SET_LISTBOX(AR_LIST, Me.ListBox10, Me.Label96, Me.Label97, Me.Label98, Me.Label99, Me.CommandButton71, Me.CommandButton72, Me.CommandButton116)
     Call SET_BTN(True, Me.CommandButton136)
     Call SET_BTN(True, Me.CommandButton146)
     Call SET_BTN(True, Me.CommandButton157)
     Call SET_BTN(True, Me.CommandButton168)
  End Select

  Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText = Me.ComboBox1.Value
  If W_ATEXT <> "" Then
     Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = W_ATEXT
  Else
     Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = ""
  End If
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 246.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 349.5
     ElseIf Me.Height <= 349.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 349.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 180.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 283.5
     ElseIf Me.Height <= 283.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 283.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 160.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 263.5
     ElseIf Me.Height <= 263.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 263.5
        Call SET_LISTBOX_DFT
     End If
  End If
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  hwnd = GetActiveWindow
#If Win64 Then
  SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
  SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If

  DrawMenuBar hwnd
  
  W_ADJ = Me.Height - Me.InsideHeight - 29
  Me.Height = Me.Height + W_ADJ
  
  W_ADJ = Me.Width - Me.InsideWidth - 12
  Me.Width = Me.Width + W_ADJ
  
  IDX = W_1STFIDX
  If IsError(Worksheets(W_1STFS).ProtectContents) = True Then
  Else
     Sheets(W_1STFS).Select
  End If
  R = W_1STFR
  C = W_1STFC
  Call FIND_ACTV

End Sub

Private Sub SET_LISTBOX(AR_LIST, W_LISTBOX As Object, W_LABEL1 As Object, W_LABEL2 As Object, W_LABEL3 As Object, W_LABEL4 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  SW_SEL = False
  With W_LISTBOX
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "25;100;50;300"
     .Tag = ActiveWorkbook.Name
     .ListIndex = 0
     .Visible = True
     .MultiSelect = 2
     .Selected(0) = True
     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     If Me.CheckBox3.Value = True Then
        W_LABEL3.Caption = "Value"
     Else
        W_LABEL3.Caption = "Formula"
     End If
     W_LABEL4.Caption = W_CNTFA & " cell(s) found"
  Else
     If Me.CheckBox3.Value = True Then
        W_LABEL3.Caption = "|fffd|l"
     Else
        W_LABEL3.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     W_LABEL4.Caption = W_CNTFA & "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  W_LABEL1.Tag = Me.CheckBox1.Value
  W_LABEL2.Tag = SW_ADDDENY
  W_LABEL3.Tag = Me.CheckBox3.Value
  W_LABEL1.Left = 30
  W_LABEL2.Left = 132
  W_LABEL3.Left = 180
  W_LABEL1.Visible = True
  W_LABEL2.Visible = True
  W_LABEL3.Visible = True
  W_BUTTON1.Visible = True
  W_BUTTON1.Enabled = True
  W_BUTTON2.Visible = True
  W_BUTTON3.Visible = False

End Sub

Private Sub SET_BTN(ByVal SW_VSBL As Boolean, W_BTN1 As Object)

  W_BTN1.Visible = SW_VSBL

End Sub

Private Sub SET_LISTBOX_DFT()

  Me.ListBox1.Height = 48.1
  Me.ListBox2.Height = 48.1
  Me.ListBox3.Height = 48.1
  Me.ListBox4.Height = 48.1
  Me.ListBox5.Height = 48.1
  Me.ListBox6.Height = 48.1
  Me.ListBox7.Height = 48.1
  Me.ListBox8.Height = 48.1
  Me.ListBox9.Height = 48.1
  Me.ListBox10.Height = 48.1

End Sub

Private Sub ALL_FIND_S()
  
  Dim AR_LIST() As String
  Dim I As Long
  Dim W_1STS As Long
  Dim W_1STN As String
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  ReDim Preserve AR_AFS(AFN)
  ReDim Preserve AR_AFN(AFN)
  ReDim Preserve AR_AFV(AFN)
  
  ReDim AR_LIST(0 To AFN - 1, 0 To 3)
  
  For I = 1 To AFN
     AR_LIST(I - 1, 0) = AR_AFR(I)
     If I = 1 Then
        AR_LIST(I - 1, 1) = Sheets(AR_AFS(I)).Name
        W_1STS = AR_AFS(I)
        W_1STN = AR_AFN(I)
        On Error Resume Next
        Sheets(W_1STS).Select
        If Sheets(W_1STS).Shapes(W_1STN).Type = msoComment And _
           Sheets(W_1STS).Shapes(W_1STN).Visible = msoFalse Then
           Sheets(W_1STS).Shapes(W_1STN).Parent.Comments(1).Parent.Cells(1).Select
        Else
           Sheets(W_1STS).Shapes(W_1STN).Select
        End If
        On Error GoTo 0
        AppActivate (Me.Caption)
     Else
        If AR_AFS(I) = AR_AFS(I - 1) Then
           AR_LIST(I - 1, 1) = AR_LIST(I - 2, 1)
        Else
           AR_LIST(I - 1, 1) = Sheets(AR_AFS(I)).Name
        End If
     End If
     AR_LIST(I - 1, 2) = AR_AFN(I)
     AR_LIST(I - 1, 3) = AR_AFV(I)
  Next I
  
  Erase AR_AFS
  Erase AR_AFN
  Erase AR_AFV
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 349.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 283.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 263.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  Me.MultiPage5.Visible = False
  Me.MultiPage2.Visible = True
  Select Case Me.MultiPage2.Value
  Case 0
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox1, Me.Label10, Me.Label11, Me.Label12, Me.Label9, Me.CommandButton52, Me.CommandButton53, Me.CommandButton107)
     Call SET_BTN(False, Me.CommandButton127)
     Call SET_BTN(False, Me.CommandButton137)
     Call SET_BTN(False, Me.CommandButton148)
     Call SET_BTN(False, Me.CommandButton159)
  Case 1
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox2, Me.Label64, Me.Label65, Me.Label66, Me.Label67, Me.CommandButton55, Me.CommandButton56, Me.CommandButton108)
     Call SET_BTN(False, Me.CommandButton128)
     Call SET_BTN(False, Me.CommandButton138)
     Call SET_BTN(False, Me.CommandButton149)
     Call SET_BTN(False, Me.CommandButton160)
  Case 2
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox3, Me.Label68, Me.Label69, Me.Label70, Me.Label71, Me.CommandButton57, Me.CommandButton58, Me.CommandButton109)
     Call SET_BTN(False, Me.CommandButton129)
     Call SET_BTN(False, Me.CommandButton139)
     Call SET_BTN(False, Me.CommandButton150)
     Call SET_BTN(False, Me.CommandButton161)
  Case 3
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox4, Me.Label72, Me.Label73, Me.Label74, Me.Label75, Me.CommandButton59, Me.CommandButton60, Me.CommandButton110)
     Call SET_BTN(False, Me.CommandButton130)
     Call SET_BTN(False, Me.CommandButton140)
     Call SET_BTN(False, Me.CommandButton151)
     Call SET_BTN(False, Me.CommandButton162)
  Case 4
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox5, Me.Label76, Me.Label77, Me.Label78, Me.Label79, Me.CommandButton61, Me.CommandButton62, Me.CommandButton111)
     Call SET_BTN(False, Me.CommandButton131)
     Call SET_BTN(False, Me.CommandButton141)
     Call SET_BTN(False, Me.CommandButton152)
     Call SET_BTN(False, Me.CommandButton163)
  Case 5
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox6, Me.Label80, Me.Label81, Me.Label82, Me.Label83, Me.CommandButton63, Me.CommandButton64, Me.CommandButton112)
     Call SET_BTN(False, Me.CommandButton132)
     Call SET_BTN(False, Me.CommandButton142)
     Call SET_BTN(False, Me.CommandButton153)
     Call SET_BTN(False, Me.CommandButton164)
  Case 6
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox7, Me.Label84, Me.Label85, Me.Label86, Me.Label87, Me.CommandButton65, Me.CommandButton66, Me.CommandButton113)
     Call SET_BTN(False, Me.CommandButton133)
     Call SET_BTN(False, Me.CommandButton143)
     Call SET_BTN(False, Me.CommandButton154)
     Call SET_BTN(False, Me.CommandButton165)
  Case 7
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox8, Me.Label88, Me.Label89, Me.Label90, Me.Label91, Me.CommandButton67, Me.CommandButton68, Me.CommandButton114)
     Call SET_BTN(False, Me.CommandButton134)
     Call SET_BTN(False, Me.CommandButton144)
     Call SET_BTN(False, Me.CommandButton155)
     Call SET_BTN(False, Me.CommandButton166)
  Case 8
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox9, Me.Label92, Me.Label93, Me.Label94, Me.Label95, Me.CommandButton69, Me.CommandButton70, Me.CommandButton115)
     Call SET_BTN(False, Me.CommandButton135)
     Call SET_BTN(False, Me.CommandButton145)
     Call SET_BTN(False, Me.CommandButton156)
     Call SET_BTN(False, Me.CommandButton167)
  Case 9
     Call SET_LISTBOX_S(AR_LIST, Me.ListBox10, Me.Label96, Me.Label97, Me.Label98, Me.Label99, Me.CommandButton71, Me.CommandButton72, Me.CommandButton116)
     Call SET_BTN(False, Me.CommandButton136)
     Call SET_BTN(False, Me.CommandButton146)
     Call SET_BTN(False, Me.CommandButton157)
     Call SET_BTN(False, Me.CommandButton168)
  End Select

  Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText = Me.ComboBox1.Value
  If W_ATEXT <> "" Then
     Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = W_ATEXT
  Else
     Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = ""
  End If
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 246.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 349.5
     ElseIf Me.Height <= 349.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 349.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 180.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 283.5
     ElseIf Me.Height <= 283.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 283.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 160.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 263.5
     ElseIf Me.Height <= 263.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 263.5
     End If
  End If

  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  hwnd = GetActiveWindow
#If Win64 Then
  SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
  SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If
  DrawMenuBar hwnd
  
  W_ADJ = Me.Height - Me.InsideHeight - 29
  Me.Height = Me.Height + W_ADJ
  
  W_ADJ = Me.Width - Me.InsideWidth - 12
  Me.Width = Me.Width + W_ADJ
  
End Sub

Private Sub SET_LISTBOX_S(AR_LIST, W_LISTBOX As Object, W_LABEL1 As Object, W_LABEL2 As Object, W_LABEL3 As Object, W_LABEL4 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  SW_SEL = False
  With W_LISTBOX
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "0;100;75;300"
     .Tag = ActiveWorkbook.Name
     .ListIndex = 0
     .Visible = True
     .MultiSelect = 2
     .Selected(0) = True
     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     W_LABEL2.Caption = "Name"
     W_LABEL3.Caption = "Value"
     W_LABEL4.Caption = W_CNTFA & " item(s) found"
  Else
     W_LABEL2.Caption = "|fffd||fffd||fffd|O"
     W_LABEL3.Caption = "|fffd|l"
     W_LABEL4.Caption = W_CNTFA & "|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  W_LABEL1.Left = 0
  W_LABEL2.Left = 102
  W_LABEL3.Left = 180
  W_LABEL1.Visible = True
  W_LABEL2.Visible = True
  W_LABEL3.Visible = True
  W_BUTTON1.Visible = False
  W_BUTTON1.Enabled = False
  W_BUTTON2.Visible = False
  W_BUTTON3.Visible = False
  W_LISTBOX.SetFocus

End Sub

Private Sub ALL_FIND_V(ACP As Object, ByVal V As Long)
  
  Dim AR_LIST() As String
  Dim I As Long
  Dim W_1STS As Long
  Dim W_1STN As String
  Dim W_AR As Variant
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  ReDim Preserve AR_AFS(AFN)
  ReDim Preserve AR_AFN(AFN)
  ReDim Preserve AR_AFV(AFN)
  
  ReDim AR_LIST(0 To AFN - 1, 0 To 3)
  
  For I = 1 To AFN
     AR_LIST(I - 1, 0) = ""
     If I = 1 Then
        ACP.CodeModule.Parent.Activate
        AR_LIST(I - 1, 1) = Application.VBE.VBProjects(V).VBComponents(AR_AFS(I)).Name
        W_1STS = AR_AFS(I)
        W_1STN = AR_AFN(I)
        W_AR = Split(W_1STN, ":")
        On Error Resume Next
        
        Application.VBE.VBProjects(V).VBComponents(W_1STS).CodeModule.CodePane.Show
        ACP.SetSelection CLng(W_AR(0)), CLng(W_AR(1)), CLng(W_AR(0)), CLng(W_AR(2))
        On Error GoTo 0
        AppActivate (Me.Caption)
     Else
        If AR_AFS(I) = AR_AFS(I - 1) Then
           AR_LIST(I - 1, 1) = AR_LIST(I - 2, 1)
        Else
           ACP.CodeModule.Parent.Activate
           AR_LIST(I - 1, 1) = Application.VBE.VBProjects(V).VBComponents(AR_AFS(I)).Name
        End If
     End If
     AR_LIST(I - 1, 2) = AR_AFN(I)
     AR_LIST(I - 1, 3) = AR_AFV(I)
  Next I
  
  Erase AR_AFS
  Erase AR_AFN
  Erase AR_AFV
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 349.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 283.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 263.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  Me.MultiPage5.Visible = False
  Me.MultiPage2.Visible = True
  Select Case Me.MultiPage2.Value
  Case 0
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox1, Me.Label10, Me.Label11, Me.Label12, Me.Label9, Me.CommandButton52, Me.CommandButton53, Me.CommandButton107)
     Call SET_BTN(False, Me.CommandButton127)
     Call SET_BTN(False, Me.CommandButton137)
     Call SET_BTN(False, Me.CommandButton148)
     Call SET_BTN(False, Me.CommandButton159)
  Case 1
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox2, Me.Label64, Me.Label65, Me.Label66, Me.Label67, Me.CommandButton55, Me.CommandButton56, Me.CommandButton108)
     Call SET_BTN(False, Me.CommandButton128)
     Call SET_BTN(False, Me.CommandButton138)
     Call SET_BTN(False, Me.CommandButton149)
     Call SET_BTN(False, Me.CommandButton160)
  Case 2
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox3, Me.Label68, Me.Label69, Me.Label70, Me.Label71, Me.CommandButton57, Me.CommandButton58, Me.CommandButton109)
     Call SET_BTN(False, Me.CommandButton129)
     Call SET_BTN(False, Me.CommandButton139)
     Call SET_BTN(False, Me.CommandButton150)
     Call SET_BTN(False, Me.CommandButton161)
  Case 3
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox4, Me.Label72, Me.Label73, Me.Label74, Me.Label75, Me.CommandButton59, Me.CommandButton60, Me.CommandButton110)
     Call SET_BTN(False, Me.CommandButton130)
     Call SET_BTN(False, Me.CommandButton140)
     Call SET_BTN(False, Me.CommandButton151)
     Call SET_BTN(False, Me.CommandButton162)
  Case 4
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox5, Me.Label76, Me.Label77, Me.Label78, Me.Label79, Me.CommandButton61, Me.CommandButton62, Me.CommandButton111)
     Call SET_BTN(False, Me.CommandButton131)
     Call SET_BTN(False, Me.CommandButton141)
     Call SET_BTN(False, Me.CommandButton152)
     Call SET_BTN(False, Me.CommandButton163)
  Case 5
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox6, Me.Label80, Me.Label81, Me.Label82, Me.Label83, Me.CommandButton63, Me.CommandButton64, Me.CommandButton112)
     Call SET_BTN(False, Me.CommandButton132)
     Call SET_BTN(False, Me.CommandButton142)
     Call SET_BTN(False, Me.CommandButton153)
     Call SET_BTN(False, Me.CommandButton164)
  Case 6
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox7, Me.Label84, Me.Label85, Me.Label86, Me.Label87, Me.CommandButton65, Me.CommandButton66, Me.CommandButton113)
     Call SET_BTN(False, Me.CommandButton133)
     Call SET_BTN(False, Me.CommandButton143)
     Call SET_BTN(False, Me.CommandButton154)
     Call SET_BTN(False, Me.CommandButton165)
  Case 7
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox8, Me.Label88, Me.Label89, Me.Label90, Me.Label91, Me.CommandButton67, Me.CommandButton68, Me.CommandButton114)
     Call SET_BTN(False, Me.CommandButton134)
     Call SET_BTN(False, Me.CommandButton144)
     Call SET_BTN(False, Me.CommandButton155)
     Call SET_BTN(False, Me.CommandButton166)
  Case 8
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox9, Me.Label92, Me.Label93, Me.Label94, Me.Label95, Me.CommandButton69, Me.CommandButton70, Me.CommandButton115)
     Call SET_BTN(False, Me.CommandButton135)
     Call SET_BTN(False, Me.CommandButton145)
     Call SET_BTN(False, Me.CommandButton156)
     Call SET_BTN(False, Me.CommandButton167)
  Case 9
     Call SET_LISTBOX_V(ACP, V, AR_LIST, Me.ListBox10, Me.Label96, Me.Label97, Me.Label98, Me.Label99, Me.CommandButton71, Me.CommandButton72, Me.CommandButton116)
     Call SET_BTN(False, Me.CommandButton136)
     Call SET_BTN(False, Me.CommandButton146)
     Call SET_BTN(False, Me.CommandButton157)
     Call SET_BTN(False, Me.CommandButton168)
  End Select

  Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText = Me.ComboBox1.Value
  Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = ""
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 246.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 349.5
     ElseIf Me.Height <= 349.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 349.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 180.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 283.5
     ElseIf Me.Height <= 283.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 283.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 160.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 263.5
     ElseIf Me.Height <= 263.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 263.5
     End If
  End If

  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  hwnd = GetActiveWindow
#If Win64 Then
  SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
  SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If
  DrawMenuBar hwnd
  
  W_ADJ = Me.Height - Me.InsideHeight - 29
  Me.Height = Me.Height + W_ADJ
  
  W_ADJ = Me.Width - Me.InsideWidth - 12
  Me.Width = Me.Width + W_ADJ
  
End Sub

Private Sub SET_LISTBOX_V(ACP As Object, ByVal V As Long, AR_LIST, W_LISTBOX As Object, W_LABEL1 As Object, W_LABEL2 As Object, W_LABEL3 As Object, W_LABEL4 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  SW_SEL = False
  With W_LISTBOX
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "0;100;75;300"
     ACP.CodeModule.Parent.Activate
     .Tag = Application.VBE.VBProjects(V).Filename
     .ListIndex = 0
     .Visible = True
     .MultiSelect = 0
     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     W_LABEL2.Caption = "Pos"
     W_LABEL3.Caption = "Value"
     W_LABEL4.Caption = AFN & " item(s) found"
  Else
     W_LABEL2.Caption = "|fffd||292|u"
     W_LABEL3.Caption = "|fffd|l"
     W_LABEL4.Caption = AFN & "|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  W_LABEL1.Left = 0
  W_LABEL2.Left = 102
  W_LABEL3.Left = 180
  W_LABEL1.Visible = True
  W_LABEL2.Visible = True
  W_LABEL3.Visible = True
  W_BUTTON1.Visible = False
  W_BUTTON1.Enabled = False
  W_BUTTON2.Visible = False
  W_BUTTON3.Visible = False
  W_LISTBOX.SetFocus

End Sub

Private Sub ALL_FIND_P()

  Dim AR_LIST() As String
  Dim I As Long
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  Dim W_OS As String
  
  Dim W_ADJ As Double
  
  Const WS_THICKFRAME = &H40000 '|fffd|T|fffd|C|fffd|Y|fffd||3cd|X
  Const WS_MINIMIZEBOX = &H20000 '|fffd||14f||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|
  Const GWL_STYLE = (-16)
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  ReDim Preserve AR_AFS(AFN)
  ReDim Preserve AR_AFR(AFN)
  ReDim Preserve AR_AFC(AFN)
  ReDim Preserve AR_AFV(AFN)
  
  ReDim AR_LIST(0 To AFN - 1, 0 To 3)
  
  For I = 1 To AFN
     AR_LIST(I - 1, 0) = ""
     If I = 1 Then
        AR_LIST(I - 1, 1) = ActiveWorkbook.Sheets(AR_AFS(I)).Name
     Else
        If AR_AFS(I) = AR_AFS(I - 1) Then
           AR_LIST(I - 1, 1) = AR_LIST(I - 2, 1)
        Else
           AR_LIST(I - 1, 1) = ActiveWorkbook.Sheets(AR_AFS(I)).Name
        End If
     End If
     AR_LIST(I - 1, 2) = ActiveWorkbook.Sheets(AR_AFS(I)).Cells(AR_AFR(I), AR_AFC(I)).Address
     AR_LIST(I - 1, 3) = AR_AFV(I)
  Next I
  
  ActiveWorkbook.Sheets(AR_AFS(1)).Cells(AR_AFR(1), AR_AFC(1)).Activate
  
  Erase AR_AFS
  Erase AR_AFR
  Erase AR_AFC
  Erase AR_AFV
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 349.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 283.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 263.5 Then
        Call SET_LISTBOX_DFT
     End If
  End If
  
  Me.MultiPage5.Visible = False
  Me.MultiPage2.Visible = True
  Select Case Me.MultiPage2.Value
  Case 0
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox1, Me.Label10, Me.Label11, Me.Label12, Me.Label9, Me.CommandButton52, Me.CommandButton53, Me.CommandButton107)
     Call SET_BTN(False, Me.CommandButton127)
     Call SET_BTN(False, Me.CommandButton137)
     Call SET_BTN(False, Me.CommandButton148)
     Call SET_BTN(False, Me.CommandButton159)
  Case 1
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox2, Me.Label64, Me.Label65, Me.Label66, Me.Label67, Me.CommandButton55, Me.CommandButton56, Me.CommandButton108)
     Call SET_BTN(False, Me.CommandButton128)
     Call SET_BTN(False, Me.CommandButton138)
     Call SET_BTN(False, Me.CommandButton149)
     Call SET_BTN(False, Me.CommandButton160)
  Case 2
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox3, Me.Label68, Me.Label69, Me.Label70, Me.Label71, Me.CommandButton57, Me.CommandButton58, Me.CommandButton109)
     Call SET_BTN(False, Me.CommandButton129)
     Call SET_BTN(False, Me.CommandButton139)
     Call SET_BTN(False, Me.CommandButton150)
     Call SET_BTN(False, Me.CommandButton161)
  Case 3
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox4, Me.Label72, Me.Label73, Me.Label74, Me.Label75, Me.CommandButton59, Me.CommandButton60, Me.CommandButton110)
     Call SET_BTN(False, Me.CommandButton130)
     Call SET_BTN(False, Me.CommandButton140)
     Call SET_BTN(False, Me.CommandButton151)
     Call SET_BTN(False, Me.CommandButton162)
  Case 4
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox5, Me.Label76, Me.Label77, Me.Label78, Me.Label79, Me.CommandButton61, Me.CommandButton62, Me.CommandButton111)
     Call SET_BTN(False, Me.CommandButton131)
     Call SET_BTN(False, Me.CommandButton141)
     Call SET_BTN(False, Me.CommandButton152)
     Call SET_BTN(False, Me.CommandButton163)
  Case 5
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox6, Me.Label80, Me.Label81, Me.Label82, Me.Label83, Me.CommandButton63, Me.CommandButton64, Me.CommandButton112)
     Call SET_BTN(False, Me.CommandButton132)
     Call SET_BTN(False, Me.CommandButton142)
     Call SET_BTN(False, Me.CommandButton153)
     Call SET_BTN(False, Me.CommandButton164)
  Case 6
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox7, Me.Label84, Me.Label85, Me.Label86, Me.Label87, Me.CommandButton65, Me.CommandButton66, Me.CommandButton113)
     Call SET_BTN(False, Me.CommandButton133)
     Call SET_BTN(False, Me.CommandButton143)
     Call SET_BTN(False, Me.CommandButton154)
     Call SET_BTN(False, Me.CommandButton165)
  Case 7
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox8, Me.Label88, Me.Label89, Me.Label90, Me.Label91, Me.CommandButton67, Me.CommandButton68, Me.CommandButton114)
     Call SET_BTN(False, Me.CommandButton134)
     Call SET_BTN(False, Me.CommandButton144)
     Call SET_BTN(False, Me.CommandButton155)
     Call SET_BTN(False, Me.CommandButton166)
  Case 8
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox9, Me.Label92, Me.Label93, Me.Label94, Me.Label95, Me.CommandButton69, Me.CommandButton70, Me.CommandButton115)
     Call SET_BTN(False, Me.CommandButton135)
     Call SET_BTN(False, Me.CommandButton145)
     Call SET_BTN(False, Me.CommandButton156)
     Call SET_BTN(False, Me.CommandButton167)
  Case 9
     Call SET_LISTBOX_P(AR_LIST, Me.ListBox10, Me.Label96, Me.Label97, Me.Label98, Me.Label99, Me.CommandButton71, Me.CommandButton72, Me.CommandButton116)
     Call SET_BTN(False, Me.CommandButton136)
     Call SET_BTN(False, Me.CommandButton146)
     Call SET_BTN(False, Me.CommandButton157)
     Call SET_BTN(False, Me.CommandButton168)
  End Select

  Me.MultiPage2.Pages(Me.MultiPage2.Value).ControlTipText = ""
  Me.MultiPage2.Pages(Me.MultiPage2.Value).Tag = ""
  
  If Me.ToggleButton1.Value = False Then
     If Me.Height <= 246.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 349.5
     ElseIf Me.Height <= 349.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 349.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = False Then
     If Me.Height <= 180.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 283.5
     ElseIf Me.Height <= 283.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 283.5
     End If
  End If
  
  If Me.ToggleButton1.Value = True And _
     Me.ToggleButton2.Value = True Then
     If Me.Height <= 160.5 Then
        hwnd = FindWindow(vbNullString, Me.Caption)
        If IsIconic(hwnd) = 1 Then
           ShowWindow hwnd, SW_SHOWNORMAL
        End If
        Me.Height = 263.5
     ElseIf Me.Height <= 263.5 Then
        Me.Height = Me.Height - 0.1
        Me.Height = 263.5
        Call SET_LISTBOX_DFT
     End If
  End If
  
  'WINDOWS|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||64fe|
  If SW_NRC = False Then
     Set Locator = CreateObject("WbemScripting.SWbemLocator")
     Set Service = Locator.ConnectServer
     Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
     W_OS = ""
     For Each os In OsSet
        W_OS = W_OS & os.Caption & " " & os.Version
     Next os
     Set Service = Nothing
     Set OsSet = Nothing
     Set Locator = Nothing
  End If
  
  hwnd = GetActiveWindow
#If Win64 Then
  SetWindowLongPtr hwnd, GWL_STYLE, GetWindowLongPtr(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#Else
  SetWindowLong hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) Or WS_THICKFRAME Or WS_MINIMIZEBOX
#End If

  DrawMenuBar hwnd
  
  W_ADJ = Me.Height - Me.InsideHeight - 29
  Me.Height = Me.Height + W_ADJ
  
  W_ADJ = Me.Width - Me.InsideWidth - 12
  Me.Width = Me.Width + W_ADJ
  
End Sub

Private Sub SET_LISTBOX_P(AR_LIST, W_LISTBOX As Object, W_LABEL1 As Object, W_LABEL2 As Object, W_LABEL3 As Object, W_LABEL4 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  SW_SEL = False
  With W_LISTBOX
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "25;100;50;300"
     .Tag = ActiveWorkbook.Name
     .ListIndex = 0
     .Visible = True
     .MultiSelect = 2
     .Selected(0) = True
     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     W_LABEL3.Caption = "Value"
     W_LABEL4.Caption = AFN & " cell(s) found"
  Else
     W_LABEL3.Caption = "|fffd|l"
     W_LABEL4.Caption = AFN & "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  W_LABEL1.Tag = ""
  W_LABEL2.Tag = ""
  W_LABEL3.Tag = ""
  W_LABEL1.Left = 30
  W_LABEL2.Left = 132
  W_LABEL3.Left = 180
  W_LABEL1.Visible = True
  W_LABEL2.Visible = True
  W_LABEL3.Visible = True
  W_BUTTON1.Visible = False
  W_BUTTON1.Enabled = True
  W_BUTTON2.Visible = False
  W_BUTTON3.Visible = True

End Sub

Private Sub COMBO_FOCUS2()
  
  If SW_IS = False Then
     With Me.ComboBox59
        .SelStart = 0
        .SelLength = Len(.Value)
        .SetFocus
     End With
  End If

End Sub

Sub REP_ASK(ByVal SW_FRA As Long)

  Dim W_FORMH As Double
  Dim W_FORMW As Double
  Dim W_FORMT As Double
  Dim W_FORML As Double
  Dim W_BUTTON As Long

  Application.ScreenUpdating = True
  W_FORMH = Me.Height
  W_FORMW = Me.Width
  W_FORMT = Me.Top
  W_FORML = Me.Left
  SW_UF3 = True
  Me.Height = 0
  Me.Width = 0
  Me.Top = 999999
  Me.Left = 0
  W_PAGEN = Me.MultiPage1.Pages(Me.MultiPage1.Value).Name
  
  Me.CheckBox12.Tag = CStr(SW_FRA)
  UserForm3.Show
  
  Me.Height = W_FORMH
  Me.Width = W_FORMW
  Me.Top = W_FORMT
  Me.Left = W_FORML
  SW_UF3 = False
  Application.ScreenUpdating = False

End Sub

Private Sub RCLICK_MENU_MAKE()

  '|fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||752||fffd|
  
  Dim myBar1 As Variant
  Dim myBar2 As Variant
  Dim myBar3 As Variant
  Dim myBar4 As Variant
  Dim myBar5 As Variant
  Dim myBar6 As Variant
  Dim myBar7 As Variant
  Dim myBar9 As Variant
  Dim myBar10 As Variant
  Dim myBar11 As Variant
  Dim myBar12 As Variant
  Dim myBar13 As Variant
  Dim myBar14 As Variant
  Dim C As Object
  
  
  Set myBar1 = Nothing
  On Error Resume Next
  Set myBar1 = Application.CommandBars("EREPU1")
  On Error GoTo 0
  
  If Val(Application.Version) >= 15 And _
     Application.Visible = True And _
     Workbooks.count = 0 Then
     Workbooks.Add
     Workbooks(1).Close False
  End If
  
  If myBar1 Is Nothing Then
  Else
     If SW_LGCHG = True Then
        For Each C In CommandBars
           If C.Name = "EREPU1" Or _
              C.Name = "EREPU2" Or _
              C.Name = "EREPU3" Or _
              C.Name = "EREPU4" Or _
              C.Name = "EREPU5" Or _
              C.Name = "EREPU6" Or _
              C.Name = "EREPU7" Or _
              C.Name = "EREPU8" Or _
              C.Name = "EREPU9" Or _
              C.Name = "EREPU10" Or _
              C.Name = "EREPU11" Or _
              C.Name = "EREPU12" Or _
              C.Name = "EREPU13" Or _
              C.Name = "EREPU14" Then
              C.Delete
           End If
        Next C
     Else
        Exit Sub
     End If
  End If
  
  On Error Resume Next
  
  Set myBar1 = CommandBars.Add(Name:="EREPU1", Position:=msoBarPopup, Temporary:=True)
  With myBar1
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
          .Caption = "Cut"
        Else
          .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_REFLIST"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_REFLIST"
        .FaceId = 2989
     End With
     
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_REFLIST"
        .FaceId = 358
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Position"
           Else
              .Caption = "|fffd||292|u"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "^     Top"
              Else
                 .Caption = "^     |fffd||64ea|"
              End If
              .OnAction = "RCLICK_RE101"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "$     Last"
              Else
                 .Caption = "$     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE102"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\b    Word Boundary"
              Else
                 .Caption = "\b    |fffd|P|fffd||a2eb||fffd|E"
              End If
              .OnAction = "RCLICK_RE103"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\B    Not Word Boundary"
              Else
                 .Caption = "\B    |fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE104"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Literal"
           Else
              .Caption = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     New Line"
              Else
                 .Caption = "\n     |fffd||fffd||fffd|s"
              End If
              .OnAction = "RCLICK_RE201"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\t     Tab"
              Else
                 .Caption = "\t     |fffd|^|fffd|u"
              End If
              .OnAction = "RCLICK_RE202"
           End With
           With .Controls.Add
              .Caption = "\?     ?"
              .OnAction = "RCLICK_RE203"
           End With
           With .Controls.Add
              .Caption = "\*     *"
              .OnAction = "RCLICK_RE204"
           End With
           With .Controls.Add
              .Caption = "\+     +"
              .OnAction = "RCLICK_RE205"
           End With
           With .Controls.Add
              .Caption = "\.     ."
              .OnAction = "RCLICK_RE206"
           End With
           With .Controls.Add
              .Caption = "\|     |"
              .OnAction = "RCLICK_RE207"
           End With
           With .Controls.Add
              .Caption = "\{     {"
              .OnAction = "RCLICK_RE208"
           End With
           With .Controls.Add
              .Caption = "\}     }"
              .OnAction = "RCLICK_RE209"
           End With
           With .Controls.Add
              .Caption = "\\     \"
              .OnAction = "RCLICK_RE210"
           End With
           With .Controls.Add
              .Caption = "\[     ["
              .OnAction = "RCLICK_RE211"
           End With
           With .Controls.Add
              .Caption = "\]     ]"
              .OnAction = "RCLICK_RE212"
           End With
           With .Controls.Add
              .Caption = "\(     ("
              .OnAction = "RCLICK_RE213"
           End With
           With .Controls.Add
              .Caption = "\)     )"
              .OnAction = "RCLICK_RE214"
           End With
           With .Controls.Add
              .Caption = "\$     $"
              .OnAction = "RCLICK_RE215"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Character Class"
           Else
              .Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[]      Any Character Set"
              Else
                 .Caption = "[]      |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE301"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[^]     Any Not Character Set"
              Else
                 .Caption = "[^]     |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE302"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = ".       Any Character"
              Else
                 .Caption = ".       |fffd|C|fffd||fffd|1|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE303"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\w      Any Word Character"
              Else
                 .Caption = "\w      |fffd|P|fffd||fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE304"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\W      Any Not Word Character"
              Else
                 .Caption = "\W      |fffd|P|fffd||fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE305"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\d      Any Number Character"
              Else
                 .Caption = "\d      |fffd|C|fffd||4c2||310||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE306"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\D      Any Not Number Character"
              Else
                 .Caption = "\D      |fffd|C|fffd||4c2||310||fffd||fffd||fffd||fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE307"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\s      Any Space Character"
              Else
                 .Caption = "\s      |fffd|C|fffd||4c2||303|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE308"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\S      Any Not Space Character"
              Else
                 .Caption = "\S      |fffd|C|fffd||4c2||314||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE309"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Repeat"
           Else
              .Caption = "|fffd|J|fffd||fffd||502||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x]       x Times"
              Else
                 .Caption = "[x]       x|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE401"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,]      More Than x Times"
              Else
                 .Caption = "[x,]      x|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE402"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,y]     More Than x Times and Less Than y Times"
              Else
                 .Caption = "[x,y]     x|fffd||fffd||20f||fffd|y|fffd||fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE403"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         0 or 1 Times"
              Else
                 .Caption = "?         0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE404"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "*         More Than 0 Times"
              Else
                 .Caption = "*         0|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE405"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "+         More Than 1 Times"
              Else
                 .Caption = "+         1|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE406"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         The Least Repeat"
              Else
                 .Caption = "?         |fffd||152|Z|fffd||fffd|v"
              End If
              .OnAction = "RCLICK_RE407"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Grouping"
           Else
              .Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "()     Grouping"
              Else
                 .Caption = "()     |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE501"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?:)   Grouping (No Capture)"
              Else
                 .Caption = "(?:)   |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd||202||fffd||fffd|j"
              End If
              .OnAction = "RCLICK_RE502"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?=)   Positive Look Ahead"
              Else
                 .Caption = "(?=)   |fffd|m|fffd||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE503"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?!)   Negative Look Ahead"
              Else
                 .Caption = "(?!)   |fffd||6d2||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE504"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "|      Selection"
              Else
                 .Caption = "|      |fffd|I|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE505"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     Back Reference (n-th Group)"
              Else
                 .Caption = "\n     |fffd||fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
              End If
              .OnAction = "RCLICK_RE506"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<=)  Positive Look Back"
              Else
                 .Caption = "(?<=)  |fffd|m|fffd||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1001"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<!)  Negative Look Back"
              Else
                 .Caption = "(?<!)  |fffd||6d2||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1002"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<xxx>)  Named Group"
              Else
                 .Caption = "(?<xxx>)  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1003"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\k<xxx>  Named Back Reference"
              Else
                 .Caption = "\k<xxx>  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1004"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx:)  Option Changed Group"
              Else
                 .Caption = "(?imnsx-imnsx:)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1005"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx)  Option Change"
              Else
                 .Caption = "(?imnsx-imnsx)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X"
              End If
              .OnAction = "RCLICK_RE1006"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?>)  Not Backtracking Group"
              Else
                 .Caption = "(?>)  |fffd||fffd|o|fffd|b|fffd|N|fffd|g|fffd||fffd||fffd|b|fffd|L|fffd||fffd||fffd|O|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1007"
           End With
           
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?#)   Comment"
              Else
                 .Caption = "(?#)   |fffd|R|fffd||fffd||fffd||fffd||fffd|g"
              End If
              .OnAction = "RCLICK_RE1008"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Other"
           Else
              .Caption = "|fffd||fffd||fffd||311||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\Q\E  Quote Meta Character"
              Else
                 .Caption = "\Q\E  |fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|g"
              End If
              .OnAction = "RCLICK_RE1101"
           End With
        End With
     End With
  End With
  
  Set myBar2 = CommandBars.Add(Name:="EREPU2", Position:=msoBarPopup, Temporary:=True)
  With myBar2
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_REPLIST"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_REPLIST"
        .FaceId = 2989
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_REPLIST"
        .FaceId = 358
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "\n     New Line"
           Else
              .Caption = "\n     |fffd||fffd||fffd|s"
           End If
           .OnAction = "RCLICK_RE601"
        End With
        With .Controls.Add
           .Caption = "$$     $"
           .OnAction = "RCLICK_RE602"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$n     Capture Reference (n-th Group)"
           Else
              .Caption = "$n     |fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
           End If
           .OnAction = "RCLICK_RE603"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$&&     Whole Pattern"
           Else
              .Caption = "$&&     |fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|S|fffd||fffd|"
           End If
           .OnAction = "RCLICK_RE604"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$`     Before Match"
           Else
              .Caption = "$`     |fffd|}|fffd|b|fffd|`|fffd||310||fffd|s"
           End If
           .OnAction = "RCLICK_RE605"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$'     After Match"
           Else
              .Caption = "$'     |fffd|}|fffd|b|fffd|`|fffd||30c||3471|"
           End If
           .OnAction = "RCLICK_RE606"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$+     Last Group"
           Else
              .Caption = "$+     |fffd||14c||fffd||303|O|fffd||fffd||fffd|[|fffd|v"
           End If
           .OnAction = "RCLICK_RE607"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$_     Whole Input String"
           Else
              .Caption = "$_     |fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd|S|fffd||fffd|"
           End If
           .OnAction = "RCLICK_RE608"
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "${xxx}  Named Capture Reference"
              Else
                 .Caption = "${xxx}  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1201"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Special"
           Else
              .Caption = "|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[UPPER]     Upper Case"
              Else
                 .Caption = "[UPPER]     |fffd||5576||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE701"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[LOWER]     Lower Case"
              Else
                 .Caption = "[LOWER]     |fffd||fffd||fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE702"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[WIDE]        Full Size"
              Else
                 .Caption = "[WIDE]        |fffd|S|fffd|p"
              End If
              .OnAction = "RCLICK_RE703"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[NARROW]   Half Size"
              Else
                 .Caption = "[NARROW]   |fffd||fffd||fffd|p"
              End If
              .OnAction = "RCLICK_RE704"
           End With
        End With
     End With
  End With
  
  Set myBar3 = CommandBars.Add(Name:="EREPU3", Position:=msoBarPopup, Temporary:=True)
  With myBar3
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
  End With
  
  Set myBar4 = CommandBars.Add(Name:="EREPU4", Position:=msoBarPopup, Temporary:=True)
  With myBar4
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_REFLIST"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_REFLIST"
        .FaceId = 2989
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_REFLIST"
        .FaceId = 358
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Position"
           Else
              .Caption = "|fffd||292|u"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "^     Top"
              Else
                 .Caption = "^     |fffd||64ea|"
              End If
              .OnAction = "RCLICK_RE101"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "$     Last"
              Else
                 .Caption = "$     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE102"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\b    Word Boundary"
              Else
                 .Caption = "\b    |fffd|P|fffd||a2eb||fffd|E"
              End If
              .OnAction = "RCLICK_RE103"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\B    Not Word Boundary"
              Else
                 .Caption = "\B    |fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE104"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Literal"
           Else
              .Caption = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     New Line"
              Else
                 .Caption = "\n     |fffd||fffd||fffd|s"
              End If
              .OnAction = "RCLICK_RE201"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\t     Tab"
              Else
                 .Caption = "\t     |fffd|^|fffd|u"
              End If
              .OnAction = "RCLICK_RE202"
           End With
           With .Controls.Add
              .Caption = "\?     ?"
              .OnAction = "RCLICK_RE203"
           End With
           With .Controls.Add
              .Caption = "\*     *"
              .OnAction = "RCLICK_RE204"
           End With
           With .Controls.Add
              .Caption = "\+     +"
              .OnAction = "RCLICK_RE205"
           End With
           With .Controls.Add
              .Caption = "\.     ."
              .OnAction = "RCLICK_RE206"
           End With
           With .Controls.Add
              .Caption = "\|     |"
              .OnAction = "RCLICK_RE207"
           End With
           With .Controls.Add
              .Caption = "\{     {"
              .OnAction = "RCLICK_RE208"
           End With
           With .Controls.Add
              .Caption = "\}     }"
              .OnAction = "RCLICK_RE209"
           End With
           With .Controls.Add
              .Caption = "\\     \"
              .OnAction = "RCLICK_RE210"
           End With
           With .Controls.Add
              .Caption = "\[     ["
              .OnAction = "RCLICK_RE211"
           End With
           With .Controls.Add
              .Caption = "\]     ]"
              .OnAction = "RCLICK_RE212"
           End With
           With .Controls.Add
              .Caption = "\(     ("
              .OnAction = "RCLICK_RE213"
           End With
           With .Controls.Add
              .Caption = "\)     )"
              .OnAction = "RCLICK_RE214"
           End With
           With .Controls.Add
              .Caption = "\$     $"
              .OnAction = "RCLICK_RE215"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Character Class"
           Else
              .Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[]      Any Character Set"
              Else
                 .Caption = "[]      |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE301"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[^]     Any Not Character Set"
              Else
                 .Caption = "[^]     |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE302"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = ".       Any Character"
              Else
                 .Caption = ".       |fffd|C|fffd||fffd|1|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE303"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\w      Any Word Character"
              Else
                 .Caption = "\w      |fffd|P|fffd||fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE304"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\W      Any Not Word Character"
              Else
                 .Caption = "\W      |fffd|P|fffd||fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE305"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\d      Any Number Character"
              Else
                 .Caption = "\d      |fffd|C|fffd||4c2||310||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE306"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\D      Any Not Number Character"
              Else
                 .Caption = "\D      |fffd|C|fffd||4c2||310||fffd||fffd||fffd||fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE307"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\s      Any Space Character"
              Else
                 .Caption = "\s      |fffd|C|fffd||4c2||303|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE308"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\S      Any Not Space Character"
              Else
                 .Caption = "\S      |fffd|C|fffd||4c2||314||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE309"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Repeat"
           Else
              .Caption = "|fffd|J|fffd||fffd||502||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x]       x Times"
              Else
                 .Caption = "[x]       x|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE401"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,]      More Than x Times"
              Else
                 .Caption = "[x,]      x|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE402"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,y]     More Than x Times and Less Than y Times"
              Else
                 .Caption = "[x,y]     x|fffd||fffd||20f||fffd|y|fffd||fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE403"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         0 or 1 Times"
              Else
                 .Caption = "?         0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE404"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "*         More Than 0 Times"
              Else
                 .Caption = "*         0|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE405"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "+         More Than 1 Times"
              Else
                 .Caption = "+         1|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE406"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         The Least Repeat"
              Else
                 .Caption = "?         |fffd||152|Z|fffd||fffd|v"
              End If
              .OnAction = "RCLICK_RE407"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Grouping"
           Else
              .Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "()     Grouping"
              Else
                 .Caption = "()     |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE501"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?:)   Grouping (No Capture)"
              Else
                 .Caption = "(?:)   |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd||202||fffd||fffd|j"
              End If
              .OnAction = "RCLICK_RE502"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?=)   Positive Look Ahead"
              Else
                 .Caption = "(?=)   |fffd|m|fffd||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE503"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?!)   Negative Look Ahead"
              Else
                 .Caption = "(?!)   |fffd||6d2||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE504"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "|      Selection"
              Else
                 .Caption = "|      |fffd|I|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE505"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     Back Reference (n-th Group)"
              Else
                 .Caption = "\n     |fffd||fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
              End If
              .OnAction = "RCLICK_RE506"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<=)  Positive Look Back"
              Else
                 .Caption = "(?<=)  |fffd|m|fffd||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1001"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<!)  Negative Look Back"
              Else
                 .Caption = "(?<!)  |fffd||6d2||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1002"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<xxx>)  Named Group"
              Else
                 .Caption = "(?<xxx>)  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1003"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\k<xxx>  Named Back Reference"
              Else
                 .Caption = "\k<xxx>  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1004"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx:)  Option Changed Group"
              Else
                 .Caption = "(?imnsx-imnsx:)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1005"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx)  Option Change"
              Else
                 .Caption = "(?imnsx-imnsx)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X"
              End If
              .OnAction = "RCLICK_RE1006"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?>)  Not Backtracking Group"
              Else
                 .Caption = "(?>)  |fffd||fffd|o|fffd|b|fffd|N|fffd|g|fffd||fffd||fffd|b|fffd|L|fffd||fffd||fffd|O|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1007"
           End With
           
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?#)   Comment"
              Else
                 .Caption = "(?#)   |fffd|R|fffd||fffd||fffd||fffd||fffd|g"
              End If
              .OnAction = "RCLICK_RE1008"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Other"
           Else
              .Caption = "|fffd||fffd||fffd||311||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\Q\E  Quote Meta Character"
              Else
                 .Caption = "\Q\E  |fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|g"
              End If
              .OnAction = "RCLICK_RE1101"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Special"
           Else
              .Caption = "|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND>]     More Than"
              Else
                 .Caption = "[COND>]     |fffd||fffd||202||fffd|"
              End If
              .OnAction = "RCLICK_RE801"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND<]     Less Than"
              Else
                 .Caption = "[COND<]     |fffd||fffd||fffd||202||fffd|"
              End If
              .OnAction = "RCLICK_RE802"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND>=]    More Than or Equal"
              Else
                 .Caption = "[COND>=]    |fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE803"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND<=]    Less Than or Equal"
              Else
                 .Caption = "[COND<=]    |fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE804"
           End With
        End With
     End With
  End With
  
  Set myBar5 = CommandBars.Add(Name:="EREPU5", Position:=msoBarPopup, Temporary:=True)
  With myBar5
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_REPLIST"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_REPLIST"
        .FaceId = 2989
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_REPLIST"
        .FaceId = 358
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "\n     New Line"
           Else
              .Caption = "\n     |fffd||fffd||fffd|s"
           End If
           .OnAction = "RCLICK_RE601"
        End With
        With .Controls.Add
           .Caption = "$$     $"
           .OnAction = "RCLICK_RE602"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$n     Capture Reference (n-th Group)"
           Else
              .Caption = "$n     |fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
           End If
           .OnAction = "RCLICK_RE603"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$&&     Whole Pattern"
           Else
              .Caption = "$&&     |fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|S|fffd||fffd|"
           End If
           .OnAction = "RCLICK_RE604"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$`     Before Match"
           Else
              .Caption = "$`     |fffd|}|fffd|b|fffd|`|fffd||310||fffd|s"
           End If
           .OnAction = "RCLICK_RE605"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$'     After Match"
           Else
              .Caption = "$'     |fffd|}|fffd|b|fffd|`|fffd||30c||3471|"
           End If
           .OnAction = "RCLICK_RE606"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$+     Last Group"
           Else
              .Caption = "$+     |fffd||14c||fffd||303|O|fffd||fffd||fffd|[|fffd|v"
           End If
           .OnAction = "RCLICK_RE607"
        End With
        With .Controls.Add
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "$_     Whole Input String"
           Else
              .Caption = "$_     |fffd||fffd||fffd||355||fffd||fffd||fffd||fffd||fffd|S|fffd||fffd|"
           End If
           .OnAction = "RCLICK_RE608"
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "${xxx}  Named Capture Reference"
              Else
                 .Caption = "${xxx}  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1201"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Special"
           Else
              .Caption = "|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[UPPER]     Upper Case"
              Else
                 .Caption = "[UPPER]     |fffd||5576||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE701"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[LOWER]     Lower Case"
              Else
                 .Caption = "[LOWER]     |fffd||fffd||fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE702"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[WIDE]        Full Size"
              Else
                 .Caption = "[WIDE]        |fffd|S|fffd|p"
              End If
              .OnAction = "RCLICK_RE703"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[NARROW]   Half Size"
              Else
                 .Caption = "[NARROW]   |fffd||fffd||fffd|p"
              End If
              .OnAction = "RCLICK_RE704"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Page Setup"
           Else
              .Caption = "|fffd|y|fffd|[|fffd|W|fffd||752||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&L     Left"
              Else
                 .Caption = "&&L     |fffd||fffd||fffd|l|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE901"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&C     Center"
              Else
                 .Caption = "&&C     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE902"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&R     Right"
              Else
                 .Caption = "&&R     |fffd|E|fffd|l|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE903"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&E     Double Underline"
              Else
                 .Caption = "&&E     |fffd||fffd|d|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE904"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&X     Superscript"
              Else
                 .Caption = "&&X     |fffd||fffd|t|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE905"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&Y     Subscript"
              Else
                 .Caption = "&&Y     |fffd||fffd||fffd|t|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE906"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&B     Bold"
              Else
                 .Caption = "&&B     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE907"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&I     Italic"
              Else
                 .Caption = "&&I     |fffd||391||fffd|"
              End If
              .OnAction = "RCLICK_RE908"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&U     Underline"
              Else
                 .Caption = "&&U     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE909"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&S     Strikethrough"
              Else
                 .Caption = "&&S     |fffd||fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE910"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&D     Date"
              Else
                 .Caption = "&&D     |fffd||fffd||fffd|t"
              End If
              .OnAction = "RCLICK_RE911"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&T     Time"
              Else
                 .Caption = "&&T     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE912"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&Z     Path"
              Else
                 .Caption = "&&Z     |fffd|p|fffd|X"
              End If
              .OnAction = "RCLICK_RE913"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&F     File Name"
              Else
                 .Caption = "&&F     |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE914"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&A     Sheet Name"
              Else
                 .Caption = "&&A     |fffd|V|fffd|[|fffd|g|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE915"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&P     Page No"
              Else
                 .Caption = "&&P     |fffd|y|fffd|[|fffd|W|fffd||50d||fffd|"
              End If
              .OnAction = "RCLICK_RE916"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&P+n   Page No (+n)"
              Else
                 .Caption = "&&P+n   |fffd|y|fffd|[|fffd|W|fffd||50d||fffd|(+n)"
              End If
              .OnAction = "RCLICK_RE917"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&P-n   Page No (-n)"
              Else
                 .Caption = "&&P-n   |fffd|y|fffd|[|fffd|W|fffd||50d||fffd|(-n)"
              End If
              .OnAction = "RCLICK_RE918"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&&&     &&"
              Else
                 .Caption = "&&&&     &&"
              End If
              .OnAction = "RCLICK_RE919"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&""Font""      Font"
              Else
                 .Caption = "&&""Font""      |fffd|t|fffd|H|fffd||fffd||fffd|g"
              End If
              .OnAction = "RCLICK_RE920"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&n     Font Size (n)"
              Else
                 .Caption = "&&n     |fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|T|fffd|C|fffd|Y(n)"
              End If
              .OnAction = "RCLICK_RE921"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "&&N     All Page No"
              Else
                 .Caption = "&&N     |fffd|S|fffd|y|fffd|[|fffd|W|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE922"
           End With
        End With
     End With
  End With
  
  Set myBar6 = CommandBars.Add(Name:="EREPU6", Position:=msoBarPopup, Temporary:=True)
  With myBar6
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_DIRLIST"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_DIRLIST"
        .FaceId = 2989
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_DIRLIST"
        .FaceId = 358
     End With
  End With
  
  Set myBar7 = CommandBars.Add(Name:="EREPU7", Position:=msoBarPopup, Temporary:=True)
  With myBar7
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHAL_REFLIST2"
        .FaceId = 2988
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Release always show"
        Else
           .Caption = "|fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_RLAL_REFLIST2"
        .FaceId = 2989
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Delete from List"
        Else
           .Caption = "|fffd||a5d7||fffd||fffd||fffd||fffd||d3dc|"
        End If
        .OnAction = "RCLICK_DEL_REFLIST2"
        .FaceId = 358
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Position"
           Else
              .Caption = "|fffd||292|u"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "^     Top"
              Else
                 .Caption = "^     |fffd||64ea|"
              End If
              .OnAction = "RCLICK_RE101"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "$     Last"
              Else
                 .Caption = "$     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE102"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\b    Word Boundary"
              Else
                 .Caption = "\b    |fffd|P|fffd||a2eb||fffd|E"
              End If
              .OnAction = "RCLICK_RE103"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\B    Not Word Boundary"
              Else
                 .Caption = "\B    |fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE104"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Literal"
           Else
              .Caption = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     New Line"
              Else
                 .Caption = "\n     |fffd||fffd||fffd|s"
              End If
              .OnAction = "RCLICK_RE201"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\t     Tab"
              Else
                 .Caption = "\t     |fffd|^|fffd|u"
              End If
              .OnAction = "RCLICK_RE202"
           End With
           With .Controls.Add
              .Caption = "\?     ?"
              .OnAction = "RCLICK_RE203"
           End With
           With .Controls.Add
              .Caption = "\*     *"
              .OnAction = "RCLICK_RE204"
           End With
           With .Controls.Add
              .Caption = "\+     +"
              .OnAction = "RCLICK_RE205"
           End With
           With .Controls.Add
              .Caption = "\.     ."
              .OnAction = "RCLICK_RE206"
           End With
           With .Controls.Add
              .Caption = "\|     |"
              .OnAction = "RCLICK_RE207"
           End With
           With .Controls.Add
              .Caption = "\{     {"
              .OnAction = "RCLICK_RE208"
           End With
           With .Controls.Add
              .Caption = "\}     }"
              .OnAction = "RCLICK_RE209"
           End With
           With .Controls.Add
              .Caption = "\\     \"
              .OnAction = "RCLICK_RE210"
           End With
           With .Controls.Add
              .Caption = "\[     ["
              .OnAction = "RCLICK_RE211"
           End With
           With .Controls.Add
              .Caption = "\]     ]"
              .OnAction = "RCLICK_RE212"
           End With
           With .Controls.Add
              .Caption = "\(     ("
              .OnAction = "RCLICK_RE213"
           End With
           With .Controls.Add
              .Caption = "\)     )"
              .OnAction = "RCLICK_RE214"
           End With
           With .Controls.Add
              .Caption = "\$     $"
              .OnAction = "RCLICK_RE215"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Character Class"
           Else
              .Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[]      Any Character Set"
              Else
                 .Caption = "[]      |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE301"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[^]     Any Not Character Set"
              Else
                 .Caption = "[^]     |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE302"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = ".       Any Character"
              Else
                 .Caption = ".       |fffd|C|fffd||fffd|1|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE303"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\w      Any Word Character"
              Else
                 .Caption = "\w      |fffd|P|fffd||fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE304"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\W      Any Not Word Character"
              Else
                 .Caption = "\W      |fffd|P|fffd||fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE305"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\d      Any Number Character"
              Else
                 .Caption = "\d      |fffd|C|fffd||4c2||310||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE306"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\D      Any Not Number Character"
              Else
                 .Caption = "\D      |fffd|C|fffd||4c2||310||fffd||fffd||fffd||fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE307"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\s      Any Space Character"
              Else
                 .Caption = "\s      |fffd|C|fffd||4c2||303|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE308"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\S      Any Not Space Character"
              Else
                 .Caption = "\S      |fffd|C|fffd||4c2||314||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE309"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Repeat"
           Else
              .Caption = "|fffd|J|fffd||fffd||502||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x]       x Times"
              Else
                 .Caption = "[x]       x|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE401"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,]      More Than x Times"
              Else
                 .Caption = "[x,]      x|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE402"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,y]     More Than x Times and Less Than y Times"
              Else
                 .Caption = "[x,y]     x|fffd||fffd||20f||fffd|y|fffd||fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE403"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         0 or 1 Times"
              Else
                 .Caption = "?         0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE404"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "*         More Than 0 Times"
              Else
                 .Caption = "*         0|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE405"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "+         More Than 1 Times"
              Else
                 .Caption = "+         1|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE406"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         The Least Repeat"
              Else
                 .Caption = "?         |fffd||152|Z|fffd||fffd|v"
              End If
              .OnAction = "RCLICK_RE407"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Grouping"
           Else
              .Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "()     Grouping"
              Else
                 .Caption = "()     |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE501"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?:)   Grouping (No Capture)"
              Else
                 .Caption = "(?:)   |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd||202||fffd||fffd|j"
              End If
              .OnAction = "RCLICK_RE502"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?=)   Positive Look Ahead"
              Else
                 .Caption = "(?=)   |fffd|m|fffd||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE503"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?!)   Negative Look Back"
              Else
                 .Caption = "(?!)   |fffd||6d2||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE504"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "|      Selection"
              Else
                 .Caption = "|      |fffd|I|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE505"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     Back Reference (n-th Group)"
              Else
                 .Caption = "\n     |fffd||fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
              End If
              .OnAction = "RCLICK_RE506"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<=)  Positive Look Back"
              Else
                 .Caption = "(?<=)  |fffd|m|fffd||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1001"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<!)  Negative Look Back"
              Else
                 .Caption = "(?<!)  |fffd||6d2||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1002"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<xxx>)  Named Group"
              Else
                 .Caption = "(?<xxx>)  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1003"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\k<xxx>  Named Back Reference"
              Else
                 .Caption = "\k<xxx>  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1004"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx:)  Option Changed Group"
              Else
                 .Caption = "(?imnsx-imnsx:)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1005"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx)  Option Change"
              Else
                 .Caption = "(?imnsx-imnsx)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X"
              End If
              .OnAction = "RCLICK_RE1006"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?>)  Not Backtracking Group"
              Else
                 .Caption = "(?>)  |fffd||fffd|o|fffd|b|fffd|N|fffd|g|fffd||fffd||fffd|b|fffd|L|fffd||fffd||fffd|O|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1007"
           End With
           
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?#)   Comment"
              Else
                 .Caption = "(?#)   |fffd|R|fffd||fffd||fffd||fffd||fffd|g"
              End If
              .OnAction = "RCLICK_RE1008"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Other"
           Else
              .Caption = "|fffd||fffd||fffd||311||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\Q\E  Quote Meta Character"
              Else
                 .Caption = "\Q\E  |fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|g"
              End If
              .OnAction = "RCLICK_RE1101"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Special"
           Else
              .Caption = "|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND>]     More Than"
              Else
                 .Caption = "[COND>]     |fffd||fffd||202||fffd|"
              End If
              .OnAction = "RCLICK_RE801"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND<]     Less Than"
              Else
                 .Caption = "[COND<]     |fffd||fffd||fffd||202||fffd|"
              End If
              .OnAction = "RCLICK_RE802"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND>=]    More Than or Equal"
              Else
                 .Caption = "[COND>=]    |fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE803"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[COND<=]    Less Than or Equal"
              Else
                 .Caption = "[COND<=]    |fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE804"
           End With
        End With
     End With
  End With

  Set myBar9 = CommandBars.Add(Name:="EREPU9", Position:=msoBarPopup, Temporary:=True)
  With myBar9
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Forward this tab"
        Else
           .Caption = "|fffd||fffd||fffd||303|^|fffd|u|fffd||fffd|O|fffd||fffd|"
        End If
        .OnAction = "RCLICK_FORWARD_TAB"
        .FaceId = 132
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Back this tab"
        Else
           .Caption = "|fffd||fffd||fffd||303|^|fffd|u|fffd||fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_BACK_TAB"
        .FaceId = 133
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Default tab order"
        Else
           .Caption = "|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g"
        End If
        .OnAction = "RCLICK_DEFAULT_TAB"
        .FaceId = 459
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Hide this tab"
        Else
           .Caption = "|fffd||fffd||fffd||303|^|fffd|u|fffd||fffd||fffd|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_HIDE_TAB"
        .FaceId = 1657
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Show all tabs"
        Else
           .Caption = "|fffd|S|fffd||102||303|^|fffd|u|fffd||fffd|\|fffd||fffd|"
        End If
        .OnAction = "RCLICK_SHOW_TAB"
        .FaceId = 461
     End With
     With .Controls.Add
        .BeginGroup = True
        .Caption = ".NET Framework"
        .OnAction = "RCLICK_SW_NRE"
        If SW_NRE = True Then
           If SW_ORE = False Then
              .State = msoButtonDown
           Else
              .State = msoButtonUp
           End If
        Else
           .State = msoButtonUp
        End If
        .FaceId = 93
     End With
     With .Controls.Add
        .Caption = "Onigmo"
        .OnAction = "RCLICK_SW_ORE"
        If SW_ORE = True Then
           .State = msoButtonDown
        Else
           .State = msoButtonUp
        End If
        .FaceId = 94
     End With
     With .Controls.Add(Type:=msoControlEdit)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Criteria"
        Else
           .Caption = "|fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_SETTING"
        .Width = 75
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Search settings"
        Else
           .Caption = "|fffd||752||831f||fffd||fffd|"
        End If
        .OnAction = "RCLICK_SETTING"
        .FaceId = 46
     End With
  End With

  Set myBar10 = CommandBars.Add(Name:="EREPU10", Position:=msoBarPopup, Temporary:=True)
  With myBar10
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Make regex input sheet"
        Else
           .Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||c42c|"
        End If
        .OnAction = "MAKE_REIS_RTN"
        .FaceId = 317
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Read regex input sheet"
        Else
           .Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||343|V|fffd|[|fffd|g|fffd||1cd||fffd|"
        End If
        .OnAction = "READ_REIS_RTN"
        .FaceId = 316
     End With
  End With

  Set myBar11 = CommandBars.Add(Name:="EREPU11", Position:=msoBarPopup, Temporary:=True)
  With myBar11
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Position"
           Else
              .Caption = "|fffd||292|u"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "^     Top"
              Else
                 .Caption = "^     |fffd||64ea|"
              End If
              .OnAction = "RCLICK_RE101"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "$     Last"
              Else
                 .Caption = "$     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE102"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\b    Word Boundary"
              Else
                 .Caption = "\b    |fffd|P|fffd||a2eb||fffd|E"
              End If
              .OnAction = "RCLICK_RE103"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\B    Not Word Boundary"
              Else
                 .Caption = "\B    |fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE104"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Literal"
           Else
              .Caption = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     New Line"
              Else
                 .Caption = "\n     |fffd||fffd||fffd|s"
              End If
              .OnAction = "RCLICK_RE201"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\t     Tab"
              Else
                 .Caption = "\t     |fffd|^|fffd|u"
              End If
              .OnAction = "RCLICK_RE202"
           End With
           With .Controls.Add
              .Caption = "\?     ?"
              .OnAction = "RCLICK_RE203"
           End With
           With .Controls.Add
              .Caption = "\*     *"
              .OnAction = "RCLICK_RE204"
           End With
           With .Controls.Add
              .Caption = "\+     +"
              .OnAction = "RCLICK_RE205"
           End With
           With .Controls.Add
              .Caption = "\.     ."
              .OnAction = "RCLICK_RE206"
           End With
           With .Controls.Add
              .Caption = "\|     |"
              .OnAction = "RCLICK_RE207"
           End With
           With .Controls.Add
              .Caption = "\{     {"
              .OnAction = "RCLICK_RE208"
           End With
           With .Controls.Add
              .Caption = "\}     }"
              .OnAction = "RCLICK_RE209"
           End With
           With .Controls.Add
              .Caption = "\\     \"
              .OnAction = "RCLICK_RE210"
           End With
           With .Controls.Add
              .Caption = "\[     ["
              .OnAction = "RCLICK_RE211"
           End With
           With .Controls.Add
              .Caption = "\]     ]"
              .OnAction = "RCLICK_RE212"
           End With
           With .Controls.Add
              .Caption = "\(     ("
              .OnAction = "RCLICK_RE213"
           End With
           With .Controls.Add
              .Caption = "\)     )"
              .OnAction = "RCLICK_RE214"
           End With
           With .Controls.Add
              .Caption = "\$     $"
              .OnAction = "RCLICK_RE215"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Character Class"
           Else
              .Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[]      Any Character Set"
              Else
                 .Caption = "[]      |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE301"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[^]     Any Not Character Set"
              Else
                 .Caption = "[^]     |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE302"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = ".       Any Character"
              Else
                 .Caption = ".       |fffd|C|fffd||fffd|1|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE303"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\w      Any Word Character"
              Else
                 .Caption = "\w      |fffd|P|fffd||fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE304"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\W      Any Not Word Character"
              Else
                 .Caption = "\W      |fffd|P|fffd||fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE305"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\d      Any Number Character"
              Else
                 .Caption = "\d      |fffd|C|fffd||4c2||310||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE306"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\D      Any Not Number Character"
              Else
                 .Caption = "\D      |fffd|C|fffd||4c2||310||fffd||fffd||fffd||fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE307"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\s      Any Space Character"
              Else
                 .Caption = "\s      |fffd|C|fffd||4c2||303|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE308"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\S      Any Not Space Character"
              Else
                 .Caption = "\S      |fffd|C|fffd||4c2||314||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE309"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Repeat"
           Else
              .Caption = "|fffd|J|fffd||fffd||502||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x]       x Times"
              Else
                 .Caption = "[x]       x|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE401"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,]      More Than x Times"
              Else
                 .Caption = "[x,]      x|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE402"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,y]     More Than x Times and Less Than y Times"
              Else
                 .Caption = "[x,y]     x|fffd||fffd||20f||fffd|y|fffd||fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE403"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         0 or 1 Times"
              Else
                 .Caption = "?         0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE404"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "*         More Than 0 Times"
              Else
                 .Caption = "*         0|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE405"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "+         More Than 1 Times"
              Else
                 .Caption = "+         1|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE406"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         The Least Repeat"
              Else
                 .Caption = "?         |fffd||152|Z|fffd||fffd|v"
              End If
              .OnAction = "RCLICK_RE407"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Grouping"
           Else
              .Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "()     Grouping"
              Else
                 .Caption = "()     |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE501"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?:)   Grouping (No Capture)"
              Else
                 .Caption = "(?:)   |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd||202||fffd||fffd|j"
              End If
              .OnAction = "RCLICK_RE502"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?=)   Positive Look Ahead"
              Else
                 .Caption = "(?=)   |fffd|m|fffd||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE503"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?!)   Negative Look Back"
              Else
                 .Caption = "(?!)   |fffd||6d2||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE504"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "|      Selection"
              Else
                 .Caption = "|      |fffd|I|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE505"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     Back Reference (n-th Group)"
              Else
                 .Caption = "\n     |fffd||fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
              End If
              .OnAction = "RCLICK_RE506"
           End With
        End With
     End With
  End With
  
  Set myBar12 = CommandBars.Add(Name:="EREPU12", Position:=msoBarPopup, Temporary:=True)
  With myBar12
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Replace all"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|"
        End If
        .OnAction = "CELL_REP_ALL"
        .FaceId = 346
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Simulation"
        Else
           .Caption = "|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "CELL_REP_SIM"
        .FaceId = 349
     End With
  End With
  
  Set myBar13 = CommandBars.Add(Name:="EREPU13", Position:=msoBarPopup, Temporary:=True)
  With myBar13
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Replace all"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|"
        End If
        .OnAction = "SHAPE_REP_ALL"
        .FaceId = 346
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Simulation"
        Else
           .Caption = "|fffd|V|fffd|~|fffd||fffd||fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd|"
        End If
        .OnAction = "SHAPE_REP_SIM"
        .FaceId = 349
     End With
  End With
  
  Set myBar14 = CommandBars.Add(Name:="EREPU14", Position:=msoBarPopup, Temporary:=True)
  With myBar14
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Cut"
        Else
           .Caption = "|fffd||602||fffd||fffd||fffd|"
        End If
        .OnAction = "RCLICK_CUT"
        .FaceId = 21
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Copy"
        Else
           .Caption = "|fffd|R|fffd|s|fffd|["
        End If
        .OnAction = "RCLICK_COPY"
        .FaceId = 19
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Paste"
        Else
           .Caption = "|fffd|\|fffd||fffd|t|fffd||fffd|"
        End If
        .OnAction = "RCLICK_PASTE"
        .FaceId = 22
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Select All"
        Else
           .Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
        End If
        .OnAction = "RCLICK_ALL"
        .FaceId = 139
     End With
     With .Controls.Add
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Formula)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd||fffd||fffd||fffd|)"
        End If
        .OnAction = "RCLICK_SET_FORMULA"
        .FaceId = 385
     End With
     With .Controls.Add
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Curreent Cell (Value)"
        Else
           .Caption = "|fffd||fffd||fffd||742||303|Z|fffd||fffd|(|fffd|l)"
        End If
        .OnAction = "RCLICK_SET_VALUE"
        .FaceId = 4207
     End With
     With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
        .BeginGroup = True
        If UserForm1.CheckBox49.Value = True Then
           .Caption = "Input Assistance"
        Else
           .Caption = "|fffd||fffd||fffd||355||23d5|"
        End If
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Position"
           Else
              .Caption = "|fffd||292|u"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "^     Top"
              Else
                 .Caption = "^     |fffd||64ea|"
              End If
              .OnAction = "RCLICK_RE101"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "$     Last"
              Else
                 .Caption = "$     |fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE102"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\b    Word Boundary"
              Else
                 .Caption = "\b    |fffd|P|fffd||a2eb||fffd|E"
              End If
              .OnAction = "RCLICK_RE103"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\B    Not Word Boundary"
              Else
                 .Caption = "\B    |fffd|P|fffd||a2eb||fffd|E|fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE104"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Literal"
           Else
              .Caption = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     New Line"
              Else
                 .Caption = "\n     |fffd||fffd||fffd|s"
              End If
              .OnAction = "RCLICK_RE201"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\t     Tab"
              Else
                 .Caption = "\t     |fffd|^|fffd|u"
              End If
              .OnAction = "RCLICK_RE202"
           End With
           With .Controls.Add
              .Caption = "\?     ?"
              .OnAction = "RCLICK_RE203"
           End With
           With .Controls.Add
              .Caption = "\*     *"
              .OnAction = "RCLICK_RE204"
           End With
           With .Controls.Add
              .Caption = "\+     +"
              .OnAction = "RCLICK_RE205"
           End With
           With .Controls.Add
              .Caption = "\.     ."
              .OnAction = "RCLICK_RE206"
           End With
           With .Controls.Add
              .Caption = "\|     |"
              .OnAction = "RCLICK_RE207"
           End With
           With .Controls.Add
              .Caption = "\{     {"
              .OnAction = "RCLICK_RE208"
           End With
           With .Controls.Add
              .Caption = "\}     }"
              .OnAction = "RCLICK_RE209"
           End With
           With .Controls.Add
              .Caption = "\\     \"
              .OnAction = "RCLICK_RE210"
           End With
           With .Controls.Add
              .Caption = "\[     ["
              .OnAction = "RCLICK_RE211"
           End With
           With .Controls.Add
              .Caption = "\]     ]"
              .OnAction = "RCLICK_RE212"
           End With
           With .Controls.Add
              .Caption = "\(     ("
              .OnAction = "RCLICK_RE213"
           End With
           With .Controls.Add
              .Caption = "\)     )"
              .OnAction = "RCLICK_RE214"
           End With
           With .Controls.Add
              .Caption = "\$     $"
              .OnAction = "RCLICK_RE215"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Character Class"
           Else
              .Caption = "|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|X"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[]      Any Character Set"
              Else
                 .Caption = "[]      |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE301"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[^]     Any Not Character Set"
              Else
                 .Caption = "[^]     |fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE302"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = ".       Any Character"
              Else
                 .Caption = ".       |fffd|C|fffd||fffd|1|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE303"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\w      Any Word Character"
              Else
                 .Caption = "\w      |fffd|P|fffd||fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE304"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\W      Any Not Word Character"
              Else
                 .Caption = "\W      |fffd|P|fffd||fffd||20a|O|fffd|C|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE305"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\d      Any Number Character"
              Else
                 .Caption = "\d      |fffd|C|fffd||4c2||310||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE306"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\D      Any Not Number Character"
              Else
                 .Caption = "\D      |fffd|C|fffd||4c2||310||fffd||fffd||fffd||fffd||20a|O"
              End If
              .OnAction = "RCLICK_RE307"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\s      Any Space Character"
              Else
                 .Caption = "\s      |fffd|C|fffd||4c2||303|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE308"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\S      Any Not Space Character"
              Else
                 .Caption = "\S      |fffd|C|fffd||4c2||314||fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE309"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Repeat"
           Else
              .Caption = "|fffd|J|fffd||fffd||502||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x]       x Times"
              Else
                 .Caption = "[x]       x|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE401"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,]      More Than x Times"
              Else
                 .Caption = "[x,]      x|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE402"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "[x,y]     More Than x Times and Less Than y Times"
              Else
                 .Caption = "[x,y]     x|fffd||fffd||20f||fffd|y|fffd||fffd||209||fffd|"
              End If
              .OnAction = "RCLICK_RE403"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         0 or 1 Times"
              Else
                 .Caption = "?         0|fffd||fffd||702||fffd||fffd||fffd|1|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE404"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "*         More Than 0 Times"
              Else
                 .Caption = "*         0|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE405"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "+         More Than 1 Times"
              Else
                 .Caption = "+         1|fffd||fffd||20f||fffd|"
              End If
              .OnAction = "RCLICK_RE406"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "?         The Least Repeat"
              Else
                 .Caption = "?         |fffd||152|Z|fffd||fffd|v"
              End If
              .OnAction = "RCLICK_RE407"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Grouping"
           Else
              .Caption = "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "()     Grouping"
              Else
                 .Caption = "()     |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE501"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?:)   Grouping (No Capture)"
              Else
                 .Caption = "(?:)   |fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd|i|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd||fffd||202||fffd||fffd|j"
              End If
              .OnAction = "RCLICK_RE502"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?=)   Positive Look Ahead"
              Else
                 .Caption = "(?=)   |fffd|m|fffd||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE503"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?!)   Negative Look Back"
              Else
                 .Caption = "(?!)   |fffd||6d2||fffd||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE504"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "|      Selection"
              Else
                 .Caption = "|      |fffd|I|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE505"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\n     Back Reference (n-th Group)"
              Else
                 .Caption = "\n     |fffd||fffd||fffd||fffd|Q|fffd||181|in|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v|fffd|j"
              End If
              .OnAction = "RCLICK_RE506"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           .Caption = ".NET Framework"
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<=)  Positive Look Back"
              Else
                 .Caption = "(?<=)  |fffd|m|fffd||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1001"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<!)  Negative Look Back"
              Else
                 .Caption = "(?<!)  |fffd||6d2||fffd||7c2||fffd||1c2||fffd|"
              End If
              .OnAction = "RCLICK_RE1002"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?<xxx>)  Named Group"
              Else
                 .Caption = "(?<xxx>)  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1003"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\k<xxx>  Named Back Reference"
              Else
                 .Caption = "\k<xxx>  |fffd||fffd||fffd|O|fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd||fffd|"
              End If
              .OnAction = "RCLICK_RE1004"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx:)  Option Changed Group"
              Else
                 .Caption = "(?imnsx-imnsx:)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1005"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?imnsx-imnsx)  Option Change"
              Else
                 .Caption = "(?imnsx-imnsx)  |fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||3cd|X"
              End If
              .OnAction = "RCLICK_RE1006"
           End With
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?>)  Not Backtracking Group"
              Else
                 .Caption = "(?>)  |fffd||fffd|o|fffd|b|fffd|N|fffd|g|fffd||fffd||fffd|b|fffd|L|fffd||fffd||fffd|O|fffd|O|fffd||fffd||fffd|[|fffd|v"
              End If
              .OnAction = "RCLICK_RE1007"
           End With
           
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "(?#)   Comment"
              Else
                 .Caption = "(?#)   |fffd|R|fffd||fffd||fffd||fffd||fffd|g"
              End If
              .OnAction = "RCLICK_RE1008"
           End With
        End With
        With .Controls.Add(Type:=msoControlPopup, Temporary:=True)
           If UserForm1.CheckBox49.Value = True Then
              .Caption = "Other"
           Else
              .Caption = "|fffd||fffd||fffd||311||fffd|"
           End If
           With .Controls.Add
              If UserForm1.CheckBox49.Value = True Then
                 .Caption = "\Q\E  Quote Meta Character"
              Else
                 .Caption = "\Q\E  |fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|g"
              End If
              .OnAction = "RCLICK_RE1101"
           End With
        End With
     End With
  End With
  
  On Error GoTo 0

End Sub

Sub TAB_ORDER_CHG(ByVal W_TAB As Long)

  Dim I As Long
  Dim W_PAGEISV As Long
  
  
  W_PAGEISV = AR_PAGEI(W_TAB)
  
  For I = 1 To UBound(AR_PAGEI)
     If I = W_TAB Then
        AR_PAGEI(I) = 0
     Else
        If AR_PAGEI(I) < W_PAGEISV Then
           AR_PAGEI(I) = AR_PAGEI(I) + 1
        End If
     End If
  Next I

  Call TAB_ORDER
  Call TAB_ORDER
  Me.MultiPage1.Value = 0

End Sub

Private Sub FONT_CHG()

  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Call FONT_CHG1_1
     Else
        Call FONT_CHG1_2
     End If
  Else
     If SW_ENGLISH = True Then
        Call FONT_CHG1_3
     Else
        Call FONT_CHG1_4
     End If
  End If
  
  Call FONT_CHG2

End Sub

Private Function COLUMN_CHK(ByVal ClmTxt As String) As Boolean
  
  Dim RE As Object
  
  If Len(ClmTxt) = 1 Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = "[A-Z]"                 '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        .IgnoreCase = True                 '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                     '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     COLUMN_CHK = RE.Test(ClmTxt)
     Set RE = Nothing
  ElseIf Len(Me.TextBox2.Value) = 2 Then
     Set RE = CreateObject("VBScript.RegExp")
     With RE
        If Val(Application.Version) >= 12 Then
           .Pattern = "([A-Z]{2})"           '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        Else
           .Pattern = "([A-J][A-Z]|I[A-V])"  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
        End If
        .IgnoreCase = True                 '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
        .Global = True                     '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
     End With
     COLUMN_CHK = RE.Test(Me.TextBox2.Value)
     Set RE = Nothing
  ElseIf Len(Me.TextBox2.Value) = 3 Then
     If Val(Application.Version) >= 12 Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "([A-X][A-E][A-Z]|XF[A-D])"  '|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||752||fffd|
           .IgnoreCase = True                      '|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||30b||fffd||fffd|
           .Global = True                          '|fffd||fffd||fffd||fffd||fffd||fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|
        End With
        COLUMN_CHK = RE.Test(Me.TextBox2.Value)
        Set RE = Nothing
     Else
        COLUMN_CHK = False
     End If
  Else
     COLUMN_CHK = False
  End If

End Function

Private Sub ADDCMD_EXEC(P_OBJ As Object, ByVal P_NO As Long)

  Dim W_OBJ() As Object
  Dim AR_OBJ As Variant
  Dim I As Long
  Dim W_VAR As Variant

  On Error Resume Next

  ReDim W_OBJ(1)
  Set W_OBJ(1) = P_OBJ

  Select Case P_NO
  Case 1
     AR_OBJ = Split(W_PROMTH, ".")
  Case 2
     AR_OBJ = Split(W_PROMTH2, ".")
  Case 3
     AR_OBJ = Split(W_PROMTH3, ".")
  End Select

  For I = 0 To UBound(AR_OBJ) - 1
     ReDim Preserve W_OBJ(I + 2)
     Set W_OBJ(I + 2) = CallByName(W_OBJ(I + 1), AR_OBJ(I), VbGet)
  Next I
  
  Select Case P_NO
  Case 1
     W_VAR = CVar(W_VALARG)
  Case 2
     W_VAR = CVar(W_VALARG2)
  Case 3
     W_VAR = CVar(W_VALARG3)
  End Select
  
  Application.DisplayAlerts = False
  If W_VAR = "" Then
     CallByName W_OBJ(UBound(W_OBJ)), AR_OBJ(UBound(AR_OBJ)), VbMethod
  ElseIf Left$(W_VAR, 1) = "=" Then
     W_VAR = Right(W_VAR, Len(W_VAR) - 1)
     If W_VAR = "True" Or W_VAR = "False" Then
        W_VAR = CBool(W_VAR)
     End If
     CallByName W_OBJ(UBound(W_OBJ)), AR_OBJ(UBound(AR_OBJ)), VbLet, W_VAR
  Else
     CallByName W_OBJ(UBound(W_OBJ)), AR_OBJ(UBound(AR_OBJ)), VbMethod, W_VAR
  End If
  Application.DisplayAlerts = True
  
  On Error GoTo 0

End Sub

Private Sub UPD_REFCOMBO(W_COMBOBOX As Object)

  Dim W_ALSH As String
  Dim I As Long
  Dim J As Long
  Dim K As Long

     
  W_ALSH = ""
     
  For I = 1 To UBound(AR_FTEXT)
     If AR_FTEXT(I) = W_COMBOBOX.Value Then
        W_ALSH = AR_FALSH(I)
        Exit For
     End If
  Next I
  If I = UBound(AR_FTEXT) + 1 Then
     I = UBound(AR_FTEXT)
     For K = I To 1 Step -1
        If AR_FALSH(K) <> "!" Then
           Exit For
        End If
     Next K
     If K = 0 Then
        K = UBound(AR_FTEXT) + 1
     End If
  Else
     K = 0
  End If
     
  If K = UBound(AR_FTEXT) + 1 Then
  ElseIf K = 0 Then
     For J = I To 2 Step -1
        AR_FTEXT(J) = AR_FTEXT(J - 1)
        AR_FALSH(J) = AR_FALSH(J - 1)
     Next J
     AR_FTEXT(1) = W_COMBOBOX.Value
     AR_FALSH(1) = W_ALSH
     Call SET_REFCOMBO
  Else
     For J = I To 2 Step -1
        If J > K Then
        Else
           AR_FTEXT(J) = AR_FTEXT(J - 1)
           AR_FALSH(J) = AR_FALSH(J - 1)
        End If
     Next J
     AR_FTEXT(1) = W_COMBOBOX.Value
     AR_FALSH(1) = W_ALSH
     Call SET_REFCOMBO
  End If

End Sub

Private Sub UPD_REPCOMBO(W_COMBOBOX As Object)

  Dim W_ALSH As String
  Dim I As Long
  Dim J As Long
  Dim K As Long

     
  W_ALSH = ""
     
  For I = 1 To UBound(AR_RTEXT)
     If AR_RTEXT(I) = W_COMBOBOX.Value Then
        W_ALSH = AR_RALSH(I)
        Exit For
     End If
  Next I
  If I = UBound(AR_RTEXT) + 1 Then
     I = UBound(AR_RTEXT)
     For K = I To 1 Step -1
        If AR_RALSH(K) <> "!" Then
           Exit For
        End If
     Next K
     If K = 0 Then
        K = UBound(AR_RTEXT) + 1
     End If
  Else
     K = 0
  End If
     
  If K = UBound(AR_RTEXT) + 1 Then
  ElseIf K = 0 Then
     For J = I To 2 Step -1
        AR_RTEXT(J) = AR_RTEXT(J - 1)
        AR_RALSH(J) = AR_RALSH(J - 1)
     Next J
     AR_RTEXT(1) = W_COMBOBOX.Value
     AR_RALSH(1) = W_ALSH
     Call SET_REPCOMBO
  Else
     For J = I To 2 Step -1
        If J > K Then
        Else
           AR_RTEXT(J) = AR_RTEXT(J - 1)
           AR_RALSH(J) = AR_RALSH(J - 1)
        End If
     Next J
     AR_RTEXT(1) = W_COMBOBOX.Value
     AR_RALSH(1) = W_ALSH
     Call SET_REPCOMBO
  End If

End Sub

Private Sub UPD_DIRCOMBO(W_COMBOBOX As Object)

  Dim W_ALSH As String
  Dim I As Long
  Dim J As Long
  Dim K As Long

     
  W_ALSH = ""
     
  For I = 1 To UBound(AR_DTEXT)
     If AR_DTEXT(I) = W_COMBOBOX.Value Then
        W_ALSH = AR_DALSH(I)
        Exit For
     End If
  Next I
  If I = UBound(AR_DTEXT) + 1 Then
     I = UBound(AR_DTEXT)
     For K = I To 1 Step -1
        If AR_DALSH(K) <> "!" Then
           Exit For
        End If
     Next K
     If K = 0 Then
        K = UBound(AR_DTEXT) + 1
     End If
  Else
     K = 0
  End If
     
  If K = UBound(AR_DTEXT) + 1 Then
  ElseIf K = 0 Then
     For J = I To 2 Step -1
        AR_DTEXT(J) = AR_DTEXT(J - 1)
        AR_DALSH(J) = AR_DALSH(J - 1)
     Next J
     AR_DTEXT(1) = W_COMBOBOX.Value
     AR_DALSH(1) = W_ALSH
     Call SET_DIRCOMBO
  Else
     For J = I To 2 Step -1
        If J > K Then
        Else
           AR_DTEXT(J) = AR_DTEXT(J - 1)
           AR_DALSH(J) = AR_DALSH(J - 1)
        End If
     Next J
     AR_DTEXT(1) = W_COMBOBOX.Value
     AR_DALSH(1) = W_ALSH
     Call SET_DIRCOMBO
  End If

End Sub

Private Sub UPD_REFCOMBO2()

  Dim W_ALSH As String
  Dim I As Long
  Dim J As Long
  Dim K As Long

     
  W_ALSH = ""
     
  For I = 1 To UBound(AR_ATEXT)
     If AR_ATEXT(I) = W_ATEXT Then
        W_ALSH = AR_AALSH(I)
        Exit For
     End If
  Next I
  If I = UBound(AR_ATEXT) + 1 Then
     I = UBound(AR_ATEXT)
     For K = I To 1 Step -1
        If AR_AALSH(K) <> "!" Then
           Exit For
        End If
     Next K
     If K = 0 Then
        K = UBound(AR_ATEXT) + 1
     End If
  Else
     K = 0
  End If
     
  If K = UBound(AR_ATEXT) + 1 Then
  ElseIf K = 0 Then
     For J = I To 2 Step -1
        AR_ATEXT(J) = AR_ATEXT(J - 1)
        AR_AALSH(J) = AR_AALSH(J - 1)
     Next J
     AR_ATEXT(1) = W_ATEXT
     AR_AALSH(1) = W_ALSH
     Call SET_REFCOMBO2
  Else
     For J = I To 2 Step -1
        If J > K Then
        Else
           AR_ATEXT(J) = AR_ATEXT(J - 1)
           AR_AALSH(J) = AR_AALSH(J - 1)
        End If
     Next J
     AR_ATEXT(1) = W_ATEXT
     AR_AALSH(1) = W_ALSH
     Call SET_REFCOMBO2
  End If

End Sub
Attribute VB_Name = "UserForm10"
Attribute VB_Base = "0{87B2C460-8593-4B61-AA77-7892D7A320CE}{1C50BA05-C690-4C51-B221-3D1977B1653A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If

#If Win64 Then
Private Declare PtrSafe Sub ReleaseCapture Lib "user32.dll" ()
#Else
Private Declare Sub ReleaseCapture Lib "user32.dll" ()
#End If

#If Win64 Then
Private Declare PtrSafe Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
#Else
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
#End If
Const WM_NCLBUTTONDOWN = &HA1
Const HTCAPTION = 2

#If Win64 Then
Private Declare PtrSafe Function SetParent Lib "user32" (ByVal hWndChild As LongPtr, ByVal hWndNewParent As LongPtr) As LongPtr
#Else
Private Declare Function SetParent Lib "user32" (ByVal hWndChild As Long, ByVal hWndNewParent As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If
Private Const WS_CHILD = &H40000000
Private Const WS_CAPTION = &HC00000
Private Const GWL_STYLE = (-16)

#If Win64 Then
Private Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindow Lib "user32" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If
Const SW_SHOWNORMAL = 1
Const SW_SHOWMINIMIZED = 2
Const SW_SHOWMAXIMIZED = 3

#If Win64 Then
Private Declare PtrSafe Function GetWindowRect Lib "user32" (ByVal hwnd As LongPtr, lpRect As RECT) As Long
#Else
Private Declare Function GetWindowRect Lib "user32" (ByVal hwnd As Long, lpRect As RECT) As Long
#End If
Private Type RECT
        Left As Long
        Top As Long
        Right As Long
        Bottom As Long
End Type

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If
  
  '|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd|C|fffd|x|fffd||fffd||fffd|g
#If Win64 Then
  Private Declare PtrSafe Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As LongPtr)
#Else
  Private Declare Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
#End If
  Private Const KEYEVENTF_KEYUP = &H2
  Private Const VK_RETURN = 13

Private Sub UserForm_Initialize()
  
#If Win64 Then
  Dim hwnd As LongPtr
  Dim hWnd1 As LongPtr
#Else
  Dim hwnd As Long
  Dim hWnd1 As Long
#End If
  
  Dim Rect1 As RECT
  Dim W_AWS As Long

  hwnd = Application.hwnd
  W_AWS = Application.WindowState
  
  Call ShowWindow(hwnd, SW_SHOWMAXIMIZED)
  GetWindowRect hwnd, Rect1

  hWnd1 = FindWindow(vbNullString, Me.Caption)
  
#If Win64 Then
  SetWindowLongPtr hWnd1, GWL_STYLE, GetWindowLongPtr(hWnd1, GWL_STYLE) Xor WS_CAPTION
  SetWindowLongPtr hWnd1, GWL_STYLE, GetWindowLongPtr(hWnd1, GWL_STYLE) Or WS_CHILD
#Else
  SetWindowLong hWnd1, GWL_STYLE, GetWindowLong(hWnd1, GWL_STYLE) Xor WS_CAPTION
  SetWindowLong hWnd1, GWL_STYLE, GetWindowLong(hWnd1, GWL_STYLE) Or WS_CHILD
#End If

  If W_BAR15T = 0 And _
     W_BAR15L = 0 Then
     If Application.CommandBars.GetPressedMso("MinimizeRibbon") = True Then
        If Val(Application.Version) = 15 Then
           SetWindowPos hWnd1, 0, Rect1.Left, Rect1.Top + 60, 550, 21, &H4 Or &H40
        Else
           SetWindowPos hWnd1, 0, Rect1.Left, Rect1.Top + 70, 550, 21, &H4 Or &H40
        End If
     Else
        If Val(Application.Version) = 15 Then
           SetWindowPos hWnd1, 0, Rect1.Left, Rect1.Top + 150, 550, 21, &H4 Or &H40
        Else
           SetWindowPos hWnd1, 0, Rect1.Left, Rect1.Top + 165, 550, 21, &H4 Or &H40
        End If
     End If
  Else
     SetWindowPos hWnd1, 0, W_BAR15L, W_BAR15T, 550, 21, &H4 Or &H40
  End If
  
  SetParent hWnd1, hwnd

  If W_AWS = xlNormal Then
     Call ShowWindow(hwnd, SW_SHOWNORMAL)
  End If

  If SW_ENGLISH = True Then
     Me.ComboBox1.ControlTipText = "Find what"
     Me.ComboBox2.ControlTipText = "Replace with"
     Me.Image1.ControlTipText = "Close"
     Me.Image2.ControlTipText = "Find previous"
     Me.Image3.ControlTipText = "Find next"
     Me.Image4.ControlTipText = "Select all"
     Me.Image5.ControlTipText = "Replace previous"
     Me.Image6.ControlTipText = "Replace next"
     Me.Image7.ControlTipText = "Replace all"
     Me.Image8.ControlTipText = "Show dialog"
     Me.Label1.Caption = "Find what"
     Me.Label2.Caption = "Replace with"
  Else
     Me.ComboBox1.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.ComboBox2.ControlTipText = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|"
     Me.Image1.ControlTipText = "|fffd||82||fffd||fffd||fffd|"
     Me.Image2.ControlTipText = "|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Image3.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Image4.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.Image5.ControlTipText = "|fffd|O|fffd||fffd|u|fffd||fffd|"
     Me.Image6.ControlTipText = "|fffd||fffd||fffd||fffd|u|fffd||fffd|"
     Me.Image7.ControlTipText = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|"
     Me.Image8.ControlTipText = "|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|\|fffd||fffd|"
     Me.Label1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.Label2.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|"
  End If
  
  If SW_ENGLISH = True Then
     Me.Label1.Font.Name = "Courier New"
     Me.Label2.Font.Name = "Courier New"
     Me.Label1.Font.Size = 8
     Me.Label2.Font.Size = 8
     
     Me.ComboBox1.Font.Name = "Courier New"
     Me.ComboBox2.Font.Name = "Courier New"
     Me.ComboBox1.Font.Size = 8
     Me.ComboBox2.Font.Size = 8
  Else
     Me.Label1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label1.Font.Size = 8
     Me.Label2.Font.Size = 8
     
     Me.ComboBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ComboBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ComboBox1.Font.Size = 8
     Me.ComboBox2.Font.Size = 8
  End If
  
  If XL4 Is Nothing Then
     Set XL4 = New C07Excel
     Set XL4.APP = Application
  End If
  
  Call SET_REFCOMBO
  If W_FTEXT <> "" And _
     W_FTEXT <> AR_FTEXT(1) Then
     Me.ComboBox1.Value = W_FTEXT
  End If
  Call SET_REPCOMBO
  If W_RTEXT <> "" And _
     W_RTEXT <> AR_RTEXT(1) Then
     Me.ComboBox2.Value = W_RTEXT
  End If
  
  If Me.ComboBox1.Value = "" Then
     Me.Label1.Visible = True
  End If
  If Me.ComboBox2.Value = "" Then
     Me.Label2.Visible = True
  End If
  
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Image8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless

End Sub

Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless
  On Error Resume Next
  Me.ComboBox2.SetFocus
  Me.ComboBox1.SetFocus
  On Error GoTo 0

End Sub

Private Sub Label2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Me.Show vbModeless
  On Error Resume Next
  Me.ComboBox1.SetFocus
  Me.ComboBox2.SetFocus
  On Error GoTo 0

End Sub

Private Sub UserForm_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

#If Win64 Then
  Dim hwnd As LongPtr
  Dim hWnd1 As LongPtr
#Else
  Dim hwnd As Long
  Dim hWnd1 As Long
#End If

  Dim W_AC As String
  Dim Rect0 As RECT
  Dim Rect1 As RECT


  If Button = 1 Then
     hwnd = Application.hwnd
     hWnd1 = GetActiveWindow
     ReleaseCapture
     Call SendMessage(hWnd1, WM_NCLBUTTONDOWN, HTCAPTION, 0&)
     W_AC = Application.Caption
     Application.Visible = False
     Application.Visible = True
     AppActivate W_AC
#If Win64 Then
     SetWindowLongPtr hWnd1, GWL_STYLE, GetWindowLongPtr(hWnd1, GWL_STYLE) Or WS_CHILD
#Else
     SetWindowLong hWnd1, GWL_STYLE, GetWindowLong(hWnd1, GWL_STYLE) Or WS_CHILD
#End If
     SetWindowPos hWnd1, 0, 0, 0, 0, 0, &H1 Or &H2 Or &H4 Or &H40
     SetParent hWnd1, hwnd
  
     GetWindowRect hwnd, Rect0
     GetWindowRect hWnd1, Rect1
     If Val(Application.Version) = 15 Then
        W_BAR15T = Rect1.Top - Rect0.Top - 1
        W_BAR15L = Rect1.Left - Rect0.Left - 1
     Else
        W_BAR15T = Rect1.Top - Rect0.Top - 7
        W_BAR15L = Rect1.Left - Rect0.Left - 7
     End If
  End If

End Sub

Private Sub Label1_Click()

  Me.Show vbModeless
  On Error Resume Next
  Me.ComboBox2.SetFocus
  Me.ComboBox1.SetFocus
  On Error GoTo 0

End Sub

Private Sub Label2_Click()

  Me.Show vbModeless
  On Error Resume Next
  Me.ComboBox1.SetFocus
  Me.ComboBox2.SetFocus
  On Error GoTo 0

End Sub

Private Sub ComboBox1_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If Me.ComboBox1.Value = "" Then
     Me.Label1.Visible = True
  Else
     If Me.Label1.Visible = True Then
        Me.Label1.Visible = False
     End If
  End If

End Sub

Private Sub ComboBox1_Enter()

  If SW_INCSRH = True Then
     SW_IS = True
  End If

  If SW_WRDCMPL = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox1.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox1.BackColor = &HC0FFC0
  Else
     Me.ComboBox1.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_IS = False
  SW_DIC = False
  Call TM_END
  Call TMR_END

  Me.ComboBox1.BackColor = &H80000005

End Sub

Private Sub ComboBox1_Change()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

  If Me.ComboBox1.Value = "" Then
     Me.Label1.Visible = True
  Else
     If Me.Label1.Visible = True Then
        Me.Label1.Visible = False
     End If
  End If

  If SW_PCMPL = False Then
     If Len(Me.ComboBox1.Value) <> 0 And _
        W_PCCNT = 0 Then
        Set W_BOX = Me.ComboBox1
        Call PCMPL(W_CB1)
        Set W_BOX = Nothing
     End If
  End If

  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox1.SelStart = Len(Me.ComboBox1.Value) And _
        Len(Me.ComboBox1.Value) <> 0 Then
        Set W_BOX = Me.ComboBox1
        Call TM_STR
     End If
  End If

  If W_RETXT <> "" Then
     Me.ComboBox1.SelStart = W_SELSTART
     W_RETXT = ""
  End If

  If InStr(Me.ComboBox1.Value, vbCrLf) > 0 Then
     Me.ComboBox1.Value = Application.Substitute(Me.ComboBox1.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox1.Value, vbTab) > 0 Then
     Me.ComboBox1.Value = Application.Substitute(Me.ComboBox1.Value, vbTab, "")
  End If

  If SW_PCST = False Then
     W_PCCNT = 0
  End If
  W_CB1 = Me.ComboBox1.Value

End Sub

Private Sub ComboBox2_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If Me.ComboBox2.Value = "" Then
     Me.Label2.Visible = True
  Else
     If Me.Label2.Visible = True Then
        Me.Label2.Visible = False
     End If
  End If

End Sub

Private Sub ComboBox2_Enter()

  If SW_WRDCMPL = True Then
     SW_DIC = True
  End If

  If SW_ORE = True Then
     Me.ComboBox2.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.ComboBox2.BackColor = &HC0FFC0
  Else
     Me.ComboBox2.BackColor = &HC0FFFF
  End If

End Sub

Private Sub ComboBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  SW_DIC = False
  Call TM_END

  Me.ComboBox2.BackColor = &H80000005

End Sub

Private Sub ComboBox2_Change()
'|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  
  If Me.ComboBox2.Value = "" Then
     Me.Label2.Visible = True
  Else
     If Me.Label2.Visible = True Then
        Me.Label2.Visible = False
     End If
  End If
  
  '|fffd||fffd||fffd||fffd||fffd||22ae|
  If SW_DIC = True Then
     Call TM_END
     If Me.ComboBox2.SelStart = Len(Me.ComboBox2.Value) And _
        Len(Me.ComboBox2.Value) <> 0 Then
        Set W_BOX = Me.ComboBox2
        Call TM_STR
     End If
  End If
  
  If W_RETXT <> "" Then
     Me.ComboBox2.SelStart = W_SELSTART
     W_RETXT = ""
  End If
  
  If InStr(Me.ComboBox2.Value, vbCrLf) > 0 Then
     Me.ComboBox2.Value = Application.Substitute(Me.ComboBox2.Value, vbCrLf, "")
  End If
  If InStr(Me.ComboBox2.Value, vbTab) > 0 Then
     Me.ComboBox2.Value = Application.Substitute(Me.ComboBox2.Value, vbTab, "")
  End If

End Sub

Private Sub Image1_Click()
'|fffd||82||fffd||fffd||fffd|
  
  Unload Me

End Sub

Private Sub Image2_Click()
'|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_FINDP"
  Call UserForm1.FINDPN(False, 0)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image3_Click()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_FINDN"
  Call UserForm1.FINDPN(True, 0)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image4_Click()
'|fffd||fffd||fffd||5c2||111|I|fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_SELECTA"
  Call UserForm1.FINDPN(True, 6)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image5_Click()
'|fffd|O|fffd||fffd|u|fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  UserForm1.ComboBox2.Value = Me.ComboBox2.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_REPLACEP"
  Call UserForm1.FINDPN(False, 1)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image6_Click()
'|fffd||fffd||fffd||fffd|u|fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  UserForm1.ComboBox2.Value = Me.ComboBox2.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_REPLACEN"
  Call UserForm1.FINDPN(True, 1)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image7_Click()
'|fffd||fffd||fffd||5c2||112|u|fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  SW_HIDE = True
  UserForm1.Hide
  SW_HIDE = False
  UserForm1.ComboBox1.Value = Me.ComboBox1.Value
  UserForm1.ComboBox2.Value = Me.ComboBox2.Value
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_REPLACEA"
  Call UserForm1.FINDPN(True, 2)
  
  W_CLKBTN = ""
  Unload UserForm1
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub Image8_Click()
'|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|\|fffd||fffd|
  
  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "2013BAR_FORM"
  Call SHOWF_RTN
  Exit Sub

LABEL_REP:
  Call REPORT_RTN

End Sub

Private Sub UserForm_Terminate()

  Set XL4 = Nothing

End Sub
Attribute VB_Name = "UserForm11"
Attribute VB_Base = "0{4873E29D-102C-464D-91CF-B68D19C05E27}{708E1BE7-C6C6-49B9-9E32-B36ADB2F7281}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
''Private Declare PtrSafe Function GetWindowLong Lib "USER32" Alias "GetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long) As Long
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If
Private Const GWL_EXSTYLE = (-20)

#If Win64 Then
''Private Declare PtrSafe Function SetWindowLong Lib "USER32" Alias "SetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#Else
Private Declare Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As Long, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#End If
Private Const LWA_COLORKEY = 1
Private Const LWA_ALPHA = 2
Private Const WS_EX_LAYERED = &H80000

Private Sub UserForm_Initialize()
  
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim W_TPS As Long
    
  W_TP11 = W_TP0
  
  hwnd = FindWindow(vbNullString, Me.Caption)
#If Win64 Then
  Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
  Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
  On Error Resume Next
  Call SetLayeredWindowAttributes(hwnd, 0, W_TP11, LWA_ALPHA)
  On Error GoTo 0
  
  Me.Left = Application.Left
  Me.Top = Application.Top
  Me.Width = Application.Width
  Me.Height = Application.Height

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  Dim W_TPS As Long
  
  
  If UserForm1.CheckBox73.Value = True Then
     W_TPS = W_TP1
     W_TP1 = 25
     
     If W_TP1 <> W_TPS Then
        hwnd = FindWindow(vbNullString, UserForm1.Caption)
#If Win64 Then
        Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
        Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
        On Error Resume Next
        Call SetLayeredWindowAttributes(hwnd, 0, W_TP1, LWA_ALPHA)
        On Error GoTo 0
     End If
  End If
  
  W_TP11 = 0
        
  hwnd = FindWindow(vbNullString, Me.Caption)
#If Win64 Then
  Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
  Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
  On Error Resume Next
  Call SetLayeredWindowAttributes(hwnd, 0, W_TP11, LWA_ALPHA)
  On Error GoTo 0
  W_TP11 = 99

End Sub
Attribute VB_Name = "UserForm12"
Attribute VB_Base = "0{9935F3D9-FFEA-4327-9482-33725E3DCF83}{BDA8714E-9C4C-4203-8EAF-C8AC94667972}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

   '|fffd||fffd||fffd||fffd||752||fffd|
   If UserForm1.CheckBox49.Value = True Then
      Me.Caption = "Bookmark"
      Me.CommandButton1.Caption = "Save"
      Me.CommandButton2.Caption = "Open"
      Me.CommandButton3.Caption = "Delete"
      Me.CommandButton4.Caption = "Save"
      Me.CommandButton5.Caption = "Open"
      Me.CommandButton6.Caption = "Delete"
      Me.CommandButton7.Caption = "Save"
      Me.CommandButton8.Caption = "Open"
      Me.CommandButton9.Caption = "Delete"
      Me.CommandButton10.Caption = "Save"
      Me.CommandButton11.Caption = "Open"
      Me.CommandButton12.Caption = "Delete"
      Me.CommandButton13.Caption = "Save"
      Me.CommandButton14.Caption = "Open"
      Me.CommandButton15.Caption = "Delete"
      Me.CommandButton16.Caption = "Save"
      Me.CommandButton17.Caption = "Open"
      Me.CommandButton18.Caption = "Delete"
      Me.CommandButton19.Caption = "Save"
      Me.CommandButton20.Caption = "Open"
      Me.CommandButton21.Caption = "Delete"
      Me.CommandButton22.Caption = "Save"
      Me.CommandButton23.Caption = "Open"
      Me.CommandButton24.Caption = "Delete"
      Me.CommandButton25.Caption = "Save"
      Me.CommandButton26.Caption = "Open"
      Me.CommandButton27.Caption = "Delete"
      Me.CommandButton28.Caption = "Save"
      Me.CommandButton29.Caption = "Open"
      Me.CommandButton30.Caption = "Delete"
      Me.CommandButton33.Caption = "All delete"
      Me.CommandButton32.Caption = "Cancel"
   Else
      Me.Caption = "|fffd|u|fffd|b|fffd|N|fffd|}|fffd|[|fffd|N"
      Me.CommandButton1.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton2.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton3.Caption = "|fffd||d3dc|"
      Me.CommandButton4.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton5.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton6.Caption = "|fffd||d3dc|"
      Me.CommandButton7.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton8.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton9.Caption = "|fffd||d3dc|"
      Me.CommandButton10.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton11.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton12.Caption = "|fffd||d3dc|"
      Me.CommandButton13.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton14.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton15.Caption = "|fffd||d3dc|"
      Me.CommandButton16.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton17.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton18.Caption = "|fffd||d3dc|"
      Me.CommandButton19.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton20.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton21.Caption = "|fffd||d3dc|"
      Me.CommandButton22.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton23.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton24.Caption = "|fffd||d3dc|"
      Me.CommandButton25.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton26.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton27.Caption = "|fffd||d3dc|"
      Me.CommandButton28.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton29.Caption = "|fffd|J|fffd||fffd|"
      Me.CommandButton30.Caption = "|fffd||d3dc|"
      Me.CommandButton33.Caption = "|fffd||fffd||fffd||5c2||10d||d3dc|"
      Me.CommandButton32.Caption = "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|"
   End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.Label4.Font.Name = "Segoe UI"
        Me.Label5.Font.Name = "Segoe UI"
        Me.Label6.Font.Name = "Segoe UI"
        Me.Label7.Font.Name = "Segoe UI"
        Me.Label8.Font.Name = "Segoe UI"
        Me.Label9.Font.Name = "Segoe UI"
        Me.Label10.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
        Me.CommandButton4.Font.Name = "Segoe UI"
        Me.CommandButton5.Font.Name = "Segoe UI"
        Me.CommandButton6.Font.Name = "Segoe UI"
        Me.CommandButton7.Font.Name = "Segoe UI"
        Me.CommandButton8.Font.Name = "Segoe UI"
        Me.CommandButton9.Font.Name = "Segoe UI"
        Me.CommandButton10.Font.Name = "Segoe UI"
        Me.CommandButton11.Font.Name = "Segoe UI"
        Me.CommandButton12.Font.Name = "Segoe UI"
        Me.CommandButton13.Font.Name = "Segoe UI"
        Me.CommandButton14.Font.Name = "Segoe UI"
        Me.CommandButton15.Font.Name = "Segoe UI"
        Me.CommandButton16.Font.Name = "Segoe UI"
        Me.CommandButton17.Font.Name = "Segoe UI"
        Me.CommandButton18.Font.Name = "Segoe UI"
        Me.CommandButton19.Font.Name = "Segoe UI"
        Me.CommandButton20.Font.Name = "Segoe UI"
        Me.CommandButton21.Font.Name = "Segoe UI"
        Me.CommandButton22.Font.Name = "Segoe UI"
        Me.CommandButton23.Font.Name = "Segoe UI"
        Me.CommandButton24.Font.Name = "Segoe UI"
        Me.CommandButton25.Font.Name = "Segoe UI"
        Me.CommandButton26.Font.Name = "Segoe UI"
        Me.CommandButton27.Font.Name = "Segoe UI"
        Me.CommandButton28.Font.Name = "Segoe UI"
        Me.CommandButton29.Font.Name = "Segoe UI"
        Me.CommandButton30.Font.Name = "Segoe UI"
        Me.CommandButton31.Font.Name = "Segoe UI"
        Me.CommandButton32.Font.Name = "Segoe UI"
        Me.CommandButton33.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.Label4.Font.Name = "Meiryo UI"
        Me.Label5.Font.Name = "Meiryo UI"
        Me.Label6.Font.Name = "Meiryo UI"
        Me.Label7.Font.Name = "Meiryo UI"
        Me.Label8.Font.Name = "Meiryo UI"
        Me.Label9.Font.Name = "Meiryo UI"
        Me.Label10.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
        Me.CommandButton4.Font.Name = "Meiryo UI"
        Me.CommandButton5.Font.Name = "Meiryo UI"
        Me.CommandButton6.Font.Name = "Meiryo UI"
        Me.CommandButton7.Font.Name = "Meiryo UI"
        Me.CommandButton8.Font.Name = "Meiryo UI"
        Me.CommandButton9.Font.Name = "Meiryo UI"
        Me.CommandButton10.Font.Name = "Meiryo UI"
        Me.CommandButton11.Font.Name = "Meiryo UI"
        Me.CommandButton12.Font.Name = "Meiryo UI"
        Me.CommandButton13.Font.Name = "Meiryo UI"
        Me.CommandButton14.Font.Name = "Meiryo UI"
        Me.CommandButton15.Font.Name = "Meiryo UI"
        Me.CommandButton16.Font.Name = "Meiryo UI"
        Me.CommandButton17.Font.Name = "Meiryo UI"
        Me.CommandButton18.Font.Name = "Meiryo UI"
        Me.CommandButton19.Font.Name = "Meiryo UI"
        Me.CommandButton20.Font.Name = "Meiryo UI"
        Me.CommandButton21.Font.Name = "Meiryo UI"
        Me.CommandButton22.Font.Name = "Meiryo UI"
        Me.CommandButton23.Font.Name = "Meiryo UI"
        Me.CommandButton24.Font.Name = "Meiryo UI"
        Me.CommandButton25.Font.Name = "Meiryo UI"
        Me.CommandButton26.Font.Name = "Meiryo UI"
        Me.CommandButton27.Font.Name = "Meiryo UI"
        Me.CommandButton28.Font.Name = "Meiryo UI"
        Me.CommandButton29.Font.Name = "Meiryo UI"
        Me.CommandButton30.Font.Name = "Meiryo UI"
        Me.CommandButton31.Font.Name = "Meiryo UI"
        Me.CommandButton32.Font.Name = "Meiryo UI"
        Me.CommandButton33.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.Label4.Font.Name = "Tahoma"
        Me.Label5.Font.Name = "Tahoma"
        Me.Label6.Font.Name = "Tahoma"
        Me.Label7.Font.Name = "Tahoma"
        Me.Label8.Font.Name = "Tahoma"
        Me.Label9.Font.Name = "Tahoma"
        Me.Label10.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
        Me.CommandButton4.Font.Name = "Tahoma"
        Me.CommandButton5.Font.Name = "Tahoma"
        Me.CommandButton6.Font.Name = "Tahoma"
        Me.CommandButton7.Font.Name = "Tahoma"
        Me.CommandButton8.Font.Name = "Tahoma"
        Me.CommandButton9.Font.Name = "Tahoma"
        Me.CommandButton10.Font.Name = "Tahoma"
        Me.CommandButton11.Font.Name = "Tahoma"
        Me.CommandButton12.Font.Name = "Tahoma"
        Me.CommandButton13.Font.Name = "Tahoma"
        Me.CommandButton14.Font.Name = "Tahoma"
        Me.CommandButton15.Font.Name = "Tahoma"
        Me.CommandButton16.Font.Name = "Tahoma"
        Me.CommandButton17.Font.Name = "Tahoma"
        Me.CommandButton18.Font.Name = "Tahoma"
        Me.CommandButton19.Font.Name = "Tahoma"
        Me.CommandButton20.Font.Name = "Tahoma"
        Me.CommandButton21.Font.Name = "Tahoma"
        Me.CommandButton22.Font.Name = "Tahoma"
        Me.CommandButton23.Font.Name = "Tahoma"
        Me.CommandButton24.Font.Name = "Tahoma"
        Me.CommandButton25.Font.Name = "Tahoma"
        Me.CommandButton26.Font.Name = "Tahoma"
        Me.CommandButton27.Font.Name = "Tahoma"
        Me.CommandButton28.Font.Name = "Tahoma"
        Me.CommandButton29.Font.Name = "Tahoma"
        Me.CommandButton30.Font.Name = "Tahoma"
        Me.CommandButton31.Font.Name = "Tahoma"
        Me.CommandButton32.Font.Name = "Tahoma"
        Me.CommandButton33.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.Label4.Font.Name = "MS UI Gothic"
        Me.Label5.Font.Name = "MS UI Gothic"
        Me.Label6.Font.Name = "MS UI Gothic"
        Me.Label7.Font.Name = "MS UI Gothic"
        Me.Label8.Font.Name = "MS UI Gothic"
        Me.Label9.Font.Name = "MS UI Gothic"
        Me.Label10.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton4.Font.Name = "MS UI Gothic"
        Me.CommandButton5.Font.Name = "MS UI Gothic"
        Me.CommandButton6.Font.Name = "MS UI Gothic"
        Me.CommandButton7.Font.Name = "MS UI Gothic"
        Me.CommandButton8.Font.Name = "MS UI Gothic"
        Me.CommandButton9.Font.Name = "MS UI Gothic"
        Me.CommandButton10.Font.Name = "MS UI Gothic"
        Me.CommandButton11.Font.Name = "MS UI Gothic"
        Me.CommandButton12.Font.Name = "MS UI Gothic"
        Me.CommandButton13.Font.Name = "MS UI Gothic"
        Me.CommandButton14.Font.Name = "MS UI Gothic"
        Me.CommandButton15.Font.Name = "MS UI Gothic"
        Me.CommandButton16.Font.Name = "MS UI Gothic"
        Me.CommandButton17.Font.Name = "MS UI Gothic"
        Me.CommandButton18.Font.Name = "MS UI Gothic"
        Me.CommandButton19.Font.Name = "MS UI Gothic"
        Me.CommandButton20.Font.Name = "MS UI Gothic"
        Me.CommandButton21.Font.Name = "MS UI Gothic"
        Me.CommandButton22.Font.Name = "MS UI Gothic"
        Me.CommandButton23.Font.Name = "MS UI Gothic"
        Me.CommandButton24.Font.Name = "MS UI Gothic"
        Me.CommandButton25.Font.Name = "MS UI Gothic"
        Me.CommandButton26.Font.Name = "MS UI Gothic"
        Me.CommandButton27.Font.Name = "MS UI Gothic"
        Me.CommandButton28.Font.Name = "MS UI Gothic"
        Me.CommandButton29.Font.Name = "MS UI Gothic"
        Me.CommandButton30.Font.Name = "MS UI Gothic"
        Me.CommandButton31.Font.Name = "MS UI Gothic"
        Me.CommandButton32.Font.Name = "MS UI Gothic"
        Me.CommandButton33.Font.Name = "MS UI Gothic"
     End If
  End If
  
  If SW_ENGLISH = True Then
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox2.Font.Name = "Courier New"
     Me.TextBox3.Font.Name = "Courier New"
     Me.TextBox4.Font.Name = "Courier New"
     Me.TextBox5.Font.Name = "Courier New"
     Me.TextBox6.Font.Name = "Courier New"
     Me.TextBox7.Font.Name = "Courier New"
     Me.TextBox8.Font.Name = "Courier New"
     Me.TextBox9.Font.Name = "Courier New"
     Me.TextBox10.Font.Name = "Courier New"
     Me.TextBox11.Font.Name = "Courier New"
     Me.TextBox12.Font.Name = "Courier New"
     Me.TextBox13.Font.Name = "Courier New"
     Me.TextBox14.Font.Name = "Courier New"
     Me.TextBox15.Font.Name = "Courier New"
     Me.TextBox16.Font.Name = "Courier New"
     Me.TextBox17.Font.Name = "Courier New"
     Me.TextBox18.Font.Name = "Courier New"
     Me.TextBox19.Font.Name = "Courier New"
     Me.TextBox20.Font.Name = "Courier New"
     Me.TextBox21.Font.Name = "Courier New"
     Me.TextBox22.Font.Name = "Courier New"
     Me.TextBox23.Font.Name = "Courier New"
     Me.TextBox24.Font.Name = "Courier New"
     Me.TextBox25.Font.Name = "Courier New"
     Me.TextBox26.Font.Name = "Courier New"
     Me.TextBox27.Font.Name = "Courier New"
     Me.TextBox28.Font.Name = "Courier New"
     Me.TextBox29.Font.Name = "Courier New"
     Me.TextBox30.Font.Name = "Courier New"
  
     Me.TextBox1.Font.Size = 8
     Me.TextBox2.Font.Size = 8
     Me.TextBox3.Font.Size = 8
     Me.TextBox4.Font.Size = 8
     Me.TextBox5.Font.Size = 8
     Me.TextBox6.Font.Size = 8
     Me.TextBox7.Font.Size = 8
     Me.TextBox8.Font.Size = 8
     Me.TextBox9.Font.Size = 8
     Me.TextBox10.Font.Size = 8
     Me.TextBox11.Font.Size = 8
     Me.TextBox12.Font.Size = 8
     Me.TextBox13.Font.Size = 8
     Me.TextBox14.Font.Size = 8
     Me.TextBox15.Font.Size = 8
     Me.TextBox16.Font.Size = 8
     Me.TextBox17.Font.Size = 8
     Me.TextBox18.Font.Size = 8
     Me.TextBox19.Font.Size = 8
     Me.TextBox20.Font.Size = 8
     Me.TextBox21.Font.Size = 8
     Me.TextBox22.Font.Size = 8
     Me.TextBox23.Font.Size = 8
     Me.TextBox24.Font.Size = 8
     Me.TextBox25.Font.Size = 8
     Me.TextBox26.Font.Size = 8
     Me.TextBox27.Font.Size = 8
     Me.TextBox28.Font.Size = 8
     Me.TextBox29.Font.Size = 8
     Me.TextBox30.Font.Size = 8
  Else
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox3.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox4.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox5.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox6.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox7.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox8.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox9.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox10.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox11.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox12.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox13.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox14.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox15.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox16.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox17.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox18.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox19.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox20.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox21.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox22.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox23.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox24.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox25.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox26.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox27.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox28.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox29.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox30.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.TextBox1.Font.Size = 9
     Me.TextBox2.Font.Size = 9
     Me.TextBox3.Font.Size = 9
     Me.TextBox4.Font.Size = 9
     Me.TextBox5.Font.Size = 9
     Me.TextBox6.Font.Size = 9
     Me.TextBox7.Font.Size = 9
     Me.TextBox8.Font.Size = 9
     Me.TextBox9.Font.Size = 9
     Me.TextBox10.Font.Size = 9
     Me.TextBox11.Font.Size = 9
     Me.TextBox12.Font.Size = 9
     Me.TextBox13.Font.Size = 9
     Me.TextBox14.Font.Size = 9
     Me.TextBox15.Font.Size = 9
     Me.TextBox16.Font.Size = 9
     Me.TextBox17.Font.Size = 9
     Me.TextBox18.Font.Size = 9
     Me.TextBox19.Font.Size = 9
     Me.TextBox20.Font.Size = 9
     Me.TextBox21.Font.Size = 9
     Me.TextBox22.Font.Size = 9
     Me.TextBox23.Font.Size = 9
     Me.TextBox24.Font.Size = 9
     Me.TextBox25.Font.Size = 9
     Me.TextBox26.Font.Size = 9
     Me.TextBox27.Font.Size = 9
     Me.TextBox28.Font.Size = 9
     Me.TextBox29.Font.Size = 9
     Me.TextBox30.Font.Size = 9
  End If
  
  Me.TextBox1.Value = W_BMB01
  Me.TextBox2.Value = W_BMB02
  Me.TextBox3.Value = W_BMB03
  Me.TextBox4.Value = W_BMB04
  Me.TextBox5.Value = W_BMB05
  Me.TextBox6.Value = W_BMB06
  Me.TextBox7.Value = W_BMB07
  Me.TextBox8.Value = W_BMB08
  Me.TextBox9.Value = W_BMB09
  Me.TextBox10.Value = W_BMB10
  Me.TextBox11.Value = W_BMS01
  Me.TextBox12.Value = W_BMS02
  Me.TextBox13.Value = W_BMS03
  Me.TextBox14.Value = W_BMS04
  Me.TextBox15.Value = W_BMS05
  Me.TextBox16.Value = W_BMS06
  Me.TextBox17.Value = W_BMS07
  Me.TextBox18.Value = W_BMS08
  Me.TextBox19.Value = W_BMS09
  Me.TextBox20.Value = W_BMS10
  Me.TextBox21.Value = W_BMC01
  Me.TextBox22.Value = W_BMC02
  Me.TextBox23.Value = W_BMC03
  Me.TextBox24.Value = W_BMC04
  Me.TextBox25.Value = W_BMC05
  Me.TextBox26.Value = W_BMC06
  Me.TextBox27.Value = W_BMC07
  Me.TextBox28.Value = W_BMC08
  Me.TextBox29.Value = W_BMC09
  Me.TextBox30.Value = W_BMC10

  If Me.TextBox1.Value = "" Then
     Me.CommandButton1.Enabled = True
     Me.CommandButton2.Enabled = False
     Me.CommandButton3.Enabled = False
  End If
  If Me.TextBox2.Value = "" Then
     Me.CommandButton4.Enabled = True
     Me.CommandButton5.Enabled = False
     Me.CommandButton6.Enabled = False
  End If
  If Me.TextBox3.Value = "" Then
     Me.CommandButton7.Enabled = True
     Me.CommandButton8.Enabled = False
     Me.CommandButton9.Enabled = False
  End If
  If Me.TextBox4.Value = "" Then
     Me.CommandButton10.Enabled = True
     Me.CommandButton11.Enabled = False
     Me.CommandButton12.Enabled = False
  End If
  If Me.TextBox5.Value = "" Then
     Me.CommandButton13.Enabled = True
     Me.CommandButton14.Enabled = False
     Me.CommandButton15.Enabled = False
  End If
  If Me.TextBox6.Value = "" Then
     Me.CommandButton16.Enabled = True
     Me.CommandButton17.Enabled = False
     Me.CommandButton18.Enabled = False
  End If
  If Me.TextBox7.Value = "" Then
     Me.CommandButton19.Enabled = True
     Me.CommandButton20.Enabled = False
     Me.CommandButton21.Enabled = False
  End If
  If Me.TextBox8.Value = "" Then
     Me.CommandButton22.Enabled = True
     Me.CommandButton23.Enabled = False
     Me.CommandButton24.Enabled = False
  End If
  If Me.TextBox9.Value = "" Then
     Me.CommandButton25.Enabled = True
     Me.CommandButton26.Enabled = False
     Me.CommandButton27.Enabled = False
  End If
  If Me.TextBox10.Value = "" Then
     Me.CommandButton28.Enabled = True
     Me.CommandButton29.Enabled = False
     Me.CommandButton30.Enabled = False
  End If

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub CommandButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton5)

End Sub

Private Sub CommandButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton6)

End Sub

Private Sub CommandButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton7)

End Sub

Private Sub CommandButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton8)

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub CommandButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton10)

End Sub

Private Sub CommandButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton11)

End Sub

Private Sub CommandButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton12)

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton13)

End Sub

Private Sub CommandButton14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton14)

End Sub

Private Sub CommandButton15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton15)

End Sub

Private Sub CommandButton16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton16)

End Sub

Private Sub CommandButton17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton17)

End Sub

Private Sub CommandButton18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton18)

End Sub

Private Sub CommandButton19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton19)

End Sub

Private Sub CommandButton20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton20)

End Sub

Private Sub CommandButton21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton21)

End Sub

Private Sub CommandButton22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton22)

End Sub

Private Sub CommandButton23_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton23)

End Sub

Private Sub CommandButton24_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton24)

End Sub

Private Sub CommandButton25_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton25)

End Sub

Private Sub CommandButton26_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton26)

End Sub

Private Sub CommandButton27_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton27)

End Sub

Private Sub CommandButton28_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton28)

End Sub

Private Sub CommandButton29_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton29)

End Sub

Private Sub CommandButton30_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton30)

End Sub

Private Sub CommandButton31_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton31)

End Sub

Private Sub CommandButton32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton32)

End Sub

Private Sub CommandButton33_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton33)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton5_Enter()

  Me.CommandButton5.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton5.BackColor = &H8000000F

End Sub

Private Sub CommandButton6_Enter()

  Me.CommandButton6.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton6.BackColor = &H8000000F

End Sub

Private Sub CommandButton7_Enter()

  Me.CommandButton7.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton7.BackColor = &H8000000F

End Sub

Private Sub CommandButton8_Enter()

  Me.CommandButton8.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton8.BackColor = &H8000000F

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub CommandButton10_Enter()

  Me.CommandButton10.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton10.BackColor = &H8000000F

End Sub

Private Sub CommandButton11_Enter()

  Me.CommandButton11.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton11_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton11.BackColor = &H8000000F

End Sub

Private Sub CommandButton12_Enter()

  Me.CommandButton12.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton12.BackColor = &H8000000F

End Sub

Private Sub CommandButton13_Enter()

  Me.CommandButton13.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton13_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton13.BackColor = &H8000000F

End Sub

Private Sub CommandButton14_Enter()

  Me.CommandButton14.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton14.BackColor = &H8000000F

End Sub

Private Sub CommandButton15_Enter()

  Me.CommandButton15.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton15.BackColor = &H8000000F

End Sub

Private Sub CommandButton16_Enter()

  Me.CommandButton16.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton16.BackColor = &H8000000F

End Sub

Private Sub CommandButton17_Enter()

  Me.CommandButton17.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton17.BackColor = &H8000000F

End Sub

Private Sub CommandButton18_Enter()

  Me.CommandButton18.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton18.BackColor = &H8000000F

End Sub

Private Sub CommandButton19_Enter()

  Me.CommandButton19.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton19_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton19.BackColor = &H8000000F

End Sub

Private Sub CommandButton20_Enter()

  Me.CommandButton20.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton20_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton20.BackColor = &H8000000F

End Sub

Private Sub CommandButton21_Enter()

  Me.CommandButton21.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton21_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton21.BackColor = &H8000000F

End Sub

Private Sub CommandButton22_Enter()

  Me.CommandButton22.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton22_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton22.BackColor = &H8000000F

End Sub

Private Sub CommandButton23_Enter()

  Me.CommandButton23.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton23_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton23.BackColor = &H8000000F

End Sub

Private Sub CommandButton24_Enter()

  Me.CommandButton24.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton24_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton24.BackColor = &H8000000F

End Sub

Private Sub CommandButton25_Enter()

  Me.CommandButton25.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton25_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton25.BackColor = &H8000000F

End Sub

Private Sub CommandButton26_Enter()

  Me.CommandButton26.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton26_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton26.BackColor = &H8000000F

End Sub

Private Sub CommandButton27_Enter()

  Me.CommandButton27.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton27_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton27.BackColor = &H8000000F

End Sub

Private Sub CommandButton28_Enter()

  Me.CommandButton28.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton28_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton28.BackColor = &H8000000F

End Sub

Private Sub CommandButton29_Enter()

  Me.CommandButton29.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton29_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton29.BackColor = &H8000000F

End Sub

Private Sub CommandButton30_Enter()

  Me.CommandButton30.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton30_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton30.BackColor = &H8000000F

End Sub

Private Sub CommandButton31_Enter()

  Me.CommandButton31.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton31_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton31.BackColor = &H8000000F

End Sub

Private Sub CommandButton32_Enter()

  Me.CommandButton32.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton32_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton32.BackColor = &H8000000F

End Sub

Private Sub CommandButton33_Enter()

  Me.CommandButton33.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton33_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton33.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.5
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton1_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox1, Me.TextBox11, Me.TextBox21, Me.CommandButton2, Me.CommandButton3)

End Sub

Private Sub CommandButton4_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox2, Me.TextBox12, Me.TextBox22, Me.CommandButton5, Me.CommandButton6)

End Sub

Private Sub CommandButton7_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox3, Me.TextBox13, Me.TextBox23, Me.CommandButton8, Me.CommandButton9)

End Sub

Private Sub CommandButton10_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox4, Me.TextBox14, Me.TextBox24, Me.CommandButton11, Me.CommandButton12)

End Sub

Private Sub CommandButton13_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox5, Me.TextBox15, Me.TextBox25, Me.CommandButton14, Me.CommandButton15)

End Sub

Private Sub CommandButton16_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox6, Me.TextBox16, Me.TextBox26, Me.CommandButton17, Me.CommandButton18)

End Sub

Private Sub CommandButton19_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox7, Me.TextBox17, Me.TextBox27, Me.CommandButton20, Me.CommandButton21)

End Sub

Private Sub CommandButton22_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox8, Me.TextBox18, Me.TextBox28, Me.CommandButton23, Me.CommandButton24)

End Sub

Private Sub CommandButton25_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox9, Me.TextBox19, Me.TextBox29, Me.CommandButton26, Me.CommandButton27)

End Sub

Private Sub CommandButton28_Click()
'|fffd||6d1||fffd|

  Call BM_SAVE(Me.TextBox10, Me.TextBox20, Me.TextBox30, Me.CommandButton29, Me.CommandButton30)

End Sub

Private Sub BM_SAVE(W_TEXT1 As Object, W_TEXT2 As Object, W_TEXT3 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object)

  Dim W_TEXT1C As String
  Dim W_TEXT1V As String
  Dim W_TEXT2V As String
  Dim W_TEXT3V As String

  W_TEXT1C = W_TEXT1.ControlTipText
  W_TEXT1V = W_TEXT1.Value
  W_TEXT2V = W_TEXT2.Value
  W_TEXT3V = W_TEXT3.Value

  On Error GoTo LABEL_ERR
  
  If WINDOWCHK = True Then
     If TypeName(ActiveSheet) = "Worksheet" Then
        W_TEXT1.ControlTipText = ActiveWorkbook.path
        W_TEXT1.Value = ActiveWorkbook.Name
        W_TEXT2.Value = ActiveSheet.Name
        W_TEXT3.Value = Application.Substitute(Application.ConvertFormula("R" & ActiveCell.Row & "C" & ActiveCell.Column, xlR1C1, xlA1), "$", "")
        W_BUTTON1.Enabled = True
        W_BUTTON2.Enabled = True
     End If
  End If

  Exit Sub

LABEL_ERR:
        
  W_TEXT1.ControlTipText = W_TEXT1C
  W_TEXT1.Value = W_TEXT1V
  W_TEXT2.Value = W_TEXT2V
  W_TEXT3.Value = W_TEXT3V

End Sub

Private Sub CommandButton2_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox1, Me.TextBox11, Me.TextBox21, Me.CommandButton1, Me.CommandButton2, Me.CommandButton3)

End Sub

Private Sub CommandButton5_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox2, Me.TextBox12, Me.TextBox22, Me.CommandButton4, Me.CommandButton5, Me.CommandButton6)

End Sub

Private Sub CommandButton8_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox3, Me.TextBox13, Me.TextBox23, Me.CommandButton7, Me.CommandButton8, Me.CommandButton9)

End Sub

Private Sub CommandButton11_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox4, Me.TextBox14, Me.TextBox24, Me.CommandButton10, Me.CommandButton11, Me.CommandButton12)

End Sub

Private Sub CommandButton14_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox5, Me.TextBox15, Me.TextBox25, Me.CommandButton13, Me.CommandButton14, Me.CommandButton15)

End Sub

Private Sub CommandButton17_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox6, Me.TextBox16, Me.TextBox26, Me.CommandButton16, Me.CommandButton17, Me.CommandButton18)

End Sub

Private Sub CommandButton20_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox7, Me.TextBox17, Me.TextBox27, Me.CommandButton19, Me.CommandButton20, Me.CommandButton21)

End Sub

Private Sub CommandButton23_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox8, Me.TextBox18, Me.TextBox28, Me.CommandButton22, Me.CommandButton23, Me.CommandButton24)

End Sub

Private Sub CommandButton26_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox9, Me.TextBox19, Me.TextBox29, Me.CommandButton25, Me.CommandButton26, Me.CommandButton27)

End Sub

Private Sub CommandButton29_Click()
'|fffd|J|fffd||fffd|

  Call BM_OPEN(Me.TextBox10, Me.TextBox20, Me.TextBox30, Me.CommandButton28, Me.CommandButton29, Me.CommandButton30)

End Sub

Private Sub BM_OPEN(W_TEXT1 As Object, W_TEXT2 As Object, W_TEXT3 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  Dim I As Long
  Dim SW_OPEN As Boolean
  Dim SW_ERR As Boolean
  
  SW_OPEN = False
  For I = 1 To Workbooks.count
     If Workbooks(I).path = W_TEXT1.ControlTipText And _
        Workbooks(I).Name = W_TEXT1.Value Then
        SW_OPEN = True
        Exit For
     End If
  Next I
  
  If SW_OPEN = False Then
     SW_ERR = False
     For I = 1 To Workbooks.count
        If Workbooks(I).Name = W_TEXT1.Value Then
           SW_ERR = True
           Exit For
        End If
     Next I
     
     If SW_ERR = True Then
        If UserForm1.CheckBox49.Value = True Then
           MsgBox "Can't open because the same name file is opened.", vbExclamation
        Else
           MsgBox "|fffd||fffd||fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||302||14a|J|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation
        End If
        Exit Sub
     End If
     
     If Dir(W_TEXT1.ControlTipText & "\" & W_TEXT1.Value) = "" Then
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("The file doesn't exist." & vbCrLf & _
                          "Delete?", _
                          vbExclamation + vbYesNo)
        Else
           W_RET = MsgBox("|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                          "|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", _
                          vbExclamation + vbYesNo)
        End If
        If W_RET = vbYes Then
           Call BM_DEL(W_TEXT1, W_TEXT2, W_TEXT3, W_BUTTON1, W_BUTTON2, W_BUTTON3)
        End If
        Exit Sub
     End If
  
     Workbooks.Open Filename:=W_TEXT1.ControlTipText & "\" & W_TEXT1.Value
  Else
     Workbooks(W_TEXT1.Value).Activate
  End If

  SW_ERR = True
  For I = 1 To ActiveWorkbook.Worksheets.count
     If ActiveWorkbook.Worksheets(I).Name = W_TEXT2.Value Then
        SW_ERR = False
        Exit For
     End If
  Next I

  If SW_ERR = True Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("The sheet doesn't exist" & vbCrLf & _
                       "Delete?", _
                       vbExclamation + vbYesNo)
     Else
        W_RET = MsgBox("|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                       "|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", _
                       vbExclamation + vbYesNo)
     End If
     If W_RET = vbYes Then
        Call BM_DEL(W_TEXT1, W_TEXT2, W_TEXT3, W_BUTTON1, W_BUTTON2, W_BUTTON3)
     End If
     Exit Sub
  End If

  Worksheets(W_TEXT2.Value).Activate
  Range(W_TEXT3.Value).Activate
 
  Unload Me

End Sub

Private Sub CommandButton3_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox1, Me.TextBox11, Me.TextBox21, Me.CommandButton1, Me.CommandButton2, Me.CommandButton3)

End Sub

Private Sub CommandButton6_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox2, Me.TextBox12, Me.TextBox22, Me.CommandButton4, Me.CommandButton5, Me.CommandButton6)

End Sub

Private Sub CommandButton9_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox3, Me.TextBox13, Me.TextBox23, Me.CommandButton7, Me.CommandButton8, Me.CommandButton9)

End Sub

Private Sub CommandButton12_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox4, Me.TextBox14, Me.TextBox24, Me.CommandButton10, Me.CommandButton11, Me.CommandButton12)

End Sub

Private Sub CommandButton15_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox5, Me.TextBox15, Me.TextBox25, Me.CommandButton13, Me.CommandButton14, Me.CommandButton15)

End Sub

Private Sub CommandButton18_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox6, Me.TextBox16, Me.TextBox26, Me.CommandButton16, Me.CommandButton17, Me.CommandButton18)

End Sub

Private Sub CommandButton21_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox7, Me.TextBox17, Me.TextBox27, Me.CommandButton19, Me.CommandButton20, Me.CommandButton21)

End Sub

Private Sub CommandButton24_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox8, Me.TextBox18, Me.TextBox28, Me.CommandButton22, Me.CommandButton23, Me.CommandButton24)

End Sub

Private Sub CommandButton27_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox9, Me.TextBox19, Me.TextBox29, Me.CommandButton25, Me.CommandButton26, Me.CommandButton27)

End Sub

Private Sub CommandButton30_Click()
'|fffd||d3dc|

  Call BM_DEL(Me.TextBox10, Me.TextBox20, Me.TextBox30, Me.CommandButton28, Me.CommandButton29, Me.CommandButton30)

End Sub

Private Sub BM_DEL(W_TEXT1 As Object, W_TEXT2 As Object, W_TEXT3 As Object, W_BUTTON1 As Object, W_BUTTON2 As Object, W_BUTTON3 As Object)

  W_TEXT1.Value = ""
  W_TEXT1.ControlTipText = ""
  W_TEXT2.Value = ""
  W_TEXT3.Value = ""
  W_BUTTON1.Enabled = True
  W_BUTTON2.Enabled = False
  W_BUTTON3.Enabled = False

End Sub

Private Sub CommandButton31_Click()
'OK
  
  W_BMB01 = Me.TextBox1.Value
  W_BMB02 = Me.TextBox2.Value
  W_BMB03 = Me.TextBox3.Value
  W_BMB04 = Me.TextBox4.Value
  W_BMB05 = Me.TextBox5.Value
  W_BMB06 = Me.TextBox6.Value
  W_BMB07 = Me.TextBox7.Value
  W_BMB08 = Me.TextBox8.Value
  W_BMB09 = Me.TextBox9.Value
  W_BMB10 = Me.TextBox10.Value
  W_BMS01 = Me.TextBox11.Value
  W_BMS02 = Me.TextBox12.Value
  W_BMS03 = Me.TextBox13.Value
  W_BMS04 = Me.TextBox14.Value
  W_BMS05 = Me.TextBox15.Value
  W_BMS06 = Me.TextBox16.Value
  W_BMS07 = Me.TextBox17.Value
  W_BMS08 = Me.TextBox18.Value
  W_BMS09 = Me.TextBox19.Value
  W_BMS10 = Me.TextBox20.Value
  W_BMC01 = Me.TextBox21.Value
  W_BMC02 = Me.TextBox22.Value
  W_BMC03 = Me.TextBox23.Value
  W_BMC04 = Me.TextBox24.Value
  W_BMC05 = Me.TextBox25.Value
  W_BMC06 = Me.TextBox26.Value
  W_BMC07 = Me.TextBox27.Value
  W_BMC08 = Me.TextBox28.Value
  W_BMC09 = Me.TextBox29.Value
  W_BMC10 = Me.TextBox30.Value

  Unload Me

End Sub

Private Sub CommandButton32_Click()
'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|

  Unload Me

End Sub

Private Sub CommandButton33_Click()
'|fffd||fffd||fffd||5c2||10d||d3dc|

  Call BM_DEL(Me.TextBox1, Me.TextBox11, Me.TextBox21, Me.CommandButton1, Me.CommandButton2, Me.CommandButton3)
  Call BM_DEL(Me.TextBox2, Me.TextBox12, Me.TextBox22, Me.CommandButton4, Me.CommandButton5, Me.CommandButton6)
  Call BM_DEL(Me.TextBox3, Me.TextBox13, Me.TextBox23, Me.CommandButton7, Me.CommandButton8, Me.CommandButton9)
  Call BM_DEL(Me.TextBox4, Me.TextBox14, Me.TextBox24, Me.CommandButton10, Me.CommandButton11, Me.CommandButton12)
  Call BM_DEL(Me.TextBox5, Me.TextBox15, Me.TextBox25, Me.CommandButton13, Me.CommandButton14, Me.CommandButton15)
  Call BM_DEL(Me.TextBox6, Me.TextBox16, Me.TextBox26, Me.CommandButton16, Me.CommandButton17, Me.CommandButton18)
  Call BM_DEL(Me.TextBox7, Me.TextBox17, Me.TextBox27, Me.CommandButton19, Me.CommandButton20, Me.CommandButton21)
  Call BM_DEL(Me.TextBox8, Me.TextBox18, Me.TextBox28, Me.CommandButton22, Me.CommandButton23, Me.CommandButton24)
  Call BM_DEL(Me.TextBox9, Me.TextBox19, Me.TextBox29, Me.CommandButton25, Me.CommandButton26, Me.CommandButton27)
  Call BM_DEL(Me.TextBox10, Me.TextBox20, Me.TextBox30, Me.CommandButton28, Me.CommandButton29, Me.CommandButton30)

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm13"
Attribute VB_Base = "0{70FAEDD1-56A1-42D7-9488-F959039CDEF7}{4850405F-AB63-45D7-913D-33299F5CCC1A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Binary
Option Base 1

'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If
'|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||30e|Q|fffd||181|v|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
#If Win64 Then
Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As LongPtr
Private Type BROWSEINFO
   hwndOwner       As LongPtr  '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As LongPtr  '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#Else
Private Declare Function SHBrowseForFolder Lib "shell32" (lpbi As BROWSEINFO) As Long
Private Type BROWSEINFO
   hwndOwner       As Long     '|fffd||102||44f|o|fffd||fffd||fffd||fffd||fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
   pidlRoot        As Long     '|fffd||fffd||fffd|[|fffd|g|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||302|h|fffd|c
   pszDisplayName  As String   '|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||315|\|fffd||fffd||fffd||fffd|(c:\msdev\bin |fffd||202||fffd| bin)
   lpszTitle       As String   '|fffd|^|fffd|C|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||90c1||fffd|b|fffd|Z|fffd|[|fffd|W
   ulFlags         As Integer  '|fffd|t|fffd||fffd||fffd|O|fffd|B|fffd|\|fffd||fffd||fffd|^|fffd|C|fffd|v|fffd||fffd||fffd|w|fffd||fffd|
   lpfn            As Long     '|fffd|R|fffd|[|fffd||fffd||fffd|o|fffd|b|fffd|N|fffd||590||fffd||fffd|w|fffd||fffd|B0|fffd||143|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|g|fffd|p
   lParam          As String   'Callback|fffd||590||fffd||fffd||248||fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||182||fffd||fffd||24e|g|fffd|p|fffd|B
   iImage          As Integer
End Type
#End If
'ID|fffd|l|fffd|p|fffd|X|fffd||3ca||fffd|
#If Win64 Then
Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
#Else
Private Declare Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" _
   (ByVal pidl As Long, ByVal pszPath As String) As Long
#End If
'|fffd|^|fffd|X|fffd|N|fffd||303||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As LongPtr)
#Else
Private Declare Sub CoTaskMemFree Lib "ole32.dll" (ByVal pv As Long)
#End If

  '|fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd|C|fffd|x|fffd||fffd||fffd|g
#If Win64 Then
  Private Declare PtrSafe Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As LongPtr)
#Else
  Private Declare Sub KeybdEvent Lib "user32" Alias "keybd_event" _
     (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
#End If
  Private Const KEYEVENTF_KEYUP = &H2
  Private Const VK_RETURN = 13

Dim D1 As DataObject
Dim C As Long
Dim VL As String
Dim TG As String
Dim NO As Long

Dim SW_CBO As Boolean
Dim W_DC As Long
Dim W_OS As String

Private Sub UserForm_Initialize()

  Dim W_SPB As Long
  
  Dim Locator As Object
  Dim Service As Object
  Dim OsSet As Object
  Dim os As Variant
  
  
  Set Locator = CreateObject("WbemScripting.SWbemLocator")
  Set Service = Locator.ConnectServer
  Set OsSet = Service.ExecQuery("Select * From Win32_OperatingSystem")
  W_OS = ""
  For Each os In OsSet
     W_OS = W_OS & os.Caption & " " & os.Version
  Next os
  Set Service = Nothing
  Set OsSet = Nothing
  Set Locator = Nothing
  
  If SW_TRY = False And _
     SW_TEMP = False Then
     Call VER_GET_RTN2
  End If
  
  If SW_ENGLISH = True Then
     Me.Caption = "Regular Expression Find"
     Me.MultiPage1.Pages("Page1").Caption = "Basic"
     Me.MultiPage1.Pages("Page5").Caption = "Repeat"
     Me.MultiPage1.Pages("Page2").Caption = "Advanced"
     Me.MultiPage1.Pages("Page6").Caption = "Replace"
     Me.MultiPage1.Pages("Page3").Caption = "Keep"
     Me.MultiPage1.Pages("Page4").Caption = "Convert"
     Me.MultiPage1.Pages("Page7").Caption = "Convert2"
     Me.MultiPage1.Pages("Page8").Caption = "Sample"
     Me.Label601.Caption = "Find"
     Me.Label602.Caption = "Replace"
     Me.Label603.Caption = "Folder"
     Me.Label604.Caption = "Card stock"
     Me.Label605.Caption = "Card set area"
     Me.Label703.Caption = "Keep"
     Me.Label704.Caption = "Release"
     Me.Label706.Caption = W_VERE
     Me.Label707.Caption = "Click here, execute auto update."
     
     Me.Label708.Caption = "[RegEx Function]"
     Me.Label709.Caption = "Click here to insert this func into the current cell."
     
     W_SPB = Me.SpinButton1.Value
     If W_SPB = Me.SpinButton1.Max Then
        Me.SpinButton1.Value = Me.SpinButton1.Min
     Else
        Me.SpinButton1.Value = Me.SpinButton1.Max
     End If
     Me.SpinButton1.Value = W_SPB
     
     Me.Label605.ControlTipText = "[How to set] Double click cards in the card stock, or drag and drop " & _
                                  "cards in the card stock to the card set area, or " & _
                                  "select find what history."
     Me.MultiPage1.Pages("Page3").ControlTipText = "Drag and drop keep cards to Keep, current card set area is kept. " & _
                                                   "Drag and drop keep cards to Release, release keeping."
     Me.CommandButton105.ControlTipText = "Set cards and push convert button, " & _
                                          "you can make 2 strings AND, OR search easily."
     Me.CommandButton106.ControlTipText = "Set cards and push convert button, " & _
                                          "you can make search with forward / backward match or unmatch easily."
     
     Me.CheckBox1.Caption = "Include subfolder"
     Me.CheckBox2.Caption = "Find whole workbook"
     Me.CheckBox3.Caption = "Case senstive"
     Me.CheckBox4.Caption = "Confirm when replace"
     Me.CheckBox5.Caption = "Go around when find"
     
     Me.OptionButton1.Caption = "Cell"
     Me.OptionButton2.Caption = "Shape"
     Me.OptionButton3.Caption = "Rename"
     
     Me.CommandButton1.Caption = "Find next"
     Me.CommandButton2.Caption = "Find prev"
     Me.CommandButton3.Caption = "Find all"
     Me.CommandButton4.Caption = "Replace next"
     Me.CommandButton5.Caption = "Replace prev"
     Me.CommandButton6.Caption = "Replace all"
     Me.CommandButton8.Caption = "Grep Replace"
     Me.CommandButton9.Caption = "Select all"
     Me.CommandButton10.Caption = "Undo"
     Me.CommandButton11.Caption = "Description"
     Me.CommandButton104.Caption = "Close"
     Me.CommandButton105.Caption = "Convert"
     Me.CommandButton106.Caption = "Convert"
     
     Me.CommandButton103.ControlTipText = "Classic UI"
     
     Me.TextBox1.Value = "Start" & vbCrLf & vbCrLf & vbCrLf & "^"
     Me.TextBox2.Value = "End" & vbCrLf & vbCrLf & vbCrLf & "$"
     Me.TextBox3.Value = "Group" & vbCrLf & "Start" & vbCrLf & vbCrLf & "("
     Me.TextBox4.Value = "Select" & vbCrLf & vbCrLf & vbCrLf & "|"
     Me.TextBox5.Value = "Group" & vbCrLf & "End" & vbCrLf & vbCrLf & ")"
     Me.TextBox6.Value = "Fixed" & vbCrLf & "String" & vbCrLf & vbCrLf & ""
     Me.TextBox7.Value = "Assigned" & vbCrLf & "Char" & vbCrLf & vbCrLf & "[    ]"
     Me.TextBox8.Value = "Not" & vbCrLf & "Assigned" & vbCrLf & "Char" & vbCrLf & "[^   ]"
     Me.TextBox9.Value = "Any" & vbCrLf & vbCrLf & vbCrLf & "."
     Me.TextBox10.Value = "Numeric" & vbCrLf & vbCrLf & vbCrLf & "\d"
     Me.TextBox11.Value = "0 Times" & vbCrLf & "Over" & vbCrLf & vbCrLf & "*"
     Me.TextBox12.Value = "1 Times" & vbCrLf & "Over" & vbCrLf & vbCrLf & "+"
     Me.TextBox13.Value = "0-1" & vbCrLf & "Times" & vbCrLf & vbCrLf & "?"
     Me.TextBox14.Value = "Assigned" & vbCrLf & "Times" & vbCrLf & vbCrLf & "{   }"
     Me.TextBox15.Value = "Shortest" & vbCrLf & vbCrLf & vbCrLf & "?"
     Me.TextBox16.Value = "Posi" & vbCrLf & "Look" & vbCrLf & "Ahead" & vbCrLf & "(?="
     Me.TextBox17.Value = "Nega" & vbCrLf & "Look" & vbCrLf & "Ahead" & vbCrLf & "(?!"
     Me.TextBox18.Value = "Posi" & vbCrLf & "Look" & vbCrLf & "Back" & vbCrLf & "(?<="
     Me.TextBox19.Value = "Nega" & vbCrLf & "Look" & vbCrLf & "Back" & vbCrLf & "(?<!"
     Me.TextBox20.Value = "Newline" & vbCrLf & vbCrLf & vbCrLf & "\n"
     Me.TextBox21.Value = "Not" & vbCrLf & "Capture" & vbCrLf & "Group" & vbCrLf & "(?:"
     Me.TextBox22.Value = "Named" & vbCrLf & "Group" & vbCrLf & vbCrLf & "(?<  >"
     Me.TextBox23.Value = "Back" & vbCrLf & "Ref" & vbCrLf & vbCrLf & "\1,2,3"
     Me.TextBox24.Value = "Not" & vbCrLf & "Numeric" & vbCrLf & vbCrLf & "\D"
     Me.TextBox25.Value = "Comment" & vbCrLf & vbCrLf & vbCrLf & "(?#  )"
     Me.TextBox41.Value = "Fixed" & vbCrLf & "String" & vbCrLf & vbCrLf & ""
     Me.TextBox42.Value = "Nega" & vbCrLf & "Fixed" & vbCrLf & "String" & vbCrLf & ""
     Me.TextBox45.Value = "Fixed" & vbCrLf & "String" & vbCrLf & vbCrLf & ""
     Me.TextBox46.Value = "Capture" & vbCrLf & vbCrLf & vbCrLf & "$1,2,3"
     Me.TextBox47.Value = "Named" & vbCrLf & "Capture" & vbCrLf & vbCrLf & "${   }"
     Me.TextBox48.Value = "Newline" & vbCrLf & vbCrLf & vbCrLf & "\n"
     Me.TextBox49.Value = "Fixed" & vbCrLf & "String" & vbCrLf & vbCrLf & ""
     Me.TextBox50.Value = "Forward" & vbCrLf & "Match" & vbCrLf & "String" & vbCrLf & ""
     Me.TextBox51.Value = "Forward" & vbCrLf & "Unmatch" & vbCrLf & "String" & vbCrLf & ""
     Me.TextBox52.Value = "Backward" & vbCrLf & "Match" & vbCrLf & "String" & vbCrLf & ""
     Me.TextBox53.Value = "Backward" & vbCrLf & "Unmatch" & vbCrLf & "String" & vbCrLf & ""
     Me.TextBox54.Value = "Literal" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox55.Value = "Single" & vbCrLf & "Byte" & vbCrLf & vbCrLf & ""
     Me.TextBox56.Value = "Double" & vbCrLf & "Byte" & vbCrLf & vbCrLf & ""
     Me.TextBox57.Value = "Formula" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox58.Value = "Value" & vbCrLf & vbCrLf & vbCrLf & ""
     
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox2.Font.Name = "Courier New"
     Me.TextBox3.Font.Name = "Courier New"
     Me.TextBox4.Font.Name = "Courier New"
     Me.TextBox5.Font.Name = "Courier New"
     Me.TextBox6.Font.Name = "Courier New"
     Me.TextBox7.Font.Name = "Courier New"
     Me.TextBox8.Font.Name = "Courier New"
     Me.TextBox9.Font.Name = "Courier New"
     Me.TextBox10.Font.Name = "Courier New"
     Me.TextBox11.Font.Name = "Courier New"
     Me.TextBox12.Font.Name = "Courier New"
     Me.TextBox13.Font.Name = "Courier New"
     Me.TextBox14.Font.Name = "Courier New"
     Me.TextBox15.Font.Name = "Courier New"
     Me.TextBox16.Font.Name = "Courier New"
     Me.TextBox17.Font.Name = "Courier New"
     Me.TextBox18.Font.Name = "Courier New"
     Me.TextBox19.Font.Name = "Courier New"
     Me.TextBox20.Font.Name = "Courier New"
     Me.TextBox21.Font.Name = "Courier New"
     Me.TextBox22.Font.Name = "Courier New"
     Me.TextBox23.Font.Name = "Courier New"
     Me.TextBox24.Font.Name = "Courier New"
     Me.TextBox25.Font.Name = "Courier New"
     Me.TextBox31.Font.Name = "Courier New"
     Me.TextBox32.Font.Name = "Courier New"
     Me.TextBox33.Font.Name = "Courier New"
     Me.TextBox34.Font.Name = "Courier New"
     Me.TextBox35.Font.Name = "Courier New"
     Me.TextBox36.Font.Name = "Courier New"
     Me.TextBox37.Font.Name = "Courier New"
     Me.TextBox38.Font.Name = "Courier New"
     Me.TextBox39.Font.Name = "Courier New"
     Me.TextBox40.Font.Name = "Courier New"
     Me.TextBox41.Font.Name = "Courier New"
     Me.TextBox42.Font.Name = "Courier New"
     Me.TextBox43.Font.Name = "Courier New"
     Me.TextBox44.Font.Name = "Courier New"
     Me.TextBox45.Font.Name = "Courier New"
     Me.TextBox46.Font.Name = "Courier New"
     Me.TextBox47.Font.Name = "Courier New"
     Me.TextBox48.Font.Name = "Courier New"
     Me.TextBox49.Font.Name = "Courier New"
     Me.TextBox50.Font.Name = "Courier New"
     Me.TextBox51.Font.Name = "Courier New"
     Me.TextBox52.Font.Name = "Courier New"
     Me.TextBox53.Font.Name = "Courier New"
     Me.TextBox54.Font.Name = "Courier New"
     Me.TextBox55.Font.Name = "Courier New"
     Me.TextBox56.Font.Name = "Courier New"
     Me.TextBox57.Font.Name = "Courier New"
     Me.TextBox58.Font.Name = "Courier New"
     Me.TextBox101.Font.Name = "Courier New"
     Me.TextBox102.Font.Name = "Courier New"
     Me.TextBox103.Font.Name = "Courier New"
     Me.TextBox104.Font.Name = "Courier New"
     Me.TextBox105.Font.Name = "Courier New"
     Me.TextBox106.Font.Name = "Courier New"
     Me.TextBox107.Font.Name = "Courier New"
     Me.TextBox108.Font.Name = "Courier New"
     Me.TextBox109.Font.Name = "Courier New"
     Me.TextBox110.Font.Name = "Courier New"
     Me.TextBox111.Font.Name = "Courier New"
     Me.TextBox112.Font.Name = "Courier New"
     Me.TextBox113.Font.Name = "Courier New"
     Me.TextBox114.Font.Name = "Courier New"
     Me.TextBox115.Font.Name = "Courier New"
     Me.TextBox116.Font.Name = "Courier New"
     Me.TextBox117.Font.Name = "Courier New"
     Me.TextBox118.Font.Name = "Courier New"
     Me.TextBox119.Font.Name = "Courier New"
     Me.TextBox120.Font.Name = "Courier New"
     Me.TextBox121.Font.Name = "Courier New"
     Me.TextBox122.Font.Name = "Courier New"
     Me.TextBox123.Font.Name = "Courier New"
     Me.TextBox124.Font.Name = "Courier New"
     Me.TextBox125.Font.Name = "Courier New"
     Me.TextBox126.Font.Name = "Courier New"
     Me.TextBox127.Font.Name = "Courier New"
     Me.TextBox128.Font.Name = "Courier New"
     Me.TextBox129.Font.Name = "Courier New"
     Me.TextBox130.Font.Name = "Courier New"
     Me.TextBox201.Font.Name = "Courier New"
     Me.TextBox202.Font.Name = "Courier New"
     Me.TextBox203.Font.Name = "Courier New"
     Me.TextBox204.Font.Name = "Courier New"
     Me.TextBox205.Font.Name = "Courier New"
     Me.TextBox206.Font.Name = "Courier New"
     Me.TextBox207.Font.Name = "Courier New"
     Me.TextBox208.Font.Name = "Courier New"
     Me.TextBox209.Font.Name = "Courier New"
     Me.TextBox210.Font.Name = "Courier New"
     Me.TextBox211.Font.Name = "Courier New"
     Me.TextBox212.Font.Name = "Courier New"
     Me.TextBox213.Font.Name = "Courier New"
     Me.TextBox214.Font.Name = "Courier New"
     Me.TextBox215.Font.Name = "Courier New"
     Me.TextBox216.Font.Name = "Courier New"
     Me.TextBox217.Font.Name = "Courier New"
     Me.TextBox218.Font.Name = "Courier New"
     Me.TextBox219.Font.Name = "Courier New"
     Me.TextBox220.Font.Name = "Courier New"
     Me.TextBox221.Font.Name = "Courier New"
     Me.TextBox222.Font.Name = "Courier New"
     Me.TextBox223.Font.Name = "Courier New"
     Me.TextBox224.Font.Name = "Courier New"
     Me.TextBox225.Font.Name = "Courier New"
     Me.TextBox226.Font.Name = "Courier New"
     Me.TextBox227.Font.Name = "Courier New"
     Me.TextBox228.Font.Name = "Courier New"
     Me.TextBox229.Font.Name = "Courier New"
     Me.TextBox230.Font.Name = "Courier New"
  
     Me.ComboBox1.Font.Name = "Courier New"
     Me.ComboBox2.Font.Name = "Courier New"
     Me.ComboBox3.Font.Name = "Courier New"
  
     Me.TextBox1.Font.Size = 8
     Me.TextBox2.Font.Size = 8
     Me.TextBox3.Font.Size = 8
     Me.TextBox4.Font.Size = 8
     Me.TextBox5.Font.Size = 8
     Me.TextBox6.Font.Size = 8
     Me.TextBox7.Font.Size = 8
     Me.TextBox8.Font.Size = 8
     Me.TextBox9.Font.Size = 8
     Me.TextBox10.Font.Size = 8
     Me.TextBox11.Font.Size = 8
     Me.TextBox12.Font.Size = 8
     Me.TextBox13.Font.Size = 8
     Me.TextBox14.Font.Size = 8
     Me.TextBox15.Font.Size = 8
     Me.TextBox16.Font.Size = 8
     Me.TextBox17.Font.Size = 8
     Me.TextBox18.Font.Size = 8
     Me.TextBox19.Font.Size = 8
     Me.TextBox20.Font.Size = 8
     Me.TextBox21.Font.Size = 8
     Me.TextBox22.Font.Size = 8
     Me.TextBox23.Font.Size = 8
     Me.TextBox24.Font.Size = 8
     Me.TextBox25.Font.Size = 8
     Me.TextBox31.Font.Size = 8
     Me.TextBox32.Font.Size = 8
     Me.TextBox33.Font.Size = 8
     Me.TextBox34.Font.Size = 8
     Me.TextBox35.Font.Size = 8
     Me.TextBox36.Font.Size = 8
     Me.TextBox37.Font.Size = 8
     Me.TextBox38.Font.Size = 8
     Me.TextBox39.Font.Size = 8
     Me.TextBox40.Font.Size = 8
     Me.TextBox41.Font.Size = 8
     Me.TextBox42.Font.Size = 8
     Me.TextBox43.Font.Size = 8
     Me.TextBox44.Font.Size = 8
     Me.TextBox45.Font.Size = 8
     Me.TextBox46.Font.Size = 8
     Me.TextBox47.Font.Size = 8
     Me.TextBox48.Font.Size = 8
     Me.TextBox49.Font.Size = 8
     Me.TextBox50.Font.Size = 8
     Me.TextBox51.Font.Size = 8
     Me.TextBox52.Font.Size = 8
     Me.TextBox53.Font.Size = 8
     Me.TextBox54.Font.Size = 8
     Me.TextBox55.Font.Size = 8
     Me.TextBox56.Font.Size = 8
     Me.TextBox57.Font.Size = 8
     Me.TextBox58.Font.Size = 8
     Me.TextBox101.Font.Size = 8
     Me.TextBox102.Font.Size = 8
     Me.TextBox103.Font.Size = 8
     Me.TextBox104.Font.Size = 8
     Me.TextBox105.Font.Size = 8
     Me.TextBox106.Font.Size = 8
     Me.TextBox107.Font.Size = 8
     Me.TextBox108.Font.Size = 8
     Me.TextBox109.Font.Size = 8
     Me.TextBox110.Font.Size = 8
     Me.TextBox111.Font.Size = 8
     Me.TextBox112.Font.Size = 8
     Me.TextBox113.Font.Size = 8
     Me.TextBox114.Font.Size = 8
     Me.TextBox115.Font.Size = 8
     Me.TextBox116.Font.Size = 8
     Me.TextBox117.Font.Size = 8
     Me.TextBox118.Font.Size = 8
     Me.TextBox119.Font.Size = 8
     Me.TextBox120.Font.Size = 8
     Me.TextBox121.Font.Size = 8
     Me.TextBox122.Font.Size = 8
     Me.TextBox123.Font.Size = 8
     Me.TextBox124.Font.Size = 8
     Me.TextBox125.Font.Size = 8
     Me.TextBox126.Font.Size = 8
     Me.TextBox127.Font.Size = 8
     Me.TextBox128.Font.Size = 8
     Me.TextBox129.Font.Size = 8
     Me.TextBox130.Font.Size = 8
     Me.TextBox201.Font.Size = 8
     Me.TextBox202.Font.Size = 8
     Me.TextBox203.Font.Size = 8
     Me.TextBox204.Font.Size = 8
     Me.TextBox205.Font.Size = 8
     Me.TextBox206.Font.Size = 8
     Me.TextBox207.Font.Size = 8
     Me.TextBox208.Font.Size = 8
     Me.TextBox209.Font.Size = 8
     Me.TextBox210.Font.Size = 8
     Me.TextBox211.Font.Size = 8
     Me.TextBox212.Font.Size = 8
     Me.TextBox213.Font.Size = 8
     Me.TextBox214.Font.Size = 8
     Me.TextBox215.Font.Size = 8
     Me.TextBox216.Font.Size = 8
     Me.TextBox217.Font.Size = 8
     Me.TextBox218.Font.Size = 8
     Me.TextBox219.Font.Size = 8
     Me.TextBox220.Font.Size = 8
     Me.TextBox221.Font.Size = 8
     Me.TextBox222.Font.Size = 8
     Me.TextBox223.Font.Size = 8
     Me.TextBox224.Font.Size = 8
     Me.TextBox225.Font.Size = 8
     Me.TextBox226.Font.Size = 8
     Me.TextBox227.Font.Size = 8
     Me.TextBox228.Font.Size = 8
     Me.TextBox229.Font.Size = 8
     Me.TextBox230.Font.Size = 8
     
     Me.ComboBox1.Font.Size = 8
     Me.ComboBox2.Font.Size = 8
     Me.ComboBox3.Font.Size = 8
  Else
     Me.Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.MultiPage1.Pages("Page1").Caption = "|fffd||fffd|{"
     Me.MultiPage1.Pages("Page5").Caption = "|fffd|J|fffd||fffd||502||fffd|"
     Me.MultiPage1.Pages("Page2").Caption = "|fffd||fffd||fffd|p"
     Me.MultiPage1.Pages("Page6").Caption = "|fffd|u|fffd||fffd|"
     Me.MultiPage1.Pages("Page3").Caption = "|fffd|L|fffd|[|fffd|v"
     Me.MultiPage1.Pages("Page4").Caption = "|fffd||3ca||fffd|"
     Me.MultiPage1.Pages("Page7").Caption = "|fffd||3ca||fffd|2"
     Me.MultiPage1.Pages("Page8").Caption = "|fffd|T|fffd||fffd||fffd|v|fffd||fffd|"
     Me.Label601.Caption = "|fffd||fffd||fffd||fffd|"
     Me.Label602.Caption = "|fffd|u|fffd||fffd|"
     Me.Label603.Caption = "|fffd|t|fffd|H|fffd||fffd||fffd|_"
     Me.Label604.Caption = "|fffd|J|fffd|[|fffd|h|fffd|X|fffd|g|fffd|b|fffd|N"
     Me.Label605.Caption = "|fffd|J|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|G|fffd||fffd||fffd|A"
     Me.Label703.Caption = "|fffd|L|fffd|[|fffd|v"
     Me.Label704.Caption = "|fffd||fffd||fffd||fffd|"
     Me.Label706.Caption = W_VERJ
     Me.Label707.Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||18e||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B"
     
     Me.Label708.Caption = "|fffd|y|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||590||fffd||fffd|z"
     Me.Label709.Caption = "|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||18c||fffd||fffd||742||303|Z|fffd||fffd||fffd||242||fffd||fffd||30a||590||fffd||fffd||fffd|}|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
     W_SPB = Me.SpinButton1.Value
     If W_SPB = Me.SpinButton1.Max Then
        Me.SpinButton1.Value = Me.SpinButton1.Min
     Else
        Me.SpinButton1.Value = Me.SpinButton1.Max
     End If
     Me.SpinButton1.Value = W_SPB
     
     Me.Label605.ControlTipText = "|fffd|y|fffd||752||fffd||fffd||fffd|@|fffd|z|fffd|J|fffd|[|fffd|h|fffd|X|fffd|g|fffd|b|fffd|N|fffd||303|J|fffd|[|fffd|h|fffd||fffd||fffd|_|fffd|u|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd|A|fffd||702||fffd||fffd||fffd|" & _
                                  "|fffd|J|fffd|[|fffd|h|fffd|X|fffd|g|fffd|b|fffd|N|fffd||303|J|fffd|[|fffd|h|fffd||fffd||fffd|J|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|G|fffd||fffd||fffd|A|fffd||243|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd|h|fffd||fffd||fffd|b|fffd|v|fffd|A" & _
                                  "|fffd||702||fffd||fffd||34c||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd|I|fffd||fffd|"
     Me.MultiPage1.Pages("Page3").ControlTipText = "|fffd|L|fffd|[|fffd|v|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd|L|fffd|[|fffd|v|fffd||243|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd|h|fffd||fffd||fffd|b|fffd|v|fffd||14c||fffd||fffd||742||303|J|fffd|[|fffd|h|fffd|Z|fffd|b|fffd|g|fffd|G|fffd||fffd||fffd|A|fffd||fffd|" & _
                                                   "|fffd||fffd||fffd|e|fffd||fffd||fffd|L|fffd|[|fffd|v|fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd||fffd||fffd||243|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd|h|fffd||fffd||fffd|b|fffd|v|fffd||143|L|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
     Me.CommandButton105.ControlTipText = "|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||115||3ca||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|A" & _
                                          "|fffd|Q|fffd||fffd||fffd||fffd||fffd||fffd||302|`|fffd|m|fffd|c|fffd|A|fffd|n|fffd|q|fffd||fffd||fffd||fffd||fffd||fffd||fffd||212|P|fffd||24d||c42c||fffd||142||fffd||fffd||702||fffd||fffd|B"
     Me.CommandButton106.ControlTipText = "|fffd|J|fffd|[|fffd|h|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||115||3ca||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|A" & _
                                          "|fffd|O|fffd||fffd||fffd|^|fffd||fffd||fffd||fffd|i|fffd|s|fffd|j|fffd||fffd|v|fffd||82||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||212|P|fffd||24d||c42c||fffd||142||fffd||fffd||702||fffd||fffd|B"
     
     Me.CheckBox1.Caption = "|fffd|T|fffd|u|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CheckBox2.Caption = "|fffd|u|fffd|b|fffd|N|fffd|S|fffd||302||fffd||fffd||fffd||fffd||fffd|"
     Me.CheckBox3.Caption = "|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd||fffd|"
     Me.CheckBox4.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||24a|m|fffd|F"
     Me.CheckBox5.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     
     Me.OptionButton1.Caption = "|fffd|Z|fffd||fffd|"
     Me.OptionButton2.Caption = "|fffd|V|fffd|F|fffd|C|fffd|v"
     Me.OptionButton3.Caption = "|fffd||fffd||fffd|l|fffd|[|fffd||fffd|"
     
     Me.CommandButton1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton2.Caption = "|fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton3.Caption = "|fffd||fffd||fffd||5c2||10c||fffd||fffd||fffd|"
     Me.CommandButton4.Caption = "|fffd||fffd||fffd||fffd|u|fffd||fffd|"
     Me.CommandButton5.Caption = "|fffd|O|fffd||fffd|u|fffd||fffd|"
     Me.CommandButton6.Caption = "|fffd||fffd||fffd||5c2||112|u|fffd||fffd|"
     Me.CommandButton8.Caption = "Grep|fffd|u|fffd||fffd|"
     Me.CommandButton9.Caption = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton10.Caption = "|fffd||fffd||fffd||256||7c2||fffd|"
     Me.CommandButton11.Caption = "|fffd||fffd||fffd||fffd|"
     Me.CommandButton104.Caption = "|fffd||82||fffd||fffd||fffd|"
     Me.CommandButton105.Caption = "|fffd||3ca||fffd|"
     Me.CommandButton106.Caption = "|fffd||3ca||fffd|"
     
     Me.CommandButton103.ControlTipText = "|fffd|N|fffd||fffd||fffd|V|fffd|b|fffd|NUI"
     
     Me.TextBox1.Value = "|fffd||64ea|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "^"
     Me.TextBox2.Value = "|fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "$"
     Me.TextBox3.Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v" & vbCrLf & "|fffd|J|fffd|n" & vbCrLf & vbCrLf & vbCrLf & "("
     Me.TextBox4.Value = "|fffd|I|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "|"
     Me.TextBox5.Value = "|fffd|O|fffd||fffd||fffd|[|fffd|v" & vbCrLf & "|fffd|I|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ")"
     Me.TextBox6.Value = "|fffd||152||fffd|" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox7.Value = "|fffd|w|fffd||8576||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "[    ]"
     Me.TextBox8.Value = "|fffd|w|fffd||8576||fffd||fffd|" & "|fffd||20a|O" & vbCrLf & vbCrLf & vbCrLf & "[^   ]"
     Me.TextBox9.Value = "|fffd|C|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "."
     Me.TextBox10.Value = "|fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "\d"
     Me.TextBox11.Value = "0|fffd||fffd||20f||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "*"
     Me.TextBox12.Value = "1|fffd||fffd||20f||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "+"
     Me.TextBox13.Value = "0|fffd|`1|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "?"
     Me.TextBox14.Value = "|fffd|w|fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "{   }"
     Me.TextBox15.Value = "|fffd||152|Z" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "?"
     Me.TextBox16.Value = "|fffd|m|fffd||fffd|" & vbCrLf & "|fffd||fffd||1c2||fffd|" & vbCrLf & vbCrLf & vbCrLf & "(?="
     Me.TextBox17.Value = "|fffd||6d2||fffd|" & vbCrLf & "|fffd||fffd||1c2||fffd|" & vbCrLf & vbCrLf & vbCrLf & "(?!"
     Me.TextBox18.Value = "|fffd|m|fffd||fffd|" & vbCrLf & "|fffd||7c2||fffd||1c2||fffd|" & vbCrLf & vbCrLf & vbCrLf & "(?<="
     Me.TextBox19.Value = "|fffd||6d2||fffd|" & vbCrLf & "|fffd||7c2||fffd||1c2||fffd|" & vbCrLf & vbCrLf & vbCrLf & "(?<!"
     Me.TextBox20.Value = "|fffd||fffd||fffd|s" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "\n"
     Me.TextBox21.Value = "|fffd||fffd|" & vbCrLf & "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd|" & vbCrLf & "|fffd|O|fffd||fffd||fffd|[|fffd|v" & vbCrLf & vbCrLf & "(?:"
     Me.TextBox22.Value = "|fffd||fffd||fffd|O|fffd|t|fffd||fffd|" & vbCrLf & "|fffd|O|fffd||fffd||fffd|[|fffd|v" & vbCrLf & vbCrLf & vbCrLf & "(?<  >"
     Me.TextBox23.Value = "|fffd||fffd||fffd||fffd|Q|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "\1,2,3"
     Me.TextBox24.Value = "|fffd||fffd||fffd||fffd||fffd||20a|O" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "\D"
     Me.TextBox25.Value = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "(?#  )"
     Me.TextBox41.Value = "|fffd||152||fffd|" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox42.Value = "|fffd||6d2||fffd||152||fffd|" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox45.Value = "|fffd||152||fffd|" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox46.Value = "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "$1,2,3"
     Me.TextBox47.Value = "|fffd||fffd||fffd|O|fffd|t|fffd||fffd|" & vbCrLf & "|fffd|L|fffd||fffd||fffd|v|fffd|`|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & "${   }"
     Me.TextBox48.Value = "|fffd||fffd||fffd|s" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & "\n"
     Me.TextBox49.Value = "|fffd||152||fffd|" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox50.Value = "|fffd|O|fffd||fffd|" & vbCrLf & "|fffd||fffd|v" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & ""
     Me.TextBox51.Value = "|fffd|O|fffd||fffd|" & vbCrLf & "|fffd|s|fffd||fffd|v" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & ""
     Me.TextBox52.Value = "|fffd||fffd||fffd|" & vbCrLf & "|fffd||fffd|v" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & ""
     Me.TextBox53.Value = "|fffd||fffd||fffd|" & vbCrLf & "|fffd|s|fffd||fffd|v" & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & ""
     Me.TextBox54.Value = "|fffd||fffd||fffd|e|fffd||fffd||fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox55.Value = "|fffd||fffd||fffd|p" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox56.Value = "|fffd|S|fffd|p" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox57.Value = "|fffd||fffd|" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & ""
     Me.TextBox58.Value = "|fffd|l" & vbCrLf & vbCrLf & vbCrLf & vbCrLf & ""
     
     Me.TextBox1.Font.Name = "MS UI Gothic"
     Me.TextBox2.Font.Name = "MS UI Gothic"
     Me.TextBox3.Font.Name = "MS UI Gothic"
     Me.TextBox4.Font.Name = "MS UI Gothic"
     Me.TextBox5.Font.Name = "MS UI Gothic"
     Me.TextBox6.Font.Name = "MS UI Gothic"
     Me.TextBox7.Font.Name = "MS UI Gothic"
     Me.TextBox8.Font.Name = "MS UI Gothic"
     Me.TextBox9.Font.Name = "MS UI Gothic"
     Me.TextBox10.Font.Name = "MS UI Gothic"
     Me.TextBox11.Font.Name = "MS UI Gothic"
     Me.TextBox12.Font.Name = "MS UI Gothic"
     Me.TextBox13.Font.Name = "MS UI Gothic"
     Me.TextBox14.Font.Name = "MS UI Gothic"
     Me.TextBox15.Font.Name = "MS UI Gothic"
     Me.TextBox16.Font.Name = "MS UI Gothic"
     Me.TextBox17.Font.Name = "MS UI Gothic"
     Me.TextBox18.Font.Name = "MS UI Gothic"
     Me.TextBox19.Font.Name = "MS UI Gothic"
     Me.TextBox20.Font.Name = "MS UI Gothic"
     Me.TextBox21.Font.Name = "MS UI Gothic"
     Me.TextBox22.Font.Name = "MS UI Gothic"
     Me.TextBox23.Font.Name = "MS UI Gothic"
     Me.TextBox24.Font.Name = "MS UI Gothic"
     Me.TextBox25.Font.Name = "MS UI Gothic"
     Me.TextBox31.Font.Name = "MS UI Gothic"
     Me.TextBox32.Font.Name = "MS UI Gothic"
     Me.TextBox33.Font.Name = "MS UI Gothic"
     Me.TextBox34.Font.Name = "MS UI Gothic"
     Me.TextBox35.Font.Name = "MS UI Gothic"
     Me.TextBox36.Font.Name = "MS UI Gothic"
     Me.TextBox37.Font.Name = "MS UI Gothic"
     Me.TextBox38.Font.Name = "MS UI Gothic"
     Me.TextBox39.Font.Name = "MS UI Gothic"
     Me.TextBox40.Font.Name = "MS UI Gothic"
     Me.TextBox41.Font.Name = "MS UI Gothic"
     Me.TextBox42.Font.Name = "MS UI Gothic"
     Me.TextBox43.Font.Name = "MS UI Gothic"
     Me.TextBox44.Font.Name = "MS UI Gothic"
     Me.TextBox45.Font.Name = "MS UI Gothic"
     Me.TextBox46.Font.Name = "MS UI Gothic"
     Me.TextBox47.Font.Name = "MS UI Gothic"
     Me.TextBox48.Font.Name = "MS UI Gothic"
     Me.TextBox49.Font.Name = "MS UI Gothic"
     Me.TextBox50.Font.Name = "MS UI Gothic"
     Me.TextBox51.Font.Name = "MS UI Gothic"
     Me.TextBox52.Font.Name = "MS UI Gothic"
     Me.TextBox53.Font.Name = "MS UI Gothic"
     Me.TextBox54.Font.Name = "MS UI Gothic"
     Me.TextBox55.Font.Name = "MS UI Gothic"
     Me.TextBox56.Font.Name = "MS UI Gothic"
     Me.TextBox57.Font.Name = "MS UI Gothic"
     Me.TextBox58.Font.Name = "MS UI Gothic"
     Me.TextBox101.Font.Name = "MS UI Gothic"
     Me.TextBox102.Font.Name = "MS UI Gothic"
     Me.TextBox103.Font.Name = "MS UI Gothic"
     Me.TextBox104.Font.Name = "MS UI Gothic"
     Me.TextBox105.Font.Name = "MS UI Gothic"
     Me.TextBox106.Font.Name = "MS UI Gothic"
     Me.TextBox107.Font.Name = "MS UI Gothic"
     Me.TextBox108.Font.Name = "MS UI Gothic"
     Me.TextBox109.Font.Name = "MS UI Gothic"
     Me.TextBox110.Font.Name = "MS UI Gothic"
     Me.TextBox111.Font.Name = "MS UI Gothic"
     Me.TextBox112.Font.Name = "MS UI Gothic"
     Me.TextBox113.Font.Name = "MS UI Gothic"
     Me.TextBox114.Font.Name = "MS UI Gothic"
     Me.TextBox115.Font.Name = "MS UI Gothic"
     Me.TextBox116.Font.Name = "MS UI Gothic"
     Me.TextBox117.Font.Name = "MS UI Gothic"
     Me.TextBox118.Font.Name = "MS UI Gothic"
     Me.TextBox119.Font.Name = "MS UI Gothic"
     Me.TextBox120.Font.Name = "MS UI Gothic"
     Me.TextBox121.Font.Name = "MS UI Gothic"
     Me.TextBox122.Font.Name = "MS UI Gothic"
     Me.TextBox123.Font.Name = "MS UI Gothic"
     Me.TextBox124.Font.Name = "MS UI Gothic"
     Me.TextBox125.Font.Name = "MS UI Gothic"
     Me.TextBox126.Font.Name = "MS UI Gothic"
     Me.TextBox127.Font.Name = "MS UI Gothic"
     Me.TextBox128.Font.Name = "MS UI Gothic"
     Me.TextBox129.Font.Name = "MS UI Gothic"
     Me.TextBox130.Font.Name = "MS UI Gothic"
     Me.TextBox201.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox202.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox203.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox204.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox205.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox206.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox207.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox208.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox209.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox210.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox211.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox212.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox213.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox214.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox215.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox216.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox217.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox218.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox219.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox220.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox221.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox222.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox223.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox224.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox225.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox226.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox227.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox228.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox229.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox230.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.ComboBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ComboBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ComboBox3.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.TextBox1.Font.Size = 9
     Me.TextBox2.Font.Size = 9
     Me.TextBox3.Font.Size = 9
     Me.TextBox4.Font.Size = 9
     Me.TextBox5.Font.Size = 9
     Me.TextBox6.Font.Size = 9
     Me.TextBox7.Font.Size = 9
     Me.TextBox8.Font.Size = 9
     Me.TextBox9.Font.Size = 9
     Me.TextBox10.Font.Size = 9
     Me.TextBox11.Font.Size = 9
     Me.TextBox12.Font.Size = 9
     Me.TextBox13.Font.Size = 9
     Me.TextBox14.Font.Size = 9
     Me.TextBox15.Font.Size = 9
     Me.TextBox16.Font.Size = 9
     Me.TextBox17.Font.Size = 9
     Me.TextBox18.Font.Size = 9
     Me.TextBox19.Font.Size = 9
     Me.TextBox20.Font.Size = 9
     Me.TextBox21.Font.Size = 9
     Me.TextBox22.Font.Size = 9
     Me.TextBox23.Font.Size = 9
     Me.TextBox24.Font.Size = 9
     Me.TextBox25.Font.Size = 9
     Me.TextBox31.Font.Size = 9
     Me.TextBox32.Font.Size = 9
     Me.TextBox33.Font.Size = 9
     Me.TextBox34.Font.Size = 9
     Me.TextBox35.Font.Size = 9
     Me.TextBox36.Font.Size = 9
     Me.TextBox37.Font.Size = 9
     Me.TextBox38.Font.Size = 9
     Me.TextBox39.Font.Size = 9
     Me.TextBox40.Font.Size = 9
     Me.TextBox41.Font.Size = 9
     Me.TextBox42.Font.Size = 9
     Me.TextBox43.Font.Size = 9
     Me.TextBox44.Font.Size = 9
     Me.TextBox45.Font.Size = 9
     Me.TextBox46.Font.Size = 9
     Me.TextBox47.Font.Size = 9
     Me.TextBox48.Font.Size = 9
     Me.TextBox49.Font.Size = 9
     Me.TextBox50.Font.Size = 9
     Me.TextBox51.Font.Size = 9
     Me.TextBox52.Font.Size = 9
     Me.TextBox53.Font.Size = 9
     Me.TextBox54.Font.Size = 9
     Me.TextBox55.Font.Size = 9
     Me.TextBox56.Font.Size = 9
     Me.TextBox57.Font.Size = 9
     Me.TextBox58.Font.Size = 9
     Me.TextBox101.Font.Size = 9
     Me.TextBox102.Font.Size = 9
     Me.TextBox103.Font.Size = 9
     Me.TextBox104.Font.Size = 9
     Me.TextBox105.Font.Size = 9
     Me.TextBox106.Font.Size = 9
     Me.TextBox107.Font.Size = 9
     Me.TextBox108.Font.Size = 9
     Me.TextBox109.Font.Size = 9
     Me.TextBox110.Font.Size = 9
     Me.TextBox111.Font.Size = 9
     Me.TextBox112.Font.Size = 9
     Me.TextBox113.Font.Size = 9
     Me.TextBox114.Font.Size = 9
     Me.TextBox115.Font.Size = 9
     Me.TextBox116.Font.Size = 9
     Me.TextBox117.Font.Size = 9
     Me.TextBox118.Font.Size = 9
     Me.TextBox119.Font.Size = 9
     Me.TextBox120.Font.Size = 9
     Me.TextBox121.Font.Size = 9
     Me.TextBox122.Font.Size = 9
     Me.TextBox123.Font.Size = 9
     Me.TextBox124.Font.Size = 9
     Me.TextBox125.Font.Size = 9
     Me.TextBox126.Font.Size = 9
     Me.TextBox127.Font.Size = 9
     Me.TextBox128.Font.Size = 9
     Me.TextBox129.Font.Size = 9
     Me.TextBox130.Font.Size = 9
     Me.TextBox201.Font.Size = 9
     Me.TextBox202.Font.Size = 9
     Me.TextBox203.Font.Size = 9
     Me.TextBox204.Font.Size = 9
     Me.TextBox205.Font.Size = 9
     Me.TextBox206.Font.Size = 9
     Me.TextBox207.Font.Size = 9
     Me.TextBox208.Font.Size = 9
     Me.TextBox209.Font.Size = 9
     Me.TextBox210.Font.Size = 9
     Me.TextBox211.Font.Size = 9
     Me.TextBox212.Font.Size = 9
     Me.TextBox213.Font.Size = 9
     Me.TextBox214.Font.Size = 9
     Me.TextBox215.Font.Size = 9
     Me.TextBox216.Font.Size = 9
     Me.TextBox217.Font.Size = 9
     Me.TextBox218.Font.Size = 9
     Me.TextBox219.Font.Size = 9
     Me.TextBox220.Font.Size = 9
     Me.TextBox221.Font.Size = 9
     Me.TextBox222.Font.Size = 9
     Me.TextBox223.Font.Size = 9
     Me.TextBox224.Font.Size = 9
     Me.TextBox225.Font.Size = 9
     Me.TextBox226.Font.Size = 9
     Me.TextBox227.Font.Size = 9
     Me.TextBox228.Font.Size = 9
     Me.TextBox229.Font.Size = 9
     Me.TextBox230.Font.Size = 9
  
     Me.ComboBox1.Font.Size = 9
     Me.ComboBox2.Font.Size = 9
     Me.ComboBox3.Font.Size = 9
  End If

  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.MultiPage1.Font.Name = "Segoe UI"
        Me.Label601.Font.Name = "Segoe UI"
        Me.Label602.Font.Name = "Segoe UI"
        Me.Label603.Font.Name = "Segoe UI"
        Me.Label604.Font.Name = "Segoe UI"
        Me.Label605.Font.Name = "Segoe UI"
        Me.Label703.Font.Name = "Segoe UI"
        Me.Label704.Font.Name = "Segoe UI"
        Me.Label706.Font.Name = "Segoe UI"
        Me.Label707.Font.Name = "Segoe UI"
        Me.Label708.Font.Name = "Segoe UI"
        Me.Label709.Font.Name = "Segoe UI"
        Me.Label710.Font.Name = "Segoe UI"
        Me.Label711.Font.Name = "Segoe UI"
        Me.CheckBox1.Font.Name = "Segoe UI"
        Me.CheckBox2.Font.Name = "Segoe UI"
        Me.CheckBox3.Font.Name = "Segoe UI"
        Me.CheckBox4.Font.Name = "Segoe UI"
        Me.CheckBox5.Font.Name = "Segoe UI"
        Me.OptionButton1.Font.Name = "Segoe UI"
        Me.OptionButton2.Font.Name = "Segoe UI"
        Me.OptionButton3.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
        Me.CommandButton4.Font.Name = "Segoe UI"
        Me.CommandButton5.Font.Name = "Segoe UI"
        Me.CommandButton6.Font.Name = "Segoe UI"
        Me.CommandButton7.Font.Name = "Segoe UI"
        Me.CommandButton8.Font.Name = "Segoe UI"
        Me.CommandButton9.Font.Name = "Segoe UI"
        Me.CommandButton10.Font.Name = "Segoe UI"
        Me.CommandButton11.Font.Name = "Segoe UI"
        Me.CommandButton102.Font.Name = "Segoe UI"
        Me.CommandButton104.Font.Name = "Segoe UI"
        Me.CommandButton105.Font.Name = "Segoe UI"
        Me.CommandButton106.Font.Name = "Segoe UI"
     Else
        Me.MultiPage1.Font.Name = "Meiryo UI"
        Me.Label601.Font.Name = "Meiryo UI"
        Me.Label602.Font.Name = "Meiryo UI"
        Me.Label603.Font.Name = "Meiryo UI"
        Me.Label604.Font.Name = "Meiryo UI"
        Me.Label605.Font.Name = "Meiryo UI"
        Me.Label703.Font.Name = "Meiryo UI"
        Me.Label704.Font.Name = "Meiryo UI"
        Me.Label706.Font.Name = "Meiryo UI"
        Me.Label707.Font.Name = "Meiryo UI"
        Me.Label708.Font.Name = "Meiryo UI"
        Me.Label709.Font.Name = "Meiryo UI"
        Me.Label710.Font.Name = "Meiryo UI"
        Me.Label711.Font.Name = "Meiryo UI"
        Me.CheckBox1.Font.Name = "Meiryo UI"
        Me.CheckBox2.Font.Name = "Meiryo UI"
        Me.CheckBox3.Font.Name = "Meiryo UI"
        Me.CheckBox4.Font.Name = "Meiryo UI"
        Me.CheckBox5.Font.Name = "Meiryo UI"
        Me.OptionButton1.Font.Name = "Meiryo UI"
        Me.OptionButton2.Font.Name = "Meiryo UI"
        Me.OptionButton3.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
        Me.CommandButton4.Font.Name = "Meiryo UI"
        Me.CommandButton5.Font.Name = "Meiryo UI"
        Me.CommandButton6.Font.Name = "Meiryo UI"
        Me.CommandButton7.Font.Name = "Meiryo UI"
        Me.CommandButton8.Font.Name = "Meiryo UI"
        Me.CommandButton9.Font.Name = "Meiryo UI"
        Me.CommandButton10.Font.Name = "Meiryo UI"
        Me.CommandButton11.Font.Name = "Meiryo UI"
        Me.CommandButton102.Font.Name = "Meiryo UI"
        Me.CommandButton104.Font.Name = "Meiryo UI"
        Me.CommandButton105.Font.Name = "Meiryo UI"
        Me.CommandButton106.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.MultiPage1.Font.Name = "Tahoma"
        Me.Label601.Font.Name = "Tahoma"
        Me.Label602.Font.Name = "Tahoma"
        Me.Label603.Font.Name = "Tahoma"
        Me.Label604.Font.Name = "Tahoma"
        Me.Label605.Font.Name = "Tahoma"
        Me.Label703.Font.Name = "Tahoma"
        Me.Label704.Font.Name = "Tahoma"
        Me.Label706.Font.Name = "Tahoma"
        Me.Label707.Font.Name = "Tahoma"
        Me.Label708.Font.Name = "Tahoma"
        Me.Label709.Font.Name = "Tahoma"
        Me.Label710.Font.Name = "Tahoma"
        Me.Label711.Font.Name = "Tahoma"
        Me.CheckBox1.Font.Name = "Tahoma"
        Me.CheckBox2.Font.Name = "Tahoma"
        Me.CheckBox3.Font.Name = "Tahoma"
        Me.CheckBox4.Font.Name = "Tahoma"
        Me.CheckBox5.Font.Name = "Tahoma"
        Me.OptionButton1.Font.Name = "Tahoma"
        Me.OptionButton2.Font.Name = "Tahoma"
        Me.OptionButton3.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
        Me.CommandButton4.Font.Name = "Tahoma"
        Me.CommandButton5.Font.Name = "Tahoma"
        Me.CommandButton6.Font.Name = "Tahoma"
        Me.CommandButton7.Font.Name = "Tahoma"
        Me.CommandButton8.Font.Name = "Tahoma"
        Me.CommandButton9.Font.Name = "Tahoma"
        Me.CommandButton10.Font.Name = "Tahoma"
        Me.CommandButton11.Font.Name = "Tahoma"
        Me.CommandButton102.Font.Name = "Tahoma"
        Me.CommandButton104.Font.Name = "Tahoma"
        Me.CommandButton105.Font.Name = "Tahoma"
        Me.CommandButton106.Font.Name = "Tahoma"
     Else
        Me.MultiPage1.Font.Name = "MS UI Gothic"
        Me.Label601.Font.Name = "MS UI Gothic"
        Me.Label602.Font.Name = "MS UI Gothic"
        Me.Label603.Font.Name = "MS UI Gothic"
        Me.Label604.Font.Name = "MS UI Gothic"
        Me.Label605.Font.Name = "MS UI Gothic"
        Me.Label703.Font.Name = "MS UI Gothic"
        Me.Label704.Font.Name = "MS UI Gothic"
        Me.Label706.Font.Name = "MS UI Gothic"
        Me.Label707.Font.Name = "MS UI Gothic"
        Me.Label708.Font.Name = "MS UI Gothic"
        Me.Label709.Font.Name = "MS UI Gothic"
        Me.Label710.Font.Name = "MS UI Gothic"
        Me.Label711.Font.Name = "MS UI Gothic"
        Me.CheckBox1.Font.Name = "MS UI Gothic"
        Me.CheckBox2.Font.Name = "MS UI Gothic"
        Me.CheckBox3.Font.Name = "MS UI Gothic"
        Me.CheckBox4.Font.Name = "MS UI Gothic"
        Me.CheckBox5.Font.Name = "MS UI Gothic"
        Me.OptionButton1.Font.Name = "MS UI Gothic"
        Me.OptionButton2.Font.Name = "MS UI Gothic"
        Me.OptionButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton4.Font.Name = "MS UI Gothic"
        Me.CommandButton5.Font.Name = "MS UI Gothic"
        Me.CommandButton6.Font.Name = "MS UI Gothic"
        Me.CommandButton7.Font.Name = "MS UI Gothic"
        Me.CommandButton8.Font.Name = "MS UI Gothic"
        Me.CommandButton9.Font.Name = "MS UI Gothic"
        Me.CommandButton10.Font.Name = "MS UI Gothic"
        Me.CommandButton11.Font.Name = "MS UI Gothic"
        Me.CommandButton102.Font.Name = "MS UI Gothic"
        Me.CommandButton104.Font.Name = "MS UI Gothic"
        Me.CommandButton105.Font.Name = "MS UI Gothic"
        Me.CommandButton106.Font.Name = "MS UI Gothic"
     End If
  End If

  Me.ToggleButton1.Value = False

  Me.ComboBox1.ColumnWidths = Me.ComboBox1.Width - 20 & ";" & 15
  Me.ComboBox2.ColumnWidths = Me.ComboBox2.Width - 20 & ";" & 15
  Me.ComboBox3.ColumnWidths = Me.ComboBox3.Width - 20 & ";" & 15

  Call SET_REFCOMBO
  Me.ComboBox1.Value = ""
  Call SET_REPCOMBO
  Me.ComboBox2.Value = ""
  Call SET_DIRCOMBO
  
  Me.CheckBox1.Value = SW_GREPSUB
  Me.CheckBox2.Value = SW_BOOK
  Me.CheckBox3.Value = SW_UPLOW
  Me.CheckBox4.Value = SW_ASK
  Me.CheckBox5.Value = SW_GOAR

  Me.Label31.ControlTipText = W_FSV01
  Me.Label32.ControlTipText = W_FSV02
  Me.Label33.ControlTipText = W_FSV03
  Me.Label34.ControlTipText = W_FSV04
  Me.Label35.ControlTipText = W_FSV05
  Me.Label36.ControlTipText = W_FSV06
  Me.Label37.ControlTipText = W_FSV07
  Me.Label38.ControlTipText = W_FSV08
  Me.Label39.ControlTipText = W_FSV09
  Me.Label40.ControlTipText = W_FSV10

End Sub

Private Sub SpinButton1_Change()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Dim AR_FCID As Variant
  Dim AR_FCDS As Variant

  AR_FCID = Array("RERND", _
                  "REMATCH", _
                  "REHLOOKUP", _
                  "REVLOOKUP", _
                  "RECNTIF", _
                  "RESPLIT", _
                  "REREPL", _
                  "RECNT", _
                  "REEXE2", _
                  "REEXE", _
                  "RETEST")
  
  If SW_ENGLISH = True Then
     AR_FCDS = Array(":Gen random string", _
                     ":Regex MATCH", _
                     ":Regex HLOOKUP", _
                     ":Regex VLOOKUP", _
                     ":Regex COUNTIF", _
                     ":Get split string", _
                     ":Replace", _
                     ":Get match count", _
                     ":Get sub match string", _
                     ":Get match string", _
                     ":Inspect string")
  Else
     AR_FCDS = Array("|fffd|F|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d90||fffd|", _
                     "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|MATCH", _
                     "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|HLOOKUP", _
                     "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|VLOOKUP", _
                     "|fffd|F|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd||fffd|COUNTIF", _
                     "|fffd|F|fffd||fffd||fffd||fffd||fffd||3576||fffd||fffd||fffd||fffd||64fe|", _
                     "|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd|", _
                     "|fffd|F|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||64fe|", _
                     "|fffd|F|fffd|T|fffd|u|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||64fe|", _
                     "|fffd|F|fffd|}|fffd|b|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||64fe|", _
                     "|fffd|F|fffd||fffd||fffd||fffd||fffd||4c7cd||fffd|")
  End If
  Me.Label710.Caption = AR_FCID(Me.SpinButton1.Value)
  Me.Label711.Caption = AR_FCDS(Me.SpinButton1.Value)

End Sub

Private Sub Label708_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label709_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label710_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub Label711_Click()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Call FC_INS

End Sub

Private Sub FC_INS()
'|fffd||590||fffd||fffd||311|}|fffd||fffd|

  Dim SW_BLNK As Boolean
  Dim W_BKF As String
  Dim W_BKV As String
  Dim W_INS As String
  Dim CTB As Range
  
  
  If W_CLKBTN <> "" Then
     Exit Sub
  End If

  If WINDOWCHK = True Then
     SW_BLNK = False
     W_BKF = ""
     W_BKV = ""
     Set CTB = Nothing
     On Error Resume Next
     Set CTB = ActiveCell.SpecialCells(xlCellTypeBlanks)
     On Error GoTo LABEL_ERR
     If CTB Is Nothing Then
        SW_BLNK = True
     ElseIf CTB Is ActiveCell Then
        SW_BLNK = True
     Else
        If ActiveCell.HasFormula = True Then
           W_BKF = ActiveCell.Formula
        End If
        W_BKV = ActiveCell.Value
     End If
     Set CTB = Nothing
     ActiveCell.Formula = "=" & Me.Label710.Caption & "()"
     W_INS = ActiveCell.Formula
     Application.Dialogs(xlDialogFunctionWizard).Show
     If ActiveCell.Formula = W_INS Then
        If SW_BLNK = True Then
           ActiveCell.ClearContents
        Else
           If W_BKF <> "" Then
              ActiveCell.Formula = W_BKF
           Else
              ActiveCell.Value = W_BKV
           End If
        End If
     End If
     On Error GoTo 0
  End If

LABEL_ERR:

End Sub

Private Sub ToggleButton1_Change()
  
  If Me.ToggleButton1.Value = True Then
     Me.MultiPage1.Pages("Page6").Visible = True
     Me.Label706.Visible = UserForm1.Label41.Visible
     Me.Label707.Visible = UserForm1.Label42.Visible
     If Me.Label706.Visible = False And _
        UserForm1.CheckBox48.Value = False Then
        Me.Label708.Visible = True
        Me.Label709.Visible = True
        Me.Label710.Visible = True
        Me.Label711.Visible = True
        Me.SpinButton1.Visible = True
     End If
     Me.Label602.Visible = True
     Me.ComboBox2.Visible = True
     Me.Frame2.Visible = True
     Me.Label603.Visible = True
     Me.ComboBox3.Visible = True
     Me.CommandButton101.Visible = True
     Me.CommandButton102.Visible = True
     Me.CheckBox2.Visible = True
     Me.CheckBox1.Visible = True
     Me.CheckBox3.Visible = True
     Me.CheckBox4.Visible = True
     Me.CheckBox5.Visible = True
     Me.OptionButton1.Visible = True
     Me.OptionButton2.Visible = True
     Me.OptionButton3.Visible = True
     Me.CommandButton9.Visible = True
     Me.CommandButton8.Visible = True
     Me.CommandButton7.Visible = True
     Me.CommandButton10.Visible = True
     Me.CommandButton11.Visible = True
     Me.CommandButton6.Visible = True
     Me.CommandButton5.Visible = True
     Me.CommandButton4.Visible = True
     
     Me.CommandButton3.Left = 294
     Me.CommandButton2.Left = 366
     Me.CommandButton1.Left = 438
     Me.CommandButton103.Left = 510
     Me.CommandButton104.Left = 530
     
     Me.Width = 584
  Else
     Me.MultiPage1.Pages("Page6").Visible = False
     Me.Label706.Visible = False
     Me.Label707.Visible = False
     Me.Label708.Visible = False
     Me.Label709.Visible = False
     Me.Label710.Visible = False
     Me.Label711.Visible = False
     Me.SpinButton1.Visible = False
     Me.Label602.Visible = False
     Me.ComboBox2.Visible = False
     Me.Frame2.Visible = False
     Me.Label603.Visible = False
     Me.ComboBox3.Visible = False
     Me.CommandButton101.Visible = False
     Me.CommandButton102.Visible = False
     Me.CheckBox2.Visible = False
     Me.CheckBox1.Visible = False
     Me.CheckBox3.Visible = False
     Me.CheckBox4.Visible = False
     Me.CheckBox5.Visible = False
     Me.OptionButton1.Visible = False
     Me.OptionButton2.Visible = False
     Me.OptionButton3.Visible = False
     Me.CommandButton9.Visible = False
     Me.CommandButton8.Visible = False
     Me.CommandButton7.Visible = False
     Me.CommandButton10.Visible = False
     Me.CommandButton11.Visible = False
     Me.CommandButton6.Visible = False
     Me.CommandButton5.Visible = False
     Me.CommandButton4.Visible = False
     
     Me.CommandButton3.Left = 6
     Me.CommandButton2.Left = 78
     Me.CommandButton1.Left = 150
     Me.CommandButton103.Left = 222
     Me.CommandButton104.Left = 242
     
     Me.Width = 297
  End If

  If InStr(W_OS, "Windows 10") > 0 Then
     Me.Width = Me.Width + 10
  End If

End Sub

Private Sub MultiPage1_Change()

  If Me.MultiPage1.Value = 7 Then
     Me.Label703.Visible = True
     Me.Label704.Visible = True
  Else
     Me.Label703.Visible = False
     Me.Label704.Visible = False
  End If

  If Me.MultiPage1.Value = 4 Or _
     Me.MultiPage1.Value = 5 Then
     Call Label702_Click
     Me.ComboBox1.Enabled = False
     Me.OptionButton1.Enabled = False
     Me.OptionButton2.Enabled = False
     Me.OptionButton3.Enabled = False
     Me.CommandButton1.Enabled = False
     Me.CommandButton2.Enabled = False
     Me.CommandButton3.Enabled = False
     Me.CommandButton4.Enabled = False
     Me.CommandButton5.Enabled = False
     Me.CommandButton6.Enabled = False
     Me.CommandButton7.Enabled = False
     Me.CommandButton8.Enabled = False
     Me.CommandButton9.Enabled = False
     Me.CommandButton10.Enabled = False
     Me.CommandButton11.Enabled = False
     If Me.MultiPage1.Value = 4 Then
        Me.MultiPage1.Tag = "4"
     Else
        Me.MultiPage1.Tag = "5"
     End If
  Else
     If Me.MultiPage1.Tag = "4" Or _
        Me.MultiPage1.Tag = "5" Then
        Me.MultiPage1.Tag = ""
        Call Label702_Click
        Me.ComboBox1.Enabled = True
        Me.OptionButton1.Enabled = True
        Me.OptionButton2.Enabled = True
        Me.OptionButton3.Enabled = True
        Me.CommandButton11.Enabled = True
        If Me.OptionButton1.Value = True Then
           Me.CommandButton1.Enabled = True
           Me.CommandButton2.Enabled = True
           Me.CommandButton3.Enabled = True
           Me.CommandButton4.Enabled = True
           Me.CommandButton5.Enabled = True
           Me.CommandButton6.Enabled = True
           Me.CommandButton7.Enabled = True
           Me.CommandButton8.Enabled = True
           Me.CommandButton9.Enabled = True
           Me.CommandButton10.Enabled = True
        End If
        If Me.OptionButton2.Value = True Then
           Me.CommandButton3.Enabled = True
           Me.CommandButton6.Enabled = True
           Me.CommandButton7.Enabled = True
           Me.CommandButton8.Enabled = True
           Me.CommandButton9.Enabled = True
           Me.CommandButton10.Enabled = True
        End If
        If Me.OptionButton3.Value = True Then
           Me.CommandButton3.Enabled = True
           Me.CommandButton6.Enabled = True
        End If
     End If
  End If

End Sub

Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 1 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox1.Value
  C = Me.TextBox1.BackColor
  NO = 1

  D1.StartDrag

End Sub

Private Sub Label1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label1_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 2 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox2.Value
  C = Me.TextBox2.BackColor
  NO = 2

  D1.StartDrag

End Sub

Private Sub Label2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 3 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox3.Value
  C = Me.TextBox3.BackColor
  NO = 3

  D1.StartDrag

End Sub

Private Sub Label3_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label3_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 4 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox4.Value
  C = Me.TextBox4.BackColor
  NO = 4

  D1.StartDrag

End Sub

Private Sub Label4_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label4_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 5 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox5.Value
  C = Me.TextBox5.BackColor
  NO = 5

  D1.StartDrag

End Sub

Private Sub Label5_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label5_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 6 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox6.Value
  C = Me.TextBox6.BackColor
  NO = 6

  D1.StartDrag

End Sub

Private Sub Label6_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label6_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 7 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox7.Value
  C = Me.TextBox7.BackColor
  NO = 7

  D1.StartDrag

End Sub

Private Sub Label7_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label7_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 8 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox8.Value
  C = Me.TextBox8.BackColor
  NO = 8

  D1.StartDrag

End Sub

Private Sub Label8_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label8_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 9 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox9.Value
  C = Me.TextBox9.BackColor
  NO = 9

  D1.StartDrag

End Sub

Private Sub Label9_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label9_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 10 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox10.Value
  C = Me.TextBox10.BackColor
  NO = 10

  D1.StartDrag

End Sub

Private Sub Label10_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label10_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 11 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox11.Value
  C = Me.TextBox11.BackColor
  NO = 11

  D1.StartDrag

End Sub

Private Sub Label11_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label11_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 12 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox12.Value
  C = Me.TextBox12.BackColor
  NO = 12

  D1.StartDrag

End Sub

Private Sub Label12_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label12_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 13 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox13.Value
  C = Me.TextBox13.BackColor
  NO = 13

  D1.StartDrag

End Sub

Private Sub Label13_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label13_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 14 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox14.Value
  C = Me.TextBox14.BackColor
  NO = 14

  D1.StartDrag

End Sub

Private Sub Label14_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label14_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 15 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox15.Value
  C = Me.TextBox15.BackColor
  NO = 15

  D1.StartDrag

End Sub

Private Sub Label15_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label15_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 16 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox16.Value
  C = Me.TextBox16.BackColor
  NO = 16

  D1.StartDrag

End Sub

Private Sub Label16_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label16_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 17 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox17.Value
  C = Me.TextBox17.BackColor
  NO = 17

  D1.StartDrag

End Sub

Private Sub Label17_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label17_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 18 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox18.Value
  C = Me.TextBox18.BackColor
  NO = 18

  D1.StartDrag

End Sub

Private Sub Label18_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label18_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 19 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox19.Value
  C = Me.TextBox19.BackColor
  NO = 19

  D1.StartDrag

End Sub

Private Sub Label19_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label19_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 20 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox20.Value
  C = Me.TextBox20.BackColor
  NO = 20

  D1.StartDrag

End Sub

Private Sub Label20_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label20_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 21 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox21.Value
  C = Me.TextBox21.BackColor
  NO = 21

  D1.StartDrag

End Sub

Private Sub Label21_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label21_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 22 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox22.Value
  C = Me.TextBox22.BackColor
  NO = 22

  D1.StartDrag

End Sub

Private Sub Label22_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label22_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label23_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 23 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox23.Value
  C = Me.TextBox23.BackColor
  NO = 23

  D1.StartDrag

End Sub

Private Sub Label23_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label23_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label24_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 24 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox24.Value
  C = Me.TextBox24.BackColor
  NO = 24

  D1.StartDrag

End Sub

Private Sub Label24_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label24_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label25_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 25 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox25.Value
  C = Me.TextBox25.BackColor
  NO = 25

  D1.StartDrag

End Sub

Private Sub Label25_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label25_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label31_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 31 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label31.ControlTipText <> "" Then
     D1.SetText Me.Label31.ControlTipText
  End If
  NO = 31

  D1.StartDrag

End Sub

Private Sub Label31_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label31_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 32 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label32.ControlTipText <> "" Then
     D1.SetText Me.Label32.ControlTipText
  End If
  NO = 32

  D1.StartDrag

End Sub

Private Sub Label32_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label32_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label33_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 33 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label33.ControlTipText <> "" Then
     D1.SetText Me.Label33.ControlTipText
  End If
  NO = 33

  D1.StartDrag

End Sub

Private Sub Label33_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label33_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label34_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 34 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label34.ControlTipText <> "" Then
     D1.SetText Me.Label34.ControlTipText
  End If
  NO = 34

  D1.StartDrag

End Sub

Private Sub Label34_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label34_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label35_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 35 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label35.ControlTipText <> "" Then
     D1.SetText Me.Label35.ControlTipText
  End If
  NO = 35

  D1.StartDrag

End Sub

Private Sub Label35_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label35_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label36_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 36 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label36.ControlTipText <> "" Then
     D1.SetText Me.Label36.ControlTipText
  End If
  NO = 36

  D1.StartDrag

End Sub

Private Sub Label36_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label36_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label37_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 37 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label37.ControlTipText <> "" Then
     D1.SetText Me.Label37.ControlTipText
  End If
  NO = 37

  D1.StartDrag

End Sub

Private Sub Label37_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label37_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label38_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 38 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label38.ControlTipText <> "" Then
     D1.SetText Me.Label38.ControlTipText
  End If
  NO = 38

  D1.StartDrag

End Sub

Private Sub Label38_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label38_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label39_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 39 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label39.ControlTipText <> "" Then
     D1.SetText Me.Label39.ControlTipText
  End If
  NO = 39

  D1.StartDrag

End Sub

Private Sub Label39_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label39_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label40_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 40 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.Label40.ControlTipText <> "" Then
     D1.SetText Me.Label40.ControlTipText
  End If
  NO = 40

  D1.StartDrag

End Sub

Private Sub Label40_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label40_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label41_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 41 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox41.Value
  C = Me.TextBox41.BackColor
  NO = 41

  D1.StartDrag

End Sub

Private Sub Label41_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label41_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label42_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 42 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox42.Value
  C = Me.TextBox42.BackColor
  NO = 42

  D1.StartDrag

End Sub

Private Sub Label42_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label42_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label43_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 43 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox43.Value
  C = Me.TextBox43.BackColor
  NO = 43

  D1.StartDrag

End Sub

Private Sub Label43_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label43_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label44_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 44 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox44.Value
  C = Me.TextBox44.BackColor
  NO = 44

  D1.StartDrag

End Sub

Private Sub Label44_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label44_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label45_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 45 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox45.Value
  C = Me.TextBox45.BackColor
  NO = 45

  D1.StartDrag

End Sub

Private Sub Label45_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label45_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label46_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 46 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox46.Value
  C = Me.TextBox46.BackColor
  NO = 46

  D1.StartDrag

End Sub

Private Sub Label46_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label46_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label47_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 47 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox47.Value
  C = Me.TextBox47.BackColor
  NO = 47

  D1.StartDrag

End Sub

Private Sub Label47_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label47_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label48_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 48 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox48.Value
  C = Me.TextBox48.BackColor
  NO = 48

  D1.StartDrag

End Sub

Private Sub Label48_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label48_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label49_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 49 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox49.Value
  C = Me.TextBox49.BackColor
  NO = 49

  D1.StartDrag

End Sub

Private Sub Label49_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label49_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label50_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 50 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox50.Value
  C = Me.TextBox50.BackColor
  NO = 50

  D1.StartDrag

End Sub

Private Sub Label50_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label50_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label51_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 51 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox51.Value
  C = Me.TextBox51.BackColor
  NO = 51

  D1.StartDrag

End Sub

Private Sub Label51_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label51_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label52_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 52 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox52.Value
  C = Me.TextBox52.BackColor
  NO = 52

  D1.StartDrag

End Sub

Private Sub Label52_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label52_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label53_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 53 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.TextBox53.Value
  C = Me.TextBox53.BackColor
  NO = 53

  D1.StartDrag

End Sub

Private Sub Label53_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label53_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label54_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 54 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.Label54.ControlTipText
  NO = 54

  D1.StartDrag

End Sub

Private Sub Label54_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label54_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label55_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 55 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.Label55.ControlTipText
  NO = 55

  D1.StartDrag

End Sub

Private Sub Label55_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label55_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label56_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 56 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.Label56.ControlTipText
  NO = 56

  D1.StartDrag

End Sub

Private Sub Label56_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label56_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label57_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 57 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.Label57.ControlTipText
  NO = 57

  D1.StartDrag

End Sub

Private Sub Label57_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label57_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label58_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 58 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  D1.SetText Me.Label58.ControlTipText
  NO = 58

  D1.StartDrag

End Sub

Private Sub Label58_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label58_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  If Action = fmActionDragDrop Then
     If NO > 100 Then
        Me.Controls("TextBox" & NO).Value = ""
        Me.Controls("TextBox" & NO).BackColor = &H80000005
        Me.Controls("TextBox" & NO).Tag = ""
        Me.Controls("TextBox" & NO + 100).Value = ""
     End If
  End If
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(1)

End Sub

Private Sub Label2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(2)

End Sub

Private Sub Label3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(3)

End Sub

Private Sub Label4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(4)

End Sub

Private Sub Label5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(5)

End Sub

Private Sub Label6_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(6)

End Sub

Private Sub Label7_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(7)

End Sub

Private Sub Label8_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(8)

End Sub

Private Sub Label9_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(9)

End Sub

Private Sub Label10_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(10)

End Sub

Private Sub Label11_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(11)

End Sub

Private Sub Label12_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(12)

End Sub

Private Sub Label13_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(13)

End Sub

Private Sub Label14_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(14)

End Sub

Private Sub Label15_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(15)

End Sub

Private Sub Label16_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(16)

End Sub

Private Sub Label17_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(17)

End Sub

Private Sub Label18_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(18)

End Sub

Private Sub Label19_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(19)

End Sub

Private Sub Label20_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(20)

End Sub

Private Sub Label21_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(21)

End Sub

Private Sub Label22_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(22)

End Sub

Private Sub Label23_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(23)

End Sub

Private Sub Label24_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(24)

End Sub

Private Sub Label25_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(25)

End Sub

Private Sub Label41_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(41)

End Sub

Private Sub Label42_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(42)

End Sub

Private Sub Label43_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(43)

End Sub

Private Sub Label44_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(44)

End Sub

Private Sub Label49_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(49)

End Sub

Private Sub Label50_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(50)

End Sub

Private Sub Label51_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(51)

End Sub

Private Sub Label52_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(52)

End Sub

Private Sub Label53_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SET(53)

End Sub

Private Sub CARD_SET(NO As Long)

  Dim I As Long
  Dim W_VAL As String


  If Me.TextBox115.Value <> "" Then
     GoTo L_DC
  End If

  For I = 15 To 1 Step -1
     If Me.Controls("TextBox" & I + 100).Value <> "" Then
        Exit For
     End If
  Next I
       
  I = I + 1
        
  If NO = 6 Or _
     NO = 7 Or _
     NO = 8 Or _
     NO = 14 Or _
     NO = 22 Or _
     NO = 23 Or _
     NO = 25 Or _
     NO = 41 Or _
     NO = 42 Or _
     NO = 49 Or _
     NO = 50 Or _
     NO = 51 Or _
     NO = 52 Or _
     NO = 53 Then
     If SW_ENGLISH = True Then
        W_VAL = InputBox("Input values")
     Else
        W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
     End If
     If W_VAL = "" Then
        GoTo L_DC
     End If
     If NO = 14 Then
        If RPT_CHK(W_VAL) = False Then
           GoTo L_DC
        End If
     ElseIf NO = 23 Then
        If BR_CHK(W_VAL) = False Then
           GoTo L_DC
        End If
     End If
     Me.Controls("TextBox" & I + 200).Value = W_VAL
  End If
  Me.Controls("TextBox" & I + 100).Value = Me.Controls("TextBox" & NO).Value
  Me.Controls("TextBox" & I + 100).BackColor = Me.Controls("TextBox" & NO).BackColor
  Me.Controls("TextBox" & I + 100).Tag = NO
  Me.Frame1.Scroll 5
  If I >= 5 Then
     Me.Frame1.Scroll 4
  End If
  If I >= 9 Then
     Me.Frame1.Scroll 4
  End If
  If I >= 13 Then
     Me.Frame1.Scroll 4
  End If

L_DC:
    
  W_DC = NO

End Sub

Private Sub Label31_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(31)

End Sub

Private Sub Label32_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(32)

End Sub

Private Sub Label33_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(33)

End Sub

Private Sub Label34_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(34)

End Sub

Private Sub Label35_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(35)

End Sub

Private Sub Label36_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(36)

End Sub

Private Sub Label37_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(37)

End Sub

Private Sub Label38_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(38)

End Sub

Private Sub Label39_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(39)

End Sub

Private Sub Label40_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(40)

End Sub

Private Sub Label54_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(54)

End Sub

Private Sub Label55_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(55)

End Sub

Private Sub Label56_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(56)

End Sub

Private Sub Label57_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(57)

End Sub

Private Sub Label58_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_EXT(58)

End Sub

Private Sub CARD_EXT(NO As Long)


  If Me.Controls("Label" & NO).ControlTipText = "" Then
  Else
     Call CARD_SET2(Me.Controls("Label" & NO).ControlTipText)
  End If

  W_DC = NO

End Sub

Private Sub Label45_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SETR(45)

End Sub

Private Sub Label46_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SETR(46)

End Sub

Private Sub Label47_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SETR(47)

End Sub

Private Sub Label48_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

  Call CARD_SETR(48)

End Sub

Private Sub CARD_SETR(NO As Long)

  Dim I As Long
  Dim W_VAL As String


  If Me.TextBox130.Value <> "" Then
     GoTo L_DC
  End If

  For I = 15 To 1 Step -1
     If Me.Controls("TextBox" & I + 115).Value <> "" Then
        Exit For
     End If
  Next I
       
  I = I + 1
        
  If NO = 45 Or _
     NO = 46 Or _
     NO = 47 Then
     If SW_ENGLISH = True Then
        W_VAL = InputBox("Input values")
     Else
        W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
     End If
     If W_VAL = "" Then
        GoTo L_DC
     End If
     If NO = 46 Then
        If BR_CHK(W_VAL) = False Then
           GoTo L_DC
        End If
     End If
     Me.Controls("TextBox" & I + 215).Value = W_VAL
  End If
  Me.Controls("TextBox" & I + 115).Value = Me.Controls("TextBox" & NO).Value
  Me.Controls("TextBox" & I + 115).BackColor = Me.Controls("TextBox" & NO).BackColor
  Me.Controls("TextBox" & I + 115).Tag = NO
  Me.Frame2.Scroll 5
  If I >= 5 Then
     Me.Frame2.Scroll 4
  End If
  If I >= 9 Then
     Me.Frame2.Scroll 4
  End If
  If I >= 13 Then
     Me.Frame2.Scroll 4
  End If

L_DC:

  W_DC = NO

End Sub

Private Sub Label101_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 101 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox101.Value <> "" Then
     D1.SetText Me.TextBox101.Value
  End If
  C = Me.TextBox101.BackColor
  TG = Me.TextBox101.Tag
  VL = Me.TextBox201.Value
  NO = 101

  D1.StartDrag

End Sub

Private Sub Label101_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label101_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String

  
  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox101.Value
        W_C = Me.TextBox101.BackColor
        W_STR2 = Me.TextBox201.Value
        W_TG = Me.TextBox101.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox201.Value = W_VAL
        Else
           Me.TextBox201.Value = ""
        End If
        Me.TextBox101.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox101.Value = W_GT
     Me.TextBox101.BackColor = C
  
     If NO > 100 Then
        Me.TextBox201.Value = VL
        Me.TextBox101.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label102_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 102 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox102.Value <> "" Then
     D1.SetText Me.TextBox102.Value
  End If
  C = Me.TextBox102.BackColor
  TG = Me.TextBox102.Tag
  VL = Me.TextBox202.Value
  NO = 102

  D1.StartDrag

End Sub

Private Sub Label102_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label102_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox102.Value
        W_C = Me.TextBox102.BackColor
        W_STR2 = Me.TextBox202.Value
        W_TG = Me.TextBox102.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox202.Value = W_VAL
        Else
           Me.TextBox202.Value = ""
        End If
        Me.TextBox102.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox102.Value = W_GT
     Me.TextBox102.BackColor = C
  
     If NO > 100 Then
        Me.TextBox202.Value = VL
        Me.TextBox102.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label103_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 103 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox103.Value <> "" Then
     D1.SetText Me.TextBox103.Value
  End If
  C = Me.TextBox103.BackColor
  TG = Me.TextBox103.Tag
  VL = Me.TextBox203.Value
  NO = 103

  D1.StartDrag

End Sub

Private Sub Label103_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label103_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox103.Value
        W_C = Me.TextBox103.BackColor
        W_STR2 = Me.TextBox203.Value
        W_TG = Me.TextBox103.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox203.Value = W_VAL
        Else
           Me.TextBox203.Value = ""
        End If
        Me.TextBox103.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox103.Value = W_GT
     Me.TextBox103.BackColor = C
  
     If NO > 100 Then
        Me.TextBox203.Value = VL
        Me.TextBox103.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label104_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 104 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox104.Value <> "" Then
     D1.SetText Me.TextBox104.Value
  End If
  C = Me.TextBox104.BackColor
  TG = Me.TextBox104.Tag
  VL = Me.TextBox204.Value
  NO = 104

  D1.StartDrag

End Sub

Private Sub Label104_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label104_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox104.Value
        W_C = Me.TextBox104.BackColor
        W_STR2 = Me.TextBox204.Value
        W_TG = Me.TextBox104.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox204.Value = W_VAL
        Else
           Me.TextBox204.Value = ""
        End If
        Me.TextBox104.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox104.Value = W_GT
     Me.TextBox104.BackColor = C
  
     If NO > 100 Then
        Me.TextBox204.Value = VL
        Me.TextBox104.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label105_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 105 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox105.Value <> "" Then
     D1.SetText Me.TextBox105.Value
  End If
  C = Me.TextBox105.BackColor
  TG = Me.TextBox105.Tag
  VL = Me.TextBox205.Value
  NO = 105

  D1.StartDrag

End Sub

Private Sub Label105_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label105_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox105.Value
        W_C = Me.TextBox105.BackColor
        W_STR2 = Me.TextBox205.Value
        W_TG = Me.TextBox105.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox205.Value = W_VAL
        Else
           Me.TextBox205.Value = ""
        End If
        Me.TextBox105.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox105.Value = W_GT
     Me.TextBox105.BackColor = C
  
     If NO > 100 Then
        Me.TextBox205.Value = VL
        Me.TextBox105.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label106_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 106 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox106.Value <> "" Then
     D1.SetText Me.TextBox106.Value
  End If
  C = Me.TextBox106.BackColor
  TG = Me.TextBox106.Tag
  VL = Me.TextBox206.Value
  NO = 106

  D1.StartDrag

End Sub

Private Sub Label106_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label106_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox106.Value
        W_C = Me.TextBox106.BackColor
        W_STR2 = Me.TextBox206.Value
        W_TG = Me.TextBox106.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox206.Value = W_VAL
        Else
           Me.TextBox206.Value = ""
        End If
        Me.TextBox106.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox106.Value = W_GT
     Me.TextBox106.BackColor = C
  
     If NO > 100 Then
        Me.TextBox206.Value = VL
        Me.TextBox106.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label107_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 107 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox107.Value <> "" Then
     D1.SetText Me.TextBox107.Value
  End If
  C = Me.TextBox107.BackColor
  TG = Me.TextBox107.Tag
  VL = Me.TextBox207.Value
  NO = 107

  D1.StartDrag

End Sub

Private Sub Label107_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label107_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox107.Value
        W_C = Me.TextBox107.BackColor
        W_STR2 = Me.TextBox207.Value
        W_TG = Me.TextBox107.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox207.Value = W_VAL
        Else
           Me.TextBox207.Value = ""
        End If
        Me.TextBox107.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox107.Value = W_GT
     Me.TextBox107.BackColor = C
  
     If NO > 100 Then
        Me.TextBox207.Value = VL
        Me.TextBox107.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label108_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 108 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox108.Value <> "" Then
     D1.SetText Me.TextBox108.Value
  End If
  C = Me.TextBox108.BackColor
  TG = Me.TextBox108.Tag
  VL = Me.TextBox208.Value
  NO = 108

  D1.StartDrag

End Sub

Private Sub Label108_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label108_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox108.Value
        W_C = Me.TextBox108.BackColor
        W_STR2 = Me.TextBox208.Value
        W_TG = Me.TextBox108.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox208.Value = W_VAL
        Else
           Me.TextBox208.Value = ""
        End If
        Me.TextBox108.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox108.Value = W_GT
     Me.TextBox108.BackColor = C
  
     If NO > 100 Then
        Me.TextBox208.Value = VL
        Me.TextBox108.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label109_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 109 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox109.Value <> "" Then
     D1.SetText Me.TextBox109.Value
  End If
  C = Me.TextBox109.BackColor
  TG = Me.TextBox109.Tag
  VL = Me.TextBox209.Value
  NO = 109

  D1.StartDrag

End Sub

Private Sub Label109_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label109_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox109.Value
        W_C = Me.TextBox109.BackColor
        W_STR2 = Me.TextBox209.Value
        W_TG = Me.TextBox109.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox209.Value = W_VAL
        Else
           Me.TextBox209.Value = ""
        End If
        Me.TextBox109.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox109.Value = W_GT
     Me.TextBox109.BackColor = C
  
     If NO > 100 Then
        Me.TextBox209.Value = VL
        Me.TextBox109.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label110_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 110 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox110.Value <> "" Then
     D1.SetText Me.TextBox110.Value
  End If
  C = Me.TextBox110.BackColor
  TG = Me.TextBox110.Tag
  VL = Me.TextBox210.Value
  NO = 110

  D1.StartDrag

End Sub

Private Sub Label110_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label110_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox110.Value
        W_C = Me.TextBox110.BackColor
        W_STR2 = Me.TextBox210.Value
        W_TG = Me.TextBox110.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox210.Value = W_VAL
        Else
           Me.TextBox210.Value = ""
        End If
        Me.TextBox110.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox110.Value = W_GT
     Me.TextBox110.BackColor = C
  
     If NO > 100 Then
        Me.TextBox210.Value = VL
        Me.TextBox110.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label111_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 111 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox111.Value <> "" Then
     D1.SetText Me.TextBox111.Value
  End If
  C = Me.TextBox111.BackColor
  TG = Me.TextBox111.Tag
  VL = Me.TextBox211.Value
  NO = 111

  D1.StartDrag

End Sub

Private Sub Label111_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label111_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox111.Value
        W_C = Me.TextBox111.BackColor
        W_STR2 = Me.TextBox211.Value
        W_TG = Me.TextBox111.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox211.Value = W_VAL
        Else
           Me.TextBox211.Value = ""
        End If
        Me.TextBox111.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox111.Value = W_GT
     Me.TextBox111.BackColor = C
  
     If NO > 100 Then
        Me.TextBox211.Value = VL
        Me.TextBox111.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label112_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 112 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox112.Value <> "" Then
     D1.SetText Me.TextBox112.Value
  End If
  C = Me.TextBox112.BackColor
  TG = Me.TextBox112.Tag
  VL = Me.TextBox212.Value
  NO = 112

  D1.StartDrag

End Sub

Private Sub Label112_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label112_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox112.Value
        W_C = Me.TextBox112.BackColor
        W_STR2 = Me.TextBox212.Value
        W_TG = Me.TextBox112.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox212.Value = W_VAL
        Else
           Me.TextBox212.Value = ""
        End If
        Me.TextBox112.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox112.Value = W_GT
     Me.TextBox112.BackColor = C
  
     If NO > 100 Then
        Me.TextBox212.Value = VL
        Me.TextBox112.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label113_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 113 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox113.Value <> "" Then
     D1.SetText Me.TextBox113.Value
  End If
  C = Me.TextBox113.BackColor
  TG = Me.TextBox113.Tag
  VL = Me.TextBox213.Value
  NO = 113

  D1.StartDrag

End Sub

Private Sub Label113_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label113_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox113.Value
        W_C = Me.TextBox113.BackColor
        W_STR2 = Me.TextBox213.Value
        W_TG = Me.TextBox113.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox213.Value = W_VAL
        Else
           Me.TextBox213.Value = ""
        End If
        Me.TextBox113.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox113.Value = W_GT
     Me.TextBox113.BackColor = C
  
     If NO > 100 Then
        Me.TextBox213.Value = VL
        Me.TextBox113.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label114_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 114 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox114.Value <> "" Then
     D1.SetText Me.TextBox114.Value
  End If
  C = Me.TextBox114.BackColor
  TG = Me.TextBox114.Tag
  VL = Me.TextBox214.Value
  NO = 114

  D1.StartDrag

End Sub

Private Sub Label114_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label114_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox114.Value
        W_C = Me.TextBox114.BackColor
        W_STR2 = Me.TextBox214.Value
        W_TG = Me.TextBox114.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox214.Value = W_VAL
        Else
           Me.TextBox214.Value = ""
        End If
        Me.TextBox114.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox114.Value = W_GT
     Me.TextBox114.BackColor = C
  
     If NO > 100 Then
        Me.TextBox214.Value = VL
        Me.TextBox114.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label115_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 115 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox115.Value <> "" Then
     D1.SetText Me.TextBox115.Value
  End If
  C = Me.TextBox115.BackColor
  TG = Me.TextBox115.Tag
  VL = Me.TextBox215.Value
  NO = 115

  D1.StartDrag

End Sub

Private Sub Label115_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label115_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        GoTo L_CLR
     ElseIf NO > 100 Then
        W_STR1 = Me.TextBox115.Value
        W_C = Me.TextBox115.BackColor
        W_STR2 = Me.TextBox215.Value
        W_TG = Me.TextBox115.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        GoTo L_CLR
     ElseIf (NO >= 31 And _
             NO <= 40) Or _
            (NO >= 54 And _
             NO <= 58) Then
        W_GT = ""
        On Error Resume Next
        W_GT = D1.GetText
        On Error GoTo 0
        If W_GT = "" Then
           GoTo L_CLR
        End If
        Call CARD_SET2(W_GT)
        GoTo L_CLR
     Else
        If NO = 6 Or _
           NO = 7 Or _
           NO = 8 Or _
           NO = 14 Or _
           NO = 22 Or _
           NO = 23 Or _
           NO = 25 Or _
           NO = 41 Or _
           NO = 42 Or _
           NO = 49 Or _
           NO = 50 Or _
           NO = 51 Or _
           NO = 52 Or _
           NO = 53 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 14 Then
              If RPT_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           ElseIf NO = 23 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox215.Value = W_VAL
        Else
           Me.TextBox215.Value = ""
        End If
        Me.TextBox115.Tag = NO
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox115.Value = W_GT
     Me.TextBox115.BackColor = C
  
     If NO > 100 Then
        Me.TextBox215.Value = VL
        Me.TextBox115.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label116_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 116 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox116.Value <> "" Then
     D1.SetText Me.TextBox116.Value
  End If
  C = Me.TextBox116.BackColor
  TG = Me.TextBox116.Tag
  VL = Me.TextBox216.Value
  NO = 116

  D1.StartDrag

End Sub

Private Sub Label116_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label116_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox116.Value
        W_C = Me.TextBox116.BackColor
        W_STR2 = Me.TextBox216.Value
        W_TG = Me.TextBox116.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox216.Value = W_VAL
        Else
           Me.TextBox216.Value = ""
        End If
        Me.TextBox116.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox116.Value = W_GT
     Me.TextBox116.BackColor = C
  
     If NO > 115 Then
        Me.TextBox216.Value = VL
        Me.TextBox116.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label117_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 117 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox117.Value <> "" Then
     D1.SetText Me.TextBox117.Value
  End If
  C = Me.TextBox117.BackColor
  TG = Me.TextBox117.Tag
  VL = Me.TextBox217.Value
  NO = 117

  D1.StartDrag

End Sub

Private Sub Label117_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label117_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox117.Value
        W_C = Me.TextBox117.BackColor
        W_STR2 = Me.TextBox217.Value
        W_TG = Me.TextBox117.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox217.Value = W_VAL
        Else
           Me.TextBox217.Value = ""
        End If
        Me.TextBox117.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox117.Value = W_GT
     Me.TextBox117.BackColor = C
  
     If NO > 115 Then
        Me.TextBox217.Value = VL
        Me.TextBox117.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label118_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 118 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox118.Value <> "" Then
     D1.SetText Me.TextBox118.Value
  End If
  C = Me.TextBox118.BackColor
  TG = Me.TextBox118.Tag
  VL = Me.TextBox218.Value
  NO = 118

  D1.StartDrag

End Sub

Private Sub Label118_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label118_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox118.Value
        W_C = Me.TextBox118.BackColor
        W_STR2 = Me.TextBox218.Value
        W_TG = Me.TextBox118.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox218.Value = W_VAL
        Else
           Me.TextBox218.Value = ""
        End If
        Me.TextBox118.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox118.Value = W_GT
     Me.TextBox118.BackColor = C
  
     If NO > 115 Then
        Me.TextBox218.Value = VL
        Me.TextBox118.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label119_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 119 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox119.Value <> "" Then
     D1.SetText Me.TextBox119.Value
  End If
  C = Me.TextBox119.BackColor
  TG = Me.TextBox119.Tag
  VL = Me.TextBox219.Value
  NO = 119

  D1.StartDrag

End Sub

Private Sub Label119_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label119_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox119.Value
        W_C = Me.TextBox119.BackColor
        W_STR2 = Me.TextBox219.Value
        W_TG = Me.TextBox119.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox219.Value = W_VAL
        Else
           Me.TextBox219.Value = ""
        End If
        Me.TextBox119.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox119.Value = W_GT
     Me.TextBox119.BackColor = C
  
     If NO > 115 Then
        Me.TextBox219.Value = VL
        Me.TextBox119.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label120_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 120 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox120.Value <> "" Then
     D1.SetText Me.TextBox120.Value
  End If
  C = Me.TextBox120.BackColor
  TG = Me.TextBox120.Tag
  VL = Me.TextBox220.Value
  NO = 120

  D1.StartDrag

End Sub

Private Sub Label120_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label120_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox120.Value
        W_C = Me.TextBox120.BackColor
        W_STR2 = Me.TextBox220.Value
        W_TG = Me.TextBox120.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox220.Value = W_VAL
        Else
           Me.TextBox220.Value = ""
        End If
        Me.TextBox120.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox120.Value = W_GT
     Me.TextBox120.BackColor = C
  
     If NO > 115 Then
        Me.TextBox220.Value = VL
        Me.TextBox120.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label121_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 121 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox121.Value <> "" Then
     D1.SetText Me.TextBox121.Value
  End If
  C = Me.TextBox121.BackColor
  TG = Me.TextBox121.Tag
  VL = Me.TextBox221.Value
  NO = 121

  D1.StartDrag

End Sub

Private Sub Label121_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label121_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox121.Value
        W_C = Me.TextBox121.BackColor
        W_STR2 = Me.TextBox221.Value
        W_TG = Me.TextBox121.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox221.Value = W_VAL
        Else
           Me.TextBox221.Value = ""
        End If
        Me.TextBox121.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox121.Value = W_GT
     Me.TextBox121.BackColor = C
  
     If NO > 115 Then
        Me.TextBox221.Value = VL
        Me.TextBox121.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label122_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 122 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox122.Value <> "" Then
     D1.SetText Me.TextBox122.Value
  End If
  C = Me.TextBox122.BackColor
  TG = Me.TextBox122.Tag
  VL = Me.TextBox222.Value
  NO = 122

  D1.StartDrag

End Sub

Private Sub Label122_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label122_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox122.Value
        W_C = Me.TextBox122.BackColor
        W_STR2 = Me.TextBox222.Value
        W_TG = Me.TextBox122.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox222.Value = W_VAL
        Else
           Me.TextBox222.Value = ""
        End If
        Me.TextBox122.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox122.Value = W_GT
     Me.TextBox122.BackColor = C
  
     If NO > 115 Then
        Me.TextBox222.Value = VL
        Me.TextBox122.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label123_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 123 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox123.Value <> "" Then
     D1.SetText Me.TextBox123.Value
  End If
  C = Me.TextBox123.BackColor
  TG = Me.TextBox123.Tag
  VL = Me.TextBox223.Value
  NO = 123

  D1.StartDrag

End Sub

Private Sub Label123_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label123_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox123.Value
        W_C = Me.TextBox123.BackColor
        W_STR2 = Me.TextBox223.Value
        W_TG = Me.TextBox123.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox223.Value = W_VAL
        Else
           Me.TextBox223.Value = ""
        End If
        Me.TextBox123.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox123.Value = W_GT
     Me.TextBox123.BackColor = C
  
     If NO > 115 Then
        Me.TextBox223.Value = VL
        Me.TextBox123.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label124_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 124 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox124.Value <> "" Then
     D1.SetText Me.TextBox124.Value
  End If
  C = Me.TextBox124.BackColor
  TG = Me.TextBox124.Tag
  VL = Me.TextBox224.Value
  NO = 124

  D1.StartDrag

End Sub

Private Sub Label124_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label124_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox124.Value
        W_C = Me.TextBox124.BackColor
        W_STR2 = Me.TextBox224.Value
        W_TG = Me.TextBox124.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox224.Value = W_VAL
        Else
           Me.TextBox224.Value = ""
        End If
        Me.TextBox124.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox124.Value = W_GT
     Me.TextBox124.BackColor = C
  
     If NO > 115 Then
        Me.TextBox224.Value = VL
        Me.TextBox124.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label125_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 125 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox125.Value <> "" Then
     D1.SetText Me.TextBox125.Value
  End If
  C = Me.TextBox125.BackColor
  TG = Me.TextBox125.Tag
  VL = Me.TextBox225.Value
  NO = 125

  D1.StartDrag

End Sub

Private Sub Label125_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label125_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox125.Value
        W_C = Me.TextBox125.BackColor
        W_STR2 = Me.TextBox225.Value
        W_TG = Me.TextBox125.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox225.Value = W_VAL
        Else
           Me.TextBox225.Value = ""
        End If
        Me.TextBox125.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox125.Value = W_GT
     Me.TextBox125.BackColor = C
  
     If NO > 115 Then
        Me.TextBox225.Value = VL
        Me.TextBox125.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label126_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 126 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox126.Value <> "" Then
     D1.SetText Me.TextBox126.Value
  End If
  C = Me.TextBox126.BackColor
  TG = Me.TextBox126.Tag
  VL = Me.TextBox226.Value
  NO = 126

  D1.StartDrag

End Sub

Private Sub Label126_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label126_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox126.Value
        W_C = Me.TextBox126.BackColor
        W_STR2 = Me.TextBox226.Value
        W_TG = Me.TextBox126.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox226.Value = W_VAL
        Else
           Me.TextBox226.Value = ""
        End If
        Me.TextBox126.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox126.Value = W_GT
     Me.TextBox126.BackColor = C
  
     If NO > 115 Then
        Me.TextBox226.Value = VL
        Me.TextBox126.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label127_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 127 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox127.Value <> "" Then
     D1.SetText Me.TextBox127.Value
  End If
  C = Me.TextBox127.BackColor
  TG = Me.TextBox127.Tag
  VL = Me.TextBox227.Value
  NO = 127

  D1.StartDrag

End Sub

Private Sub Label127_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label127_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox127.Value
        W_C = Me.TextBox127.BackColor
        W_STR2 = Me.TextBox227.Value
        W_TG = Me.TextBox127.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox227.Value = W_VAL
        Else
           Me.TextBox227.Value = ""
        End If
        Me.TextBox127.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox127.Value = W_GT
     Me.TextBox127.BackColor = C
  
     If NO > 115 Then
        Me.TextBox227.Value = VL
        Me.TextBox127.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label128_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 128 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox128.Value <> "" Then
     D1.SetText Me.TextBox128.Value
  End If
  C = Me.TextBox128.BackColor
  TG = Me.TextBox128.Tag
  VL = Me.TextBox228.Value
  NO = 128

  D1.StartDrag

End Sub

Private Sub Label128_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label128_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox128.Value
        W_C = Me.TextBox128.BackColor
        W_STR2 = Me.TextBox228.Value
        W_TG = Me.TextBox128.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox228.Value = W_VAL
        Else
           Me.TextBox228.Value = ""
        End If
        Me.TextBox128.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox128.Value = W_GT
     Me.TextBox128.BackColor = C
  
     If NO > 115 Then
        Me.TextBox228.Value = VL
        Me.TextBox128.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label129_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 129 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox129.Value <> "" Then
     D1.SetText Me.TextBox129.Value
  End If
  C = Me.TextBox129.BackColor
  TG = Me.TextBox129.Tag
  VL = Me.TextBox229.Value
  NO = 129

  D1.StartDrag

End Sub

Private Sub Label129_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label129_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox129.Value
        W_C = Me.TextBox129.BackColor
        W_STR2 = Me.TextBox229.Value
        W_TG = Me.TextBox129.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox229.Value = W_VAL
        Else
           Me.TextBox229.Value = ""
        End If
        Me.TextBox129.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox129.Value = W_GT
     Me.TextBox129.BackColor = C
  
     If NO > 115 Then
        Me.TextBox229.Value = VL
        Me.TextBox129.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label130_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button <> 1 Then
     Exit Sub
  End If
  
  If W_DC = 130 Then
     Exit Sub
  Else
     W_DC = 0
  End If
  
  Set D1 = New DataObject
  If Me.TextBox130.Value <> "" Then
     D1.SetText Me.TextBox130.Value
  End If
  C = Me.TextBox130.BackColor
  TG = Me.TextBox130.Tag
  VL = Me.TextBox230.Value
  NO = 130

  D1.StartDrag

End Sub

Private Sub Label130_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label130_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Dim W_VAL As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_GT As String
  Dim W_C As Long
  Dim W_TG As String


  If Action = fmActionDragDrop Then
     If NO > 115 Then
        W_STR1 = Me.TextBox130.Value
        W_C = Me.TextBox130.BackColor
        W_STR2 = Me.TextBox230.Value
        W_TG = Me.TextBox130.Tag
     ElseIf NO >= 45 And _
            NO <= 48 Then
        If NO = 45 Or _
           NO = 46 Or _
           NO = 47 Then
           If SW_ENGLISH = True Then
              W_VAL = InputBox("Input values")
           Else
              W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|")
           End If
           If W_VAL = "" Then
              GoTo L_CLR
           End If
           If NO = 46 Then
              If BR_CHK(W_VAL) = False Then
                 GoTo L_CLR
              End If
           End If
           Me.TextBox230.Value = W_VAL
        Else
           Me.TextBox230.Value = ""
        End If
        Me.TextBox130.Tag = NO
     Else
        GoTo L_CLR
     End If
     
     W_GT = ""
     On Error Resume Next
     W_GT = D1.GetText
     On Error GoTo 0
     Me.TextBox130.Value = W_GT
     Me.TextBox130.BackColor = C
  
     If NO > 115 Then
        Me.TextBox230.Value = VL
        Me.TextBox130.Tag = TG
        Me.Controls("TextBox" & NO).Value = W_STR1
        Me.Controls("TextBox" & NO).BackColor = W_C
        Me.Controls("TextBox" & NO).Tag = W_TG
        Me.Controls("TextBox" & NO + 100).Value = W_STR2
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label101_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(1)

End Sub

Private Sub Label102_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(2)

End Sub

Private Sub Label103_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(3)

End Sub

Private Sub Label104_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(4)

End Sub

Private Sub Label105_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(5)

End Sub

Private Sub Label106_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(6)

End Sub

Private Sub Label107_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(7)

End Sub

Private Sub Label108_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(8)

End Sub

Private Sub Label109_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(9)

End Sub

Private Sub Label110_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(10)

End Sub

Private Sub Label111_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(11)

End Sub

Private Sub Label112_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(12)

End Sub

Private Sub Label113_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(13)

End Sub

Private Sub Label114_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(14)

End Sub

Private Sub Label115_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHG(15)

End Sub

Private Sub CARD_CHG(NO As Long)

  Dim W_VAL As String


  If Me.Controls("TextBox" & NO + 200).Value = "" Then
     GoTo L_DC
  End If
  
  If SW_ENGLISH = True Then
     W_VAL = InputBox("Input values", , Me.Controls("TextBox" & NO + 200).Value)
  Else
     W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|", , Me.Controls("TextBox" & NO + 200).Value)
  End If
  
  If W_VAL = "" Then
     GoTo L_DC
  End If
  
  If Me.Controls("TextBox" & NO + 100).Tag = "14" Then
     If RPT_CHK(W_VAL) = False Then
        GoTo L_DC
     End If
  ElseIf Me.Controls("TextBox" & NO + 100).Tag = "23" Then
     If BR_CHK(W_VAL) = False Then
        GoTo L_DC
     End If
  End If
  
  Me.Controls("TextBox" & NO + 200).Value = W_VAL

L_DC:
    
  W_DC = 100 + NO

End Sub

Private Sub Label116_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(1)

End Sub

Private Sub Label117_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(2)

End Sub

Private Sub Label118_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(3)

End Sub

Private Sub Label119_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(4)

End Sub

Private Sub Label120_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(5)

End Sub

Private Sub Label121_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(6)

End Sub

Private Sub Label122_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(7)

End Sub

Private Sub Label123_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(8)

End Sub

Private Sub Label124_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(9)

End Sub

Private Sub Label125_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(10)

End Sub

Private Sub Label126_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(11)

End Sub

Private Sub Label127_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(12)

End Sub

Private Sub Label128_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(13)

End Sub

Private Sub Label129_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(14)

End Sub

Private Sub Label130_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call CARD_CHGR(15)

End Sub

Private Sub CARD_CHGR(NO As Long)

  Dim W_VAL As String


  If Me.Controls("TextBox" & NO + 215).Value = "" Then
     GoTo L_DC
  End If
  
  If SW_ENGLISH = True Then
     W_VAL = InputBox("Input values", , Me.Controls("TextBox" & NO + 215).Value)
  Else
     W_VAL = InputBox("|fffd|l|fffd||313||fffd||fffd||fffd|", , Me.Controls("TextBox" & NO + 215).Value)
  End If
  
  If W_VAL = "" Then
     GoTo L_DC
  End If
  
  If Me.Controls("TextBox" & NO + 115).Tag = "46" Then
     If BR_CHK(W_VAL) = False Then
        GoTo L_DC
     End If
  End If
  
  Me.Controls("TextBox" & NO + 215).Value = W_VAL

L_DC:
    
  W_DC = 115 + NO

End Sub

Private Function RPT_CHK(ByVal W_VAL As String) As Boolean

  Dim RE As Object
  Dim W_VAL1 As String
  Dim W_VAL2 As String

  
  RPT_CHK = False

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "^(\d+),?(\d*)$"
     .IgnoreCase = False
     .Global = True
  End With
  If RE.Test(W_VAL) = False Then
     If SW_ENGLISH = True Then
        MsgBox "Wrong assigned times.", vbExclamation
     Else
        MsgBox "|fffd|w|fffd||fffd||fffd||fffd||fffd|", vbExclamation
     End If
     Set RE = Nothing
     Exit Function
  End If
              
  W_VAL1 = RE.Replace(W_VAL, "$1")
  W_VAL2 = RE.Replace(W_VAL, "$2")
  If W_VAL2 <> "" Then
     If CLng(W_VAL1) > CLng(W_VAL2) Then
        If SW_ENGLISH = True Then
           MsgBox "Wrong assigned times.", vbExclamation
        Else
           MsgBox "|fffd|w|fffd||fffd||fffd||fffd||fffd|", vbExclamation
        End If
        Set RE = Nothing
        Exit Function
     End If
  End If
  Set RE = Nothing

  RPT_CHK = True

End Function

Private Function BR_CHK(ByVal W_VAL As String) As Boolean

  Dim RE As Object
  Dim W_VAL1 As String
  Dim W_VAL2 As String

  
  BR_CHK = False

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "^\d+$"
     .IgnoreCase = False
     .Global = True
  End With
  If RE.Test(W_VAL) = False Then
     If SW_ENGLISH = True Then
        MsgBox "Wrong number.", vbExclamation
     Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation
     End If
     Set RE = Nothing
     Exit Function
  End If
  Set RE = Nothing

  BR_CHK = True

End Function

Private Sub Label301_Click()
  
  Call CARD_INSERT(2)

End Sub

Private Sub Label302_Click()
  
  Call CARD_INSERT(3)

End Sub

Private Sub Label303_Click()
  
  Call CARD_INSERT(4)

End Sub

Private Sub Label304_Click()
  
  Call CARD_INSERT(5)

End Sub

Private Sub Label305_Click()
  
  Call CARD_INSERT(6)

End Sub

Private Sub Label306_Click()
  
  Call CARD_INSERT(7)

End Sub

Private Sub Label307_Click()
  
  Call CARD_INSERT(8)

End Sub

Private Sub Label308_Click()
  
  Call CARD_INSERT(9)

End Sub

Private Sub Label309_Click()
  
  Call CARD_INSERT(10)

End Sub

Private Sub Label310_Click()
  
  Call CARD_INSERT(11)

End Sub

Private Sub Label311_Click()
  
  Call CARD_INSERT(12)

End Sub

Private Sub Label312_Click()
  
  Call CARD_INSERT(13)

End Sub

Private Sub Label313_Click()
  
  Call CARD_INSERT(14)

End Sub

Private Sub Label314_Click()
  
  Call CARD_INSERT(15)

End Sub

Private Sub Label315_Click()
  
  Call CARD_INSERT(16)

End Sub

Private Sub CARD_INSERT(ByVal EI As Long)

  Dim I As Long


  If Me.TextBox115.Value <> "" Then
     If SW_ENGLISH = True Then
        MsgBox "Can't insert.", vbExclamation
     Else
        MsgBox "|fffd|}|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  For I = 15 To EI Step -1
     Me.Controls("TextBox" & I + 100).Value = Me.Controls("TextBox" & I - 1 + 100).Value
     Me.Controls("TextBox" & I + 100).BackColor = Me.Controls("TextBox" & I - 1 + 100).BackColor
     Me.Controls("TextBox" & I + 100).Tag = Me.Controls("TextBox" & I - 1 + 100).Tag
     Me.Controls("TextBox" & I + 200).Value = Me.Controls("TextBox" & I - 1 + 200).Value
  Next I

  Me.Controls("TextBox" & EI - 1 + 100).Value = ""
  Me.Controls("TextBox" & EI - 1 + 100).BackColor = &H80000005
  Me.Controls("TextBox" & EI - 1 + 100).Tag = ""
  Me.Controls("TextBox" & EI - 1 + 200).Value = ""

End Sub

Private Sub Label316_Click()
  
  Call CARD_INSERTR(2)

End Sub

Private Sub Label317_Click()
  
  Call CARD_INSERTR(3)

End Sub

Private Sub Label318_Click()
  
  Call CARD_INSERTR(4)

End Sub

Private Sub Label319_Click()
  
  Call CARD_INSERTR(5)

End Sub

Private Sub Label320_Click()
  
  Call CARD_INSERTR(6)

End Sub

Private Sub Label321_Click()
  
  Call CARD_INSERTR(7)

End Sub

Private Sub Label322_Click()
  
  Call CARD_INSERTR(8)

End Sub

Private Sub Label323_Click()
  
  Call CARD_INSERTR(9)

End Sub

Private Sub Label324_Click()
  
  Call CARD_INSERTR(10)

End Sub

Private Sub Label325_Click()
  
  Call CARD_INSERTR(11)

End Sub

Private Sub Label326_Click()
  
  Call CARD_INSERTR(12)

End Sub

Private Sub Label327_Click()
  
  Call CARD_INSERTR(13)

End Sub

Private Sub Label328_Click()
  
  Call CARD_INSERTR(14)

End Sub

Private Sub Label329_Click()
  
  Call CARD_INSERTR(15)

End Sub

Private Sub Label330_Click()
  
  Call CARD_INSERTR(16)

End Sub

Private Sub CARD_INSERTR(ByVal EI As Long)

  Dim I As Long


  If Me.TextBox130.Value <> "" Then
     If SW_ENGLISH = True Then
        MsgBox "Can't insert.", vbExclamation
     Else
        MsgBox "|fffd|}|fffd||fffd||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  For I = 15 To EI Step -1
     Me.Controls("TextBox" & I + 115).Value = Me.Controls("TextBox" & I - 1 + 115).Value
     Me.Controls("TextBox" & I + 115).BackColor = Me.Controls("TextBox" & I - 1 + 115).BackColor
     Me.Controls("TextBox" & I + 115).Tag = Me.Controls("TextBox" & I - 1 + 115).Tag
     Me.Controls("TextBox" & I + 215).Value = Me.Controls("TextBox" & I - 1 + 215).Value
  Next I

  Me.Controls("TextBox" & EI - 1 + 115).Value = ""
  Me.Controls("TextBox" & EI - 1 + 115).BackColor = &H80000005
  Me.Controls("TextBox" & EI - 1 + 115).Tag = ""
  Me.Controls("TextBox" & EI - 1 + 215).Value = ""

End Sub

Private Sub Label401_Click()
  
  Call CARD_DELETE(2)

End Sub

Private Sub Label402_Click()
  
  Call CARD_DELETE(3)

End Sub

Private Sub Label403_Click()
  
  Call CARD_DELETE(4)

End Sub

Private Sub Label404_Click()
  
  Call CARD_DELETE(5)

End Sub

Private Sub Label405_Click()
  
  Call CARD_DELETE(6)

End Sub

Private Sub Label406_Click()
  
  Call CARD_DELETE(7)

End Sub

Private Sub Label407_Click()
  
  Call CARD_DELETE(8)

End Sub

Private Sub Label408_Click()
  
  Call CARD_DELETE(9)

End Sub

Private Sub Label409_Click()
  
  Call CARD_DELETE(10)

End Sub

Private Sub Label410_Click()
  
  Call CARD_DELETE(11)

End Sub

Private Sub Label411_Click()
  
  Call CARD_DELETE(12)

End Sub

Private Sub Label412_Click()
  
  Call CARD_DELETE(13)

End Sub

Private Sub Label413_Click()
  
  Call CARD_DELETE(14)

End Sub

Private Sub Label414_Click()
  
  Call CARD_DELETE(15)

End Sub

Private Sub Label415_Click()
  
  Call CARD_DELETE(16)

End Sub

Private Sub CARD_DELETE(ByVal SI As Long)

  Dim I As Long


  For I = SI To 15
     Me.Controls("TextBox" & I - 1 + 100).Value = Me.Controls("TextBox" & I + 100).Value
     Me.Controls("TextBox" & I - 1 + 100).BackColor = Me.Controls("TextBox" & I + 100).BackColor
     Me.Controls("TextBox" & I - 1 + 100).Tag = Me.Controls("TextBox" & I + 100).Tag
     Me.Controls("TextBox" & I - 1 + 200).Value = Me.Controls("TextBox" & I + 200).Value
  Next I

  Me.Controls("TextBox" & 15 + 100).Value = ""
  Me.Controls("TextBox" & 15 + 100).BackColor = &H80000005
  Me.Controls("TextBox" & 15 + 100).Tag = ""
  Me.Controls("TextBox" & 15 + 200).Value = ""

End Sub

Private Sub Label416_Click()
  
  Call CARD_DELETER(2)

End Sub

Private Sub Label417_Click()
  
  Call CARD_DELETER(3)

End Sub

Private Sub Label418_Click()
  
  Call CARD_DELETER(4)

End Sub

Private Sub Label419_Click()
  
  Call CARD_DELETER(5)

End Sub

Private Sub Label420_Click()
  
  Call CARD_DELETER(6)

End Sub

Private Sub Label421_Click()
  
  Call CARD_DELETER(7)

End Sub

Private Sub Label422_Click()
  
  Call CARD_DELETER(8)

End Sub

Private Sub Label423_Click()
  
  Call CARD_DELETER(9)

End Sub

Private Sub Label424_Click()
  
  Call CARD_DELETER(10)

End Sub

Private Sub Label425_Click()
  
  Call CARD_DELETER(11)

End Sub

Private Sub Label426_Click()
  
  Call CARD_DELETER(12)

End Sub

Private Sub Label427_Click()
  
  Call CARD_DELETER(13)

End Sub

Private Sub Label428_Click()
  
  Call CARD_DELETER(14)

End Sub

Private Sub Label429_Click()
  
  Call CARD_DELETER(15)

End Sub

Private Sub Label430_Click()
  
  Call CARD_DELETER(16)

End Sub

Private Sub CARD_DELETER(ByVal SI As Long)

  Dim I As Long


  For I = SI To 15
     Me.Controls("TextBox" & I - 1 + 115).Value = Me.Controls("TextBox" & I + 115).Value
     Me.Controls("TextBox" & I - 1 + 115).BackColor = Me.Controls("TextBox" & I + 115).BackColor
     Me.Controls("TextBox" & I - 1 + 115).Tag = Me.Controls("TextBox" & I + 115).Tag
     Me.Controls("TextBox" & I - 1 + 215).Value = Me.Controls("TextBox" & I + 215).Value
  Next I

  Me.Controls("TextBox" & 30 + 100).Value = ""
  Me.Controls("TextBox" & 30 + 100).BackColor = &H80000005
  Me.Controls("TextBox" & 30 + 100).Tag = ""
  Me.Controls("TextBox" & 30 + 200).Value = ""

End Sub

Sub Label702_Click()
  
  Dim I As Long
 
 
  For I = 1 To 15
     Me.Controls("TextBox" & I + 100).Value = ""
     Me.Controls("TextBox" & I + 100).BackColor = &H80000005
     Me.Controls("TextBox" & I + 100).Tag = ""
     Me.Controls("TextBox" & I + 200).Value = ""
  Next I

End Sub

Sub Label705_Click()
  
  Dim I As Long
 
 
  For I = 1 To 15
     Me.Controls("TextBox" & I + 115).Value = ""
     Me.Controls("TextBox" & I + 115).BackColor = &H80000005
     Me.Controls("TextBox" & I + 115).Tag = ""
     Me.Controls("TextBox" & I + 215).Value = ""
  Next I

End Sub

Private Sub Label703_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label703_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  Dim W_INPUT As String
  
  
  If Action = fmActionDragDrop Then
     If NO >= 31 And _
        NO <= 40 Then
        Call CARD_RESET

        If CARD_CHK = False Then
           If SW_ENGLISH = True Then
              MsgBox "Error exists", vbExclamation
           Else
              MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
           End If
           GoTo L_CLR
        End If

        W_INPUT = CARD_INPUT

        If W_INPUT <> "" Then
           Me.Controls("Label" & NO).ControlTipText = W_INPUT
        End If
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub Label704_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

  Cancel = True

End Sub

Private Sub Label704_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
  
  
  If Action = fmActionDragDrop Then
     If NO >= 31 And _
        NO <= 40 Then
        Me.Controls("Label" & NO).ControlTipText = ""
     End If
  End If
  
L_CLR:
  
  Data.Clear
  Set D1 = Nothing

End Sub

Private Sub ComboBox1_Enter()

  Me.ComboBox1.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox1.BackColor = &H80000005

End Sub

Private Sub ComboBox2_Enter()

  Me.ComboBox2.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox2.BackColor = &H80000005

End Sub

Private Sub ComboBox3_Enter()

  Me.ComboBox3.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox3.BackColor = &H80000005

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CheckBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox1)

End Sub

Private Sub CheckBox2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox2)

End Sub

Private Sub CheckBox3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox3)

End Sub

Private Sub CheckBox4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox4)

End Sub

Private Sub CheckBox5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox5)

End Sub

Private Sub OptionButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton1)

End Sub

Private Sub OptionButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton2)

End Sub

Private Sub OptionButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton3)

End Sub

Private Sub ToggleButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  
  Call MM_COM(Me.ToggleButton1)

End Sub

Private Sub ToggleButton1_Enter()

  Me.ToggleButton1.BackColor = &HFFFFC0

End Sub

Private Sub ToggleButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ToggleButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton5)

End Sub

Private Sub CommandButton5_Enter()

  Me.CommandButton5.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton5.BackColor = &H8000000F

End Sub

Private Sub CommandButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton6)

End Sub

Private Sub CommandButton6_Enter()

  Me.CommandButton6.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton6.BackColor = &H8000000F

End Sub

Private Sub CommandButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton7)

End Sub

Private Sub CommandButton7_Enter()

  Me.CommandButton7.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton7.BackColor = &H8000000F

End Sub

Private Sub CommandButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton8)

End Sub

Private Sub CommandButton8_Enter()

  Me.CommandButton8.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton8.BackColor = &H8000000F

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub CommandButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton10)

End Sub

Private Sub CommandButton10_Enter()

  Me.CommandButton10.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton10.BackColor = &H8000000F

End Sub

Private Sub CommandButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton11)

End Sub

Private Sub CommandButton11_Enter()

  Me.CommandButton11.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton11_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton11.BackColor = &H8000000F

End Sub

Private Sub CommandButton101_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton101)

End Sub

Private Sub CommandButton101_Enter()

  Me.CommandButton101.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton101_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton101.BackColor = &H8000000F

End Sub

Private Sub CommandButton102_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton102)

End Sub

Private Sub CommandButton102_Enter()

  Me.CommandButton102.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton102_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton102.BackColor = &H8000000F

End Sub

Private Sub CommandButton103_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton103)

End Sub

Private Sub CommandButton103_Enter()

  Me.CommandButton103.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton103_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton103.BackColor = &H8000000F

End Sub

Private Sub CommandButton104_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton104)

End Sub

Private Sub CommandButton104_Enter()

  Me.CommandButton104.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton104_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton104.BackColor = &H8000000F

End Sub

Private Sub CommandButton105_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton105)

End Sub

Private Sub CommandButton105_Enter()

  Me.CommandButton105.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton105_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton105.BackColor = &H8000000F

End Sub

Private Sub CommandButton106_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton106)

End Sub

Private Sub CommandButton106_Enter()

  Me.CommandButton106.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton106_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton106.BackColor = &H8000000F

End Sub

Private Sub CommandButton1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT = "" Then
     Exit Sub
  End If
     
  UserForm1.ComboBox1.Value = W_INPUT

  SW_TM = True
  W_TMMS = 450
  Call TMNP_STR(1)

End Sub

Private Sub CommandButton1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = False
  Call TMNP_END

End Sub

Private Sub CommandButton1_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     Call UserForm1.FINDPN(True, 0)
     Call SET_POS2(True)
  End If

End Sub

Private Sub CommandButton2_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT = "" Then
     Exit Sub
  End If
     
  UserForm1.ComboBox1.Value = W_INPUT

  SW_TM = True
  W_TMMS = 450
  Call TMNP_STR(2)

End Sub

Private Sub CommandButton2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  SW_TM = False
  Call TMNP_END

End Sub

Private Sub CommandButton2_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     Call UserForm1.FINDPN(False, 0)
     Call SET_POS2(False)
  End If

End Sub

Private Sub CommandButton3_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     If Me.OptionButton1.Value = True Then
        Call UserForm1.FINDPN(True, 3)
     ElseIf Me.OptionButton2.Value = True Then
        Call UserForm1.CommandButton22_Click
     Else
        UserForm1.ComboBox23.Value = Me.ComboBox3.Value
        Call UserForm1.CommandButton76_Click
     End If
     If UserForm1.ListBox1.Visible = True Then
        SW_CLASSIC2 = True
        Unload Me
        Call SHOW_MODELESS(UserForm1)
     Else
        UserForm1.Hide
        Call SHOW_MODELESS(Me)
     End If
  End If

End Sub

Private Sub CommandButton4_Click()

  Dim W_INPUT As String


  Call CARD_RESET
  Call CARD_RESETR

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     UserForm1.ComboBox2.Value = CARD_INPUTR
     Call UserForm1.FINDPN(True, 1)
     UserForm1.MultiPage1.Value = 0
     Call UserForm1.MultiPage1_Change
     UserForm1.Hide
     Call SET_POS2(True)
  End If

End Sub

Private Sub CommandButton5_Click()

  Dim W_INPUT As String


  Call CARD_RESET
  Call CARD_RESETR

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     UserForm1.ComboBox2.Value = CARD_INPUTR
     Call UserForm1.FINDPN(False, 1)
     UserForm1.MultiPage1.Value = 0
     Call UserForm1.MultiPage1_Change
     UserForm1.Hide
     Call SET_POS2(False)
  End If

End Sub

Private Sub CommandButton6_Click()

  Dim W_INPUT As String


  Call CARD_RESET
  Call CARD_RESETR

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     UserForm1.ComboBox2.Value = CARD_INPUTR
     If Me.OptionButton1.Value = True Then
        Call UserForm1.FINDPN(True, 2)
     ElseIf Me.OptionButton2.Value = True Then
        Call UserForm1.CommandButton25_Click1
     Else
        UserForm1.ComboBox23.Value = Me.ComboBox3.Value
        Call UserForm1.CommandButton75_Click
     End If
     UserForm1.MultiPage1.Value = 0
     Call UserForm1.MultiPage1_Change
     UserForm1.Hide
     UserForm13.Caption = UserForm13.Caption & " "
     AppActivate UserForm13.Caption
     UserForm13.Caption = Left$(UserForm13.Caption, Len(UserForm13.Caption) - 1)
     Call SET_POS2(True)
  End If

End Sub

Private Sub CommandButton7_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     UserForm1.ComboBox18.Value = Me.ComboBox3.Value
     If Me.OptionButton1.Value = True Then
        Call UserForm1.CommandButton20_Click
     Else
        Call UserForm1.CommandButton39_Click
     End If
     Unload Me
  End If

End Sub

Private Sub CommandButton8_Click()

  Dim W_INPUT As String


  Call CARD_RESET
  Call CARD_RESETR

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     UserForm1.ComboBox2.Value = CARD_INPUTR
     UserForm1.ComboBox18.Value = Me.ComboBox3.Value
     If Me.OptionButton1.Value = True Then
        Call UserForm1.CommandButton31_Click
     Else
        Call UserForm1.CommandButton42_Click
     End If
     Unload Me
  End If

End Sub

Private Sub CommandButton9_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     UserForm1.ComboBox1.Value = W_INPUT
     If Me.OptionButton1.Value = True Then
        Call UserForm1.FINDPN(True, 6)
     Else
        Call UserForm1.CommandButton86_Click
     End If
     UserForm1.Hide
     If Me.OptionButton1.Value = True Then
        Call SET_POS2(True)
     End If
  End If

End Sub

Private Sub CommandButton10_Click()

  
  If Me.OptionButton1.Value = True Then
     Call UserForm1.CommandButton15_Click
  Else
     Call UserForm1.CommandButton267_Click
  End If
  UserForm1.MultiPage1.Value = 0
  Call UserForm1.MultiPage1_Change
  UserForm1.Hide
  Call SET_POS2(True)

End Sub

Private Sub CommandButton11_Click()

  Call UserForm1.CommandButton50_Click
  UserForm1.MultiPage1.Value = 0
  Call UserForm1.MultiPage1_Change
  UserForm1.Hide
  Call SET_POS2(True)

End Sub

Private Sub Label706_Click()

  Call UserForm1.Label41_Click

End Sub

Private Sub Label707_Click()

  Call UserForm1.Label42_Click

End Sub

Private Sub CARD_RESET()

  Dim I As Long
  Dim J As Long
  
    
  For I = 1 To 15
     Me.Controls("Label" & I + 500).BackColor = &HFFC0FF
     For J = I To 15
        If Me.Controls("TextBox" & I + 100).Value = "" Then
           Call CARD_DELETE(I + 1)
        End If
     Next J
  Next I

End Sub

Private Sub CARD_RESETR()

  Dim I As Long
  Dim J As Long
  
    
  For I = 1 To 15
     Me.Controls("Label" & I + 515).BackColor = &HFFC0FF
     For J = I To 15
        If Me.Controls("TextBox" & I + 115).Value = "" Then
           Call CARD_DELETER(I + 1)
        End If
     Next J
  Next I

End Sub

Private Function CARD_CHK() As Boolean

  Dim I As Long
  

  CARD_CHK = True

  For I = 1 To 15
     If Me.Controls("TextBox" & I + 100).Value = "" Then
        Exit For
     End If

     Select Case Me.Controls("TextBox" & I + 100).Tag
     Case "1"
        If I = 1 Then
        ElseIf Me.Controls("TextBox" & I - 1 + 100).Tag = "3" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "4" Then
        Else
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        End If
     Case "2"
        If I = 15 Then
        ElseIf Me.Controls("TextBox" & I + 1 + 100).Value = "" Then
        ElseIf Me.Controls("TextBox" & I + 1 + 100).Tag = "5" Or _
               Me.Controls("TextBox" & I + 1 + 100).Tag = "4" Then
        Else
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        End If
     Case "11", "12", "13", "14"
        If I = 1 Then
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        ElseIf Me.Controls("TextBox" & I - 1 + 100).Tag = "5" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "6" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "7" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "8" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "9" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "10" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "20" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "23" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "24" Then
        Else
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        End If
     Case "15"
        If I = 1 Then
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        ElseIf Me.Controls("TextBox" & I - 1 + 100).Tag = "11" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "12" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "13" Or _
               Me.Controls("TextBox" & I - 1 + 100).Tag = "14" Then
        Else
           CARD_CHK = False
           Me.Controls("Label" & I + 500).BackColor = &HFF&
        End If
     End Select
  Next I

End Function

Private Function CARD_CHK2() As Boolean

  Dim I As Long
  

  CARD_CHK2 = True

  Select Case Me.Controls("TextBox101").Tag
  Case "41", "42"
  Case Else
     CARD_CHK2 = False
     Me.Controls("Label501").BackColor = &HFF&
  End Select
  
  If Me.Controls("TextBox102").Value = "" Then
     Exit Function
  End If
  
  Select Case Me.Controls("TextBox102").Tag
  Case "43", "44"
  Case Else
     CARD_CHK2 = False
     Me.Controls("Label502").BackColor = &HFF&
  End Select
  
  Select Case Me.Controls("TextBox103").Tag
  Case "41", "42"
  Case Else
     CARD_CHK2 = False
     Me.Controls("Label503").BackColor = &HFF&
  End Select
  
  If Me.Controls("TextBox104").Value <> "" Then
     CARD_CHK2 = False
     Me.Controls("Label504").BackColor = &HFF&
  End If

End Function

Private Function CARD_CHK3() As Boolean

  Dim I As Long
  

  CARD_CHK3 = True

  Select Case Me.Controls("TextBox101").Tag
  Case "49"
     Select Case Me.Controls("TextBox102").Tag
     Case "52", "53"
     Case Else
        CARD_CHK3 = False
        Me.Controls("Label502").BackColor = &HFF&
     End Select
  Case "50", "51"
     Select Case Me.Controls("TextBox102").Tag
     Case "49"
        If Me.Controls("TextBox103").Value <> "" Then
           Select Case Me.Controls("TextBox103").Tag
           Case "52", "53"
           Case Else
              CARD_CHK3 = False
              Me.Controls("Label503").BackColor = &HFF&
           End Select
        End If
     Case Else
        CARD_CHK3 = False
        Me.Controls("Label502").BackColor = &HFF&
     End Select
  Case Else
     CARD_CHK3 = False
     Me.Controls("Label501").BackColor = &HFF&
  End Select

End Function

Private Function CARD_INPUT() As String

  Dim I As Long
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String


  CARD_INPUT = ""

  For I = 1 To 15
     If Me.Controls("TextBox" & I + 100).Value <> "" Then
        Select Case Me.Controls("TextBox" & I + 100).Tag
        Case "1"
           W_STR = "^"
        Case "2"
           W_STR = "$"
        Case "3"
           W_STR = "("
        Case "4"
           W_STR = "|"
        Case "5"
           W_STR = ")"
        Case "6"
           W_STR = ESC(Me.Controls("TextBox" & I + 200).Value)
        Case "7"
           W_STR1 = "["
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = "]"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "8"
           W_STR1 = "[^"
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = "]"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "9"
           W_STR = "."
        Case "10"
           W_STR = "\d"
        Case "11"
           W_STR = "*"
        Case "12"
           W_STR = "+"
        Case "13"
           W_STR = "?"
        Case "14"
           W_STR1 = "{"
           W_STR2 = Me.Controls("TextBox" & I + 200).Value
           W_STR3 = "}"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "15"
           W_STR = "?"
        Case "16"
           W_STR = "(?="
        Case "17"
           W_STR = "(?!"
        Case "18"
           W_STR = "(?<="
        Case "19"
           W_STR = "(?<!"
        Case "20"
           W_STR = "\n"
        Case "21"
           W_STR = "(?:"
        Case "22"
           W_STR1 = "(?<"
           W_STR2 = Me.Controls("TextBox" & I + 200).Value
           W_STR3 = ">"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "23"
           W_STR1 = "\"
           W_STR2 = Me.Controls("TextBox" & I + 200).Value
           W_STR = W_STR1 & W_STR2
        Case "24"
           W_STR = "\D"
        Case "25"
           W_STR1 = "(?#"
           W_STR2 = Me.Controls("TextBox" & I + 200).Value
           W_STR3 = ")"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "41"
           W_STR = ESC(Me.Controls("TextBox" & I + 200).Value)
        Case "42"
           W_STR = "-" & ESC(Me.Controls("TextBox" & I + 200).Value)
        Case "43"
           W_STR = " "
        Case "44"
           W_STR = " OR "
        Case "49"
           W_STR = ESC(Me.Controls("TextBox" & I + 200).Value)
        Case "50"
           W_STR1 = "(?<="
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = ")"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "51"
           W_STR1 = "(?<!"
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = ")"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "52"
           W_STR1 = "(?="
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = ")"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "53"
           W_STR1 = "(?!"
           W_STR2 = ESC(Me.Controls("TextBox" & I + 200).Value)
           W_STR3 = ")"
           W_STR = W_STR1 & W_STR2 & W_STR3
        End Select
        CARD_INPUT = CARD_INPUT & W_STR
     End If
  Next I

End Function

Private Function ESC(ByVal W_IN As String) As String

  Dim RE As Object
  
  
  ESC = ""

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = "([\\\(\)\[\]\{\}\.\*\+\?\|\^\$])"
     .IgnoreCase = False
     .Global = True
  End With
  
  If RE.Test(W_IN) = False Then
     ESC = W_IN
     Exit Function
  End If

  ESC = RE.Replace(W_IN, "\$1")

End Function

Private Function CARD_INPUTR() As String

  Dim I As Long
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
  Dim W_STR3 As String


  CARD_INPUTR = ""

  For I = 1 To 15
     If Me.Controls("TextBox" & I + 115).Value <> "" Then
        Select Case Me.Controls("TextBox" & I + 115).Tag
        Case "45"
           W_STR = Replace(Me.Controls("TextBox" & I + 215).Value, "$", "$$")
        Case "46"
           W_STR1 = "$"
           W_STR2 = Me.Controls("TextBox" & I + 215).Value
           W_STR = W_STR1 & W_STR2
        Case "47"
           W_STR1 = "${"
           W_STR2 = Me.Controls("TextBox" & I + 215).Value
           W_STR3 = "}"
           W_STR = W_STR1 & W_STR2 & W_STR3
        Case "48"
           W_STR = "\n"
        End Select
        CARD_INPUTR = CARD_INPUTR & W_STR
     End If
  Next I

End Function

Private Sub CommandButton101_Click()

  Dim I As Long
    
    
  If InStr(Me.ComboBox3.Value, "\") > 0 Then
     I = InStrRev(Me.ComboBox3.Value, "\") - 1
     If I > 1 Then
        Me.ComboBox3.Value = Left$(Me.ComboBox3.Value, I)
        If Right$(Me.ComboBox3.Value, 1) = ":" Then
           Me.ComboBox3.Value = Me.ComboBox3.Value & "\"
        End If
     End If
  End If
  
  Me.ComboBox3.SetFocus

End Sub

Private Sub CommandButton102_Click()

  Dim W_BROWSEINFO As BROWSEINFO

#If Win64 Then
  Dim W_ID As LongPtr
#Else
  Dim W_ID As Long
#End If
  
  Dim W_FLDPATH As String * 260
  Dim W_DSPATH As String
    
  
  With W_BROWSEINFO
      .hwndOwner = GetActiveWindow       '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd|
      If SW_ENGLISH = True Then
         .lpszTitle = "Select target folder"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      Else
         .lpszTitle = "|fffd||38f||6c3|t|fffd|H|fffd||fffd||fffd|_|fffd||311|I|fffd||fffd|"  '|fffd|^|fffd|C|fffd|g|fffd||fffd|
      End If
      .ulFlags = 1                       '|fffd||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
      .lpfn = FARPROC(AddressOf BrowseCallbackProc)
      .lParam = Me.ComboBox3.Value & Chr$(0)
  End With

  W_ID = SHBrowseForFolder(W_BROWSEINFO)
  If W_ID > 0 Then
     W_RET = SHGetPathFromIDList(W_ID, W_FLDPATH)
     W_DSPATH = W_FLDPATH
     If InStr(W_DSPATH, vbNullChar) > 0 Then
        W_DSPATH = Left$(W_DSPATH, InStr(W_DSPATH, vbNullChar) - 1)
     End If
     If Right$(W_DSPATH, 1) = "\" Then
        W_DSPATH = Left$(W_DSPATH, Len(W_DSPATH) - 1)
        If Right$(W_DSPATH, 1) = ":" Then
           W_DSPATH = W_DSPATH & "\"
        End If
     End If
     Me.ComboBox3.Value = W_DSPATH
  End If
  CoTaskMemFree W_ID
  Me.ComboBox3.SetFocus

End Sub

Private Sub CommandButton103_Click()

  SW_CLASSIC = True
  SW_CLASSIC2 = True
  Unload Me
  Call SHOW_MODELESS(UserForm1)

End Sub

Private Sub CommandButton104_Click()

  Unload Me

End Sub

Private Sub CommandButton105_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK2 = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  If W_INPUT <> "" Then
     W_INPUT = RE_CNV(W_INPUT)
  End If
  
  Me.MultiPage1.Value = 0

  If W_INPUT <> "" Then
     Call CARD_SET2(W_INPUT)
  End If

End Sub

Private Sub CommandButton106_Click()

  Dim W_INPUT As String


  Call CARD_RESET

  If CARD_CHK3 = False Then
     If SW_ENGLISH = True Then
        MsgBox "Error exists", vbExclamation
     Else
        MsgBox "|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbExclamation
     End If
     Exit Sub
  End If

  W_INPUT = CARD_INPUT

  Me.MultiPage1.Value = 0

  If W_INPUT <> "" Then
     Call CARD_SET2(W_INPUT)
  End If

End Sub

Private Sub ComboBox1_Change()

  Call CARD_SET2(Me.ComboBox1.Value)

End Sub

Private Sub CARD_SET2(ByVal W_RESTR As String)

  Dim I As Long
  Dim J As Long
  Dim AR_NO(15) As String
  Dim AR_VAL(15) As String
  Dim W_FW As String
  Dim SW_REP As Boolean
  Dim W_VAL As String


  On Error GoTo L_ERR
 
  For I = 1 To 15
     Me.Controls("TextBox" & I + 100).Value = ""
     Me.Controls("TextBox" & I + 100).BackColor = &H80000005
     Me.Controls("TextBox" & I + 100).Tag = ""
     Me.Controls("TextBox" & I + 200).Value = ""
  Next I

  W_FW = W_RESTR
  W_FW = Replace(W_FW, "\\", Chr$(1))
  W_FW = Replace(W_FW, "\(", Chr$(2))
  W_FW = Replace(W_FW, "\)", Chr$(3))
  W_FW = Replace(W_FW, "\[", Chr$(4))
  W_FW = Replace(W_FW, "\]", Chr$(5))
  W_FW = Replace(W_FW, "\{", Chr$(6))
  W_FW = Replace(W_FW, "\}", Chr$(7))
  W_FW = Replace(W_FW, "\.", Chr$(14))
  W_FW = Replace(W_FW, "\*", Chr$(15))
  W_FW = Replace(W_FW, "\+", Chr$(16))
  W_FW = Replace(W_FW, "\?", Chr$(17))
  W_FW = Replace(W_FW, "\|", Chr$(18))
  W_FW = Replace(W_FW, "\^", Chr$(28))
  W_FW = Replace(W_FW, "\$", Chr$(29))
    
  If InStr(W_FW, "(?") > 0 Then
     If InStr(W_FW, "(?=") > 0 Or _
        InStr(W_FW, "(?!") > 0 Or _
        InStr(W_FW, "(?<=") > 0 Or _
        InStr(W_FW, "(?<!") > 0 Or _
        InStr(W_FW, "(?:") > 0 Or _
        InStr(W_FW, "(?<") > 0 Or _
        InStr(W_FW, "(?#") > 0 Then
     Else
        Exit Sub
     End If
  ElseIf InStr(W_FW, "\b") > 0 Or _
         InStr(W_FW, "\B") > 0 Or _
         InStr(W_FW, "\f") > 0 Or _
         InStr(W_FW, "\r") > 0 Or _
         InStr(W_FW, "\t") > 0 Or _
         InStr(W_FW, "\v") > 0 Or _
         InStr(W_FW, "\w") > 0 Or _
         InStr(W_FW, "\W") > 0 Or _
         InStr(W_FW, "\s") > 0 Or _
         InStr(W_FW, "\S") > 0 Then
     Exit Sub
  End If
  
  I = 0
  SW_REP = False
  W_VAL = ""
   
  For J = 1 To Len(W_FW)
     If W_VAL <> "" Then
        Select Case Mid$(W_FW, J, 1)
        Case "^", "$", "(", "|", ")", ".", "*", "+", "?", "[", "]", "{", "}", "\"
           I = I + 1
           If I > 15 Then
              Exit Sub
           End If
           AR_NO(I) = "6"
           AR_VAL(I) = W_VAL
           W_VAL = ""
        End Select
     End If
     
     Select Case Mid$(W_FW, J, 1)
     Case "^"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "1"
     Case "$"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "2"
     Case "("
        If Mid$(W_FW, J + 1, 1) = "?" Then
           If Mid$(W_FW, J + 2, 1) = "=" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "16"
              J = J + 2
           ElseIf Mid$(W_FW, J + 2, 1) = "!" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "17"
              J = J + 2
           ElseIf Mid$(W_FW, J + 2, 1) = ":" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "21"
              J = J + 2
           ElseIf Mid$(W_FW, J + 2, 1) = "#" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "25"
              AR_VAL(I) = Mid$(W_FW, J + 3, InStr(J + 2, W_FW, ")") - J - 3)
              J = InStr(J + 2, W_FW, ")")
           ElseIf Mid$(W_FW, J + 2, 1) = "<" Then
              If Mid$(W_FW, J + 3, 1) = "=" Then
                 I = I + 1
                 If I > 15 Then
                    Exit Sub
                 End If
                 AR_NO(I) = "18"
                 J = J + 3
              ElseIf Mid$(W_FW, J + 3, 1) = "!" Then
                 I = I + 1
                 If I > 15 Then
                    Exit Sub
                 End If
                 AR_NO(I) = "19"
                 J = J + 3
              Else
                 I = I + 1
                 If I > 15 Then
                    Exit Sub
                 End If
                 AR_NO(I) = "22"
                 AR_VAL(I) = Mid$(W_FW, J + 3, InStr(J + 3, W_FW, ">") - J - 3)
                 J = InStr(J + 3, W_FW, ">")
              End If
           Else
              Exit Sub
           End If
        Else
           I = I + 1
           If I > 15 Then
              Exit Sub
           End If
           AR_NO(I) = "3"
        End If
     Case "|"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "4"
     Case ")"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "5"
     Case "."
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "9"
     Case "*"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "11"
        SW_REP = True
     Case "+"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "12"
        SW_REP = True
     Case "?"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        If SW_REP = False Then
           AR_NO(I) = "13"
           SW_REP = True
        Else
           AR_NO(I) = "15"
           SW_REP = False
        End If
     Case "["
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        If Mid$(W_FW, J + 1, 1) = "^" Then
           AR_NO(I) = "8"
           AR_VAL(I) = Mid$(W_FW, J + 2, InStr(J + 2, W_FW, "]") - J - 2)
           J = InStr(J + 2, W_FW, "]")
        Else
           AR_NO(I) = "7"
           AR_VAL(I) = Mid$(W_FW, J + 1, InStr(J + 1, W_FW, "]") - J - 1)
           J = InStr(J + 1, W_FW, "]")
        End If
     Case "]"
     Case "{"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        AR_NO(I) = "14"
        AR_VAL(I) = Mid$(W_FW, J + 1, InStr(J + 1, W_FW, "}") - J - 1)
        SW_REP = True
        J = InStr(J + 1, W_FW, "}")
     Case "}"
     Case "\"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        If Mid$(W_FW, J + 1, 1) = "d" Then
           AR_NO(I) = "10"
           J = J + 1
        ElseIf Mid$(W_FW, J + 1, 1) = "n" Then
           AR_NO(I) = "20"
           J = J + 1
        ElseIf Mid$(W_FW, J + 1, 1) = "D" Then
           AR_NO(I) = "24"
           J = J + 1
        ElseIf Mid$(W_FW, J + 1, 1) Like "[1-9]" Then
           AR_NO(I) = "23"
           AR_VAL(I) = Mid$(W_FW, J + 1, 1)
           J = J + 1
        Else
           Exit Sub
        End If
     Case Else
        W_VAL = W_VAL & Mid$(W_FW, J, 1)
     
        If J = Len(W_FW) Then
           If W_VAL <> "" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "6"
              AR_VAL(I) = W_VAL
              W_VAL = ""
           End If
        End If
     End Select
  Next J
  
  For I = 1 To 15
     If AR_NO(I) = "" Then
        Exit For
     End If
     
     Me.Controls("TextBox" & I + 100).Value = Me.Controls("TextBox" & AR_NO(I)).Value
     Me.Controls("TextBox" & I + 100).BackColor = Me.Controls("TextBox" & AR_NO(I)).BackColor
     Me.Controls("TextBox" & I + 100).Tag = AR_NO(I)
     
     If AR_VAL(I) <> "" Then
        W_VAL = AR_VAL(I)
     
        W_VAL = Replace(W_VAL, Chr$(1), "\\")
        W_VAL = Replace(W_VAL, Chr$(2), "\(")
        W_VAL = Replace(W_VAL, Chr$(3), "\)")
        W_VAL = Replace(W_VAL, Chr$(4), "\[")
        W_VAL = Replace(W_VAL, Chr$(5), "\]")
        W_VAL = Replace(W_VAL, Chr$(6), "\{")
        W_VAL = Replace(W_VAL, Chr$(7), "\}")
        W_VAL = Replace(W_VAL, Chr$(14), "\.")
        W_VAL = Replace(W_VAL, Chr$(15), "\*")
        W_VAL = Replace(W_VAL, Chr$(16), "\+")
        W_VAL = Replace(W_VAL, Chr$(17), "\?")
        W_VAL = Replace(W_VAL, Chr$(18), "\|")
        W_VAL = Replace(W_VAL, Chr$(28), "\^")
        W_VAL = Replace(W_VAL, Chr$(29), "\$")
     
        W_VAL = Replace(W_VAL, "\", "")
        Me.Controls("TextBox" & I + 200).Value = W_VAL
     End If
  Next I

L_ERR:

End Sub

Private Sub ComboBox2_Change()

  Call CARD_SET2R(Me.ComboBox2.Value)

End Sub

Private Sub CARD_SET2R(ByVal W_RESTR As String)

  Dim I As Long
  Dim J As Long
  Dim AR_NO(15) As String
  Dim AR_VAL(15) As String
  Dim W_FW As String
  Dim SW_REP As Boolean
  Dim W_VAL As String


  On Error GoTo L_ERR
 
  For I = 1 To 15
     Me.Controls("TextBox" & I + 115).Value = ""
     Me.Controls("TextBox" & I + 115).BackColor = &H80000005
     Me.Controls("TextBox" & I + 115).Tag = ""
     Me.Controls("TextBox" & I + 215).Value = ""
  Next I

  W_FW = W_RESTR
  W_FW = Replace(W_FW, "$$", Chr$(1))
    
  If InStr(W_FW, "$&") > 0 Or _
     InStr(W_FW, "$`") > 0 Or _
     InStr(W_FW, "$'") > 0 Or _
     InStr(W_FW, "$+") > 0 Or _
     InStr(W_FW, "$_") > 0 Then
     Exit Sub
  End If
  
  I = 0
  SW_REP = False
  W_VAL = ""
   
  For J = 1 To Len(W_FW)
     If W_VAL <> "" Then
        Select Case Mid$(W_FW, J, 1)
        Case "$", "\"
           I = I + 1
           If I > 15 Then
              Exit Sub
           End If
           AR_NO(I) = "45"
           AR_VAL(I) = W_VAL
           W_VAL = ""
        End Select
     End If
     
     Select Case Mid$(W_FW, J, 1)
     Case "$"
        If Mid$(W_FW, J + 1, 1) Like "[1-9]" Then
           I = I + 1
           If I > 15 Then
              Exit Sub
           End If
           AR_NO(I) = "46"
           AR_VAL(I) = Mid$(W_FW, J + 1, 1)
           J = J + 1
        ElseIf Mid$(W_FW, J + 1, 1) = "{" Then
           If InStr(J + 1, W_FW, "}") > 0 Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "47"
              AR_VAL(I) = Mid$(W_FW, J + 1, InStr(J + 1, W_FW, "}") - J - 1)
              J = InStr(J + 1, W_FW, "}")
           Else
              Exit Sub
           End If
        Else
           Exit Sub
        End If
     Case "\"
        I = I + 1
        If I > 15 Then
           Exit Sub
        End If
        If Mid$(W_FW, J + 1, 1) = "n" Then
           AR_NO(I) = "48"
           J = J + 1
        Else
           Exit Sub
        End If
     Case Else
        W_VAL = W_VAL & Mid$(W_FW, J, 1)
     
        If J = Len(W_FW) Then
           If W_VAL <> "" Then
              I = I + 1
              If I > 15 Then
                 Exit Sub
              End If
              AR_NO(I) = "45"
              AR_VAL(I) = W_VAL
              W_VAL = ""
           End If
        End If
     End Select
  Next J
  
  For I = 1 To 15
     If AR_NO(I) = "" Then
        Exit For
     End If
     
     Me.Controls("TextBox" & I + 115).Value = Me.Controls("TextBox" & AR_NO(I)).Value
     Me.Controls("TextBox" & I + 115).BackColor = Me.Controls("TextBox" & AR_NO(I)).BackColor
     Me.Controls("TextBox" & I + 115).Tag = AR_NO(I)
     
     If AR_VAL(I) <> "" Then
        W_VAL = AR_VAL(I)
     
        W_VAL = Replace(W_VAL, Chr$(1), "$")
        Me.Controls("TextBox" & I + 215).Value = W_VAL
     End If
  Next I

L_ERR:

End Sub

Private Sub CheckBox1_Change()

  UserForm1.CheckBox16.Value = Me.CheckBox1.Value

End Sub

Private Sub CheckBox2_Change()

  UserForm1.CheckBox7.Value = Me.CheckBox2.Value

End Sub

Private Sub CheckBox3_Change()

  UserForm1.CheckBox1.Value = Me.CheckBox3.Value

End Sub

Private Sub CheckBox4_Change()

  UserForm1.CheckBox12.Value = Me.CheckBox4.Value

End Sub

Private Sub CheckBox5_Change()

  UserForm1.CheckBox208.Value = Me.CheckBox5.Value

End Sub

Private Sub OptionButton1_Change()

  Me.CommandButton1.Enabled = False
  Me.CommandButton2.Enabled = False
  Me.CommandButton3.Enabled = False
  Me.CommandButton4.Enabled = False
  Me.CommandButton5.Enabled = False
  Me.CommandButton6.Enabled = False
  Me.CommandButton7.Enabled = False
  Me.CommandButton8.Enabled = False
  Me.CommandButton9.Enabled = False
  Me.CommandButton10.Enabled = False
  
  If Me.OptionButton1.Value = True Then
     Me.CommandButton1.Enabled = True
     Me.CommandButton2.Enabled = True
     Me.CommandButton3.Enabled = True
     Me.CommandButton4.Enabled = True
     Me.CommandButton5.Enabled = True
     Me.CommandButton6.Enabled = True
     Me.CommandButton7.Enabled = True
     Me.CommandButton8.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton10.Enabled = True
  End If

End Sub

Private Sub OptionButton2_Change()

  Me.CommandButton1.Enabled = False
  Me.CommandButton2.Enabled = False
  Me.CommandButton3.Enabled = False
  Me.CommandButton4.Enabled = False
  Me.CommandButton5.Enabled = False
  Me.CommandButton6.Enabled = False
  Me.CommandButton7.Enabled = False
  Me.CommandButton8.Enabled = False
  Me.CommandButton9.Enabled = False
  Me.CommandButton10.Enabled = False

  If Me.OptionButton2.Value = True Then
     Me.CommandButton3.Enabled = True
     Me.CommandButton6.Enabled = True
     Me.CommandButton7.Enabled = True
     Me.CommandButton8.Enabled = True
     Me.CommandButton9.Enabled = True
     Me.CommandButton10.Enabled = True
  End If

End Sub

Private Sub OptionButton3_Change()

  Me.CommandButton1.Enabled = False
  Me.CommandButton2.Enabled = False
  Me.CommandButton3.Enabled = False
  Me.CommandButton4.Enabled = False
  Me.CommandButton5.Enabled = False
  Me.CommandButton6.Enabled = False
  Me.CommandButton7.Enabled = False
  Me.CommandButton8.Enabled = False
  Me.CommandButton9.Enabled = False
  Me.CommandButton10.Enabled = False
  
  If Me.OptionButton3.Value = True Then
     Me.CommandButton3.Enabled = True
     Me.CommandButton6.Enabled = True
  End If

End Sub

Private Sub ComboBox3_DropButtonClick()

  SW_CBO = Not SW_CBO

End Sub

Private Sub ComboBox3_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     If SW_CBO = True Then
        Call KeybdEvent(VK_RETURN, 0, 0, 0)
        Call KeybdEvent(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)
        DoEvents
        W_LI = Me.ComboBox3.ListIndex
        Me.ComboBox3.DropDown
        Me.ComboBox3.ListIndex = W_LI
        DoEvents
        SW_CBO2 = True
     End If
     Set W_BOX = Me.ComboBox3
     Application.CommandBars("EREPU6").ShowPopup
     Set W_BOX = Nothing
     SW_CBO2 = False
  End If

End Sub

Private Sub UserForm_Terminate()

  W_FSV01 = Me.Label31.ControlTipText
  W_FSV02 = Me.Label32.ControlTipText
  W_FSV03 = Me.Label33.ControlTipText
  W_FSV04 = Me.Label34.ControlTipText
  W_FSV05 = Me.Label35.ControlTipText
  W_FSV06 = Me.Label36.ControlTipText
  W_FSV07 = Me.Label37.ControlTipText
  W_FSV08 = Me.Label38.ControlTipText
  W_FSV09 = Me.Label39.ControlTipText
  W_FSV10 = Me.Label40.ControlTipText
  
  If SW_CLASSIC2 = False Then
     Unload UserForm1
  End If

End Sub
Attribute VB_Name = "UserForm14"
Attribute VB_Base = "0{A3A0B823-D346-4910-BF55-9B2990B31053}{F668CEFA-43E9-4570-B93A-AD323173957E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

Dim W_SELCLR As Object

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

  Dim AR_LBL As Variant
  Dim I As Long
  Dim SW_HIT As Boolean


  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Color select"
     Me.Label1.Caption = "Automatic"
  Else
     Me.Caption = "|fffd|F|fffd||311|I|fffd||fffd|"
     Me.Label1.Caption = "|fffd||fffd||fffd||fffd|"
  End If

  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
     End If
  End If
   
  If Val(Application.Version) < 15 Then
     Me.Label14.BackColor = 14806254
     Me.Label15.BackColor = 12900829
     Me.Label16.BackColor = 9944516
     Me.Label17.BackColor = 5540500
     Me.Label18.BackColor = 2704713
     Me.Label19.BackColor = 1055517
     Me.Label20.BackColor = 8210719
     Me.Label21.BackColor = 15849925
     Me.Label22.BackColor = 14857357
     Me.Label23.BackColor = 13995347
     Me.Label24.BackColor = 6043158
     Me.Label25.BackColor = 4072463
     Me.Label26.BackColor = 12419407
     Me.Label27.BackColor = 15853276
     Me.Label28.BackColor = 14994616
     Me.Label29.BackColor = 14136213
     Me.Label30.BackColor = 9592886
     Me.Label31.BackColor = 6438948
     Me.Label32.BackColor = 5066944
     Me.Label33.BackColor = 14408946
     Me.Label34.BackColor = 12040422
     Me.Label35.BackColor = 9737946
     Me.Label36.BackColor = 3421846
     Me.Label37.BackColor = 2303331
     Me.Label38.BackColor = 5880731
     Me.Label39.BackColor = 14610923
     Me.Label40.BackColor = 12379352
     Me.Label41.BackColor = 10213316
     Me.Label42.BackColor = 3969910
     Me.Label43.BackColor = 2646607
     Me.Label44.BackColor = 10642560
     Me.Label45.BackColor = 15523812
     Me.Label46.BackColor = 14336204
     Me.Label47.BackColor = 13082801
     Me.Label48.BackColor = 8014176
     Me.Label49.BackColor = 5321024
     Me.Label50.BackColor = 13020235
     Me.Label51.BackColor = 15986394
     Me.Label52.BackColor = 15261367
     Me.Label53.BackColor = 14470546
     Me.Label54.BackColor = 10192433
     Me.Label55.BackColor = 6773025
     Me.Label56.BackColor = 4626167
     Me.Label57.BackColor = 14281213
     Me.Label58.BackColor = 11851260
     Me.Label59.BackColor = 9420794
     Me.Label60.BackColor = 682978
     Me.Label61.BackColor = 411543
  End If
   
  With Me
     AR_LBL = Array(.Label1, .Label2, .Label3, .Label4, .Label5, .Label6, .Label7, .Label8, .Label9, Label10, _
                    .Label11, .Label12, .Label13, .Label14, .Label15, .Label16, .Label17, .Label18, .Label19, Label20, _
                    .Label21, .Label22, .Label23, .Label24, .Label25, .Label26, .Label27, .Label28, .Label29, Label30, _
                    .Label31, .Label32, .Label33, .Label34, .Label35, .Label36, .Label37, .Label38, .Label39, Label40, _
                    .Label41, .Label42, .Label43, .Label44, .Label45, .Label46, .Label47, .Label48, .Label49, Label50, _
                    .Label51, .Label52, .Label53, .Label54, .Label55, .Label56, .Label57, .Label58, .Label59, Label60, _
                    .Label61, .Label63, .Label64, .Label65, .Label66, .Label67, .Label68, .Label69, .Label70, .Label71, .Label72)
  End With
  SW_HIT = False
  For I = 0 To UBound(AR_LBL)
     AR_LBL(I).SpecialEffect = fmSpecialEffectRaised
     If W_LABEL Is Nothing Then
     Else
        If AR_LBL(I).BackColor = W_LABEL.ForeColor Then
           AR_LBL(I).SpecialEffect = fmSpecialEffectSunken
        End If
     End If
  Next I

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub UserForm_Activate()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  
  If Val(Application.Version) >= 15 Then
     If W_TMIDUF <> 0 Then
     Call KILLTM_UF
     hwnd = FindWindow(vbNullString, UserForm1.Caption)
     Call SetWindowPos(hwnd, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd|
     
     hwnd = FindWindow(vbNullString, Me.Caption)
     Call SetWindowPos(hwnd, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
     End If
  End If
  
  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 2
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 2.5
        End If
        Me.Top = Me.Top - 1
        Me.Left = Me.Left - 0.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 2
        Me.Width = Me.Width - 2.5
        Me.Top = Me.Top + 1
        Me.Left = Me.Left + 0.5
        DoEvents
     Loop
  End If

End Sub

Private Sub Label1_Click()

  W_LABEL.ForeColor = Me.Label1.ForeColor
  W_LABEL.Tag = ""
  Unload Me

End Sub

Private Sub Label2_Click()

  Set W_SELCLR = Me.Label2
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label3_Click()

  Set W_SELCLR = Me.Label3
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label4_Click()

  Set W_SELCLR = Me.Label4
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label5_Click()

  Set W_SELCLR = Me.Label5
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label6_Click()

  Set W_SELCLR = Me.Label6
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label7_Click()

  Set W_SELCLR = Me.Label7
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label8_Click()

  Set W_SELCLR = Me.Label8
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label9_Click()

  Set W_SELCLR = Me.Label9
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label10_Click()

  Set W_SELCLR = Me.Label10
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label11_Click()

  Set W_SELCLR = Me.Label11
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label12_Click()

  Set W_SELCLR = Me.Label12
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label13_Click()

  Set W_SELCLR = Me.Label13
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label14_Click()

  Set W_SELCLR = Me.Label14
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label15_Click()

  Set W_SELCLR = Me.Label15
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label16_Click()

  Set W_SELCLR = Me.Label16
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label17_Click()

  Set W_SELCLR = Me.Label17
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label18_Click()

  Set W_SELCLR = Me.Label18
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label19_Click()

  Set W_SELCLR = Me.Label19
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label20_Click()

  Set W_SELCLR = Me.Label20
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label21_Click()

  Set W_SELCLR = Me.Label21
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label22_Click()

  Set W_SELCLR = Me.Label22
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label23_Click()

  Set W_SELCLR = Me.Label23
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label24_Click()

  Set W_SELCLR = Me.Label24
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label25_Click()

  Set W_SELCLR = Me.Label25
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label26_Click()

  Set W_SELCLR = Me.Label26
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label27_Click()

  Set W_SELCLR = Me.Label27
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label28_Click()

  Set W_SELCLR = Me.Label28
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label29_Click()

  Set W_SELCLR = Me.Label29
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label30_Click()

  Set W_SELCLR = Me.Label30
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label31_Click()

  Set W_SELCLR = Me.Label31
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label32_Click()

  Set W_SELCLR = Me.Label32
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label33_Click()

  Set W_SELCLR = Me.Label33
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label34_Click()

  Set W_SELCLR = Me.Label34
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label35_Click()

  Set W_SELCLR = Me.Label35
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label36_Click()

  Set W_SELCLR = Me.Label36
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label37_Click()

  Set W_SELCLR = Me.Label37
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label38_Click()

  Set W_SELCLR = Me.Label38
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label39_Click()

  Set W_SELCLR = Me.Label39
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label40_Click()

  Set W_SELCLR = Me.Label40
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label41_Click()

  Set W_SELCLR = Me.Label41
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label42_Click()

  Set W_SELCLR = Me.Label42
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label43_Click()

  Set W_SELCLR = Me.Label43
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label44_Click()

  Set W_SELCLR = Me.Label44
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label45_Click()

  Set W_SELCLR = Me.Label45
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label46_Click()

  Set W_SELCLR = Me.Label46
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label47_Click()

  Set W_SELCLR = Me.Label47
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label48_Click()

  Set W_SELCLR = Me.Label48
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label49_Click()

  Set W_SELCLR = Me.Label49
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label50_Click()

  Set W_SELCLR = Me.Label50
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label51_Click()

  Set W_SELCLR = Me.Label51
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label52_Click()

  Set W_SELCLR = Me.Label52
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label53_Click()

  Set W_SELCLR = Me.Label53
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label54_Click()

  Set W_SELCLR = Me.Label54
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label55_Click()

  Set W_SELCLR = Me.Label55
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label56_Click()

  Set W_SELCLR = Me.Label56
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label57_Click()

  Set W_SELCLR = Me.Label57
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label58_Click()

  Set W_SELCLR = Me.Label58
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label59_Click()

  Set W_SELCLR = Me.Label59
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label60_Click()

  Set W_SELCLR = Me.Label60
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label61_Click()

  Set W_SELCLR = Me.Label61
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label63_Click()

  Set W_SELCLR = Me.Label63
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label64_Click()

  Set W_SELCLR = Me.Label64
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label65_Click()

  Set W_SELCLR = Me.Label65
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label66_Click()

  Set W_SELCLR = Me.Label66
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label67_Click()

  Set W_SELCLR = Me.Label67
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label68_Click()

  Set W_SELCLR = Me.Label68
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label69_Click()

  Set W_SELCLR = Me.Label69
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label70_Click()

  Set W_SELCLR = Me.Label70
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label71_Click()

  Set W_SELCLR = Me.Label71
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label72_Click()

  Set W_SELCLR = Me.Label72
  Call CLR_SEL_RTN
   
End Sub

Private Sub CLR_SEL_RTN()

  W_LABEL.ForeColor = W_SELCLR.BackColor
  W_LABEL.Tag = ""
  Unload Me

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm15"
Attribute VB_Base = "0{27ED073B-8E5B-46EF-9202-2A2033187CD3}{EB1D6615-02FF-4C51-99B0-24CE20523411}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
(ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
''Private Declare PtrSafe Function GetWindowLong Lib "USER32" Alias "GetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long) As Long
Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" _
  (ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
#Else
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long) As Long
#End If
Private Const GWL_EXSTYLE = (-20)

#If Win64 Then
''Private Declare PtrSafe Function SetWindowLong Lib "USER32" Alias "SetWindowLongA" _
''  (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If
Private Const WS_EX_LAYERED = &H80000

#If Win64 Then
Private Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#Else
Private Declare Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As Long, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#End If
Private Const LWA_COLORKEY = 1
Private Const LWA_ALPHA = 2

Private Sub UserForm_Initialize()
  
#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  Dim W_TPS As Long
    
  Me.BackColor = &H0&
  
  hwnd = FindWindow(vbNullString, Me.Caption)
#If Win64 Then
  Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, GetWindowLongPtr(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#Else
  Call SetWindowLong(hwnd, GWL_EXSTYLE, GetWindowLong(hwnd, GWL_EXSTYLE) Or WS_EX_LAYERED)
#End If
  On Error Resume Next
  Call SetLayeredWindowAttributes(hwnd, 0, 175, LWA_ALPHA)
  On Error GoTo 0
  
  Me.Left = Application.Left
  Me.Top = Application.Top
  Me.Width = Application.Width
  Me.Height = Application.Height

End Sub
Attribute VB_Name = "UserForm17"
Attribute VB_Base = "0{6D96D4A4-4269-4018-AE4C-1FAE473437C7}{20B78EDC-B50F-4F69-9ACD-3F5277903E2D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()
  
  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Additional command example"
     Me.CommandButton9.Caption = "Input"
  Else
     Me.Caption = "|fffd||1c9||fffd||fffd||316||fffd||fffd||7d7||fffd|"
     Me.CommandButton9.Caption = "|fffd||fffd||fffd||fffd|(I)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.CommandButton9.Font.Name = "Segoe UI"
     Else
        Me.CommandButton9.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.CommandButton9.Font.Name = "Tahoma"
     Else
        Me.CommandButton9.Font.Name = "MS UI Gothic"
     End If
  End If
    
  If SW_ENGLISH = True Then
     Me.ListBox1.Font.Name = "Courier New"
  
     Me.ListBox1.Font.Size = 8
  Else
     Me.ListBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.ListBox1.Font.Size = 9
  End If
  
  If AR_MTHD(0, 0) <> "" Then
     With Me.ListBox1
        .list = AR_MTHD
        Erase AR_MTHD
        If SW_ENGLISH = True Then
           .ColumnWidths = CStr(6 * W_MAXM0 + 6) & ";" & CStr(6 * W_MAXM1 + 6) & ";" & CStr(6 * W_MAXM2 + 6)
        Else
           .ColumnWidths = CStr(5 * W_MAXM0 + 5) & ";" & CStr(5 * W_MAXM1 + 5) & ";" & CStr(5 * W_MAXM2 + 5)
        End If
        .ListIndex = 0
     End With
  End If

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  If Val(Application.Version) >= 15 Then
     Call KILLTM_UF
     hwnd = FindWindow(vbNullString, UserForm1.Caption)
     Call SetWindowPos(hwnd, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd|
     
     hwnd = FindWindow(vbNullString, Me.Caption)
     Call SetWindowPos(hwnd, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
  End If

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.75
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.75
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton9_Click()
'|fffd||fffd||fffd||fffd|

  With Me.ListBox1
     If .ListCount > 0 Then
        Select Case UserForm1.MultiPage4.Pages("PAGE5").Tag
        Case "1"
           UserForm1.TextBox33.Value = .list(.ListIndex, 1)
           UserForm1.TextBox34.Value = .list(.ListIndex, 2)
        Case "2"
           UserForm1.TextBox35.Value = .list(.ListIndex, 1)
           UserForm1.TextBox4.Value = .list(.ListIndex, 2)
        Case "3"
           UserForm1.TextBox36.Value = .list(.ListIndex, 1)
           UserForm1.TextBox6.Value = .list(.ListIndex, 2)
        End Select
        Unload Me
     End If
  End With

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd||fffd||fffd||fffd|

  With Me.ListBox1
     If .ListCount > 0 Then
        Select Case UserForm1.MultiPage4.Pages("PAGE5").Tag
        Case "1"
           UserForm1.TextBox33.Value = .list(.ListIndex, 1)
           UserForm1.TextBox34.Value = .list(.ListIndex, 2)
        Case "2"
           UserForm1.TextBox35.Value = .list(.ListIndex, 1)
           UserForm1.TextBox4.Value = .list(.ListIndex, 2)
        Case "3"
           UserForm1.TextBox36.Value = .list(.ListIndex, 1)
           UserForm1.TextBox6.Value = .list(.ListIndex, 2)
        End Select
        Unload Me
     End If
  End With

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm18"
Attribute VB_Base = "0{728954D9-2CDF-4B82-B4F0-B8CA9E86DA00}{FC502A57-4421-4D4D-802A-B769A0FBD220}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||64fe|
#If Win64 Then
Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
#Else
Private Declare Function GetActiveWindow Lib "user32" () As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" _
   (ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
  (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function DrawMenuBar Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
Private Declare Function DrawMenuBar Lib "user32" (ByVal hwnd As Long) As Long
#End If

Private Const WS_POPUP = &H80000000
Private Const GWL_STYLE = (-16)
Private Const GWL_EXSTYLE = (-20)

#If Win64 Then
Private Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#Else
Private Declare Function SetLayeredWindowAttributes Lib "user32.dll" _
(ByVal hwnd As Long, ByVal crKey As Long, ByVal bAlpha As Long, ByVal dwFlags As Long) As Long
#End If

Private Const LWA_COLORKEY = 1
Private Const WS_EX_LAYERED = &H80000

#If Win64 Then
Private Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long) As Long
#Else
Private Declare Function ShowWindow Lib "user32" (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long
#End If

Private Const SW_SHOWNORMAL = 1

Private Sub UserForm_Activate()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  hwnd = GetActiveWindow

#If Win64 Then
  Call SetWindowLongPtr(hwnd, GWL_EXSTYLE, WS_EX_LAYERED)
#Else
  Call SetWindowLong(hwnd, GWL_EXSTYLE, WS_EX_LAYERED)
#End If
  
  On Error Resume Next
  Call SetLayeredWindowAttributes(hwnd, RGB(255, 255, 255), 0, LWA_COLORKEY)
  On Error GoTo 0

#If Win64 Then
  SetWindowLongPtr hwnd, GWL_STYLE, WS_POPUP
#Else
  SetWindowLong hwnd, GWL_STYLE, WS_POPUP
#End If
  DrawMenuBar hwnd
  
  Call ShowWindow(hwnd, SW_SHOWNORMAL)

  Me.Top = UserForm1.Top
  Me.Left = Application.Max(UserForm1.Left - 200, 0)
  
  Me.Image1.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image1.Tag).Caption
  Me.Image2.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image2.Tag).Caption
  Me.Image3.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image3.Tag).Caption
  Me.Image4.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image4.Tag).Caption
  Me.Image5.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image5.Tag).Caption
  Me.Image6.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image6.Tag).Caption
  Me.Image7.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image7.Tag).Caption
  Me.Image8.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image8.Tag).Caption
  Me.Image9.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image9.Tag).Caption
  Me.Image10.ControlTipText = UserForm1.MultiPage1.Pages(Me.Image10.Tag).Caption

  If SW_ENGLISH = True Then
     Me.Image12.ControlTipText = "Help"
     Me.Image13.ControlTipText = "Close"
     Me.Image14.ControlTipText = "Left"
     Me.Image15.ControlTipText = "Right"
     Me.Image16.ControlTipText = "Enter"
  Else
     Me.Image12.ControlTipText = "|fffd|w|fffd||fffd||fffd|v"
     Me.Image13.ControlTipText = "|fffd||82||fffd||fffd||fffd|"
     Me.Image14.ControlTipText = "|fffd||fffd|"
     Me.Image15.ControlTipText = "|fffd||fffd|"
     Me.Image16.ControlTipText = "|fffd|m|fffd||fffd|"
  End If

End Sub

Private Sub UserForm_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If KeyCode = vbKeyEscape Then
     Unload Me
     Exit Sub
  End If

  If KeyCode = vbKeyRight Then
     Call RIGHT_RTN
     Exit Sub
  End If
  
  If KeyCode = vbKeyLeft Then
     Call LEFT_RTN
     Exit Sub
  End If
  
  If KeyCode = vbKeyReturn Then
     Call ENTER_RTN
     Exit Sub
  End If

End Sub

Private Sub RIGHT_RTN()

  Me.Image11.Picture = Me.Image1.Picture
  Me.Image1.Picture = Me.Image10.Picture
  Me.Image10.Picture = Me.Image9.Picture
  Me.Image9.Picture = Me.Image8.Picture
  Me.Image8.Picture = Me.Image7.Picture
  Me.Image7.Picture = Me.Image6.Picture
  Me.Image6.Picture = Me.Image5.Picture
  Me.Image5.Picture = Me.Image4.Picture
  Me.Image4.Picture = Me.Image3.Picture
  Me.Image3.Picture = Me.Image2.Picture
  Me.Image2.Picture = Me.Image11.Picture

  Me.Image11.Tag = Me.Image1.Tag
  Me.Image1.Tag = Me.Image10.Tag
  Me.Image10.Tag = Me.Image9.Tag
  Me.Image9.Tag = Me.Image8.Tag
  Me.Image8.Tag = Me.Image7.Tag
  Me.Image7.Tag = Me.Image6.Tag
  Me.Image6.Tag = Me.Image5.Tag
  Me.Image5.Tag = Me.Image4.Tag
  Me.Image4.Tag = Me.Image3.Tag
  Me.Image3.Tag = Me.Image2.Tag
  Me.Image2.Tag = Me.Image11.Tag

  Me.Image11.ControlTipText = Me.Image1.ControlTipText
  Me.Image1.ControlTipText = Me.Image10.ControlTipText
  Me.Image10.ControlTipText = Me.Image9.ControlTipText
  Me.Image9.ControlTipText = Me.Image8.ControlTipText
  Me.Image8.ControlTipText = Me.Image7.ControlTipText
  Me.Image7.ControlTipText = Me.Image6.ControlTipText
  Me.Image6.ControlTipText = Me.Image5.ControlTipText
  Me.Image5.ControlTipText = Me.Image4.ControlTipText
  Me.Image4.ControlTipText = Me.Image3.ControlTipText
  Me.Image3.ControlTipText = Me.Image2.ControlTipText
  Me.Image2.ControlTipText = Me.Image11.ControlTipText

  Me.Repaint

End Sub

Private Sub LEFT_RTN()

  Me.Image11.Picture = Me.Image1.Picture
  Me.Image1.Picture = Me.Image2.Picture
  Me.Image2.Picture = Me.Image3.Picture
  Me.Image3.Picture = Me.Image4.Picture
  Me.Image4.Picture = Me.Image5.Picture
  Me.Image5.Picture = Me.Image6.Picture
  Me.Image6.Picture = Me.Image7.Picture
  Me.Image7.Picture = Me.Image8.Picture
  Me.Image8.Picture = Me.Image9.Picture
  Me.Image9.Picture = Me.Image10.Picture
  Me.Image10.Picture = Me.Image11.Picture

  Me.Image11.Tag = Me.Image1.Tag
  Me.Image1.Tag = Me.Image2.Tag
  Me.Image2.Tag = Me.Image3.Tag
  Me.Image3.Tag = Me.Image4.Tag
  Me.Image4.Tag = Me.Image5.Tag
  Me.Image5.Tag = Me.Image6.Tag
  Me.Image6.Tag = Me.Image7.Tag
  Me.Image7.Tag = Me.Image8.Tag
  Me.Image8.Tag = Me.Image9.Tag
  Me.Image9.Tag = Me.Image10.Tag
  Me.Image10.Tag = Me.Image11.Tag

  Me.Image11.ControlTipText = Me.Image1.ControlTipText
  Me.Image1.ControlTipText = Me.Image2.ControlTipText
  Me.Image2.ControlTipText = Me.Image3.ControlTipText
  Me.Image3.ControlTipText = Me.Image4.ControlTipText
  Me.Image4.ControlTipText = Me.Image5.ControlTipText
  Me.Image5.ControlTipText = Me.Image6.ControlTipText
  Me.Image6.ControlTipText = Me.Image7.ControlTipText
  Me.Image7.ControlTipText = Me.Image8.ControlTipText
  Me.Image8.ControlTipText = Me.Image9.ControlTipText
  Me.Image9.ControlTipText = Me.Image10.ControlTipText
  Me.Image10.ControlTipText = Me.Image11.ControlTipText

  Me.Repaint

End Sub

Private Sub ENTER_RTN()

  Dim I As Long
  Dim SW_FIND As Boolean

  
  SW_FIND = False
  For I = 0 To UserForm1.MultiPage1.Pages.count - 1
     If UserForm1.MultiPage1.Pages(I).Name = Me.Image1.Tag Then
        SW_FIND = True
        Exit For
     End If
  Next I
     
  If SW_FIND = True Then
     UserForm1.ToggleButton2.Value = False
     UserForm1.ToggleButton1.Value = False
     UserForm1.MultiPage1.Value = I
  End If
     
  Unload Me

End Sub

Private Sub Image12_Click()

  If UserForm1.CheckBox49.Value = True Then
     MsgBox "Enter : Confirm" & vbCrLf & _
            "Esc : Cancel" & vbCrLf & _
            "Left or Right : rotate"
  Else
     MsgBox "Enter : |fffd|m|fffd||fffd|" & vbCrLf & _
            "Esc : |fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|" & vbCrLf & _
            "|fffd||fffd||fffd|A|fffd||fffd| : |fffd||fffd|]"
  End If

End Sub

Private Sub Image13_Click()

  Unload Me

End Sub

Private Sub Image14_Click()

  Call LEFT_RTN

End Sub

Private Sub Image15_Click()

  Call RIGHT_RTN

End Sub

Private Sub Image16_Click()

  Call ENTER_RTN

End Sub

Attribute VB_Name = "UserForm19"
Attribute VB_Base = "0{E134BBD8-124D-4DD7-B321-CC4D48E1589C}{CF7F9E32-15EE-445D-9650-EF1839CE375B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Base 1

Dim RE As Object
Dim AFN As Long
Dim AR_AFS() As Long
Dim AR_AFR() As Long
Dim AR_AFC() As Long
Dim AR_AFN() As Long
Dim AR_AFV() As String
Dim AR_AFJ() As String
Dim AR_AF1() As String
Dim AR_AF2() As String
Dim SW_SEL As Boolean

Dim H As Double
Dim W As Double

Dim NRE As Object


'|fffd|L|fffd|[|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Integer
#Else
Private Declare Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Long
#End If
Private Const VK_SPACE = &H20

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Proofreading"
     Me.Label1.Caption = "Dictionary"
     Me.Label2.Caption = "Possibility"
     Me.Label4.Caption = "Sheet"
     Me.Label5.Caption = "Cell"
     Me.Label6.Caption = "Count"
     Me.Label7.Caption = "Before and after"
     Me.CheckBox1.Caption = "Case senstive"
     Me.CheckBox2.Caption = "Not use standard find"
     Me.CommandButton1.Caption = "Find"
     Me.CommandButton2.Caption = "Replace"
     Me.TextBox1.ControlTipText = "Delimiter of proofreading before and after is Tab, and delimiter of multiples is newline."
     Me.CommandButton3.ControlTipText = "Select all"
     Me.CommandButton4.ControlTipText = "Release all"
  Else
     Me.Caption = "|fffd|Z|fffd||fffd|"
     Me.Label1.Caption = "|fffd||fffd||fffd||fffd|"
     Me.Label2.Caption = "|fffd||fffd||fffd|"
     Me.Label4.Caption = "|fffd|V|fffd|[|fffd|g"
     Me.Label5.Caption = "|fffd|Z|fffd||fffd|"
     Me.Label6.Caption = "|fffd||90||fffd|"
     Me.Label7.Caption = "|fffd|O|fffd||fffd|"
     Me.CheckBox1.Caption = "|fffd||5576||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||282||fffd||fffd||fffd|(C)"
     Me.CheckBox2.Caption = "|fffd|W|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|(U)"
     Me.CommandButton1.Caption = "|fffd||fffd||fffd||fffd|(F)"
     Me.CommandButton2.Caption = "|fffd|u|fffd||fffd|(R)"
     Me.TextBox1.ControlTipText = "|fffd|Z|fffd||fffd||fffd|O|fffd||fffd||fffd|Tab|fffd||fffd||602||fffd||153||fffd||fffd||342||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||349||fffd||fffd|s|fffd||fffd||602||fffd||153||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     Me.CommandButton3.ControlTipText = "|fffd||fffd||fffd||5c2||111|I|fffd||fffd|"
     Me.CommandButton4.ControlTipText = "|fffd||fffd||fffd||5c2||109||fffd||fffd||fffd|"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.Label4.Font.Name = "Segoe UI"
        Me.Label5.Font.Name = "Segoe UI"
        Me.Label6.Font.Name = "Segoe UI"
        Me.Label7.Font.Name = "Segoe UI"
        Me.CheckBox1.Font.Name = "Segoe UI"
        Me.CheckBox2.Font.Name = "Segoe UI"
        Me.ListBox1.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.Label4.Font.Name = "Meiryo UI"
        Me.Label5.Font.Name = "Meiryo UI"
        Me.Label6.Font.Name = "Meiryo UI"
        Me.Label7.Font.Name = "Meiryo UI"
        Me.CheckBox1.Font.Name = "Meiryo UI"
        Me.CheckBox2.Font.Name = "Meiryo UI"
        Me.ListBox1.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.Label4.Font.Name = "Tahoma"
        Me.Label5.Font.Name = "Tahoma"
        Me.Label6.Font.Name = "Tahoma"
        Me.Label7.Font.Name = "Tahoma"
        Me.CheckBox1.Font.Name = "Tahoma"
        Me.CheckBox2.Font.Name = "Tahoma"
        Me.ListBox1.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.Label4.Font.Name = "MS UI Gothic"
        Me.Label5.Font.Name = "MS UI Gothic"
        Me.Label6.Font.Name = "MS UI Gothic"
        Me.Label7.Font.Name = "MS UI Gothic"
        Me.CheckBox1.Font.Name = "MS UI Gothic"
        Me.CheckBox2.Font.Name = "MS UI Gothic"
        Me.ListBox1.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
     End If
  End If
  
  If SW_ENGLISH = True Then
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox1.Font.Size = 8
  Else
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox1.Font.Size = 9
  End If
  
  Me.TextBox1.Value = Replace(W_PRDIC, vbTab & vbTab, vbCrLf)
  Me.CheckBox1.Value = UserForm1.CheckBox1.Value
  Me.CheckBox2.Value = UserForm1.CheckBox74.Value

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CheckBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox1)

End Sub

Private Sub CheckBox2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox2)

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.5
        DoEvents
     Loop
  End If

End Sub

Private Sub TextBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox1
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox1_Enter()

  If SW_ORE = True Then
     Me.TextBox1.BackColor = &HFFFFC0
  ElseIf SW_NRE = True Then
     Me.TextBox1.BackColor = &HC0FFC0
  Else
     Me.TextBox1.BackColor = &HC0FFFF
  End If

End Sub

Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox1.BackColor = &H80000005

End Sub

Private Sub CommandButton1_Click()
'|fffd||fffd||fffd||fffd|

  Dim I As Long
  Dim J As Long
  Dim AR_TEXT1 As Variant
  Dim AR_TEXT2 As Variant
  Dim AR_FIND() As String
  Dim AR_REPL() As String
  Dim W_ERRM As String
  Dim SW_NRML As Boolean
  Dim W_NMLCHK As String

  Dim W_ACR As Long
  Dim W_ACC As Long

  Dim SW_NR As Boolean
  Dim SW_NRA As Boolean
  Dim AR_NR() As Boolean

  Dim B As Long


  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "PR find"

  If WINDOWCHK = False Then
     Exit Sub
  End If
  If TypeName(ActiveSheet) <> "Worksheet" Then
     Exit Sub
  End If
  If IsEmpty(ActiveSheet.UsedRange.Address(True, True, xlR1C1)) = True Then
     Exit Sub
  End If
  
  If Me.TextBox1.Value = "" Then
     Exit Sub
  End If
  
  AR_TEXT1 = Split(Me.TextBox1, vbCrLf)
  J = 0
  SW_NRA = False
  ReDim AR_NR(1 To UBound(AR_TEXT1) + 1)
     
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = False
     .Global = True
  End With
  W_ERRM = ""

  For I = 0 To UBound(AR_TEXT1)
     If AR_TEXT1(I) <> "" And _
        InStr(AR_TEXT1(I), vbTab) > 0 Then
        AR_TEXT2 = Split(AR_TEXT1(I), vbTab)
        If AR_TEXT2(0) <> "" Then
           '|fffd|`|fffd|F|fffd|b|fffd|N
           SW_NR = False
           RE.Pattern = AR_TEXT2(0)
           If SW_NRE = True Then
              SW_NR = True
           Else
              On Error GoTo LABEL_ERR
              RE.Test (" ")
              On Error GoTo 0
              On Error GoTo LABEL_REP
           End If
           
           If SW_NR = True Then
              Set NRE = NRCHK(AR_TEXT2(0), False)
              If NRE Is Nothing Then
                 On Error GoTo LABEL_ERR2
                 Error (0)
                 On Error GoTo 0
              End If
           End If
           On Error GoTo LABEL_REP
           
           If W_ERRM = "" Then
              J = J + 1
              ReDim Preserve AR_FIND(J)
              ReDim Preserve AR_REPL(J)
              ReDim Preserve AR_NR(J)
              AR_FIND(J) = AR_TEXT2(0)
              AR_REPL(J) = AR_TEXT2(1)
              AR_NR(J) = SW_NR
           End If
        End If
     End If
  Next I

  Set RE = Nothing
  If W_ERRM <> "" Then
     MsgBox W_ERRM
     Exit Sub
  End If
  
  B = 0
  On Error Resume Next
  B = UBound(AR_FIND)
  On Error GoTo LABEL_REP
  If B = 0 Then
     Exit Sub
  End If

  Application.ScreenUpdating = False
  
  AFN = 0
  W_ACR = ActiveCell.Row
  W_ACC = ActiveCell.Column
  
  For I = 1 To UBound(AR_FIND)
     SW_NRML = False
     W_NMLCHK = ""
  
     If Me.CheckBox2.Value = False Then
        Set RE = CreateObject("VBScript.RegExp")
        With RE
           .Pattern = "[$^\\\[\]\{\}\(\)\*\.\+\?\|]"
           .IgnoreCase = True
           .Global = True
        End With
        If RE.Test(AR_FIND(I)) = False Then
           SW_NRML = True
        End If
        Set RE = Nothing
     End If
        
     If SW_NRML = False Then
        If Me.CheckBox2.Value = False Then
           W_NMLCHK = NRML_CHK(AR_FIND(I), 1, False)
        End If
     End If

     Set RE = CreateObject("VBScript.RegExp")
     With RE
        .Pattern = AR_FIND(I)
        .IgnoreCase = Not Me.CheckBox1.Value
        .Global = True
     End With

     If SW_NRML = True Or _
        W_NMLCHK <> "" Then
        Call NRML_FIND(W_NMLCHK, AR_FIND(I), REPSTRCNV(AR_REPL(I)), AR_NR(I))
     Else
        Call RE_FIND(AR_FIND(I), REPSTRCNV(AR_REPL(I)), AR_NR(I))
     End If
     
     Set NRE = Nothing
     Set RE = Nothing
  Next I

  Cells(W_ACR, W_ACC).Select

  If AFN > 0 Then
     Call ALL_FIND
  End If

  Application.ScreenUpdating = True

  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  SW_NRA = True
  Resume Next

LABEL_ERR2:
  On Error GoTo 0
  If W_ERRM = "" Then
     If UserForm1.CheckBox49.Value = True Then
        W_ERRM = "Error exists in following pattern. Check."
     Else
        W_ERRM = "|fffd||209||fffd||fffd||303|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
     End If
     W_ERRM = W_ERRM & vbCrLf
  End If
  W_ERRM = W_ERRM & vbCrLf & AR_TEXT2(0)
  Resume Next

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub NRML_FIND(ByVal W_NMLCHK As String, ByVal W_FIND As String, ByVal W_REPL As String, ByVal SW_NR As Boolean)
  
  Dim TRNG As Range
  Dim RNG As Range
  Dim AD1ST As String
  
  Dim SW_LPEND As Boolean
  
  Dim W_FW As String
  Dim SW_HIT As Boolean
  
  Dim W_1STR As Long
  Dim W_1STC As Long
  
  Dim W_MC As Boolean
  Dim W_MB As Boolean
  
  
  On Error Resume Next
  Cells(Rows.count, Columns.count).Select
  Set TRNG = Cells
  On Error GoTo 0
  
  If W_NMLCHK <> "" Then
'''     W_FW = Application.Substitute(W_NMLCHK, "~", "~~")
     W_FW = W_NMLCHK
  Else
     W_FW = Application.Substitute(W_FIND, "~", "~~")
  End If
  
  W_MC = Me.CheckBox1.Value
  If W_FW Like "*[A-Z]*" Then
  Else
     W_MC = True
  End If
     
  W_MB = True
  If W_FW = String$(Len(W_FW), "?") Then
     W_MB = False
  End If
  
  If Val(Application.Version) < 10 Then
     Set RNG = FIND2000(TRNG, W_FW, ActiveCell, xlValues, xlByRows, xlNext, W_MC, W_MB)
  Else
     Set RNG = FIND2002(TRNG, W_FW, ActiveCell, xlValues, xlByRows, xlNext, W_MC, W_MB)
  End If
  
  If Not RNG Is Nothing Then
     If AD1ST = "" Then
        AD1ST = RNG.Address
     End If
     SW_HIT = False
     If W_NMLCHK <> "" Then
        SW_HIT = NRML_RE(RNG, SW_NR)
     Else
        SW_HIT = NRML_INSTR(RNG, W_FIND)
     End If
     If SW_HIT = True Then
        Call SET_FIND(RNG, W_FIND, W_REPL, SW_NR)
     Else
        W_1STR = RNG.Row
        W_1STC = RNG.Column
     End If
                 
     If Val(Application.Version) < 10 Then
        Set RNG = FIND2000(TRNG, W_FW, RNG, xlValues, xlByRows, xlNext, W_MC, W_MB)
     Else
        Set RNG = FIND2002(TRNG, W_FW, RNG, xlValues, xlByRows, xlNext, W_MC, W_MB)
     End If
     
     If Not RNG Is Nothing Then
        If RNG.Address <> AD1ST Then
           SW_HIT = False
           If W_NMLCHK <> "" Then
              SW_HIT = NRML_RE(RNG, SW_NR)
           Else
              SW_HIT = NRML_INSTR(RNG, W_FIND)
           End If
           If SW_HIT = True Then
              Call SET_FIND(RNG, W_FIND, W_REPL, SW_NR)
           End If
        End If
        
        SW_LPEND = False
        
        Do Until SW_LPEND = True
           If Val(Application.Version) < 10 Then
              Set RNG = FIND2000(TRNG, W_FW, RNG, xlValues, xlByRows, xlNext, W_MC, W_MB)
           Else
              Set RNG = FIND2002(TRNG, W_FW, RNG, xlValues, xlByRows, xlNext, W_MC, W_MB)
           End If
           
           If Not RNG Is Nothing Then
              If RNG.Address <> AD1ST Then
                 SW_HIT = False
                 If W_NMLCHK <> "" Then
                    SW_HIT = NRML_RE(RNG, SW_NR)
                 Else
                    SW_HIT = NRML_INSTR(RNG, W_FIND)
                 End If
                 If SW_HIT = True Then
                    Call SET_FIND(RNG, W_FIND, W_REPL, SW_NR)
                 Else
                    If RNG.Row = W_1STR And RNG.Column = W_1STC Then
                       SW_LPEND = True
                    End If
                 End If
              Else
                 SW_LPEND = True
              End If
           Else
              SW_LPEND = True
           End If
        Loop
     
     End If
     Set RNG = Nothing
  End If
  Set TRNG = Nothing

End Sub

Private Function NRML_RE(ByRef RNG As Range, ByVal SW_NR As Boolean) As Boolean

  Dim W_CELL As String
  
  NRML_RE = False
  
  If IsOF(RNG) = True Then
  ElseIf IsError(RNG.Value) = True Then
  Else
     W_CELL = RNG.Value
  End If
  
  If SW_NR = False Then
     NRML_RE = RE.Test(W_CELL)
  Else
     NRML_RE = NRTEST(NRE, W_CELL)
  End If

End Function

Private Function NRML_INSTR(ByRef RNG As Range, ByVal W_FIND As String) As Boolean

  Dim W_CELL As String
  
  NRML_INSTR = False
  
  If IsOF(RNG) = True Then
  ElseIf IsError(RNG.Value) = True Then
  Else
     W_CELL = RNG.Value
  End If
  
  If InStr(W_CELL, W_FIND) > 0 Then
     NRML_INSTR = True
  End If

End Function

Private Sub RE_FIND(ByVal W_FIND As String, ByVal W_REPL As String, ByVal SW_NR As Boolean)

  Dim W_MINR As Long
  Dim W_MINC As Long
  Dim W_MAXR As Long
  Dim W_MAXC As Long
  Dim R As Long
  Dim C As Long
  Dim W_CELL As String

  Dim SW_WK As Boolean


  With ActiveSheet.UsedRange
     W_MINR = .Rows(1).Row
     W_MINC = .Columns(1).Column
     W_MAXR = .Rows(.Rows.count).Row
     W_MAXC = .Columns(.Columns.count).Column
  End With

  For R = W_MINR To W_MAXR
     For C = W_MINC To W_MAXC
        W_CELL = ""
        If IsOF(Cells(R, C)) = True Then
        ElseIf IsError(Cells(R, C).Value) = True Then
        Else
           W_CELL = Cells(R, C).Value
        End If
        
        If W_CELL <> "" Then
           If SW_NR = False Then
              SW_WK = RE.Test(W_CELL)
           Else
              SW_WK = NRTEST(NRE, W_CELL)
           End If
           
           If SW_WK = True Then
              Call SET_FIND(Cells(R, C), W_FIND, W_REPL, SW_NR)
           End If
        End If
     Next C
  Next R

End Sub

Private Sub SET_FIND(ByVal RNG As Range, ByVal W_FIND, ByVal W_REPL, ByVal SW_NR As Boolean)
  
  Dim MATCHES As Object
  Dim W_STR As String
  Dim W_STR1 As String
  Dim W_STR2 As String
    
  Dim SW_WK As Boolean
  Dim AR_STR As Variant
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim AR_RES As Variant
  Dim W_LNA As Long
    

  W_CNTFA = W_CNTFA + 1
  
  If AFN Mod 10000 = 0 Then
     ReDim Preserve AR_AFS((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFR((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFC((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFN((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFV((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AFJ((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AF1((Int(AFN / 10000) + 1) * 10000)
     ReDim Preserve AR_AF2((Int(AFN / 10000) + 1) * 10000)
  End If
     
  AFN = AFN + 1
    
  AR_AFS(AFN) = Worksheets(ActiveSheet.Name).Index
  AR_AFR(AFN) = RNG.Row
  AR_AFC(AFN) = RNG.Column
  AR_AF1(AFN) = W_FIND
  AR_AF2(AFN) = W_REPL
  
  If IsError(RNG.Value) = True Then
     W_STR = RNG.text
  Else
     W_STR = RNG.Value
  End If
 
  If SW_NR = False Then
     SW_WK = RE.Test(W_STR)
  Else
     SW_WK = NRTEST(NRE, W_STR)
  End If
  
  If SW_WK = True Then
     If SW_NR = False Then
        Set MATCHES = RE.Execute(W_STR)
        AR_AFN(AFN) = MATCHES.count
        W_FI = MATCHES.Item(0).FirstIndex
        W_LN = MATCHES.Item(0).Length
        W_VL = MATCHES.Item(0).Value
        W_STR1 = W_VL
        If SP_REP3(W_STR1, W_STR2, W_REPL) = False Then
           W_LNA = Len(W_STR) - W_FI - W_LN
           RE.Global = False
           W_STR2 = RE.Replace(W_STR, W_REPL)
           W_STR2 = Right$(W_STR2, Len(W_STR2) - W_FI)
           W_STR2 = Left$(W_STR2, Len(W_STR2) - W_LNA)
           RE.Global = True
        End If
     Else
        AR_STR = Split(NREXE(NRE, W_STR), vbCrLf)
        AR_RES = Split(NRRES(NRE, W_STR, W_REPL), Chr$(1))
        If UBound(AR_RES) = -1 Then
           ReDim AR_RES(0 To UBound(AR_STR))
        End If
        AR_AFN(AFN) = UBound(AR_STR) + 1
        AR_WK = Split(AR_STR(0), vbTab)
        W_FI = CLng(AR_WK(0))
        W_LN = CLng(AR_WK(1))
        W_VL = Mid$(W_STR, W_FI + 1, W_LN)
        W_STR1 = W_VL
        If SP_REP3(W_STR1, W_STR2, W_REPL) = False Then
           W_STR2 = AR_RES(0)
        End If
     End If
     
     AR_AFV(AFN) = W_STR1 & vbTab & vbTab & W_STR2
     AR_AFJ(AFN) = W_FIND & vbTab & W_REPL
  End If

End Sub

Private Sub ALL_FIND()
  
  Dim AR_LIST() As String
  Dim I As Long
  
  
  ReDim Preserve AR_AFS(AFN)
  ReDim Preserve AR_AFR(AFN)
  ReDim Preserve AR_AFC(AFN)
  ReDim Preserve AR_AFN(AFN)
  ReDim Preserve AR_AFV(AFN)
  ReDim Preserve AR_AFJ(AFN)
  ReDim Preserve AR_AF1(AFN)
  ReDim Preserve AR_AF2(AFN)
  
  ReDim AR_LIST(0 To AFN - 1, 0 To 5)
  
  For I = 1 To AFN
     AR_LIST(I - 1, 0) = "Sel"
     If I = 1 Then
        AR_LIST(I - 1, 1) = Sheets(AR_AFS(I)).Name
     Else
        AR_LIST(I - 1, 1) = AR_LIST(I - 2, 1)
     End If
     AR_LIST(I - 1, 2) = Cells(AR_AFR(I), AR_AFC(I)).Address
     AR_LIST(I - 1, 3) = AR_AFN(I)
     AR_LIST(I - 1, 4) = AR_AFV(I)
     AR_LIST(I - 1, 5) = AR_AFJ(I)
  Next I
  
  Erase AR_AFS
  Erase AR_AFR
  Erase AR_AFC
  Erase AR_AFN
  Erase AR_AFV
  Erase AR_AFJ
  
  SW_SEL = False
  With Me.ListBox1
     .list = AR_LIST
     Erase AR_LIST
     .Enabled = True
     .ColumnWidths = "25;100;50;30;300;0"
     .Tag = ActiveWorkbook.Name
     .ListIndex = 0
     .SetFocus
  End With
  SW_SEL = True
  If UserForm1.CheckBox49.Value = True Then
     Me.Label3.Caption = AFN & " cell(s) found"
  Else
     Me.Label3.Caption = AFN & "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|"
  End If
  Me.Label2.Tag = Me.CheckBox1.Value
  Me.Label2.Enabled = True
  Me.Label3.Visible = True
  Me.Label4.Enabled = True
  Me.Label5.Enabled = True
  Me.Label6.Enabled = True
  Me.Label7.Enabled = True
  Me.CommandButton2.Enabled = True
  Me.CommandButton3.Enabled = True
  Me.CommandButton4.Enabled = True

  With Me.ListBox1
     On Error Resume Next
     Range(.list(.ListIndex, 2)).Select
     On Error GoTo 0
  End With

End Sub

Private Sub ListBox1_Change()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g

  If SW_SEL = True Then
     With Me.ListBox1
        On Error Resume Next
        Workbooks(.Tag).Activate
        Worksheets(.list(.ListIndex, 1)).Select
        Range(.list(.ListIndex, 2)).Select
        On Error GoTo 0
     End With
  End If

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  
  Call LIST_SEL
  
End Sub

Private Sub ListBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  
  If GetAsyncKeyState(VK_SPACE) <> 0 Then
     Call LIST_SEL
  End If

End Sub

Private Sub LIST_SEL()

  Dim AR_LIST() As String
  Dim I As Long
  Dim W_LI As Long
  
  
  ReDim AR_LIST(0 To Me.ListBox1.ListCount - 1, 0 To 5)
  
  With Me.ListBox1
     W_LI = .ListIndex
     For I = 0 To .ListCount - 1
        If I = .ListIndex Then
           If .list(I, 0) = "Sel" Then
              AR_LIST(I, 0) = ""
           Else
              AR_LIST(I, 0) = "Sel"
           End If
        Else
           AR_LIST(I, 0) = .list(I, 0)
        End If
        AR_LIST(I, 1) = .list(I, 1)
        AR_LIST(I, 2) = .list(I, 2)
        AR_LIST(I, 3) = .list(I, 3)
        AR_LIST(I, 4) = .list(I, 4)
        AR_LIST(I, 5) = .list(I, 5)
     Next I
     .Clear
     .list = AR_LIST
     .ListIndex = W_LI
     Erase AR_LIST
     .SetFocus
  End With

End Sub

Private Sub CommandButton3_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd|I|fffd||fffd|

  Call LIST_SET_ALL(True)

End Sub

Private Sub CommandButton4_Click()
'|fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|S|fffd||fffd||fffd||fffd|
  
  Call LIST_SET_ALL(False)

End Sub

Private Sub LIST_SET_ALL(SW_ASEL As Boolean)

  Dim AR_LIST() As String
  Dim I As Long
  Dim W_LI As Long
  
  ReDim AR_LIST(0 To Me.ListBox1.ListCount - 1, 0 To 5)
  
  With Me.ListBox1
     W_LI = .ListIndex
     For I = 0 To .ListCount - 1
        If SW_ASEL = True Then
           AR_LIST(I, 0) = "Sel"
        Else
           AR_LIST(I, 0) = ""
        End If
        AR_LIST(I, 1) = .list(I, 1)
        AR_LIST(I, 2) = .list(I, 2)
        AR_LIST(I, 3) = .list(I, 3)
        AR_LIST(I, 4) = .list(I, 4)
        AR_LIST(I, 5) = .list(I, 5)
     Next I
     .Clear
     .list = AR_LIST
     .ListIndex = W_LI
     Erase AR_LIST
     .SetFocus
  End With

End Sub

Private Sub CommandButton2_Click()
'|fffd|u|fffd||fffd|

  Dim I As Long
  Dim W_AR As Long
  Dim W_AC As Long
  Dim J As Long
  Dim W_CELL As String
  Dim W_CNTRA As Long
  Dim W_CNTRA2 As Long
  Dim W_CNTRA3 As Long
  Dim R As Long
  Dim C As Long

  Dim SW_NR As Boolean
  Dim SW_WK As Boolean


  On Error GoTo LABEL_REP
  W_EVAR = ""
  W_CLKBTN = "PR replace"

  W_AR = ActiveCell.Row
  W_AC = ActiveCell.Column

  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .IgnoreCase = Not CBool(Me.Label2.Tag)
     .Global = True
  End With

  Application.ScreenUpdating = False
  W_CNTRA = 0
  W_CNTRA2 = 0
  W_CNTRA3 = 0

  '|fffd|u|fffd||fffd|
  For I = 0 To Me.ListBox1.ListCount - 1
     If Me.ListBox1.list(I, 0) = "Sel" Then
        With Workbooks(Me.ListBox1.Tag).Worksheets(Me.ListBox1.list(I, 1))
           W_CELL = .Range(Me.ListBox1.list(I, 2)).Value
           W_EVAR = W_CELL
           RE.Pattern = AR_AF1(I + 1)
           SW_NR = False
           On Error GoTo LABEL_ERR
           RE.Test (" ")
           On Error GoTo LABEL_REP

           R = .Range(Me.ListBox1.list(I, 2)).Row
           C = .Range(Me.ListBox1.list(I, 2)).Column

           If W_CELL <> "" Then
              If SW_NR = False Then
                 SW_WK = RE.Test(W_CELL)
              Else
                 SW_WK = NRTEST(NRE, W_CELL)
              End If
              
              If SW_WK = True Then
                 W_CNTRA = W_CNTRA + 1
                 Call SP_REP(R, C, AR_AF2(I + 1), SW_NR)
                 If SW_SPREP = False Then
                    On Error Resume Next
                    If SW_NR = False Then
                       Cells(R, C).Value = RE.Replace(W_CELL, REPSTRCNV(AR_AF2(I + 1)))
                    Else
                       Cells(R, C).Value = NRREP(NRE, W_CELL, REPSTRCNV(AR_AF2(I + 1)))
                    End If
                    
                    If Err.Number = 0 Then
                       W_CNTRA2 = W_CNTRA2 + 1
                    End If
                    On Error GoTo LABEL_REP
                 Else
                    W_CNTRA2 = W_CNTRA2 + 1
                 End If
              Else
                 W_CNTRA3 = W_CNTRA3 + 1
              End If
           End If
        End With
     End If
  Next I

  Cells(W_AR, W_AC).Select
  Application.ScreenUpdating = True

  If W_CNTRA + W_CNTRA3 = W_CNTRA2 Then
     If W_CNTRA2 <> 0 Then
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Has made " & W_CNTRA & " replacements.", vbInformation)
        Else
           W_RET = MsgBox(W_CNTRA & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  Else
     If W_CNTRA2 <> 0 Then
        If UserForm1.CheckBox49.Value = True Then
           W_RET = MsgBox("Has made " & W_CNTRA2 & " of " & W_CNTRA + W_CNTRA3 & " replacements.", vbInformation)
        Else
           W_RET = MsgBox(W_CNTRA + W_CNTRA3 & " |fffd||fffd||fffd||fffd| " & W_CNTRA2 & " |fffd||fffd||fffd||312|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation)
        End If
     End If
  End If

  W_CLKBTN = ""
  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  SW_NR = True
  Resume Next

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub SP_REP(ByVal R As Long, ByVal C As Long, ByVal W_REPL As String, ByVal SW_NR As Boolean)
  
  Dim X As Long
  Dim Y As Long
  Dim Z As Long
  Dim W_STRCONV As Long
  Dim MATCHES As Object
  Dim W_STR As String
  Dim W_CELL As Variant
  
  Dim W_Z As Long
  
  Dim AR_STR As Variant
  Dim MAXX As Long
  Dim AR_WK As Variant
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim W_CELLBK As Variant
  
  
  SW_SPREP = False
  W_CELL = Cells(R, C).Value
  
  '|fffd||fffd||fffd||fffd|u|fffd||fffd|
  Select Case W_REPL
  Case "[UPPER]"
     SW_SPREP = True
     W_STRCONV = vbUpperCase
  Case "[LOWER]"
     SW_SPREP = True
     W_STRCONV = vbLowerCase
  Case "[WIDE]"
     SW_SPREP = True
     W_STRCONV = vbWide
  Case "[NARROW]"
     SW_SPREP = True
     W_STRCONV = vbNarrow
  End Select
  If SW_SPREP = False Then
     Exit Sub
  End If
  
  If SW_NR = False Then
     Set MATCHES = RE.Execute(W_CELL)
     MAXX = MATCHES.count - 1
  Else
     AR_STR = Split(NREXE(NRE, W_CELL), vbCrLf)
     MAXX = UBound(AR_STR)
     W_CELLBK = W_CELL
  End If
  
  Z = 0
  
  For X = 0 To MAXX
     If SW_NR = False Then
        W_FI = MATCHES.Item(X).FirstIndex
        W_LN = MATCHES.Item(X).Length
        W_VL = MATCHES.Item(X).Value
     Else
        AR_WK = Split(AR_STR(X), vbTab)
        W_FI = CLng(AR_WK(0))
        W_LN = CLng(AR_WK(1))
        W_VL = Mid$(W_CELLBK, W_FI + 1, W_LN)
     End If
     
     Y = W_FI + 1 + Z
     If Y > 1 Then
        W_STR = Left$(W_CELL, Y - 1)
     End If
     W_STR = W_STR & StrConv(W_VL, W_STRCONV)
     W_Z = Z
     Z = Y + W_LN
     If Len(W_CELL) - (Z - 1) > 0 Then
        W_STR = W_STR & Right$(W_CELL, Len(W_CELL) - (Z - 1))
     End If
     W_CELL = W_STR
     Z = Len(StrConv(W_VL, W_STRCONV)) - W_LN + W_Z
  Next X
  
  Set MATCHES = Nothing
  Cells(R, C).Value = W_CELL

End Sub

Private Function SP_REP3(ByVal W_SPTXT As String, W_REPTXT As String, ByVal W_REPL As String) As Boolean

  Dim W_STRCONV As Long
  
  
  SP_REP3 = False
  
  Select Case W_REPL
  Case "[UPPER]"
     SP_REP3 = True
     W_STRCONV = vbUpperCase
  Case "[LOWER]"
     SP_REP3 = True
     W_STRCONV = vbLowerCase
  Case "[WIDE]"
     SP_REP3 = True
     W_STRCONV = vbWide
  Case "[NARROW]"
     SP_REP3 = True
     W_STRCONV = vbNarrow
  End Select

  If SP_REP3 = False Then
     Exit Function
  End If
  
  W_REPTXT = StrConv(W_SPTXT, W_STRCONV)
  
End Function

Private Sub UserForm_Terminate()

  W_PRDIC = Replace(Me.TextBox1.Value, vbCrLf, vbTab & vbTab)

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{4BBDFD59-C114-43F1-AB99-B559AE9DF74D}{10C2B87C-9FE3-49A6-A532-F1A89D093E54}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Base 1

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()
  
  Dim I As Long
  Dim W_UKEY As String
  
  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Key setting"
     Me.CommandButton2.Caption = "Cancel"
  Else
     Me.Caption = "|fffd|N|fffd||fffd||fffd|L|fffd|[|fffd||752||fffd|"
     Me.CommandButton2.Caption = "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.CheckBox1.Font.Name = "Segoe UI"
        Me.CheckBox2.Font.Name = "Segoe UI"
        Me.CheckBox3.Font.Name = "Segoe UI"
        Me.CheckBox4.Font.Name = "Segoe UI"
        Me.CheckBox5.Font.Name = "Segoe UI"
        Me.CheckBox6.Font.Name = "Segoe UI"
        Me.ComboBox1.Font.Name = "Segoe UI"
        Me.ComboBox2.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.CheckBox1.Font.Name = "Meiryo UI"
        Me.CheckBox2.Font.Name = "Meiryo UI"
        Me.CheckBox3.Font.Name = "Meiryo UI"
        Me.CheckBox4.Font.Name = "Meiryo UI"
        Me.CheckBox5.Font.Name = "Meiryo UI"
        Me.CheckBox6.Font.Name = "Meiryo UI"
        Me.ComboBox1.Font.Name = "Meiryo UI"
        Me.ComboBox2.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.CheckBox1.Font.Name = "Tahoma"
        Me.CheckBox2.Font.Name = "Tahoma"
        Me.CheckBox3.Font.Name = "Tahoma"
        Me.CheckBox4.Font.Name = "Tahoma"
        Me.CheckBox5.Font.Name = "Tahoma"
        Me.CheckBox6.Font.Name = "Tahoma"
        Me.ComboBox1.Font.Name = "Tahoma"
        Me.ComboBox2.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.CheckBox1.Font.Name = "MS UI Gothic"
        Me.CheckBox2.Font.Name = "MS UI Gothic"
        Me.CheckBox3.Font.Name = "MS UI Gothic"
        Me.CheckBox4.Font.Name = "MS UI Gothic"
        Me.CheckBox5.Font.Name = "MS UI Gothic"
        Me.CheckBox6.Font.Name = "MS UI Gothic"
        Me.ComboBox1.Font.Name = "MS UI Gothic"
        Me.ComboBox2.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
     End If
  End If
  
  Me.CheckBox1.Value = SW_SHIFTF
  Me.CheckBox2.Value = SW_CTRLF
  Me.CheckBox3.Value = SW_ALTF
  
  With Me.ComboBox1
     .AddItem ""
     .AddItem "A"
     .AddItem "B"
     .AddItem "C"
     .AddItem "D"
     .AddItem "E"
     .AddItem "F"
     .AddItem "G"
     .AddItem "H"
     .AddItem "I"
     .AddItem "J"
     .AddItem "K"
     .AddItem "L"
     .AddItem "M"
     .AddItem "N"
     .AddItem "O"
     .AddItem "P"
     .AddItem "Q"
     .AddItem "R"
     .AddItem "S"
     .AddItem "T"
     .AddItem "U"
     .AddItem "V"
     .AddItem "W"
     .AddItem "X"
     .AddItem "Y"
     .AddItem "Z"
     .AddItem "0"
     .AddItem "1"
     .AddItem "2"
     .AddItem "3"
     .AddItem "4"
     .AddItem "5"
     .AddItem "6"
     .AddItem "7"
     .AddItem "8"
     .AddItem "9"
     .AddItem "F1"
     .AddItem "F2"
     .AddItem "F3"
     .AddItem "F4"
     .AddItem "F5"
     .AddItem "F6"
     .AddItem "F7"
     .AddItem "F8"
     .AddItem "F9"
     .AddItem "F10"
     .AddItem "F11"
     .AddItem "F12"
     If Len(W_KEYF) = 1 And _
        IsNumeric(W_KEYF) = False Then
        W_UKEY = StrConv(W_KEYF, vbUpperCase)
     Else
        W_UKEY = W_KEYF
     End If
     
     For I = 0 To .ListCount - 1
        If .list(I) = W_UKEY Then
           .ListIndex = I
           Exit For
        End If
     Next I
     If I = .ListCount Then
        .ListIndex = 0
     End If
  End With

  Me.CheckBox4.Value = SW_SHIFTR
  Me.CheckBox5.Value = SW_CTRLR
  Me.CheckBox6.Value = SW_ALTR
  
  With Me.ComboBox2
     .AddItem ""
     .AddItem "A"
     .AddItem "B"
     .AddItem "C"
     .AddItem "D"
     .AddItem "E"
     .AddItem "F"
     .AddItem "G"
     .AddItem "H"
     .AddItem "I"
     .AddItem "J"
     .AddItem "K"
     .AddItem "L"
     .AddItem "M"
     .AddItem "N"
     .AddItem "O"
     .AddItem "P"
     .AddItem "Q"
     .AddItem "R"
     .AddItem "S"
     .AddItem "T"
     .AddItem "U"
     .AddItem "V"
     .AddItem "W"
     .AddItem "X"
     .AddItem "Y"
     .AddItem "Z"
     .AddItem "0"
     .AddItem "1"
     .AddItem "2"
     .AddItem "3"
     .AddItem "4"
     .AddItem "5"
     .AddItem "6"
     .AddItem "7"
     .AddItem "8"
     .AddItem "9"
     .AddItem "F1"
     .AddItem "F2"
     .AddItem "F3"
     .AddItem "F4"
     .AddItem "F5"
     .AddItem "F6"
     .AddItem "F7"
     .AddItem "F8"
     .AddItem "F9"
     .AddItem "F10"
     .AddItem "F11"
     .AddItem "F12"
     If Len(W_KEYR) = 1 And _
        IsNumeric(W_KEYR) = False Then
        W_UKEY = StrConv(W_KEYR, vbUpperCase)
     Else
        W_UKEY = W_KEYR
     End If
     
     For I = 0 To .ListCount - 1
        If .list(I) = W_UKEY Then
           .ListIndex = I
           Exit For
        End If
     Next I
     If I = .ListCount Then
        .ListIndex = 0
     End If
  End With

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CheckBox1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox1)

End Sub

Private Sub CheckBox2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox2)

End Sub

Private Sub CheckBox3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox3)

End Sub

Private Sub CheckBox4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox4)

End Sub

Private Sub CheckBox5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox5)

End Sub

Private Sub CheckBox6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.CheckBox6)

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 1.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3
        End If
        Me.Top = Me.Top - 0.5
        Me.Left = Me.Left - 1
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 1.5
        Me.Width = Me.Width - 3
        Me.Top = Me.Top + 0.5
        Me.Left = Me.Left + 1
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton1_Click()

  Dim W_LKEY As String

  If Me.ComboBox1.Value = "" And _
     Me.ComboBox2.Value = "" Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Set one of find or replace at least.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||302||1c2||fffd||fffd||70a9||fffd|P|fffd||82||350||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation)
     End If
     Me.ComboBox1.SetFocus
     Exit Sub
  End If

  If Me.CheckBox1.Value = Me.CheckBox4.Value And _
     Me.CheckBox2.Value = Me.CheckBox5.Value And _
     Me.CheckBox3.Value = Me.CheckBox6.Value And _
     Me.ComboBox1.Value = Me.ComboBox2.Value Then
     If UserForm1.CheckBox49.Value = True Then
        W_RET = MsgBox("Find and replace are same.", vbExclamation)
     Else
        W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||192|u|fffd||fffd||fffd||30b|N|fffd||fffd||fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd| ", vbExclamation)
     End If
     Me.ComboBox2.SetFocus
     Exit Sub
  End If

  '|fffd||fffd||fffd||fffd|
  If W_ONKEYF <> "" Then
     Application.OnKey W_ONKEYF
  End If
  SW_SHIFTF = Me.CheckBox1.Value
  SW_CTRLF = Me.CheckBox2.Value
  SW_ALTF = Me.CheckBox3.Value
  If Len(Me.ComboBox1.Value) = 1 And _
     IsNumeric(Me.ComboBox1.Value) = False Then
     W_LKEY = StrConv(Me.ComboBox1.Value, vbLowerCase)
  Else
     W_LKEY = Me.ComboBox1.Value
  End If
  W_KEYF = W_LKEY
  If W_KEYF <> "" Then
     W_ONKEYF = SET_ONKEY(SW_SHIFTF, SW_CTRLF, SW_ALTF, W_KEYF, False)
     Application.OnKey W_ONKEYF, "SHOWF_RTN"
  End If
  
  '|fffd|u|fffd||fffd|
  If W_ONKEYR <> "" Then
     Application.OnKey W_ONKEYR
  End If
  SW_SHIFTR = Me.CheckBox4.Value
  SW_CTRLR = Me.CheckBox5.Value
  SW_ALTR = Me.CheckBox6.Value
  If Len(Me.ComboBox2.Value) = 1 And _
     IsNumeric(Me.ComboBox2.Value) = False Then
     W_LKEY = StrConv(Me.ComboBox2.Value, vbLowerCase)
  Else
     W_LKEY = Me.ComboBox2.Value
  End If
  W_KEYR = W_LKEY
  If W_KEYR <> "" Then
     W_ONKEYR = SET_ONKEY(SW_SHIFTR, SW_CTRLR, SW_ALTR, W_KEYR, False)
     Application.OnKey W_ONKEYR, "SHOWR_RTN"
  End If
  
  Unload Me

End Sub

Private Sub CommandButton2_Click()

  Unload Me

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm20"
Attribute VB_Base = "0{256BDDDD-1AA2-42A4-A2B1-FB5D587ABF11}{ADDB9139-D4E7-4644-A73D-D50820AD0FAE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim H As Double
Dim W As Double

Dim N As Long

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Regex game"
     Me.Label5.Caption = "Find what"
     Me.Label31.Caption = "BG image"
     Me.Label32.Caption = "FG color"
     Me.CommandButton1.Caption = "Find"
     Me.CommandButton2.Caption = "Next"
     Me.CommandButton2.Caption = "Exit"
  Else
     Me.Caption = "|fffd||fffd||fffd|K|fffd|\|fffd||fffd||fffd|Q|fffd|[|fffd||fffd|"
     Me.Label5.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.Label31.Caption = "|fffd|w|fffd|i|fffd||645c|"
     Me.Label32.Caption = "|fffd|O|fffd|i|fffd|F"
     Me.CommandButton1.Caption = "|fffd||fffd||fffd||fffd|(F)"
     Me.CommandButton2.Caption = "|fffd||fffd||fffd||fffd|(N)"
     Me.CommandButton3.Caption = "|fffd|I|fffd||fffd|(X)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.Label4.Font.Name = "Segoe UI"
        Me.Label5.Font.Name = "Segoe UI"
        Me.Label6.Font.Name = "Segoe UI"
        Me.Label7.Font.Name = "Segoe UI"
        Me.Label8.Font.Name = "Segoe UI"
        Me.Label9.Font.Name = "Segoe UI"
        Me.Label10.Font.Name = "Segoe UI"
        Me.Label11.Font.Name = "Segoe UI"
        Me.Label12.Font.Name = "Segoe UI"
        Me.Label13.Font.Name = "Segoe UI"
        Me.Label14.Font.Name = "Segoe UI"
        Me.Label15.Font.Name = "Segoe UI"
        Me.Label16.Font.Name = "Segoe UI"
        Me.Label17.Font.Name = "Segoe UI"
        Me.Label18.Font.Name = "Segoe UI"
        Me.Label19.Font.Name = "Segoe UI"
        Me.Label20.Font.Name = "Segoe UI"
        Me.Label21.Font.Name = "Segoe UI"
        Me.Label30.Font.Name = "Segoe UI"
        Me.Label31.Font.Name = "Segoe UI"
        Me.Label32.Font.Name = "Segoe UI"
        Me.Label41.Font.Name = "Segoe UI"
        Me.Label42.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
        Me.CommandButton4.Font.Name = "Segoe UI"
        Me.CommandButton5.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.Label4.Font.Name = "Meiryo UI"
        Me.Label5.Font.Name = "Meiryo UI"
        Me.Label6.Font.Name = "Meiryo UI"
        Me.Label7.Font.Name = "Meiryo UI"
        Me.Label8.Font.Name = "Meiryo UI"
        Me.Label9.Font.Name = "Meiryo UI"
        Me.Label10.Font.Name = "Meiryo UI"
        Me.Label11.Font.Name = "Meiryo UI"
        Me.Label12.Font.Name = "Meiryo UI"
        Me.Label13.Font.Name = "Meiryo UI"
        Me.Label14.Font.Name = "Meiryo UI"
        Me.Label15.Font.Name = "Meiryo UI"
        Me.Label16.Font.Name = "Meiryo UI"
        Me.Label17.Font.Name = "Meiryo UI"
        Me.Label18.Font.Name = "Meiryo UI"
        Me.Label19.Font.Name = "Meiryo UI"
        Me.Label20.Font.Name = "Meiryo UI"
        Me.Label21.Font.Name = "Meiryo UI"
        Me.Label30.Font.Name = "Meiryo UI"
        Me.Label31.Font.Name = "Meiryo UI"
        Me.Label32.Font.Name = "Meiryo UI"
        Me.Label41.Font.Name = "Meiryo UI"
        Me.Label42.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
        Me.CommandButton4.Font.Name = "Meiryo UI"
        Me.CommandButton5.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.Label4.Font.Name = "Tahoma"
        Me.Label5.Font.Name = "Tahoma"
        Me.Label6.Font.Name = "Tahoma"
        Me.Label7.Font.Name = "Tahoma"
        Me.Label8.Font.Name = "Tahoma"
        Me.Label9.Font.Name = "Tahoma"
        Me.Label10.Font.Name = "Tahoma"
        Me.Label11.Font.Name = "Tahoma"
        Me.Label12.Font.Name = "Tahoma"
        Me.Label13.Font.Name = "Tahoma"
        Me.Label14.Font.Name = "Tahoma"
        Me.Label15.Font.Name = "Tahoma"
        Me.Label16.Font.Name = "Tahoma"
        Me.Label17.Font.Name = "Tahoma"
        Me.Label18.Font.Name = "Tahoma"
        Me.Label19.Font.Name = "Tahoma"
        Me.Label20.Font.Name = "Tahoma"
        Me.Label21.Font.Name = "Tahoma"
        Me.Label30.Font.Name = "Tahoma"
        Me.Label31.Font.Name = "Tahoma"
        Me.Label32.Font.Name = "Tahoma"
        Me.Label41.Font.Name = "Tahoma"
        Me.Label42.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
        Me.CommandButton4.Font.Name = "Tahoma"
        Me.CommandButton5.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.Label4.Font.Name = "MS UI Gothic"
        Me.Label5.Font.Name = "MS UI Gothic"
        Me.Label6.Font.Name = "MS UI Gothic"
        Me.Label7.Font.Name = "MS UI Gothic"
        Me.Label8.Font.Name = "MS UI Gothic"
        Me.Label9.Font.Name = "MS UI Gothic"
        Me.Label10.Font.Name = "MS UI Gothic"
        Me.Label11.Font.Name = "MS UI Gothic"
        Me.Label12.Font.Name = "MS UI Gothic"
        Me.Label13.Font.Name = "MS UI Gothic"
        Me.Label14.Font.Name = "MS UI Gothic"
        Me.Label15.Font.Name = "MS UI Gothic"
        Me.Label16.Font.Name = "MS UI Gothic"
        Me.Label17.Font.Name = "MS UI Gothic"
        Me.Label18.Font.Name = "MS UI Gothic"
        Me.Label19.Font.Name = "MS UI Gothic"
        Me.Label20.Font.Name = "MS UI Gothic"
        Me.Label21.Font.Name = "MS UI Gothic"
        Me.Label30.Font.Name = "MS UI Gothic"
        Me.Label31.Font.Name = "MS UI Gothic"
        Me.Label32.Font.Name = "MS UI Gothic"
        Me.Label41.Font.Name = "MS UI Gothic"
        Me.Label42.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton4.Font.Name = "MS UI Gothic"
        Me.CommandButton5.Font.Name = "MS UI Gothic"
     End If
  End If

  If SW_ENGLISH = True Then
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox1.Font.Size = 8
  Else
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox1.Font.Size = 9
  End If

  Me.TextBox2.Value = W_BGIMG
  On Error Resume Next
  Me.Label32.ForeColor = W_FGCLR
  On Error GoTo 0
  Me.CommandButton5.Tag = W_FGTAG

  If W_HIS > 30000 Then
     Me.Label4.Caption = W_HIS
     Me.Label31.Visible = True
     Me.Label32.Visible = True
     Me.TextBox2.Visible = True
     Me.CommandButton4.Visible = True
     Me.CommandButton5.Visible = True
  End If

  N = 1
  Call SETQ(N)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub CommandButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton5)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton5_Enter()

  Me.CommandButton5.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton5.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 0.9
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 0.9
        DoEvents
     Loop
  End If

End Sub

Private Sub SETQ(ByVal N As Long)

  Dim W_Q As String
  Dim W_MU As String
  Dim AR_Q As Variant
  Dim AR_MU As Variant
  Dim AR_QWK As Variant
  Dim AR_MUWK As Variant

  
  W_Q = "ABC,ACC,ADC,AEC,,,," & vbCrLf & _
        "A21,A34,A56,BA21,A34Z,,," & vbCrLf & _
        "ABC,ABBC,ABBBC,ABBBBC,AC,,," & vbCrLf & _
        "1,23,406,789,890,01,001,023" & vbCrLf & _
        "T001.xls,T003.csv,T006.xls,T001-xls,,,," & vbCrLf & _
        "ABZAB,WXYZWXY,LM9ZLM9Z,1Q2W3E,A1234Z,,," & vbCrLf & _
        "12ABC21,345ASC453,6789AOC7896,XYZAWCYZX,035350,,," & vbCrLf & _
        "!=,+64,9 = (1+2) * 3,300%,Z=3XY,,," & vbCrLf & _
        "ASX27,BASDZWD,92AS64#B9,ASRFVBGT5,ASX15,BASDX15,92AS64X15," & vbCrLf & _
        "A21C1Z,1Z,AC3421Z,XXX1ZYYY,#54Z41ZX9Q,A1C1Z,1Z9Y,A#C1Z9C"

  W_MU = "M,M,M,U,,,," & vbCrLf & _
         "M,M,M,U,U,,," & vbCrLf & _
         "M,M,M,U,U,,," & vbCrLf & _
         "M,M,M,M,M,U,U,U" & vbCrLf & _
         "M,M,M,U,,,," & vbCrLf & _
         "M,M,M,U,U,,," & vbCrLf & _
         "M,M,M,U,U,,," & vbCrLf & _
         "M,M,M,M,U,,," & vbCrLf & _
         "M,M,M,M,U,U,U," & vbCrLf & _
         "M,M,M,M,M,U,U,U"

  AR_Q = Split(W_Q, vbCrLf)
  AR_MU = Split(W_MU, vbCrLf)

  AR_QWK = Split(AR_Q(N - 1), ",")
  AR_MUWK = Split(AR_MU(N - 1), ",")

  Me.Label30.Visible = False
  Me.Label30.Caption = ""
  
  Me.Label14.Visible = False
  Me.Label15.Visible = False
  Me.Label16.Visible = False
  Me.Label17.Visible = False
  Me.Label18.Visible = False
  Me.Label19.Visible = False
  Me.Label20.Visible = False
  Me.Label21.Visible = False
  Me.Label14.Caption = ""
  Me.Label15.Caption = ""
  Me.Label16.Caption = ""
  Me.Label17.Caption = ""
  Me.Label18.Caption = ""
  Me.Label19.Caption = ""
  Me.Label20.Caption = ""
  Me.Label21.Caption = ""
  
  Me.Label22.Caption = AR_QWK(0)
  Me.Label23.Caption = AR_QWK(1)
  Me.Label24.Caption = AR_QWK(2)
  Me.Label25.Caption = AR_QWK(3)
  Me.Label26.Caption = AR_QWK(4)
  Me.Label27.Caption = AR_QWK(5)
  Me.Label28.Caption = AR_QWK(6)
  Me.Label29.Caption = AR_QWK(7)
  
  Me.Label33.Caption = ""
  Me.Label34.Caption = ""
  Me.Label35.Caption = ""
  Me.Label36.Caption = ""
  Me.Label37.Caption = ""
  Me.Label38.Caption = ""
  Me.Label39.Caption = ""
  Me.Label40.Caption = ""
  
  Me.Label42.Caption = N & " / 10"
  
  Me.Label6.Caption = ""
  Select Case AR_MUWK(0)
  Case "M"
     Me.Label6.Caption = "match"
     Me.Label6.ForeColor = &HFF0000
  Case "U"
     Me.Label6.Caption = "unmatch"
     Me.Label6.ForeColor = &HFF&
  End Select
  Me.Label7.Caption = ""
  Select Case AR_MUWK(1)
  Case "M"
     Me.Label7.Caption = "match"
     Me.Label7.ForeColor = &HFF0000
  Case "U"
     Me.Label7.Caption = "unmatch"
     Me.Label7.ForeColor = &HFF&
  End Select
  Me.Label8.Caption = ""
  Select Case AR_MUWK(2)
  Case "M"
     Me.Label8.Caption = "match"
     Me.Label8.ForeColor = &HFF0000
  Case "U"
     Me.Label8.Caption = "unmatch"
     Me.Label8.ForeColor = &HFF&
  End Select
  Me.Label9.Caption = ""
  Select Case AR_MUWK(3)
  Case "M"
     Me.Label9.Caption = "match"
     Me.Label9.ForeColor = &HFF0000
  Case "U"
     Me.Label9.Caption = "unmatch"
     Me.Label9.ForeColor = &HFF&
  End Select
  Me.Label10.Caption = ""
  Select Case AR_MUWK(4)
  Case "M"
     Me.Label10.Caption = "match"
     Me.Label10.ForeColor = &HFF0000
  Case "U"
     Me.Label10.Caption = "unmatch"
     Me.Label10.ForeColor = &HFF&
  End Select
  Me.Label11.Caption = ""
  Select Case AR_MUWK(5)
  Case "M"
     Me.Label11.Caption = "match"
     Me.Label11.ForeColor = &HFF0000
  Case "U"
     Me.Label11.Caption = "unmatch"
     Me.Label11.ForeColor = &HFF&
  End Select
  Me.Label12.Caption = ""
  Select Case AR_MUWK(6)
  Case "M"
     Me.Label12.Caption = "match"
     Me.Label12.ForeColor = &HFF0000
  Case "U"
     Me.Label12.Caption = "unmatch"
     Me.Label12.ForeColor = &HFF&
  End Select
  Me.Label13.Caption = ""
  Select Case AR_MUWK(7)
  Case "M"
     Me.Label13.Caption = "match"
     Me.Label13.ForeColor = &HFF0000
  Case "U"
     Me.Label13.Caption = "unmatch"
     Me.Label13.ForeColor = &HFF&
  End Select

End Sub

Private Sub CommandButton1_Click()

  Dim RE As Object
  Dim SW_OK As Boolean
  Dim W_HITC As Long
  Dim W_MAXC As Long
  Dim W_N As Long
  Dim W_PT As Long

  On Error GoTo LABEL_REP
  
  W_EVAR = ""
  W_CLKBTN = "Game"
  
  If Me.TextBox1.Value = "" Then
     Exit Sub
  End If
  
  Set RE = CreateObject("VBScript.RegExp")
  With RE
     .Pattern = Me.TextBox1.Value
     .IgnoreCase = False
     .Global = False
  End With

  On Error GoTo LABEL_ERR
  RE.Test (" ")
  On Error GoTo LABEL_REP

  Me.CommandButton1.Enabled = False
  SW_OK = True
  W_HITC = 0
  W_MAXC = 0
  W_N = 0
  W_PT = 0
  
  Call MU_JUDGE(Me.Label6.Caption, Me.Label22, Me.Label33, Me.Label14, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label7.Caption, Me.Label23, Me.Label34, Me.Label15, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label8.Caption, Me.Label24, Me.Label35, Me.Label16, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label9.Caption, Me.Label25, Me.Label36, Me.Label17, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label10.Caption, Me.Label26, Me.Label37, Me.Label18, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label11.Caption, Me.Label27, Me.Label38, Me.Label19, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label12.Caption, Me.Label28, Me.Label39, Me.Label20, RE, SW_OK, W_HITC, W_MAXC, W_N)
  Call MU_JUDGE(Me.Label13.Caption, Me.Label29, Me.Label40, Me.Label21, RE, SW_OK, W_HITC, W_MAXC, W_N)

  If SW_OK = True Then
     If Len(Me.TextBox1.Value) >= W_MAXC + W_N - 1 Then
        W_PT = 100
     ElseIf InStr(Me.TextBox1.Value, "[^") > 0 Then
        W_PT = 500
     Else
        W_PT = (Int(20 * W_HITC / W_MAXC) + (W_MAXC + W_N - 1 - Len(Me.TextBox1.Value))) * 100
     End If
     Me.Label30.Caption = "+" & W_PT
     Me.Label30.Visible = True
     Me.Label3.Caption = CLng(Me.Label3.Caption) + W_PT
     If CLng(Me.Label4.Caption) < CLng(Me.Label3.Caption) Then
        Me.Label4.Caption = Me.Label3.Caption
     End If
  End If

  If N >= 10 Then
     If CLng(Me.Label3.Caption) > 30000 Then
        Me.Label41.Caption = "Marvelous"
        Me.Label41.Visible = True
     ElseIf CLng(Me.Label3.Caption) > 27000 Then
        Me.Label41.Caption = "Fantastic"
        Me.Label41.Visible = True
     ElseIf CLng(Me.Label3.Caption) > 25000 Then
        Me.Label41.Caption = "Wonderful"
        Me.Label41.Visible = True
     ElseIf CLng(Me.Label3.Caption) > 23000 Then
        Me.Label41.Caption = "Awesome"
        Me.Label41.Visible = True
     ElseIf CLng(Me.Label3.Caption) > 21000 Then
        Me.Label41.Caption = "Great"
        Me.Label41.Visible = True
     ElseIf CLng(Me.Label3.Caption) >= 20000 Then
        Me.Label41.Caption = "Good"
        Me.Label41.Visible = True
     End If
  
     If CLng(Me.Label3.Caption) > 30000 Then
        Me.Label31.Visible = True
        Me.Label32.Visible = True
        Me.TextBox2.Visible = True
        Me.CommandButton4.Visible = True
        Me.CommandButton5.Visible = True
     End If
  End If

  Exit Sub

LABEL_ERR:
  On Error GoTo 0
  Set RE = Nothing
  
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Error exists in find pattern. Check.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||24c||fffd||80aa||fffd||fffd||fffd||fffd||60a4||fffd||142||fffd||fffd|B|fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
  End If
  
  Me.TextBox1.SetFocus
  W_CLKBTN = ""
  Exit Sub

LABEL_REP:
  Call REPORT_RTN
  W_CLKBTN = ""

End Sub

Private Sub MU_JUDGE(ByVal MU As String, L_TRGT As Object, L_HIT As Object, L_RSLT As Object, RE As Object, SW_OK As Boolean, W_HITC As Long, W_MAXC As Long, W_N As Long)

  Dim MATCHES As Object
  Dim W_FI As Long
  Dim W_LN As Long
  Dim W_VL As String
  Dim W_STR As String
  
  
  If MU = "" Then
     Exit Sub
  End If

  If MU = "match" Then
     W_MAXC = W_MAXC + Len(L_TRGT.Caption)
     W_N = W_N + 1
  End If
  
  If RE.Test(L_TRGT.Caption) = True Then
     If MU = "match" Then
        L_RSLT.Caption = "OK"
        L_RSLT.ForeColor = &HFF0000
     Else
        L_RSLT.Caption = "NG"
        L_RSLT.ForeColor = &HFF&
        SW_OK = False
     End If
     Set MATCHES = RE.Execute(L_TRGT.Caption)
     W_FI = MATCHES.Item(0).FirstIndex
     W_LN = MATCHES.Item(0).Length
     Set MATCHES = Nothing
     If MU = "match" Then
        W_HITC = W_HITC + W_LN
     End If
     If W_LN > 0 Then
        W_VL = Mid$(L_TRGT.Caption, W_FI + 1, W_LN)
        W_STR = L_TRGT.Caption
        Mid$(W_STR, W_FI + 1, W_LN) = String$(W_LN, " ")
        L_TRGT.Caption = W_STR
        If W_FI > 0 Then
           L_HIT.Caption = String(W_FI, " ")
        End If
        L_HIT.Caption = L_HIT.Caption & W_VL
     End If
  Else
     If MU = "match" Then
        L_RSLT.Caption = "NG"
        L_RSLT.ForeColor = &HFF&
        SW_OK = False
     Else
        L_RSLT.Caption = "OK"
        L_RSLT.ForeColor = &HFF0000
     End If
  End If

  Me.TextBox1.Locked = True
  L_RSLT.Visible = True

End Sub

Private Sub CommandButton2_Click()

  N = N + 1
  Call SETQ(N)

  Me.CommandButton1.Enabled = True
  If N >= 10 Then
     Me.CommandButton2.Enabled = False
  End If

  Me.TextBox1.Locked = False
  Me.TextBox1.Value = ""
  Me.TextBox1.SetFocus

End Sub

Private Sub CommandButton3_Click()
'|fffd|I|fffd||fffd|

  W_BGIMG = Me.TextBox2.Value
  W_FGCLR = Me.Label32.ForeColor
  W_FGTAG = Me.CommandButton5.Tag
  Call BGCLR_SET
    
  Unload Me

End Sub

Private Sub CommandButton4_Click()
'|fffd|w|fffd|i|fffd||645c||fffd|I|fffd||fffd|

  Dim W_IMGF As Variant
   
  '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O
  If UserForm1.CheckBox49.Value = True Then
     W_IMGF = Application.GetOpenFilename("All Files (*.*), *.*", , "Select background image file")
  Else
     W_IMGF = Application.GetOpenFilename("|fffd||fffd||fffd||5c2||102||303|t|fffd|@|fffd|C|fffd||fffd| (*.*), *.*", , "|fffd|w|fffd|i|fffd||645c||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e|w|fffd||fffd|")
  End If
  If VarType(W_IMGF) = vbBoolean Then
     Exit Sub
  End If
      
  Me.TextBox2.Value = W_IMGF

End Sub

Private Sub CommandButton5_Click()
'|fffd|O|fffd|i|fffd|F|fffd|I|fffd||fffd|

  Set W_LABEL = Me.Label32
  Set W_BUTTON = Me.CommandButton5
  SW_BGCLR = 0
  UserForm4.Show

End Sub

Private Sub TextBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox1
     Application.CommandBars("EREPU11").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox1_Enter()

  Me.TextBox1.BackColor = &HC0FFFF

End Sub

Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox1.BackColor = &H80000005

End Sub

Private Sub TextBox2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox2
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox2_Enter()

  Me.TextBox2.BackColor = &HC0FFFF

End Sub

Private Sub TextBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox2.BackColor = &H80000005

End Sub

Private Sub UserForm_Terminate()

  If W_HIS < CLng(Me.Label3.Caption) Then
     W_HIS = CLng(Me.Label3.Caption)
  End If

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm21"
Attribute VB_Base = "0{63C75920-E95C-4623-BF8F-5E203E47A85B}{508DD9A6-EDAE-4CEB-B731-81D433D6E0E1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Base 1

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Send message"
     Me.Label1.Caption = "Kind of message"
     Me.Label2.Caption = "Name"
     Me.Label3.Caption = "Message"
     Me.OptionButton1.Caption = "Message"
     Me.OptionButton2.Caption = "Demand"
     Me.OptionButton3.Caption = "Bug report"
     Me.CommandButton1.Caption = "Send"
  Else
     Me.Caption = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|M"
     Me.Label1.Caption = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|"
     Me.Label2.Caption = "|fffd||fffd||fffd|O(N)"
     Me.Label3.Caption = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W(M)"
     Me.OptionButton1.Caption = "|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W"
     Me.OptionButton2.Caption = "|fffd|v|fffd|]"
     Me.OptionButton3.Caption = "|fffd|o|fffd|O|fffd||fffd|"
     Me.CommandButton1.Caption = "|fffd||fffd||fffd|M(S)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.OptionButton1.Font.Name = "Segoe UI"
        Me.OptionButton2.Font.Name = "Segoe UI"
        Me.OptionButton3.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.OptionButton1.Font.Name = "Meiryo UI"
        Me.OptionButton2.Font.Name = "Meiryo UI"
        Me.OptionButton3.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.OptionButton1.Font.Name = "Tahoma"
        Me.OptionButton2.Font.Name = "Tahoma"
        Me.OptionButton3.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.OptionButton1.Font.Name = "MS UI Gothic"
        Me.OptionButton2.Font.Name = "MS UI Gothic"
        Me.OptionButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
     End If
  End If
  
  If SW_ENGLISH = True Then
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox2.Font.Name = "Courier New"
     Me.TextBox1.Font.Size = 8
     Me.TextBox2.Font.Size = 8
  Else
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox1.Font.Size = 9
     Me.TextBox2.Font.Size = 9
  End If
  
  Me.OptionButton1.Value = True
  Me.OptionButton2.Value = False
  Me.OptionButton3.Value = False

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub OptionButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton1)

End Sub

Private Sub OptionButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton2)

End Sub

Private Sub OptionButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.OptionButton3)

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.5
        DoEvents
     Loop
  End If

End Sub

Private Sub TextBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox1
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox1_Enter()

  Me.TextBox1.BackColor = &HC0FFFF

End Sub

Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox1.BackColor = &H80000005

End Sub

Private Sub TextBox2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox2
     Application.CommandBars("EREPU3").ShowPopup
     Set W_BOX = Nothing
  End If

End Sub

Private Sub TextBox2_Enter()

  Me.TextBox2.BackColor = &HC0FFFF

End Sub

Private Sub TextBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox2.BackColor = &H80000005

End Sub

Private Sub CommandButton1_Click()
'|fffd||fffd||fffd|M


  If Me.TextBox2.Value = "" Then
     Exit Sub
  End If

  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Send.", vbOKCancel)
  Else
     W_RET = MsgBox("|fffd||fffd||fffd|M|fffd||fffd||fffd||702||fffd||fffd|B", vbOKCancel)
  End If

  If W_RET = vbCancel Then
     Exit Sub
  End If

  Call REPORTM_RTN

End Sub

Private Sub UserForm_Terminate()

  W_FCLBL = ""
  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{972D5DE3-207F-46E8-8198-EAF4886CED56}{9B304777-666D-4B0B-9AF0-05541B762C5C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Comfirm replace"
     Me.Label1.Caption = "Replace?"
     Me.CommandButton1.Caption = "Yes"
     Me.CommandButton2.Caption = "No"
     Me.CommandButton3.Caption = "No confirm"
     Me.CommandButton4.Caption = "Cancel"
  Else
     Me.Caption = "|fffd|u|fffd||fffd||fffd|m|fffd|F"
     Me.Label1.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H"
     Me.CommandButton1.Caption = "|fffd||342||fffd|(Y)"
     Me.CommandButton2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd|(N)"
     Me.CommandButton3.Caption = "|fffd|m|fffd|F|fffd|s|fffd|v"
     Me.CommandButton4.Caption = "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
        Me.CommandButton4.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
        Me.CommandButton4.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
        Me.CommandButton4.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton4.Font.Name = "MS UI Gothic"
     End If
  End If
  
  Me.Tag = UserForm1.CheckBox12.Tag
  UserForm1.CheckBox12.Tag = ""
  If Me.Tag = "1" Then
     Me.CommandButton3.Enabled = False
     Me.CommandButton4.Enabled = False
     Me.CommandButton2.Cancel = True
     Me.CommandButton4.Cancel = False
  Else
     Me.CommandButton3.Enabled = True
     Me.CommandButton4.Enabled = True
     Me.CommandButton2.Cancel = False
     Me.CommandButton4.Cancel = True
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton1_Click()
'|fffd||342||fffd|
  
  W_RET = vbYes
  Unload Me

End Sub

Private Sub CommandButton2_Click()
'|fffd||fffd||fffd||fffd||fffd||fffd|

  W_RET = vbNo
  Unload Me

End Sub

Private Sub CommandButton3_Click()
'|fffd|m|fffd|F|fffd|s|fffd|v
  
  W_RET = vbYes
  W_ASK = False
  Unload Me

End Sub

Private Sub CommandButton4_Click()
'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|

  W_RET = vbCancel
  Unload Me

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If CloseMode = 0 Then
     Select Case Me.Tag
     Case "1"
        W_RET = vbNo
     Case "2"
        W_RET = vbCancel
     End Select
  End If

End Sub
Attribute VB_Name = "UserForm4"
Attribute VB_Base = "0{0C34ED01-A3EE-44D1-94AE-DD6728AAAB95}{F838AD2C-B76B-4118-BA63-7A9601C4EE30}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

Dim W_SELCLR As Object

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

  Dim AR_LBL As Variant
  Dim I As Long
  Dim SW_LNG As Boolean
  Dim SW_HIT As Boolean


  '|fffd||fffd||fffd||fffd||752||fffd|
  If SW_CLCL > 0 Then
     SW_LNG = SW_ENGLISH
  Else
     SW_LNG = UserForm1.CheckBox49.Value
  End If
   
  If SW_LNG = True Then
     Me.Caption = "Color select"
     If SW_CLCL = 2 Then
        Me.Label1.Caption = "No Fill"
     Else
        Me.Label1.Caption = "Automatic"
     End If
     Me.Label2.ControlTipText = "Black"
     Me.Label3.ControlTipText = "Dark Red"
     Me.Label4.ControlTipText = "Red"
     Me.Label5.ControlTipText = "Pink"
     Me.Label6.ControlTipText = "Rose"
     Me.Label7.ControlTipText = "Brown"
     Me.Label8.ControlTipText = "Orange"
     Me.Label9.ControlTipText = "Light Orange"
     Me.Label10.ControlTipText = "Gold"
     Me.Label11.ControlTipText = "Tan"
     Me.Label12.ControlTipText = "Olive Green"
     Me.Label13.ControlTipText = "Dark Yellow"
     Me.Label14.ControlTipText = "Lime"
     Me.Label15.ControlTipText = "Yellow"
     Me.Label16.ControlTipText = "Light Yellow"
     Me.Label17.ControlTipText = "Dark Green"
     Me.Label18.ControlTipText = "Green"
     Me.Label19.ControlTipText = "Sea Green"
     Me.Label20.ControlTipText = "Bright Green"
     Me.Label21.ControlTipText = "Light Grren"
     Me.Label22.ControlTipText = "Dark Teal"
     Me.Label23.ControlTipText = "Teal"
     Me.Label24.ControlTipText = "Aqua"
     Me.Label25.ControlTipText = "Turquoise"
     Me.Label26.ControlTipText = "Light Turquoise"
     Me.Label27.ControlTipText = "Dark Blue"
     Me.Label28.ControlTipText = "Blue"
     Me.Label29.ControlTipText = "Light Blue"
     Me.Label30.ControlTipText = "Sky Blue"
     Me.Label31.ControlTipText = "Pale Blue"
     Me.Label32.ControlTipText = "Indigo"
     Me.Label33.ControlTipText = "Blue-Gray"
     Me.Label34.ControlTipText = "Violet"
     Me.Label35.ControlTipText = "Plum"
     Me.Label36.ControlTipText = "Lavender"
     Me.Label37.ControlTipText = "Gray-80%"
     Me.Label38.ControlTipText = "Gray-50%"
     Me.Label39.ControlTipText = "Gray-40%"
     Me.Label40.ControlTipText = "Gray-25%"
     Me.Label41.ControlTipText = "White"
  Else
     Me.Caption = "|fffd|F|fffd||311|I|fffd||fffd|"
     If SW_CLCL = 2 Then
        Me.Label1.Caption = "|fffd|h|fffd||fffd||82||502||fffd||fffd||202||fffd|"
     Else
        Me.Label1.Caption = "|fffd||fffd||fffd||fffd|"
     End If
     Me.Label2.ControlTipText = "|fffd||fffd|"
     Me.Label3.ControlTipText = "|fffd|Z|fffd||fffd||fffd||fffd|"
     Me.Label4.ControlTipText = "|fffd||fffd|"
     Me.Label5.ControlTipText = "|fffd|s|fffd||fffd||fffd|N"
     Me.Label6.ControlTipText = "|fffd||fffd||fffd|[|fffd|Y"
     Me.Label7.ControlTipText = "|fffd||fffd|"
     Me.Label8.ControlTipText = "|fffd|I|fffd||fffd||fffd||fffd||fffd|W"
     Me.Label9.ControlTipText = "|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|W"
     Me.Label10.ControlTipText = "|fffd|S|fffd|[|fffd||fffd||fffd|h"
     Me.Label11.ControlTipText = "|fffd|x|fffd|[|fffd|W|fffd||fffd|"
     Me.Label12.ControlTipText = "|fffd|I|fffd||fffd||fffd|[|fffd|u"
     Me.Label13.ControlTipText = "|fffd|Z|fffd||fffd||fffd||fffd|"
     Me.Label14.ControlTipText = "|fffd||fffd||fffd|C|fffd||fffd|"
     Me.Label15.ControlTipText = "|fffd||fffd|"
     Me.Label16.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label17.ControlTipText = "|fffd|Z|fffd||fffd||fffd||fffd|"
     Me.Label18.ControlTipText = "|fffd||fffd|"
     Me.Label19.ControlTipText = "|fffd|V|fffd|[|fffd|O|fffd||fffd||fffd|[|fffd||fffd|"
     Me.Label20.ControlTipText = "|fffd||fffd||fffd||90a2||fffd||fffd|"
     Me.Label21.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label22.ControlTipText = "|fffd|Z|fffd||fffd||fffd||97||fffd|"
     Me.Label23.ControlTipText = "|fffd||97||fffd|"
     Me.Label24.ControlTipText = "|fffd|A|fffd|N|fffd|A"
     Me.Label25.ControlTipText = "|fffd||fffd||fffd|F"
     Me.Label26.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F"
     Me.Label27.ControlTipText = "|fffd|Z|fffd||fffd||fffd||fffd|"
     Me.Label28.ControlTipText = "|fffd||fffd|"
     Me.Label29.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label30.ControlTipText = "|fffd|X|fffd|J|fffd|C|fffd|u|fffd||fffd||fffd|["
     Me.Label31.ControlTipText = "|fffd|y|fffd|[|fffd||fffd||fffd|u|fffd||fffd||fffd|["
     Me.Label32.ControlTipText = "|fffd|C|fffd||fffd||fffd|f|fffd|B|fffd|S"
     Me.Label33.ControlTipText = "|fffd|u|fffd||fffd||fffd|[|fffd|O|fffd||fffd||fffd|["
     Me.Label34.ControlTipText = "|fffd||fffd|"
     Me.Label35.ControlTipText = "|fffd|v|fffd||fffd||fffd||fffd|"
     Me.Label36.ControlTipText = "|fffd||fffd||fffd|x|fffd||fffd||fffd|_|fffd|["
     Me.Label37.ControlTipText = "80% |fffd|D|fffd|F"
     Me.Label38.ControlTipText = "50% |fffd|D|fffd|F"
     Me.Label39.ControlTipText = "40% |fffd|D|fffd|F"
     Me.Label40.ControlTipText = "25% |fffd|D|fffd|F"
     Me.Label41.ControlTipText = "|fffd||fffd|"
  End If

  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
     End If
  End If
   
  If SW_CLCL > 0 Then
     Exit Sub
  End If
   
  With Me
     AR_LBL = Array(.Label1, .Label2, .Label3, .Label4, .Label5, .Label6, .Label7, .Label8, .Label9, Label10, _
                    .Label11, .Label12, .Label13, .Label14, .Label15, .Label16, .Label17, .Label18, .Label19, Label20, _
                    .Label21, .Label22, .Label23, .Label24, .Label25, .Label26, .Label27, .Label28, .Label29, Label30, _
                    .Label31, .Label32, .Label33, .Label34, .Label35, .Label36, .Label37, .Label38, .Label39, Label40, _
                    .Label41)
  End With
  SW_HIT = False
  For I = 0 To UBound(AR_LBL)
     AR_LBL(I).SpecialEffect = fmSpecialEffectRaised
     If W_BUTTON Is Nothing Then
     Else
        If AR_LBL(I).Tag = W_BUTTON.Tag Then
           SW_HIT = True
           AR_LBL(I).SpecialEffect = fmSpecialEffectSunken
        End If
     End If
  Next I

  If SW_HIT = False Then
     For I = 0 To UBound(AR_LBL)
        If W_LABEL Is Nothing Then
        Else
           If AR_LBL(I).BackColor = W_LABEL.ForeColor Then
              AR_LBL(I).SpecialEffect = fmSpecialEffectSunken
           End If
        End If
     Next I
  End If

 If UserForm1.CheckBox86.Value = False Then
    H = Me.Height
    W = Me.Width
    Me.Height = 0
    Me.Width = 0
 End If

End Sub

Private Sub UserForm_Activate()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If
  
  
  If SW_CLCL > 0 Then
     Exit Sub
  End If
  
  If Val(Application.Version) >= 15 Then
     If W_TMIDUF <> 0 Then
     Call KILLTM_UF
     hwnd = FindWindow(vbNullString, UserForm1.Caption)
     Call SetWindowPos(hwnd, -2, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd||fffd|
     Call SetWindowPos(hwnd, 1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||fffd|
     
     hwnd = FindWindow(vbNullString, Me.Caption)
     Call SetWindowPos(hwnd, -1, 0, 0, 0, 0, &H40 Or &H2 Or &H1) '|fffd||fffd||24e||fffd|O
     End If
  End If
  
  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 2
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 2.5
        End If
        Me.Top = Me.Top - 1
        Me.Left = Me.Left - 0.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  
  If SW_CLCL > 0 Then
     Exit Sub
  End If
  
  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 2
        Me.Width = Me.Width - 2.5
        Me.Top = Me.Top + 1
        Me.Left = Me.Left + 0.5
        DoEvents
     Loop
  End If

End Sub

Private Sub Label1_Click()

  Select Case SW_CLCL
  Case 0
     W_BUTTON.Tag = Me.Label1.Tag
     If SW_BGCLR = 0 Then
        W_LABEL.ForeColor = Me.Label1.ForeColor
     ElseIf SW_BGCLR = 1 Then
        W_LABEL.BackColor = Me.Label1.BackColor
     Else
        W_BGCLR = Me.Label1.BackColor
        W_BGCLRL = "1"
        Call BGCLR_SET
     End If
     Unload Me
  Case 1
     On Error Resume Next
     Selection.Font.ColorIndex = 1
     On Error GoTo 0
  Case 2
     On Error Resume Next
     Selection.Interior.ColorIndex = xlNone
     On Error GoTo 0
  End Select

End Sub

Private Sub Label2_Click()

  Set W_SELCLR = Me.Label2
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label3_Click()

  Set W_SELCLR = Me.Label3
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label4_Click()

  Set W_SELCLR = Me.Label4
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label5_Click()

  Set W_SELCLR = Me.Label5
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label6_Click()

  Set W_SELCLR = Me.Label6
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label7_Click()

  Set W_SELCLR = Me.Label7
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label8_Click()

  Set W_SELCLR = Me.Label8
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label9_Click()

  Set W_SELCLR = Me.Label9
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label10_Click()

  Set W_SELCLR = Me.Label10
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label11_Click()

  Set W_SELCLR = Me.Label11
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label12_Click()

  Set W_SELCLR = Me.Label12
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label13_Click()

  Set W_SELCLR = Me.Label13
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label14_Click()

  Set W_SELCLR = Me.Label14
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label15_Click()

  Set W_SELCLR = Me.Label15
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label16_Click()

  Set W_SELCLR = Me.Label16
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label17_Click()

  Set W_SELCLR = Me.Label17
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label18_Click()

  Set W_SELCLR = Me.Label18
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label19_Click()

  Set W_SELCLR = Me.Label19
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label20_Click()

  Set W_SELCLR = Me.Label20
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label21_Click()

  Set W_SELCLR = Me.Label21
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label22_Click()

  Set W_SELCLR = Me.Label22
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label23_Click()

  Set W_SELCLR = Me.Label23
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label24_Click()

  Set W_SELCLR = Me.Label24
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label25_Click()

  Set W_SELCLR = Me.Label25
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label26_Click()

  Set W_SELCLR = Me.Label26
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label27_Click()

  Set W_SELCLR = Me.Label27
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label28_Click()

  Set W_SELCLR = Me.Label28
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label29_Click()

  Set W_SELCLR = Me.Label29
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label30_Click()

  Set W_SELCLR = Me.Label30
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label31_Click()

  Set W_SELCLR = Me.Label31
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label32_Click()

  Set W_SELCLR = Me.Label32
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label33_Click()

  Set W_SELCLR = Me.Label33
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label34_Click()

  Set W_SELCLR = Me.Label34
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label35_Click()

  Set W_SELCLR = Me.Label35
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label36_Click()

  Set W_SELCLR = Me.Label36
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label37_Click()

  Set W_SELCLR = Me.Label37
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label38_Click()

  Set W_SELCLR = Me.Label38
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label39_Click()

  Set W_SELCLR = Me.Label39
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label40_Click()

  Set W_SELCLR = Me.Label40
  Call CLR_SEL_RTN
   
End Sub

Private Sub Label41_Click()

  Set W_SELCLR = Me.Label41
  Call CLR_SEL_RTN
   
End Sub

Private Sub CLR_SEL_RTN()

  Select Case SW_CLCL
  Case 0
     W_BUTTON.Tag = W_SELCLR.Tag
     If SW_BGCLR = 0 Then
        W_LABEL.ForeColor = W_SELCLR.BackColor
     ElseIf SW_BGCLR = 1 Then
        W_LABEL.BackColor = W_SELCLR.BackColor
     Else
        W_BGCLR = W_SELCLR.BackColor
        W_BGCLRL = Right$(W_SELCLR.Name, Len(W_SELCLR.Name) - 5)
        Call BGCLR_SET
     End If
     Unload Me
  Case 1
     On Error Resume Next
     Selection.Font.ColorIndex = CLng(W_SELCLR.Tag)
     On Error GoTo 0
  Case 2
     On Error Resume Next
     Selection.Interior.ColorIndex = CLng(W_SELCLR.Tag)
     On Error GoTo 0
  End Select

End Sub

Private Sub UserForm_Terminate()

  If SW_CLCL > 0 Then
     SW_CLCL = 0
  Else
     Unload UserForm15
  End If

End Sub
Attribute VB_Name = "UserForm5"
Attribute VB_Base = "0{512ADCE9-8EF9-41AD-AC31-FC38F6B72B86}{5EEBE883-9EAA-42EF-A0D6-EA130F2C0EAB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'|fffd|L|fffd|[|fffd||fffd||fffd|
#If Win64 Then
Private Declare PtrSafe Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Integer
#Else
Private Declare Function GetAsyncKeyState Lib "user32.dll" (ByVal vKey As Long) As Long
#End If
Private Const VK_CONVERT = &H1C

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

   '|fffd||fffd||fffd||fffd||752||fffd|
   If UserForm1.CheckBox49.Value = True Then
      If W_PAGEN = "Page1" Then
         Me.Caption = "Save find patterns"
      Else
         Me.Caption = "Save replace patterns"
      End If
      Me.CommandButton1.Caption = "Save"
      Me.CommandButton2.Caption = "Input"
      Me.CommandButton3.Caption = "Delete"
      Me.CommandButton4.Caption = "Save"
      Me.CommandButton5.Caption = "Input"
      Me.CommandButton6.Caption = "Delete"
      Me.CommandButton7.Caption = "Save"
      Me.CommandButton8.Caption = "Input"
      Me.CommandButton9.Caption = "Delete"
      Me.CommandButton10.Caption = "Save"
      Me.CommandButton11.Caption = "Input"
      Me.CommandButton12.Caption = "Delete"
      Me.CommandButton13.Caption = "Save"
      Me.CommandButton14.Caption = "Input"
      Me.CommandButton15.Caption = "Delete"
      Me.CommandButton16.Caption = "Save"
      Me.CommandButton17.Caption = "Input"
      Me.CommandButton18.Caption = "Delete"
      Me.CommandButton19.Caption = "Save"
      Me.CommandButton20.Caption = "Input"
      Me.CommandButton21.Caption = "Delete"
      Me.CommandButton22.Caption = "Save"
      Me.CommandButton23.Caption = "Input"
      Me.CommandButton24.Caption = "Delete"
      Me.CommandButton25.Caption = "Save"
      Me.CommandButton26.Caption = "Input"
      Me.CommandButton27.Caption = "Delete"
      Me.CommandButton28.Caption = "Save"
      Me.CommandButton29.Caption = "Input"
      Me.CommandButton30.Caption = "Delete"
      Me.CommandButton33.Caption = "All delete"
      Me.CommandButton32.Caption = "Cancel"
   Else
      If W_PAGEN = "Page1" Then
         Me.Caption = "|fffd||fffd||fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||315||6d1||fffd|"
      Else
         Me.Caption = "|fffd|u|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||315||6d1||fffd|"
      End If
      Me.CommandButton1.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton2.Caption = "|fffd||10f|o"
      Me.CommandButton3.Caption = "|fffd||d3dc|"
      Me.CommandButton4.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton5.Caption = "|fffd||10f|o"
      Me.CommandButton6.Caption = "|fffd||d3dc|"
      Me.CommandButton7.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton8.Caption = "|fffd||10f|o"
      Me.CommandButton9.Caption = "|fffd||d3dc|"
      Me.CommandButton10.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton11.Caption = "|fffd||10f|o"
      Me.CommandButton12.Caption = "|fffd||d3dc|"
      Me.CommandButton13.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton14.Caption = "|fffd||10f|o"
      Me.CommandButton15.Caption = "|fffd||d3dc|"
      Me.CommandButton16.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton17.Caption = "|fffd||10f|o"
      Me.CommandButton18.Caption = "|fffd||d3dc|"
      Me.CommandButton19.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton20.Caption = "|fffd||10f|o"
      Me.CommandButton21.Caption = "|fffd||d3dc|"
      Me.CommandButton22.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton23.Caption = "|fffd||10f|o"
      Me.CommandButton24.Caption = "|fffd||d3dc|"
      Me.CommandButton25.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton26.Caption = "|fffd||10f|o"
      Me.CommandButton27.Caption = "|fffd||d3dc|"
      Me.CommandButton28.Caption = "|fffd||6d1||fffd|"
      Me.CommandButton29.Caption = "|fffd||10f|o"
      Me.CommandButton30.Caption = "|fffd||d3dc|"
      Me.CommandButton33.Caption = "|fffd||fffd||fffd||5c2||10d||d3dc|"
      Me.CommandButton32.Caption = "|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|"
   End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.Label4.Font.Name = "Segoe UI"
        Me.Label5.Font.Name = "Segoe UI"
        Me.Label6.Font.Name = "Segoe UI"
        Me.Label7.Font.Name = "Segoe UI"
        Me.Label8.Font.Name = "Segoe UI"
        Me.Label9.Font.Name = "Segoe UI"
        Me.Label10.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
        Me.CommandButton4.Font.Name = "Segoe UI"
        Me.CommandButton5.Font.Name = "Segoe UI"
        Me.CommandButton6.Font.Name = "Segoe UI"
        Me.CommandButton7.Font.Name = "Segoe UI"
        Me.CommandButton8.Font.Name = "Segoe UI"
        Me.CommandButton9.Font.Name = "Segoe UI"
        Me.CommandButton10.Font.Name = "Segoe UI"
        Me.CommandButton11.Font.Name = "Segoe UI"
        Me.CommandButton12.Font.Name = "Segoe UI"
        Me.CommandButton13.Font.Name = "Segoe UI"
        Me.CommandButton14.Font.Name = "Segoe UI"
        Me.CommandButton15.Font.Name = "Segoe UI"
        Me.CommandButton16.Font.Name = "Segoe UI"
        Me.CommandButton17.Font.Name = "Segoe UI"
        Me.CommandButton18.Font.Name = "Segoe UI"
        Me.CommandButton19.Font.Name = "Segoe UI"
        Me.CommandButton20.Font.Name = "Segoe UI"
        Me.CommandButton21.Font.Name = "Segoe UI"
        Me.CommandButton22.Font.Name = "Segoe UI"
        Me.CommandButton23.Font.Name = "Segoe UI"
        Me.CommandButton24.Font.Name = "Segoe UI"
        Me.CommandButton25.Font.Name = "Segoe UI"
        Me.CommandButton26.Font.Name = "Segoe UI"
        Me.CommandButton27.Font.Name = "Segoe UI"
        Me.CommandButton28.Font.Name = "Segoe UI"
        Me.CommandButton29.Font.Name = "Segoe UI"
        Me.CommandButton30.Font.Name = "Segoe UI"
        Me.CommandButton31.Font.Name = "Segoe UI"
        Me.CommandButton32.Font.Name = "Segoe UI"
        Me.CommandButton33.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.Label4.Font.Name = "Meiryo UI"
        Me.Label5.Font.Name = "Meiryo UI"
        Me.Label6.Font.Name = "Meiryo UI"
        Me.Label7.Font.Name = "Meiryo UI"
        Me.Label8.Font.Name = "Meiryo UI"
        Me.Label9.Font.Name = "Meiryo UI"
        Me.Label10.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
        Me.CommandButton4.Font.Name = "Meiryo UI"
        Me.CommandButton5.Font.Name = "Meiryo UI"
        Me.CommandButton6.Font.Name = "Meiryo UI"
        Me.CommandButton7.Font.Name = "Meiryo UI"
        Me.CommandButton8.Font.Name = "Meiryo UI"
        Me.CommandButton9.Font.Name = "Meiryo UI"
        Me.CommandButton10.Font.Name = "Meiryo UI"
        Me.CommandButton11.Font.Name = "Meiryo UI"
        Me.CommandButton12.Font.Name = "Meiryo UI"
        Me.CommandButton13.Font.Name = "Meiryo UI"
        Me.CommandButton14.Font.Name = "Meiryo UI"
        Me.CommandButton15.Font.Name = "Meiryo UI"
        Me.CommandButton16.Font.Name = "Meiryo UI"
        Me.CommandButton17.Font.Name = "Meiryo UI"
        Me.CommandButton18.Font.Name = "Meiryo UI"
        Me.CommandButton19.Font.Name = "Meiryo UI"
        Me.CommandButton20.Font.Name = "Meiryo UI"
        Me.CommandButton21.Font.Name = "Meiryo UI"
        Me.CommandButton22.Font.Name = "Meiryo UI"
        Me.CommandButton23.Font.Name = "Meiryo UI"
        Me.CommandButton24.Font.Name = "Meiryo UI"
        Me.CommandButton25.Font.Name = "Meiryo UI"
        Me.CommandButton26.Font.Name = "Meiryo UI"
        Me.CommandButton27.Font.Name = "Meiryo UI"
        Me.CommandButton28.Font.Name = "Meiryo UI"
        Me.CommandButton29.Font.Name = "Meiryo UI"
        Me.CommandButton30.Font.Name = "Meiryo UI"
        Me.CommandButton31.Font.Name = "Meiryo UI"
        Me.CommandButton32.Font.Name = "Meiryo UI"
        Me.CommandButton33.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.Label4.Font.Name = "Tahoma"
        Me.Label5.Font.Name = "Tahoma"
        Me.Label6.Font.Name = "Tahoma"
        Me.Label7.Font.Name = "Tahoma"
        Me.Label8.Font.Name = "Tahoma"
        Me.Label9.Font.Name = "Tahoma"
        Me.Label10.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
        Me.CommandButton4.Font.Name = "Tahoma"
        Me.CommandButton5.Font.Name = "Tahoma"
        Me.CommandButton6.Font.Name = "Tahoma"
        Me.CommandButton7.Font.Name = "Tahoma"
        Me.CommandButton8.Font.Name = "Tahoma"
        Me.CommandButton9.Font.Name = "Tahoma"
        Me.CommandButton10.Font.Name = "Tahoma"
        Me.CommandButton11.Font.Name = "Tahoma"
        Me.CommandButton12.Font.Name = "Tahoma"
        Me.CommandButton13.Font.Name = "Tahoma"
        Me.CommandButton14.Font.Name = "Tahoma"
        Me.CommandButton15.Font.Name = "Tahoma"
        Me.CommandButton16.Font.Name = "Tahoma"
        Me.CommandButton17.Font.Name = "Tahoma"
        Me.CommandButton18.Font.Name = "Tahoma"
        Me.CommandButton19.Font.Name = "Tahoma"
        Me.CommandButton20.Font.Name = "Tahoma"
        Me.CommandButton21.Font.Name = "Tahoma"
        Me.CommandButton22.Font.Name = "Tahoma"
        Me.CommandButton23.Font.Name = "Tahoma"
        Me.CommandButton24.Font.Name = "Tahoma"
        Me.CommandButton25.Font.Name = "Tahoma"
        Me.CommandButton26.Font.Name = "Tahoma"
        Me.CommandButton27.Font.Name = "Tahoma"
        Me.CommandButton28.Font.Name = "Tahoma"
        Me.CommandButton29.Font.Name = "Tahoma"
        Me.CommandButton30.Font.Name = "Tahoma"
        Me.CommandButton31.Font.Name = "Tahoma"
        Me.CommandButton32.Font.Name = "Tahoma"
        Me.CommandButton33.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.Label4.Font.Name = "MS UI Gothic"
        Me.Label5.Font.Name = "MS UI Gothic"
        Me.Label6.Font.Name = "MS UI Gothic"
        Me.Label7.Font.Name = "MS UI Gothic"
        Me.Label8.Font.Name = "MS UI Gothic"
        Me.Label9.Font.Name = "MS UI Gothic"
        Me.Label10.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
        Me.CommandButton4.Font.Name = "MS UI Gothic"
        Me.CommandButton5.Font.Name = "MS UI Gothic"
        Me.CommandButton6.Font.Name = "MS UI Gothic"
        Me.CommandButton7.Font.Name = "MS UI Gothic"
        Me.CommandButton8.Font.Name = "MS UI Gothic"
        Me.CommandButton9.Font.Name = "MS UI Gothic"
        Me.CommandButton10.Font.Name = "MS UI Gothic"
        Me.CommandButton11.Font.Name = "MS UI Gothic"
        Me.CommandButton12.Font.Name = "MS UI Gothic"
        Me.CommandButton13.Font.Name = "MS UI Gothic"
        Me.CommandButton14.Font.Name = "MS UI Gothic"
        Me.CommandButton15.Font.Name = "MS UI Gothic"
        Me.CommandButton16.Font.Name = "MS UI Gothic"
        Me.CommandButton17.Font.Name = "MS UI Gothic"
        Me.CommandButton18.Font.Name = "MS UI Gothic"
        Me.CommandButton19.Font.Name = "MS UI Gothic"
        Me.CommandButton20.Font.Name = "MS UI Gothic"
        Me.CommandButton21.Font.Name = "MS UI Gothic"
        Me.CommandButton22.Font.Name = "MS UI Gothic"
        Me.CommandButton23.Font.Name = "MS UI Gothic"
        Me.CommandButton24.Font.Name = "MS UI Gothic"
        Me.CommandButton25.Font.Name = "MS UI Gothic"
        Me.CommandButton26.Font.Name = "MS UI Gothic"
        Me.CommandButton27.Font.Name = "MS UI Gothic"
        Me.CommandButton28.Font.Name = "MS UI Gothic"
        Me.CommandButton29.Font.Name = "MS UI Gothic"
        Me.CommandButton30.Font.Name = "MS UI Gothic"
        Me.CommandButton31.Font.Name = "MS UI Gothic"
        Me.CommandButton32.Font.Name = "MS UI Gothic"
        Me.CommandButton33.Font.Name = "MS UI Gothic"
     End If
  End If
  
  If SW_ENGLISH = True Then
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox2.Font.Name = "Courier New"
     Me.TextBox3.Font.Name = "Courier New"
     Me.TextBox4.Font.Name = "Courier New"
     Me.TextBox5.Font.Name = "Courier New"
     Me.TextBox6.Font.Name = "Courier New"
     Me.TextBox7.Font.Name = "Courier New"
     Me.TextBox8.Font.Name = "Courier New"
     Me.TextBox9.Font.Name = "Courier New"
     Me.TextBox10.Font.Name = "Courier New"
  
     Me.TextBox1.Font.Size = 8
     Me.TextBox2.Font.Size = 8
     Me.TextBox3.Font.Size = 8
     Me.TextBox4.Font.Size = 8
     Me.TextBox5.Font.Size = 8
     Me.TextBox6.Font.Size = 8
     Me.TextBox7.Font.Size = 8
     Me.TextBox8.Font.Size = 8
     Me.TextBox9.Font.Size = 8
     Me.TextBox10.Font.Size = 8
  Else
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox3.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox4.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox5.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox6.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox7.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox8.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox9.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox10.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.TextBox1.Font.Size = 9
     Me.TextBox2.Font.Size = 9
     Me.TextBox3.Font.Size = 9
     Me.TextBox4.Font.Size = 9
     Me.TextBox5.Font.Size = 9
     Me.TextBox6.Font.Size = 9
     Me.TextBox7.Font.Size = 9
     Me.TextBox8.Font.Size = 9
     Me.TextBox9.Font.Size = 9
     Me.TextBox10.Font.Size = 9
  End If
  
  If W_PAGEN = "Page1" Then
     Me.TextBox1.Value = W_FSV01
     Me.TextBox2.Value = W_FSV02
     Me.TextBox3.Value = W_FSV03
     Me.TextBox4.Value = W_FSV04
     Me.TextBox5.Value = W_FSV05
     Me.TextBox6.Value = W_FSV06
     Me.TextBox7.Value = W_FSV07
     Me.TextBox8.Value = W_FSV08
     Me.TextBox9.Value = W_FSV09
     Me.TextBox10.Value = W_FSV10
  Else
     Me.TextBox1.Value = W_RSV01
     Me.TextBox2.Value = W_RSV02
     Me.TextBox3.Value = W_RSV03
     Me.TextBox4.Value = W_RSV04
     Me.TextBox5.Value = W_RSV05
     Me.TextBox6.Value = W_RSV06
     Me.TextBox7.Value = W_RSV07
     Me.TextBox8.Value = W_RSV08
     Me.TextBox9.Value = W_RSV09
     Me.TextBox10.Value = W_RSV10
  End If

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton4)

End Sub

Private Sub CommandButton5_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton5)

End Sub

Private Sub CommandButton6_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton6)

End Sub

Private Sub CommandButton7_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton7)

End Sub

Private Sub CommandButton8_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton8)

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub CommandButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton10)

End Sub

Private Sub CommandButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton11)

End Sub

Private Sub CommandButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton12)

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton13)

End Sub

Private Sub CommandButton14_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton14)

End Sub

Private Sub CommandButton15_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton15)

End Sub

Private Sub CommandButton16_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton16)

End Sub

Private Sub CommandButton17_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton17)

End Sub

Private Sub CommandButton18_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton18)

End Sub

Private Sub CommandButton19_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton19)

End Sub

Private Sub CommandButton20_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton20)

End Sub

Private Sub CommandButton21_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton21)

End Sub

Private Sub CommandButton22_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton22)

End Sub

Private Sub CommandButton23_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton23)

End Sub

Private Sub CommandButton24_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton24)

End Sub

Private Sub CommandButton25_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton25)

End Sub

Private Sub CommandButton26_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton26)

End Sub

Private Sub CommandButton27_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton27)

End Sub

Private Sub CommandButton28_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton28)

End Sub

Private Sub CommandButton29_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton29)

End Sub

Private Sub CommandButton30_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton30)

End Sub

Private Sub CommandButton31_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton31)

End Sub

Private Sub CommandButton32_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton32)

End Sub

Private Sub CommandButton33_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton33)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub CommandButton4_Enter()

  Me.CommandButton4.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton4.BackColor = &H8000000F

End Sub

Private Sub CommandButton5_Enter()

  Me.CommandButton5.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton5.BackColor = &H8000000F

End Sub

Private Sub CommandButton6_Enter()

  Me.CommandButton6.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton6.BackColor = &H8000000F

End Sub

Private Sub CommandButton7_Enter()

  Me.CommandButton7.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton7.BackColor = &H8000000F

End Sub

Private Sub CommandButton8_Enter()

  Me.CommandButton8.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton8.BackColor = &H8000000F

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub CommandButton10_Enter()

  Me.CommandButton10.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton10.BackColor = &H8000000F

End Sub

Private Sub CommandButton11_Enter()

  Me.CommandButton11.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton11_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton11.BackColor = &H8000000F

End Sub

Private Sub CommandButton12_Enter()

  Me.CommandButton12.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton12_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton12.BackColor = &H8000000F

End Sub

Private Sub CommandButton13_Enter()

  Me.CommandButton13.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton13_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton13.BackColor = &H8000000F

End Sub

Private Sub CommandButton14_Enter()

  Me.CommandButton14.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton14_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton14.BackColor = &H8000000F

End Sub

Private Sub CommandButton15_Enter()

  Me.CommandButton15.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton15_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton15.BackColor = &H8000000F

End Sub

Private Sub CommandButton16_Enter()

  Me.CommandButton16.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton16_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton16.BackColor = &H8000000F

End Sub

Private Sub CommandButton17_Enter()

  Me.CommandButton17.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton17_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton17.BackColor = &H8000000F

End Sub

Private Sub CommandButton18_Enter()

  Me.CommandButton18.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton18_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton18.BackColor = &H8000000F

End Sub

Private Sub CommandButton19_Enter()

  Me.CommandButton19.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton19_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton19.BackColor = &H8000000F

End Sub

Private Sub CommandButton20_Enter()

  Me.CommandButton20.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton20_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton20.BackColor = &H8000000F

End Sub

Private Sub CommandButton21_Enter()

  Me.CommandButton21.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton21_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton21.BackColor = &H8000000F

End Sub

Private Sub CommandButton22_Enter()

  Me.CommandButton22.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton22_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton22.BackColor = &H8000000F

End Sub

Private Sub CommandButton23_Enter()

  Me.CommandButton23.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton23_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton23.BackColor = &H8000000F

End Sub

Private Sub CommandButton24_Enter()

  Me.CommandButton24.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton24_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton24.BackColor = &H8000000F

End Sub

Private Sub CommandButton25_Enter()

  Me.CommandButton25.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton25_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton25.BackColor = &H8000000F

End Sub

Private Sub CommandButton26_Enter()

  Me.CommandButton26.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton26_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton26.BackColor = &H8000000F

End Sub

Private Sub CommandButton27_Enter()

  Me.CommandButton27.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton27_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton27.BackColor = &H8000000F

End Sub

Private Sub CommandButton28_Enter()

  Me.CommandButton28.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton28_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton28.BackColor = &H8000000F

End Sub

Private Sub CommandButton29_Enter()

  Me.CommandButton29.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton29_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton29.BackColor = &H8000000F

End Sub

Private Sub CommandButton30_Enter()

  Me.CommandButton30.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton30_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton30.BackColor = &H8000000F

End Sub

Private Sub CommandButton31_Enter()

  Me.CommandButton31.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton31_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton31.BackColor = &H8000000F

End Sub

Private Sub CommandButton32_Enter()

  Me.CommandButton32.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton32_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton32.BackColor = &H8000000F

End Sub

Private Sub CommandButton33_Enter()

  Me.CommandButton33.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton33_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton33.BackColor = &H8000000F

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.5
        DoEvents
     Loop
  End If

End Sub

Private Sub TextBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox1
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox2
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox3_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox3
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox4_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox4
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox5_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox5
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox6_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox6
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox7_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox7
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox8_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox8
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox9_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox9
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox10_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  If Button = 2 Then
     Set W_BOX = Me.TextBox10
     Application.CommandBars("EREPU1").ShowPopup
  End If

End Sub

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox1)
  End If

End Sub

Private Sub TextBox2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox2)
  End If

End Sub

Private Sub TextBox3_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox3)
  End If

End Sub

Private Sub TextBox4_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox4)
  End If

End Sub

Private Sub TextBox5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox5)
  End If

End Sub

Private Sub TextBox6_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox6)
  End If

End Sub

Private Sub TextBox7_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox7)
  End If

End Sub

Private Sub TextBox8_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox8)
  End If

End Sub

Private Sub TextBox9_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox9)
  End If

End Sub

Private Sub TextBox10_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

  If GetAsyncKeyState(VK_CONVERT) <> 0 Then
     Call RECONVERT(Me.TextBox10)
  End If

End Sub

Private Sub TextBox1_Enter()

  Me.TextBox1.BackColor = &HC0FFFF

End Sub

Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox1.BackColor = &H80000005

End Sub

Private Sub TextBox2_Enter()

  Me.TextBox2.BackColor = &HC0FFFF

End Sub

Private Sub TextBox2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox2.BackColor = &H80000005

End Sub

Private Sub TextBox3_Enter()

  Me.TextBox3.BackColor = &HC0FFFF

End Sub

Private Sub TextBox3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox3.BackColor = &H80000005

End Sub

Private Sub TextBox4_Enter()

  Me.TextBox4.BackColor = &HC0FFFF

End Sub

Private Sub TextBox4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox4.BackColor = &H80000005

End Sub

Private Sub TextBox5_Enter()

  Me.TextBox5.BackColor = &HC0FFFF

End Sub

Private Sub TextBox5_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox5.BackColor = &H80000005

End Sub

Private Sub TextBox6_Enter()

  Me.TextBox6.BackColor = &HC0FFFF

End Sub

Private Sub TextBox6_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox6.BackColor = &H80000005

End Sub

Private Sub TextBox7_Enter()

  Me.TextBox7.BackColor = &HC0FFFF

End Sub

Private Sub TextBox7_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox7.BackColor = &H80000005

End Sub

Private Sub TextBox8_Enter()

  Me.TextBox8.BackColor = &HC0FFFF

End Sub

Private Sub TextBox8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox8.BackColor = &H80000005

End Sub

Private Sub TextBox9_Enter()

  Me.TextBox9.BackColor = &HC0FFFF

End Sub

Private Sub TextBox9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox9.BackColor = &H80000005

End Sub

Private Sub TextBox10_Enter()

  Me.TextBox10.BackColor = &HC0FFFF

End Sub

Private Sub TextBox10_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.TextBox10.BackColor = &H80000005

End Sub

Private Sub CommandButton1_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox1)

End Sub

Private Sub CommandButton2_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox1)

End Sub

Private Sub CommandButton3_Click()
'|fffd||d3dc|

  Me.TextBox1.Value = ""

End Sub

Private Sub CommandButton4_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox2)

End Sub

Private Sub CommandButton5_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox2)

End Sub

Private Sub CommandButton6_Click()
'|fffd||d3dc|

  Me.TextBox2.Value = ""

End Sub

Private Sub CommandButton7_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox3)

End Sub

Private Sub CommandButton8_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox3)

End Sub

Private Sub CommandButton9_Click()
'|fffd||d3dc|

  Me.TextBox3.Value = ""

End Sub

Private Sub CommandButton10_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox4)

End Sub

Private Sub CommandButton11_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox4)

End Sub

Private Sub CommandButton12_Click()
'|fffd||d3dc|

  Me.TextBox4.Value = ""

End Sub

Private Sub CommandButton13_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox5)

End Sub

Private Sub CommandButton14_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox5)

End Sub

Private Sub CommandButton15_Click()
'|fffd||d3dc|

  Me.TextBox5.Value = ""

End Sub

Private Sub CommandButton16_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox6)

End Sub

Private Sub CommandButton17_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox6)

End Sub

Private Sub CommandButton18_Click()
'|fffd||d3dc|

  Me.TextBox6.Value = ""

End Sub

Private Sub CommandButton19_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox7)

End Sub

Private Sub CommandButton20_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox7)

End Sub

Private Sub CommandButton21_Click()
'|fffd||d3dc|

  Me.TextBox7.Value = ""

End Sub

Private Sub CommandButton22_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox8)

End Sub

Private Sub CommandButton23_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox8)

End Sub

Private Sub CommandButton24_Click()
'|fffd||d3dc|

  Me.TextBox8.Value = ""

End Sub

Private Sub CommandButton25_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox9)

End Sub

Private Sub CommandButton26_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox9)

End Sub

Private Sub CommandButton27_Click()
'|fffd||d3dc|

  Me.TextBox9.Value = ""

End Sub

Private Sub CommandButton28_Click()
'|fffd||6d1||fffd|

  Call SAVE_PAT_RTN(W_PAGEN, Me.TextBox10)

End Sub

Private Sub CommandButton29_Click()
'|fffd||10f|o

  Call READ_PAT_RTN(W_PAGEN, Me.TextBox10)

End Sub

Private Sub CommandButton30_Click()
'|fffd||d3dc|

  Me.TextBox10.Value = ""

End Sub

Private Sub SAVE_PAT_RTN(ByVal W_PAGEN As String, W_TB As Object)

  If W_PAGEN = "Page1" Then
     If UserForm1.ComboBox1.Value <> "" Then
        W_TB.Value = UserForm1.ComboBox1.Value
     End If
  Else
     If UserForm1.ComboBox2.Value <> "" Then
        W_TB.Value = UserForm1.ComboBox2.Value
     End If
  End If

End Sub

Private Sub READ_PAT_RTN(ByVal W_PAGEN As String, W_TB As Object)

  If W_PAGEN = "Page1" Then
     UserForm1.ComboBox1.Value = W_TB.Value
  Else
     UserForm1.ComboBox2.Value = W_TB.Value
  End If
  Unload Me

End Sub

Private Sub CommandButton31_Click()
'OK
  
  If W_PAGEN = "Page1" Then
     W_FSV01 = Me.TextBox1.Value
     W_FSV02 = Me.TextBox2.Value
     W_FSV03 = Me.TextBox3.Value
     W_FSV04 = Me.TextBox4.Value
     W_FSV05 = Me.TextBox5.Value
     W_FSV06 = Me.TextBox6.Value
     W_FSV07 = Me.TextBox7.Value
     W_FSV08 = Me.TextBox8.Value
     W_FSV09 = Me.TextBox9.Value
     W_FSV10 = Me.TextBox10.Value
  Else
     W_RSV01 = Me.TextBox1.Value
     W_RSV02 = Me.TextBox2.Value
     W_RSV03 = Me.TextBox3.Value
     W_RSV04 = Me.TextBox4.Value
     W_RSV05 = Me.TextBox5.Value
     W_RSV06 = Me.TextBox6.Value
     W_RSV07 = Me.TextBox7.Value
     W_RSV08 = Me.TextBox8.Value
     W_RSV09 = Me.TextBox9.Value
     W_RSV10 = Me.TextBox10.Value
  End If

  Unload Me

End Sub

Private Sub CommandButton32_Click()
'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|

  Unload Me

End Sub

Private Sub CommandButton33_Click()
'|fffd||fffd||fffd||5c2||10d||d3dc|

  Me.TextBox1.Value = ""
  Me.TextBox2.Value = ""
  Me.TextBox3.Value = ""
  Me.TextBox4.Value = ""
  Me.TextBox5.Value = ""
  Me.TextBox6.Value = ""
  Me.TextBox7.Value = ""
  Me.TextBox8.Value = ""
  Me.TextBox9.Value = ""
  Me.TextBox10.Value = ""

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm6"
Attribute VB_Base = "0{1B56F4CA-1A71-4DDA-96DC-61C1537C9B2E}{7F4C33BE-D917-4F30-A133-5C0955BE2FE3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()
  
  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Share Data"
     Me.MultiPage1.Pages(0).Caption = "Find"
     Me.MultiPage1.Pages(1).Caption = "Replace"
     Me.CommandButton9.Caption = "Input"
  Else
     Me.Caption = "|fffd||fffd||fffd|L|fffd|f|fffd|[|fffd|^|fffd|\|fffd||fffd|"
     Me.MultiPage1.Pages(0).Caption = "|fffd||fffd||fffd||fffd|"
     Me.MultiPage1.Pages(1).Caption = "|fffd|u|fffd||fffd|"
     Me.CommandButton9.Caption = "|fffd||fffd||fffd||fffd|(I)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.MultiPage1.Font.Name = "Segoe UI"
        Me.CommandButton9.Font.Name = "Segoe UI"
     Else
        Me.MultiPage1.Font.Name = "Meiryo UI"
        Me.CommandButton9.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.MultiPage1.Font.Name = "Tahoma"
        Me.CommandButton9.Font.Name = "Tahoma"
     Else
        Me.MultiPage1.Font.Name = "MS UI Gothic"
        Me.CommandButton9.Font.Name = "MS UI Gothic"
     End If
  End If
    
  If SW_ENGLISH = True Then
     Me.ListBox1.Font.Name = "Courier New"
     Me.ListBox2.Font.Name = "Courier New"
  
     Me.ListBox1.Font.Size = 8
     Me.ListBox2.Font.Size = 8
  Else
     Me.ListBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ListBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.ListBox1.Font.Size = 9
     Me.ListBox2.Font.Size = 9
  End If
  
  If AR_SHRF(0, 0) <> "" Then
     With Me.ListBox1
        .list = AR_SHRF
        Erase AR_SHRF
        If SW_ENGLISH = True Then
           .ColumnWidths = CStr(6 * W_MAXF0 + 6) & ";" & CStr(6 * W_MAXF1 + 6)
        Else
           .ColumnWidths = CStr(5 * W_MAXF0 + 5) & ";" & CStr(5 * W_MAXF1 + 5)
        End If
        .ListIndex = 0
     End With
  End If

  If AR_SHRR(0, 0) <> "" Then
     With Me.ListBox2
        .list = AR_SHRR
        Erase AR_SHRR
        If SW_ENGLISH = True Then
           .ColumnWidths = CStr(6 * W_MAXR0 + 6) & ";" & CStr(6 * W_MAXR1 + 6) & ";" & CStr(6 * W_MAXR2 + 6)
        Else
           .ColumnWidths = CStr(5 * W_MAXR0 + 5) & ";" & CStr(5 * W_MAXR1 + 5) & ";" & CStr(5 * W_MAXR2 + 5)
        End If
        .ListIndex = 0
     End With
  End If

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub MultiPage1_MouseMove(ByVal Index As Long, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.MultiPage1)

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.75
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.75
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton9_Click()
'|fffd||fffd||fffd||fffd|

  If Me.MultiPage1.Value = 0 Then
     With Me.ListBox1
        If .ListCount > 0 Then
           UserForm1.ComboBox1.Value = .list(.ListIndex, 1)
           W_PAGEN = "Page1"
           Unload Me
        End If
     End With
  Else
     With Me.ListBox2
        If .ListCount > 0 Then
           UserForm1.ComboBox1.Value = .list(.ListIndex, 1)
           UserForm1.ComboBox2.Value = .list(.ListIndex, 2)
           W_PAGEN = "Page2"
           Unload Me
        End If
     End With
  End If
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd||fffd||fffd||fffd|

  With Me.ListBox1
     If .ListCount > 0 Then
        UserForm1.ComboBox1.Value = .list(.ListIndex, 1)
        W_PAGEN = "Page1"
        Unload Me
     End If
  End With

End Sub

Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'|fffd||fffd||fffd||fffd|

  With Me.ListBox2
     If .ListCount > 0 Then
        UserForm1.ComboBox1.Value = .list(.ListIndex, 1)
        UserForm1.ComboBox2.Value = .list(.ListIndex, 2)
        W_PAGEN = "Page2"
        Unload Me
     End If
  End With

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm7"
Attribute VB_Base = "0{D4CC80BB-2E9C-487F-89BB-CA2750282C39}{35DD8810-A23E-449C-B12F-88C2E17D94A5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim W_ITEMN As Long

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Frequently used ragular expression"
     Me.Label2.Caption = "is"
     Me.Label4.Caption = ""
     Me.Frame1.Caption = "Find"
     Me.Label5.Caption = "Object String:"
     Me.Label7.Caption = "Find what:"
     Me.Label9.Caption = "Result:"
     Me.Frame2.Caption = "Replace"
     Me.Label12.Caption = "Object String:"
     Me.Label14.Caption = "Find what:"
     Me.Label16.Caption = "Replace with:"
     Me.Label18.Caption = "Result:"
     Me.CommandButton1.Caption = "Previous"
     Me.CommandButton2.Caption = "Next"
     Me.CommandButton3.Caption = "Exit"
  Else
     Me.Caption = "|fffd||60ad||fffd|g|fffd||fffd||fffd||9433||fffd|K|fffd|\|fffd||fffd|"
     Me.Label2.Caption = "|fffd||fffd|"
     Me.Label4.Caption = "|fffd||fffd|\|fffd||fffd||fffd||702||fffd||fffd|B"
     Me.Frame1.Caption = "|fffd||fffd||fffd||fffd|"
     Me.Label5.Caption = "|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|"
     Me.Label7.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label9.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Frame2.Caption = "|fffd|u|fffd||fffd|"
     Me.Label12.Caption = "|fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|"
     Me.Label14.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label16.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.Label18.Caption = "|fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton1.Caption = "|fffd|O|fffd||fffd|(P)"
     Me.CommandButton2.Caption = "|fffd||fffd||fffd||fffd|(N)"
     Me.CommandButton3.Caption = "|fffd|I|fffd||fffd|(X)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.Label4.Font.Name = "Segoe UI"
        Me.Frame1.Font.Name = "Segoe UI"
        Me.Label5.Font.Name = "Segoe UI"
        Me.Label7.Font.Name = "Segoe UI"
        Me.Label9.Font.Name = "Segoe UI"
        Me.Frame2.Font.Name = "Segoe UI"
        Me.Label12.Font.Name = "Segoe UI"
        Me.Label14.Font.Name = "Segoe UI"
        Me.Label16.Font.Name = "Segoe UI"
        Me.Label18.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
        Me.CommandButton3.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.Label4.Font.Name = "Meiryo UI"
        Me.Frame1.Font.Name = "Meiryo UI"
        Me.Label5.Font.Name = "Meiryo UI"
        Me.Label7.Font.Name = "Meiryo UI"
        Me.Label9.Font.Name = "Meiryo UI"
        Me.Frame2.Font.Name = "Meiryo UI"
        Me.Label12.Font.Name = "Meiryo UI"
        Me.Label14.Font.Name = "Meiryo UI"
        Me.Label16.Font.Name = "Meiryo UI"
        Me.Label18.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
        Me.CommandButton3.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.Label4.Font.Name = "Tahoma"
        Me.Frame1.Font.Name = "Tahoma"
        Me.Label5.Font.Name = "Tahoma"
        Me.Label7.Font.Name = "Tahoma"
        Me.Label9.Font.Name = "Tahoma"
        Me.Frame2.Font.Name = "Tahoma"
        Me.Label12.Font.Name = "Tahoma"
        Me.Label14.Font.Name = "Tahoma"
        Me.Label16.Font.Name = "Tahoma"
        Me.Label18.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
        Me.CommandButton3.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.Label4.Font.Name = "MS UI Gothic"
        Me.Frame1.Font.Name = "MS UI Gothic"
        Me.Label5.Font.Name = "MS UI Gothic"
        Me.Label7.Font.Name = "MS UI Gothic"
        Me.Label9.Font.Name = "MS UI Gothic"
        Me.Frame2.Font.Name = "MS UI Gothic"
        Me.Label12.Font.Name = "MS UI Gothic"
        Me.Label14.Font.Name = "MS UI Gothic"
        Me.Label16.Font.Name = "MS UI Gothic"
        Me.Label18.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
        Me.CommandButton3.Font.Name = "MS UI Gothic"
     End If
  End If
  
  If SW_ENGLISH = True Then
     Me.Label6.Font.Name = "Courier New"
     Me.Label8.Font.Name = "Courier New"
     Me.Label10.Font.Name = "Courier New"
     Me.Label11.Font.Name = "Courier New"
     Me.Label13.Font.Name = "Courier New"
     Me.Label15.Font.Name = "Courier New"
     Me.Label17.Font.Name = "Courier New"
     Me.Label19.Font.Name = "Courier New"
     Me.Label20.Font.Name = "Courier New"
  Else
     Me.Label6.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label8.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label10.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label11.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label13.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label15.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label17.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label19.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.Label20.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  End If
  
  W_ITEMN = 0
  Call ITEM_SET
  Me.CommandButton1.Enabled = False

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub CommandButton3_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton3)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub Frame1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.Frame1)

End Sub

Private Sub Frame2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me.Frame2)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub CommandButton3_Enter()

  Me.CommandButton3.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton3_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton3.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.5
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1
        Me.Left = Me.Left + 1.5
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton1_Click()
'|fffd|O|fffd||fffd|

  W_ITEMN = W_ITEMN - 1
  Call ITEM_SET
  If W_ITEMN <= 0 Then
     Me.CommandButton1.Enabled = False
  End If
  If W_ITEMN <= 8 Then
     Me.CommandButton2.Enabled = True
  End If

End Sub

Private Sub CommandButton2_Click()
'|fffd||fffd||fffd||fffd|

  W_ITEMN = W_ITEMN + 1
  Call ITEM_SET
  If W_ITEMN >= 9 Then
     Me.CommandButton2.Enabled = False
  End If
  If W_ITEMN >= 1 Then
     Me.CommandButton1.Enabled = True
  End If

End Sub

Private Sub ITEM_SET()

  Dim AR_RE As Variant
  Dim AR_RETXT As Variant
  Dim AR_FOSTR As Variant
  Dim AR_FFSTR As Variant
  Dim AR_FRSLT1 As Variant
  Dim AR_FRSLT2 As Variant
  Dim AR_ROSTR As Variant
  Dim AR_RFSTR As Variant
  Dim AR_RRSTR As Variant
  Dim AR_RRSLT1 As Variant
  Dim AR_RRSLT2 As Variant

  AR_RE = Array("^", _
                "$", _
                ".", _
                "\d", _
                "{n}", _
                "*", _
                "+", _
                "|", _
                "()", _
                "$n")
  If UserForm1.CheckBox49.Value = True Then
     AR_RETXT = Array("top", _
                      "last", _
                      "any character", _
                      "any number character", _
                      "n times repeat", _
                      "more than 0 times repeat", _
                      "more than 1 times repeat", _
                      "or", _
                      "grouping", _
                      "n-th group")
  Else
     AR_RETXT = Array("|fffd||64ea|", _
                      "|fffd||fffd||fffd||fffd|", _
                      "|fffd|C|fffd||4c2||fffd|1|fffd||fffd||fffd||fffd|", _
                      "|fffd|C|fffd||4c2||310||fffd||fffd||fffd|", _
                      "n|fffd||fffd||30c|J|fffd||fffd||502||fffd|", _
                      "0|fffd||fffd||20f||fffd||30c|J|fffd||fffd||502||fffd|", _
                      "1|fffd||fffd||20f||fffd||30c|J|fffd||fffd||502||fffd|", _
                      "or", _
                      "|fffd|O|fffd||fffd||fffd|[|fffd|v|fffd||fffd|", _
                      "n|fffd||516||682||303|O|fffd||fffd||fffd|[|fffd|v")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_FOSTR = Array("excel", _
                      "1050", _
                      "Kasai and West-Kasai", _
                      "part3 is popular, but I like part4.", _
                      "excel97, excel2000, excel2002", _
                      "version of excel is excel2003", _
                      "night2 and night10 are interesting.", _
                      "one gold angel or five silver angels", _
                      "tokyo-metro tozai-line, ginza-line", _
                      "")
  Else
     AR_FOSTR = Array("excel", _
                      "1050", _
                      "|fffd||fffd||fffd||fffd||fffd||190||fffd||fffd||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd|", _
                      "|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd|l|fffd|C|fffd||fffd||fffd||90af||fffd||1c1|A|fffd||fffd|4|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd|D|fffd||fffd||fffd||fffd||fffd|B", _
                      "excel97|fffd|Aexcel2000|fffd|Aexcel2002", _
                      "excel|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|excel2003", _
                      "|fffd||fffd|2|fffd||fffd||191||fffd|10|fffd||90aa||fffd||294||fffd||fffd||fffd||fffd|B|fffd||627d||fffd||fffd||702||142||fffd||fffd||fffd||302||fffd||fffd||201|B", _
                      "|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||334||77e||fffd||fffd|5|fffd||fffd|", _
                      "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||18b||fffd||fffd||fffd||fffd||fffd||194||fffd||fffd||fffd||fffd||fffd||fffd|", _
                      "")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_FFSTR = Array("^e", _
                      "0$", _
                      ".Kasai", _
                      "part\d", _
                      "excel\d{4}", _
                      "excel\d*", _
                      "night\d+", _
                      "gold|silver", _
                      "(tokyo-metro )*[a-z]+-line", _
                      "")
  Else
     AR_FFSTR = Array("^e", _
                      "0$", _
                      ".|fffd||fffd||fffd||fffd|", _
                      "|fffd||fffd|\d|fffd||fffd|", _
                      "excel\d{4}", _
                      "excel\d*", _
                      "|fffd||fffd|\d+|fffd||fffd|", _
                      "|fffd||77e||fffd||fffd|||fffd|G|fffd||fffd||fffd|[|fffd||fffd|", _
                      "(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd|)*..|fffd||fffd|", _
                      "")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_FRSLT1 = Array(" xcel", _
                       "105 ", _
                       "Kasai and West      ", _
                       "      is popular, but I like      .", _
                       "excel97,          ,          ", _
                       "version of       is          ", _
                       "       and         are interesting. ", _
                       "one      angel or five        angels", _
                       "tokyo-metro tozai-line, ginza-line", _
                       "", _
                       "")
  Else
     AR_FRSLT1 = Array(" xcel", _
                       "105 ", _
                       "|fffd||fffd||fffd||fffd||fffd||181|@|fffd|@|fffd|@|fffd||312||fffd||fffd||fffd|", _
                       "|fffd|@ |fffd|@|fffd||fffd||fffd|l|fffd|C|fffd||fffd||fffd||90af||fffd||1c1|A|fffd|@ |fffd|@|fffd||315||fffd||fffd||fffd||fffd|D|fffd||fffd||fffd||fffd||fffd|B", _
                       "excel97|fffd|A         |fffd|A         ", _
                       "     |fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|         ", _
                       "|fffd|@ |fffd|@|fffd||181|@  |fffd|@|fffd||fffd||fffd||294||fffd||fffd||fffd||fffd|B|fffd||627d||fffd||fffd||702||142||fffd||fffd||fffd||302||fffd||fffd||201|B", _
                       "|fffd||fffd||fffd||301|@|fffd|@|fffd|@|fffd|@1|fffd||fffd||fffd||fffd||fffd||fffd||fffd|     5|fffd||fffd|", _
                       "|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||181|@|fffd|@|fffd|@|fffd||194||fffd||fffd||fffd||fffd||fffd||fffd|", _
                       "", _
                       "")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_FRSLT2 = Array("e    ", _
                       "   0", _
                       "              -Kasai", _
                       "part3                        part4 ", _
                       "         excel2000  excel2002", _
                       "           excel    excel2003", _
                       "night2     night10                  ", _
                       "    gold               silver       ", _
                       "tokyo-metro tozai-line  ginza-line", _
                       "")
  Else
     AR_FRSLT2 = Array("e    ", _
                       "   0", _
                       "|fffd|@|fffd|@|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@", _
                       "|fffd||fffd|3|fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd||fffd|4|fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@", _
                       "       |fffd|@excel2000|fffd|@excel2002", _
                       "excel|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@excel2003", _
                       "|fffd||fffd|2|fffd||fffd|@|fffd||fffd|10|fffd||fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@|fffd|@", _
                       "|fffd|@|fffd|@|fffd|G|fffd||fffd||fffd|[|fffd||fffd| |fffd|@|fffd|@|fffd|@|fffd|@|fffd||77e||fffd||fffd| |fffd|@", _
                       "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|@|fffd|@|fffd|@|fffd|@|fffd|@", _
                       "", _
                       "")
  End If
  AR_ROSTR = Array("A1", _
                   "1050", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "2011/05/07")
  AR_RFSTR = Array("^", _
                   "0$", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "", _
                   "(\d{4})/(\d{2})/\d{2}")
  If UserForm1.CheckBox49.Value = True Then
     AR_RRSTR = Array("=", _
                      "5", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "yyyy:$1 mm:$2")
  Else
     AR_RRSTR = Array("=", _
                      "5", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "", _
                      "$1|fffd|N$2|fffd||fffd|")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_RRSLT1 = Array(" A1", _
                       "105 ", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "               ")
  Else
     AR_RRSLT1 = Array(" A1", _
                       "105 ", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "    |fffd|@  |fffd|@")
  End If
  If UserForm1.CheckBox49.Value = True Then
     AR_RRSLT2 = Array("=  ", _
                       "   5", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "yyyy:2011 mm:05")
  Else
     AR_RRSLT2 = Array("=  ", _
                       "   5", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "", _
                       "2011|fffd|N05|fffd||fffd|")
  End If
  Me.Label1.Caption = AR_RE(W_ITEMN)
  Me.Label3.Caption = AR_RETXT(W_ITEMN)
  Me.Label6.Caption = AR_FOSTR(W_ITEMN)
  Me.Label8.Caption = AR_FFSTR(W_ITEMN)
  Me.Label10.Caption = AR_FRSLT1(W_ITEMN)
  Me.Label11.Caption = AR_FRSLT2(W_ITEMN)
  Me.Label13.Caption = AR_ROSTR(W_ITEMN)
  Me.Label15.Caption = AR_RFSTR(W_ITEMN)
  Me.Label17.Caption = AR_RRSTR(W_ITEMN)
  Me.Label19.Caption = AR_RRSLT1(W_ITEMN)
  Me.Label20.Caption = AR_RRSLT2(W_ITEMN)

End Sub

Private Sub CommandButton3_Click()
'|fffd|I|fffd||fffd|

  Unload Me

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm8"
Attribute VB_Base = "0{CB9B4807-4416-496D-94DF-E36018B814AC}{9810EEE7-9EB0-42FF-9F03-BC1733BAD2D7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

#If Win64 Then
Private Declare PtrSafe Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
#Else
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
#End If

#If Win64 Then
Private Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#Else
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
    ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
#End If

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()
  
  Dim W_SC As String
  Dim AR_WK As Variant
  Dim I As Long
  
  
  '|fffd||fffd||fffd||fffd||752||fffd|
  If SW_ENGLISH = True Then
     Me.Caption = "Orthographic variants list"
     Me.CommandButton9.Caption = "Assemble"
  Else
     Me.Caption = "|fffd|\|fffd|L|fffd||fffd||a0ca||fffd|X|fffd|g"
     Me.CommandButton9.Caption = "|fffd||fffd||fffd||fffd|(A)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.CommandButton9.Font.Name = "Segoe UI"
     Else
        Me.CommandButton9.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.CommandButton9.Font.Name = "Tahoma"
     Else
        Me.CommandButton9.Font.Name = "MS UI Gothic"
     End If
  End If
    
  If SW_ENGLISH = True Then
     Me.ListBox1.Font.Name = "Courier New"
  
     Me.ListBox1.Font.Size = 8
  Else
     Me.ListBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
  
     Me.ListBox1.Font.Size = 9
  End If
  
  W_SC = UserForm1.CommandButton255.Tag
    
  If W_SC <> "" Then
     If InStr(W_SC, vbTab) > 0 Then
        AR_WK = Split(W_SC, vbTab)
     Else
        AR_WK = Array(W_SC)
     End If
     With Me.ListBox1
        .list = AR_WK
        Erase AR_WK
        For I = 0 To .ListCount - 1
           .Selected(I) = True
        Next I
        .ListIndex = 0
     End With
  End If

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton9_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton9)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton9_Enter()

  Me.CommandButton9.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton9.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

#If Win64 Then
  Dim hwnd As LongPtr
#Else
  Dim hwnd As Long
#End If

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 3.5
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 3.5
        End If
        Me.Top = Me.Top - 1.5
        Me.Left = Me.Left - 1.75
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 3.5
        Me.Width = Me.Width - 3.5
        Me.Top = Me.Top + 1.5
        Me.Left = Me.Left + 1.75
        DoEvents
     Loop
  End If

End Sub

Private Sub CommandButton9_Click()
'|fffd||fffd||fffd||fffd|

  Dim I As Long
  Dim RA As Object
  
  
  On Error Resume Next
  
  Set RA = New C05RA
  RA.Add UserForm1.ComboBox1.Value
  
  For I = 0 To Me.ListBox1.ListCount - 1
     If Me.ListBox1.Selected(I) = True Then
        RA.Add Me.ListBox1.list(I)
     End If
  Next I
  
  UserForm1.ComboBox1.Value = RA.RE
  Set RA = Nothing
  
  On Error GoTo 0
  
  Unload Me

End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "UserForm9"
Attribute VB_Base = "0{292C0142-0C0D-4B57-B7B9-BF98619E4730}{94DE8EA9-16B2-4552-8A32-70E1170CEE9B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|R|fffd|s|fffd|[
#If Win64 Then
  Private Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#Else
  Private Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" _
     (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, _
     ByVal bFailIfExists As Long) As Long
#End If

Dim H As Double
Dim W As Double

Private Sub UserForm_Initialize()

  '|fffd||fffd||fffd||fffd||752||fffd|
  If UserForm1.CheckBox49.Value = True Then
     Me.Caption = "Restoration select"
     Me.Label1.Caption = "Find what:"
     Me.Label2.Caption = "Replace with:"
     Me.CommandButton1.Caption = "Restore"
     Me.CommandButton2.Caption = "Diff"
  Else
     Me.Caption = "|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|"
     Me.Label1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd||fffd||fffd|"
     Me.Label2.Caption = "|fffd|u|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|"
     Me.CommandButton1.Caption = "|fffd||fffd||fffd||fffd|(R)"
     Me.CommandButton2.Caption = "|fffd||fffd|r(D)"
  End If
  
  If SW_MEIRYO = True Then
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Segoe UI"
        Me.Label2.Font.Name = "Segoe UI"
        Me.Label3.Font.Name = "Segoe UI"
        Me.CommandButton1.Font.Name = "Segoe UI"
        Me.CommandButton2.Font.Name = "Segoe UI"
     Else
        Me.Label1.Font.Name = "Meiryo UI"
        Me.Label2.Font.Name = "Meiryo UI"
        Me.Label3.Font.Name = "Meiryo UI"
        Me.CommandButton1.Font.Name = "Meiryo UI"
        Me.CommandButton2.Font.Name = "Meiryo UI"
     End If
  Else
     If SW_ENGLISH = True Then
        Me.Label1.Font.Name = "Tahoma"
        Me.Label2.Font.Name = "Tahoma"
        Me.Label3.Font.Name = "Tahoma"
        Me.CommandButton1.Font.Name = "Tahoma"
        Me.CommandButton2.Font.Name = "Tahoma"
     Else
        Me.Label1.Font.Name = "MS UI Gothic"
        Me.Label2.Font.Name = "MS UI Gothic"
        Me.Label3.Font.Name = "MS UI Gothic"
        Me.CommandButton1.Font.Name = "MS UI Gothic"
        Me.CommandButton2.Font.Name = "MS UI Gothic"
     End If
  End If

  If SW_ENGLISH = True Then
     Me.ComboBox1.Font.Name = "Courier New"
     Me.ComboBox1.Font.Size = 8
     Me.TextBox1.Font.Name = "Courier New"
     Me.TextBox1.Font.Size = 8
     Me.TextBox2.Font.Name = "Courier New"
     Me.TextBox2.Font.Size = 8
  Else
     Me.ComboBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.ComboBox1.Font.Size = 9
     Me.TextBox1.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox1.Font.Size = 9
     Me.TextBox2.Font.Name = "|fffd|l|fffd|r |fffd|S|fffd|V|fffd|b|fffd|N"
     Me.TextBox2.Font.Size = 9
  End If

  Call SET_RESCOMBO

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height
     W = Me.Width
     Me.Height = 0
     Me.Width = 0
  End If

End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton1)

End Sub

Private Sub CommandButton2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 
  Call MM_COM(Me.CommandButton2)

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

  Call MM_COM(Me)

End Sub

Private Sub CommandButton1_Enter()

  Me.CommandButton1.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton1.BackColor = &H8000000F

End Sub

Private Sub CommandButton2_Enter()

  Me.CommandButton2.BackColor = &HFFFFC0

End Sub

Private Sub CommandButton2_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.CommandButton2.BackColor = &H8000000F

End Sub

Private Sub UserForm_Activate()

  If UserForm1.CheckBox86.Value = False Then
     Me.StartUpPosition = 0
     Do While Me.Height < H Or Me.Width < W
        If Me.Height < H Then
           Me.Height = Me.Height + 2
        End If
        If Me.Width < W Then
           Me.Width = Me.Width + 6
        End If
        Me.Top = Me.Top - 0.9
        Me.Left = Me.Left - 2
        DoEvents
     Loop
     Me.Height = H
     Me.Width = W
  End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

  If UserForm1.CheckBox86.Value = False Then
     H = Me.Height + 1
     W = Me.Width + 1
  
     Do While H > Me.Height Or W > Me.Width
        H = Me.Height
        W = Me.Width
        Me.Height = Me.Height - 2
        Me.Width = Me.Width - 6
        Me.Top = Me.Top + 0.9
        Me.Left = Me.Left + 2
        DoEvents
     Loop
  End If

End Sub

Private Sub ComboBox1_Enter()

  Me.ComboBox1.BackColor = &HC0FFFF

End Sub

Private Sub ComboBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

  Me.ComboBox1.BackColor = &H80000005

End Sub

Private Sub ComboBox1_Change()

  Dim AR_WK As Variant


  If RPDIC.Exists(Me.ComboBox1.Value) = True Then
     AR_WK = Split(RPDIC(Me.ComboBox1.Value), vbTab)
     Select Case AR_WK(0)
     Case "SV"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Saved file"
        Else
           Me.Label3.Caption = "|fffd||6d1||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
        End If
     Case "CF"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Before cell find"
        Else
           Me.Label3.Caption = "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|O"
        End If
     Case "CR"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Before cell replace"
        Else
           Me.Label3.Caption = "|fffd|Z|fffd||fffd||fffd|u|fffd||fffd||fffd|O"
        End If
     Case "SF"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Before shape find"
        Else
           Me.Label3.Caption = "|fffd|V|fffd|F|fffd|C|fffd|v|fffd||fffd||fffd||fffd||fffd|O"
        End If
     Case "SR"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Before shape replace"
        Else
           Me.Label3.Caption = "|fffd|V|fffd|F|fffd|C|fffd|v|fffd|u|fffd||fffd||fffd|O"
        End If
     Case "UD"
        If UserForm1.CheckBox49.Value = True Then
           Me.Label3.Caption = "Before restore"
        Else
           Me.Label3.Caption = "|fffd||fffd||fffd||fffd||fffd|O"
        End If
     End Select
     Me.TextBox1.Value = AR_WK(1)
     Me.TextBox2.Value = AR_WK(2)
  Else
     Me.Label3.Caption = ""
     Me.TextBox1.Value = ""
     Me.TextBox2.Value = ""
  End If

End Sub

Private Sub CommandButton1_Click()

  Dim DT As Date
  Dim TM As Date
  Dim W_CNV As String
  
  Dim W_AWS As Boolean
  Dim W_FLNM As String
  Dim W_AWBP0 As String
  Dim W_AWBP1 As String
  Dim W_AWBP2 As String
  Dim FSO As Object
  Dim SW_RO As Boolean
  Dim AWB As Workbook
  
  
  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If

  W_FLNM = ActiveWorkbook.Name & _
           "_" & _
           Mid$(Me.ComboBox1.Value, 1, 4) & _
           Mid$(Me.ComboBox1.Value, 6, 2) & _
           Mid$(Me.ComboBox1.Value, 9, 2) & _
           "_" & _
           Mid$(Me.ComboBox1.Value, 12, 2) & _
           Mid$(Me.ComboBox1.Value, 15, 2) & _
           Mid$(Me.ComboBox1.Value, 18, 2)
  Select Case Mid$(Me.ComboBox1.Value, 21, 1)
  Case "-"
     W_FLNM = W_FLNM & "_M.bak"
  Case " "
     W_FLNM = W_FLNM & "_N.bak"
  Case "+"
     W_FLNM = W_FLNM & "_P.bak"
  End Select
  
  Set AWB = ActiveWorkbook
  W_AWS = ActiveWorkbook.Saved
  ActiveWorkbook.Saved = True
  SW_RO = False
  On Error GoTo L_ERR1
  If ActiveWorkbook.ReadOnly = False Then
     ActiveWorkbook.ChangeFileAccess Mode:=xlReadOnly
     SW_RO = True
  End If
  On Error GoTo 0
  
  W_AWBP0 = ActiveWorkbook.path
  W_AWBP1 = ActiveWorkbook.Name
  DT = Date
  TM = time
  If W_AWS = False Then
     ActiveWorkbook.SaveCopyAs ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_P.bak"
     W_CNV = CNV_FLNM(ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & "_P.bak")
     If RPDIC.Exists(W_CNV) = False Then
        RPDIC.Add W_CNV, "UD" & vbTab & "" & vbTab & ""
     End If
  End If
  W_AWBP2 = ActiveWorkbook.Name & "_" & Format(DT, "yyyymmdd") & "_" & Format(TM, "hhmmss") & ".del"
   
  On Error GoTo L_ERR2
  Set FSO = CreateObject("Scripting.FileSystemObject")
  FSO.GetFile(W_AWBP0 & "\" & W_AWBP1).Name = W_AWBP2
  Set FSO = Nothing
  On Error GoTo 0
  
  On Error GoTo L_ERR3
  W_RET = CopyFile(ThisWorkbook.path & "\" & W_FLNM, W_AWBP0 & "\" & W_AWBP1, 0)
  On Error GoTo 0
  
  Windows(AWB.Name).Close False
  Set AWB = Nothing
  
  Workbooks.Open W_AWBP0 & "\" & W_AWBP1

  Windows(W_AWBP1).Visible = False
  
  Set AWB = Workbooks.Add
  Windows(W_AWBP1).Visible = True
  AWB.Close False
  Set AWB = Nothing

  On Error Resume Next
  Kill W_AWBP0 & "\" & W_AWBP2
  On Error GoTo 0

  ActiveWorkbook.Saved = True

  Unload Me
  Exit Sub

L_ERR1:
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Restoration failed.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
  End If
  Exit Sub

L_ERR2:
  If SW_RO = True Then
     ActiveWorkbook.ChangeFileAccess Mode:=xlReadWrite
  End If
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Restoration failed.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
  End If
  Exit Sub

L_ERR3:
  Set FSO = CreateObject("Scripting.FileSystemObject")
  FSO.GetFile(W_AWBP0 & "\" & W_AWBP2).Name = W_AWBP1
  Set FSO = Nothing

  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Restoration failed.")
  Else
     W_RET = MsgBox("|fffd||fffd||fffd||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
  End If
  Exit Sub

End Sub

Private Sub CommandButton2_Click()

  Dim W_FLNM As String
  
  
  If Me.ComboBox1.Value = "" Then
     Exit Sub
  End If

  W_FLNM = ActiveWorkbook.Name & _
           "_" & _
           Mid$(Me.ComboBox1.Value, 1, 4) & _
           Mid$(Me.ComboBox1.Value, 6, 2) & _
           Mid$(Me.ComboBox1.Value, 9, 2) & _
           "_" & _
           Mid$(Me.ComboBox1.Value, 12, 2) & _
           Mid$(Me.ComboBox1.Value, 15, 2) & _
           Mid$(Me.ComboBox1.Value, 18, 2)
  Select Case Mid$(Me.ComboBox1.Value, 21, 1)
  Case "-"
     W_FLNM = W_FLNM & "_M.bak"
  Case " "
     W_FLNM = W_FLNM & "_N.bak"
  Case "+"
     W_FLNM = W_FLNM & "_P.bak"
  End Select
  
  On Error GoTo L_ERR
  Call XL_DIFF(ThisWorkbook.path & "\" & W_FLNM, ActiveWorkbook.path & "\" & ActiveWorkbook.Name, False)
  On Error GoTo 0
  
  Unload Me
  Exit Sub

L_ERR:
  If UserForm1.CheckBox49.Value = True Then
     W_RET = MsgBox("Diff failed.")
  Else
     W_RET = MsgBox("|fffd||fffd|r|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
  End If
  Exit Sub

End Sub

Sub SET_RESCOMBO()
  
  Dim W_FLNM As String
  Dim W_CBITEM As String
  
  
  Me.ComboBox1.Clear
  Me.ComboBox1.ListIndex = -1
     
  W_FLNM = Dir(ThisWorkbook.path & "\" & ActiveWorkbook.Name & "_*.bak")
  Do While W_FLNM <> ""
     If Len(W_FLNM) = Len(ActiveWorkbook.Name) + Len("_yyyymmdd_hhmmss_N.bak") Then
        W_CBITEM = Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 2, 4) & "/" & _
                   Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 6, 2) & "/" & _
                   Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 8, 2) & " " & _
                   Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 11, 2) & ":" & _
                   Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 13, 2) & ":" & _
                   Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 15, 2)
        Select Case Mid$(W_FLNM, Len(ActiveWorkbook.Name) + 18, 1)
        Case "M"
           W_CBITEM = W_CBITEM & " -"
        Case "N"
           W_CBITEM = W_CBITEM & "  "
        Case "P"
           W_CBITEM = W_CBITEM & " +"
        End Select
        Me.ComboBox1.AddItem W_CBITEM
     End If
     W_FLNM = Dir()
  Loop
  
End Sub

Private Sub UserForm_Terminate()

  Unload UserForm15

End Sub
Attribute VB_Name = "shFunctions"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' *'Z,

INQUEST-PP=macro
