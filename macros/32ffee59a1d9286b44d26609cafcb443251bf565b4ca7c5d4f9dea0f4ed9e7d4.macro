Attribute VB_Name = "Module1"
Function CountColour(rng As Range, clr As Range)
 Application.Volatile
 Dim c As Range
 For Each c In rng
     If c.Font.Color = clr.Font.Color Then
         CountColour = CountColour + 1
     End If
 Next
 End Function
Attribute VB_Name = "Module2"
Function CalculateAttenuation(rge As Range)
  Application.Volatile
  Dim strt As Range
  For Each strt In rge
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    clmn1 = strt.Cells.Column
    linkLen = 0
    splices = 0
    totalAtt = 0
    Do While strt.Worksheet.Cells(rw, clmn).Interior.Color = strt.Worksheet.Cells(rw, clmn1).Interior.Color
        If strt.Worksheet.Cells(rw, clmn).Font.Color = rge.Font.Color Then
            splices = splices + 1
        End If
        linkLen = linkLen + strt.Worksheet.Cells(10, clmn).Value
        clmn = clmn + 1
    Loop
    'added 300m for every connection for in station handling and 5% additional link length
    'added 3dB attenuation for FO aging
    
    'Enable for regular Attenuation Calculation - according to standard
    'totalAtt = 1.5 + splices * 0.2 + (linkLen * 1.1 + 300) * 0.4 / 1000 + 3
    
    'Enable for installation Attenuation Calculation - 1550nm
     totalAtt = 0.7 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.22 / 1000
     
    'Enable for installation Attenuation Calculation - 1310nm
    'totalAtt = 0.7 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.36 / 1000
    
    
    CalculateAttenuation = totalAtt
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    
    'delete all comments
    If strt.Worksheet.Cells(rw, clmn + 1).Comment Is Nothing Then
    Else
        strt.Worksheet.Cells(rw, clmn + 1).Comment.Delete
    End If
    
    
    'enable the IF only if you want to check for excel matching errors
    'If splices = 0 Then
    
        With strt.Worksheet.Cells(rw, clmn + 1).AddComment
            .Visible = True
            .Text "Link Attenuation  " & totalAtt & "dB"
            '.Text splices & "     " & linkLen
            .Shape.ScaleHeight 0.21, msoFalse, msoScaleFromTopLeft
            .Shape.ScaleWidth 2, msoFalse, msoScaleFromTopLeft
        End With
  
    'End If
    
    
  Next
End Function

Attribute VB_Name = "Module3"
Function CalculateAttenuationTETRA(rge As Range)
'used to calculate attenuation exclusively for TETRA links.  There is no short or long TETRA link because there are no FO links going to the depot
  Application.Volatile
  Dim strt As Range
  For Each strt In rge
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    clmn1 = strt.Cells.Column
    linkLen = 0
    splices = 0
    totalAtt = 0
    Do While strt.Worksheet.Cells(rw, clmn).Interior.Color = strt.Worksheet.Cells(rw, clmn1).Interior.Color
        If strt.Worksheet.Cells(rw, clmn).Font.Color = rge.Font.Color Then
            splices = splices + 1
        End If
        linkLen = linkLen + strt.Worksheet.Cells(10, clmn).Value
        clmn = clmn + 1
    Loop
    'added 300m for every connection for in station handling and 5% additional link length
    'added 3dB attenuation for FO aging
    
    'Enable for regular Attenuation Calculation - according to standard
    'totalAtt = 1.5 + splices * 0.2 + (linkLen * 1.1 + 300) * 0.4 / 1000 + 3
    
    'Enable for installation Attenuation Calculation - 1550nm
     totalAtt = 0.7 + splices * 0.07 + (linkLen * 1.1 + 300) * 0.22 / 1000
     
    'Enable for installation Attenuation Calculation - 1310nm
    'totalAtt = 0.7 + splices * 0.07 + (linkLen * 1.1 + 300) * 0.36 / 1000
    
    
    CalculateAttenuationTETRA = totalAtt
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    
    'delete all comments
    If strt.Worksheet.Cells(rw, clmn + 1).Comment Is Nothing Then
    Else
        strt.Worksheet.Cells(rw, clmn + 1).Comment.Delete
    End If
    
    
    'enable the IF only if you want to check for excel matching errors
    'If splices = 0 Then
    
        With strt.Worksheet.Cells(rw, clmn + 1).AddComment
            .Visible = True
            .Text "Link Attenuation  " & totalAtt & "dB"
            '.Text splices & "     " & linkLen
            .Shape.ScaleHeight 0.21, msoFalse, msoScaleFromTopLeft
            .Shape.ScaleWidth 2, msoFalse, msoScaleFromTopLeft
        End With
  
    'End If
    
    
  Next
End Function


Attribute VB_Name = "Module4"
Function CalculateAttenuationSIG(rge As Range)
  Application.Volatile
  Dim strt As Range
  For Each strt In rge
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    clmn1 = strt.Cells.Column
    linkLen = 0
    splices = 0
    totalAtt = 0
    Do While strt.Worksheet.Cells(rw, clmn).Interior.Color = strt.Worksheet.Cells(rw, clmn1).Interior.Color
        If strt.Worksheet.Cells(rw, clmn).Font.Color = rge.Font.Color Then
            splices = splices + 1
        End If
        linkLen = linkLen + strt.Worksheet.Cells(10, clmn).Value
        clmn = clmn + 1
    Loop
    'added 300m for every connection for in station handling and 5% additional link length
    'added 3dB attenuation for FO aging
    
    'Enable for regular Attenuation Calculation - according to standard
    'totalAtt = 1.5 + splices * 0.2 + (linkLen * 1.1 + 300) * 0.4 / 1000 + 3
    
    'Enable for installation Attenuation Calculation - 1550nm
     totalAtt = 1 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.22 / 1000
     
    'Enable for installation Attenuation Calculation - 1310nm
    'totalAtt = 1 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.36 / 1000
    
    
    CalculateAttenuationSIG = totalAtt
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    
    'delete all comments
    If strt.Worksheet.Cells(rw, clmn + 1).Comment Is Nothing Then
    Else
        strt.Worksheet.Cells(rw, clmn + 1).Comment.Delete
    End If
    
    
    'enable the IF only if you want to check for excel matching errors
    'If splices = 0 Then
    
        With strt.Worksheet.Cells(rw, clmn + 1).AddComment
            .Visible = True
            .Text "Link Attenuation  " & totalAtt & "dB"
            '.Text splices & "     " & linkLen
            .Shape.ScaleHeight 0.21, msoFalse, msoScaleFromTopLeft
            .Shape.ScaleWidth 2, msoFalse, msoScaleFromTopLeft
        End With
  
    'End If
    
    
  Next
End Function


Attribute VB_Name = "Module5"
Function CalculateAttenuationDPELong(rge As Range)
'use to calculate alternate longer path from 2G1 to DPE
  Application.Volatile
  Dim strt As Range
  For Each strt In rge
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    clmn1 = strt.Cells.Column
    linkLen = 0
    'specify the difference between the link length calculated automaticaly by the table and the actual distance for the alternatove route
    linkDiff = 500
    splices = 0
    totalAtt = 0
    Do While strt.Worksheet.Cells(rw, clmn).Interior.Color = strt.Worksheet.Cells(rw, clmn1).Interior.Color
        If strt.Worksheet.Cells(rw, clmn).Font.Color = rge.Font.Color Then
            splices = splices + 1
        End If
        linkLen = linkLen + strt.Worksheet.Cells(10, clmn).Value
        clmn = clmn + 1
    Loop
    'added 300m for every connection for in station handling and 5% additional link length
    'added 3dB attenuation for FO aging
    
    'Enable for regular Attenuation Calculation - according to standard
    'totalAtt = 1.5 + splices * 0.2 + ((linkLen + linkDiff) * 1.1 + 300) * 0.4 / 1000 + 3
    
    'Enable for installation Attenuation Calculation - 1550nm
     totalAtt = 0.7 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.22 / 1000
     
    'Enable for installation Attenuation Calculation - 1310nm
    'totalAtt = 0.7 + splices * 0.1 + (linkLen * 1.1 + 300) * 0.36 / 1000
    
    
    CalculateAttenuationDPELong = totalAtt
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    
    'delete all comments
    If strt.Worksheet.Cells(rw, clmn + 1).Comment Is Nothing Then
    Else
        strt.Worksheet.Cells(rw, clmn + 1).Comment.Delete
    End If
    
    
    'enable the IF only if you want to check for excel matching errors
    'If splices = 0 Then
    
        With strt.Worksheet.Cells(rw, clmn + 1).AddComment
            .Visible = True
            .Text "Link Attenuation  " & totalAtt & "dB"
            '.Text splices & "     " & linkLen
            .Shape.ScaleHeight 0.21, msoFalse, msoScaleFromTopLeft
            .Shape.ScaleWidth 2, msoFalse, msoScaleFromTopLeft
        End With
  
    'End If
    
    
  Next
End Function


Attribute VB_Name = "Module6"
Function CalculateAttenuationDPELongSIG(rge As Range)
'use to calculate alternate longer path from 2G1 to DPE
  Application.Volatile
  Dim strt As Range
  For Each strt In rge
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    clmn1 = strt.Cells.Column
    linkLen = 0
    'specify the difference between the link length calculated automaticaly by the table and the actual distance for the alternatove route
    linkDiff = 500
    splices = 0
    totalAtt = 0
    Do While strt.Worksheet.Cells(rw, clmn).Interior.Color = strt.Worksheet.Cells(rw, clmn1).Interior.Color
        If strt.Worksheet.Cells(rw, clmn).Font.Color = rge.Font.Color Then
            splices = splices + 1
        End If
        linkLen = linkLen + strt.Worksheet.Cells(10, clmn).Value
        clmn = clmn + 1
    Loop
    'added 300m for every connection for in station handling and 5% additional link length
    'added 3dB attenuation for FO aging
    
    'Enable for regular Attenuation Calculation - according to standard
    'totalAtt = 1.5 + splices * 0.2 + ((linkLen + linkDiff) * 1.1 + 300) * 0.4 / 1000 + 3
    
    'Enable for installation Attenuation Calculation - 1550nm
     totalAtt = 1 + splices * 0.1 + ((linkLen + linkDiff) * 1.1 + 300) * 0.22 / 1000
     
    'Enable for installation Attenuation Calculation - 1310nm
    'totalAtt = 1 + splices * 0.1 + ((linkLen + linkDiff) * 1.1 + 300) * 0.36 / 1000
    
    
    CalculateAttenuationDPELongSIG = totalAtt
    rw = strt.Cells.Row
    clmn = strt.Cells.Column
    
    'delete all comments
    If strt.Worksheet.Cells(rw, clmn + 1).Comment Is Nothing Then
    Else
        strt.Worksheet.Cells(rw, clmn + 1).Comment.Delete
    End If
    
    
    'enable the IF only if you want to check for excel matching errors
    'If splices = 0 Then
    
        With strt.Worksheet.Cells(rw, clmn + 1).AddComment
            .Visible = True
            .Text "Link Attenuation  " & totalAtt & "dB"
            '.Text splices & "     " & linkLen
            .Shape.ScaleHeight 0.21, msoFalse, msoScaleFromTopLeft
            .Shape.ScaleWidth 2, msoFalse, msoScaleFromTopLeft
        End With
  
    'End If
    
    
  Next
End Function



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
