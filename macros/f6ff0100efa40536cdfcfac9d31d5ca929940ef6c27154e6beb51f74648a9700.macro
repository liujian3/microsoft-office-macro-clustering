Attribute VB_Name = "EstaPasta_de_trabalho"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





Attribute VB_Name = "Module1"
Dim ExcelObj As Object

Sub AjustarComentarios()
    Application.DisplayCommentIndicator = xlCommentAndIndicator
    For Each c In ActiveWorkbook.ActiveSheet.Comments
        c.Shape.Select True
        Selection.AutoSize = True
    Next
    Application.DisplayCommentIndicator = xlCommentIndicatorOnly
End Sub

Public Function OpenNewExcel(nPath As String, nFile As String)
    On Error GoTo ErrorHandler    'O controle de erro possibilita o uso de um objeto excel j|fffd| criado e ainda aberto.
    If Not ExcelObj Is Nothing Then If ExcelObj.Caption = "Microsoft Excel" Then Set ExcelObj = Nothing    'Estranho, apesar do Excel fechado, o objeto continua existindo. Ent|fffd|o testa sob controle de erro e mata se vazio.
    ExcelObj.Visible = False
    On Error GoTo ErrorHandlerFim
    With ExcelObj
        '.Visible = True    'Usado s|fffd| em debug
        Set ExcelWb = .Workbooks.Open(nPath & "\" & nFile)
        If LCase(Right(nFile, 4)) = ".tmp" Then
            '.ActiveWorkbook.RunAutoMacros (xlAutoOpen)
            'Sendo tmp, faz uma c|fffd|pia para um novo Wb e ativa a pasta. Isso era feito automacro em XLM
            'mas no 2007 deu problemas ao copiar planilha.
            .ExecuteExcel4Macro ("DIRECTORY(""" & ExcelWb.Path & """)")
            ExcelWb.Sheets("Defini|fffd||fffd|esOriginais").Visible = True
            ExcelWb.Sheets(Array("Tabela", "Defini|fffd||fffd|esOriginais")).Select
            ExcelWb.Sheets(Array("Tabela", "Defini|fffd||fffd|esOriginais")).Copy
            Set ExcelWbNew = .ActiveWorkbook
            ExcelWbNew.Sheets("Defini|fffd||fffd|esOriginais").Visible = False
            ExcelWbNew.Sheets(1).Range("A1").Select
            ExcelWb.Saved = True
            ExcelWb.Close False
        End If
        .Visible = True
    End With
    Exit Function
ErrorHandler:
    Dim bFail As Boolean
    Set ExcelObj = Nothing
    Set ExcelObj = CreateObject("Excel.Application")
    bFail = ExcelObj Is Nothing
    If Not bFail Then
        If ExcelObj.Version = Application.Version Then
            If ExcelObj.Workbooks.Count > 0 Then Set ExcelObj = Nothing: bFail = True    'Se de mesma vers|fffd|o, mas n|fffd|o vazia pode ser uma rodando ou esta pr|fffd|pria, ent|fffd|o mata objeto sem quit e flag falha.
        Else
            bFail = True: If ExcelObj.Workbooks.Count = 0 Then ExcelObj.Quit: Set ExcelObj = Nothing        'Vers|fffd|o diferente, flag falha. Se vazia mata objeto e quit vazia
        End If
    End If
    If bFail Then    'Em dvr.mac criei para todo CPAP a possibilidade de sempre criar objeto de mesma vers|fffd|o usando o mesmo c|fffd|digo do XLtoEXE para criar padr|fffd|o ou especial.
        Application.ExecuteExcel4Macro ("cpap_pri.mac!AbrirDVR()")
        Set ExcelObj = Application.Run("CPAP_DVR.MAC!CreateNewExcelObj", True)
        Application.Workbooks("CPAP_DVR.MAC").Close False
    End If
    Resume Next
ErrorHandlerFim:
    ExcelObj.Visible = True
End Function

Sub tt()
    OpenNewExcel "s:\Cpap15\Tabelas", "TAB00001.TMP"
    OpenNewExcel "s:\Cpap15\Tabelas", "Teste2k2.xls"
End Sub
Attribute VB_Name = "Plan1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True







INQUEST-PP=macro
