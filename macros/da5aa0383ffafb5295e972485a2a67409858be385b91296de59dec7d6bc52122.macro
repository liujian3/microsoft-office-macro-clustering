Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Const PARAMDATA = 1
Const WSBOOKVALUE = 2

'Criteria labels
Const LBLREFYEAR = "A4"
Const LBLASSETGRP = "A5"
Const LBLASSETCODE = "A6"
Const LBLCU = "A7"
Const LBLPROJECT = "A8"
Const LBLFISCALGRP = "E5"
Const LBLITEMCODE = "E6"
Const LBLCC = "E7"

'Criteria values
Const VALREFYEAR = "B4"
Const VALASSETGRP = "B5"
Const VALASSETCODE = "B6"
Const VALCU = "B7"
Const VALPROJECT = "B8"
Const VALFISCALGRP = "F5"
Const VALITEMCODE = "F6"
Const VALCC = "F7"

Const LASTCOLUMN = "M"

Dim App                             As esl.Application
Dim goCompany                       As esl.COMPANY

'Header column labels - For Grouping sheet
Dim HCELLFISCALGROUP As String
Dim HCELLFGDESCRIPTION As String
Dim HCELLASSETCODE As String
Dim HCELLDESCRIPTION As String
Dim HCELLASSETGROUP As String
Dim HCELLITEMCODE As String
Dim HCELLCOSTUNIT As String
Dim HCELLCOSTCENTER As String
Dim HCELLPROJECT As String
Dim HCELLDEPRMETHOD As String
Dim HCELLLIQUIDATIONDATE As String
Dim HCELLFISCALVALUATION As String
Dim HCELLBOOKVALUE As String

''Local variable
Dim sRefYear As String

Dim AssetGroup_From As String
Dim AssetGroup_To As String
Dim AssetGroup_All As Boolean

Dim FiscalGroup_From As String
Dim FiscalGroup_To As String
Dim FiscalGroup_All As Boolean

Dim AssetCode_From As String
Dim AssetCode_To As String
Dim Assetcode_All As Boolean

Dim ItemCode_From As String
Dim ItemCode_To As String
Dim Itemcode_All As Boolean

Dim CostCenter_From As String
Dim CostCenter_To As String
Dim CostCenter_All As Boolean

Dim CostUnit_From As String
Dim CostUnit_To As String
Dim CostUnit_All As Boolean

Dim Project_From As String
Dim Project_To As String
Dim Project_All As Boolean

Dim stActive As Boolean
Dim stSold As Boolean
Dim stInactive As Boolean
Dim stWriteOff As Boolean

Dim lLastRow As Long

Public Sub OnRefreshInitialize(ByRef poCompany As Object)
    'Create instance
    Set App = New esl.Application
    
    ''tanj42445 - 20080823 - BR 27.969.669
    ''Issue: Report got error when language is set to Czech
    ''       This is due to the sheet name can only hold 31 char & the czech language return more than that
    ''Solution: Only show the first 31 char when assigning name of the sheet
    ThisWorkbook.Worksheets(WSBOOKVALUE).Name = Left$(App.Term.String(35457, "Fiscal book value"), 31)
    ThisWorkbook.Worksheets(WSBOOKVALUE).Range("A2").Value = App.Term.String(35516, "Fiscal book value at liquidated assets")
    
    Set goCompany = New esl.COMPANY
    Debug.Assert Not poCompany Is Nothing
    Set goCompany = poCompany
    
End Sub

Public Sub OnRefreshBeforeReports()
    
    Dim lLastRow As Long
    
    GetSlicData
    InitCol
    
    Worksheets(WSBOOKVALUE).Activate
    Call FillColor(WSBOOKVALUE)
        
    With ThisWorkbook
        .Colors(1) = RGB(227, 238, 240)
        .Colors(52) = RGB(200, 220, 225)
        .Colors(53) = RGB(173, 190, 201)
        
        ''Year
        Worksheets(WSBOOKVALUE).Range(VALREFYEAR).Value = "'" & sRefYear
        
        ''Asset group
        If AssetGroup_All Then
            Worksheets(WSBOOKVALUE).Range(VALASSETGRP).Value = "'" & App.Term.String(5614, "All")
        Else
            If AssetGroup_From <> "" And AssetGroup_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALASSETGRP).Value = "'" & AssetGroup_From & " - " & AssetGroup_To
            ElseIf AssetGroup_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALASSETGRP).Value = "'" & App.Term.String(5007, "From") & " " & AssetGroup_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALASSETGRP).Value = "'" & App.Term.String(8165, "To") & " " & AssetGroup_To
            End If
        End If
        
        ''Fiscal group
        If FiscalGroup_All Then
            Worksheets(WSBOOKVALUE).Range(VALFISCALGRP).Value = "'" & App.Term.String(5614, "All")
        Else
            If FiscalGroup_From <> "" And FiscalGroup_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALFISCALGRP).Value = "'" & FiscalGroup_From & " - " & FiscalGroup_To
            ElseIf FiscalGroup_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALFISCALGRP).Value = "'" & App.Term.String(5007, "From") & " " & FiscalGroup_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALFISCALGRP).Value = "'" & App.Term.String(8165, "To") & " " & FiscalGroup_To
            End If
        End If
        
        ''Asset code
        If Assetcode_All Then
            Worksheets(WSBOOKVALUE).Range(VALASSETCODE).Value = "'" & App.Term.String(5614, "All")
        Else
            If AssetCode_From <> "" And AssetCode_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALASSETCODE).Value = "'" & AssetCode_From & " - " & AssetCode_To
            ElseIf AssetCode_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALASSETCODE).Value = "'" & App.Term.String(5007, "From") & " " & AssetCode_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALASSETCODE).Value = "'" & App.Term.String(8165, "To") & " " & AssetCode_To
            End If
        End If
        
        ''Item code
        If Itemcode_All Then
            Worksheets(WSBOOKVALUE).Range(VALITEMCODE).Value = "'" & App.Term.String(5614, "All")
        Else
            If ItemCode_From <> "" And ItemCode_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALITEMCODE).Value = "'" & ItemCode_From & " - " & ItemCode_To
            ElseIf ItemCode_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALITEMCODE).Value = "'" & App.Term.String(5007, "From") & " " & ItemCode_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALITEMCODE).Value = "'" & App.Term.String(8165, "To") & " " & ItemCode_To
            End If
        End If
        
        ''Cost center
        If CostCenter_All Then
            Worksheets(WSBOOKVALUE).Range(VALCC).Value = "'" & App.Term.String(5614, "All")
        Else
            If CostCenter_From <> "" And CostCenter_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALCC).Value = "'" & CostCenter_From & " - " & CostCenter_To
            ElseIf CostCenter_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALCC).Value = "'" & App.Term.String(5007, "From") & " " & CostCenter_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALCC).Value = "'" & App.Term.String(8165, "To") & " " & CostCenter_To
            End If
        End If
        
        ''Cost unit
        If CostUnit_All Then
            Worksheets(WSBOOKVALUE).Range(VALCU).Value = "'" & App.Term.String(5614, "All")
        Else
            If CostUnit_From <> "" And CostUnit_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALCU).Value = "'" & CostUnit_From & " - " & CostUnit_To
            ElseIf CostUnit_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALCU).Value = "'" & App.Term.String(5007, "From") & " " & CostUnit_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALCU).Value = "'" & App.Term.String(8165, "To") & " " & CostUnit_To
            End If
        End If
        
        ''Project
        If Project_All Then
            Worksheets(WSBOOKVALUE).Range(VALPROJECT).Value = "'" & App.Term.String(5614, "All")
        Else
            If Project_From <> "" And Project_To <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALPROJECT).Value = "'" & Project_From & " - " & Project_To
            ElseIf Project_From <> "" Then
                Worksheets(WSBOOKVALUE).Range(VALPROJECT).Value = "'" & App.Term.String(5007, "From") & " " & Project_From
            Else
                Worksheets(WSBOOKVALUE).Range(VALPROJECT).Value = "'" & App.Term.String(8165, "To") & " " & Project_To
            End If
        End If
        
    End With
    
    'Define criteria columns
    With Worksheets(WSBOOKVALUE)
        .Range(LBLREFYEAR).Value = App.Term.String(34774, "As at")
        .Range(LBLASSETGRP).Value = App.Term.String(5514, "Asset group")
        .Range(LBLASSETCODE).Value = App.Term.String(6057, "Serial number")
        .Range(LBLITEMCODE).Value = App.Term.String(1102, "Item code")
        .Range(LBLCC).Value = App.Term.String(8494, "Cost center")
        .Range(LBLCU).Value = App.Term.String(1194, "Cost unit")
        .Range(LBLPROJECT).Value = App.Term.String(8657, "Project")
        .Range(LBLFISCALGRP).Value = App.Term.String(30306, "Fiscal group")     'BR 35.352.802
    End With
    
    'Generating SQL query dynamically
    Call GenerateSQLQuery(WSBOOKVALUE)
    
    'Define grouping header
    With Worksheets(WSBOOKVALUE)
        .Range(HCELLFISCALGROUP).Value = App.Term.String(30306, "Fiscal group")
        .Range(HCELLFGDESCRIPTION).Value = App.Term.String(4243, "Description")
        .Range(HCELLASSETCODE).Value = App.Term.String(6057, "Serial number")
        .Range(HCELLDESCRIPTION).Value = App.Term.String(4243, "Description")
        .Range(HCELLASSETGROUP).Value = App.Term.String(5514, "Asset group")
        .Range(HCELLITEMCODE).Value = App.Term.String(1102, "Item code")
        .Range(HCELLCOSTCENTER).Value = App.Term.String(8494, "Cost center")
        .Range(HCELLCOSTUNIT).Value = App.Term.String(1194, "Cost unit")
        .Range(HCELLPROJECT).Value = App.Term.String(8657, "Project")
        .Range(HCELLDEPRMETHOD).Value = App.Term.String(6393, "Depreciation Method")    'BR 35.352.802
        .Range(HCELLLIQUIDATIONDATE).Value = App.Term.String(35568, "Liquidation date") 'BR 35.352.802
        .Range(HCELLFISCALVALUATION).Value = App.Term.String(35514, "Fiscal valuation")
        .Range(HCELLBOOKVALUE).Value = App.Term.String(5635, "Book value")
    End With
        
    'Clear report data
    'Select the last used rows and columns
    lLastRow = Worksheets(WSBOOKVALUE).UsedRange.Rows.Count + 1
    Call DeleteCellValue(WSBOOKVALUE, lLastRow)
    
End Sub

Public Sub OnRefreshAfterReports()
    Dim i As Integer
    Dim j As Integer
    Dim iBeforeGroupingLastNr As Integer
    Dim iAfterGroupingLastNr As Integer

    'Check if resultset is empty
    If IsEmpty(Worksheets(WSBOOKVALUE).Range("A12").Value) Then
        App.Message 0, App.Term.String(8075, "No data which meets the criteria entered"), App.Term.String(35457, "Fiscal book value"), edlgInfo
        Application.DisplayAlerts = False
        Application.Quit
        Set App = Nothing
        Exit Sub
    End If
    DoEvents
    
    If lLastRow = 0 Then lLastRow = Worksheets(WSBOOKVALUE).UsedRange.Rows.Count + 3
    
    If Not IsEmpty(Worksheets(WSBOOKVALUE).Range("A12").Value) Then
        'Clear unnecessary data
        Call FormatReportLayout(WSBOOKVALUE, lLastRow)
        'Include grouping and sorting order
        Call SortAndGrpReport(WSBOOKVALUE, lLastRow)
        Call FormatCell(WSBOOKVALUE)
    End If
    
    Worksheets(WSBOOKVALUE).Activate
    
    Set App = Nothing

End Sub

Sub GetSlicData()
    
    With ThisWorkbook
        sRefYear = .Names("RefYear").RefersToRange.Value
        
        AssetGroup_All = .Names("AssetGroup.All").RefersToRange.Value
        AssetGroup_From = .Names("AssetGroup.From").RefersToRange.Value
        AssetGroup_To = IIf(InStr(.Names("AssetGroup.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("AssetGroup.To").RefersToRange.Value)
        
        FiscalGroup_All = .Names("FiscalGroup.All").RefersToRange.Value
        FiscalGroup_From = .Names("FiscalGroup.From").RefersToRange.Value
        FiscalGroup_To = IIf(InStr(.Names("FiscalGroup.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("FiscalGroup.To").RefersToRange.Value)
        
        Assetcode_All = .Names("AssetCode.All").RefersToRange.Value
        AssetCode_From = .Names("AssetCode.From").RefersToRange.Value
        AssetCode_To = IIf(InStr(.Names("AssetCode.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("AssetCode.To").RefersToRange.Value)
        
        Itemcode_All = .Names("ItemCode.All").RefersToRange.Value
        ItemCode_From = .Names("ItemCode.From").RefersToRange.Value
        ItemCode_To = IIf(InStr(.Names("ItemCode.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("ItemCode.To").RefersToRange.Value)
        
        CostCenter_All = .Names("CostCenter.All").RefersToRange.Value
        CostCenter_From = .Names("CostCenter.From").RefersToRange.Value
        CostCenter_To = IIf(InStr(.Names("CostCenter.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("CostCenter.To").RefersToRange.Value)
        
        CostUnit_All = .Names("CostUnit.All").RefersToRange.Value
        CostUnit_From = .Names("CostUnit.From").RefersToRange.Value
        CostUnit_To = IIf(InStr(.Names("CostUnit.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("CostUnit.To").RefersToRange.Value)
        
        Project_All = .Names("Project.All").RefersToRange.Value
        Project_From = .Names("Project.From").RefersToRange.Value
        Project_To = IIf(InStr(.Names("Project.To").RefersToRange.Value, Chr(255)) = 1, "", .Names("Project.To").RefersToRange.Value)
        
        stActive = .Names("fipActive").RefersToRange.Value
        stSold = .Names("fipSold").RefersToRange.Value
        stInactive = .Names("fipInactive").RefersToRange.Value
        stWriteOff = .Names("fipWrittenoff").RefersToRange.Value
        
    End With
End Sub

Sub InitCol()

    HCELLFISCALGROUP = "A11"
    HCELLFGDESCRIPTION = "B11"      'BR 35.352.802
    HCELLASSETCODE = "C11"
    HCELLDESCRIPTION = "D11"
    HCELLASSETGROUP = "E11"
    HCELLITEMCODE = "F11"
    HCELLCOSTCENTER = "G11"
    HCELLCOSTUNIT = "H11"
    HCELLPROJECT = "I11"
    HCELLDEPRMETHOD = "J11"
    HCELLLIQUIDATIONDATE = "K11"
    HCELLFISCALVALUATION = "L11"
    HCELLBOOKVALUE = "M11"
    
End Sub

Sub FillColor(sWorksheet)
    Dim lCnt As Long
    Dim LastCell As String
    
    LastCell = LASTCOLUMN
    
    Range("A1").Select
    Selection.Interior.Color = RGB(200, 220, 225)
    
    Range("A2").Select
    Selection.Interior.Color = RGB(200, 220, 225)
    
    Range("A11:" & LastCell & "11").Select
    Selection.Interior.Color = RGB(173, 190, 201)
    For lCnt = 1 To 2
        Range("A" & CStr(lCnt) & ":" & LastCell & CStr(lCnt)).Select
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlBottom
            .WrapText = False
            .Orientation = 0
            .AddIndent = False
            .ShrinkToFit = False
            .MergeCells = False
        End With
        Selection.Merge
        With Selection.Interior
            If lCnt = 1 Then
                .Color = RGB(173, 190, 201)
            Else
                .Color = RGB(200, 220, 225)
            End If
            .Pattern = xlSolid
        End With
    Next lCnt
    
End Sub

Sub DeleteCellValue(sWorksheet, lLastRow)
    Dim sLastCell As String
    
    On Error GoTo ErrHdl
    Worksheets(sWorksheet).Activate
    sLastCell = LASTCOLUMN
    
    With Worksheets(sWorksheet)
        .Range("A12:" & sLastCell & "12").Select
        Selection.ClearContents
               
        .Range("A12:" & sLastCell & lLastRow).Select
        Selection.Rows.Ungroup
        Selection.Rows.Ungroup
        Selection.Rows.Ungroup
        
        'unbold all cell
        .Range("A12:" & sLastCell & lLastRow).Font.Bold = False
        
        Cells.Select
        Selection.Delete
        
        'Set focus back to cell
        .Range("A12").Select
    End With

Exit Sub
ErrHdl:
    With Worksheets(sWorksheet)
        'unbold all cell
        .Range("A13:" & sLastCell & lLastRow).Font.Bold = False
        
        'Set focus back to cell
        .Range("A13").Select
        .Range("A13:" & sLastCell & lLastRow).Select
        Selection.Delete
        
        'Set focus back to cell
        .Range("A12").Select
    End With
End Sub

'Define report layout
Sub FormatReportLayout(sWorksheet, lLastRow)
    
    Dim i As Integer
    Dim sFormat As String
    Dim nPrecision As Integer
    nPrecision = goCompany.CurrencyCalculator.CurrencyAmountPrecision(goCompany.CurrencyCalculator.DefaultCurrency)
    sFormat = "#,##0." & String(nPrecision, "0")
    
    'Activate worksheet
    Worksheets(sWorksheet).Activate

    'Disable some stuff:
    With ActiveWindow
        .DisplayWorkbookTabs = True
        .DisplayGridlines = False
        .FreezePanes = False
        .DisplayZeros = True
        .Zoom = 100
    End With

    Application.DisplayFormulaBar = True
    Application.ScreenUpdating = True
    Application.StatusBar = ""
    
    'Define column width:
    With Worksheets(sWorksheet)
        .Columns("A").ColumnWidth = 25# 'fiscal group
        .Columns("B").ColumnWidth = 30# 'desc
        .Columns("C").ColumnWidth = 25# 'serial number
        .Columns("D").ColumnWidth = 30# 'desc
        .Columns("E").ColumnWidth = 25# 'asset group
        .Columns("F").ColumnWidth = 25# 'item code
        .Columns("G").ColumnWidth = 25# 'cost center
        .Columns("H").ColumnWidth = 25# 'cost unit
        .Columns("I").ColumnWidth = 25# 'project
        .Columns("J").ColumnWidth = 25# 'depreciation method
        .Columns("K").ColumnWidth = 15# 'liquidation date
        .Columns("L").ColumnWidth = 25# 'fiscal valuation
        .Columns("M").ColumnWidth = 25# 'book value
        
        .Range("L12:L" & lLastRow).NumberFormat = sFormat
        .Range("M12:M" & lLastRow).NumberFormat = sFormat
        
        'Set rowwidth
        .Range("A12").RowHeight = 20#
    End With
    
End Sub

'If duplicate cell value found for G/L or Assetgroup then suppress it
'If subtotal or grandtotal field then bold it

Sub FormatCell(sWorksheet)
    Dim i As Long
    Dim sLastCell As String
    Dim lLastRow As Long
    Dim bFlag As Boolean
    Dim lLast As Long
    
    sLastCell = LASTCOLUMN
    
    Worksheets(sWorksheet).Activate
    lLastRow = Worksheets(sWorksheet).UsedRange.Rows.Count + 1
    With Worksheets(sWorksheet)
        .Range("A4:" & sLastCell & lLastRow).Select
        Selection.Font.Name = "Verdana"
        'Selection.Font.FontStyle = "Normal"
        Selection.Font.Size = 9
        .Range("A12:" & sLastCell & "12").Font.Bold = False
        .Range("A11:" & sLastCell & "11").Font.Bold = True
        
        lLast = 12
        i = 12
        bFlag = True
        Do While bFlag
            If .Rows(i).Summary Then
                Rows(i + 1 & ":" & i + 1).Select
                Selection.Insert Shift:=xlDown
                
                If (i - lLast) > 1 Then
                    .Range("A" & lLast + 1 & ":B" & i - 1).Value = ""
                End If
                
                Call Insertcolour("A" & i & ":" & sLastCell & i, 52)
                .Range("I" & i & ":" & sLastCell & i).Font.Bold = True
                i = i + 1
                lLast = i + 1
                
            ElseIf .Range("A" & i).Value = "" Then
                i = i - 2
                Call AdjRowGrdTotal(i - 1)
                Call Insertcolour("A" & i & ":" & sLastCell & i, 53)
                Call DrawLine("A", sLastCell, i)
                .Range("I" & i + 1 & ":" & sLastCell & i + 1).Font.Bold = True
                Exit Do
            End If
            
            i = i + 1
        Loop
        
        
        .Range("A12").Select
    End With

End Sub

Sub Insertcolour(sRow As String, ClrIndex As Integer)
    Range(sRow).Select
    With Selection.Interior
        .ColorIndex = ClrIndex
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
End Sub

Sub DrawLine(StartCol, EndCol, lRow)
    'draw line
    Range(StartCol & lRow & ":" & EndCol & lRow).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlThick
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
End Sub

Sub AdjRowGrdTotal(lRow)
''    Rows(lRow & ":" & lRow).Select
''    Selection.Insert Shift:=xlDown
    Rows(lRow & ":" & lRow).Select
    Selection.Interior.ColorIndex = RGB(0, 0, 0)
End Sub

Sub SortAndGrpReport(sWorksheet, lLastRow)
    Dim LastRowNr As Long
    Dim bDummy As Boolean
    Dim i As Long
    Dim tmp As String
    
    Worksheets(sWorksheet).Activate
    With Worksheets(sWorksheet)
        .Range("A12").Select
        
        Selection.SUBTOTAL GroupBy:=1, Function:=xlSum, TotalList:=Array(12, _
        13), Replace:=False, PageBreaks:=False, SummaryBelowData:=xlSummaryBelow
                
        .Range("A12:" & LASTCOLUMN & lLastRow).Rows.AutoFit
    End With
End Sub

Sub GenerateSQLQuery(sWorksheet As String)

    On Error GoTo Failed
    Dim sSqlMain As String
    Dim sSqlSelect As String
    Dim sSqlWhere As String
    Dim sSqlGroup As String
    Dim sSqlTable As String
    Dim sStatus As String
    Dim EdlConn As EdlConnection
    Dim lLngIndex As Long
    
    lLngIndex = goCompany.MultiLang.DefaultIndex
    
    Set EdlConn = goCompany
    
    sSqlSelect = "SELECT ('''' + fr.FiscalGroupCode) AS FiscalGroupCode, " & vbCrLf _
        & "('''' + fg.Description_" & lLngIndex & ") AS FGDescription, ('''' + fr.FiscalAssetCode) AS FiscalAssetCode, " & vbCrLf _
        & "('''' + fa.Description_" & lLngIndex & ") AS Description, ('''' + fa.AssetGroup) AS AssetGroup, ('''' + fr.ItemCode) AS ItemCode, " & vbCrLf _
        & "('''' + fr.CostCenter) AS CostCenter, ('''' + fr.CostUnit) AS CostUnit, ('''' + fr.Project) AS Project, " _
        & "('''' + fd.Description_" & lLngIndex & ") AS FiscalDepreciation, fr.LiquidationDate, " _
        & "fr.PartialLiquidation, fr.PartialLiquidatedBookValue " & vbCrLf

    sSqlTable = "FROM FiscalReports fr " & vbCrLf _
        & "INNER JOIN FiscalGroups fg ON fr.FiscalGroupCode = fg.Code " & vbCrLf _
        & "INNER JOIN FiscalAssets fa ON fr.FiscalAssetCode = fa.Code AND fr.ItemCode = fa.ItemCode " & vbCrLf _
        & "INNER JOIN FiscalDepreciations fd ON fr.FiscalDepreciationCode = fd.Code " & vbCrLf
    
    sSqlGroup = " ORDER BY fr.FiscalGroupCode"
    
    sSqlWhere = "WHERE fr.Type = 1 AND fr.PartialLiquidation <> 0 AND FinancialYear = " & sRefYear & vbCrLf
    
    ''Asset group
    If Not AssetGroup_All Then
        If AssetGroup_From <> "" And AssetGroup_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fa.AssetGroup BETWEEN " & EdlConn.LitString(AssetGroup_From) & " AND " & EdlConn.LitString(AssetGroup_To)
        ElseIf AssetGroup_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fa.AssetGroup >= " & EdlConn.LitString(AssetGroup_From)
        Else
           sSqlWhere = sSqlWhere & " AND fa.AssetGroup <= " & EdlConn.LitString(AssetGroup_To)
        End If
    End If
    
    ''fiscal group
    If Not FiscalGroup_All Then
        If FiscalGroup_From <> "" And FiscalGroup_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.FiscalGroupCode BETWEEN " & EdlConn.LitString(FiscalGroup_From) & " AND " & EdlConn.LitString(FiscalGroup_To)
        ElseIf FiscalGroup_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.FiscalGroupCode >= " & EdlConn.LitString(FiscalGroup_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.FiscalGroupCode <= " & EdlConn.LitString(FiscalGroup_To)
        End If
    End If
    
    ''Asset Code
    If Not Assetcode_All Then
        If AssetCode_From <> "" And AssetCode_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.FiscalAssetCode BETWEEN " & EdlConn.LitString(AssetCode_From) & " AND " & EdlConn.LitString(AssetCode_To)
        ElseIf AssetCode_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.FiscalAssetCode >= " & EdlConn.LitString(AssetCode_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.FiscalAssetCode <= " & EdlConn.LitString(AssetCode_To)
        End If
    End If
    
    'Item Code
    If Not Itemcode_All Then
        If ItemCode_From <> "" And ItemCode_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.ItemCode BETWEEN " & EdlConn.LitString(ItemCode_From) & " AND " & EdlConn.LitString(ItemCode_To)
        ElseIf ItemCode_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.ItemCode >= " & EdlConn.LitString(ItemCode_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.ItemCode <= " & EdlConn.LitString(ItemCode_To)
        End If
    End If
    
    ''Cost Center
    If Not CostCenter_All Then
        If CostCenter_From <> "" And CostCenter_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.CostCenter BETWEEN " & EdlConn.LitString(CostCenter_From) & " AND " & EdlConn.LitString(CostCenter_To)
        ElseIf CostCenter_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.CostCenter >= " & EdlConn.LitString(CostCenter_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.CostCenter <= " & EdlConn.LitString(CostCenter_To)
        End If
    End If
    
    ''Cost Unit
    If Not CostUnit_All Then
        If CostUnit_From <> "" And CostUnit_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.CostUnit BETWEEN " & EdlConn.LitString(CostUnit_From) & " AND " & EdlConn.LitString(CostUnit_To)
        ElseIf CostUnit_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.CostUnit >= " & EdlConn.LitString(CostUnit_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.CostUnit <= " & EdlConn.LitString(CostUnit_To)
        End If
    End If
    
    ''Project
    If Not Project_All Then
        If Project_From <> "" And Project_To <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.Project BETWEEN " & EdlConn.LitString(Project_From) & " AND " & EdlConn.LitString(Project_To)
        ElseIf Project_From <> "" Then
           sSqlWhere = sSqlWhere & " AND fr.Project >= " & EdlConn.LitString(Project_From)
        Else
           sSqlWhere = sSqlWhere & " AND fr.Project <= " & EdlConn.LitString(Project_To)
        End If
    End If
    
    If stActive Then sStatus = sStatus & ",'A'"
    If stSold Then sStatus = sStatus & ",'S'"
    If stInactive Then sStatus = sStatus & ",'D'"
    If stWriteOff Then sStatus = sStatus & ",'W'"
    
    If Len(sStatus) > 0 Then
       sSqlWhere = sSqlWhere & " AND fa.Status IN (" & Mid$(sStatus, 2) & ")"
    End If
    
    sSqlMain = sSqlSelect & sSqlTable & sSqlWhere & sSqlGroup
                   
    'Assign SQL query
    ThisWorkbook.Names("Query").RefersToRange.Value = sSqlMain
    
    Exit Sub
    
Failed:
    App.Message 0, App.Term.String(0, "Error occurred while creating SQL query!"), App.Term.String(35457, "Fiscal book value"), edlgInfo
    
End Sub

' InQuest injected base64 decoded content
' :t^~

INQUEST-PP=macro
