Attribute VB_Name = "Module1"
Option Explicit

Public strCode As String
Public rList1 As Range
Public rList2 As Range
Public strSheet As String
Sub WizShow()
UserForm1.Show
End Sub

Sub CreateList()
Dim wSheetCheck As Worksheet
On Error Resume Next
Application.ScreenUpdating = False
Application.DisplayAlerts = False
Sheets("OzGridDupes").Delete
Application.DisplayAlerts = True

Sheets.Add(Before:=Sheets(1)).Name = "OzGridDupes"
Set rList1 = Sheets(strSheet).Range(UserForm1.RefEdit1.Text)
rList1.AdvancedFilter Action:=xlFilterCopy, _
CopyToRange:=Sheets("OzGridDupes").Range("A1"), Unique:=True

Sheets("OzGridDupes").Range("B1") = "DO NOT STORE DATA ON THIS SHEET"
On Error GoTo 0
Application.ScreenUpdating = True
End Sub
Sub FilterList()

On Error Resume Next

Set rList1 = Range(UserForm1.RefEdit1.Text)
rList1.AdvancedFilter Action:=xlFilterInPlace, Unique:=True

On Error GoTo 0
End Sub

Sub SumaryRep()
Dim strAdd As String
Dim strHead As String
Dim strPtName As String
Application.ScreenUpdating = False
Set rList1 = Range(UserForm1.RefEdit1.Text)
strAdd = rList1.Address(ReferenceStyle:=xlR1C1, External:=True)
strHead = rList1.Cells(1, 1)
On Error GoTo NoHead
strPtName = "SummaryReport" & Now
  ActiveWorkbook.PivotCaches.Add(SourceType:=xlDatabase, SourceData:= _
   strAdd).CreatePivotTable TableDestination:="", TableName:=strPtName
   
    ActiveSheet.PivotTableWizard TableDestination:=ActiveSheet.Cells(3, 1)
    ActiveSheet.Cells(3, 1).Select
   
    ActiveSheet.PivotTables(strPtName).AddFields RowFields:=strHead
    ActiveSheet.PivotTables(strPtName).PivotFields(strHead).Orientation = xlDataField
    
    ActiveSheet.PivotTables(strPtName).PivotSelect "", xlDataAndLabel
    Selection.Copy
    ActiveSheet.Cells(3, 4).PasteSpecial xlValues
    Application.CutCopyMode = False
     Application.CommandBars("PivotTable").Visible = False
     Application.ScreenUpdating = True
Exit Sub
NoHead:
Application.ScreenUpdating = True
MsgBox "Your List Range Is Not Valid. Ensure It Has a Heading", vbCritical, "OzGrid.com"
End Sub

Sub Highlight()
Dim strAdd As String
Dim strHead As String
Application.ScreenUpdating = False
On Error Resume Next
Set rList1 = Range(UserForm1.RefEdit1.Text)
strAdd = rList1.Address
Application.Goto rList1
strHead = Selection.Cells(1, 1).Address(False, False)

 Selection.FormatConditions.Delete
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:= _
        "=COUNTIF(" & strAdd & "," & strHead & ")>3"
    Selection.FormatConditions(1).Interior.ColorIndex = 3
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:= _
        "=COUNTIF(" & strAdd & "," & strHead & ")>2"
    Selection.FormatConditions(2).Interior.ColorIndex = 6
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:= _
        "=COUNTIF(" & strAdd & "," & strHead & ")>1"
    Selection.FormatConditions(3).Interior.ColorIndex = 35
 Application.ScreenUpdating = True
 rList1.Cells(1, 1).Select
 On Error GoTo 0
End Sub

Sub Prevent()
Dim strAdd As String
Dim strHead As String
Application.ScreenUpdating = False
On Error Resume Next
Set rList1 = Range(UserForm1.RefEdit1.Text)
strAdd = rList1.Address

Application.Goto rList1
strHead = Selection.Cells(1, 1).Address(False, False)

 With Selection.Validation
        .Delete
        .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=COUNTIF(" & strAdd & "," & strHead & ")=1"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "OzGrid.com"
        .InputMessage = ""
        .ErrorMessage = "This entry already exists in the table."
        .ShowInput = True
        .ShowError = True
    End With
 Application.ScreenUpdating = True
 rList1.Cells(1, 1).Select
 On Error GoTo 0
End Sub

Sub Compare2()
Dim RListAll As Range
Dim strPtName As String, strAdd As String
Dim strLst1Add As String
Dim strHead As String
Dim strPivotT As String

On Error Resume Next
Application.ScreenUpdating = False
Application.DisplayAlerts = False
Sheets("OzGridCompare").Delete
Application.DisplayAlerts = True

Sheets.Add(Before:=Sheets(1)).Name = "OzGridCompare"
Set rList1 = Sheets(strSheet).Range(UserForm1.RefEdit1.Text)
Set rList2 = Sheets(strSheet).Range(UserForm1.RefEdit2.Text)

With Sheets("OzGridCompare")
    .Cells(1, 1) = "Combined List"
    .Cells(1, 1).Font.Bold = True
    rList1.Copy Destination:=.Range("A65536").End(xlUp).Cells(2, 1)
    .Cells(2, 1).Delete
    rList2.Copy Destination:=.Range("A65536").End(xlUp).Cells(2, 1)
    .Range("A65536").End(xlUp).Delete
    Set RListAll = .Range("A1", .Range("A65536").End(xlUp))

   strAdd = RListAll.Address(ReferenceStyle:=xlR1C1, External:=True)

    strPtName = "SummaryReport" & Now
      ActiveWorkbook.PivotCaches.Add(SourceType:=xlDatabase, SourceData:= _
       strAdd).CreatePivotTable TableDestination:=.Range("C3"), TableName:=strPtName
   
    .PivotTableWizard TableDestination:=.Range("C3")
    .Range("C3").Select
   
    .PivotTables(strPtName).AddFields RowFields:="Combined List"
    .PivotTables(strPtName).PivotFields("Combined List").Orientation = xlDataField
    
    .PivotTables(strPtName).PivotSelect "", xlDataAndLabel
    Selection.Copy
    .Range("F3").PasteSpecial xlValues
     Application.CutCopyMode = False
     Application.CommandBars("PivotTable").Visible = False
     
     rList1.Copy Destination:=.Range("I1")
     rList2.Copy Destination:=.Range("J1")
     .Range("I1") = "List1"
     .Range("J1") = "List2"
     
     .Range("I1", .Range("I65536").End(xlUp)).Sort Key1:=.Range("I2"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
    .Range("J1", .Range("J65536").End(xlUp)).Sort Key1:=.Range("J2"), Order1:=xlAscending, Header:=xlYes, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
   
   strLst1Add = .Range("I1", .Range("I65536").End(xlUp)).Address
 Application.Goto .Range("J1", .Range("J65536").End(xlUp))
  Selection.FormatConditions.Delete
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:= _
        "=COUNTIF(" & strLst1Add & ",J1)>0"
    Selection.FormatConditions(1).Interior.ColorIndex = 3
  
    Cells.Columns.AutoFit
    ActiveWindow.DisplayGridlines = False
   
    .Range("B:B,E:E,H:H,K:K").Interior.ColorIndex = 47
    .Range("B:B,E:E,H:H,K:K").ColumnWidth = 1.25
    .Range("C1") = "DO NOT STORE DATA ON THIS SHEET"
 End With
 Application.CommandBars("PivotTable").Visible = False
      Application.DisplayAlerts = True
     Application.ScreenUpdating = True

End Sub


Sub KillDupes()
Dim rConstRange As Range, rFormRange As Range
Dim rAllRange As Range, rCell As Range
Dim iCount As Long
Dim strAdd As String

On Error Resume Next
Set rList1 = Range(UserForm1.RefEdit1.Text)
If WorksheetFunction.CountA(rList1) < 2 Then
      MsgBox "You selection is not valid", vbInformation
      On Error GoTo 0
      Exit Sub
End If

Set rConstRange = rList1.SpecialCells(xlCellTypeConstants)
Set rFormRange = rList1.SpecialCells(xlCellTypeFormulas)

    If Not rConstRange Is Nothing And Not rFormRange Is Nothing Then
       Set rAllRange = Union(rConstRange, rFormRange)
    ElseIf Not rConstRange Is Nothing Then
       Set rAllRange = rConstRange
    ElseIf Not rFormRange Is Nothing Then
      Set rAllRange = rFormRange
    Else
      MsgBox "You selection is not valid", vbInformation
      On Error GoTo 0
      Exit Sub
    End If
   
        For Each rCell In rAllRange
         strAdd = rCell.Address
          strAdd = rAllRange.Find(What:=rCell, After:=rCell, LookIn:=xlValues, _
          LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
          MatchCase:=False).Address
          
        If strAdd <> rCell.Address Then
           rCell.Clear
        End If
        Next rCell

    Application.Calculation = xlCalculationManual
    Application.Calculation = xlCalculationAutomatic
On Error GoTo 0
End Sub

Sub KillTableDupes()
Dim rCells As Range
Dim sht As Worksheet
On Error Resume Next
Set rCells = ActiveSheet.UsedRange
Set sht = Sheets.Add
rCells.AdvancedFilter Action:=xlFilterCopy, CopyToRange:=sht.Range("A1"), Unique:=True
On Error GoTo 0
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Dim cControl As CommandBarButton
Private Sub Workbook_AddinInstall()

On Error Resume Next
    Application.CommandBars("Worksheet Menu bar").Controls("Dupe Wizard").Delete
    Set cControl = Application.CommandBars("Worksheet Menu bar").Controls.Add
        With cControl
           .Caption = "Dupe Wizard"
           .Style = msoButtonCaption
           .OnAction = "WizShow"
        End With
    On Error GoTo 0
End Sub

Private Sub Workbook_AddinUninstall()
On Error Resume Next
    Application.CommandBars("Worksheet Menu bar").Controls("Dupe Wizard").Delete
On Error GoTo 0
End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{09A204AE-7954-4119-A7EE-642EBA9864FF}{D3E26320-9F41-4947-83F4-F2882232BB92}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit



Private Sub CommandButton1_Click()
On Error Resume Next
Set rList1 = Range(Me.RefEdit1.Text)
If rList1 Is Nothing Then
 MsgBox "List 1 is not valid", vbCritical, "OzGrid.com"
 Exit Sub
End If

If rList1.Cells.Count < 2 Then
MsgBox "List 1 is a single cell, it must contain at least 2.", vbCritical, "OzGrid.com"
Exit Sub
End If

If OptionButton1.Value = True Or OptionButton2.Value = True Or OptionButton3.Value = True Or OptionButton6 Then
    If rList1.Columns.Count <> 1 Then
     MsgBox "List 1 must be a single column", vbCritical, "OzGrid.com"
     Exit Sub
    End If
End If

If OptionButton6.Value = True Then
   Set rList2 = Range(Me.RefEdit2.Text)
   If rList2 Is Nothing Then
     MsgBox "List 2 is not valid", vbCritical, "OzGrid.com"
     Exit Sub
   ElseIf rList2.Columns.Count <> 1 Then
     MsgBox "List 2 must be a single column", vbCritical, "OzGrid.com"
     Exit Sub
   End If
   
 If rList2.Cells.Count < 2 Then
     MsgBox "List 2 is a single cell, it must contain at least 2.", vbCritical, "OzGrid.com"
     Exit Sub
 End If
  
  If rList2.Address = rList1.Address Then
       MsgBox "List 1 and List 2 are the same.", vbCritical, "OzGrid.com"
       Exit Sub
  End If
End If
strSheet = Range(Me.RefEdit1.Text).Parent
Run strCode
Unload Me
End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub CommandButton3_Click()
MsgBox "Will filter your list down to show only uniques. To show all again, go to Data>Filter>Show All", vbInformation, "OzGrid.com"
End Sub



Private Sub CommandButton4_Click()
MsgBox "This option will remove any existing Conditional Formatting from your specified List 1 range." & Chr(13) & Chr(13) & "Double entries will be Green, 3 entries will be Yellow and greater than 3 will be Red." & Chr(13) & Chr(13) & "To remove, select the cells agian and go to Format>Conditional Formatting - Delete.", vbInformation, "OzGrid.com"
End Sub

Private Sub CommandButton5_Click()
MsgBox "Will remove any existing Data Validation. To remove after applying, select the cells and go to Data>Validation - Clear All", vbInformation, "OzGrid.com"
End Sub

Private Sub CommandButton6_Click()
MsgBox "Will create a small Pivot Table on a new sheet, containing one occurence of each item in the list and giving a count of each item. It will also create a static version of the Pivot Table.", vbInformation, "OzGrid.com"
End Sub

Private Sub CommandButton7_Click()
MsgBox "Will DELETE any sheet called 'OzGridDupes' then create a new one containing only one occurence of each item.", vbInformation, "OzGrid.com"
End Sub

Private Sub CommandButton8_Click()
MsgBox "This option will DELETE any sheet called 'OzGridCompare' and create a sheet with this name.", vbInformation, "OzGrid.com"
End Sub

Private Sub CommandButton9_Click()
MsgBox "Will remove duplicates from a selected range.", vbInformation, "OzGrid.com"

End Sub
Private Sub CommandButton10_Click()
MsgBox "Will remove duplicates from a table of data, but only if 2 or more rows (in the table), contain identical data in the same column across all columns. Eg;" & Chr(13) & Chr(13) & "1;2;4;6;8" & Chr(13) & "1;2;4;6;8" & Chr(13) & "ARE Considered Duplicates." & Chr(13) & Chr(13) & "While;" & Chr(13) & Chr(13) & "1;2;4;6;8" & Chr(13) & "2;1;4;6;8" & Chr(13) & "Are NOT.", vbInformation, "OzGrid.com"
End Sub
Private Sub OptionButton1_Click()
OptionButton6_Click
If OptionButton1.Value = True Then strCode = "CreateList"
End Sub

Private Sub OptionButton2_Click()
OptionButton6_Click
If OptionButton2.Value = True Then strCode = "FilterList"
End Sub

Private Sub OptionButton3_Click()
OptionButton6_Click
If OptionButton3.Value = True Then strCode = "SumaryRep"
End Sub

Private Sub OptionButton4_Click()
OptionButton6_Click
If OptionButton4.Value = True Then strCode = "Highlight"

End Sub

Private Sub OptionButton5_Click()
OptionButton6_Click
If OptionButton5.Value = True Then strCode = "Prevent"
End Sub

Private Sub OptionButton6_Click()
Me.RefEdit2.Enabled = OptionButton6
Me.Label2.Enabled = OptionButton6
If OptionButton6.Value = True Then strCode = "Compare2"
End Sub


Private Sub OptionButton7_Click()
OptionButton6_Click
If OptionButton7.Value = True Then strCode = "KillDupes"
End Sub



Private Sub OptionButton8_Click()
OptionButton6_Click
If OptionButton8.Value = True Then strCode = "KillTableDupes"
End Sub

Private Sub UserForm_Initialize()
strCode = "CreateList"
If Sheet1.ProtectContents = False Then
If Selection.Cells.Count > 1 Then
 Me.RefEdit1 = Selection.Address
Else
  Me.RefEdit1 = Selection.CurrentRegion.Columns(1).Address
End If
End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
On Error GoTo 0
End Sub

Private Sub UserForm_Terminate()
On Error GoTo 0
End Sub


INQUEST-PP=macro
