Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "Module1"
Sub Clear()

' clear Macro
' Macro recorded 5/21/98 by Practitioners Publishing Company
'
'
Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")

    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    
    Application.ScreenUpdating = False
    Range("Input_clear").ClearContents
    Range("year_end").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("Input_Sheet").Select
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
  Range("Input_Sheet").Select
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
'When changes are made to any input cells within the Check Date column,
'Checks if the date input is within a the date range input in the header. If not
'within the range, asks the user to verify the date entered is correct.
'If not correct, the erroneous date is deleted.

Dim KeyCells As Excel.Range
Dim KeyAmounts As Excel.Range
Dim EntryCell As Range
Set KeyCells = Range("CheckDate")
Set KeyAmounts = Range("CheckAmt")

If ActiveCell.Row <= KeyCells.Row Or ActiveCell.Row > Range("Totals").Row Then Exit Sub

Set EntryCell = ActiveCell.Offset(-1, 0)

If Not Application.Intersect(KeyCells, Range(Target.Address)) _
Is Nothing And EntryCell <> "" Then
    If EntryCell.Value < Range("BegDisbDate").Value Or _
    EntryCell.Value > Range("EndDisbDate").Value Then
        Selection.Offset(-1, 0).Select
        Msg = "Are you sure this is the correct disbursement date? The" & vbCrLf
        Msg = Msg & "disbursement date should be within the range provided above."
        If MsgBox(Msg, vbYesNo + vbDefaultButton2, "PPC's e-Workpapers") = vbYes Then
            Selection.Offset(1, 0).Select
            Exit Sub
            Else
            Application.EnableEvents = False
            With Selection
                .Activate
                .ClearContents
            End With
            Application.EnableEvents = True
        End If
    End If
End If
If Not Application.Intersect(KeyAmounts, Range(Target.Address)) _
Is Nothing And EntryCell <> "" Then
    If EntryCell.Value <= Range("DisbHurdle").Value Then
        Selection.Offset(-1, 0).Select
        Msg = "Are you sure this is the correct disbursement amount?" & vbCrLf
        Msg = Msg & "It is outside the range specified above."
        If MsgBox(Msg, vbYesNo + vbDefaultButton2, "PPC's e-Workpapers") = vbYes Then
            Selection.Offset(1, 0).Select
            Exit Sub
            Else
            Application.EnableEvents = False
            With Selection
                .Activate
                .ClearContents
            End With
            Application.EnableEvents = True
        End If
    End If
End If
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
