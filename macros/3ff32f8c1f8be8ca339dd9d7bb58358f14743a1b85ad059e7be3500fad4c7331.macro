Attribute VB_Name = "EGRESOS"
Attribute VB_Base = "0{DAF277EA-DCC9-418D-B214-0B6DD16D189F}{DC529FDC-FD17-48B9-A3A9-124B8BDECF6F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click()
Unload Me
End Sub
Private Sub CommandButton2_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
Dim SUMA_UNI, SUMA_VEN As Double
Dim F_INICIAL, F_FINAL As Date

FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
ListBox1.Clear
F_INICIAL = FECHA_INICIAL
F_FINAL = FECHA_FINAL
If F_FINAL < F_INICIAL Then
   MsgBox "NO SE PUEDE INGRESAR UNA FECHA FINAL ANTERIOR A LA FECHA INICIAL", vbExclamation
        Exit Sub
Else
SUMA_UNI = 0
SUMA_VEN = 0
For I = 2 To FINAL
    
    If CDate(Hoja3.Cells(I, 10)) >= F_INICIAL And CDate(Hoja3.Cells(I, 10)) <= F_FINAL Then
        With ListBox1
            .AddItem
            .List(.ListCount - 1, 0) = Hoja3.Cells(I, 2) '
            .List(.ListCount - 1, 1) = Hoja3.Cells(I, 3) 'descripcion
            .List(.ListCount - 1, 2) = Hoja3.Cells(I, 4) 'cantidad
            .List(.ListCount - 1, 3) = FormatNumber(Hoja3.Cells(I, 5), 2) 'precio costo
            .List(.ListCount - 1, 4) = FormatNumber(Hoja3.Cells(I, 6), 2) 'precio venta
            .List(.ListCount - 1, 5) = FormatNumber(Hoja3.Cells(I, 7), 2) 'total costo
            .List(.ListCount - 1, 6) = FormatNumber(Hoja3.Cells(I, 8), 2) 'total de venta
        
        End With
    SUMA_UNI = Val(SUMA_UNI) + Val(Hoja3.Cells(I, 7))
    SUMA_VEN = Val(SUMA_VEN) + Val(Hoja3.Cells(I, 8))
    End If

Next I

TOTAL_UNITARIO = FormatNumber(SUMA_UNI, 2)
TOTAL_VENTA = FormatNumber(SUMA_VEN, 2)
UTILIDAD = Val(TOTAL_VENTA) - Val(TOTAL_UNITARIO)
UTILIDAD = FormatNumber(UTILIDAD, 2)
End If
End Sub
Private Sub CommandButton3_Click()
Dim FILA, FINAL As Long
Dim MENSAJE As String
FILA = Hoja5.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1
MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE INGRESAR LOS DATOS?", vbYesNo + vbQuestion, "INGRESO DE DATOS")
If DESCRIPCION = Empty Or TOTAL_UNITARIO = Empty Or FECHA = Empty Then
    MsgBox "ES NECESARIO INGRESAR UNA DESCRIPCION Y UN MONTO", vbCritical
Exit Sub
Else

If MENSAJE = vbYes Then

Hoja5.Cells(FILA, 1) = Val(ID)
Hoja5.Cells(FILA, 2) = Format(FECHA, "MM/DD/YYYY")
Hoja5.Cells(FILA, 3) = DESCRIPCION
Hoja5.Cells(FILA, 4) = FormatNumber(TOTAL_UNITARIO.Value, 2)
Hoja5.Cells(FILA, 5) = "EGRESO"

ID = Hoja5.Cells(FILA, 1) + 1

'VACIAR CAMPOS
ListBox1.Clear
DESCRIPCION = Empty
TOTAL_UNITARIO = Empty
TOTAL_VENTA = Empty
UTILIDAD = Empty
ThisWorkbook.Save
DESCRIPCION.SetFocus
MsgBox "DATOS INGRESADOS CON |fffd|XITO", vbInformation
Else
    MsgBox "OPERACION CANCELADA", vbExclamation
    Exit Sub
End If

End If
End Sub
Private Sub DESCRIPCION_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub FECHA_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA)
mes = Mid(FECHA, 4, 2)
dia = Left(FECHA, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
    End If

End If
End Sub
Private Sub FECHA_FINAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_FINAL)
mes = Mid(FECHA_FINAL, 4, 2)
dia = Left(FECHA_FINAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_FINAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_FINAL)
    Case 2: FECHA_FINAL = FECHA_FINAL & "/"
    Case 5: FECHA_FINAL = FECHA_FINAL & "/"
End Select

End Sub

Private Sub FECHA_INICIAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_INICIAL)
mes = Mid(FECHA_INICIAL, 4, 2)
dia = Left(FECHA_INICIAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub
Private Sub FECHA_INICIAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_INICIAL)
    Case 2: FECHA_INICIAL = FECHA_INICIAL & "/"
    Case 5: FECHA_INICIAL = FECHA_INICIAL & "/"
End Select

End Sub
Private Sub FECHA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA)
    Case 2: FECHA = FECHA & "/"
    Case 5: FECHA = FECHA & "/"
End Select

End Sub

Private Sub ListBox1_Click()

End Sub

Private Sub TOTAL_UNITARIO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub

Private Sub TOTAL_VENTA_Change()

End Sub

Private Sub UserForm_Initialize()
Dim FILA, FINAL  As Long

FECHA = Format(Now(), "DD/MM/YYYY")
FILA = 2
Do While Hoja5.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

If Hoja5.Cells(2, 1) = Empty Then
    ID = 0 + 1
Else
    ID = Hoja5.Cells(FINAL, 1) + 1
End If

With ListBox1
    .ColumnCount = 7
    .ColumnWidths = "70PT;120PT;90PT;90PT;90PT;80PT;40PT"
End With

End Sub
Attribute VB_Name = "ENTRADAS_STOCK"
Attribute VB_Base = "0{A93AA091-9545-4E02-A4B6-6596ECF42AFF}{5C071B33-7C39-4177-9863-87126C6A1A0A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click() ': On Error Resume Next
Dim FILA, FINAL, I, FILA2, FINAL2, FILA3, FINAL3, ID, i2, FILA4, FINAL4, ID_COMPRAS As Long
Dim T_COSTO, T_VENTAS, P_VENTA As Double
Dim C_ACTUAL, CANTIDA_OLD As Integer
Dim MENSAJE As String
'COIGO QUE ENCONTRARA LA ULTIMA FILA OCUPADA EN LA HOJA BITACORA DE ENTRADAS
FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

'CODIGO QUE ENCONTRAR LA ULTIMA FILA OCUPADA EN LA HOJA DE STOCK
FILA2 = 2
Do While Hoja2.Cells(FILA2, 1) <> Empty
    FILA2 = FILA2 + 1
Loop
FINAL2 = FILA2 - 1

If ENT_NOMBRE_STOCK = Empty Or ENT_FECHA_STOCK = Empty Then
     MsgBox "ES NECESARIO LLENAR TODOS LOS CAMPOS", vbExclamation
Exit Sub
Else
   MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE INGRESAR LOS DATOS?", vbQuestion + vbYesNo, "INGRESO DE DATOS")
        If MENSAJE = vbYes Then
            'ESTE CODIGO DETERMINA LA INSERCION DE LOS DATOS QUE SE ENCUENTRAN EN EL LISTBOX Y SE INGRESARAN EN LA HOJA SALIDA
            For I = 0 To ListBox1.ListCount - 1
                 ' ESTE CODIGO SE ENCARGARA DE GENERAR EL NUMERO CONSECUTIVO DE ID
                  If Hoja3.Cells(2, 1) = Empty Then
                    ID = 0 + 1
                  Else
                    ID = Hoja3.Cells(FINAL, 1) + 1
                  End If
                            'ESTE CODIGO DETERMINARA EL VALOR DE EL PRECIO COSTO CALCULAR EL TOTAL DE COSTO E INGRESARLO A LA HOJA DE SALIDA
                            'EN ESTE CODIGO UTILIZAREMOS EL BUCLE EN LA HOJA NUMERO 2 QUE PERTENECE BD STOCK
                            FILA3 = 2
                                Do While Hoja2.Cells(FILA3, 1) <> Empty
                                    FILA3 = FILA3 + 1
                                Loop
                                FINAL3 = FILA3 - 1
                                    For i2 = 2 To FINAL3
                                      If ListBox1.List(I, 0) = Hoja2.Cells(i2, 2) Then
                                           P_VENTA = Hoja2.Cells(i2, 6) 'ESTE VALOR ES EL PRECIO EN EL QUE SE VENDERA EL PRODUCTO A CLIENTE FINAL
                                           T_VENTAS = Val(P_VENTA) * Val(ListBox1.List(I, 2)) 'ESTE VALOR ES EL TOTAL DE VENTA QUE SE GENERA AL CLIENTE FINAL
                                           'ESTE CODIGO ME DESCONTARA LA CANTIDAD DE PIEZAS QUE SE VENDA EN EL STOCK
                                           CANTIDA_OLD = Hoja2.Cells(i2, 4)
                                           C_ACTUAL = Val(CANTIDA_OLD) + Val(ListBox1.List(I, 2))
                                           Hoja2.Cells(i2, 4) = C_ACTUAL
                                           
                                       Hoja3.Cells(FILA, 1) = Val(ID) 'ID
                                       Hoja3.Cells(FILA, 2) = ListBox1.List(I, 0) 'CODIGO
                                       Hoja3.Cells(FILA, 3) = ListBox1.List(I, 1) 'DESCRIPCION
                                       Hoja3.Cells(FILA, 4) = ListBox1.List(I, 2) 'CANTIDAD
                                       Hoja3.Cells(FILA, 5) = ListBox1.List(I, 3) ' PRECIO COSTO
                                       Hoja3.Cells(FILA, 7) = ListBox1.List(I, 4) 'TOTAL
'                                       Hoja3.Cells(FILA, 9) = ListBox1.List(I, 4)
                                       Hoja3.Cells(FILA, 9) = ENT_NOMBRE_STOCK 'NOMBRE
                                       Hoja3.Cells(FILA, 10) = Format(ENT_FECHA_STOCK, "MM/DD/YYYY") 'FECHA
                                       Hoja3.Cells(FILA, 6) = FormatNumber(P_VENTA, 2) 'PRECIO DE VENTA
                                       Hoja3.Cells(FILA, 8) = T_VENTAS 'TOTAL DE VENTA
                                       Hoja3.Cells(FILA, 11) = Val(N_OPERACION) 'NUMERO DE OPERACION
                                       
                                       
                                       FILA = FILA + 1
                                       'ESTA VARIABLE SE POSICIONA EN LA ULTIMA FILA OCUPADA Y NO AYUDARA EN ENCONTRAR EL VALOR DENTRO ELLA
                                       FINAL = FILA - 1
                                           End If
                                           Next i2
            Next I
            
            'INGRESO DE DATOS RESUMIDOS A LA BASE DE DATOS COMPRAS
            'FILA4 = Hoja8.Range("A" & Rows.Count).End(xlUp) + 1
            'FINAL4 = FILA4 - 1
            FILA4 = 2
            Do While Hoja8.Cells(FILA4, 1) <> Empty
                FILA4 = FILA4 + 1
            Loop
            FINAL4 = FILA4 - 1
            
            
            If Hoja8.Cells(2, 1) = Empty Then
                ID_COMPRAS = 1
            Else
                ID_COMPRAS = Hoja8.Cells(FINAL4, 1) + 1
            End If
            
            Hoja8.Cells(FILA4, 1) = Val(ID_COMPRAS)
            Hoja8.Cells(FILA4, 2) = Format(ENT_FECHA_STOCK, "MM/DD/YYYY")
            Hoja8.Cells(FILA4, 3) = Val(N_OPERACION)
            Hoja8.Cells(FILA4, 4) = FormatNumber(TOTAL_ENTRADAS, 2)
            Hoja8.Cells(FILA4, 5) = "ACTIVO"
            Hoja8.Cells(FILA4, 6) = "PENDIENTE"
            
            
            'NUMERO DE OPERACION CONSECUTIVO
            FILA2 = 2
            Do While Hoja3.Cells(FILA2, 2) <> Empty
                FILA2 = FILA2 + 1
            Loop
            FINAL2 = FILA2 - 1
            
            If Hoja3.Cells(2, 11) = Empty Then
                N_OPERACION = 1
            Else
                N_OPERACION = Hoja3.Cells(FINAL2, 11) + 1
            End If
                            
            ListBox1.Clear
            TOTAL_ENTRADAS = Empty
            ThisWorkbook.Save
            MsgBox "DATOS INGRESADOS CON |fffd|XITO", vbInformation
        Else
            MsgBox "OPERACION CANCELADA", vbExclamation
        End If
End If
End Sub
Private Sub CommandButton2_Click()
Unload ENTRADAS_STOCK
End Sub

Private Sub CommandButton3_Click()
Dim FILA, FINAL, I As Long
Dim TOTAL_VENTA, RESULTADO As Double

If ENT_CANTIDAD_STOCK = Empty Or ENT_CODIGO_STOCK = Empty Or ENT_PRECIO_COSTO_STOCK = Empty Or ENT_NOMBRE_STOCK = Empty Then
    MsgBox "ES NECESARIO COMPLETAR TODOS LOS CAMPOS Y/O AGREGAR UN NOMBRE", vbExclamation
    Exit Sub
Else
TOTAL_VENTA = Val(ENT_CANTIDAD_STOCK) * Val(ENT_PRECIO_COSTO_STOCK)
    With ListBox1
    .AddItem
    .List(.ListCount - 1, 0) = ENT_CODIGO_STOCK
    .List(.ListCount - 1, 1) = ENT_DESCRIPCION_STOCK
    .List(.ListCount - 1, 2) = ENT_CANTIDAD_STOCK
    .List(.ListCount - 1, 3) = ENT_PRECIO_COSTO_STOCK
    .List(.ListCount - 1, 4) = FormatNumber(TOTAL_VENTA, 2)
    End With
    
    ENT_CODIGO_STOCK = Empty
    ENT_DESCRIPCION_STOCK = Empty
    ENT_PRECIO_COSTO_STOCK = Empty
    'SAL_PRECIO_VENTA_STOCK = Empty
    ENT_CANTIDAD_STOCK = Empty
      
For I = 0 To ListBox1.ListCount - 1
    RESULTADO = RESULTADO + ListBox1.List(I, 4)
Next I
TOTAL_ENTRADAS = FormatNumber(RESULTADO, 2)
End If

End Sub

Private Sub CommandButton4_Click()
Dim ITEM As Long
Dim RESULTADO As Double
If ListBox1 = Empty Then
    MsgBox "OPERACI|fffd|N NO VALIDAS, NO HAY NINGUN ITEM SELECCIONADO", vbCritical
    Exit Sub
Else
If ListBox1.ListIndex < 0 Then
    MsgBox " NO SE ENCONTRO NINGUN ITEM PARA ELIMINAR", vbExclamation
Else
ListBox1.RemoveItem (ListBox1.ListIndex)
RESULTADO = 0
For ITEM = 0 To ListBox1.ListCount - 1
    RESULTADO = RESULTADO + ListBox1.List(ITEM, 4)
Next ITEM
TOTAL_ENTRADAS = FormatNumber(RESULTADO, 2)
End If
End If

End Sub

Private Sub ENT_BUSQUEDA_PRODUCTO_STOCK_Change()
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'BUSQUEDA DE PRODUCTOS
ListBox2.Clear
For I = 2 To FINAL
If UCase(Hoja2.Cells(I, 3)) Like "*" & UCase(ENT_BUSQUEDA_PRODUCTO_STOCK) & "*" Then
    With ListBox2
        .AddItem
        .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2)
        .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3)
    End With
End If

Next I
End Sub

Private Sub ENT_CANTIDAD_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub ENT_CODIGO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub ENT_DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub ENT_FECHA_STOCK_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(ENT_FECHA_STOCK)
mes = Mid(ENT_FECHA_STOCK, 4, 2)
dia = Left(ENT_FECHA_STOCK, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub ENT_FECHA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(ENT_FECHA_STOCK)
    Case 2: ENT_FECHA_STOCK = ENT_FECHA_STOCK & "/"
    Case 5: ENT_FECHA_STOCK = ENT_FECHA_STOCK & "/"
End Select

End Sub

Private Sub ENT_NOMBRE_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub ENT_PRECIO_COSTO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
ENT_PRECIO_COSTO_STOCK = Empty
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub ENT_PRECIO_VENTA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'On Error Resume Next
For I = 2 To FINAL
    If ListBox2.List(ListBox2.ListIndex - 0, 0) = Hoja2.Cells(I, 2) Then
    ENT_CODIGO_STOCK = Hoja2.Cells(I, 2)
    ENT_DESCRIPCION_STOCK = Hoja2.Cells(I, 3)
    ENT_PRECIO_COSTO_STOCK = FormatNumber(Hoja2.Cells(I, 5), 2)
    'ENT_PRECIO_VENTA_STOCK = FormatNumber(Hoja2.Cells(I, 6), 2)
       ENT_CANTIDAD_STOCK.SetFocus
    End If
Next I

 ENT_BUSQUEDA_PRODUCTO_STOCK = Empty

End Sub

Private Sub UserForm_Initialize()
'CODIGO QUE SECCIONARA EL LISTBOX EN LA CANTIDAD DE COLUMNAS QUE DESEE Y EL TAMA|fffd|O DE CADA UNA
Dim FILA, FINAL, FILA2, FINAL2, I As Long
FILA = 2
Do While Hoja3.Cells(FILA, 11) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

If Hoja3.Cells(2, 1) = Empty Then
    N_OPERACION = 0 + 1
Else
    N_OPERACION = Hoja3.Cells(FINAL, 11) + 1
End If

ENT_FECHA_STOCK = Format(Now(), "DD/MM/YYYY")
With ListBox1
    .ColumnCount = 5
    .ColumnWidths = "80PT;180PT;80PT;90PT;90PT"
End With

With ListBox2
    .ColumnCount = 2
    .ColumnWidths = "60PT;80PT"
End With

'cargar lista
 FILA2 = Hoja2.Range("A" & Rows.Count).End(xlUp).Row + 1
 FINAL2 = FILA2 - 1
    For I = 2 To FINAL2
        With ListBox2
         .AddItem
         .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2)
         .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3)
        End With
    Next I


ENT_NOMBRE_STOCK.SetFocus

End Sub
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "INGRESOS"
Attribute VB_Base = "0{72378EDD-CFA2-4CF7-9228-03D7C4818F33}{F95AEA33-B1BB-42AE-A131-11019FA247FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click()
Unload Me
End Sub
Private Sub CommandButton2_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
Dim SUMA_UNI, SUMA_VEN As Double
Dim F_INICIAL, F_FINAL As Date

FILA = 2
Do While Hoja4.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1


ListBox1.Clear
F_INICIAL = FECHA_INICIAL
F_FINAL = FECHA_FINAL
If FECHA_FINAL < FECHA_INICIAL Then
    MsgBox "NO SE PUEDE INGRESAR UNA FECHA FINAL ANTERIOR A LA FECHA INICIAL", vbExclamation
        Exit Sub
Else
SUMA_UNI = 0
SUMA_VEN = 0
For I = 2 To FINAL
    
    If CDate(Hoja4.Cells(I, 11)) >= F_INICIAL And CDate(Hoja4.Cells(I, 11)) <= F_FINAL Then
        With ListBox1
            .AddItem
            .List(.ListCount - 1, 0) = Hoja4.Cells(I, 3)
            .List(.ListCount - 1, 1) = Hoja4.Cells(I, 4)
            .List(.ListCount - 1, 2) = Hoja4.Cells(I, 5)
            .List(.ListCount - 1, 3) = FormatNumber(Hoja4.Cells(I, 6), 2)
            .List(.ListCount - 1, 4) = FormatNumber(Hoja4.Cells(I, 7), 2)
            .List(.ListCount - 1, 5) = FormatNumber(Hoja4.Cells(I, 8), 2)
            .List(.ListCount - 1, 6) = FormatNumber(Hoja4.Cells(I, 9), 2)
        
        End With
    SUMA_UNI = Val(SUMA_UNI) + Val(Hoja4.Cells(I, 8))
    SUMA_VEN = Val(SUMA_VEN) + Val(Hoja4.Cells(I, 9))
    End If

Next I

TOTAL_UNITARIO = FormatNumber(SUMA_UNI, 2)
TOTAL_VENTA = FormatNumber(SUMA_VEN, 2)
UTILIDAD = Val(TOTAL_VENTA) - Val(TOTAL_UNITARIO)
UTILIDAD = FormatNumber(UTILIDAD, 2)
End If
End Sub
Private Sub CommandButton3_Click(): On Error Resume Next
Dim FILA, FINAL As Long
Dim MENSAJE As String
FILA = Hoja5.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1
MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE INGRESAR LOS DATOS?", vbYesNo + vbQuestion, "INGRESO DE DATOS")
If DESCRIPCION = Empty Or TOTAL_VENTA = Empty Or FECHA = Empty Then
    MsgBox "ES NECESARIO INGRESAR UNA DESCRIPCION", vbCritical
Exit Sub
Else

If MENSAJE = vbYes Then

Hoja5.Cells(FILA, 1) = Val(ID)
Hoja5.Cells(FILA, 2) = Format(FECHA, "MM/DD/YYYY")
Hoja5.Cells(FILA, 3) = DESCRIPCION
Hoja5.Cells(FILA, 4) = TOTAL_VENTA.Value
Hoja5.Cells(FILA, 5) = "INGRESO"

ID = Hoja5.Cells(FILA, 1) + 1

'VACIAR CAMPOS
ListBox1.Clear
DESCRIPCION = Empty
TOTAL_UNITARIO = Empty
TOTAL_VENTA = Empty
UTILIDAD = Empty
ThisWorkbook.Save
DESCRIPCION.SetFocus
MsgBox "DATOS INGRESADOS CON |fffd|XITO", vbInformation
Else
    MsgBox "OPERACION CANCELADA", vbExclamation
    Exit Sub
End If

End If
End Sub

Private Sub DESCRIPCION_Change()

End Sub

Private Sub DESCRIPCION_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub FECHA_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA)
mes = Mid(FECHA, 4, 2)
dia = Left(FECHA, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_FINAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_FINAL)
mes = Mid(FECHA_FINAL, 4, 2)
dia = Left(FECHA_FINAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_FINAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_FINAL)
    Case 2: FECHA_FINAL = FECHA_FINAL & "/"
    Case 5: FECHA_FINAL = FECHA_FINAL & "/"
End Select

End Sub

Private Sub FECHA_INICIAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_INICIAL)
mes = Mid(FECHA_INICIAL, 4, 2)
dia = Left(FECHA_INICIAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_INICIAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_INICIAL)
    Case 2: FECHA_INICIAL = FECHA_INICIAL & "/"
    Case 5: FECHA_INICIAL = FECHA_INICIAL & "/"
End Select

End Sub

Private Sub FECHA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA)
    Case 2: FECHA = FECHA & "/"
    Case 5: FECHA = FECHA & "/"
End Select

End Sub

Private Sub TOTAL_VENTA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If

End Sub

Private Sub UserForm_Initialize()
Dim FILA, FINAL  As Long

FECHA = Format(Now(), "DD/MM/YYYY")
FILA = 2
Do While Hoja5.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

If Hoja5.Cells(2, 1) = Empty Then
    ID = 0 + 1
Else
    ID = Hoja5.Cells(FINAL, 1) + 1
End If

'PREPARACION DE LISTBOX

With ListBox1
    .ColumnCount = 7
    .ColumnWidths = "70PT;120PT;90PT;90PT;90PT;80PT;40PT"
End With

End Sub
Attribute VB_Name = "ING_STOCK"
Attribute VB_Base = "0{1A0E335C-E5EB-4BA6-84B0-D37B70CD14B3}{BF9C9C8D-6AA1-49EE-9FAD-DA4856C387C7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CODIGO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I, FILA2, FINAL2  As Long
Dim MENSAJE As String
'CODIGO QUE IMPIDE INGRESAR DATOS SI ALGUN CAMPO ESTA VACIO
If CODIGO_STOCK = Empty Or DESCRIPCION_STOCK = Empty Or PRECIO_COSTO_STOCK = Empty Or PRECIO_VENTA_STOCK = Empty Or STOCK_IDEAL_STOCK = Empty Then
    MsgBox "ES NECESARIO INGRESAR TODOS LOS DATOS", vbExclamation
    DESCRIPCION_STOCK.SetFocus
    Exit Sub
Else
'CODIGO QUE GENERA LA PREGUNTA DE SEGURIDAD ANTES DE INGRESAR LOS DATOS
MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE INGRESAR LOS DATOS?", vbQuestion + vbYesNo, "INGRESO DE DATOS")
If MENSAJE = vbYes Then

'CODIGO QUE GENERA LA BUSQUEDA DE LA ULTIMA FILA OCUPADA Y LA PRIMER FILA VACIA
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
        
'CODIGO QUE EVITARA INGRESAR CODIGOS DE PRODUCTOS REPETIDOS
For I = 2 To FINAL
    If UCase(CODIGO_STOCK.Text) = UCase(Hoja2.Cells(I, 2)) Then
        MsgBox "ESTE CODIGO YA FUE INGRESADO ANTERIORMENTE, ES NECESARIO INGRESAR UN CODIGO DIFERENTE", vbExclamation
        CODIGO_STOCK.SetFocus
        Exit Sub
    End If
Next I

'CODIGO QUE GENERA EL INGRESO DE DATOS EN LA PRIMER FILA VACIA
Hoja2.Cells(FILA, 1) = Val(ID_STOCK)
Hoja2.Cells(FILA, 2) = CODIGO_STOCK
Hoja2.Cells(FILA, 3) = DESCRIPCION_STOCK
Hoja2.Cells(FILA, 5) = FormatNumber(PRECIO_COSTO_STOCK.Value, 2)
Hoja2.Cells(FILA, 6) = FormatNumber(PRECIO_VENTA_STOCK.Value, 2)
Hoja2.Cells(FILA, 7) = STOCK_IDEAL_STOCK.Value
    
    'CODIGO QUE GENERA EL VACIADO DE CADA CAMPO
    'ID_STOCK = Empty
    CODIGO_STOCK = Empty
    DESCRIPCION_STOCK = Empty
    PRECIO_COSTO_STOCK = Empty
    PRECIO_VENTA_STOCK = Empty
    STOCK_IDEAL_STOCK = Empty
    
            'CODIGO QUE GENERA EL FOLIO AUTOINCREMENTABLE
        FILA2 = 2
        Do While Hoja2.Cells(FILA2, 1) <> Empty
            FILA2 = FILA2 + 1
        Loop
            FINAL2 = FILA2 - 1
    
        
        If Hoja2.Cells(2, 1) = Empty Then
            ID_STOCK = 0 + 1
        Else
            ID_STOCK = Hoja2.Cells(FINAL2, 1) + 1
            
        
        End If
    ThisWorkbook.Save
    MsgBox "|fffd|DATOS INGRESADOS CON |fffd|XITO!", vbInformation
    
    DESCRIPCION_STOCK.SetFocus
    Exit Sub
    
    
   
Else
MsgBox "OPERACI|fffd|N CANCELADA", vbExclamation
End If
End If
End Sub
Private Sub CommandButton2_Click()
Unload ING_STOCK
End Sub
Private Sub DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub PRECIO_COSTO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub PRECIO_VENTA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub STOCK_IDEAL_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub TextBox1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub UserForm_Initialize()
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

    If Hoja2.Cells(2, 1) = Empty Then
        ID_STOCK = 0 + 1
    Else
        ID_STOCK = Hoja2.Cells(FINAL, 1) + 1
        
    
    End If

End Sub
Attribute VB_Name = "INVERSION_STOCK"
Attribute VB_Base = "0{526EC082-201B-4305-B5F0-42A89FB17581}{7766F29F-E815-4A9C-BCE5-A349D6F4A145}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click()
Unload Me
End Sub
Private Sub UserForm_Initialize()
Dim FILA, FINAL, I As Long
Dim TOTAL, SUMA As Double
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1


With ListBox1
    .ColumnCount = 5
    .ColumnWidths = "60PT;180PT;120PT;60PT;60PT;"
End With

ListBox1.Clear
SUMA = 0
For I = 2 To FINAL
    TOTAL = Val(Hoja2.Cells(I, 4)) * (Hoja2.Cells(I, 5))
    
        With ListBox1
            .AddItem
            .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2) 'CODIGO
            .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3) 'DESCRIPCION
            .List(.ListCount - 1, 2) = Hoja2.Cells(I, 4) 'CANTIDAD
            .List(.ListCount - 1, 3) = FormatCurrency(Hoja2.Cells(I, 5), 2) 'PRECIO
            .List(.ListCount - 1, 4) = FormatCurrency(TOTAL, 2) 'TOTAL
        End With
   
    SUMA = SUMA + Val(TOTAL)
Next I
    TOTAL_INVERSIONSTOCK = FormatCurrency(SUMA, 2)
End Sub
Attribute VB_Name = "MENU_PRINCIPAL"
Attribute VB_Base = "0{F4CEF78A-45F1-4210-BEA5-E2E19094BE36}{88E9AB4B-E17E-4CF2-83F8-13B1134D7430}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton10_Click()
Load MOD_STOCK
MOD_STOCK.Show
End Sub
Private Sub CommandButton11_Click()
Load MOD_ENTRADAS_STOCK
MOD_ENTRADAS_STOCK.Show
End Sub
Private Sub CommandButton12_Click()
Load MOD_SALIDAS_STOCKS
MOD_SALIDAS_STOCKS.Show
End Sub
Private Sub CommandButton13_Click()
Load MOD_INGRESOYEGRESOS
MOD_INGRESOYEGRESOS.Show
End Sub
Private Sub CommandButton14_Click()
Load MOD_INGRESOYEGRESOS
MOD_INGRESOYEGRESOS.Show
End Sub

Private Sub CommandButton15_Click()
Load REPORTE_FIN_DE_MES
REPORTE_FIN_DE_MES.Show
End Sub

Private Sub CommandButton3_Click()
Load ING_STOCK
ING_STOCK.Show
End Sub
Private Sub CommandButton4_Click()
Load ENTRADAS_STOCK
ENTRADAS_STOCK.Show
End Sub
Private Sub CommandButton5_Click()
Load SALIDAS_STOCK
SALIDAS_STOCK.Show
End Sub
Private Sub CommandButton6_Click()
Load INGRESOS
INGRESOS.Show
End Sub
Private Sub CommandButton7_Click()
Load EGRESOS
EGRESOS.Show
End Sub
Private Sub CommandButton8_Click()
Load INVERSION_STOCK
INVERSION_STOCK.Show
End Sub
Private Sub CommandButton9_Click()
End Sub
Private Sub UserForm_Initialize()
MultiPage1.SetFocus
End Sub
Attribute VB_Name = "MOD_ENTRADAS_STOCK"
Attribute VB_Base = "0{3E393B37-7642-4639-A970-A05FF6636DC7}{8C11B688-A14B-4576-8FCF-285CA78EEFC3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I, i2, FILA2, FINAL2, FILA3, FINAL3 As Long
Dim T_COSTO, T_VENTAS As Double
Dim C_ACTUAL, C_STOCK, C_CORREGIDA As Integer
Dim MENSAJE As String

'COIGO QUE ENCONTRARA LA ULTIMA FILA OCUPADA EN LA HOJA BITACORA DE ENTRADAS
FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

'CODIGO QUE ENCONTRAR LA ULTIMA FILA OCUPADA EN LA HOJA DE STOCK
FILA2 = 2
Do While Hoja2.Cells(FILA2, 1) <> Empty
    FILA2 = FILA2 + 1
Loop
FINAL2 = FILA2 - 1
If MOD_ENT_DESCRIPCION_STOCK = Empty Or MOD_ENT_CODIGO_STOCK = Empty Or MOD_ENT_FECHA_STOCK = Empty Or MOD_ENT_NOMBRE_STOCK = Empty Or MOD_ENT_CANTIDAD_STOCK = Empty Or MOD_ENT_PRECIO_COSTO_STOCK = Empty Or MOD_ENT_PRECIO_VENTA_STOCK = Empty Then
    MsgBox "ES NECESARIO COMPLETAR TODOS LOS CAMPOS", vbExclamation
    Exit Sub
Else
   MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE MODIFICAR LOS DATOS?", vbQuestion + vbYesNo, "MODIFICACION")
    If MENSAJE = vbYes Then
        'EVITAR QUE LOS DATOS SE INGRESEN SI NO HAY UN OPTIONBOTTON ACTIVO
        If OptionButton1 = False And OptionButton2 = False Then
        MsgBox "ES NECESARIO SELECCIONAR MAYOR O MENOR", vbExclamation
        Exit Sub
        End If
        'VAMOS A UTILIZAR EL OPTIONBOTTON
        If OptionButton1 = True Then
        'CODIGO QUE PERMITIRA AGREGAR PIEZAS NUEVAS A STOCK
        For I = 2 To FINAL2
            If MOD_ENT_CODIGO_STOCK.Text = Hoja2.Cells(I, 2) Then
                'ESTA VARIABLE TOMA EL VALOR DE CANTIDAD EN LA HOJA STOCK
                C_STOCK = Hoja2.Cells(I, 4).Value
                'ESTA VARIABLE ADQUIERE LA DIFERENCIA ENTRE LA CANTIDAD QUE SE INGRESO EN LA BITACORA MENOS LA CANTIDAD QUE QUIERE CORREGIR
                C_ACTUAL = Val(MOD_ENT_CANTIDAD_STOCK) - Val(MOD_ENT_CANTIDADACTUAL_STOCK)
                'ESTA VARIABLE LA RESTA DE LO QUE HAY EN STOCK MENOS LA DIFERENCIA QUE SE INGRESO EN LA MODIFICACION DE LA BITACORA DE ENTRADAS
                C_CORREGIDA = Val(C_STOCK) + Val(C_ACTUAL)
                Hoja2.Cells(I, 4) = C_CORREGIDA
                
                Exit For
            End If
        Next I
        
        End If
        
        If OptionButton2 = True Then
        'CODIGO QUE PERMITIRA AGREGAR PIEZAS NUEVAS A STOCK
        For I = 2 To FINAL2
            If MOD_ENT_CODIGO_STOCK.Text = Hoja2.Cells(I, 2) Then
                'ESTA VARIABLE TOMA EL VALOR DE CANTIDAD EN LA HOJA STOCK
                C_STOCK = Hoja2.Cells(I, 4).Value
                'ESTA VARIABLE ADQUIERE LA DIFERENCIA ENTRE LA CANTIDAD QUE SE INGRESO EN LA BITACORA MENOS LA CANTIDAD QUE QUIERE CORREGIR
                C_ACTUAL = Val(MOD_ENT_CANTIDADACTUAL_STOCK) - Val(MOD_ENT_CANTIDAD_STOCK)
                'ESTA VARIABLE LA RESTA DE LO QUE HAY EN STOCK MENOS LA DIFERENCIA QUE SE INGRESO EN LA MODIFICACION DE LA BITACORA DE ENTRADAS
                C_CORREGIDA = Val(C_STOCK) - Val(C_ACTUAL)
                Hoja2.Cells(I, 4) = C_CORREGIDA
                
                Exit For
            End If
        Next I
        End If
               'CODIGO PARA INGRESAR DATOS A LA BITACORA DE ENTRADAS
            For i2 = 2 To FINAL
            If Val(MOD_ENT_ID_STOCK) = Val(Hoja3.Cells(i2, 1)) Then
                Hoja3.Cells(i2, 4) = MOD_ENT_CANTIDAD_STOCK.Value
                'CODIGO QUE CALCULARA EL TOTAL DE VENTA Y TOTAL COSTO
                
                T_COSTO = MOD_ENT_CANTIDAD_STOCK * MOD_ENT_PRECIO_COSTO_STOCK
                T_VENTAS = MOD_ENT_CANTIDAD_STOCK * MOD_ENT_PRECIO_VENTA_STOCK
                Hoja3.Cells(i2, 7) = FormatCurrency(T_COSTO, 2)
                Hoja3.Cells(i2, 8) = FormatCurrency(T_VENTAS, 2)
                
                   'VACIADO DE CAMPOS
            MOD_ENT_CODIGO_STOCK = Empty
            MOD_ENT_DESCRIPCION_STOCK = Empty
            MOD_ENT_CANTIDAD_STOCK = Empty
            MOD_ENT_PRECIO_COSTO_STOCK = Empty
            MOD_ENT_PRECIO_VENTA_STOCK = Empty
            MOD_ENT_CANTIDADACTUAL_STOCK = Empty
            MOD_ENT_ID_STOCK = Empty
            MOD_ENT_DESCRIPCION_STOCK.SetFocus
            ThisWorkbook.Save
            OptionButton1 = False
            OptionButton2 = False
                MsgBox "DATOS MODIFICADOS CON EXITO"
             End If
            Next i2
      Else
        MsgBox "OPERACION CANCELADA", vbInformation
      End If
End If
End Sub
Private Sub CommandButton2_Click()
Unload Me
End Sub
Private Sub MOD_ENT_CANTIDAD_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub

Private Sub MOD_ENT_CANTIDADACTUAL_STOCK_Change()

End Sub

Private Sub MOD_ENT_CANTIDADACTUAL_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

End Sub

Private Sub MOD_ENT_CODIGO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub MOD_ENT_DESCRIPCION_STOCK_AfterUpdate(): On Error Resume Next
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
ListBox1.Clear
If MOD_ENT_FECHA_STOCK <> Empty Then
For I = 2 To FINAL
    
    If CDate(Hoja3.Cells(I, 10)) = CDate(MOD_ENT_FECHA_STOCK) And Hoja3.Cells(I, 3).Text Like "*" & MOD_ENT_DESCRIPCION_STOCK & "*" Then
        With ListBox1
         .AddItem
         .List(.ListCount - 1, 0) = Hoja3.Cells(I, 1)
         .List(.ListCount - 1, 1) = Hoja3.Cells(I, 10)
         .List(.ListCount - 1, 2) = Hoja3.Cells(I, 2)
         .List(.ListCount - 1, 3) = Hoja3.Cells(I, 3)
         .List(.ListCount - 1, 4) = Hoja3.Cells(I, 4)
         .List(.ListCount - 1, 5) = FormatCurrency(Hoja2.Cells(I, 5), 2)
         .List(.ListCount - 1, 6) = FormatCurrency(Hoja2.Cells(I, 6), 2)
        End With
    End If
Next I
Else

MsgBox "ES NECESARIO INGRESAR UNA FECHA"
MOD_ENT_FECHA_STOCK.SetFocus
End If
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean): On Error Resume Next
Dim FILA, FINAL, I As Long
If ListBox1 <> Empty Then
    MOD_ENT_ID_STOCK = Me.ListBox1.List(ListBox1.ListIndex - 0, 0)
End If
FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

For I = 2 To FINAL
If Val(MOD_ENT_ID_STOCK) = Val(Hoja3.Cells(I, 1)) Then
    MOD_ENT_CODIGO_STOCK.Text = Hoja3.Cells(I, 2)
    MOD_ENT_DESCRIPCION_STOCK = Hoja3.Cells(I, 3)
    MOD_ENT_CANTIDADACTUAL_STOCK = Hoja3.Cells(I, 4)
    MOD_ENT_PRECIO_COSTO_STOCK = FormatCurrency(Hoja3.Cells(I, 5), 2)
    MOD_ENT_PRECIO_VENTA_STOCK = FormatCurrency(Hoja3.Cells(I, 6), 2)
    MOD_ENT_NOMBRE_STOCK = Hoja3.Cells(I, 9)
   
'    MOD_ENT_PRECIO_VENTA_STOCK = Hoja3.Cells(I, 10)
End If
Next I

MOD_ENT_CANTIDAD_STOCK.SetFocus

End Sub
Private Sub MOD_ENT_DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub MOD_ENT_FECHA_STOCK_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(MOD_ENT_FECHA_STOCK)
mes = Mid(MOD_ENT_FECHA_STOCK, 4, 2)
dia = Left(MOD_ENT_FECHA_STOCK, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_ENT_FECHA_STOCK = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub MOD_ENT_FECHA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(MOD_ENT_FECHA_STOCK)
    Case 2: MOD_ENT_FECHA_STOCK = MOD_ENT_FECHA_STOCK & "/"
    Case 5: MOD_ENT_FECHA_STOCK = MOD_ENT_FECHA_STOCK & "/"
End Select

End Sub
Private Sub MOD_ENT_NOMBRE_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub MOD_ENT_PRECIO_COSTO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub MOD_ENT_PRECIO_VENTA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub

Private Sub UserForm_Initialize()
'CODIGO QUE SECCIONARA EL LISTBOX EN LA CANTIDAD DE COLUMNAS QUE DESEE Y EL TAMA|fffd|O DE CADA UNA
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja3.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

With ListBox1
    .ColumnCount = 7
    .ColumnWidths = "40PT;70PT;70PT;110PT;80PT;80PT;80PT"
End With


End Sub
Attribute VB_Name = "MOD_INGRESOYEGRESOS"
Attribute VB_Base = "0{B332E379-0B94-48C1-9812-02DCDBC9E685}{4D472CF6-C0DD-4E76-9F37-92F3747C9D76}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
Dim F_IN, F_FIN As Date

F_IN = FECHA_INICIAL
F_FIN = FECHA_FINAL

If F_FIN < F_IN Then
    MsgBox "NO SE PUEDE INGRESAR UNA FECHA FINAL ANTERIOR A LA FECHA INICIAL", vbExclamation
    Exit Sub
Else
FILA = Hoja5.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1
ListBox1.Clear
For I = 2 To FINAL
    If CDate(Hoja5.Cells(I, 2)) >= F_IN And CDate(Hoja5.Cells(I, 2)) <= F_FIN Then
        With ListBox1
            .AddItem
            .List(.ListCount - 1, 0) = Hoja5.Cells(I, 1) 'ID
            .List(.ListCount - 1, 1) = Hoja5.Cells(I, 2) 'FECHA
            .List(.ListCount - 1, 2) = Hoja5.Cells(I, 3) 'DESCRIPCION
            .List(.ListCount - 1, 3) = Hoja5.Cells(I, 5) 'TIPO REGIS
            .List(.ListCount - 1, 4) = FormatCurrency(Hoja5.Cells(I, 4), 2) 'MONTO
            
        End With
    
    End If

Next I
End If
End Sub
Private Sub CommandButton2_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
Dim MENSAJE As String
FILA = Hoja5.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1

If DESCRIPCION = Empty Or FECHA_REGISTRO = Empty Or MONTO = Empty Then
    MsgBox "ES NECESARIO COMPLETAR TODOS LOS CAMPOS", vbExclamation
    Exit Sub
Else
MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE MODIFICAR LOS DATOS?", vbQuestion + vbYesNo, "MODIFICACION")
If MENSAJE = vbYes Then

For I = 2 To FINAL
    If Val(ID) = Val(Hoja5.Cells(I, 1)) Then
       Hoja5.Cells(I, 2) = Format(FECHA_REGISTRO, "MM/DD/YYYY") 'FECHA
       Hoja5.Cells(I, 3) = DESCRIPCION 'DESCRIPCION
       Hoja5.Cells(I, 4) = FormatCurrency(MONTO.Value, 2) 'MONTO
       ThisWorkbook.Save
       MsgBox "DATOS MODIFICADOS CON EXITO", vbInformation
       DESCRIPCION = Empty
       FECHA_REGISTRO = Empty
       REGISTRO = Empty
       MONTO = Empty
       ListBox1.Clear
       ID = Empty
       Exit Sub
    End If

Next I
Else
    MsgBox "OPERACION CANCELADA", vbInformation
End If
End If
End Sub

Private Sub CommandButton3_Click()
Unload Me
End Sub
Private Sub DESCRIPCION_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub FECHA_FINAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_FINAL)
mes = Mid(FECHA_FINAL, 4, 2)
dia = Left(FECHA_FINAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_FINAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_FINAL)
    Case 2: FECHA_FINAL = FECHA_FINAL & "/"
    Case 5: FECHA_FINAL = FECHA_FINAL & "/"
End Select

End Sub

Private Sub FECHA_INICIAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_INICIAL)
mes = Mid(FECHA_INICIAL, 4, 2)
dia = Left(FECHA_INICIAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_INICIAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_INICIAL)
    Case 2: FECHA_INICIAL = FECHA_INICIAL & "/"
    Case 5: FECHA_INICIAL = FECHA_INICIAL & "/"
End Select

End Sub

Private Sub FECHA_REGISTRO_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_REGISTRO)
mes = Mid(FECHA_REGISTRO, 4, 2)
dia = Left(FECHA_REGISTRO, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_REGISTRO = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_REGISTRO = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_REGISTRO = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_REGISTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_REGISTRO)
    Case 2: FECHA_REGISTRO = FECHA_REGISTRO & "/"
    Case 5: FECHA_REGISTRO = FECHA_REGISTRO & "/"
End Select

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean): On Error Resume Next
ID = ListBox1.List(ListBox1.ListIndex - 0, 0)
FECHA_REGISTRO = ListBox1.List(ListBox1.ListIndex - 0, 1)
DESCRIPCION = ListBox1.List(ListBox1.ListIndex - 0, 2)
REGISTRO = ListBox1.List(ListBox1.ListIndex - 0, 3)
MONTO = FormatCurrency(ListBox1.List(ListBox1.ListIndex - 0, 4), 2)
End Sub
Private Sub MONTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If
End Sub

Private Sub UserForm_Initialize()

With ListBox1
    .ColumnCount = 5
    .ColumnWidths = "40PT;80PT;150PT;120PT;50PT"
End With
End Sub
Attribute VB_Name = "MOD_SALIDAS_STOCKS"
Attribute VB_Base = "0{C2E4D2C6-52A2-47E4-9D8F-5D7EEE3AD6FE}{18A0F328-3414-4996-A3F7-B322C0C28408}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I, FILA2, FINAL2, i2  As Long
Dim MENSAJE As String
Dim DIFERENCIA1, DIFERENCIA2, CANTIDA_MODIFICADA, STOCK_OLD, total1, precio_cos, total_cost As Double
'UTLIMA FILA EN BITACORA DE SALIDA
FILA = 2
Do While Hoja4.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'ULTIMA FILA EN BASE DE DATOS STOCK
FILA2 = 2
Do While Hoja2.Cells(FILA2, 1) <> Empty
    FILA2 = FILA2 + 1
Loop
FINAL2 = FILA2 - 1

MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE MODIFICAR LOS DATOS?", vbQuestion + vbYesNo, "MODIFICACION DE DATOS")
If OptionButton1 = False And OptionButton2 = False Or MOD_SAL_CANTIDAD_STOCK = Empty Then
    MsgBox "ES NECESARIO INDICAR SI AGREGARAS O QUITARAS CANTIDADES EN STOCK", vbCritical
    OptionButton1.SetFocus
    Exit Sub
Else
For i2 = 2 To FINAL2
    If MOD_SAL_CODIGO_STOCK.Text = Hoja2.Cells(i2, 2) Then
        'AGREGAR PIEZAS
        If OptionButton1 = True Then
           STOCK_OLD = Val(Hoja2.Cells(i2, 4))
           DIFERENCIA1 = Val(MOD_SAL_CANTIDAD_STOCK) + Val(MOD_SAL_CANTIDADACTUAL_STOCK)
           CANTIDA_MODIFICADA = Val(STOCK_OLD) - Val(MOD_SAL_CANTIDAD_STOCK)
           Hoja2.Cells(i2, 4) = Val(CANTIDA_MODIFICADA)
            
           precio_cos = Val(Hoja2.Cells(i2, 5))
           total_cost = Val(precio_cos) * Val(DIFERENCIA1)
            For I = 2 To FINAL
                      total1 = Val(DIFERENCIA1) * Mid(MOD_SAL_PRECIO_VENTA_STOCK, 2)
                        If Val(MOD_SAL_ID_STOCK) = Val(Hoja4.Cells(I, 1)) Then
                             Hoja4.Cells(I, 1) = Val(MOD_SAL_ID_STOCK)
                             Hoja4.Cells(I, 3) = MOD_SAL_CODIGO_STOCK
                             Hoja4.Cells(I, 4) = MOD_SAL_DESCRIPCION_STOCK
                             Hoja4.Cells(I, 5) = DIFERENCIA1
                             Hoja4.Cells(I, 6) = FormatCurrency(precio_cos, 2)
                             Hoja4.Cells(I, 7) = FormatCurrency(MOD_SAL_PRECIO_VENTA_STOCK.Value, 2)
                             Hoja4.Cells(I, 8) = FormatCurrency(total_cost, 2)
                             Hoja4.Cells(I, 9) = FormatCurrency(total1, 2)
                             ThisWorkbook.Save
                             MsgBox "DATOS MODIFICADOS CON EXITO", vbInformation
                             OptionButton1 = False
                             OptionButton2 = False
                             MOD_SAL_ID_STOCK = Empty
                             MOD_SAL_CODIGO_STOCK = Empty
                             MOD_SAL_DESCRIPCION_STOCK = Empty
                             MOD_SAL_PRECIO_VENTA_STOCK = Empty
                             MOD_SAL_CANTIDAD_STOCK = Empty
                             MOD_SAL_CANTIDADACTUAL_STOCK = Empty
                             'MOD_SAL_ID_STOCK = Empty
                             Exit Sub
                           End If
             Next I
         End If
         'QUITAR PIEZAS
         If OptionButton2 = True Then
           STOCK_OLD = Val(Hoja2.Cells(i2, 4))
           DIFERENCIA2 = Val(MOD_SAL_CANTIDADACTUAL_STOCK) - Val(MOD_SAL_CANTIDAD_STOCK)
           CANTIDA_MODIFICADA = Val(STOCK_OLD) + Val(MOD_SAL_CANTIDAD_STOCK)
           Hoja2.Cells(i2, 4) = Val(CANTIDA_MODIFICADA)
           
           precio_cos = Val(Hoja2.Cells(i2, 5))
           total_cost = Val(precio_cos) * Val(DIFERENCIA2)
            For I = 2 To FINAL
                      total1 = Val(DIFERENCIA2) * Mid(MOD_SAL_PRECIO_VENTA_STOCK, 2)
                        If Val(MOD_SAL_ID_STOCK) = Val(Hoja4.Cells(I, 1)) Then
                             Hoja4.Cells(I, 1) = Val(MOD_SAL_ID_STOCK)
                             Hoja4.Cells(I, 3) = MOD_SAL_CODIGO_STOCK
                             Hoja4.Cells(I, 4) = MOD_SAL_DESCRIPCION_STOCK
                             Hoja4.Cells(I, 5) = DIFERENCIA2
                             Hoja4.Cells(I, 6) = FormatCurrency(precio_cos, 2)
                             Hoja4.Cells(I, 7) = FormatCurrency(MOD_SAL_PRECIO_VENTA_STOCK, 2)
                             Hoja4.Cells(I, 8) = FormatCurrency(total_cost, 2)
                             Hoja4.Cells(I, 9) = FormatCurrency(total1, 2)
                             ThisWorkbook.Save
                             MsgBox "DATOS MODIFICADOS CON EXITO", vbInformation
                             OptionButton1 = False
                             OptionButton2 = False
                             MOD_SAL_ID_STOCK = Empty
                             MOD_SAL_CODIGO_STOCK = Empty
                             MOD_SAL_DESCRIPCION_STOCK = Empty
                             MOD_SAL_PRECIO_VENTA_STOCK = Empty
                             MOD_SAL_CANTIDAD_STOCK = Empty
                             MOD_SAL_CANTIDADACTUAL_STOCK = Empty
                             Exit Sub
                           End If
             Next I
         End If
    End If
Next i2

End If
End Sub
Private Sub CommandButton2_Click()
Unload Me
End Sub
Private Sub CommandButton3_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja4.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
If MOD_SAL_OPERACION_STOCK = Empty Then
    MsgBox "ES NECESARIO INGRESAR UN NUMERO DE OPERACION", vbExclamation
    MOD_SAL_OPERACION_STOCK.SetFocus
    Exit Sub
Else


ListBox1.Clear
For I = 2 To FINAL
    If MOD_SAL_OPERACION_STOCK.Text = Hoja4.Cells(I, 2) Then
    With ListBox1
        .AddItem
        .List(.ListCount - 1, 0) = Hoja4.Cells(I, 1)
        .List(.ListCount - 1, 1) = Hoja4.Cells(I, 11)
        .List(.ListCount - 1, 2) = Hoja4.Cells(I, 2)
        .List(.ListCount - 1, 3) = Hoja4.Cells(I, 3)
        .List(.ListCount - 1, 4) = Hoja4.Cells(I, 4)
        .List(.ListCount - 1, 5) = Hoja4.Cells(I, 5)
        .List(.ListCount - 1, 6) = FormatCurrency(Hoja4.Cells(I, 7), 2)
        .List(.ListCount - 1, 7) = FormatCurrency(Hoja4.Cells(I, 9), 2)
    End With
    
    End If

Next I
End If
End Sub

Private Sub CommandButton4_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja4.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
If MOD_SAL_FECHAFINAL_STOCK < MOD_SAL_FECHAINCIAL_STOCK Then
    MsgBox "NO SE PUEDE INGRESAR UNA FECHA FINAL ANTERIOR A LA FECHA INICIAL", vbExclamation
    Exit Sub
Else

ListBox1.Clear
For I = 2 To FINAL
    If CDate(Hoja4.Cells(I, 11)) >= CDate(MOD_SAL_FECHAINCIAL_STOCK) And CDate(Hoja4.Cells(I, 11)) <= CDate(MOD_SAL_FECHAFINAL_STOCK) Then
    With ListBox1
        .AddItem
        .List(.ListCount - 1, 0) = Hoja4.Cells(I, 1)
        .List(.ListCount - 1, 1) = Hoja4.Cells(I, 11)
        .List(.ListCount - 1, 2) = Hoja4.Cells(I, 2)
        .List(.ListCount - 1, 3) = Hoja4.Cells(I, 3)
        .List(.ListCount - 1, 4) = Hoja4.Cells(I, 4)
        .List(.ListCount - 1, 5) = Hoja4.Cells(I, 5)
        .List(.ListCount - 1, 6) = FormatCurrency(Hoja4.Cells(I, 7), 2)
        .List(.ListCount - 1, 7) = FormatCurrency(Hoja4.Cells(I, 9), 2)
    End With
    
    End If

Next I
End If
End Sub

Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
On Error Resume Next
For I = 2 To FINAL
    If ListBox2.List(ListBox2.ListIndex - 0, 0) = Hoja2.Cells(I, 2) Then
    SAL_CODIGO_STOCK = Hoja2.Cells(I, 2)
    SAL_DESCRIPCION_STOCK = Hoja2.Cells(I, 3)
    'SAL_PRECIO_COSTO_STOCK = Hoja2.Cells(I, 5)
    SAL_PRECIO_VENTA_STOCK = Hoja2.Cells(I, 6)
    SAL_CANTIDAD_STOCK.SetFocus
    End If
Next I
End Sub
Private Sub SAL_BUSQUEDA_PRODUCTO_STOCK_Change()
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'BUSQUEDA DE PRODUCTOS
ListBox2.Clear
For I = 2 To FINAL
If UCase(Hoja2.Cells(I, 3)) Like "*" & UCase(SAL_BUSQUEDA_PRODUCTO_STOCK) & "*" Then
    With ListBox2
        .AddItem
        .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2)
        .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3)
    End With
End If

Next I


End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListBox1 <> Empty Then
MOD_SAL_ID_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 0)
MOD_SAL_CODIGO_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 3)
MOD_SAL_DESCRIPCION_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 4)
MOD_SAL_CANTIDADACTUAL_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 5)
MOD_SAL_PRECIO_VENTA_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 6)
MOD_SAL_TOTAL_STOCK = ListBox1.List(ListBox1.ListIndex - 0, 7)
OptionButton1 = False
OptionButton2 = False

End If
End Sub
Private Sub MOD_SAL_CANTIDAD_STOCK_Change(): On Error Resume Next
MOD_SAL_TOTAL_STOCK = Val(MOD_SAL_CANTIDAD_STOCK) * Mid(MOD_SAL_PRECIO_VENTA_STOCK, 2)

End Sub

Private Sub MOD_SAL_CANTIDAD_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If
End Sub

Private Sub MOD_SAL_CODIGO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub MOD_SAL_DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub MOD_SAL_FECHAFINAL_STOCK_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(MOD_SAL_FECHAFINAL_STOCK)
mes = Mid(MOD_SAL_FECHAFINAL_STOCK, 4, 2)
dia = Left(MOD_SAL_FECHAFINAL_STOCK, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAFINAL_STOCK = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAFINAL_STOCK = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAFINAL_STOCK = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub MOD_SAL_FECHAFINAL_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(MOD_SAL_FECHAFINAL_STOCK)
    Case 2: MOD_SAL_FECHAFINAL_STOCK = MOD_SAL_FECHAFINAL_STOCK & "/"
    Case 5: MOD_SAL_FECHAFINAL_STOCK = MOD_SAL_FECHAFINAL_STOCK & "/"
End Select

End Sub

Private Sub MOD_SAL_FECHAINCIAL_STOCK_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(MOD_SAL_FECHAINCIAL_STOCK)
mes = Mid(MOD_SAL_FECHAINCIAL_STOCK, 4, 2)
dia = Left(MOD_SAL_FECHAINCIAL_STOCK, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAINCIAL_STOCK = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAINCIAL_STOCK = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            MOD_SAL_FECHAINCIAL_STOCK = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub MOD_SAL_FECHAINCIAL_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(MOD_SAL_FECHAINCIAL_STOCK)
    Case 2: MOD_SAL_FECHAINCIAL_STOCK = MOD_SAL_FECHAINCIAL_STOCK & "/"
    Case 5: MOD_SAL_FECHAINCIAL_STOCK = MOD_SAL_FECHAINCIAL_STOCK & "/"
End Select

End Sub

Private Sub MOD_SAL_OPERACION_STOCK_Change()
End Sub

Private Sub MOD_SAL_OPERACION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If
End Sub

Private Sub MOD_SAL_PRECIO_VENTA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub

Private Sub UserForm_Initialize()

With ListBox1
    .ColumnCount = 8
    .ColumnWidths = "30PT;70PT;60PT;70PT;140PT;55PT;60PT;70PT"
End With


End Sub
Attribute VB_Name = "MOD_STOCK"
Attribute VB_Base = "0{EC8AC78C-4168-4D42-9C4E-CF4EC6FF80B9}{3C0AA75F-32D0-4235-952C-816AB85B2B97}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub BUSCADOR_Change()
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
ListBox1.Clear
For I = 2 To FINAL
    
    If UCase(Hoja2.Cells(I, 3).Text) Like "*" & UCase(BUSCADOR) & "*" Then
        With ListBox1
         .AddItem
         .List(.ListCount - 1, 0) = Hoja2.Cells(I, 1)
         .List(.ListCount - 1, 1) = Hoja2.Cells(I, 2)
         .List(.ListCount - 1, 2) = Hoja2.Cells(I, 3)
         .List(.ListCount - 1, 3) = FormatNumber(Hoja2.Cells(I, 5), 2)
         .List(.ListCount - 1, 4) = FormatNumber(Hoja2.Cells(I, 6), 2)
         .List(.ListCount - 1, 5) = Hoja2.Cells(I, 7)
        End With
    End If
Next I

End Sub

Private Sub CommandButton1_Click()
Dim FILA, FINAL, I As Long
Dim MENSAJE As String
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
If MOD_DESCRIPCION_STOCK = Empty Or MOD_CODIGO_STOCK = Empty Or MOD_PRECIO_COSTO_STOCK = Empty Or MOD_PRECIO_VENTA_STOCK = Empty Or MOD_STOCK_IDEAL_STOCK = Empty Then
    MsgBox "ES NECESARIO COMPLETAR TODOS LOS CAMPOS", vbExclamation
        Exit Sub
Else
MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE MODIFICAR LOS DATOS?", vbQuestion + vbYesNo, "MODIFICACION")
If MENSAJE = vbYes Then
For I = 2 To FINAL
    If Val(MOD_ID_STOCK) = Val(Hoja2.Cells(I, 1)) Then
        Hoja2.Cells(I, 1) = Val(MOD_ID_STOCK)
        Hoja2.Cells(I, 2) = MOD_CODIGO_STOCK
        Hoja2.Cells(I, 3) = MOD_DESCRIPCION_STOCK
        Hoja2.Cells(I, 5) = FormatNumber(MOD_PRECIO_COSTO_STOCK.Value, 2)
        Hoja2.Cells(I, 6) = FormatNumber(MOD_PRECIO_VENTA_STOCK.Value, 2)
        Hoja2.Cells(I, 7) = MOD_STOCK_IDEAL_STOCK.Value
        ThisWorkbook.Save
        MOD_ID_STOCK = Empty
        MOD_CODIGO_STOCK = Empty
        MOD_DESCRIPCION_STOCK = Empty
        MOD_PRECIO_COSTO_STOCK = Empty
        MOD_PRECIO_VENTA_STOCK = Empty
        MOD_STOCK_IDEAL_STOCK = Empty
        BUSCADOR = Empty
        MsgBox "DATOS MODIFICADOS CON EXITO"
    Exit Sub
    End If
    
Next I
Else
    MsgBox "OPERACION CANCELADA", vbExclamation
End If


End If
End Sub
Private Sub CommandButton2_Click()
Unload MOD_STOCK
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim FILA, FINAL, I As Long
If ListBox1 <> Empty Then
    MOD_ID_STOCK = Me.ListBox1.List(Me.ListBox1.ListIndex - 0, 0)
End If
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1

For I = 2 To FINAL
If Val(MOD_ID_STOCK) = Hoja2.Cells(I, 1) Then
    MOD_CODIGO_STOCK = Hoja2.Cells(I, 2)
    MOD_DESCRIPCION_STOCK = Hoja2.Cells(I, 3)
    MOD_PRECIO_COSTO_STOCK = FormatNumber(Hoja2.Cells(I, 5), 2)
    MOD_PRECIO_VENTA_STOCK = FormatNumber(Hoja2.Cells(I, 6), 2)
    MOD_STOCK_IDEAL_STOCK = Hoja2.Cells(I, 7)
End If
Next I
End Sub
Private Sub MOD_CODIGO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub MOD_DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub
Private Sub MOD_PRECIO_COSTO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub MOD_PRECIO_VENTA_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Or (KeyAscii = 44) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub MOD_STOCK_IDEAL_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
MOD_STOCK_IDEAL_STOCK = Empty
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub
Private Sub UserForm_Initialize()
'CODIGO QUE SECCIONARA EL LISTBOX EN LA CANTIDAD DE COLUMNAS QUE DESEE Y EL TAMA|fffd|O DE CADA UNA
With ListBox1
    .ColumnCount = 6
    .ColumnWidths = "65PT;80PT;160PT;80PT;80PT;60PT"
End With

End Sub
Attribute VB_Name = "M|fffd|dulo1"
Private Sub GENERADOR_PEDIDO()
Dim FILA, FINAL, I, FILA2, FINAL2, FILA3, FINAL3 As Long
Dim PEDIDO As Integer
Dim TOTAL, TOTAL_COS As Double

FILA3 = Hoja6.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL3 = FILA3 - 1
Hoja6.Range("A2:F" & FILA3).Clear

FILA = Hoja2.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1
FILA2 = Hoja6.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL2 = FILA2 - 1

TOTAL = 0
For I = 2 To FINAL
    
    
    PEDIDO = Val(Hoja2.Cells(I, 7)) - Val(Hoja2.Cells(I, 4))
    If PEDIDO > 0 Then
    Hoja6.Cells(FILA2, 1) = Hoja2.Cells(I, 1)
    Hoja6.Cells(FILA2, 2) = Hoja2.Cells(I, 2)
    Hoja6.Cells(FILA2, 3) = Hoja2.Cells(I, 3)
    Hoja6.Cells(FILA2, 4) = PEDIDO
    Hoja6.Cells(FILA2, 5) = FormatCurrency(Hoja2.Cells(I, 5), 2)
    TOTAL_COS = Val(Hoja2.Cells(I, 5)) * Val(PEDIDO)
    Hoja6.Cells(FILA2, 6) = FormatCurrency(TOTAL_COS, 2)
    TOTAL = TOTAL + Val(Hoja6.Cells(FILA2, 6))
    Hoja6.Cells(1, 10) = FormatCurrency(TOTAL, 2)
    
    FILA2 = FILA2 + 1
    
    End If
Next I
    

ThisWorkbook.Save
MsgBox "PEDIDO GENERADO CON |fffd|XITO", vbInformation

End Sub
Sub cargar_menu()
Attribute cargar_menu.VB_ProcData.VB_Invoke_Func = "m\n14"
Load MENU_PRINCIPAL
MENU_PRINCIPAL.Show
End Sub

Attribute VB_Name = "M|fffd|dulo2"
Private Sub MENU_INICIAL()
Load MENU_PRINCIPAL
MENU_PRINCIPAL.Show
End Sub
Attribute VB_Name = "REPORTE_FIN_DE_MES"
Attribute VB_Base = "0{5BB9DC1F-0B7A-47D0-B960-18BA728FDA0B}{EE0A5C8E-9FC6-489B-BFF5-865650B3217D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I As Long
Dim TOTAL_INGRESO, TOTAL_EGRESO As Double
Dim F_INICIAL, F_FINAL As Date
F_INICIAL = FECHA_INICIAL
F_FINAL = FECHA_FINAL

FILA = Hoja5.Range("A" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1
If F_FINAL < F_INICIAL Then
   MsgBox "NO SE PUEDE INGRESAR UNA FECHA FINAL ANTERIOR A LA FECHA INICIAL", vbExclamation
        Exit Sub
Else

ListBox1.Clear
ListBox2.Clear
TOTAL_EGRESO = 0
TOTAL_INGRESO = 0
For I = 2 To FINAL
    If CDate(Hoja5.Cells(I, 2)) >= F_INICIAL And CDate(Hoja5.Cells(I, 2)) <= F_FINAL Then
        'AGREGAR INFORMARCION AL LISTBOX DE EGRESOS
        If UCase(Hoja5.Cells(I, 5)) = "EGRESO" Then
                 With ListBox1
                    .AddItem
                    .List(.ListCount - 1, 0) = Hoja5.Cells(I, 2)
                    .List(.ListCount - 1, 1) = Hoja5.Cells(I, 3)
                    .List(.ListCount - 1, 2) = FormatCurrency(Hoja5.Cells(I, 4), 2)
                 
                 End With
                 TOTAL_EGRESO = TOTAL_EGRESO + Val(Hoja5.Cells(I, 4))

        End If
        
        'AGREGAR INFORMARCION AL LISTBOX DE INGRESO
        If UCase(Hoja5.Cells(I, 5)) = "INGRESO" Then
                
                With ListBox2
                 .AddItem
                 .List(.ListCount - 1, 0) = Hoja5.Cells(I, 2)
                 .List(.ListCount - 1, 1) = Hoja5.Cells(I, 3)
                 .List(.ListCount - 1, 2) = FormatCurrency(Hoja5.Cells(I, 4), 2)
                End With
                
                TOTAL_INGRESO = TOTAL_INGRESO + Val(Hoja5.Cells(I, 4))

         End If
    End If

Next I
T_EGRESO = FormatCurrency(TOTAL_EGRESO, 2)
T_INGRESO = FormatCurrency(TOTAL_INGRESO, 2)
UTILIDAD = Mid(T_INGRESO, 2) - Mid(T_EGRESO, 2)
UTILIDAD = FormatCurrency(UTILIDAD, 2)
End If
End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub CommandButton3_Click()
Load INVERSION_STOCK
INVERSION_STOCK.Show
End Sub

Private Sub FECHA_FINAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_FINAL)
mes = Mid(FECHA_FINAL, 4, 2)
dia = Left(FECHA_FINAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_FINAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_FINAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_FINAL)
    Case 2: FECHA_FINAL = FECHA_FINAL & "/"
    Case 5: FECHA_FINAL = FECHA_FINAL & "/"
End Select

End Sub

Private Sub FECHA_INICIAL_Change()
Dim validar As Integer
Dim mes As String
Dim dia As String
validar = Len(FECHA_INICIAL)
mes = Mid(FECHA_INICIAL, 4, 2)
dia = Left(FECHA_INICIAL, 2)
'01,03,05,07,08,10,12=31
'02=28
'04,06,09,11=30

If validar = 4 Or validar = 5 Then
    If mes = 1 Or mes = 3 Or mes = 5 Or mes = 7 Or mes = 8 Or mes = 10 Or mes = 12 Then
        If dia >= 32 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
        
    End If
    If mes = 2 Then
        If dia >= 30 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If
    If mes = 4 Or mes = 6 Or mes = 9 Or mes = 11 Then
        If dia >= 31 Then
            MsgBox "FORMATO DE FECHA NO VALIDO"
            FECHA_INICIAL = Empty
            Exit Sub
        End If
    End If

End If
End Sub

Private Sub FECHA_INICIAL_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim dia, mes As String
If (KeyAscii >= 48 And KeyAscii <= 57) Or (KeyAscii = 46) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbCritical
End If

Select Case Len(FECHA_INICIAL)
    Case 2: FECHA_INICIAL = FECHA_INICIAL & "/"
    Case 5: FECHA_INICIAL = FECHA_INICIAL & "/"
End Select

End Sub

Private Sub UserForm_Initialize()
Dim f As String
With ListBox1
    .ColumnCount = 3
    .ColumnWidths = "80PT;190PT;50PT"
End With

With ListBox2
    .ColumnCount = 3
    .ColumnWidths = "80PT;190PT;50PT"

End With

f = Format(Now(), "mm")
If f = "10" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "01" Then
 FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "05" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "07" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "08" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "12" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "02" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "28" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "03" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "31" & "/" & Format(Now(), "MM/YYYY")
End If
f = Format(Now(), "mm")
If f = "04" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "30" & "/" & Format(Now(), "MM/YYYY")
End If
If f = "06" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "30" & "/" & Format(Now(), "MM/YYYY")
End If
If f = "09" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "30" & "/" & Format(Now(), "MM/YYYY")
End If
If f = "11" Then
FECHA_INICIAL = "01" & "/" & Format(Now(), "MM/YYYY")
FECHA_FINAL = "30" & "/" & Format(Now(), "MM/YYYY")
End If
End Sub
Attribute VB_Name = "SALIDAS_STOCK"
Attribute VB_Base = "0{35555CE6-6D06-4254-A7F7-6AA733388622}{91E1DD2D-49A8-4822-9045-142A03F476DF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click(): On Error Resume Next
Dim FILA, FINAL, I, FILA2, FINAL2, ID, FILA3, FINAL3, i2, FILA4, FINAL4, I4, FILA5, FINAL5, ID_VENTAS As Long
Dim PRECIO_COST, total_cost As Double
Dim DESCUENTO, CANTIDA_OLD As Integer
Dim MENSAJE, T, imprimir_ticket As String
FILA = 2
Do While Hoja4.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
If ListBox1.ListCount = Empty Then
    MsgBox "NO SE ENCONTRARON ITEMS PARA PROCESAR, INGRESE PRIMERO ALGUNOS ITEMS Y POSTERIOMENTE PODRA PROCESARLOS", vbCritical
    Exit Sub
Else
    MENSAJE = MsgBox("|fffd|ESTAS SEGURO DE INGRESAR LOS DATOS?", vbQuestion + vbYesNo, "INGRESO DE DATOS")
        If MENSAJE = vbYes Then
            'ESTE CODIGO DETERMINA LA INSERCION DE LOS DATOS QUE SE ENCUENTRAN EN EL LISTBOX Y SE INGRESARAN EN LA HOJA SALIDA
            For I = 0 To ListBox1.ListCount - 1
                 ' ESTE CODIGO SE ENCARGARA DE GENERAR EL NUMERO CONSECUTIVO DE ID
                  If Hoja4.Cells(2, 1) = Empty Then
                    ID = 0 + 1
                  Else
                    ID = Hoja4.Cells(FINAL, 1) + 1
                  End If
                            'ESTE CODIGO DETERMINARA EL VALOR DE EL PRECIO COSTO CALCULAR EL TOTAL DE COSTO E INGRESARLO A LA HOJA DE SALIDA
                            'EN ESTE CODIGO UTILIZAREMOS EL BUCLE EN LA HOJA NUMERO 2 QUE PERTENECE BD STOCK
                            FILA3 = 2
                                Do While Hoja2.Cells(FILA3, 1) <> Empty
                                    FILA3 = FILA3 + 1
                                Loop
                                FINAL3 = FILA3 - 1
                             For i2 = 2 To FINAL3
                               If ListBox1.List(I, 0) = Hoja2.Cells(i2, 2) Then
                                    PRECIO_COST = Hoja2.Cells(i2, 5)
                                    total_cost = Val(PRECIO_COST) * Val(ListBox1.List(I, 2))
                                    'ESTE CODIGO ME DESCONTARA LA CANTIDAD DE PIEZAS QUE SE VENDA EN EL STOCK
                                    CANTIDA_OLD = Hoja2.Cells(i2, 4)
                                    DESCUENTO = Val(CANTIDA_OLD) - Val(ListBox1.List(I, 2))
                                    Hoja2.Cells(i2, 4) = DESCUENTO
                                    
            Hoja4.Cells(FILA, 1) = Val(ID)
            Hoja4.Cells(FILA, 2) = SAL_OPERACION_STOCK.Value
            Hoja4.Cells(FILA, 3) = ListBox1.List(I, 0)
            Hoja4.Cells(FILA, 4) = ListBox1.List(I, 1)
            Hoja4.Cells(FILA, 5) = ListBox1.List(I, 2)
            Hoja4.Cells(FILA, 7) = ListBox1.List(I, 3)
            Hoja4.Cells(FILA, 9) = ListBox1.List(I, 4)
            Hoja4.Cells(FILA, 10) = SAL_NOMBRE_STOCK
            Hoja4.Cells(FILA, 11) = Format(SAL_FECHA_STOCK, "MM/DD/YYYY")
            Hoja4.Cells(FILA, 6) = PRECIO_COST
            Hoja4.Cells(FILA, 8) = total_cost
            
            
            FILA = FILA + 1
            'ESTA VARIABLE SE POSICIONA EN LA ULTIMA FILA OCUPADA Y NO AYUDARA EN ENCONTRAR EL VALOR DENTRO ELLA
            FINAL = FILA - 1
                End If
                Next i2
            Next I
            
            
            'NUMERO DE OPERACION CONSECUTIVO
            FILA2 = 2
            Do While Hoja4.Cells(FILA2, 2) <> Empty
                FILA2 = FILA2 + 1
            Loop
            FINAL2 = FILA2 - 1
            
            If Hoja4.Cells(2, 2) = Empty Then
                SAL_OPERACION_STOCK = 1
            Else
                SAL_OPERACION_STOCK = Hoja4.Cells(FINAL2, 2) + 1
            End If
            
            'INGRESAR EL RESUMEN DE LA OPERACION EN BASE DE DATOS VENTAS
            FILA5 = 2
            Do While Hoja9.Cells(FILA5, 1) <> Empty
                FILA5 = FILA5 + 1
            Loop
            FINAL5 = FILA5 - 1
            
            
            If Hoja9.Cells(2, 1) = Empty Then
                ID_VENTAS = 1
            Else
                ID_VENTAS = Hoja9.Cells(FINAL5, 1) + 1
            End If
            
            Hoja9.Cells(FILA5, 1) = Val(ID_VENTAS)
            Hoja9.Cells(FILA5, 2) = Format(SAL_FECHA_STOCK, "MM/DD/YYYY")
            Hoja9.Cells(FILA5, 3) = Val(SAL_OPERACION_STOCK - 1)
            Hoja9.Cells(FILA5, 4) = FormatNumber(SAL_TOTAL_STOCK, 2)
            Hoja9.Cells(FILA5, 5) = "ACTIVO"
            Hoja9.Cells(FILA5, 6) = "PENDIENTE"
            
            
            
            
            'CREAR TICKET
                imprimir_ticket = MsgBox("|fffd|Deseas imprimir el ticket?", vbQuestion + vbYesNo, "IMPRIMIR TICKET")
                If imprimir_ticket = vbYes Then
                    Hoja7.Range("A5:D100").Clear
                    FILA4 = Hoja7.Range("A" & Rows.Count).End(xlUp).Row + 1
                    For I4 = 0 To ListBox1.ListCount - 1
                        Hoja7.Cells(FILA4, 1) = ListBox1.List(I4, 2)
                        Hoja7.Cells(FILA4, 2) = ListBox1.List(I4, 1)
                        Hoja7.Cells(FILA4, 3) = ListBox1.List(I4, 3)
                        Hoja7.Cells(FILA4, 4) = ListBox1.List(I4, 4)
                        FILA4 = FILA4 + 1
                    Next I4
                        Hoja7.Cells(FILA4 + 4, 4) = FormatCurrency(SAL_TOTAL_STOCK, 2)
                        Hoja7.Cells(FILA4 + 4, 3) = "TOTAL:"
                  'imprimir ticket
                  Hoja7.Range("A1:D" & FILA4 + 4).PrintOut
      
                 End If
         
            ListBox1.Clear
            SAL_TOTAL_STOCK = Empty
            ThisWorkbook.Save
            MsgBox "DATOS INGRESADOS CON |fffd|XITO", vbInformation
                        
        Else
            MsgBox "OPERACION CANCELADA", vbExclamation
        End If
End If
End Sub
Private Sub CommandButton2_Click()
Unload Me
End Sub
Private Sub CommandButton3_Click()
Dim FILA, FINAL, I, i2 As Long
Dim stock_anterio, stock_actual As Integer


Dim TOTAL_VENTA, RESULTADO As Double
If SAL_CANTIDAD_STOCK = Empty Or SAL_CODIGO_STOCK = Empty Or SAL_PRECIO_VENTA_STOCK = Empty Or SAL_NOMBRE_STOCK = Empty Then
    MsgBox "ES NECESARIO COMPLETAR TODOS LOS CAMPOS Y/O AGREGAR UN NOMBRE", vbExclamation
    Exit Sub
Else

FILA = Hoja2.Range("a" & Rows.Count).End(xlUp).Row + 1
FINAL = FILA - 1

For i2 = 2 To FINAL
    If SAL_CODIGO_STOCK = Hoja2.Cells(i2, 2) Then
      stock_anterio = Hoja2.Cells(i2, 4)
      stock_actual = Val(stock_anterio) - Val(SAL_CANTIDAD_STOCK)
      If stock_actual < 0 Then
          MsgBox "NO HAY SUFICIENTES PIEZAS PARA REALIZAR LA VENTA", vbExclamation
          Exit Sub
      End If
    End If
Next i2

TOTAL_VENTA = Val(SAL_CANTIDAD_STOCK) * Val(SAL_PRECIO_VENTA_STOCK)
    With ListBox1
    .AddItem
    .List(.ListCount - 1, 0) = SAL_CODIGO_STOCK
    .List(.ListCount - 1, 1) = SAL_DESCRIPCION_STOCK
    .List(.ListCount - 1, 2) = SAL_CANTIDAD_STOCK
    .List(.ListCount - 1, 3) = SAL_PRECIO_VENTA_STOCK
    .List(.ListCount - 1, 4) = FormatNumber(TOTAL_VENTA, 2)
    End With
    SAL_CODIGO_STOCK = Empty
    SAL_DESCRIPCION_STOCK = Empty
    'SAL_PRECIO_COSTO_STOCK = Empty
    SAL_PRECIO_VENTA_STOCK = Empty
    SAL_CANTIDAD_STOCK = Empty
   
For I = 0 To ListBox1.ListCount - 1
    RESULTADO = RESULTADO + ListBox1.List(I, 4)
Next I
SAL_TOTAL_STOCK = FormatNumber(RESULTADO, 2)
End If
End Sub

Private Sub CommandButton4_Click(): On Error Resume Next
Dim ITEM As Long
Dim RESULTADO As Double
If ListBox1 = Empty Then
    MsgBox "OPERACI|fffd|N NO VALIDAS, NO HAY NINGUN ITEM SELECCIONADO", vbCritical
    Exit Sub
Else
ListBox1.RemoveItem (ListBox1.ListIndex)
RESULTADO = 0
For ITEM = 0 To ListBox1.ListCount - 1
    RESULTADO = RESULTADO + ListBox1.List(ITEM, 4)
Next ITEM
SAL_TOTAL_STOCK = FormatNumber(RESULTADO, 2)
End If
End Sub

Private Sub ListBox1_Click()

End Sub

Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean): On Error Resume Next
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'On Error Resume Next
For I = 2 To FINAL
    If ListBox2.List(ListBox2.ListIndex - 0, 0) = Hoja2.Cells(I, 2) Then
    SAL_CODIGO_STOCK = Hoja2.Cells(I, 2)
    SAL_DESCRIPCION_STOCK = Hoja2.Cells(I, 3)
    'SAL_PRECIO_COSTO_STOCK = Hoja2.Cells(I, 5)
    SAL_PRECIO_VENTA_STOCK = FormatNumber(Hoja2.Cells(I, 6), 2)
        SAL_CANTIDAD_STOCK.SetFocus
    End If
Next I
SAL_BUSQUEDA_PRODUCTO_STOCK = Empty

End Sub
Private Sub SAL_BUSQUEDA_PRODUCTO_STOCK_Change()
Dim FILA, FINAL, I As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'BUSQUEDA DE PRODUCTOS
ListBox2.Clear
For I = 2 To FINAL
If UCase(Hoja2.Cells(I, 3)) Like "*" & UCase(SAL_BUSQUEDA_PRODUCTO_STOCK) & "*" Then
    With ListBox2
        .AddItem
        .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2)
        .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3)
    End With
End If

Next I


End Sub

Private Sub SAL_BUSQUEDA_PRODUCTO_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub SAL_CANTIDAD_STOCK_Change()

End Sub

Private Sub SAL_CANTIDAD_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 48 And KeyAscii <= 57) Then
    KeyAscii = KeyAscii
Else
KeyAscii = 0
MsgBox "DEBES INGRESAR SOLO VALORES NUMERICOS", vbInformation
End If
End Sub

Private Sub SAL_DESCRIPCION_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub SAL_NOMBRE_STOCK_Change()

End Sub

Private Sub SAL_NOMBRE_STOCK_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If (KeyAscii >= 97 And KeyAscii <= 122) Or (KeyAscii = 225) Or (KeyAscii = 233) Or (KeyAscii = 237) Or (KeyAscii = 241) Or (KeyAscii = 250) Then
KeyAscii = VBA.Asc(VBA.UCase(VBA.Chr(KeyAscii)))
End If
End Sub

Private Sub SAL_PRECIO_VENTA_STOCK_AfterUpdate(): On Error Resume Next
SAL_PRECIO_VENTA_STOCK = FormatCurrency(SAL_PRECIO_VENTA_STOCK, 2)
End Sub

Private Sub SAL_PRECIO_VENTA_STOCK_Change()

End Sub

Private Sub UserForm_Initialize()
Dim FILA, FINAL, I, FILA2, FINAL2 As Long
FILA = 2
Do While Hoja2.Cells(FILA, 1) <> Empty
    FILA = FILA + 1
Loop
FINAL = FILA - 1
'NUMERO DE OPERACION CONSECUTIVO
FILA2 = 2
Do While Hoja4.Cells(FILA2, 1) <> Empty
    FILA2 = FILA2 + 1
Loop
FINAL2 = FILA2 - 1

If Hoja4.Cells(2, 2) = Empty Then
    SAL_OPERACION_STOCK = 1
Else
    SAL_OPERACION_STOCK = Hoja4.Cells(FINAL2, 2) + 1
End If

SAL_FECHA_STOCK = Format(Now(), "DD/MM/YYYY")
With ListBox1
    .ColumnCount = 5
    .ColumnWidths = "70PT;150PT;70PT;80PT;80PT"
End With

With ListBox2
    .ColumnCount = 2
    .ColumnWidths = "60PT;80PT"
End With

For I = 2 To FINAL
    With ListBox2
        .AddItem
        .List(.ListCount - 1, 0) = Hoja2.Cells(I, 2)
        .List(.ListCount - 1, 1) = Hoja2.Cells(I, 3)
    End With
Next I

SAL_NOMBRE_STOCK.SetFocus

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
