Attribute VB_Name = "BienvenidaL"
Option Private Module
Public Hora As Date

Sub auto_open()
Hoja1.Select
Range("a1").Select
UserForm3.Show
End Sub

Sub CountDown()
Application.ScreenUpdating = False
Application.EnableEvents = False
Hora = Now + TimeValue("00:00:01")
Application.OnTime Hora, "CountDown"
UserForm3.Tiempo = UserForm3.Tiempo - 1
If UserForm3.Tiempo = 0 Then
UserForm3.Label1.Visible = False
UserForm3.Tiempo.Visible = False
UserForm3.btcerrar.Visible = True
StopClock
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub

Sub StopClock(): On Error Resume Next
Application.OnTime Hora, "CountDown", , False
End Sub

Attribute VB_Name = "Form_barra"
Attribute VB_Base = "0{FCC18AEB-6F45-49E6-B09D-5EA0EECD2366}{87AA121E-9BBF-4A3D-9DB9-E77E63977F2B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Activate()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False
ActiveSheet.DisplayPageBreaks = False

    Form_barra.Barra.Width = 0
    Form_barra.Progreso.Caption = ""
    Run "Ruta_CFDI"
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.CutCopyMode = False
End Sub
Attribute VB_Name = "Form_barra_a"
Attribute VB_Base = "0{265161A6-825D-4450-AFD3-366B438BFCFD}{56BEDA4C-B9BD-4FE2-A1E3-760D201412A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Activate()

Form_barra_a.Barra_a.Width = 0
    Form_barra_a.Progreso_a.Caption = "Estamos comenzando..."
    
'Cuando se lanza el Userform se llama a la macro Mi_Codigo
Call generar_factura

End Sub
Attribute VB_Name = "GoogleAPI"

Option Private Module
'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
'xxxxxxxxxxxxx funzioni per UDF Google Chart APIxxxxxxxxxxxxx
'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
'https://developers.google.com/chart/infographics/docs/qr_codes

Function URL_QRCode_SERIES( _
    ByVal PictureName As String, _
    ByVal QR_Value As String, _
    Optional ByVal PictureSize As Long = 100, _
    Optional ByVal DisplayText As String = "", _
    Optional ByVal Updateable As Boolean = True) As Variant

Dim oPic As Shape, oRng As Excel.Range
Dim vLeft As Variant, vTop As Variant
Dim sURL As String

Const sRootURL As String = "https://chart.googleapis.com/chart?"
Const sSizeParameter As String = "chs="
Const sTypeChart As String = "cht=qr"
Const sDataParameter As String = "chl="
Const sJoinCHR As String = "&"

If Updateable = False Then
    URL_QRCode_SERIES = "outdated"
    Exit Function
End If

Set oRng = Application.Caller.Offset(, 1)
On Error Resume Next
Set oPic = oRng.Parent.Shapes(PictureName)
If Err Then
    Err.Clear
    vLeft = oRng.Left + 4
    vTop = oRng.Top
Else
    vLeft = oPic.Left
    vTop = oPic.Top
    PictureSize = Int(oPic.Width)
    oPic.Delete
End If
On Error GoTo 0

If Len(QR_Value) = 0 Then
    URL_QRCode_SERIES = CVErr(xlErrValue)
    Exit Function
End If

sURL = sRootURL & _
       sSizeParameter & PictureSize & "x" & PictureSize & sJoinCHR & _
       sTypeChart & sJoinCHR & _
       sDataParameter & UTF8_URL_Encode(VBA.Replace(QR_Value, "&", "%26"))

Set oPic = oRng.Parent.Shapes.AddPicture(sURL, True, True, vLeft, vTop, PictureSize, PictureSize)
oPic.Name = PictureName
URL_QRCode_SERIES = DisplayText
End Function
Function UTF8_URL_Encode(ByVal sStr As String)
    'http://www.nonhostile.com/howto-convert-byte-array-utf8-string-vb6.asp
    Dim i As Long
    Dim a As Long
    Dim res As String
    Dim code As String
    
    res = ""
    For i = 1 To Len(sStr)
        a = AscW(Mid(sStr, i, 1))
        If a < 128 Then
            code = Mid(sStr, i, 1)
        ElseIf ((a > 127) And (a < 2048)) Then
            code = URLEncodeByte(((a \ 64) Or 192))
            code = code & URLEncodeByte(((a And 63) Or 128))
        Else
            code = URLEncodeByte(((a \ 144) Or 234))
            code = code & URLEncodeByte((((a \ 64) And 63) Or 128))
            code = code & URLEncodeByte(((a And 63) Or 128))
        End If
        res = res & code
    Next i
    UTF8_URL_Encode = res
End Function

Private Function URLEncodeByte(val As Integer) As String
    Dim res As String
    res = "%" & Right("0" & Hex(val), 2)
    URLEncodeByte = res
End Function

Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "M|fffd|dulo1"
Option Private Module

Dim filas
Dim pctCompl
Dim i

Private Sub donar(control As IRibbonControl)
donarefectivo.Show
End Sub


Private Sub borrar(control As IRibbonControl)
UserForm1.Show
End Sub

Private Sub visitar(control As IRibbonControl)
Shell "explorer " & "https://lerh13.blogspot.com/"
End Sub

Private Sub Paypal(control As IRibbonControl)
Shell "explorer " & "https://www.paypal.me/ElblogdeLuisReyes"
End Sub

Private Sub MercadoPago(control As IRibbonControl)
ActiveWorkbook.FollowHyperlink "https://www.mercadopago.com.mx/checkout/v1/redirect?pref_id=462840235-0b25c144-a6b1-42d8-8392-7aa813148040"
End Sub

Private Sub BarraXML(control As IRibbonControl)
Form_barra.Show
End Sub

Private Sub ModificaNumeros(control As IRibbonControl)
Numeros.Show
End Sub
Private Sub SBC(control As IRibbonControl)

Shell "explorer " & "https://lerh13.blogspot.com/2019/01/calculadora-salario-base-de-cotizacion.html"
End Sub

Private Sub NSS(control As IRibbonControl)
Shell "explorer " & "https://lerh13.blogspot.com/p/calcular-el-digito-verificador-del-nss.html"
End Sub


Sub PDF_factura(control As IRibbonControl)
Form_barra_a.Show
End Sub

Private Sub Ruta_CFDI()
'macro para en listar los XML que va a leer
'Adapatado por Luis Reyes
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
ActiveSheet.DisplayPageBreaks = False
Hoja1.Cells.Clear
Run "limpiar_rangos"

Dim fDialog As FileDialog, result As Integer
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
fDialog.AllowMultiSelect = True
fDialog.Title = "Select a file"
'fDialog.InitialFileName = "C:\"
'Optional: Add filters
fDialog.Filters.Clear
fDialog.Filters.Add "XML files", "*.xml"
'fDialog.Filters.Add "All files", "*.*"

'Show the dialog. -1 means success!
If fDialog.Show = -1 Then
For archivos = 1 To fDialog.SelectedItems.Count
   Hoja1.Cells(archivos, 1).Value = fDialog.SelectedItems(archivos)
Next archivos
Else

Form_barra.Hide
End If

Run "Lectura_CFDI" 'ejecuta la macro que lee los XML
End Sub

Private Sub Lectura_CFDI()
'Adapatado por Luis Reyes
With Application
      .ScreenUpdating = False
      .Calculation = xlCalculationManual
      .EnableEvents = False
      .DisplayStatusBar = False
Hoja1.Select
Dim Concepto As String
Dim pctCompl As Single
Set DocumentoXML = New DOMDocument
Set R = Hoja1.Range("A1").CurrentRegion 'determina apartir de donde comienza a contar
filas = R.Rows.Count

For i = 1 To filas  'n|fffd|mero de documentos que va a leer

DocumentoXML.Load ("" & Cells(i, 1) & "")

Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante")
On Error Resume Next

For Each Nodo In ListaNodo
LugarExpedicion = Nodo.Attributes.getNamedItem("LugarExpedicion").Text
MetodoPago = Nodo.Attributes.getNamedItem("MetodoPago").Text
TipoDeComprobante = Nodo.Attributes.getNamedItem("TipoDeComprobante").Text
Total = Nodo.Attributes.getNamedItem("Total").Text
TipoCambio = Nodo.Attributes.getNamedItem("TipoCambio").Text
Moneda = Nodo.Attributes.getNamedItem("Moneda").Text
Descuento = Nodo.Attributes.getNamedItem("Descuento").Text
Subtotal = Nodo.Attributes.getNamedItem("SubTotal").Text
CondicionesDePago = Nodo.Attributes.getNamedItem("CondicionesDePago").Text
Certificado = Nodo.Attributes.getNamedItem("Certificado").Text
NoCertificado = "'" & Nodo.Attributes.getNamedItem("NoCertificado").Text
FormaPago = Nodo.Attributes.getNamedItem("FormaPago").Text
Sello = Nodo.Attributes.getNamedItem("Sello").Text
Fecha = Nodo.Attributes.getNamedItem("Fecha").Text
Folio = Nodo.Attributes.getNamedItem("Folio").Text
Serie = Nodo.Attributes.getNamedItem("Serie").Text
Version = Nodo.Attributes.getNamedItem("Version").Text

Next Nodo

''''''''''''''''''''''''''''''''''''''''''''''''Nombre del emisor'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Emisor")
For Each Nodo In ListaNodo
RegimenFiscal = Nodo.Attributes.getNamedItem("RegimenFiscal").Text
NombreEmisor = Nodo.Attributes.getNamedItem("Nombre").Text
RfcEmisor = Nodo.Attributes.getNamedItem("Rfc").Text

Next Nodo
''''''''''''''''''''''''''''''''''''''''''''''''Nombre del Receptor'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Receptor")
For Each Nodo In ListaNodo
NombreReceptor = Nodo.Attributes.getNamedItem("Nombre").Text
RfcReceptor = Nodo.Attributes.getNamedItem("Rfc").Text
UsoCFDI = Nodo.Attributes.getNamedItem("UsoCFDI").Text
Next Nodo

''''''''''''''''''''''''''''''''''''''''''''''''Conceptos'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Conceptos/cfdi:Concepto")
For Each Nodo In ListaNodo
    
DescuentoN = DescuentoN & Nodo.Attributes.getNamedItem("Descuento").Text & "|"
ValorUnitario = ValorUnitario & Nodo.Attributes.getNamedItem("ValorUnitario").Text & "|"
Unidad = Unidad & Nodo.Attributes.getNamedItem("Unidad").Text & "|"
NoIdentificacion = NoIdentificacion & Nodo.Attributes.getNamedItem("NoIdentificacion").Text & "|"
Importe = Importe & Nodo.Attributes.getNamedItem("Importe").Text & "|"
Concepto = Concepto & Nodo.Attributes.getNamedItem("Descripcion").Text & "|"
ClaveUnidad = ClaveUnidad & Nodo.Attributes.getNamedItem("ClaveUnidad").Text & "|"
ClaveProdServ = ClaveProdServ & Nodo.Attributes.getNamedItem("ClaveProdServ").Text & "|"
Cantidad = Cantidad & Nodo.Attributes.getNamedItem("Cantidad").Text & "|"
    
Next Nodo
''''''''''''''''''''''''''''''''''''''''''''''''Impuestos'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Conceptos/cfdi:Concepto/cfdi:Impuestos/cfdi:Traslados/cfdi:Traslado")
For Each Nodo In ListaNodo
    
ImporteI = ImporteI & Nodo.Attributes.getNamedItem("Importe").Text & "|"
TipoFactor = TipoFactor & Nodo.Attributes.getNamedItem("TipoFactor").Text & "|"
TasaOCuota = TasaOCuota & Nodo.Attributes.getNamedItem("TasaOCuota").Text & "|"
Impuesto = Impuesto & Nodo.Attributes.getNamedItem("Impuesto").Text & "|"
Base = Base & Nodo.Attributes.getNamedItem("Base").Text & "|"


 Next Nodo
''''''''''''''''''''''''''''''''''''''''''''''''Retenciones'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Conceptos/cfdi:Concepto/cfdi:Impuestos/cfdi:Retenciones/cfdi:Retencion")
For Each Nodo In ListaNodo
B = 1
ImporteR = ImporteR & Nodo.Attributes.getNamedItem("Importe").Text & "|"
TipoFactorR = TipoFactorR & Nodo.Attributes.getNamedItem("TipoFactor").Text & "-" & B & "T" & "|"
TasaOCuotaR = TasaOCuotaR & Nodo.Attributes.getNamedItem("TasaOCuota").Text & "|"
ImpuestoR = ImpuestoR & Nodo.Attributes.getNamedItem("Impuesto").Text & "|"
BaseR = BaseR & Nodo.Attributes.getNamedItem("Base").Text & "|"
B = B + 1
Next Nodo

''''''''''''''''''''''''''''''''''''''''''''''''total de Impuestos'''''''''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Impuestos/cfdi:Retenciones/cfdi:Retencion")
For Each Nodo In ListaNodo

ImporteTR = ImporteTR & Nodo.Attributes.getNamedItem("Importe").Text & "|"
ImpuestoTR = ImpuestoTR & Nodo.Attributes.getNamedItem("Impuesto").Text & "|"
Next Nodo

Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Impuestos/cfdi:Traslados/cfdi:Traslado")
For Each Nodo In ListaNodo
ImporteTI = ImporteTI & Nodo.Attributes.getNamedItem("Importe").Text & "|"
TasaOCuotaTI = TasaOCuotaTI & Nodo.Attributes.getNamedItem("TasaOCuota").Text & "|"
TipoFactorTI = TipoFactorTI & Nodo.Attributes.getNamedItem("TipoFactor").Text & "|"
ImpuestoTI = ImpuestoTI & Nodo.Attributes.getNamedItem("Impuesto").Text & "|"
Next Nodo


'''''''''''''''''''''''''''OTROS IMPUESTOS''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("cfdi:Comprobante/cfdi:Complemento/implocal:ImpuestosLocales/implocal:TrasladosLocales")
For Each Nodo In ListaNodo
ISH = Nodo.Attributes.getNamedItem("Importe").Text
Next Nodo

''''''''''''''''''''''''''''''''''''UUID''''''''''''''''''''''''''''''''''''''''''''
Set ListaNodo = DocumentoXML.SelectNodes("/cfdi:Comprobante/cfdi:Complemento/tfd:TimbreFiscalDigital")
For Each Nodo In ListaNodo
SelloSAT = Nodo.Attributes.getNamedItem("SelloSAT").Text
FechaTimbrado = Nodo.Attributes.getNamedItem("FechaTimbrado").Text
UUID = Nodo.Attributes.getNamedItem("UUID").Text
RfcProvCertif = Nodo.Attributes.getNamedItem("RfcProvCertif").Text
NoCertificadoSAT = "'" & Nodo.Attributes.getNamedItem("NoCertificadoSAT").Text
SelloCFD = Nodo.Attributes.getNamedItem("SelloCFD").Text

Next Nodo

Hoja1.Cells(i, 1) = LugarExpedicion
Hoja1.Cells(i, 2) = MetodoPago
Hoja1.Cells(i, 3) = TipoDeComprobante
Hoja1.Cells(i, 4) = Total
Hoja1.Cells(i, 5) = TipoCambio
Hoja1.Cells(i, 6) = Moneda
Hoja1.Cells(i, 7) = Descuento
Hoja1.Cells(i, 8) = Subtotal
Hoja1.Cells(i, 9) = CondicionesDePago
Hoja1.Cells(i, 10) = Certificado
Hoja1.Cells(i, 11) = NoCertificado
Hoja1.Cells(i, 12) = FormaPago
Hoja1.Cells(i, 13) = Sello
Hoja1.Cells(i, 14) = Fecha
Hoja1.Cells(i, 15) = Folio
Hoja1.Cells(i, 16) = Serie
Hoja1.Cells(i, 17) = Version
Hoja1.Cells(i, 18) = RegimenFiscal
Hoja1.Cells(i, 19) = NombreEmisor
Hoja1.Cells(i, 20) = RfcEmisor
Hoja1.Cells(i, 21) = NombreReceptor
Hoja1.Cells(i, 22) = RfcReceptor
Hoja1.Cells(i, 23) = UsoCFDI
Hoja1.Cells(i, 24) = DescuentoN
Hoja1.Cells(i, 25) = ValorUnitario
Hoja1.Cells(i, 26) = Unidad
Hoja1.Cells(i, 27) = NoIdentificacion
Hoja1.Cells(i, 28) = Importe
Hoja1.Cells(i, 29) = Concepto
Hoja1.Cells(i, 30) = ClaveUnidad
Hoja1.Cells(i, 31) = ClaveProdServ
Hoja1.Cells(i, 32) = Cantidad
Hoja1.Cells(i, 33) = ImporteI
Hoja1.Cells(i, 34) = TipoFactor
Hoja1.Cells(i, 35) = TasaOCuota
Hoja1.Cells(i, 36) = Impuesto
Hoja1.Cells(i, 37) = Base
Hoja1.Cells(i, 38) = ImporteR
Hoja1.Cells(i, 39) = TipoFactorR
Hoja1.Cells(i, 40) = TasaOCuotaR
Hoja1.Cells(i, 41) = ImpuestoR
Hoja1.Cells(i, 42) = BaseR
Hoja1.Cells(i, 43) = ImporteTR
Hoja1.Cells(i, 44) = ImpuestoTR
Hoja1.Cells(i, 45) = ImporteTI
Hoja1.Cells(i, 46) = TasaOCuotaTI
Hoja1.Cells(i, 47) = TipoFactorTI
Hoja1.Cells(i, 48) = ImpuestoTI
Hoja1.Cells(i, 49) = SelloSAT
Hoja1.Cells(i, 50) = FechaTimbrado
Hoja1.Cells(i, 51) = UUID
Hoja1.Cells(i, 52) = RfcProvCertif
Hoja1.Cells(i, 53) = NoCertificadoSAT
Hoja1.Cells(i, 54) = SelloCFD



 LugarExpedicion = Empty
 MetodoPago = Empty
 TipoDeComprobante = Empty
 Total = Empty
 TipoCambio = Empty
 Moneda = Empty
 Descuento = Empty
 Subtotal = Empty
 CondicionesDePago = Empty
 Certificado = Empty
 NoCertificado = Empty
 FormaPago = Empty
 Sello = Empty
 Fecha = Empty
 Folio = Empty
 Serie = Empty
 Version = Empty
 RegimenFiscal = Empty
 NombreEmisor = Empty
 RfcEmisor = Empty
 NombreReceptor = Empty
 RfcReceptor = Empty
 UsoCFDI = Empty
 DescuentoN = Empty
 ValorUnitario = Empty
 Unidad = Empty
 NoIdentificacion = Empty
 Importe = Empty
 Concepto = Empty
 ClaveUnidad = Empty
 ClaveProdServ = Empty
 Cantidad = Empty
 ImporteI = Empty
 TipoFactor = Empty
 TasaOCuota = Empty
 Impuesto = Empty
 Base = Empty
 ImporteR = Empty
 TipoFactorR = Empty
 TasaOCuotaR = Empty
 ImpuestoR = Empty
 BaseR = Empty
 ImporteTR = Empty
 ImpuestoTR = Empty
 ImpuestoTR = Empty
 ImporteTI = Empty
 TasaOCuotaTI = Empty
 TipoFactorTI = Empty
 ImpuestoTI = Empty
 SelloSAT = Empty
 FechaTimbrado = Empty
 UUID = Empty
 RfcProvCertif = Empty
 NoCertificadoSAT = Empty
 SelloCFD = Empty
 
 
 pctCompl = Round((i / (filas + 1)) * 100, 0)
 
    Call Aumenta_progreso(pctCompl)
Next

Hoja1.Range("A1").EntireRow.Insert

Hoja1.Cells(1, 1) = " Lugar Expedicion"
Hoja1.Cells(1, 2) = " Metodo Pago"
Hoja1.Cells(1, 3) = " Tipo De Comprobante"
Hoja1.Cells(1, 4) = " Total"
Hoja1.Cells(1, 5) = " Tipo Cambio"
Hoja1.Cells(1, 6) = " Moneda"
Hoja1.Cells(1, 7) = " Descuento"
Hoja1.Cells(1, 8) = " Subtotal"
Hoja1.Cells(1, 9) = " Condiciones De Pago"
Hoja1.Cells(1, 10) = " Certificado"
Hoja1.Cells(1, 11) = " NoCertificado"
Hoja1.Cells(1, 12) = " FormaPago"
Hoja1.Cells(1, 13) = " Sello"
Hoja1.Cells(1, 14) = " Fecha"
Hoja1.Cells(1, 15) = " Folio"
Hoja1.Cells(1, 16) = " Serie"
Hoja1.Cells(1, 17) = " Version"
Hoja1.Cells(1, 18) = " Regimen Fiscal"
Hoja1.Cells(1, 19) = " Nombre Emisor"
Hoja1.Cells(1, 20) = " Rfc Emisor"
Hoja1.Cells(1, 21) = " Nombre Receptor"
Hoja1.Cells(1, 22) = " Rfc Receptor"
Hoja1.Cells(1, 23) = " Uso CFDI"
Hoja1.Cells(1, 24) = " DescuentoN"
Hoja1.Cells(1, 25) = " ValorUnitario"
Hoja1.Cells(1, 26) = " Unidad"
Hoja1.Cells(1, 27) = " NoIdentificacion"
Hoja1.Cells(1, 28) = " Importe"
Hoja1.Cells(1, 29) = " Concepto"
Hoja1.Cells(1, 30) = " ClaveUnidad"
Hoja1.Cells(1, 31) = " ClaveProdServ"
Hoja1.Cells(1, 32) = " Cantidad"
Hoja1.Cells(1, 33) = " ImporteI"
Hoja1.Cells(1, 34) = " TipoFactor"
Hoja1.Cells(1, 35) = " TasaOCuota"
Hoja1.Cells(1, 36) = " Impuesto"
Hoja1.Cells(1, 37) = " Base"
Hoja1.Cells(1, 38) = " ImporteR"
Hoja1.Cells(1, 39) = " TipoFactorR"
Hoja1.Cells(1, 40) = " TasaOCuotaR"
Hoja1.Cells(1, 41) = " ImpuestoR"
Hoja1.Cells(1, 42) = " BaseR"
Hoja1.Cells(1, 43) = " ImporteTR"
Hoja1.Cells(1, 44) = " ImpuestoTR"
Hoja1.Cells(1, 45) = " ImporteTI"
Hoja1.Cells(1, 46) = " TasaOCuotaTI"
Hoja1.Cells(1, 47) = " TipoFactorTI"
Hoja1.Cells(1, 48) = " ImpuestoTI"
Hoja1.Cells(1, 49) = " SelloSAT"
Hoja1.Cells(1, 50) = " FechaTimbrado"
Hoja1.Cells(1, 51) = " UUID"
Hoja1.Cells(1, 52) = " RfcProvCertif"
Hoja1.Cells(1, 53) = " NoCertificadoSAT"
Hoja1.Cells(1, 54) = " SelloCFD"

Hoja1.Cells.ClearFormats

EF = Application.WorksheetFunction.CountA(Hoja1.Columns(13)) + 20
Hoja1.Range("M1").Select

    For eliminar = 1 To EF
        If ActiveCell = "" Then
            ActiveCell.EntireRow.Delete
        Else
            ActiveCell.Offset(1, 0).Select
        End If
    Next eliminar

Form_barra.Hide


MsgBox "Se importaron " & Application.WorksheetFunction.CountA(Hoja1.Columns(13)) - 1 & " XML", , "Luis Reyes"

MsgBox "Importaci|fffd|n Completa", , "Luis Reyes"


      .Calculation = xlCalculationAutomatic
      .EnableEvents = True
      .DisplayStatusBar = True
      
   End With
End Sub



Private Sub Aumenta_progreso(pctCompl As Single)
'Actualizo el UserForm
X = (415 / (filas + 6)) * i
'MsgBox filas
Form_barra.Progreso.Caption = pctCompl & "% Completado"
Form_barra.Barra.Width = X
'me permite actualizar el Userform y que se refleje
DoEvents

End Sub

Attribute VB_Name = "M|fffd|dulo2"
Option Private Module

Dim X As Integer
Dim pctCompla As Single
Dim t As Integer
Dim fac As Integer

Sub generar_factura()
Dim TC As String
Dim lineas As Integer
'Dim pctCompla As Single

Application.ScreenUpdating = False
Application.EnableEvents = False
ActiveSheet.DisplayPageBreaks = False

X = Application.WorksheetFunction.CountA(Hoja1.Columns(13))
t = 1

For fac = 2 To X

With Hoja2

.Range("A19:A99").EntireRow.Hidden = False

TC = Hoja1.Cells(fac, 3)
If TC = "I" Then
TC = "Ingreso"
ElseIf TC = "E" Then
TC = "Egreso"
ElseIf TC = "P" Then
TC = "Pago"
ElseIf TC = "N" Then
TC = "N|fffd|mina"
End If

.Range("J2").Value = TC ' Tipo de Documento
.Range("D2").Value = Hoja1.Cells(fac, 19) ' Nombre del Emisor
.Range("D3").Value = Hoja1.Cells(fac, 20) ' RFC del Emisor
.Range("A11").Value = Hoja1.Cells(fac, 21) ' Nombre del Receptor
.Range("A12").Value = Hoja1.Cells(fac, 22) ' RFC del Receptor
.Range("D5").Value = Hoja1.Cells(fac, 1) ' Lugar de expedici|fffd|n
.Range("R2").Value = Hoja1.Cells(fac, 18) ' Regimen Fiscal
.Range("J4").Value = Hoja1.Cells(fac, 16) & Hoja1.Cells(fac, 15) ' Serie y Folio
.Range("J6").Value = Hoja1.Cells(fac, 14) ' Fecha de Emision
.Range("J8").Value = Hoja1.Cells(fac, 50) ' Fecha de timbrado
.Range("B13").Value = Hoja1.Cells(fac, 23) ' Uso de CFDI
.Range("G11").Value = Hoja1.Cells(fac, 51) ' Folio Fiscal
.Range("G13").Value = "'" & Hoja1.Cells(fac, 11) ' Certificado Digital
.Range("G15").Value = "'" & Hoja1.Cells(fac, 53) ' Certificado SAT
.Range("H101").Value = Hoja1.Cells(fac, 12) ' Forma de pago
.Range("H102").Value = Hoja1.Cells(fac, 2)  ' M|fffd|todo de pago
'Hoja2.Range("H103").Value = Hoja1.Cells(fac, 2)  ' Cuenta
.Range("H104").Value = Hoja1.Cells(fac, 6)  ' Moneda
.Range("H105").Value = Hoja1.Cells(fac, 5)  ' Tipo de Cambio
.Range("L101").Value = Hoja1.Cells(fac, 8)  ' Subtotal
.Range("L102").Value = Hoja1.Cells(fac, 7)  ' Descuento
.Range("L107").Value = Hoja1.Cells(fac, 4)  ' Total
.Range("H106").Value = Hoja1.Cells(fac, 9)  ' condiciones de pago
.Range("A113").Value = Hoja1.Cells(fac, 54)  ' Sello digital CFD
.Range("A116").Value = Hoja1.Cells(fac, 49)  ' Sello digital SAT
.Range("H107").Value = Hoja1.Cells(fac, 52)  ' Proveedor de certificaci|fffd|n
.Range("V2").Value = Hoja1.Cells(fac, 52)  ' Proveedor de certificaci|fffd|n

End With

Hoja1.Select
'----------------------------------- No Identificacion-------------------------------------
Hoja1.Cells(fac, 27).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("A19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Unidad -------------------------------------
Hoja1.Cells(fac, 26).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("B19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear
'----------------------------------- Unidad -------------------------------------

Hoja1.Cells(fac, 30).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("C19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Descripci|fffd|n -------------------------------------

Hoja1.Cells(fac, 29).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("D19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Codigo SAT -------------------------------------

Hoja1.Cells(fac, 31).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("H19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Valor Unitario -------------------------------------

Hoja1.Cells(fac, 25).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("I19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Cantidad -------------------------------------

Hoja1.Cells(fac, 32).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("J19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear
'----------------------------------- Descuento -------------------------------------
Hoja1.Cells(fac, 24).Copy Hoja1.Cells(fac, 55)
Run "repetidos"

Hoja2.Range("K19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear
'----------------------------------- Importe Producto -------------------------------------
Hoja1.Cells(fac, 28).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("L19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'////////////////////////////////////////////////////////////////////////////////////////////////////////////

'----------------------------------- tipo de factor -------------------------------------
Hoja1.Cells(fac, 34).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AC19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- tasa o cuotas -------------------------------------
Hoja1.Cells(fac, 35).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AD19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Impuesto -------------------------------------
Hoja1.Cells(fac, 36).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AE19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Base -------------------------------------
Hoja1.Cells(fac, 37).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AF19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear


'////////////////////////////////////////RETENCIONES////////////////////////////////////////////////////////////////////

'----------------------------------- Importe -------------------------------------
Hoja1.Cells(fac, 38).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AL19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear


'----------------------------------- tipo de factor -------------------------------------
Hoja1.Cells(fac, 39).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AH19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- tasa o cuotas -------------------------------------
Hoja1.Cells(fac, 40).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AI19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Impuesto -------------------------------------
Hoja1.Cells(fac, 41).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AJ19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Base -------------------------------------
Hoja1.Cells(fac, 42).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("AK19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'////////////////////////////////////////TOTALES////////////////////////////////////////////////////////////////////

'----------------------------------- Importe -------------------------------------
Hoja1.Cells(fac, 45).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BM19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- tipo de factor -------------------------------------
Hoja1.Cells(fac, 47).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BI19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- tasa o cuotas -------------------------------------
Hoja1.Cells(fac, 46).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BJ19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'----------------------------------- Impuesto -------------------------------------
Hoja1.Cells(fac, 48).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BK19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear


'////////////////////////////////////////TOTALES IMPUESTOS////////////////////////////////////////////////////////////////////

'----------------------------------- Importe -------------------------------------
Hoja1.Cells(fac, 43).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BQ19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear
'----------------------------------- tasa o cuotas -------------------------------------
Hoja1.Cells(fac, 44).Copy Hoja1.Cells(fac, 55)
Run "repetidos"
Hoja2.Range("BP19").PasteSpecial Paste:=xlPasteValues, Transpose:=True
Hoja1.Range("BD" & fac & ":DA" & fac).Clear

'--------------------------------------CONCATENAR-------------------------------
NF = 19
For i = 1 To 81
Calculate
Hoja2.Range("D" & NF).Value = Hoja2.Range("D" & NF).Value & Chr(10) & Hoja2.Range("AB" & NF).Value & Chr(10) & Hoja2.Range("AM" & NF).Value & Chr(10) & Hoja2.Range("AT" & NF).Value
NF = NF + 1
Next i
Hoja2.Range("A119").Value = "||1.1|" & Hoja2.Range("G11") & "|" & Hoja2.Range("J8") & "|" & Hoja2.Range("H107") & "|" & Hoja2.Range(" A113") & "|" & Hoja2.Range("G15") & "||"

Run "oculta_celdas"
Run "CrearPDF"
Run "limpiar_rangos"


pctCompla = Round((t / (X - 1)) * 100, 0)
 Call Aumenta_progresoa(pctCompla)
t = t + 1

Next fac

MsgBox "fin"
Hoja2.Select

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
Application.CutCopyMode = False

End Sub

Sub repetidos()

'Hoja1.Cells(fac, 55).Select
Run "SepararPalabras"
lineas = Application.WorksheetFunction.CountA(Hoja1.Range("BD" & fac & ":DA" & fac))
Hoja1.Range(Cells(fac, 56), Cells(fac, 56 + lineas)).Copy

End Sub

Sub limpiar_repetidos()
Hoja1.Range("BD" & fac & ":DA" & fac).Clear
End Sub

Sub Aumenta_progresoa(pctCompla As Single)
Ancho = (415 / (X - 1)) * t
'Actualizo el UserForm
Form_barra_a.Progreso_a.Caption = pctCompla & "% Completado"
Form_barra_a.Barra_a.Width = Ancho
'me permite actualizar el Userform y que se refleje
DoEvents

End Sub

Sub SepararPalabras()
Dim celda As Range       'celda que contiene el texto
Dim P As Integer
Dim nu As Integer         'n|fffd|mero de palabras encontradas
Dim palabras() As String 'arreglo que almacenar|fffd| las palabras separadas
Dim separador As String  'separador de cada palabra
Dim texto As String      'almacena el texto a separar

    'definir el separador de palabras
    separador = "|" 'espacio en blanco
    
    'Ciclo para recorrer los renglones
    'For Each celda In Hoja1.Cells(fac, 55).Value
    
    'MsgBox Hoja1.Cells(fac, 55)
        texto = Hoja1.Cells(fac, 55).Value
        
        'Separaci|fffd|n del texto en palabras:
        palabras = Split(texto, separador)
        
        'La funci|fffd|n UBound devuelve |fffd|ndice final/mayor del arreglo
        'El |fffd|ndice en el arreglo se inicia con cero
        nu = UBound(palabras)
        
        'Ciclo para colocar cada palabra en una columna diferente
        For P = 0 To nu
            Hoja1.Cells(fac, 55).Offset(0, P + 1) = "'" & palabras(P)
        Next P
 
    'Next celda
End Sub

Sub oculta_celdas()
Dim Oc As Byte
Dim Ocultar As Byte
Oc = 28
With Hoja2
For Ocultar = 1 To 72

If .Range("M" & Oc) = "ocultar" Then
.Range("M" & Oc).EntireRow.Hidden = True
End If
Oc = Oc + 1

Next Ocultar
End With
End Sub



Sub CrearPDF()
Dim Ruta As String, Nombre As String, NombreRemision As String

Ruta = ThisWorkbook.Path
With Hoja2
Nombre = Ruta & "\" & UCase(.Range("A12")) & "_" & UCase(.Range("G11")) & ".pdf" 'Nombre de hoja
    .Range("A1:L121").ExportAsFixedFormat Type:=xlTypePDF, Filename:=Nombre, _
    Quality:=xlQualityMinimum, IncludeDocProperties:=True ', IgnorePrintAreas:=False, OpenAfterPublish:=False

End With
End Sub

Sub limpiar_rangos()
Hoja2.Range("A19:L99, AC19:AF99, AH19:AL99, BI19:BM99, BP19:BQ99").ClearContents
Hoja2.Range("D2:I2,D3:I3,J2:L2,J4:L4,J6:L6,J8:L8,D5:I5,R2,G11:L11,A11:D11,A12:D12,B13:D13,G13:L13,G15:L15,H101,H102,H103,H104,H105,H106,H107,L101,L102,L107,A113:L114,A116:L117,A119:L120" _
        ).ClearContents

End Sub

Attribute VB_Name = "M|fffd|dulo3"
Option Private Module
Sub InsertarLOGO(control As IRibbonControl) '
' Borra un LOGO existente y lo sustituye por otro seleccionado por el usuario
    Run "BorraLOGO"
    On Error Resume Next
    Hoja2.Range("A1:C8").Select
    Application.Dialogs(xlDialogInsertPicture).Show
    Hoja2.Range("A1:C8").Placement = xlFreeFloating
    Hoja2.Range("A1:C8").ShapeRange.Height = 104.8818897638
    Hoja2.Range("A1:C8").ShapeRange.Height = 115.3700787402
    
End Sub

Sub EliminarLogo(control As IRibbonControl)
Run "BorraLOGO"
End Sub

Sub BorraLOGO()
' Busca imagenes de LOGO dentro de un rango de celdas y las elimina
    Dim img As Picture
    On Error Resume Next
    For Each img In Hoja2.Pictures
        If Not Application.Intersect(img.TopLeftCell, Hoja2.Range("A1:C8")) Is Nothing Then
        If img.Type = 11 Then img.Delete
    End If
    Next
End Sub


Sub auto_close()
Shell "explorer " & "https://lerh13.blogspot.com/"
MsgBox "Hasta Pronto, Gracias por utilizar esta aplicaci|fffd|n", , "Luis Reyes"
End Sub
Attribute VB_Name = "Numeros"
Attribute VB_Base = "0{F8FB207C-59BE-480E-A94D-D8CDEA6948A6}{0AAAA742-F3D9-493E-A416-83E14E49F5A2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' Podremos borrar los ceros.
Private Sub CommandButton1_Click()
If edNumero.Text = "" Then
    MsgBox "Selecciona un rango"
Else
    For Each celda In Range(edNumero.Text)
      If celda.Value = 0 Then celda.ClearContents
    Next
End If
   
End Sub
' Podremos eliminar los vacios.
Private Sub CommandButton2_Click()
If edNumero.Text = "" Then
    MsgBox "Selecciona un rango"
Else
Range(edNumero.Text).Select
    Selection.SpecialCells(xlCellTypeBlanks).Select
    Selection.Delete Shift:=xlUp
    Selection.End(xlUp).Select
End If
End Sub
' Podremos borrar el cuadro de texto y cerrar el formulario.
Private Sub CommandButton3_Click()
edNumero.Text = Empty
Numeros.Hide
End Sub

Private Sub CommandButton4_Click()
If edNumero.Text = "" Then
    MsgBox "Selecciona un rango"
Else
    For Each celda In Range(edNumero.Text)
      If celda.Value <> 0 Then celda.Value = Round(celda.Value, 0)
    Next
End If
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{488A03BD-6284-4475-9882-8F4F7B23A26C}{22D2CACD-C0B1-4090-9F82-60E30ED34464}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub Label2_Click()

End Sub

Private Sub UserForm_Initialize()
UserForm1.Label1.Caption = "Paso1. Dar click en Importar XML" & Chr(10) & Chr(10) & _
"Paso2. Importar Logo" & Chr(10) & Chr(10) & _
"Paso3. Importar Exportar a PDF's"

UserForm1.Label2.Caption = "Nota importante: No tiene limites para crear PDF's, pero el convertir muchos xml|fffd|s a pdf|fffd|s ser|fffd| muy lento, es recomendable tomar lotes de 10 archivos"
End Sub


'
Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{5DD4782C-6296-42D2-938C-53F285C82CE6}{9B0CAB52-C5FF-4E26-AA24-B95A370826F6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub btcerrar_Click()
Unload Me
UserForm1.Show
End Sub

Private Sub UserForm_Initialize()
Application.ScreenUpdating = False
Application.EnableEvents = False
btcerrar.Visible = False
WebBrowser1.Navigate ("https://contenidoluisreyes.blogspot.com/")
   Tiempo = 16
   CountDown
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub

Private Sub UserForm_Terminate()
   StopClock
End Sub

Private Sub UserForm_QueryClose(cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then
MsgBox "Use el bot|fffd|n CERRAR del formulario", vbInformation, " Bot|fffd|n No Disponible "
cancel = 1
CloseMode = 1
End If
End Sub
Attribute VB_Name = "donarefectivo"
Attribute VB_Base = "0{5BE7AE9D-4F64-496F-989E-0B8A57191403}{A4ADE9A6-B4CE-4788-A99A-99D8D46779CD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click()
Dim Ruta As String, Nombre As String, NombreRemision As String
Hoja3.Visible = True
Ruta = ThisWorkbook.Path
With Hoja3
Nombre = Ruta & "\Donativo_Luis_Reyes.pdf" 'Nombre de hoja
    .Range("A1:E28").ExportAsFixedFormat Type:=xlTypePDF, Filename:=Nombre, _
    Quality:=xlQualityMinimum, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True

End With

MsgBox "Gracias por tu donativo", , "Luis Reyes"
Hoja3.Visible = False
Unload Me

End Sub

Private Sub UserForm_Initialize()
Label3.Caption = "Transferencias Interbancarias"

Label4.Caption = "Banco Azteca" & Chr(10) & _
"Clabe Interbancaria: 127180013472629951" & Chr(10) & _
"Cuenta: 76761347262995" & Chr(10) & _
"Nombre: Luis Enrique Reyes Hern|fffd|ndez"


End Sub


INQUEST-PP=macro
