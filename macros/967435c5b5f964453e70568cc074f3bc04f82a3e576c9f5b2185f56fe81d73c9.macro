Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Dim ende_zeilen_doculist
Const start_zeilen_doculist = 5
Const ende_zeilen_doculist_blatt = 65000
Dim Dateiname As String
Dim Blattname As String
Dim RohDatenanfang As Integer
Dim RohDatenende As Integer


Sub saubere_datei_struktur_erzeugen()
Dateiname = "struktur.prt"
Blattname = "struktur"

mappe_erstellen
Datenbereich_erstellen
Kopfzeile_erstellen
Mappe_formatieren
datenzeilen_belegt

Workbooks(Dateiname).Worksheets(Blattname).Cells(1, 1).Select
End Sub
Private Sub mappe_erstellen()

Workbooks.OpenText Filename:="C:\EC-Apps\iap\struktur.prt", Origin:= _
        xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:=xlNone, _
        ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False, Comma:=False _
        , Space:=False, Other:=False, FieldInfo:=Array(1, 1)
        
End Sub
Private Sub Datenbereich_erstellen()
suche_RohDatenanfang_Ende
For a = RohDatenanfang To RohDatenende
    Datenzeile_erstellen a
Next a
suche_RohDatenanfang_Anfang
End Sub
Private Sub Datenzeile_erstellen(zeile)
a = 16 - 6
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 2).Value = Mid(Inhalt, a + 7, 7)
    If Mid(Inhalt, a + 17, 1) = " " Then
        Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 3).Value = Mid(Inhalt, a + 16, 1)
    Else
        Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 3).Value = Mid(Inhalt, a + 16, 2)
    End If
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 4).Value = Mid(Inhalt, a + 19, 2)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 5).Value = Mid(Inhalt, a + 22, 1)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 6).Value = Mid(Inhalt, a + 24, 2)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 7).Value = Mid(Inhalt, a + 27, 7)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 8).Value = Mid(Inhalt, a + 35, 2)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 9).Value = Mid(Inhalt, a + 38, 40)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 10).Value = Mid(Inhalt, a + 79, 4)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 11).Value = Mid(Inhalt, a + 85, 55)
Workbooks(Dateiname).Worksheets(Blattname).Cells(zeile, 12).Value = Mid(Inhalt, a + 141, 2)
End Sub
Private Sub suche_RohDatenanfang_Ende()
RohDatenanfang = 1
RohDatenende = 2
For a = RohDatenanfang To ende_zeilen_doculist_blatt
    If Workbooks(Dateiname).Worksheets(Blattname).Cells(a, 1).Value = "" Then
        If Workbooks(Dateiname).Worksheets(Blattname).Cells(a + 1, 1).Value = "" Then
            If Workbooks(Dateiname).Worksheets(Blattname).Cells(a + 2, 1).Value = "" Then
                a = ende_zeilen_doculist_blatt
            End If
        End If
    Else: RohDatenende = a
    End If
Next a
End Sub
Private Sub suche_RohDatenanfang_Anfang()
For a = RohDatenanfang To RohDatenende
    If Workbooks(Dateiname).Worksheets(Blattname).Cells(a, 2).Value = "Sach-Nr" Then
        RohDatenanfang = a
        a = RohDatenende
    End If
Next a
End Sub
Private Sub Kopfzeile_erstellen()
    
Rows(RohDatenanfang).Select
Selection.Insert Shift:=xlDown
Rows(RohDatenanfang).Select
Selection.Insert Shift:=xlDown
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(1, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 2).Value = Mid(Inhalt, 11)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(2, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 9).Value = Mid(Inhalt, 12)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(3, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 3).Value = Mid(Inhalt, 13)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(4, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 4).Value = Mid(Inhalt, 11)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(5, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 5).Value = Mid(Inhalt, 14)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(6, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 7).Value = Mid(Inhalt, 10)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(7, 1).Value
Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 6).Value = "ST" 'Mid(Inhalt, 11)
Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(8, 1).Value
Testwort = Mid(Inhalt, 1, 3)
If Testwort = "Kom" Then 'Kommentarzeile vorhanden
    Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 11).Value = Mid(Inhalt, 12)
    Inhalt = Workbooks(Dateiname).Worksheets(Blattname).Cells(9, 1).Value
    Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 10).Value = Mid(Inhalt, 8)
End If
If Testwort = "Rei" Then 'keine Kommentarzeile vorhanden
    Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 10).Value = Mid(Inhalt, 8)
End If

Workbooks(Dateiname).Worksheets(Blattname).Cells(RohDatenanfang, 8).Value = "ST" 'Mid(Inhalt, 11)
End Sub
Private Sub Mappe_formatieren()
For a = 1 To RohDatenanfang - 1
    Rows(1).Select
    Selection.Delete Shift:=xlUp
Next a
    Columns(1).Select
    Selection.Delete Shift:=xlToLeft
End Sub

Private Sub datenzeilen_belegt()
ende_zeilen_doculist = start_zeilen_doculist - 1
For a = start_zeilen_doculist To ende_zeilen_doculist_blatt
    If Workbooks(Dateiname).Worksheets(Blattname).Cells(a, 1).Value <> "" Then
        ende_zeilen_doculist = ende_zeilen_doculist + 1
        Else: a = ende_zeilen_doculist_blatt
    End If
Next a
Workbooks(Dateiname).Worksheets(Blattname).Cells(2, 5).Value = start_zeilen_doculist
Workbooks(Dateiname).Worksheets(Blattname).Cells(2, 6).Value = ende_zeilen_doculist
End Sub
Attribute VB_Name = "Modul2"
Dim Dateinamen_Datenbank As String
Dim Blattnamen_Datenbank As String
'Dim Dateinamen_Prismalist As String
Dim Blattnamen_Prismalist As String
Dim Ende_Zeilen_Datenbank As Integer
Const Start_Zeilen_Datenbank = 6
Const Ende_Zeilen_Datenbank_blatt = 65000
Dim Nr_gefunden As Boolean
Dim Docu_zeile As Integer
Dim Start_Zeilen_Prismalist As Integer
Dim Ende_Zeilen_Prismalist As Integer
Dim Anfang_ZeilenNr_Strukturblock As Integer
Dim Ende_ZeilenNr_Strukturblock As Integer
Const farbe_gruen = 4
Const farbe_gruen_hell = 35
Const farbe_rot = 3
Const farbe_gelb = 6
Const farbe_gelb_hell = 36
Const farbe_blau = 5
Const farbe_zyan = 8
Const farbe_ocker = 44
Const demarkiere_farbe = xlNone
Dim Farbe_geaendert
Dim Farbe_neu
Dim Farbe_neutral
Dim wurde_geloescht

Sub aktualisiere_PSN_Struktur_Basisliste()

Farbe_geaendert = farbe_gruen_hell
Farbe_neu = farbe_gelb_hell
Farbe_neutrale = demarkiere_farbe
Farbe_neue_Struktur = farbe_rot
Dateinamen_Datenbank = ThisWorkbook.Name
Blattnamen_Datenbank = "PSN Struktur Basisliste"
'Dateinamen_Prismalist = "struktur.xlsx" nun lt. Getopenfilename
Blattnamen_Prismalist = "struktur"

'saubere_datei_struktur_erzeugen 'Alt f|fffd|r PRISMA

Daten_aufbereiten 'Neu f|fffd|r Web -> Makros in Modul5

Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Activate

Start_Zeilen_Prismalist = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(2, 5).Value
Ende_Zeilen_Prismalist = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(2, 6).Value

Datenbank_Zeilen_belegt

finde_Strukturblock

For Docu_zeile = Start_Zeilen_Prismalist To Ende_Zeilen_Prismalist
    Datenbank_Zeilen_belegt
    
    finde_Strukturblock
    
    daten_abgleichen Docu_zeile
        
Next Docu_zeile

finde_Strukturblock
block_sortieren

wurde_geloescht = False
For pruef_zeile = Anfang_ZeilenNr_Strukturblock To Ende_ZeilenNr_Strukturblock
    If wurde_geloescht = True Then
        pruef_zeile = pruef_zeile - 1
    End If
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(pruef_zeile, 1).Value <> "" Then
        loesche_alten_Datensatz (pruef_zeile)
    Else: pruef_zeile = Ende_ZeilenNr_Strukturblock
    End If
Next pruef_zeile
Cells(Anfang_ZeilenNr_Strukturblock, 1).Select

Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(1, 3).Value = Date

Workbooks(Dateinamen_Prismalist).Close SaveChanges:=False 'ohne Abfrage schliessen

End Sub

Private Sub Datenbank_Zeilen_belegt()
Ende_Zeilen_Datenbank = Start_Zeilen_Datenbank - 1
For a = Start_Zeilen_Datenbank To Ende_Zeilen_Datenbank_blatt
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = "" Then
       If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a + 1, 1).Value = "" Then
          If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a + 2, 1).Value = "" Then
            a = Ende_Zeilen_Datenbank_blatt
          End If
       End If
    Else: Ende_Zeilen_Datenbank = a
    End If
Next a

End Sub

Private Sub finde_Strukturblock()
Such_nummer = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, 1).Value
Such_zi = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, 2).Value
Such_dt = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, 3).Value
Such_alt = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, 4).Value
Such_typ = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, 6).Value

neuer_strukturblock = False

For a = Start_Zeilen_Datenbank To Ende_Zeilen_Datenbank
 If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = Such_nummer Then
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 2).Value = Such_zi Then
        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 3).Value = Such_dt Then
            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 4).Value = Such_alt Then
                If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 6).Value = Such_typ Then
                   'demarkiere_Datensatz a
                   Anfang_ZeilenNr_Strukturblock = a + 2
                   a = Ende_Zeilen_Datenbank
                   neuer_strukturblock = False
                Else: neuer_strukturblock = True
                End If
            Else: neuer_strukturblock = True
            End If
        Else: neuer_strukturblock = True
        End If
    Else: neuer_strukturblock = True
    End If
 Else: neuer_strukturblock = True
 End If
Next a

If neuer_strukturblock = True Then
    neuen_strukturblock_anfuegen
Else: laenge_strukturblock_ermitteln
End If

End Sub
Private Sub laenge_strukturblock_ermitteln()
 Ende_ZeilenNr_Strukturblock = Anfang_ZeilenNr_Strukturblock
 For a = Anfang_ZeilenNr_Strukturblock To Ende_Zeilen_Datenbank
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = "" Then
        a = Ende_Zeilen_Datenbank
    Else: Ende_ZeilenNr_Strukturblock = a
    End If
 Next a
End Sub
Private Sub neuen_strukturblock_anfuegen()
    Rows(Ende_Zeilen_Datenbank + 1).Select
    Selection.Insert Shift:=xlDown
    demarkiere_Datensatz Ende_Zeilen_Datenbank + 1
    Selection.Insert Shift:=xlDown
    demarkiere_Datensatz Ende_Zeilen_Datenbank + 1
    Selection.Insert Shift:=xlDown
    demarkiere_Datensatz Ende_Zeilen_Datenbank + 1
    Selection.Insert Shift:=xlDown
    demarkiere_Datensatz Ende_Zeilen_Datenbank + 1
    Ende_Zeilen_Datenbank = Ende_Zeilen_Datenbank + 3
    
    Struktursatz_kopieren_komplett 1, Ende_Zeilen_Datenbank
    
    Anfang_ZeilenNr_Strukturblock = Ende_Zeilen_Datenbank + 2
    Ende_ZeilenNr_Strukturblock = Anfang_ZeilenNr_Strukturblock
    Cells(Ende_Zeilen_Datenbank, 1).Select
End Sub
Private Sub Daten_kopieren_komplett(hole_zeile, einfuege_zeile)
For c = 1 To 10
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(einfuege_zeile, c).Value = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(hole_zeile, c).Value
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(einfuege_zeile, c).Interior.ColorIndex = Farbe_neu
Next c
End Sub
Private Sub Struktursatz_kopieren_komplett(hole_zeilen, einfuege_zeilen)
For c = 1 To 10
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(einfuege_zeilen, c).Value = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(hole_zeilen, c).Value
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(einfuege_zeilen, c).Interior.ColorIndex = farbe_ocker
Next c
End Sub
Private Sub daten_abgleichen(Prisma_zeile)
Sach_Nr = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 1).Value
ZI = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 2).Value
DT = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 3).Value
Altern = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 4).Value
DF = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 5).Value
Dok_typ = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 6).Value
DS = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 7).Value
Benennung = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 8).Value
Reife = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 9).Value
Kommentar = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Prisma_zeile, 10).Value

neuer_datensatz = False
For a = Anfang_ZeilenNr_Strukturblock To Ende_ZeilenNr_Strukturblock
 If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = Sach_Nr Then
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 2).Value = ZI Then
        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 3).Value = DT Then
            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 4).Value = Altern Then
                If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 5).Value = DF Then
                    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 6).Value = Dok_typ Then
                        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 7).Value = DS Then
                            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 9).Value = Reife Then
                            neuer_datensatz = False
                            demarkiere_Datensatz a
                            a = Ende_ZeilenNr_Strukturblock
                            Else: Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 9).Value = Reife
                                  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 9).Interior.ColorIndex = Farbe_geaendert
                                  If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 10).Value <> Kommentar Then
                                    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 10).Value = Kommentar
                                    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 10).Interior.ColorIndex = Farbe_geaendert
                                  End If
                                  a = Ende_ZeilenNr_Strukturblock
                                  neuer_datensatz = False
                            End If
                        Else: neuer_datensatz = True
                        End If
                    Else: neuer_datensatz = True
                    End If
                Else: neuer_datensatz = True
                End If
            Else: neuer_datensatz = True
            End If
        Else: neuer_datensatz = True
        End If
    Else: neuer_datensatz = True
    End If
 Else: neuer_datensatz = True
 End If
Next a
If neuer_datensatz = True Then
    If Ende_ZeilenNr_Strukturblock = Anfang_ZeilenNr_Strukturblock Then
    zeile_einfuegen Ende_ZeilenNr_Strukturblock - 1
    Daten_kopieren_komplett Docu_zeile, Ende_ZeilenNr_Strukturblock
    Else: zeile_einfuegen Ende_ZeilenNr_Strukturblock
          Daten_kopieren_komplett Docu_zeile, Ende_ZeilenNr_Strukturblock + 1
    End If
End If
End Sub
Private Sub zeile_einfuegen(zeile)
    Rows(zeile + 1).Select
    Selection.Insert Shift:=xlDown
    demarkiere_Datensatz zeile + 1
    'demarkiere_Datensatz zeile
End Sub
Private Sub demarkiere_Datensatz(zeile)
For c = 1 To 10
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(zeile, c).Interior.ColorIndex = Farbe_neutral
Next c
End Sub
Private Sub block_sortieren()
    Range(Cells(Anfang_ZeilenNr_Strukturblock, 1), Cells(Ende_ZeilenNr_Strukturblock, 16)).Select
    Selection.Sort Key1:=Range("A3"), Order1:=xlAscending, Key2:=Range("B3") _
        , Order2:=xlAscending, Key3:=Range("C3"), Order3:=xlAscending, Header:= _
        xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Cells(Anfang_ZeilenNr_Strukturblock, 1).Select
End Sub

Private Sub loesche_alten_Datensatz(Block_zeile)

Sach_Nr = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 1).Value
ZI = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 2).Value
DT = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 3).Value
Altern = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 4).Value
DF = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 5).Value
Dok_typ = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 6).Value
DS = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 7).Value
Benennung = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 8).Value
Reife = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 9).Value
Kommentar = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Block_zeile, 10).Value

datensatz_vorhanden = False
For a = Start_Zeilen_Prismalist To Ende_Zeilen_Prismalist
 If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 1).Value = Sach_Nr Then
    If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 2).Value = ZI Then
        If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 3).Value = DT Then
            If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 4).Value = Altern Then
                If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 5).Value = DF Then
                    If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 6).Value = Dok_typ Then
                        If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 7).Value = DS Then
                            If Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(a, 9).Value = Reife Then
                                datensatz_vorhanden = True
                                a = Ende_Zeilen_Prismalist
                                wurde_geloescht = False
                            End If
                        Else: datensatz_vorhanden = False
                        End If
                    Else: datensatz_vorhanden = False
                    End If
                Else: datensatz_vorhanden = False
                End If
            Else: datensatz_vorhanden = False
            End If
        Else: datensatz_vorhanden = False
        End If
    Else: datensatz_vorhanden = False
    End If
 Else: datensatz_vorhanden = False
 End If
Next a
If datensatz_vorhanden = False Then
    Rows(Block_zeile).Select
    Selection.Delete Shift:=xlUp
    wurde_geloescht = True
End If
End Sub
Attribute VB_Name = "Modul3"
Dim Dateinamen_Datenbank As String
Dim Blattnamen_neue_Strukturliste As String
Dim Dateinamen_Prismalist As String
Dim Blattnamen_Prismalist As String
Dim Start_Zeilen_Prismalist As Integer
Dim Ende_Zeilen_Prismalist As Integer
Dim Ende_Zeilen_neue_Strukturliste As Integer

Const Start_Zeilen_neue_Strukturliste = 6
Const Ende_Zeilen_neue_Strukturliste_blatt = 65000

Const farbe_gruen = 4
Const farbe_gruen_hell = 35
Const farbe_rot = 3
Const farbe_gelb = 6
Const farbe_gelb_hell = 36
Const farbe_blau = 5
Const farbe_zyan = 8
Const farbe_ocker = 44
Const demarkiere_farbe = xlNone

Sub erzeuge_Neue_Strukturliste()

Dateinamen_Datenbank = Mid(ActiveWorkbook.FullName, Len(ActiveWorkbook.Path) + 2)
Dateinamen_Prismalist = "struktur.prt"
Blattnamen_Prismalist = "struktur"
Blattnamen_neue_Strukturliste = "Neue Strukturliste"

loesche_veralterte_Neue_Strukturliste

befuelle_Neue_Strukturliste

Workbooks(Dateinamen_Prismalist).Close

End Sub
Private Sub loesche_veralterte_Neue_Strukturliste()
 'Datens|fffd|tze l|fffd|schen von Zeile 7 bis 65000
 Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Activate
 Rows("7:65000").Select
 Selection.Delete Shift:=xlUp
 'Inhalte aus Bereich "A3:J3" l|fffd|schen (Strukturbl|fffd|tter Namen)
 Range("A3:J4").Select
 Selection.ClearContents
 'neue Zeile anh|fffd|ngen
 Rows(6).Select
 Selection.Insert Shift:=xlDown
End Sub
Private Sub befuelle_Neue_Strukturliste()
 'Makro aus Modul1 zur Erzeugung der Strukturliste in der Datei "Struktur.prt"
 saubere_datei_struktur_erzeugen
  'Kopfzeile "Strukturname" von Struktur.prt nach Neue Strukturliste |fffd|bertragen
  For i = 1 To 10
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(3, i).Value = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(1, i).Value
  Next i
  'Variablen f|fffd|r L|fffd|nge des Prismadatenblocks belegen
  Start_Zeilen_Prismalist = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(2, 5).Value
  Ende_Zeilen_Prismalist = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(2, 6).Value
  Zeile_neue_Liste = Start_Zeilen_neue_Strukturliste + 1
  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Activate
  'neue Zeilen Neue Stukturliste einf|fffd|gen
  For i = Zeile_neue_Liste To (Ende_Zeilen_Prismalist - Start_Zeilen_Prismalist + Zeile_neue_Liste)
    Rows(i).Select
    Selection.Insert Shift:=xlDown
  Next i
  For Zeile_Stuktur = Start_Zeilen_Prismalist To Ende_Zeilen_Prismalist
    'Inhalt in neue Zeile eintragen
    For i = 1 To 10
      'neue Datens|fffd|tze |fffd|bertragen
      Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(Zeile_neue_Liste, i).Value = Workbooks(Dateinamen_Prismalist).Worksheets(Blattnamen_Prismalist).Cells(Zeile_Stuktur, i).Value
    Next i
    Zeile_neue_Liste = Zeile_neue_Liste + 1
  Next Zeile_Stuktur
'aktuelles Datum in Zelle 1,3 eintragen
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(1, 3).Value = Date
End Sub
Attribute VB_Name = "Modul4"
Dim Dateinamen_Datenbank As String
Dim Blattnamen_Datenbank As String
Dim Blattnamen_Vergleich As String
Dim Blattnamen_neue_Strukturliste As String
Dim Dateinamen_Prismalist As String
Dim Blattnamen_Prismalist As String
Dim Ende_Zeilen_Datenbank As Integer
Dim Nr_gefunden As Boolean
Dim Docu_zeile As Integer
Dim Anfang_ZeilenNr_Vergleichsliste As Integer
Dim Ende_ZeilenNr_Vergleichsliste As Integer
Dim Ende_Zeilen_neue_Strukturliste As Integer
Dim Ende_Zeilen_Vergleichsliste As Integer
Dim Anfang_ZeilenNr_Strukturblock As Integer
Dim Ende_ZeilenNr_Strukturblock As Integer
Dim Abbruch As Boolean


Const Start_Zeilen_Datenbank = 6
Const Ende_Zeilen_Datenbank_blatt = 65000
Const Start_Zeilen_neue_Strukturliste = 6
Const Ende_Zeilen_neue_Strukturliste_blatt = 65000
Const Start_Zeilen_Vergleichsliste = 7
Const Ende_Zeilen_Vergleichsliste_blatt = 65000
Const farbe_gruen = 4
Const farbe_gruen_hell = 35
Const farbe_rot = 3
Const farbe_gelb = 6
Const farbe_gelb_hell = 36
Const farbe_blau = 5
Const farbe_zyan = 8
Const farbe_ocker = 44
Const farbe_ocker_dunkel = 46
Const demarkiere_farbe = xlNone


Dim Farbe_neu
Dim Farbe_neutral
Dim wurde_geloescht

Sub erzeuge_Vergleichsliste()

Farbe_neu = farbe_gelb_hell
Farbe_neutrale = demarkiere_farbe
Farbe_neue_Struktur = farbe_rot

Dateinamen_Datenbank = Mid(ActiveWorkbook.FullName, Len(ActiveWorkbook.Path) + 2)
Blattnamen_Datenbank = "PSN Struktur Basisliste"
Blattnamen_Vergleich = "Vergleichsliste"
Blattnamen_neue_Strukturliste = "Neue Strukturliste"

' l|fffd|scht alte Vergleichsliste
loesche_alte_Vergleichsliste

'belegt die Variablen f|fffd|r die L|fffd|nge des Datenblocks in der "Neue Strukturliste"
neue_Strukturliste_Zeilen_belegt

'f|fffd|llt Vergleichsliste mit Daten aus "Neue Strukturliste"
befuelle_Vergleichsliste_mit_neuen_Strukturdaten

'Variable definieren
Abbruch = False

'Check ob Eingabe der Zeile3 (Struktur aus PSN letzter Stand) erfolgt ist Felder
check_eingabe_Zeile3
'Abbruch falls keine Zeile3 belegt
If Abbruch = False Then
'Procedur ermittelt und belegt die Anfangs- und Endzeilen der Datenbank
Datenbank_Zeilen_belegt
'Prozedur pr|fffd|ft ob Struktur aus Zeile3 in Datenbank vorhanden ist
'Falls ja werden die Variablen f|fffd|r die Datenblockl|fffd|nge in Unterfunktion belegt sonst Abbruch
finde_Strukturblock_in_Datenbank
    'Abbruch bei keinem Datensatzblock in der Datenbasis
    If Abbruch = False Then
        'Procedur ermittelt und belegt die Anfangs- und Endzeilen der Vergleichsliste
        laenge_Vergleichsliste_ermitteln
        'Prozedur kopiert Sturktur|fffd|breschrift von "Letzter Stand nach Vergleichsliste"
        Struktursatz_kopieren_komplett Anfang_ZeilenNr_Strukturblock - 2, 3
        ' Zeilenweise Kontrolle ob Daten Gleich/ Neu Oder Alt sind
        Daten_block_abgleichen
        'L|fffd|nge der neue Vergleichsliste feststellen da Zeilen hinzugef|fffd|gt
        laenge_Vergleichsliste_ermitteln
        ' Vergleichsliste neu sortieren
        block_sortieren
    End If
End If
'Ende des Hauptprogramms
End Sub

Private Sub loesche_alte_Vergleichsliste()
 'Datens|fffd|tze l|fffd|schen von Zeile 8 bis 65000
 Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Activate
 Rows("8:65000").Select
 Selection.Delete Shift:=xlUp
 'Inhalte aus Bereich "A3:J4" l|fffd|schen (Strukturbl|fffd|tter Namen)
 Range("A4:J4").Select
 Selection.ClearContents
 'neue Zeile anh|fffd|ngen
 Rows(7).Select
 Selection.Insert Shift:=xlDown
 'demakieren von Zelle 7:12
 Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(7, 12).Interior.ColorIndex = Farbe_neutral
End Sub
Private Sub neue_Strukturliste_Zeilen_belegt()
'Makro zur ermittlung der Anzahl der Datens|fffd|tz von Nr.1 bis Ende
Ende_Zeilen_neue_Strukturliste = Start_Zeilen_neue_Strukturliste - 1
For a = Start_Zeilen_neue_Strukturliste To Ende_Zeilen_neue_Strukturliste_blatt
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(a, 1).Value = "" Then
       If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(a + 1, 1).Value = "" Then
          If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(a + 2, 1).Value = "" Then
            a = Ende_Zeilen_neue_Strukturliste_blatt
          End If
       End If
    Else: Ende_Zeilen_neue_Strukturliste = a
    End If
Next a
End Sub
Private Sub befuelle_Vergleichsliste_mit_neuen_Strukturdaten()
  Startzeilendifferenz = Start_Zeilen_Vergleichsliste - Start_Zeilen_neue_Strukturliste
  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Activate
  'Kopfzeile "Strukturname" von "Neue Strukturliste" nach "Vergleichsliste" |fffd|bertragen
  For i = 1 To 10
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(4, i).Value = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(3, i).Value
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(4, i).Interior.ColorIndex = farbe_gruen
  Next i
  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(4, 12).Value = "NEUE Liste"
  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(4, 12).Interior.ColorIndex = farbe_gruen
  'neue, leere Zeilen in Vergleichsliste einf|fffd|gen
  Zeile_Vergleichsliste = Start_Zeilen_Vergleichsliste + 1
  For i = Zeile_Vergleichsliste To (Ende_Zeilen_neue_Strukturliste - Start_Zeilen_neue_Strukturliste + Zeile_Vergleichsliste - 1)
    Rows(i).Select
    Selection.Insert Shift:=xlDown
  Next i
  'Schleife f|fffd|r alle neuen Strukturdatens|fffd|tze
  For a = Start_Zeilen_neue_Strukturliste + 1 To Ende_Zeilen_neue_Strukturliste
      Zeile_Vergleichsliste = a + Startzeilendifferenz
      For i = 1 To 10
        'neue Datens|fffd|tze |fffd|bertragen und mit gr|fffd|n "NEU" kennzeichnen
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(Zeile_Vergleichsliste, i).Value = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_neue_Strukturliste).Cells(a, i).Value
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(Zeile_Vergleichsliste, 12).Value = "NEU"
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(Zeile_Vergleichsliste, 12).Interior.ColorIndex = farbe_gruen_hell
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(Zeile_Vergleichsliste, i).Interior.ColorIndex = farbe_gruen_hell
      Next i
  Next a
'aktuelles Datum in Zelle 1,3 eintragen
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(1, 3).Value = Date
End Sub
Private Sub check_eingabe_Zeile3()
'Routine checkt ob Zeile3 ausreichtend Daten enth|fffd|lt Feld 1,2,3,4,6 sonst Abbruch-Variable wahr
  Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Activate
  If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 1).Value <> "" Then
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 2).Value <> "" Then
      If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 3).Value <> "" Then
        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 4).Value <> "" Then
          If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 6).Value <> "" Then
          Else: MsgBox "Keine Eingabe in Zeile 3 gefunden"
                Abbruch = True
          End If
        Else: MsgBox "Keine Eingabe in Zeile 3 gefunden"
              Abbruch = True
        End If
      Else: MsgBox "Keine Eingabe in Zeile 3 gefunden"
            Abbruch = True
      End If
    Else: MsgBox "Keine Eingabe in Zeile 3 gefunden"
          Abbruch = True
    End If
  Else: MsgBox "Keine Eingabe in Zeile 3 gefunden"
        Abbruch = True
  End If
End Sub
Private Sub Datenbank_Zeilen_belegt()
'Makro zur ermittlung der Anzahl der Datens|fffd|tz von Nr.1 bis Ende
Ende_Zeilen_Datenbank = Start_Zeilen_Datenbank - 1
For a = Start_Zeilen_Datenbank To Ende_Zeilen_Datenbank_blatt
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = "" Then
       If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a + 1, 1).Value = "" Then
          If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a + 2, 1).Value = "" Then
            a = Ende_Zeilen_Datenbank_blatt
          End If
       End If
    Else: Ende_Zeilen_Datenbank = a
    End If
Next a
End Sub
Private Sub finde_Strukturblock_in_Datenbank()
'sucht in Datenbank (PSN Struktur Letzter Stand) nach Modellnummer aus Zeile3 Vergleichsliste
Such_nummer = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 1).Value
Such_zi = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 2).Value
Such_dt = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 3).Value
Such_alt = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 4).Value
Such_typ = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(3, 6).Value

strukturblock_gefunden = False

For a = Start_Zeilen_Datenbank To Ende_Zeilen_Datenbank
 If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = Such_nummer Then
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 2).Value = Such_zi Then
        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 3).Value = Such_dt Then
            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 4).Value = Such_alt Then
                If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 6).Value = Such_typ Then
                   Anfang_ZeilenNr_Strukturblock = a + 2
                   a = Ende_Zeilen_Datenbank
                   strukturblock_gefunden = True
                End If
            End If
        End If
    End If
 End If
Next a

If strukturblock_gefunden = True Then
    laenge_strukturblock_ermitteln
Else: MsgBox "Keine Daten in Blatt ! PSN Struktur Letzter Stand ! gefunden"
      Abbruch = True
End If
End Sub
Private Sub laenge_strukturblock_ermitteln()
 Ende_ZeilenNr_Strukturblock = Anfang_ZeilenNr_Strukturblock
 For a = Anfang_ZeilenNr_Strukturblock To Ende_Zeilen_Datenbank
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(a, 1).Value = "" Then
        a = Ende_Zeilen_Datenbank
    Else: Ende_ZeilenNr_Strukturblock = a
    End If
 Next a
End Sub
Private Sub laenge_Vergleichsliste_ermitteln()
 Anfang_ZeilenNr_Vergleichsliste = Start_Zeilen_Vergleichsliste + 1
  Ende_ZeilenNr_Vergleichsliste = Anfang_ZeilenNr_Vergleichsliste
 For a = Anfang_ZeilenNr_Vergleichsliste To Ende_Zeilen_Vergleichsliste_blatt
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 1).Value = "" Then
        a = Ende_Zeilen_Vergleichsliste_blatt
    Else: Ende_ZeilenNr_Vergleichsliste = a
    End If
 Next a
End Sub

Private Sub Struktursatz_kopieren_komplett(hole_zeilen, einfuege_zeilen)
For c = 1 To 10
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(einfuege_zeilen, c).Value = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(hole_zeilen, c).Value
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(einfuege_zeilen, c).Interior.ColorIndex = farbe_ocker_dunkel
Next c
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(einfuege_zeilen, 12).Value = "BASIS Liste"
Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(einfuege_zeilen, 12).Interior.ColorIndex = farbe_ocker_dunkel
End Sub

Private Sub Daten_block_abgleichen()
    For Docu_zeile = Anfang_ZeilenNr_Strukturblock To Ende_ZeilenNr_Strukturblock
        daten_abgleichen_pro_zeile Docu_zeile
    Next Docu_zeile

End Sub

Private Sub daten_abgleichen_pro_zeile(Prisma_zeile)
'Routine zum angleichen der Daten zeilenweise
Sach_Nr = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 1).Value
ZI = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 2).Value
DT = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 3).Value
Altern = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 4).Value
DF = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 5).Value
Dok_typ = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 6).Value
DS = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 7).Value
Benennung = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 8).Value
Reife = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 9).Value
Kommentar = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(Prisma_zeile, 10).Value

' Zeilenweise Kontrolle ob Daten Gleich/ Neu Oder Alt sind
datensatz_alt = False
'datensatz_alt = true heisst Datensatz ist nicht mehr in neuer Struktur
For a = Anfang_ZeilenNr_Vergleichsliste To Ende_ZeilenNr_Vergleichsliste
 If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 1).Value = Sach_Nr Then
    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 2).Value = ZI Then
        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 3).Value = DT Then
            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 4).Value = Altern Then
                If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 5).Value = DF Then
                    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 6).Value = Dok_typ Then
                        If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 7).Value = DS Then
                            If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 8).Value = Benennung Then
                                If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 9).Value = Reife Then
                                    If Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(a, 10).Value = Kommentar Then
                                        markiere_Datensatz_als_gleich a
                                        a = Ende_ZeilenNr_Vergleichsliste
                                        datensatz_alt = False
                                    Else: datensatz_alt = True
                                    End If
                                Else: datensatz_alt = True
                                End If
                            Else: datensatz_alt = True
                            End If
                        Else: datensatz_alt = True
                        End If
                    Else: datensatz_alt = True
                    End If
                Else: datensatz_alt = True
                End If
            Else: datensatz_alt = True
            End If
        Else: datensatz_alt = True
        End If
    Else: datensatz_alt = True
    End If
 Else: datensatz_alt = True
 End If
Next a
If datensatz_alt = True Then
    kopiere_Datensatz_nach_Vergleichsliste Prisma_zeile, Ende_ZeilenNr_Vergleichsliste
End If
End Sub
Private Sub kopiere_Datensatz_nach_Vergleichsliste(von_Zeile, nach_zeile)
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Activate
    Rows(nach_zeile + 1).Select
    Selection.Insert Shift:=xlDown
    For c = 1 To 10
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(nach_zeile + 1, c).Value = Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Datenbank).Cells(von_Zeile, c).Value
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(nach_zeile + 1, c).Interior.ColorIndex = farbe_ocker
    Next c
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(nach_zeile + 1, 12).Value = "BASIS Liste"
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(nach_zeile + 1, 12).Interior.ColorIndex = farbe_ocker

End Sub
Private Sub markiere_Datensatz_als_gleich(zeile)
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(zeile, 12).Value = "GLEICH"
    Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(zeile, 12).Interior.ColorIndex = farbe_zyan
    For i = 1 To 10
        Workbooks(Dateinamen_Datenbank).Worksheets(Blattnamen_Vergleich).Cells(zeile, i).Interior.ColorIndex = farbe_zyan
    Next i
End Sub
Private Sub block_sortieren()
    Range(Cells(Anfang_ZeilenNr_Vergleichsliste, 1), Cells(Ende_ZeilenNr_Vergleichsliste, 12)).Select
    Selection.Sort Key1:=Range("A3"), Order1:=xlAscending, Key2:=Range("B3") _
        , Order2:=xlAscending, Key3:=Range("C3"), Order3:=xlAscending, Header:= _
        xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Cells(Anfang_ZeilenNr_Vergleichsliste, 1).Select
End Sub



Attribute VB_Name = "Modul5"
Public Dateinamen_Prismalist
Sub Daten_aufbereiten()
    Datei = Application.GetOpenFilename("Excel-Dateien (*.xls*), *.xls*", 1, "Bitte Datei zum Import ausw|fffd|hlen:")
    If Datei = False Then End
    
    Workbooks.Open (Datei)
    Dateinamen_Prismalist = ActiveWorkbook.Name
    Columns(1).Delete 'Spalte A = Ebene l|fffd|schen
    
    DatenBereinigen
    
    StrukturErzeugen
    
    Sheets("struktur").Activate

End Sub

Sub DatenBereinigen()
'Unn|fffd|tige Strukturen l|fffd|schen
    Range("A50000").End(xlUp).Select
    Do Until ActiveCell.Row = 1
        If ActiveCell.IndentLevel = 1 Or ActiveCell.Offset(1, 0).IndentLevel = 1 Then
            If ActiveCell.Offset(0, 8) = "" Then ActiveCell.Offset(0, 8).Value = "ST"
        Else
            ActiveCell.EntireRow.Delete
        End If
        ActiveCell.Offset(-1, 0).Select
    Loop
    
'Doppelte Strukturen l|fffd|schen
    Range("A1").Select
    Bereich = Selection.CurrentRegion.Address
    ActiveSheet.Range(Bereich).RemoveDuplicates Columns:=Array(1, 2, 3, 4, 5, 6, 7 _
        , 8, 9, 10, 11), Header:=xlYes
    Range("A1").Select

End Sub

Sub StrukturErzeugen()
    Sheets.Add after:=Sheets(1)
    ActiveSheet.Name = "struktur"
        
    '1. Zeile erzeugen = Hauptstruktur
    Sheets("struktur").Range("A1").Value = Sheets(1).Range("A2").Value
    Sheets("struktur").Range("B1").Value = Sheets(1).Range("D2").Value
    Sheets("struktur").Range("C1").Value = Sheets(1).Range("E2").Value
    Sheets("struktur").Range("D1").Value = Sheets(1).Range("F2").Value
    Sheets("struktur").Range("E1").Value = Sheets(1).Range("G2").Value
    Sheets("struktur").Range("F1").Value = Sheets(1).Range("H2").Value
    Sheets("struktur").Range("G1").Value = Sheets(1).Range("I2").Value
    Sheets("struktur").Range("H1").Value = Sheets(1).Range("B2").Value
    Sheets("struktur").Range("I1").Value = Sheets(1).Range("J2").Value
    Sheets("struktur").Range("J1").Value = Sheets(1).Range("K2").Value
    
    '3. Zeile erzeugen = Spaltentitel
    Sheets("struktur").Range("A3").Value = "Sach-Nr"
    Sheets("struktur").Range("B3").Value = "ZI"
    Sheets("struktur").Range("C3").Value = "DT"
    Sheets("struktur").Range("D3").Value = "A"
    Sheets("struktur").Range("E3").Value = "DF"
    Sheets("struktur").Range("F3").Value = "Dok-Typ"
    Sheets("struktur").Range("G3").Value = "DS"
    Sheets("struktur").Range("H3").Value = "Benennung"
    Sheets("struktur").Range("I3").Value = "Reif"
    Sheets("struktur").Range("J3").Value = "Kommentar"
    Sheets("struktur").Range("J3").Value = "KI"
    
    '5. ff Zeilen erzeugen = Unterstruktur
    Sheets("struktur").Range("A5:A10005").Value = Sheets(1).Range("A3:A10000").Value
    Sheets("struktur").Range("B5:B10000").Value = Sheets(1).Range("D3:D10000").Value
    Sheets("struktur").Range("C5:C10000").Value = Sheets(1).Range("E3:E10000").Value
    Sheets("struktur").Range("D5:D10000").Value = Sheets(1).Range("F3:F10000").Value
    Sheets("struktur").Range("E5:E10000").Value = Sheets(1).Range("G3:G10000").Value
    Sheets("struktur").Range("F5:F10000").Value = Sheets(1).Range("H3:H10000").Value
    Sheets("struktur").Range("G5:G10000").Value = Sheets(1).Range("I3:I10000").Value
    Sheets("struktur").Range("H5:H10000").Value = Sheets(1).Range("B3:B10000").Value
    Sheets("struktur").Range("I5:I10000").Value = Sheets(1).Range("J3:J10000").Value
    Sheets("struktur").Range("J5:J10000").Value = Sheets(1).Range("K3:K10000").Value
    'Sheets(2).Range("K5:K10000").Value = Sheets(1).Range("D3:D10000").Value
    
    Range("E2").Value = 5 'Startzeile
    Range("F2").Value = Application.WorksheetFunction.CountA(Sheets("struktur").Range("A5:A10000")) + 4
    Columns("A:K").AutoFit
End Sub
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
