Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim m_lngNSheets As Long
Private Sub Workbook_Open()
    m_lngNSheets = ThisWorkbook.Sheets.Count
    
''beim Starten der Vorlage wird die Info angezeigt, das doch mit der Maske gearbeitet werden soll
'    If ThisWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "ja" Then
'        info.Show
'    End If
    If ActiveWorkbook.CustomDocumentProperties("Quelle").Value = "PIRS" Then
        Call Rev_00_aus_PIRS
        ActiveWorkbook.CustomDocumentProperties("Quelle").Value = "PIRS2"   'Quelle wird auf PIRS2 gesetzt, damit beim erneuten |fffd|ffnen des Dokumentes das Makro nicht ein zweites mal ausgef|fffd|hrt wird
        ActiveWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "nein"
    End If
''beim Starten der Vorlage die startmaske angezeigt
    If ActiveWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "ja" Then
        frm_Rev0.Show
        'ActiveWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "nein"
    End If

End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'option mit logo vom kunden
''''''''''''''''''''''''''''''''''''''''''''''

Private Sub Workbook_NewSheet(ByVal Sh As Object)
   On Error GoTo 5

    If ActiveSheet.PageSetup.CenterHeader = "" Then
        ActiveSheet.PageSetup.CenterHeader = ThisWorkbook.Sheets("Coversheet").Range("pname").Value
    End If

    If ActiveSheet.PageSetup.LeftFooter = "" Then
        ActiveSheet.PageSetup.LeftFooter = "&8 &F" & " _" & ActiveSheet.Name
    End If

    If ActiveSheet.PageSetup.RightFooter = "" Then
        ActiveSheet.PageSetup.RightFooter = "&8Page &P of &N"
    End If

    If ActiveSheet.PageSetup.LeftHeader = "" Then
       If Dir("N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\Dublin\Covanta klein.jpg") <> "" Then
                ActiveSheet.PageSetup.LeftHeaderPicture.Filename = _
                "N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\Dublin\Covanta klein.jpg"
                ActiveSheet.PageSetup.LeftHeader = "&G"
        End If
    End If
    If ActiveSheet.PageSetup.RightHeader = "" Then
        If Dir("N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\HZI_Logo_RGB_JPG M excel.jpg") <> "" Then
                ActiveSheet.PageSetup.RightHeaderPicture.Filename = _
                "N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\HZI_Logo_RGB_JPG M excel.jpg"
                ActiveSheet.PageSetup.RightHeader = "&G"
        End If
    End If
5

    Application.ScreenUpdating = True
End Sub

Private Sub Workbook_SheetActivate(ByVal Sh As Object)
'falls die Anzahl Tabellen |fffd|ndert, so wird gepr|fffd|ft ob die Kopfzeilen/Fusszeilen ausgef|fffd|llt sind. Falls nicht, so werden
' Anzahl Seiten, Autor etc automatisch eingef|fffd|llt
   ' On Error GoTo 5
    If ActiveSheet.Name = "Coversheet" Then GoTo 5
    If ActiveSheet.PageSetup.CenterHeader = "" Then
        ActiveSheet.PageSetup.CenterHeader = ThisWorkbook.Sheets("Coversheet").Range("pname").Value
    End If

    If ActiveSheet.PageSetup.LeftFooter = "" Then
        ActiveSheet.PageSetup.LeftFooter = "&8 &F" & " _" & ActiveSheet.Name
    End If

    If ActiveSheet.PageSetup.RightFooter = "" Then
        ActiveSheet.PageSetup.RightFooter = "&8Page &P of &N"
    End If

    If ActiveSheet.PageSetup.LeftHeader = "" Then
        If Dir("N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\Dublin\Covanta klein.jpg") <> "" Then
                ActiveSheet.PageSetup.LeftHeaderPicture.Filename = _
                "N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\Dublin\Covanta klein.jpg"
                ActiveSheet.PageSetup.LeftHeader = "&G"
        End If
    End If
    If ActiveSheet.PageSetup.RightHeader = "" Then
        If Dir("N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\HZI_Logo_RGB_JPG M excel.jpg") <> "" Then
                ActiveSheet.PageSetup.RightHeaderPicture.Filename = _
                "N:\Kos-Projekte\Standardisierung\Vorlagen f|fffd|r Makros\HZI_Logo_RGB_JPG M excel.jpg"
                ActiveSheet.PageSetup.RightHeader = "&G"
        End If
    End If
5

    Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "Modul1"
Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
'

'
    Cells.Find(What:="dge", After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
        xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
        , SearchFormat:=False).Activate
    Range("Q12").Select
    ActiveWorkbook.Save
    Range("H14").Select
    ActiveWorkbook.Save
    Range("F18").Select
    ActiveWorkbook.Save
    ActiveWorkbook.Save
    Range("I20").Select
    ActiveWorkbook.Save
    Range("F23").Select
    ActiveWorkbook.Save
    Sheets("Makro Werte Dok Typ").Select
    ActiveWindow.SelectedSheets.Visible = False
    Range("F15").Select
    Sheets("Coversheet").Select
    Range("E36").Select
    ActiveWindow.SmallScroll Down:=9
    ActiveWorkbook.Save
    Range("E35").Select
    ActiveWorkbook.Save
    ActiveWorkbook.Save
    Range("F34").Select
    ActiveWorkbook.Save
    Application.WindowState = xlMinimized
    ActiveWorkbook.Save
    Range("I32").Select
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    On Error GoTo 1
    If Range("filterzeile").Row <> Target.Cells.Row Then
        wert = Target.Cells.Value
        spalte = Target.Cells.Column
    
        Dim Schnittbereich
        zeile_anfang = Range("AutoF").Row
    
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)
    
        Set Schnittbereich = Application.Intersect(Target, Range("Drucktitel"))
        If Schnittbereich Is Nothing Then
        
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte, Criteria1:=wert
        Else
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte
        End If
    End If
1
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
        On Error GoTo 1
    Set Schnittbereich = Application.Intersect(Target, Range("filterzeile"))    'die Zeile in der die Filterwerte eingegeben werden
                                                                                ' muss mit "filterzeile" benennt werden
    On Error Resume Next
    If Not Schnittbereich Is Nothing Then                                       '

'der Bereich des Autofilters wird automatisch auf die gesamte Datenmenge gesetzt
        zeile_anfang = Range("AutoF").Row    'die Zeile in welcher der Autofilter aktiv ist muss Drucktitel heissen.
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row    'bestimmen der letzten Zeile
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column    'bestimmen der letzten Spalte
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)   'berechnen des Buchstabens der letzten Spalte
    
        zahl = Target.Cells.Column
        Text = Target.Cells.Value
        ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl, Criteria1:= _
             "=*" & Text & "*", Operator:=xlAnd
        If Text = "" Then
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl
        End If
    End If
1
End Sub





Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    On Error GoTo 1
    If Range("filterzeile").Row <> Target.Cells.Row Then
        wert = Target.Cells.Value
        spalte = Target.Cells.Column
    
        Dim Schnittbereich
        zeile_anfang = Range("AutoF").Row
    
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)
    
        Set Schnittbereich = Application.Intersect(Target, Range("Drucktitel"))
        If Schnittbereich Is Nothing Then
        
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte, Criteria1:=wert
        Else
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte
        End If
    End If
1
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
        On Error GoTo 1
    Set Schnittbereich = Application.Intersect(Target, Range("filterzeile"))    'die Zeile in der die Filterwerte eingegeben werden
                                                                                ' muss mit "filterzeile" benennt werden
    On Error Resume Next
    If Not Schnittbereich Is Nothing Then                                       '

'der Bereich des Autofilters wird automatisch auf die gesamte Datenmenge gesetzt
        zeile_anfang = Range("AutoF").Row    'die Zeile in welcher der Autofilter aktiv ist muss Drucktitel heissen.
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row    'bestimmen der letzten Zeile
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column    'bestimmen der letzten Spalte
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)   'berechnen des Buchstabens der letzten Spalte
    
        zahl = Target.Cells.Column
        Text = Target.Cells.Value
        ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl, Criteria1:= _
             "=*" & Text & "*", Operator:=xlAnd
        If Text = "" Then
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl
        End If
    End If
1
End Sub





Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    On Error GoTo 1
    If Range("filterzeile").Row <> Target.Cells.Row Then
        wert = Target.Cells.Value
        spalte = Target.Cells.Column
    
        Dim Schnittbereich
        zeile_anfang = Range("AutoF").Row
    
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)
    
        Set Schnittbereich = Application.Intersect(Target, Range("Drucktitel"))
        If Schnittbereich Is Nothing Then
        
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte, Criteria1:=wert
        Else
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=spalte
        End If
    End If
1
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
        On Error GoTo 1
    Set Schnittbereich = Application.Intersect(Target, Range("filterzeile"))    'die Zeile in der die Filterwerte eingegeben werden
                                                                                ' muss mit "filterzeile" benennt werden
    On Error Resume Next
    If Not Schnittbereich Is Nothing Then                                       '

'der Bereich des Autofilters wird automatisch auf die gesamte Datenmenge gesetzt
        zeile_anfang = Range("AutoF").Row    'die Zeile in welcher der Autofilter aktiv ist muss Drucktitel heissen.
        zeile_ende = ActiveCell.SpecialCells(xlLastCell).Row    'bestimmen der letzten Zeile
        spalte2 = ActiveCell.SpecialCells(xlLastCell).Column    'bestimmen der letzten Spalte
        buchstaben = Split(Cells(1, spalte2).Address, "$")(1)   'berechnen des Buchstabens der letzten Spalte
    
        zahl = Target.Cells.Column
        Text = Target.Cells.Value
        ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl, Criteria1:= _
             "=*" & Text & "*", Operator:=xlAnd
        If Text = "" Then
            ActiveSheet.Range("$A$" & zeile_anfang & ":$" & buchstaben & "$" & zeile_ende & "").AutoFilter Field:=zahl
        End If
    End If
1
End Sub



Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "frmDocType"
Attribute VB_Base = "0{9769EA18-76F1-4BB6-A1D8-B98B22F53942}{22618F0E-37C9-4C11-8292-838844189F7F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Public alle_anzeigen
Private Sub chkAAngebote_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkCConstruction_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkDDrawings_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkJProJectMan_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkLLists_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkMMinutes_Click()
    Call einzelne_kategorieen
End Sub

Private Sub chkNurExcel_Click()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    Me.lstSuchergebnis.Clear
    X = Range("excelDatei").Row + 1
    For X = 2 To zeilen
        If Sheets("Makro Werte Dok Typ").Cells(X, Range("excelDatei").Column).Value = "x" Then
            Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Range("A" & X & "").Value
        End If
    Next X
End Sub

Private Sub chkOOM_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkPDiagrams_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkQDoc_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkRProcurement_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkSTimeSchedules_Click()
    Call einzelne_kategorieen
End Sub
Private Sub chkTTechnicalDoc_Click()
    Call einzelne_kategorieen
End Sub
Private Sub einzelne_kategorieen()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    cur_ctrl = ActiveControl.Name               'name aktueller Textbox
    buchstabe = Left(Right(cur_ctrl, Len(cur_ctrl) - 3), 1)   'aktueller Name der Textbox ohne txt
    Me.lstSuchergebnis.Clear
    X = Range("excelDatei").Row + 1
    If ActiveControl.Value = True Then
        For X = 2 To zeilen
            If Left(Sheets("Makro Werte Dok Typ").Range("A" & X & "").Value, 1) = buchstabe Then
              Sheets("Makro Werte Dok Typ").Cells(X, Range("spezifisch").Column).Value = "x"
              y = X
            End If
        Next X
        'Sheets("Makro Werte Dok Typ").Cells(y + 1, Range("spezifisch").Column).Value = "x"
    Else
        For X = 2 To zeilen
            If Left(Sheets("Makro Werte Dok Typ").Range("A" & X & "").Value, 1) = buchstabe Then
              Sheets("Makro Werte Dok Typ").Cells(X, Range("spezifisch").Column).Value = ""
              y = X
            End If
        Next X
        Sheets("Makro Werte Dok Typ").Cells(y + 1, Range("spezifisch").Column).Value = ""
    End If
    For X = 2 To zeilen
        If Sheets("Makro Werte Dok Typ").Cells(X, Range("spezifisch").Column).Value = "x" Then
            Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Range("A" & X & "").Value
        End If
    Next X
End Sub
Private Sub CommandButton1_Click()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    For Each Control In frmDocType.Controls
        If TypeOf Control Is MSForms.CheckBox And Control.BackColor = &HC0C0FF Then
            Control.Value = False
        End If
    Next
    Me.lstSuchergebnis.Clear
    l|fffd|schZeile = Range("spezifisch").Row + 1
    l|fffd|schSpalte = Range("spezifisch").Column
    Range(Cells(l|fffd|schZeile, l|fffd|schSpalte), Cells(zeilen, l|fffd|schSpalte)).ClearContents
    alle_anzeigen = ""
    Call UserForm_Initialize
End Sub
Private Sub cmdAllCategories_Click()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    For Each Control In frmDocType.Controls
        If TypeOf Control Is MSForms.CheckBox And Control.BackColor = &HC0C0FF Then
            Control.Value = False
        End If
    Next
    Me.lstSuchergebnis.Clear
    l|fffd|schZeile = Range("spezifisch").Row + 1
    l|fffd|schSpalte = Range("spezifisch").Column
    Range(Cells(l|fffd|schZeile, l|fffd|schSpalte), Cells(zeilen, l|fffd|schSpalte)).ClearContents
    alle_anzeigen = "ja"

    Call UserForm_Initialize
End Sub

Private Sub cmdAusf|fffd|hren_Click()
    If Me.txtKathegorie.Value = "" Then
        MsgBox "Document Category is Mandatory"
        Exit Sub
    End If
    
    Position = InStr(1, txtKathegorie, " ")
    Sheets("Coversheet").Range("doctype").Value = Left(Me.txtKathegorie.Value, Position - 1)
    ThisWorkbook.CustomDocumentProperties("Document Type").Value = Left(Me.txtKathegorie.Value, Position - 1)
    With Sheets("Coversheet").Range("Supplier").Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    Unload Me
    Sheets("Makro Werte Dok Typ").Visible = False
    Sheets("Coversheet").Select
End Sub

Private Sub cmdNurExcel_Click()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    Me.lstSuchergebnis.Clear
    X = Range("excelDatei").Row + 1
    For X = 2 To zeilen
        If Sheets("Makro Werte Dok Typ").Cells(X, Range("excelDatei").Column).Value = "x" Then
            Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Range("A" & X & "").Value
        End If
    Next X
End Sub

Private Sub lstSuchergebnis_AfterUpdate()
    Me.txtKathegorie.Value = Me.lstSuchergebnis.Value
End Sub

Private Sub txtKathegorie_Change()
    zeile = Cells.Find(What:=Me.txtKathegorie.Value, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
        xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
        , SearchFormat:=False).Row
        
    spalte = Range("bezeichnung").Column
    wert = Cells(zeile, spalte).Value
    Me.lbl_info.Caption = wert
    
    
    
End Sub

Private Sub txtSuchwert_Change()
    Dim wert As String
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    For Each Control In frmDocType.Controls
        If TypeOf Control Is MSForms.CheckBox And Control.BackColor = &HC0C0FF Then
            Control.Value = False
        End If
    Next
    l|fffd|schZeile = Range("spezifisch").Row + 1
    l|fffd|schSpalte = Range("spezifisch").Column
    Range(Cells(l|fffd|schZeile, l|fffd|schSpalte), Cells(zeilen, l|fffd|schSpalte)).ClearContents
    Me.lstSuchergebnis.Clear
    wert = Me.txtSuchwert.Value
    Range("suchwert").Value = LCase(wert)
    X = 2
    
    For X = 2 To zeilen
    If Cells(X, Range("suchwert").Column).Value = "OK" Then
        Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, 1).Value
    End If
    Next X
End Sub

Private Sub UserForm_Initialize()
    zeilen = Sheets("Makro Werte Dok Typ").UsedRange.Rows.Count
    Sheets("Makro Werte Dok Typ").Visible = True
    Sheets("Makro Werte Dok Typ").Select
    doktyp = Sheets("Makro Werte Dok Typ").Range("doktyp").Column
    excel_ja = Sheets("Makro Werte Dok Typ").Range("excelDatei").Column
    lieferant = Sheets("Makro Werte Dok Typ").Range("lieferant").Column
    
    X = 3
    For X = 3 To zeilen
        If alle_anzeigen = "ja" Then
            'falls ein Haupttitel (Farbe 24), so wird eine zus|fffd|tzliche Spalte eingef|fffd|gt
             If Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Interior.ColorIndex = 24 Then
                Me.lstSuchergebnis.AddItem ""
                Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
            Else
                Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
            End If
            
           ' Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
        ElseIf Cells(X, excel_ja).Value = "ja" Then
            If ThisWorkbook.CustomDocumentProperties("Supplier").Value = "HZI" Then
                'falls ein Haupttitel (Farbe 24), so wird eine zus|fffd|tzliche Spalte eingef|fffd|gt
                 If Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Interior.ColorIndex = 24 Then
                    Me.lstSuchergebnis.AddItem ""
                    Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
                Else
                    Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
                End If
            Else
                If Cells(X, lieferant).Value <> "nein" Then
                    'falls ein Haupttitel (Farbe 24), so wird eine zus|fffd|tzliche Spalte eingef|fffd|gt
                     If Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Interior.ColorIndex = 24 Then
                        Me.lstSuchergebnis.AddItem ""
                        Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
                    Else
                        Me.lstSuchergebnis.AddItem Sheets("Makro Werte Dok Typ").Cells(X, doktyp).Value
                    End If
                End If
            End If
            
        End If
    Next X
    alle_anzeigen = ""
End Sub

Attribute VB_Name = "frm_AIC"
Attribute VB_Base = "0{DF9E7851-A2CD-4687-8F36-3260D34696BB}{6FE1842E-162C-4F3C-8CAD-22A20D365B39}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
    ThisWorkbook.CustomDocumentProperties("AIC").Value = Me.TextBox1.Value
    Unload Me
    
End Sub

Private Sub TextBox1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 If KeyAscii > 96 And KeyAscii < 123 Then
       MsgBox "use CAPITAL letters"
   Else
   End If
 Select Case KeyAscii
       Case 8, 43 To 46, 48 To 57, 65 To 90, 142, 153 To 154
       Case Else
           KeyAscii = 0
   End Select
End Sub


Attribute VB_Name = "frm_Rev0"
Attribute VB_Base = "0{EFF16871-6B75-4691-84C3-CA014647E8CB}{89534784-376C-4510-8F8B-DC00C816A4C4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Public projektnummer As Variant
Public projektname As Variant
Public titel As Variant
Public Dokumentennummer As Variant
Public revision As Variant
Public Author As Variant
Public Reviewer As Variant
Public Approver As Variant
Public datum As Variant
Public AIC As Variant
Public dat As Variant
Public Description2 As Variant
Public Description1 As Variant
Public beenden As Variant

Private Sub CommandButton1_Click()
    Application.ScreenUpdating = False: Application.Calculation = xlManual

    frm_Rev0.Hide
         
    Dokumentennummervorlage = Range("dnummer").Value
    
    'es wird gepr|fffd|ft ob die gr|fffd|nen Mussfelder ausgef|fffd|llt sind
For Each objGr|fffd|neTextBoxen In Controls       'jedes Kontrollfeld wird gepr|fffd|ft (nicht nur Text Boxen)
    If TypeName(objGr|fffd|neTextBoxen) = "TextBox" Then     'es wird gepr|fffd|ft ob es sich bei der Control um eine TextBox handelt
        If objGr|fffd|neTextBoxen.BackColor = &HC0FFC0 Then          'falls das Feld gr|fffd|n ist...
            If objGr|fffd|neTextBoxen.Value = "" Then                '... und das Feld leer ist...
                MsgBox "all green fields must be filled out"    '... wird die MsgBox angezeigt
                frm_Rev0.Show
                Exit Sub
            End If
        End If
    End If
Next


'der Author und der Reviewer d|fffd|rfen nicht die selbe Person sein
If TextBox7.Value = TextBox8.Value Then
     MsgBox "Author and Reviewer can not be the same person => Four Eye Principle"
        TextBox8.Value = ""
        frm_Rev0.Show
    Exit Sub
End If
    
    lieferant = TextBox12.Text
    projektnummer = TextBox1.Text
    projektname = TextBox2.Text
    titel = TextBox3.Text
    Dokumentennummer = TextBox4.Text
    Author = TextBox7.Text
    Reviewer = TextBox8.Text
    Approver = TextBox9.Text
    datum = TextBox11.Text
    
    'einstellungen wie revisionsart, ob vorlage oder nicht k|fffd|nnen im folgenden form eingestellt werden
    If projektnummer <> "P-9999" And ThisWorkbook.CustomDocumentProperties("Quelle").Value = "Vorlage" Then
        frm_makro_einstellungen.Show
    End If
    
    If ThisWorkbook.CustomDocumentProperties("Interne Revisionen").Value = "ja" Then
        revision = "0.0"
        Sheets("Coversheet").Range("alle_rev_nr").NumberFormat = "0.0"
    ElseIf projektnummer = "P-9999" Then
        revision = "V00"
    Else
        revision = "00"
    End If
    If TextBox6.Text = "" Then  'falls kein AIC einge|fffd|ft wurde wird automatisch 000000 eingef|fffd|gt
        AIC = "'000000"
    Else
        AIC = TextBox6.Text
    End If
      

    
'setzt die Revisionseintr|fffd|ge auf schwarz und l|fffd|scht sie
    Range("revisionen").ClearContents
    
    If ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "ja" Then
        Range("revisionen,pnummer,pname,aic,doctype,supplier,dname,dnummer,vorlagennummer").Font.Color = wdColorBlack
    ElseIf ThisWorkbook.CustomDocumentProperties("Status").Value = "Projektvorlage" Then
        Range("pnummer,pname,supplier").Font.Color = wdColorBlack
    End If
    
    Sheets("Coversheet").Select
    Range("rev00").Value = "First issue"
    Range("dname,aic").Select

'ist es ein execution projekt, werden die werte scharz eingef|fffd|rbt
    
    
    Range("vorlagennummer").Value = Dokumentennummervorlage
    Range("dname").Value = titel      'Title = Dokumententitel
    Range("dnummer").Value = Dokumentennummer & "-" & revision      'Subject/Thema = Dokumentennummer + Revision
    Range("prod0").Value = Author      'Author = Author
    Range("pname").Value = projektname   'Keywords/Stichw|fffd|rter = Projektname
    Range("aic").Value = AIC
    Range("pnummer").Value = projektnummer     'Category = Projektnummer
    Range("resp0").Value = Reviewer     'Manager = Reviewer
    Range("own0").Value = Approver     'Company/Firma = Approver
    Range("_rev05").Value = "5"
    Range("_rev04").Value = "4"
    Range("_rev03").Value = "3"
    Range("_rev02").Value = "2"
    Range("_rev01").Value = "1"
    reihe = Range("dprod0").Row
    zeile = Range("dprod0").Column
    variable = 0
    Do While variable < 3
        Cells(reihe, zeile + variable).Select
        Selection.Value = datum     'Comments = Datum
        variable = variable + 1
    Loop
   
    If ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "ja" Then
        frmDocType.Show
    End If
   
   If ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "janein" Then
        ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "ja"
    End If
    If ThisWorkbook.CustomDocumentProperties("Status").Value = "Projektvorlage" Then
        ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "ja"
    End If

'    'Der Projektname wird in den Tabellen Left Header eingef|fffd|gt
'    Dim ws As Worksheet
'    For Each ws In ThisWorkbook.Worksheets
'        If ws.Name = "Coversheet" Then
'            ws.PageSetup.LeftHeader = ""
'        Else
'            ws.PageSetup.LeftHeader = projektname
'        End If
'    Next ws
   
' Bestimmt den Pfad wo gespeichert werden soll (Desktop)
    Application.DisplayAlerts = False
    strPfad = Environ("UserProfile") & "\Desktop\"
    
' Speichert das Dokument
    Call eigenschaften_ausf|fffd|llen
    ThisWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "nein"
    
     If InStr(" ", ThisWorkbook.CustomDocumentProperties("Document Type").Value) > 0 Then
        erster_leerschlag = InStr(ThisWorkbook.CustomDocumentProperties("Document Type").Value, " ")
        doctype = Left(ThisWorkbook.CustomDocumentProperties("Document Type").Value, erster_leerschlag - 1)
    Else
        doctype = ThisWorkbook.CustomDocumentProperties("Document Type").Value
    End If

   
   If ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja" Then
        ThisWorkbook.SaveAs Filename:=strPfad & doctype & "-" & lieferant & "-" & Dokumentennummer & "_" & revision & "_" & titel & ".xlsm"
   Else
        ThisWorkbook.SaveAs Filename:=strPfad & Dokumentennummer & "_" & revision & "_" & titel & ".xlsm"
   End If
       

    Application.DisplayAlerts = True
    MsgBox "File saved on Desktop"
    
Application.ScreenUpdating = True: Application.Calculation = xlAutomatic

'positionierung der Grafik, weil sie zum teil verschoben wird
        ActiveSheet.Shapes.Range(Array("Picture 11")).Select
        With Selection.ShapeRange
                .Top = Range("pnummer").Offset(1, 0).Top
                .Left = Range("pnummer").Left
                .IncrementLeft 5
                .IncrementTop 5
        End With
    Unload Me
    
    Range("c50").Select
End Sub


Private Sub CommandButton2_Click()
      frm_Rev0.Hide
      beenden = "ja"
      
      
End Sub
Private Sub eigenschaften_ausf|fffd|llen()

   With ThisWorkbook
        .CustomDocumentProperties("Author").Value = Author
        .CustomDocumentProperties("Reviewer").Value = Reviewer
        .CustomDocumentProperties("Approver").Value = Approver
        .CustomDocumentProperties("Rev Date").Value = datum
        .CustomDocumentProperties("AIC").Value = AIC
        .CustomDocumentProperties("Title").Value = titel
        .CustomDocumentProperties("Doc Number").Value = Dokumentennummer
        .CustomDocumentProperties("Revision").Value = revision
        .CustomDocumentProperties("Projektnummer").Value = projektnummer
        .CustomDocumentProperties("Projektname").Value = projektname
       ' .CustomDocumentProperties("Quelle").Value = "Vorlage"
    End With

End Sub

Private Sub CommandButton3_Click()
   

End Sub
Private Sub TextBox11_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'On Error GoTo CommandButton2_Click

If TextBox11.Value = "" Then
Exit Sub
End If

If IsDate(Me.TextBox11) Then
Exit Sub
Else

MsgBox "Date is not correct, use _dd.mm.yyyy_ format"
'frm_Rev0.Hide
'frm_Rev0.Show
Exit Sub

End If




End Sub
Private Sub TextBox3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
        Case 8, 32, 43 To 46, 48 To 57, 65 To 90, 95, 97 To 122, 129 To 167, 181 To 183, 187 To 203, 208 To 218, 224 To 237
        Case Else
            KeyAscii = 0
           ' Me.Text0.SetFocus
    End Select

End Sub
Private Sub TextBox4_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
   Select Case KeyAscii
        Case 8, 32, 43 To 46, 48 To 57, 65 To 90, 95, 97 To 122, 129 To 167, 181 To 183, 187 To 203, 208 To 218, 224 To 237
        Case Else
            KeyAscii = 0
           ' Me.Text0.SetFocus
    End Select
End Sub
Private Sub TextBox6_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii > 96 And KeyAscii < 123 Then
        MsgBox "use CAPITAL letters"
    Else
    End If
  
  Select Case KeyAscii
        Case 8, 43 To 46, 48 To 57, 65 To 90, 142, 153 To 154
        Case Else
            KeyAscii = 0
    End Select
    
End Sub
Private Sub UserForm_Initialize()
'On Error GoTo 1
'    Sheets("Coversheet").Visible = True
'    Sheets("Coversheet").Select
'    GoTo 2
'1
'    Sheets(1).Visible = True
'    Sheets(1).Select
'2
       
    TextBox1.Text = ThisWorkbook.CustomDocumentProperties("Projektnummer").Value
    TextBox2.Text = ThisWorkbook.CustomDocumentProperties("Projektname").Value
    TextBox7.Text = Environ("username")
    TextBox11.Text = Format(Date, "dd.MM.yyyy")
    TextBox12.Text = ThisWorkbook.CustomDocumentProperties("Supplier").Value

End Sub



Attribute VB_Name = "frm_Rev1_plus_int_ext"
Attribute VB_Base = "0{2D62EE0C-B67A-44BB-8957-B5771C32B5E3}{4AB72D6D-63DA-4E98-9829-FF1B4F0C0C83}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Public revision As Variant, Author As Variant, Reviewer As Variant, Approver As Variant, lieferant As Variant
Public datum As Variant, dat As Variant, Description1 As Variant, doktyp As Variant
Public AIC As Variant, Description2 As Variant, Dokumentennummer As Variant, titel As Variant
Public Sub CommandButton1_Click()
     ThisWorkbook.Sheets("Coversheet").Select
     
    frm_Rev1_plus_int_ext.Hide
    Call fehler
    
    l|fffd|ngeRevision = Len(ThisWorkbook.CustomDocumentProperties("Revision").Value)
    punktPos = InStr(ThisWorkbook.CustomDocumentProperties("Revision").Value, ".")
    interne_rev_eigensch = Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, l|fffd|ngeRevision - punktPos)
    externe_rev_eigensch = Left(ThisWorkbook.CustomDocumentProperties("Revision").Value, punktPos - 1)
    
    If interne_rev_eigensch = 0 And Me.revInternal <> 1 _
     And ThisWorkbook.CustomDocumentProperties("RevType").Value = "internal" Then
        MsgBox "The first internal Revision Number must be 1"
        Me.revInternal.Value = 1
        frm_Rev1_plus_int_ext.Show
    End If
    
    revision = Me.revCustomer.Text & "." & Me.revInternal
    Author = TextBox7.Text
    Reviewer = TextBox8.Text
    Approver = TextBox9.Text
    datum = TextBox11.Text
    Description2 = TextBox12.Text
    Description1 = TextBox13.Text
    Dokumentennummer = Me.txt_doc_number.Value 'ThisWorkbook.CustomDocumentProperties("Doc Number").Value
    titel = Me.txt_doc_name.Value 'ThisWorkbook.BuiltinDocumentProperties("Title").Value
    ThisWorkbook.Sheets("Coversheet").Range("dname").Value = titel
   Dim objGr|fffd|neTextBoxen As Control
   
'es wird gepr|fffd|ft ob die gr|fffd|nen Mussfelder ausgef|fffd|llt sind
For Each objGr|fffd|neTextBoxen In Controls       'jedes Kontrollfeld wird gepr|fffd|ft (nicht nur Text Boxen)
    If TypeName(objGr|fffd|neTextBoxen) = "TextBox" Then     'es wird gepr|fffd|ft ob es sich bei der Control um eine TextBox handelt
        If objGr|fffd|neTextBoxen.BackColor = &HC0FFC0 Then          'falls das Feld gr|fffd|n ist...
            If objGr|fffd|neTextBoxen.Value = "" Then                '... und das Feld leer ist...
                MsgBox "all green fields must be filled out"    '... wird die MsgBox angezeigt
                frm_Rev1_plus_int_ext.Show
                Exit Sub
            End If
        End If
    End If
Next
    
    If revision = "0" Or revision = "0.0" Then
        MsgBox "this button shall only be used for revision 01 and higher"
        Exit Sub
        Else
    End If
       
    If interne_rev_eigensch = 0 And externe_rev_eigensch > 5 Then
        Call revision6
    ElseIf interne_rev_eigensch = 0 And externe_rev_eigensch = 5 Then
        Call revision6
    ElseIf interne_rev_eigensch = 0 And externe_rev_eigensch < 6 Then
        Call revision1
    ElseIf interne_rev_eigensch > 0 And externe_rev_eigensch < 6 Then
        Call revision1
    ElseIf interne_rev_eigensch > 0 And externe_rev_eigensch > 4 Then
        Call revision1
    Else
        Call revision6
    End If
    
22

    

    Call eigenschaften_ausf|fffd|llen
    
  
    
    
' Bestimmt den Pfad wo gespeichert werden soll (Desktop)
    Application.DisplayAlerts = False
    strPfad = Environ("UserProfile") & "\Desktop\"
    
 ' Speichert das Dokument


    endung = ".xlsm"
    
    lieferant = ThisWorkbook.CustomDocumentProperties("supplier").Value
   doktyp = ThisWorkbook.CustomDocumentProperties("Document Type").Value
    
         If Left(revisionV, 1) = "V" Then
        If ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja" Then
            ThisWorkbook.SaveAs Filename:=strPfad & doktyp & "-" & lieferant & "-" & Dokumentennummer & "_V" & revision & "_" & titel & endung
        Else
            ThisWorkbook.SaveAs Filename:=strPfad & Dokumentennummer & "_" & revision & "_V" & titel & endung
        End If
     Else
        If ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja" Then
            ThisWorkbook.SaveAs Filename:=strPfad & doktyp & "-" & lieferant & "-" & Dokumentennummer & "_" & revision & "_" & titel & endung
        Else
            ThisWorkbook.SaveAs Filename:=strPfad & Dokumentennummer & "_" & revision & "_" & titel & endung
        End If
     End If
    Application.DisplayAlerts = True
    MsgBox "File saved on Desktop"
    Unload Me
   Exit Sub
     
End Sub

Sub revision1()
    punktPos = InStr(revision, ".")
    revision_makro = Left(revision, punktPos - 1)
    zwischenRev = Me.revInternal.Value 'Right(revision, 1)
    If zwischenRev <> 0 Then
        revision_makro = revision_makro + 1
    End If

    If revision_makro > 5 Then
        revision_makro = 5
    End If
    
    zeile = Range("prod0").Row
    spalte = Range("_rev01").Column
    Range("dnummer").Value = Dokumentennummer & " - " & revision    'Subject/Thema = Dokumentennummer + Revision

     
     Cells(zeile - revision_makro * 2, spalte).Value = "'" & revision
     Cells(zeile - revision_makro * 2, spalte + 1).Value = Author  'Author = Author
     Cells(zeile - revision_makro * 2, spalte + 2).Value = Reviewer 'Manager = Reviewer
     Cells(zeile - revision_makro * 2, spalte + 3).Value = Approver  'Company/Firma = Approver
     Cells(zeile - revision_makro * 2, spalte + 4).Value = Description2
    Cells(zeile + 1 - revision_makro * 2, spalte + 4).Value = Description1
      

    
    variable = 0
    Do While variable < 3
    Cells(zeile + 1 - revision_makro * 2, spalte + 1 + variable).Value = datum
        variable = variable + 1
    Loop
    

    
End Sub
Sub revision6()
     zeile = Range("prod5").Row
    Range("rev_kopierbereich").Select
    Selection.Copy
    Application.DisplayAlerts = False
    Range("_rev04").Select
    ActiveSheet.Paste
    Range("_rev05").Value = revision
    Application.DisplayAlerts = True
    

     Range("dnummer").Value = Dokumentennummer & " - " & revision    'Subject/Thema = Dokumentennummer + Revision
    
     
    Range("prod5").Value = Author    'Author = Author
    Range("resp5").Value = Reviewer  'Manager = Reviewer
    Range("_own5").Value = Approver    'Company/Firma = Approver
    Range("_rev15").Value = Description1
    Range("_rev25").Value = Description2
    
    spalte = Range("_rev01").Column
      
    
    variable = 1
    Do While variable < 4
        Cells(zeile + 1, spalte + variable).Value = datum
        variable = variable + 1
    Loop
    
    'weil beim kopieren die Zellen nicht mehr verbunden sind, werden sie hier wieder hergestellt
    variable2 = Sheets("Coversheet").Range("_rev25").Row
    variable3 = variable2
    letzteZelle = Sheets("Coversheet").Range("_rev11").Row
    Do While variable2 < letzteZelle + 1
        If variable2 = 100 Then Exit Sub
        Range("F" & variable2 & ":I" & variable2 & "").Select
        Selection.Merge
        variable2 = variable2 + 1
    Loop
     Do While variable3 < letzteZelle + 1
        If variable3 = 100 Then Exit Sub
        Range("B" & variable3 & ":B" & variable3 + 1 & "").Select
        Selection.Merge
        variable3 = variable3 + 2
    Loop
    
End Sub

Private Sub eigenschaften_ausf|fffd|llen()

   With ThisWorkbook
            .CustomDocumentProperties("Author").Value = Author
            .CustomDocumentProperties("Reviewer").Value = Reviewer
            .CustomDocumentProperties("Approver").Value = Approver
             .CustomDocumentProperties("Rev Date").Value = datum
            .CustomDocumentProperties("Revision").Value = revision
            .CustomDocumentProperties("Title").Value = titel
            .CustomDocumentProperties("Doc Number").Value = Dokumentennummer
    End With

End Sub
Private Sub CommandButton2_Click()
    
    'frm_Rev1_plus_int_ext.Hide
    Unload Me
    End
    
End Sub
Private Sub CommandButton3_Click()

    Dim objControl As Control

   For Each objControl In Controls
      Select Case TypeName(objControl)
         Case "TextBox"
            objControl.Text = ""
      End Select
   Next

    Author = ThisWorkbook.BuiltinDocumentProperties("Author").Value
    Reviewer = ThisWorkbook.BuiltinDocumentProperties("Manager").Value
    
    Approverel = ThisWorkbook.BuiltinDocumentProperties("Company").Value
    l|fffd|nge_Approverel = Len(Approverel)
    zeichen_Approverel = InStr(1, Approverel, "_", vbBinaryCompare)
    If zeichen_Approverel = "0" Then
    GoTo 1
    End If
    Approver = Left(Approverel, zeichen_Approverel - 1)

1

    revision = Right(ThisWorkbook.BuiltinDocumentProperties("Subject").Value, 2) + 1

    TextBox5.Text = revision
    TextBox7.Text = Author
    TextBox8.Text = Reviewer
    TextBox9.Text = Approver
    TextBox11.Text = Date
        
End Sub


Private Sub revCustomer_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Dim revCust As Long
  If Not IsNumeric(Me.revCustomer.Value) Then 'KeyAscii < 47 Or KeyAscii > 58 Then
        MsgBox "use numbers"
        Me.revCustomer.Value = ""
    End If
  
  Select Case KeyAscii
        Case 48 To 57
        Case Else
            KeyAscii = 0
    End Select
    
    punktPos = InStr(ThisWorkbook.CustomDocumentProperties("Revision").Value, ".")
    revCust = Left(ThisWorkbook.CustomDocumentProperties("Revision").Value, punktPos - 1)
    revIntern = Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, 1)
    
    If revCust + 1 > Me.revCustomer.Value Then
        MsgBox "This revision is already taken. Choose a higher number"
        Me.revCustomer.Value = revCust + 1
    End If
End Sub

Private Sub revInternal_Exit(ByVal Cancel As MSForms.ReturnBoolean)
Dim revIntern As Long
   If Not IsNumeric(Me.revInternal.Value) Then 'KeyAscii < 47 Or KeyAscii > 58 Then
        MsgBox "use numbers"
        Me.revInternal.Value = ""
    End If
  
'  Select Case KeyAscii
'        Case 48 To 57
'        Case Else
'            KeyAscii = 0
'    End Select
    
    l|fffd|ngeRevision = Len(ThisWorkbook.CustomDocumentProperties("Revision").Value)
    punktPos = InStr(ThisWorkbook.CustomDocumentProperties("Revision").Value, ".")
    revCust = Left(ThisWorkbook.CustomDocumentProperties("Revision").Value, punktPos - 1)
    revIntern = Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, l|fffd|ngeRevision - punktPos)
    
    If revIntern + 1 > Me.revInternal.Value Then
        MsgBox "This revision is already taken. Choose a higher number"
        Me.revInternal.Value = revIntern + 1
    End If

End Sub

Private Sub TextBox11_Exit(ByVal Cancel As MSForms.ReturnBoolean)
l|fffd|ngedatum = Len(Me.TextBox11)
If l|fffd|ngedatum <> 10 Or IsDate(TextBox11) = False Then
    MsgBox "Date needs to be added in _dd.mm.yyyy_ format"
    Exit Sub
End If
End Sub
Private Sub TextBox5_Exit(ByVal Cancel As MSForms.ReturnBoolean)
Dim lngLaenge As Long

lngLaenge = Len(Me.TextBox5)
    If lngLaenge = 1 Then
         TextBox5 = "0" & TextBox5
    End If
End Sub
Sub fehler()
On Error GoTo 1

ThisWorkbook.Unprotect
1
End Sub


Private Sub TextBox8_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If LCase(Me.TextBox8.Text) = LCase(Me.TextBox7.Text) Then
        MsgBox "For quality reasons, Author and Reviewer might not be the same Person"
        Me.TextBox8.Value = ""
    End If
End Sub

Private Sub UserForm_Initialize()
On Error GoTo Testmakro_Err
Testmakro_Err:
If Not Err.Number = 0 Then  'wird nur durchlaufen wenn eine Fehlermeldung besteht
    If Err.Number = "40351" Then    'bei dieser fehlermeldung ist oft das "normal.dot" defekt
        y_fehlermeldung_40351.Show
        Err.Clear
        End     'makro wird beendet
    Else
        MsgBox "im Makro ist ein Fehler aufgetreten. Es kann sein das Funktionen eingeschr|fffd|nkt sind. Word oder Computer neu starten" & vbCrLf & vbCrLf & _
            "there has been a mistake in the Macro. Possibly some functions are limited. Start Word or Computer anew"
    End If
End If

    Dim objControl As Control
    
    l|fffd|ngeRevision = Len(ThisWorkbook.CustomDocumentProperties("Revision").Value)
    punktPos = InStr(ThisWorkbook.CustomDocumentProperties("Revision").Value, ".")
    revCust = Left(ThisWorkbook.CustomDocumentProperties("Revision").Value, punktPos - 1)
    revIntern = Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, l|fffd|ngeRevision - punktPos)
    
    aktrevision = Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, 1)
    Author = ThisWorkbook.CustomDocumentProperties("Author").Value  ' 3 Autor = Author
    Reviewer = ThisWorkbook.CustomDocumentProperties("Reviewer").Value  '20 Manager = Reviewer
    Approver = ThisWorkbook.CustomDocumentProperties("Approver").Value
    If ThisWorkbook.CustomDocumentProperties("RevType").Value = "customer" Then     'Fals es eine Revision der Vorlage ist
        revCust = revCust + 1
        revIntern = 0
        Me.revInternal.Enabled = False
        Me.revCustomer.Enabled = True
    Else
        revIntern = revIntern + 1
        Me.revInternal.Enabled = True
        Me.revCustomer.Enabled = False
    End If
    
    If Author = " " Then: Author = ""
    If Reviewer = " " Then: Reviewer = ""
    If Approver = " " Then: Approver = ""


    Me.revCustomer.Text = revCust
    Me.revInternal.Text = revIntern
    TextBox7.Text = Author
    TextBox8.Text = Reviewer
    TextBox9.Text = Approver
    TextBox11.Text = Format(Date, "dd.mm.yyyy")
    Me.txt_doc_number.Value = ThisWorkbook.CustomDocumentProperties("Doc Number").Value
    Me.txt_doc_name.Value = ThisWorkbook.CustomDocumentProperties("Title").Value
        
End Sub




Attribute VB_Name = "frm_extern_interne_revision"
Attribute VB_Base = "0{C9BF7E03-6149-4F86-875B-49045481A9C1}{0F4BF045-764F-49D6-BC6E-9F6853C6F1F1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click()
    ThisWorkbook.CustomDocumentProperties("RevType").Value = "internal"
    Unload Me
    frm_Rev1_plus_int_ext.Show
End Sub
Private Sub CommandButton2_Click()
    ThisWorkbook.CustomDocumentProperties("RevType").Value = "customer"
    Unload Me
    frm_Rev1_plus_int_ext.Show
End Sub


Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "frm_makro_einstellungen"
Attribute VB_Base = "0{0C281AD1-C98B-4E5B-A7F4-9F5636F63928}{46B23D16-D68D-42C2-A060-EEDE8EE89ADD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton2_Click()
    If Me.opt_docType_n.Value = True Then
        ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "nein"
    Else
        ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja"
    End If

    If Me.opt_intExt_n = True Then
        ThisWorkbook.CustomDocumentProperties("Interne Revisionen").Value = "nein"
    Else
        ThisWorkbook.CustomDocumentProperties("Interne Revisionen").Value = "ja"
    End If
    
    If Me.opt_Template_n = True Then
        ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "ja"
    Else
        ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "nein"
        
        'falls es eine Vorlage ist wird der DokTyp automatisch auf "JTE" gesetzt
        Sheets("Coversheet").Range("doctype").Value = "JTE"
        ThisWorkbook.CustomDocumentProperties("Document Type").Value = "JTE"
        ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "janein"
        ThisWorkbook.CustomDocumentProperties("Status").Value = "Projektvorlage"
    End If
    If Me.opt_lang_y = True Then
        MsgBox "Option Language Revision is not activated yet"
    End If
    
    ThisWorkbook.CustomDocumentProperties("Quelle").Value = "Projekt"
    
    Unload Me
    
End Sub

Attribute VB_Name = "frm_makros_kopieren"
Attribute VB_Base = "0{13730CC7-CD05-4890-B519-22AA871EF9EA}{A048F602-26F7-43C8-B760-BBB4ED406F93}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmd_alt_l|fffd|schen_Click()
    ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "kopieren_l|fffd|schen"
    Unload Me
End Sub
Private Sub cmd_neuer_name_Click()
    ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "kopieren_neu"
    Unload Me
End Sub
Private Sub cmd_nicht_kopieren_Click()
    ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "nicht_kopieren"
    Unload Me
End Sub
Private Sub CommandButton1_Click()
    Unload Me
    End
End Sub
Private Sub UserForm_Initialize()
    Me.lbl_ArbeitsmappeNeu = "ist bereits in der Datei  *" & ThisWorkbook.Name & "*     vorhanden"
    Me.lbl_text1 = "Das " & ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value & "*  "
End Sub
Attribute VB_Name = "frm_rev1_plus"
Attribute VB_Base = "0{F86AC698-C596-4E84-9CA9-241427BC8635}{D98787D2-C8CC-418D-88B6-1F06D3BB25AE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public revisionV As Variant, titel
Public Author As Variant
Public Reviewer As Variant
Public Approver As Variant
Public revision As Variant
Public datum As Variant
Public dat As Variant
Public Description1 As Variant
Public Description2 As Variant
Public Dokumentennummer As Variant

Public Sub CommandButton1_Click()
Application.ScreenUpdating = False: Application.Calculation = xlManual
    frm_rev1_plus.Hide
        
         
    revisionV = TextBox8.Text
    Author = TextBox3.Text
    Reviewer = TextBox4.Text
    Approver = TextBox5.Text
    datum = TextBox7.Text
    Description2 = TextBox2.Text
    Description1 = TextBox1.Text
    Dokumentennummer = Me.txt_doc_number.Value 'ThisWorkbook.CustomDocumentProperties("Doc Number").Value
    titel = Me.txt_doc_name.Value 'ThisWorkbook.BuiltinDocumentProperties("Title").Value
    dat = 1
    lieferant = ThisWorkbook.CustomDocumentProperties("supplier").Value
    doktyp = ThisWorkbook.CustomDocumentProperties("Document Type").Value
    
'es wird gepr|fffd|ft ob die gr|fffd|nen Mussfelder ausgef|fffd|llt sind
    For X = 1 To 8 'And 7 And 11
        If X = 2 Then: X = 3
        If X = 4 Then: X = 7
    If Me.Controls("TextBox" & X).Value = "" And Me.Controls("TextBox" & X).Visible = True Then
        Name1 = Me.Controls("Label" & X).Caption
        MsgBox "" & Name1 & " must be filled out"
            frm_rev1_plus.Show
        Exit Sub
    End If
    Next X
    
    revision = Right(revision, 2)   'hier wird das V herausgenommen, falls vorhanden
    
    If revision = "0" Or revision = "00" Then
    MsgBox "this button shall only be used for revision 01 and higher"
    Exit Sub
    Else
    End If

    revision = Right(revisionV, 2)
    l|fffd|ngeRevision = Len(revision)
    
    If l|fffd|ngeRevision < 2 Then
    revision = "0" & revision
    Else
    End If
    
    If revision < 6 Then
        Call revision1
    Else
        Call revision6
    
    End If

    ThisWorkbook.CustomDocumentProperties("Author").Value = Author
    ThisWorkbook.CustomDocumentProperties("Reviewer").Value = Reviewer
    ThisWorkbook.CustomDocumentProperties("Approver").Value = Approver
    If Left(revisionV, 1) = "V" Then
        ThisWorkbook.CustomDocumentProperties("Revision").Value = "V" & revision
    Else
        ThisWorkbook.CustomDocumentProperties("Revision").Value = revision
    End If
    ThisWorkbook.CustomDocumentProperties("Title").Value = titel
    ThisWorkbook.CustomDocumentProperties("Doc Number").Value = Dokumentennummer
    ThisWorkbook.Sheets("Coversheet").Range("dname").Value = titel
    
' Bestimmt den Pfad wo gespeichert werden soll (Desktop)
    Application.DisplayAlerts = False
    strPfad = Environ("UserProfile") & "\Desktop\"
    
' Speichert das Dokument
     If Left(revisionV, 1) = "V" Then
        If ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja" Then
            ThisWorkbook.SaveAs Filename:=strPfad & doktyp & "-" & lieferant & "-" & Dokumentennummer & "_V" & revision & "_" & titel & endung
        Else
            ThisWorkbook.SaveAs Filename:=strPfad & Dokumentennummer & "_" & "V" & revision & "_" & titel & endung
        End If
     Else
        If ThisWorkbook.CustomDocumentProperties("DocType und Supplier vor Nummer anzeigen").Value = "ja" Then
            ThisWorkbook.SaveAs Filename:=strPfad & doktyp & "-" & lieferant & "-" & Dokumentennummer & "_" & revision & "_" & titel & endung
        Else
            ThisWorkbook.SaveAs Filename:=strPfad & Dokumentennummer & "_" & revision & "_" & titel & endung
        End If
     End If
     
    Unload Me
    Application.DisplayAlerts = True
    MsgBox "File saved on Desktop"

 Application.ScreenUpdating = True: Application.Calculation = xlAutomatic
 
    'positionierung der Grafik, weil sie zum teil verschoben wird
        ActiveSheet.Shapes.Range(Array("Picture 11")).Select
        With Selection.ShapeRange
                .Top = Range("pnummer").Offset(1, 0).Top
                .Left = Range("pnummer").Left
                .IncrementLeft 5
                .IncrementTop 5
        End With
 
End Sub

Sub revision1()
    zeile = Range("prod0").Row
    If Left(revisionV, 1) = "V" Then
     Range("dnummer").Value = Dokumentennummer & " - V" & revision    'Subject/Thema = Dokumentennummer + Revision
     Else
     Range("dnummer").Value = Dokumentennummer & " - " & revision    'Subject/Thema = Dokumentennummer + Revision
     End If
     
     spalte = Range("_rev01").Column
     
     Cells(zeile - revision * 2, spalte + 1).Value = Author  'Author = Author
     Cells(zeile - revision * 2, spalte + 2).Value = Reviewer 'Manager = Reviewer
     Cells(zeile - revision * 2, spalte + 3).Value = Approver  'Company/Firma = Approver
     Cells(zeile - revision * 2, spalte + 4).Value = Description1
    Cells(zeile + 1 - revision * 2, spalte + 4).Value = Description2
      
    If Left(revisionV, 1) = "V" Then    'falls Vorlagenprojekt, wird der text rot gef|fffd|rbt
        Cells(zeile - revision * 2, spalte + 1).Font.Color = -16776961
        Cells(zeile - revision * 2, spalte + 2).Font.Color = -16776961
        Cells(zeile - revision * 2, spalte + 3).Font.Color = -16776961
        Cells(zeile - revision * 2, spalte + 4).Font.Color = -16776961
        Cells(zeile + 1 - revision * 2, spalte + 4).Font.Color = -16776961
    End If
    
    variable = 1
    Do While variable < 4
    Cells(zeile + 1 - revision * 2, spalte + variable).Select
    Selection.Value = datum
     If Left(revisionV, 1) = "V" Then
        Selection.Font.Color = -16776961
    End If
    variable = variable + 1
    Loop
    
End Sub
Sub revision6()
    zeile = Range("prod5").Row
    Range("rev_kopierbereich").Select
    Selection.Copy
    Range("_rev04").Select
    Application.DisplayAlerts = False
    ActiveSheet.Paste
    Application.DisplayAlerts = True
    Range("_rev05").Value = revision
    Calculate
    
    spalte = Range("_rev01").Column
    
    If Left(revisionV, 1) = "V" Then
     Range("dnummer").Value = Dokumentennummer & " - V" & revision    'Subject/Thema = Dokumentennummer + Revision
     Else
     Range("dnummer").Value = Dokumentennummer & " - " & revision    'Subject/Thema = Dokumentennummer + Revision
     End If
     
    Range("prod5").Value = Author    'Author = Author
    Range("resp5").Value = Reviewer  'Manager = Reviewer
    Range("_own5").Value = Approver    'Company/Firma = Approver
    Range("_rev15").Value = Description2
    Range("_rev25").Value = Description1
      
    If Left(revisionV, 1) = "V" Then    'falls Vorlagenprojekt, wird der text rot gef|fffd|rbt
        Range("prod5").Font.Color = -16776961
      Range("resp5").Font.Color = -16776961
      Range("_own5").Font.Color = -16776961
      Range("_rev15").Font.Color = -16776961
      Range("_rev25").Font.Color = -16776961
    End If
      
    
    variable = 1
    Do While variable < 4
    Cells(zeile + 1, spalte + variable).Select
    Selection.Value = datum
    If Left(revisionV, 1) = "V" Then
        Selection.Font.Color = -16776961
    End If
    variable = variable + 1
    Loop
    
'weil beim kopieren die Zellen nicht mehr verbunden sind, werden sie hier wieder hergestellt
    variable2 = Sheets("Coversheet").Range("_rev25").Row
    variable3 = variable2
    letzteZelle = Sheets("Coversheet").Range("_rev11").Row
    Do While variable2 < letzteZelle + 1
        If variable2 = 100 Then Exit Sub
        Range("F" & variable2 & ":I" & variable2 & "").Select
        Selection.Merge
        variable2 = variable2 + 1
    Loop
     Do While variable3 < letzteZelle + 1
        If variable3 = 100 Then Exit Sub
        Range("B" & variable3 & ":B" & variable3 + 1 & "").Select
        Selection.Merge
        variable3 = variable3 + 2
    Loop

End Sub
Private Sub CommandButton2_Click()
        Unload Me
End Sub



Private Sub TextBox7_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'On Error GoTo CommandButton2_Click

If TextBox7.Value = "" Then
Exit Sub
End If


If IsDate(Me.TextBox7) Then
Exit Sub
Else

MsgBox "Date is not correct, use _dd.mm.yyyy_ format"

Exit Sub

End If

End Sub
Private Sub TextBox8_Exit(ByVal Cancel As MSForms.ReturnBoolean)

Dim lngLaenge As Long

lngLaenge = Len(Me.TextBox8)
    
    If lngLaenge = 1 Then
         TextBox8 = "0" & TextBox8
    End If
    
End Sub

Private Sub UserForm_Initialize()
On Error GoTo 1
    Sheets("Coversheet").Visible = True
    Sheets("Coversheet").Select
    GoTo 2
1
    Sheets(1).Visible = True
    Sheets(1).Select
2
    
    Dim objControl As Control
    Dim revision1 As Variant
    Dim revision2 As Variant
   For Each objControl In Controls
      Select Case TypeName(objControl)
         Case "TextBox"
            objControl.Text = ""
      End Select
   Next
     
    Author = ThisWorkbook.CustomDocumentProperties("Author").Value
    Reviewer = ThisWorkbook.CustomDocumentProperties("Reviewer").Value
    Approver = ThisWorkbook.CustomDocumentProperties("Approver").Value

     If Left(ThisWorkbook.CustomDocumentProperties("Revision").Value, 1) = "V" Then     'Fals es eine Revision der Vorlage ist
        If Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, 2) < 9 Then  'notwendig damit revision dreistellig wird/bleibt
            revision = "V" & "0" & Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, 2) + 1
        Else
            revision = "V" & Right(ThisWorkbook.CustomDocumentProperties("Revision").Value, 2) + 1
        End If
    Else
        revision = ThisWorkbook.CustomDocumentProperties("Revision").Value + 1
    End If
        
        
    TextBox8.Text = revision
    
    TextBox3.Text = Author
    TextBox4.Text = Reviewer
    TextBox5.Text = Approver
    TextBox7.Text = Date
    Me.txt_doc_number.Value = ThisWorkbook.CustomDocumentProperties("Doc Number").Value
    Me.txt_doc_name.Value = ThisWorkbook.CustomDocumentProperties("Title").Value
End Sub

Private Sub UserForm_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

End Sub


Attribute VB_Name = "info"
Attribute VB_Base = "0{F1162C1C-1E48-4708-A9B3-350D138A31C1}{38DA2956-F06D-4C9B-9F09-7F6BA59DD0B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub Label4_Click()
    Unload Me

    ThisWorkbook.CustomDocumentProperties("Status").Value = "Vorlagen-Projekt"
    frm_Rev0.Show
End Sub

Private Sub Label5_Click()
    Unload Me

    ThisWorkbook.CustomDocumentProperties("Status").Value = "Projekt"
    frm_Rev0.Show
End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "mod_Rev0_generieren"
Sub Rev_00_aus_PIRS()
'
 Application.ScreenUpdating = False: Application.Calculation = xlManual

    frm_AIC.Show
    Dokumentennummervorlage = Range("dnummer").Value
    
    lieferant = "HZI"
    projektnummer = ThisWorkbook.CustomDocumentProperties("Projektnummer").Value
    projektname = ThisWorkbook.CustomDocumentProperties("Projektname").Value
    titel = ThisWorkbook.CustomDocumentProperties("Title").Value
    Dokumentennummer = ThisWorkbook.CustomDocumentProperties("Doc Number").Value
    Author = ThisWorkbook.CustomDocumentProperties("Author").Value
    Reviewer = ThisWorkbook.CustomDocumentProperties("Reviewer").Value
    Approver = ThisWorkbook.CustomDocumentProperties("Approver").Value
    datum = ThisWorkbook.CustomDocumentProperties("Rev Date").Value
    If datum = "" Then datum = Date
    doctype = ThisWorkbook.CustomDocumentProperties("Document Type").Value
    
       'falls aus dem PIRS nicht nur die 3 buchstaben |fffd|bernommen wurden, so wird der Dokumententyp hier angepasst
    If InStr(1, ThisWorkbook.CustomDocumentProperties("Document Type").Value, " ") > 0 Then
        erster_leerschlag = InStr(ThisWorkbook.CustomDocumentProperties("Document Type").Value, " ")
        doctype = Left(ThisWorkbook.CustomDocumentProperties("Document Type").Value, erster_leerschlag - 1)
        ThisWorkbook.CustomDocumentProperties("Document Type").Value = doctype
    End If
'    'einstellungen wie revisionsart, ob vorlage oder nicht k|fffd|nnen im folgenden form eingestellt werden
'    If projektnummer <> "P-9999" And ThisWorkbook.CustomDocumentProperties("Quelle").Value = "Vorlage" Then
'        frm_makro_einstellungen.Show
'    End If
    
    If ThisWorkbook.CustomDocumentProperties("Interne Revisionen").Value = "ja" Then
        revision = "0.0"
        Sheets("Coversheet").Range("alle_rev_nr").NumberFormat = "0.0"
    ElseIf projektnummer = "P-9999" Then
        revision = "V00"
    Else
        revision = "00"
    End If
    If ThisWorkbook.CustomDocumentProperties("AIC").Value = "" Then  'falls kein AIC einge|fffd|ft wurde wird automatisch 000000 eingef|fffd|gt
        AIC = "'000000"
    Else
        AIC = ThisWorkbook.CustomDocumentProperties("AIC").Value
    End If
      

    
'setzt die Revisionseintr|fffd|ge auf schwarz und l|fffd|scht sie
    Range("revisionen").ClearContents
    
    If ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "ja" Then
        Range("revisionen,pnummer,pname,aic,doctype,supplier,dname,dnummer,vorlagennummer").Font.Color = wdColorBlack
    ElseIf ThisWorkbook.CustomDocumentProperties("Status").Value = "Projektvorlage" Then
        Range("pnummer,pname,supplier").Font.Color = wdColorBlack
    End If
    
    
    Range("rev00").Value = "First issue"
    Range("dname,aic").Select

'ist es ein execution projekt, werden die werte scharz eingef|fffd|rbt
    
    
    Range("vorlagennummer").Value = Dokumentennummervorlage
    Range("dname").Value = titel      'Title = Dokumententitel
    Range("dnummer").Value = Dokumentennummer & "-" & revision      'Subject/Thema = Dokumentennummer + Revision
    Range("prod0").Value = Author      'Author = Author
    'Range("pname").Value = projektname   'Keywords/Stichw|fffd|rter = Projektname
    Range("aic").Value = AIC
   ' Range("pnummer").Value = projektnummer     'Category = Projektnummer
    Range("resp0").Value = Reviewer     'Manager = Reviewer
    Range("own0").Value = Approver     'Company/Firma = Approver
    Range("_rev05").Value = "5"
    Range("_rev04").Value = "4"
    Range("_rev03").Value = "3"
    Range("_rev02").Value = "2"
    Range("_rev01").Value = "1"
    Sheets("Coversheet").Range("doctype").Value = doctype
    reihe = Range("dprod0").Row
    zeile = Range("dprod0").Column
    variable = 0
    Do While variable < 3
        Cells(reihe, zeile + variable).Select
        Selection.Value = datum     'Comments = Datum
        variable = variable + 1
    Loop
   
   
   If ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "janein" Then
        ThisWorkbook.CustomDocumentProperties("Maske mit Doktyp zeigen").Value = "ja"
    End If
    If ThisWorkbook.CustomDocumentProperties("Status").Value = "Projektvorlage" Then
        ThisWorkbook.CustomDocumentProperties("Text schwarz auf Titelblatt").Value = "ja"
    End If

'    'Der Projektname wird in den Tabellen Left Header eingef|fffd|gt
'    Dim ws As Worksheet
'    For Each ws In ThisWorkbook.Worksheets
'        If ws.Name = "Coversheet" Then
'            ws.PageSetup.LeftHeader = " "
'        Else
'            ws.PageSetup.LeftHeader = projektname
'        End If
'    Next ws
   
' Bestimmt den Pfad wo gespeichert werden soll (Desktop)
    Application.DisplayAlerts = False
    strPfad = Environ("UserProfile") & "\Desktop\"
    
' Speichert das Dokument
    'Call eigenschaften_ausf|fffd|llen
    ThisWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "nein"
    
     If InStr(" ", ThisWorkbook.CustomDocumentProperties("Document Type").Value) > 0 Then
        erster_leerschlag = InStr(ThisWorkbook.CustomDocumentProperties("Document Type").Value, " ")
        doctype = Left(ThisWorkbook.CustomDocumentProperties("Document Type").Value, erster_leerschlag - 1)
    Else
        doctype = ThisWorkbook.CustomDocumentProperties("Document Type").Value
    End If

   ThisWorkbook.Save

    Application.DisplayAlerts = True
    MsgBox "File saved in PIRS"
    
Application.ScreenUpdating = True: Application.Calculation = xlAutomatic

'positionierung der Grafik, weil sie zum teil verschoben wird
        ActiveSheet.Shapes.Range(Array("Picture 11")).Select
        With Selection.ShapeRange
                .Top = Range("pnummer").Offset(1, 0).Top
                .Left = Range("pnummer").Left
                .IncrementLeft 5
                .IncrementTop 5
        End With

    
    Range("c50").Select
End Sub

Private Sub eigenschaften_ausf|fffd|llen()

   With ThisWorkbook
        .CustomDocumentProperties("Author").Value = Author
        .CustomDocumentProperties("Reviewer").Value = Reviewer
        .CustomDocumentProperties("Approver").Value = Approver
        .CustomDocumentProperties("Rev Date").Value = datum
        .CustomDocumentProperties("AIC").Value = AIC
        .CustomDocumentProperties("Title").Value = titel
        .CustomDocumentProperties("Doc Number").Value = Dokumentennummer
        .CustomDocumentProperties("Revision").Value = revision
        .CustomDocumentProperties("Projektnummer").Value = projektnummer
        .CustomDocumentProperties("Projektname").Value = projektname
       ' .CustomDocumentProperties("Quelle").Value = "Vorlage"
    End With

End Sub





Attribute VB_Name = "mod_import_makros"
' Damit auf die Projekte und Module zugegriffen werden kann,
' muss in der IDE ein Verweis (Extras/Verweise) auf die
' "Microsoft Visual Basic for Applications Extensibility 5.3"
' gesetzt sein!
Public vbc_name As String
Sub ImportMacros()

Dim strPath As String, nameAlt As String
Dim vbc As Object
Dim WB As Workbook
Dim strDatei As String

ChDir Environ("UserProfile") & "\Desktop\" '<- Vorbelegter Ordner
strDatei = Application.GetOpenFilename(filefilter:="Exceldateien (*.xls*),*.xls*", _
Title:="Choose File")

If strDatei = "Falsch" Then Exit Sub
Set WB = Application.Workbooks.Open(strDatei)
nameAlt = ActiveWorkbook.Name
nameNeu = ThisWorkbook.Name

strPath = Application.Path & "\"
On Error GoTo Errorhandler
'ThisWorkbook.Activate
With ActiveWorkbook.VBProject
    For Each vbc In .VBComponents
        ' Wenn Type = 1 dann ist es ein Standardmodul.
        ' Wenn Type = 3 dann ist es ein Userform
        If vbc.Type = 1 Or vbc.Type = 3 Then
            For Each objVBComponent In ThisWorkbook.VBProject.VBComponents
                If objVBComponent.Name = vbc.Name Then
                    If vbc.Type = 1 Then
                        ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "Modul  *" & vbc.Name
                    Else
                        ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "Foromular  *" & vbc.Name
                    End If
                    frm_makros_kopieren.Show
                    GoTo 44
                End If
            Next
            ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "-"
44
    vbc_name = vbc.Name
            If ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "nicht_kopieren" Then
                GoTo 55
            ElseIf ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "kopieren_neu" Then
                ActiveWorkbook.VBProject.VBComponents(vbc.Name).Name = vbc.Name & "_alt"
                vbc.Export strPath & vbc.Name & ".txt" '& "_alt.txt"
                Workbooks(nameNeu).VBProject.VBComponents.Import strPath & vbc.Name & ".txt" '& "_alt.txt"
                Kill strPath & vbc.Name & ".txt" '& "_alt.txt"
                ActiveWorkbook.VBProject.VBComponents(vbc.Name).Name = vbc_name
            ElseIf ThisWorkbook.CustomDocumentProperties("Makro kopieren Variable").Value = "kopieren_l|fffd|schen" Then
                vbc.Export strPath & vbc.Name & ".txt"
                Call module_l|fffd|schen
                Workbooks(nameNeu).VBProject.VBComponents.Import strPath & vbc.Name & ".txt"
                Kill strPath & vbc.Name & ".txt"
            Else
                vbc.Export strPath & vbc.Name & ".txt"
                Workbooks(nameNeu).VBProject.VBComponents.Import strPath & vbc.Name & ".txt"
                Kill strPath & vbc.Name & ".txt"
            End If
55
        End If
        
    Next vbc
End With
MsgBox "Module wurde kopiert!"
Exit Sub
' Bei Fehlernummer 1004, diese Meldung ausgeben.
Errorhandler:
    If Err.Number = 1004 Then
        MsgBox "Das kopieren des VBA Moduls ist fehlgeschlagen!" & vbCr & _
           "Bitte |fffd|berpr|fffd|fen Sie folgende Einstellung! " & vbCr & _
           "EXTRAS -> MAKRO -> SICHERHEIT -> Vertrauenw|fffd|rdige Quellen." & vbCr & _
           "'Zugriff auf Visual Basic Projekt vertrauen' muss aktiviert sein! ", vbCritical, _
           " Meldung vom Makro Module exportieren!"
    Else
        MsgBox "Err.Number = " & Err.Number & ".   " & Err.Description, vbCritical
    End If
    ' Fehlernummer l|fffd|schen.
    Err.Clear
End Sub

Public Sub Oeffnen()
Dim WB As Workbook
Dim strDatei As String

ChDir Environ("UserProfile") & "\Desktop\" '<- Vorbelegter Ordner
strDatei = Application.GetOpenFilename(filefilter:="Exceldateien (*.xls),*.xls", _
Title:="Choose File")

If strDatei = "Falsch" Then Exit Sub
Set WB = Application.Workbooks.Open(strDatei)
nameAlt = ActiveWorkbook.Name
End Sub

Sub module_l|fffd|schen()
 Dim VBkomp As VBComponent

 On Error Resume Next
 For Each VBkomp In ThisWorkbook.VBProject.VBComponents
 If VBkomp.Name = vbc_name Then
    ThisWorkbook.VBProject.VBComponents.Remove VBkomp
    GoTo 88
End If
 Next VBkomp
88
 End Sub
Attribute VB_Name = "mod_ribbon"
Sub HZI_rev00_formular(ctl As IRibbonControl)
'    If ThisWorkbook.CustomDocumentProperties("Startmaske anzeigen").Value = "ja" Then
'        info.Show
'    Else
        frm_Rev0.Show
'    End If

End Sub

Private Sub HZI_rev01_formular(ctl As IRibbonControl)
    If ThisWorkbook.CustomDocumentProperties("Interne Revisionen").Value = "ja" Then
        frm_extern_interne_revision.Show
    Else
        frm_rev1_plus.Show
    End If
End Sub

Private Sub HZI_Makros_Import(ctl As IRibbonControl)
    Call ImportMacros
End Sub


INQUEST-PP=macro
