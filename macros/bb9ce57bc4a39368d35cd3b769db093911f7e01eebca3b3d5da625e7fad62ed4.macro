Attribute VB_Name = "ExceptionForm"
Attribute VB_Base = "0{AD4CC6D5-7806-48EE-BDDA-956530A61E24}{35F5DC07-2D06-475F-9504-BC5817204DF8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub CommandButton1_Click()
    Dim i As Integer, j As Integer
    j = 0
    ReDim ret(1 To 1)
    ret(1) = 0
    For i = 0 To ListBox1.ListCount - 1
        If ListBox1.Selected(i) Then
            j = j + 1
            ReDim Preserve ret(1 To j)
            ret(j) = i + 1
        End If
    Next i
'    If ret(1) = 0 Then
'        MsgBox ("Nothing selected.")
'    Else
        ExceptionForm.Hide
'    End If
End Sub

Private Sub CommandButton2_Click()
    ReDim ret(1 To 1)
    ret(1) = 0
    ExceptionForm.Hide
End Sub
Attribute VB_Name = "Module1"
Option Explicit

Public Const pw = "bit"
Public row1 As Long 'last header row
Public row2 As Long
Public ret() As Integer
Sub SelectException()
    Dim i As Integer, j As Integer, n As Integer, n1 As Integer, n2 As Integer, nlen As Integer
    Dim tlot As String, tstart As String, th As String, t1 As String, t2 As String
    Dim tEx1() As String, tEx2() As String
    Application.ScreenUpdating = False
    row1 = Range("S2").Value
    n = ActiveCell.Row
    If n <= row1 Then
        MsgBox ("Select a row with completed lot data.")
        Exit Sub
    End If
    ExceptionForm.ListBox1.Clear
    ExceptionForm.Label4 = Cells(n, 6).Value
    th = Cells(n, 4).Value & Cells(n, 5).Value 'route
    tlot = Cells(n, 2).Value & " " & Cells(n, 3).Value & " (" & Cells(n, 13).Value & " to " & Cells(n, 14).Value & ")"
    ExceptionForm.Label2.Caption = tlot
    t1 = Cells(n, 15).Value 'any existing exceptions
    t2 = Cells(n, 16).Value
    Sheet2.Activate 'Exceptions
    row2 = Range("N2").Value
    Cells(row2 + 1, 4).Select
    If IsEmpty(ActiveCell.Value) Then
        Sheet1.Activate 'IC-106 data entry
        MsgBox ("Please add data to the Exceptions sheet first.")
        ActiveSheet.Unprotect Password:=pw
        Cells(n, 15).ClearContents 'clear contents if previous exceptions were removed from sheet 2
        Cells(n, 16).ClearContents
        ActiveSheet.Protect Password:=pw
        GoTo exitsub
    ElseIf IsEmpty(ActiveCell.Offset(1, 0).Value) Then
        nlen = 1
    Else
        nlen = Range(Selection, Selection.End(xlDown)).Count
    End If
    ReDim tEx1(1 To 1)
    ReDim tEx2(1 To 1)
    j = 0
    For i = 1 To nlen
        If th = Cells(row2 + i, 2).Value & Cells(row2 + i, 3).Value Then
            j = j + 1
            ReDim Preserve tEx1(1 To j)
            ReDim Preserve tEx2(1 To j)
            tEx1(j) = Cells(row2 + i, 4).Value
            tEx2(j) = Cells(row2 + i, 5).Value
            ExceptionForm.ListBox1.AddItem tEx1(j) & " to " & tEx2(j) _
            & ", " & Cells(row2 + i, 6).Value & ", " & Cells(row2 + i, 7).Value 'Type & Comments
            n1 = InStr(t1, tEx1(j))
            n2 = InStr(t2, tEx2(j))
            If n1 > 0 And n2 > 0 Then
                ExceptionForm.ListBox1.Selected(j - 1) = True
            End If
        End If
    Next i
    If j = 0 Then
        Sheet1.Activate 'IC-106 data entry
        MsgBox ("The Exceptions sheet has no data for this route.")
        GoTo exitsub
    End If
    Sheet1.Activate
    ActiveSheet.Unprotect Password:=pw
    ExceptionForm.Show
    If ret(1) > 0 Then
        Cells(n, 15).Value = tEx1(ret(1))
        Cells(n, 16).Value = tEx2(ret(1))
        For i = 2 To UBound(ret)
            Cells(n, 15).Value = Cells(n, 15).Value & Chr(10) & tEx1(ret(i))
            Cells(n, 16).Value = Cells(n, 16).Value & Chr(10) & tEx2(ret(i))
        Next i
    Else
        Cells(n, 15).ClearContents
        Cells(n, 16).ClearContents
    End If
    ActiveSheet.Protect Password:=pw
exitsub:
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module2"
Option Explicit

Sub CheckPMTP_Click()
    'show or hide "High Accuracy" option
    Application.ScreenUpdating = False
    ActiveSheet.Unprotect Password:=pw
    If Range("S4").Value = True Then
        Range("F3").Value = "High Accuracy PMTP?"
        Range("F4").Value = "No"
        PUP (False)
    Else
        Range("F3").Value = ""
        Range("F4").Value = ""
        PUP (True)
    End If
    ActiveSheet.Protect Password:=pw
    Application.ScreenUpdating = True
End Sub
Private Sub PUP(bProtect As Boolean)
    Range("F4").Select
    If bProtect Then
        With Selection.Interior
            .Pattern = xlNone
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With
        Selection.Borders(xlEdgeLeft).LineStyle = xlNone
        Selection.Borders(xlEdgeTop).LineStyle = xlNone
        Selection.Borders(xlEdgeBottom).LineStyle = xlNone
        Selection.Borders(xlEdgeRight).LineStyle = xlNone
        Selection.Locked = True
    Range("D5").Select
    Else
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .ThemeColor = xlThemeColorAccent1
            .TintAndShade = 0.799981688894314
            .PatternTintAndShade = 0
        End With
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlThin
        End With
        Selection.Locked = False
    End If
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
    'set print range
    Dim lastrow As Long
    row1 = Range("S2").Value
    If Target.Column = 5 And Target.Row > 11 Then 'added Route type
        ActiveSheet.Unprotect Password:=pw
        Cells(row1 + 1, 5).Select
        If IsEmpty(ActiveCell.Value) Then
            lastrow = row1
        ElseIf IsEmpty(ActiveCell.Offset(1, 0).Value) Then
            lastrow = row1 + 1
        Else
            lastrow = Range(Selection, Selection.End(xlDown)).Rows.Count + row1
        End If
        ActiveSheet.PageSetup.PrintArea = "$B$1:$P$" & CStr(lastrow)
       ActiveSheet.Protect Password:=pw
    End If
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
    'set print range
    Dim lastrow As Long
    If Target.Column = 2 And Target.Row > 11 Then 'added Route type
        ActiveSheet.Unprotect Password:=pw
        Cells(12, 2).Select
        If IsEmpty(ActiveCell.Value) Then
            lastrow = 11
        ElseIf IsEmpty(ActiveCell.Offset(1, 0).Value) Then
            lastrow = 12
        Else
            lastrow = Range(Selection, Selection.End(xlDown)).Rows.Count + 11
        End If
        ActiveSheet.PageSetup.PrintArea = "$B$1:$H$" & CStr(lastrow)
        ActiveSheet.Protect Password:=pw
    End If
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
