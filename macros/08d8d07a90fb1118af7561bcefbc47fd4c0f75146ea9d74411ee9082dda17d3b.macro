Attribute VB_Name = "AlphaAdapter"
Option Explicit
Public Alpha As Adapters.AlphaAdapter
Public AlphaExcelobject As exAlphaExcelPorxy

Dim RefreshMode As Integer           '0,|2e2||fffd||fffd|,1,|fffd||fffd||2b1||2e2||fffd||a3||fffd|2|fffd||536||fffd||2e2||fffd||fffd|
Dim NextRefreshTime As String

Const TimeSpace As Integer = 1             '|fffd||fffd||fffd||fffd|
Const ToolBarName As String = "Alpha"
Public Const AlphaSheetName As String = "Alpha.xls"

Public CurrentCell As Range
Public Order() As String

Public Row As Long
Public Col As Long

Public pEnumDate As Date

Public objIni As SYSAUXLib.Utility
Public IniFilePath As String


'|fffd||fffd||fffd||fffd|Alpha|3f5||373|
Public Sub LinkAlpla()
    Dim ErrInfo As String
    On Error GoTo ErrHandle:
    If Alpha Is Nothing Then Set Alpha = New Adapters.AlphaAdapter
    
    If objIni Is Nothing Then Set objIni = New SYSAUXLib.Utility
    
    
    
    If Alpha.IsAlphaRun Then
        If Alpha.LinkAlplaApplication Then
            IniFilePath = Alpha.GetIniFilePath & "ExcelAlpha.ini"
        
        
            Set ThisWorkbook.Alpha = Alpha
            MsgBox "Alpha|3f5||373||fffd||fffd||fffd||4f3||279||fffd||fffd||fffd|", vbOKOnly + vbInformation
        Else
            ErrInfo = Alpha.GetLastError
            Set ThisWorkbook.Alpha = Nothing
            MsgBox "Alpha|3f5||373||fffd||fffd||fffd||fffd||2a7||fffd||723||fffd||fffd||fffd||fffd||fffd|Alpha|3f5||373||fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||423||fffd|" & vbCrLf & vbCrLf & ErrInfo, vbOKOnly + vbCritical
        End If
    Else
        MsgBox "Alpha|3f5||373||fffd||fffd||3b4||fffd||fffd||fffd||423||fffd|", vbOKOnly + vbInformation
    End If
    Exit Sub
ErrHandle:
    MsgBox Err.Description, vbOKOnly + vbInformation, "Alpha Excel Adapter Error"
End Sub

Private Sub DoNothing()
    Dim i As Long
    For i = 0 To 100
        DoEvents
    Next i
End Sub

'|fffd||fffd||fffd||fffd|Alpha|3f5||373|
Public Sub StartAlpha()
    On Error GoTo ErrHandle:
    Dim myAlpha As Adapters.AlphaAdapter
    
    If myAlpha Is Nothing Then Set myAlpha = New Adapters.AlphaAdapter
    If Not myAlpha.IsAlphaRun Then
        Call myAlpha.StartAlpha
    Else
        MsgBox "Alpha|3f5||373||fffd||47e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||423||fffd|", vbOKOnly + vbInformation
    End If
    Set myAlpha = Nothing
    Exit Sub
ErrHandle:
    MsgBox Err.Description, vbOKOnly + vbInformation, "Alpha Excel Adapter Error"
End Sub

'|fffd||fffd||fffd||4f9||fffd||fffd||fffd||fffd||fffd|
Public Sub ModifyToolBars()
    Dim ToolBar As CommandBar
    Dim Button As CommandBarButton
    Dim CommCtrl As CommandBarControl
    Dim ButtPopup As CommandBarPopup

    Dim AutoButton As CommandBarButton
    Dim TimeButton As CommandBarButton
    Dim ForBidButton As CommandBarButton
    
    Dim pos As Long
    Dim CurrentVer As Single
    Dim MacroPath As String
    Dim p As Integer
    
    On Error Resume Next

    For Each ToolBar In Application.CommandBars
        If ToolBar.Name = ToolBarName Then
'            ToolBar.Visible = True
            
            Set Button = ToolBar.Controls.Item(ToolBar.Controls.Count)
            
            '|fffd||fffd||9c34||165||fffd||fffd||4e6||fffd||13a||aeaf||fffd||fffd||fffd||1f7||fffd||fffd||1f8||fffd||fffd||135||fffd||fffd||13a||fffd||fffd||fffd|
            MacroPath = Button.OnAction
            p = InStr(1, MacroPath, "!", vbTextCompare)
            If p > 1 Then
                MacroPath = Left(MacroPath, p - 1)
                If Left(MacroPath, 1) = "'" And Right(MacroPath, 1) = "'" Then
                    MacroPath = Mid(MacroPath, 2, Len(MacroPath) - 2)
                    If MacroPath <> ThisWorkbook.FullName Then
                        Set Button = Nothing
                        ToolBar.Delete
                        Exit For
                    End If
                End If
            End If
            
            Dim pVer As String
            pVer = Button.Tag
            If IsNumeric(pVer) Then
                Dim i As Integer
                
                For i = 1 To 8
                    CurrentVer = gSecVer / 10 ^ i
                    If CurrentVer >= 0.1 And CurrentVer < 1 Then Exit For
                Next i
                CurrentVer = CurrentVer + gMainVer
                
                If Val(pVer) < CurrentVer Then
                    Set Button = Nothing
                    ToolBar.Delete
                    Exit For
                End If
            End If
            
            '|fffd||fffd||fffd||2e2||fffd||b5||fffd||fffd||fffd||fffd||fffd|
            Set AutoButton = Application.CommandBars.FindControl(msoControlButton, , "AutoRefresh")
            Set TimeButton = Application.CommandBars.FindControl(msoControlButton, , "TimeRefresh")
            Set ForBidButton = Application.CommandBars.FindControl(msoControlButton, , "ForbidRefresh")
            
            If AutoButton.State = msoButtonDown Then RefreshMode = 2
            If TimeButton.State = msoButtonDown Then RefreshMode = 1
            If ForBidButton.State = msoButtonDown Then RefreshMode = 0
            
            If RefreshMode = 1 Then Call OnTimeRefresh
            
            Exit Sub
        End If
    Next ToolBar
    
    Set ToolBar = Application.CommandBars.Add(ToolBarName)

    '|fffd||fffd||fffd||fffd|Alpha|fffd||fffd||165|
    pos = 1
    ThisWorkbook.Sheets(1).Shapes(1).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "StartAlpha"
    Button.Caption = "|fffd||fffd||fffd||fffd|Alpha|3f5||373|"
    Button.TooltipText = "|fffd||fffd||fffd||fffd|Alpha|3f5||373|"
    Button.BeginGroup = True
    DoNothing
    Button.PasteFace
    pos = pos + 1
    
    '|fffd||fffd||fffd||fffd|Alpha|fffd||fffd||165|
    ThisWorkbook.Sheets(1).Shapes(2).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "LinkAlpla"
    Button.Caption = "|fffd||fffd||fffd||fffd|Alpha"
    Button.TooltipText = "|fffd||fffd||fffd||fffd|Alpha"
    DoNothing
    Button.PasteFace
    pos = pos + 1
    
    '|fffd||fffd||fffd||be6b||2bd|
    ThisWorkbook.Sheets(1).Shapes(3).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "InsertFunction"
    Button.Caption = "|fffd||fffd||fffd||fffd|Alpha|fffd||fffd||2bd|"
    Button.TooltipText = "|fffd||fffd||fffd||fffd|Alpha|fffd||fffd||2bd|"
    Button.BeginGroup = True
    DoNothing
    Button.PasteFace
    
    '|fffd||fffd||fffd||fffd||123||2bd|
    ThisWorkbook.Sheets(1).Shapes(9).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "SetCalculateMode"
    Button.Caption = "|fffd||fffd||fffd||fffd||123||2bd|"
    Button.TooltipText = "|fffd||536||fffd||fffd||fffd||fffd||fffd|"
    DoNothing
    Button.PasteFace
    pos = pos + 1

    
    '|2e2||fffd||fffd|
    ThisWorkbook.Sheets(1).Shapes(4).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "Refresh"
    Button.Caption = "|2e2||fffd||fffd||fffd||fffd||fffd||fffd|"
    Button.TooltipText = "|2e2||fffd||fffd||fffd||fffd||fffd||fffd|"
    DoNothing
    Button.PasteFace
    Button.BeginGroup = True
    pos = pos + 1
       
'    '|fffd||fffd||fffd||fffd||2e2||fffd||fffd|Space
'    ThisWorkbook.Sheets(1).Shapes(6).CopyPicture
'    Set CommCtrl = ToolBar.Controls.Add(msoControlEdit, 1, 0, Pos)
'    CommCtrl.OnAction = "OnEditChange"
'    CommCtrl.Width = 10
'    CommCtrl.Caption = "|fffd||fffd||2b1||2e2||fffd||fffd||2b1||fffd||fffd|"
'    CommCtrl.TooltipText = "|fffd||fffd||2b1||2e2||fffd||fffd||2b1||fffd||fffd|"
'    Pos = Pos + 1
        
    '|fffd||fffd||fffd||fffd||2e2||fffd||fffd||123||2bd|
    
''    Dim popup As CommandBarPopup
''    Set popup = ToolBar.Controls.Add(msoControlPopup, 1, 1)
''    popup.Caption = "|2e2||fffd||fffd||123||2bd|"
''    popup.BeginGroup = True
''
'''    ThisWorkbook.Sheets(1).Shapes(6).CopyPicture
''    Set Button = popup.CommandBar.Controls.Add(msoControlButton)
''    Button.Caption = "|fffd||fffd||2e2||fffd||fffd|"
''    Button.Tag = "ForbidRefresh"
''    Button.OnAction = "ForbidRefresh"
''    Button.State = msoButtonDown
'''    Button.PasteFace
''
'''    ThisWorkbook.Sheets(1).Shapes(7).CopyPicture
''    Set Button = popup.CommandBar.Controls.Add(msoControlButton)
''    Button.Tag = "TimeRefresh"
''    Button.OnAction = "SetRefreshTimeMode"
''    Button.Caption = "|fffd||fffd||2b1||2e2||fffd||fffd|"
'''    Button.PasteFace
''    'Button.State = msoButtonDown
''
'''    ThisWorkbook.Sheets(1).Shapes(8).CopyPicture
''    Set Button = popup.CommandBar.Controls.Add(msoControlButton)
''    Button.Tag = "AutoRefresh"
''    Button.OnAction = "SetRefreshAutoMode"
''    Button.Caption = "|fffd||536||fffd||2e2||fffd||fffd|"
'''    Button.PasteFace
'''    Button.State = msoButtonDown
        
    ThisWorkbook.Sheets(1).Shapes(6).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Caption = "|fffd||fffd||2e2||fffd||fffd|"
    Button.Tag = "ForbidRefresh"
    Button.OnAction = "ForbidRefresh"
    Button.BeginGroup = True
    Button.State = msoButtonDown
    DoNothing
    Button.PasteFace
    
    ThisWorkbook.Sheets(1).Shapes(7).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Tag = "TimeRefresh"
    Button.OnAction = "SetRefreshTimeMode"
    Button.Caption = "|fffd||fffd||2b1||2e2||fffd||fffd|"
    DoNothing
    Button.PasteFace
    
    
    ThisWorkbook.Sheets(1).Shapes(8).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Tag = "AutoRefresh"
    Button.OnAction = "SetRefreshAutoMode"
    Button.Caption = "|fffd||536||fffd||2e2||fffd||fffd|"
    DoNothing
    Button.PasteFace
    
    ThisWorkbook.Sheets(1).Shapes(10).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Tag = "InsertVariety"
    Button.OnAction = "InsertVariety"
    Button.Caption = "|fffd||fffd||fffd||fffd||1b7||fffd||fffd|"
    Button.TooltipText = "|fffd||fffd||fffd||fffd||1b7||fffd||fffd|"
    DoNothing
    Button.PasteFace
    Button.BeginGroup = True
    
    ThisWorkbook.Sheets(1).Shapes(13).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Tag = "FixAlphaFormula"
    Button.OnAction = "FixAlphaFormula"
    Button.Caption = "|fffd||7b8||fffd|Alpha|fffd||fffd||2bd|"
    Button.TooltipText = "|fffd||7b8||fffd|Alpha|fffd||fffd||2bd|"
    DoNothing
    Button.PasteFace
    Button.BeginGroup = True
    
    ThisWorkbook.Sheets(1).Shapes(12).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.OnAction = "OnHelp"
    Button.Caption = "|fffd||fffd||fffd||fffd|"
    DoNothing
    Button.PasteFace
    Button.BeginGroup = True
    
    ThisWorkbook.Sheets(1).Shapes(11).CopyPicture
    Set Button = ToolBar.Controls.Add(msoControlButton)
    Button.Tag = Format(gMainVer) & "." & Format(gSecVer)
    Button.OnAction = "ShowAbout"
    Button.Caption = "|fffd||fffd||fffd||fffd|"
    DoNothing
    Button.PasteFace
    Button.BeginGroup = True
    
    RefreshMode = 0
    ToolBar.Visible = True
End Sub

Public Sub OnHelp()
    Dim HelpFile As String
    HelpFile = ThisWorkbook.Path
    HelpFile = IIf(Right(HelpFile, 1) = "\", HelpFile & "Data\Res\nsExcel.chm", HelpFile & "\Data\Res\nsExcel.chm")
    
    If Dir(HelpFile) = "" Then
        MsgBox "|3b4||fffd||fffd||fffd||4b5||fffd||fffd||fffd||4e6||fffd||130||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly + vbInformation, "|fffd||fffd||2be|"
    Else
        If Not Alpha Is Nothing Then
            Call Alpha.ShowHelp(HelpFile)
        Else
            Set Alpha = New Adapters.AlphaAdapter
            Call Alpha.ShowHelp(HelpFile)
            Set Alpha = Nothing
        End If
    End If
End Sub

Public Sub CheckCalMode()
    Dim TBar As CommandBar
    Dim Button As CommandBarButton
    
    On Error GoTo L1:
    
    Set TBar = Application.CommandBars(ToolBarName)
    If Not TBar Is Nothing Then
        Set Button = TBar.Controls("|fffd||fffd||fffd||fffd||123||2bd|")
        If Not Button Is Nothing Then
            If Application.Calculation = xlCalculationAutomatic Then
                Button.State = msoButtonDown
                Button.TooltipText = "|fffd||536||fffd||fffd||fffd||fffd||fffd|"
            Else
                Button.State = msoButtonUp
                Button.TooltipText = "|fffd||2f9||fffd||fffd||fffd||fffd||fffd|"
            End If
        End If
    End If
    Exit Sub
L1:
    
End Sub

Public Sub SetRefreshAutoMode(Optional flag As Boolean)

    On Error Resume Next
    
    Dim AutoButton As CommandBarButton
    Dim TimeButton As CommandBarButton
    Dim ForBidButton As CommandBarButton
    
    Set AutoButton = Application.CommandBars.FindControl(msoControlButton, , "AutoRefresh")
    Set TimeButton = Application.CommandBars.FindControl(msoControlButton, , "TimeRefresh")
    Set ForBidButton = Application.CommandBars.FindControl(msoControlButton, , "ForbidRefresh")

    If IsMissing(flag) Then
        If flag Then RefreshMode = 2 Else RefreshMode = 0
    Else
        If RefreshMode <> 2 Then RefreshMode = 2
    End If
    
    Select Case RefreshMode
        Case 2
            AutoButton.State = msoButtonDown
            TimeButton.State = msoButtonUp
            ForBidButton.State = msoButtonUp
        Case 1
            AutoButton.State = msoButtonUp
            TimeButton.State = msoButtonDown
            ForBidButton.State = msoButtonUp
        Case 0
            AutoButton.State = msoButtonUp
            TimeButton.State = msoButtonUp
            ForBidButton.State = msoButtonDown
    End Select
End Sub

Public Sub SetRefreshTimeMode(Optional flag As Boolean)
    Dim AutoButton As CommandBarButton
    Dim TimeButton As CommandBarButton
    Dim ForBidButton As CommandBarButton
    Dim PreMode As Integer
    
    PreMode = RefreshMode
    
    On Error Resume Next
    
    Set AutoButton = Application.CommandBars.FindControl(msoControlButton, , "AutoRefresh")
    Set TimeButton = Application.CommandBars.FindControl(msoControlButton, , "TimeRefresh")
    Set ForBidButton = Application.CommandBars.FindControl(msoControlButton, , "ForbidRefresh")

    If IsMissing(flag) Then
        If flag Then RefreshMode = 1 Else RefreshMode = 0
    Else
        If RefreshMode <> 1 Then RefreshMode = 1
    End If
    
    Select Case RefreshMode
        Case 2
            AutoButton.State = msoButtonDown
            TimeButton.State = msoButtonUp
            ForBidButton.State = msoButtonUp
        Case 1
            AutoButton.State = msoButtonUp
            TimeButton.State = msoButtonDown
            ForBidButton.State = msoButtonUp
        Case 0
            AutoButton.State = msoButtonUp
            TimeButton.State = msoButtonUp
            ForBidButton.State = msoButtonDown
    End Select
    
    If PreMode <> 1 Then Call OnTimeRefresh
    
End Sub

Public Sub ForbidRefresh()
    Dim AutoButton As CommandBarButton
    Dim TimeButton As CommandBarButton
    Dim ForBidButton As CommandBarButton
    
    On Error Resume Next
    
    Set AutoButton = Application.CommandBars.FindControl(msoControlButton, , "AutoRefresh")
    Set TimeButton = Application.CommandBars.FindControl(msoControlButton, , "TimeRefresh")
    Set ForBidButton = Application.CommandBars.FindControl(msoControlButton, , "ForbidRefresh")

    RefreshMode = 0
    
    AutoButton.State = msoButtonUp
    TimeButton.State = msoButtonUp
    ForBidButton.State = msoButtonDown
    
End Sub


'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||123||2bd|
Public Sub SetCalculateMode(Optional flag As Boolean)
    On Error Resume Next
    
    Application.ScreenUpdating = False
    ThisWorkbook.Windows(1).Visible = True
    
    Dim Button As CommandBarButton
    Set Button = Application.CommandBars(ToolBarName).Controls("|fffd||fffd||fffd||fffd||123||2bd|")
    
    If flag Then
        If Application.Calculation = xlCalculationAutomatic Then
            Button.State = msoButtonDown
            Button.TooltipText = "|fffd||536||fffd||fffd||fffd||fffd||fffd|"
        Else
            Button.State = msoButtonUp
            Button.TooltipText = "|fffd||2f9||fffd||fffd||fffd||fffd||fffd|"
        End If
    Else
        If Application.Calculation = xlCalculationAutomatic Then
            Application.Calculation = xlCalculationManual
            Button.State = msoButtonUp
            Button.TooltipText = "|fffd||2f9||fffd||fffd||fffd||fffd||fffd|"
        Else
            Application.Calculation = xlCalculationAutomatic
            Button.State = msoButtonDown
            Button.TooltipText = "|fffd||536||fffd||fffd||fffd||fffd||fffd|"
        End If
    End If
       
    ThisWorkbook.Windows(1).Visible = False
    ThisWorkbook.Saved = True
    Application.ScreenUpdating = True
End Sub

'|fffd||fffd||fffd||fffd|Alpha|fffd||fffd||fffd||fffd|
Public Sub InsertFunction()
    Dim Selectform  As SelectFunction
    Dim aCell As Range
    Dim strFunc As String
    Dim CurrentSheetName As String
    
    Dim myFunName() As String
    Dim i As Long
    Dim blnExist As Boolean
    
    ReDim myFunName(8)
    
    myFunName(1) = "Get_YTM_Open"
    myFunName(2) = "Get_YTM_Preclose"
    myFunName(3) = "Get_YTM_High"
    myFunName(4) = "Get_YTM_Low"
    myFunName(5) = "Get_YTM_Ave"
    myFunName(6) = "Get_YTM_Close"
    myFunName(7) = "Get_Bond_YTM"
    myFunName(8) = "Get_Bond_FrontYield"
    
    
    On Error Resume Next
    
    If Not CheckAlphaState Then Exit Sub
    
    Set Selectform = New SelectFunction
    
    If Not Application.ActiveCell Is Nothing Then
        Set aCell = Application.ActiveCell
   
        CurrentSheetName = aCell.Worksheet.Name
        strFunc = aCell.formula
        If Selectform.GetUserInputFunc(CurrentSheetName, strFunc) Then
            blnExist = False
            For i = 1 To UBound(myFunName)
                
                If InStr(strFunc, myFunName(i)) <> 0 Then
                    aCell.NumberFormatLocal = "0.0000%"
                    blnExist = True
                    Exit For
                End If
            Next
            
            If blnExist = False Then
                If aCell.NumberFormatLocal = "@" Then aCell.NumberFormatLocal = "G/|368||fffd||f8||fffd||2bd|"
            End If
            
            aCell.formula = strFunc
            
        End If
    Else
        Call MsgBox("|fffd||fffd||461||fffd||fffd||4aa||fffd||fffd||fffd||be6b||2bd||fffd||135||fffd||52a||fffd||fffd|", vbOKOnly + vbInformation)
    End If
    Set Selectform = Nothing
End Sub

'|fffd||fffd||fffd||bc||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub Refresh()
    On Error Resume Next
    
    Application.ScreenUpdating = False
    
    If Not Alpha Is Nothing Then
        If Not Alpha.IslinkAlpha Then
            MsgBox "|fffd||fffd||3b4||fffd||fffd||fffd||4f5||fffd|Alpha|fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation
        Else
            If Application.Version >= 9 Then
                Application.CalculateFull
            Else
                MsgBox "|fffd||fffd||1f0|Excel|fffd||6c7e||fffd||fffd||5a7||fffd||5a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Exccel2000|fffd||fffd||fffd||3f0||6c7e||fffd||fffd|", vbOKOnly + vbInformation
            End If
        End If
    Else
        MsgBox "|fffd||fffd||3b4||fffd||fffd||fffd||4f5||fffd|Alpha|fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation
    End If
    Application.ScreenUpdating = True
End Sub

Public Sub RefreshArea()
    On Error Resume Next
      
    Application.ScreenUpdating = False
    
    If Not Alpha Is Nothing Then
        If Not Alpha.IslinkAlpha Then
            MsgBox "|fffd||fffd||3b4||fffd||fffd||fffd||4f5||fffd|Alpha|fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation
        Else
            Application.ActiveSheet.Calculate
        End If
    Else
        MsgBox "|fffd||fffd||3b4||fffd||fffd||fffd||4f5||fffd|Alpha|fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation
    End If
    Application.ScreenUpdating = True
End Sub


'|fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub OnTimeRefresh()
    On Error Resume Next
    
    If RefreshMode = 1 Then
        Application.ScreenUpdating = False
        If Not Alpha Is Nothing Then
            Call Application.CalculateFull
        End If
        NextRefreshTime = Format(Now + TimeValue("00:" & Format(TimeSpace, "00") & ":00"), "yyyy-MM-dd HH:mm:ss")
        Application.OnTime TimeValue(NextRefreshTime), "OnTimeRefresh"
        Application.ScreenUpdating = True
    End If
End Sub

'|fffd||536||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub OnPriceChange(Keys() As String)
    Dim Abook As Workbook
    Dim ASheet As Worksheet
    
    On Error Resume Next
    
    If RefreshMode = 2 Then
        Application.ScreenUpdating = False
        Application.CalculateFull
        Application.ScreenUpdating = True
    End If
End Sub

Public Function Replace(Expression As String, Find As String, sReplace As String) As String
    If Application.Version >= 9 Then
        Replace = VBA.Replace(Expression, Find, sReplace)
    Else
        Dim i As Integer
        Dim p As Integer
        Dim S As String
        
        S = Expression
        i = Len(Find)
        p = InStr(1, S, Find)
        While p > 0
            S = Left(S, p - 1) & sReplace & Mid(S, p + i)
            p = InStr(1, S, Find)
        Wend
        Replace = S
    End If
End Function

Public Function Split(Expression As String, Delimiter As String) As Variant
    If Application.Version >= 9 Then
        Split = VBA.Split(Expression, Delimiter)
    Else
        Dim i As Integer
        Dim L As Integer
        Dim p1 As Integer
        Dim p2 As Integer
        Dim S As String
        Dim Arr() As String
        
        ReDim Arr(99) As String
        
        If Expression <> "" Then
            
            L = Len(Delimiter)
            p1 = 1
            p2 = 0
            i = 0
            p2 = InStr(p1, Expression, Delimiter)
            While p2 > 0
                S = Mid(Expression, p1, p2 - p1)
                Arr(i) = S
                i = i + 1
                If i > 99 Then ReDim Preserve Arr(UBound(Arr) + 100)
                p1 = p2 + 1
                p2 = 0
                p2 = InStr(p1, Expression, Delimiter)
            Wend
            If p1 < Len(Expression) Then Arr(i) = Mid(Expression, p1 + 1)
            ReDim Preserve Arr(i)
            Split = Arr
        Else
            Split = vbArray
        End If
    End If
End Function

Public Function CheckAlphaState(Optional ShowInfo As Boolean = True) As Boolean
    CheckAlphaState = False
    If Alpha Is Nothing Then
        If ShowInfo Then MsgBox "Alpha|3f5||373||3b4||fffd||fffd||fffd||fffd||fffd||fffd||3b4||fffd||fffd||fffd||4e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation, "|fffd||fffd||2be|"
        Exit Function
    Else
        If Not Alpha.IslinkAlpha Then
            If ShowInfo Then MsgBox "Alpha|3f5||373||3b4||fffd||fffd||fffd||fffd||fffd||fffd||3b4||fffd||fffd||fffd||4e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||373|", vbOKOnly + vbInformation, "|fffd||fffd||2be|"
            Exit Function
        End If
    End If
    CheckAlphaState = True
End Function

Public Sub InsertVariety()
    Dim InsertForm  As SelectVarietyForm
    Dim aCell As Range
    Dim CurrentSheetName As String
    Dim iKind As Integer
    Dim iBondtype As Integer
    Dim iMarket As Integer
    Dim iAnaType As Integer
    Dim bDeal As Boolean
    Dim bNotDQ As Boolean
    Dim EnumDate As Date
    
    Dim oldCalMode As XlCalculation
    
    
    On Error Resume Next
     
    If Not CheckAlphaState Then Exit Sub
    
    oldCalMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    Set InsertForm = New SelectVarietyForm
    
    If pEnumDate > 0 Then InsertForm.pEnumDate = pEnumDate Else InsertForm.pEnumDate = 0
    
    If Not Application.ActiveCell Is Nothing Then
        Set aCell = Application.ActiveCell
        Set CurrentCell = Application.ActiveCell
        CurrentSheetName = aCell.Worksheet.Name
        Row = aCell.Row
        Col = aCell.Column
        
        If InsertForm.GetuserSelectResult(iKind, iMarket, iBondtype, iAnaType, bDeal, bNotDQ, Order, EnumDate) Then
            DoEvents
            Dim aForm As Waitform
            Set aForm = New Waitform
            aForm.Show 0
            DoEvents
            Call Alpha.EnumVariety(iKind, iMarket, iBondtype, bDeal, iAnaType, bNotDQ, EnumDate)
            aForm.Hide
            Unload aForm
            Set aForm = Nothing
            DoEvents
            DoEvents
            MsgBox "|fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||263||fffd|", vbOKOnly + vbInformation, "|fffd||fffd||2be|"
        Else
            'MsgBox "|fffd||fb||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly + vbInformation
        End If
    Else
        Call MsgBox("|fffd||fffd||461||fffd||fffd||4aa||fffd||fffd||fffd||fffd|Alpha|1b7||fffd||5b5||135||135||fffd||52a||fffd||fffd|", vbOKOnly + vbInformation)
    End If
    Set InsertForm = Nothing
    
    Application.Calculation = oldCalMode
End Sub

Public Sub FixAlphaFormula()
    Dim oWkBook As Workbook
    Dim oSheet As Worksheet
    Dim oCell As Range
    Dim MacroPathName As String
    Dim oldRecalState As XlCalculation
    Dim Count As Long
    Dim i As Long
    Dim InfoForm As Waitform
    
    If Not CheckAlphaState Then Exit Sub
    
    MacroPathName = ThisWorkbook.FullName
        
    Set oWkBook = Application.ActiveWorkbook
    Set oSheet = Application.ActiveSheet
    
    If oWkBook Is Nothing Or oSheet Is Nothing Then
        Call MsgBox("|fffd||fffd||1f0||fb||fffd||434||bfab5||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||234||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly + vbInformation, "|fffd||fffd||2be|")
        Exit Sub
    Else
        oldRecalState = Application.Calculation
        Application.Calculation = xlCalculationManual
        
        If InfoForm Is Nothing Then Set InfoForm = New Waitform
        InfoForm.Caption = "|fffd||fffd||fffd||fffd||fffd||7b8||fffd|Alpha|3f5||373||fffd||fffd||2bd|"
        InfoForm.Label1.Caption = "|fffd||fffd||fffd||fffd||fffd||7b8||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 0% ..."
        InfoForm.Show 0
        
        Count = 0
        For Each oSheet In oWkBook.Sheets
            Count = Count + oSheet.UsedRange.Count
        Next oSheet
        
        i = 0
        For Each oSheet In oWkBook.Sheets
            For Each oCell In oSheet.UsedRange
                Call FixFormula(oCell, MacroPathName)
                i = i + 1
                InfoForm.Label1.Caption = "|fffd||fffd||fffd||fffd||fffd||7b8||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & Format(i / Count, "0%") & " ..."
                DoEvents
            Next oCell
        Next oSheet
        Application.Calculation = oldRecalState
        InfoForm.Label1.Caption = "  Alpha|3f5||373||fffd||fffd||2bd||fffd||7b8||fffd||fffd||fffd||fffd||fffd||fffd|"
        
        Call Application.Wait(Now + TimeValue("0:00:02"))
        
        InfoForm.Hide
        Unload InfoForm
        Set InfoForm = Nothing
    End If
End Sub

Private Sub FixFormula(aCell As Range, PathName As String)
    Dim formula As String
    Dim preFix As String
    Dim Other As String
    Dim p1 As Integer
    Dim p2 As Integer
    
    Dim oldNumberFormat As Variant
    
    If Not aCell.HasFormula Then Exit Sub
    
    formula = aCell.formula
    
    p1 = InStr(1, formula, "Alpha.xls", vbTextCompare)
    If p1 > 0 Then p2 = InStr(p1, formula, "!", vbTextCompare)
    
    If p1 > 1 And p2 > p1 Then
        Other = Mid(formula, p2)
        If Mid(formula, p2 - 1, 1) = "'" Then
            p1 = InStr(1, formula, "'", vbTextCompare)
            preFix = Left(formula, p1 - 1)
            formula = preFix & "'" & PathName & "'" & Other
        Else
            formula = Replace(formula, "Alpha.xls", "'" & PathName & "'")
        End If
        oldNumberFormat = aCell.NumberFormatLocal
        aCell.NumberFormatLocal = "G/|368||fffd||f8||fffd||2bd|"
        On Error Resume Next
        aCell.formula = formula
        aCell.NumberFormatLocal = oldNumberFormat
    End If
End Sub
Attribute VB_Name = "AlphaFunc"
Option Explicit

Public Function Get_KeyCode(|fffd||fffd||fffd||fffd| As String, ByVal |fffd||433||fffd| As String) As String
    Dim pre As String
    
    |fffd||433||fffd| = UCase(|fffd||433||fffd|)
    |fffd||433||fffd| = Replace(|fffd||433||fffd|, " ", "")
    If |fffd||433||fffd| = "|fffd||fffd||fffd||43c||fffd|" Or |fffd||433||fffd| = "BK" Or |fffd||433||fffd| = "BANK" Then pre = "BK"
    If |fffd||433||fffd| = "|fffd||fffd||fffd||fffd|" Or |fffd||433||fffd| = "SH" Or |fffd||433||fffd| = "SHANGHAI" Then pre = "SH"
    If |fffd||433||fffd| = "|fffd||fffd||fffd||fffd|" Or |fffd||433||fffd| = "SZ" Or |fffd||433||fffd| = "SHENZHEN" Then pre = "SZ"
    Get_KeyCode = Trim(pre & |fffd||fffd||fffd||fffd|)
End Function

Public Function Get_ClassType(Code As String) As String
    Dim Outvalue As Integer
    If Alpha.GetClassType(Code, Outvalue) Then
        Select Case Outvalue
            Case 1
                Get_ClassType = "|56e||22f|"
            Case 2
                Get_ClassType = "|fffd||639||fffd|"
            Case 3
                Get_ClassType = "|fffd||fffd||fffd|"
            Case 4
                Get_ClassType = "|5b8||fffd||fffd|"
            Case 5
                Get_ClassType = "|fffd||fffd||1b1|"
            Case 6
                Get_ClassType = "|fffd||fffd||fffd||fffd|"
        End Select
    Else
        Get_ClassType = "|1b7||fffd||5b2||fffd||fffd||fffd||fffd||fffd|"
    End If
End Function

Public Function Get_BankHQTime() As Variant
    Dim Outvalue As Date
    If Alpha.GetCurrentHQTime("|fffd||fffd||fffd||43c||fffd|", Outvalue) Then
        Get_BankHQTime = Outvalue
    Else
        Get_BankHQTime = "-"
    End If
End Function

Public Function Get_BourseHQTime() As Variant
    Dim Outvalue As Date
    If Alpha.GetCurrentHQTime("|fffd||fffd||fffd||fffd||fffd||fffd|", Outvalue) Then
        Get_BourseHQTime = Outvalue
    Else
        Get_BourseHQTime = "-"
    End If
End Function

'|1b7||fffd||5bc||fffd||fffd|
Public Function Get_Bond_Name(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondName(|fffd||63c||fffd||fffd||fffd|, Value) Then
        Get_Bond_Name = Value
    Else
        Get_Bond_Name = Alpha.GetLastError
    End If
End Function

'|1b7||fffd||5b9||63c||fffd||fffd||fffd|
Public Function Get_Bond_Code(|fffd||fffd||fffd| As String, |fffd||433||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondCodeByShortName(|fffd||fffd||fffd|, |fffd||433||fffd|, Value) Then
        Get_Bond_Code = Value
    Else
        Get_Bond_Code = Alpha.GetLastError
    End If
End Function

'|1b7||fffd||5b9||63c||fffd||fffd||fffd|
Public Function Get_KeyCode_ByName(|fffd||fffd||fffd| As String, |fffd||433||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondCodeByShortName(|fffd||fffd||fffd|, |fffd||433||fffd|, Value) Then
        Get_KeyCode_ByName = Get_KeyCode(Value, |fffd||433||fffd|)
    Else
        Get_KeyCode_ByName = Alpha.GetLastError
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_XYLX(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondXYLX(|fffd||63c||fffd||fffd||fffd|, Value) Then
        Get_Bond_XYLX = Value
    Else
        Get_Bond_XYLX = Alpha.GetLastError
    End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_FXLX(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondFXLX(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXLX = Value
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_PMLL(|fffd||63c||fffd||fffd||fffd| As String, Optional Fxflag As Boolean = True) As Variant
    Dim Value As Double
    Dim Lc As Double
    Dim flag As Boolean
    Dim strNormType As String
    
    If Alpha.GetBondPMLL(|fffd||63c||fffd||fffd||fffd|, Value, Lc, flag) Then
        If Fxflag Then
            If flag Then
'                Get_Bond_PMLL = "R + " + Format(Lc)
                If Alpha.GetNormType(|fffd||63c||fffd||fffd||fffd|, strNormType) = True Then
                    Get_Bond_PMLL = strNormType & " + " + Format(Lc)
                Else
                    Get_Bond_PMLL = "R + " + Format(Lc)
                End If
            Else
                Get_Bond_PMLL = Value
            End If
        Else
            Get_Bond_PMLL = Value
        End If
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_FXNX(|fffd||63c||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondFXNX(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXNX = Value
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|)
Public Function Get_Bond_FXL(|fffd||63c||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondFXL(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXL = Value
End Function

'|fffd||fffd||fffd||43c||6f8||fffd|
Public Function Get_Bond_FXJG(|fffd||63c||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondFXJG(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXJG = Value
End Function

'|fffd||fffd||3e2||fffd||fffd||2bd|
Public Function Get_Bond_FXFS(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondFXFS(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXFS = Value
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_FXRQ(|fffd||63c||fffd||fffd||fffd| As String) As Date
    Dim Value As Date
    If Alpha.GetBondFXRQ(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXRQ = Value
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|
Public Function Get_Bond_QXRQ(|fffd||63c||fffd||fffd||fffd| As String) As Date
    Dim Value As Date
    If Alpha.GetBondQXRQ(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_QXRQ = Value
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_SSRQ(|fffd||63c||fffd||fffd||fffd| As String) As Date
    Dim Value As Date
    If Alpha.GetBondSSRQ(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_SSRQ = Value
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_DQRQ(|fffd||63c||fffd||fffd||fffd| As String) As Date
    Dim Value As Date
    If Alpha.GetBondDQRQ(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_DQRQ = Value
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_SYNX(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondSYNX(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_SYNX = Value
    Else
        Get_Bond_SYNX = "-"
    End If
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_SYTS(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Long
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondSYTS(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_SYTS = Value
    Else
        Get_Bond_SYTS = "-"
    End If
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_XFXTS(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Long
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondXFXTS(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_XFXTS = Value
    Else
        Get_Bond_XFXTS = "-"
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd|
Public Function Get_Bond_LIPD(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Date
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondLIPD(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_LIPD = Value
    Else
        Get_Bond_LIPD = "-"
    End If
End Function

'|fffd||fffd||fffd||6b8||fffd||3e2||fffd||fffd|
Public Function Get_Bond_NIPD(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Date
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondNIPD(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_NIPD = Value
    Else
        Get_Bond_NIPD = "-"
    End If
End Function

'|fffd||fffd||fffd||6bc||fffd||3e2||fffd||fffd||fffd||fffd|
Public Function Get_Bond_JXTS(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Variant
    Dim Value As Long
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondJXTS(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then
        Get_Bond_JXTS = Value
    Else
        Get_Bond_JXTS = "-"
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_FXSXF(|fffd||63c||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondFXSXF(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXSXF = Value
End Function

'|fffd||4b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_DFSXF(|fffd||63c||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondDFSXF(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_DFSXF = Value
End Function

'|fffd||fffd||fffd||437||fffd|
Public Function Get_Bond_FXF(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondFXF(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_FXF = Value
End Function

'|fffd||fffd||fffd||175||23c||fffd|
Public Function Get_Bond_ZXDJ(|fffd||63c||fffd||fffd||fffd| As String) As String
    Dim Value As String
    If Alpha.GetBondZXDJ(|fffd||63c||fffd||fffd||fffd|, Value) Then Get_Bond_ZXDJ = Value
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13f||fffd||fffd||33c||fffd|
Public Function Get_Price_Open(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetPriceOpen(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Open = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Price_Preclose(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetPricePreclose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Preclose = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||7fc||fffd|
Public Function Get_Price_High(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetPriceHigh(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_High = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||37c||fffd|
Public Function Get_Price_Low(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetPriceLow(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Low = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||bc||fffd|
Public Function Get_Price_Close(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|", Optional |4e6||fffd||fffd||123||fffd||37c||fffd| As Boolean = False) As Double
    Dim Outvalue As Double
    Dim flag As Boolean
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    
    If Alpha.GetPriceClose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Close = Outvalue
    
    If Outvalue = 0 And |4e6||fffd||fffd||123||fffd||37c||fffd| Then
        If Alpha.GetModePrice(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue, flag) Then Get_Price_Close = Outvalue
    End If
    
    'If Alpha.GetPriceClose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Close = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||bc||fffd|
Public Function Get_Price_last(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    Dim flag As Boolean
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    
    If Alpha.GetPriceClose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_Price_last = Outvalue
    Else
        If Alpha.GetPricePreclose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
            Get_Price_last = Outvalue
        Else
            If Alpha.GetBondFXJG(|fffd||63c||fffd||fffd||fffd|, Outvalue) Then Get_Price_last = Outvalue
        End If
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13e||fffd||fffd||fffd|
Public Function Get_Price_Ave(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String = "|22b||fffd||fffd|") As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetPriceAve(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Price_Ave = Outvalue
End Function

'|fffd||fffd||fffd||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||4e6||fffd||fffd||fffd||fffd||3e2|
Public Function Get_Bond_YJLX(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondYJLX(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_YJLX = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_Open(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMOpen(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_Open = Outvalue
    Else
        Get_YTM_Open = "-"
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_Preclose(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMPreclose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_Preclose = Outvalue
    Else
        Get_YTM_Preclose = "-"
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_High(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMHigh(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_High = Outvalue
    Else
        Get_YTM_High = "-"
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_Low(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMLow(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_Low = Outvalue
    Else
        Get_YTM_Low = "-"
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_Ave(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMAve(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_Ave = Outvalue
    Else
        Get_YTM_Ave = "-"
    End If
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_YTM_Close(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "Y") As Variant
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetYTMClose(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_YTM_Close = Outvalue
    Else
        Get_YTM_Close = "-"
    End If
End Function


'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||133||27d||fffd||fffd||fffd|
Public Function Get_Volume(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetVolume(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Outvalue) Then Get_Volume = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||133||27d||fffd||fffd||fffd|
Public Function Get_Value(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetValue(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Outvalue) Then Get_Value = Outvalue
End Function

'|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13b||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Ex_Ratio(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Double
    Dim Outvalue As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetExRatio(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Outvalue) Then Get_Ex_Ratio = Outvalue
End Function

'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_YTM(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As Variant
    Dim Outvalue As Double
    If Alpha.GetBondYTM(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_Bond_YTM = Outvalue
    Else
        Get_Bond_YTM = "-"
    End If
End Function

'***********lzk***********
'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||1f0||328||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_FrontYield(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Variant
    Dim Outvalue As Double
    If Alpha.GetBondFrontYield(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then
        Get_Bond_FrontYield = Outvalue
    Else
        Get_Bond_FrontYield = "-"
    End If
End Function


'|fffd||275||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
Public Function Get_Bond_Price(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Double, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Outvalue As Double
    If Alpha.GetBondPrice(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_Price = Outvalue
End Function

'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_ModDuration(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Outvalue As Double
    If Alpha.GetBondModDuration(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_ModDuration = Outvalue
End Function

'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||3fe||fffd||fffd||fffd|
Public Function Get_Bond_MacDuration(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Outvalue As Double
    If Alpha.GetBondMacDuration(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_MacDuration = Outvalue
End Function

'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||379||fffd||fffd|
Public Function Get_Bond_Convexity(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Outvalue As Double
    If Alpha.GetBondConvexity(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_Convexity = Outvalue
End Function

'|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13b||fffd||fffd||fffd||fffd||5b5|
Public Function Get_Bond_PVBP(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Outvalue As Double
    If Alpha.GetBondPVBP(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Outvalue) Then Get_Bond_PVBP = Outvalue
End Function

'&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

'|221||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_ConvertRatio(|fffd||63c||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd| As Date) As Double
    Dim Value As Double
    If IsMissing(|fffd||fffd||fffd||fffd|) Or |fffd||fffd||fffd||fffd| = 0 Then |fffd||fffd||fffd||fffd| = Date
    If Alpha.GetBondConvertRatio(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, Value) Then Get_Bond_ConvertRatio = Value
End Function


'|221||fffd||f8||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Bond_SpreadModDuration(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondSpreadModDuration(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Value) Then Get_Bond_SpreadModDuration = Value
End Function

'|221||fffd||f8||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fe||fffd||fffd||fffd|
Public Function Get_Bond_SpreadMacDuration(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondSpreadMacDuration(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Value) Then Get_Bond_SpreadMacDuration = Value
End Function

'|221||fffd||f8||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|
Public Function Get_Bond_SpreadConvexity(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondSpreadConvexity(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Value) Then Get_Bond_SpreadConvexity = Value
End Function

'|221||fffd||f8||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
Public Function Get_Bond_SpreadPVBP(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||6f8||fffd| As Double, |fffd||6f8||fffd||fffd||fffd||fffd||fffd| As String) As Double
    Dim Value As Double
    If Alpha.GetBondSpreadPVBP(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||6f8||fffd|, |fffd||6f8||fffd||fffd||fffd||fffd||fffd|, Value) Then Get_Bond_SpreadPVBP = Value
End Function

'|fffd||53b||639||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Repo_RateToModi(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||639||fffd||fffd||fffd||fffd||fffd| As Double, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd||fffd||676||fffd| As String = "T+1", Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Double = 0, Optional |fffd||639||fffd||fffd||fffd||fffd||fffd| As String = "|fffd||fffd||639||fffd|", Optional Term As Long = -1) As Double
    Dim Value As Double
    If Alpha.GetRepoRateToModi(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||639||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||676||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||639||fffd||fffd||fffd||fffd||fffd|, Term, Value) Then Get_Repo_RateToModi = Value
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||2bb||fffd||fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Repo_ModiToRate(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Double, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd||fffd||676||fffd| As String = "T+1", Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Double = 0, Optional |fffd||639||fffd||fffd||fffd||fffd||fffd| As String = "|fffd||fffd||639||fffd|", Optional Term As Long = -1) As Double
    Dim Value As Double
    If Alpha.GetRepoModiToRate(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||676||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||639||fffd||fffd||fffd||fffd||fffd|, Term, Value) Then Get_Repo_ModiToRate = Value
End Function

'|fffd||fffd||fb||639||fffd||fffd||fffd||fffd||2bd||fffd||57c||fffd||fffd||fffd||fffd||fffd||fffd|
Public Function Get_Repo_DaysOccupationOfFunds(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd| As Date, Optional |fffd||fffd||fffd||fffd||fffd||676||fffd| As String = "T+1", Optional |fffd||fffd||fffd||fffd| As Long = -1) As Long
    Dim Value As Double
    If Alpha.GetRepoDaysOccupationOfFunds(|fffd||639||fffd||fffd||63c||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||676||fffd|, Value) Then Get_Repo_DaysOccupationOfFunds = Value
End Function

'|221||4bb||fffd||fffd||2b1||fffd||fffd||133||27d||fffd||fffd||fffd|
Public Function Get_VolumnSum(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||2bc||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date) As Double
    Dim Value As Double
    Dim Count As Long
    If Alpha.GetVolumnSum(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||2bc||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Value, Count) Then Get_VolumnSum = Value
End Function

'|221||4bb||fffd||fffd||2b1||fffd||fffd||133||27d||fffd||fffd||fffd||fffd|
Public Function Get_AmountSum(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||2bc||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date) As Double
    Dim Value As Double
    Dim Count As Long
    If Alpha.GetAmountSum(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||2bc||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Value, Count) Then Get_AmountSum = Value
End Function

'|221||4bb||fffd||fffd||2b1||fffd||fffd||fffd||1bd||fffd||fffd||fffd||27d||fffd||fffd||fffd|
Public Function Get_AverVolumn(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||2bc||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, Optional |1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "|2b5||fffd||2b3||27d||fffd||fffd||fffd|") As Double
    Dim Value As Double
    Dim AvrType As Integer
    Select Case |1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Case "|2b5||fffd||2b3||27d||fffd||fffd||fffd|", "0"
            AvrType = 0
        Case "|fffd||fffd||fffd||fffd||fffd||fffd|", "1"
            AvrType = 1
    End Select
    If Alpha.GetAverVolumn(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||2bc||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, AvrType, Value) Then Get_AverVolumn = Value
End Function

'|221||4bb||fffd||fffd||2b1||fffd||fffd||fffd||1bd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd|
Public Function Get_AverAmount(|fffd||63c||fffd||fffd||fffd| As String, |fffd||fffd||2bc||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, Optional |1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "|2b5||fffd||2b3||27d||fffd||fffd||fffd|") As Double
    Dim Value As Double
    Dim AvrType As Integer
        Select Case |1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Case "|2b5||fffd||2b3||27d||fffd||fffd||fffd|", "0"
            AvrType = 0
        Case "|fffd||fffd||fffd||fffd||fffd||fffd|", "1"
            AvrType = 1
    End Select
    If Alpha.GetAverAmount(|fffd||63c||fffd||fffd||fffd|, |fffd||fffd||2bc||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, AvrType, Value) Then Get_AverAmount = Value
End Function

Public Function GetAdapterobject() As Object
    Set GetAdapterobject = Alpha
End Function

Public Function IsDealDay(aDate As Date, Market As String, Result As Boolean) As Boolean
    If CheckAlphaState(False) Then
        Result = Alpha.IsDealDay(aDate, Market)
        IsDealDay = True
    Else
        IsDealDay = False
    End If
End Function

Public Function GetDealDays(Market As String, Days() As Date) As Boolean
    If CheckAlphaState(False) Then
        GetDealDays = Alpha.GetDealDays(Market, Days)
    Else
        GetDealDays = False
    End If
End Function
Attribute VB_Name = "SelectFunction"
Attribute VB_Base = "0{744EBD0E-CDD6-4123-92DB-370743A99261}{6426FD45-1E01-445C-82BD-B3C7FEE1F8D8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim UserSelect As Boolean

Private Type NsFunction
    FunctionName As String
    Desc As String
    Parameters As Variant
    FuncType As Integer
    ReturnType As Integer               '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||363||fffd|1,|fffd||131||fffd||fffd||fffd|0|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||6a3||fffd| |fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|14|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
End Type

Dim NsFunction() As NsFunction

Dim SelectFunctionIndex As Integer

Private Function TransRefCellName(ByVal CurrentSheetName As String, RefCtrl As RefEdit.RefEdit) As String
    Dim S As String
    Dim p As Integer
    Dim CellName As String
    
    CellName = RefCtrl.Value
       
    If Left(CellName, 1) <> """" Then
        p = InStr(1, CellName, "!")
        If p > 1 Then
            S = Left(CellName, p - 1)
            If Left(S, 1) = "'" Then
                S = Mid(S, 2)
                If Right(S, 1) = "'" Then
                    S = Mid(S, 1, Len(S) - 1)
                End If
            End If
        End If
        
        If S = CurrentSheetName Then
            S = Mid(CellName, p + 1)
            TransRefCellName = Replace(S, "$", "")
        Else
            TransRefCellName = CellName
        End If
    Else
        TransRefCellName = CellName
    End If
End Function

Public Function GetUserInputFunc(ByVal CurrentSheetName As String, ByRef outFunc As String) As Boolean
    Dim strFunc As String
    Dim i As Integer
    Dim j As Integer
    Dim sA1 As String, sA2 As String, sA3 As String, sA4 As String, sA5 As String, sA6 As String, sA7 As String, sA8 As String
    Dim UB As Integer
    Dim p As Integer
    
    Dim oldFunction As String
    Dim oldArgument() As String
    Dim oldFormula As String
    oldFormula = Trim(outFunc)
    
    If oldFormula <> "" Then
        If Left(oldFormula, 1) = "=" Then
            oldFormula = Mid(oldFormula, 2)
            p = InStr(1, oldFormula, "!")
            If p > 0 Then
                oldFormula = Mid(oldFormula, p + 1)
            End If
            
            p = InStr(1, oldFormula, "(")
            If p > 0 Then
                oldFunction = Left(oldFormula, p - 1)
                oldFormula = Mid(oldFormula, p + 1)
                oldFormula = Trim(Replace(oldFormula, ")", ""))
                oldArgument = Split(oldFormula, ",")
            Else
                oldFunction = oldFormula
            End If
            '|fffd||fffd||fffd||fffd||52d||fffd||435||139||fffd||2bd|
            
            For i = 0 To UBound(NsFunction)
                If StrComp(oldFunction, NsFunction(i).FunctionName, vbTextCompare) = 0 Then
                    FuncList.Selected(i) = True
                    Call ShowFunction(i)
                    
                    For j = 0 To UBound(oldArgument)
                        If j = 0 Then A1.Value = oldArgument(j)
                        If j = 1 Then A2.Value = oldArgument(j)
                        If j = 2 Then A3.Value = oldArgument(j)
                        If j = 3 Then A4.Value = oldArgument(j)
                        If j = 4 Then A5.Value = oldArgument(j)
                        If j = 5 Then A6.Value = oldArgument(j)
                        If j = 6 Then A7.Value = oldArgument(j)
                        If j = 7 Then A8.Value = oldArgument(j)
                    Next j
                    
                    Exit For
                End If
            Next i
        End If
    End If
        
    Me.Show 1
    If UserSelect Then
        If A1.Enabled Then sA1 = TransRefCellName(CurrentSheetName, A1) Else sA1 = ""
        If A2.Enabled Then sA2 = TransRefCellName(CurrentSheetName, A2) Else sA2 = ""
        If A3.Enabled Then sA3 = TransRefCellName(CurrentSheetName, A3) Else sA3 = ""
        If A4.Enabled Then sA4 = TransRefCellName(CurrentSheetName, A4) Else sA4 = ""
        If A5.Enabled Then sA5 = TransRefCellName(CurrentSheetName, A5) Else sA5 = ""
        If A6.Enabled Then sA6 = TransRefCellName(CurrentSheetName, A6) Else sA6 = ""
        If A7.Enabled Then sA7 = TransRefCellName(CurrentSheetName, A7) Else sA7 = ""
        If A8.Enabled Then sA8 = TransRefCellName(CurrentSheetName, A8) Else sA8 = ""
        
        i = SelectFunctionIndex
        
        If i >= 0 Then
            strFunc = "=" & AlphaSheetName & "!" & NsFunction(i).FunctionName & "("
            
            If Not IsEmpty(NsFunction(i).Parameters) Then
                UB = UBound(NsFunction(i).Parameters)
                For i = 0 To UB
                    If i = 0 And A1.Enabled Then strFunc = strFunc & sA1 & ","
                    If i = 1 And A2.Enabled Then strFunc = strFunc & sA2 & ","
                    If i = 2 And A3.Enabled Then strFunc = strFunc & sA3 & ","
                    If i = 3 And A4.Enabled Then strFunc = strFunc & sA4 & ","
                    If i = 4 And A5.Enabled Then strFunc = strFunc & sA5 & ","
                    If i = 5 And A6.Enabled Then strFunc = strFunc & sA6 & ","
                    If i = 6 And A7.Enabled Then strFunc = strFunc & sA7 & ","
                    If i = 7 And A8.Enabled Then strFunc = strFunc & sA8 & ","
                Next i
                If Right(strFunc, 1) = "," Then strFunc = Left(strFunc, Len(strFunc) - 1)
            End If
            strFunc = strFunc & ")"
            outFunc = strFunc
        End If
    End If
    GetUserInputFunc = UserSelect
    Unload Me
End Function

Private Sub CommandButton2_Click()
    Me.Hide
    UserSelect = False
End Sub

Private Sub CommandButton3_Click()
    Me.Hide
    UserSelect = True
End Sub

Private Sub ShowFunction(index As Integer)
    Dim j As Integer
    Dim UB As Integer
    Dim i As Integer
    
    i = index
    
    FunctionName.Caption = NsFunction(i).FunctionName
    FunctionDesc.Caption = NsFunction(i).Desc
    
    A1.Enabled = False: L1.Caption = "": A1.BackColor = &H8000000B
    A2.Enabled = False: L2.Caption = "": A2.BackColor = &H8000000B
    A3.Enabled = False: L3.Caption = "": A3.BackColor = &H8000000B
    A4.Enabled = False: L4.Caption = "": A4.BackColor = &H8000000B
    A5.Enabled = False: L5.Caption = "": A5.BackColor = &H8000000B
    A6.Enabled = False: L6.Caption = "": A6.BackColor = &H8000000B
    A7.Enabled = False: L7.Caption = "": A7.BackColor = &H8000000B
    A8.Enabled = False: L8.Caption = "": A8.BackColor = &H8000000B

    If Not IsEmpty(NsFunction(i).Parameters) Then
        UB = UBound(NsFunction(i).Parameters)
        For j = 0 To UB
            If j = 0 Then A1.Enabled = True: L1.Caption = NsFunction(i).Parameters(j): A1.BackColor = &H80000005: A1.ControlTipText = NsFunction(i).Parameters(j)
            If j = 1 Then A2.Enabled = True: L2.Caption = NsFunction(i).Parameters(j): A2.BackColor = &H80000005: A2.ControlTipText = NsFunction(i).Parameters(j)
            If j = 2 Then A3.Enabled = True: L3.Caption = NsFunction(i).Parameters(j): A3.BackColor = &H80000005: A3.ControlTipText = NsFunction(i).Parameters(j)
            If j = 3 Then A4.Enabled = True: L4.Caption = NsFunction(i).Parameters(j): A4.BackColor = &H80000005: A4.ControlTipText = NsFunction(i).Parameters(j)
            If j = 4 Then A5.Enabled = True: L5.Caption = NsFunction(i).Parameters(j): A5.BackColor = &H80000005: A5.ControlTipText = NsFunction(i).Parameters(j)
            If j = 5 Then A6.Enabled = True: L6.Caption = NsFunction(i).Parameters(j): A6.BackColor = &H80000005: A6.ControlTipText = NsFunction(i).Parameters(j)
            If j = 6 Then A7.Enabled = True: L7.Caption = NsFunction(i).Parameters(j): A7.BackColor = &H80000005: A7.ControlTipText = NsFunction(i).Parameters(j)
            If j = 7 Then A8.Enabled = True: L8.Caption = NsFunction(i).Parameters(j): A8.BackColor = &H80000005: A8.ControlTipText = NsFunction(i).Parameters(j)
        Next j
    End If
End Sub

Private Function GetFunctionIndex(FunctionName As String) As Integer
    Dim UB As Integer
    Dim i As Integer
    Dim finded As Boolean
    
    FunctionName = FuncList.List(FuncList.ListIndex)
    finded = False
    
    UB = UBound(NsFunction)
    For i = 0 To UB
        If StrComp(FunctionName, NsFunction(i).FunctionName, vbTextCompare) = 0 Then
            finded = True
            Exit For
        End If
    Next i
    
    If finded Then
        GetFunctionIndex = i
    Else
        GetFunctionIndex = -1
    End If
End Function

Private Sub FuncList_Click()
    Dim i As Integer
    Dim FunctionName As String
    
    FunctionName = FuncList.List(FuncList.ListIndex)
    
    i = GetFunctionIndex(FunctionName)
    If i >= 0 Then
        ShowFunction (i)
        SelectFunctionIndex = i
    Else
        SelectFunctionIndex = -1
    End If
    
End Sub

Private Sub FuncType_Change()
    Dim Typ As Integer
    Dim i As Integer
    Select Case FuncType.Text
        Case "|22b||fffd||fffd||fffd||fffd||fffd||fffd|"
            Typ = 0
        Case "|5ea||fffd||fffd||fffd||fffd||fffd||fffd|"
            Typ = 1
        Case "|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|"
            Typ = 2
        Case "|fffd||fffd||fffd||9eaf||fffd||fffd|"
            Typ = 3
        Case "|fffd||fffd||fffd||3eaf||fffd||fffd|"
            Typ = 4
        Case "|373||fffd||1ba||fffd||fffd||fffd|"
            Typ = 5
        Case Else
            
    End Select
    
    FuncList.Clear
    
    For i = 0 To UBound(NsFunction)
        If Typ = 0 Or NsFunction(i).FuncType = Typ Then
            Call FuncList.AddItem(NsFunction(i).FunctionName)
        End If
    Next i
End Sub

Private Sub UserForm_Initialize()
    ReDim NsFunction(63)
    
    L1.Caption = ""
    L2.Caption = ""
    L3.Caption = ""
    L4.Caption = ""
    L5.Caption = ""
    L6.Caption = ""
    
    Dim pos As Integer
    
    SelectFunctionIndex = -1
    pos = -1
    
    Call FuncList.Clear
    
    '|5ea||fffd||fffd||fffd||fffd||fffd||fffd|*******************************************************************
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_KeyCode"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||f5||fffd|Alpha|3f5||373||fffd||fffd||4e6||fffd||139||63c||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||433||fffd|"
    NsFunction(pos).FuncType = 1
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_KeyCode_ByName"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||1ba||fffd||fffd||433||fffd||fffd||f5||fffd|Alpha|3f5||373||fffd||fffd||4e6||fffd||139||63c||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||433||fffd|"
    NsFunction(pos).FuncType = 1
    NsFunction(pos).ReturnType = 1
    
    

    
    '|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|****************************************************************************
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_ClassType"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||fffd||fffd||436||fffd||fffd||fffd||fffd||fffd||2b2||f4||fffd||fffd||fffd||363||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd||639||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_Code"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||1ba||fffd||fffd||433||fffd||fffd||f5||fffd||fffd||fffd||fffd||5f4||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||433||fffd|"
    NsFunction(pos).FuncType = 1
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_Name"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_XYLX"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXLX"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_PMLL"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & "|12c||fffd||fffd||fffd||fffd||fffd||5b8||fffd||3e2||22f|,|fffd||fffd||fffd||b870|0|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a3||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||5b8||fffd||3e2||22f|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 0
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXNX"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = 1
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXL"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|)"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    NsFunction(pos).ReturnType = -2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXJG"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||43c||6f8||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
        
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXFS"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||3e2||fffd||fffd||2bd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2

    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXRQ"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2

    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_QXRQ"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SSRQ"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_DQRQ"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SYNX"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SYTS"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
        
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_XFXTS"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2

    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_LIPD"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_NIPD"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||6b8||fffd||3e2||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_JXTS"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||6bc||fffd||3e2||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXSXF"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_DFSXF"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||4b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FXF"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||437||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_ZXDJ"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||fffd||63c||fffd||fffd||5b5||f5||fffd||fffd||fffd||fffd||175||23c||fffd|"
    ReDim NsFunction(pos).Parameters(0)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 2
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_ConvertRatio"
    NsFunction(pos).Desc = "|221||5b8||fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||fffd||3aa||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 2
    
    '|fffd||fffd||fffd||9eaf||fffd||fffd|*****************************************************************************
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_BankHQTime"
    NsFunction(pos).Desc = "|fffd||f5||fffd||fffd||fffd||fffd||43c||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd|"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_BourseHQTime"
    NsFunction(pos).Desc = "|fffd||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd|"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_Open"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13f||fffd||fffd||33c||6e3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_Preclose"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||563||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_High"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||7fc||6e3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_Low"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||37c||6e3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_Close"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||bc||6e3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||6e3||fffd||12c||fffd||3f2||fffd||2b9||fffd||fffd||123||fffd||37c||6e3||fffd||fffd||fffd||fffd||b870|1|fffd||fffd||2b9||fffd||fffd||123||fffd||37c||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(3) = "|4e6||fffd||fffd||123||fffd||37c||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_last"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||335||fffd||fffd||fffd||fffd||bc||6e3||fffd||fffd||fffd||fffd||fffd||2b9||fffd||f5||fffd||fffd||fffd||fffd||fffd||fffd||33c||6e3||fffd||fb||fffd||fffd||fffd||fffd||fffd||fffd||2b9||fffd||fffd||fffd||fffd||fffd||57c||6e1||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Price_Ave"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13e||fffd||fffd||6e3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||22b||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_Open"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13f||fffd||fffd||335||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3

    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_PreClose"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_High"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||7f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_Low"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||375||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_Ave"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_YTM_Close"
    NsFunction(pos).Desc = "|fffd||f5||fffd||fffd||63c||fffd||fffd||fffd||5b8||fffd||fffd||56e||22f||fffd||fffd||133||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||c8ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa||4bb||fffd||fffd||fffd||6b8||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Volume"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||133||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Value"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||133||27d||fffd||fffd||e8ec||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Ex_Ratio"
    NsFunction(pos).Desc = "|fffd||f5||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13b||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 3
    
        
    '|fffd||fffd||fffd||3eaf||fffd||fffd|*****************************************************************************
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_YJLX"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||4e6||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd||12c||fffd||3f5||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(1)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_YTM"
    NsFunction(pos).Desc = "|fffd||27c||6f8||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(4)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    '**************lzk**********************
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_FrontYield"
    NsFunction(pos).Desc = "|fffd||27c||6f8||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||1f0||328||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
'    NsFunction(pos).Parameters(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_Price"
    NsFunction(pos).Desc = "|fffd||275||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|"
    ReDim NsFunction(pos).Parameters(4)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(4) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_ModDuration"
    NsFunction(pos).Desc = "|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & "|5e2||fffd||28fa||fffd||fffd||3e2||22f||fffd||f5||fffd||fffd||fffd||fffd||1e1||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a1||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_MacDuration"
    NsFunction(pos).Desc = "|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||3fe||fffd||fffd||fffd|" & vbCrLf & "|5e2||fffd||28fa||fffd||fffd||3e2||22f||fffd||f5||fffd||fffd||fffd||fffd||1e1||fffd||fffd||fffd||5fc||fffd||fffd||fffd||3fe||fffd||fffd||6a1||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_Convexity"
    NsFunction(pos).Desc = "|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||fffd||379||fffd||fffd|" & vbCrLf & "|5e2||fffd||28fa||fffd||fffd||3e2||22f||fffd||f5||fffd||fffd||fffd||fffd||1e1||fffd||fffd||fffd||5fc||379||fffd||521||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_PVBP"
    NsFunction(pos).Desc = "|fffd||f5||fffd||56e||22f||5b8||fffd||fffd||fffd||fffd||fffd||6b5||13b||fffd||fffd||fffd||fffd||5b5|" & vbCrLf & "|5e2||fffd||28fa||fffd||fffd||3e2||22f||fffd||f5||fffd||fffd||fffd||fffd||1e1||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SpreadModDuration"
    NsFunction(pos).Desc = "|221||fffd||fffd||5b8||fffd||fffd||fffd||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SpreadMacDuration"
    NsFunction(pos).Desc = "|221||fffd||fffd||5b8||fffd||fffd||fffd||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fe||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
 
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SpreadConvexity"
    NsFunction(pos).Desc = "|221||fffd||fffd||5b8||fffd||fffd||fffd||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Bond_SpreadPVBP"
    NsFunction(pos).Desc = "|221||fffd||fffd||5b8||fffd||fffd||fffd||fffd||3e2||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||6f8||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||6f8||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Repo_RateToModi"
    NsFunction(pos).Desc = "|fffd||53b||639||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||676||221||fffd||12c||fffd||fffd||3aa|T+1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa|0|fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||fffd||12c||fffd||fffd||3aa||fffd||fffd||639||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||7a1||fffd||12c||fffd||fffd||3aa||fffd||fffd||1b7||fffd||5b5||13b||639||fffd||fffd||fffd||fffd||5f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(7)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(4) = "|fffd||fffd||fffd||fffd||fffd||676||fffd|(*)"
    NsFunction(pos).Parameters(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(6) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(7) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 4
  
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Repo_ModiToRate"
    NsFunction(pos).Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||2bb||fffd||fd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||676||221||fffd||12c||fffd||fffd||3aa|T+1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a1||fffd||12c||fffd||fffd||3aa|0|fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||fffd||12c||fffd||fffd||3aa||fffd||fffd||639||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||7a1||fffd||12c||fffd||fffd||3aa||fffd||fffd||1b7||fffd||5b5||13b||639||fffd||fffd||fffd||fffd||5f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(7)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(4) = "|fffd||fffd||fffd||fffd||fffd||676||fffd|(*)"
    NsFunction(pos).Parameters(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(6) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).Parameters(7) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 4
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_Repo_DaysOccupationOfFunds"
    NsFunction(pos).Desc = "|fffd||fffd||fb||639||fffd||fffd||fffd||fffd||2bd||fffd||57c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||676||221||fffd||12c||fffd||fffd||3aa|T+1|fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||7a1||fffd||3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||676||fffd|(*)"
    NsFunction(pos).Parameters(3) = "|fffd||639||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 4
    
    
    '%$%$%$%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
    '|373||fffd||1ba||fffd||fffd||fffd|
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_VolumnSum"
    NsFunction(pos).Desc = "|221||4bb||fffd||fffd||2b1||fffd||fffd||133||27d||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||2bc||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 5
    
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_AmountSum"
    NsFunction(pos).Desc = "|221||4bb||fffd||fffd||2b1||fffd||fffd||133||27d||fffd||fffd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(2)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||2bc||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).FuncType = 5
  
    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_AverVolumn"
    NsFunction(pos).Desc = "|221||4bb||fffd||fffd||2b1||fffd||fffd||fffd||1bd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||fffd||fffd||2b5||fffd||2b3||27d||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||2bc||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(3) = "|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 5

    pos = pos + 1
    NsFunction(pos).FunctionName = "Get_AverAmount"
    NsFunction(pos).Desc = "|221||4bb||fffd||fffd||2b1||fffd||fffd||fffd||1bd||fffd||fffd||fffd||27d||fffd||fffd||fffd||e8ec||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||361||fffd||12c||fffd||fffd||3aa||fffd||fffd||2b5||fffd||2b3||27d||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd|"
    ReDim NsFunction(pos).Parameters(3)
    NsFunction(pos).Parameters(0) = "|1b7||fffd||5b9||63c||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(1) = "|fffd||fffd||2bc||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    NsFunction(pos).Parameters(3) = "|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(*)"
    NsFunction(pos).FuncType = 5
    
    
        
    Call FuncType.AddItem("|22b||fffd||fffd||fffd||fffd||fffd||fffd|", 0)
    Call FuncType.AddItem("|5ea||fffd||fffd||fffd||fffd||fffd||fffd|", 1)
    Call FuncType.AddItem("|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|", 2)
    Call FuncType.AddItem("|fffd||fffd||fffd||9eaf||fffd||fffd|", 3)
    Call FuncType.AddItem("|fffd||fffd||fffd||3eaf||fffd||fffd|", 4)
    Call FuncType.AddItem("|373||fffd||1ba||fffd||fffd||fffd|", 5)
    
    FuncType.ListIndex = 0
    
    Call FuncList.Clear
    Dim i As Integer
    For i = 0 To UBound(NsFunction)
        Call FuncList.AddItem(NsFunction(i).FunctionName, i)
    Next i
    FuncList.Selected(0) = True
    
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode < 1 Then
        Me.Hide
        UserSelect = False
    End If
End Sub
Attribute VB_Name = "SelectVarietyForm"
Attribute VB_Base = "0{044CD393-DA11-4FAB-9B6B-12640C889366}{05F1BB38-0C6D-4044-8A14-58BBC431B4CC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim bChkflag As Boolean
Public UserSelect As Boolean
Public pEnumDate As Date

Private Sub StateChange(flag As Boolean)
    If Not bChkflag Then
        bChkflag = True
        If flag Then
            ChkGZ.Value = ChkAllBond.Value
            ChkJRZ.Value = ChkAllBond.Value
            ChkQYZ.Value = ChkAllBond.Value
            ChkYP.Value = ChkAllBond.Value
            CHKDQRZ.Value = ChkAllBond.Value
            ChkCJZ.Value = ChkAllBond.Value
            CHKXM.Value = ChkAllBond.Value
            CHKQS.Value = ChkAllBond.Value
        Else
            ChkAllBond.Value = ChkGZ.Value And ChkJRZ.Value And ChkQYZ.Value And ChkYP.Value And _
                               CHKDQRZ.Value And ChkCJZ.Value And CHKXM.Value And CHKQS.Value
        End If
        bChkflag = False
    End If
End Sub

Private Sub ChkAllBond_Click()
    Call StateChange(True)
End Sub

Private Sub ChkBond_Click()
    ChkAllBond.Enabled = ChkBond.Value
    ChkGZ.Enabled = ChkBond.Value
    ChkJRZ.Enabled = ChkBond.Value
    ChkQYZ.Enabled = ChkBond.Value
    ChkYP.Enabled = ChkBond.Value
    CHKDQRZ.Enabled = ChkBond.Value
    ChkCJZ.Enabled = ChkBond.Value
    CHKXM.Enabled = ChkBond.Value
    CHKQS.Enabled = ChkBond.Value
    ChkTime.Enabled = ChkBond.Value
    Chk1.Enabled = ChkBond.Value
    Chk2.Enabled = ChkBond.Value
    Chk3.Enabled = ChkBond.Value
    Chk4.Enabled = ChkBond.Value
End Sub

Private Sub ChkCJZ_Click()
    Call StateChange(False)
End Sub

Private Sub CHKDQRZ_Click()
    Call StateChange(False)
End Sub

Private Sub ChkGZ_Click()
    Call StateChange(False)
End Sub

Private Sub ChkJRZ_Click()
    Call StateChange(False)
End Sub

Private Sub CHKQS_Click()
    Call StateChange(False)
End Sub

Private Sub ChkQYZ_Click()
    Call StateChange(False)
End Sub

Private Sub CHKSZ_Click()

End Sub

Private Sub ChkTime_Click()

End Sub

Private Sub CHKXM_Click()
    Call StateChange(False)
End Sub

Private Sub ChkYP_Click()
    Call StateChange(False)
End Sub


Private Sub CmdCancel_Click()
    Me.Hide
    UserSelect = False
End Sub

Private Sub CmdOK_Click()
    Dim sInfo As String
    
    Dim myBondType As String
    Dim myQuotationType As String
    Dim myMarket As String
    Dim myCol As String
    Dim myDate As String
    
    
    If CheckData(sInfo) Then
        pEnumDate = DTPicker1.Value
        Me.Hide
        UserSelect = True
        
        
        '|fffd||fffd||237||fffd||fffd||fffd||f18f4||fffd||fffd||fffd||fffd||fffd|
        If IniFilePath <> "" Then
            myBondType = IIf(ChkBond.Value, ChkBond.Caption, "") & "," & IIf(ChkAllBond.Value, ChkAllBond.Caption, "") & "," & _
                        IIf(ChkTime.Value, ChkTime.Caption, "") & "," & IIf(ChkGZ.Value, ChkGZ.Caption, "") & "," & _
                        IIf(ChkJRZ.Value, ChkJRZ.Caption, "") & "," & IIf(ChkQYZ.Value, ChkQYZ.Caption, "") & "," & _
                        IIf(ChkYP.Value, ChkYP.Caption, "") & "," & IIf(ChkCJZ.Value, ChkCJZ.Caption, "") & "," & _
                        IIf(CHKQS.Value, CHKQS.Caption, "") & "," & IIf(CHKDQRZ.Value, CHKDQRZ.Caption, "") & "," & _
                        IIf(CHKXM.Value, CHKXM.Caption, "") & "," & IIf(Chk1.Value, Chk1.Caption, "") & "," & _
                        IIf(Chk2.Value, Chk2.Caption, "") & "," & IIf(Chk3.Value, Chk3.Caption, "") & "," & _
                        IIf(Chk4.Value, Chk4.Caption, "") & "," & IIf(ChkRepo.Value, ChkRepo.Caption, "") & "," & _
                        IIf(ChkLoan.Value, ChkLoan.Caption, "") & "," & IIf(ChkIndex.Value, ChkIndex.Caption, "") & "," & _
                        IIf(ChkFund.Value, ChkFund.Caption, "") & "," & IIf(ChkStock.Value, ChkStock.Caption, "")
                       
            myQuotationType = IIf(OptAll.Value, OptAll.Caption, "") & IIf(OptDeal.Value, OptDeal.Caption, "")
            myMarket = IIf(ChkBK.Value, ChkBK.Caption, "") & "," & IIf(ChkSH.Value, ChkSH.Caption, "") & "," & _
                    IIf(CHKSZ.Value, CHKSZ.Caption, "")
                    
            myCol = ComboBox1.Text & "," & ComboBox2.Text & "," & ComboBox3.Text & "," & ComboBox4.Text
            myDate = DTPicker1.Value
            
            Call objIni.SetPrivateProfileString("alpha|fffd||4ff||fffd|", "|1b7||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd|", myBondType, IniFilePath)
            Call objIni.SetPrivateProfileString("alpha|fffd||4ff||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", myQuotationType, IniFilePath)
            Call objIni.SetPrivateProfileString("alpha|fffd||4ff||fffd|", "|fffd||433||fffd||fffd||fffd||fffd||fffd|", myMarket, IniFilePath)
            Call objIni.SetPrivateProfileString("alpha|fffd||4ff||fffd|", "|461||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", myCol, IniFilePath)
            Call objIni.SetPrivateProfileString("alpha|fffd||4ff||fffd|", "|2b1||fffd||fffd|", myDate, IniFilePath)
        End If
        
        
    Else
        MsgBox sInfo, vbOKOnly + vbInformation, "|fffd||fffd||2be|"
    End If
End Sub

Private Sub ComboBox2_Change()
    On Error Resume Next
    If ComboBox2.ListIndex >= 1 Then
        ComboBox3.Enabled = True
    Else
        ComboBox3.Enabled = False
        ComboBox4.Enabled = False
        ComboBox3.ListIndex = 0
        ComboBox4.ListIndex = 0
    End If
End Sub

Private Sub ComboBox3_Change()
    If ComboBox2.ListIndex >= 1 And ComboBox3.ListIndex >= 1 Then
        ComboBox4.Enabled = True
    Else
        ComboBox4.Enabled = False
    End If
End Sub

Private Sub ComboBox4_Change()

End Sub

Private Sub DTPicker1_Change()
    If DTPicker1.Value = Date Then
        Label4.Caption = "|fffd||fffd||fffd||fffd|"
    Else
        Label4.Caption = ""
    End If
End Sub

Private Sub OptAll_Click()
    DTPicker1.Enabled = OptDeal.Value
End Sub

Private Sub OptDeal_Click()
    DTPicker1.Enabled = OptDeal.Value
End Sub

Private Sub UserForm_Activate()
    
    UserSelect = False
    
    ComboBox1.Clear
    ComboBox1.AddItem "|fffd||63c||fffd||fffd||fffd|"
    ComboBox1.AddItem "|fffd||fffd||fffd||fffd|"
    ComboBox1.AddItem "|fffd||433||fffd|"
    ComboBox1.AddItem "|fffd||fffd||fffd|"
    ComboBox1.Enabled = True
    ComboBox1.ListIndex = 0
    
    ComboBox2.Clear
    ComboBox2.AddItem "|fffd||fffd||461||fffd||fffd|"
    ComboBox2.AddItem "|fffd||63c||fffd||fffd||fffd|"
    ComboBox2.AddItem "|fffd||fffd||fffd||fffd|"
    ComboBox2.AddItem "|fffd||433||fffd|"
    ComboBox2.AddItem "|fffd||fffd||fffd|"
    ComboBox2.Enabled = True
    ComboBox2.ListIndex = 0
    
    ComboBox3.Clear
    ComboBox3.AddItem "|fffd||fffd||461||fffd||fffd|"
    ComboBox3.AddItem "|fffd||63c||fffd||fffd||fffd|"
    ComboBox3.AddItem "|fffd||fffd||fffd||fffd|"
    ComboBox3.AddItem "|fffd||433||fffd|"
    ComboBox3.AddItem "|fffd||fffd||fffd|"
    ComboBox3.Enabled = False
    ComboBox3.ListIndex = 0
    
    ComboBox4.Clear
    ComboBox4.AddItem "|fffd||fffd||461||fffd||fffd|"
    ComboBox4.AddItem "|fffd||63c||fffd||fffd||fffd|"
    ComboBox4.AddItem "|fffd||fffd||fffd||fffd|"
    ComboBox4.AddItem "|fffd||433||fffd|"
    ComboBox4.AddItem "|fffd||fffd||fffd|"
    ComboBox4.Enabled = False
    ComboBox4.ListIndex = 0
    
    If pEnumDate = 0 Then
        DTPicker1.Value = Date
        pEnumDate = 0
        Label4.Caption = "|fffd||fffd||fffd||fffd|"
    Else
        DTPicker1.Value = pEnumDate
    End If
    
    Dim myBondType As String
    Dim myQuotationType As String
    Dim myMarket As String
    Dim myCol As String
    Dim myDate As String
    Dim SelCol() As String
    
    If IniFilePath <> "" Then
        Call objIni.GetPrivateProfileString("alpha|fffd||4ff||fffd|", "|1b7||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd|", "", myBondType, IniFilePath)
        Call objIni.GetPrivateProfileString("alpha|fffd||4ff||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", myQuotationType, IniFilePath)
        Call objIni.GetPrivateProfileString("alpha|fffd||4ff||fffd|", "|fffd||433||fffd||fffd||fffd||fffd||fffd|", "", myMarket, IniFilePath)
        Call objIni.GetPrivateProfileString("alpha|fffd||4ff||fffd|", "|461||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", myCol, IniFilePath)
        Call objIni.GetPrivateProfileString("alpha|fffd||4ff||fffd|", "|2b1||fffd||fffd|", "", myDate, IniFilePath)
        
        If myBondType <> "" Then
            If InStr(myBondType, ChkBond.Caption) <> 0 Then
                ChkBond.Value = 1
            End If
            
            If InStr(myBondType, ChkAllBond.Caption) <> 0 Then
                ChkAllBond.Value = 1
            End If
            
            If InStr(myBondType, ChkTime.Caption) <> 0 Then
                ChkTime.Value = 1
            End If
            
            If InStr(myBondType, ChkGZ.Caption) <> 0 Then
                ChkGZ.Value = 1
            End If
            
            If InStr(myBondType, ChkJRZ.Caption) <> 0 Then
                ChkJRZ.Value = 1
            End If
            
            If InStr(myBondType, ChkQYZ.Caption) <> 0 Then
                ChkQYZ.Value = 1
            End If
            
            If InStr(myBondType, ChkYP.Caption) <> 0 Then
                ChkYP.Value = 1
            End If
            
            If InStr(myBondType, ChkCJZ.Caption) <> 0 Then
                ChkCJZ.Value = 1
            End If
            
            If InStr(myBondType, CHKQS.Caption) <> 0 Then
                CHKQS.Value = 1
            End If
            
            If InStr(myBondType, CHKDQRZ.Caption) <> 0 Then
                CHKDQRZ.Value = 1
            End If
            
            If InStr(myBondType, CHKXM.Caption) <> 0 Then
                CHKXM.Value = 1
            End If
            
            If InStr(myBondType, Chk1.Caption) <> 0 Then
                Chk1.Value = 1
            End If
            
            If InStr(myBondType, Chk2.Caption) <> 0 Then
                Chk2.Value = 1
            End If
            
            If InStr(myBondType, Chk3.Caption) <> 0 Then
                Chk3.Value = 1
            End If
            
            If InStr(myBondType, Chk4.Caption) <> 0 Then
                Chk4.Value = 1
            End If
            
            If InStr(myBondType, ChkRepo.Caption) <> 0 Then
                ChkRepo.Value = 1
            End If
            
            If InStr(myBondType, ChkLoan.Caption) <> 0 Then
                ChkLoan.Value = 1
            End If
            
            If InStr(myBondType, ChkIndex.Caption) <> 0 Then
                ChkIndex.Value = 1
            End If
            
            If InStr(myBondType, ChkFund.Caption) <> 0 Then
                ChkFund.Value = 1
            End If
            
            If InStr(myBondType, ChkStock.Caption) <> 0 Then
                ChkStock.Value = 1
            End If
            
        End If
        
        If myQuotationType <> "" Then
            If InStr(myQuotationType, OptAll.Caption) <> 0 Then
                OptAll.Value = True
            End If
            
            If InStr(myQuotationType, OptDeal.Caption) <> 0 Then
                OptDeal.Value = True
            End If
            
        End If
        
        If myMarket <> "" Then
            If InStr(myMarket, ChkBK.Caption) <> 0 Then
                ChkBK.Value = 1
            End If
        
            If InStr(myMarket, ChkSH.Caption) <> 0 Then
                ChkSH.Value = 1
            End If
        
            If InStr(myMarket, CHKSZ.Caption) <> 0 Then
                CHKSZ.Value = 1
            End If
        
        End If
        
        If myCol <> "" Then
            SelCol = Split(myCol, ",")
            ComboBox1.Text = SelCol(0)
            ComboBox2.Text = SelCol(1)
            ComboBox3.Text = SelCol(2)
            ComboBox4.Text = SelCol(3)
        End If
        
        If myDate <> "" Then
            DTPicker1.Value = CDate(myDate)
        End If
    End If
    
End Sub

Private Function CheckData(ErInfo As String) As Boolean
    CheckData = False
    If Not (ChkBond.Value Or ChkRepo.Value Or ChkLoan.Value Or ChkIndex.Value Or ChkStock.Value Or ChkFund.Value) Then
        ErInfo = "|fffd||fffd||fffd||fffd||461||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||375||fffd||1b7||fffd||5a3||fffd|"
        Exit Function
    End If
    
    If ChkBond.Value Then
        If Not (ChkGZ.Value Or ChkQYZ.Value Or ChkJRZ.Value Or ChkYP.Value Or CHKDQRZ.Value Or CHKQS.Value Or ChkCJZ.Value Or CHKXM.Value) Then
            ErInfo = "|fffd||fffd||fffd||fffd||461||fffd||fffd||4bb||fffd||fffd||56e||22f||fffd||fffd||fffd||363||fffd|"
            Exit Function
        End If
    End If
    
    If ChkBond.Value Then
        If Not (Chk1.Value Or Chk2.Value Or Chk3.Value Or Chk4.Value) Then
            ErInfo = "|fffd||fffd||fffd||fffd||461||fffd||fffd||4bb||fffd||fffd||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||363||fffd|"
            Exit Function
        End If
    End If
    
    If Not (ChkBK.Value Or ChkSH.Value Or CHKSZ.Value) Then
        ErInfo = "|fffd||fffd||fffd||fffd||461||fffd||fffd||4bb||fffd||fffd||fffd||433||fffd||fffd||fffd|"
        Exit Function
    End If
    
    If DTPicker1.Value > Date Then
        ErInfo = "|fffd||fffd||5fc||fffd||fffd||fffd||6b2||fffd||fffd||733||fffd||fffd||fffd||fffd||fffd||fffd||c8e1|"
        Exit Function
    End If
    
    'If ComboBox1.ListIndex + ComboBox1.ListIndex + ComboBox1.ListIndex + ComboBox1.ListIndex Then
    CheckData = True
End Function

Public Function GetuserSelectResult(iKind As Integer, iMarket As Integer, iBondtype As Integer, iAnaType As Integer, bDeal As Boolean, bNotDQ As Boolean, Order() As String, EnumDate As Date) As Boolean
    iKind = 0
    iBondtype = 0
    iAnaType = 0
    
    bDeal = False
    Me.Show
    
    If UserSelect Then
        '|fffd||b1||fffd|  0|fffd||fffd||56e||22f||fffd||fffd|1|fffd||fffd||fffd||639||fffd||fffd||fffd|2,|fffd||fffd||88ec|3,|fffd||fffd||1b1||fffd||fffd|4,|fffd||fffd||fffd||fffd|5,|5b8||fffd||fffd|
        If ChkBond.Value Then iKind = iKind + 1
        If ChkRepo.Value Then iKind = iKind + 2
        If ChkLoan.Value Then iKind = iKind + 4
        If ChkStock.Value Then iKind = iKind + 8
        If ChkFund.Value Then iKind = iKind + 16
        If ChkIndex.Value Then iKind = iKind + 32
        
        '0,|fffd||fffd||56e| 1,|fffd||fffd||fffd||fffd||56e| 2,|fffd||fffd||4b5||56e| 3,|fffd||fffd||fffd||fffd||1b1||fffd||fffd| 4,|fffd||3bc||fffd||56e||22f| 5,|22f||fffd||fffd||fffd||fffd||fffd||fffd||56e| 6,|fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e| 7,|fffd||fffd||fffd||2bf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f|
        If ChkGZ.Value Then iBondtype = iBondtype + 1
        If ChkJRZ.Value Then iBondtype = iBondtype + 2
        If ChkQYZ.Value Then iBondtype = iBondtype + 4
        If ChkYP.Value Then iBondtype = iBondtype + 8
        If ChkCJZ.Value Then iBondtype = iBondtype + 16
        If CHKQS.Value Then iBondtype = iBondtype + 32
        If CHKDQRZ.Value Then iBondtype = iBondtype + 64
        If CHKXM.Value Then iBondtype = iBondtype + 128
        
        '0|fffd||336||fffd| 1|fffd||fffd||fffd||fffd| 2|fffd||fffd||228| 3|fffd||fffd||5ea||fffd||fffd|
        If Chk1.Value Then iAnaType = iAnaType + 1
        If Chk2.Value Then iAnaType = iAnaType + 2
        If Chk3.Value Then iAnaType = iAnaType + 4
        If Chk4.Value Then iAnaType = iAnaType + 8
        
        '1 |fffd||fffd||fffd||43c||fffd|,2 |fffd||fffd||fffd||423||fffd|3 |fffd||fffd||fffd||fffd|
        If ChkBK.Value Then iMarket = iMarket + 1
        If CHKSZ.Value Then iMarket = iMarket + 2
        If ChkSH.Value Then iMarket = iMarket + 4
        
        bDeal = OptDeal.Value
        
        Dim UB As Integer
        UB = 0
            
        Dim sName(3)
        sName(0) = "|fffd||63c||fffd||fffd||fffd|"
        sName(1) = "|fffd||fffd||fffd||fffd|"
        sName(2) = "|fffd||433||fffd|"
        sName(3) = "|fffd||fffd||fffd|"
            
        If ComboBox2.ListIndex > 0 Then UB = UB + 1
        If ComboBox3.ListIndex > 0 Then UB = UB + 1
        If ComboBox4.ListIndex > 0 Then UB = UB + 1
        
        ReDim Order(UB)
        Order(0) = sName(ComboBox1.ListIndex)
        If UB >= 1 Then Order(1) = sName(ComboBox2.ListIndex - 1)
        If UB >= 2 Then Order(2) = sName(ComboBox3.ListIndex - 1)
        If UB >= 3 Then Order(3) = sName(ComboBox4.ListIndex - 1)
        
        bNotDQ = ChkTime.Value
        
        Unload Me
        GetuserSelectResult = True
    Else
        GetuserSelectResult = False
    End If
    
    EnumDate = pEnumDate
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public WithEvents Alpha As Adapters.AlphaAdapter
Attribute Alpha.VB_VarHelpID = -1

Private Sub Alpha_HQChange(ChangeKeys() As String)
    Call AlphaAdapter.OnPriceChange(ChangeKeys)
End Sub

Public Function NumberChangeLetter(ByVal iNumber As Integer) As String
    Dim iQuotient As Integer  '|fffd||fffd|
    Dim iResidual As Integer '|fffd||fffd||fffd||fffd|
    Dim strChr As String
    iQuotient = iNumber \ 26
    iResidual = iNumber Mod 26
    If iQuotient = 0 Then  '|fffd||fffd||2be| iNumber<26
        strChr = Chr(iResidual + 64)
    ElseIf iQuotient = 1 And iResidual = 0 Then
        strChr = Chr(26 + 64)
    Else                   '|fffd||fffd||2be| iNumber>26
        strChr = Chr(iQuotient + 64) & Chr(iResidual + 64)
    End If
    NumberChangeLetter = strChr
End Function

Private Function Transform(Row, Col) As String
    Transform = NumberChangeLetter(Col) & Format(Row)
End Function

Private Sub Alpha_PushEnumVariety(iKind As Integer, Code As String, ShortName As String, Market As String, KeyCode As String, theType As Integer, bDeal As Boolean)
    DoEvents
    Dim i As Long
    Dim C As Long
    Dim SN As String
    
    Dim Sheet As Worksheet
    Set Sheet = CurrentCell.Worksheet
    C = Col
    
    For i = 0 To UBound(Order)
        SN = Transform(Row, C)
        Sheet.Range(SN).NumberFormatLocal = "@"
        Select Case Order(i)
            Case "|fffd||63c||fffd||fffd||fffd|"
                Sheet.Range(SN) = KeyCode
            Case "|fffd||fffd||fffd||fffd|"
                Sheet.Range(SN) = Code
            Case "|fffd||433||fffd|"
                Sheet.Range(SN) = Market
            Case "|fffd||fffd||fffd|"
                Sheet.Range(SN) = ShortName
            Case Else
                Sheet.Range(SN) = ""
        End Select
        C = C + 1
    Next i
    Row = Row + 1
End Sub

Private Sub Workbook_Open()
    Call ModifyToolBars
    Call CheckCalMode
    Set AlphaExcelobject = New exAlphaExcelPorxy
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    Cancel = True
End Sub

'|fffd||135||fffd||fffd||631||fffd||2b1||fffd||536||fffd||fffd||fffd||fffd||fffd|
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    On Error Resume Next
    If Not Alpha Is Nothing Then Alpha.UnLinkAlplaApplication
    Set Alpha = Nothing
    Set AlphaExcelobject = Nothing
End Sub

Attribute VB_Name = "Waitform"
Attribute VB_Base = "0{0405188E-2161-4B14-8F2A-37F4C9E9AA8C}{AEB0182D-3822-43FD-9DFC-C8D310764603}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Attribute VB_Name = "axVersion"
Option Explicit

Public Const gMainVer As Long = 1
Public Const gSecVer As Long = 50          'Excel|fffd||13c||fffd||fffd||fffd||421||fffd||6c7e||fffd||fffd|

Public Sub ShowAbout()
    Dim f As frmAbout
    Dim DLLVer As String
    Dim A As String
    
    DLLVer = "|3b4||5aa|"
    
    On Error Resume Next
    If Not Alpha Is Nothing Then
        Call Alpha.GetAboutInfo(A, DLLVer)
    Else
        Set Alpha = New Adapters.AlphaAdapter
        Call Alpha.GetAboutInfo(A, DLLVer)
        Set Alpha = Nothing
    End If
    
    Set f = New frmAbout
    f.Label10.Caption = DLLVer
    
    f.Show
    Set f = Nothing
End Sub
Attribute VB_Name = "exAlphaExcelPorxy"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public Sub exInsert(Optional EnumDate As Date)
    pEnumDate = EnumDate
    InsertVariety
    pEnumDate = 0
End Sub

Public Sub exStartAlpha()
    StartAlpha
End Sub

Public Sub exLinkAlpha()
    LinkAlpla
End Sub

Public Function exIsAlphaRun() As Boolean
    If Not Alpha Is Nothing Then
        exIsAlphaRun = Alpha.IsAlphaRun
    End If
End Function

Public Function exIsAlphaLink() As Boolean
    If Not Alpha Is Nothing Then
        exIsAlphaLink = Alpha.IslinkAlpha
    End If
End Function

Public Function exGetInterfacePathName() As String
    exGetInterfacePathName = ThisWorkbook.FullName
End Function
Attribute VB_Name = "frmAbout"
Attribute VB_Base = "0{E2A2CD1B-2622-4060-A67A-F8DBBF207CF5}{331C4FD0-B676-41A1-AC03-4F5A40769896}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()
    Label5.Caption = Format(gMainVer) & "." & Format(gSecVer)
End Sub


INQUEST-PP=macro
