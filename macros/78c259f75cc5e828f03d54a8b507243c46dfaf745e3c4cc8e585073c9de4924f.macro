Attribute VB_Name = "InsertNRows"
Sub InsertNRows()
Dim tbl As Word.Table
Dim doc As Word.Document
Dim strRows As String
Dim nrRows As Long
Dim counter As Long

On Error GoTo ErrHandler
If Selection.Range.Information(wdWithInTable) Then
Set tbl = Selection.Tables(1)
strRows = InputBox("Enter number of rows to insert")
If IsNumeric(strRows) Then nrRows = CLng(strRows)
For counter = 1 To nrRows
tbl.Rows.Add (Selection.Rows(1))
Next
End If

Exit Sub

ErrHandler:
Select Case Err.Number
Case Else
MsgBox Err.Description & vbCr & Err.Number
End Select
End Sub


Attribute VB_Name = "LinkWizardLocal"
Attribute VB_Base = "0{E3B378A2-5D88-4F2E-83BF-FC65770C4959}{52B10D6F-47AB-493F-88C6-04039C024AAF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False









Public myDefaultsFile As String

Private Sub Label1_Click()

End Sub

Private Sub SaveConfigButton_Click()
    Open myDefaultsFile For Output As #1
    Write #1, ComboBox1.ListIndex, LocalDir.text
    Close #1
End Sub

Private Sub UserForm_Initialize()
    Dim fs, fd, LListIndex, LLocalDir
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set fd = fs.GetSpecialFolder(2)
    myDefaultsFile = fd + "\LinkWizardLocal " + Application.UserName + ".cfg"
    
    ComboBox1.AddItem "Create links to local folder"
    ComboBox1.AddItem "Remove links to local folder"
        
    LListIndex = 0
    LLocalDir = "C:\RAN\RAN_Tdocs2011\"
    
    If (fs.FileExists(myDefaultsFile)) Then
       Open myDefaultsFile For Input As #1
       If (Not EOF(1)) Then
          Input #1, LListIndex
       End If
       If (Not EOF(1)) Then
          Input #1, LLocalDir
       End If
       Close #1
    End If
    
    ComboBox1.ListIndex = LListIndex
    LocalDir.text = LLocalDir
    Call ComboBox1_Change
End Sub

Private Sub ComboBox1_Change()
    LocalDir.Enabled = (ComboBox1.ListIndex < 1)
End Sub

Private Sub CancelButton_Click()
    Unload LinkWizardLocal
End Sub

Private Sub OkButton_Click()
    Call Add_R1_Links(ComboBox1.ListIndex, LocalDir.text)
    Unload LinkWizardLocal
End Sub


Function genKey(ByRef FileName As String) As String
   If InStr(1, FileName, "-") = 3 Or InStr(1, FileName, "_") = 3 Then
      genKey = LCase(Left(FileName, 2) & Mid(FileName, 4, 7))
   Else
      genKey = LCase(Left(FileName, 10))
   End If
End Function

Function uri_escape(ByRef text As String) As String
   uri_escape = text
   uri_escape = Replace(uri_escape, "%", "%25")
   uri_escape = Replace(uri_escape, " ", "%20")
   uri_escape = Replace(uri_escape, "+", "%2B")
   uri_escape = Replace(uri_escape, ",", "%2C")
   uri_escape = Replace(uri_escape, "&", "%26")
End Function

Function existsFileDir(sSpec As String) As Boolean
   Dim af As Long
   af = GetFileAttributes(sSpec)
   existsFileDir = (af <> -1)
End Function


Sub Add_R1_Links(Action As Long, LocalDir As String)
    Dim sFileName As String
    Dim sPath As String
    Dim sWildcard As String
    Dim sPrefix As String
    Dim blocksize As Integer
    Dim arrayPtr As Integer
    Dim filesArray() As String
    Dim keysArray() As String
    Dim myPatt As String
    Dim myKey As String
    Dim found As Integer
    Dim hyper_link As Word.Hyperlink
    
    sPath = "C:\RAN\RAN_Tdocs2011"
    sWildcard = "*"
    sPrefix = "C:\RAN\RAN_Tdocs2011"
    blocksize = 100
    
    ReDim filesArray(blocksize) As String
    ReDim keysArray(blocksize) As String
    
    If Action < 1 Then
       
         sPrefix = LocalDir
         sPath = sPrefix
    
        If Not existsFileDir(sPath) Then
            MsgBox ("Error reading directory: " + sPath)
            Exit Sub
        End If
    
        sFileName = Dir$(sPath + "\" + sWildcard)
        If sFileName = "" Then
            MsgBox ("Error reading Tdocs in: " + sPath)
            Exit Sub
        End If
    
        arrayPtr = 0
        Do While sFileName > ""
             If arrayPtr > UBound(filesArray) Then
                ReDim Preserve filesArray(UBound(filesArray) + blocksize)
                ReDim Preserve keysArray(UBound(keysArray) + blocksize)
            End If
            filesArray(arrayPtr) = sFileName
            keysArray(arrayPtr) = genKey(sFileName)
            arrayPtr = arrayPtr + 1
            sFileName = Dir$
        Loop
    End If
    
    Selection.Find.ClearFormatting
    With Selection.Find
        .ClearAllFuzzyOptions
        .text = "(<R1-[0-9]{7}>)"
        .Replacement.text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchFuzzy = False
        .MatchWildcards = True
    End With
    
    Do While (Selection.Find.Execute)
        For Each hyper_link In Selection.Hyperlinks
            hyper_link.Delete
        Next

        If Action < 1 Then
            myPatt = Selection.text
            myKey = genKey(myPatt)
            found = -1
            For i = 0 To arrayPtr - 1
                If myKey = keysArray(i) Then
                    If found < 0 Then
                        found = i
                    Else
                        MsgBox ("Warning: More than one document found for " + myPatt)
                    End If
                End If
            Next
        
            If found >= 0 Then
                ActiveDocument.Hyperlinks.Add _
                Anchor:=Selection.Range, _
                Address:=sPrefix + uri_escape(filesArray(found)), _
                SubAddress:="", _
                ScreenTip:="", _
                TextToDisplay:="" + myPatt + ""
            End If
        End If
   Loop
End Sub


Attribute VB_Name = "LinkWizardModule"
Declare Function GetFileAttributes Lib "Kernel32" Alias "GetFileAttributesA" (ByVal strPath As String) As Boolean
Attribute VB_Name = "LinkWizardModuleLocal"
Declare Function GetFileAttributes Lib "Kernel32" Alias "GetFileAttributesA" (ByVal strPath As String) As Boolean

Sub Start_LinkWizardLocal()
    LinkWizardLocal.Show
End Sub

Attribute VB_Name = "NewMacros"
Sub CreatePDF_EPDFD5()
Attribute CreatePDF_EPDFD5.VB_Description = "Macro created 27/06/2009 by Matthew Baker"
Attribute CreatePDF_EPDFD5.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.CreatePDF_EPDFD5"
'
' CreatePDF_EPDFD5 Macro
' Macro created 27/06/2009 by Matthew Baker
'

End Sub
Sub PasteUnformattedText()
Attribute PasteUnformattedText.VB_Description = "Macro recorded 27/06/2009 by Matthew Baker"
Attribute PasteUnformattedText.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
'
' Macro1 Macro
' Macro recorded 27/06/2009 by Matthew Baker
'
    Selection.PasteSpecial Link:=False, DataType:=wdPasteText, Placement:= _
        wdInLine, DisplayAsIcon:=False
End Sub
Sub Approve()
Attribute Approve.VB_Description = "Macro recorded 05/11/2009 by Matthew Baker"
Attribute Approve.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Approve"
'
' Approve Macro
' Macro recorded 05/11/2009 by Matthew Baker
'
    Selection.Range.HighlightColorIndex = wdBrightGreen
End Sub
Sub Postpone()
Attribute Postpone.VB_Description = "Macro recorded 05/11/2009 by Matthew Baker"
Attribute Postpone.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Postpone"
'
' Postpone Macro
' Macro recorded 05/11/2009 by Matthew Baker
'
    Options.DefaultHighlightColorIndex = wdYellow
    Selection.Range.HighlightColorIndex = wdYellow
End Sub
Sub Reject()
Attribute Reject.VB_Description = "Macro recorded 05/11/2009 by Matthew Baker"
Attribute Reject.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
'
' Macro1 Macro
' Macro recorded 05/11/2009 by Matthew Baker
'
    Options.DefaultHighlightColorIndex = wdRed
    Selection.Range.HighlightColorIndex = wdRed
End Sub
Sub Email()
Attribute Email.VB_Description = "Macro recorded 05/05/2010 by Alcatel-Lucent"
Attribute Email.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Email"
'
' Email Macro
' Macro recorded 05/05/2010 by Alcatel-Lucent
'
    Options.DefaultHighlightColorIndex = wdTurquoise
    Selection.Range.HighlightColorIndex = wdTurquoise
End Sub
Sub insertNewAcronym()
Attribute insertNewAcronym.VB_Description = "Macro recorded 17/09/2011 by Matthew Baker"
Attribute insertNewAcronym.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.insertNewAcronym"
'
' insertNewAcronym Macro
' Macro recorded 17/09/2011 by Matthew Baker
'
    Selection.TypeText text:="{\bf  } & .\\ & \\ \hline \\"
    Selection.TypeParagraph
End Sub
Sub NoHighlight()
Attribute NoHighlight.VB_Description = "Macro recorded 10/11/2011 by Alcatel-Lucent"
Attribute NoHighlight.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.NoHighlight"
'
' NoHighlight Macro
' Macro recorded 10/11/2011 by Alcatel-Lucent
'
    Options.DefaultHighlightColorIndex = wdNoHighlight
    Selection.Range.HighlightColorIndex = wdNoHighlight
End Sub
Sub hangingIndent()
Attribute hangingIndent.VB_Description = "Macro recorded 13/05/2012 by Alcatel-Lucent2"
Attribute hangingIndent.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.hangingIndent"
'
' hangingIndent Macro
' Macro recorded 13/05/2012 by Alcatel-Lucent2
'
    With Selection.ParagraphFormat
        .LeftIndent = CentimetersToPoints(2.54)
        .FirstLineIndent = CentimetersToPoints(-2.54)
    End With
End Sub
Sub R112()
Attribute R112.VB_Description = "Macro recorded 16/05/2012 by Alcatel-Lucent-4"
Attribute R112.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.R112"
'
' R112 Macro
' Macro recorded 16/05/2012 by Alcatel-Lucent-4
'
    Selection.TypeText text:="R1-16"
End Sub
Sub RevisionOfR112()
Attribute RevisionOfR112.VB_Description = "Macro recorded 16/05/2012 by Alcatel-Lucent-4"
Attribute RevisionOfR112.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.RevisionOfR112"
'
' RevisionOfR112 Macro
' Macro recorded 16/05/2012 by Alcatel-Lucent-4
'
    Selection.TypeText text:="Revision of R1-16"
End Sub
Sub WorkingAssumption()
Attribute WorkingAssumption.VB_Description = "Macro recorded 07/08/2012 by Matthew Baker"
Attribute WorkingAssumption.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.Macro1"
'
' WorkingAssumption Macro
' Macro recorded 07/08/2012 by Matthew Baker
'
    Options.DefaultHighlightColorIndex = wdDarkYellow
    Selection.Range.HighlightColorIndex = wdDarkYellow
End Sub
Sub DisplayFilename()
'
' DisplayFilename Macro
' Macro recorded 07/08/2012 by Matthew Baker
'
   frmFilename.FilenameText = Selection.text
   frmFilename.Left = Abs(Application.Left) + ActiveWindow.Width - frmFilename.Width - 50
   frmFilename.Show
   
End Sub
Sub ReduceIndent()
'
' ReduceIndent Macro
'
'
    Selection.Range.ListFormat.ListOutdent
End Sub
Sub StartDisplayMode()
'
' StartDisplayMode Macro
'
'
    WordBasic.PageSetupMargins RightMargin:="2"
    ActiveWindow.ActivePane.View.Zoom.Percentage = 190
End Sub
Sub EndDisplayMode()
'
' EndDisplayMode Macro
'
'
    WordBasic.PageSetupMargins RightMargin:="2"
    ActiveWindow.ActivePane.View.Zoom.Percentage = 100
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Name = "frmFilename"
Attribute VB_Base = "0{2DE3EC85-46D2-4DFD-A190-B971C68BEEFC}{A78BE3AD-1D08-4B10-82DA-BCDA3BD32563}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'Written By RobDog888 - VB/Office Guru|fffd|
Private Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" ( _
                    ByVal lpClassName As String, _
                    ByVal lpWindowName As String) As Long
                    
Private Declare Function SetWindowPos Lib "user32" ( _
                    ByVal hwnd As Long, _
                    ByVal hWndInsertAfter As Long, _
                    ByVal X As Long, _
                    ByVal Y As Long, _
                    ByVal cx As Long, _
                    ByVal cy As Long, _
                    ByVal wFlags As Long) As Long

Private Const HWND_TOPMOST = -1
Private Const SWP_NOMOVE = &H2
Private Const SWP_NOSIZE = &H1
Private mlHwnd As Long


Private Sub FilenameText_Click()

End Sub

Private Sub UserForm_Initialize()
    mlHwnd = FindWindow("ThunderDFrame", "Current Tdoc")
    Do While mlHwnd = 0
        mlHwnd = FindWindow("ThunderDFrame", "Current Tdoc")
        DoEvents
    Loop
    SetWindowPos mlHwnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE Or SWP_NOSIZE
End Sub


INQUEST-PP=macro
