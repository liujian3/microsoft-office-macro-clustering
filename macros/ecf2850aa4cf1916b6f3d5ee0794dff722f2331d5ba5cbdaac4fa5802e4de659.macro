Attribute VB_Name = "Choice"
Attribute VB_Base = "0{326B1D42-14A2-48A4-B3B7-6D30986C6CC3}{1B33C9A5-0F29-4333-9EE9-F2F9545793AA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()

Yes.Value = False
No.Value = False
Unknown.Value = False


End Sub
Private Sub Yes_Click()

ChoiceValue = "yes"
Unload Choice


End Sub


Private Sub No_Click()

ChoiceValue = "no"
Unload Choice

End Sub


Private Sub Unknown_Click()

ChoiceValue = "unknown"
Unload Choice

End Sub

Attribute VB_Name = "Common_Subs"
Public j As Integer
Public AddComponent As Boolean
Public CompNumb As Integer
'Public contr As Control
Public ctrl As Control
Public ready As Boolean
Public Materialtype As String
Public FileName As String
Public CanSave As Boolean
Public ChoiceValue As String
'Public IsRawmaterial As Boolean
Public FoodComplianceValue As String
Public Section1valid As Boolean
Public Section2valid As Boolean
Public Section3valid As Boolean
Public Section3avalid As Boolean
Public Section4valid As Boolean
Public Section5valid As Boolean
Public IsPAC As Boolean



Public Sub ClearWorkbook()

Dim xWs As Worksheet
Dim Sheet1exist As Boolean
Sheet1exist = False

'Check if Sheet 1 exists, if not rename another Sheet into Sheet 1
For Each xWs In Application.ActiveWorkbook.Worksheets
  If xWs.Name = "Sheet1" Then
     Sheet1exist = True
  End If
Next

If Sheet1exist = False Then
    ActiveSheet.Name = "Sheet1"
End If


'Delete all sheets except Sheet 1
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    For Each xWs In Application.ActiveWorkbook.Worksheets
        If xWs.Name <> "Sheet1" Then
            xWs.Delete
        End If
    Next
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True


'Empty Sheet 1
Range("A:G").Select
Selection.Delete Shift:=xlUp
j = 1


End Sub

 Public Sub Renumber()

' Changes the Reference Names for all Worksheets in the active Workbook to Sheet + incrementing integer

Dim i As Integer, ws As Worksheet
i = 0
' Change to Temp first to prevent Naming errors
For Each ws In ActiveWorkbook.Worksheets
    i = i + 1
    On Error Resume Next
    ws.Parent.VBProject.VBComponents(ws.CodeName).Properties("_CodeName") = _
        "Temp" & i
    On Error GoTo 0
Next ws
' Change to Sheet + incrementing integer
i = 0
For Each ws In ActiveWorkbook.Worksheets
    i = i + 1
    On Error Resume Next
    ws.Parent.VBProject.VBComponents(ws.CodeName).Properties("_CodeName") = _
        "Sheet" & i
    On Error GoTo 0
Next ws
Set ws = Nothing
End Sub


Public Sub MergeMyCells()

        With Selection
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .WrapText = True
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlContext
            .MergeCells = False
        End With
        Selection.Merge
End Sub

Public Sub FormatAsSectionHeader()

Range("A" & j & ":" & "I" & j).Select
MergeMyCells

With Selection
    .HorizontalAlignment = xlCenter
End With

With Selection.Font
    .Name = "Calibri"
    .Size = 12
    .Bold = True
End With

With Selection.Interior
    .Pattern = xlSolid
    .PatternColorIndex = xlAutomatic
    .ThemeColor = xlThemeColorDark2
    .TintAndShade = -9.99786370433668E-02
    .PatternTintAndShade = 0
End With


End Sub

Public Sub obligatory(what As Control, where As String)

If where = "" Then
what.BackColor = &HC0C0FF
    Else
what.BackColor = &H8000000F
End If

End Sub

Public Sub CheckIfPAC()
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''' Check if the file is in PAC format '''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

On Error GoTo Mistake

If Sheets(1).Name <> "Sheet1" Or Sheets(2).Name <> "General" Or Sheets(3).Name <> "ComponentsList" Or Sheets(4).Name <> "OtherInfo" Or Sheets(5).Name <> "Signature" Then
    GoTo Mistake
End If
LastRow = Sheets("ComponentsList").UsedRange.Rows(Sheets("ComponentsList").UsedRange.Rows.Count).Row
If LastRow <> Worksheets.Count - 5 Then
    GoTo Mistake
End If

IsPAC = True


Exit Sub

Mistake:
IsPAC = False
End Sub



Public Sub SetDashboardColors()



UserFormSection1.Show vbModeless
Section1valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
For Each ctrl In UserFormSection1.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section1valid = False
        End If
Next ctrl
Unload UserFormSection1

UserFormSection2.Show vbModeless
Section2valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
UserFormSection2.MaterialTypeLabel.BackColor = &H8000000F
    If Worksheets("ComponentsList").Cells(CompNumb, 3) = "" Then
    UserFormSection2.MaterialTypeLabel.BackColor = &HC0C0FF
    Section2valid = False
Else
    UserFormSection2.MaterialTypeLabel.BackColor = &H8000000F
    Section2valid = True
End If
For Each ctrl In UserFormSection2.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section2valid = False
        End If
Next ctrl
Unload UserFormSection2

UserFormSection3.Show vbModeless
Section3valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
For Each fram In UserFormSection3.Controls ' <-- loop through controls of current page
        If TypeOf fram Is Frame Then ' <-- check if control type is Frame
            If fram.Visible = True Then
                
                For j = 0 To fram.Controls.Count - 1   '<-- loop through all items related to the current Frame collection
                    If fram.Controls(j).BackColor = &HC0C0FF And fram.Controls(j).Visible = True Then
                        Section3valid = False
                        'MsgBox fram.Controls(j).Name '<-- display a message box
                    End If
                    
                Next j
            End If
        End If
Next fram
Unload UserFormSection3

UserFormSection3a.Show vbModeless
Section3avalid = True
For Each ctrl In UserFormSection3a.Controls
   If ctrl.BackColor = &HC0C0FF Then
       Section3avalid = False
   End If
Next ctrl
Unload UserFormSection3a
    

 
If Worksheets("Component" & CompNumb).Cells(1, 3).Value = "not in migrateable contact" Then                         'need to consider that component sheet is intentionally blank becasue not in contact with formulation
    Section3valid = True
    Section3avalid = True
End If
    
    

  
Section4valid = True

UserFormSection5.Show vbModeless
Section5valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
For Each ctrl In UserFormSection5.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section5valid = False
        End If
Next ctrl

Unload UserFormSection5
    
End Sub
Attribute VB_Name = "FoodCompliance"
Attribute VB_Base = "0{B55157BD-F92C-43B7-A26D-0D219C8C3170}{C359F71E-79EE-43F7-A197-69B8FBC82816}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()

Yes1.Value = False
Yes2.Value = False
No.Value = False
Unknown.Value = False


Yes1.Caption = "Packaging component is compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC. Compliance has been assessed for the component itself."
Yes2.Caption = "The composition of all raw materials used for the manufacturing of the component are compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC. However, compliance has not been assessed for the component itself."
No.Caption = "Packaging component is not compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC."
Unknown.Caption = "Compliance of the packaging component with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC is unknown."


End Sub
Private Sub Yes1_Click()

FoodComplianceValue = "yes1"
Unload FoodCompliance


End Sub

Private Sub Yes2_Click()

FoodComplianceValue = "yes2"
Unload FoodCompliance


End Sub

Private Sub No_Click()

FoodComplianceValue = "no"
Unload FoodCompliance

End Sub


Private Sub Unknown_Click()

FoodComplianceValue = "unknown"
Unload FoodCompliance

End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "Module2"
Sub test()
Attribute test.VB_ProcData.VB_Invoke_Func = " \n14"
'
' test Macro
'

'
    Selection.NumberFormat = "@"
    Range("F1").Select
    ActiveCell.FormulaR1C1 = "1 %"
    Range("H13").Select
End Sub


'For Each fram In Me.Controls
'    If TypeName(fram) = "Frame" And fram.Visible = True Then
'        For Each contr In fram.Controls
'            If TypeName(contr) = "CommandButton" And contr.Visible = True Then
'                If contr.Caption = "Click for Yes/No" Then
'                    ready = False
'                End If
'            End If
'        Next
'    End If
'Next

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

Application.WindowState = xlMaximized 'maximize Excel
ActiveWindow.WindowState = xlMaximized 'maximize the workbook in Excel

CanSave = False

'Delete all Worksheets and Empty Sheet 1
ClearWorkbook
Worksheets("Sheet1").Activate

Application.ScreenUpdating = False

UserFormMainMenu.Show

End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)


'Do not allow normal saving function

If CanSave = False Then

    answer = InputBox("Attention ! You are attempting to overwrite the original Macro File." & vbCrLf & "Please use the 'save' function in the macro if you want to save your attestation as a PAC file." & vbCrLf & "Otherwise, if you really want to proceed, type 'yes'")
        If answer = "yes" Then
        Cancel = False
    Else
        Cancel = True
    End If

End If
End Sub

Attribute VB_Name = "UserFormDashboard"
Attribute VB_Base = "0{8AE9B483-6580-4CAD-8495-4BCAD5935A29}{9DC5D038-99E0-4FE3-9624-3C4D9C51C3C6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub UserForm_Initialize()

'Size the Userform fullscreen and position the frame in the middle
UserFormDashboard.Width = Application.Width
UserFormDashboard.Height = Application.Height
Frame1.Left = UserFormDashboard.Width / 2 - Frame1.Width / 2
Frame1.Top = UserFormDashboard.Height / 2 - Frame1.Height / 2

UserFormDashboard.Caption = "Dashboard"



BoxComponentsList.Visible = True
CommandButtonSection23.BackColor = &HC0C0FF




'If the attestation is about a raw material, label the add/modify button as "raw material"
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        CompNumb = 1
        BoxComponentsList.Height = 40
        CommandButtonAdd.Caption = "Add Raw Material"
        CommandButtonDelete.Caption = "Delete Raw Material"
        CommandButtonModify.Caption = "Edit Raw Material"
    Else
        RawmaterialName.Visible = False
        CommandButtonAdd.Caption = "Add Component"
        CommandButtonDelete.Caption = "Delete Component"
        CommandButtonModify.Caption = "Edit Component"
End If


'Set visibilities, depending on whether it is the first raw material/component
If Worksheets("ComponentsList").Cells(1, 1) = "" Then
    Section2valid = False
    CommandButtonSection23.Visible = True
    CommandButtonAdd.Visible = False
    CommandButtonDelete.Visible = False
    CommandButtonModify.Visible = False
    
Else
    CommandButtonSection23.Visible = False
    If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        CommandButtonAdd.Visible = False
    Else
        CommandButtonAdd.Visible = True
    End If
    CommandButtonDelete.Visible = True
    CommandButtonModify.Visible = True
End If


'Clear the listbox and re-initialize
BoxComponentsList.Clear
i = 1
Do Until Sheets("ComponentsList").Cells(i, 1).Value = "" Or i = 200
    With BoxComponentsList
        .AddItem Sheets("ComponentsList").Cells(i, 2).Value
    End With
    i = i + 1
Loop



'Set buttons to green if data has already been entered



If Section1valid = True Then
    CommandButtonSection1.BackColor = &HC0FFC0
Else
    CommandButtonSection1.BackColor = &HC0C0FF
End If

If Section2valid = True And Section3valid = True And Section3avalid = True Then
    LabelSection23.BackColor = &HC0FFC0
Else
    LabelSection23.BackColor = &HC0C0FF
End If

If Section4valid = True Then
    CommandButtonSection4.BackColor = &HC0FFC0
Else
    CommandButtonSection4.BackColor = &HC0C0FF
End If

If Section5valid = True Then
    CommandButtonSection5.BackColor = &HC0FFC0
Else
    CommandButtonSection5.BackColor = &HC0C0FF
End If


End Sub





'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''Buttons on sections 1, 4 & 5'''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub CommandButtonSection1_Click()
UserFormSection1.Show
UserForm_Initialize
End Sub

Private Sub CommandButtonSection4_Click()
UserFormSection4.Show
UserForm_Initialize
End Sub
Private Sub CommandButtonSection5_Click()
UserFormSection5.Show
UserForm_Initialize
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''Commands for adding/editing/deleting new materil/item'''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub BoxComponentsList_Click()

'Select the component in the list to to modify or delete
For i = 0 To BoxComponentsList.ListCount - 1
    If BoxComponentsList.Selected(i) Then
        CompNumb = BoxComponentsList.ListIndex + 1
    End If
Next i

End Sub

Private Sub CommandButtonSection23_Click()  'Virtually click on "Add" Button
CommandButtonAdd_Click
End Sub

Private Sub CommandButtonAdd_Click()

'Create a new worksheet for the component and open Userform 2 for general info on the component
CompNumb = BoxComponentsList.ListCount + 1

With ThisWorkbook
 .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "Component" & CompNumb
End With

UserFormSection2.Show
   
'Write the Name and Materialtype into the newly created componentworksheet
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Worksheets("ComponentsList").Cells(1, 1) = CompNumb
Worksheets("Component" & CompNumb).Range("A" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 2)
Worksheets("Component" & CompNumb).Range("B" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 3)


UserForm_Initialize

End Sub

Private Sub CommandButtonDelete_Click()

'Rename the Component Worksheet
Worksheets("Component" & CompNumb).Name = "Delete"

'Go through all Component Worksheets and renumber them
For i = CompNumb + 1 To BoxComponentsList.ListCount
    Worksheets("Component" & i).Name = "Component" & i - 1
    Worksheets("ComponentsList").Cells(i, 1).Value = Worksheets("ComponentsList").Cells(i, 1).Value - 1
Next i

'Delete the component in the Componentlist and delete the Component Worksheet
Worksheets("ComponentsList").Rows(CompNumb).Delete
Worksheets("Delete").Delete

'Clear the listbox and re-initialize without the deleted component
BoxComponentsList.Clear
UserForm_Initialize

End Sub

Private Sub CommandButtonModify_Click()

'Make the changes to the general entries in the componentslist
UserFormSection2.Show
Worksheets("Component" & CompNumb).Activate

'Update the componentslist and the individual component sheet based on the changes made in Userform2
Range("A" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 2)
  
'If the changed component is no longer in contact with the formula, delete the content of the component worksheet
If Worksheets("ComponentsList").Cells(CompNumb, 9).Value = "no" Then
    Worksheets("Component" & CompNumb).UsedRange.ClearContents
    Range("A" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 2)
    Range("B" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 3)
    Worksheets("Component" & CompNumb).Range("C" & 1).Value = "not in migrateable contact"
End If

'If the Material type changed, update it in the component worksheet and delete the rest of the content
If Worksheets("ComponentsList").Cells(CompNumb, 3).Value <> Range("B" & 1).Value Then
    Worksheets("Component" & CompNumb).UsedRange.ClearContents
    Range("A" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 2)
    Range("B" & 1).Value = Worksheets("ComponentsList").Cells(CompNumb, 3)
End If
                     
'Clear the listbox and re-initialize without the modified component
BoxComponentsList.Clear
UserForm_Initialize
                            
End Sub

Private Sub CommandButtonReturn_Click()
'Go back to Main Menue
Unload UserFormDashboard
UserFormMainMenu.Show

End Sub



Private Sub Setup()
'Check if raw material / item and whether already filled out - set visibilities accordingly

If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
    CompNumb = 1
    RawmaterialName.Visible = True
    RawmaterialName.Caption = Worksheets("ComponentsList").Cells(1, 2)
    BoxComponentsList.Visible = False
    CommandButtonAdd.Visible = False
    CommandButtonDelete.Visible = False
    CommandButtonModify.Visible = True
    If RawmaterialName.Caption = "" Then                                    'this means that no component exits yet
        CommandButtonModify.Caption = "Add Raw Material"
    Else
        CommandButtonModify.Caption = "Edit Raw Material"
    End If
    
    With ThisWorkbook
        If .Sheets.Count < 6 Then                                           'this means that Component(1)Sheet does not exit yet and needsto be added
            .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "Component1"
        End If
    End With
    Worksheets("ComponentsList").Cells(1, 1) = CompNumb  'Start to fill out Sheet Component(1) with Name, Material Type and migrateable contact                                  ''''Do I really need this here ???????
    Worksheets("Component1").Range("A" & 1).Value = Worksheets("ComponentsList").Cells(1, 2)
    Worksheets("Component1").Range("B" & 1).Value = Worksheets("ComponentsList").Cells(1, 3)
    If Worksheets("ComponentsList").Cells(1, 9) <> "yes" Then
        Worksheets("Component1").Range("C" & 1).Value = "not in migrateable contact"
    End If

Else
    RawmaterialName.Visible = False
    BoxComponentsList.Visible = True
    With ThisWorkbook
        If .Sheets.Count < 6 Then                                           'this means that Component(1)Sheet does not exit yet and should not show "modify" or "delete"
            CommandButtonModify.Visible = True
            CommandButtonDelete.Visible = True
        Else
            CommandButtonModify.Visible = True
            CommandButtonDelete.Visible = True
        End If
    End With
    CommandButtonAdd.Visible = True
    CommandButtonAdd.Caption = "Add Component"
    CommandButtonModify.Caption = "Edit Component"
    CommandButtonDelete.Caption = "Delete Component"
    BoxComponentsList.Clear
    i = 1
    Do Until Sheets("ComponentsList").Cells(i, 1).Value = "" Or i = 200
        With BoxComponentsList
            .AddItem Sheets("ComponentsList").Cells(i, 2).Value
        End With
        i = i + 1
    Loop
    
End If

End Sub

Attribute VB_Name = "UserFormMainMenu"
Attribute VB_Base = "0{BA08532E-E65C-43FA-AB82-D2B474BA94B7}{84D8E75C-D59A-41B2-8254-356C8B035BFD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Section33a As Boolean
Dim wb1 As Workbook
Dim wb2 As Workbook
Private Sub UserForm_Initialize()

Section1valid = False
Section2valid = False
Section3valid = False
Section3avalid = False
Section4valid = False
Section5valid = False

CurrentFileName.Caption = "Current Attestation File :  " & FileName

For Each ctrl In UserFormMainMenu.Controls
    ctrl.Visible = True
Next ctrl
Item.Visible = False
Rawmaterial.Visible = False
 
 'Size the Userform to fullscreen and position the frame and picture in the middle

UserFormMainMenu.Width = Application.Width
UserFormMainMenu.Height = Application.Height
Frame1.Left = UserFormMainMenu.Width / 2 - Frame1.Width / 2
Frame1.Top = UserFormMainMenu.Height / 2 - Frame1.Height / 2
Image1.Left = UserFormMainMenu.Width / 2 - Image1.Width / 2
Image1.Top = UserFormMainMenu.Height / 2 - Image1.Height / 2
 
 
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''Work on the current attestation''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub CurrentFileName_Click()

CheckIfPAC
If IsPAC = True Then
    Section33a = True
    For CompNumb = 1 To Worksheets.Count - 5
        Unload UserFormMainMenu
        Application.ScreenUpdating = False
        SetDashboardColors
        
        If Section3valid = False Or Section3avalid = False Then
            Section33a = False
        End If
        Application.ScreenUpdating = True
    Next CompNumb
        If Section33a = False Then
            Section3valid = False
        End If
    
    UserFormDashboard.Show
Else
    MsgBox ("File does not seem to be in the right PAC format")
End If
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''Create a new Attestation ''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub ButtonStartNew_Click()

For Each ctrl In UserFormMainMenu.Controls
    ctrl.Visible = False
Next ctrl
Frame1.Visible = True
Image1.Visible = True
Item.Visible = True
Rawmaterial.Visible = True

Worksheets("Sheet1").Activate
Application.ScreenUpdating = False
FileName = "Untitled.pac"
CurrentFileName.Caption = CurrentFileName.Caption & FileName

ClearWorkbook 'Delete all Worksheets and Empty Sheet 1, then create necessary worksheets, renumber, fill out Line Headers for the General Section and set Sheet 1 as active
With ThisWorkbook
   .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "General"
   .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "ComponentsList"
   .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "OtherInfo"
   .Sheets.Add(After:=.Sheets(.Sheets.Count)).Name = "Signature"
End With
Renumber

Worksheets("General").Activate
Worksheets("General").Range("A" & 1).Value = "SUPPLIER NAME"
If Worksheets("General").Range("D" & 2).Value = "Rawmaterial" Then
    Worksheets("General").Range("A" & 2).Value = "PACKAGING RAW MATERIAL"
Else
    Worksheets("General").Range("A" & 2).Value = "PACKAGING ITEM"
End If
Worksheets("General").Range("A" & 3).Value = "SUPPLIER REFERENCE NUMBER"
Worksheets("General").Range("A" & 4).Value = "CLIENT REFERENCE NUMBER"
Worksheets("General").Range("A" & 5).Value = "CONFIDENTIALITY AGREEMENT REFERENCE"
Worksheets("General").Range("C" & 2).Value = "ATTESTATION TYPE"
Worksheets("Sheet1").Activate
Application.ScreenUpdating = True


End Sub

Private Sub Item_Click() 'define the type of statement

Worksheets("General").Range("D" & 2).Value = "Item"
Unload UserFormMainMenu
UserFormDashboard.Show

End Sub

Private Sub Rawmaterial_Click()  'define the type of statement

Worksheets("General").Range("D" & 2).Value = "Rawmaterial"
Unload UserFormMainMenu
UserFormDashboard.Show

End Sub




'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''Open Existing Attestation '''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub ButtonOpenExisting_Click()

Dim FileToOpen As Variant
On Error GoTo Mistake
Application.ScreenUpdating = False
Set wb1 = ActiveWorkbook

ClearWorkbook   'Delete all Worksheetes except Sheet 1

FileToOpen = Application.GetOpenFilename(FileFilter:="Packaging File, *.pac", Title:="Please choose the Packaging file (.PAC) you want to work on") 'Open PAC File
If FileToOpen = False Then
    MsgBox "No File Specified.", vbExclamation, "ERROR"
    GoTo Mistake:
Else
    Set wb2 = Workbooks.Open(FileName:=FileToOpen)
    wb2.Worksheets("Sheet1").Activate
    CheckIfPAC 'Check if opened file is in PAC format, if not cancel
    If IsPAC = False Then
        GoTo Mistake
    End If
    'Copy all the sheets from the just opened wb2 into the already open wb1, then delete the obsolete Sheet1 in wb1 without asking for confirmation
    Application.DisplayAlerts = False
    wb1.Worksheets(1).Name = "DeleteMe"
    wb2.Worksheets.Copy After:=wb1.Worksheets(1)
    wb1.Worksheets(1).Delete
    Application.DisplayAlerts = True
End If
        
'Close the orginal workbook from which data was copied, i.e. wb(2), without asking for confirmation
Application.DisplayAlerts = False
    wb2.Close SaveChanges:=False
Application.DisplayAlerts = True
             
'renumber Worksheets starting from Sheet1
Renumber
Worksheets(1).Activate
Cells(1, 1).Activate

Application.ScreenUpdating = True

'If everything went well, set the filename to the name of the just opened file, i.e. wb2
FileName = FileToOpen

Section1valid = True
Section2valid = True
Section3valid = True
Section3avalid = True
Section4valid = True
Section5valid = True

UserForm_Initialize

Exit Sub

Mistake:    'Show error message, close file & go back to Main Menue
On Error Resume Next
MsgBox ("Could not open file.")
wb2.Close SaveChanges:=False
UserForm_Initialize

End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''Save Attestation as PAC''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub ButtonSaveCurrent_Click()

Dim ws As Worksheet
Dim FileToSave As Variant
On Error GoTo Mistake

'Unload UserFormMainMenu
Application.ScreenUpdating = False
Set wb1 = ActiveWorkbook

CheckIfPAC
If IsPAC = False Then
    GoTo Mistake
End If

'Create new workbook, delete all sheets except one (called DeleteMe), do not ask for confirmation
Application.DisplayAlerts = False
Set wb2 = Workbooks.Add
wb2.Sheets(1).Name = "DeleteMe"
For Each ws In wb2.Sheets
   If ws.Name <> "DeleteMe" Then
       ws.Delete
   End If
Next

'copy all workshets from the open workbook into the new workbook
For Each ws In wb1.Sheets
    ws.Copy After:=wb2.Sheets(wb2.Sheets.Count)
Next

'delete worksheet "DeleteMe"
For Each ws In wb2.Sheets
   If ws.Name = "DeleteMe" Then
       ws.Delete
   End If
Next
Application.DisplayAlerts = True

'Ask for filename and save the new file
FileToSave = Application.GetSaveAsFilename(FileFilter:="Packaging File, *.pac", Title:="Save Packaging File")
If FileToSave <> False Then
    With wb2
         .SaveAs FileName:=FileToSave, FileFormat:=60
         .Close SaveChanges:=False
    End With
End If
Application.ScreenUpdating = True

FileName = FileToSave

UserForm_Initialize
'UserFormMainMenu.Show

Exit Sub

Mistake:
'In case of mistake go back to Main Menue
MsgBox ("Could not save PAC file.")
UserForm_Initialize
'UserFormMainMenu.Show

End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''Exit without Saving ''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub CommandButtonExit_Click()

Dim wBook As Workbook
Unload UserFormMainMenu

Application.ScreenUpdating = False

'Delete all Worksheets and Empty Sheet 1
ClearWorkbook

For Each wBook In Workbooks
    wBook.Saved = True
Next wBook

Application.ScreenUpdating = True

Application.Quit


End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''Write printable copy of the Attestation as ODS''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub WriteAttestation_Click()
Dim checkexist As Boolean
Dim wb As Workbook
Dim oldbook As Workbook
Dim wbName As Variant

Application.ScreenUpdating = False

'Create Worksheet "Table" and "Narrative" - if they already exist as leftovers, delete them and recreate
On Error Resume Next
Application.DisplayAlerts = False
Sheets("Narrative").Delete
Sheets.Add.Name = "Narrative"
Sheets("Table").Delete
Sheets.Add.Name = "Table"
Application.DisplayAlerts = True

    
    
On Error GoTo Mistake           'this needs to come after the "checkexist"
Unload UserFormMainMenu
j = 1



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''' Write the Table '''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Worksheets("Table").Activate

'''''''''''''''''''''''''''''''''
'Write & Format Document Header''
'''''''''''''''''''''''''''''''''
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        Range("A" & j).Value = "REGULATORY INFORMATION FILE FOR SUPPLY OF A PACKAGING RAW MATERIAL TO FACILITATE COMPLIANCE WITH THE REGULATORY REQUIREMENTS OF THE EU COSMETIC PRODUCTS REGULATION REGULATION 1223/2009 (Art. 10 and Annex I)"
Else
        Range("A" & j).Value = "REGULATORY INFORMATION FILE FOR SUPPLY OF PACKAGING ITEMS TO FACILITATE COMPLIANCE WITH THE REGULATORY REQUIREMENTS OF THE EU COSMETIC PRODUCTS REGULATION REGULATION 1223/2009 (Art. 10 and Annex I)"
End If
j = j + 1
j = j + 1
j = j + 1

'''''''''''''''''''''''''''
'Write & Format Section I''
'''''''''''''''''''''''''''
Range("A" & j).Value = "SECTION I) DOCUMENT SCOPE"
j = j + 1

For i = 1 To 5
    Cells(j, 1) = Worksheets("General").Cells(i, 1)
    Cells(j, 3) = Worksheets("General").Cells(i, 2)
    Selection.Font.Italic = True
    j = j + 1
Next i
j = j + 1
j = j + 1

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''Write & Format Section II, III and IIIa''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''Write the section header'''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Range("A" & j).Value = "SECTION II - III) OVERVIEW TABLE OF THE PACKAGING "
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        Range("A" & j).Value = Range("A" & j).Value & "RAW MATERIAL"
Else
        Range("A" & j).Value = Range("A" & j).Value & "ITEM"
End If
j = j + 1


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''Write and format the column headers'''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Range("A" & j).Value = "Nr."
Range("B" & j).Value = Worksheets("General").Cells(2, 4).Value & " Identification"
Range("C" & j).Value = "Type of material"
Range("D" & j).Value = "General Chemical Description"
Range("E" & j).Value = "Material Reference"
Range("F" & j).Value = "Weight/Concentration"
Range("G" & j).Value = "Heavy metals: Sum of Pb, Cd, Hg, Cr(VI) below 100 ppm (Directive 94/62/EC)"
Range("H" & j).Value = "Presence of SVHC substances (Regulation 1907/2006)"
Range("I" & j).Value = "List of SVHC substances"
Range("J" & j).Value = "Contact with formulation"
Range("K" & j).Value = "Compliance with the requirements of EU Food Contact Framework Regulation 1935/2004 EC"
Range("L" & j).Value = "Conditions under which compliance is valid"
Range("M" & j).Value = "Information in support of compliance / Reason for non-compliance"
Range("N" & j).Value = "Manufactured according to EU GMP (EC) No 2023/2006"
Range("O" & j).Value = "Presence of substances of potential concern to the Cosmetic Product Safety Assesor"
Range("P" & j).Value = "List of substances of concern"


Range("A" & j & ":" & "P" & j).Select
Selection.HorizontalAlignment = xlCenter
Selection.Font.Bold = True
Selection.Borders.LineStyle = xlContinuous
Selection.BorderAround Weight:=xlMedium
Selection.Interior.ThemeColor = xlThemeColorAccent1
Selection.Interior.TintAndShade = 0.599993896298105

j = j + 1

'Fill in the table with values for each component
i = 1
Do Until Worksheets("ComponentsList").Cells(i, 1) = ""
    Cells(j, 1) = Worksheets("ComponentsList").Cells(i, 1) 'Number
    Cells(j, 2) = Worksheets("ComponentsList").Cells(i, 2) 'Name of component
    Cells(j, 3) = Worksheets("ComponentsList").Cells(i, 3) 'Material type
    Cells(j, 4) = Worksheets("ComponentsList").Cells(i, 4) 'General chemical nature
    Cells(j, 5) = Worksheets("ComponentsList").Cells(i, 5) 'Supplier code
    Cells(j, 6) = Worksheets("ComponentsList").Cells(i, 6) 'Concentration
    Cells(j, 7) = Worksheets("ComponentsList").Cells(i, 7) 'Heavy metals
    Cells(j, 8) = Worksheets("ComponentsList").Cells(i, 8) 'SVHC
    Cells(j, 9) = Worksheets("ComponentsList").Cells(i, 9) 'SVHC liste
    Cells(j, 10) = Worksheets("ComponentsList").Cells(i, 10)  'Contact with formulation

    If Worksheets("Component" & i).Cells(2, 2) = "yes" Or Worksheets("Component" & i).Cells(2, 2) = "yes1" Then  'Compliance with food legislation
        Cells(j, 11) = "Compliant"
    ElseIf Worksheets("Component" & i).Cells(2, 2) = "yes2" Then
        Cells(j, 11) = "Composition compliant, but migration not evaluated."
    Else
        Cells(j, 11) = Worksheets("Component" & i).Cells(2, 2)
    End If
    
    If Worksheets("Component" & i).Cells(2, 2) = "yes" Or Worksheets("Component" & i).Cells(2, 2) = "yes1" Or Worksheets("Component" & i).Cells(2, 2) = "yes2" Then     'Conditions for compliance
        Cells(j, 12) = Worksheets("Component" & i).Cells(3, 2)
    ElseIf Worksheets("Component" & i).Cells(2, 2) = "no" Then
        Cells(j, 12) = "not applicable"
    ElseIf Worksheets("Component" & i).Cells(2, 2) = "unknown" Then
        Cells(j, 12) = "unknown"
    End If
    
    
    If Worksheets("Component" & i).Cells(2, 2) = "yes" Or Worksheets("Component" & i).Cells(2, 2) = "yes1" Or Worksheets("Component" & i).Cells(2, 2) = "yes2" Then 'Justification for compliance
        Cells(j, 13) = "Compliance justified by:" & vbCrLf & vbCrLf
        If Worksheets("ComponentsList").Cells(i, 3) = "Plastic" Then   'Justification Plastic
           Cells(j, 13) = "Information on migration: " & Worksheets("Component" & i).Cells(9, 2) & vbCrLf & "Information on SML substances: " & Worksheets("Component" & i).Cells(10, 3) 'Migration and SML
        Else 'Justification non plastic
           If Worksheets("Component" & i).Cells(5, 2) = "yes" Then
               Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(5, 1) & vbCrLf & vbCrLf
           ElseIf Worksheets("Component" & i).Cells(5, 2) = "unknown" Then
               Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(5, 1) & ": unknown" & vbCrLf & vbCrLf
           End If
           
           If Worksheets("Component" & i).Cells(6, 2) = "yes" Then
               Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(6, 1) & vbCrLf & vbCrLf
           ElseIf Worksheets("Component" & i).Cells(6, 2) = "unknown" Then
               Cells(j, 13) = Cells(j, 13) & "Unknown whether " & Worksheets("Component" & i).Cells(6, 1) & vbCrLf & vbCrLf
           End If
           
           If Worksheets("Component" & i).Cells(7, 2) = "yes" Then
               Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(7, 1) & vbCrLf & vbCrLf
           ElseIf Worksheets("Component" & i).Cells(7, 2) = "unknown" Then
               Cells(j, 13) = Cells(j, 13) & "Unknown whether " & Worksheets("Component" & i).Cells(7, 1) & vbCrLf & vbCrLf
           End If
           
           If Worksheets("Component" & i).Cells(8, 2) = "yes" Then
               Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(8, 3)
           End If
        
        End If
 
    ElseIf Worksheets("Component" & i).Cells(2, 2) = "no" Then    'Reasons for non compliance
        Cells(j, 13) = "Non-compliance due to :" & vbCrLf & vbCrLf
        If Worksheets("ComponentsList").Cells(i, 3) = "Plastic" Then  'reasons plastic
            If Worksheets("Component" & i).Cells(13, 2) = "yes" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(13, 1) & ": " & Worksheets("Component" & i).Cells(13, 3) & vbCrLf & vbCrLf
            ElseIf Worksheets("Component" & i).Cells(13, 2) = "unknown" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(13, 1) & ": unknown" & vbCrLf & vbCrLf
            End If
            
            If Worksheets("Component" & i).Cells(14, 2) = "yes" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(14, 1) & ": " & Worksheets("Component" & i).Cells(14, 3) & vbCrLf & vbCrLf
            ElseIf Worksheets("Component" & i).Cells(14, 2) = "unknown" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(14, 1) & ": unknown" & vbCrLf & vbCrLf
            End If
            
            If Worksheets("Component" & i).Cells(15, 2) = "yes" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(15, 1) & ": " & Worksheets("Component" & i).Cells(15, 3) & vbCrLf & vbCrLf
            ElseIf Worksheets("Component" & i).Cells(15, 2) = "unknown" Then
                Cells(j, 13) = Cells(j, 13) & Worksheets("Component" & i).Cells(15, 1) & ": unknown" & vbCrLf & vbCrLf
            End If
            
        Else   'reasons non plastic
            Cells(j, 13) = Worksheets("Component" & i).Cells(11, 2)
        End If
    ElseIf Worksheets("Component" & i).Cells(2, 2) = "unknown" Then
    Cells(j, 13) = "unknown"
    
    End If
    
    
'GMP
    Cells(j, 14) = Worksheets("Component" & i).Cells(16, 2)
    If Worksheets("Component" & i).Cells(16, 2) = "yes" Then
        Cells(j, 15) = "EU Good Manufacturing Practice (EC) No 2023/2006"
    ElseIf Worksheets("Component" & i).Cells(16, 2) = "no" Then
        Cells(j, 15) = Worksheets("Component" & i).Cells(17, 3)
    ElseIf Worksheets("Component" & i).Cells(16, 2) = "unknown" Then
        Cells(j, 15) = "unknown"
    ElseIf Worksheets("Component" & i).Cells(16, 2) = "not applicable" Then
        Cells(j, 15) = "not applicable"
    End If


'Substances of concern
Cells(j, 15) = Worksheets("Component" & i).Cells(20, 2)
Cells(j, 16) = Worksheets("Component" & i).Cells(20, 3)
    
       
'Format the component entry in the table
    Range("A" & j & ":" & "P" & j).Select
    Selection.HorizontalAlignment = xlCenter
    Selection.Font.Bold = True
    Selection.Borders.LineStyle = xlContinuous
    Selection.BorderAround Weight:=xlMedium
        
    i = i + 1
    j = j + 1
Loop



'''''''''''''''''''''''''''''''''''''
''Footnote on substances of concern''
'''''''''''''''''''''''''''''''''''''
Cells(j, 1) = "Note on substances of concern:" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(a) = Substances classified as skin sensitiser Category 1A under CLP Regulation 1272/2008 at/above 1000 ppm, or alternatively, migrating at levels above 100 ppb in a relevant simulant" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(b) = Substances classified as skin sensitiser Category 1 or 1B  under CLP Regulation 1272/2008 at/above 100 ppm, or alternatively, migrating at levels above 1000 ppb in a relevant simulant" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(c) = Substances prohibited or restricted in Annex II or III of the EU Cosmetics Regulation 1223/2009 at/above 10 ppm, or alternatively, migrating at levels above 1O0 ppb in a relevant simulant (including substances classified as Carcinogen, Mutagen or Reprotoxic under Annec VI of CLP Regulation 1272/2008 " & vbCrLf
Range("A" & j & ":" & "N" & j).Select
MergeMyCells
j = j + 1
j = j + 1
j = j + 1


'''''''''''''''''''''''''''''
''Write & Format Section IV''
'''''''''''''''''''''''''''''
Range("A" & j).Value = "SECTION IV) ADDITIONAL INFORMATION"
Cells(j, 3) = Worksheets("OtherInfo").Range("A" & 1).Value
j = j + 1
j = j + 1
j = j + 1


'''''''''''''''''''''''''''''
''Write & Format Section V''
'''''''''''''''''''''''''''''
Range("A" & j).Value = "SECTION V) DATE AND SIGNATURE"
j = j + 1
For i = 1 To 3
    Cells(j, 1) = Worksheets("Signature").Cells(i, 1)
    Cells(j, 3) = Worksheets("Signature").Cells(i, 2)
    j = j + 1
Next i



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''Format all as text and set column widths and heights'''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Range("A:AA").Select
Selection.NumberFormat = "@"

Columns("A:A").ColumnWidth = 5.14
Columns("B").ColumnWidth = 35.01
Columns("C:E").ColumnWidth = 27.29
Columns("F:F").ColumnWidth = 20
Columns("G:G").ColumnWidth = 22.71
Columns("H:H").ColumnWidth = 36.71
Columns("I:I").ColumnWidth = 16.86
Columns("J:J").ColumnWidth = 30
Columns("K:K").ColumnWidth = 30
Columns("L:L").ColumnWidth = 48.71
Columns("M:M").ColumnWidth = 25.57
Columns("N:N").ColumnWidth = 87.71
Columns("N:N").ColumnWidth = 93.29
Columns("O:O").ColumnWidth = 30
Columns("P:P").ColumnWidth = 30
Cells.Select
Cells.EntireRow.AutoFit
Cells.Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
Columns("A:A").WrapText = False
j = j - 10
Rows(j).RowHeight = 85
Range("A1").Select




''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''' Set focus on sheet "Narrative"'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Worksheets("Narrative").Activate
j = 1

'''''''''''''''''''''''''''''''''
'Write & Format Document Header''
'''''''''''''''''''''''''''''''''
Range("A" & j).Value = Worksheets("Table").Cells(1, 1).Value
Range("A" & j & ":" & "I" & j).Select
MergeMyCells
Selection.BorderAround Weight:=xlThick
Selection.HorizontalAlignment = xlCenter
Selection.Font.Name = "Calibri"
Selection.Font.Size = 14
Selection.Font.Bold = True
Selection.Interior.Pattern = xlSolid
Selection.Interior.PatternColorIndex = xlAutomatic
Selection.Interior.ThemeColor = xlThemeColorDark2
Selection.Interior.TintAndShade = -9.99786370433668E-02
Selection.Interior.PatternTintAndShade = 0
j = j + 2


''''''''''''''''''''''''''''
''Write & Format Section I''
''''''''''''''''''''''''''''
st = j
Range("A" & j).Value = Worksheets("Table").Cells(4, 1)
FormatAsSectionHeader
j = j + 1
For i = 1 To 5
    Cells(j, 1) = Worksheets("General").Cells(i, 1)
    Range("A" & j & ":" & "C" & j).Select
    MergeMyCells
    Selection.Font.Bold = True
    Cells(j, 4) = Worksheets("General").Cells(i, 2)
    Range("D" & j & ":" & "I" & j).Select
    MergeMyCells
    Selection.Font.Italic = True
    j = j + 1
Next i
en = j - 1

Range("A" & st & ":" & "I" & en).Select
Selection.BorderAround Weight:=xlThick

j = j + 1


'''''''''''''''''''''''''''''
''Write & Format Section II''
'''''''''''''''''''''''''''''
st = j
Range("A" & j).Value = "SECTION II) OVERVIEW OF THE PACKAGING "
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        Range("A" & j).Value = Range("A" & j).Value & "RAW MATERIAL"
Else
        Range("A" & j).Value = Range("A" & j).Value & "ITEM"
End If

FormatAsSectionHeader
j = j + 1

Range("A" & j).Value = Worksheets("Table").Cells(13, 1)
Range("B" & j).Value = Worksheets("Table").Cells(13, 2)
Range("C" & j).Value = Worksheets("Table").Cells(13, 3)
Range("D" & j).Value = Worksheets("Table").Cells(13, 4)
Range("E" & j).Value = Worksheets("Table").Cells(13, 5)
Range("F" & j).Value = Worksheets("Table").Cells(13, 6)
Range("G" & j).Value = Worksheets("Table").Cells(13, 7)
Range("H" & j).Value = Worksheets("Table").Cells(13, 8)
Range("H" & j & ":" & "I" & j).Select
    MergeMyCells
Range("A" & j & ":" & "I" & j).Select
Selection.HorizontalAlignment = xlCenter
Selection.Font.Bold = True
Selection.Borders.LineStyle = xlContinuous
Selection.Interior.ThemeColor = xlThemeColorAccent1
Selection.Interior.TintAndShade = 0.599993896298105

j = j + 1

i = 14
Do Until Worksheets("Table").Cells(i, 1) = ""
    Cells(j, 1) = Worksheets("Table").Cells(i, 1)
    Cells(j, 2) = Worksheets("Table").Cells(i, 2)
    Cells(j, 3) = Worksheets("Table").Cells(i, 3)
    Cells(j, 4) = Worksheets("Table").Cells(i, 4)
    Cells(j, 5) = Worksheets("Table").Cells(i, 5)
    Cells(j, 6) = Worksheets("Table").Cells(i, 6)
    Cells(j, 7) = Worksheets("Table").Cells(i, 7)
    Cells(j, 8) = Worksheets("Table").Cells(i, 9)
    Range("H" & j & ":" & "I" & j).Select
    MergeMyCells
    Range("A" & j & ":" & "I" & j).Select
    Selection.HorizontalAlignment = xlCenter
    Selection.Font.Italic = True
    Selection.Borders.LineStyle = xlContinuous
    i = i + 1
    j = j + 1
Loop

Range("A" & j - 1 & ":" & "I" & j - 1).Value = "" ' need to delete the Substance Nota which is at "j" and move one step higher
j = j - 1

en = j - 1
Range("A" & st & ":" & "I" & en).Select
Selection.BorderAround Weight:=xlThick

j = j + 1


''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''Write & Format Section III'''''''''
''''''''''''''''''''''''''''''''''''''''''''''
st = j
Range("A" & j).Value = "SECTION III) SPECIFIC INFORMATION REGARDING COMPLIANCE WITH FOOD CONTACT LEGISLATION AND PRESENCE OF SUBSTANCES OF CONCERN " & vbCrLf & "ON PACKAGING "
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
    Range("A" & j).Value = Range("A" & j).Value & " RAW MATERIAL "
Else
    Range("A" & j).Value = Range("A" & j).Value & "COMPONENTS "
End If
Range("A" & j).Value = Range("A" & j).Value & "IN MIGRATEABLE CONTACT WITH THE FORMULATION"
FormatAsSectionHeader
j = j + 1


'Get the number of components, i.e. number of worksheets minus 7 (becasue also Table and Narrative,and parse through each component
MaxCompNumb = Worksheets.Count - 7
For i = 1 To MaxCompNumb
    If Worksheets("ComponentsList").Cells(i, 10) = "yes" Then            'i.e. is in contact
        'Write the number, name and type of the component
        Range("A" & j) = Worksheets("ComponentsList").Cells(i, 1) & ") " & Worksheets("ComponentsList").Cells(i, 2) & ";   " & Worksheets("ComponentsList").Cells(i, 3) & ";   " & Worksheets("ComponentsList").Cells(i, 5)
        Range("A" & j & ":" & "I" & j).Select
        MergeMyCells
        Selection.Font.Name = "Calibri"
        Selection.Font.Size = 12
        Selection.Font.Bold = True
        Selection.HorizontalAlignment = xlCenter
        Selection.Interior.Pattern = xlSolid
        Selection.Interior.PatternColorIndex = xlAutomatic
        Selection.Interior.ThemeColor = xlThemeColorAccent4
        Selection.Interior.TintAndShade = 0.599993896298105
        Selection.Interior.PatternTintAndShade = 0
        Selection.BorderAround Weight:=xlMedium
        j = j + 1
    
        
        'Write if compliant or non-compliant
        Range("A" & j) = Worksheets("Component" & i).Cells(2, 3).Value
        Range("A" & j & ":" & "I" & j).Select
        MergeMyCells
        Selection.Font.Italic = True
        Selection.BorderAround Weight:=xlThin
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
    
      j = j + 1
            
        'Component IS  compliant with Food Contact
        
        'Conditions for which statement of compliance is valid
        If Worksheets("Component" & i).Cells(2, 2) = "yes" Or Worksheets("Component" & i).Cells(2, 2) = "yes1" Or Worksheets("Component" & i).Cells(2, 2) = "yes2" Then
            Range("A" & j) = "The statement of compliance is valid for the following conditions:  " & Worksheets("Component" & i).Cells(3, 2)
            Range("A" & j & ":" & "I" & j).Select
            MergeMyCells
            Selection.Font.Italic = True
            Selection.BorderAround Weight:=xlThin
            
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
                
            
            
            
            j = j + 1
            stt = j
    
            Range("A" & j) = "Compliance is supported by the following information: " & vbCrLf 'Justification intro
            If Worksheets("Component" & i).Cells(1, 2) <> "Plastic" Then            'Component is NOT a plastic
                For x = 5 To 7
                   If Worksheets("Component" & i).Cells(x, 1) = "" Then
                       'do nothing
                   Else
                       If Worksheets("Component" & i).Cells(x, 2) = "no" Then
                           Range("A" & j) = Range("A" & j) & "Not " & Worksheets("Component" & i).Cells(x, 1) & vbCrLf
                       ElseIf Worksheets("Component" & i).Cells(x, 2) = "unknown" Then
                           Range("A" & j) = Range("A" & j) & "Unknown whether " & Worksheets("Component" & i).Cells(x, 1) & vbCrLf
                       Else
                           Range("A" & j) = Range("A" & j) & Worksheets("Component" & i).Cells(x, 1) & vbCrLf
                       End If
                   
                   End If
                Next x
                   
                If Worksheets("Component" & i).Cells(8, 1) = "" Then
                       'do nothing
                Else
                       Range("A" & j) = Range("A" & j) & "Compliant with the following other relevant Regulation or Guidance: " & Worksheets("Component" & i).Cells(8, 3)
                End If
                
                Range("A" & j & ":" & "I" & j).Select
                MergeMyCells
                Selection.Font.Italic = True
                Selection.BorderAround Weight:=xlThin
                                    
             Else                                                                 'Component IS a plastic
               'Migration info and SML Substances
                Range("A" & j) = Range("A" & j) & "Information on migration:" & vbCrLf & Worksheets("Component" & i).Cells(9, 2) & vbCrLf & vbCrLf & "Information on SML substances:" & vbCrLf & Worksheets("Component" & i).Cells(10, 3)
                Range("A" & j & ":" & "I" & j).Select
                MergeMyCells
                Selection.Font.Italic = True
                Selection.BorderAround Weight:=xlThin
                                                  
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
                           
            j = j + 1
            End If
    
        
         ElseIf Worksheets("Component" & i).Cells(2, 2) = "unknown" Then      'Food contact compliance is not known
         'need to do nothing more
    
    
         Else
         'Component is NOT  compliant with Food Contact - need to manage reasons
    
            If Worksheets("Component" & i).Cells(1, 2) <> "Plastic" Then               'Component is NOT a plastic
                 Range("A" & j) = "Non compliance is due to:" & vbCrLf & Worksheets("Component" & i).Cells(11, 2)
                 Range("A" & j & ":" & "I" & j).Select
                 MergeMyCells
                 Selection.Font.Italic = True
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
                 
                 
                 j = j + 1
        
                 
            Else                                                                      'Component IS a plastic
                Range("A" & j) = "Non compliance is due to:" & vbCrLf
                For x = 13 To 15
                    If Worksheets("Component" & i).Cells(x, 2) = "yes" Then
                        Range("A" & j) = Range("A" & j) & Worksheets("Component" & i).Cells(x, 1) & ": " & vbCrLf & Worksheets("Component" & i).Cells(x, 3) & vbCrLf & vbCrLf
                    ElseIf Worksheets("Component" & i).Cells(x, 2) = "unknown" Then
                        Range("A" & j) = Range("A" & j) & Worksheets("Component" & i).Cells(x, 1) & ": " & vbCrLf & "unknown" & vbCrLf & vbCrLf
                    End If
                   
                Next x
                mystring = Range("A" & j)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
                Range("A" & j) = mystring
                
                Range("A" & j & ":" & "I" & j).Select
                Selection.Font.Italic = True
                MergeMyCells
    
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
    
                j = j + 1
            End If
                        
        End If
        
     
        'GMP
        If Worksheets("Component" & i).Cells(16, 2) = "yes" Then
            Range("A" & j) = "The component is manufactured according to EU Good Manufacturing Practice (EC) No 2023/2006."
        ElseIf Worksheets("Component" & i).Cells(16, 2) = "unknown" Then
            Range("A" & j) = "It is unknown to which GMP standard this component is manuactured."
        ElseIf Worksheets("Component" & i).Cells(16, 2) = "no" Then
            If Worksheets("Component" & i).Cells(17, 3) = "" Then
                Range("A" & j) = "The component is not manufactured according to a Good Manufacturing Practice Standard."
            Else
                Range("A" & j) = "The component is manufactured according to the following Standard of Good Manufacturing Practice : " & Worksheets("Component" & i).Cells(17, 3)
            End If
        End If
        Range("A" & j & ":" & "I" & j).Select
        MergeMyCells
        Selection.Font.Italic = True
        Range("A" & j & ":" & "I" & j).Select
        Selection.BorderAround Weight:=xlThin
       
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
           
       
        j = j + 1
        
        
        'Substances of concern
       
        If Worksheets("Component" & i).Cells(20, 2) = "yes" Then
            Cells(j, 4) = "The following substances of potential concern to the cosmetic porduct safety assessor are known to be present (see note below): " & vbCrLf & Worksheets("Component" & i).Cells(20, 3)
        ElseIf Worksheets("Component" & i).Cells(20, 2) = "no" Then
            Cells(j, 4) = "No substances of potential concern to the cosmetic porduct safety assessor are known to be present (see note below)."
        ElseIf Worksheets("Component" & i).Cells(20, 2) = "unknown" Then
            Cells(j, 4) = "It is not known whether substances of potential concern to the cosmetic porduct safety assessor are present (see note below)."
        End If
        Range("A" & j & ":" & "I" & j).Select
        MergeMyCells
        Selection.Font.Italic = True
        
        mystring = Range("A" & j)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        Range("A" & j) = mystring
            
        j = j + 1
    End If
Next i

en = j - 1
Range("A" & st & ":" & "I" & en).Select
Selection.BorderAround Weight:=xlThick
j = j + 1

'Write & Format Section IV
st = j
Range("A" & j).Value = "SECTION IV) ADDITIONAL INFORMATION"
FormatAsSectionHeader
j = j + 1
Cells(j, 1) = Worksheets("OtherInfo").Range("A" & 1).Value
Range("A" & j & ":" & "H" & j).Select
MergeMyCells
Selection.Font.Italic = True
j = j + 1

en = j - 1
Range("A" & st & ":" & "H" & en).Select
Selection.BorderAround Weight:=xlThick
j = j + 1


'Write & Format Section V
st = j
Range("A" & j).Value = "SECTION V) DATE AND SIGNATURE"
FormatAsSectionHeader
j = j + 1
For i = 1 To 3
    Cells(j, 1) = Worksheets("Signature").Cells(i, 1)
    Range("A" & j & ":" & "C" & j).Select
    MergeMyCells
    Selection.Font.Bold = True

    Cells(j, 4) = Worksheets("Signature").Cells(i, 2)
    Range("D" & j & ":" & "H" & j).Select
    MergeMyCells
    Selection.Font.Italic = True
    j = j + 1
Next i


en = j - 1
Range("A" & st & ":" & "H" & en).Select
Selection.BorderAround Weight:=xlThick



'Formatting of column widths and row heights
Range("A1").Activate
Range("A:I").ColumnWidth = 15
maxHeight = 20

i = 1
Do Until i = j Or i = 2000
    Range("K" & i).ColumnWidth = 3 * 15
    Range("L" & i).ColumnWidth = 6 * 15
    Range("K" & i).Value = Range("A" & i).Value
    Range("L" & i).Value = Range("D" & i).Value
    Rows(i & ":" & i).WrapText = True
    Rows(i & ":" & i).EntireRow.AutoFit
    Rows(i & ":" & i).EntireRow.RowHeight = Rows(i & ":" & i).EntireRow.RowHeight
    Range("K" & i).Value = ""
    Range("L" & i).Value = ""
    i = i + 1
Loop


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''Add Footnote''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

j = j + 1

Cells(j, 1) = "Note on substances of concern:" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(a) = Substances classified as skin sensitiser Category 1A under CLP Regulation 1272/2008 at/above 1000 ppm, or alternatively, migrating at levels above 100 ppb in a relevant simulant" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(b) = Substances classified as skin sensitiser Category 1 or 1B  under CLP Regulation 1272/2008 at/above 100 ppm, or alternatively, migrating at levels above 1000 ppb in a relevant simulant" & vbCrLf
Cells(j, 1) = Cells(j, 1) & "(c) = Substances prohibited or restricted in Annex II or III of the EU Cosmetics Regulation 1223/2009 at/above 10 ppm, or alternatively, migrating at levels above 1O0 ppb in a relevant simulant (including substances classified as Carcinogen, Mutagen or Reprotoxic under Annec VI of CLP Regulation 1272/2008 "
Range("A" & j & ":" & "I" & j).Select
MergeMyCells
Range("A" & j & ":" & "I" & j).RowHeight = 140


'Export the Table and Narrative and delete them in the current PAC file

Application.DisplayAlerts = False
Set wb = Workbooks.Add
ThisWorkbook.Sheets("Table").Copy Before:=wb.Sheets(1)
ThisWorkbook.Sheets("Narrative").Copy Before:=wb.Sheets(1)

ThisWorkbook.Sheets("Table").Delete
ThisWorkbook.Sheets("Narrative").Delete
Application.DisplayAlerts = True
Application.ScreenUpdating = True

wbName = Application.GetSaveAsFilename(FileFilter:="Printable Attestation, *.ods", Title:="Save Printable Attestation")

If wbName <> False Then
    ActiveWorkbook.SaveAs FileName:=wbName, FileFormat:=60         '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    wb.Close SaveChanges:=False                                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
End If



'Go back to Main Menue

UserFormMainMenu.Show



Exit Sub

'In case of mistake, Cancel and go back to main menue
Mistake:
MsgBox ("Could not create printable attestation. ")
UserFormMainMenu.Show


End Sub


Attribute VB_Name = "UserFormSection1"
Attribute VB_Base = "0{B53D9148-C296-4F6E-B4AB-9707DD1A82E8}{93BFA44E-D179-48C2-B501-4193339CEA42}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()

'Get information already stored in the Worksheet(General)
TextBoxSuppliername.Value = Worksheets("General").Range("B" & 1).Value
TextBoxItemname.Value = Worksheets("General").Range("B" & 2).Value
TextBoxSupplierreference.Value = Worksheets("General").Range("B" & 3).Value
TextBoxClientreference.Value = Worksheets("General").Range("B" & 4).Value
TextBoxConfidentiality.Value = Worksheets("General").Range("B" & 5).Value

'Define labels, depending whether this is about an item or raw material
Label2.Caption = "Identification of the Packaging " & Worksheets("General").Range("D" & 2).Value
Label6.Caption = "In this section you are asked to define the scope of the document and identify the Packaging " & Worksheets("General").Range("D" & 2).Value


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Highlight obligatory fields/controls in red if they are not filled out '''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

obligatory Label1, Worksheets("General").Cells(1, 2).Value
obligatory Label2, Worksheets("General").Cells(2, 2).Value

End Sub


Private Sub TextBoxSuppliername_Change()
Worksheets("General").Cells(1, 2).Value = TextBoxSuppliername.Value
UserForm_Initialize

End Sub


Private Sub TextBoxItemname_Change()

Worksheets("General").Cells(2, 2).Value = TextBoxItemname.Value
UserForm_Initialize
  
End Sub


Private Sub Section1OK_Click()

Section1valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
For Each ctrl In UserFormSection1.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section1valid = False
        End If
Next ctrl

i = 1


Worksheets("General").Range("B" & i).Value = TextBoxSuppliername.Value
i = i + 1


Worksheets("General").Range("B" & i).Value = TextBoxItemname.Value
i = i + 1


Worksheets("General").Range("B" & i).Value = TextBoxSupplierreference.Value
i = i + 1


Worksheets("General").Range("B" & i).Value = TextBoxClientreference.Value
i = i + 1

If TextBoxConfidentiality.Value = "" Then
    Worksheets("General").Range("B" & i).Value = "NOT UNDER CONFIDENTIALITY AGREEMENT "
Else
    Worksheets("General").Range("B" & i).Value = TextBoxConfidentiality.Value
End If

Worksheets("General").Cells.WrapText = False
Worksheets("General").Cells.EntireColumn.AutoFit
Worksheets("General").Cells.EntireRow.AutoFit


Unload UserFormSection1

End Sub



Attribute VB_Name = "UserFormSection2"
Attribute VB_Base = "0{7A7F1CFB-9FB4-4D69-9A51-8F549998AACE}{6063E29D-C4E1-4BAC-A135-6B4A8EA85686}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub UserForm_Initialize()

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''If this is a new component  - i.e. if the componentslist at the "name" place is still empty, then ask for a component/raw material name and write it in the component list''
''If it is a Raw Material, use as default the name already written in the "General Section" (if already filled in)''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

If Sheets("ComponentsList").Range("B" & CompNumb).Value = "" Then
    If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        If Worksheets("General").Cells(2, 2) = "" Then
            Worksheets("ComponentsList").Cells(CompNumb, 2).Value = InputBox("Please give a name to the Raw Material")
        Else
            Worksheets("ComponentsList").Cells(CompNumb, 2).Value = Worksheets("General").Cells(2, 2).Value
        End If
    Else
        Worksheets("ComponentsList").Cells(CompNumb, 2).Value = InputBox("Please give a name to the Component")
        End If
    Sheets("ComponentsList").Range("A" & CompNumb).Value = CompNumb
End If


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''Initialise list of material types'''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

If ListBoxMaterialtype.ListCount - 1 < 8 Then
    With ListBoxMaterialtype
        .AddItem "Plastic"
        .AddItem "Glass/Ceramics"
        .AddItem "Rubber"
        .AddItem "Silicone"
        .AddItem "Coatings"
        .AddItem "Steel"
        .AddItem "Decoration (e.g.label, ink)"
        .AddItem "Other - define"
        .AddItem ""
    End With
End If


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''Set visibility and set captions for the labels of the Userform depending on whether raw material or item''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

For Each ctrl In Me.Controls
   ctrl.Visible = True
Next ctrl
'TextBoxOtherMaterial.Visible = False

If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        UserFormSection2.Caption = "Section II) General Information on the Raw Material"
        NameOfComponentLabel.Caption = "Raw Material Name: "
    Else
        UserFormSection2.Caption = "Section II) General Information on the Component"
        NameOfComponentLabel.Caption = "Component " & CompNumb & " Name:"
End If

MaterialTypeLabel.Caption = "Material Type"
ChemicalDescriptionLabel.Caption = "General Chemical Description"
WeightLabel.Caption = "Weight or concentration"
HeavyMetalsLabel.Caption = "According to the EU Packaging and Packaging Waste Directive (94/62/EC) , the sum of the concentration levels of lead, cadmium, mercury and hexavelent chromium must not exceed 100 ppm." & vbCrLf & vbCrLf & "Does the component comply with the heavy metals requirements of" & vbCrLf & "Directive 94/62/EC ?"
SVHCLabel.Caption = "According to the EU Chemicals Legislation, REACH (Regulation 1907/2006, Article 33), deliberate addition or known presence of Substances of Very High Concern (SVHC) at or above 0,1 % (1000ppm) needs to be indicated for each component." & vbCrLf & vbCrLf & "Does the component contain any SVHC substance > 1000 ppm ?"
ContactLabel.Caption = "Is the component in direct or indirect contact with the cosmetic formulation in a way that would enable migration into the formulation ? "


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Populate inputfields from the entry in the Worksheet - if it is a new file, the worksheet fields are obviously empty''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

LabelComponentname.Caption = Worksheets("ComponentsList").Cells(CompNumb, 2).Value
TextBoxOtherMaterial.Visible = True
Materialtype = Worksheets("ComponentsList").Cells(CompNumb, 3)      'Get materialtype and set highligthed field in listbox accordingly, if first time, set on empty place in list
For i = 0 To ListBoxMaterialtype.ListCount - 1
    If ListBoxMaterialtype.List(i) = Materialtype Then
        ListBoxMaterialtype.ListIndex = i
        TextBoxOtherMaterial.Visible = False
        GoTo xxx
    Else
        ListBoxMaterialtype.ListIndex = 7
        TextBoxOtherMaterial.Value = Materialtype
    End If
Next i
xxx:
If Materialtype = "" Then
        TextBoxOtherMaterial.Visible = False
End If

TextBoxChemicaldescription.Value = Worksheets("ComponentsList").Cells(CompNumb, 4).Value

TextBoxMaterialReference.Value = Worksheets("ComponentsList").Cells(CompNumb, 5).Value

If Worksheets("ComponentsList").Cells(CompNumb, 6).Value = "" Then      'If it is a Raw Material, weight/concentration is not applicable, put "n.a." as default
    If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        TextBoxWeight.Value = "n.a."
        Worksheets("ComponentsList").Cells(CompNumb, 6).Value = TextBoxWeight.Value
    End If
Else
    TextBoxWeight.Value = Worksheets("ComponentsList").Cells(CompNumb, 6).Value
End If

HeavyMetalsCompliant.Caption = Worksheets("ComponentsList").Cells(CompNumb, 7).Value
If Worksheets("ComponentsList").Cells(CompNumb, 7).Value = "" Then
    HeavyMetalsCompliant.Caption = "Click for Yes/No"
End If

SVHCListLabel.Caption = Worksheets("ComponentsList").Cells(CompNumb, 9).Value
If Worksheets("ComponentsList").Cells(CompNumb, 8).Value = "" Then
    SVHCYesNo.Caption = "Click for Yes/No"
ElseIf Worksheets("ComponentsList").Cells(CompNumb, 8).Value = "no" Then
    SVHCYesNo.Caption = "no"
ElseIf Worksheets("ComponentsList").Cells(CompNumb, 8).Value = "unknown" Then
    SVHCYesNo.Caption = "unknown"
ElseIf Worksheets("ComponentsList").Cells(CompNumb, 8).Value = "yes" Then
    SVHCYesNo.Caption = "yes"
End If

ContactYesNo.Caption = Worksheets("ComponentsList").Cells(CompNumb, 10)

If Worksheets("ComponentsList").Cells(CompNumb, 10).Value = "" Then
    ContactYesNo.Caption = "Click for Yes/No"
ElseIf Worksheets("ComponentsList").Cells(CompNumb, 10) = "no" Then                         'If not in migrateable contact, need to delete migration information from respective component sheet
    Worksheets("Component" & CompNumb).Cells(1, 3).Value = "not in migrateable contact"
    Worksheets("Component" & CompNumb).Range("A2:AA2000").Value = ""
ElseIf Worksheets("ComponentsList").Cells(CompNumb, 10) = "yes" Then
    Worksheets("Component" & CompNumb).Cells(1, 3).Value = "migrateable contact"
End If

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Highlight obligatory fields/controls in red if they are not filled out '''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

obligatory ChangeName, Worksheets("ComponentsList").Cells(CompNumb, 2)

obligatory ChemicalDescriptionLabel, Worksheets("ComponentsList").Cells(CompNumb, 4)
obligatory WeightLabel, Worksheets("ComponentsList").Cells(CompNumb, 6)
obligatory HeavyMetalsCompliant, Worksheets("ComponentsList").Cells(CompNumb, 7)
obligatory SVHCYesNo, Worksheets("ComponentsList").Cells(CompNumb, 8)
obligatory ContactYesNo, Worksheets("ComponentsList").Cells(CompNumb, 10)

End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''Manage Inputs and write them into the worksheet''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub ChangeName_Click()
Worksheets("ComponentsList").Cells(CompNumb, 2).Value = InputBox("Enter New Name")
UserForm_Initialize
End Sub

Private Sub ListBoxMaterialtype_Click() 'Materialtype selection
For i = 0 To ListBoxMaterialtype.ListCount - 1
    If ListBoxMaterialtype.Selected(i) Then
        
       If i = 7 Then
            TextBoxOtherMaterial.Visible = True
            xValue = TextBoxOtherMaterial.Value
       Else
            TextBoxOtherMaterial.Visible = False
            xValue = ListBoxMaterialtype.List(i)
       End If
    End If
Next i
Worksheets("ComponentsList").Cells(CompNumb, 3) = xValue
End Sub

Private Sub TextBoxOtherMaterial_Change()
Worksheets("ComponentsList").Cells(CompNumb, 3).Value = TextBoxOtherMaterial.Value
UserForm_Initialize
End Sub

Private Sub TextBoxChemicaldescription_Change()

Worksheets("ComponentsList").Cells(CompNumb, 4).Value = TextBoxChemicaldescription.Value
UserForm_Initialize
End Sub

Private Sub TextBoxMaterialReference_Change()

Worksheets("ComponentsList").Cells(CompNumb, 5).Value = TextBoxMaterialReference.Value
UserForm_Initialize
End Sub

Private Sub TextBoxWeight_Exit(ByVal Cancel As MSForms.ReturnBoolean) 'check if the weight/cosncentraiton unit is present
    If IsNumeric(TextBoxWeight.Value) Then
        MsgBox "please indicate unit of measurement"
        Cancel = True
    End If

Worksheets("ComponentsList").Cells(CompNumb, 6).NumberFormat = "@"
Worksheets("ComponentsList").Cells(CompNumb, 6).Value = TextBoxWeight.Value
UserForm_Initialize
End Sub

Private Sub HeavyMetalsCompliant_Click() 'Compliance with Heavy Metal limits
Choice.Show
HeavyMetalsCompliant.Caption = ChoiceValue
Worksheets("ComponentsList").Cells(CompNumb, 7) = HeavyMetalsCompliant.Caption
UserForm_Initialize
End Sub

Private Sub SVHCYesNo_Click()
Choice.Show
SVHCYesNo.Caption = ChoiceValue
If ChoiceValue = "yes" Then
    SVHCListLabel.Caption = InputBox("Please identify the first SVHC substance with Name, CAS number and concentration:") & vbCrLf
    buffer = "not empty"
    Do While buffer <> ""
        buffer = InputBox("Please identify additional SVHC substance with Name, CAS number and concentration / Cancel to stop:")
        SVHCListLabel.Caption = SVHCListLabel.Caption & buffer & vbCrLf
    Loop
    buffer = ""
ElseIf ChoiceValue = "no" Then
    SVHCListLabel.Caption = "No SVHC > 1000 ppm"
ElseIf ChoiceValue = "unknown" Then
    SVHCListLabel.Caption = "unknown"
End If

Worksheets("ComponentsList").Cells(CompNumb, 8) = ChoiceValue
Worksheets("ComponentsList").Cells(CompNumb, 9).Value = SVHCListLabel.Caption

mystring = SVHCListLabel.Caption
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
Worksheets("ComponentsList").Cells(CompNumb, 9).Value = mystring

UserForm_Initialize
End Sub



Private Sub ContactYesNo_Click() 'Contact with formulation
Choice.Show
ContactYesNo.Caption = ChoiceValue
Worksheets("ComponentsList").Cells(CompNumb, 10) = ContactYesNo.Caption

UserForm_Initialize
End Sub



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''Check if everything obligatory is filled out and start Userform 3a'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub OK_Click()

Section2valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
MaterialTypeLabel.BackColor = &H8000000F

If Worksheets("ComponentsList").Cells(CompNumb, 3) = "" Then
    MaterialTypeLabel.BackColor = &HC0C0FF
    Section2valid = False
Else
    MaterialTypeLabel.BackColor = &H8000000F
    Section2valid = True
End If

For Each ctrl In UserFormSection2.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section2valid = False
        End If
Next ctrl

If Section2valid = False Then
    MsgBox ("Please fill out all required information")
    MaterialTypeLabel.BackColor = &H8000000F
    UserForm_Initialize
Else
    UserForm_Initialize
    Unload UserFormSection2
    
    If Worksheets("ComponentsList").Cells(CompNumb, 10) = "yes" Or Worksheets("ComponentsList").Cells(CompNumb, 10) = "unknown" Then 'If the component is in contact with the formula - or contact is unknown, open the usreform for more information onthe component
        UserFormSection3.Show
    End If
    
    Worksheets("ComponentsList").Cells.WrapText = False     'Format componentslist and indiviual component sheets
    Worksheets("ComponentsList").Cells.EntireColumn.AutoFit
    Worksheets("ComponentsList").Cells.EntireRow.AutoFit
    Worksheets("Component" & CompNumb).Cells.WrapText = False
    Worksheets("Component" & CompNumb).Cells.EntireColumn.AutoFit
    Worksheets("Component" & CompNumb).Cells.EntireRow.AutoFit
End If

End Sub
Attribute VB_Name = "UserFormSection3"
Attribute VB_Base = "0{D09C42F9-62F9-4E33-B7E2-AF91C04738D1}{0BA453E9-F728-48F8-8075-D5F200F96839}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Dim Typ As String
Dim stillempty As Boolean
Dim fram As Control
Dim cotrl As Control




Private Sub UserForm_Initialize()

Worksheets("Component" & CompNumb).Activate
UserFormSection3.Width = 650
UserFormSection3.Height = 600

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''Get information from other Worksheets into the Component Worksheet''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Worksheets("Component" & CompNumb).Cells(1, 1) = Worksheets("ComponentsList").Cells(CompNumb, 2)
Worksheets("Component" & CompNumb).Cells(1, 2) = Worksheets("ComponentsList").Cells(CompNumb, 3)
Materialtype = Worksheets("Component" & CompNumb).Cells(1, 2)


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''Define the wording for some fixed labels and captions'''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
ReasonsLabel.Caption = "Reason(s) for non compliance with EU Food Contact Legislation 1935/2004 EC"
ReasonsPlasticLabel.Caption = "Reason(s) for non compliance with EU Food Contact Legislation 1935/2004 EC, and in particular with Regulation 10/2011 EC"
ReasonsPlastic1Label.Caption = "Presence of non-approved substance(s) or presence of approved substance(s) that do not respect the purity criteria of food contact legislation 10/2011 EC"
ReasonsPlastic2Label.Caption = "Presence of restricted substance(s) that do not respect the SML / QMA QM  of food contact legislation 10/2011 EC"
ReasonsPlasticOtherLabel.Caption = "Other reason(s) for non compliance"
MigrationLabel.Caption = "Type of information available on migration (e.g. test with food, test with simulant, modeling, worst case asumptions, supplier information, ...)"
SMLLabel.Caption = "Presence of substances restricted under Food Contact Legislation (Regulation 10/2011 EC) by a specific migration limit (SML), a maximum concentration (QM) in the plastic or a |fffd|no detectable migration|fffd| requirement at a certain detection limit (DL) - with a residual quantity greater or equal to 1/10 of the SML / QM"
ConditionsLabel.Caption = "Conditions for which compliance is valid (eg. types of food / or simulants , specific conditions)"
GMPLabel.Caption = "Component manufactured according to EU Good Manufacturing Practice (EC) No 2023/2006 ?"
OtherGMPLabel.Caption = "Alternative GMP/quality standard that has been followed"


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Populate the Userform, depending on what is already written in the Componentworksheet, what is the material type and whether it is a raw material or component'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'Userform Header
If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        UserFormSection3.Caption = "Section III) Specific Information on a raw material that is in contact with the cosmetic formulation"
    Else
        UserFormSection3.Caption = "Section III) Specific Information on a component that is in contact with the cosmetic formulation"
End If

'Name of component
ComponentName.Caption = Cells(1, 1) & "   (" & Cells(1, 2) & ")"


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''Define the wording for some labels and captions depending on the material type'''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

If Materialtype = "Plastic" Then
    JustificationLabel.Caption = "Information in support of compliance with of EU Food Contact Legislation 1935/2004 EC, and in particular with Regulation 10/2011 EC"
Else
    JustificationLabel.Caption = "Information in support of compliance with of EU Food Contact Legislation 1935/2004 EC"
End If

If Materialtype = "Coatings" Then
    Regulation1Label.Caption = "compliant with Technical Document No. 1 of the Council of Europe Resolution on Coatings AP(2004)1 (Listing of starting substances used in the coating formulation and which remain in the dried film)."
    Regulation2Label.Caption = "comliant with CEPE Code of Practice (Listing of starting substances used in the coating formulation and which remain in the dried film)."
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "Compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Glass/Ceramics" Then
    Regulation1Label.Caption = "compliant with the requirements of Directive 84/500/CEE on the approximation of the laws of the Member States relating to ceramic articles intended to come into contact with foodstuffs"
    Regulation2Label.Caption = "compliant with the recommendations of standard DM/4B/COM/002 - Rules on inorganic materials (excluding metals and alloys) intended to come into contact with foodstuffs"
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "Compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Rubber" Then
    Regulation1Label.Caption = "compliant with Council of Europe resolution on food contact Elastomers AP(2004)4"
    Regulation2Label.Caption = "compliant with Directive 93/11CEE on release of Nitroamines (total < 10ppm) and N-Nitrosable (total < 100ppm) substances"
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "Compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Decoration (e.g.label, ink)" Then
    Regulation1Label.Caption = "compliant with the EuPIA Exclusion Policy"
    Regulation2Label.Caption = "compliant with the EuPIA |fffd|Guideline on Printing Inks applied to the non-food contact surface of food packaging"
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Silicone" Then
    Regulation1Label.Caption = "compliant with Council of Europe Resolution AP2004(5) on silicones"
    Regulation2Label.Caption = "compliant with German BfR Recommendation XV on silicones"
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Steel" Then
    Regulation1Label.Caption = "compliant with EN 10088 Stainless Steels - lists and composition of stainless steel"
    Regulation2Label.Caption = "compliant with French NF A 36 711 Non packaging steel - Stainless steel intended for use in contact with foodstuffs, products and beverages for human and animal consumption"
    Regulation3Label.Caption = "compliant with Italian Decree n|fffd| 140 updating Ministerial Decree concerning the packages, containers and tools destined to come into contact with food or substances for personal use, as regards stainless steel"
    RegulationOtherLabel.Caption = "Compliant with other relevant regulations and/or standards"

ElseIf Materialtype = "Plastic" Then
    Regulation1Label.Caption = ""
    Regulation2Label.Caption = ""
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = ""
    
Else
    Regulation1Label.Caption = ""
    Regulation2Label.Caption = ""
    Regulation3Label.Caption = ""
    RegulationOtherLabel.Caption = "Elements in support of compliance with of EU Food Contact Legislation 1935/2004 EC"
End If


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''Fill out the Worksheet headers in Column 1'''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Worksheets("Component" & CompNumb).Cells(2, 1).Value = FrameFoodContact.Caption
Worksheets("Component" & CompNumb).Cells(3, 1).Value = ConditionsLabel.Caption
Worksheets("Component" & CompNumb).Cells(4, 1).Value = JustificationLabel.Caption
Worksheets("Component" & CompNumb).Cells(5, 1).Value = Regulation1Label.Caption
Worksheets("Component" & CompNumb).Cells(6, 1).Value = Regulation2Label.Caption
Worksheets("Component" & CompNumb).Cells(7, 1).Value = Regulation3Label.Caption
Worksheets("Component" & CompNumb).Cells(8, 1).Value = RegulationOtherLabel.Caption
Worksheets("Component" & CompNumb).Cells(9, 1).Value = MigrationLabel.Caption
Worksheets("Component" & CompNumb).Cells(10, 1).Value = SMLLabel.Caption
Worksheets("Component" & CompNumb).Cells(11, 1).Value = ReasonsLabel.Caption
Worksheets("Component" & CompNumb).Cells(12, 1).Value = ReasonsPlasticLabel.Caption
Worksheets("Component" & CompNumb).Cells(13, 1).Value = ReasonsPlastic1Label.Caption
Worksheets("Component" & CompNumb).Cells(14, 1).Value = ReasonsPlastic2Label.Caption
Worksheets("Component" & CompNumb).Cells(15, 1).Value = ReasonsPlasticOtherLabel.Caption
Worksheets("Component" & CompNumb).Cells(16, 1).Value = GMPLabel.Caption
Worksheets("Component" & CompNumb).Cells(17, 1).Value = OtherGMPLabel.Caption


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''Get values from ComponentWorksheet - populate Userform accordingly''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'If Food Contact yes/no/unknown is not already filled in, delete all left-over values in the component worksheet
If Worksheets("Component" & CompNumb).Cells(2, 2).Value = "" Then
    stillempty = True
    Worksheets("Component" & CompNumb).Range("B2:H21").Value = ""
Else
    stillempty = False
    If Worksheets("Component" & CompNumb).Cells(2, 2).Value = "yes" Then ''''''''''''''needed for old PAC files
        FoodContactYesNo_Click
    End If
End If

FoodComplianceValue = Worksheets("Component" & CompNumb).Cells(2, 2).Value
FoodContactLabel.Caption = Worksheets("Component" & CompNumb).Cells(2, 3).Value

ConditionsText.Value = Cells(3, 2).Value

Regulation1YesNo.Caption = Cells(5, 2)
Regulation2YesNo.Caption = Cells(6, 2)
Regulation3YesNo.Caption = Cells(7, 2)
RegulationOtherYesNo.Caption = Cells(8, 2)
RegulationOtherSpecifyText.Value = Cells(8, 3).Value

MigrationText.Value = Cells(9, 2).Value

SMLYesNo.Caption = Cells(10, 2)
SMLList.Caption = Cells(10, 3).Value

ReasonsText.Value = Cells(11, 2).Value

ReasonsPlastic1YesNo.Caption = Cells(13, 2)
ReasonsPlasticList1.Caption = Cells(13, 3).Value

ReasonsPlastic2YesNo.Caption = Cells(14, 2)
ReasonsPlasticList2.Caption = Cells(14, 3).Value ''''''''''''''''''''''

ReasonsPlasticOtherYesNo.Caption = Cells(15, 2)
ReasonsPlasticList3.Value = Cells(15, 3).Value '''''''''''''''''''''''

GMPYesNo.Caption = Cells(16, 2)
OtherGMPText.Value = Cells(17, 3).Value

'For all ToggleButtons - see if yes/no/unknown or empty - set toggle button caption and colour accordingly
For Each ctrl In UserFormSection3.Controls
   If TypeName(ctrl) = "CommandButton" Then
        If ctrl.Caption = "" Then
            ctrl.BackColor = &H8000000F
            ctrl.Caption = "Click for Yes/No"
        ElseIf ctrl.Caption = "yes" Then
            ctrl.BackColor = vbGreen
       ElseIf ctrl.Caption = "no" Then
            ctrl.BackColor = vbRed
       ElseIf ctrl.Caption = "unknown" Then
        ctrl.BackColor = vbYellow
       End If
   End If
Next ctrl


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''Set  Visibilities and Frame position ''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

For Each ctrl In UserFormSection3.Controls          'a priory, everything is visible
        ctrl.Visible = True
Next ctrl

If stillempty = True Or FoodComplianceValue = "unknown" Then      'no values filled out yet, or food compliance is unknown all frames invisible except for food compliance
    For Each ctrl In UserFormSection3.Controls
         If TypeName(ctrl) = "Frame" Then
             ctrl.Visible = False
         End If
     Next ctrl
     If stillempty = True Then
          OK.Visible = False
     End If
     FrameFoodContact.Visible = True
     OK.Top = 120
     UserFormSection3.Height = 200
End If

If FoodComplianceValue = "yes1" Or FoodComplianceValue = "yes2" Then    'food contact compliant
    FrameReasons.Visible = False
    FrameReasonsPlastic.Visible = False
    If Materialtype = "Plastic" Then
        FrameJustification.Visible = False
        FrameConditions.Top = 120
        FrameMigrationPlastics.Top = 200
        FrameGMP.Top = 420
        OK.Top = 520
        UserFormSection3.Height = 600
    Else
        FrameMigrationPlastics.Visible = False
        UserFormSection3.Height = 600
        FrameGMP.Top = 390
        OK.Top = 490
        UserFormSection3.Height = 600
    End If
    
    If Regulation1Label.Caption = "" Then
        Regulation1Label.Visible = False
        Regulation1YesNo.Visible = False
    End If
        
    If Regulation2Label.Caption = "" Then
        Regulation2Label.Visible = False
        Regulation2YesNo.Visible = False
    End If
    
    If Regulation3Label.Caption = "" Then
        Regulation3Label.Visible = False
        Regulation3YesNo.Visible = False
    End If
    
    RegulationOtherLabel.Visible = True
    RegulationOtherYesNo.Visible = True
    If RegulationOtherYesNo.Caption <> "yes" Then
       RegulationOtherSpecifyText.Visible = False
    End If
End If


If FoodComplianceValue = "no" Then          'not food contact compliant
    FrameConditions.Visible = False
    FrameJustification.Visible = False
    FrameMigrationPlastics.Visible = False
    FrameGMP.Visible = False
    If Materialtype = "Plastic" Then
        FrameReasons.Visible = False
        If ReasonsPlasticOtherYesNo.Caption <> "yes" Then
            ReasonsPlasticList3.Visible = False
        End If
        FrameReasonsPlastic.Left = 15
        FrameReasonsPlastic.Top = 120
        OK.Top = 350
        UserFormSection3.Height = 450
    Else
       FrameReasonsPlastic.Visible = False
       FrameReasons.Left = 15
        OK.Top = 200
        UserFormSection3.Height = 300
    End If
End If

If GMPYesNo.Caption = "yes" Or GMPYesNo.Caption = "Click for Yes/No" Or GMPYesNo.Caption = "unknown" Then
    OtherGMPLabel.Visible = False
    OtherGMPText.Visible = False
End If




''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Highlight obligatory fields/controls in red if they are not filled out '''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Delete all fields in Workbook that refer to non-visible frames
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

obligatory FoodContactYesNo, Worksheets("Component" & CompNumb).Cells(2, 2).Value

If FrameConditions.Visible = True Then
    'need to do nothing
Else
    Worksheets("Component" & CompNumb).Cells(3, 2).Value = ""
End If

If FrameJustification.Visible = True Then
    obligatory Regulation1YesNo, Worksheets("Component" & CompNumb).Cells(5, 2).Value
    obligatory Regulation2YesNo, Worksheets("Component" & CompNumb).Cells(6, 2).Value
    obligatory Regulation3YesNo, Worksheets("Component" & CompNumb).Cells(7, 2).Value
    obligatory RegulationOtherYesNo, Worksheets("Component" & CompNumb).Cells(8, 2).Value
Else
    Worksheets("Component" & CompNumb).Cells(5, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(6, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(7, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(8, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(8, 3).Value = ""
End If

If FrameMigrationPlastics.Visible = True Then
    obligatory SMLYesNo, Worksheets("Component" & CompNumb).Cells(10, 2).Value
Else
    Worksheets("Component" & CompNumb).Cells(9, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(10, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(10, 3).Value = ""
End If

If FrameReasons.Visible = True Then
    'need to do nothing
Else
    Worksheets("Component" & CompNumb).Cells(11, 2).Value = ""
    
End If

If FrameReasonsPlastic.Visible = True Then
    obligatory ReasonsPlastic1YesNo, Worksheets("Component" & CompNumb).Cells(13, 2).Value
    obligatory ReasonsPlastic2YesNo, Worksheets("Component" & CompNumb).Cells(14, 2).Value
    obligatory ReasonsPlasticOtherYesNo, Worksheets("Component" & CompNumb).Cells(15, 2).Value
Else
    Worksheets("Component" & CompNumb).Cells(13, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(14, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(15, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(13, 3).Value = ""
    Worksheets("Component" & CompNumb).Cells(14, 3).Value = ""
    Worksheets("Component" & CompNumb).Cells(15, 3).Value = ""
End If


If FrameGMP.Visible = True Then
    obligatory GMPYesNo, Worksheets("Component" & CompNumb).Cells(16, 2).Value
Else
    Worksheets("Component" & CompNumb).Cells(17, 2).Value = ""
    Worksheets("Component" & CompNumb).Cells(17, 3).Value = ""
End If



End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''Manage Inputs and write them into the worksheet''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub FoodContactYesNo_Click()
'Fill out the Food compliance field
If Materialtype = "Plastic" Then
    If Worksheets("General").Cells(2, 4).Value = "Rawmaterial" Then
        Choice.Show
        If ChoiceValue = "yes" Then
            FoodComplianceValue = "yes1"
            FoodContactLabel.Caption = "The composition of the Raw Material is compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC."
        End If
        If ChoiceValue = "no" Then
            FoodComplianceValue = "no"
            FoodContactLabel.Caption = "The composition of the Raw Material is not compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and Regulation 10/2011 EC."
        End If
        If ChoiceValue = "unknown" Then
            FoodComplianceValue = "unknown"
            FoodContactLabel.Caption = "Compliance of the composition of the Raw Material with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and with Regulation 10/2011 EC is unknown."
        End If
    Else
        FoodCompliance.Show
        If FoodComplianceValue = "yes1" Then
            FoodContactLabel.Caption = "Packaging component is compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC. Compliance has been assessed for the component itself."
        End If
        If FoodComplianceValue = "yes2" Then
            FoodContactLabel.Caption = "The composition of all raw materials used for the manufacturing of the component are compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC. However, compliance has not been assessed for the component itself."
        End If
        If FoodComplianceValue = "no" Then
            FoodContactLabel.Caption = "Packaging component is not compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC."
        End If
        If FoodComplianceValue = "unknown" Then
            FoodContactLabel.Caption = "Compliance of the packaging component with the requirements of EU Food Contact Framework Regulation 1935/2004 EC, and in particular with Regulation 10/2011 EC is unknown."
        End If
    End If
Else
    Choice.Show
    If ChoiceValue = "yes" Then
        FoodComplianceValue = "yes1"
        FoodContactLabel.Caption = "The " & Worksheets("General").Cells(2, 4).Value & " is compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC."
    End If
        
    If ChoiceValue = "no" Then
        FoodComplianceValue = "no"
        FoodContactLabel.Caption = "The " & Worksheets("General").Cells(2, 4).Value & " is not compliant with the requirements of EU Food Contact Framework Regulation 1935/2004 EC."
    End If
        
    If ChoiceValue = "unknown" Then
        FoodComplianceValue = "unknown"
        FoodContactLabel.Caption = "Compliance of the " & Worksheets("General").Cells(2, 4).Value & " with the requirements of EU Food Contact Framework Regulation 1935/2004 EC is unknown."
    End If
End If
Cells(2, 2) = FoodComplianceValue
Cells(2, 3) = FoodContactLabel.Caption
stillempty = False
UserForm_Initialize
End Sub

Private Sub ConditionsText_Change()
Cells(3, 2).Value = ConditionsText.Value
UserForm_Initialize
End Sub

Private Sub Regulation1YesNo_Click()
Choice.Show
Regulation1YesNo.Caption = ChoiceValue
Cells(5, 2) = Regulation1YesNo.Caption
UserForm_Initialize
End Sub

Private Sub Regulation2YesNo_Click()
Choice.Show
Regulation2YesNo.Caption = ChoiceValue
Cells(6, 2) = Regulation2YesNo.Caption
UserForm_Initialize
End Sub

Private Sub Regulation3YesNo_Click()
Choice.Show
Regulation3YesNo.Caption = ChoiceValue
Cells(7, 2) = Regulation3YesNo.Caption
UserForm_Initialize
End Sub

Private Sub RegulationOtherYesNo_Click()
Choice.Show
RegulationOtherYesNo.Caption = ChoiceValue
If RegulationOtherYesNo.Caption <> "yes" Then
    RegulationOtherSpecifyText.Value = ""
End If
Cells(8, 2) = RegulationOtherYesNo.Caption
UserForm_Initialize
End Sub

Private Sub RegulationOtherSpecifyText_Change()
Cells(8, 3).Value = RegulationOtherSpecifyText.Value
UserForm_Initialize
End Sub

Private Sub MigrationText_Change()
Cells(9, 2).Value = MigrationText.Value
UserForm_Initialize
End Sub

Private Sub SMLYesNo_Click()
Choice.Show
SMLYesNo.Caption = ChoiceValue
Cells(10, 2) = SMLYesNo.Caption
If SMLYesNo.Caption = "yes" Then
    SMLList.Caption = InputBox("Please identify the first SML substance with Name, CAS number and concentration:") & vbCrLf
    buffer = "not empty"
    Do While buffer <> ""
        buffer = InputBox("Please identify additional SML substance with Name, CAS number and concentration / Cancel to stop:")
        SMLList.Caption = SMLList.Caption & buffer & vbCrLf
        mystring = SMLList.Caption
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
            If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        SMLList.Caption = mystring
    Loop
    buffer = ""
ElseIf SMLYesNo.Caption = "no" Then
'    SMLList.Visible = False
    SMLList.Caption = "no SML substance present"
ElseIf SMLYesNo.Caption = "unknown" Then
'    SMLList.Visible = False
    SMLList.Caption = "unknown"
End If



Cells(10, 3).Value = SMLList.Caption
UserForm_Initialize
End Sub

Private Sub ReasonsText_Change()
Cells(11, 2).Value = ReasonsText.Value
UserForm_Initialize
End Sub

Private Sub ReasonsPlastic1YesNo_Click()
Choice.Show
ReasonsPlastic1YesNo.Caption = ChoiceValue
Cells(13, 2) = ReasonsPlastic1YesNo.Caption
If ReasonsPlastic1YesNo.Caption = "yes" Then
    ReasonsPlasticList1.Caption = InputBox("Please identify the first substance with Name, CAS number and concentration:") & vbCrLf
    buffer = "not empty"
    Do While buffer <> ""
        buffer = InputBox("Please identify additional substance with Name, CAS number and concentration / Cancel to stop:")
        ReasonsPlasticList1.Caption = ReasonsPlasticList1.Caption & buffer & vbCrLf
    Loop
    mystring = ReasonsPlasticList1.Caption
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
    ReasonsPlasticList1.Caption = mystring
    buffer = ""
Else
    ReasonsPlasticList1.Visible = False
    ReasonsPlasticList1.Caption = ""
End If
Cells(13, 3).Value = ReasonsPlasticList1.Caption
UserForm_Initialize
End Sub

Private Sub ReasonsPlastic2YesNo_Click()
Choice.Show
ReasonsPlastic2YesNo.Caption = ChoiceValue
Cells(14, 2) = ReasonsPlastic2YesNo.Caption
If ReasonsPlastic2YesNo.Caption = "yes" Then
    ReasonsPlasticList2.Caption = InputBox("Please identify the first substance with Name, CAS number and concentration:") & vbCrLf
    buffer = "not empty"
    Do While buffer <> ""
        buffer = InputBox("Please identify additional substance with Name, CAS number and concentration / Cancel to stop:")
        ReasonsPlasticList2.Caption = ReasonsPlasticList2.Caption & buffer & vbCrLf
        
    Loop
    mystring = ReasonsPlasticList2.Caption
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
        If Right(mystring, 1) = vbLf Or Right(mystring, 1) = vbCr Then mystring = Left(mystring, Len(mystring) - 1)
    ReasonsPlasticList2.Caption = mystring
    buffer = ""
Else
    ReasonsPlasticList2.Visible = False
    ReasonsPlasticList2.Caption = ""
End If
Cells(14, 3).Value = ReasonsPlasticList2.Caption
UserForm_Initialize
End Sub

Private Sub ReasonsPlasticOtherYesNo_Click()
Choice.Show
ReasonsPlasticOtherYesNo.Caption = ChoiceValue
Cells(15, 2) = ReasonsPlasticOtherYesNo.Caption
If ReasonsPlasticOtherYesNo.Caption = "yes" Then
    ReasonsPlasticList3.Visible = True
Else
    ReasonsPlasticList3.Visible = False
    ReasonsPlasticList3.Value = ""
End If
Cells(15, 3).Value = ReasonsPlasticList3.Value
UserForm_Initialize
End Sub

Private Sub ReasonsPlasticList3_Change()
Cells(15, 3).Value = ReasonsPlasticList3.Value
UserForm_Initialize
End Sub

Private Sub GMPYesNo_Click()
Choice.Show
GMPYesNo.Caption = ChoiceValue

If GMPYesNo.Caption = "yes" Then
    Cells(17, 2) = ""
    OtherGMPText.Value = ""
    Cells(17, 3) = ""
End If

Cells(16, 2) = GMPYesNo.Caption
UserForm_Initialize
End Sub

Private Sub OtherGMPText_Change()
Cells(17, 3).Value = OtherGMPText.Value
UserForm_Initialize
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''Check if everything obligatory is filled out and start Userform 3a'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub OK_Click()
j = 20
Section3valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated

'For Each fram In UserFormSection3.Controls
    'If TypeOf fram Is Frame Then
    '    If fram.Visible = True Then
    '        For Each ctrl In UserFormSection3.fram
                    'If ctrl.BackColor = &HC0C0FF Then
                    '    Section3valid = False
                    'End If
    '        Next ctrl
    '    End If
    'End If
'Next fram

 For Each fram In UserFormSection3.Controls ' <-- loop through controls of current page
        If TypeOf fram Is Frame Then ' <-- check if control type is Frame
            If fram.Visible = True Then
                
                For j = 0 To fram.Controls.Count - 1   '<-- loop through all items related to the current Frame collection
                    If fram.Controls(j).BackColor = &HC0C0FF And fram.Controls(j).Visible = True Then
                        Section3valid = False
                        'MsgBox fram.Controls(j).Name '<-- display a message box
                    End If
                    
                Next j
            End If
        End If
Next fram





If Section3valid = False Then
    MsgBox ("Please fill out all required information")
Else
    Unload UserFormSection3
    UserFormSection3a.Show
End If

End Sub


Attribute VB_Name = "UserFormSection3a"
Attribute VB_Base = "0{CEDD4D6F-B709-4396-91F6-9A216BA25B2E}{66947F55-61CF-4F98-9452-23DBFF91D66A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim nomore As Boolean


Private Sub UserForm_Initialize()

Intro.Caption = "Does the packaging " & Worksheets("General").Cells(2, 4).Value & " contain ( intentionally added or known to be present ) any of the following substances of regulatory concern to the cometics safety assessor ?" & vbCrLf & vbCrLf _
               & "a) Substances prohibited or restricted in Annex II or III of the EU Cosmetics Regulation 1223/2009 at/above 10 ppm, or alternatively, migrating at levels above 1O0 ppb in a relevant simulant." & vbCrLf _
               & "   This includes substances classified as Carcinogen, Mutagen or Reprotoxic under Annex VI of  CLP Regulation 1272/2008" & vbCrLf & vbCrLf _
               & "b) Substances classified as skin sensitiser Category 1A under CLP Regulation 1272/2008 at/above 1000 ppm, or alternatively, migrating at levels above 100 ppb in a relevant simulant" & vbCrLf & vbCrLf _
               & "c)  Substances classified as skin sensitiser Category 1 or 1B  under CLP Regulation 1272/2008 at/above 100 ppm, or alternatively, migrating at levels above 1000 ppb in a relevant simulant"

Worksheets("Component" & CompNumb).Cells(20, 1).Value = "Presence of Substances of concern"

'Clear all Input fields
    TextBoxSubstancename.Value = ""
    TextBoxCAS.Value = ""
    TextBoxConcentration.Value = ""
    CheckBoxSensitiser.Value = False
    CheckBoxSensitiserCat1A.Value = False
    CheckBoxAnnex.Value = False
    TextBoxReference.Value = ""
    
    

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Populate inputfields from the entry in the Worksheet - if it is a new file, the worksheet fields are obviously empty''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    SubstancesList.Caption = Worksheets("Component" & CompNumb).Cells(20, 3).Value
    

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''Set Visibilities''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

FrameInput.Visible = False

If Worksheets("Component" & CompNumb).Cells(20, 2).Value = "" Then
    Frame1.Visible = False
    AddSubstance.Visible = False
    ClearList.Visible = False
    ConcernYesNo.Visible = True
    ConcernYesNo.Caption = "Click for yes/no"
    
ElseIf Worksheets("Component" & CompNumb).Cells(20, 2).Value = "no" Or Worksheets("Component" & CompNumb).Cells(20, 2).Value = "unknown" Then
    Frame1.Visible = True
    AddSubstance.Visible = False
    ClearList.Visible = False
    ConcernYesNo.Visible = True
    ConcernYesNo.Caption = Worksheets("Component" & CompNumb).Cells(20, 2).Value

ElseIf Worksheets("Component" & CompNumb).Cells(20, 2).Value = "yes" Then
    Frame1.Visible = True
    AddSubstance.Visible = True
    ClearList.Visible = True
    ConcernYesNo.Visible = False
    ConcernYesNo.Caption = Worksheets("Component" & CompNumb).Cells(20, 2).Value
End If



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''Check if all obligatory fields are filled out and set to red if neecssary''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

If ConcernYesNo.Caption = "Click for yes/no" Or SubstancesList.Caption = "" Then
    ConcernYesNo.BackColor = &HC0C0FF
    AddSubstance.BackColor = &HC0C0FF
Else
    ConcernYesNo.BackColor = &H8000000F
    AddSubstance.BackColor = &H8000000F
End If






End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''Manage Inputs and write them into the worksheet''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub ConcernYesNo_Click() 'Presence of concern substances
Choice.Show
ConcernYesNo.Caption = ChoiceValue
Worksheets("Component" & CompNumb).Cells(20, 2).Value = ConcernYesNo.Caption
If ChoiceValue = "yes" Then
    Worksheets("Component" & CompNumb).Cells(20, 3).Value = ""
ElseIf ChoiceValue = "no" Then
    Worksheets("Component" & CompNumb).Cells(20, 3).Value = "No substance of concern added or known to be present."
ElseIf ChoiceValue = "unknown" Then
    Worksheets("Component" & CompNumb).Cells(20, 3).Value = "Presence of substances of concern unknown."
End If
UserForm_Initialize
End Sub

'Open Input Frame for new substance
Private Sub AddSubstance_Click()
FrameInput.Visible = True
End Sub

'Write new substance into Worksheet and close Inputframe
Private Sub AddToList_Click()
identity = TextBoxSubstancename.Value & "; CAS:" & TextBoxCAS.Value & "; Amount:" & TextBoxConcentration.Value & vbCrLf

reason = "Reason: "
If CheckBoxAnnex.Value = True Then
    reason = reason & "   Annex II/III    "
End If

If CheckBoxSensitiser.Value = True Or CheckBoxSensitiserCat1A.Value = True Then
    reason = reason & "   Sensitiser "
    If CheckBoxSensitiser.Value = True Then
        reason = reason & "1/1B"
    End If
    If CheckBoxSensitiserCat1A.Value = True Then
        reason = reason & " 1A"
    End If
End If

reference = "//  Reference: " & TextBoxReference.Value & vbCrLf & vbCrLf

Worksheets("Component" & CompNumb).Cells(20, 3).Value = Worksheets("Component" & CompNumb).Cells(20, 3).Value & identity & reason & reference

FrameInput.Visible = False
UserForm_Initialize
End Sub

Private Sub ClearList_Click() 'delete substance list of concern

Worksheets("Component" & CompNumb).Cells(20, 3).Value = ""
Worksheets("Component" & CompNumb).Cells(20, 2).Value = ""

UserForm_Initialize
End Sub
Private Sub TextBoxConcentration_Exit(ByVal Cancel As MSForms.ReturnBoolean)    'check if Concetration textbox has a unit
    If IsNumeric(TextBoxConcentration.Value) Then
        MsgBox "Please indicate unit of measurement"
        Cancel = True
    End If
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''Check if everything obligatory is filled out and start Userform 3a'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub OK_Click()
 
Section3avalid = True

For Each ctrl In UserFormSection3a.Controls
   If ctrl.BackColor = &HC0C0FF Then
       Section3avalid = False
   End If
Next ctrl

If Section3avalid = False Then
    MsgBox ("Please fill out all required information")
    UserForm_Initialize
Else
    Unload UserFormSection3a
End If
    

End Sub


Attribute VB_Name = "UserFormSection4"
Attribute VB_Base = "0{506D9568-B993-4BE7-994A-837996095440}{E2479ED7-2D5B-47E7-98F1-36474DA9A763}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()

Intro.Caption = "Please provide any additional relevant information on the packaging " & Worksheets("General").Cells(2, 4).Value & " that may help the Cosmetic Product Safety Assessor to evaluate its safety when used with the cosmetic formulation." _
& "In particular, provide Documents of Compliance (DoC) as well as references/summaries of migration evaluation (OML, SML) in relation to the components or its raw material :"


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Populate inputfields from the entry in the Worksheet - if it is a new file, the worksheet fields are obviously empty''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

TextBoxAdditionalInformation.Value = Worksheets("OtherInfo").Range("A" & 1).Value

End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''Manage Inputs and write them into the worksheet''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub TextBoxAdditionalInformation_Change()
Worksheets("OtherInfo").Range("A" & 1).Value = TextBoxAdditionalInformation.Value
UserForm_Initialize
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''Check if everything obligatory is filled out and start Userform 3a'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub CommandButton1_Click()

Section4valid = True
Unload UserFormSection4

End Sub
Attribute VB_Name = "UserFormSection5"
Attribute VB_Base = "0{B7CBE410-4F5E-443D-8287-6234D6756DC3}{62847F4B-8049-4BD4-A0A9-92D1637E4E81}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()

Worksheets("Signature").Range("A" & 1).Value = "DATE: "
Worksheets("Signature").Range("A" & 2).Value = "CONTACT & FUNCTION: "
Worksheets("Signature").Range("A" & 3).Value = "SIGNATURE: "


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Populate inputfields from the entry in the Worksheet - if it is a new file, the worksheet fields are obviously empty''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
TextBoxDate.Value = Worksheets("Signature").Range("B" & 1).Value
TextBoxContact.Value = Worksheets("Signature").Range("B" & 2).Value



''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''Highlight obligatory fields/controls in red if they are not filled out '''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
obligatory Label1, Worksheets("Signature").Cells(1, 2).Value
obligatory Label2, Worksheets("Signature").Cells(2, 2).Value

End Sub




'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''Check if everything obligatory is filled out and start Userform 3a'''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub CommandButton1_Click()

Section5valid = True                           'check if there is still a control red --> need to fill out --> Userform is not yet and cannot validated
For Each ctrl In UserFormSection5.Controls
        If ctrl.BackColor = &HC0C0FF Then
            Section5valid = False
        End If
Next ctrl

If Section5valid = False Then
    MsgBox ("Please fill out all required information")
Else
    Unload UserFormSection5
End If

End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''Manage Inputs and write them into the worksheet''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub TextBoxDate_Change()
Worksheets("Signature").Range("B" & 1).NumberFormat = "@"
Worksheets("Signature").Range("B" & 1).Value = TextBoxDate.Value

UserForm_Initialize

End Sub

Private Sub TextBoxContact_Change()
Worksheets("Signature").Range("B" & 2).Value = TextBoxContact.Value
UserForm_Initialize
End Sub


INQUEST-PP=macro
