Attribute VB_Name = "Instructions"
Attribute VB_Base = "0{608145F1-5EF0-46D2-880E-315D717ACB5D}{A4034B50-0AD5-4096-B465-838FF5D7D95A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    Me.Hide
End Sub

Private Sub Label2_Click()

End Sub
Attribute VB_Name = "Module1"
Option Explicit

Public Const ShipColour As Integer = 15
Public Const HitColour As Integer = 45
Public Const SunkColour As Integer = 47
Public CurrentPosition As String
Public ComputerPosition As String
Public FoundShip As String
Public ShipLength As Integer
Public ShipDirection As String
Public ShipType As String
Public cShipA As Byte
Public cShipB As Byte
Public cShipD As Byte
Public cShipF As Byte
Public cShipM As Byte
Public pShipA As Byte
Public pShipB As Byte
Public pShipD As Byte
Public pShipF As Byte
Public pShipM As Byte
Public SearchStatus As String
Public CountDirections As Integer
Public CountUp As Byte
Public CountDown As Byte
Public CountLeft As Byte
Public CountRight As Byte
Public Player1Hits As Byte
Public ComputerHits As Byte
Public TempRange As String
Public TempRange2 As String
Public Random1 As Integer
Public Random2 As Integer
Public SpaceFound As Boolean
Public n As Integer
Public x As Integer
Public ShipDrawn As Boolean

Sub LayoutShips()
Attribute LayoutShips.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
'Warn if a game is in progress
    If Player1Hits <> 17 Then
        If ComputerHits <> 17 Then
            CountDirections = MsgBox("Are you sure you want to start a new game", vbYesNo, "Battleships")
            If CountDirections <> 6 Then
                    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
                Exit Sub
            End If
        End If
    End If
    Application.ScreenUpdating = False
'Reset variables
    Range("Message2").Value = ""
    Range("Message3").Value = ""
    Player1Hits = 0
    ComputerHits = 0
    pShipA = 0
    pShipB = 0
    pShipD = 0
    pShipF = 0
    pShipM = 0
    cShipA = 0
    cShipB = 0
    cShipD = 0
    cShipF = 0
    cShipM = 0
'Clean up the playing areas
    Range("FormatRestore").Copy
    Range("Player1").PasteSpecial xlPasteFormats
    Range("Player2").PasteSpecial xlPasteFormats
    Sheets("ComputerPlayer").Visible = True
    Sheets("ComputerPlayer").Select
    Range("Player1Board", Range("Player1Board").Offset(9, 9)).ClearContents
    Range("ComputerBoard", Range("ComputerBoard").Offset(9, 9)).ClearContents
    Sheets("Battleships").Select
    Sheets("ComputerPlayer").Visible = False
    With Range("Player1")
        .ClearContents
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThin
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThin
    End With
    With Range("Player2")
        .ClearContents
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThin
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThin
    End With
'Start positioning first ship
    Range("Message").Value = "Place the first square for your Aircraft Carrier (length=5)"
    [Battleships].Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End Sub

Sub CheckDirection()
Attribute CheckDirection.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
'This shouldn't happen but it's not doing any harm
    If Range(CurrentPosition).Interior.ColorIndex = ShipColour Then End
    ShipDrawn = False
    Do
'Re-enable the buttons on the direction form
        UserForm1.DirectionUp.Enabled = True
        UserForm1.DirectionDown.Enabled = True
        UserForm1.DirectionLeft.Enabled = True
        UserForm1.DirectionRight.Enabled = True
        CountUp = 1
        CountDown = 1
        CountLeft = 1
        CountRight = 1
        
        For n = 1 To ShipLength - 1
'Check Up
            If Range(CurrentPosition).Offset(-n, 0).Interior.ColorIndex = ShipColour Then
                UserForm1.DirectionUp.Enabled = False
                UserForm1.DirectionUp.Value = False
                CountUp = 0
            End If
            If Range(CurrentPosition).Offset(-n, 0).Row < Range("Player1").Row Then
                UserForm1.DirectionUp.Enabled = False
                UserForm1.DirectionUp.Value = False
                CountUp = 0
            End If
'Check Down
            If Range(CurrentPosition).Offset(n, 0).Interior.ColorIndex = ShipColour Then
                UserForm1.DirectionDown.Enabled = False
                UserForm1.DirectionDown.Value = False
                CountDown = 0
            End If
            If Range(CurrentPosition).Offset(n, 0).Row > Range("Player1").Row + 9 Then
                UserForm1.DirectionDown.Enabled = False
                UserForm1.DirectionDown.Value = False
                CountDown = 0
            End If
'Check Left
            If Range(CurrentPosition).Offset(0, -n).Interior.ColorIndex = ShipColour Then
                UserForm1.DirectionLeft.Enabled = False
                UserForm1.DirectionLeft.Value = False
                CountLeft = 0
            End If
            If Range(CurrentPosition).Offset(0, -n).Column < Range("Player1").Column Then
                UserForm1.DirectionLeft.Value = False
                UserForm1.DirectionLeft.Enabled = False
                CountLeft = 0
            End If
'Check Right
            If Range(CurrentPosition).Offset(0, n).Interior.ColorIndex = ShipColour Then
                UserForm1.DirectionRight.Enabled = False
                UserForm1.DirectionRight.Value = False
                CountRight = 0
            End If
            If Range(CurrentPosition).Offset(0, n).Column > Range("Player1").Column + 9 Then
                UserForm1.DirectionRight.Enabled = False
                UserForm1.DirectionRight.Value = False
                CountRight = 0
            End If
        Next n
'Check how many directions are available
        CountDirections = CountUp + CountDown + CountLeft + CountRight
        If CountDirections = 0 Then
'If no directions available, stop
            MsgBox "You can't put a ship there!", vbInformation, "Layout Ships"
            Exit Sub
        ElseIf CountDirections = 1 Then
'If only 1 direction, there's no need to ask user
            If CountUp = 1 Then
                ShipDirection = "Up"
                DrawShip
            End If
            If CountDown = 1 Then
                ShipDirection = "Down"
                DrawShip
            End If
            If CountLeft = 1 Then
                ShipDirection = "Left"
                DrawShip
            End If
            If CountRight = 1 Then
                ShipDirection = "Right"
                DrawShip
            End If
        Else
'Select direction
            UserForm1.Show
            If ShipDirection = "Up" Or ShipDirection = "Down" Or ShipDirection = "Left" Or ShipDirection = "Right" Then DrawShip
        End If
    Loop Until ShipDrawn
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End Sub

Sub DrawShip()
Attribute DrawShip.VB_ProcData.VB_Invoke_Func = " \n14"
    ShipDrawn = True
'Define range to put ship in
    Select Case ShipDirection
        Case "Up"
            TempRange = Range(CurrentPosition, Range(CurrentPosition).Offset(-(ShipLength - 1), 0)).Address
        Case "Down"
            TempRange = Range(CurrentPosition, Range(CurrentPosition).Offset(ShipLength - 1, 0)).Address
        Case "Left"
            TempRange = Range(CurrentPosition, Range(CurrentPosition).Offset(0, -(ShipLength - 1))).Address
        Case "Right"
            TempRange = Range(CurrentPosition, Range(CurrentPosition).Offset(0, ShipLength - 1)).Address
        Case Else
            MsgBox "Error encountered, shoot programmer!", vbCritical, "Oops!"
            End
    End Select
'Draw ship on player board
    With Range(TempRange)
        .Interior.ColorIndex = ShipColour
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
    End With
'Change the message for the next ship
    Select Case Range("Message").Value
        Case "Place the first square for your Aircraft Carrier (length=5)"
            ShipType = "A"
            Range("Message").Value = "Place the first square for your Battleship (length=4)"
        Case "Place the first square for your Battleship (length=4)"
            ShipType = "B"
            Range("Message").Value = "Place the first square for your Destroyer (length=3)"
        Case "Place the first square for your Destroyer (length=3)"
            ShipType = "D"
            Range("Message").Value = "Place the first square for your Frigate (length=3)"
        Case "Place the first square for your Frigate (length=3)"
            ShipType = "F"
            Range("Message").Value = "Place the first square for your Minesweeper (length=2)"
        Case "Place the first square for your Minesweeper (length=2)"
            ShipType = "M"
            Range("Message").Value = "Search your opponent's board"
    End Select
'Define range to place values for ship in hidden sheet
    Select Case ShipDirection
        Case "Up"
            TempRange = "ComputerPlayer!" & Range(CurrentPosition, Range(CurrentPosition).Offset(-(ShipLength - 1), 0)).Address
        Case "Down"
            TempRange = "ComputerPlayer!" & Range(CurrentPosition, Range(CurrentPosition).Offset(ShipLength - 1, 0)).Address
        Case "Left"
            TempRange = "ComputerPlayer!" & Range(CurrentPosition, Range(CurrentPosition).Offset(0, -(ShipLength - 1))).Address
        Case "Right"
            TempRange = "ComputerPlayer!" & Range(CurrentPosition, Range(CurrentPosition).Offset(0, ShipLength - 1)).Address
        Case Else
            MsgBox "Error encountered, shoot programmer!", vbCritical, "Oops!"
            End
    End Select
    Range(TempRange).Value = ShipType
'if the last ship has been drawn, get the computer to draw its ships
    If Range("Message").Value = "Search your opponent's board" Then DrawComputerShips
End Sub

Sub DrawComputerShips()
Attribute DrawComputerShips.VB_ProcData.VB_Invoke_Func = " \n14"
    Randomize
    Range(Range("ComputerBoard"), Range("ComputerBoard").Offset(9, 9)).ClearContents
'Define size and type of ship the draw
    ShipLength = 5
    ShipType = "A"
    Draw1Ship
    ShipLength = 4
    ShipType = "B"
    Draw1Ship
    ShipLength = 3
    ShipType = "D"
    Draw1Ship
    ShipLength = 3
    ShipType = "F"
    Draw1Ship
    ShipLength = 2
    ShipType = "M"
    Draw1Ship
End Sub

Sub Draw1Ship()
Attribute Draw1Ship.VB_ProcData.VB_Invoke_Func = " \n14"
    SpaceFound = False
    Do
        SpaceFound = True
        Random1 = Int(Rnd() * 4) 'numbers between 0 and 3
'Choose randon direction
        Select Case Random1
            Case 0
                ShipDirection = "Up"
            Case 1
                ShipDirection = "Down"
            Case 2
                ShipDirection = "Left"
            Case Else
                ShipDirection = "Right"
        End Select
        Random1 = Int(Rnd() * 10) 'numbers between 0 and 9
        Random2 = Int(Rnd() * 10) 'numbers between 0 and 9
'Check chosen position is legal
        For n = 0 To ShipLength - 1
            Select Case ShipDirection
                Case "Up"
                    If Not IsEmpty(Range("ComputerBoard").Offset(Random1 - n, Random2).Value) Then SpaceFound = False
                    If Range("ComputerBoard").Offset(Random1 - n, Random2).Row < Range("computerboard").Row Then SpaceFound = False
                Case "Down"
                    If Not IsEmpty(Range("ComputerBoard").Offset(Random1 + n, Random2).Value) Then SpaceFound = False
                    If Range("ComputerBoard").Offset(Random1 + n, Random2).Row > Range("computerboard").Row + 9 Then SpaceFound = False
                Case "Left"
                    If Not IsEmpty(Range("ComputerBoard").Offset(Random1, Random2 - n).Value) Then SpaceFound = False
                    If Range("ComputerBoard").Offset(Random1, Random2 - n).Column < Range("computerboard").Column Then SpaceFound = False
                Case Else
                    If Not IsEmpty(Range("ComputerBoard").Offset(Random1, Random2 + n).Value) Then SpaceFound = False
                    If Range("ComputerBoard").Offset(Random1, Random2 + n).Column > Range("computerboard").Column + 9 Then SpaceFound = False
            End Select
        Next n
'if not, try again
    Loop Until SpaceFound
'Place ship in hidden board
    For n = 0 To ShipLength - 1
        Select Case ShipDirection
            Case "Up"
                Range("ComputerBoard").Offset(Random1 - n, Random2).Value = ShipType
            Case "Down"
                Range("ComputerBoard").Offset(Random1 + n, Random2).Value = ShipType
            Case "Left"
                Range("ComputerBoard").Offset(Random1, Random2 - n).Value = ShipType
            Case Else
                Range("ComputerBoard").Offset(Random1, Random2 + n).Value = ShipType
        End Select
    Next n
End Sub

Sub CheckEnemy()
Attribute CheckEnemy.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
'Check if chosen spot is a 'miss'
    If IsEmpty(Range("ComputerPlayer!" & CurrentPosition).Value) Then
        Range("Message2").Value = "You missed!"
        Range("Message3").Value = ""
        Range(CurrentPosition).Value = "x"
    Else
'If it's a hit, say what ship and if it is sunk or not
        FoundShip = Range("ComputerPlayer!" & CurrentPosition).Value
        Select Case FoundShip
            Case "A"
                cShipA = cShipA + 1
                If cShipA < 5 Then
                    Range("Message2").Value = "You hit the computer's Aircraft Carrier!"
                Else
                    Range("Message2").Value = "You sunk the computer's Aircraft Carrier!"
                End If
            Case "B"
                cShipB = cShipB + 1
                If cShipB < 4 Then
                    Range("Message2").Value = "You hit the computer's Battleship!"
                Else
                    Range("Message2").Value = "You sunk the computer's Battleship!"
                End If
            Case "D"
                cShipD = cShipD + 1
                If cShipD < 3 Then
                    Range("Message2").Value = "You hit the computer's Destroyer!"
                Else
                    Range("Message2").Value = "You sunk the computer's Destroyer!"
                End If
            Case "F"
                cShipF = cShipF + 1
                If cShipF < 3 Then
                    Range("Message2").Value = "You hit the computer's Frigate!"
                Else
                    Range("Message2").Value = "You sunk the computer's Frigate!"
                End If
            Case "M"
                cShipM = cShipM + 1
                If cShipM < 2 Then
                    Range("Message2").Value = "You hit the computer's Minesweeper!"
                Else
                    Range("Message2").Value = "You sunk the computer's Minesweeper!"
                End If
        End Select
        Range(CurrentPosition).Value = FoundShip
'Change colour of hit square
        Range(CurrentPosition).Interior.ColorIndex = HitColour
        ComputerHits = ComputerHits + 1
    End If
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End Sub

Sub ComputerTurn()
Attribute ComputerTurn.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    ComputerPosition = "Empty"
    LookForIncompleteShips
    If ComputerPosition = "Empty" Then ChooseRandomPosition
    Range(ComputerPosition).Value = "x"
    If Len(Range("ComputerPlayer!" & ComputerPosition).Value) = 1 Then
        Player1Hits = Player1Hits + 1
        Range(ComputerPosition).Interior.ColorIndex = SunkColour
        FoundShip = Left(Range("ComputerPlayer!" & ComputerPosition).Value, 1)
        Select Case FoundShip
            Case "A"
                pShipA = pShipA + 1
                If pShipA < 5 Then
                    Range("Message3").Value = "Computer hit your Aircraft Carrier!"
                Else
                    Range("Message3").Value = "Computer sunk your Aircraft Carrier!"
                End If
            Case "B"
                pShipB = pShipB + 1
                If pShipB < 4 Then
                    Range("Message3").Value = "Computer hit your Battleship!"
                Else
                    Range("Message3").Value = "Computer sunk your Battleship!"
                End If
            Case "D"
                pShipD = pShipD + 1
                If pShipD < 3 Then
                    Range("Message3").Value = "Computer hit your Destroyer!"
                Else
                    Range("Message3").Value = "Computer sunk your Destroyer!"
                End If
            Case "F"
                pShipF = pShipF + 1
                If pShipF < 3 Then
                    Range("Message3").Value = "Computer hit your Frigate!"
                Else
                    Range("Message3").Value = "Computer sunk your Frigate!"
                End If
            Case "M"
                pShipM = pShipM + 1
                If pShipM < 2 Then
                    Range("Message3").Value = "Computer hit your Minesweeper!"
                Else
                    Range("Message3").Value = "Computer sunk your Minesweeper!"
                End If
        End Select
    Else
        Range("Message3").Value = "Computer misses!"
    End If
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
End Sub

Sub LookForIncompleteShips()
Attribute LookForIncompleteShips.VB_ProcData.VB_Invoke_Func = " \n14"
'Check if any ships are hit but not sunk
    If pShipA > 0 And pShipA < 5 Then
        FoundShip = "A"
        FindHit
        If pShipA = 1 Then LookAround Else CheckHitDirection
        Exit Sub
    End If
    If pShipB > 0 And pShipB < 4 Then
        FoundShip = "B"
        FindHit
        If pShipB = 1 Then LookAround Else CheckHitDirection
        Exit Sub
    End If
    If pShipD > 0 And pShipD < 3 Then
        FoundShip = "D"
        FindHit
        If pShipD = 1 Then LookAround Else CheckHitDirection
        Exit Sub
    End If
    If pShipF > 0 And pShipF < 3 Then
        FoundShip = "F"
        FindHit
        If pShipF = 1 Then LookAround Else CheckHitDirection
        Exit Sub
    End If
    If pShipM > 0 And pShipM < 2 Then
        FoundShip = "M"
        FindHit
        LookAround
        Exit Sub
    End If
End Sub
    
Sub FindHit()
Attribute FindHit.VB_ProcData.VB_Invoke_Func = " \n14"
'Loop around then exit
    For n = 0 To 9
        For x = 0 To 9
            If Range("player1corner").Offset(n, x).Value = "x" Then
                If Range("player1board").Offset(n, x).Value = FoundShip Then
                    TempRange = Range("player1corner").Offset(n, x).Address
                    Exit Sub
                End If
            End If
        Next x
    Next n
End Sub
    
Sub LookAround()
Attribute LookAround.VB_ProcData.VB_Invoke_Func = " \n14"
'Look up
    If IsEmpty(Range(TempRange).Offset(-1, 0).Value) Then
        If Range(TempRange).Offset(-1, 0).Row >= Range("Player1Corner").Row Then
            If Range(TempRange).Offset(-1, 0).Row <= Range("Player1Corner").Row + 9 Then
                ComputerPosition = Range(TempRange).Offset(-1, 0).Address
                Exit Sub
            End If
        End If
    End If
'Look down
    If IsEmpty(Range(TempRange).Offset(1, 0).Value) Then
        If Range(TempRange).Offset(1, 0).Row >= Range("Player1Corner").Row Then
            If Range(TempRange).Offset(1, 0).Row <= Range("Player1Corner").Row + 9 Then
                ComputerPosition = Range(TempRange).Offset(1, 0).Address
                Exit Sub
            End If
        End If
    End If
'Look left
    If IsEmpty(Range(TempRange).Offset(0, -1).Value) Then
        If Range(TempRange).Offset(0, -1).Column >= Range("Player1Corner").Column Then
            If Range(TempRange).Offset(0, -1).Column <= Range("Player1Corner").Column + 9 Then
                ComputerPosition = Range(TempRange).Offset(0, -1).Address
                Exit Sub
            End If
        End If
    End If
'Look right
    If IsEmpty(Range(TempRange).Offset(0, 1).Value) Then
        If Range(TempRange).Offset(0, 1).Column >= Range("Player1Corner").Column Then
            If Range(TempRange).Offset(0, 1).Column <= Range("Player1Corner").Column + 9 Then
                ComputerPosition = Range(TempRange).Offset(0, 1).Address
                Exit Sub
            End If
        End If
    End If
    MsgBox "Couldn't find a square to look in!", vbCritical, "Shoot the programmer!"
End Sub

Sub CheckHitDirection()
Attribute CheckHitDirection.VB_ProcData.VB_Invoke_Func = " \n14"
'Loop around to find 2nd ship hit
    For n = 0 To 9
        For x = 0 To 9
            If Range("player1corner").Offset(n, x).Value = "x" Then
                If Range("player1board").Offset(n, x).Value = FoundShip Then
                    If Range("player1corner").Offset(n, x).Address <> TempRange Then
                        TempRange2 = Range("player1corner").Offset(n, x).Address
                    End If
                End If
            End If
        Next x
    Next n
'if the ship is horizontal...

    If Range(TempRange).Row = Range(TempRange2).Row Then
        For n = 1 To 4
'Look left
            If IsEmpty(Range(TempRange).Offset(0, -n).Value) Then
                If Range(TempRange).Offset(0, -n).Column >= Range("Player1Corner").Column Then
                    If Range(TempRange).Offset(0, -n).Column <= Range("Player1Corner").Column + 9 Then
                        If IsEmpty(Range(TempRange).Offset(0, -n).Value) Then
'if there are any checked squares that are not our ship between 1 and n then stop looking here
                            For x = 1 To n
                                If Range(TempRange).Offset(0, -x).Value = "x" And Range("player1board").Offset(-x, 0).Value <> FoundShip Then Exit For
                                ComputerPosition = Range(TempRange).Offset(0, -n).Address
                                Exit Sub
                            Next x
                        End If
                    End If
                End If
            End If
'Look right
            If IsEmpty(Range(TempRange).Offset(0, n).Value) Then
                If Range(TempRange).Offset(0, n).Column >= Range("Player1Corner").Column Then
                    If Range(TempRange).Offset(0, n).Column <= Range("Player1Corner").Column + 9 Then
                        If IsEmpty(Range(TempRange).Offset(0, n).Value) Then
                            ComputerPosition = Range(TempRange).Offset(0, n).Address
                        Exit Sub
                        End If
                    End If
                End If
            End If
        Next n
    Else
'Otherwise the ship must be vertical
'Look up
        For n = 1 To 4
            If IsEmpty(Range(TempRange).Offset(-n, 0).Value) Then
                If Range(TempRange).Offset(-n, 0).Row >= Range("Player1Corner").Row Then
                    If Range(TempRange).Offset(-n, 0).Row <= Range("Player1Corner").Row + 9 Then
                        If IsEmpty(Range(TempRange).Offset(-n, 0).Value) Then
'if there are any checked squares that are not our ship between 1 and n then stop looking here
                            For x = 1 To n
                                If Range(TempRange).Offset(-x, 0).Value = "x" And Range("player1board").Offset(-x, 0).Value <> FoundShip Then Exit For
                                ComputerPosition = Range(TempRange).Offset(-n, 0).Address
                                Exit Sub
                            Next x
                        End If
                    End If
                End If
            End If
'Look down
            If IsEmpty(Range(TempRange).Offset(n, 0).Value) Then
                If Range(TempRange).Offset(n, 0).Row >= Range("Player1Corner").Row Then
                    If Range(TempRange).Offset(n, 0).Row <= Range("Player1Corner").Row + 9 Then
                        If IsEmpty(Range(TempRange).Offset(n, 0).Value) Then
                            ComputerPosition = Range(TempRange).Offset(n, 0).Address
                            Exit Sub
                        End If
                    End If
                End If
            End If
        Next n
    End If
'    MsgBox "ship=" & FoundShip & ",range=" & TempRange & ", hits=" & pShipB
    MsgBox "Couldn't find a square to look in!", vbCritical, "Shoot the programmer!"
End Sub

Sub ChooseRandomPosition()
Attribute ChooseRandomPosition.VB_ProcData.VB_Invoke_Func = " \n14"
'First try to search alternate squares
    For n = 1 To 100
        Do
            Random1 = Int(Rnd() * 10) 'numbers between 0 and 9
            Random2 = Int(Rnd() * 10) 'numbers between 0 and 9
        Loop Until Random1 + Random2 = (Int(Random1 / 2) + Int(Random2 / 2)) * 2
        TempRange = Range("Player1Corner").Offset(Random1, Random2).Address
        If IsEmpty(Range(TempRange).Value) Then
            ComputerPosition = TempRange
            Exit Sub
        End If
    Next n

    Do
        Random1 = Int(Rnd() * 10) 'numbers between 0 and 9
        Random2 = Int(Rnd() * 10) 'numbers between 0 and 9
        TempRange = Range("Player1Corner").Offset(Random1, Random2).Address
    Loop Until IsEmpty(Range(TempRange).Value)
    ComputerPosition = TempRange
End Sub

Sub ShowHelp()
Attribute ShowHelp.VB_ProcData.VB_Invoke_Func = " \n14"
    Instructions.Show
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Cells.Count > 1 Then Exit Sub
    If ComputerHits = 17 Then Exit Sub
    If Player1Hits = 17 Then Exit Sub
    Range("Message2").Value = ""
    CurrentPosition = Target.Address
    If Range("Message").Value <> "Search your opponent's board" Then
        If Target.Row < Range("Player1").Row Then Exit Sub
        If Target.Row > Range("Player1").Row + 9 Then Exit Sub
        If Target.Column < Range("Player1").Column Then Exit Sub
        If Target.Column > Range("Player1").Column + 9 Then Exit Sub
        Application.StatusBar = False
        Select Case Range("Message").Value
            Case "Place the first square for your Aircraft Carrier (length=5)"
                ShipLength = 5
                CheckDirection
            Case "Place the first square for your Battleship (length=4)"
                ShipLength = 4
                CheckDirection
            Case "Place the first square for your Destroyer (length=3)"
                ShipLength = 3
                CheckDirection
            Case "Place the first square for your Frigate (length=3)"
                ShipLength = 3
                CheckDirection
            Case "Place the first square for your Minesweeper (length=2)"
                ShipLength = 2
                CheckDirection
        End Select
    Else
        If Target.Row < Range("Player2").Row Then Exit Sub
        If Target.Row > Range("Player2").Row + 9 Then Exit Sub
        If Target.Column < Range("Player2").Column Then Exit Sub
        If Target.Column > Range("Player2").Column + 9 Then Exit Sub
        If Target.Value <> "" Then Exit Sub
        CheckEnemy
        If ComputerHits = 17 Then
            Range("Message2").Value = ""
            Range("Message3").Value = ""
            MsgBox "You sunk the fleet!", vbExclamation, "You win!!!"
            Exit Sub
        Else
            ComputerTurn
            If Player1Hits = 17 Then
                Range("Message2").Value = ""
                Range("Message3").Value = ""
                MsgBox "Computer sunk your fleet!", vbExclamation, "You lose!!!"
                Exit Sub
            End If
        End If
    End If
End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
'Fit the game to the screen
    ActiveSheet.Unprotect
    Application.ScreenUpdating = False
    Range("WholeGame").Select
    ActiveWindow.Zoom = True
    [Battleships].Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    ActiveSheet.EnableSelection = xlUnlockedCells
    UserForm2.Show
End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{5A20BDB7-3371-4CA6-9F61-431CEAED9711}{7A0FB8C1-F63A-450E-8D22-9F503ABFC013}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub DirectionOK_Click()
    ShipDirection = "Bad"
    If DirectionUp.Value And DirectionUp.Enabled Then ShipDirection = "Up"
    If DirectionDown.Value And DirectionDown.Enabled Then ShipDirection = "Down"
    If DirectionLeft.Value And DirectionLeft.Enabled Then ShipDirection = "Left"
    If DirectionRight.Value And DirectionRight.Enabled Then ShipDirection = "Right"
    If ShipDirection <> "Bad" Then
        Me.Hide
    Else
        MsgBox "You must select a valid direction!", vbExclamation, "Layout ships"
    End If
End Sub

Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{0D0FC016-1D84-4750-ADEF-DA2530FCB0C6}{C45E1B6A-8710-4C9A-98CC-EDF2DA830C30}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    Me.Hide
End Sub


INQUEST-PP=macro
