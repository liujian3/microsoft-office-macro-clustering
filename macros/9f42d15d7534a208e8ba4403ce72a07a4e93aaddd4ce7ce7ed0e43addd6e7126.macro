Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Dim OpenFileName As String
    OpenFileName = Application.GetOpenFilename("Hex|fffd|t|fffd|@|fffd|C|fffd||fffd|,*.*")
    If OpenFileName <> "False" Then
        ActiveSheet.Range("SelPath") = OpenFileName
    End If
End Sub
Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{AFA0E209-3C6E-48C9-AE2B-4B1E530061AF}{F49661D5-0ED0-4F27-B245-643A4D70A943}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd|t|fffd||fffd||fffd|O
Public IsCancel As Boolean

Private Sub UserForm_Initialize()
    IsCancel = False
End Sub

'|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd|C|fffd|x|fffd||fffd||fffd|g
Private Sub ButtonCancel_Click()
    '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||fffd||752||fffd|
    IsCancel = True
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = vbFormControlMenu Then
        Cancel = True
        IsCancel = True
    End If
End Sub
Attribute VB_Name = "mod_HexFileViewer"
Option Explicit

Public Const exeSheet = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|w|fffd||fffd|E|fffd||fffd||fffd|s"  ' |fffd||68d||5c3|V|fffd|[|fffd|g
Public Const DetailSheet = "Detail"  ' |fffd||68d||5c3|V|fffd|[|fffd|g
Public Const SummaySheet = "Summary" ' |fffd|T|fffd|v|fffd|V|fffd|[|fffd|g

'|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||64ea||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|A|fffd||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|A|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||303|T|fffd|C|fffd|Y
Type segmentType
    startOfSegment As Currency
    endOfSegment As Currency
    zeroNum As Currency
End Type
Type errType
    line As Long
    str As String
    msg As String
End Type
Dim chkeckStrlengthAndCRC As Boolean
Dim outputDetailSheet As Boolean
Dim segmentList() As segmentType  '
Dim errList() As errType  '
Dim myVbaWorkBookName As String '|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd|VBA|fffd||303||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||fffd|
Dim errorLogON As Boolean '|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|(1|fffd|s|fffd||fffd|)
Dim errorLogON_total As Boolean '|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|(|fffd|S|fffd||fffd|)
Dim selTermEnable As Boolean
Dim startTime As Single '|fffd||fffd||fffd||50c|v|fffd||fffd||fffd|p(|fffd|J|fffd|n)
Dim finishTime As Single '|fffd||fffd||fffd||50c|v|fffd||fffd||fffd|p(|fffd|I|fffd||fffd|)
Dim totalLineOfHex As Currency
Dim errCnt As Currency '|fffd|G|fffd||fffd||fffd|[|fffd||310||fffd|. Summary|fffd|V|fffd|[|fffd|g|fffd||c42c||fffd||302||fffd||fffd||7c2||24e|g|fffd|p
Dim dtSheetClmAutoFitDone As Boolean '|fffd||68d||5c3|V|fffd|[|fffd|g|fffd||317||55742||312||fffd||fffd||fffd||fffd||fffd||fffd||3c2||fffd||142||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
Const proggressInitWidth = 225 '|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|o|fffd|[|fffd||30f||fffd||292|u
Const proggressInitLeft = 5 '|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|o|fffd|[|fffd||30d||fffd||fffd||292|u

'===============================================================
'
' Main
'
'===============================================================
Sub main_HexFileViewer()

    Dim Ws As Worksheet, flag As Boolean '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||74a|m|fffd|F|fffd|p
    Dim PathName As String, FileName As String '|fffd|p|fffd|X|fffd||fffd|, |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
    Dim fileFormat As String '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g
            
    chkeckStrlengthAndCRC = False
    dtSheetClmAutoFitDone = False
    If (ActiveSheet.CheckBoxes("checkbox_text_opt1").Value = 1) Then chkeckStrlengthAndCRC = True
    
    outputDetailSheet = False
    If (ActiveSheet.CheckBoxes("checkbox_text_opt2").Value = 1) Then outputDetailSheet = True
    
    selTermEnable = False
    If (ActiveSheet.CheckBoxes("checkbox_text_opt3").Value = 1) Then selTermEnable = True
    
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||fffd||fffd||64fe|
    PathName = ActiveSheet.Range("SelPath")
    FileName = Dir(PathName)
    myVbaWorkBookName = ThisWorkbook.Name
        
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311||fffd||fffd||742||fffd||fffd|m|fffd|F
    If Dir(PathName) = "" Then
        MsgBox "|fffd|w|fffd||80b3||fffd||a0bd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||351||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|"
        End
    End If
    
    totalLineOfHex = fnc_getTotalLine(PathName)
    
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||314||fffd||fffd||fffd|
    Open PathName For Input Access Read As #1
    Line Input #1, fileFormat
    fileFormat = Left(fileFormat, 1)
    Close #1
    
    If Not ((fileFormat = ":") Or (fileFormat = "S") Or (fileFormat = "s")) Then
        '1|fffd|s|fffd||682||fffd|1|fffd||fffd||fffd||fffd||fffd||682||fffd|":"|fffd||142||fffd|"S"|fffd||142||fffd||fffd||202||fffd||fffd||a347|
        MsgBox ("[ERROR]Unknown File Format[ " & fileFormat & " ]")
        End
    End If
    
    startTime = Timer ' |fffd|J|fffd|n|fffd||fffd||fffd||502||fffd||fffd|L|fffd|^
    
    '|fffd|A|fffd|C|fffd|R|fffd||fffd||fffd||fffd||48b|@|fffd||fffd||fffd||24c||152||fffd|
    Application.Cursor = xlWait
    UserForm1.Show vbModeless

    '-----------------------------------
    ' Detail|fffd|V|fffd|[|fffd|g|fffd||1c9||fffd|
    '-----------------------------------
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||348||fffd|U|fffd||fffd||fffd||fffd|
    flag = False
    For Each Ws In Worksheets
        DoEvents
        If Ws.Name = DetailSheet Then flag = True
    Next Ws
    If flag = True Then
        Application.DisplayAlerts = False
        ThisWorkbook.Sheets(DetailSheet).Delete
        Application.DisplayAlerts = True
    End If
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||1c9||fffd|
    Workbooks(myVbaWorkBookName).Worksheets.Add(After:=Worksheets(Worksheets.Count)).Name = DetailSheet
    
    '|fffd|g|fffd||30c||152||fffd|
    ActiveWindow.SplitColumn = 0
    ActiveWindow.SplitRow = 1
    ActiveWindow.FreezePanes = True
    
    '|fffd|\|fffd||30f||fffd||fffd||fffd||fffd||fffd||3cd|X
    Cells.Select
    Selection.NumberFormat = "@" ' |fffd|V|fffd|[|fffd|g|fffd|S|fffd||302||30f||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|v
    Selection.Font.Name = "MS Gothic" '|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|uMS|fffd|S|fffd|V|fffd|b|fffd|N|fffd|v|fffd||250||752||fffd|
    Cells(1, 1).Select
    ActiveWindow.Zoom = 85
    
    '-----------------------------------
    ' Summary|fffd|V|fffd|[|fffd|g|fffd||1c9||fffd|
    '-----------------------------------
    '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||348||fffd|U|fffd||fffd||fffd||fffd|
    flag = False
    For Each Ws In Worksheets
        DoEvents
        If Ws.Name = SummaySheet Then flag = True
    Next Ws
    If flag = True Then
        Application.DisplayAlerts = False
        ThisWorkbook.Sheets(SummaySheet).Delete
        Application.DisplayAlerts = True
    End If
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||1c9||fffd|
    Workbooks(myVbaWorkBookName).Worksheets.Add(After:=Worksheets(Worksheets.Count)).Name = SummaySheet
    
    '|fffd|\|fffd||30f||fffd||fffd||fffd||fffd||fffd||3cd|X
    Cells.Select
    Selection.NumberFormat = "@" ' |fffd|V|fffd|[|fffd|g|fffd|S|fffd||302||30f||fffd||fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd||fffd||fffd||fffd|v
    Selection.Font.Name = "MS Gothic" '|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd|uMS|fffd|S|fffd|V|fffd|b|fffd|N|fffd|v|fffd||250||752||fffd|
    Cells(1, 1).Select
    ActiveWindow.Zoom = 85
    
    Application.ScreenUpdating = False  '|fffd||fffd||28d|X|fffd|V|fffd|}|fffd|~
    
    '-----------------------------------
    ' |fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||fffd||fffd||182||30f||fffd||fffd||fffd|
    '-----------------------------------
    If (fileFormat = ":") Then
        'Intel Format
        Call sub_analysis_intel(PathName, FileName)
    Else
        'Motola Format
        Call sub_analysis_s19(PathName, FileName)
    End If
    
    '-----------------------------------
    ' |fffd||33c8||fffd||fffd|
    '-----------------------------------
    If (outputDetailSheet = False) Then
        '-----------------------------------
        ' Detail|fffd|V|fffd|[|fffd|g|fffd||d3dc|
        '-----------------------------------
        '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||348||fffd|U|fffd||fffd||fffd||fffd|
        flag = False
        For Each Ws In Worksheets
            DoEvents
            If Ws.Name = DetailSheet Then flag = True
        Next Ws
        If flag = True Then
            Application.DisplayAlerts = False
            ThisWorkbook.Sheets(DetailSheet).Delete
            Application.DisplayAlerts = True
        End If
    End If
    
    Dim timeVal As Double
    
    Unload UserForm1 '|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|o|fffd|[Form|fffd||fffd||82||fffd||fffd||fffd|
    Application.Cursor = xlDefault '|fffd|}|fffd|E|fffd|X|fffd|J|fffd|[|fffd|\|fffd||fffd||fffd||fffd||fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||256||7c2||fffd|
    Application.ScreenUpdating = True  '|fffd||fffd||282||fffd||fffd|X|fffd|V
    finishTime = Timer '|fffd|I|fffd||fffd||fffd||fffd||fffd||502||30e||64fe|
    timeVal = Int((finishTime - startTime) * 100) / 100

    If (errorLogON_total = True) Then
        MsgBox ("|fffd||fffd||342||fffd||fffd|I|fffd||fffd||fffd||702||fffd||fffd||fffd|" & vbNewLine & _
        "[ERROR]|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|BDetail|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbNewLine & _
        "|fffd||fffd||fffd|s|fffd||fffd||fffd||501|F" & timeVal & "|fffd|b")
    Else
        MsgBox ("|fffd||fffd||342||fffd||fffd|I|fffd||fffd||fffd||702||fffd||fffd||fffd|" & vbNewLine & _
        "|fffd||fffd||fffd|s|fffd||fffd||fffd||501|F" & timeVal & "|fffd|b")
    End If


End Sub

'===============================================================
'
' Sub
'
'===============================================================
'zeroNum|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||242||202||fffd||60a4||fffd||243|[|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||fffd|
Function fnc_zeroPadding(str As String, zeroNum As Currency)
    Dim strLen As Currency
    Dim loopCnt As Currency
    Dim addZeroNum As Currency
    addZeroNum = zeroNum - Len(str)
    For loopCnt = 1 To addZeroNum
        str = "0" & str
    Next
    str = Right(str, 8) '|fffd||fffd||fffd||fffd||fffd||182||202||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||311||38d||fffd||182||fffd||fffd||fffd|32bit|fffd||fffd||fffd||fffd||303|r|fffd|b|fffd|g|fffd||fffd||fffd||202||fffd||fffd||fffd|
    fnc_zeroPadding = str
End Function

''|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
'Sub sub_activeAppeal(cntRow As Currency, totalLineOfHex As Currency)
'    UserForm1.Label1.Caption = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||352||fffd||fffd||142||fffd|" & vbNewLine & "( " & cntRow & " / " & totalLineOfHex & " )"
'End Sub


'S19|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd|p|fffd||fffd||fffd||fffd|
Public Sub sub_analysis_s19(PathName As String, FileName As String)
    Dim loopCnt As Currency 'For-Loop|fffd|p
    Dim loopEnd As Currency
    Dim num As Currency ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim lineStr As String ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|1|fffd|s|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim cntRow As Currency ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||30d|s|fffd||50d||fffd|
    Dim cntClm As Currency ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||317||fffd||50d||fffd|
    Dim segmentCnt As Currency '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||fffd|. Summary|fffd|V|fffd|[|fffd|g|fffd||c42c||fffd||302||fffd||fffd||7c2||24e|g|fffd|p
    Dim lastAdrNum As Currency '|fffd|O|fffd||fffd||30d|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    Erase segmentList
    Erase errList
    segmentCnt = 0
    errCnt = 0
    ReDim Preserve segmentList(segmentCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
    ReDim Preserve errList(errCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
    lastAdrNum = -1 '|fffd|O|fffd||fffd||30d|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X
    errorLogON = False
    errorLogON_total = False
    '-----------------------------------
    ' Hex|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    '-----------------------------------
    num = FreeFile
    Open PathName For Input Access Read As num
            
    cntRow = 1
    If (outputDetailSheet = True) Then
        With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
            .Cells(cntRow, 1).Value = "Type "
            .Cells(cntRow, 2).Value = "Cnt "
            .Cells(cntRow, 3).Value = "Address "
            .Cells(cntRow, 4).Value = "Data "
            .Cells(cntRow, 5).Value = "ChkSum "
            
            .Cells(cntRow, 7).Value = "Address "
            .Cells(cntRow, 10).Value = "START/END "
            .Cells(cntRow, 11).Value = "Log "
            
            '-----------------------------------
            ' |fffd||fffd||fffd||fffd||fffd||10b82||fffd||fffd||fffd|
            '-----------------------------------
            '|fffd||fffd||fffd||6c2||30b|L|fffd||fffd|
            For loopCnt = 1 To 5
                .Cells(cntRow, loopCnt).Interior.Color = RGB(183, 222, 232)
            Next
            
            '|fffd||fffd||34c||fffd||fffd||fffd|
            For loopCnt = 7 To 11
                .Cells(cntRow, loopCnt).Interior.Color = RGB(252, 213, 180)
            Next
            
            '|fffd|r|fffd||fffd|
            For loopCnt = 1 To 11
                .Cells(cntRow, loopCnt).Borders(xlEdgeBottom).LineStyle = xlDouble
            Next
            .Columns(1).Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Columns(5).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Columns(6).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Columns(9).Borders(xlEdgeRight).LineStyle = xlDot
            .Columns(10).Borders(xlEdgeRight).LineStyle = xlDot
            .Columns(11).Borders(xlEdgeRight).LineStyle = xlContinuous
                
            '|fffd|\|fffd||30f||fffd||fffd||fffd||fffd||fffd||3cd|X
            '.Cells(1, 1).Select
        
            '|fffd||fffd||315||fffd|
            .Columns(6).ColumnWidth = 2
            .Columns("K").ColumnWidth = 50
        
        End With
    End If

    '-----------------------------------
    '|fffd|@|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74f|o|fffd||fffd||fffd|A|fffd|Z|fffd||fffd||fffd||24b|L|fffd||fffd|
    '-----------------------------------
    Dim terminateRow As Currency 'END|fffd||fffd||fffd|o|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7c2||315||3d0||fffd|
    Dim startFlag As Boolean 'byteData|fffd||fffd||fffd||c2f82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|START|fffd||242||202||fffd||60a4||fffd||242||fffd||fffd||90bd||fffd||7c2||303|t|fffd||fffd||fffd|O
    Dim recordType As String '[Format]|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^|fffd|C|fffd|v
    Dim byteCount As String '[Format]|fffd|o|fffd|C|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
    Dim dataArea As String '[Format]|fffd|f|fffd|[|fffd|^|fffd||308||fffd|
    Dim CheckSum As String '[Format]|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
    Dim byteAddress_hex As String '1|fffd|s|fffd||30d||14f||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X[HEX]
    Dim dataPlusChksum As String '[Format]|fffd|f|fffd|[|fffd|^|fffd||183|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
    Dim logComment As String '|fffd|R|fffd||fffd||fffd||fffd||fffd|g
    
    cntRow = cntRow + 1
    terminateRow = 1
    startFlag = False
    Do Until EOF(num)
        logComment = ""
        
        DoEvents '|fffd||fffd||fffd||303|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||582||315||fffd||fffd||5c2||fffd||fffd||fffd||fffd||70b7||fffd||fffd||fffd||7c2||311||482||fffd|
        Line Input #num, lineStr '|fffd||fffd|s|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd|linStr|fffd||251||fffd||fffd|
        
        '-----------------------------------
        ' |fffd|e|fffd|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd||30e||64fe|
        '-----------------------------------
        recordType = Left(lineStr, 2) '|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^|fffd|C|fffd|v
        recordType = UCase(recordType) '|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^|fffd|C|fffd|v|fffd||fffd||5576||fffd||fffd||fffd||253||fffd||fffd||fffd|
        byteCount = Right(Left(lineStr, 4), 2) '|fffd|o|fffd|C|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
        CheckSum = Right(lineStr, 2) '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
                
        '|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||fffd||fffd||183|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
        Select Case recordType
            Case "S0"
                byteAddress_hex = Right(Left(lineStr, 8), 4)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 8)
            Case "S1"
                byteAddress_hex = Right(Left(lineStr, 8), 4)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 8)
            Case "S2"
                byteAddress_hex = Right(Left(lineStr, 10), 6)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 10)
            Case "S3"
                byteAddress_hex = Right(Left(lineStr, 12), 8)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 12)
'           Case "S4"
            Case "S5"
                byteAddress_hex = 0
                dataPlusChksum = Right(lineStr, Len(lineStr) - 4)
            Case "S6"
                byteAddress_hex = 0
                dataPlusChksum = Right(lineStr, Len(lineStr) - 4)
            Case "S7"
                byteAddress_hex = Right(Left(lineStr, 12), 8)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 12)
            Case "S8"
                byteAddress_hex = Right(Left(lineStr, 10), 6)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 10)
            Case "S9"
                byteAddress_hex = Right(Left(lineStr, 8), 4)
                dataPlusChksum = Right(lineStr, Len(lineStr) - 8)
            Case Else
                logComment = "[ERROR]UNKOWN_FORMAT"
                errorLogON = True
        End Select
        
        dataArea = Left(dataPlusChksum, Len(dataPlusChksum) - 2) '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc|
                
        If (outputDetailSheet = True) Then
            '|fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
                .Cells(cntRow, 1).Value = recordType
                .Cells(cntRow, 2).Value = byteCount
                .Cells(cntRow, 4).Value = dataArea
                .Cells(cntRow, 5).Value = CheckSum
                If ((recordType = "S5") Or (recordType = "S6")) Then
                    .Cells(cntRow, 3).Value = "-"
                Else
                    .Cells(cntRow, 3).Value = byteAddress_hex
                End If
            
            End With
        End If
        '-----------------------------------
        ' 1|fffd|s|fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||348||342||fffd||fffd||64fe|
        '-----------------------------------
        Dim endAdr_dec As Currency '1|fffd|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X[HEX]
        Dim endAdr_hex As String '1|fffd|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X[DEC]
        Dim byteAddress_dec As Currency '1|fffd|s|fffd||30d||14f||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X[DEC]
        Dim zeroNum As Currency '|fffd|[|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||9414|
        
        byteAddress_dec = "&H" & byteAddress_hex
        If (dataArea <> "") Then
            endAdr_dec = byteAddress_dec + Len(dataArea) / 2 - 1
        Else
            endAdr_dec = byteAddress_dec
        End If
        endAdr_hex = HexLocal(endAdr_dec)
        
        '|fffd|s|fffd||30d||14f|I|fffd|f|fffd|[|fffd|^|fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||30f||fffd||fffd||fffd||fffd||24d||fffd||fffd||d0b9||fffd||103|[|fffd||fffd||fffd||fffd||fffd||fffd|
        endAdr_hex = fnc_zeroPadding(endAdr_hex, Len(byteAddress_hex))
        
        '-----------------------------------
        ' |fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||64ea||fffd||18d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||64fe|
        '-----------------------------------
        With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
            If (recordType = "S0") Then 'Hex|fffd||308||fffd||510||64ea||fffd||303|A|fffd|h|fffd||fffd||fffd|X
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 10).Value = "(Start of file)"
                End If
            ElseIf (dataArea = "") Then
                If ((recordType = "S7") Or (recordType = "S8") Or (recordType = "S9")) Then
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 10).Value = "(Terminate)"
                    End If
                Else
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 10).Value = "(Count of S1-3)"
                    End If
                End If
                If (selTermEnable = True) Then
                    segmentList(segmentCnt).endOfSegment = lastAdrNum
                    startFlag = True
                    If (outputDetailSheet = True) Then
                        .Cells(terminateRow, 10).Value = "END"
                    End If
                End If
            Else
                If (recordType = "S5") Then
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 10).Value = "(16bit Count)"
                    End If
                ElseIf (recordType = "S6") Then
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 10).Value = "(24bit Count)"
                    End If
                Else
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 7).Value = byteAddress_hex
                        .Cells(cntRow, 8).Value = "-"
                        .Cells(cntRow, 9).Value = endAdr_hex
                    End If
                    If (lastAdrNum <> -1) Then
                        If ((byteAddress_dec <> lastAdrNum + 1) Or (startFlag = True)) Then
                            If (outputDetailSheet = True) Then
                                If (.Cells(terminateRow, 10).Value = "START") Then
                                    .Cells(terminateRow, 10).Value = "START-END"
                                Else
                                    .Cells(terminateRow, 10).Value = "END"
                                End If
                                .Cells(cntRow, 10).Value = "START"
                            End If
                            
                            segmentList(segmentCnt).endOfSegment = lastAdrNum
                            segmentCnt = segmentCnt + 1
                            ReDim Preserve segmentList(segmentCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
                            segmentList(segmentCnt).startOfSegment = byteAddress_dec
                            segmentList(segmentCnt).zeroNum = Len(byteAddress_hex)
                            startFlag = False
                        End If
                    Else
                        'Hex|fffd||308||fffd||50d||14f||fffd||fffd||303|A|fffd|h|fffd||fffd||fffd|X
                        If (outputDetailSheet = True) Then
                            .Cells(cntRow, 10).Value = "START"
                        End If
                        segmentList(segmentCnt).startOfSegment = byteAddress_dec
                        segmentList(segmentCnt).zeroNum = Len(byteAddress_hex)
                    End If
                    
                    If (outputDetailSheet = True) Then
                        terminateRow = .Cells(cntRow, 1).Row
                    End If
                    lastAdrNum = endAdr_dec
                End If
            End If
            
            If (chkeckStrlengthAndCRC = True) Then
                '-----------------------------------
                '|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                '-----------------------------------
                Dim byteCount_dec As Currency
                Dim calDataLeng
                Dim diffCnt As Currency
                Dim calDataLength
                
                calDataLength = (Len(lineStr) / 2 - 2)
                byteCount_dec = "&H" & byteCount
                If (calDataLength <> byteCount_dec) Then
                    diffCnt = calDataLength - byteCount_dec
                    If (diffCnt > 0) Then
                        logComment = "[ERROR]Data|fffd||fffd||fffd||fffd|" & diffCnt & "Byte|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B"
                    Else
                        logComment = "[ERROR]Data|fffd||fffd||fffd||fffd|" & (diffCnt * (-1)) & "Byte|fffd||fffd||fffd||202||fffd||fffd||142||fffd||fffd|B"
                    End If
                    errorLogON = True
                End If
                
                '-----------------------------------
                '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                '-----------------------------------
                If ((recordType = "S5") Or (recordType = "S6")) Then
                    logComment = fnc_calChkSum("S19", byteCount & dataArea, CheckSum, logComment)
                Else
                    logComment = fnc_calChkSum("S19", byteCount & byteAddress_hex & dataArea, CheckSum, logComment)
                End If
            End If
            
            
            '|fffd||fffd||fffd|O|fffd||30b|L|fffd||fffd|
            If (outputDetailSheet = True) Then
                .Cells(cntRow, 11).Value = logComment
            End If
            If (errorLogON = True) Then
                If (outputDetailSheet = True) Then
                    .Rows(cntRow).Font.ColorIndex = 3
                End If
                
                ReDim Preserve errList(errCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
                errList(errCnt).line = cntRow
                errList(errCnt).str = lineStr
                errList(errCnt).msg = logComment
                errCnt = errCnt + 1
                
                errorLogON_total = True
                errorLogON = False
            End If
            
            cntRow = cntRow + 1
            
            If (dtSheetClmAutoFitDone = False) And (cntRow > 100) And (outputDetailSheet = True) Then
                dtSheetClmAutoFitDone = True
                .Columns("A:L").AutoFit
            End If
            '|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|X|fffd|V
            If ((cntRow Mod 500) = 1) Then
                Call setProgress((cntRow - 1), totalLineOfHex, "|fffd||fffd||342||fffd||fffd||102||fffd||fffd||702||fffd|")
            End If
            
        End With
    Loop
    
    If (outputDetailSheet = True) Then
        With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
            '|fffd||14f|I|fffd|s|fffd||fffd||fffd|uterminate|fffd|v|fffd||142||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
            If (segmentList(segmentCnt).endOfSegment = 0) Then
                segmentList(segmentCnt).endOfSegment = lastAdrNum
                .Cells(terminateRow, 10).Value = "END"
            End If
            If (dtSheetClmAutoFitDone = False) Then
                .Columns("A:L").AutoFit '|fffd||55742||12c90||fffd|
            End If
            
            .Columns("G:I").HorizontalAlignment = xlRight
            .Range("G1").HorizontalAlignment = xlLeft
            .Rows("1").AutoFilter
        End With
    Else
       '|fffd||14f|I|fffd|s|fffd||fffd||fffd|uterminate|fffd|v|fffd||142||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        If (segmentList(segmentCnt).endOfSegment = 0) Then
            segmentList(segmentCnt).endOfSegment = lastAdrNum
        End If
    End If

    '-----------------------------------
    ' Summary|fffd|V|fffd|[|fffd|g
    '-----------------------------------
    Call sub_make_summary(PathName, segmentCnt, "S19")
    Call setProgress(1, 1, "")
        
    Close num '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
End Sub


'Intel|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd|p|fffd||fffd||fffd||fffd|
Public Sub sub_analysis_intel(PathName As String, FileName As String)
    Dim loopCnt As Currency 'For-Loop|fffd|p
    Dim loopEnd As Currency 'Loop|fffd||fffd|
    Dim num As Currency ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim lineStr As String ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|1|fffd|s|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
    Dim cntRow As Currency ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||30d|s|fffd||50d||fffd|
    Dim cntClm As Currency ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||317||fffd||50d||fffd|
    Dim segmentCnt As Currency '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||fffd|. Summary|fffd|V|fffd|[|fffd|g|fffd||c42c||fffd||302||fffd||fffd||7c2||24e|g|fffd|p
    Dim lastAdrNum As Currency '|fffd|O|fffd||fffd||30d|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    Erase segmentList
    Erase errList
    segmentCnt = 0
    errCnt = 0
    ReDim Preserve segmentList(segmentCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
    ReDim Preserve errList(errCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
    lastAdrNum = -1 '|fffd|O|fffd||fffd||30d|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X
    errorLogON = False
    errorLogON_total = False
    '-----------------------------------
    ' Hex|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    '-----------------------------------
    num = FreeFile
    Open PathName For Input Access Read As num
            
    cntRow = 1
    If (outputDetailSheet = True) Then
        With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
            .Cells(cntRow, 1).Value = "-"
            .Cells(cntRow, 2).Value = "Cnt "
            .Cells(cntRow, 3).Value = "Address "
            .Cells(cntRow, 4).Value = "Type "
            .Cells(cntRow, 5).Value = "Data "
            .Cells(cntRow, 6).Value = "ChkSum "
            
            .Cells(cntRow, 8).Value = "Address "
            .Cells(cntRow, 11).Value = "START/END "
            .Cells(cntRow, 12).Value = "Message "
            
            '-----------------------------------
            ' |fffd||fffd||fffd||fffd||fffd||10b82||fffd||fffd||fffd|
            '-----------------------------------
            '|fffd||fffd||fffd||6c2||30b|L|fffd||fffd|
            For loopCnt = 1 To 6
                .Cells(cntRow, loopCnt).Interior.Color = RGB(183, 222, 232)
            Next
            
            '|fffd||fffd||34c||fffd||fffd||fffd|
            For loopCnt = 8 To 12
                .Cells(cntRow, loopCnt).Interior.Color = RGB(252, 213, 180)
            Next
            
            '|fffd|r|fffd||fffd|
            For loopCnt = 1 To 12
                .Cells(cntRow, loopCnt).Borders(xlEdgeBottom).LineStyle = xlDouble
            Next
            .Columns(1).Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Columns(6).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Columns(7).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Columns(10).Borders(xlEdgeRight).LineStyle = xlDot
            .Columns(11).Borders(xlEdgeRight).LineStyle = xlDot
            .Columns(12).Borders(xlEdgeRight).LineStyle = xlContinuous
                
            '|fffd|\|fffd||30f||fffd||fffd||fffd||fffd||fffd||3cd|X
            '.Cells(1, 1).Select
        
            '|fffd||fffd||315||fffd|
            .Columns(7).ColumnWidth = 2
            .Columns("L").ColumnWidth = 50
        
        End With
    End If

    '-----------------------------------
    '|fffd|@|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74f|o|fffd||fffd||fffd|A|fffd|Z|fffd||fffd||fffd||24b|L|fffd||fffd|
    '-----------------------------------
    Dim terminateRow As Currency 'END|fffd||fffd||fffd|o|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7c2||315||3d0||fffd|
    Dim startFlag As Boolean 'byteData|fffd||fffd||fffd||c2f82||fffd||fffd||fffd||fffd||fffd||fffd||fffd|START|fffd||242||202||fffd||60a4||fffd||242||fffd||fffd||90bd||fffd||7c2||303|t|fffd||fffd||fffd|O
    Dim extendedLinearAdr_dec As Currency '|fffd|g|fffd||fffd||fffd||fffd||fffd|j|fffd|A|fffd|A|fffd|h|fffd||fffd||fffd|X
    Dim extendedSegmetAdr_dec As Currency '|fffd|g|fffd||fffd||fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd|A|fffd|h|fffd||fffd||fffd|X
    
    Dim startCode As String '[Format]|fffd|X|fffd|^|fffd|[|fffd|g|fffd|R|fffd|[|fffd|h
    Dim byteCount As String '[Format]|fffd|o|fffd|C|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
    Dim recordType As String '[Format]|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^|fffd|C|fffd|v
    Dim dataArea As String '[Format]|fffd|f|fffd|[|fffd|^|fffd||308||fffd|
    Dim CheckSum As String '[Format]|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
    Dim byteAddress_hex As String '1|fffd|s|fffd||30d||14f||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X[HEX]
    Dim strForCRC As String 'CRC|fffd|v|fffd|Z|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim byteAddress_dec As Currency '1|fffd|s|fffd||30d||14f||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X[DEC]
    Dim dataPlusChksum As String '|fffd|f|fffd|[|fffd|^|fffd||183|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
    Dim logComment As String '|fffd|R|fffd||fffd||fffd||fffd||fffd|g
    
    cntRow = cntRow + 1
    terminateRow = 1
    startFlag = False
    extendedLinearAdr_dec = 0
    extendedSegmetAdr_dec = 0
    Do Until EOF(num)
        DoEvents '|fffd||fffd||fffd||303|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||582||315||fffd||fffd||5c2||fffd||fffd||fffd||fffd||70b7||fffd||fffd||fffd||7c2||311||482||fffd|
        Line Input #num, lineStr '|fffd||fffd|s|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd|linStr|fffd||251||fffd||fffd|
        logComment = ""
        '-----------------------------------
        ' |fffd|e|fffd|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd||30e||64fe|
        '-----------------------------------
        Dim Len_lineStr As Integer
        Len_lineStr = Len(lineStr)
        startCode = Left(lineStr, 1) '|fffd|X|fffd|^|fffd|[|fffd|g|fffd|R|fffd|[|fffd|h
        byteCount = Right(Left(lineStr, 3), 2) '|fffd|o|fffd|C|fffd|g|fffd|J|fffd|E|fffd||fffd||fffd|g
        byteAddress_hex = Right(Left(lineStr, 7), 4)
        recordType = Right(Left(lineStr, 9), 2) '|fffd|^|fffd|C|fffd|v
        CheckSum = Right(lineStr, 2) '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd|
        dataPlusChksum = Right(lineStr, Len_lineStr - 9) '
        dataArea = Left(dataPlusChksum, Len(dataPlusChksum) - 2) '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc|
                      
        '|fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If (outputDetailSheet = True) Then
            With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
                .Cells(cntRow, 1).Value = startCode
                .Cells(cntRow, 2).Value = byteCount
                .Cells(cntRow, 3).Value = byteAddress_hex
                .Cells(cntRow, 4).Value = recordType
                .Cells(cntRow, 5).Value = dataArea
                .Cells(cntRow, 6).Value = CheckSum
                .Cells(cntRow, 7).Value = logComment
            End With
        End If
             
        '-----------------------------------
        '|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||fffd||fffd||64fe|
        '-----------------------------------
        ' 00 - data record
        ' 01 - end-of-file record
        ' 02 - extended segment address record
        ' 04 - extended linear address record
        ' 05 - start linear address record
        Select Case recordType
            Case "00" ' data record
                byteAddress_dec = (extendedLinearAdr_dec * "&H10000") + ("&H" & byteAddress_hex) + (extendedSegmetAdr_dec * 16)
            Case "01" 'end-of-file record
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            Case "02" 'extended segment address record
                extendedSegmetAdr_dec = "&H" & dataArea
            Case "03"
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            Case "04" 'extended linear address record
                extendedLinearAdr_dec = "&H" & dataArea
            Case "05" 'start linear address record
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            Case Else
                logComment = "[ERROR]UNKOWN_FORMAT"
                errorLogON = True
        End Select
        
        byteAddress_hex = HexLocal(byteAddress_dec)
        byteAddress_hex = fnc_zeroPadding(byteAddress_hex, 4)
        
        '-----------------------------------
        ' 1|fffd|s|fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||348||342||fffd||fffd||64fe|
        '-----------------------------------
        Dim endAdr_dec As Currency '1|fffd|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X[DEC]
        Dim endAdr_hex As String '1|fffd|s|fffd||30d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X[HEX]
        Dim zeroNum As Currency '|fffd|[|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||9414|
        
        'byteAddress_dec = "&H" & byteAddress_hex
        If (dataArea <> "") Then
            endAdr_dec = byteAddress_dec + Len(dataArea) / 2 - 1
        Else
            endAdr_dec = byteAddress_dec
        End If
        endAdr_hex = HexLocal(endAdr_dec)
        
        '|fffd|s|fffd||30d||14f|I|fffd|f|fffd|[|fffd|^|fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||30f||fffd||fffd||fffd||fffd||24d||fffd||fffd||d0b9||fffd||103|[|fffd||fffd||fffd||fffd||fffd||fffd|
        endAdr_hex = fnc_zeroPadding(endAdr_hex, Len(byteAddress_hex))
        
        '-----------------------------------
        ' |fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||64ea||fffd||18d||14f|I|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||64fe|
        '-----------------------------------
        With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
            If (recordType = "01") Then
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 11).Value = "(end-of-file record)"
                    .Cells(terminateRow, 11).Value = "END"
                End If
                segmentList(segmentCnt).endOfSegment = lastAdrNum
                startFlag = True
            ElseIf (recordType = "02") Then 'extended segment address record
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 11).Value = "(extended segment address=0x" & dataArea & ")"
                End If
                If (selTermEnable = True) Then
                    segmentList(segmentCnt).endOfSegment = lastAdrNum
                    startFlag = True
                    If (outputDetailSheet = True) Then
                        .Cells(terminateRow, 11).Value = "END"
                    End If
                End If
            ElseIf (recordType = "03") Then
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 11).Value = "(start segment address.CS=0x" & Left(dataArea, 4) & ",IP=0x" & Right(dataArea, 4) & ")"
                End If
            ElseIf (recordType = "04") Then 'extended linear address record
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 11).Value = "(extended linear address=0x" & dataArea & ")"
                End If
                If (selTermEnable = True) Then
                    segmentList(segmentCnt).endOfSegment = lastAdrNum
                    startFlag = True
                    If (outputDetailSheet = True) Then
                        .Cells(terminateRow, 11).Value = "END"
                    End If
                End If
            ElseIf (recordType = "05") Then
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 11).Value = "(start linear address record)"
                End If
            ElseIf (recordType = "00") Then
                If (outputDetailSheet = True) Then
                    .Cells(cntRow, 8).Value = byteAddress_hex
                    .Cells(cntRow, 9).Value = "-"
                    .Cells(cntRow, 10).Value = endAdr_hex
                End If

                If (lastAdrNum <> -1) Then
                    If ((byteAddress_dec <> lastAdrNum + 1) Or (startFlag = True)) Then
                        If (outputDetailSheet = True) Then
                            If (.Cells(terminateRow, 11).Value = "START") Then
                                .Cells(terminateRow, 11).Value = "START-END"
                            Else
                                .Cells(terminateRow, 11).Value = "END"
                            End If
                            .Cells(cntRow, 11).Value = "START"
                        End If

                        segmentList(segmentCnt).endOfSegment = lastAdrNum
                        segmentCnt = segmentCnt + 1
                        ReDim Preserve segmentList(segmentCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
                        segmentList(segmentCnt).startOfSegment = byteAddress_dec
                        segmentList(segmentCnt).zeroNum = Len(byteAddress_hex)
                        startFlag = False
                    End If
                Else
                    'Hex|fffd||308||fffd||50d||14f||fffd||fffd||303|A|fffd|h|fffd||fffd||fffd|X
                    If (outputDetailSheet = True) Then
                        .Cells(cntRow, 11).Value = "START"
                    End If
                    segmentList(segmentCnt).startOfSegment = byteAddress_dec
                    segmentList(segmentCnt).zeroNum = Len(byteAddress_hex)
                End If
                If (outputDetailSheet = True) Then
                    terminateRow = .Cells(cntRow, 1).Row
                End If
                lastAdrNum = endAdr_dec
            End If

            If (chkeckStrlengthAndCRC = True) Then
                '-----------------------------------
                '|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                '-----------------------------------
                logComment = fnc_chkLength(recordType & dataPlusChksum, byteCount, logComment)
            
                '-----------------------------------
                '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                '-----------------------------------
                strForCRC = Left(lineStr, Len_lineStr - 2)
                strForCRC = Right(strForCRC, Len_lineStr - 3)
                logComment = fnc_calChkSum("INTEL", strForCRC, CheckSum, logComment)
            End If

            '|fffd||fffd||fffd|O|fffd||30b|L|fffd||fffd|
            If (outputDetailSheet = True) Then
                Workbooks(myVbaWorkBookName).Worksheets(DetailSheet).Cells(cntRow, 12).Value = logComment
            End If
            If (errorLogON = True) Then
                If (outputDetailSheet = True) Then
                    .Rows(cntRow).Font.ColorIndex = 3
                End If
                
                ReDim Preserve errList(errCnt + 1) '|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`(1|fffd||fffd||fffd|Z)
                errList(errCnt).line = cntRow
                errList(errCnt).str = lineStr
                errList(errCnt).msg = logComment
                errCnt = errCnt + 1
                
                errorLogON_total = True
                errorLogON = False
            End If

            cntRow = cntRow + 1
            If (dtSheetClmAutoFitDone = False) And (cntRow > 100) And (outputDetailSheet = True) Then
                dtSheetClmAutoFitDone = True
                .Columns("A:L").AutoFit '|fffd||55742||12c90||fffd|
            End If
            '|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|X|fffd|V
            If ((cntRow Mod 500) = 1) Then
                Call setProgress((cntRow - 1), totalLineOfHex, "|fffd||fffd||342||fffd||fffd||102||fffd||fffd||702||fffd|")
            End If
        End With
    Loop
    
    With Workbooks(myVbaWorkBookName).Worksheets(DetailSheet)
        '|fffd||14f|I|fffd|s|fffd||fffd||fffd|urecordType = "01"|fffd|v|fffd||142||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        If (segmentList(segmentCnt).endOfSegment = 0) Then
            segmentList(segmentCnt).endOfSegment = lastAdrNum
            If (outputDetailSheet = True) Then
                .Cells(terminateRow, 11).Value = "END"
            End If
        End If
    
        If (outputDetailSheet = True) Then
            If (dtSheetClmAutoFitDone = False) Then
                .Columns("A:L").AutoFit '|fffd||55742||12c90||fffd|
            End If
            .Columns("H:J").HorizontalAlignment = xlRight
            .Range("H1").HorizontalAlignment = xlLeft
            .Rows("1").AutoFilter
        End If
    End With
    
    '-----------------------------------
    ' Summary|fffd|V|fffd|[|fffd|g
    '-----------------------------------
    Call sub_make_summary(PathName, segmentCnt, "Intel")
    Call setProgress(1, 1, "")
        
    Close num '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
End Sub

'-----------------------------
' |fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd|v|fffd|Z
'
'   |fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd|(S19)|fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd|F
'       |fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||341|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|A|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd|A|fffd|f|fffd|[|fffd|^|fffd||30a|e|fffd|o|fffd|C|fffd|g|fffd|l|fffd||30d||fffd||fffd|v|fffd||fffd|1|fffd||315||2414|
'   |fffd|C|fffd||fffd||fffd|e|fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd|F
'       |fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||341|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|A|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|t|fffd|B|fffd|[|fffd||fffd||fffd|h|fffd|A|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|^|fffd|C|fffd|v|fffd|A|fffd|f|fffd|[|fffd|^|fffd||30a|e|fffd|o|fffd|C|fffd|g|fffd|l|fffd||30d||fffd||fffd|v|fffd||fffd|2|fffd||315||2414|
'-----------------------------
Function fnc_calChkSum(fileFormat As String, strForChksum As String, CheckSum As String, logComment As String)
        Dim oneByte As Currency '1Byte|fffd||fffd||fffd||602||fffd|o|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^
        Dim tmpRestData As String '|fffd||602||fffd|o|fffd||fffd||fffd||a0bd||fffd|c|fffd||fffd||303|f|fffd|[|fffd|^
        Dim calChkSum As Currency '|fffd|v|fffd|Z|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd|l
        Dim loopEnd As Currency '|fffd|J|fffd||fffd||502||fffd||fffd||fffd|
        Dim loopCnt As Currency 'Loop|fffd||303|J|fffd|E|fffd||fffd||fffd|g
        Dim logComment_thisTime As String '|fffd||fffd||fffd||303|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||142||303||fffd||fffd|O
        
        calChkSum = 0
        tmpRestData = strForChksum
        loopEnd = (Len(strForChksum) / 2)
        For loopCnt = 1 To loopEnd
            oneByte = "&H" & Left(tmpRestData, 2)
            tmpRestData = Right(tmpRestData, Len(tmpRestData) - 2)
            calChkSum = calChkSum + oneByte
        Next
        
        If (fileFormat = "S19") Then
            'Motola Format
            calChkSum = 255 Xor calChkSum
            calChkSum = 255 And calChkSum
        Else
            'Intel Format
            calChkSum = 255 Xor calChkSum
            calChkSum = calChkSum + 1
            calChkSum = 255 And calChkSum
        End If

        If (("&H" & CheckSum) <> calChkSum) Then
            logComment_thisTime = "[ERROR]|fffd||fffd||fffd||fffd||fffd||fffd|CheckSum|fffd||fffd|0x" & HexLocal(calChkSum) & "|fffd||142||fffd||fffd|B"
            If (logComment <> "") Then
                logComment = logComment & vbNewLine & logComment_thisTime
            Else
                logComment = logComment_thisTime
            End If
            errorLogON = True
        End If
        
        fnc_calChkSum = logComment
        
End Function

'Summary|fffd|V|fffd|[|fffd|g|fffd||c42c|
Sub sub_make_summary(PathName As String, segmentCnt As Currency, fileFormat As String)
    Dim segStart_hex As String '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||310||64ea|[HEX]
    Dim segEnd_hex As String '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||30d||14c||fffd|[HEX]
    Dim segSize_dec As Currency '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||303|T|fffd|C|fffd|Y[DEC] (Byte)
    Dim segSize_hex As String '|fffd|Z|fffd|O|fffd||fffd||fffd||fffd||fffd|g|fffd||303|T|fffd|C|fffd|Y[HEX] (Byte)
    Dim cntRow As Currency '|fffd|s|fffd||fffd|
    Dim loopCnt As Long 'For-Loop|fffd|p
    Dim loopCntB As Long 'For-Loop|fffd|p
    
    '-----------------------------------
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|p|fffd|X|fffd||fffd||fffd|L|fffd||fffd|
    '-----------------------------------
    With Workbooks(myVbaWorkBookName).Worksheets(SummaySheet)
        .Range("B1:K1").Merge
        .Range("B2:K2").Merge
        cntRow = 1
        .Cells(cntRow, 1).Value = "Format:"
        If (fileFormat = "S19") Then
            .Cells(cntRow, 2).Value = "Motorola S-record"
        Else
            .Cells(cntRow, 2).Value = "Intel HEX"
        End If
        cntRow = cntRow + 1
        .Cells(cntRow, 1).Value = "File:"
        .Cells(cntRow, 2).Value = PathName
        .Hyperlinks.Add Anchor:=.Cells(cntRow, 2), address:=PathName
        cntRow = cntRow + 2
    
        '|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||348||342||30b|L|fffd||fffd|
        .Cells(cntRow, 1).Value = "No."
        .Cells(cntRow, 2).Value = "Address"
        .Cells(cntRow, 5).Value = "Size"
    
        '|fffd||fffd||fffd||fffd||fffd||752||fffd|(|fffd|F)
        For loopCnt = 1 To 5
            .Cells(cntRow, loopCnt).Interior.Color = RGB(183, 222, 232)
        Next
        
        '|fffd|r|fffd||fffd|
        For loopCnt = 1 To 5
            .Cells(cntRow, loopCnt).Borders(xlEdgeTop).LineStyle = xlContinuous
            .Cells(cntRow, loopCnt).Borders(xlEdgeBottom).LineStyle = xlDouble
        Next
        .Cells(cntRow, 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Cells(cntRow, 1).Borders(xlEdgeRight).LineStyle = xlContinuous
        .Cells(cntRow, 4).Borders(xlEdgeRight).LineStyle = xlContinuous
        .Cells(cntRow, 5).Borders(xlEdgeRight).LineStyle = xlContinuous
        cntRow = cntRow + 1
        
        '-----------------------------------
        ' |fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||348||342||fffd||fffd|L|fffd||fffd|
        '-----------------------------------
        For loopCnt = 0 To segmentCnt
            If ((loopCnt Mod 100) = 1) Then
                Call setProgress(loopCnt - 1, segmentCnt, "Summary|fffd||fffd||fffd||c42c||fffd||fffd||fffd||102||fffd||fffd||702||fffd|")
            End If
            DoEvents '|fffd||fffd||fffd||303|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||582||315||fffd||fffd||5c2||fffd||fffd||fffd||fffd||70b7||fffd||fffd||fffd||7c2||311||482||fffd|
            
            segStart_hex = HexLocal(segmentList(loopCnt).startOfSegment)
            segStart_hex = fnc_zeroPadding(segStart_hex, segmentList(loopCnt).zeroNum)
            
            segEnd_hex = HexLocal(segmentList(loopCnt).endOfSegment)
            segEnd_hex = fnc_zeroPadding(segEnd_hex, segmentList(loopCnt).zeroNum)
            
            segSize_dec = segmentList(loopCnt).endOfSegment - segmentList(loopCnt).startOfSegment + 1
            segSize_hex = HexLocal(segSize_dec)
            segSize_hex = fnc_zeroPadding(segSize_hex, segmentList(loopCnt).zeroNum)
            
            .Cells(cntRow, 1).Value = loopCnt + 1
            .Cells(cntRow, 2).Value = segStart_hex
            .Cells(cntRow, 3).Value = "-"
            .Cells(cntRow, 4).Value = segEnd_hex
            .Cells(cntRow, 5).Value = segSize_hex
            
            .Cells(cntRow, 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Cells(cntRow, 1).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Cells(cntRow, 4).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Cells(cntRow, 5).Borders(xlEdgeRight).LineStyle = xlContinuous
            cntRow = cntRow + 1
        Next
        For loopCnt = 1 To 5
            .Cells(cntRow, loopCnt).Borders(xlEdgeTop).LineStyle = xlContinuous
        Next
        
        '-----------------------------------
        '|fffd|@|fffd|G|fffd||fffd||fffd|[
        '-----------------------------------
        cntRow = 4
        
        For loopCnt = 0 To errCnt
            If (loopCnt = 0) Then '1|fffd|s|fffd||fffd|
                .Cells(cntRow, 7) = "Line"
                .Cells(cntRow, 8) = "Text"
                .Cells(cntRow, 9) = "ErrorLog"
                
                For loopCntB = 7 To 9
                    '|fffd||fffd||fffd||fffd||fffd||752||fffd|(|fffd|F)
                    .Cells(cntRow, loopCntB).Interior.Color = RGB(183, 222, 232)
                    '|fffd|r|fffd||fffd|
                    .Cells(cntRow, loopCntB).Borders(xlEdgeTop).LineStyle = xlContinuous
                    .Cells(cntRow, loopCntB).Borders(xlEdgeBottom).LineStyle = xlDouble
                Next
            Else '2|fffd|s|fffd||688||20d|~
                .Cells(cntRow, 7) = errList(loopCnt - 1).line - 1
                .Cells(cntRow, 8) = errList(loopCnt - 1).str
                .Cells(cntRow, 9) = errList(loopCnt - 1).msg
            End If
            
            .Cells(cntRow, 7).Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Cells(cntRow, 7).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Cells(cntRow, 8).Borders(xlEdgeRight).LineStyle = xlContinuous
            .Cells(cntRow, 9).Borders(xlEdgeRight).LineStyle = xlContinuous
            
            cntRow = cntRow + 1
        Next
        
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||202||fffd||fffd||a347||fffd||255|\|fffd||fffd|
        If (errCnt = 0) Then
            If (chkeckStrlengthAndCRC = True) Then
                .Cells(cntRow, 7) = "|fffd|G|fffd||fffd||fffd|[|fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd|"
            Else
                .Cells(cntRow, 7) = "|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||183|`|fffd|F|fffd|b|fffd|N|fffd|T|fffd||fffd||fffd||30a|m|fffd|F|fffd||34d|s|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
            End If
            .Cells(cntRow, 7).Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Cells(cntRow, 9).Borders(xlEdgeRight).LineStyle = xlContinuous
            cntRow = cntRow + 1
        End If
        
        '|fffd||fffd||502||fffd||fffd||fffd||fffd||30c|r|fffd||fffd|
        For loopCnt = 7 To 9
            .Cells(cntRow, loopCnt).Borders(xlEdgeTop).LineStyle = xlContinuous
        Next
        
        
        '|fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|
        .Columns("A:E").HorizontalAlignment = xlRight
        .Columns("A:I").AutoFit '|fffd||55742||12c90||fffd|
        
    End With
End Sub

'|fffd|f|fffd|[|fffd|^|fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
Function fnc_chkLength(inputStr As String, byteCount As String, logComment As String)
    Dim byteCount_dec As Currency '|fffd|f|fffd|[|fffd|^|fffd||fffd|[DEC]
    Dim calDataLeng '|fffd||fffd||fffd||6c2||303|f|fffd|[|fffd|^|fffd||fffd|
    Dim diffCnt As Currency '|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||309||7d5|s|fffd||fffd|Byte|fffd||fffd|
    Dim calDataLength '|fffd|v|fffd|Z|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|
    Dim logComment_thisTime '|fffd||fffd||fffd||303|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||142||303||fffd||fffd|O
    
    calDataLength = (Len(inputStr) / 2 - 2)
    byteCount_dec = "&H" & byteCount
    If (calDataLength <> byteCount_dec) Then
        diffCnt = calDataLength - byteCount_dec
        If (diffCnt > 0) Then
            logComment_thisTime = "[ERROR]Data|fffd||fffd||fffd||fffd|" & diffCnt & "Byte|fffd||fffd||fffd||fffd||fffd||142||fffd||fffd|B"
        Else
            logComment_thisTime = "[ERROR]Data|fffd||fffd||fffd||fffd|" & (diffCnt * (-1)) & "Byte|fffd||fffd||fffd||202||fffd||fffd||142||fffd||fffd|B"
        End If
        
        If (logComment <> "") Then
            logComment = logComment & vbNewLine & logComment_thisTime
        Else
            logComment = logComment_thisTime
        End If
        errorLogON = True
    End If
    fnc_chkLength = logComment
End Function

'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd||64fe|
Function fnc_getTotalLine(TargetFile As String)
    Dim totalLine As Currency
    Dim buf As String, LastRow As Currency, FSO As Object
    Set FSO = CreateObject("Scripting.FileSystemObject")
    With FSO.OpenTextFile(TargetFile, 1) 'Read Only
        buf = .ReadAll
        .Close
    End With
    Set FSO = Nothing
    LastRow = UBound(Split(buf, vbCrLf)) - 1
    
    fnc_getTotalLine = LastRow
End Function

'---------------------------------------------------------------------
' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd|X|fffd|o|fffd|[|fffd||fffd||fffd|X|fffd|V
'---------------------------------------------------------------------
Private Sub setProgress(i As Currency, progressMax As Currency, msg As String)
    Dim percent As Double
    Dim percentInt As Currency
    Dim progressVal As Double

    percent = i / progressMax
    percentInt = Int(percent * 100)
    progressVal = proggressInitWidth * percentInt * 0.01

    UserForm1.Label1.Caption = msg & vbCrLf & percentInt & "%|fffd||fffd||fffd||fffd| (" & i & "/" & progressMax & ")"
    UserForm1.Progress_FG.Width = 0.1 + proggressInitWidth - progressVal
    UserForm1.Progress_FG.Left = proggressInitLeft + progressVal
    
    '|fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
    If UserForm1.IsCancel = True Then
        Call vbaSuspend 'VBA|fffd||fffd||fffd|s|fffd||fffd||fffd|f
    End If
End Sub

'---------------------------------------------------------------------
' |fffd||fffd||fffd|f|fffd||fffd||fffd||fffd|
'---------------------------------------------------------------------
Sub vbaSuspend()
    Application.ScreenUpdating = True  '|fffd||fffd||282||315|`|fffd||fffd|X|fffd|V|fffd||10a|J
    Application.DisplayAlerts = True '|fffd|A|fffd||fffd||fffd|[|fffd|g|fffd||292|m|fffd||fffd||fffd||94|\|fffd||fffd|

    '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||82||fffd||fffd||fffd|
    Unload UserForm1
    
    MsgBox "|fffd||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Application.Cursor = xlDefault  '|fffd||fffd||fffd||fffd||fffd|v|fffd|\|fffd||fffd||fffd||fffd||7c2||fffd|
    End '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~
End Sub

'---------------------------------------------------------------------
' Dec2Hex
'---------------------------------------------------------------------
Function HexLocal(i As Variant) As String
    Dim variHexLocal As String
    variHexLocal = Evaluate("DEC2HEX(" & i & ")")
    HexLocal = CStr(variHexLocal)
End Function


INQUEST-PP=macro
