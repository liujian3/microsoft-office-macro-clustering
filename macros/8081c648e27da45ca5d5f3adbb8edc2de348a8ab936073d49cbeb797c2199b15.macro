Attribute VB_Name = "Module1"
Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As LongPtr) 'For 64 Bit Systems
'Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds as Long) 'For 32 Bit Systems
Sub run_selected()

Dim strCommand As String
Dim strPing As String
Dim sdpip As String, sdpip2 As String, sdptrace As String, smstrace As String, hoskey As String, hoskey2 As String, hoskey3 As String
Dim myURL As String, postData As String, myDUS As String
Dim result() As String, strcomp1 As String, strcomp2 As String, strcomp3 As String, strcomp4 As String, strdiff As String, strdiff2 As String
Dim rw As Range
Dim winHttpReq As Object
Dim cmd As String, plink As String, usern As String, passw As String, tail As String, grep As String, filen As String
Dim LRandomNumber As Integer
Dim timen As String, timef As String, tcpdum As String, formattrace As String
Dim laptopn As String, sms As String, trucolto As String
Dim rwcnt As Long, rwtot As Long, rw2 As Long, j As Integer, wcnt As Integer
Dim MyPath As String, tmpStr As String, csv As String
Dim MyFileName As String, MyFileName2 As String
Dim strDirectoryList As String, passwr As String
Dim lInt_FreeFile03 As Integer
Dim lInt_FreeFile04 As Integer
Dim wbCopyTo As Workbook
Dim wsCopyTo As Worksheet
Dim wbCopyTo2 As Workbook
Dim wsCopyTo2 As Worksheet
Dim wbCopyFrom As Workbook
Dim wsCopyFrom As Worksheet
Dim xComment As Comment
Dim TestArray() As String, setucdus As String

Dim strHostID As String
Dim strNTID As String

Application.DisplayStatusBar = True
Application.ScreenUpdating = False

Set wbCopyTo = ThisWorkbook
Set wsCopyTo = wbCopyTo.ActiveSheet

'Reset Comment box sizes
For Each xComment In Application.ActiveSheet.Comments
    xComment.Shape.TextFrame.AutoSize = True
Next

On Error GoTo ErrHandler
'Check ITT Tool primary connectivity
Application.StatusBar = "Checking ITT tool primary connection (COSNet 10.25.77.213)..."
myURL = "http://10.25.77.213:1096/httpfe"
strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 10.25.77.213 | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
strPing = fShellRun(strCommand)

'Check ITT Tool secondary connectivity
If strPing = "" Then
    Application.StatusBar = "Checking ITT tool secondary connection (NMNet 5.232.86.77)..."
    myURL = "http://5.232.86.77:1096/httpfe"
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 5.232.86.77 | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "Aborted, the lab ITT Tool (belemm5a 5.232.86.77) is unreachable! Check your VPN connection or the lab EMM application."
        Set wsCopyTo = Nothing
        Set wbCopyTo = Nothing
        Application.StatusBar = False
        Application.ScreenUpdating = True
        Exit Sub
    End If
End If

'User details
Set sShellObject = CreateObject("Wscript.Shell")
strHostID = sShellObject.ExpandEnvironmentStrings("%COMPUTERNAME%")
strNTID = sShellObject.ExpandEnvironmentStrings("%USERNAME%")

'Check SDP connectivity to save MSISDN traces and validate SMS notification
sdptrace = wbCopyTo.Worksheets("SDPTraceCfg").Range("B1").Value
smstrace = wbCopyTo.Worksheets("SDPTraceCfg").Range("B2").Value
plink = wbCopyTo.Worksheets("SDPTraceCfg").Range("B3").Value
sdpip = wbCopyTo.Worksheets("SDPTraceCfg").Range("B4").Value
sdpip2 = wbCopyTo.Worksheets("SDPTraceCfg").Range("B5").Value
hoskey = Application.WorksheetFunction.VLookup(sdpip, wbCopyTo.Worksheets("SDPTraceCfg").Range("M4:N504"), 2, 0)
hoskey2 = Application.WorksheetFunction.VLookup(sdpip2, wbCopyTo.Worksheets("SDPTraceCfg").Range("M4:N504"), 2, 0)
sdpip = Mid(sdpip, InStr(sdpip, "(") + 1, Len(sdpip) - InStr(sdpip, "(") - 1)
sdpip2 = Mid(sdpip2, InStr(sdpip2, "(") + 1, Len(sdpip2) - InStr(sdpip2, "(") - 1)
passwr = wbCopyTo.Worksheets("SDPTraceCfg").Range("B6").Value
usern = "ittuser"
passw = "ittuser"
tail = "/opt/temp/itt/tail_TraceEventLogFile.ksh"
grep = "/opt/temp/itt/grep_TraceEventLogFile.ksh"
tcpdum = "/opt/temp/itt/tcpdump_smpp.ksh"
formattrace = "/opt/temp/itt/format_smpptrace.ksh"
Randomize
LRandomNumber = Int((999 - 100 + 1) * Rnd + 100)
timen = Format(Now(), "yyyymmddhhnnss")
timef = Format(Now(), "yyyy-mm-dd")
laptopn = LCase(Environ("Username"))
If sdptrace = "Yes" And sdpip <> "" Then
    Application.StatusBar = "Checking SDP (" & sdpip & ") connection for tariff trace and SMS notification validation..."
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & sdpip & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        If sdpip = sdpip2 Then
            MsgBox "SDP " & sdpip & " is unreachable. Rating tree traces will not be collected and SMS notification will not be validated. Check your NMNet VPN connection."
            sdptrace = ""
            smstrace = ""
        Else
            MsgBox "SDP " & sdpip & " is unreachable. Rating tree traces will not be collected. Check your NMNet VPN connection."
            sdptrace = ""
        End If
    End If
Else
    sdptrace = ""
End If

If smstrace = "Yes" And sdpip2 <> "" And sdpip2 <> sdpip Then
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & sdpip2 & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "SDP " & sdpip2 & " is unreachable. SMS notification will not be validated. Check your NMNet VPN connection."
        smstrace = ""
    End If
ElseIf smstrace <> "Yes" Or sdpip2 = "" Then
    smstrace = ""
End If
If sdptrace <> "" Or smstrace <> "" Then
    Application.StatusBar = "Locating PuTTY Link application..."
    If Dir(plink) = "" Then
        MsgBox "PuTTY Link client not found (" & plink & "). Rating tree traces will not be collected and SMS notification will not be validated. Check SDPTrace configuration tab."
        sdptrace = ""
        smstrace = ""
    End If
End If

Set winHttpReq = CreateObject("WinHttp.WinHttpRequest.5.1")

'MyPath = CreateObject("Wscript.Shell").SpecialFolders("MyDocuments")
MyPath = Environ("temp")
If Not Right(MyPath, 1) = "\" Then MyPath = MyPath & "\"

'Loop through selected test cases
rwtot = Selection.Count
If rwtot = 1 Then
    wsCopyTo.Range(Selection, Selection.Offset(0, 1)).Select
Else
    rwtot = Selection.SpecialCells(xlCellTypeVisible).Count
End If

rwcnt = 0
For Each rw In Selection.SpecialCells(xlCellTypeVisible).Rows
    rwcnt = rwcnt + 1
    'Check if selected row is valid
    If rw.Row < 4 Or Application.CountA(wsCopyTo.Range(wsCopyTo.Cells(rw.Row, 2), wsCopyTo.Cells(rw.Row, 8))) = 0 Then
        MsgBox ("Selected row " & rw.Row & " is empty or invalid.")
        GoTo NextIteration
    End If

    'Set DUS counters
    If wsCopyTo.Cells(rw.Row, 7).Value <> "" And wsCopyTo.Cells(rw.Row, 7).Text Like "*ucdus####=[0-9-]*" And _
    wsCopyTo.Cells(rw.Row, 2).Value <> "" And wsCopyTo.Cells(rw.Row, 2).Text Like "##########" Then
        'Check DUS primary connectivity
        Application.StatusBar = "Checking DUS primary connection (dusda11 5.232.105.68)..."
        myDUS = "5.232.105.68"
        hoskey3 = "05:49:3b:67:b5:72:48:85:2d:31:d4:e4:5b:ee:3f:cb"
        strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myDUS & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
        strPing = fShellRun(strCommand)
    
        'Check DUS secondary connectivity
        If strPing = "" Then
            Application.StatusBar = "Checking DUS secondary connection (dusda12 5.232.105.71)..."
            myDUS = "5.232.105.71"
            hoskey3 = "95:fb:7b:2d:59:88:b2:cb:a6:37:a1:5d:0b:97:4d:d5"
            strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myDUS & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
            strPing = fShellRun(strCommand)
            If strPing = "" Then
                MsgBox "Setting of DUS counter failed, DUS (dusda11 5.232.105.68 nor dusda12 5.232.105.71) is unreachable! Check your VPN connection or the DUS application."
            End If
        End If
        If strPing <> "" Then
            Application.StatusBar = "Locating PuTTY Link application..."
            If Dir(plink) = "" Then
                MsgBox "PuTTY Link client not found (" & plink & "). DUS counter can not be set. Check SDPTrace configuration tab."
                strPing = ""
            End If
        End If
        If strPing <> "" Then
            setucdus = "Yes"
            Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Setting DUS counter(s)..."
            TestArray() = Split(wsCopyTo.Cells(rw.Row, 7).Text, vbLf)
            For j = LBound(TestArray) To UBound(TestArray)
                If TestArray(j) Like "ucdus####=[0-9-]*" Then
                    cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " /opt/sdf/sbin/counter_value_modify_parallel.sh 1" & wsCopyTo.Cells(rw.Row, 2).Text & " " & Mid(Split(TestArray(j), "=")(0), 6, 4) & " " & Split(TestArray(j), "=")(1)
                    Call Shell(cmd, vbHide)
                    Application.Wait (Now + TimeValue("0:00:01"))
                End If
            Next j
        End If
    End If
    
    'Start SDP Trace
    filen = "click" & CStr(LRandomNumber) & "-row" & CStr(rw.Row) & "-" & timen
    If sdptrace = "Yes" And (wsCopyTo.Cells(rw.Row, 5).Value <> "" Or wsCopyTo.Cells(rw.Row, 6).Value <> "") Then
        Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Starting SDP MSISDN trace..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & tail & " " & filen
        Call Shell(cmd, vbHide)
        'Start SDP SMS tcpdump
        If smstrace = "Yes" And wsCopyTo.Cells(rw.Row, 5).Value <> "" Then
            Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Starting SDP SMS tcpdump..."
            cmd = """" & plink & """ -ssh -l root -pw " & passwr & " -batch -hostkey " & hoskey2 & " " & sdpip2 & " " & tcpdum & " " & filen & ".csv"
            Call Shell(cmd, vbHide)
            Sleep wbCopyTo.Worksheets("SDPTraceCfg").Range("B9").Value
        Else
            Sleep wbCopyTo.Worksheets("SDPTraceCfg").Range("B9").Value
        End If
    'Start SDP SMS tcpdump
    ElseIf smstrace = "Yes" And wsCopyTo.Cells(rw.Row, 5).Value <> "" Then
        Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Starting SDP SMS tcpdump..."
        cmd = """" & plink & """ -ssh -l root -pw " & passwr & " -batch -hostkey " & hoskey2 & " " & sdpip2 & " " & tcpdum & " " & filen & ".csv"
        Call Shell(cmd, vbHide)
        Sleep wbCopyTo.Worksheets("SDPTraceCfg").Range("B9").Value
    End If
    
    Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Sending simulation request to ITT tool..."
    wsCopyTo.Range(wsCopyTo.Cells(rw.Row, 11), wsCopyTo.Cells(rw.Row, 16)).Value = ""

    If wsCopyTo.Cells(rw.Row, 5).Value <> "" And _
    ((InStr(wsCopyTo.Cells(rw.Row, 5).Value, "MO") > 0 And InStr(wsCopyTo.Cells(rw.Row, 5).Value, "MO ") < 1) Or _
    (InStr(wsCopyTo.Cells(rw.Row, 5).Value, "MT") > 0 And InStr(wsCopyTo.Cells(rw.Row, 5).Value, "MT ") < 1) Or _
    InStr(wsCopyTo.Cells(rw.Row, 5).Value, "CF") > 0) Then
        If InStr(wsCopyTo.Range("E1").Value, "acrtimer=") > 0 And InStr(wsCopyTo.Range("E1").Value, "acrtimer= ") = 0 Then
            trucolto = wsCopyTo.Range("E1").Value
            trucolto = Mid(trucolto, InStr(trucolto, "acrtimer=") + 9, 4)
        Else
            trucolto = wsCopyTo.Cells(rw.Row, 5).Value
            trucolto = Mid(trucolto, InStr(trucolto, "units=") + 6, 4)
        End If
        If InStr(trucolto, " ") > 0 Then trucolto = Mid(trucolto, 1, InStr(trucolto, " ") - 1)
        If InStr(trucolto, vbLf) > 0 Then trucolto = Mid(trucolto, 1, InStr(trucolto, vbLf) - 1)
        If CInt(trucolto) > 20 Then
            csv = "yes"
        Else
            csv = "no"
        End If
    Else
        csv = "no"
    End If

    If csv = "yes" Then
        'Active test case only:
        MyFileName = "temp" & CStr(LRandomNumber) & "-row" & CStr(rw.Row) & "-" & timen & ".csv"
        MyFileName2 = "done_*temp" & CStr(LRandomNumber) & "-row" & CStr(rw.Row) & "-" & timen & "*.csv"
        
        wsCopyTo.Copy
        With ActiveWorkbook
            .Sheets(1).UsedRange.Value = .Sheets(1).UsedRange.Value
            If rw.Row > 4 Then
                .Sheets(1).Rows("4:" & CStr(rw.Row - 1)).Delete
            End If
            If .Sheets(1).UsedRange.Rows.Count > 4 Then
               .Sheets(1).Rows("5:" & .Sheets(1).UsedRange.Rows.Count).Delete
            End If
            .Sheets(1).Range("A4").Value = ""
'            .Sheets(1).Range("J4:T4").Value = ""
            .Sheets(1).Range("J4", .Sheets(1).Cells(4, .Sheets(1).UsedRange.Columns.Count)).Value = ""

            'Saves the new workbook to given folder / filename:
            .SaveAs Filename:= _
                MyPath & MyFileName, _
                FileFormat:=xlCSV, _
                CreateBackup:=False
            'Closes the file
            .Close False
        End With
        
        tmpStr = CopyToCSV2(MyPath, MyFileName, MyFileName2, Mid(myURL, _
        InStr(myURL, "://") + 3, Len(myURL) - InStr(myURL, "://") - 14), _
        CInt(trucolto) + 60, "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ")", plink)
        If tmpStr = "good" Then
            'Open file with data to be copied
            Set wbCopyFrom = Workbooks.Open(MyPath & Dir(MyPath & MyFileName2))
            Set wsCopyFrom = wbCopyFrom.Worksheets(1)
        
            'Copy Range
            wsCopyTo.Cells(rw.Row, 2).Value = wsCopyFrom.Range("A4").Value
            
            wsCopyFrom.Range("B4:C4").Copy
            wsCopyTo.Cells(rw.Row, 11).PasteSpecial Paste:=xlPasteValues, _
            Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
        
            wsCopyFrom.Range("D4:E4").Copy
            wsCopyTo.Cells(rw.Row, 14).PasteSpecial Paste:=xlPasteValues, _
            Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
            
            'Close file that was opened
            wbCopyFrom.Close SaveChanges:=False
            Set wbCopyFrom = Nothing
            Set wsCopyFrom = Nothing
            
            If Dir(MyPath & MyFileName) <> "" Then Kill (MyPath & MyFileName)
            If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        Else
            wsCopyTo.Cells(rw.Row, 14).Value = "Simulation Error. " & tmpStr
            If Dir(MyPath & MyFileName) <> "" Then Kill (MyPath & MyFileName)
            If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        End If
    Else
        postData = wsCopyTo.Range("E1").Value & "}" & _
        wsCopyTo.Cells(rw.Row, 2).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 3).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 4).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 5).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 6).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 7).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 8).Value & "}" & _
        wsCopyTo.Cells(rw.Row, 9).Value & "}" & _
        strHostID & "}" & _
        strNTID
        winHttpReq.Open "POST", myURL, False
        winHttpReq.SetRequestHeader "Content-Type", "application/x-www-form-urlencoded"
        winHttpReq.Send (postData)

        result() = Split(winHttpReq.responseText, "}")
        wsCopyTo.Cells(rw.Row, 2).Value = result(0)
        wsCopyTo.Cells(rw.Row, 11).Value = result(1)
        wsCopyTo.Cells(rw.Row, 12).Value = result(2)
        wsCopyTo.Cells(rw.Row, 14).Value = result(3)
        wsCopyTo.Cells(rw.Row, 15).Value = result(4)
'        If result(5) <> "" Then wsCopyTo.Cells(rw.Row, 8).Value = result(5)
'        If result(6) <> "" Then wsCopyTo.Cells(rw.Row, 9).Value = result(6)
    End If

    'Stop SDP Trace
    If sdptrace = "Yes" And (wsCopyTo.Cells(rw.Row, 5).Value <> "" Or wsCopyTo.Cells(rw.Row, 6).Value <> "") Then
        Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Saving SDP MSISDN trace..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & grep & " " & filen & " " & timef & " " & laptopn & " " & wsCopyTo.Cells(rw.Row, 2).Value
        Call Shell(cmd, vbHide)
        wsCopyTo.Hyperlinks.Add Anchor:=wsCopyTo.Cells(rw.Row, 16), _
        Address:="ftp://" & usern & ":" & passw & "@" & sdpip & "/opt/temp/itt/traces/" & laptopn & "/" & timef & "/" & filen & ".txt", _
        TextToDisplay:=filen & ".txt"
    End If

   'Find SMS notification from tcpdump
    If smstrace = "Yes" And wsCopyTo.Cells(rw.Row, 5).Value <> "" Then
        cmd = """" & plink & """ -ssh -l root -pw " & passwr & " -batch -hostkey " & hoskey2 & " " & sdpip2 & " " & formattrace & " " & filen & ".csv"
        Call Shell(cmd, vbHide)
        
        'The path and file names:
        MyFileName = filen & ".csv"
        strDirectoryList = MyPath & MyFileName
        
        'Delete completion file
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    
        lInt_FreeFile03 = FreeFile
        lInt_FreeFile04 = FreeFile

        'Create text file with FTP get commands
        Open strDirectoryList & "2.txt" For Output As #lInt_FreeFile03
        Print #lInt_FreeFile03, "open " & sdpip2
        Print #lInt_FreeFile03, usern
        Print #lInt_FreeFile03, passw
        Print #lInt_FreeFile03, "binary"
        Print #lInt_FreeFile03, "get /opt/temp/itt/traces/" & MyFileName & " " & strDirectoryList
        Print #lInt_FreeFile03, "bye"
        Close #lInt_FreeFile03
    
        'Create Batch program FTP get
        Open strDirectoryList & "2.bat" For Output As #lInt_FreeFile04
        Print #lInt_FreeFile04, "ftp -s:" & strDirectoryList & "2.txt"
        Print #lInt_FreeFile04, "Echo ""Complete"" > " & strDirectoryList & "2.out"
        Close #lInt_FreeFile04
    
        'Invoke FTP get
        i = 0
        Do While Dir(strDirectoryList) = "" And i < 10
            If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
            cmd = strDirectoryList & "2.bat"
            Call Shell(cmd, vbHide)
            Do While Dir(strDirectoryList & "2.out") = ""
                DoEvents
            Loop
            Application.Wait (Now + TimeValue("0:00:01"))
            i = i + 1
            Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Stopping SDP SMS tcpdump..."
        Loop
    
        'Open file with data to be copied
        If (Dir(strDirectoryList) <> "") Then
            
            'Delete remote file after copy
            cmd = """" & plink & """ -ssh -l root -pw " & passwr & " -batch -hostkey " & hoskey2 & " " & sdpip2 & " rm /opt/temp/itt/traces/" & MyFileName
            Call Shell(cmd, vbHide)
            
            'Clean up files
            If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
            If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
            If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
            
            Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Validating SMS notification..."
            
            Set wbCopyFrom = Workbooks.Open(MyPath & Dir(strDirectoryList))
            Set wsCopyFrom = wbCopyFrom.Worksheets(1)

            If Application.CountA(wsCopyFrom.Columns("A")) > 1 Then
                rw2 = wsCopyFrom.UsedRange.Rows.Count
            Else
                rw2 = 1
            End If
            
            If Application.CountA(wsCopyFrom.Columns("A")) > 0 And wsCopyTo.Cells(rw.Row, 5).Value <> "" Then
                wsCopyTo.Cells(rw.Row, 13).Value = VLookupAll("a1" & wsCopyTo.Cells(rw.Row, 2).Value, wsCopyFrom.Range("A1:A" & rw2), 2)
            End If
            strcomp1 = wsCopyTo.Cells(rw.Row, 10).Value
            strcomp2 = wsCopyTo.Cells(rw.Row, 13).Value

            tmpStr = ""
            If Len(strcomp1) >= 5 And Left(strcomp1, 1) = "*" Then
                If strcomp2 <> "" Then
                    TestArray() = Split(strcomp2, vbLf)
                    If Left(strcomp1, 5) = "*NONE" Then
                        strcomp1 = Mid(strcomp1, 6, 5000)
                        For j = LBound(TestArray) To UBound(TestArray)
                            If TestArray(j) Like strcomp1 Then
                                tmpStr = "unwanted"
                                Exit For
                            End If
                        Next j
                        If tmpStr = "" Then
                            tmpStr = "PASS"
                        End If
                    Else
                        wcnt = 0
                        strcomp3 = Left(strcomp1, 4)
                        For j = LBound(TestArray) To UBound(TestArray)
                            strcomp4 = Left(TestArray(j), 3)
                            If TestArray(j) Like strcomp1 Then
                                tmpStr = TestArray(j)
                                wcnt = wcnt + 1
                            ElseIf (strcomp3 = "*SMS" Or strcomp3 = "*WAP") And (strcomp4 = "SMS" Or strcomp4 = "WAP") Then
                                wcnt = wcnt + 1
                            ElseIf (strcomp3 = "*ESP" Or strcomp3 = "*ODP") And (strcomp4 = "ESP" Or strcomp4 = "ODP") Then
                                wcnt = wcnt + 1
                            End If
                        Next j
                        If wcnt > 1 Then
                            tmpStr = "too many"
                        End If
                    End If
                    If tmpStr = "unwanted" Or tmpStr = "PASS" Or tmpStr = "too many" Then
                    
                    ElseIf tmpStr <> "" Then
                        wsCopyTo.Cells(rw.Row, 13).Value = tmpStr
                    Else
                        If Len(strcomp1) >= 5 And Left(strcomp1, 1) = "*" And strcomp2 <> "" And InStr(strcomp2, vbLf & Mid(strcomp1, 2, 4)) > 1 And _
                        InStr(strcomp2, Mid(strcomp1, 2, 4)) > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:="*" & vbLf & Mid(strcomp1, 2, 3), Replacement:=Mid(strcomp1, 2, 3), LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Value, vbLf & "WAP~") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "WAP~~*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Text, vbLf & "SMS~") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "SMS~~*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Value, vbLf & "ESP~") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "ESP~~*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Value, vbLf & "ESP AND") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "ESP AND*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Value, vbLf & "ODP~") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "ODP~~*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                        If InStr(wsCopyTo.Cells(rw.Row, 13).Value, vbLf & "ODP AND") > 1 Then
                            wsCopyTo.Cells(rw.Row, 13).Replace What:=vbLf & "ODP AND*", Replacement:="", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                        End If
                    End If
                ElseIf Left(strcomp1, 5) = "*NONE" Then
                    tmpStr = "PASS"
                End If
            End If

            If tmpStr = "unwanted" Or tmpStr = "too many" Or (wsCopyTo.Cells(rw.Row, 13).Value <> strcomp1 And Not wsCopyTo.Cells(rw.Row, 13).Value Like strcomp1 And tmpStr <> "PASS") Then
                If tmpStr = "unwanted" Then
                    strdiff2 = vbLf & "Unwanted words: " & TestArray(j)
                ElseIf tmpStr = "too many" Then
                    strdiff2 = vbLf & "Unwanted words: too many notifications"
                Else
                    wsCopyTo.Range("M1").Value = strcomp1
                    If Left(wsCopyTo.Range("M1").Value, 1) = "*" Then wsCopyTo.Range("M1").Value = Mid(wsCopyTo.Range("M1").Value, 2, 5000)
                    If Right(wsCopyTo.Range("M1").Value, 1) = "*" Then wsCopyTo.Range("M1").Value = Left(wsCopyTo.Range("M1").Value, Len(wsCopyTo.Range("M1").Value) - 1)
                    
                    wsCopyTo.Range("M1").Replace What:="[#]", Replacement:="#", LookAt:=xlPart, _
                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                    
                    wsCopyTo.Range("M1").Replace What:="[~*]", Replacement:="*", LookAt:=xlPart, _
                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                    
                    wsCopyTo.Range("M1").Replace What:="  ", Replacement:="<spaces>", LookAt:=xlPart, _
                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                    
                    wsCopyTo.Cells(rw.Row, 13).Replace What:="  ", Replacement:="<spaces>", LookAt:=xlPart, _
                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                    
                    If Left(wsCopyTo.Cells(rw.Row, 13).Value, 1) = " " Then wsCopyTo.Cells(rw.Row, 13).Value = "<space>" & Mid(wsCopyTo.Cells(rw.Row, 13).Value, 2, 5000)
                    If Right(wsCopyTo.Cells(rw.Row, 13).Value, 1) = " " Then wsCopyTo.Cells(rw.Row, 13).Value = Left(wsCopyTo.Cells(rw.Row, 13).Value, Len(wsCopyTo.Cells(rw.Row, 13).Value) - 1) & "<space>"
                    
                    If Left(wsCopyTo.Range("M1").Value, 1) = " " Then wsCopyTo.Range("M1").Value = "<space>" & Mid(wsCopyTo.Range("M1").Value, 2, 5000)
                    If Right(wsCopyTo.Range("M1").Value, 1) = " " Then wsCopyTo.Range("M1").Value = Left(wsCopyTo.Range("M1").Value, Len(wsCopyTo.Range("M1").Value) - 1) & "<space>"
    
                    strdiff = WORDDIF(wsCopyTo.Range("M1"), wsCopyTo.Cells(rw.Row, 13))
                    If strdiff <> "" Then strdiff = vbLf & "Missing words: " & strdiff
                    strdiff2 = WORDDIF(wsCopyTo.Cells(rw.Row, 13), wsCopyTo.Range("M1"))
                    If strdiff2 <> "" Then strdiff2 = vbLf & "Unwanted words: " & strdiff2
                    
                    wsCopyTo.Range("M1").Clear
                End If
                
                If wsCopyTo.Cells(rw.Row, 14).Value = "PASS" Or wsCopyTo.Cells(rw.Row, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(rw.Row, 14).Value Like "* done.*" Then
                    wsCopyTo.Cells(rw.Row, 14).Value = "FAIL. SMS Notification result unexpected." & strdiff & strdiff2
                Else
                    wsCopyTo.Cells(rw.Row, 14).Value = wsCopyTo.Cells(rw.Row, 14).Value & vbLf & "Also, SMS Notification result is unexpected." & strdiff & strdiff2
                End If
            ElseIf wsCopyTo.Cells(rw.Row, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(rw.Row, 14).Value Like "* done.*" Then
                wsCopyTo.Cells(rw.Row, 14).Value = "PASS"
            End If

            wsCopyTo.Cells(rw.Row, 13).Value = strcomp2

            'Close file that was opened
            wbCopyFrom.Close SaveChanges:=False
    
            Set wbCopyFrom = Nothing
            Set wsCopyFrom = Nothing
    
            'Clean up files
            If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
        Else
            wsCopyTo.Cells(rw.Row, 13).Value = "Unable to get SMS notification info from SDP tcpdump file."
            'Clean up files
            If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
            If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
            If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        End If
    End If
    
    
    'Set DUS counters
    If setucdus = "Yes" And _
    (InStr(wsCopyTo.Cells(rw.Row, 6).Value, "ucpostreset=yes") > 0 Or InStr(wsCopyTo.Cells(rw.Row, 7).Value, "ucpostreset=yes") > 0 Or InStr(wsCopyTo.Range("E1").Value, "ucpostreset=yes") > 0) And _
    InStr(wsCopyTo.Cells(rw.Row, 6).Value, "ucpostreset=no") < 1 And _
    InStr(wsCopyTo.Cells(rw.Row, 7).Value, "ucpostreset=no") < 1 Then
        Application.StatusBar = "(" & CStr(rwcnt) & " of " & CStr(rwtot) & ") Resetting DUS counter(s)..."
        TestArray() = Split(wsCopyTo.Cells(rw.Row, 7).Text, vbLf)
        For j = LBound(TestArray) To UBound(TestArray)
            If TestArray(j) Like "ucdus####=[0-9-]*" Then
                cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " /opt/sdf/sbin/counter_value_modify_parallel.sh 1" & wsCopyTo.Cells(rw.Row, 2).Text & " " & Mid(Split(TestArray(j), "=")(0), 6, 4) & " 0"
                Call Shell(cmd, vbHide)
                Application.Wait (Now + TimeValue("0:00:01"))
            End If
        Next j
    End If
    
    wsCopyTo.Cells(rw.Row, 14).Select
    DoEvents
NextIteration:
Next

Set winHttpReq = Nothing
Set wsCopyTo = Nothing
Set wbCopyTo = Nothing

ErrHandler:
Application.StatusBar = False
Application.ScreenUpdating = True
Sleep 500
Selection.Select

End Sub
Sub CopyToCSV()
Dim strCommand As String, myDUS As String
Dim strPing As String, tmpStr As String
Dim MyPath As String, myURL As String
Dim MyFileName As String
Dim MyFileName2 As String, MyFileName3 As String, MyFileName4 As String, MyFileName5 As String, MyFileName6 As String
Dim LRandomNumber As Integer
Dim strDirectoryList As String
Dim lInt_FreeFile01 As Integer
Dim lInt_FreeFile02 As Integer
Dim lInt_FreeFile03 As Integer
Dim lInt_FreeFile04 As Integer
Dim i As Long, rw As Long, wcnt As Long, j As Long, rwcnt As Long
Dim wbCopyTo As Workbook, wbdus As Workbook
Dim wsCopyTo As Worksheet
Dim wbCopyFrom As Workbook
Dim wsCopyFrom As Worksheet
Dim cmd As String, sms As String, strcomp1 As String, strcomp2 As String, strcomp3 As String, strcomp4 As String, strdiff As String, strdiff2 As String
Dim sdpip As String, smstrace As String, hoskey As String, hoskey3 As String, setucdus As String
Dim plink As String, pscp As String, usern As String, passw As String, tcpdum As String, formattrace As String
Dim TestArray() As String
Dim rw2 As Range

Application.DisplayStatusBar = True
Application.ScreenUpdating = False

Set wbCopyTo = ThisWorkbook
Set wsCopyTo = wbCopyTo.ActiveSheet
plink = wbCopyTo.Worksheets("SDPTraceCfg").Range("B3").Value
pscp = wbCopyTo.Worksheets("SDPTraceCfg").Range("B7").Value

myURL = "10.25.77.240"
strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myURL & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
strPing = fShellRun(strCommand)

If strPing = "" Then
    myURL = "5.232.86.78"
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myURL & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "Aborted, Lab ITT Tool unreachable! Check your VPN connection or the lab EMM application."
        Set wsCopyTo = Nothing
        Set wbCopyTo = Nothing
        Application.StatusBar = False
        Application.ScreenUpdating = True
        Exit Sub
    End If
End If

'Set DUS counters
wsCopyTo.AutoFilter.ShowAllData

If Not wsCopyTo.Columns("G").Find("ucdus????=?", LookIn:=xlValues, LookAt:=xlPart, MatchCase:=True) Is Nothing Then
    'Check DUS primary connectivity
    Application.StatusBar = "Checking DUS primary connection (dusda11 5.232.105.68)..."
    myDUS = "5.232.105.68"
    hoskey3 = "05:49:3b:67:b5:72:48:85:2d:31:d4:e4:5b:ee:3f:cb"
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myDUS & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)

    'Check DUS secondary connectivity
    If strPing = "" Then
        Application.StatusBar = "Checking DUS secondary connection (dusda12 5.232.105.71)..."
        myDUS = "5.232.105.71"
        hoskey3 = "95:fb:7b:2d:59:88:b2:cb:a6:37:a1:5d:0b:97:4d:d5"
        strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myDUS & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
        strPing = fShellRun(strCommand)
        If strPing = "" Then
            MsgBox "Setting of DUS counter failed, DUS (dusda11 5.232.105.68 nor dusda12 5.232.105.71) is unreachable! Check your VPN connection or the DUS application."
        End If
    End If
    If strPing <> "" Then
        If Dir(plink) = "" Then
            MsgBox "PuTTY Link client not found (" & plink & "). DUS counter can not be set. Check SDPTrace configuration tab."
            strPing = ""
            setucdus = ""
        ElseIf Dir(pscp) = "" Then
            MsgBox "PuTTY SCP client not found (" & pscp & "). DUS counter can not be set. Check SDPTrace configuration tab."
            strPing = ""
            setucdus = ""
        Else
            setucdus = "Yes"
        End If
    End If
    
    If setucdus = "Yes" Then
        'The path and file names:
        Application.StatusBar = "Preparing DUS counter modify request file..."
        MyPath = Environ("temp")
        If Not Right(MyPath, 1) = "\" Then MyPath = MyPath & "\"

        Randomize
        LRandomNumber = Int((999 - 100 + 1) * Rnd + 100)
        MyFileName4 = CStr(LRandomNumber) & "-" & Format(Now(), "yyyymmddhhnnss")
        MyFileName3 = "temp" & MyFileName4 & "b"
        MyFileName5 = "temp" & MyFileName4 & "c"
        MyFileName = MyFileName3 & ".csv"
        MyFileName2 = "done_" & MyFileName
        
        'Open a new workbook:
        Set wbdus = Workbooks.Add
        
        'The new workbook becomes Activeworkbook:
        With wbdus
            'Saves the new workbook to given folder / filename:
            .SaveAs Filename:= _
                MyPath & MyFileName3 & "z", _
                FileFormat:=xlCSV, _
                CreateBackup:=False

            If InStr(wsCopyTo.Range("E1").Value, "ucpostreset=yes") > 0 Then
                .SaveAs Filename:= _
                    MyPath & MyFileName5 & "z", _
                    FileFormat:=xlCSV, _
                    CreateBackup:=False
            End If
            
            rwcnt = 1
            For Each rw2 In wsCopyTo.UsedRange.Rows
                'Set DUS counters
                If rw2.Row > 3 And wsCopyTo.Cells(rw2.Row, 7).Value <> "" And wsCopyTo.Cells(rw2.Row, 7).Text Like "*ucdus####=[0-9-]*" And _
                wsCopyTo.Cells(rw2.Row, 2).Value <> "" And wsCopyTo.Cells(rw2.Row, 2).Text Like "##########" Then
                    TestArray() = Split(wsCopyTo.Cells(rw2.Row, 7).Text, vbLf)
                    For j = LBound(TestArray) To UBound(TestArray)
                        If TestArray(j) Like "ucdus####=[0-9-]*" Then
                            .Sheets(1).Cells(rwcnt, 1).Value = "'1" & wsCopyTo.Cells(rw2.Row, 2).Text
                            .Sheets(1).Cells(rwcnt, 2).Value = Mid(Split(TestArray(j), "=")(0), 6, 4)
                            .Sheets(1).Cells(rwcnt, 3).Value = "'" & Split(TestArray(j), "=")(1)
                            rwcnt = rwcnt + 1
                        End If
                    Next j
                End If
            Next

            .Sheets(1).UsedRange.RemoveDuplicates Columns:=Array(1, 2), Header:=xlNo
            
            'Saves the new workbook to given folder / filename:
            .SaveAs Filename:= _
                MyPath & MyFileName, _
                FileFormat:=xlCSV, _
                CreateBackup:=False
            
            If InStr(wsCopyTo.Range("E1").Value, "ucpostreset=yes") > 0 Then
                .Sheets(1).Range(Cells(1, 3), Cells(.Sheets(1).Range("C1").End(xlDown).Row, 3)).Value = 0
                'Saves the new workbook to given folder / filename:
                .SaveAs Filename:= _
                    MyPath & MyFileName5, _
                    FileFormat:=xlCSV, _
                    CreateBackup:=False
            End If
            
            'Closes the file
            .Close False
        End With

        'Run DUS modify counter script
        cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " """ & MyPath & MyFileName3 & "*.csv"" " & myDUS & ":/opt/sdf/sbin"
        Call Shell(cmd, vbHide)
            
        '' Invoke FTP get
        i = 0
        Do While Dir(MyPath & MyFileName3 & "zz.csv") = "" And i < 25
            'Run DUS modify counter script
            cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & ":/opt/sdf/sbin/" & MyFileName3 & "z.csv """ & MyPath & MyFileName3 & "zz.csv"""
            Call Shell(cmd, vbHide)
            Application.Wait (Now + TimeValue("0:00:01"))
            i = i + 1
        Loop

        If (Dir(MyPath & MyFileName3 & "zz.csv") <> "") Then
            'Run DUS modify counter script
            cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " /opt/sdf/sbin/counter_value_modify_parallel.sh " & MyFileName
            Call Shell(cmd, vbHide)
        
            Application.Wait (Now + TimeValue("0:00:01"))
            If Dir(MyPath & MyFileName) <> "" Then Kill (MyPath & MyFileName)
            If Dir(MyPath & MyFileName3 & "z.csv") <> "" Then Kill (MyPath & MyFileName3 & "z.csv")
            If Dir(MyPath & MyFileName3 & "zz.csv") <> "" Then Kill (MyPath & MyFileName3 & "zz.csv")
            
            cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " rm /opt/sdf/sbin/" & MyFileName3 & "z.csv"
            Call Shell(cmd, vbHide)
        Else
            Application.StatusBar = "Setting of DUS counter(s) failed."
            Application.ScreenUpdating = True
            Sleep 500
            wsCopyTo.Range("N1").Select
            AppActivate Application.Caption
            MsgBox "Setting of DUS counter(s) failed."
            
            If Dir(MyPath & MyFileName) <> "" Then Kill (MyPath & MyFileName)
            If Dir(MyPath & MyFileName3 & "z.csv") <> "" Then Kill (MyPath & MyFileName3 & "z.csv")
            Resume bye
        End If
            
        '' Invoke FTP get
        i = 0
        Do While Dir(MyPath & MyFileName2) = "" And i < wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value
            cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & ":/opt/sdf/sbin/" & MyFileName2 & " """ & MyPath & MyFileName2 & """"
            Call Shell(cmd, vbHide)
            Application.Wait (Now + TimeValue("0:00:01"))
            i = i + 1
            Application.StatusBar = "Setting DUS counter(s)... Timeout: " & wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value - i & " sec"
        Loop
        
        '' Invoke FTP delete
        If (Dir(MyPath & MyFileName2) <> "") Then
            cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " rm /opt/sdf/sbin/" & MyFileName2
            Call Shell(cmd, vbHide)
            
            Application.Wait (Now + TimeValue("0:00:01"))
            '' Clean up files
            If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
            
            Application.StatusBar = "Setting of DUS counter(s) finished."
        Else
            Application.StatusBar = "Setting of DUS counter(s) failed."
            Application.ScreenUpdating = True
            Sleep 500
            wsCopyTo.Range("N1").Select
            AppActivate Application.Caption
            MsgBox wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value & " sec timeout. Setting of DUS counter(s) failed."
            Resume bye
        End If
    End If
End If

'Check SDP connectivity for SMS validation
smstrace = wbCopyTo.Worksheets("SDPTraceCfg").Range("B2").Value
sdpip = wbCopyTo.Worksheets("SDPTraceCfg").Range("B5").Value
hoskey = Application.WorksheetFunction.VLookup(sdpip, wbCopyTo.Worksheets("SDPTraceCfg").Range("M4:N504"), 2, 0)
sdpip = Mid(sdpip, InStr(sdpip, "(") + 1, Len(sdpip) - InStr(sdpip, "(") - 1)
usern = "root"
passw = wbCopyTo.Worksheets("SDPTraceCfg").Range("B6").Value
tcpdum = "/opt/temp/itt/tcpdump_smpp.ksh"
formattrace = "/opt/temp/itt/format_smpptrace.ksh"
If smstrace = "Yes" And sdpip <> "" Then
    Application.StatusBar = "Checking SDP (" & sdpip & ") connection for SMS notification validation..."
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & sdpip & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "SDP " & sdpip & " is unreachable. SMS notification will not be validated. Check your NMNet VPN connection."
        smstrace = ""
    Else
        If Dir(plink) = "" Then
            MsgBox "PuTTY Link client not found (" & plink & "). SMS notification will not be validated. Check SDPTrace configuration tab."
            smstrace = ""
        End If
    End If
Else
    smstrace = ""
End If

'The path and file names:
'MyPath = CreateObject("Wscript.Shell").SpecialFolders("MyDocuments")
MyPath = Environ("temp")
If Not Right(MyPath, 1) = "\" Then MyPath = MyPath & "\"

Randomize
LRandomNumber = Int((999 - 100 + 1) * Rnd + 100)
MyFileName4 = CStr(LRandomNumber) & "-" & Format(Now(), "yyyymmddhhnnss")
MyFileName = "temp" & MyFileName4 & "a.csv"
MyFileName2 = "done_*" & MyFileName4 & "a*.csv"
MyFileName3 = "temp" & CStr(LRandomNumber) & "-" & Format(Now(), "yyyymmddhhnnss") & ".csv"

'Copies the sheet to a new workbook:
wsCopyTo.Copy

'The new workbook becomes Activeworkbook:
With ActiveWorkbook
'Saves the new workbook to given folder / filename:
    .Sheets(1).AutoFilter.ShowAllData
    .Sheets(1).UsedRange.Value = .Sheets(1).UsedRange.Value
    .Sheets(1).Range(.Sheets(1).Cells(4, 1), .Sheets(1).Cells(.Sheets(1).UsedRange.Rows.Count, 1)).Value = ""
    .Sheets(1).Range(.Sheets(1).Cells(4, 10), .Sheets(1).Cells(.Sheets(1).UsedRange.Rows.Count, .Sheets(1).UsedRange.Columns.Count)).Value = ""
    .SaveAs Filename:= _
        MyPath & MyFileName, _
        FileFormat:=xlCSV, _
        CreateBackup:=False
'Closes the file
    .Close False
End With

On Error GoTo Err_Handler
    lInt_FreeFile01 = FreeFile
    lInt_FreeFile02 = FreeFile
    lInt_FreeFile03 = FreeFile
    lInt_FreeFile04 = FreeFile
    lInt_FreeFile05 = FreeFile
    lInt_FreeFile06 = FreeFile
    
    '' ANW  07-Feb-2003 :
    strDirectoryList = MyPath & MyFileName

    '' Delete completion file
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")

    '' Create text file with FTP put commands
    Open strDirectoryList & ".txt" For Output As #lInt_FreeFile01
    Print #lInt_FreeFile01, "open " & myURL
    Print #lInt_FreeFile01, "mmsuper"
    Print #lInt_FreeFile01, "bharat"
    Print #lInt_FreeFile01, "binary"
    Print #lInt_FreeFile01, "send " & strDirectoryList & " /var/opt/mediation/MMStorage3/itt/" & MyFileName
    Print #lInt_FreeFile01, "rename  /var/opt/mediation/MMStorage3/itt/" & MyFileName & "  /var/opt/mediation/MMStorage3/itt/itt_" & MyFileName
    Print #lInt_FreeFile01, "bye"
    Close #lInt_FreeFile01

    '' Create text file with FTP get commands
    Open strDirectoryList & "2.txt" For Output As #lInt_FreeFile03
    Print #lInt_FreeFile03, "open " & myURL
    Print #lInt_FreeFile03, "mmsuper"
    Print #lInt_FreeFile03, "bharat"
    Print #lInt_FreeFile03, "binary"
    Print #lInt_FreeFile03, "cd /var/opt/mediation/MMStorage3/itt"
    Print #lInt_FreeFile03, "lcd " & Left(MyPath, Len(MyPath) - 1)
    Print #lInt_FreeFile03, "prompt"
    Print #lInt_FreeFile03, "mget " & MyFileName2
    Print #lInt_FreeFile03, "bye"
    Close #lInt_FreeFile03

    '' Create Batch program FTP put
    Open strDirectoryList & ".bat" For Output As #lInt_FreeFile02
    Print #lInt_FreeFile02, "ftp -s:" & strDirectoryList & ".txt"
    Print #lInt_FreeFile02, "Echo ""Complete"" > " & strDirectoryList & ".out"
    Close #lInt_FreeFile02

    '' Create Batch program FTP get
    Open strDirectoryList & "2.bat" For Output As #lInt_FreeFile04
    Print #lInt_FreeFile04, "ftp -s:" & strDirectoryList & "2.txt"
    Print #lInt_FreeFile04, "Echo ""Complete"" > " & strDirectoryList & "2.out"
    Close #lInt_FreeFile04

    'Start SDP SMS tcpdump
    If smstrace = "Yes" Then
        Application.StatusBar = "Starting SDP SMS tcpdump..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & tcpdum & " " & MyFileName3
        Call Shell(cmd, vbHide)
    End If

    '' Invoke FTP put
    Application.StatusBar = "Sending CSV test cases to ITT Tool..."
    cmd = strDirectoryList & ".bat"
    Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
    'Wait for completion
    Do While Dir(strDirectoryList & ".out") = ""
        DoEvents
    Loop

    '' Clean up files
    If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
    If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
    
    '' Invoke FTP get
    i = 0
    Do While Dir(MyPath & MyFileName2) = "" And i < wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        cmd = strDirectoryList & "2.bat"
        Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
        Do While Dir(strDirectoryList & "2.out") = ""
            DoEvents
        Loop
        Application.Wait (Now + TimeValue("0:00:01"))
        i = i + 1
        Application.StatusBar = "EMM ITT Tool executing simulation... Timeout: " & wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value - i & " sec"
    Loop

    '' Invoke FTP delete
    If (Dir(MyPath & MyFileName2) <> "") Then
        Application.StatusBar = "Writing test results..."
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey e6:21:37:3d:66:7a:78:6c:be:a6:6c:bd:e0:96:5a:b6 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey 25:2c:8a:7c:a3:d1:11:ae:5d:10:b1:0b:8f:3d:37:06 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        
        '' Clean up files
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        
        wsCopyTo.Range(wsCopyTo.Cells(4, 11), wsCopyTo.Cells(wsCopyTo.UsedRange.Rows.Count, 16)).Value = ""
        
        'Open file with data to be copied
        Set wbCopyFrom = Workbooks.Open(MyPath & Dir(MyPath & MyFileName2))
        Set wsCopyFrom = wbCopyFrom.Worksheets(1)
    
        'Copy Range
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 1), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 1)).Copy
        wsCopyTo.Range("B4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 2), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 3)).Copy
        wsCopyTo.Range("K4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
    
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 4), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 5)).Copy
        wsCopyTo.Range("N4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
'        If Application.CountA(wsCopyFrom.Range(wsCopyFrom.Cells(4, 6), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 6))) > 0 Then
 '           wsCopyFrom.Range(wsCopyFrom.Cells(4, 6), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 6)).Copy
  '          wsCopyTo.Range("H4").PasteSpecial Paste:=xlPasteValues, _
   '         Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    '        Application.CutCopyMode = False
     '   End If
        
      '  If Application.CountA(wsCopyFrom.Range(wsCopyFrom.Cells(4, 7), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 7))) > 0 Then
       '     wsCopyFrom.Range(wsCopyFrom.Cells(4, 7), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 7)).Copy
        '    wsCopyTo.Range("I4").PasteSpecial Paste:=xlPasteValues, _
         '   Operation:=xlNone, SkipBlanks:=False, Transpose:=False
          '  Application.CutCopyMode = False
        'End If
        
        'Close file that was opened
        wbCopyFrom.Close SaveChanges:=False

        Set wbCopyFrom = Nothing
        Set wsCopyFrom = Nothing
        
        '' Clean up files
        If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        
        'Stop SDP SMS tcpdump
        If smstrace = "Yes" Then
            'Application.StatusBar = "Stopping SDP SMS tcpdump..."
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
            Call Shell(cmd, vbHide)
            
            Application.Wait (Now + TimeValue("0:00:04"))
            '' Create text file with FTP get commands
            Open strDirectoryList & "3.txt" For Output As #lInt_FreeFile05
            Print #lInt_FreeFile05, "open " & sdpip
            Print #lInt_FreeFile05, "ittuser"
            Print #lInt_FreeFile05, "ittuser"
            Print #lInt_FreeFile05, "binary"
            Print #lInt_FreeFile05, "get /opt/temp/itt/traces/" & MyFileName3 & " " & MyPath & MyFileName3
            Print #lInt_FreeFile05, "bye"
            Close #lInt_FreeFile05
    
            '' Create Batch program FTP get
            Open strDirectoryList & "3.bat" For Output As #lInt_FreeFile06
            Print #lInt_FreeFile06, "ftp -s:" & strDirectoryList & "3.txt"
            Print #lInt_FreeFile06, "Echo ""Complete"" > " & strDirectoryList & "3.out"
            Close #lInt_FreeFile06
            
            '' Invoke FTP get
            i = 0
            Do While Dir(MyPath & MyFileName3) = "" And i < 10
                If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
                cmd = strDirectoryList & "3.bat"
                Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
                Do While Dir(strDirectoryList & "3.out") = ""
                    DoEvents
                Loop
                Application.Wait (Now + TimeValue("0:00:01"))
                i = i + 1
                Application.StatusBar = "Stopping SDP SMS tcpdump..."
            Loop
            
            'Open file with data to be copied
            If (Dir(MyPath & MyFileName3) <> "") Then
                cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
                Call Shell(cmd, vbHide)
                
                '' Clean up files
                If Dir(strDirectoryList & "3.bat") <> "" Then Kill (strDirectoryList & "3.bat")
                If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
                If Dir(strDirectoryList & "3.txt") <> "" Then Kill (strDirectoryList & "3.txt")
                
                'Open file with data to be copied
                Application.StatusBar = "Validating SMS notification..."
                Set wbCopyFrom = Workbooks.Open(MyPath & Dir(MyPath & MyFileName3))
                Set wsCopyFrom = wbCopyFrom.Worksheets(1)
    
                If Application.CountA(wsCopyFrom.Columns("A")) > 1 Then
                    rw = wsCopyFrom.UsedRange.Rows.Count
                Else
                    rw = 1
                End If
                For i = 4 To wsCopyTo.UsedRange.Rows.Count
                    If Application.CountA(wsCopyFrom.Columns("A")) > 0 And wsCopyTo.Cells(i, 5).Value <> "" Then
                        wsCopyTo.Cells(i, 13).Value = VLookupAll("a1" & wsCopyTo.Cells(i, 2).Value, wsCopyFrom.Range("A1:A" & rw), 2)
                    End If
                    strcomp1 = wsCopyTo.Cells(i, 10).Value
                    strcomp2 = wsCopyTo.Cells(i, 13).Value
    
                    tmpStr = ""
                    If Len(strcomp1) >= 5 And Left(strcomp1, 1) = "*" Then
                        If strcomp2 <> "" Then
                            TestArray() = Split(strcomp2, vbLf)
                            If Left(strcomp1, 5) = "*NONE" Then
                                strcomp1 = Mid(strcomp1, 6, 5000)
                                For j = LBound(TestArray) To UBound(TestArray)
                                    If TestArray(j) Like strcomp1 Then
                                        tmpStr = "unwanted"
                                        Exit For
                                    End If
                                Next j
                                If tmpStr = "" Then
                                    tmpStr = "PASS"
                                End If
                            Else
                                wcnt = 0
                                strcomp3 = Left(strcomp1, 4)
                                For j = LBound(TestArray) To UBound(TestArray)
                                    strcomp4 = Left(TestArray(j), 3)
                                    If TestArray(j) Like strcomp1 Then
                                        tmpStr = TestArray(j)
                                        wcnt = wcnt + 1
                                    ElseIf (strcomp3 = "*SMS" Or strcomp3 = "*WAP") And (strcomp4 = "SMS" Or strcomp4 = "WAP") Then
                                        wcnt = wcnt + 1
                                    ElseIf (strcomp3 = "*ESP" Or strcomp3 = "*ODP") And (strcomp4 = "ESP" Or strcomp4 = "ODP") Then
                                        wcnt = wcnt + 1
                                    End If
                                Next j
                                If wcnt > 1 Then
                                    tmpStr = "too many"
                                End If
                            End If
                            If tmpStr = "unwanted" Or tmpStr = "PASS" Or tmpStr = "too many" Then
                            
                            ElseIf tmpStr <> "" Then
                                wsCopyTo.Cells(i, 13).Value = tmpStr
                            Else
                                If Len(strcomp1) >= 5 And Left(strcomp1, 1) = "*" And strcomp2 <> "" And InStr(strcomp2, vbLf & Mid(strcomp1, 2, 4)) > 1 And _
                                InStr(strcomp2, Mid(strcomp1, 2, 4)) > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:="*" & vbLf & Mid(strcomp1, 2, 3), Replacement:=Mid(strcomp1, 2, 3), LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                    
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "WAP~") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "WAP~~*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "SMS~") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "SMS~~*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "ESP~") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "ESP~~*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "ESP AND") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "ESP AND*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "ODP~") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "ODP~~*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                                If InStr(wsCopyTo.Cells(i, 13).Value, vbLf & "ODP AND") > 1 Then
                                    wsCopyTo.Cells(i, 13).Replace What:=vbLf & "ODP AND*", Replacement:="", LookAt:=xlPart, _
                                    SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                                End If
                            End If
                        ElseIf Left(strcomp1, 5) = "*NONE" Then
                            tmpStr = "PASS"
                        End If
                    End If
                    
                    If tmpStr = "unwanted" Or tmpStr = "too many" Or (wsCopyTo.Cells(i, 13).Value <> wsCopyTo.Cells(i, 10).Value And Not wsCopyTo.Cells(i, 13).Value Like wsCopyTo.Cells(i, 10).Value And tmpStr <> "PASS") Then
                        If tmpStr = "unwanted" Then
                            strdiff2 = vbLf & "Unwanted words: " & TestArray(j)
                        ElseIf tmpStr = "too many" Then
                            strdiff2 = vbLf & "Unwanted words: too many notifications"
                        Else
                            wsCopyTo.Range("M1").Value = strcomp1
                            If Left(wsCopyTo.Range("M1").Value, 1) = "*" Then wsCopyTo.Range("M1").Value = Mid(wsCopyTo.Range("M1").Value, 2, 5000)
                            If Right(wsCopyTo.Range("M1").Value, 1) = "*" Then wsCopyTo.Range("M1").Value = Left(wsCopyTo.Range("M1").Value, Len(wsCopyTo.Range("M1").Value) - 1)
                            
                            wsCopyTo.Range("M1").Replace What:="[#]", Replacement:="#", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                            
                            wsCopyTo.Range("M1").Replace What:="[~*]", Replacement:="*", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                            
                            wsCopyTo.Range("M1").Replace What:="  ", Replacement:="<spaces>", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                            
                            wsCopyTo.Cells(i, 13).Replace What:="  ", Replacement:="<spaces>", LookAt:=xlPart, _
                            SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
                            
                            If Left(wsCopyTo.Cells(i, 13).Value, 1) = " " Then wsCopyTo.Cells(i, 13).Value = "<space>" & Mid(wsCopyTo.Cells(i, 13).Value, 2, 5000)
                            If Right(wsCopyTo.Cells(i, 13).Value, 1) = " " Then wsCopyTo.Cells(i, 13).Value = Left(wsCopyTo.Cells(i, 13).Value, Len(wsCopyTo.Cells(i, 13).Value) - 1) & "<space>"
        
                            If Left(wsCopyTo.Range("M1").Value, 1) = " " Then wsCopyTo.Range("M1").Value = "<space>" & Mid(wsCopyTo.Range("M1").Value, 2, 5000)
                            If Right(wsCopyTo.Range("M1").Value, 1) = " " Then wsCopyTo.Range("M1").Value = Left(wsCopyTo.Range("M1").Value, Len(wsCopyTo.Range("M1").Value) - 1) & "<space>"
                            
                            strdiff = WORDDIF(wsCopyTo.Range("M1"), wsCopyTo.Cells(i, 13))
                            If strdiff <> "" Then strdiff = vbLf & "Missing words: " & strdiff
                            strdiff2 = WORDDIF(wsCopyTo.Cells(i, 13), wsCopyTo.Range("M1"))
                            If strdiff2 <> "" Then strdiff2 = vbLf & "Unwanted words: " & strdiff2
                            
                            wsCopyTo.Range("M1").Clear
                        End If
    
                        If wsCopyTo.Cells(i, 14).Value = "PASS" Or wsCopyTo.Cells(i, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(i, 14).Value Like "* done.*" Then
                            wsCopyTo.Cells(i, 14).Value = "FAIL. SMS Notification result unexpected." & strdiff & strdiff2
                        Else
                            wsCopyTo.Cells(i, 14).Value = wsCopyTo.Cells(i, 14).Value & vbLf & "Also, SMS Notification result is unexpected." & strdiff & strdiff2
                        End If
                    ElseIf wsCopyTo.Cells(i, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(i, 14).Value Like "* done.*" Then
                        wsCopyTo.Cells(i, 14).Value = "PASS"
                    End If
                    
                    wsCopyTo.Cells(i, 13).Value = strcomp2
                Next
                
                'Close file that was opened
                wbCopyFrom.Close SaveChanges:=False
                
                Set wbCopyFrom = Nothing
                Set wsCopyFrom = Nothing
                
                'Clean up files
                If Dir(MyPath & MyFileName3) <> "" Then Kill (MyPath & MyFileName3)
            Else
                'Clean up files
                If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "3.bat")
                If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "3.out")
                If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "3.txt")
            End If
        End If
        
        If InStr(wsCopyTo.Range("E1").Value, "ucpostreset=yes") > 0 And setucdus = "Yes" Then
            
            MyFileName6 = "done_" & MyFileName5 & ".csv"
            
            'Run DUS modify counter script
            cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " """ & MyPath & MyFileName5 & "*.csv"" " & myDUS & ":/opt/sdf/sbin"
            Call Shell(cmd, vbHide)
                
            '' Invoke FTP get
            i = 0
            Do While Dir(MyPath & MyFileName5 & "zz.csv") = "" And i < 25
                'Run DUS modify counter script
                cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & ":/opt/sdf/sbin/" & MyFileName5 & "z.csv """ & MyPath & MyFileName5 & "zz.csv"""
                Call Shell(cmd, vbHide)
                Application.Wait (Now + TimeValue("0:00:01"))
                i = i + 1
            Loop
    
            If (Dir(MyPath & MyFileName5 & "zz.csv") <> "") Then
                'Run DUS modify counter script
                cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " /opt/sdf/sbin/counter_value_modify_parallel.sh " & MyFileName5 & ".csv"
                Call Shell(cmd, vbHide)
            
                Application.Wait (Now + TimeValue("0:00:01"))
                If Dir(MyPath & MyFileName5 & ".csv") <> "" Then Kill (MyPath & MyFileName5 & ".csv")
                If Dir(MyPath & MyFileName5 & "z.csv") <> "" Then Kill (MyPath & MyFileName5 & "z.csv")
                If Dir(MyPath & MyFileName5 & "zz.csv") <> "" Then Kill (MyPath & MyFileName5 & "zz.csv")
                
                cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " rm /opt/sdf/sbin/" & MyFileName5 & "z.csv"
                Call Shell(cmd, vbHide)
            Else
                Application.StatusBar = "Resetting of DUS counter(s) failed."
                If Dir(MyPath & MyFileName5 & ".csv") <> "" Then Kill (MyPath & MyFileName5 & ".csv")
                If Dir(MyPath & MyFileName5 & "z.csv") <> "" Then Kill (MyPath & MyFileName5 & "z.csv")
            End If
                
            '' Invoke FTP get
            i = 0
            Do While Dir(MyPath & MyFileName6) = "" And i < wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value
                cmd = """" & pscp & """ -q -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & ":/opt/sdf/sbin/" & MyFileName6 & " """ & MyPath & MyFileName6 & """"
                Call Shell(cmd, vbHide)
                Application.Wait (Now + TimeValue("0:00:01"))
                i = i + 1
                Application.StatusBar = "Resetting DUS counter(s)... Timeout: " & wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value - i & " sec"
            Loop
            
            '' Invoke FTP delete
            If (Dir(MyPath & MyFileName6) <> "") Then
                cmd = """" & plink & """ -ssh -l sdfrun -pw Tmobile#1 -batch -hostkey " & hoskey3 & " " & myDUS & " rm /opt/sdf/sbin/" & MyFileName6
                Call Shell(cmd, vbHide)
                
                Application.Wait (Now + TimeValue("0:00:01"))
                '' Clean up files
                If Dir(MyPath & MyFileName6) <> "" Then Kill (MyPath & MyFileName6)
                
                Application.StatusBar = "Resetting of DUS counter(s) finished."
            Else
                Application.StatusBar = "Resetting of DUS counter(s) failed."
            End If
        End If
        
        Application.StatusBar = "Simulation completed successfully."
        Application.ScreenUpdating = True
        Sleep 500
        wsCopyTo.Range("N1").Select
        AppActivate Application.Caption
        MsgBox "Simulation complete. " & CStr(WorksheetFunction.CountIf(wsCopyTo.Columns("N"), "*FAIL*") + WorksheetFunction.CountIf(wsCopyTo.Columns("N"), "*Provisioning Error.*")) & " of " & CStr(Application.CountA(wsCopyTo.Columns("B")) - 2) & " test case(s) FAILED. Check 'Test Result' column."
    Else
        'Stop SDP SMS tcpdump
        If smstrace = "Yes" Then
            Application.StatusBar = "Stopping SDP SMS tcpdump..."
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
            Call Shell(cmd, vbHide)
            Application.Wait (Now + TimeValue("0:00:04"))
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
            Call Shell(cmd, vbHide)
        End If
        
        '' Clean up files
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        
        Application.StatusBar = "Simulation error."
        Application.ScreenUpdating = True
        Sleep 500
        wsCopyTo.Range("N1").Select
        AppActivate Application.Caption
        MsgBox wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value & " sec timeout. The results file /var/opt/mediation/MMStorage3/itt/" & MyFileName2 & " is missing from EMM " & myURL & "."
    End If

bye:
    Set wsCopyTo = Nothing
    Set wbCopyTo = Nothing
    Application.StatusBar = False
    Exit Sub

Err_Handler:
    'Stop SDP SMS tcpdump
    If smstrace = "Yes" Then
        Application.StatusBar = "Stopping SDP SMS tcpdump..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
        Call Shell(cmd, vbHide)
        Application.Wait (Now + TimeValue("0:00:04"))
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
        Call Shell(cmd, vbHide)
    End If
    
    '' Clean up files
    If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
    If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
    If Dir(strDirectoryList & "3.bat") <> "" Then Kill (strDirectoryList & "3.bat")
    If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
    If Dir(strDirectoryList & "3.txt") <> "" Then Kill (strDirectoryList & "3.txt")
    If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
    If Dir(MyPath & MyFileName2) <> "" Then
        If AlreadyOpen(Dir(MyPath & MyFileName2)) Then
            Workbooks(Dir(MyPath & MyFileName2)).Close SaveChanges:=False
        End If
        Kill (MyPath & MyFileName2)
    End If
    If Dir(MyPath & MyFileName3) <> "" Then
        If AlreadyOpen(Dir(MyPath & MyFileName3)) Then
            Workbooks(Dir(MyPath & MyFileName3)).Close SaveChanges:=False
        End If
        Kill (MyPath & MyFileName3)
    End If
    
    Application.ScreenUpdating = True
    wsCopyTo.Range("N1").Select
    AppActivate Application.Caption
    MsgBox "Error : " & Err.Number & vbCrLf & "Description : " & Err.Description, vbCritical
    Resume bye

End Sub
Function fShellRun(sCommandStringToExecute)

' This function will accept a string as a DOS command to execute.
' It will then execute the command in a shell, and capture the output into a file.
' That file is then read in and its contents are returned as the value the function returns.

' "myIP" is a user-selected global variable

Dim oShellObject, oFileSystemObject, sShellRndTmpFile
Dim oShellOutputFileToRead, iErr

Set oShellObject = CreateObject("Wscript.Shell")
Set oFileSystemObject = CreateObject("Scripting.FileSystemObject")

    sShellRndTmpFile = oShellObject.ExpandEnvironmentStrings("%temp%") & oFileSystemObject.GetTempName
    On Error Resume Next
    oShellObject.Run sCommandStringToExecute & " > " & sShellRndTmpFile, 0, True
    iErr = Err.Number

    On Error GoTo 0
    If iErr <> 0 Then
        fShellRun = ""
        Set oShellObject = Nothing
        Set oFileSystemObject = Nothing
        Exit Function
    End If

    On Error GoTo err_skip
    fShellRun = oFileSystemObject.OpenTextFile(sShellRndTmpFile, 1).ReadAll
    oFileSystemObject.DeleteFile sShellRndTmpFile, True
    
    Set oShellObject = Nothing
    Set oFileSystemObject = Nothing
Exit Function

err_skip:
    fShellRun = ""
    oFileSystemObject.DeleteFile sShellRndTmpFile, True
    Set oShellObject = Nothing
    Set oFileSystemObject = Nothing
End Function
Function VLookupAll(vValue, rngAll As Range, iCol As Integer, Optional sSep As String = "")
    Dim rCell As Range
    Dim rng As Range
    Dim str As String
    On Error GoTo ErrHandler
    Set rng = Intersect(rngAll, rngAll.Columns(1))
    For Each rCell In rng
        If rCell.Value = vValue Then
            str = rCell.Offset(0, iCol - 1).Value
            If Len(VLookupAll) > 0 And (Left(str, 4) = "WAP~" Or Left(str, 4) = "SMS~" Or _
            Left(str, 4) = "ESP~" Or Left(str, 7) = "ESP AND" Or Left(str, 4) = "ODP~" Or Left(str, 7) = "ODP AND") Then
                VLookupAll = VLookupAll & vbLf & str
            Else
                VLookupAll = VLookupAll & sSep & str
            End If
        End If
    Next rCell
    If VLookupAll <> "" Then
'        VLookupAll = CVErr(xlErrNA)
'    Else
        VLookupAll = Right(VLookupAll, Len(VLookupAll) - Len(sSep))
    End If
ErrHandler:
    If Err.Number <> 0 Then VLookupAll = CVErr(xlErrValue)
End Function
Function AlreadyOpen(sFname As String) As Boolean
    Dim wkb As Workbook
    On Error Resume Next
    Set wkb = Workbooks(sFname)
    AlreadyOpen = Not wkb Is Nothing
    Set wkb = Nothing
End Function
Function CopyToCSV2(MyPath As String, MyFileName As String, MyFileName2 As String, myURL As String, wit As Integer, stat As String, plink As String) As String
Dim strDirectoryList As String
Dim lInt_FreeFile01 As Integer
Dim lInt_FreeFile02 As Integer
Dim lInt_FreeFile03 As Integer
Dim lInt_FreeFile04 As Integer
Dim i As Integer
Dim cmd As String

On Error GoTo Err_Handler
    lInt_FreeFile01 = FreeFile
    lInt_FreeFile02 = FreeFile
    lInt_FreeFile03 = FreeFile
    lInt_FreeFile04 = FreeFile
   
    '' ANW  07-Feb-2003 :
    strDirectoryList = MyPath & MyFileName

    '' Delete completion file
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")

    '' Create text file with FTP put commands
    Open strDirectoryList & ".txt" For Output As #lInt_FreeFile01
    Print #lInt_FreeFile01, "open " & myURL
    Print #lInt_FreeFile01, "mmsuper"
    Print #lInt_FreeFile01, "bharat"
    Print #lInt_FreeFile01, "binary"
    Print #lInt_FreeFile01, "send " & strDirectoryList & " /var/opt/mediation/MMStorage3/itt/" & MyFileName
    Print #lInt_FreeFile01, "rename  /var/opt/mediation/MMStorage3/itt/" & MyFileName & "  /var/opt/mediation/MMStorage3/itt/itt_" & MyFileName
    Print #lInt_FreeFile01, "bye"
    Close #lInt_FreeFile01

    '' Create text file with FTP get commands
    Open strDirectoryList & "2.txt" For Output As #lInt_FreeFile03
    Print #lInt_FreeFile03, "open " & myURL
    Print #lInt_FreeFile03, "mmsuper"
    Print #lInt_FreeFile03, "bharat"
    Print #lInt_FreeFile03, "binary"
    Print #lInt_FreeFile03, "cd /var/opt/mediation/MMStorage3/itt"
    Print #lInt_FreeFile03, "lcd " & Left(MyPath, Len(MyPath) - 1)
    Print #lInt_FreeFile03, "prompt"
    Print #lInt_FreeFile03, "mget " & MyFileName2
    Print #lInt_FreeFile03, "bye"
    Close #lInt_FreeFile03

    '' Create Batch program FTP put
    Open strDirectoryList & ".bat" For Output As #lInt_FreeFile02
    Print #lInt_FreeFile02, "ftp -s:" & strDirectoryList & ".txt"
    Print #lInt_FreeFile02, "Echo ""Complete"" > " & strDirectoryList & ".out"
    Close #lInt_FreeFile02

    '' Create Batch program FTP get
    Open strDirectoryList & "2.bat" For Output As #lInt_FreeFile04
    Print #lInt_FreeFile04, "ftp -s:" & strDirectoryList & "2.txt"
    Print #lInt_FreeFile04, "Echo ""Complete"" > " & strDirectoryList & "2.out"
    Close #lInt_FreeFile04

    '' Invoke FTP put
    cmd = strDirectoryList & ".bat"
    Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
    'Wait for completion
    Do While Dir(strDirectoryList & ".out") = ""
        DoEvents
    Loop

    '' Invoke FTP get
    i = 0
    Do While Dir(MyPath & MyFileName2) = "" And i < wit
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        cmd = strDirectoryList & "2.bat"
        Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
        Do While Dir(strDirectoryList & "2.out") = ""
            DoEvents
        Loop
        Application.Wait (Now + TimeValue("0:00:01"))
        i = i + 1
        Application.StatusBar = stat & " EMM ITT Tool executing simulation... Timeout: " & wit - i & " sec"
    Loop

    '' Invoke FTP delete
    If (Dir(MyPath & MyFileName2) <> "") Then
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey e6:21:37:3d:66:7a:78:6c:be:a6:6c:bd:e0:96:5a:b6 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey 25:2c:8a:7c:a3:d1:11:ae:5d:10:b1:0b:8f:3d:37:06 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        
        '' Clean up files
        If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
        If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
        If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        CopyToCSV2 = "good"
    Else
        '' Clean up files
        If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
        If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
        If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        CopyToCSV2 = wit & " sec timeout. The results file /var/opt/mediation/MMStorage3/itt/" & MyFileName2 & " is missing from EMM " & myURL & "."
    End If

bye:
    Exit Function

Err_Handler:
    '' Clean up files
    If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
    If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
    If Dir(MyPath & MyFileName2) <> "" Then
        If AlreadyOpen(Dir(MyPath & MyFileName2)) Then
            Workbooks(Dir(MyPath & MyFileName2)).Close SaveChanges:=False
        End If
        Kill (MyPath & MyFileName2)
    End If
    CopyToCSV2 = "Error : " & Err.Number & vbCrLf & "Description : " & Err.Description
    Resume bye

End Function
Function WORDDIF(rngA As Range, rngB As Range) As String
    
    'Remove linefeed characters and exclude parentheticals
    
    Dim WordsA As Variant, WordsB As Variant
    Dim ndxA As Long, ndxB As Long, strTemp As String
            
    WordsA = Split(Replace(rngA.Text, vbLf, " "), " ")  'remove linefeed
    WordsB = Split(Replace(rngB.Text, vbLf, " "), " ")  'remove linefeed
    
    For ndxB = LBound(WordsB) To UBound(WordsB)
        For ndxA = LBound(WordsA) To UBound(WordsA)
            If StrComp(WordsA(ndxA), WordsB(ndxB), vbTextCompare) = 0 Then
                WordsA(ndxA) = vbNullString
                Exit For
            End If
        Next ndxA
    Next ndxB
    
    For ndxA = LBound(WordsA) To UBound(WordsA)
        'Exclude parentheticals
        If Not WordsA(ndxA) Like "(*)" Then strTemp = strTemp & WordsA(ndxA) & " "
    Next ndxA
    
    WORDDIF = Application.Trim(strTemp)
    
End Function

Sub CopyToCSV3()
Dim strCommand As String
Dim strPing As String
Dim MyPath As String, myURL As String
Dim MyFileName As String
Dim MyFileName2 As String, MyFileName3 As String
Dim LRandomNumber As Integer
Dim strDirectoryList As String
Dim lInt_FreeFile01 As Integer
Dim lInt_FreeFile02 As Integer
Dim lInt_FreeFile03 As Integer
Dim lInt_FreeFile04 As Integer
Dim i As Integer, rw As Integer
Dim wbCopyTo As Workbook
Dim wsCopyTo As Worksheet
Dim wbCopyFrom As Workbook
Dim wsCopyFrom As Worksheet
Dim cmd As String, sms As String
Dim sdpip As String, smstrace As String, hoskey As String
Dim plink As String, usern As String, passw As String, tcpdum As String, formattrace As String

Application.DisplayStatusBar = True
Application.ScreenUpdating = False

Set wbCopyTo = ThisWorkbook
Set wsCopyTo = wbCopyTo.ActiveSheet

myURL = "10.25.77.240"
strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myURL & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
strPing = fShellRun(strCommand)

If strPing = "" Then
    myURL = "5.232.86.78"
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & myURL & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "Aborted, Lab ITT Tool unreachable! Check your VPN connection or the lab EMM application."
        Set wsCopyTo = Nothing
        Set wbCopyTo = Nothing
        Application.StatusBar = False
        Application.ScreenUpdating = True
        Exit Sub
    End If
End If

'Check SDP connectivity to save tariff traces
smstrace = wbCopyTo.Worksheets("SDPTraceCfg").Range("B2").Value
plink = wbCopyTo.Worksheets("SDPTraceCfg").Range("B3").Value
sdpip = wbCopyTo.Worksheets("SDPTraceCfg").Range("B5").Value
hoskey = Application.WorksheetFunction.VLookup(sdpip, wbCopyTo.Worksheets("SDPTraceCfg").Range("M4:N504"), 2, 0)
sdpip = Mid(sdpip, InStr(sdpip, "(") + 1, Len(sdpip) - InStr(sdpip, "(") - 1)
usern = "root"
passw = wbCopyTo.Worksheets("SDPTraceCfg").Range("B6").Value
tcpdum = "/opt/temp/itt/tcpdump_smpp.ksh"
formattrace = "/opt/temp/itt/format_smpptrace.ksh"
If smstrace = "Yes" And sdpip <> "" Then
    Application.StatusBar = "Checking SDP (" & sdpip & ") connection for SMS notification validation..."
    strCommand = "%ComSpec% /C %SystemRoot%\system32\ping.exe -n 1 -w 3000 " & sdpip & " | " & "%SystemRoot%\system32\find.exe /i " & Chr(34) & "TTL=" & Chr(34)
    strPing = fShellRun(strCommand)
    If strPing = "" Then
        MsgBox "SDP " & sdpip & " is unreachable. SMS notification will not be validated. Check your NMNet VPN connection."
        smstrace = ""
    Else
        If Dir(plink) = "" Then
            MsgBox "PuTTY Link client not found (" & plink & "). SMS notification will not be validated. Check SDPTrace configuration tab."
            smstrace = ""
        End If
    End If
Else
    smstrace = ""
End If

'The path and file names:
'MyPath = CreateObject("Wscript.Shell").SpecialFolders("MyDocuments")
MyPath = Environ("temp")
If Not Right(MyPath, 1) = "\" Then MyPath = MyPath & "\"

Randomize
LRandomNumber = Int((999 - 100 + 1) * Rnd + 100)
MyFileName = "temp" & CStr(LRandomNumber) & ".csv"
MyFileName2 = "done_*temp" & CStr(LRandomNumber) & "*.csv"
MyFileName3 = "temp" & CStr(LRandomNumber) & "-" & Format(Now(), "hhnnss") & ".csv"

'Copies the sheet to a new workbook:
wsCopyTo.Copy

'The new workbook becomes Activeworkbook:
With ActiveWorkbook
'Saves the new workbook to given folder / filename:
    .Sheets(1).UsedRange.Value = .Sheets(1).UsedRange.Value
    .Sheets(1).Range(.Sheets(1).Cells(4, 1), .Sheets(1).Cells(.Sheets(1).UsedRange.Rows.Count, 1)).Value = ""
    .Sheets(1).Range(.Sheets(1).Cells(4, 10), .Sheets(1).Cells(.Sheets(1).UsedRange.Rows.Count, 20)).Value = ""
    .SaveAs Filename:= _
        MyPath & MyFileName, _
        FileFormat:=xlCSV, _
        CreateBackup:=False
'Closes the file
    .Close False
End With

On Error GoTo Err_Handler
    lInt_FreeFile01 = FreeFile
    lInt_FreeFile02 = FreeFile
    lInt_FreeFile03 = FreeFile
    lInt_FreeFile04 = FreeFile
    lInt_FreeFile05 = FreeFile
    lInt_FreeFile06 = FreeFile
    
    '' ANW  07-Feb-2003 :
    strDirectoryList = MyPath & MyFileName

    '' Delete completion file
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")

    '' Create text file with FTP put commands
    Open strDirectoryList & ".txt" For Output As #lInt_FreeFile01
    Print #lInt_FreeFile01, "open " & myURL
    Print #lInt_FreeFile01, "mmsuper"
    Print #lInt_FreeFile01, "bharat"
    Print #lInt_FreeFile01, "binary"
    Print #lInt_FreeFile01, "send " & strDirectoryList & " /var/opt/mediation/MMStorage3/itt/" & MyFileName
    Print #lInt_FreeFile01, "rename  /var/opt/mediation/MMStorage3/itt/" & MyFileName & "  /var/opt/mediation/MMStorage3/itt/itt_" & MyFileName
    Print #lInt_FreeFile01, "bye"
    Close #lInt_FreeFile01

    '' Create text file with FTP get commands
    Open strDirectoryList & "2.txt" For Output As #lInt_FreeFile03
    Print #lInt_FreeFile03, "open " & myURL
    Print #lInt_FreeFile03, "mmsuper"
    Print #lInt_FreeFile03, "bharat"
    Print #lInt_FreeFile03, "binary"
    Print #lInt_FreeFile03, "cd /var/opt/mediation/MMStorage3/itt"
    Print #lInt_FreeFile03, "lcd " & Left(MyPath, Len(MyPath) - 1)
    Print #lInt_FreeFile03, "prompt"
    Print #lInt_FreeFile03, "mget " & MyFileName2
    Print #lInt_FreeFile03, "bye"
    Close #lInt_FreeFile03

    '' Create Batch program FTP put
    Open strDirectoryList & ".bat" For Output As #lInt_FreeFile02
    Print #lInt_FreeFile02, "ftp -s:" & strDirectoryList & ".txt"
    Print #lInt_FreeFile02, "Echo ""Complete"" > " & strDirectoryList & ".out"
    Close #lInt_FreeFile02

    '' Create Batch program FTP get
    Open strDirectoryList & "2.bat" For Output As #lInt_FreeFile04
    Print #lInt_FreeFile04, "ftp -s:" & strDirectoryList & "2.txt"
    Print #lInt_FreeFile04, "Echo ""Complete"" > " & strDirectoryList & "2.out"
    Close #lInt_FreeFile04

    'Start SDP SMS tcpdump
    If smstrace = "Yes" Then
        Application.StatusBar = "Starting SDP SMS tcpdump..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & tcpdum & " " & MyFileName3
        Call Shell(cmd, vbHide)
    End If

    '' Invoke FTP put
    Application.StatusBar = "Sending CSV test cases to ITT Tool..."
    cmd = strDirectoryList & ".bat"
    Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
    'Wait for completion
    Do While Dir(strDirectoryList & ".out") = ""
        DoEvents
    Loop

    '' Invoke FTP get
    i = 0
    Do While Dir(MyPath & MyFileName2) = "" And i < wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        cmd = strDirectoryList & "2.bat"
        Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
        Do While Dir(strDirectoryList & "2.out") = ""
            DoEvents
        Loop
        Application.Wait (Now + TimeValue("0:00:01"))
        i = i + 1
        Application.StatusBar = "EMM ITT Tool executing simulation... Timeout: " & wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value - i & " sec"
    Loop

    '' Invoke FTP delete
    If (Dir(MyPath & MyFileName2) <> "") Then
        Application.StatusBar = "Writing test results..."
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey e6:21:37:3d:66:7a:78:6c:be:a6:6c:bd:e0:96:5a:b6 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        cmd = """" & plink & """ -ssh -l mmsuper -pw bharat -batch -hostkey 25:2c:8a:7c:a3:d1:11:ae:5d:10:b1:0b:8f:3d:37:06 " & myURL & " rm -f /var/opt/mediation/MMStorage3/itt/" & MyFileName2
        Call Shell(cmd, vbHide)
        
        wsCopyTo.Range(wsCopyTo.Cells(4, 11), wsCopyTo.Cells(wsCopyTo.UsedRange.Rows.Count, 16)).Value = ""
        
        'Open file with data to be copied
        Set wbCopyFrom = Workbooks.Open(MyPath & Dir(MyPath & MyFileName2))
        Set wsCopyFrom = wbCopyFrom.Worksheets(1)
    
        'Copy Range
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 1), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 1)).Copy
        wsCopyTo.Range("B4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 2), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 3)).Copy
        wsCopyTo.Range("K4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
    
        wsCopyFrom.Range(wsCopyFrom.Cells(4, 4), wsCopyFrom.Cells(wsCopyFrom.UsedRange.Rows.Count + 1, 5)).Copy
        wsCopyTo.Range("N4").PasteSpecial Paste:=xlPasteValues, _
        Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
        'Close file that was opened
        wbCopyFrom.Close SaveChanges:=False

        Set wbCopyFrom = Nothing
        Set wsCopyFrom = Nothing
        
        'Stop SDP SMS tcpdump
        If smstrace = "Yes" Then
            'Application.StatusBar = "Stopping SDP SMS tcpdump..."
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
            Call Shell(cmd, vbHide)
            
            Application.Wait (Now + TimeValue("0:00:04"))
            '' Create text file with FTP get commands
            Open strDirectoryList & "3.txt" For Output As #lInt_FreeFile05
            Print #lInt_FreeFile05, "open " & sdpip
            Print #lInt_FreeFile05, "ittuser"
            Print #lInt_FreeFile05, "ittuser"
            Print #lInt_FreeFile05, "binary"
            Print #lInt_FreeFile05, "get /opt/temp/itt/traces/" & MyFileName3 & " " & MyPath & MyFileName3
            Print #lInt_FreeFile05, "bye"
            Close #lInt_FreeFile05
    
            '' Create Batch program FTP get
            Open strDirectoryList & "3.bat" For Output As #lInt_FreeFile06
            Print #lInt_FreeFile06, "ftp -s:" & strDirectoryList & "3.txt"
            Print #lInt_FreeFile06, "Echo ""Complete"" > " & strDirectoryList & "3.out"
            Close #lInt_FreeFile06
            
            '' Invoke FTP get
            i = 0
            Do While Dir(MyPath & MyFileName3) = "" And i < 10
                If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
                cmd = strDirectoryList & "3.bat"
                Call Shell(cmd, vbHide) ', vbMinimizedNoFocus
                Do While Dir(strDirectoryList & "3.out") = ""
                    DoEvents
                Loop
                Application.Wait (Now + TimeValue("0:00:01"))
                i = i + 1
                Application.StatusBar = "Stopping SDP SMS tcpdump..."
            Loop
            
            'Open file with data to be copied
            Application.StatusBar = "Validating SMS notification..."
            Set wbCopyFrom = Workbooks.Open(MyPath & Dir(MyPath & MyFileName3))
            Set wsCopyFrom = wbCopyFrom.Worksheets(1)

            If Application.CountA(wsCopyFrom.Columns("A")) > 1 Then
                rw = wsCopyFrom.UsedRange.Rows.Count
            Else
                rw = 1
            End If
            For i = 4 To wsCopyTo.UsedRange.Rows.Count
                If Application.CountA(wsCopyFrom.Columns("A")) > 0 And wsCopyTo.Cells(i, 5).Value <> "" Then
                    wsCopyTo.Cells(i, 13).Value = VLookupAll("a1" & wsCopyTo.Cells(i, 2).Value, wsCopyFrom.Range("A1:A" & rw), 2)
                End If
                If wsCopyTo.Cells(i, 13).Value <> wsCopyTo.Cells(i, 10).Value And Not wsCopyTo.Cells(i, 13).Value Like wsCopyTo.Cells(i, 10).Value Then
                    If wsCopyTo.Cells(i, 14).Value = "PASS" Or wsCopyTo.Cells(i, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(i, 14).Value Like "* done.*" Then
                        wsCopyTo.Cells(i, 14).Value = "FAIL. SMS Notification result unexpected."
                    Else
                        wsCopyTo.Cells(i, 14).Value = wsCopyTo.Cells(i, 14).Value & vbLf & "Also, SMS Notification result is unexpected."
                    End If
                ElseIf wsCopyTo.Cells(i, 14).Value Like "*Successful.*" Or wsCopyTo.Cells(i, 14).Value Like "* done.*" Then
                    wsCopyTo.Cells(i, 14).Value = "PASS"
                End If
            Next
            
            'Close file that was opened
            wbCopyFrom.Close SaveChanges:=False
            
            Set wbCopyFrom = Nothing
            Set wsCopyFrom = Nothing
            
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
            Call Shell(cmd, vbHide)
        End If
        
        '' Clean up files
        If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
        If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
        If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        If Dir(strDirectoryList & "3.bat") <> "" Then Kill (strDirectoryList & "3.bat")
        If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
        If Dir(strDirectoryList & "3.txt") <> "" Then Kill (strDirectoryList & "3.txt")
        If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
        If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        If Dir(MyPath & MyFileName3) <> "" Then Kill (MyPath & MyFileName3)
        
        Application.StatusBar = "Simulation completed successfully."
        Application.ScreenUpdating = True
        Sleep 500
        wsCopyTo.Range("N1").Select
        AppActivate Application.Caption
        MsgBox "Simulation complete. " & CStr(WorksheetFunction.CountIf(wsCopyTo.Columns("N"), "*FAIL*") + WorksheetFunction.CountIf(wsCopyTo.Columns("N"), "*Provisioning Error.*")) & " of " & CStr(Application.CountA(wsCopyTo.Columns("B")) - 2) & " test case(s) FAILED. Check 'Test Result' column."
    Else
        'Stop SDP SMS tcpdump
        If smstrace = "Yes" Then
            Application.StatusBar = "Stopping SDP SMS tcpdump..."
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
            Call Shell(cmd, vbHide)
            Application.Wait (Now + TimeValue("0:00:04"))
            cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
            Call Shell(cmd, vbHide)
        End If
        
        '' Clean up files
        If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
        If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
        If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
        If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
        If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
        If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
        If Dir(strDirectoryList & "3.bat") <> "" Then Kill (strDirectoryList & "3.bat")
        If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
        If Dir(strDirectoryList & "3.txt") <> "" Then Kill (strDirectoryList & "3.txt")
        If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
        If Dir(MyPath & MyFileName2) <> "" Then Kill (MyPath & MyFileName2)
        If Dir(MyPath & MyFileName3) <> "" Then Kill (MyPath & MyFileName3)
        
        Application.StatusBar = "Simulation error."
        Application.ScreenUpdating = True
        Sleep 500
        wsCopyTo.Range("N1").Select
        AppActivate Application.Caption
        MsgBox wbCopyTo.Worksheets("SDPTraceCfg").Range("B10").Value & " sec timeout. The results file /var/opt/mediation/MMStorage3/itt/" & MyFileName2 & " is missing from EMM " & myURL & "."
    End If

bye:
    Set wsCopyTo = Nothing
    Set wbCopyTo = Nothing
    Application.StatusBar = False
    Exit Sub

Err_Handler:
    'Stop SDP SMS tcpdump
    If smstrace = "Yes" Then
        Application.StatusBar = "Stopping SDP SMS tcpdump..."
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " " & formattrace & " " & MyFileName3
        Call Shell(cmd, vbHide)
        Application.Wait (Now + TimeValue("0:00:04"))
        cmd = """" & plink & """ -ssh -l " & usern & " -pw " & passw & " -batch -hostkey " & hoskey & " " & sdpip & " rm /opt/temp/itt/traces/" & MyFileName3
        Call Shell(cmd, vbHide)
    End If
    
    '' Clean up files
    If Dir(strDirectoryList & ".bat") <> "" Then Kill (strDirectoryList & ".bat")
    If Dir(strDirectoryList & ".out") <> "" Then Kill (strDirectoryList & ".out")
    If Dir(strDirectoryList & ".txt") <> "" Then Kill (strDirectoryList & ".txt")
    If Dir(strDirectoryList & "2.bat") <> "" Then Kill (strDirectoryList & "2.bat")
    If Dir(strDirectoryList & "2.out") <> "" Then Kill (strDirectoryList & "2.out")
    If Dir(strDirectoryList & "2.txt") <> "" Then Kill (strDirectoryList & "2.txt")
    If Dir(strDirectoryList & "3.bat") <> "" Then Kill (strDirectoryList & "3.bat")
    If Dir(strDirectoryList & "3.out") <> "" Then Kill (strDirectoryList & "3.out")
    If Dir(strDirectoryList & "3.txt") <> "" Then Kill (strDirectoryList & "3.txt")
    If Dir(strDirectoryList) <> "" Then Kill (strDirectoryList)
    If Dir(MyPath & MyFileName2) <> "" Then
        If AlreadyOpen(Dir(MyPath & MyFileName2)) Then
            Workbooks(Dir(MyPath & MyFileName2)).Close SaveChanges:=False
        End If
        Kill (MyPath & MyFileName2)
    End If
    If Dir(MyPath & MyFileName3) <> "" Then
        If AlreadyOpen(Dir(MyPath & MyFileName3)) Then
            Workbooks(Dir(MyPath & MyFileName3)).Close SaveChanges:=False
        End If
        Kill (MyPath & MyFileName3)
    End If
    
    Application.ScreenUpdating = True
    wsCopyTo.Range("N1").Select
    AppActivate Application.Caption
    MsgBox "Error : " & Err.Number & vbCrLf & "Description : " & Err.Description, vbCritical
    Resume bye

End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
