Attribute VB_Name = "Bookmarks"


Sub FillBookmark(doc1 As Document, strBookmarkname As String, strText As String)
'On Error Resume Next
' Bookmarkname muss als Bookmark dimensioniert sein (beim aufrufenden Modul)

    Dim r1 As Range
    Dim objBookmark As Bookmark
    Set objBookmark = doc1.Bookmarks(strBookmarkname)
    Set r1 = objBookmark.Range
    r1.Text = strText
    r1.Bookmarks.Add strBookmarkname, r1
    
End Sub


'Liefert einen "sauberen String zur|fffd|ck. N|fffd|tig wenn der Bookmark in einer Tabellenzelle steht.
Function TextBookmark(doc1 As Document, myBookmark As String, inCell As Boolean)
On Error Resume Next
Dim r1 As Range
    Set r1 = ActiveDocument.Bookmarks(myBookmark).Range
    If inCell Then
        r1.SetRange r1.Start, r1.End - 1
    End If
    On Error GoTo ZuLange
    TextBookmark = CleanString(r1.Text)
    Exit Function
ZuLange:
TextBookmark = r1.Text
Exit Function
End Function


Attribute VB_Name = "CellFinding"

Function ReturnFirstCellofRange(doc1 As Document, strBookmark As String) As Cell
Dim r1 As Range
Dim c1 As Cell

Set ReturnFirstCellofRange = Nothing
    If doc1.Bookmarks.Exists(strBookmark) Then
        Set r1 = doc1.Bookmarks(strBookmark).Range
        If r1.Cells.Count >= 1 Then
            Set c1 = r1.Cells(1)
            Set ReturnFirstCellofRange = c1
        End If
    End If
End Function

Attribute VB_Name = "ChangesDialog"
Sub ChangeLanguage(strLanguage2)
Dim strText As String
Dim intClass As Integer
Dim strClass As String
Dim j As Integer
' Change Coypright
' Find first "."
With dlgTechnicalSpecification
    strText = .tbCopyright
    If InStr(1, .tbCopyright, ". ") > 0 Then
        strText = Left(.tbCopyright, InStr(1, .tbCopyright, ". ") + 1) & Language_AllRightsReserved(strLanguage2)
        .tbCopyright = strText
    End If
    
' Change Doucment Class
    intClass = .cbDocumentClass.ListIndex
    strClass = .cbDocumentClass.Text
    

    
    Select Case UCase(strLanguage2)
        Case UCase("German")
           j = 2
        Case UCase("French")
           j = 3
        Case UCase("Italian")
           j = 4
        Case UCase("Spanish")
           j = 5
        Case UCase("Russian")
           j = 6
        Case Else
           j = 1
    End Select
    .cbDocumentClass.Clear
        
    For i = 1 To 3
     .cbDocumentClass.AddItem arrDocumentClassification(i, j)
    Next
    If intClass <> -1 Then
        .cbDocumentClass.ListIndex = intClass
    Else
        .cbDocumentClass.Text = strClass
    End If
End With
        
    
End Sub
Attribute VB_Name = "Confidentiality"
Attribute VB_Name = "Document_FIll"
Public strCompanyShort As String
Public strLanguage As String

Sub Fill_DocumentFromDialog(doc1 As Document)
Dim strStyleName As String
Dim strValue As String
Dim strLanguage As String
Dim strHelp1 As String
Dim strHelp2 As String
Dim bolHavetoChangeConfidentialityStatement As Boolean

On Error Resume Next
strLanguage = "NONE"
bolHavetoChangeConfidentialityStatement = False
With dlgTechnicalSpecification
' Have to change Confidentiality Statement (Change of Company)
    strHelp1 = .tbCompany
    strHelp2 = readCustomDocumentPropertyDirty(doc1, "MT_TSP_MTCompany")
    If strHelp1 <> strHelp2 Then
        If CompanyShortName(strHelp1) <> CompanyShortName(strHelp2) Then
            bolHavetoChangeConfidentialityStatement = True
        End If
    End If


' Cover page

    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Customerlong", .tbCustomerLong.Text
    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Projectlocation", .tbProjectLocation.Text
    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_ProjectNameLong", .tbProjectNameLong.Text
    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_ProjectNameLong2", .tbProjectNameLong2.Text
    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_DocumentTitle", .tbDocumentTitle.Text
    WriteCustomDocumentPropertyDirty doc1, "MT_TSP_DocumentTitle2", .tbDocumentTitle2.Text

' Each page
    ' Header
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Customer", .tbCustomer.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_ProjectName", .tbProjectname.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_DocumentType", .tbDocumentType.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_StandardStructure", .tbStandardStructure.Text
    ' Footer
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Revision", .tbRevision.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_ProjectCode", .tbProjectCode.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Date", .tbDate.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_Copyright", .tbCopyright.Text
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_ProductVersion", .tbProductVersion.Text
        If .cbDocumentClass.Value <> "" Then
            WriteCustomDocumentPropertyDirty doc1, "MT_TSP_DocumentClassification", .cbDocumentClass.Text
        End If
    ' Not Visible
        If .tbCompany.Value <> "" Then
            WriteCustomDocumentPropertyDirty doc1, "MT_TSP_MTCompany", .tbCompany.Text
        End If
        WriteCustomDocumentPropertyDirty doc1, "MT_TSP_MTCompanyAddress", .tbLegalAddress.Text

' Settings
' Watermark
    If .obWatermarkUse Then
        strValue = .tbWatermark
        WriteWatermark doc1, strValue
    End If

    If .obTOCUse Then
        If doc1.TablesOfContents.Count >= 1 Then
            doc1.TablesOfContents(1).UseHeadingStyles = True
            doc1.TablesOfContents(1).UpperHeadingLevel = 1
            doc1.TablesOfContents(1).LowerHeadingLevel = .cbTOCLevels.Value
        End If
    End If
    
' Stylereference in Header
    If .obStyleUseHeading Then
        strStyleName = .cbStyle
        If InStr(1, strStyleName, "SCS") > 0 Then
            insertStyleReferenceinDocument ActiveDocument, strStyleName, False, 2
        Else
            insertStyleReferenceinDocument ActiveDocument, strStyleName, True, 2
        End If
            
    ElseIf .obStyleNone Then
        deleteStyleReferenceinDocument ActiveDocument, 2
    End If
    
    If .obLogoSiemens Then
        InsertLogo doc1, "Siemens"
    ElseIf .obLogoSiemensVAI Then
        InsertLogo doc1, "SiemensVAI"
    ElseIf .obLogoMorgan Then
        InsertLogo doc1, "Morgan"
    End If
        
' Translated Document parts
If .obLanguageEnglish Then
    strLanguage = "English"
ElseIf .obLanguageFrench Then
    strLanguage = "French"
ElseIf .obLanguageGerman Then
    strLanguage = "German"
ElseIf .obLanguageItalian Then
    strLanguage = "Italian"
ElseIf .obLanguageRussian Then
    strLanguage = "Russian"
ElseIf .obLanguageSpanish Then
    strLanguage = "Spanish"
ElseIf .obLanguageNoChanges Then
    strLanguage = "NONE"
Else
    strLanguage = "NONE"
End If
    
If strLanguage <> "NONE" Then
    WriteCustomDocumentPropertyDirty doc1, "MTLanguage", strLanguage
    strCompanyShort = CompanyShortName(.tbCompany)
' page
    If doc1.Bookmarks.Exists("Page") Then
        FillBookmark doc1, "Page", Language_Page(strLanguage)
    End If
' Revision Short (First page)
    If doc1.Bookmarks.Exists("Rev1") Then
        FillBookmark doc1, "Rev1", Language_Rev(strLanguage)
    End If
' Revision Short (Other page)
    If doc1.Bookmarks.Exists("Rev2") Then
        FillBookmark doc1, "Rev2", Language_Rev(strLanguage)
    End If
' Table of Contents
    If doc1.Bookmarks.Exists("TableOfContents") Then
        FillBookmark doc1, "TableOfContents", Language_TableOfContents(strLanguage)
    End If
' Interlectual Property heading
    If doc1.Bookmarks.Exists("Confidentiality") Then
        FillBookmark doc1, "Confidentiality", Language_InterlectualPropertyHeading(strLanguage)
    End If
' Interlectual Property
    If doc1.Bookmarks.Exists("Confidential") Then
        Select Case UCase(strCompanyShort)
            Case UCase("Siemens")
                strHelp = Language_Siemens(strLanguage)
            Case UCase("Morgan")
                strHelp = Language_Morgan(strLanguage)
            Case Else
                strHelp = Language_SiemensVAI(strLanguage)
        End Select
        FillBookmark doc1, "Confidential", Language_InterlectualPropertyStatement(strHelp, strLanguage)
    End If
' Revision History
    If doc1.Bookmarks.Exists("RevisionHistory") Then
        FillBookmark doc1, "RevisionHistory", Language_RevisionHistory(strLanguage)
    End If
' Revision
    If doc1.Bookmarks.Exists("Revision") Then
        FillBookmark doc1, "Revision", Language_Revision(strLanguage)
    End If
    
' Date
    If doc1.Bookmarks.Exists("Date") Then
        FillBookmark doc1, "Date", Language_Date(strLanguage)
    End If
    
' Changes
    If doc1.Bookmarks.Exists("Changes") Then
        FillBookmark doc1, "Changes", Language_Changes(strLanguage)
    End If
'    doc1.Bookmarks("bmLegalAddress").Range.Text = .tbLegalAddress
    doc1.Range.LanguageID = Language_LanguageID(strLanguage)
ElseIf bolHavetoChangeConfidentialityStatement Then
    strCompanyShort = CompanyShortName(.tbCompany)
    strLanguage = readCustomDocumentPropertyDirty(doc1, "MTLanguage")
' Interlectual Property
    If doc1.Bookmarks.Exists("Confidential") Then
        Select Case UCase(strCompanyShort)
            Case UCase("Siemens")
                strHelp = Language_Siemens(strLanguage)
            Case UCase("Morgan")
                strHelp = Language_Morgan(strLanguage)
            Case Else
                strHelp = Language_SiemensVAI(strLanguage)
        End Select
        FillBookmark doc1, "Confidential", Language_InterlectualPropertyStatement(strHelp, strLanguage)
    End If
 End If

If .obSizeA4 Then
    PageSetup2A4 doc1
ElseIf .obSizeLetter Then
    PageSetup2Letter doc1
End If
End With
UpdateFieldsInDocument doc1
End Sub

Sub UpdateFieldsInDocument(doc1 As Document)
Dim sec As Section
    On Error Resume Next
    doc1.Fields.Update
    doc1.Sections(1).Footers(wdHeaderFooterFirstPage).Range.Fields.Update
    doc1.Sections(1).Headers(wdHeaderFooterPrimary).Range.Fields.Update
    doc1.Sections(2).Headers(wdHeaderFooterPrimary).Range.Fields.Update
    doc1.Sections(2).Footers(wdHeaderFooterPrimary).Range.Fields.Update
For i = 3 To doc1.Sections.Count
    If doc1.Sections(i).Headers(wdHeaderFooterPrimary).LinkToPrevious = False Then
        doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Fields.Update
    End If
    If doc1.Sections(i).Footers(wdHeaderFooterPrimary).LinkToPrevious = False Then
        doc1.Sections(i).Footers(wdHeaderFooterPrimary).Range.Fields.Update
    End If
Next
End Sub



Sub WriteCustomDocumentPropertyDirty(doc1 As Document, strPropertyName As String, strPropertyValue As String)
On Error Resume Next
doc1.CustomDocumentProperties.Add Name:=strPropertyName, LinkToContent:=False, Value:=strPropertyValue, Type:=msoPropertyTypeString
doc1.CustomDocumentProperties(strPropertyName).Value = strPropertyValue

End Sub

Attribute VB_Name = "Document_Read"

Sub Read_Document(doc1 As Document)
With dlgTechnicalSpecification
' Cover page
 .tbCustomerLong.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Customerlong")
 .tbProjectLocation.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Projectlocation")
 .tbProjectNameLong.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_ProjectNameLong")
 .tbProjectNameLong2.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_ProjectNameLong2")
 .tbDocumentTitle.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_DocumentTitle")
 .tbDocumentTitle2.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_DocumentTitle2")
    

' each pages
    ' header
    .tbCustomer.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Customer")
    .tbProjectname.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_ProjectName")
    .tbDocumentType.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_DocumentType")
    .tbStandardStructure.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_StandardStructure")
    
    ' Style reference
    .obStyleNoChanges = True
    
    ' Footer
    .tbRevision.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Revision")
    .tbProjectCode.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_ProjectCode")
    .tbDate.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Date")
    .tbCopyright.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_Copyright")
    .tbProductVersion.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_ProductVersion")
    .tbCompany.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_MTCompany")
    .tbLegalAddress.Text = readCustomDocumentPropertyDirty(doc1, "MT_TSP_MTCompanyAddress")
    .cbDocumentClass.Value = readCustomDocumentPropertyDirty(doc1, "MT_TSP_DocumentClassification")
 

' Settings
    ' Watermark
    strText = WatermarkValue(doc1)
    .tbWatermark = strText
    .tbWatermark.Enabled = False
    .obWatermarkNoChanges = True

    ' Language
    .obLanguageNoChanges = True
    strLanguange = readCustomDocumentPropertyDirty(doc1, "MTLanguage")
    If strLanguage = "" Then
        strLanguage = "English"
    End If
    ' Size
    .obSizeNoChanges = True
    
    ' Logo
    .obLogoNoChanges = True
    
    ' TOC
    .obTOCNoChanges = True
 
End With
End Sub


Function readCustomDocumentPropertyDirty(doc1 As Document, strPropertyName As String)
Dim strResult As String
strResult = ""
On Error Resume Next
strResult = doc1.CustomDocumentProperties(strPropertyName).Value
readCustomDocumentPropertyDirty = strResult

End Function

Function BookmarkText(doc1 As Document, strBookmark As String, bolBookmarkIsCell As Boolean)
Dim strResult As String
Dim r1 As Range

strResult = ""
Set r1 = doc1.Bookmarks(strBookmark).Range
If r1 Is Nothing Then
    strResult = ""
    Exit Function
Else
    If bolBookmarkIsCell Then
        r1.SetRange r1.Start, r1.End - 1
    End If
    strResult = r1.Text
End If
    BookmarkText = strResult

    
    

On Error Resume Next

End Function
Attribute VB_Name = "Fill_DropDownBoxes"
Option Explicit
Public arrDocumentClassification(1 To 3, 1 To 6)
Public arrStyles(1 To 14)
Public arrTOCLevels(1 To 7)
Public arrCompanyName(1 To 8)
Public arrCompanyNameEN(1 To 8)

Sub setDocumentClassification()
Dim strLanguage2 As String
Dim i As Integer
strLanguage2 = "English"
i = 1
    arrDocumentClassification(1, 1) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, 1) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, 1) = Language_StrictlyConfidential(strLanguage2)
strLanguage2 = "German"
i = 2
    arrDocumentClassification(1, i) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, i) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, i) = Language_StrictlyConfidential(strLanguage2)
strLanguage2 = "French"
i = 3
    arrDocumentClassification(1, i) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, i) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, i) = Language_StrictlyConfidential(strLanguage2)
strLanguage2 = "Italien"
i = 4
    arrDocumentClassification(1, i) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, i) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, i) = Language_StrictlyConfidential(strLanguage2)
strLanguage2 = "Spanish"
i = 5
    arrDocumentClassification(1, i) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, i) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, i) = Language_StrictlyConfidential(strLanguage2)
strLanguage2 = "Russian"
i = 6
    arrDocumentClassification(1, i) = Language_ForInternalUseOnly(strLanguage2)
    arrDocumentClassification(2, i) = Language_Confidential(strLanguage2)
    arrDocumentClassification(3, i) = Language_StrictlyConfidential(strLanguage2)
End Sub

Sub setTOCLevel()
Dim i
    For i = 1 To 7
        arrTOCLevels(i) = i
    Next
End Sub

Sub setLevel()
Dim i
    For i = 1 To 7
        arrStyles(i) = "_MTHeading" & i
    Next
    For i = 1 To 7
        arrStyles(i + 7) = "_MTHeading_SCS_" & i
    Next
End Sub

Function CompanyShortName(strCompanyLongname_OrCopyright As String) As String
Dim strHelp As String
strHelp = "Siemens VAI"
    If InStr(1, strCompanyLongname_OrCopyright, "Siemens VAI") > 0 Then
        strHelp = "Siemens VAI"
    ElseIf InStr(1, strCompanyLongname_OrCopyright, "Siemens AG") > 0 Then
        strHelp = "Siemens"
    ElseIf InStr(1, strCompanyLongname_OrCopyright, "Morgan") > 0 Then
        strHelp = "Morgan"
    Else
        strHelp = "Siemens VAI"
    End If
CompanyShortName = strHelp
End Function

Sub CompanyNamesArray()
arrCompanyName(1) = "MT ATL"
arrCompanyName(2) = "MT GEE"
arrCompanyName(3) = "MT GEL"
arrCompanyName(4) = "MT FR"
arrCompanyName(5) = "MT UK"
arrCompanyName(6) = "MT SP"
arrCompanyName(7) = "MT IT"
arrCompanyName(8) = "MT US"

arrCompanyNameEN(1) = Array("Siemens VAI Metals Technologies GmbH", "A Siemens Industry Business", "Turmstrasse 44", "4031 Linz", "Austria")
arrCompanyNameEN(2) = Array("Siemens AG", "A Siemens Industry Business", "Schuhstrasse 60", "91052 Erlangen", "Germany")
arrCompanyNameEN(3) = Array("Siemens VAI Metals Technologies GmbH", "A Siemens Industry Business", "Reithallenstrasse 1", "77731 Willst|fffd|tt-Legelshurst", "Germany")
arrCompanyNameEN(4) = Array("Siemens VAI Metals Technologies SAS", "A Siemens Industry Business", "51 Rue Sibert", "42403 St. Chamond Cedex", "France")
arrCompanyNameEN(5) = Array("Siemens VAI Metals Technologies Ltd", "A Siemens Industry Business", "Davy House, Sheffield Business Park, Europa Link", "Sheffield, S9 1XU", "United Kingdom")
arrCompanyNameEN(6) = Array("Siemens VAI Metals Technologies S.A", "A Siemens Industry Business", "Paseo al Puerto, 12", "48992 Guecho - Vicaya", "Spain")
arrCompanyNameEN(7) = Array("Siemens VAI Metals Technologies S.r.l.", "A Siemens Industry Business", "Via L. Pomini, n. 92", "21050 - Marnate (VA)", "Italy")
arrCompanyNameEN(8) = Array("Morgan Construction Company", "A Siemens VAI Business", "15 Belmont Street", "Worcester, Massachusetts", "01605-2665, USA")

End Sub
Function IndexFromCompany(strCompany)
Dim intIndex As Integer
Dim i As Integer
intIndex = 1 ' ATL
For i = LBound(arrCompanyName) To UBound(arrCompanyName)
    If arrCompanyName(i) = strCompany Then
        intIndex = i
    End If
Next
IndexFromCompany = intIndex
End Function

Attribute VB_Name = "Language"
Function Language_LanguageID(strLanguage) As WdLanguageID
Dim strHelp As WdLanguageID
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = wdGerman
    Case UCase("French")
        strHelp = wdFrench
    Case UCase("Italian")
        strHelp = wdItalian
    Case UCase("Spanish")
        strHelp = wdSpanish
    Case UCase("Russian")
        strHelp = wdRussian
    Case Else '(English and rest)
        strHelp = wdEnglishUK
End Select
Language_LanguageID = strHelp
End Function


Function Language_RevisionHistory(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Revisions Geschichte"
    Case UCase("French")
        strHelp = "Historique des r|fffd|visions"
    Case UCase("Italian")
        strHelp = "Storia revisioni"
    Case UCase("Spanish")
        strHelp = "Historial de revisiones"
    Case UCase("Russian")
        strHelp = ChrW(1061) & ChrW(1088) & ChrW(1086) & ChrW(1085) & ChrW(1086)
        strHelp = strHelp & ChrW(1083) & ChrW(1086) & ChrW(1075) & ChrW(1080) & ChrW(1103) & ChrW(32)
        strHelp = strHelp & ChrW(1088) & ChrW(1077) & ChrW(1074) & ChrW(1080) & ChrW(1079) & ChrW(1080)
        strHelp = strHelp & ChrW(1081)
    Case Else '(English and rest)
        strHelp = "Revision History"
End Select
Language_RevisionHistory = strHelp
End Function

Function Language_Revision(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Revision"
    Case UCase("French")
        strHelp = "R|fffd|vision"
    Case UCase("Italian")
        strHelp = "Revisione"
    Case UCase("Spanish")
        strHelp = "Revisi|fffd|n"
    Case UCase("Russian")
        strHelp = ChrW(1056) & ChrW(1077) & ChrW(1074) & ChrW(1080) & ChrW(1079)
        strHelp = strHelp & ChrW(1080) & ChrW(1103)
    Case Else '(English and rest)
        strHelp = "Revision"
End Select
Language_Revision = strHelp
End Function

Function Language_Date(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Datum"
    Case UCase("French")
        strHelp = "Date"
    Case UCase("Italian")
        strHelp = "Data"
    Case UCase("Spanish")
        strHelp = "Fecha"
    Case UCase("Russian")
        strHelp = ChrW(1044) & ChrW(1072) & ChrW(1090) & ChrW(1072)
    Case Else '(English and rest)
        strHelp = "Date"
End Select
Language_Date = strHelp
End Function


Function Language_Changes(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "|fffd|nderung"
    Case UCase("French")
        strHelp = "Modification(s)"
    Case UCase("Italian")
        strHelp = "Modifiche"
    Case UCase("Spanish")
        strHelp = "Cambios"
    Case UCase("Russian")
        strHelp = ChrW(1048) & ChrW(1079) & ChrW(1084) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1077)
    Case Else '(English and rest)
        strHelp = "Changes"
End Select
Language_Changes = strHelp
End Function

Function Language_Page(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Seite"
    Case UCase("French")
        strHelp = "Page"
    Case UCase("Italian")
        strHelp = "Pagina"
    Case UCase("Spanish")
        strHelp = "P|fffd|gina"
    Case UCase("Russian")
        strHelp = ChrW(1056) & ChrW(1072) & ChrW(1089) & ChrW(1087) & ChrW(1077)
        strHelp = strHelp & ChrW(1095) & ChrW(1072) & ChrW(1090) & ChrW(1072) & ChrW(1085) & ChrW(1086)
    Case Else '(English and rest)
        strHelp = "Page"
End Select
Language_Page = strHelp
End Function

Function Language_Rev(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Rev"
    Case UCase("French")
        strHelp = "R|fffd|v"
    Case UCase("Italian")
        strHelp = "Rev"
    Case UCase("Spanish")
        strHelp = "Rev"
    Case UCase("Russian")
        strHelp = ChrW(1056) & ChrW(1077) & ChrW(1074)
    Case Else '(English and rest)
        strHelp = "Rev"
End Select
Language_Rev = strHelp
End Function

Function Language_TableOfContents(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Inhaltsverzeichnis"
    Case UCase("French")
        strHelp = "Table des Mati|fffd|res"
    Case UCase("Italian")
        strHelp = "Indice"
    Case UCase("Spanish")
        strHelp = "|fffd|ndice"
    Case UCase("Russian")
        strHelp = ChrW(1054) & ChrW(1075) & ChrW(1083) & ChrW(1072) & ChrW(1074)
        strHelp = strHelp & ChrW(1083) & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1077)
    Case Else '(English and rest)
        strHelp = "Table of contents"
End Select
Language_TableOfContents = strHelp
End Function

Function Language_Confidential(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Vertraulich"
    Case UCase("French")
        strHelp = "Confidentiel"
    Case UCase("Italian")
        strHelp = "Riservato"
    Case UCase("Spanish")
        strHelp = "Confidencial"
    Case UCase("Russian")
        strHelp = ChrW(1082) & ChrW(1086) & ChrW(1085) & ChrW(1092) & ChrW(1080)
        strHelp = strHelp & ChrW(1076) & ChrW(1077) & ChrW(1085) & ChrW(1094) & ChrW(1080) & ChrW(1072)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086)
    Case Else '(English and rest)
        strHelp = "Confidential"
End Select
Language_Confidential = strHelp
End Function

Function Language_StrictlyConfidential(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Streng vertraulich"
    Case UCase("French")
        strHelp = "Strictement confidentiel"
    Case UCase("Italian")
        strHelp = "Strettamente riservato"
    Case UCase("Spanish")
        strHelp = "Estrictamente confidencial"
    Case UCase("Russian")
        strHelp = ChrW(1089) & ChrW(1090) & ChrW(1088) & ChrW(1086) & ChrW(1075)
        strHelp = strHelp & ChrW(1086) & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1085) & ChrW(1092)
        strHelp = strHelp & ChrW(1080) & ChrW(1076) & ChrW(1077) & ChrW(1085) & ChrW(1094) & ChrW(1080)
        strHelp = strHelp & ChrW(1072) & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086)
    Case Else '(English and rest)
        strHelp = "Strictly confidential"
End Select
Language_StrictlyConfidential = strHelp
End Function

Function Language_ForInternalUseOnly(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Nur f|fffd|r den internen Gebrauch"
    Case UCase("French")
        strHelp = "R|fffd|serv|fffd| |fffd| un usage interne"
    Case UCase("Italian")
        strHelp = "Solo per uso interno"
    Case UCase("Spanish")
        strHelp = "Solo para uso interno"
    Case UCase("Russian")
        strHelp = ChrW(1090) & ChrW(1086) & ChrW(1083) & ChrW(1100) & ChrW(1082)
        strHelp = strHelp & ChrW(1086) & ChrW(32) & ChrW(1076) & ChrW(1083) & ChrW(1103) & ChrW(32)
        strHelp = strHelp & ChrW(1074) & ChrW(1085) & ChrW(1091) & ChrW(1090) & ChrW(1088) & ChrW(1077)
        strHelp = strHelp & ChrW(1085) & ChrW(1085) & ChrW(1077) & ChrW(1075) & ChrW(1086) & ChrW(32)
        strHelp = strHelp & ChrW(1087) & ChrW(1086) & ChrW(1083) & ChrW(1100) & ChrW(1079) & ChrW(1086)
        strHelp = strHelp & ChrW(1074) & ChrW(1072) & ChrW(1085) & ChrW(1080) & ChrW(1103)
    Case Else '(English and rest)
        strHelp = "For Internal Use Only"
End Select
Language_ForInternalUseOnly = strHelp
End Function

Function Language_AllRightsReserved(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Alle Rechte vorbehalten."
    Case UCase("French")
        strHelp = "Tous droits r|fffd|serv|fffd|s."
    Case UCase("Italian")
        strHelp = "Tutti i diritti riservati."
    Case UCase("Spanish")
        strHelp = "Todos los derechos reservados."
    Case UCase("Russian")
        strHelp = ChrW(1057) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1093)
        strHelp = strHelp & ChrW(1088) & ChrW(1072) & ChrW(1085) & ChrW(1077) & ChrW(1085) & ChrW(1080)
        strHelp = strHelp & ChrW(1077) & ChrW(1084) & ChrW(32) & ChrW(1074) & ChrW(1089) & ChrW(1077)
        strHelp = strHelp & ChrW(1093) & ChrW(32) & ChrW(1087) & ChrW(1088) & ChrW(1072) & ChrW(1074)
    Case Else '(English and rest)
        strHelp = "All rights reserved."
End Select
Language_AllRightsReserved = strHelp
End Function

Function Language_SiemensVAI(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("Russian")
        strHelp = ChrW(1057) & ChrW(1080) & ChrW(1084) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1089) & ChrW(32) & ChrW(1060) & ChrW(1040) & ChrW(1048)
    Case Else '(English and rest)
        strHelp = "Siemens VAI"
End Select
Language_SiemensVAI = strHelp
End Function

Function Language_Siemens(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("Russian")
        strHelp = ChrW(1057) & ChrW(1080) & ChrW(1084) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1089)
    Case Else '(English and rest)
        strHelp = "Siemens"
End Select
Language_Siemens = strHelp
End Function

Function Language_Morgan(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("Russian")
        strHelp = ChrW(1052) & ChrW(1086) & ChrW(1088) & ChrW(1075) & ChrW(1072)
        strHelp = strHelp & ChrW(1085)
    Case Else '(English and rest)
        strHelp = "Morgan"
End Select
Language_Morgan = strHelp
End Function

'Function Language_XXX(strLanguage) As String
'Dim strHelp As String
'Select Case UCase(strLanguage)
'    Case UCase("German")
'        strHelp = ""
'    Case UCase("French")
'        strHelp = ""
'    Case UCase("Italian")
'        strHelp = ""
'    Case UCase("Spanish")
'        strHelp = ""
'    Case UCase("Russian")
'        strHelp = ""
'    Case Else '(English and rest)
'        strHelp = ""
'End Select
'Language_XXX = strHelp
'End Function

Function Language_InterlectualPropertyHeading(strLanguage) As String
Dim strHelp As String
Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Geistiges Eigentum und Vertraulichkeit"
    Case UCase("French")
        strHelp = "Propri|fffd|t|fffd| intellectuelle et confidentialit|fffd|"""""
    Case UCase("Italian")
        strHelp = "Diritti di propriet|fffd| intellettuale  e riservatezza"
    Case UCase("Spanish")
        strHelp = "Derechos de Propiedad Intelectual y Confidencialidad"
    Case UCase("Russian")
        strHelp = strHelp & ChrW(1083) & ChrW(1077) & ChrW(1082) & ChrW(1090) & ChrW(1091) & ChrW(1072)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1072) & ChrW(1103) & ChrW(32)
        strHelp = strHelp & ChrW(1089) & ChrW(1086) & ChrW(1073) & ChrW(1089) & ChrW(1090) & ChrW(1074)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1085) & ChrW(1086) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1100) & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1082) & ChrW(1086)
        strHelp = strHelp & ChrW(1085) & ChrW(1092) & ChrW(1080) & ChrW(1076) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1094) & ChrW(1080) & ChrW(1072) & ChrW(1083) & ChrW(1100) & ChrW(1085)
        strHelp = strHelp & ChrW(1086) & ChrW(1089) & ChrW(1090) & ChrW(1100)
    Case Else '(English and rest)
        strHelp = "Intellectual property rights and confidentiality"
End Select
Language_InterlectualPropertyHeading = strHelp
End Function

Function Language_InterlectualPropertyStatement(strCompany, strLanguage) As String
Dim strHelp As String

Select Case UCase(strLanguage)
    Case UCase("German")
        strHelp = "Dieses Dokument enth|fffd|lt wertvolle Gesch|fffd|ftsgeheimnisse und vertrauliche Informationen von " & strCompany & ". Der Inhalt dieses Dokuments ist und bleibt das geistige Eigentum von " & strCompany & ". Jeder Empf|fffd|nger hat dieses Dokument sowie dessen gesamten Inhalt streng vertraulich zu behandeln und darf das Dokument und seinen Inhalt weder ganz noch teilweise ohne die vorherige schriftliche Einwilligung von " & strCompany & " Dritten zug|fffd|nglich machen. Ferner d|fffd|rfen in diesem Dokument enthaltene Informationen, Spezifikationen oder Angaben nur f|fffd|r die Auswertung dieses Dokuments verwendet werden." & Chr(13) & _
            "Dieses Dokument darf weder ganz noch teilweise ohne die vorherige schriftliche Einwilligung von " & strCompany & " ver|fffd|ndert, kopiert, nachgedruckt, vervielf|fffd|ltigt, |fffd|bersetzt, verbreitet oder bearbeitet werden (Druck, Fotokopie, Mikrofilm oder andere Verfahren), sei es elektronisch oder mittels anderer Verfahren." & Chr(13) & _
            "Jeder Empf|fffd|nger hat die Einsichtnahme in dieses Dokument, sei es ganz oder teilweise, auf diejenigen seiner Mitarbeiter zu beschr|fffd|nken, die in angemessener Weise davon Kenntnis erlangen m|fffd|ssen, und sicherzustellen, dass die oben genannten Bestimmungen hinsichtlich Geheimhaltung und Nutzungsbeschr|fffd|nkung von diesen Mitarbeitern streng eingehalten werden." & Chr(13) & _
            "Jede Verletzung der oben genannten Bestimmungen wird im Einklang mit den geltenden rechtlichen Bestimmungen vor die zust|fffd|ndige Gerichtsbarkeit gebracht."
    Case UCase("French")
        strHelp = "Le pr|fffd|sent document contient des secrets d'affaires et des informations confidentielles de grande valeur relevant du domaine de " & strCompany & ". Le contenu du pr|fffd|sent document est et demeurera la propri|fffd|t|fffd| intellectuelle de " & strCompany & ". Tout destinataire gardera le secret le plus absolu sur le pr|fffd|sent document aussi bien que sur son contenu et s'abstiendra de le diffuser aux tiers, en tout ou en partie, sans l'accord |fffd|crit pr|fffd|alable de " & strCompany & ". Par ailleurs, tout destinataire utilisera les informations, sp|fffd|cifications et renseignements contenus dans le pr|fffd|sent document aux seules fins de l'analyse de ce dernier." & Chr(13) & _
            "Le pr|fffd|sent document ne devra |fffd|tre ni modifi|fffd|, ni copi|fffd|, ni reproduit, ni traduit, ni diffus|fffd|, en tout ou en partie, sans l'accord |fffd|crit pr|fffd|alable de " & strCompany & ", que ce soit par des m|fffd|thodes |fffd|lectroniques ou autres (impression, photocopiage, microfilmage, etc.)." & Chr(13) & _
            "Tout destinataire limitera la prise de connaissance de tout ou partie du pr|fffd|sent document |fffd| ceux de ses collaborateurs qui en devront raisonnablement avoir connaissance et assurera le respect par ces personnes des dispositions ci-dessus relatives au secret et aux restrictions d'usage." & Chr(13) & _
            "Toute violation des dispositions susmentionn|fffd|es fera l'objet de poursuites devant la juridiction comp|fffd|tente, en conformit|fffd| avec les dispositions l|fffd|gales applicables. "
    Case UCase("Italian")
        strHelp = "Questo documento contiene segreti commerciali ed informazioni riservate di " & strCompany & " ed il suo contenuto |fffd| e dovr|fffd| rimanere diritto di propriet|fffd| intellettuale di " & strCompany & ". Ogni ricevente dovr|fffd| mantenere strettamente riservato questo documento e tutto il suo contenuto, non divulgarlo neppure parzialmente a terzi senza il previo consenso scritto di " & strCompany & " e non dovr|fffd| utilizzare nessuna informazione, specifica o dati contenuti in questo documento per fini diversi dalla valutazione dello stesso. " & Chr(13) & _
            "Non |fffd| consentito adattare, copiare, riprodurre, duplicare, tradurre in altra lingua, distribuire o processare (stampa, fotocopia, microfilm a qualsiasi altro processo) alcuna parte di questo documento, a mezzo di sistemi elettronici o di qualsiasi altro mezzo, senza previa autorizzazione scritta di " & strCompany & "." & Chr(13) & _
            "Ogni ricevente dovr|fffd| limitare l'accesso a questo documento o a parte di esso, ai soli propri impiegati che realmente necessitino di essere informati al riguardo e dovr|fffd| assicurare il loro rigoroso rispetto delle disposizioni sulla riservatezza e sulla restrizione dell'uso come su espresso. " & Chr(13) & _
            "Qualsiasi violazione delle disposizioni su citate sar|fffd| portata davanti al Tribunale di competenza in accordo alle leggi applicabili."
    Case UCase("Spanish")
        strHelp = "Este documento contiene secretos comerciales e informaci|fffd|n confidencial de gran valor perteneciente a " & strCompany & " y su contenido est|fffd| y quedar|fffd| protegido por el derecho de propiedad intelectual de " & strCompany & ". Cada destinatario deber|fffd| mantener este documento y todo su contenido en completo secreto; no deber|fffd| dar a conocer el documento ni ninguna parte del mismo a ning|fffd|n tercero sin obtener previamente el consentimiento por escrito de " & strCompany & " y no deber|fffd| utilizar ning|fffd|n tipo de informaci|fffd|n, especificaci|fffd|n ni datos contenidos en |fffd|l para otros prop|fffd|sitos distintos a la evaluaci|fffd|n de este documento. " & Chr(13) & _
            "No se permite la adaptaci|fffd|n, copia, reproducci|fffd|n, duplicado, traducci|fffd|n, distribuci|fffd|n ni procesado (impresi|fffd|n, fotocopia, microfilme o cualquier otro procesamiento) de ninguna parte del presente documento, ni mediante la utilizaci|fffd|n de sistemas electr|fffd|nicos ni de cualquier otro modo, sin el previo consentimiento escrito de " & strCompany & "." & Chr(13) & _
            "Cada destinatario deber|fffd| limitar el acceso a este documento y a cualquiera de sus partes solamente a sus empleados que deban tener conocimiento del mismo y deber|fffd| adem|fffd|s garantizar el estricto cumplimiento de las disposiciones de confidencialidad y de restricci|fffd|n de uso expuestas anteriormente. " & Chr(13) & _
            "Cualquier violaci|fffd|n de dichas disposiciones se presentar|fffd| ante los tribunales correspondientes de acuerdo con la legislaci|fffd|n vigente."
    Case UCase("Russian")
    ' First Paragraph
        strHelp = ChrW(1053) & ChrW(1072) & ChrW(1089) & ChrW(1090) & ChrW(1086)
        strHelp = strHelp & ChrW(1103) & ChrW(1097) & ChrW(1080) & ChrW(1081) & ChrW(32) & ChrW(1076)
        strHelp = strHelp & ChrW(1086) & ChrW(1082) & ChrW(1091) & ChrW(1084) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1090) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1076) & ChrW(1077)
        strHelp = strHelp & ChrW(1088) & ChrW(1078) & ChrW(1080) & ChrW(1090) & ChrW(32) & ChrW(1094)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1085) & ChrW(1099) & ChrW(1077) & ChrW(32)
        strHelp = strHelp & ChrW(1082) & ChrW(1086) & ChrW(1084) & ChrW(1084) & ChrW(1077) & ChrW(1088)
        strHelp = strHelp & ChrW(1095) & ChrW(1077) & ChrW(1089) & ChrW(1082) & ChrW(1080) & ChrW(1077)
        strHelp = strHelp & ChrW(32) & ChrW(1090) & ChrW(1072) & ChrW(1081) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1085)
        strHelp = strHelp & ChrW(1092) & ChrW(1080) & ChrW(1076) & ChrW(1077) & ChrW(1085) & ChrW(1094)
        strHelp = strHelp & ChrW(1080) & ChrW(1072) & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1091)
        strHelp = strHelp & ChrW(1102) & ChrW(32) & ChrW(1080) & ChrW(1085) & ChrW(1092) & ChrW(1086)
        strHelp = strHelp & ChrW(1088) & ChrW(1084) & ChrW(1072) & ChrW(1094) & ChrW(1080) & ChrW(1102)
        strHelp = strHelp & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1084) & ChrW(1087) & ChrW(1072)
        strHelp = strHelp & ChrW(1085) & ChrW(1080) & ChrW(1080) & ChrW(32)
        strHelp = strHelp & strCompany
        strHelp = strHelp & ChrW(46) & ChrW(32) & ChrW(1057) & ChrW(1086) & ChrW(1076)
        strHelp = strHelp & ChrW(1077) & ChrW(1088) & ChrW(1078) & ChrW(1072) & ChrW(1085) & ChrW(1080)
        strHelp = strHelp & ChrW(1077) & ChrW(32) & ChrW(1085) & ChrW(1072) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1086) & ChrW(1103) & ChrW(1097) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1076) & ChrW(1086) & ChrW(1082) & ChrW(1091) & ChrW(1084)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1090) & ChrW(1072) & ChrW(32) & ChrW(1103)
        strHelp = strHelp & ChrW(1074) & ChrW(1083) & ChrW(1103) & ChrW(1077) & ChrW(1090) & ChrW(1089)
        strHelp = strHelp & ChrW(1103) & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1086) & ChrW(1089)
        strHelp = strHelp & ChrW(1090) & ChrW(1072) & ChrW(1077) & ChrW(1090) & ChrW(1089) & ChrW(1103)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(1085) & ChrW(1090) & ChrW(1077) & ChrW(1083)
        strHelp = strHelp & ChrW(1083) & ChrW(1077) & ChrW(1082) & ChrW(1090) & ChrW(1091) & ChrW(1072)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086) & ChrW(1081) & ChrW(32)
        strHelp = strHelp & ChrW(1089) & ChrW(1086) & ChrW(1073) & ChrW(1089) & ChrW(1090) & ChrW(1074)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1085) & ChrW(1086) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1100) & ChrW(1102) & ChrW(32)
        strHelp = strHelp & strCompany
        strHelp = strHelp & ChrW(46) & ChrW(32) & ChrW(1051) & ChrW(1102) & ChrW(1073)
        strHelp = strHelp & ChrW(1086) & ChrW(1081) & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083)
        strHelp = strHelp & ChrW(1091) & ChrW(1095) & ChrW(1072) & ChrW(1090) & ChrW(1077) & ChrW(1083)
        strHelp = strHelp & ChrW(1100) & ChrW(32) & ChrW(1086) & ChrW(1073) & ChrW(1103) & ChrW(1079)
        strHelp = strHelp & ChrW(1072) & ChrW(1085) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1073)
        strHelp = strHelp & ChrW(1083) & ChrW(1102) & ChrW(1076) & ChrW(1072) & ChrW(1090) & ChrW(1100)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1090) & ChrW(1088) & ChrW(1086) & ChrW(1075)
        strHelp = strHelp & ChrW(1091) & ChrW(1102) & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1085)
        strHelp = strHelp & ChrW(1092) & ChrW(1080) & ChrW(1076) & ChrW(1077) & ChrW(1085) & ChrW(1094)
        strHelp = strHelp & ChrW(1080) & ChrW(1072) & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086)
        strHelp = strHelp & ChrW(1089) & ChrW(1090) & ChrW(1100) & ChrW(32) & ChrW(1085) & ChrW(1072)
        strHelp = strHelp & ChrW(1089) & ChrW(1090) & ChrW(1086) & ChrW(1103) & ChrW(1097) & ChrW(1077)
        strHelp = strHelp & ChrW(1075) & ChrW(1086) & ChrW(32) & ChrW(1076) & ChrW(1086) & ChrW(1082)
        strHelp = strHelp & ChrW(1091) & ChrW(1084) & ChrW(1077) & ChrW(1085) & ChrW(1090) & ChrW(1072)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1076) & ChrW(1077) & ChrW(1088)
        strHelp = strHelp & ChrW(1078) & ChrW(1072) & ChrW(1085) & ChrW(1080) & ChrW(1103) & ChrW(44)
        strHelp = strHelp & ChrW(32) & ChrW(1085) & ChrW(1077) & ChrW(32) & ChrW(1088) & ChrW(1072)
        strHelp = strHelp & ChrW(1079) & ChrW(1075) & ChrW(1083) & ChrW(1072) & ChrW(1096) & ChrW(1072)
        strHelp = strHelp & ChrW(1090) & ChrW(1100) & ChrW(32) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083) & ChrW(1085) & ChrW(1086)
        strHelp = strHelp & ChrW(1089) & ChrW(1090) & ChrW(1100) & ChrW(1102) & ChrW(32) & ChrW(1080)
        strHelp = strHelp & ChrW(1083) & ChrW(1080) & ChrW(32) & ChrW(1095) & ChrW(1072) & ChrW(1089)
        strHelp = strHelp & ChrW(1090) & ChrW(1080) & ChrW(1095) & ChrW(1085) & ChrW(1086) & ChrW(32)
        strHelp = strHelp & ChrW(1090) & ChrW(1088) & ChrW(1077) & ChrW(1090) & ChrW(1100) & ChrW(1080)
        strHelp = strHelp & ChrW(1084) & ChrW(32) & ChrW(1083) & ChrW(1080) & ChrW(1094) & ChrW(1072)
        strHelp = strHelp & ChrW(1084) & ChrW(32) & ChrW(1073) & ChrW(1077) & ChrW(1079) & ChrW(32)
        strHelp = strHelp & ChrW(1087) & ChrW(1088) & ChrW(1077) & ChrW(1076) & ChrW(1074) & ChrW(1072)
        strHelp = strHelp & ChrW(1088) & ChrW(1080) & ChrW(1090) & ChrW(1077) & ChrW(1083) & ChrW(1100)
        strHelp = strHelp & ChrW(1085) & ChrW(1086) & ChrW(1075) & ChrW(1086) & ChrW(32) & ChrW(1087)
        strHelp = strHelp & ChrW(1080) & ChrW(1089) & ChrW(1100) & ChrW(1084) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1085) & ChrW(1086) & ChrW(1075) & ChrW(1086) & ChrW(32) & ChrW(1089)
        strHelp = strHelp & ChrW(1086) & ChrW(1075) & ChrW(1083) & ChrW(1072) & ChrW(1089) & ChrW(1080)
        strHelp = strHelp & ChrW(1103) & ChrW(32)
        strHelp = strHelp & strCompany
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1085) & ChrW(1077)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(1089) & ChrW(1087) & ChrW(1086) & ChrW(1083)
        strHelp = strHelp & ChrW(1100) & ChrW(1079) & ChrW(1086) & ChrW(1074) & ChrW(1072) & ChrW(1090)
        strHelp = strHelp & ChrW(1100) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1076) & ChrW(1077)
        strHelp = strHelp & ChrW(1088) & ChrW(1078) & ChrW(1072) & ChrW(1097) & ChrW(1080) & ChrW(1077)
        strHelp = strHelp & ChrW(1089) & ChrW(1103) & ChrW(32) & ChrW(1074) & ChrW(32) & ChrW(1085)
        strHelp = strHelp & ChrW(1072) & ChrW(1089) & ChrW(1090) & ChrW(1086) & ChrW(1103) & ChrW(1097)
        strHelp = strHelp & ChrW(1077) & ChrW(1084) & ChrW(32) & ChrW(1076) & ChrW(1086) & ChrW(1082)
        strHelp = strHelp & ChrW(1091) & ChrW(1084) & ChrW(1077) & ChrW(1085) & ChrW(1090) & ChrW(1077)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(1085) & ChrW(1092) & ChrW(1086) & ChrW(1088)
        strHelp = strHelp & ChrW(1084) & ChrW(1072) & ChrW(1094) & ChrW(1080) & ChrW(1102) & ChrW(44)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1087) & ChrW(1077) & ChrW(1094) & ChrW(1080)
        strHelp = strHelp & ChrW(1092) & ChrW(1080) & ChrW(1082) & ChrW(1072) & ChrW(1094) & ChrW(1080)
        strHelp = strHelp & ChrW(1080) & ChrW(32) & ChrW(1080) & ChrW(1083) & ChrW(1080) & ChrW(32)
        strHelp = strHelp & ChrW(1076) & ChrW(1072) & ChrW(1085) & ChrW(1085) & ChrW(1099) & ChrW(1077)
        strHelp = strHelp & ChrW(32) & ChrW(1074) & ChrW(32) & ChrW(1094) & ChrW(1077) & ChrW(1083)
        strHelp = strHelp & ChrW(1103) & ChrW(1093) & ChrW(32) & ChrW(1080) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(1093) & ChrW(44) & ChrW(32) & ChrW(1095) & ChrW(1077) & ChrW(1084)
        strHelp = strHelp & ChrW(32) & ChrW(1086) & ChrW(1094) & ChrW(1077) & ChrW(1085) & ChrW(1082)
        strHelp = strHelp & ChrW(1072) & ChrW(32) & ChrW(1085) & ChrW(1072) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1086) & ChrW(1103) & ChrW(1097) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1076) & ChrW(1086) & ChrW(1082) & ChrW(1091) & ChrW(1084)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1090) & ChrW(1072) & ChrW(46)
    
    ' Second Paragraph
        strHelp = strHelp & Chr(13) & ChrW(1053) & ChrW(1077) & ChrW(32) & ChrW(1076) & ChrW(1086)
        strHelp = strHelp & ChrW(1087) & ChrW(1091) & ChrW(1089) & ChrW(1082) & ChrW(1072) & ChrW(1077)
        strHelp = strHelp & ChrW(1090) & ChrW(1089) & ChrW(1103) & ChrW(32) & ChrW(1073) & ChrW(1077)
        strHelp = strHelp & ChrW(1079) & ChrW(32) & ChrW(1087) & ChrW(1088) & ChrW(1077) & ChrW(1076)
        strHelp = strHelp & ChrW(1074) & ChrW(1072) & ChrW(1088) & ChrW(1080) & ChrW(1090) & ChrW(1077)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1087) & ChrW(1080) & ChrW(1089) & ChrW(1100) & ChrW(1084)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1085) & ChrW(1086) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1075) & ChrW(1083) & ChrW(1072)
        strHelp = strHelp & ChrW(1089) & ChrW(1080) & ChrW(1103) & ChrW(32)
        strHelp = strHelp & strCompany
        strHelp = strHelp & ChrW(32) & ChrW(1085) & ChrW(1080) & ChrW(32) & ChrW(1087)
        strHelp = strHelp & ChrW(1086) & ChrW(1083) & ChrW(1085) & ChrW(1086) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1100) & ChrW(1102) & ChrW(44) & ChrW(32) & ChrW(1085) & ChrW(1080)
        strHelp = strHelp & ChrW(32) & ChrW(1095) & ChrW(1072) & ChrW(1089) & ChrW(1090) & ChrW(1080)
        strHelp = strHelp & ChrW(1095) & ChrW(1085) & ChrW(1086) & ChrW(32) & ChrW(1080) & ChrW(1079)
        strHelp = strHelp & ChrW(1084) & ChrW(1077) & ChrW(1085) & ChrW(1103) & ChrW(1090) & ChrW(1100)
        strHelp = strHelp & ChrW(44) & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1087) & ChrW(1080)
        strHelp = strHelp & ChrW(1088) & ChrW(1086) & ChrW(1074) & ChrW(1072) & ChrW(1090) & ChrW(1100)
        strHelp = strHelp & ChrW(44) & ChrW(32) & ChrW(1087) & ChrW(1077) & ChrW(1088) & ChrW(1077)
        strHelp = strHelp & ChrW(1087) & ChrW(1077) & ChrW(1095) & ChrW(1072) & ChrW(1090) & ChrW(1099)
        strHelp = strHelp & ChrW(1074) & ChrW(1072) & ChrW(1090) & ChrW(1100) & ChrW(44) & ChrW(32)
        strHelp = strHelp & ChrW(1088) & ChrW(1072) & ChrW(1079) & ChrW(1084) & ChrW(1085) & ChrW(1086)
        strHelp = strHelp & ChrW(1078) & ChrW(1072) & ChrW(1090) & ChrW(1100) & ChrW(44) & ChrW(32)
        strHelp = strHelp & ChrW(1087) & ChrW(1077) & ChrW(1088) & ChrW(1077) & ChrW(1074) & ChrW(1086)
        strHelp = strHelp & ChrW(1076) & ChrW(1080) & ChrW(1090) & ChrW(1100) & ChrW(32) & ChrW(1085)
        strHelp = strHelp & ChrW(1072) & ChrW(32) & ChrW(1076) & ChrW(1088) & ChrW(1091) & ChrW(1075)
        strHelp = strHelp & ChrW(1080) & ChrW(1077) & ChrW(32) & ChrW(1103) & ChrW(1079) & ChrW(1099)
        strHelp = strHelp & ChrW(1082) & ChrW(1080) & ChrW(44) & ChrW(32) & ChrW(1088) & ChrW(1072)
        strHelp = strHelp & ChrW(1089) & ChrW(1087) & ChrW(1088) & ChrW(1086) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1088) & ChrW(1072) & ChrW(1085) & ChrW(1103) & ChrW(1090) & ChrW(1100)
        strHelp = strHelp & ChrW(32) & ChrW(1080) & ChrW(1083) & ChrW(1080) & ChrW(32) & ChrW(1086)
        strHelp = strHelp & ChrW(1073) & ChrW(1088) & ChrW(1072) & ChrW(1073) & ChrW(1072) & ChrW(1090)
        strHelp = strHelp & ChrW(1099) & ChrW(1074) & ChrW(1072) & ChrW(1090) & ChrW(1100) & ChrW(32)
        strHelp = strHelp & ChrW(1085) & ChrW(1072) & ChrW(1089) & ChrW(1090) & ChrW(1086) & ChrW(1103)
        strHelp = strHelp & ChrW(1097) & ChrW(1080) & ChrW(1081) & ChrW(32) & ChrW(1076) & ChrW(1086)
        strHelp = strHelp & ChrW(1082) & ChrW(1091) & ChrW(1084) & ChrW(1077) & ChrW(1085) & ChrW(1090)
        strHelp = strHelp & ChrW(32) & ChrW(40) & ChrW(1088) & ChrW(1072) & ChrW(1089) & ChrW(1087)
        strHelp = strHelp & ChrW(1077) & ChrW(1095) & ChrW(1072) & ChrW(1090) & ChrW(1082) & ChrW(1086)
        strHelp = strHelp & ChrW(1081) & ChrW(44) & ChrW(32) & ChrW(1092) & ChrW(1086) & ChrW(1090)
        strHelp = strHelp & ChrW(1086) & ChrW(1082) & ChrW(1086) & ChrW(1087) & ChrW(1080) & ChrW(1088)
        strHelp = strHelp & ChrW(1086) & ChrW(1074) & ChrW(1072) & ChrW(1085) & ChrW(1080) & ChrW(1077)
        strHelp = strHelp & ChrW(1084) & ChrW(44) & ChrW(32) & ChrW(1084) & ChrW(1080) & ChrW(1082)
        strHelp = strHelp & ChrW(1088) & ChrW(1086) & ChrW(1092) & ChrW(1080) & ChrW(1083) & ChrW(1100)
        strHelp = strHelp & ChrW(1084) & ChrW(1080) & ChrW(1088) & ChrW(1086) & ChrW(1074) & ChrW(1072)
        strHelp = strHelp & ChrW(1085) & ChrW(1080) & ChrW(1077) & ChrW(1084) & ChrW(32) & ChrW(1080)
        strHelp = strHelp & ChrW(1083) & ChrW(1080) & ChrW(32) & ChrW(1080) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(1084) & ChrW(1080) & ChrW(32) & ChrW(1089) & ChrW(1087) & ChrW(1086)
        strHelp = strHelp & ChrW(1089) & ChrW(1086) & ChrW(1073) & ChrW(1072) & ChrW(1084) & ChrW(1080)
        strHelp = strHelp & ChrW(41) & ChrW(44) & ChrW(32) & ChrW(1073) & ChrW(1091) & ChrW(1076)
        strHelp = strHelp & ChrW(1100) & ChrW(32) & ChrW(1090) & ChrW(1086) & ChrW(32) & ChrW(1101)
        strHelp = strHelp & ChrW(1083) & ChrW(1077) & ChrW(1082) & ChrW(1090) & ChrW(1088) & ChrW(1086)
        strHelp = strHelp & ChrW(1085) & ChrW(1085) & ChrW(1099) & ChrW(1084) & ChrW(32) & ChrW(1080)
        strHelp = strHelp & ChrW(1083) & ChrW(1080) & ChrW(32) & ChrW(1083) & ChrW(1102) & ChrW(1073)
        strHelp = strHelp & ChrW(1099) & ChrW(1084) & ChrW(32) & ChrW(1076) & ChrW(1088) & ChrW(1091)
        strHelp = strHelp & ChrW(1075) & ChrW(1080) & ChrW(1084) & ChrW(32) & ChrW(1089) & ChrW(1087)
        strHelp = strHelp & ChrW(1086) & ChrW(1089) & ChrW(1086) & ChrW(1073) & ChrW(1086) & ChrW(1084)
        strHelp = strHelp & ChrW(46)

    ' Third Paragraph
        strHelp = strHelp & Chr(13) & ChrW(1051) & ChrW(1102) & ChrW(1073) & ChrW(1086) & ChrW(1081)
        strHelp = strHelp & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083) & ChrW(1091) & ChrW(1095)
        strHelp = strHelp & ChrW(1072) & ChrW(1090) & ChrW(1077) & ChrW(1083) & ChrW(1100) & ChrW(32)
        strHelp = strHelp & ChrW(1086) & ChrW(1073) & ChrW(1103) & ChrW(1079) & ChrW(1072) & ChrW(1085)
        strHelp = strHelp & ChrW(32) & ChrW(1086) & ChrW(1075) & ChrW(1088) & ChrW(1072) & ChrW(1085)
        strHelp = strHelp & ChrW(1080) & ChrW(1095) & ChrW(1080) & ChrW(1090) & ChrW(1100) & ChrW(32)
        strHelp = strHelp & ChrW(1076) & ChrW(1086) & ChrW(1089) & ChrW(1090) & ChrW(1091) & ChrW(1087)
        strHelp = strHelp & ChrW(32) & ChrW(1082) & ChrW(32) & ChrW(1085) & ChrW(1072) & ChrW(1089)
        strHelp = strHelp & ChrW(1090) & ChrW(1086) & ChrW(1103) & ChrW(1097) & ChrW(1077) & ChrW(1084)
        strHelp = strHelp & ChrW(1091) & ChrW(32) & ChrW(1076) & ChrW(1086) & ChrW(1082) & ChrW(1091)
        strHelp = strHelp & ChrW(1084) & ChrW(1077) & ChrW(1085) & ChrW(1090) & ChrW(1091) & ChrW(32)
        strHelp = strHelp & ChrW(1074) & ChrW(32) & ChrW(1094) & ChrW(1077) & ChrW(1083) & ChrW(1086)
        strHelp = strHelp & ChrW(1084) & ChrW(32) & ChrW(1080) & ChrW(1083) & ChrW(1080) & ChrW(32)
        strHelp = strHelp & ChrW(1082) & ChrW(32) & ChrW(1077) & ChrW(1075) & ChrW(1086) & ChrW(32)
        strHelp = strHelp & ChrW(1095) & ChrW(1072) & ChrW(1089) & ChrW(1090) & ChrW(1103) & ChrW(1084)
        strHelp = strHelp & ChrW(32) & ChrW(1090) & ChrW(1077) & ChrW(1084) & ChrW(1080) & ChrW(32)
        strHelp = strHelp & ChrW(1080) & ChrW(1079) & ChrW(32) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1090) & ChrW(1088) & ChrW(1091)
        strHelp = strHelp & ChrW(1076) & ChrW(1085) & ChrW(1080) & ChrW(1082) & ChrW(1086) & ChrW(1074)
        strHelp = strHelp & ChrW(44) & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1090) & ChrW(1086)
        strHelp = strHelp & ChrW(1088) & ChrW(1099) & ChrW(1077) & ChrW(32) & ChrW(1087) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1086) & ChrW(1073) & ChrW(1086) & ChrW(1089) & ChrW(1085)
        strHelp = strHelp & ChrW(1086) & ChrW(1074) & ChrW(1072) & ChrW(1085) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(1084) & ChrW(32) & ChrW(1087) & ChrW(1088) & ChrW(1080) & ChrW(1095)
        strHelp = strHelp & ChrW(1080) & ChrW(1085) & ChrW(1072) & ChrW(1084) & ChrW(32) & ChrW(1076)
        strHelp = strHelp & ChrW(1086) & ChrW(1083) & ChrW(1078) & ChrW(1085) & ChrW(1099) & ChrW(32)
        strHelp = strHelp & ChrW(1086) & ChrW(1079) & ChrW(1085) & ChrW(1072) & ChrW(1082) & ChrW(1086)
        strHelp = strHelp & ChrW(1084) & ChrW(1080) & ChrW(1090) & ChrW(1100) & ChrW(1089) & ChrW(1103)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(32) & ChrW(1077) & ChrW(1075) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1076) & ChrW(1077) & ChrW(1088)
        strHelp = strHelp & ChrW(1078) & ChrW(1072) & ChrW(1085) & ChrW(1080) & ChrW(1077) & ChrW(1084)
        strHelp = strHelp & ChrW(44) & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1086) & ChrW(1073)
        strHelp = strHelp & ChrW(1077) & ChrW(1089) & ChrW(1087) & ChrW(1077) & ChrW(1095) & ChrW(1080)
        strHelp = strHelp & ChrW(1090) & ChrW(1100) & ChrW(44) & ChrW(32) & ChrW(1095) & ChrW(1090)
        strHelp = strHelp & ChrW(1086) & ChrW(1073) & ChrW(1099) & ChrW(32) & ChrW(1101) & ChrW(1090)
        strHelp = strHelp & ChrW(1080) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1090) & ChrW(1088)
        strHelp = strHelp & ChrW(1091) & ChrW(1076) & ChrW(1085) & ChrW(1080) & ChrW(1082) & ChrW(1080)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(1090) & ChrW(1088) & ChrW(1086) & ChrW(1075)
        strHelp = strHelp & ChrW(1086) & ChrW(32) & ChrW(1089) & ChrW(1086) & ChrW(1073) & ChrW(1083)
        strHelp = strHelp & ChrW(1102) & ChrW(1076) & ChrW(1072) & ChrW(1083) & ChrW(1080) & ChrW(32)
        strHelp = strHelp & ChrW(1074) & ChrW(1099) & ChrW(1096) & ChrW(1077) & ChrW(1085) & ChrW(1072)
        strHelp = strHelp & ChrW(1079) & ChrW(1074) & ChrW(1072) & ChrW(1085) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(1077) & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083) & ChrW(1086)
        strHelp = strHelp & ChrW(1078) & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1103) & ChrW(32)
        strHelp = strHelp & ChrW(1086) & ChrW(1090) & ChrW(1085) & ChrW(1086) & ChrW(1089) & ChrW(1080)
        strHelp = strHelp & ChrW(1090) & ChrW(1077) & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086)
        strHelp = strHelp & ChrW(32) & ChrW(1082) & ChrW(1086) & ChrW(1085) & ChrW(1092) & ChrW(1080)
        strHelp = strHelp & ChrW(1076) & ChrW(1077) & ChrW(1085) & ChrW(1094) & ChrW(1080) & ChrW(1072)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1086) & ChrW(1089) & ChrW(1090)
        strHelp = strHelp & ChrW(1080) & ChrW(32) & ChrW(1080) & ChrW(32) & ChrW(1086) & ChrW(1075)
        strHelp = strHelp & ChrW(1088) & ChrW(1072) & ChrW(1085) & ChrW(1080) & ChrW(1095) & ChrW(1077)
        strHelp = strHelp & ChrW(1085) & ChrW(1080) & ChrW(1103) & ChrW(32) & ChrW(1087) & ChrW(1088)
        strHelp = strHelp & ChrW(1072) & ChrW(1074) & ChrW(1072) & ChrW(32) & ChrW(1087) & ChrW(1086)
        strHelp = strHelp & ChrW(1083) & ChrW(1100) & ChrW(1079) & ChrW(1086) & ChrW(1074) & ChrW(1072)
        strHelp = strHelp & ChrW(1085) & ChrW(1080) & ChrW(1103) & ChrW(46)

     ' Forth Paragraph
        strHelp = strHelp & Chr(13) & ChrW(1051) & ChrW(1102) & ChrW(1073) & ChrW(1086) & ChrW(1077)
        strHelp = strHelp & ChrW(32) & ChrW(1085) & ChrW(1072) & ChrW(1088) & ChrW(1091) & ChrW(1096)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1077) & ChrW(32) & ChrW(1074)
        strHelp = strHelp & ChrW(1099) & ChrW(1096) & ChrW(1077) & ChrW(1085) & ChrW(1072) & ChrW(1079)
        strHelp = strHelp & ChrW(1074) & ChrW(1072) & ChrW(1085) & ChrW(1085) & ChrW(1099) & ChrW(1093)
        strHelp = strHelp & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083) & ChrW(1086) & ChrW(1078)
        strHelp = strHelp & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1081) & ChrW(32) & ChrW(1073)
        strHelp = strHelp & ChrW(1091) & ChrW(1076) & ChrW(1077) & ChrW(1090) & ChrW(32) & ChrW(1087)
        strHelp = strHelp & ChrW(1088) & ChrW(1077) & ChrW(1076) & ChrW(1084) & ChrW(1077) & ChrW(1090)
        strHelp = strHelp & ChrW(1086) & ChrW(1084) & ChrW(32) & ChrW(1074) & ChrW(1086) & ChrW(1079)
        strHelp = strHelp & ChrW(1073) & ChrW(1091) & ChrW(1078) & ChrW(1076) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1080) & ChrW(1103) & ChrW(32) & ChrW(1076) & ChrW(1077) & ChrW(1083)
        strHelp = strHelp & ChrW(1072) & ChrW(32) & ChrW(1074) & ChrW(32) & ChrW(1082) & ChrW(1086)
        strHelp = strHelp & ChrW(1084) & ChrW(1087) & ChrW(1077) & ChrW(1090) & ChrW(1077) & ChrW(1085)
        strHelp = strHelp & ChrW(1090) & ChrW(1085) & ChrW(1086) & ChrW(1084) & ChrW(32) & ChrW(1089)
        strHelp = strHelp & ChrW(1091) & ChrW(1076) & ChrW(1077) & ChrW(32) & ChrW(1074) & ChrW(32)
        strHelp = strHelp & ChrW(1089) & ChrW(1086) & ChrW(1086) & ChrW(1090) & ChrW(1074) & ChrW(1077)
        strHelp = strHelp & ChrW(1090) & ChrW(1089) & ChrW(1090) & ChrW(1074) & ChrW(1080) & ChrW(1080)
        strHelp = strHelp & ChrW(32) & ChrW(1089) & ChrW(32) & ChrW(1076) & ChrW(1077) & ChrW(1081)
        strHelp = strHelp & ChrW(1089) & ChrW(1090) & ChrW(1074) & ChrW(1091) & ChrW(1102) & ChrW(1097)
        strHelp = strHelp & ChrW(1080) & ChrW(1084) & ChrW(1080) & ChrW(32) & ChrW(1079) & ChrW(1072)
        strHelp = strHelp & ChrW(1082) & ChrW(1086) & ChrW(1085) & ChrW(1086) & ChrW(1076) & ChrW(1072)
        strHelp = strHelp & ChrW(1090) & ChrW(1077) & ChrW(1083) & ChrW(1100) & ChrW(1085) & ChrW(1099)
        strHelp = strHelp & ChrW(1084) & ChrW(1080) & ChrW(32) & ChrW(1087) & ChrW(1086) & ChrW(1083)
        strHelp = strHelp & ChrW(1086) & ChrW(1078) & ChrW(1077) & ChrW(1085) & ChrW(1080) & ChrW(1103)
        strHelp = strHelp & ChrW(1084) & ChrW(1080) & ChrW(46)
    Case Else ' English and rest
        strHelp = "This document contains valuable trade secrets and confidential information of " & strCompany & " and the content of this document is and shall remain the intellectual property right of " & strCompany & ". Any recipient shall keep this document and all its contents strictly confidential, not disclose it or any part thereof to any third party without " & strCompany & "'s prior written consent and not use any information, specification or data contained in this document for purposes other than for the evaluation of this document." & Chr(13) & _
            "No part of this document is allowed to be adapted, copied, reproduced, duplicated, translated into another language, distributed or processed (print, photocopy, microfilm or any other process), neither by the use of electronic systems nor otherwise without the prior written permission of " & strCompany & "." & Chr(13) & _
            "Any recipient shall limit access to this document and to any part thereof to those of its employees reasonably required being aware thereof and shall ensure their strict adherence to the provisions of confidentiality and restriction of use as expressed above." & Chr(13) & _
            "Any violation of the above provisions will be brought before the competent court in accordance with the applicable law."
End Select
Language_InterlectualPropertyStatement = strHelp
End Function




Attribute VB_Name = "Logo"
Sub InsertLogo(doc1 As Document, strLogo As String)
Dim c1 As Cell
Dim strHelp As String
Dim strLogoBookmarkCell As String
Dim strLogoBookmark As String

strLogoBookmark = "bmOwnLogo"
strLogoBookmarkCell = "bmOwnLogoCell"




Select Case UCase(strLogo)
    Case UCase("SiemensVAI")
        strHelp = "LogoSiemensVAI"
    Case UCase("Siemens")
        strHelp = "LogoSiemens"
    Case UCase("Morgan")
        strHelp = "LogoMorgan"
    Case Else
         strHelp = "LogoSiemensVAI"
End Select
        
If doc1.Bookmarks.Exists(strLogoBookmarkCell) Then
    Set c1 = ReturnFirstCellofRange(doc1, strLogoBookmarkCell)
    If doc1.Bookmarks.Exists(strLogoBookmark) Then
        doc1.Bookmarks(strLogoBookmark).Range.Delete
        Set r1 = c1.Range
        r1.SetRange r1.Start, r1.Start
        doc1.AttachedTemplate.AutoTextEntries(strHelp).Insert Where:=r1, RichText:=True
        Set r1 = c1.Range
        r1.SetRange r1.Start, r1.Start
        doc1.Bookmarks.Add strLogoBookmarkCell, r1
    Else
     ' Assume take first cell
        If doc1.Tables.Count > 0 Then
            Set c1 = doc1.Tables(1).Cell(1, 1)
            Set r1 = c1.Range
            r1.SetRange r1.Start, r1.Start
            doc1.AttachedTemplate.AutoTextEntries(strHelp).Insert Where:=r1, RichText:=True
            Set r1 = c1.Range
            r1.SetRange r1.Start, r1.Start
            doc1.Bookmarks.Add strLogoBookmarkCell, r1
        End If
    End If
Else
    If doc1.Bookmarks.Exists(strLogoBookmark) Then
        Set c1 = ReturnFirstCellofRange(doc1, strLogoBookmark)
        Set r1 = c1.Range
        r1.SetRange r1.Start, r1.Start
        doc1.Bookmarks(strLogoBookmark).Range.Delete
        doc1.AttachedTemplate.AutoTextEntries(strHelp).Insert Where:=r1, RichText:=True
        Set r1 = c1.Range
        r1.SetRange r1.Start, r1.Start
        doc1.Bookmarks.Add strLogoBookmarkCell, r1
    Else
     ' Assume take first cell
        If doc1.Tables.Count > 0 Then
            Set c1 = doc1.Tables(1).Cell(1, 1)
            Set r1 = c1.Range
            r1.SetRange r1.Start, r1.Start
            doc1.AttachedTemplate.AutoTextEntries(strHelp).Insert Where:=r1, RichText:=True
            Set r1 = c1.Range
            r1.SetRange r1.Start, r1.Start
            doc1.Bookmarks.Add strLogoBookmarkCell, r1
        End If
    End If
End If

        
End Sub
Attribute VB_Name = "Menu"
Sub ShowDialog()
Dim i As Integer
Dim j As Integer
    CompanyNamesArray
    setDocumentClassification
    setLevel
    setTOCLevel
    With dlgTechnicalSpecification
       For i = LBound(arrCompanyName) To UBound(arrCompanyName)
        .cbCompany.AddItem arrCompanyName(i)
       Next
       Select Case readCustomDocumentPropertyDirty(ActiveDocument, "MTLanguage")
            Case "German"
                j = 2
            Case "French"
                j = 3
            Case "Spanish"
                j = 4
            Case "Italian"
                j = 5
            Case "Russian"
                j = 6
            Case Else
                j = 1
        End Select
       For i = 1 To 3
        .cbDocumentClass.AddItem arrDocumentClassification(i, j)
       Next
       For i = LBound(arrStyles) To UBound(arrStyles)
        .cbStyle.AddItem arrStyles(i)
       Next
       For i = LBound(arrTOCLevels) To UBound(arrTOCLevels)
        .cbTOCLevels.AddItem arrTOCLevels(i)
       Next
       .cbTOCLevels.Value = "3"
       
       Read_Document ActiveDocument
        .cbDocumentClass.Value = readCustomDocumentPropertyDirty(ActiveDocument, "MT_TSP_DocumentClassification")
        .MultiPage1.Value = 0
        .Show
    End With
End Sub
Attribute VB_Name = "Page_Setup"
Option Explicit


Sub PageSetup2Letter(doc1 As Document)
Dim s1 As Section
Dim sngWidth As Single
Dim sngHeight As Single
Dim sngHelpWidth As Single
Dim sngHelpHeight As Single
sngWidth = 21.59
sngHeight = 27.94
For Each s1 In doc1.Sections
    With s1.PageSetup
        If .Orientation = wdOrientPortrait Then
            sngHelpWidth = sngWidth
            sngHelpHeight = sngHeight
        Else
            sngHelpWidth = sngHeight
            sngHelpHeight = sngWidth
        End If
        .PageWidth = CentimetersToPoints(sngHelpWidth)
        .PageHeight = CentimetersToPoints(sngHelpHeight)
    End With
Next
End Sub

Sub PageSetup2A4(doc1 As Document)
Dim s1 As Section
Dim sngWidth As Single
Dim sngHeight As Single
Dim sngHelpWidth As Single
Dim sngHelpHeight As Single
sngWidth = 21#
sngHeight = 29.7
For Each s1 In doc1.Sections
    With s1.PageSetup
        If .Orientation = wdOrientPortrait Then
            sngHelpWidth = sngWidth
            sngHelpHeight = sngHeight
        Else
            sngHelpWidth = sngHeight
            sngHelpHeight = sngWidth
        End If
        .PageWidth = CentimetersToPoints(sngHelpWidth)
        .PageHeight = CentimetersToPoints(sngHelpHeight)
    End With
Next

End Sub


Attribute VB_Name = "StyleReference"
Sub insertStyleReference(c1 As Cell, strStyleName As String, bolWithnumber As Boolean)
Dim r1 As Range
Set r1 = c1.Range
c1.Range.Text = ""
r1.SetRange c1.Range.Start, c1.Range.Start

If bolWithnumber Then
    r1.Fields.Add r1, wdFieldStyleRef, Chr(34) & strStyleName & Chr(34) & " \n", False
    r1.SetRange c1.Range.End - 1, c1.Range.End - 1
    r1.InsertAfter " "
End If
r1.SetRange c1.Range.End - 1, c1.Range.End - 1
r1.Fields.Add Range:=r1, Type:=wdFieldStyleRef, Text:=Chr(34) & strStyleName & Chr(34), PreserveFormatting:=False
c1.Range.Bold = False
Set r1 = Nothing


End Sub

Sub insertStyleReferenceinDocument(doc1 As Document, strStyleName As String, bolWithnumber As Boolean, intTextColumn As Integer)
Dim x As Section
Dim c1 As Cell
Dim i As Integer
Dim intRow As Integer
Dim intColumn As Integer
intRow = 0
intColumn = 0
Set c1 = ReturnFirstCellofRange(doc1, "bmHeaderHeadingReferenceCell")

If c1 Is Nothing Then
    If doc1.Sections(2).Headers(wdHeaderFooterPrimary).Range.Tables.Count > 0 Then
        Set c1 = doc1.Sections(2).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(5, intTextColumn)
    End If
Else
    intRow = c1.Range.Information(wdStartOfRangeRowNumber)
    intColumn = c1.Range.Information(wdStartOfRangeColumnNumber)
End If
If c1 Is Nothing Then
    Exit Sub
End If
    
insertStyleReference c1, strStyleName, bolWithnumber
For i = 3 To doc1.Sections.Count
    If doc1.Sections(i).Headers(wdHeaderFooterPrimary).LinkToPrevious = False Then
        If doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables.Count > 0 Then
            If intRow = 0 Then
                Set c1 = doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(5, intTextColumn)
            Else
                Set c1 = doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(intRow, intColumn)
            End If
            If Not (c1 Is Nothing) Then
                insertStyleReference c1, strStyleName, bolWithnumber
            End If
        End If
    End If
Next
End Sub

Sub deleteStyleReferenceinDocument(doc1 As Document, intTextColumn As Integer)
Dim x As Section
Dim c1 As Cell
Dim i As Integer
Dim intRow As Integer
Dim intColumn As Integer
intRow = 0
intColumn = 0

Set c1 = ReturnFirstCellofRange(doc1, "bmHeaderHeadingReferenceCell")
If c1 Is Nothing Then
    If doc1.Sections(2).Headers(wdHeaderFooterPrimary).Range.Tables.Count > 0 Then
        Set c1 = doc1.Sections(2).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(5, intTextColumn)
    End If
Else
    intRow = c1.Range.Information(wdStartOfRangeRowNumber)
    intColumn = c1.Range.Information(wdStartOfRangeColumnNumber)
End If
If c1 Is Nothing Then
    Exit Sub
End If

    c1.Range.Text = ""

For i = 3 To doc1.Sections.Count
    If doc1.Sections(i).Headers(wdHeaderFooterPrimary).LinkToPrevious = False Then
        If doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables.Count > 0 Then
            If intRow = 0 Then
                Set c1 = doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(5, intTextColumn)
            Else
                Set c1 = doc1.Sections(i).Headers(wdHeaderFooterPrimary).Range.Tables(1).Cell(intRow, intColumn)
            End If
            If Not (c1 Is Nothing) Then
                c1.Range.Text = ""
            End If
        End If
    End If
Next
End Sub
Attribute VB_Name = "Stylerenaming"
Sub renameStyles(strOldString, strnewString)
Dim myStyle As Style
On Error Resume Next
    For Each myStyle In ActiveDocument.Styles
    If InStr(1, myStyle.NameLocal, stroldstyle) > 0 Then
        myStyle.NameLocal = Replace(myStyle.NameLocal, strOldString, strnewString)
    End If
    If InStr(1, myStyle.BaseStyle, stroldstyle) > 0 Then
        myStyle.BaseStyle = Replace(myStyle.BaseStyle, strOldString, strnewString)
    End If
    If InStr(1, myStyle.LinkStyle, stroldstyle) > 0 Then
        myStyle.LinkStyle = Replace(myStyle.LinkStyle, strOldString, strnewString)
    End If
    If InStr(1, myStyle.NextParagraphStyle, stroldstyle) > 0 Then
        myStyle.NextParagraphStyle = Replace(myStyle.NextParagraphStyle, strOldString, strnewString)
    End If
    'myStyle.n
    Next
End Sub
'Sub test()
'renameStyles "_vai", "_MT"
'End Sub
Attribute VB_Name = "Styles"
Option Explicit
Global myStylesInUse()
Global myStylesAll()

Sub myStyles()
    If Application.Documents.Count = 0 Then Exit Sub
    If ActiveDocument.ProtectionType = wdAllowOnlyFormFields Then
        MsgBox "Please unprotect the document first of all."
        Exit Sub
    End If
    Call showStyles(ActiveDocument)
    frmStyles.Show
End Sub


Sub myChangeStyles(doc As Document, FromStyle() As Variant, ToStyle() As Variant, ChangeHeader As Boolean, ChangeFooter As Boolean, ChangeShapes As Boolean)
Dim i
    Application.ScreenUpdating = False
    For i = LBound(FromStyle) To UBound(FromStyle)
        Call ChangeStyles(doc, FromStyle(i), ToStyle(i), ChangeHeader, ChangeFooter, ChangeShapes)
    Next
End Sub

Sub showStyles(doc As Document)
Dim i
Dim j
    
    i = doc.Styles.Count
    ReDim myStylesAll(0 To i - 1)
    j = 0

    For i = 0 To doc.Styles.Count - 1
        If doc.Styles(i + 1).InUse Then
            ReDim Preserve myStylesInUse(0 To j)
            myStylesInUse(j) = doc.Styles(i + 1).NameLocal
            j = j + 1
        End If
        myStylesAll(i) = ActiveDocument.Styles(i + 1).NameLocal
        'myStyles(i, 1) = ActiveDocument.Styles(i + 1).InUse
        'myStyles(i, 2) = ActiveDocument.Styles(i + 1).Type
    Next
End Sub

Sub ChangeStyles(doc As Document, FromStyle, ToStyle, ChangeHeader As Boolean, ChangeFooter As Boolean, ChangeShapes As Boolean)
' selectsion.find
Dim sec As Section
Dim myHeader As HeaderFooter
Dim myFooter As HeaderFooter
Dim s As Shape
    With doc.Range.Find
        .ClearFormatting
        .Style = doc.Styles(FromStyle)
        .Replacement.ClearFormatting
        .Replacement.Style = doc.Styles(ToStyle)
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        .Execute Replace:=wdReplaceAll
    End With
    If ChangeShapes Then
        For Each s In ActiveDocument.Shapes
            If s.TextFrame.HasText Then
                With s.TextFrame.TextRange.Find
                    .ClearFormatting
                    .Style = doc.Styles(FromStyle)
                    .Replacement.ClearFormatting
                    .Replacement.Style = doc.Styles(ToStyle)
                    .Text = ""
                    .Replacement.Text = ""
                    .Forward = True
                    .Wrap = wdFindContinue
                    .Format = True
                    .MatchCase = False
                    .MatchWholeWord = False
                    .MatchWildcards = False
                    .MatchSoundsLike = False
                    .MatchAllWordForms = False
                    .Execute Replace:=wdReplaceAll
                End With
            End If
        Next s
    End If
                

    For Each sec In doc.Sections
        If ChangeHeader Then
            For Each myHeader In sec.Headers
                If myHeader.LinkToPrevious = False Then
                    With myHeader.Range.Find
                        .ClearFormatting
                        .Style = doc.Styles(FromStyle)
                        .Replacement.ClearFormatting
                        .Replacement.Style = doc.Styles(ToStyle)
                        .Text = ""
                        .Replacement.Text = ""
                        .Forward = True
                        .Wrap = wdFindContinue
                        .Format = True
                        .MatchCase = False
                        .MatchWholeWord = False
                        .MatchWildcards = False
                        .MatchSoundsLike = False
                        .MatchAllWordForms = False
                        .Execute Replace:=wdReplaceAll
                    End With
                    If ChangeShapes Then
                        For Each s In myHeader.Shapes
                            If s.TextFrame.HasText Then
                                With s.TextFrame.TextRange.Find
                                    .ClearFormatting
                                    .Style = doc.Styles(FromStyle)
                                    .Replacement.ClearFormatting
                                    .Replacement.Style = doc.Styles(ToStyle)
                                    .Text = ""
                                    .Replacement.Text = ""
                                    .Forward = True
                                    .Wrap = wdFindContinue
                                    .Format = True
                                    .MatchCase = False
                                    .MatchWholeWord = False
                                    .MatchWildcards = False
                                    .MatchSoundsLike = False
                                    .MatchAllWordForms = False
                                    .Execute Replace:=wdReplaceAll
                                End With
                            End If
                        Next s
                    End If
                End If
            Next myHeader
        End If
        If ChangeFooter Then
            For Each myFooter In sec.Footers
                If myFooter.LinkToPrevious = False Then
                    With myFooter.Range.Find
                        .ClearFormatting
                        .Style = doc.Styles(FromStyle)
                        .Replacement.ClearFormatting
                        .Replacement.Style = doc.Styles(ToStyle)
                        .Text = ""
                        .Replacement.Text = ""
                        .Forward = True
                        .Wrap = wdFindContinue
                        .Format = True
                        .MatchCase = False
                        .MatchWholeWord = False
                        .MatchWildcards = False
                        .MatchSoundsLike = False
                        .MatchAllWordForms = False
                        .Execute Replace:=wdReplaceAll
                    End With
                    If ChangeShapes Then
                        For Each s In myFooter.Shapes
                            If s.TextFrame.HasText Then
                                With s.TextFrame.TextRange.Find
                                    .ClearFormatting
                                    .Style = doc.Styles(FromStyle)
                                    .Replacement.ClearFormatting
                                    .Replacement.Style = doc.Styles(ToStyle)
                                    .Text = ""
                                    .Replacement.Text = ""
                                    .Forward = True
                                    .Wrap = wdFindContinue
                                    .Format = True
                                    .MatchCase = False
                                    .MatchWholeWord = False
                                    .MatchWildcards = False
                                    .MatchSoundsLike = False
                                    .MatchAllWordForms = False
                                    .Execute Replace:=wdReplaceAll
                                End With
                            End If
                        Next s
                    End If

                End If
            Next myFooter
        End If
    Next sec
End Sub


Sub DeleteAllStyles()
    Dim st As Style
    If MsgBox("Do you really want to delete all styles?", vbOKCancel + vbDefaultButton2 + vbCritical) = vbOK Then
        On Error Resume Next
        For Each st In ActiveDocument.Styles
            st.Delete
        Next
    End If
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private Sub Document_New()
    WriteCustomDocumentPropertyDirty ActiveDocument, "MT_TSP_Date", Format(Date, "MMMM YYYY")
    ShowDialog
End Sub
Attribute VB_Name = "VAIWatermark"
Function WatermarkValue(doc1 As Document) As String
Dim strHelp As String
'Dim S1 As Shape
    strHelp = ""
    On Error Resume Next
    For Each s1 In doc1.Sections(2).Headers(wdHeaderFooterPrimary).Shapes
        If s1.Name = "WatermarkSiemensVAI" Then
            strHelp = CleanString(Trim(s1.TextEffect.Text))
        End If
    Next
    WatermarkValue = strHelp
End Function

Sub WriteWatermark(doc1 As Document, strText As String)
Dim strHelp As String
Dim i As Integer

    If strText = "" Then
        strHelp = " "
    Else
        strHelp = strText
    End If

' Section 2
    For Each s1 In doc1.Sections(2).Headers(wdHeaderFooterPrimary).Shapes
        If s1.Name = "WatermarkSiemensVAI" Then
            s1.TextEffect.Text = strHelp
        End If
    Next
' Alle other sections
    For i = 3 To doc1.Sections.Count
        If doc1.Sections(i).Headers(wdHeaderFooterPrimary).LinkToPrevious = False Then
            For Each s1 In doc1.Sections(i).Headers(wdHeaderFooterPrimary).Shapes
                If s1.Name = "WatermarkSiemensVAI" Then
                    s1.TextEffect.Text = strHelp
                End If
            Next
        End If
    Next

End Sub
Attribute VB_Name = "dlgTechnicalSpecification"
Attribute VB_Base = "0{18CEF492-BB0E-4DE4-93F9-584FDEC7F693}{DEA019AB-A70B-4A58-9AC2-7C52AFC776E7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cbCancel_Click()
    Unload dlgTechnicalSpecification
End Sub

Private Sub cbCompany_Change()
    Dim strText As String
    Dim vbAnswer
    strText = ""
    Dim strLanguage2 As String
    Dim strCopyright As String
    strCopyright = ""
    i = IndexFromCompany(cbCompany.Value)
    For j = LBound(arrCompanyNameEN(i)) + 1 To UBound(arrCompanyNameEN(i)) - 1
        strText = strText & arrCompanyNameEN(i)(j) & vbCr
    Next
    strText = strText & arrCompanyNameEN(i)(UBound(arrCompanyNameEN(i)))
    tbLegalAddress = strText
    tbCompany = arrCompanyNameEN(i)(0)
    
' Sprache bestimmen.
    If obLanguageNoChanges Then
        strLanguage2 = readCustomDocumentPropertyDirty(ActiveDocument, "MTLanguage")
    ElseIf obLanguageEnglish Then
        strLanguage2 = "English"
    ElseIf obLanguageFrench Then
        strLanguage2 = "French"
    ElseIf obLanguageGerman Then
        strLanguage2 = "German"
    ElseIf obLanguageItalian Then
        strLanguage2 = "Italian"
    ElseIf obLanguageSpanish Then
        strLanguage2 = "Spanish"
    ElseIf obLanguageRussian Then
        strLanguage2 = "Russian"
    Else
        strLanguage2 = "English"
    End If
        
    
    strCopyright = "Copyright " & Chr(169) & " " & arrCompanyNameEN(i)(0) & " (" & Year(Date) & "). " & Language_AllRightsReserved(strLanguage2)
    tbCopyright = strCopyright
    
' Logo einstellen
    Select Case tbCompany
        Case "Morgan Construction Company"
            If obSizeNoChanges And obLogoNoChanges Then
                obSizeLetter = True
                obLogoMorgan = True
            ElseIf obSizeLetter And obLogoMorgan Then
                ' Is already OK
            Else
                vbAnswer = MsgBox("Current Logo and page size does not fit for the selected company." & vbCr & "Do you want to change to Morgan logo and US Letter?", vbYesNo)
                If vbAnswer = vbYes Then
                    obSizeLetter = True
                    obLogoMorgan = True
                End If
            End If
        Case "Siemens AG"
            If obSizeNoChanges And obLogoNoChanges Then
                obLogoSiemens = True
            ElseIf obLogoSiemens Then
                ' Is already OK
            Else
                vbAnswer = MsgBox("Current Logo and page size does not fit for the selected company." & vbCr & "Do you want to change to Siemens logo and A4?", vbYesNo)
                If vbAnswer = vbYes Then
                    obSizeA4 = True
                    obLogoSiemens = True
                End If
            End If
        Case Else
            If obSizeNoChanges And obLogoNoChanges Then
                obLogoSiemensVAI = True
            ElseIf obLogoSiemensVAI Then
                ' Is already OK
            Else
                vbAnswer = MsgBox("Current Logo and page size does not fit for the selected company." & vbCr & "Do you want to change to Siemens VAI logo and A4?", vbYesNo)
                If vbAnswer = vbYes Then
                    obSizeA4 = True
                    obLogoSiemensVAI = True
                End If
            End If

    End Select
    
    
End Sub

Private Sub cbOK_Click()
If obStyleUseHeading Then
    If cbStyle = "" Then
        MsgBox "Please select Style Level."
        Exit Sub
    End If
End If
On Error Resume Next
Fill_DocumentFromDialog ActiveDocument
Unload Me
End Sub



Private Sub obLanguageEnglish_Click()
Dim strLanguage2 As String
strLanguage2 = "English"
ChangeLanguage strLanguage2
End Sub

Private Sub obLanguageFrench_Click()
Dim strLanguage2 As String
strLanguage2 = "French"
ChangeLanguage strLanguage2
End Sub

Private Sub obLanguageGerman_Click()
Dim strLanguage2 As String
strLanguage2 = "German"
ChangeLanguage strLanguage2
End Sub

Private Sub obLanguageItalian_Click()
Dim strLanguage2 As String
strLanguage2 = "Italian"
ChangeLanguage strLanguage2
End Sub

Private Sub obLanguageRussian_Click()
Dim strLanguage2 As String
strLanguage2 = "Russian"
ChangeLanguage strLanguage2
End Sub

Private Sub obLanguageSpanish_Click()
Dim strLanguage2 As String
strLanguage2 = "Spanish"
ChangeLanguage strLanguage2
End Sub

Private Sub obWatermarkUse_Click()
    If (dlgTechnicalSpecification.obWatermarkUse.Value = True) Then
        dlgTechnicalSpecification.tbWatermark.Enabled = True
    Else
        dlgTechnicalSpecification.tbWatermark.Enabled = False
    End If
End Sub


Attribute VB_Name = "frmStyles"
Attribute VB_Base = "0{EF819378-F976-4923-869E-4828B6A1BC65}{0BD46128-C1F6-4EF4-B587-6A4363D40DFB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False






Option Explicit

Private Sub btCancel_Click()
    Unload frmStyles
End Sub

Private Sub btChangeTo_Click()
    
Dim arrHelpList1()
Dim arrHelpList2()
Dim intFound1 As Integer
Dim intFound2 As Integer
    Dim i As Integer
    Dim j As Integer
    Dim AnzahlItems As Integer
    intFound1 = 0
    intFound2 = 0
    
    If listStyles1.ListIndex <> -1 And listStyles2.ListIndex <> -1 Then
'' Check whether style are the same
'        If listStyles1.ListIndex = listStyles2.ListIndex Then
'            MsgBox "Nothing to replace."
'            Exit Sub
'        End If

' Check Multiselect
        For i = 0 To listStyles1.ListCount - 1
            If listStyles1.Selected(i) Then
                ReDim Preserve arrHelpList1(0 To intFound1)
                arrHelpList1(intFound1) = listStyles1.List(i)
                intFound1 = intFound1 + 1
            End If
        Next
        For i = 0 To listStyles2.ListCount - 1
            If listStyles2.Selected(i) Then
                ReDim Preserve arrHelpList2(0 To intFound2)
                arrHelpList2(intFound2) = listStyles2.List(i)
                intFound2 = intFound2 + 1
            End If
        Next
        
' check whether the same number of styles have been selected
        If intFound1 <> intFound2 Then
            MsgBox "Please select the same number of styles to replace."
            Exit Sub
        End If
        For j = 0 To intFound1 - 1
        ' Check whether style has already been selected
            AnzahlItems = listStylesChange.ListCount
            For i = 0 To AnzahlItems - 1
                If listStylesChange.List(i, 0) = arrHelpList1(j) Then
                    MsgBox "Style has already been selected."
                    Exit Sub
                End If
            Next
        ' Check whether styles are the same
            If arrHelpList1(j) = arrHelpList2(j) Then
                MsgBox "You cannot replace the styles with itself."
                Exit Sub
            End If
        Next
        For j = 0 To intFound1 - 1
            listStylesChange.AddItem arrHelpList1(j)
            listStylesChange.List(AnzahlItems, 1) = arrHelpList2(j)
            AnzahlItems = AnzahlItems + 1
        Next
    End If
End Sub

Private Sub btDelete_Click()
    Dim help
    help = listStylesChange.ListIndex
    If help <> -1 Then
        listStylesChange.RemoveItem (help)
    End If
    listStylesChange.ListIndex = -1

End Sub

Private Sub btOK_Click()
    Dim i
    Dim myFrom()
    Dim myTo()
    Dim i1
    Dim i2
    On Error Resume Next
    If listStylesChange.ListCount = 0 Then
        Unload frmStyles
        Exit Sub
    End If
    i1 = LBound(listStylesChange.List)
    i2 = UBound(listStylesChange.List)
    ReDim myFrom(i1 To i2)
    ReDim myTo(i1 To i2)
    
    For i = i1 To i2
        myFrom(i) = listStylesChange.List(i, 0)
        myTo(i) = listStylesChange.List(i, 1)
    Next
    
'    Debug.Print "From: " & IsArray(listStylesChange.List)
'    Debug.Print "To: " & IsArray(listStylesChange.List)
'
'    For i = LBound(listStylesChange.List) To UBound(listStylesChange.List)
'        Debug.Print listStylesChange.List(i)
'    Next
    
    If listStylesChange.ListCount > 0 Then
        Call myChangeStyles(ActiveDocument, myFrom, myTo, cbHeader, cbFooter, cbShapes)
       ' Call myChangeStyles(ActiveDocument, listStylesChange.List, listStylesTo.List)
    End If
    If listStylesChange.ListCount > 0 Then
        If cbDeleteOldStyles Then
            For i = LBound(myFrom) To UBound(myFrom)
                If InStr(1, myFrom(i), "Char") = 0 Then
                    ActiveDocument.Styles(myFrom(i)).Delete
                End If
            Next
        End If
    End If
    Unload frmStyles
End Sub

Sub ChangeOrder(OldRow, NewRow)
    Dim help1
    Dim help2
    help1 = listStylesChange.List(OldRow, 0)
    help2 = listStylesChange.List(OldRow, 1)
    listStylesChange.List(OldRow, 0) = listStylesChange.List(NewRow, 0)
    listStylesChange.List(OldRow, 1) = listStylesChange.List(NewRow, 1)
    listStylesChange.List(NewRow, 0) = help1
    listStylesChange.List(NewRow, 1) = help2
    listStylesChange.ListIndex = NewRow
End Sub

Private Sub btUp_Click()
    If listStylesChange.ListIndex = -1 Then Exit Sub
    Call ChangeOrder(listStylesChange.ListIndex, listStylesChange.ListIndex - 1)
End Sub
Private Sub btDown_Click()
    If listStylesChange.ListIndex = -1 Then Exit Sub
    Call ChangeOrder(listStylesChange.ListIndex, listStylesChange.ListIndex + 1)
End Sub
Private Sub listStylesChange_Click()
    Dim help As Integer
    Dim Aktuell As Integer
    help = listStylesChange.ListCount
    Aktuell = listStylesChange.ListIndex
' Alle enablen
    btDown.Enabled = True
    btUp.Enabled = True
    If Aktuell = help - 1 Then
        btDown.Enabled = False
    End If
    If Aktuell = 0 Then
        btUp.Enabled = False
    End If
End Sub

Private Sub obAllStyles_Click()
    Call InitializeStylelists(True)
End Sub

Private Sub obInUse_Click()
    Call InitializeStylelists(False)
End Sub

Private Sub UserForm_Initialize()
    obAllStyles = False
    obInUse = True
End Sub

Sub InitializeStylelists(ShowAll As Boolean)
    If ShowAll Then
        listStyles1.List = myStylesAll
    Else
        listStyles1.List = myStylesInUse
    End If
    listStyles2.List = myStylesAll
End Sub

' InQuest injected base64 decoded content
' BzYh}
' bzWl"p

INQUEST-PP=macro
